{
    "identifiers": [
        "path",
        "WANTED_LOCKFILE",
        "progressLogger",
        "Lockfile",
        "PackageSnapshot",
        "nameVerFromPkgSnapshot",
        "packageIdFromSnapshot",
        "pkgSnapshotToResolution",
        "logger",
        "IncludedDependencies",
        "packageIsInstallable",
        "Registries",
        "FetchPackageToStoreFunction",
        "PackageFilesResponse",
        "StoreController",
        "dp",
        "pathExists",
        "equals",
        "logger",
        "alias",
        "depPath",
        "importerId",
        "alias",
        "lockfile",
        "currentLockfile",
        "opts",
        "currentLockfile",
        "lockfile",
        "lockfile",
        "depPath",
        "opts",
        "depPath",
        "lockfile",
        "depPath",
        "nameVerFromPkgSnapshot",
        "depPath",
        "pkgSnapshot",
        "path",
        "opts",
        "dp",
        "depPath",
        "opts",
        "packageIdFromSnapshot",
        "depPath",
        "pkgSnapshot",
        "opts",
        "pkgName",
        "pkgVersion",
        "pkgSnapshot",
        "pkgSnapshot",
        "pkgSnapshot",
        "opts",
        "packageIsInstallable",
        "packageId",
        "pkg",
        "opts",
        "opts",
        "opts",
        "pkgSnapshot",
        "opts",
        "opts",
        "depPath",
        "path",
        "modules",
        "pkgName",
        "currentPackages",
        "depPath",
        "equals",
        "currentPackages",
        "depPath",
        "lockfile",
        "depPath",
        "equals",
        "currentPackages",
        "depPath",
        "lockfile",
        "depPath",
        "pathExists",
        "dir",
        "brokenModulesLogger",
        "dir",
        "pkgSnapshotToResolution",
        "depPath",
        "pkgSnapshot",
        "opts",
        "progressLogger",
        "opts",
        "fetchResponse",
        "opts",
        "opts",
        "pkgName",
        "pkgVersion",
        "packageId",
        "fetchResponse",
        "fetchResponse",
        "fetchResponse",
        "err",
        "pkgSnapshot",
        "err",
        "fetchResponse",
        "progressLogger",
        "opts",
        "fromStore",
        "graph",
        "dir",
        "fetchResponse",
        "fetchResponse",
        "fetchResponse",
        "pkgSnapshot",
        "pkgSnapshot",
        "pkgName",
        "pkgSnapshot",
        "pkgSnapshot",
        "pkgSnapshot",
        "pkgSnapshot",
        "pkgSnapshotByLocation",
        "dir",
        "pkgSnapshot",
        "opts",
        "opts",
        "lockfile",
        "opts",
        "opts",
        "opts",
        "opts",
        "opts",
        "opts",
        "dir",
        "graph",
        "pkgSnapshotByLocation",
        "dir",
        "pkgSnapshot",
        "opts",
        "pkgSnapshot",
        "pkgSnapshot",
        "pkgSnapshot",
        "graph",
        "dir",
        "getChildrenPaths",
        "ctx",
        "allDeps",
        "peerDeps",
        "importerId",
        "opts",
        "lockfile",
        "importerId",
        "opts",
        "projectSnapshot",
        "opts",
        "projectSnapshot",
        "opts",
        "projectSnapshot",
        "directDependenciesByImporterId",
        "importerId",
        "getChildrenPaths",
        "ctx",
        "rootDeps",
        "importerId",
        "ctx",
        "allDeps",
        "alias",
        "peerDeps",
        "importerId",
        "alias",
        "alias",
        "allDeps",
        "dp",
        "allDeps",
        "alias",
        "alias",
        "ctx",
        "childDepPath",
        "children",
        "alias",
        "path",
        "ctx",
        "importerId",
        "allDeps",
        "alias",
        "dp",
        "allDeps",
        "alias",
        "alias",
        "ctx",
        "childRelDepPath",
        "ctx",
        "childRelDepPath",
        "children",
        "alias",
        "ctx",
        "childRelDepPath",
        "childPkgSnapshot",
        "ctx",
        "childRelDepPath",
        "nameVerFromPkgSnapshot",
        "childRelDepPath",
        "childPkgSnapshot",
        "children",
        "alias",
        "path",
        "ctx",
        "dp",
        "childRelDepPath",
        "ctx",
        "pkgName",
        "allDeps",
        "alias",
        "children",
        "alias",
        "path",
        "ctx",
        "allDeps",
        "alias",
        "ctx",
        "childRelDepPath",
        "peerDeps",
        "peerDeps",
        "alias",
        "childRelDepPath",
        "WANTED_LOCKFILE",
        "children"
    ],
    "literals": [
        "'path'",
        "'@pnpm/constants'",
        "'@pnpm/core-loggers'",
        "'@pnpm/lockfile-file'",
        "'@pnpm/lockfile-utils'",
        "'@pnpm/logger'",
        "'@pnpm/modules-yaml'",
        "'@pnpm/package-is-installable'",
        "'@pnpm/types'",
        "'@pnpm/store-controller-types'",
        "'dependency-path'",
        "'path-exists'",
        "'ramda/src/equals'",
        "'_broken_node_modules'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'node_modules'",
        "'resolved'",
        "'found_in_store'",
        "'fetched'",
        "'.'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'node_modules'",
        "'file:'",
        "${childRelDepPath} not found in ${WANTED_LOCKFILE}"
    ],
    "variables": [
        "brokenModulesLogger",
        "currentPackages",
        "graph",
        "directDependenciesByImporterId",
        "pkgSnapshotByLocation",
        "pkgSnapshot",
        "pkgName",
        "pkgVersion",
        "modules",
        "packageId",
        "pkg",
        "dir",
        "resolution",
        "fetchResponse",
        "ctx",
        "pkgSnapshot",
        "allDeps",
        "peerDeps",
        "projectSnapshot",
        "rootDeps",
        "children",
        "childDepPath",
        "childRelDepPath",
        "childPkgSnapshot",
        "pkgName"
    ],
    "comments": [
        "this option is only needed for saving pendingBuild when running with --ignore-scripts flag",
        "TODO: optimize. This info can be already returned by pkgSnapshotToResolution()",
        "eslint-disable-line",
        "eslint-disable-line",
        "ignore"
    ],
    "docstrings": [],
    "functions": [
        "lockfileToDepGraph",
        "getChildrenPaths"
    ],
    "classes": []
}