{
    "identifiers": [
        "com",
        "alibaba",
        "csp",
        "sentinel",
        "dashboard",
        "controller",
        "v2",
        "com",
        "alibaba",
        "csp",
        "sentinel",
        "dashboard",
        "auth",
        "AuthAction",
        "com",
        "alibaba",
        "csp",
        "sentinel",
        "dashboard",
        "auth",
        "AuthService",
        "PrivilegeType",
        "com",
        "alibaba",
        "csp",
        "sentinel",
        "dashboard",
        "datasource",
        "entity",
        "rule",
        "DegradeRuleEntity",
        "com",
        "alibaba",
        "csp",
        "sentinel",
        "dashboard",
        "discovery",
        "MachineInfo",
        "com",
        "alibaba",
        "csp",
        "sentinel",
        "dashboard",
        "domain",
        "Result",
        "com",
        "alibaba",
        "csp",
        "sentinel",
        "dashboard",
        "repository",
        "rule",
        "RuleRepository",
        "com",
        "alibaba",
        "csp",
        "sentinel",
        "dashboard",
        "rule",
        "DynamicRuleProvider",
        "com",
        "alibaba",
        "csp",
        "sentinel",
        "dashboard",
        "rule",
        "DynamicRulePublisher",
        "com",
        "alibaba",
        "csp",
        "sentinel",
        "slots",
        "block",
        "RuleConstant",
        "com",
        "alibaba",
        "csp",
        "sentinel",
        "slots",
        "block",
        "degrade",
        "circuitbreaker",
        "CircuitBreakerStrategy",
        "com",
        "alibaba",
        "csp",
        "sentinel",
        "util",
        "StringUtil",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Qualifier",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "java",
        "util",
        "java",
        "util",
        "RestController",
        "RequestMapping",
        "logger",
        "LoggerFactory",
        "getLogger",
        "Autowired",
        "repository",
        "Autowired",
        "Qualifier",
        "ruleProvider",
        "Autowired",
        "Qualifier",
        "rulePublisher",
        "GetMapping",
        "AuthAction",
        "PrivilegeType",
        "READ_RULE",
        "app",
        "ip",
        "port",
        "StringUtil",
        "isEmpty",
        "app",
        "Result",
        "ofFail",
        "StringUtil",
        "isEmpty",
        "ip",
        "Result",
        "ofFail",
        "port",
        "Result",
        "ofFail",
        "rules",
        "ruleProvider",
        "getRules",
        "app",
        "rules",
        "repository",
        "saveAll",
        "rules",
        "Result",
        "ofSuccess",
        "rules",
        "throwable",
        "logger",
        "error",
        "throwable",
        "Result",
        "ofThrowable",
        "throwable",
        "PostMapping",
        "AuthAction",
        "PrivilegeType",
        "WRITE_RULE",
        "RequestBody",
        "entity",
        "checkResult",
        "checkEntityInternal",
        "entity",
        "checkResult",
        "checkResult",
        "date",
        "entity",
        "setGmtCreate",
        "date",
        "entity",
        "setGmtModified",
        "date",
        "entity",
        "repository",
        "save",
        "entity",
        "t",
        "logger",
        "error",
        "entity",
        "getApp",
        "entity",
        "getIp",
        "t",
        "Result",
        "ofThrowable",
        "t",
        "publishRules",
        "entity",
        "getApp",
        "entity",
        "getIp",
        "entity",
        "getPort",
        "logger",
        "warn",
        "entity",
        "getApp",
        "Result",
        "ofSuccess",
        "entity",
        "PutMapping",
        "AuthAction",
        "PrivilegeType",
        "WRITE_RULE",
        "PathVariable",
        "id",
        "RequestBody",
        "entity",
        "id",
        "id",
        "Result",
        "ofFail",
        "oldEntity",
        "repository",
        "findById",
        "id",
        "oldEntity",
        "Result",
        "ofFail",
        "id",
        "entity",
        "setApp",
        "oldEntity",
        "getApp",
        "entity",
        "setIp",
        "oldEntity",
        "getIp",
        "entity",
        "setPort",
        "oldEntity",
        "getPort",
        "entity",
        "setId",
        "oldEntity",
        "getId",
        "checkResult",
        "checkEntityInternal",
        "entity",
        "checkResult",
        "checkResult",
        "entity",
        "setGmtCreate",
        "oldEntity",
        "getGmtCreate",
        "entity",
        "setGmtModified",
        "entity",
        "repository",
        "save",
        "entity",
        "t",
        "logger",
        "error",
        "id",
        "entity",
        "t",
        "Result",
        "ofThrowable",
        "t",
        "publishRules",
        "entity",
        "getApp",
        "entity",
        "getIp",
        "entity",
        "getPort",
        "logger",
        "warn",
        "entity",
        "getApp",
        "Result",
        "ofSuccess",
        "entity",
        "DeleteMapping",
        "AuthAction",
        "PrivilegeType",
        "DELETE_RULE",
        "PathVariable",
        "id",
        "id",
        "Result",
        "ofFail",
        "oldEntity",
        "repository",
        "findById",
        "id",
        "oldEntity",
        "Result",
        "ofSuccess",
        "repository",
        "id",
        "throwable",
        "logger",
        "error",
        "id",
        "throwable",
        "Result",
        "ofThrowable",
        "throwable",
        "publishRules",
        "oldEntity",
        "getApp",
        "oldEntity",
        "getIp",
        "oldEntity",
        "getPort",
        "logger",
        "warn",
        "oldEntity",
        "getApp",
        "Result",
        "ofSuccess",
        "id",
        "app",
        "ip",
        "port",
        "rules",
        "repository",
        "findAllByMachine",
        "MachineInfo",
        "of",
        "app",
        "ip",
        "port",
        "rulePublisher",
        "publish",
        "app",
        "rules",
        "e",
        "e",
        "printStackTrace",
        "entity",
        "StringUtil",
        "isBlank",
        "entity",
        "getApp",
        "Result",
        "ofFail",
        "StringUtil",
        "isBlank",
        "entity",
        "getIp",
        "Result",
        "ofFail",
        "entity",
        "getPort",
        "entity",
        "getPort",
        "Result",
        "ofFail",
        "entity",
        "getPort",
        "StringUtil",
        "isBlank",
        "entity",
        "getLimitApp",
        "Result",
        "ofFail",
        "StringUtil",
        "isBlank",
        "entity",
        "getResource",
        "Result",
        "ofFail",
        "threshold",
        "entity",
        "getCount",
        "threshold",
        "threshold",
        "Result",
        "ofFail",
        "threshold",
        "recoveryTimeoutSec",
        "entity",
        "getTimeWindow",
        "recoveryTimeoutSec",
        "recoveryTimeoutSec",
        "Result",
        "ofFail",
        "strategy",
        "entity",
        "getGrade",
        "strategy",
        "Result",
        "ofFail",
        "strategy",
        "CircuitBreakerStrategy",
        "SLOW_REQUEST_RATIO",
        "getType",
        "strategy",
        "RuleConstant",
        "DEGRADE_GRADE_EXCEPTION_COUNT",
        "Result",
        "ofFail",
        "strategy",
        "entity",
        "getMinRequestAmount",
        "entity",
        "getMinRequestAmount",
        "Result",
        "ofFail",
        "entity",
        "getStatIntervalMs",
        "entity",
        "getStatIntervalMs",
        "Result",
        "ofFail",
        "strategy",
        "RuleConstant",
        "DEGRADE_GRADE_RT",
        "slowRatio",
        "entity",
        "getSlowRatioThreshold",
        "slowRatio",
        "Result",
        "ofFail",
        "slowRatio",
        "slowRatio",
        "Result",
        "ofFail",
        "strategy",
        "RuleConstant",
        "DEGRADE_GRADE_EXCEPTION_RATIO",
        "threshold",
        "Result",
        "ofFail"
    ],
    "literals": [
        "\"/v2/degrade\"",
        "\"degradeRuleNacosProvider\"",
        "\"degradeRuleNacosPublisher\"",
        "\"/rules.json\"",
        "\"app can't be null or empty\"",
        "\"ip can't be null or empty\"",
        "\"port can't be null\"",
        "\"queryApps error:\"",
        "\"/rule\"",
        "\"Failed to add new degrade rule, app={}, ip={}\"",
        "\"Publish degrade rules failed, app={}\"",
        "\"/rule/{id}\"",
        "\"id\"",
        "\"id can't be null or negative\"",
        "\"Degrade rule does not exist, id=\"",
        "\"Failed to save degrade rule, id={}, rule={}\"",
        "\"Publish degrade rules failed, app={}\"",
        "\"/rule/{id}\"",
        "\"id\"",
        "\"id can't be null\"",
        "\"Failed to delete degrade rule, id={}\"",
        "\"Publish degrade rules failed, app={}\"",
        "\"app can't be blank\"",
        "\"ip can't be null or empty\"",
        "\"invalid port: \"",
        "\"limitApp can't be null or empty\"",
        "\"resource can't be null or empty\"",
        "\"invalid threshold: \"",
        "\"recoveryTimeout should be positive\"",
        "\"circuit breaker strategy cannot be null\"",
        "\"Invalid circuit breaker strategy: \"",
        "\"Invalid minRequestAmount\"",
        "\"Invalid statInterval\"",
        "\"SlowRatioThreshold is required for slow request ratio strategy\"",
        "\"SlowRatioThreshold should be in range: [0.0, 1.0]\"",
        "\"Ratio threshold should be in range: [0.0, 1.0]\""
    ],
    "variables": [
        "repository",
        "ruleProvider",
        "rulePublisher"
    ],
    "comments": [],
    "docstrings": [
        "* Copyright 1999-2018 Alibaba Group Holding Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* @author colorful\n * @since 1.8.2"
    ],
    "functions": [
        "apiQueryMachineRules",
        "apiAddRule",
        "apiUpdateRule",
        "publishRules",
        "checkEntityInternal"
    ],
    "classes": [
        "DegradeControllerV2"
    ]
}