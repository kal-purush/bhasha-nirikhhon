{
    "identifiers": [
        "PyQt5",
        "QtWidgets",
        "QApplication",
        "QMainWindow",
        "vtk",
        "PyQt5",
        "QtCore",
        "QtGui",
        "QtWidgets",
        "vtk",
        "qt",
        "QVTKRenderWindowInteractor",
        "QVTKRenderWindowInteractor",
        "ui",
        "Ui_testvtk",
        "Ui_MainWindow",
        "open3d",
        "o3d",
        "os",
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "datetime",
        "math",
        "sys",
        "pyzed",
        "sl",
        "sl",
        "sys",
        "path",
        "append",
        "os",
        "path",
        "abspath",
        "pclpyd",
        "pcl",
        "pointcloud",
        "pointcloud",
        "pointcloud",
        "pointcloud",
        "pointcloud",
        "pointcloud",
        "pointcloud",
        "draw3d",
        "frontx",
        "fronty",
        "sidez",
        "sidey",
        "topx",
        "topz",
        "s",
        "frontx",
        "frontz",
        "sidey",
        "sidez",
        "topx",
        "topy",
        "s",
        "plt",
        "subplot",
        "plt",
        "scatter",
        "frontx",
        "frontz",
        "s",
        "s",
        "plt",
        "title",
        "plt",
        "subplot",
        "plt",
        "scatter",
        "sidey",
        "sidez",
        "s",
        "s",
        "plt",
        "title",
        "plt",
        "subplot",
        "plt",
        "scatter",
        "topx",
        "topy",
        "s",
        "s",
        "plt",
        "title",
        "plt",
        "show",
        "cloudfile",
        "file_dir",
        "os",
        "listdir",
        "file_dir",
        "sub_dir",
        "sub_dirs",
        "os",
        "listdir",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "file_dir",
        "sub_dir",
        "file",
        "files",
        "file",
        "cloudfiles",
        "append",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "file_dir",
        "sub_dir",
        "file",
        "np",
        "array",
        "pcl",
        "readPCLfile",
        "cloudfiles",
        "args",
        "i",
        "key",
        "colormap",
        "keys",
        "colormap",
        "key",
        "astype",
        "np",
        "float64",
        "show3d",
        "pointcloud",
        "np",
        "array",
        "pcl",
        "abstract_cube",
        "pointcloud",
        "face_args",
        "show3d",
        "pcd_face_points",
        "datetime",
        "datetime",
        "now",
        "file",
        "files",
        "file",
        "cloudfiles",
        "append",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "pcd_dir",
        "file",
        "np",
        "array",
        "astype",
        "np",
        "float64",
        "plyfile",
        "PlyData",
        "pcl",
        "readPCLfile",
        "cloudfiles",
        "args",
        "key",
        "cloudmap",
        "keys",
        "cloudmap",
        "key",
        "cloudmap",
        "key",
        "np",
        "array",
        "xyz",
        "astype",
        "np",
        "float64",
        "np",
        "array",
        "pcl",
        "abstract_cube",
        "xyz",
        "face_args",
        "o3d",
        "geometry",
        "PointCloud",
        "o3d",
        "utility",
        "Vector3dVector",
        "pointcloud",
        "o3d",
        "visualization",
        "draw_geometries",
        "pcd_face",
        "show3d",
        "pointcloud",
        "np",
        "array",
        "np",
        "array",
        "math",
        "cos",
        "theta",
        "math",
        "pi",
        "np",
        "array",
        "math",
        "cos",
        "theta",
        "math",
        "pi",
        "ori",
        "reshape",
        "ori",
        "shape",
        "ori",
        "math",
        "sin",
        "theta",
        "math",
        "pi",
        "np",
        "array",
        "ori",
        "ori",
        "ori",
        "ori",
        "ori",
        "ori",
        "vec",
        "rot",
        "os",
        "listdir",
        "data_dir",
        "floder",
        "floders",
        "shutil",
        "os",
        "listdir",
        "os",
        "path",
        "join",
        "data_dir",
        "floder",
        "file",
        "files",
        "shutil",
        "move",
        "os",
        "path",
        "join",
        "data_dir",
        "floder",
        "file",
        "data_dir",
        "QtWidgets",
        "QMainWindow",
        "Ui_MainWindow",
        "Mywindow",
        "setupUi",
        "setWindowTitle",
        "QtWidgets",
        "QFrame",
        "QVTKRenderWindowInteractor",
        "frame",
        "formLayout",
        "addWidget",
        "vtkWidget",
        "vtk",
        "vtkRenderer",
        "vtkWidget",
        "GetRenderWindow",
        "AddRenderer",
        "ren",
        "vtkWidget",
        "GetRenderWindow",
        "GetInteractor",
        "vtk",
        "vtkConeSource",
        "source",
        "SetCenter",
        "source",
        "SetRadius",
        "vtk",
        "vtkSphereSource",
        "source1",
        "SetCenter",
        "source1",
        "SetRadius",
        "vtk",
        "vtkPolyDataMapper",
        "mapper",
        "SetInputConnection",
        "source",
        "GetOutputPort",
        "vtk",
        "vtkPolyDataMapper",
        "mapper1",
        "SetInputConnection",
        "source1",
        "GetOutputPort",
        "vtk",
        "vtkActor",
        "actor",
        "SetMapper",
        "mapper",
        "vtk",
        "vtkActor",
        "actor1",
        "SetMapper",
        "mapper1",
        "ren",
        "AddActor",
        "actor",
        "ren",
        "AddActor",
        "actor1",
        "ren",
        "ResetCamera",
        "show",
        "iren",
        "Initialize",
        "hut3d"
    ],
    "literals": [
        "\".\"",
        "'front'",
        "'side'",
        "'top'",
        "\"/media/violin/32FAD888FAD84A2D/Users/VioLin/Documents/GitHub/kunbo_team/datasets/3D\"",
        "'txt'",
        "\"../datasets/3dvisionpcl/.XYZ\"",
        "\"4-4.xyz\"",
        "\"4-5.xyz\"",
        "\"4-6.xyz\"",
        "'xyz'",
        "\"C:/Users/VioLin/Documents/GitHub/kunbo_team/data/YCB_Video_Dataset/data_syn\"",
        "'test_gui'",
        "\"__main__\""
    ],
    "variables": [
        "fronty",
        "frontx",
        "sidey",
        "sidez",
        "topx",
        "topz",
        "sub_dirs",
        "cloudfiles",
        "files",
        "args",
        "colormap",
        "pointcloud",
        "face_args",
        "pcd_face_points",
        "starttime",
        "pcd_dir",
        "files",
        "cloudfiles",
        "args",
        "cloudmap",
        "xyz",
        "rgb",
        "xyz",
        "face_args",
        "pointcloud",
        "pcd_face",
        "pcd_face",
        "points",
        "ori",
        "vec",
        "theta",
        "rot",
        "data_dir",
        "floders",
        "files",
        "frame",
        "vtkWidget",
        "ren",
        "iren",
        "source",
        "source1",
        "mapper",
        "mapper1",
        "actor",
        "actor1"
    ],
    "comments": [
        "for file in os.listdir(\"./output\"):",
        "if '.pcd' in file:",
        "pcd = o3d.io.read_point_cloud(os.path.join(\"output\",file))",
        "print(file+\": \")",
        "print(pcd)",
        "o3d.visualization.draw_geometries([pcd])",
        "for i, pcd_file in enumerate(pcd_lists):",
        "if i in skiplist:",
        "continue",
        "pcd = o3d.io.read_point_cloud(os.path.join(pcd_dir, pcd_file))",
        "plt.figure()",
        "pointcloud = np.asarray(pcd.points)  # .astype(np.float64)",
        "pcd_face_points = pcl.abstract_cube(pointcloud, face_args)",
        "",
        "pcd_face.points = o3d.utility.Vector3dVector(pcd_face_points)",
        "o3d.visualization.draw_geometries([pcd_face])",
        "print(i)",
        "从点云中提取cube",
        "pcd_dir = \"../datasets/Linemod_preprocessed/models\"",
        "pcd_file = \"0001_1_1.pcd\"",
        "pcd_file = \"4-4.xyz\"",
        "2-5 4-5 4-6",
        "xyz = []",
        "with open(os.path.join(pcd_dir,pcd_file),'r') as f:",
        "content = f.read()",
        "contact = content.split('\\n')",
        "for line in contact:",
        "if line == '' or line.isdigit():",
        "continue",
        "else:",
        "atom = line.split()",
        "if atom[0] == atom[1] and atom[1] == atom[2] and atom[2] == '0':",
        "continue",
        "# xyzitem = {'symbol':atom[0], 'position':{\"x\":atom[1],\"y\":atom[2],\"z\":atom[3]}}",
        "xyzitem = np.array([atom[0],atom[1],atom[2]])",
        "xyz.append(xyzitem)",
        "pass",
        "files = os.listdir(pcd_dir)",
        "def convertply2numpy(src):",
        "res = np.zeros([src['vertex'].data['x'].shape[0],6])",
        "for i in range (src['vertex'].data['x'].shape[0]):",
        "res[i,0] = src['vertex'].data['x'][i]",
        "res[i,1] = src['vertex'].data['y'][i]",
        "res[i,2] = src['vertex'].data['z'][i]",
        "res[i,3] = src['vertex'].data['red'][i]",
        "res[i,4] = src['vertex'].data['green'][i]",
        "res[i,5] = src['vertex'].data['blue'][i]",
        "return res",
        "for cloudfile in cloudfiles:",
        "cloudmap = PlyData.read(cloudfile)",
        "cloudmap = convertply2numpy(cloudmap)",
        "pointcloud = xyz",
        "pcd_face.colors = o3d.utility.Vector3dVector(rgb)",
        "Create source",
        "Create a mapper",
        "Create an actor",
        "self.frame.setLayout(self.formLayout)",
        "self.setCentralWidget(self.frame)",
        "deal()",
        "my3dvision()",
        "app = QtWidgets.QApplication(sys.argv)",
        "window = Mywindow()",
        "window.show()",
        "sys.exit(app.exec_())"
    ],
    "docstrings": [],
    "functions": [
        "show3d",
        "draw3d",
        "gen_shuffled_dataset",
        "hut3d",
        "my3dvision",
        "rotatest",
        "deal"
    ],
    "classes": [
        "Mywindow"
    ]
}