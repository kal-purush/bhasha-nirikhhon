{
    "identifiers": [
        "pandas",
        "pd",
        "psycopg2",
        "snowflake",
        "connector",
        "dagster",
        "asset",
        "asset_check",
        "Definitions",
        "AssetCheckResult",
        "MetadataValue",
        "AssetCheckSeverity",
        "data_diff",
        "connect_to_table",
        "diff_tables",
        "random",
        "randint",
        "asset",
        "psycopg2",
        "connect",
        "host",
        "SOURCE_DATABASE_HOST",
        "port",
        "SOURCE_DATABASE_PORT",
        "dbname",
        "SOURCE_DATABASE_NAME",
        "user",
        "SOURCE_DATABASE_USER",
        "password",
        "SOURCE_DATABASE_PASSWORD",
        "conn",
        "cursor",
        "cursor",
        "execute",
        "cursor",
        "execute",
        "create_table_query",
        "i",
        "EVENT_COUNT",
        "cursor",
        "execute",
        "i",
        "i",
        "randint",
        "i",
        "noise_size",
        "cursor",
        "execute",
        "i",
        "i",
        "conn",
        "commit",
        "cursor",
        "close",
        "conn",
        "close",
        "asset",
        "deps",
        "source_events",
        "psycopg2",
        "connect",
        "host",
        "SOURCE_DATABASE_HOST",
        "port",
        "SOURCE_DATABASE_PORT",
        "dbname",
        "SOURCE_DATABASE_NAME",
        "user",
        "SOURCE_DATABASE_USER",
        "password",
        "SOURCE_DATABASE_PASSWORD",
        "pd",
        "read_sql",
        "src_conn",
        "src_conn",
        "close",
        "snowflake",
        "connector",
        "connect",
        "account",
        "DESTINATION_SNOWFLAKE_ACCOUNT",
        "user",
        "DESTINATION_SNOWFLAKE_USER",
        "password",
        "DESTINATION_SNOWFLAKE_PASSWORD",
        "warehouse",
        "DESTINATION_SNOWFLAKE_WAREHOUSE",
        "database",
        "DESTINATION_SNOWFLAKE_DATABASE",
        "schema",
        "DESTINATION_SNOWFLAKE_SCHEMA",
        "src_df",
        "to_sql",
        "sf_conn",
        "if_exists",
        "index",
        "sf_conn",
        "cursor",
        "randint",
        "i",
        "noise_size",
        "sf_cursor",
        "execute",
        "i",
        "i",
        "sf_conn",
        "commit",
        "sf_cursor",
        "close",
        "sf_conn",
        "close",
        "asset_check",
        "name",
        "asset",
        "replicated_events",
        "AssetCheckResult",
        "connect_to_table",
        "template",
        "SOURCE_DATABASE_HOST",
        "SOURCE_DATABASE_PORT",
        "SOURCE_DATABASE_NAME",
        "SOURCE_DATABASE_USER",
        "SOURCE_DATABASE_PASSWORD",
        "connect_to_table",
        "template",
        "DESTINATION_SNOWFLAKE_ACCOUNT",
        "DESTINATION_SNOWFLAKE_USER",
        "DESTINATION_SNOWFLAKE_PASSWORD",
        "DESTINATION_SNOWFLAKE_WAREHOUSE",
        "DESTINATION_SNOWFLAKE_DATABASE",
        "DESTINATION_SNOWFLAKE_SCHEMA",
        "pd",
        "DataFrame",
        "diff_tables",
        "source_events_table",
        "replicated_events_table",
        "key_columns",
        "extra_columns",
        "columns",
        "len",
        "results",
        "AssetCheckResult",
        "passed",
        "total_diffs_count",
        "severity",
        "AssetCheckSeverity",
        "ERROR",
        "metadata",
        "MetadataValue",
        "total_diffs_count",
        "MetadataValue",
        "len",
        "results",
        "results",
        "MetadataValue",
        "len",
        "results",
        "results",
        "MetadataValue",
        "md",
        "results",
        "head",
        "to_markdown",
        "Definitions",
        "assets",
        "source_events",
        "replicated_events",
        "asset_checks",
        "data_diff_check"
    ],
    "literals": [
        "\"localhost\"",
        "\"5432\"",
        "\"source_db\"",
        "\"postgres\"",
        "\"password\"",
        "\"BYA42734\"",
        "\"<user>\"",
        "\"<password>\"",
        "\"<warehouse>\"",
        "\"<database>\"",
        "\"<schema>\"",
        "\"DROP TABLE IF EXISTS events;\"",
        "f\"INSERT INTO events VALUES ({i}, current_date + {i});\"",
        "f\"INSERT INTO events VALUES (-{i}, current_date - {i});\"",
        "\"SELECT * FROM events WHERE id >= 0\"",
        "'events'",
        "'replace'",
        "f\"UPDATE events SET date = CURRENT_DATE() - INTERVAL '{i} days' WHERE id = {i};\"",
        "\"data_diff_check\"",
        "'postgres_driver'",
        "'psycopg2'",
        "'snowflake_driver'",
        "'snowflake.connector'",
        "\"host\"",
        "\"port\"",
        "\"dbname\"",
        "\"user\"",
        "\"password\"",
        "\"events\"",
        "\"account\"",
        "\"user\"",
        "\"password\"",
        "\"warehouse\"",
        "\"database\"",
        "\"schema\"",
        "\"events\"",
        "\"id\"",
        "\"date\"",
        "\"diff_type\"",
        "\"row_diffs\"",
        "\"total_diffs\"",
        "\"source_row_diffs\"",
        "\"diff_type\"",
        "\"-\"",
        "\"target_row_diffs\"",
        "\"diff_type\"",
        "\"+\"",
        "\"preview\""
    ],
    "variables": [
        "SOURCE_DATABASE_HOST",
        "SOURCE_DATABASE_PORT",
        "SOURCE_DATABASE_NAME",
        "SOURCE_DATABASE_USER",
        "SOURCE_DATABASE_PASSWORD",
        "DESTINATION_SNOWFLAKE_ACCOUNT",
        "DESTINATION_SNOWFLAKE_USER",
        "DESTINATION_SNOWFLAKE_PASSWORD",
        "DESTINATION_SNOWFLAKE_WAREHOUSE",
        "DESTINATION_SNOWFLAKE_DATABASE",
        "DESTINATION_SNOWFLAKE_SCHEMA",
        "EVENT_COUNT",
        "conn",
        "cursor",
        "create_table_query",
        "noise_size",
        "src_conn",
        "src_df",
        "sf_conn",
        "sf_cursor",
        "noise_size",
        "template",
        "source_events_table",
        "replicated_events_table",
        "results",
        "total_diffs_count",
        "defs"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\n        CREATE TABLE events (\n            id INTEGER,\n            date DATE\n        );\n    \"\"\""
    ],
    "functions": [
        "source_events",
        "replicated_events",
        "data_diff_check"
    ],
    "classes": []
}