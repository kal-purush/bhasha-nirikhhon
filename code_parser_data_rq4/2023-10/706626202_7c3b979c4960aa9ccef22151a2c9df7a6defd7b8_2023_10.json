{
    "identifiers": [
        "numpy",
        "np",
        "random",
        "matplotlib",
        "pyplot",
        "plt",
        "np",
        "zeros",
        "tot_asistentes",
        "tot_talleres",
        "asistente",
        "tot_asistentes",
        "taller",
        "tot_talleres",
        "random",
        "random",
        "prob_asistir",
        "np",
        "zeros",
        "tot_poblacion",
        "tot_asistentes",
        "tot_talleres",
        "poblacion",
        "shape",
        "individuo",
        "tot_poblacion",
        "asistente",
        "tot_asistentes",
        "taller",
        "tot_talleres",
        "random",
        "random",
        "prob_asistir",
        "random",
        "randrange",
        "tot_horas",
        "individuo",
        "np",
        "zeros",
        "tot_asistentes",
        "tot_talleres",
        "asistente",
        "tot_asistentes",
        "taller",
        "tot_talleres",
        "individuo",
        "asistente",
        "taller",
        "asistentes_talleres_ocupados",
        "asistente",
        "taller",
        "asistente",
        "tot_asistentes",
        "taller",
        "tot_talleres",
        "defectos",
        "abs",
        "asistentes_talleres",
        "asistente",
        "taller",
        "asistentes_talleres_ocupados",
        "asistente",
        "taller",
        "np",
        "zeros",
        "tot_horas",
        "tot_talleres",
        "asistente",
        "tot_asistentes",
        "taller",
        "tot_talleres",
        "individuo",
        "asistente",
        "taller",
        "individuo",
        "asistente",
        "taller",
        "horas_talleres_ocupados",
        "individuo",
        "asistente",
        "taller",
        "taller",
        "hora",
        "tot_horas",
        "taller",
        "tot_talleres",
        "horas_talleres_ocupados",
        "hora",
        "taller",
        "capacidad_max_sala",
        "defectos",
        "horas_talleres_ocupados",
        "hora",
        "taller",
        "capacidad_max_sala",
        "hora",
        "tot_horas",
        "taller",
        "tot_talleres",
        "horas_talleres_ocupados",
        "hora",
        "taller",
        "tot_salas_por_hora",
        "tot_salas_por_hora",
        "num_max_salas",
        "defectos",
        "tot_salas_por_hora",
        "num_max_salas",
        "defectos",
        "np",
        "zeros",
        "tot_poblacion",
        "individuo",
        "tot_poblacion",
        "individuo",
        "evaluar_individuo",
        "poblacion",
        "individuo",
        "evaluar_individuo",
        "poblacion",
        "individuo",
        "tot_asistentes",
        "tot_talleres",
        "individuo",
        "tot_poblacion",
        "valor_maximo",
        "ranking_poblacion",
        "individuo",
        "ranking_poblacion",
        "ranking_poblacion",
        "argsort",
        "individuo",
        "tot_poblacion",
        "individuo",
        "ranking_poblacion_ord",
        "individuo",
        "ranking_poblacion_ord",
        "individuo",
        "ranking_poblacion_ord",
        "r",
        "ranking",
        "np",
        "sum",
        "ranking",
        "axis",
        "individuo",
        "tot_poblacion",
        "individuo",
        "tot_poblacion",
        "total_valoraciones",
        "ranking",
        "individuo",
        "total_valoraciones",
        "r",
        "poblacion",
        "ranking",
        "individuo",
        "poblacion",
        "ranking",
        "individuo",
        "poblacion",
        "ranking",
        "individuo",
        "no_cumple_criterio_terminacion",
        "np",
        "zeros",
        "tot_poblacion",
        "tot_asistentes",
        "tot_talleres",
        "obtener_ranking",
        "generacion",
        "ranking",
        "tot_poblacion",
        "total_individos",
        "tot_poblacion",
        "get_individuo",
        "random",
        "random",
        "ranking",
        "get_individuo",
        "random",
        "random",
        "ranking",
        "np",
        "zeros",
        "tot_asistentes",
        "tot_talleres",
        "asistente",
        "tot_asistentes",
        "taller",
        "tot_talleres",
        "random",
        "random",
        "padre1",
        "asistente",
        "taller",
        "padre2",
        "asistente",
        "taller",
        "random",
        "random",
        "prob_mutacion",
        "random",
        "randrange",
        "tot_asistentes",
        "random",
        "randrange",
        "tot_talleres",
        "random",
        "randrange",
        "tot_horas",
        "asistente",
        "tot_asistentes",
        "taller",
        "tot_talleres",
        "hijo",
        "asistente",
        "taller",
        "total_individos",
        "poblacion_temp",
        "generacion",
        "obtener_ranking",
        "x",
        "append",
        "generacion",
        "y",
        "append",
        "ranking",
        "tot_poblacion",
        "generacion",
        "num_generaciones",
        "ranking",
        "tot_poblacion",
        "ranking",
        "tot_poblacion",
        "plt",
        "plot",
        "x",
        "y",
        "plt",
        "show"
    ],
    "literals": [
        "\"Población= nº indiv,nº asistentes,nºsalas =\"",
        "\"Gen: \"",
        "\", mínimo: \"",
        "\"Mínimo conseguido\""
    ],
    "variables": [
        "tot_asistentes",
        "tot_talleres",
        "tot_horas",
        "tot_poblacion",
        "capacidad_max_sala",
        "num_max_salas",
        "prob_asistir",
        "num_generaciones",
        "prob_mutacion",
        "asistentes_talleres",
        "asistentes_talleres",
        "asistente",
        "taller",
        "asistentes_talleres",
        "asistente",
        "taller",
        "poblacion",
        "poblacion",
        "individuo",
        "asistente",
        "taller",
        "defectos",
        "asistentes_talleres_ocupados",
        "asistentes_talleres_ocupados",
        "asistente",
        "taller",
        "defectos",
        "horas_talleres_ocupados",
        "horas_talleres_ocupados",
        "taller",
        "defectos",
        "tot_salas_por_hora",
        "tot_salas_por_hora",
        "defectos",
        "ranking_poblacion",
        "ranking_poblacion",
        "individuo",
        "ranking_poblacion",
        "individuo",
        "ranking_poblacion",
        "individuo",
        "valor_maximo",
        "ranking_poblacion",
        "individuo",
        "ranking_poblacion_ord",
        "ranking_poblacion_ord",
        "individuo",
        "total_valoraciones",
        "no_cumple_criterio_terminacion",
        "generacion",
        "x",
        "y",
        "poblacion_temp",
        "ranking",
        "total_individos",
        "padre1",
        "padre2",
        "hijo",
        "hijo",
        "asistente",
        "taller",
        "hijo",
        "asistente",
        "taller",
        "hijo",
        "poblacion_temp",
        "total_individos",
        "asistente",
        "taller",
        "total_individos",
        "poblacion",
        "generacion",
        "ranking",
        "no_cumple_criterio_terminacion"
    ],
    "comments": [
        "Grado en Ingeniería Informática en UDIMA",
        "Asignatura Progamación avanzada",
        "AA1 - Algoritmos genéticos",
        "Autor: Juan del Río Huertas",
        "--------------------------------------------",
        "dias x horas",
        "total individuos (soluciones).",
        "-------------------------------------------------------------------",
        "Datos entrada / restricciones: elección de los talleres que quiere cada asistente",
        "-------------------------------------------------------------------",
        "elegir aleatoriamente los datos",
        "Posibilidad de guardar e importar datos de entrada",
        "np.save('asistentes_talleres' , asistentes_talleres)",
        "entrada = np.load('asistentes_talleres.npy')",
        "-------------------------------------------------------------------",
        "Iniciar aleatoriamente la primera población",
        "-------------------------------------------------------------------",
        "Obtener población inicial aleatoria",
        "Funcion Evaluación",
        "crear tabla asistentes_talleres_ocupados",
        "evaluar según tabla asistentes_talleres_ocupados: diferencia de valores",
        "evaluar según tabla horas_talleres_ocupados: diferencia de valores respecto capacidad_max_sala",
        "evaluar según tabla horas_talleres_ocupados: diferencia de valores respecto num_max_salas",
        "Ranking de individuos según evaluación",
        "Evaluar población",
        "Ordenar según evaluación",
        "np.max(ranking_poblacion, axis=0)[1]",
        "Invertir valores",
        "Ordenar según el valor invertido",
        "Calcular valores acumulados",
        "-------------------------------------------------------------------",
        "Bucle principal algoritmo genético",
        "-------------------------------------------------------------------",
        "Vectores para generar gráfico",
        "Crear población temporal",
        "Seleccionar padres por ruleta",
        "cruce",
        "mutación",
        "Añadir hijos a población",
        "Finalización: mostrar resultado obtenido y gráfico de las generaciones"
    ],
    "docstrings": [],
    "functions": [
        "evaluar_individuo",
        "obtener_ranking",
        "get_individuo"
    ],
    "classes": []
}