{
    "identifiers": [
        "key",
        "left",
        "right",
        "item",
        "key",
        "item",
        "left",
        "right",
        "root",
        "root",
        "key",
        "root",
        "insertRec",
        "root",
        "key",
        "root",
        "key",
        "root",
        "root",
        "key",
        "root",
        "key",
        "root",
        "key",
        "root",
        "left",
        "insertRec",
        "root",
        "left",
        "key",
        "key",
        "root",
        "key",
        "root",
        "right",
        "insertRec",
        "root",
        "right",
        "key",
        "root",
        "root",
        "root",
        "inorderRec",
        "root",
        "left",
        "root",
        "key",
        "inorderRec",
        "root",
        "right",
        "arr",
        "i",
        "i",
        "arr",
        "length",
        "i",
        "insert",
        "arr",
        "i",
        "args",
        "tree",
        "arr",
        "tree",
        "treeins",
        "arr",
        "tree",
        "inorderRec",
        "tree",
        "root"
    ],
    "literals": [
        "\" \""
    ],
    "variables": [
        "key",
        "left",
        "right",
        "root"
    ],
    "comments": [
        "Class containing left and",
        "right child of current",
        "node and key value",
        "Root of BST",
        "Constructor",
        "This method mainly",
        "calls insertRec()",
        "A function to do",
        "inorder traversal of BST",
        "Driver Code"
    ],
    "docstrings": [
        "A recursive function to \n\tinsert a new key in BST",
        "If the tree is empty, \n\t\treturn a new node",
        "Otherwise, recur \n\t\tdown the tree",
        "return the root"
    ],
    "functions": [
        "Node",
        "GFG",
        "insert",
        "Node",
        "insertRec",
        "inorderRec",
        "treeins",
        "main"
    ],
    "classes": [
        "TreeSort",
        "Node"
    ]
}