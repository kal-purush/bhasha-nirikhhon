{
    "identifiers": [
        "os",
        "secrets",
        "shutil",
        "sqlite3",
        "subprocess",
        "sys",
        "tempfile",
        "base64",
        "b64encode",
        "concurrent",
        "futures",
        "ThreadPoolExecutor",
        "wait",
        "multiprocessing",
        "managers",
        "BaseManager",
        "pathlib",
        "Path",
        "queue",
        "random",
        "randrange",
        "time",
        "time",
        "typing",
        "Optional",
        "Tuple",
        "cast",
        "os",
        "getenv",
        "Path",
        "resolve",
        "Path",
        "resolve",
        "db1",
        "db2",
        "db2",
        "db1",
        "sqlite3",
        "connect",
        "db1",
        "con3",
        "execute",
        "db2",
        "con3",
        "execute",
        "row",
        "con3",
        "execute",
        "row",
        "row",
        "con3",
        "execute",
        "combine",
        "con3",
        "commit",
        "con3",
        "execute",
        "con3",
        "close",
        "target",
        "Path",
        "Path",
        "target",
        "parent",
        "target",
        "name",
        "target_idb",
        "exists",
        "subprocess",
        "run",
        "IDA",
        "target",
        "env",
        "os",
        "getenv",
        "os",
        "getenv",
        "target_idb",
        "args",
        "Tuple",
        "Path",
        "Path",
        "args",
        "tmpdir",
        "source_idb",
        "name",
        "len",
        "worker_id",
        "shutil",
        "copyfile",
        "source_idb",
        "target",
        "os",
        "system",
        "DIAPHORA_DIR",
        "DIAPHORA",
        "worker_id",
        "nbr_of_workers",
        "port",
        "b64encode",
        "authkey",
        "decode",
        "target",
        "target",
        "unlink",
        "worker_id",
        "worker_id",
        "BaseManager",
        "Tuple",
        "QueueManager",
        "Tuple",
        "QueueManager",
        "register",
        "callable",
        "job_queue",
        "QueueManager",
        "register",
        "callable",
        "report_queue",
        "Optional",
        "QueueManager",
        "randrange",
        "secrets",
        "token_bytes",
        "m",
        "QueueManager",
        "address",
        "port",
        "authkey",
        "authkey",
        "m",
        "start",
        "randrange",
        "m",
        "port",
        "authkey",
        "qm",
        "QueueManager",
        "number_of_workers",
        "number_of_jobs",
        "Tuple",
        "Path",
        "number_of_workers",
        "tmpdir",
        "target",
        "name",
        "i",
        "i",
        "number_of_workers",
        "i",
        "i",
        "number_of_workers",
        "Optional",
        "remaining_workers",
        "cast",
        "Tuple",
        "qm",
        "get_report_queue",
        "get",
        "report",
        "report",
        "worker_id",
        "main_worker",
        "worker_id",
        "merge_databases",
        "db_files",
        "main_worker",
        "db_files",
        "worker_id",
        "remaining_workers",
        "discard",
        "worker_id",
        "main_worker",
        "Path",
        "db_files",
        "main_worker",
        "main_worker",
        "time",
        "len",
        "sys",
        "argv",
        "sys",
        "argv",
        "sys",
        "exit",
        "Path",
        "sys",
        "argv",
        "resolve",
        "get_idb",
        "target",
        "time",
        "start",
        "os",
        "cpu_count",
        "len",
        "sys",
        "argv",
        "sys",
        "argv",
        "number_of_workers",
        "len",
        "sys",
        "argv",
        "sys",
        "argv",
        "number_of_jobs",
        "number_of_workers",
        "start_queues",
        "number_of_jobs",
        "number_of_workers",
        "tempfile",
        "TemporaryDirectory",
        "dir",
        "target",
        "parent",
        "tmpdirname",
        "Path",
        "tmpdirname",
        "tmpdir",
        "ThreadPoolExecutor",
        "max_workers",
        "number_of_workers",
        "pool",
        "pool",
        "submit",
        "start_exporter",
        "tmpdir",
        "target_idb",
        "i",
        "number_of_workers",
        "port",
        "authkey",
        "i",
        "number_of_workers",
        "i",
        "number_of_jobs",
        "i",
        "number_of_jobs",
        "queue_manager",
        "get_job_queue",
        "put",
        "i",
        "number_of_jobs",
        "i",
        "number_of_workers",
        "i",
        "queue_manager",
        "get_job_queue",
        "put",
        "number_of_jobs",
        "merge_while_exporting",
        "queue_manager",
        "number_of_workers",
        "number_of_jobs",
        "time",
        "start",
        "wait",
        "futures",
        "merged_database",
        "parent",
        "merged_database",
        "name",
        "touch",
        "start_exporter",
        "tmpdir",
        "target_idb",
        "last_worker",
        "last_worker",
        "port",
        "authkey",
        "time",
        "start",
        "merged_database",
        "rename",
        "target",
        "parent",
        "target",
        "name",
        "queue_manager",
        "shutdown"
    ],
    "literals": [
        "\"IDADIR\"",
        "\"\"",
        "\"idat64\"",
        "\"diaphora.py\"",
        "\".\"",
        "f\"Merging {db2} into {db1}\"",
        "\"ATTACH '\"",
        "\"' as dba\"",
        "\"BEGIN\"",
        "\"SELECT * FROM dba.sqlite_master WHERE type='table'\"",
        "\"INSERT OR IGNORE INTO \"",
        "\" SELECT * FROM dba.\"",
        "\"detach database dba\"",
        "\".i64\"",
        "\"-Llog.txt\"",
        "\"-B\"",
        "\"TVHEADLESS\"",
        "\"1\"",
        "\"HOME\"",
        "\"HOME\"",
        "\"\"",
        "\"IDAUSR\"",
        "\"IDAUSR\"",
        "\"\"",
        "\".i64\"",
        "\".i64\"",
        "\"TVHEADLESS=1 \"",
        "f'PYTHON_PATH=$PYTHON_PATH:\"{DIAPHORA_DIR}\" '",
        "\"~/idapro-8.2/./idat64 -a -A \"",
        "f'-S\"{DIAPHORA} {worker_id} {nbr_of_workers} {port} {b64encode(authkey).decode(\"ASCII\")}\" '",
        "\"ASCII\"",
        "f\"-Llog.txt \"",
        "f\"{target}\"",
        "f\"Worker {worker_id} done\"",
        "\"get_job_queue\"",
        "\"get_report_queue\"",
        "\"localhost\"",
        "f\"{target.name}{i}.sqlite\"",
        "f\"Job {report} done by worker {worker_id}\"",
        "\"__main__\"",
        "f\"Usage: {sys.argv[0]} <file> [<nbr workers>] [<nbr jobs>]\"",
        "f\"idb retrieved in {time() - start:.3f} seconds\"",
        "f\"Starting {number_of_jobs} jobs on {number_of_workers} workers\"",
        "\"Working in \"",
        "f\"Sending job {i} of {number_of_jobs}\"",
        "f\"Sending killswitch {i}\"",
        "f\"Functions exported in {time() - start:.3f} seconds\"",
        "\"Finalizing database...\"",
        "\"-crash\"",
        "f\"Database exported in {time() - start:.3f} seconds\"",
        "f\"{target.name}.sqlite\""
    ],
    "variables": [
        "IDA",
        "DIAPHORA",
        "DIAPHORA_DIR",
        "con3",
        "combine",
        "target_idb",
        "tmpdir",
        "source_idb",
        "worker_id",
        "nbr_of_workers",
        "port",
        "authkey",
        "target",
        "job_queue",
        "report_queue",
        "m",
        "port",
        "authkey",
        "m",
        "m",
        "port",
        "db_files",
        "remaining_workers",
        "main_worker",
        "worker_id",
        "report",
        "main_worker",
        "start",
        "target",
        "target_idb",
        "number_of_workers",
        "number_of_workers",
        "number_of_jobs",
        "number_of_jobs",
        "queue_manager",
        "port",
        "authkey",
        "tmpdir",
        "futures",
        "merged_database",
        "last_worker"
    ],
    "comments": [
        "!/usr/bin/python3",
        "",
        "Database merge taken from",
        "https://stackoverflow.com/a/68526717",
        "",
        "merge as soon as exports are done and return path to merged db",
        "merge into last worker db",
        "send jobs",
        "send kill switches",
        "Start merging results asap",
        "Run diaphora one more time to get global info"
    ],
    "docstrings": [],
    "functions": [
        "merge_databases",
        "get_idb",
        "start_exporter",
        "start_queues",
        "merge_while_exporting"
    ],
    "classes": [
        "QueueManager"
    ]
}