{
    "identifiers": [
        "Proto",
        "Promises",
        "Async",
        "CompilerServices",
        "Collections",
        "Generic",
        "Diagnostics",
        "Runtime",
        "CompilerServices",
        "Threading",
        "Proto",
        "Promises",
        "Linq",
        "NET47_OR_GREATER",
        "NETSTANDARD2_1_OR_GREATER",
        "NETCOREAPP",
        "UNITY_2021_2_OR_NEWER",
        "PROTO_PROMISE_DEVELOPER_MODE",
        "DebuggerNonUserCode",
        "StackTraceHidden",
        "AsyncEnumerable",
        "T",
        "T",
        "Func",
        "AsyncStreamWriter",
        "T",
        "CancelationToken",
        "AsyncEnumerableMethod",
        "asyncIterator",
        "Internal",
        "AsyncEnumerableImpl",
        "T",
        "Internal",
        "AsyncIterator",
        "T",
        "GetOrCreate",
        "Internal",
        "AsyncIterator",
        "T",
        "asyncIterator",
        "AsyncEnumerable",
        "T",
        "enumerable",
        "AsyncEnumerable",
        "T",
        "T",
        "TCapture",
        "TCapture",
        "captureValue",
        "Func",
        "TCapture",
        "AsyncStreamWriter",
        "T",
        "CancelationToken",
        "AsyncEnumerableMethod",
        "asyncIterator",
        "Internal",
        "AsyncEnumerableImpl",
        "T",
        "Internal",
        "AsyncIterator",
        "T",
        "TCapture",
        "GetOrCreate",
        "Internal",
        "AsyncIterator",
        "T",
        "TCapture",
        "captureValue",
        "asyncIterator",
        "AsyncEnumerable",
        "T",
        "enumerable",
        "PROTO_PROMISE_DEVELOPER_MODE",
        "DebuggerNonUserCode",
        "StackTraceHidden",
        "AsyncEnumerable",
        "T",
        "IAsyncEnumerable",
        "T",
        "Internal",
        "AsyncEnumerableBase",
        "T",
        "target",
        "target",
        "EnumerableId",
        "_id",
        "MethodImpl",
        "Internal",
        "InlineOption",
        "Internal",
        "AsyncEnumerableBase",
        "T",
        "target",
        "_target",
        "target",
        "_id",
        "_target",
        "EnumerableId",
        "MethodImpl",
        "Internal",
        "InlineOption",
        "AsyncEnumerator",
        "T",
        "CancelationToken",
        "cancelationToken",
        "_target",
        "GetAsyncEnumerator",
        "_id",
        "cancelationToken",
        "MethodImpl",
        "Internal",
        "InlineOption",
        "AsyncEnumerator",
        "T",
        "GetAsyncEnumerator",
        "CancelationToken",
        "IAsyncEnumerator",
        "T",
        "IAsyncEnumerable",
        "T",
        "CancellationToken",
        "cancellationToken",
        "GetAsyncEnumerator",
        "cancellationToken",
        "ToCancelationToken",
        "PROTO_PROMISE_DEVELOPER_MODE",
        "DebuggerNonUserCode",
        "StackTraceHidden",
        "AsyncEnumerator",
        "T",
        "IAsyncEnumerator",
        "T",
        "Internal",
        "AsyncEnumerableBase",
        "T",
        "MethodImpl",
        "Internal",
        "InlineOption",
        "Internal",
        "AsyncEnumerableBase",
        "T",
        "target",
        "id",
        "_target",
        "target",
        "_id",
        "id",
        "MethodImpl",
        "Internal",
        "InlineOption",
        "_target",
        "GetCurrent",
        "_id",
        "_target",
        "MoveNextAsync",
        "_id",
        "_target",
        "DisposeAsync",
        "_id",
        "Threading",
        "Tasks",
        "ValueTask",
        "IAsyncEnumerator",
        "T",
        "MoveNextAsync",
        "Threading",
        "Tasks",
        "ValueTask",
        "IAsyncDisposable",
        "DisposeAsync"
    ],
    "literals": [],
    "variables": [
        "enumerable",
        "enumerable",
        "_target",
        "_id",
        "IsValid",
        "target",
        "_target",
        "_target",
        "_id",
        "T",
        "Current"
    ],
    "comments": [
        "Provides helper functions to create <see cref=\"AsyncEnumerable{T}\"/> async streams.",
        "</summary>",
        "We use AsyncEnumerableMethod instead of Promise so it can specially handle early-exits (`break` keyword).",
        "Create a new <see cref=\"AsyncEnumerable{T}\"/> async stream from the specified <paramref name=\"asyncIterator\"/> function.",
        "</summary>",
        "Create a new <see cref=\"AsyncEnumerable{T}\"/> async stream from the specified <paramref name=\"captureValue\"/> and <paramref name=\"asyncIterator\"/> function.",
        "</summary>",
        "Exposes an enumerator that provides asynchronous iteration over values of a specified type.",
        "This type may only be consumed once.",
        "</summary>",
        "Gets whether this instance is valid for enumeration. Once enumeration has begun, this will return false.",
        "</summary>",
        "Returns an enumerator that iterates asynchronously through the collection.",
        "</summary>",
        "Returns an enumerator that iterates asynchronously through the collection.",
        "</summary>",
        "TODO: add ConfigureAwait and WithCancellation methods to avoid IAsyncEnumerable extensions.",
        "Supports a simple asynchronous iteration over a generic collection.",
        "This type may only be consumed once.",
        "</summary>",
        "Gets the element in the collection at the current position of the enumerator.",
        "</summary>",
        "Advances the enumerator asynchronously to the next element of the collection.",
        "</summary>",
        "Asynchronously releases resources used by this enumerator.",
        "</summary>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Create",
        "Create",
        "AsyncEnumerable",
        "GetAsyncEnumerator",
        "GetAsyncEnumerator",
        "GetAsyncEnumerator",
        "AsyncEnumerator",
        "MoveNextAsync",
        "DisposeAsync",
        "MoveNextAsync",
        "DisposeAsync"
    ],
    "classes": [
        "AsyncEnumerable"
    ]
}