{
    "identifiers": [
        "flask",
        "Flask",
        "request",
        "render_template",
        "redirect",
        "url_for",
        "firebase_admin",
        "firebase_admin",
        "credentials",
        "firebase_admin",
        "firestore",
        "base64",
        "os",
        "io",
        "PIL",
        "Image",
        "hashlib",
        "smtplib",
        "email",
        "mime",
        "text",
        "MIMEText",
        "email",
        "mime",
        "multipart",
        "MIMEMultipart",
        "Flask",
        "app",
        "config",
        "os",
        "path",
        "exists",
        "app",
        "config",
        "os",
        "makedirs",
        "app",
        "config",
        "credentials",
        "Certificate",
        "firebase_admin",
        "initialize_app",
        "cred",
        "firestore",
        "client",
        "image_path",
        "Image",
        "open",
        "image_path",
        "img",
        "img",
        "thumbnail",
        "io",
        "BytesIO",
        "img",
        "save",
        "buffer",
        "format",
        "buffer",
        "getvalue",
        "app",
        "route",
        "methods",
        "render_template",
        "app",
        "route",
        "methods",
        "render_template",
        "app",
        "route",
        "methods",
        "CurrentAccount",
        "sender_email",
        "sender_password",
        "CurrentAccount",
        "redirect",
        "url_for",
        "request",
        "form",
        "get",
        "request",
        "form",
        "get",
        "request",
        "form",
        "get",
        "request",
        "form",
        "get",
        "request",
        "form",
        "get",
        "request",
        "form",
        "get",
        "request",
        "form",
        "get",
        "request",
        "form",
        "get",
        "seller_id",
        "product_name",
        "encode",
        "hashlib",
        "sha256",
        "input_data",
        "hash_object",
        "hexdigest",
        "hex_digest",
        "request",
        "files",
        "request",
        "files",
        "image_file",
        "filename",
        "os",
        "path",
        "join",
        "app",
        "config",
        "image_file",
        "filename",
        "image_file",
        "save",
        "image_path",
        "compress_image",
        "image_path",
        "base64",
        "b64encode",
        "compressed_image",
        "decode",
        "db",
        "collection",
        "product_ref",
        "seller_id",
        "product_id",
        "product_name",
        "image_binary",
        "price",
        "product_description",
        "category_type",
        "year",
        "seller_name",
        "seller_email",
        "os",
        "remove",
        "image_path",
        "CurrentAccount",
        "smtplib",
        "SMTP",
        "server",
        "starttls",
        "server",
        "login",
        "sender_email",
        "sender_password",
        "recipient_email",
        "MIMEMultipart",
        "sender_email",
        "recipient_email",
        "subject",
        "msg",
        "attach",
        "MIMEText",
        "message_text",
        "server",
        "sendmail",
        "sender_email",
        "recipient_email",
        "msg",
        "as_string",
        "server",
        "quit",
        "redirect",
        "url_for",
        "app",
        "route",
        "methods",
        "db",
        "collection",
        "stream",
        "product",
        "products",
        "product",
        "to_dict",
        "product_data",
        "append",
        "product_dict",
        "render_template",
        "product_data",
        "product_data",
        "app",
        "route",
        "product_id",
        "product_id",
        "db",
        "collection",
        "where",
        "a",
        "get",
        "e",
        "e",
        "doc",
        "product_ref",
        "doc",
        "to_dict",
        "render_template",
        "product_data",
        "product_data",
        "app",
        "route",
        "methods",
        "product_id",
        "CurrentAccount",
        "sender_email",
        "sender_password",
        "len",
        "CurrentAccount",
        "redirect",
        "url_for",
        "product_id",
        "db",
        "collection",
        "where",
        "a",
        "get",
        "db",
        "collection",
        "where",
        "CurrentAccount",
        "get",
        "len",
        "product_ref",
        "product_ref",
        "to_dict",
        "product_ref2",
        "to_dict",
        "CurrentAccount",
        "db",
        "collection",
        "add",
        "product_data",
        "smtplib",
        "SMTP",
        "server",
        "starttls",
        "server",
        "login",
        "sender_email",
        "sender_password",
        "CurrentAccount",
        "product_data",
        "product_data",
        "product_data",
        "product_data",
        "product_data",
        "product_data",
        "product_data2",
        "CurrentAccount",
        "MIMEMultipart",
        "MIMEMultipart",
        "sender_email",
        "CurrentAccount",
        "subject",
        "msg",
        "attach",
        "MIMEText",
        "message_text",
        "server",
        "sendmail",
        "sender_email",
        "CurrentAccount",
        "msg",
        "as_string",
        "sender_email",
        "product_data",
        "subject2",
        "msg_buyer",
        "attach",
        "MIMEText",
        "message_text2",
        "server",
        "sendmail",
        "sender_email",
        "product_data",
        "msg_buyer",
        "as_string",
        "server",
        "quit",
        "redirect",
        "url_for",
        "e",
        "e",
        "app",
        "route",
        "methods",
        "product_id",
        "CurrentAccount",
        "product_id",
        "db",
        "collection",
        "where",
        "a",
        "get",
        "len",
        "product_ref",
        "product_ref",
        "to_dict",
        "CurrentAccount",
        "db",
        "collection",
        "add",
        "product_data",
        "render_template",
        "e",
        "e",
        "app",
        "route",
        "CurrentAccount",
        "CurrentAccount",
        "render_template",
        "db",
        "collection",
        "where",
        "CurrentAccount",
        "stream",
        "doc",
        "order_ref",
        "doc",
        "to_dict",
        "orders",
        "append",
        "order_data",
        "render_template",
        "orders",
        "orders",
        "e",
        "e",
        "app",
        "route",
        "CurrentAccount",
        "db",
        "collection",
        "where",
        "CurrentAccount",
        "stream",
        "doc",
        "order_ref",
        "doc",
        "to_dict",
        "orders",
        "append",
        "order_data",
        "render_template",
        "orders",
        "orders",
        "e",
        "e",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "methods",
        "order_id",
        "db",
        "collection",
        "where",
        "order_id",
        "stream",
        "doc",
        "order_ref",
        "doc",
        "reference",
        "redirect",
        "url_for",
        "e",
        "e",
        "app",
        "route",
        "methods",
        "order_id",
        "db",
        "collection",
        "where",
        "order_id",
        "stream",
        "doc",
        "order_ref",
        "doc",
        "reference",
        "redirect",
        "url_for",
        "e",
        "e",
        "app",
        "route",
        "methods",
        "db",
        "collection",
        "stream",
        "product",
        "products",
        "product",
        "to_dict",
        "product_data",
        "append",
        "product_dict",
        "render_template",
        "product_data",
        "product_data",
        "app",
        "route",
        "methods",
        "request",
        "form",
        "get",
        "strip",
        "lower",
        "db",
        "collection",
        "stream",
        "product",
        "products",
        "product",
        "to_dict",
        "search_query",
        "product_dict",
        "lower",
        "search_query",
        "product_dict",
        "lower",
        "product_data",
        "append",
        "product_dict",
        "render_template",
        "product_data",
        "product_data",
        "app",
        "route",
        "category_name",
        "db",
        "collection",
        "stream",
        "product",
        "products",
        "product",
        "to_dict",
        "category_name",
        "product_dict",
        "lower",
        "product_data",
        "append",
        "product_dict",
        "render_template",
        "product_data",
        "product_data",
        "app",
        "route",
        "methods",
        "render_template",
        "app",
        "route",
        "methods",
        "render_template",
        "app",
        "route",
        "methods",
        "sender_email",
        "sender_password",
        "request",
        "method",
        "request",
        "form",
        "get",
        "request",
        "form",
        "get",
        "db",
        "collection",
        "where",
        "email",
        "stream",
        "len",
        "user_ref",
        "render_template",
        "hashlib",
        "sha256",
        "email",
        "encode",
        "digest",
        "sha256_hash",
        "from_bytes",
        "first_4_bytes",
        "byteorder",
        "code_int",
        "db",
        "collection",
        "product_ref",
        "email",
        "password",
        "code_int",
        "email",
        "smtplib",
        "SMTP",
        "server",
        "starttls",
        "server",
        "login",
        "sender_email",
        "sender_password",
        "email",
        "code_int",
        "MIMEMultipart",
        "sender_email",
        "recipient_email",
        "subject",
        "msg",
        "attach",
        "MIMEText",
        "message_text",
        "server",
        "sendmail",
        "sender_email",
        "recipient_email",
        "msg",
        "as_string",
        "server",
        "quit",
        "redirect",
        "url_for",
        "app",
        "route",
        "methods",
        "CurrentAccount",
        "request",
        "method",
        "request",
        "form",
        "get",
        "request",
        "form",
        "get",
        "db",
        "collection",
        "where",
        "email",
        "where",
        "password",
        "stream",
        "len",
        "user_ref",
        "email",
        "redirect",
        "url_for",
        "render_template",
        "render_template",
        "app",
        "route",
        "methods",
        "request",
        "method",
        "CurrentAccount",
        "CurrentAccount",
        "request",
        "form",
        "get",
        "request",
        "form",
        "get",
        "request",
        "form",
        "get",
        "request",
        "files",
        "db",
        "collection",
        "users_ref",
        "where",
        "email",
        "doc",
        "query",
        "stream",
        "doc",
        "reference",
        "doc",
        "to_dict",
        "user_ref",
        "user_data",
        "update",
        "email",
        "name",
        "password",
        "user_id",
        "image",
        "image",
        "read",
        "base64",
        "b64encode",
        "image_data",
        "decode",
        "image_base64",
        "user_ref",
        "update",
        "user_data",
        "redirect",
        "url_for",
        "app",
        "route",
        "CurrentAccount",
        "CurrentAccount",
        "db",
        "collection",
        "where",
        "CurrentAccount",
        "doc",
        "user_ref",
        "stream",
        "doc",
        "to_dict",
        "render_template",
        "user_data",
        "user_data",
        "app",
        "route",
        "methods",
        "render_template",
        "app",
        "run",
        "debug"
    ],
    "literals": [
        "'UPLOAD_FOLDER'",
        "'uploads'",
        "'UPLOAD_FOLDER'",
        "'UPLOAD_FOLDER'",
        "\"\"",
        "\"karetivenkatavinaykumar@gmail.com\"",
        "\"ttif ezpl hqxh phum\"",
        "\"key.json\"",
        "\"JPEG\"",
        "\"/\"",
        "\"GET\"",
        "\"start.html\"",
        "\"/addproduct\"",
        "\"GET\"",
        "\"form.html\"",
        "\"/submit\"",
        "\"POST\"",
        "\"\"",
        "\"/log\"",
        "\"seller_id\"",
        "\"product_name\"",
        "\"price\"",
        "\"product_description\"",
        "\"category_type\"",
        "\"year\"",
        "\"seller_name\"",
        "\"seller_email\"",
        "f\"{seller_id}-{product_name}\"",
        "'product_image'",
        "'product_image'",
        "''",
        "'UPLOAD_FOLDER'",
        "\"utf-8\"",
        "\"login\"",
        "\"seller_id\"",
        "\"product_id\"",
        "\"product_name\"",
        "\"product_image\"",
        "\"price\"",
        "\"product_description\"",
        "\"category_type\"",
        "\"year\"",
        "\"seller_name\"",
        "\"seller_email\"",
        "\"smtp.gmail.com\"",
        "\"Successfull added Product Item\"",
        "\"Hello \"",
        "'From'",
        "'To'",
        "'Subject'",
        "'plain'",
        "\"products\"",
        "\"/products\"",
        "\"GET\"",
        "\"login\"",
        "\"products.html\"",
        "\"/product_details/<product_id>\"",
        "\"login\"",
        "\"product_id\"",
        "\"==\"",
        "f\"Firestore query error: {str(e)}\"",
        "\"product_details.html\"",
        "\"/buy_product/<product_id>\"",
        "\"POST\"",
        "\"/log\"",
        "\"login\"",
        "\"product_id\"",
        "\"==\"",
        "\"loginDetails\"",
        "\"email\"",
        "\"==\"",
        "\"Product not found\"",
        "\"Buyeremail\"",
        "\"buy\"",
        "\"smtp.gmail.com\"",
        "\"Order placed Successfully\"",
        "\"Your product is ready to Buy\"",
        "\"Hello \"",
        "\"product_name\"",
        "\"product_id\"",
        "\"seller_email\"",
        "\"seller_name\"",
        "\"price\"",
        "\"Hello \"",
        "\"seller_email\"",
        "\", Your Product is ready to take by the customer\\n Your customer details:\\nCustomer Name :- \"",
        "\"name\"",
        "\"\\nCustomer email :- \"",
        "\"\\nPlease contact the above customer for further proceedings to delivery the product.\\nThankYou!!!\"",
        "'From'",
        "'To'",
        "'Subject'",
        "'plain'",
        "\"From\"",
        "\"To\"",
        "\"seller_email\"",
        "\"Subject\"",
        "\"plain\"",
        "\"seller_email\"",
        "\"popup\"",
        "f\"Firestore query error: {str(e)}\"",
        "\"Error purchasing the product\"",
        "\"/add_product/<product_id>\"",
        "\"POST\"",
        "\"login\"",
        "\"product_id\"",
        "\"==\"",
        "\"Product not found\"",
        "\"Email\"",
        "\"cart\"",
        "\"Product  successfully.\"",
        "\"SuccADDCart.html\"",
        "f\"Firestore query error: {str(e)}\"",
        "\"Error purchasing the product\"",
        "\"/addcart\"",
        "\"\"",
        "\"login.html\"",
        "\"cart\"",
        "\"Email\"",
        "\"==\"",
        "\"addcart.html\"",
        "f\"Firestore query error: {str(e)}\"",
        "\"Error fetching order details\"",
        "\"/order\"",
        "\"buy\"",
        "\"Buyeremail\"",
        "\"==\"",
        "\"order.html\"",
        "f\"Firestore query error: {str(e)}\"",
        "\"Error fetching order details\"",
        "\"/aboutus\"",
        "\"aboutus.html\"",
        "\"/delete_order/<order_id>\"",
        "\"POST\"",
        "\"buy\"",
        "\"product_id\"",
        "\"==\"",
        "\"helo\"",
        "\"doc\"",
        "'order'",
        "f\"Error deleting order: {str(e)}\"",
        "\"Error deleting the order\"",
        "\"/delete_cart/<order_id>\"",
        "\"POST\"",
        "\"cart\"",
        "\"product_id\"",
        "\"==\"",
        "\"helo\"",
        "\"doc\"",
        "'carti'",
        "f\"Error deleting order: {str(e)}\"",
        "\"Error deleting the order\"",
        "\"/Account\"",
        "\"GET\"",
        "\"login\"",
        "\"Homedashbord.html\"",
        "\"/search\"",
        "\"POST\"",
        "\"product_name\"",
        "\"login\"",
        "\"product_name\"",
        "\"category_type\"",
        "\"products.html\"",
        "\"/category/<category_name>\"",
        "\"login\"",
        "\"category_type\"",
        "\"products.html\"",
        "\"/log\"",
        "\"GET\"",
        "\"login.html\"",
        "\"/sig\"",
        "\"GET\"",
        "\"signin.html\"",
        "\"/sigsub\"",
        "\"POST\"",
        "\"POST\"",
        "\"email\"",
        "\"password\"",
        "\"loginDetails\"",
        "\"email\"",
        "\"==\"",
        "\"Already.html\"",
        "'big'",
        "\"loginDetails\"",
        "\"email\"",
        "\"password\"",
        "\"Id\"",
        "\"smtp.gmail.com\"",
        "\"Sign-in to Website\"",
        "\"Hello \"",
        "\",\\nThanks for signing in to our website.\\nYour User/Seller ID: \"",
        "\". Please don't sshare this to anyone.\"",
        "'From'",
        "'To'",
        "'Subject'",
        "'plain'",
        "\"products\"",
        "\"/logsub\"",
        "\"POST\"",
        "\"POST\"",
        "\"email\"",
        "\"password\"",
        "\"loginDetails\"",
        "\"email\"",
        "\"==\"",
        "\"password\"",
        "\"==\"",
        "\"Accdetails\"",
        "\"login_error.html\"",
        "\"login.html\"",
        "\"/update_profile\"",
        "\"POST\"",
        "\"POST\"",
        "\"password\"",
        "\"user_id\"",
        "\"name\"",
        "\"image\"",
        "\"loginDetails\"",
        "\"email\"",
        "\"==\"",
        "\"email\"",
        "\"name\"",
        "\"password\"",
        "\"Id\"",
        "'utf-8'",
        "\"image\"",
        "\"Accdetails\"",
        "\"User not found\"",
        "\"/profile\"",
        "\"loginDetails\"",
        "'email'",
        "'=='",
        "\"profile.html\"",
        "\"/order-placed\"",
        "\"GET\"",
        "\"popup.html\"",
        "\"__main__\""
    ],
    "variables": [
        "app",
        "CurrentAccount",
        "sender_email",
        "sender_password",
        "cred",
        "db",
        "buffer",
        "seller_id",
        "product_name",
        "price",
        "product_description",
        "category_type",
        "year",
        "seller_name",
        "seller_email",
        "input_data",
        "hash_object",
        "hex_digest",
        "product_id",
        "image_file",
        "image_path",
        "compressed_image",
        "image_binary",
        "product_ref",
        "recipient_email",
        "server",
        "subject",
        "message_text",
        "msg",
        "msg",
        "msg",
        "msg",
        "products",
        "product_data",
        "product_dict",
        "a",
        "product_ref",
        "product_data",
        "product_data",
        "a",
        "product_ref",
        "product_ref2",
        "product_data",
        "product_data2",
        "product_data",
        "server",
        "subject",
        "subject2",
        "message_text",
        "message_text2",
        "msg",
        "msg_buyer",
        "msg",
        "msg",
        "msg",
        "msg_buyer",
        "msg_buyer",
        "msg_buyer",
        "a",
        "product_ref",
        "product_data",
        "product_data",
        "popup_message",
        "order_ref",
        "orders",
        "order_data",
        "order_ref",
        "orders",
        "order_data",
        "order_ref",
        "order_ref",
        "products",
        "product_data",
        "product_dict",
        "search_query",
        "products",
        "product_data",
        "product_dict",
        "products",
        "product_data",
        "product_dict",
        "email",
        "password",
        "user_ref",
        "sha256_hash",
        "first_4_bytes",
        "code_int",
        "code_int",
        "product_ref",
        "recipient_email",
        "server",
        "subject",
        "message_text",
        "msg",
        "msg",
        "msg",
        "msg",
        "email",
        "password",
        "user_ref",
        "CurrentAccount",
        "email",
        "password",
        "user_id",
        "name",
        "image",
        "users_ref",
        "query",
        "user_data",
        "user_ref",
        "user_ref",
        "user_data",
        "image_data",
        "image_base64",
        "user_data",
        "user_ref",
        "user_data",
        "user_data"
    ],
    "comments": [
        "Create an \"uploads\" directory to store uploaded files",
        "CurrentAccount Initilization",
        "AdminAccountDeatils",
        "Initialize Firebase Admin SDK with your service account key",
        "Initialize Firestore",
        "Adjust the size as needed",
        "You can adjust the format",
        "Create a route to display the form",
        "Create a route to handle form submission",
        "Encoding the productId",
        "product_id = int(request.form.get(\"product_id\"))",
        "Handle file upload",
        "Save the uploaded image to the \"uploads\" directory",
        "Read the image as binary data and encode it as base64",
        "with open(image_path, \"rb\") as image_file:",
        "image_binary = base64.b64encode(image_file.read()).decode(\"utf-8\")",
        "Store the data in the Firestore database",
        "charan",
        "Retrieve the product details from Firestore based on the product ID",
        "print(\"hello\",product_id)",
        "rest of your code",
        "Handle the error appropriately (e.g., logging or displaying an error message to the user).",
        "print(doc,\"rara sir\")",
        "Retrieve the product details from Firestore based on the product ID",
        "Handle the error if the product is not found",
        "Assuming there is only one product with the given ID, get its data",
        "Now, you can store this product data in the \"buy\" collection or perform other actions.",
        "Example: Store the product data in a \"buy\" collection",
        "Retrieve the product details from Firestore based on the product ID",
        "Handle the error if the product is not found",
        "Assuming there is only one product with the given ID, get its data",
        "Now, you can store this product data in the \"buy\" collection or perform other actions.",
        "Example: Store the product data in a \"buy\" collection",
        "Set the success message for the popup",
        "You can return this message to the client",
        "Retrieve order details from the \"buy\" collection",
        "Retrieve order details from the \"buy\" collection",
        "Retrieve the order details that match the product_id",
        "Loop through the query results and delete the matching order(s)",
        "Redirect back to the order page",
        "Retrieve the order details that match the product_id",
        "Loop through the query results and delete the matching order(s)",
        "Redirect back to the order page",
        "After the login to website",
        "Convert to lowercase and remove leading/trailing spaces",
        "Retrieve products with a matching or substring product name or category_type from the Firestore database",
        "Check if the entered search_query is in either product_name or category_type, and convert both to lowercase",
        "Retrieve products from Firestore that match the category",
        "Check if the entered product name is a substring of the product name or matches exactly",
        "----------------------------------------------------------------------------------------------------------------------------------",
        "Login And Signin route",
        "Redirect to a page indicating that the email is already registered",
        "Take the first 4 bytes of the hash (32 bits)",
        "Convert the 4 bytes to an integer",
        "Ensure it's a 5-digit code (between 10000 and 99999)",
        "Store user registration data in Firestore or your database",
        "CurrentAccount = email",
        "Send a confirmation email to the registered user",
        "Create an SMTP session",
        "Create a message with a subject",
        "Send the email",
        "Close the SMTP session",
        "Query Firestore to check if the email and password match",
        "If a matching user is found, set the CurrentAccount variable and redirect to products",
        "Redirect to a login error page or display an error message",
        "Render the login page initially",
        "profile",
        "Replace with your method of getting the current account's email",
        "Use the current account's email as the identifier",
        "Query Firestore to find the document with the matching email",
        "Initialize user_data as an empty dictionary",
        "Assuming there's only one document with the provided email",
        "Update user information in Firestore based on the retrieved document",
        "Ensure the email field remains the same",
        "Handle the image upload and conversion to Base64",
        "Read binary image data",
        "Update the document",
        "Redirect to the profile page or another page",
        "Handle the case where no user with the provided email is found",
        "email = CurrentAccount  # Get the user's email from the session or context",
        "Populate the form fields with the user's data, including the image",
        "print(user_data)"
    ],
    "docstrings": [
        "\"\"\", \\nYour Item added successfull to \n            CampusCart, We will inform you when buyer choose your Item.\\n\\n\\n\n            - Thanks from CampusCart.\n            \"\"\"",
        "\"\"\", \\nYour order placed successfully,\\n\\n\\n\n        your order details:- \\n\\n\n        -  product name :- \"\"\"",
        "\"\"\"\n        -  product_id :- \"\"\"",
        "\"\"\"\n        -  Seller-Email :- \"\"\"",
        "\"\"\"\n        -  Seller-name :- \"\"\"",
        "\"\"\"\n        -  product price :- \"\"\"",
        "\"\"\"\n        Please contact to the above sender email if did'nt get any response from the seller.\\n\\n\n        Thankyou for choosing our website.\\nHave a good day.\n        \"\"\""
    ],
    "functions": [
        "compress_image",
        "hom",
        "index",
        "submit",
        "products",
        "product_details",
        "buy_product",
        "add_product",
        "carti",
        "order",
        "aboutus",
        "delete_order",
        "delete_cart",
        "Accdetails",
        "search",
        "category",
        "log",
        "sig",
        "signin",
        "login",
        "update_profile",
        "profile",
        "popup"
    ],
    "classes": []
}