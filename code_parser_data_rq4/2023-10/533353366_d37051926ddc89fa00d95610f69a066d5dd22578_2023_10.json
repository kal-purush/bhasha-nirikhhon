{
    "identifiers": [
        "parseConfigData",
        "test",
        "parseConfigData",
        "labels",
        "data",
        "expect",
        "result",
        "test",
        "parseConfigData",
        "labels",
        "data",
        "expect",
        "result",
        "test",
        "parseConfigData",
        "labels",
        "data",
        "expect",
        "result",
        "test",
        "parseConfigData",
        "labels",
        "data",
        "expect",
        "result",
        "test",
        "parseConfigData",
        "labels",
        "data",
        "expect",
        "result",
        "test",
        "parseConfigData",
        "labels",
        "data",
        "expect",
        "result",
        "test",
        "parseConfigData",
        "labels",
        "data",
        "expect",
        "result",
        "test",
        "parseConfigData",
        "labels",
        "data",
        "expect",
        "result"
    ],
    "literals": [
        "\"../src/lib\"",
        "\"Check single label (single target)\"",
        "string",
        "\"target:staging\"",
        "\"target:staging\"",
        "\"envs/staging\"",
        "\"envs/staging\"",
        "\"Check single label (multiple targets)\"",
        "string",
        "\"target:all\"",
        "\"target:all\"",
        "\"envs/development\"",
        "\"envs/staging\"",
        "\"envs/production\"",
        "\"envs/development\"",
        "\"envs/staging\"",
        "\"envs/production\"",
        "\"Check multiple labels\"",
        "string",
        "\"target:staging\"",
        "\"target:production\"",
        "\"target:staging\"",
        "\"envs/staging\"",
        "\"target:production\"",
        "\"envs/production\"",
        "\"envs/staging\"",
        "\"envs/production\"",
        "\"Check if target is merged\"",
        "string",
        "\"target:all\"",
        "\"target:production\"",
        "\"target:all\"",
        "\"envs/development\"",
        "\"envs/staging\"",
        "\"envs/production\"",
        "\"target:production\"",
        "\"envs/production\"",
        "\"envs/development\"",
        "\"envs/staging\"",
        "\"envs/production\"",
        "\"Check fallback to default target when didn't specify a label\"",
        "string",
        "\"\"",
        "\"default\"",
        "\"envs/development\"",
        "\"envs/staging\"",
        "\"envs/production\"",
        "\"envs/development\"",
        "\"envs/staging\"",
        "\"envs/production\"",
        "\"Check fallback to default target when did specify a invalid label\"",
        "string",
        "\"target:invalid\"",
        "\"default\"",
        "\"envs/development\"",
        "\"envs/staging\"",
        "\"envs/production\"",
        "\"envs/development\"",
        "\"envs/staging\"",
        "\"envs/production\"",
        "\"Check if invalid labels are skipped\"",
        "string",
        "\"target:invalid\"",
        "\"target:production\"",
        "\"target:production\"",
        "\"envs/production\"",
        "\"envs/production\"",
        "\"Check if invalid labels are skipped\"",
        "string",
        "\"target:invalid\"",
        "\"target:production\"",
        "\"target:production\"",
        "\"envs/production\"",
        "\"envs/production\""
    ],
    "variables": [
        "labels",
        "data",
        "result",
        "labels",
        "data",
        "result",
        "labels",
        "data",
        "result",
        "labels",
        "data",
        "result",
        "labels",
        "data",
        "result",
        "labels",
        "data",
        "result",
        "labels",
        "data",
        "result",
        "labels",
        "data",
        "result"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}