{
    "identifiers": [
        "org",
        "citrusframework",
        "spi",
        "java",
        "io",
        "File",
        "java",
        "io",
        "java",
        "io",
        "InputStream",
        "java",
        "io",
        "InputStreamReader",
        "java",
        "io",
        "Reader",
        "java",
        "net",
        "MalformedURLException",
        "java",
        "net",
        "URI",
        "java",
        "net",
        "URL",
        "java",
        "nio",
        "charset",
        "Charset",
        "org",
        "citrusframework",
        "CitrusSettings",
        "Resource",
        "URI",
        "create",
        "getLocation",
        "uri",
        "getURI",
        "uri",
        "uri",
        "toURL",
        "getReader",
        "Charset",
        "forName",
        "CitrusSettings",
        "CITRUS_FILE_ENCODING",
        "charset",
        "getInputStream",
        "charset"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "*  Copyright 2023 the original author or authors.\n *\n *  Licensed to the Apache Software Foundation (ASF) under one or more\n *  contributor license agreements. See the NOTICE file distributed with\n *  this work for additional information regarding copyright ownership.\n *  The ASF licenses this file to You under the Apache License, Version 2.0\n *  (the \"License\"); you may not use this file except in compliance with\n *  the License. You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.",
        "* Describe a resource, such as a file or class path resource.",
        "* The location of the resource.",
        "* Whether this resource exists.",
        "* The {@link URI} of the resource.\n     * </p>\n     * The default implementation creates a {@code URI} object from resource location.",
        "* The {@link URL} for the resource or <code>null</code> if the URL can not be computed.\n     * </p>\n     * The default implementation creates a {@code URI} object from resource location.",
        "* Returns an {@link InputStream} that reads from the underlying resource.\n     * </p>\n     * Each invocation must return a new {@link InputStream} instance.",
        "* Return the file associated with this resource.\n     * @return",
        "* Returns a {@link Reader} that reads from the underlying resource using UTF-8 as charset.\n     * </p>\n     * Each invocation must return a new {@link Reader}.\n     *\n     * @see #getInputStream()",
        "* Returns a {@link Reader} that reads from the underlying resource using the given {@link Charset}\n     * </p>\n     * Each invocation must return a new {@link Reader}.\n     *\n     * @see #getInputStream()"
    ],
    "functions": [
        "getLocation",
        "exists",
        "URI",
        "getURI",
        "URL",
        "getURL",
        "InputStream",
        "getInputStream",
        "File",
        "getFile",
        "Reader",
        "getReader",
        "Reader",
        "getReader"
    ],
    "classes": []
}