{
    "identifiers": [
        "ValidationInfo",
        "TriggerTargetProblem",
        "isEmptyString",
        "node",
        "node",
        "error",
        "node",
        "node",
        "node",
        "warning",
        "node",
        "node",
        "node",
        "problem",
        "node",
        "getProblemMessage",
        "problem",
        "message",
        "error",
        "message",
        "error",
        "message",
        "warning",
        "message",
        "value",
        "warningMessage",
        "errorMessage",
        "isEmptyString",
        "value",
        "errorMessage",
        "warningMessage",
        "errorMessage",
        "warningMessage",
        "level",
        "level",
        "TargetQueryEntityColors"
    ],
    "literals": [
        "\"@skbkontur/react-ui-validations\"",
        "\"./Trigger\"",
        "\"../helpers/isEmptyString\"",
        "\"absolute\"",
        "\"add\"",
        "\"aggregate\"",
        "\"aggregateLine\"",
        "\"average\"",
        "\"avg\"",
        "\"avg_zero\"",
        "\"median\"",
        "\"sum\"",
        "\"total\"",
        "\"min\"",
        "\"max\"",
        "\"diff\"",
        "\"stddev\"",
        "\"count\"",
        "\"range\"",
        "\"rangeOf\"",
        "\"multiply\"",
        "\"last\"",
        "\"current\"",
        "\"aggregateSeriesLists\"",
        "\"aggregateWithWildcards\"",
        "\"alias\"",
        "\"aliasByMetric\"",
        "\"aliasByNode\"",
        "\"aliasByTags\"",
        "\"aliasQuery\"",
        "\"aliasSub\"",
        "\"alpha\"",
        "\"applyByNode\"",
        "\"areaBetween\"",
        "\"asPercent\"",
        "\"averageAbove\"",
        "\"averageBelow\"",
        "\"averageOutsidePercentile\"",
        "\"averageSeries\"",
        "\"averageSeriesWithWildcards\"",
        "\"cactiStyle\"",
        "\"changed\"",
        "\"color\"",
        "\"compressPeriodicGaps\"",
        "\"consolidateBy\"",
        "\"constantLine\"",
        "\"countSeries\"",
        "\"cumulative\"",
        "\"currentAbove\"",
        "\"currentBelow\"",
        "\"dashed\"",
        "\"delay\"",
        "\"derivative\"",
        "\"diffSeries\"",
        "\"diffSeriesLists\"",
        "\"divideSeries\"",
        "\"divideSeriesLists\"",
        "\"drawAsInfinite\"",
        "\"events\"",
        "\"exclude\"",
        "\"exp\"",
        "\"exponentialMovingAverage\"",
        "\"fallbackSeries\"",
        "\"filterSeries\"",
        "\"grep\"",
        "\"group\"",
        "\"groupByNode\"",
        "\"groupByNodes\"",
        "\"groupByTags\"",
        "\"highest\"",
        "\"highestAverage\"",
        "\"highestCurrent\"",
        "\"highestMax\"",
        "\"hitcount\"",
        "\"holtWintersAberration\"",
        "\"holtWintersConfidenceArea\"",
        "\"holtWintersConfidenceBands\"",
        "\"holtWintersForecast\"",
        "\"identity\"",
        "\"integral\"",
        "\"integralByInterval\"",
        "\"interpolate\"",
        "\"invert\"",
        "\"isNonNull\"",
        "\"keepLastValue\"",
        "\"legendValue\"",
        "\"limit\"",
        "\"lineWidth\"",
        "\"linearRegression\"",
        "\"logarithm\"",
        "\"logit\"",
        "\"lowest\"",
        "\"lowestAverage\"",
        "\"lowestCurrent\"",
        "\"mapSeries\"",
        "\"maxSeries\"",
        "\"maximumAbove\"",
        "\"maximumBelow\"",
        "\"minMax\"",
        "\"minSeries\"",
        "\"minimumAbove\"",
        "\"minimumBelow\"",
        "\"mostDeviant\"",
        "\"movingAverage\"",
        "\"movingMax\"",
        "\"movingMedian\"",
        "\"movingMin\"",
        "\"movingSum\"",
        "\"movingWindow\"",
        "\"multiplySeries\"",
        "\"multiplySeriesLists\"",
        "\"multiplySeriesWithWildcards\"",
        "\"nPercentile\"",
        "\"nonNegativeDerivative\"",
        "\"offset\"",
        "\"offsetToZero\"",
        "\"perSecond\"",
        "\"percentileOfSeries\"",
        "\"pieAverage\"",
        "\"pieMaximum\"",
        "\"pieMinimum\"",
        "\"pow\"",
        "\"powSeries\"",
        "\"randomWalkFunction\"",
        "\"rangeOfSeries\"",
        "\"reduceSeries\"",
        "\"removeAboveValue\"",
        "\"removeBelowValue\"",
        "\"removeBetweenPercentile\"",
        "\"removeEmptySeries\"",
        "\"roundFunction\"",
        "\"scale\"",
        "\"scaleToSeconds\"",
        "\"secondYAxis\"",
        "\"seriesByTag\"",
        "\"setXFilesFactor\"",
        "\"sigmoid\"",
        "\"sinFunction\"",
        "\"sortBy\"",
        "\"sortByMaxima\"",
        "\"sortByMinima\"",
        "\"sortByName\"",
        "\"sortByTotal\"",
        "\"squareRoot\"",
        "\"stacked\"",
        "\"stddevSeries\"",
        "\"stdev\"",
        "\"substr\"",
        "\"sumSeries\"",
        "\"sumSeriesLists\"",
        "\"sumSeriesWithWildcards\"",
        "\"threshold\"",
        "\"timeFunction\"",
        "\"timeShift\"",
        "\"timeSlice\"",
        "\"timeStack\"",
        "\"toLowerCase\"",
        "\"toUpperCase\"",
        "\"transformNull\"",
        "\"unique\"",
        "\"useSeriesAbove\"",
        "\"verticalLine\"",
        "\"weightedAverage\"",
        "string",
        "string",
        "string",
        "string",
        "\"bad\"",
        "${node.argument}: ${node.description}",
        "\"warn\"",
        "${node.argument}: ${node.description}",
        "string",
        "string",
        "string",
        "\"submit\"",
        "\"Can't be empty\"",
        "\"immediate\"",
        "\"error\"",
        "\"error\"",
        "\"warning\"",
        "\"immediate\"",
        "\"#6D6BDE\"",
        "\"#208013\"",
        "\"#3cb371\"",
        "\"#b86721\"",
        "\".redFunction\"",
        "\"#fcb6b1\"",
        "\"2px\"",
        "\".yellowFunction\"",
        "\"#fce56f\"",
        "\"2px\"",
        "\".unmatchedBracket\"",
        "\"#fcb6b1\"",
        "\"2px\""
    ],
    "variables": [
        "functionLabels",
        "error",
        "warning",
        "message",
        "level",
        "BadFunctionStyles"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "getProblemMessage",
        "validateQuery"
    ],
    "classes": []
}