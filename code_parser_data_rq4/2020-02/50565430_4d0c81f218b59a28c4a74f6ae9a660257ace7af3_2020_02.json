{
    "identifiers": [
        "createLatestSpecs",
        "getPinnedVersion",
        "getSaveType",
        "readProjectManifestOnly",
        "tryReadProjectManifest",
        "updateToLatestSpecsFromManifest",
        "Config",
        "PnpmError",
        "filterPkgsBySelectorObjects",
        "findWorkspacePackages",
        "arrayOfWorkspacePackagesToMap",
        "matcher",
        "rebuild",
        "requireHooks",
        "createOrConnectStoreController",
        "CreateStoreControllerOptions",
        "IncludedDependencies",
        "oneLine",
        "R",
        "install",
        "mutateModules",
        "recursive",
        "matchDependencies",
        "createWorkspaceSpecs",
        "updateToWorkspacePackagesFromManifest",
        "input",
        "opts",
        "opts",
        "opts",
        "PnpmError",
        "opts",
        "PnpmError",
        "opts",
        "opts",
        "opts",
        "PnpmError",
        "oneLine",
        "opts",
        "opts",
        "opts",
        "opts",
        "opts",
        "opts",
        "opts",
        "opts",
        "recursive",
        "opts",
        "input",
        "opts",
        "opts",
        "opts",
        "opts",
        "input",
        "input",
        "input",
        "opts",
        "process",
        "opts",
        "opts",
        "allProjects",
        "allProjects",
        "findWorkspacePackages",
        "opts",
        "opts",
        "workspacePackages",
        "arrayOfWorkspacePackagesToMap",
        "allProjects",
        "createOrConnectStoreController",
        "opts",
        "opts",
        "workspacePackages",
        "opts",
        "opts",
        "opts",
        "opts",
        "store",
        "store",
        "opts",
        "opts",
        "opts",
        "opts",
        "opts",
        "installOpts",
        "requireHooks",
        "opts",
        "dir",
        "opts",
        "tryReadProjectManifest",
        "opts",
        "opts",
        "manifest",
        "opts",
        "PnpmError",
        "manifest",
        "R",
        "R",
        "input",
        "opts",
        "patternedInput",
        "matcher",
        "patternedInput",
        "updateMatch",
        "input",
        "unpatternedInput",
        "matchDependencies",
        "updateMatch",
        "manifest",
        "includeDirect",
        "opts",
        "opts",
        "input",
        "input",
        "input",
        "updateToLatestSpecsFromManifest",
        "manifest",
        "includeDirect",
        "input",
        "createLatestSpecs",
        "input",
        "manifest",
        "opts",
        "input",
        "input",
        "input",
        "updateToWorkspacePackagesFromManifest",
        "manifest",
        "includeDirect",
        "workspacePackages",
        "input",
        "createWorkspaceSpecs",
        "input",
        "workspacePackages",
        "input",
        "input",
        "install",
        "manifest",
        "installOpts",
        "opts",
        "opts",
        "writeProjectManifest",
        "updatedManifest",
        "mutateModules",
        "opts",
        "installOpts",
        "input",
        "opts",
        "getPinnedVersion",
        "opts",
        "installOpts",
        "getSaveType",
        "installOpts",
        "installOpts",
        "opts",
        "writeProjectManifest",
        "updatedImporter",
        "opts",
        "opts",
        "allProjects",
        "allProjects",
        "findWorkspacePackages",
        "opts",
        "opts",
        "filterPkgsBySelectorObjects",
        "allProjects",
        "dir",
        "opts",
        "recursive",
        "allProjects",
        "opts",
        "OVERWRITE_UPDATE_OPTIONS",
        "opts",
        "opts",
        "rebuild",
        "readProjectManifestOnly",
        "opts",
        "opts",
        "opts",
        "opts",
        "store",
        "store"
    ],
    "literals": [
        "'@pnpm/cli-utils'",
        "'@pnpm/config'",
        "'@pnpm/error'",
        "'@pnpm/filter-workspace-packages'",
        "'@pnpm/find-workspace-packages'",
        "'@pnpm/matcher'",
        "'@pnpm/plugin-commands-rebuild/lib/implementation'",
        "'@pnpm/pnpmfile'",
        "'@pnpm/store-connection-manager'",
        "'@pnpm/types'",
        "'common-tags'",
        "'ramda'",
        "'supi'",
        "'./recursive'",
        "'./updateWorkspaceDependencies'",
        "'allProjects'",
        "'bail'",
        "'bin'",
        "'cliOptions'",
        "'dev'",
        "'engineStrict'",
        "'global'",
        "'globalPnpmfile'",
        "'ignorePnpmfile'",
        "'ignoreScripts'",
        "'independentLeaves'",
        "'linkWorkspacePackages'",
        "'lockfileDir'",
        "'lockfileOnly'",
        "'pnpmfile'",
        "'production'",
        "'rawLocalConfig'",
        "'registries'",
        "'save'",
        "'saveDev'",
        "'saveExact'",
        "'saveOptional'",
        "'savePeer'",
        "'savePrefix'",
        "'saveProd'",
        "'saveWorkspaceProtocol'",
        "'selectedProjectsGraph'",
        "'sideEffectsCache'",
        "'sideEffectsCacheReadonly'",
        "'sort'",
        "'sharedWorkspaceLockfile'",
        "'tag'",
        "'optional'",
        "'workspaceConcurrency'",
        "'workspaceDir'",
        "string",
        "string",
        "'BAD_OPTIONS'",
        "'Cannot use --latest with --workspace simultaneously'",
        "'WORKSPACE_OPTION_OUTSIDE_WORKSPACE'",
        "'--workspace can only be used inside a workspace'",
        "'save-workspace-protocol'",
        "'BAD_OPTIONS'",
        "This workspace has link-workspace-packages turned off,\n          so dependencies are linked from the workspace only when the workspace protocol is used.\n          Either set link-workspace-packages to true or don't use the --no-save-workspace-protocol option\n          when running add/update with the --workspace option",
        "'preserveWorkspaceProtocol'",
        "'update'",
        "'install'",
        "'add'",
        "'hoist-pattern'",
        "'undefined'",
        "'hoist'",
        "'undefined'",
        "'independent-leaves'",
        "'undefined'",
        "'shamefully-hoist'",
        "'undefined'",
        "'hooks'",
        "'NO_IMPORTER_MANIFEST'",
        "'No package.json found'",
        "'*'",
        "'installSome'",
        "'install'"
    ],
    "variables": [
        "OVERWRITE_UPDATE_OPTIONS",
        "includeDirect",
        "dir",
        "allProjects",
        "workspacePackages",
        "store",
        "installOpts",
        "patternedInput",
        "unpatternedInput",
        "updateMatch",
        "updatedManifest",
        "updatedImporter",
        "selectedProjectsGraph"
    ],
    "comments": [
        "`pnpm install \"\"` is going to be just `pnpm install`",
        "In case installation is done in a multi-package repository",
        "The dependencies should be built first,",
        "so ignoring scripts for now",
        "Otherwise TypeScript doesn't understant that is is not undefined"
    ],
    "docstrings": [],
    "functions": [
        "handler"
    ],
    "classes": []
}