{
    "identifiers": [
        "Collections",
        "Generic",
        "Collections",
        "Immutable",
        "IO",
        "Linq",
        "Text",
        "Json",
        "Pulumi",
        "Kubernetes",
        "Yaml",
        "Pulumi",
        "Utilities",
        "TransformationAction",
        "Func",
        "Collections",
        "Immutable",
        "ImmutableDictionary",
        "Pulumi",
        "CustomResourceOptions",
        "Collections",
        "Immutable",
        "ImmutableDictionary",
        "Pulumi",
        "Kubernetes",
        "Helm",
        "CollectionComponentResource",
        "releaseName",
        "Union",
        "ChartArgs",
        "LocalChartArgs",
        "args",
        "ComponentResourceOptions",
        "options",
        "GetName",
        "args",
        "releaseName",
        "options",
        "releaseName",
        "GetName",
        "args",
        "releaseName",
        "args",
        "Unwrap",
        "Output",
        "Create",
        "OutputUtilities",
        "GetDependenciesAsync",
        "config",
        "OutputUtilities",
        "GetIsKnownAsync",
        "config",
        "ContinueWith",
        "isKnown",
        "Result",
        "Log",
        "Info",
        "Output",
        "Tuple",
        "config",
        "configDeps",
        "Apply",
        "values",
        "Item1",
        "values",
        "Item2",
        "Path",
        "GetTempFileName",
        "Path",
        "Combine",
        "Path",
        "GetTempPath",
        "Path",
        "GetRandomFileName",
        "Directory",
        "CreateDirectory",
        "chartDirectoryName",
        "chartArgs",
        "IsT0",
        "chartArgs",
        "AsT0",
        "cfg",
        "Repo",
        "cfg",
        "Repo",
        "Contains",
        "nameof",
        "cfg",
        "Repo",
        "nameof",
        "ChartArgs",
        "nameof",
        "cfg",
        "Repo",
        "IsNullOrEmpty",
        "cfg",
        "Repo",
        "cfg",
        "Repo",
        "cfg",
        "Chart",
        "cfg",
        "Chart",
        "cfg",
        "FetchOptions",
        "ChartFetchArgsUnwrap",
        "fetchOptions",
        "Destination",
        "chartDirectoryName",
        "fetchOptions",
        "Version",
        "cfg",
        "Version",
        "Fetch",
        "chartToFetch",
        "fetchOptions",
        "chartDirectory",
        "GetDirectories",
        "fetchedChart",
        "Name",
        "chart",
        "fetchedChart",
        "FullName",
        "defaultValues",
        "Path",
        "Join",
        "chartDirectoryName",
        "fetchedChartName",
        "cfgBase",
        "cfg",
        "chartArgs",
        "AsT1",
        "chart",
        "cfg",
        "Path",
        "defaultValues",
        "Path",
        "Join",
        "chart",
        "cfgBase",
        "cfg",
        "JsonSerializer",
        "Serialize",
        "cfgBase",
        "Values",
        "File",
        "WriteAllText",
        "overrides",
        "data",
        "chart",
        "releaseName",
        "defaultValues",
        "overrides",
        "cfgBase",
        "ApiVersions",
        "Length",
        "flags",
        "Add",
        "flags",
        "Add",
        "Join",
        "cfgBase",
        "ApiVersions",
        "IsNullOrEmpty",
        "cfgBase",
        "Namespace",
        "flags",
        "Add",
        "flags",
        "Add",
        "cfgBase",
        "Namespace",
        "Environment",
        "GetEnvironmentVariable",
        "home",
        "flags",
        "Add",
        "flags",
        "Add",
        "home",
        "Utilities",
        "ExecuteCommand",
        "flags",
        "ToArray",
        "ParseTemplate",
        "yaml",
        "cfgBase",
        "Transformations",
        "cfgBase",
        "ResourcePrefix",
        "dependencies",
        "cfgBase",
        "Namespace",
        "e",
        "ResourceException",
        "e",
        "Message",
        "chartDirectory",
        "Delete",
        "RegisterResources",
        "resources",
        "Union",
        "ChartArgs",
        "LocalChartArgs",
        "config",
        "releaseName",
        "config",
        "Match",
        "v",
        "ResourcePrefix",
        "v",
        "ResourcePrefix",
        "IsNullOrEmpty",
        "prefix",
        "releaseName",
        "prefix",
        "releaseName",
        "chart",
        "ChartFetchArgsUnwrap",
        "opts",
        "chart",
        "opts",
        "Untar",
        "flags",
        "Add",
        "IsNullOrEmpty",
        "opts",
        "Home",
        "opts",
        "Home",
        "Environment",
        "GetEnvironmentVariable",
        "IsNullOrEmpty",
        "opts",
        "Version",
        "flags",
        "Add",
        "flags",
        "Add",
        "opts",
        "Version",
        "IsNullOrEmpty",
        "opts",
        "CAFile",
        "flags",
        "Add",
        "flags",
        "Add",
        "opts",
        "CAFile",
        "IsNullOrEmpty",
        "opts",
        "CertFile",
        "flags",
        "Add",
        "flags",
        "Add",
        "opts",
        "CertFile",
        "IsNullOrEmpty",
        "opts",
        "KeyFile",
        "flags",
        "Add",
        "flags",
        "Add",
        "opts",
        "KeyFile",
        "IsNullOrEmpty",
        "opts",
        "Destination",
        "flags",
        "Add",
        "flags",
        "Add",
        "opts",
        "Destination",
        "IsNullOrEmpty",
        "opts",
        "Keyring",
        "flags",
        "Add",
        "flags",
        "Add",
        "opts",
        "Keyring",
        "IsNullOrEmpty",
        "opts",
        "Password",
        "flags",
        "Add",
        "flags",
        "Add",
        "opts",
        "Password",
        "IsNullOrEmpty",
        "opts",
        "Repo",
        "flags",
        "Add",
        "flags",
        "Add",
        "opts",
        "Repo",
        "IsNullOrEmpty",
        "opts",
        "UntarDir",
        "flags",
        "Add",
        "flags",
        "Add",
        "opts",
        "UntarDir",
        "IsNullOrEmpty",
        "opts",
        "Username",
        "flags",
        "Add",
        "flags",
        "Add",
        "opts",
        "Username",
        "IsNullOrEmpty",
        "opts",
        "Home",
        "flags",
        "Add",
        "flags",
        "Add",
        "opts",
        "Home",
        "opts",
        "Devel",
        "flags",
        "Add",
        "opts",
        "Prov",
        "flags",
        "Add",
        "opts",
        "Verify",
        "flags",
        "Add",
        "Utilities",
        "ExecuteCommand",
        "flags",
        "ToArray",
        "Output",
        "ImmutableDictionary",
        "KubernetesResource",
        "text",
        "TransformationAction",
        "transformations",
        "resourcePrefix",
        "ImmutableHashSet",
        "Resource",
        "dependsOn",
        "defaultNamespace",
        "Invokes",
        "YamlDecode",
        "YamlDecodeArgs",
        "Text",
        "text",
        "DefaultNamespace",
        "defaultNamespace",
        "Apply",
        "ConfigGroupArgs",
        "ResourcePrefix",
        "resourcePrefix",
        "Objs",
        "objs",
        "Transformations",
        "transformations",
        "ComponentResourceOptions",
        "Parent",
        "DependsOn",
        "dependsOn",
        "ToArray",
        "Parser",
        "Parse",
        "args",
        "opts",
        "ResourceArgs",
        "InputList",
        "InputList",
        "_apiVersions",
        "InputList",
        "_apiVersions",
        "value",
        "Input",
        "InputMap",
        "InputMap",
        "_values",
        "InputMap",
        "_values",
        "value",
        "TransformationAction",
        "BaseChartArgs",
        "Input",
        "Input",
        "Input",
        "Input",
        "ChartFetchArgs",
        "BaseChartArgs",
        "Input",
        "Input",
        "Input",
        "Input",
        "Input",
        "Input",
        "Input",
        "Input",
        "Input",
        "Input",
        "Input",
        "Input",
        "Input",
        "Input",
        "Input"
    ],
    "literals": [
        "\"kubernetes:helm.sh/v2:Chart\"",
        "\"[Can't preview] all chart values must be known ahead of time to generate an accurate preview.\"",
        "\"http\"",
        "\"values.yaml\"",
        "\"values.yaml\"",
        "\"template\"",
        "\"--name-template\"",
        "\"--values\"",
        "\"--values\"",
        "\"--api-versions\"",
        "\",\"",
        "\"--namespace\"",
        "\"HELM_HOME\"",
        "\"--home\"",
        "\"helm\"",
        "\"fetch\"",
        "\"--untar\"",
        "\"HELM_HOME\"",
        "\"--version\"",
        "\"--ca-file\"",
        "\"--cert-file\"",
        "\"--key-file\"",
        "\"--destination\"",
        "\"--keyring\"",
        "\"--password\"",
        "\"--repo\"",
        "\"--untardir\"",
        "\"--username\"",
        "\"--home\"",
        "\"--devel\"",
        "\"--prov\"",
        "\"--verify\"",
        "\"helm\""
    ],
    "variables": [
        "config",
        "configDeps",
        "resources",
        "chartArgs",
        "dependencies",
        "overrides",
        "chartDirectoryName",
        "chartDirectory",
        "chart",
        "defaultValues",
        "BaseChartArgsUnwrap",
        "cfgBase",
        "cfg",
        "chartToFetch",
        "fetchOptions",
        "fetchedChart",
        "fetchedChartName",
        "cfg",
        "data",
        "flags",
        "home",
        "yaml",
        "prefix",
        "flags",
        "args",
        "opts",
        "_apiVersions",
        "ApiVersions",
        "Namespace",
        "_values",
        "Values",
        "Transformations",
        "ResourcePrefix",
        "Repo",
        "Chart",
        "Version",
        "FetchOptions",
        "Path",
        "Version",
        "CAFile",
        "CertFile",
        "KeyFile",
        "Destination",
        "Keyring",
        "Password",
        "Repo",
        "UntarDir",
        "Username",
        "Home",
        "Devel",
        "Prov",
        "Untar",
        "Verify"
    ],
    "comments": [
        "Copyright 2016-2020, Pulumi Corporation",
        "Create an instance of the specified Helm chart.",
        "</summary>",
        "<param name=\"releaseName\">Name of the Chart (e.g., nginx-ingress).</param>",
        "<param name=\"args\">Configuration options for the Chart.</param>",
        "<param name=\"options\">A bag of options that control this resource's behavior.</param>",
        "Note that this can only happen during a preview.",
        "Create temporary directories and files to hold chart data and override values.",
        "Fetch chart.",
        "Write overrides file.",
        "Does not require Tiller. From the `helm template` documentation:",
        "",
        ">  Render chart templates locally and display the output.",
        ">",
        "> This does not require Tiller. However, any values that would normally be",
        "> looked up or retrieved in-cluster will be faked locally. Additionally, none",
        "> of the server-side testing of chart validity (e.g. whether an API is supported)",
        "> is done.",
        "Use the HELM_HOME environment variable value if set.",
        "Shed stack trace, only emit the error.",
        "Untar by default.",
        "Fallback to using the HELM_HOME environment variable if opts.home is not set.",
        "The optional kubernetes api versions used for Capabilities.APIVersions.",
        "</summary>",
        "The optional namespace to install chart resources into.",
        "</summary>",
        "Overrides for chart values.",
        "</summary>",
        "Optional array of transformations to apply to resources that will be created by this chart prior to",
        "creation. Allows customization of the chart behaviour without directly modifying the chart itself.",
        "</summary>",
        "An optional prefix for the auto-generated resource names.",
        "Example: A resource created with resourcePrefix=\"foo\" would produce a resource named \"foo-resourceName\".",
        "</summary>",
        "The repository name of the chart to deploy.",
        "Example: \"stable\"",
        "</summary>",
        "The name of the chart to deploy.  If <see cref=\"Repo\" /> is provided, this chart",
        "name will be prefixed by the repo name.",
        "Example: Repo: \"stable\", Chart: \"nginx-ingress\" -> \"stable/nginx-ingress\"",
        "Example: Chart: \"stable/nginx-ingress\" -> \"stable/nginx-ingress\"",
        "</summary>",
        "The version of the chart to deploy. If not provided, the latest version will be deployed.",
        "</summary>",
        "Additional options to customize the fetching of the Helm chart.",
        "</summary>",
        "The path to the chart directory which contains the `Chart.yaml` file.",
        "</summary>",
        "Additional options to customize the fetching of the Helm chart.",
        "</summary>",
        "Specific version of a chart. Without this, the latest version is fetched.",
        "</summary>",
        "Verify certificates of HTTPS-enabled servers using this CA bundle.",
        "</summary>",
        "Identify HTTPS client using this SSL certificate file.",
        "</summary>",
        "Identify HTTPS client using this SSL key file.",
        "</summary>",
        "Location to write the chart. If this and tardir are specified, tardir is appended to this",
        "(default \".\").",
        "</summary>",
        "Keyring containing public keys (default \"/Users/alex/.gnupg/pubring.gpg\").",
        "</summary>",
        "Chart repository password.",
        "</summary>",
        "Chart repository url where to locate the requested chart.",
        "</summary>",
        "If untar is specified, this flag specifies the name of the directory into which the chart is",
        "expanded (default \".\").",
        "</summary>",
        "Chart repository username.",
        "</summary>",
        "Location of your Helm config. Overrides $HELM_HOME (default \"/Users/alex/.helm\").",
        "</summary>",
        "Use development versions, too. Equivalent to version '>0.0.0-0'. If --version is set, this is",
        "ignored.",
        "</summary>",
        "Fetch the provenance file, but don't perform verification.",
        "</summary>",
        "If set to false, will leave the chart as a tarball after downloading.",
        "</summary>",
        "Verify the package against its signature.",
        "</summary>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "ChartBase",
        "GetName",
        "Fetch",
        "ParseTemplate"
    ],
    "classes": [
        "ChartBase",
        "BaseChartArgs",
        "ChartArgs",
        "LocalChartArgs",
        "ChartFetchArgs"
    ]
}