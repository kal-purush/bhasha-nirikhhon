{
    "identifiers": [
        "org",
        "openkilda",
        "floodlight",
        "switchmanager",
        "java",
        "util",
        "Collections",
        "singletonList",
        "org",
        "projectfloodlight",
        "openflow",
        "protocol",
        "OFVersion",
        "OF_13",
        "net",
        "floodlightcontroller",
        "core",
        "IOFSwitch",
        "net",
        "floodlightcontroller",
        "util",
        "FlowModUtils",
        "org",
        "projectfloodlight",
        "openflow",
        "protocol",
        "OFFactory",
        "org",
        "projectfloodlight",
        "openflow",
        "protocol",
        "OFFlowMod",
        "org",
        "projectfloodlight",
        "openflow",
        "protocol",
        "OFMeterFlags",
        "org",
        "projectfloodlight",
        "openflow",
        "protocol",
        "OFMeterMod",
        "org",
        "projectfloodlight",
        "openflow",
        "protocol",
        "OFMeterModCommand",
        "org",
        "projectfloodlight",
        "openflow",
        "protocol",
        "action",
        "OFAction",
        "org",
        "projectfloodlight",
        "openflow",
        "protocol",
        "action",
        "OFActions",
        "org",
        "projectfloodlight",
        "openflow",
        "protocol",
        "meterband",
        "OFMeterBandDrop",
        "org",
        "projectfloodlight",
        "openflow",
        "protocol",
        "oxm",
        "OFOxms",
        "org",
        "projectfloodlight",
        "openflow",
        "types",
        "DatapathId",
        "org",
        "projectfloodlight",
        "openflow",
        "types",
        "MacAddress",
        "org",
        "projectfloodlight",
        "openflow",
        "types",
        "OFBufferId",
        "org",
        "projectfloodlight",
        "openflow",
        "types",
        "OFPort",
        "org",
        "projectfloodlight",
        "openflow",
        "types",
        "TableId",
        "org",
        "projectfloodlight",
        "openflow",
        "types",
        "U64",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "OVS_MANUFACTURER",
        "dpId",
        "MacAddress",
        "of",
        "Arrays",
        "copyOfRange",
        "dpId",
        "getBytes",
        "ofFactory",
        "actions",
        "ofFactory",
        "actions",
        "actions",
        "buildOutput",
        "setMaxLen",
        "setPort",
        "OFPort",
        "CONTROLLER",
        "build",
        "ofFactory",
        "macAddress",
        "oxms",
        "ofFactory",
        "oxms",
        "actions",
        "ofFactory",
        "actions",
        "actions",
        "buildSetField",
        "setField",
        "oxms",
        "buildEthDst",
        "setValue",
        "macAddress",
        "build",
        "build",
        "ofFactory",
        "cookie",
        "priority",
        "tableId",
        "fmb",
        "ofFactory",
        "buildFlowAdd",
        "fmb",
        "setIdleTimeout",
        "FlowModUtils",
        "INFINITE_TIMEOUT",
        "fmb",
        "setHardTimeout",
        "FlowModUtils",
        "INFINITE_TIMEOUT",
        "fmb",
        "setBufferId",
        "OFBufferId",
        "NO_BUFFER",
        "fmb",
        "setCookie",
        "U64",
        "of",
        "cookie",
        "fmb",
        "setPriority",
        "priority",
        "fmb",
        "setTableId",
        "TableId",
        "of",
        "tableId",
        "fmb",
        "ofFactory",
        "bandwidth",
        "burstSize",
        "meterId",
        "flags",
        "bandBuilder",
        "ofFactory",
        "meterBands",
        "buildDrop",
        "setRate",
        "bandwidth",
        "setBurstSize",
        "burstSize",
        "meterModBuilder",
        "ofFactory",
        "buildMeterMod",
        "setMeterId",
        "meterId",
        "setCommand",
        "OFMeterModCommand",
        "ADD",
        "setFlags",
        "flags",
        "ofFactory",
        "getVersion",
        "compareTo",
        "OF_13",
        "meterModBuilder",
        "setBands",
        "singletonList",
        "bandBuilder",
        "build",
        "meterModBuilder",
        "setMeters",
        "singletonList",
        "bandBuilder",
        "build",
        "meterModBuilder",
        "build",
        "sw",
        "OVS_MANUFACTURER",
        "equals",
        "sw",
        "getSwitchDescription",
        "getManufacturerDescription"
    ],
    "literals": [
        "\"Nicira, Inc.\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "Copyright 2020 Telstra Open Source\n *\n *   Licensed under the Apache License, Version 2.0 (the \"License\");\n *   you may not use this file except in compliance with the License.\n *   You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n *   Unless required by applicable law or agreed to in writing, software\n *   distributed under the License is distributed on an \"AS IS\" BASIS,\n *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *   See the License for the specific language governing permissions and\n *   limitations under the License.",
        "* Utils for switch flow generation.",
        "* OVS software switch manufacturer constant value.",
        "* Create a MAC address based on the DPID.\n     *\n     * @param dpId switch object\n     * @return {@link MacAddress}",
        "* Create sent to controller OpenFlow action.\n     *\n     * @param ofFactory OpenFlow factory\n     * @return OpenFlow Action",
        "* Create set destination MAC address OpenFlow action.\n     *\n     * @param ofFactory OpenFlow factory\n     * @param macAddress MAC address to set\n     * @return OpenFlow Action",
        "* Create OpenFlow flow modification command builder.\n     *\n     * @param ofFactory OpenFlow factory\n     * @param cookie cookie\n     * @param priority priority\n     * @param tableId table id\n     * @return OpenFlow command builder",
        "* Create OpenFlow meter modification command.\n     *\n     * @param ofFactory OpenFlow factory\n     * @param bandwidth bandwidth\n     * @param burstSize burst size\n     * @param meterId meter id\n     * @param flags flags\n     * @return OpenFlow command",
        "* Check switch is OVS.\n     *\n     * @param sw switch\n     * @return true if switch is OVS"
    ],
    "functions": [
        "SwitchFlowUtils",
        "MacAddress",
        "convertDpIdToMac",
        "OFAction",
        "actionSendToController",
        "OFAction",
        "actionSetDstMac",
        "prepareFlowModBuilder",
        "OFMeterMod",
        "buildMeterMode",
        "isOvs"
    ],
    "classes": [
        "SwitchFlowUtils"
    ]
}