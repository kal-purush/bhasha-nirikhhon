{
    "identifiers": [
        "random",
        "re",
        "subprocess",
        "time",
        "sys",
        "open",
        "f",
        "arg",
        "f",
        "readline",
        "split",
        "arg",
        "split",
        "len",
        "parts",
        "parts",
        "parts",
        "parts",
        "boot_args",
        "sys",
        "exit",
        "subprocess",
        "run",
        "capture_output",
        "universal_newlines",
        "line",
        "result",
        "stdout",
        "splitlines",
        "re",
        "match",
        "line",
        "re",
        "VERBOSE",
        "groups",
        "link",
        "boot_args",
        "command",
        "extend",
        "ndx",
        "device",
        "mac",
        "ndx",
        "subprocess",
        "run",
        "capture_output",
        "universal_newlines",
        "line",
        "result",
        "stdout",
        "splitlines",
        "line",
        "startswith",
        "line",
        "split",
        "strip",
        "command",
        "extend",
        "ndx",
        "mac",
        "open",
        "f",
        "len",
        "re",
        "findall",
        "f",
        "read",
        "re",
        "MULTILINE",
        "command",
        "append",
        "boot_args",
        "cpus",
        "subprocess",
        "run",
        "command",
        "capture_output",
        "universal_newlines",
        "result",
        "stdout",
        "splitlines",
        "http_code",
        "ValueError",
        "IndexError",
        "time",
        "sleep",
        "random",
        "randint"
    ],
    "literals": [
        "'/usr/bin/curl'",
        "'--silent'",
        "'--write-out'",
        "'%{http_code}'",
        "'--local-port'",
        "'1-100'",
        "'--output'",
        "'/tmp/ks.xml'",
        "'--insecure'",
        "'/proc/cmdline'",
        "'='",
        "'inst.ks'",
        "\"Error: no inst.ks found!\"",
        "'ip'",
        "'-oneline'",
        "'link'",
        "'show'",
        "r\"\"\"\n\t\t\\d+:\\s+         # Index\n\t\t(\\S+)           # Device name\n\t\t:\\s.+           # Junk we don't care about\n\t\tlink/(\\S+)\\s+   # The link type\n\t\t([0-9a-f:]+)\\s  # The MAC address\n\t\"\"\"",
        "'loopback'",
        "'inst.ks.sendmac'",
        "'--header'",
        "f'X-RHN-Provisioning-MAC-{ndx}: {device} {mac}'",
        "'/usr/bin/ipmitool'",
        "'lan'",
        "'print'",
        "'1'",
        "\"MAC Address\"",
        "\":\"",
        "'--header'",
        "f'X-RHN-Provisioning-MAC-{ndx}: ipmi {mac}'",
        "'/proc/cpuinfo'",
        "r'^processor\\s+:\\s+\\d+'",
        "f'{boot_args[\"inst.ks\"]}?os=redhat&arch=x86_64&np={cpus}'",
        "\"inst.ks\""
    ],
    "variables": [
        "command",
        "boot_args",
        "parts",
        "boot_args",
        "boot_args",
        "result",
        "ndx",
        "device",
        "link",
        "mac",
        "result",
        "mac",
        "cpus",
        "result",
        "http_code"
    ],
    "comments": [
        "!/opt/stack/bin/python3 -E",
        "",
        "@copyright@",
        "Copyright (c) 2006 - 2019 Teradata",
        "All rights reserved. Stacki(r) v5.x stacki.com",
        "https://github.com/Teradata/stacki/blob/master/LICENSE.txt",
        "@copyright@",
        "",
        "Start to build the curl command",
        "Parse the boot args",
        "Get the interfaces to report back the device and macs",
        "Only add our header if Redhat isn't told to do it",
        "Get the IPMI mac if we can",
        "Get the number of CPUs",
        "Append the URL to request",
        "Retry until we get an installation file",
        "It worked!",
        "No luck, try again in a bit"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}