{
    "identifiers": [
        "com",
        "broadcom",
        "lsp",
        "domain",
        "cobol",
        "databus",
        "impl",
        "com",
        "broadcom",
        "lsp",
        "domain",
        "cobol",
        "api",
        "CopybookEventFactory",
        "com",
        "broadcom",
        "lsp",
        "domain",
        "cobol",
        "api",
        "EventObserver",
        "com",
        "broadcom",
        "lsp",
        "domain",
        "cobol",
        "model",
        "DataEvent",
        "com",
        "broadcom",
        "lsp",
        "domain",
        "cobol",
        "model",
        "DataEventType",
        "lombok",
        "Getter",
        "lombok",
        "Setter",
        "lombok",
        "slf4j",
        "Slf4j",
        "net",
        "jodah",
        "concurrentunit",
        "Waiter",
        "java",
        "util",
        "concurrent",
        "TimeoutException",
        "Slf4j",
        "WAITER_DELAY",
        "Getter",
        "waiter",
        "Setter",
        "Getter",
        "targetEventType",
        "databus",
        "subscribedTo",
        "publishTo",
        "subscribeTo",
        "subscribedTo",
        "publishEvent",
        "publishTo",
        "waiter",
        "await",
        "WAITER_DELAY",
        "subscribedTo",
        "publishTo",
        "subscribeTo",
        "subscribedTo",
        "publishEvent",
        "publishTo",
        "waiter",
        "await",
        "WAITER_DELAY",
        "targetEvent",
        "subscriber",
        "subscribeTo",
        "targetEvent",
        "publishEvent",
        "targetEvent",
        "waiter",
        "await",
        "WAITER_DELAY",
        "databus",
        "unSubscribe",
        "subscriber",
        "publishEvent",
        "DataEventType",
        "REQUIRED_COPYBOOK_EVENT",
        "waiter",
        "await",
        "WAITER_DELAY",
        "dataEventType",
        "setTargetEventType",
        "dataEventType",
        "databus",
        "subscribe",
        "dataEventType",
        "dataEventType",
        "databus",
        "postData",
        "CopybookEventFactory",
        "createEventByEventType",
        "dataEventType",
        "Override",
        "adaptedDataEvent",
        "LOG",
        "debug"
    ],
    "literals": [
        "\"CALLBACK WORKS!\""
    ],
    "variables": [
        "targetEventType"
    ],
    "comments": [
        "Unsubscribe",
        "publish the event again",
        "wait undefined because no subscriber anymore"
    ],
    "docstrings": [
        "* Copyright (c) 2020 Broadcom.\n *\n * The term \"Broadcom\" refers to Broadcom Inc. and/or its subsidiaries.\n *\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n * Broadcom, Inc. - initial API and implementation\n *",
        "* This class is an abstraction for databus tests. It uses {@link Waiter} to apply waiting for the\n * asynchronous tasks."
    ],
    "functions": [
        "databusSubscriptionForPositiveScenario",
        "databusSubscriptionForNegativeScenario",
        "databusUnsubscribeForPositiveScenario",
        "subscribeTo",
        "publishEvent",
        "observerCallback"
    ],
    "classes": [
        "DatabusConfigProvider"
    ]
}