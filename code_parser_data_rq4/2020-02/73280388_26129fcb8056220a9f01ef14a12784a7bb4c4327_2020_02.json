{
    "identifiers": [
        "absolute_import",
        "division",
        "print_function",
        "os",
        "yaml",
        "ansible",
        "module_utils",
        "basic",
        "AnsibleModule",
        "ansible",
        "module_utils",
        "_text",
        "to_bytes",
        "server",
        "required",
        "token",
        "required",
        "collections",
        "elements",
        "required",
        "options",
        "required",
        "name",
        "required",
        "version",
        "dependencies",
        "AnsibleModule",
        "argument_spec",
        "module_args",
        "supports_check_mode",
        "changed",
        "idx",
        "collection",
        "os",
        "path",
        "join",
        "tmpdir",
        "collection",
        "collection",
        "collection",
        "to_bytes",
        "collection_dir",
        "errors",
        "os",
        "mkdir",
        "b_collection_dir",
        "open",
        "os",
        "path",
        "join",
        "b_collection_dir",
        "mode",
        "fd",
        "fd",
        "write",
        "collection",
        "collection",
        "collection",
        "collection",
        "open",
        "os",
        "path",
        "join",
        "b_collection_dir",
        "mode",
        "fd",
        "fd",
        "write",
        "to_bytes",
        "yaml",
        "safe_dump",
        "galaxy_meta",
        "errors",
        "collection",
        "collection",
        "collection",
        "os",
        "path",
        "join",
        "collection_dir",
        "release_filename",
        "run_command",
        "cwd",
        "collection_dir",
        "collection_path",
        "idx",
        "len",
        "publish_args",
        "append",
        "run_command",
        "publish_args",
        "exit_json",
        "result",
        "run_module",
        "main"
    ],
    "literals": [
        "'metadata_version'",
        "'1.1'",
        "'status'",
        "'preview'",
        "'supported_by'",
        "'community'",
        "'str'",
        "'str'",
        "'list'",
        "'dict'",
        "'str'",
        "'str'",
        "'str'",
        "'1.0.0'",
        "'dict'",
        "'collections'",
        "\"%s-%s-%s\"",
        "'namespace'",
        "'name'",
        "'version'",
        "'surrogate_or_strict'",
        "b'README.md'",
        "'wb'",
        "b\"Collection readme\"",
        "'namespace'",
        "'namespace'",
        "'name'",
        "'name'",
        "'version'",
        "'version'",
        "'readme'",
        "'README.md'",
        "'authors'",
        "'Collection author <name@email.com'",
        "'dependencies'",
        "'dependencies'",
        "b'galaxy.yml'",
        "'wb'",
        "'surrogate_or_strict'",
        "'%s-%s-%s.tar.gz'",
        "'namespace'",
        "'name'",
        "'version'",
        "'ansible-galaxy'",
        "'collection'",
        "'build'",
        "'ansible-galaxy'",
        "'collection'",
        "'publish'",
        "'--server'",
        "'server'",
        "'--token'",
        "'token'",
        "'collections'",
        "'--no-wait'",
        "'__main__'"
    ],
    "variables": [
        "__metaclass__",
        "ANSIBLE_METADATA",
        "DOCUMENTATION",
        "EXAMPLES",
        "RETURN",
        "module_args",
        "result",
        "collection_dir",
        "b_collection_dir",
        "galaxy_meta",
        "release_filename",
        "collection_path",
        "publish_args"
    ],
    "comments": [
        "!/usr/bin/python",
        "Copyright: (c) 2020, Ansible Project",
        "GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)",
        "To save on time, skip the import wait until the last collection is being uploaded."
    ],
    "docstrings": [
        "'''\n---\nmodule: setup_collections\nshort_description: Set up test collections based on the input\ndescription:\n- Builds and publishes a whole bunch of collections used for testing in bulk.\noptions:\n  server:\n    description:\n    - The Galaxy server to upload the collections to.\n    required: yes\n    type: str\n  token:\n    description:\n    - The token used to authenticate with the Galaxy server.\n    required: yes\n    type: str\n  collections:\n    description:\n    - A list of collection details to use for the build.\n    required: yes\n    type: list\n    elements: dict\n    options:\n      namespace:\n        description:\n        - The namespace of the collection.\n        required: yes\n        type: str\n      name:\n        description:\n        - The name of the collection.\n        required: yes\n        type: str\n      version:\n        description:\n        - The version of the collection.\n        type: str\n        default: '1.0.0'\n      dependencies:\n        description:\n        - The dependencies of the collection.\n        type: dict\n        default: '{}'\nauthor:\n- Jordan Borean (@jborean93)\n'''",
        "'''\n- name: Build test collections\n  setup_collections:\n    path: ~/ansible/collections/ansible_collections\n    collections:\n    - namespace: namespace1\n      name: name1\n      version: 0.0.1\n    - namespace: namespace1\n      name: name1\n      version: 0.0.2\n'''",
        "'''\n#\n'''"
    ],
    "functions": [
        "run_module",
        "main"
    ],
    "classes": []
}