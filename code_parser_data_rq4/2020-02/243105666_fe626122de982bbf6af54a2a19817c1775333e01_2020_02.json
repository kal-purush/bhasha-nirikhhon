{
    "identifiers": [
        "numpy",
        "np",
        "pandas",
        "pd",
        "shapely",
        "geometry",
        "pyproj",
        "shapely",
        "geometry",
        "Point",
        "datetime",
        "cols",
        "rows",
        "side_length",
        "p_from",
        "p_to",
        "cols",
        "rows",
        "side_length",
        "p_from",
        "p_to",
        "side_length",
        "model_1km",
        "side_length",
        "model_2point5km",
        "model_5km",
        "side_length",
        "row",
        "col",
        "row",
        "len",
        "rows",
        "col",
        "node",
        "node",
        "len",
        "rows",
        "node",
        "row",
        "len",
        "rows",
        "row",
        "col",
        "node",
        "node",
        "len",
        "rows",
        "node",
        "row",
        "len",
        "rows",
        "pyproj",
        "transform",
        "p_to",
        "p_from",
        "cols",
        "col",
        "side_length",
        "rows",
        "row",
        "side_length",
        "p",
        "p",
        "row",
        "col",
        "i",
        "j",
        "i",
        "j",
        "col",
        "j",
        "row",
        "i",
        "col",
        "j",
        "len",
        "cols",
        "row",
        "i",
        "len",
        "rows",
        "neighbours",
        "append",
        "row",
        "i",
        "col",
        "j",
        "neighbours",
        "row",
        "col",
        "i",
        "j",
        "index",
        "neighbor_model",
        "index",
        "i",
        "index",
        "j",
        "col",
        "y",
        "row",
        "x",
        "col",
        "y",
        "len",
        "cols",
        "row",
        "x",
        "len",
        "rows",
        "neighbours",
        "append",
        "row",
        "x",
        "col",
        "y",
        "neighbours",
        "row",
        "col",
        "i",
        "j",
        "index",
        "neighbor_model",
        "index",
        "i",
        "index",
        "j",
        "col",
        "y",
        "row",
        "x",
        "col",
        "y",
        "len",
        "cols",
        "row",
        "x",
        "len",
        "rows",
        "neighbours",
        "append",
        "get_node_index",
        "row",
        "x",
        "col",
        "y",
        "neighbours",
        "row",
        "get_node_index",
        "np",
        "searchsorted",
        "rows",
        "row",
        "np",
        "searchsorted",
        "cols",
        "row",
        "lat",
        "lon",
        "pyproj",
        "transform",
        "p_from",
        "p_to",
        "lon",
        "lat",
        "north_east",
        "shapely",
        "geometry",
        "Point",
        "south_west",
        "shapely",
        "geometry",
        "Point",
        "side_length",
        "proj_from",
        "proj_to",
        "pyproj",
        "Proj",
        "init",
        "proj_from",
        "pyproj",
        "Proj",
        "init",
        "proj_to",
        "north_east",
        "south_west",
        "pyproj",
        "transform",
        "p_from",
        "p_to",
        "north_east",
        "x",
        "north_east",
        "y",
        "pyproj",
        "transform",
        "p_from",
        "p_to",
        "south_west",
        "x",
        "south_west",
        "y",
        "ne",
        "sw",
        "ne",
        "sw",
        "side_length",
        "ne",
        "sw",
        "side_length",
        "col_count",
        "row_count",
        "np",
        "linspace",
        "sw",
        "ne",
        "num",
        "col_count",
        "np",
        "linspace",
        "sw",
        "ne",
        "num",
        "row_count",
        "col_count",
        "row_count",
        "Grid",
        "cols",
        "rows",
        "side_length",
        "p_from",
        "p_to",
        "node",
        "types",
        "ais",
        "grid",
        "grid",
        "extract_coords",
        "node",
        "types",
        "pos",
        "ais",
        "ais",
        "grid_pos",
        "grid_pos",
        "ais",
        "vessel_type",
        "speed",
        "mean",
        "node_avg_speeds",
        "ais",
        "ais",
        "vessel_type",
        "drop_duplicates",
        "reset_index",
        "drop",
        "values",
        "ais",
        "original",
        "drop_duplicates",
        "to_frame",
        "reset_index",
        "drop",
        "nodes",
        "apply",
        "row",
        "get_node_avg_speeds",
        "row",
        "types",
        "ais",
        "nodes",
        "ais",
        "ais",
        "ais",
        "groupby",
        "node",
        "group",
        "groups",
        "group",
        "groupby",
        "vessel_type",
        "positions",
        "types",
        "positions",
        "speed",
        "mean",
        "node_avg_speeds",
        "avg_speeds_arr",
        "append",
        "node",
        "node_avg_speeds",
        "pd",
        "DataFrame",
        "avg_speeds",
        "grid",
        "adjacent",
        "row",
        "len",
        "grid",
        "rows",
        "col",
        "len",
        "grid",
        "cols",
        "grid",
        "get_node_index",
        "row",
        "col",
        "adjacent",
        "grid",
        "get_neighbours_adjacent",
        "row",
        "col",
        "grid",
        "get_neighbours_with_maneuvaribility",
        "row",
        "col",
        "n",
        "neighbours",
        "grid",
        "get_node_index",
        "n",
        "n",
        "graph",
        "append",
        "node",
        "connected",
        "graph",
        "grid",
        "adjacent",
        "exclude_geom",
        "row",
        "len",
        "grid",
        "rows",
        "col",
        "len",
        "grid",
        "cols",
        "shapely",
        "geometry",
        "Point",
        "pyproj",
        "transform",
        "grid",
        "p_to",
        "grid",
        "p_from",
        "grid",
        "cols",
        "col",
        "grid",
        "rows",
        "row",
        "shapely",
        "geometry",
        "Point",
        "pyproj",
        "transform",
        "grid",
        "p_to",
        "grid",
        "p_from",
        "grid",
        "cols",
        "col",
        "grid",
        "side_length",
        "grid",
        "rows",
        "row",
        "shapely",
        "geometry",
        "Point",
        "pyproj",
        "transform",
        "grid",
        "p_to",
        "grid",
        "p_from",
        "grid",
        "cols",
        "col",
        "grid",
        "rows",
        "row",
        "grid",
        "side_length",
        "shapely",
        "geometry",
        "Point",
        "pyproj",
        "transform",
        "grid",
        "p_to",
        "grid",
        "p_from",
        "grid",
        "cols",
        "col",
        "grid",
        "side_length",
        "grid",
        "rows",
        "row",
        "grid",
        "side_length",
        "sw",
        "se",
        "ne",
        "nw",
        "shapely",
        "geometry",
        "Polygon",
        "p",
        "x",
        "p",
        "y",
        "p",
        "pointlist",
        "exclude_geom",
        "exclude_geom",
        "contains",
        "cell",
        "grid",
        "get_node_index",
        "row",
        "col",
        "adjacent",
        "grid",
        "get_neighbours_adjacent",
        "row",
        "col",
        "grid",
        "get_neighbours_with_maneuvaribility",
        "row",
        "col",
        "n",
        "neighbours",
        "grid",
        "get_node_index",
        "n",
        "n",
        "graph",
        "append",
        "node",
        "connected",
        "graph",
        "ports",
        "row",
        "ports",
        "loc",
        "row",
        "port_id",
        "lat",
        "ports",
        "row",
        "ports",
        "loc",
        "row",
        "port_id",
        "lon",
        "vessels",
        "row",
        "vessels",
        "loc",
        "row",
        "mmsi",
        "vessel_type",
        "port_areas",
        "row",
        "area",
        "port_areas",
        "Point",
        "row",
        "port_lon",
        "row",
        "port_lat",
        "area",
        "contains",
        "p",
        "i",
        "i",
        "ais",
        "ais",
        "reset_index",
        "drop",
        "ais",
        "sort_values",
        "by",
        "ais",
        "groupby",
        "mmsi",
        "observations",
        "observations_by_vessels",
        "observations",
        "head",
        "iloc",
        "node",
        "i",
        "obs",
        "observations",
        "iterrows",
        "prev_node",
        "obs",
        "node",
        "prev_node",
        "obs",
        "node",
        "graph",
        "append",
        "node_row",
        "obs",
        "node",
        "graph",
        "grid",
        "ais",
        "minutes_forward",
        "ais",
        "reset_index",
        "drop",
        "ais",
        "sort_values",
        "by",
        "ais",
        "groupby",
        "mmsi",
        "observations",
        "observations_by_vessels",
        "observations",
        "set_index",
        "i",
        "obs",
        "observations",
        "iterrows",
        "node",
        "obs",
        "node",
        "obs",
        "node",
        "grid",
        "extract_coords",
        "node",
        "grid",
        "get_neighbours_nodes_with_maneuvaribility",
        "coords",
        "coords",
        "pd",
        "to_datetime",
        "obs",
        "name",
        "observations",
        "loc",
        "obs",
        "name",
        "pd",
        "Timestamp",
        "obs_time",
        "datetime",
        "timedelta",
        "minutes",
        "minutes_forward",
        "time_window",
        "node",
        "unique",
        "future_nodes",
        "neighbor",
        "neighbors",
        "neighbor",
        "future_nodes_set",
        "graph",
        "append",
        "node",
        "neighbor",
        "graph",
        "sea_graph",
        "traffic_graph",
        "traffic_graph",
        "groupby",
        "size",
        "weight_graph",
        "to_frame",
        "reset_index",
        "weight_graph",
        "set_index",
        "weight_graph",
        "occurences",
        "max",
        "sea_graph",
        "apply",
        "get_normal_weights",
        "args",
        "weight_graph",
        "max_occ",
        "axis",
        "sea_graph",
        "weight",
        "max",
        "sea_graph",
        "apply",
        "row",
        "row",
        "weight",
        "max_weight",
        "axis",
        "sea_graph",
        "row",
        "weight_graph",
        "max_occ",
        "max_occ",
        "max_occ",
        "weight_graph",
        "loc",
        "row",
        "original",
        "row",
        "connected",
        "weight",
        "max_weight"
    ],
    "literals": [
        "'side_length:'",
        "'grid_point'",
        "'grid_point'",
        "'epsg:4326'",
        "'EPSG:3067'",
        "'Original NE:'",
        "'Original SW:'",
        "'Transformed NE:'",
        "'Transformed SW:'",
        "'col_count'",
        "'row_count'",
        "'grid_size'",
        "'col'",
        "'row'",
        "'avg_speeds'",
        "'vessel_type'",
        "'node'",
        "'speed'",
        "'node'",
        "'vessel_type'",
        "'mmsi'",
        "'timestamp'",
        "'mmsi'",
        "'mmsi'",
        "'timestamp'",
        "'mmsi'",
        "'timestamp'",
        "'original'",
        "'connected'",
        "'original'",
        "'connected'",
        "'occurences'",
        "'original'",
        "'connected'",
        "'weight'",
        "'Weights calculated'",
        "'cost'",
        "'Costs calculated'",
        "'occurences'"
    ],
    "variables": [
        "cols",
        "rows",
        "side_length",
        "p_from",
        "p_to",
        "model_1km",
        "model_2point5km",
        "model_5km",
        "neighbor_model",
        "neighbor_model",
        "neighbor_model",
        "row",
        "col",
        "row",
        "col",
        "p",
        "neighbours",
        "neighbours",
        "x",
        "y",
        "neighbours",
        "x",
        "y",
        "nodes",
        "p_from",
        "p_to",
        "ne",
        "sw",
        "col_count",
        "row_count",
        "cols",
        "rows",
        "pos",
        "node_avg_speeds",
        "grid_pos",
        "node_avg_speeds",
        "types",
        "nodes",
        "nodes",
        "ais",
        "groups",
        "avg_speeds",
        "avg_speeds_arr",
        "node_avg_speeds",
        "types",
        "node_avg_speeds",
        "vessel_type",
        "avg_speeds",
        "node",
        "graph",
        "node",
        "neighbours",
        "neighbours",
        "connected",
        "graph",
        "sw",
        "se",
        "nw",
        "ne",
        "pointlist",
        "cell",
        "node",
        "neighbours",
        "neighbours",
        "connected",
        "i",
        "p",
        "ais",
        "ais",
        "observations_by_vessels",
        "graph",
        "prev_node",
        "node_row",
        "prev_node",
        "ais",
        "ais",
        "observations_by_vessels",
        "graph",
        "observations",
        "node",
        "node",
        "coords",
        "neighbors",
        "obs_time",
        "time_window",
        "future_nodes",
        "future_nodes_set",
        "weight_graph",
        "weight_graph",
        "weight_graph",
        "columns",
        "weight_graph",
        "max_occ",
        "sea_graph",
        "max_weight",
        "sea_graph",
        "max_weight",
        "weight"
    ],
    "comments": [
        "Code and decode (row, col) pairs into integers, to represent the index of the node in graph",
        "Decode node index back to (row, col) pair",
        "Decode node index back to (lat, lon) pair",
        "p = pyproj.transform(self.p_to, self.p_from, self.cols[col-1] + self.side_length/2, self.rows[row-1] + self.side_length/2)",
        "https://ieeexplore-ieee-org.libproxy.tuni.fi/mediastore_new/IEEE/content/media/6845395/6851348/6851512/6851512-fig-2-source-large.gif",
        "https://ieeexplore-ieee-org.libproxy.tuni.fi/mediastore_new/IEEE/content/media/6845395/6851348/6851512/6851512-fig-2-source-large.gif",
        "return {",
        "'col': np.searchsorted(self.cols, row['grid_point'][0]),",
        "'row': np.searchsorted(self.rows, row['grid_point'][1])",
        "}",
        "Set up projections",
        "http://epsg.io/3067 #epsg:3857 metric; same as EPSG:900913",
        "Create corners of rectangle to be transformed to a grid",
        "Project corners to projection that is metric",
        "Transform NW point to 3067",
        ".. same for SE",
        "Create grid cols and rows",
        "Connect all the neighbour nodes in grid",
        "Connect all the neighbour nodes in grid",
        "Create point from col and row",
        "Function for calculating weights for the graph. Could be improved a lot."
    ],
    "docstrings": [],
    "functions": [
        "print_parameters",
        "get_node_index",
        "extract_coords",
        "extract_coords_lat_lon",
        "get_neighbours_adjacent",
        "get_neighbours_with_maneuvaribility",
        "get_neighbours_nodes_with_maneuvaribility",
        "get_grid_position",
        "get_grid_point",
        "area_to_grid",
        "get_node_avg_speeds",
        "get_avg_speeds_wo_graph",
        "get_avg_speeds",
        "create_area_graph",
        "create_sea_graph",
        "get_port_lat",
        "get_port_lon",
        "get_vessel_type",
        "get_port_area",
        "create_graph_from_ais_adjacent",
        "create_graph_from_ais_maneuvaribility",
        "calculate_transition_cost",
        "get_normal_weights"
    ],
    "classes": [
        "Grid",
        "Graph"
    ]
}