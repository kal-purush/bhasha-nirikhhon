{
    "identifiers": [
        "Microsoft",
        "Build",
        "Construction",
        "Shouldly",
        "IO",
        "Xunit",
        "Microsoft",
        "SlnGen",
        "UnitTests",
        "TestBase",
        "Fact",
        "Skip",
        "Fact",
        "SlnProject",
        "FullPath",
        "GetTempFileName",
        "Name",
        "ProjectGuid",
        "Guid",
        "ProjectTypeGuid",
        "Guid",
        "IsMainProject",
        "SlnProject",
        "FullPath",
        "GetTempFileName",
        "Name",
        "ProjectGuid",
        "Guid",
        "ProjectTypeGuid",
        "Guid",
        "ValidateProjectInSolution",
        "projectA",
        "projectB",
        "Fact",
        "SlnProject",
        "SlnProject",
        "FullPath",
        "GetTempFileName",
        "Name",
        "ProjectGuid",
        "Guid",
        "ProjectTypeGuid",
        "Guid",
        "IsMainProject",
        "SlnProject",
        "FullPath",
        "GetTempFileName",
        "Name",
        "ProjectGuid",
        "Guid",
        "ProjectTypeGuid",
        "Guid",
        "SlnProject",
        "FullPath",
        "GetTempFileName",
        "Name",
        "ProjectGuid",
        "Guid",
        "ProjectTypeGuid",
        "Guid",
        "ValidateProjectInSolution",
        "slnProject",
        "projectInSolution",
        "projectInSolution",
        "ParentProjectGuid",
        "ShouldBe",
        "projects",
        "Fact",
        "DirectoryInfo",
        "Path",
        "Combine",
        "TestRootPath",
        "directoryInfo",
        "Exists",
        "ShouldBeFalse",
        "Path",
        "Combine",
        "directoryInfo",
        "FullName",
        "Path",
        "GetRandomFileName",
        "SlnFile",
        "slnFile",
        "Save",
        "fullPath",
        "useFolders",
        "File",
        "Exists",
        "fullPath",
        "ShouldBeTrue",
        "Fact",
        "SlnProject",
        "FullPath",
        "GetTempFileName",
        "Name",
        "ProjectGuid",
        "Guid",
        "ProjectTypeGuid",
        "Guid",
        "IsMainProject",
        "ValidateProjectInSolution",
        "projectA",
        "Fact",
        "SlnProject",
        "SlnProject",
        "FullPath",
        "GetTempFileName",
        "Name",
        "ProjectGuid",
        "Guid",
        "ProjectTypeGuid",
        "Guid",
        "IsMainProject",
        "SlnProject",
        "FullPath",
        "GetTempFileName",
        "Name",
        "ProjectGuid",
        "Guid",
        "ProjectTypeGuid",
        "Guid",
        "IsMainProject",
        "SlnProject",
        "FullPath",
        "GetTempFileName",
        "Name",
        "ProjectGuid",
        "Guid",
        "ProjectTypeGuid",
        "Guid",
        "IsMainProject",
        "Action",
        "SlnProject",
        "slnProject",
        "ProjectInSolution",
        "projectInSolution",
        "slnProject",
        "IsMainProject",
        "projectInSolution",
        "ParentProjectGuid",
        "ShouldBeNull",
        "projectInSolution",
        "ParentProjectGuid",
        "ShouldNotBeNull",
        "ValidateProjectInSolution",
        "Action",
        "projects",
        "Action",
        "SlnProject",
        "ProjectInSolution",
        "customValidator",
        "SlnProject",
        "projects",
        "folders",
        "GetTempFileName",
        "SlnFile",
        "slnFile",
        "AddProjects",
        "projects",
        "slnFile",
        "Save",
        "solutionFilePath",
        "folders",
        "SolutionFile",
        "Parse",
        "solutionFilePath",
        "SlnProject",
        "slnProject",
        "projects",
        "solutionFile",
        "ProjectsByGuid",
        "ContainsKey",
        "slnProject",
        "ProjectGuid",
        "ToSolutionString",
        "ShouldBeTrue",
        "solutionFile",
        "ProjectsByGuid",
        "slnProject",
        "ProjectGuid",
        "ToSolutionString",
        "projectInSolution",
        "AbsolutePath",
        "ShouldBe",
        "slnProject",
        "FullPath",
        "projectInSolution",
        "ProjectGuid",
        "ShouldBe",
        "slnProject",
        "ProjectGuid",
        "ToSolutionString",
        "projectInSolution",
        "ProjectName",
        "ShouldBe",
        "slnProject",
        "Name",
        "customValidator",
        "Invoke",
        "slnProject",
        "projectInSolution",
        "SlnProject",
        "projects",
        "ValidateProjectInSolution",
        "projects"
    ],
    "literals": [
        "\"Disabling for now, will fix platforms and configurations in future commit\"",
        "\"ProjectA\"",
        "\"C95D800E-F016-4167-8E1B-1D3FF94CE2E2\"",
        "\"88152E7E-47E3-45C8-B5D3-DDB15B2F0435\"",
        "\"ProjectB\"",
        "\"EAD108BE-AC70-41E6-A8C3-450C545FDC0E\"",
        "\"F38341C3-343F-421A-AE68-94CD9ADCD32F\"",
        "\"ProjectA\"",
        "\"C95D800E-F016-4167-8E1B-1D3FF94CE2E2\"",
        "\"88152E7E-47E3-45C8-B5D3-DDB15B2F0435\"",
        "\"ProjectB\"",
        "\"EAD108BE-AC70-41E6-A8C3-450C545FDC0E\"",
        "\"F38341C3-343F-421A-AE68-94CD9ADCD32F\"",
        "\"ProjectC\"",
        "\"EDD837F8-48ED-45E1-BC77-6387EC6466AC\"",
        "\"7C203CD8-314C-4358-AD5C-66152E899EAF\"",
        "\"1\"",
        "\"2\"",
        "\"3\"",
        "\"ProjectA\"",
        "\"C95D800E-F016-4167-8E1B-1D3FF94CE2E2\"",
        "\"88152E7E-47E3-45C8-B5D3-DDB15B2F0435\"",
        "\"ProjectA\"",
        "\"C95D800E-F016-4167-8E1B-1D3FF94CE2E2\"",
        "\"88152E7E-47E3-45C8-B5D3-DDB15B2F0435\"",
        "\"ProjectB\"",
        "\"F3CEBCAB-98E5-4041-84DB-033C9682F340\"",
        "\"EEC9AD2B-9B7E-4581-864E-76A2BB607C3F\"",
        "\"ProjectC\"",
        "\"0079D674-EC4D-4D09-9C4E-699D0D1B0F72\"",
        "\"7717E4E9-5443-401B-A964-55727AF96E0C\""
    ],
    "variables": [
        "SlnProject",
        "projectA",
        "SlnProject",
        "projectB",
        "projects",
        "DirectoryInfo",
        "directoryInfo",
        "fullPath",
        "SlnFile",
        "slnFile",
        "SlnProject",
        "projectA",
        "projects",
        "solutionFilePath",
        "SlnFile",
        "slnFile",
        "SolutionFile",
        "solutionFile",
        "ProjectInSolution",
        "projectInSolution"
    ],
    "comments": [
        "Copyright (c) Microsoft Corporation.",
        "",
        "Licensed under the MIT license.",
        "const int projectCount = 1000;\n\n            SlnProject[] projects = new SlnProject[projectCount];\n\n            string[] configurations = { \"Debug\", \"Release\" };\n            string[] platforms = { \"x64\", \"x86\", \"Any CPU\", \"amd64\" };\n\n            Random randomGenerator = new Random(Guid.NewGuid().GetHashCode());\n\n            for (int i = 0; i < projectCount; i++)\n            {\n                // pick random and shuffled configurations and platforms\n                List<string> projectConfigurations = configurations.OrderBy(a => Guid.NewGuid()).Take(randomGenerator.Next(1, configurations.Length)).ToList();\n                List<string> projectPlatforms = platforms.OrderBy(a => Guid.NewGuid()).Take(randomGenerator.Next(1, platforms.Length)).ToList();\n                projects[i] = new SlnProject(\n                    GetTempFileName(), $\"Project{i:D6}\", Guid.NewGuid(), Guid.NewGuid(), projectConfigurations, projectPlatforms, isMainProject: i == 0, isDeployable: false);\n            }\n\n            ValidateProjectInSolution(projects);"
    ],
    "docstrings": [],
    "functions": [
        "LotsOfProjects",
        "MultipleProjects",
        "NoFolders",
        "SaveToCustomLocationCreatesDirectory",
        "SingleProject",
        "WithFolders",
        "ValidateProjectInSolution",
        "ValidateProjectInSolution"
    ],
    "classes": [
        "SlnFileTests"
    ]
}