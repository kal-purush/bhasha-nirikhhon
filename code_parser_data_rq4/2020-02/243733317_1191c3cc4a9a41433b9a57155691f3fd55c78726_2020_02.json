{
    "identifiers": [
        "pickle",
        "os",
        "yaml",
        "typing",
        "Iterator",
        "Dict",
        "exclution_vars",
        "var_prefix",
        "store_path",
        "config_path",
        "exclution_vars",
        "var_prefix",
        "store_path",
        "config_path",
        "_configure",
        "open",
        "config_path",
        "conf",
        "yaml",
        "safe_load",
        "conf",
        "exclution_vars",
        "_config",
        "context",
        "Iterator",
        "context",
        "keys",
        "copy",
        "variable_names",
        "exclution_vars",
        "startswith",
        "var_prefix",
        "variable_value",
        "variable_name",
        "context",
        "silent",
        "_do_name_filter",
        "context",
        "variable_name",
        "vars_for_save",
        "context",
        "variable_name",
        "_do_save_type",
        "variable_value",
        "_save",
        "save_type",
        "variable_name",
        "variable_value",
        "silent",
        "len",
        "vars_for_save",
        "save_type",
        "variable_name",
        "variable_value",
        "variable_name",
        "save_type",
        "save_type",
        "_save_pickle",
        "variable_value",
        "new_variable_name",
        "silent",
        "Dict",
        "var_path",
        "os",
        "listdir",
        "store_path",
        "_do_load_type",
        "var_path",
        "var_path",
        "split",
        "variable_name",
        "split",
        "_load",
        "load_type",
        "new_variable_name",
        "var_path",
        "silent",
        "len",
        "loaded_vars",
        "loaded_vars",
        "load_type",
        "variable_name",
        "variable_path",
        "load_type",
        "_load_pickle",
        "variable_name",
        "variable_path",
        "context",
        "silent",
        "_do_name_filter",
        "context",
        "silent",
        "len",
        "list_vars",
        "list_vars",
        "vars",
        "silent",
        "exclution_vars",
        "vars",
        "silent",
        "len",
        "exclution_vars",
        "vars",
        "silent",
        "exclution_vars",
        "vars",
        "silent",
        "len",
        "exclution_vars",
        "exclution_vars",
        "name",
        "os",
        "path",
        "exists",
        "store_path",
        "os",
        "makedirs",
        "store_path",
        "pickle",
        "dump",
        "open",
        "store_path",
        "name",
        "variable_name",
        "variable_path",
        "pickle",
        "load",
        "open",
        "store_path",
        "variable_path"
    ],
    "literals": [
        "'gv'",
        "\"env/\"",
        "'pickler/config.yaml'",
        "'r'",
        "'exclution_vars'",
        "'pickle'",
        "'pickle'",
        "f\"Saved {len(vars_for_save)} variables.\"",
        "f\"{variable_name}_{save_type}\"",
        "\"pickle\"",
        "'.'",
        "\"_\"",
        "f\"Loaded {len(loaded_vars)} variables.\"",
        "\"pickle\"",
        "f\"Variables Count: {len(list_vars)}\"",
        "f\"Exclution vars: {len(self.exclution_vars)}\"",
        "f\"Exclution vars: {len(self.exclution_vars)}\"",
        "f\"{self.store_path}{name}{'.pkl'}\"",
        "'.pkl'",
        "\"wb\"",
        "f\"{self.store_path}{variable_path}\"",
        "\"rb\""
    ],
    "variables": [
        "exclution_vars",
        "var_prefix",
        "store_path",
        "config_path",
        "_config",
        "exclution_vars",
        "variable_names",
        "vars_for_save",
        "variable_value",
        "save_type",
        "new_variable_name",
        "loaded_vars",
        "load_type",
        "variable_name",
        "new_variable_name",
        "loaded_vars",
        "new_variable_name",
        "list_vars",
        "exclution_vars",
        "exclution_vars"
    ],
    "comments": [
        "Переменные, которые нужно исключить их снхронизации",
        "Префикс имени переменной которая будет синхронизирована",
        "Путь хранения переменных",
        "Путь к файлу конфигурации",
        "зпускает конфигурирование Pickler",
        "Переменные для исключения из сохранения",
        "Проходим по глобальным переменным и выбираем переменные с префиксом",
        "Если переменная не в списке исклбчения",
        "Если переменная содержит префикс",
        "Выберем переменные для сохранения",
        "Извлекаем значение переменной",
        "Определяем тип переменной",
        "Сохраняем переменную",
        "Новое имя для переменной",
        "Новое имя для переменной"
    ],
    "docstrings": [
        "\"\"\"\n    Описывает класс обмена переменными между облаком (Colab) и локальной машиной\n    \"\"\"",
        "\"\"\"\n        Загрузка конфигурации\n        :return: None\n        \"\"\"",
        "\"\"\"\n        Фильтр переменных для сохранения\n        :param context: object\n            Область переменных\n        :return: Iterator[str]\n            Итератор имен переменных\n        \"\"\"",
        "\"\"\"\n        Сохраняет переменные\n        :param context: object\n            Область переменных\n        :param silent: bool\n            Оповещение о результате выполнения\n        :return: None\n        \"\"\"",
        "\"\"\"\n            Сохраняет переменные\n        :param save_type: str\n            Тип переменной для сохранения\n        :param variable_name: str\n            Имя переменной\n        :param variable_value:\n            Значение переменной\n        :return:\n        \"\"\"",
        "\"\"\"\n        Восстановление переменных\n        :param silent: bool\n            Оповещение о выполнении операции\n        :return: Dict[str, object]\n            Словарь с восстановленными переменными\n        \"\"\"",
        "\"\"\"\n        Восстанавливает переменную из файла\n        :param load_type: str\n            Тип сохраненной переменной(извлекается из имени файла)\n        :param variable_name: str\n             Имя переменной\n        :param variable_path: str\n            Путь к переменной\n        :return: object\n            Объект загруженной переменной\n        \"\"\"",
        "\"\"\"\n        Возвращает список переменных которые будут сериализованы\n        :param context: object\n            Область переменных\n        :param silent: bool\n            Оповещение о результате выполнения\n        :return:\n        \"\"\"",
        "\"\"\"\n        Добавить переменные в список исключения\n        :param vars: List[str]\n            Список переменных\n        :param silent: bool\n            Оповещение о результате выполнения\n        :return:\n        \"\"\"",
        "\"\"\"\n        Удалить переменные из списка исключения\n        :param vars: List[str]\n            Список переменных\n        :param silent: bool\n            Оповещение о результате выполнения\n        :return:\n        \"\"\"",
        "\"\"\"\n        Показывает список переменных для исключения\n        :return: List[str]\n            Список переменных\n        \"\"\"",
        "\"\"\"\n        Сохраняет переменную в pickle файл\n        :param var: object\n            Переменная\n        :param name: str\n            Имя переменной\n        :return: None\n        \"\"\"",
        "\"\"\"\n        Восстанавливает переменную из файла pickle\n        :param variable_name: str\n            Имя переменной\n        :param variable_path: str\n            Путь к переменной\n        :return: object\n            Объект переменной\n        \"\"\""
    ],
    "functions": [
        "_configure",
        "_do_name_filter",
        "_do_save_type",
        "_do_load_type",
        "save",
        "_save",
        "load",
        "_load",
        "get_variables",
        "add_exclution_vars",
        "remove_from_exclution",
        "show_exclution_vars",
        "_save_pickle",
        "_load_pickle"
    ],
    "classes": [
        "Pickler"
    ]
}