{
    "identifiers": [
        "args",
        "args",
        "EMPTY_FN",
        "obj",
        "propertyName",
        "obj",
        "propertyName",
        "obj",
        "obj",
        "propertyName",
        "target",
        "thisArg",
        "argArray",
        "target",
        "target",
        "target",
        "target",
        "thisArg",
        "argArray",
        "Target",
        "argArray",
        "Target",
        "Target",
        "Target",
        "Target",
        "argArray",
        "value",
        "UNWAIT_PROMISE_VALUE",
        "value",
        "promise",
        "res",
        "promise",
        "UNWAIT_PROMISE_VALUE",
        "res",
        "promise",
        "target",
        "parent",
        "cache",
        "target",
        "cache",
        "target",
        "wrapPromise",
        "target",
        "_",
        "argArray",
        "_unwait",
        "promise",
        "res",
        "construct",
        "res",
        "argArray",
        "_",
        "key",
        "key",
        "IS_UNWAIT_PROXY_SYMBOL",
        "key",
        "promise",
        "promise",
        "key",
        "property",
        "property",
        "promise",
        "property",
        "promise",
        "UNWAIT_PROMISE_VALUE",
        "_unwait",
        "accessProperty",
        "promise",
        "UNWAIT_PROMISE_VALUE",
        "key",
        "promise",
        "_unwait",
        "promise",
        "res",
        "accessProperty",
        "res",
        "key",
        "promise",
        "_",
        "thisArg",
        "argArray",
        "thisArg",
        "thisArg",
        "IS_UNWAIT_PROXY_SYMBOL",
        "thisArg",
        "parent",
        "thisArg",
        "result",
        "promise",
        "UNWAIT_PROMISE_VALUE",
        "parent",
        "parentThis",
        "apply",
        "promise",
        "UNWAIT_PROMISE_VALUE",
        "parentThis",
        "argArray",
        "promise",
        "parent",
        "apply",
        "res",
        "parentThis",
        "argArray",
        "result",
        "promise",
        "UNWAIT_PROMISE_VALUE",
        "apply",
        "promise",
        "UNWAIT_PROMISE_VALUE",
        "thisArg",
        "argArray",
        "promise",
        "res",
        "apply",
        "res",
        "thisArg",
        "argArray",
        "_unwait",
        "result",
        "promise",
        "Proxy",
        "EMPTY_FN",
        "asyncProxyHandler",
        "promise",
        "wrapPromise",
        "promise",
        "res",
        "res",
        "res",
        "cache",
        "res",
        "proxy",
        "res",
        "proxy",
        "target",
        "_unwait",
        "target",
        "unwait"
    ],
    "literals": [
        "\"IS_UNWAIT_PROXY_SYMBOL\"",
        "\"UNWAIT_PROMISE_VALUE\"",
        "string",
        "Cannot access property ${propertyName.toString()} of ${obj}",
        "\"function\"",
        "${target} is not a function",
        "${Target} is not a constructor",
        "\"function\"",
        "\"object\"",
        "\"function\""
    ],
    "variables": [
        "EMPTY_FN",
        "IS_UNWAIT_PROXY_SYMBOL",
        "UNWAIT_PROMISE_VALUE",
        "cache",
        "promise",
        "promise",
        "asyncProxyHandler",
        "property",
        "result",
        "res",
        "parentThis",
        "proxy"
    ],
    "comments": [
        "tslint:disable-next-line: no-empty",
        "provide a way to determine if a value is an unwait proxy",
        "promise methods and properties should remain unchanged",
        "prefer using resolved value to allow cache lookup",
        "patch the thisArg to be the parent unless specified",
        "prefer using resolved value to allow cache lookup",
        "prefer using resolved value to allow cache lookup"
    ],
    "docstrings": [
        "* Helper to wrap a promise and expose it's value synchronously when resolved",
        "* Internal unwait implementation\n * @param target the target to proxy\n * @param parent Provides the correct `this` context to wrapped child methods",
        "* Creates a proxy that defers all property and function access until it's target result has resolved.\n *\n * The target, and any of it's properties and method results can be called immediately,\n * and will return a proxied promise of the result when all promises in the chain resolve.\n * @param target The target to proxy."
    ],
    "functions": [
        "accessProperty",
        "apply",
        "construct",
        "wrapPromise",
        "_unwait",
        "construct",
        "get",
        "apply",
        "unwait"
    ],
    "classes": []
}