{
    "identifiers": [
        "requests",
        "matplotlib",
        "pyplot",
        "plt",
        "pandas",
        "pd",
        "numpy",
        "np",
        "seaborn",
        "sns",
        "json",
        "espn_api",
        "football",
        "League",
        "espn_api",
        "football",
        "Matchup",
        "year",
        "year",
        "league_id",
        "year",
        "league_id",
        "league_id",
        "year",
        "league_id",
        "year",
        "requests",
        "get",
        "league_matchup_url",
        "cookies",
        "swid",
        "espn_s2",
        "r",
        "json",
        "game",
        "d",
        "game",
        "df",
        "append",
        "game",
        "game",
        "game",
        "game",
        "game",
        "df",
        "append",
        "game",
        "game",
        "game",
        "pd",
        "DataFrame",
        "df",
        "columns",
        "w",
        "w",
        "df2",
        "df2",
        "League",
        "league_id",
        "league_id",
        "year",
        "year",
        "espn_s2",
        "espn_s2",
        "swid",
        "swid",
        "Matchup",
        "matchup",
        "matchup",
        "d",
        "league",
        "standings",
        "league",
        "top_scorer",
        "league",
        "least_scorer",
        "league",
        "most_points_against",
        "league",
        "top_scored_week",
        "league",
        "least_scored_week",
        "league",
        "box_scores",
        "league",
        "scoreboard"
    ],
    "literals": [
        "\"{2B58A570-7F1A-4E00-8A28-BB8722A843BF}\"",
        "\"AECKzk8JH%2BOWbkdA4%2FYwyJbd4c8%2F4qgLqfpkWpcTHPYSOKz4dYdN%2Bu0m3%2BghPGqOMmKK59l%2FRPrfp%2Bk9QPOANaeYzO2nWn%2B1cZDxW7h5EQrUsVrUsJx947DKRiXb01%2BBrl3jYcHYA444QUtg%2B%2BRvIeH9mGv2GllxQoTtyuEzC1KGAnK%2Bo%2BrEYXeIB%2B3s%2F8o7MmqmZ5FEhln8YBXmv2hhi8YbUGpsKdxvF9VI5WiIVPnH4ijF80NpM8wqUnG5m35sjGAm2GTnmG4ftrvi6b0C5NlN\"",
        "\"https://fantasy.espn.com/apis/v3/games/ffl/seasons/\"",
        "\"/segments/0/leagues/\"",
        "\"https://fantasy.espn.com/apis/v3/games/ffl/seasons/\"",
        "\"/segments/0/leagues/\"",
        "\"?view=mTeam&view=mRoster&view=mMatchup&view=mSettings\"",
        "\"https://fantasy.espn.com/apis/v3/games/ffl/leagueHistory/\"",
        "\"?seasonId=\"",
        "\"https://fantasy.espn.com/apis/v3/games/ffl/leagueHistory/\"",
        "\"?seasonId=\"",
        "\"view=mMatchup\"",
        "\"swid\"",
        "\"espn_s2\"",
        "'schedule'",
        "'away'",
        "'matchupPeriodId'",
        "'home'",
        "'teamId'",
        "'home'",
        "'totalPoints'",
        "'away'",
        "'teamId'",
        "'away'",
        "'totalPoints'",
        "'matchupPeriodId'",
        "'home'",
        "'teamId'",
        "'home'",
        "'totalPoints'",
        "\"BYE\"",
        "\"BYE\"",
        "'Week'",
        "'Home'",
        "'Score'",
        "'Away'",
        "'Score'",
        "'Type'",
        "'Regular'",
        "'Playoff'",
        "'Week'",
        "f\"\\n{df2}\"",
        "'schedule'",
        "f\"\\nLeague Standings ==> {league.standings()}\\n\"",
        "f\"League Top PF ==> {league.top_scorer()}\\n\"",
        "f\"League Least PF ==> {league.least_scorer()}\\n\"",
        "f\"League Top PA ==> {league.most_points_against()}\\n\"",
        "f\"League Top Scored Week ==> {league.top_scored_week()}\\n\"",
        "f\"League Least Scored Week ==> {league.least_scored_week()}\\n\"",
        "f\"League Box Scores ==> {league.box_scores(1)}\\n\"",
        "f\"League Scoreboard ==> {league.scoreboard(1)}\\n\"",
        "f\"\""
    ],
    "variables": [
        "league_id",
        "year",
        "swid",
        "espn_s2",
        "league_summary_url",
        "league_matchup_url",
        "league_summary_url",
        "league_matchup_url",
        "r",
        "d",
        "df",
        "df",
        "df",
        "league",
        "matchups"
    ],
    "comments": [
        "%matplotlib inline",
        "from iPython.display import HTML",
        "SWID COOKIE",
        "LONG ESPN S2 COOKIE",
        "If league is viewable to public just call the API",
        "r = requests.get(url)",
        "If league is not viewable to public need to call the API with some stored session cookies",
        "r = requests.get(league_summary_url, cookies={\"swid\":swid, \"espn_s2\":espn_s2})",
        "d = r.json()[0] #historical leagues reutrn a JSON in a list of length one, i.e. [0]",
        "with open('apidump.json', 'w') as json_file:",
        "json.dump(d, json_file)",
        "'http://fantasy.espn.com/apis/v3/games/ffl/seasons/2019/segments/0/leagues/89417258?view=mDraftDetail&view=mLiveScoring&view=mMatchupScore&view=mPendingTransactions&view=mPositionalRatings&view=mSettings&view=mTeam&view=modular&view=mNav&view=mMatchupScore'",
        "Win / Loss Margins",
        "espn-api module",
        "public league",
        "league = League(league_id=1245, year=2018)",
        "private league with cookies",
        "private league with username and password",
        "league = League(league_id=1245, year=2018, username='userName', password='pass')",
        "debug mode",
        "league = League(league_id=1245, year=2018, debug=True)",
        "print(f\"Leage Power Rankings ==> {league.power_rankings()}\")",
        "print(f\"league_summary_url={league_summary_url}\")",
        "print(f\"league_matchup_url={league_matchup_url}\")",
        "print(f\"text={r.text}\")",
        "print(f\"json={d}\")"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}