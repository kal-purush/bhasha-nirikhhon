{
    "identifiers": [
        "context",
        "arkouda",
        "ak",
        "base_test",
        "ArkoudaTest",
        "ArkoudaTest",
        "ak",
        "array",
        "format",
        "i",
        "i",
        "ak",
        "Categorical",
        "strings",
        "assertTrue",
        "ak",
        "array",
        "cat",
        "codes",
        "all",
        "assertTrue",
        "ak",
        "array",
        "cat",
        "segments",
        "all",
        "assertTrue",
        "ak",
        "array",
        "cat",
        "categories",
        "all",
        "assertEqual",
        "cat",
        "size",
        "assertEqual",
        "cat",
        "objtype",
        "ak",
        "array",
        "ak",
        "array",
        "ak",
        "Categorical",
        "from_codes",
        "codes",
        "categories",
        "assertTrue",
        "codes",
        "cat",
        "codes",
        "all",
        "assertTrue",
        "categories",
        "cat",
        "categories",
        "all",
        "ak",
        "array",
        "format",
        "i",
        "i",
        "ak",
        "Categorical",
        "strings",
        "assertTrue",
        "ak",
        "array",
        "cat",
        "contains",
        "all",
        "ak",
        "array",
        "format",
        "i",
        "i",
        "ak",
        "Categorical",
        "strings",
        "assertTrue",
        "ak",
        "array",
        "cat",
        "group",
        "all"
    ],
    "literals": [
        "'string {}'",
        "'string 8'",
        "'string 6'",
        "'string 5'",
        "'string 9'",
        "'string 7'",
        "'string 2'",
        "'string 10'",
        "'string 1'",
        "'string 4'",
        "'string 3'",
        "'category'",
        "'string 8'",
        "'string 6'",
        "'string 5'",
        "'string 9'",
        "'string 7'",
        "'string 2'",
        "'string 10'",
        "'string 1'",
        "'string 4'",
        "'string 3'",
        "'string {}'",
        "'string'",
        "'string {}'"
    ],
    "variables": [
        "strings",
        "cat",
        "codes",
        "categories",
        "cat",
        "strings",
        "cat",
        "strings",
        "cat"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "testBaseCategorical",
        "testCategoricalFromCodesAndCategories",
        "testContains",
        "testGroup"
    ],
    "classes": [
        "CategoricalTest"
    ]
}