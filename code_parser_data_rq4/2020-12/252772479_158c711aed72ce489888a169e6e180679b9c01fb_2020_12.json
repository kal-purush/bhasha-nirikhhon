{
    "identifiers": [
        "libsvmdata",
        "datasets",
        "fetch_libsvm",
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "seaborn",
        "sns",
        "sklearn",
        "datasets",
        "make_classification",
        "celer",
        "LogisticRegression",
        "sparse_ho",
        "ho",
        "grad_search",
        "sparse_ho",
        "utils",
        "Monitor",
        "sparse_ho",
        "models",
        "SparseLogreg",
        "sparse_ho",
        "criterion",
        "HeldOutLogistic",
        "sparse_ho",
        "ImplicitForward",
        "sparse_ho",
        "Forward",
        "sparse_ho",
        "grid_search",
        "grid_search",
        "sparse_ho",
        "optimizers",
        "LineSearch",
        "GradientDescent",
        "Adam",
        "__doc__",
        "dataset",
        "fetch_libsvm",
        "dataset",
        "X",
        "make_classification",
        "n_samples",
        "n_features",
        "random_state",
        "flip_y",
        "X",
        "shape",
        "np",
        "arange",
        "n_samples",
        "np",
        "arange",
        "n_samples",
        "n_samples",
        "len",
        "y",
        "idx_train",
        "np",
        "max",
        "np",
        "abs",
        "X",
        "idx_train",
        "T",
        "dot",
        "y",
        "idx_train",
        "alpha_max",
        "len",
        "idx_train",
        "np",
        "log",
        "alpha_max",
        "np",
        "log",
        "alpha_max",
        "np",
        "log",
        "alpha_max",
        "np",
        "geomspace",
        "n_alphas",
        "alpha_max",
        "p_alphas",
        "np",
        "log",
        "alphas",
        "LogisticRegression",
        "penalty",
        "fit_intercept",
        "max_iter",
        "max_iter",
        "SparseLogreg",
        "max_iter",
        "max_iter",
        "estimator",
        "estimator",
        "HeldOutLogistic",
        "idx_train",
        "idx_val",
        "Forward",
        "Monitor",
        "grid_search",
        "algo_grid",
        "criterion",
        "model",
        "X",
        "y",
        "log_alpha_min",
        "log_alpha_max",
        "monitor_grid",
        "log_alphas",
        "log_alphas",
        "tol",
        "tol",
        "np",
        "array",
        "monitor_grid",
        "objs",
        "LineSearch",
        "n_outer",
        "tol",
        "tol",
        "GradientDescent",
        "n_outer",
        "step_size",
        "Adam",
        "n_outer",
        "lr",
        "verbose",
        "optimizer_name",
        "optimizer_names",
        "LogisticRegression",
        "penalty",
        "fit_intercept",
        "solver",
        "tol",
        "tol",
        "SparseLogreg",
        "max_iter",
        "max_iter",
        "estimator",
        "estimator",
        "HeldOutLogistic",
        "idx_train",
        "idx_val",
        "Monitor",
        "ImplicitForward",
        "tol_jac",
        "tol",
        "n_iter_jac",
        "optimizers",
        "optimizer_name",
        "grad_search",
        "algo",
        "criterion",
        "model",
        "optimizer",
        "X",
        "y",
        "log_alpha0",
        "monitor_grad",
        "monitor_grad",
        "sns",
        "color_palette",
        "current_palette",
        "current_palette",
        "current_palette",
        "plt",
        "figure",
        "figsize",
        "plt",
        "semilogx",
        "p_alphas",
        "objs",
        "color",
        "current_palette",
        "plt",
        "semilogx",
        "p_alphas",
        "objs",
        "label",
        "color",
        "current_palette",
        "optimizer_name",
        "optimizer_names",
        "monitors",
        "optimizer_name",
        "np",
        "exp",
        "np",
        "array",
        "monitor",
        "log_alphas",
        "alpha_max",
        "np",
        "array",
        "monitor",
        "objs",
        "plt",
        "semilogx",
        "p_alphas_grad",
        "objs_grad",
        "label",
        "optimizer_name",
        "color",
        "dict_colors",
        "optimizer_name",
        "markersize",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "tick_params",
        "width",
        "plt",
        "legend",
        "loc",
        "plt",
        "tight_layout",
        "plt",
        "show",
        "block"
    ],
    "literals": [
        "'rcv1_train'",
        "'simu'",
        "\"Starting path computation...\"",
        "'l1'",
        "'line-search'",
        "'gradient-descent'",
        "'adam'",
        "'line-search'",
        "'gradient-descent'",
        "'adam'",
        "'l1'",
        "'saga'",
        "\"colorblind\"",
        "'line-search'",
        "'gradient-descent'",
        "'adam'",
        "'bo'",
        "'0-order method (grid-search)'",
        "'bX'",
        "r\"$\\lambda / \\lambda_{\\max}$\"",
        "r\"$ \\sum_i^n \\log \\left ( 1 + e^{-y_i^{\\rm{val}} X_i^{\\rm{val}} \"",
        "r\"\\hat \\beta^{(\\lambda)} } \\right ) $\""
    ],
    "variables": [
        "dataset",
        "X",
        "y",
        "X",
        "X",
        "y",
        "n_samples",
        "idx_train",
        "idx_val",
        "n_samples",
        "alpha_max",
        "log_alpha_max",
        "log_alpha_min",
        "max_iter",
        "log_alpha0",
        "tol",
        "n_alphas",
        "p_alphas",
        "alphas",
        "log_alphas",
        "estimator",
        "model",
        "criterion",
        "algo_grid",
        "monitor_grid",
        "objs",
        "optimizer_names",
        "optimizers",
        "monitors",
        "estimator",
        "model",
        "criterion",
        "monitor_grad",
        "algo",
        "optimizer",
        "monitors",
        "optimizer_name",
        "current_palette",
        "dict_colors",
        "monitor",
        "p_alphas_grad",
        "objs_grad"
    ],
    "comments": [
        "Authors: Quentin Bertrand <quentin.bertrand@inria.fr>",
        "Quentin Klopfenstein <quentin.klopfenstein@u-bourgogne.fr>",
        "",
        "License: BSD (3-clause)",
        "dataset = 'simu'",
        "",
        "Grid-search",
        "-----------",
        "",
        "Grad-search",
        "-----------"
    ],
    "docstrings": [
        "\"\"\"\n===========================\nSparse logistic regression\n===========================\n\nThis example shows how to perform hyperparameter optimisation\nfor sparse logistic regression using a held-out test set.\n\n\"\"\""
    ],
    "functions": [],
    "classes": []
}