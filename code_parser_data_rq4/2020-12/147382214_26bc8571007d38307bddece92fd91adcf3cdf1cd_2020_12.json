{
    "identifiers": [
        "Delta",
        "ErrorCode",
        "JasmineSidetreeErrorValidator",
        "length",
        "i",
        "length",
        "i",
        "result",
        "result",
        "result",
        "describe",
        "describe",
        "it",
        "generateLongString",
        "JasmineSidetreeErrorValidator",
        "Delta",
        "mockEncodedDelta",
        "ErrorCode",
        "it",
        "generateLongString",
        "Delta",
        "mockEncodedDelta",
        "e",
        "fail",
        "e",
        "describe",
        "it",
        "generateLongString",
        "JasmineSidetreeErrorValidator",
        "Delta",
        "mockDelta",
        "ErrorCode",
        "it",
        "JasmineSidetreeErrorValidator",
        "Delta",
        "mockDelta",
        "ErrorCode",
        "it",
        "JasmineSidetreeErrorValidator",
        "Delta",
        "mockDelta",
        "ErrorCode",
        "it",
        "Delta",
        "mockDelta",
        "e",
        "fail",
        "e"
    ],
    "literals": [
        "'../../lib/core/versions/latest/Delta'",
        "'../../lib/core/versions/latest/ErrorCode'",
        "'../JasmineSidetreeErrorValidator'",
        "string",
        "''",
        "'a'",
        "'Delta'",
        "'validateEncodedDeltaSize'",
        "'should throw sidetree if encoded size exceeds max limit'",
        "'should not throw if encoded size does not exceed max limit'",
        "Expected no error but got ${e}",
        "'validateDelta'",
        "'should throw sidetree error if delta size exceeds max limit'",
        "'should throw sidetree error if delta is null'",
        "'should throw sidetree error if delta is undefined'",
        "'should not throw if delta size is valid'",
        "'some value'",
        "Expected no error but got ${e}"
    ],
    "variables": [
        "result",
        "i",
        "mockEncodedDelta",
        "mockEncodedDelta",
        "mockDelta",
        "mockDelta",
        "mockDelta",
        "mockDelta"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "generateLongString"
    ],
    "classes": []
}