{
    "identifiers": [
        "com",
        "bilgeadam",
        "tutorial",
        "springboot",
        "controllers",
        "com",
        "bilgeadam",
        "tutorial",
        "springboot",
        "entities",
        "Employee",
        "com",
        "bilgeadam",
        "tutorial",
        "springboot",
        "services",
        "EmployeeService",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "mockito",
        "Mockito",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "boot",
        "test",
        "autoconfigure",
        "web",
        "servlet",
        "WebMvcTest",
        "org",
        "springframework",
        "boot",
        "test",
        "mock",
        "mockito",
        "MockBean",
        "org",
        "springframework",
        "http",
        "MediaType",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "MockMvc",
        "java",
        "util",
        "Collections",
        "org",
        "mockito",
        "ArgumentMatchers",
        "org",
        "mockito",
        "BDDMockito",
        "given",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "request",
        "MockMvcRequestBuilders",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "result",
        "MockMvcResultHandlers",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "result",
        "MockMvcResultMatchers",
        "WebMvcTest",
        "Autowired",
        "mockMvc",
        "MockBean",
        "employeeService",
        "testEmployee",
        "Test",
        "testEmployee",
        "given",
        "employeeService",
        "findAll",
        "willReturn",
        "Collections",
        "singletonList",
        "testEmployee",
        "mockMvc",
        "perform",
        "get",
        "andDo",
        "andExpect",
        "content",
        "contentType",
        "MediaType",
        "APPLICATION_JSON",
        "andExpect",
        "status",
        "isOk",
        "andExpect",
        "jsonPath",
        "value",
        "testEmployee",
        "getFirstName",
        "Test",
        "mockMvc",
        "perform",
        "post",
        "contentType",
        "MediaType",
        "APPLICATION_JSON",
        "content",
        "andDo",
        "andExpect",
        "status",
        "isCreated",
        "Mockito",
        "verify",
        "employeeService",
        "save",
        "Test",
        "testEmployee",
        "testEmployee",
        "setId",
        "mockMvc",
        "perform",
        "put",
        "testEmployee",
        "getId",
        "contentType",
        "MediaType",
        "APPLICATION_JSON",
        "content",
        "testEmployee",
        "getId",
        "andDo",
        "andExpect",
        "status",
        "isNoContent",
        "Mockito",
        "verify",
        "employeeService",
        "update",
        "Test",
        "id",
        "mockMvc",
        "perform",
        "id",
        "contentType",
        "MediaType",
        "APPLICATION_JSON",
        "andDo",
        "andExpect",
        "status",
        "isGone",
        "Mockito",
        "verify",
        "employeeService",
        "id"
    ],
    "literals": [
        "\"Test\"",
        "\"Java\"",
        "\"/employees\"",
        "\"$[0].firstName\"",
        "\"/employees\"",
        "\"{ \\\"firstName\\\": \\\"Spring\\\", \\\"lastName\\\": \\\"Test\\\"}\"",
        "\"Test\"",
        "\"Java\"",
        "\"/employees/\"",
        "\"{ \\\"id\\\":\"",
        "\", \\\"firstName\\\": \\\"Spring\\\", \\\"lastName\\\": \\\"Test\\\"}\"",
        "\"/employees/\""
    ],
    "variables": [
        "mockMvc",
        "employeeService",
        "testEmployee"
    ],
    "comments": [
        "Loads only given controller, nothing else.",
        "Setup service answer for test purposes.",
        "Prepare test object.",
        "mock(employeeService.save(any(Employee.class)));",
        "Setup service answer for test purposes."
    ],
    "docstrings": [],
    "functions": [
        "findEmployees",
        "addEmployee",
        "updateEmployee",
        "deleteEmployee"
    ],
    "classes": [
        "EmployeeControllerTest"
    ]
}