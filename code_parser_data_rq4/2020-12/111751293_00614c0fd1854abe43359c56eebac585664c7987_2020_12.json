{
    "identifiers": [
        "typing",
        "Dict",
        "Sequence",
        "Tuple",
        "Text",
        "Any",
        "Union",
        "absl",
        "app",
        "absl",
        "flags",
        "altair",
        "alt",
        "pandas",
        "pd",
        "tensorflow",
        "tf",
        "third_party",
        "nucleus",
        "io",
        "sharded_file_utils",
        "flags",
        "FLAGS",
        "flags",
        "DEFINE_string",
        "flags",
        "DEFINE_string",
        "flags",
        "DEFINE_string",
        "path_string",
        "pd",
        "DataFrame",
        "sharded_file_utils",
        "is_sharded_file_spec",
        "path_string",
        "sharded_file_utils",
        "generate_sharded_filenames",
        "path_string",
        "path_string",
        "i",
        "path",
        "paths",
        "path",
        "startswith",
        "tf",
        "io",
        "gfile",
        "GFile",
        "path",
        "f",
        "pd",
        "read_csv",
        "f",
        "sep",
        "pd",
        "read_csv",
        "path",
        "sep",
        "i",
        "list_of_dataframes",
        "append",
        "d",
        "pd",
        "concat",
        "list_of_dataframes",
        "axis",
        "ignore_index",
        "raw_seconds",
        "divmod",
        "raw_seconds",
        "divmod",
        "minutes",
        "round",
        "seconds",
        "hours",
        "output",
        "hours",
        "minutes",
        "output",
        "minutes",
        "seconds",
        "output",
        "output",
        "seconds",
        "output",
        "df",
        "pd",
        "DataFrame",
        "pd",
        "DataFrame",
        "df",
        "RUNTIME_COLUMNS",
        "sum",
        "axis",
        "df",
        "apply",
        "format_runtime_string",
        "df",
        "sort_values",
        "by",
        "inplace",
        "ascending",
        "df",
        "df",
        "pd",
        "DataFrame",
        "pd",
        "DataFrame",
        "df",
        "groupby",
        "by",
        "sum",
        "by_task",
        "reset_index",
        "d",
        "pd",
        "DataFrame",
        "title",
        "alt",
        "Chart",
        "RUNTIME_COLUMNS",
        "d",
        "columns_used",
        "alt",
        "Chart",
        "d",
        "transform_fold",
        "RUNTIME_COLUMNS",
        "as_",
        "mark_bar",
        "opacity",
        "encode",
        "x",
        "alt",
        "X",
        "bin",
        "alt",
        "Bin",
        "maxbins",
        "title",
        "y",
        "alt",
        "Y",
        "title",
        "stack",
        "color",
        "alt",
        "Color",
        "sort",
        "properties",
        "title",
        "title",
        "d",
        "pd",
        "DataFrame",
        "title",
        "alt",
        "Chart",
        "RUNTIME_COLUMNS",
        "COUNT_COLUMNS",
        "d",
        "columns_used",
        "alt",
        "Chart",
        "d",
        "mark_circle",
        "opacity",
        "encode",
        "x",
        "alt",
        "X",
        "alt",
        "repeat",
        "axis",
        "alt",
        "Axis",
        "labelExpr",
        "y",
        "alt",
        "Y",
        "alt",
        "repeat",
        "tooltip",
        "properties",
        "width",
        "height",
        "repeat",
        "column",
        "RUNTIME_COLUMNS",
        "row",
        "COUNT_COLUMNS",
        "properties",
        "title",
        "title",
        "d",
        "pd",
        "DataFrame",
        "alt",
        "Chart",
        "d",
        "sum",
        "RUNTIME_COLUMNS",
        "pd",
        "DataFrame",
        "stage_totals_series",
        "columns",
        "stage_totals",
        "reset_index",
        "inplace",
        "stage_totals",
        "rename",
        "columns",
        "stage_totals",
        "apply",
        "format_runtime_string",
        "alt",
        "Chart",
        "stage_totals",
        "mark_bar",
        "encode",
        "x",
        "y",
        "alt",
        "Y",
        "sort",
        "tooltip",
        "fill",
        "alt",
        "Fill",
        "sort",
        "properties",
        "title",
        "row",
        "pd",
        "Series",
        "row",
        "row",
        "row",
        "df_subset",
        "pd",
        "DataFrame",
        "pd",
        "DataFrame",
        "df_subset",
        "sum",
        "df_subset",
        "apply",
        "format_runtime_string",
        "df_subset",
        "sum",
        "df_subset",
        "cumsum",
        "df_subset",
        "sum",
        "len",
        "df_subset",
        "x",
        "x",
        "n",
        "n",
        "df_subset",
        "apply",
        "pareto_by_task_tooltip",
        "axis",
        "df_subset",
        "df",
        "pd",
        "DataFrame",
        "alt",
        "Chart",
        "df",
        "groupby",
        "df",
        "sort",
        "grouped",
        "apply",
        "calculate_pareto_metrics",
        "len",
        "df",
        "pd",
        "concat",
        "df",
        "nlargest",
        "x",
        "df",
        "sample",
        "x",
        "df",
        "columns_used",
        "alt",
        "selection_interval",
        "alt",
        "Chart",
        "df",
        "mark_line",
        "size",
        "encode",
        "x",
        "alt",
        "X",
        "title",
        "axis",
        "alt",
        "Axis",
        "format",
        "y",
        "alt",
        "Y",
        "title",
        "axis",
        "alt",
        "Axis",
        "format",
        "tooltip",
        "color",
        "alt",
        "condition",
        "brush",
        "alt",
        "value",
        "properties",
        "title",
        "interactive",
        "alt",
        "Chart",
        "df",
        "mark_point",
        "size",
        "encode",
        "x",
        "alt",
        "X",
        "title",
        "y",
        "alt",
        "Y",
        "title",
        "color",
        "alt",
        "condition",
        "brush",
        "alt",
        "value",
        "tooltip",
        "properties",
        "title",
        "add_selection",
        "brush",
        "pareto_by_task",
        "task_scatter",
        "small_df",
        "pd",
        "DataFrame",
        "title",
        "Union",
        "Dict",
        "alt",
        "Chart",
        "RUNTIME_COLUMNS",
        "small_df",
        "columns_used",
        "alt",
        "Chart",
        "d",
        "transform_fold",
        "RUNTIME_COLUMNS",
        "as_",
        "mark_bar",
        "encode",
        "x",
        "alt",
        "X",
        "sort",
        "y",
        "alt",
        "Y",
        "scale",
        "alt",
        "Scale",
        "title",
        "fill",
        "alt",
        "Fill",
        "sort",
        "tooltip",
        "properties",
        "title",
        "title",
        "df",
        "pd",
        "DataFrame",
        "alt",
        "Chart",
        "len",
        "df",
        "round",
        "num_rows",
        "individual_region_bars",
        "df",
        "iloc",
        "individual_region_bars",
        "df",
        "iloc",
        "mid",
        "mid",
        "df",
        "pd",
        "DataFrame",
        "alt",
        "Chart",
        "df",
        "df",
        "regions_with_zero_examples",
        "sum",
        "df",
        "sum",
        "runtime_of_zeros",
        "len",
        "regions_with_zero_examples",
        "runtime_of_zeros",
        "total_runtime",
        "total_runtime",
        "individual_region_bars",
        "regions_with_zero_examples",
        "nlargest",
        "title",
        "subtitle",
        "charts",
        "Dict",
        "Text",
        "alt",
        "Chart",
        "title",
        "subtitle",
        "html_output",
        "Any",
        "html_output",
        "write",
        "html_output",
        "write",
        "format",
        "VEGA_URL",
        "html_output",
        "write",
        "format",
        "VEGA_URL",
        "html_output",
        "write",
        "format",
        "VEGA_URL",
        "html_output",
        "write",
        "CSS_STYLES",
        "html_output",
        "write",
        "html_output",
        "write",
        "format",
        "title",
        "html_output",
        "write",
        "format",
        "subtitle",
        "html_output",
        "write",
        "chart",
        "charts",
        "html_output",
        "write",
        "format",
        "chart",
        "html_output",
        "write",
        "html_output",
        "write",
        "chart",
        "charts",
        "html_output",
        "write",
        "format",
        "chart",
        "chart",
        "to_json",
        "format",
        "title",
        "replace",
        "chart",
        "download_filename",
        "html_output",
        "write",
        "format",
        "chart",
        "chart",
        "embed_options",
        "html_output",
        "write",
        "html_output",
        "write",
        "input_path",
        "Tuple",
        "pd",
        "DataFrame",
        "pd",
        "DataFrame",
        "read_sharded_profile_tsvs",
        "input_path",
        "calculate_totals",
        "df",
        "summarize_by_task",
        "df",
        "df",
        "by_task",
        "df",
        "pd",
        "DataFrame",
        "by_task",
        "pd",
        "DataFrame",
        "Dict",
        "Text",
        "Union",
        "alt",
        "Chart",
        "totals_by_stage",
        "by_task",
        "pareto_and_runtimes_by_task",
        "df",
        "stage_histogram",
        "by_task",
        "title",
        "selected_longest_and_median_regions",
        "df",
        "top_regions_producing_zero_examples",
        "df",
        "len",
        "df",
        "charts",
        "extend",
        "stage_histogram",
        "df",
        "title",
        "correlation_scatter_charts",
        "df",
        "title",
        "df",
        "nlargest",
        "df",
        "nlargest",
        "df",
        "nsmallest",
        "len",
        "df",
        "len",
        "bottom_99_percent",
        "bottom_99_percent",
        "sample",
        "charts",
        "extend",
        "stage_histogram",
        "bottom_99_percent",
        "title",
        "stage_histogram",
        "top_100",
        "title",
        "correlation_scatter_charts",
        "top_5000",
        "title",
        "correlation_scatter_charts",
        "bottom_99_percent",
        "title",
        "charts",
        "input_path",
        "title",
        "html_output",
        "tf",
        "io",
        "gfile",
        "GFile",
        "read_data_and_make_dataframes",
        "input_path",
        "make_all_charts",
        "df",
        "by_task",
        "len",
        "df",
        "len",
        "by_task",
        "len",
        "by_task",
        "write_to_html_report",
        "charts",
        "charts",
        "title",
        "title",
        "subtitle",
        "subtitle",
        "html_output",
        "html_output",
        "argv",
        "Sequence",
        "len",
        "argv",
        "app",
        "UsageError",
        "format",
        "argv",
        "FLAGS",
        "output",
        "endswith",
        "FLAGS",
        "output",
        "FLAGS",
        "output",
        "tf",
        "io",
        "gfile",
        "GFile",
        "output_filename",
        "make_report",
        "input_path",
        "FLAGS",
        "input",
        "title",
        "FLAGS",
        "title",
        "html_output",
        "html_output",
        "html_output",
        "close",
        "output_filename",
        "flags",
        "mark_flags_as_required",
        "app",
        "run",
        "main"
    ],
    "literals": [
        "r\"\"\"Create a visual report of make_examples runtime by region.\n\nUse this script to visualize the runtime-by-region data generated by running\nmake_examples with --profile_by_region.\n\"\"\"",
        "'https://storage.googleapis.com/deepvariant/lib/vega'",
        "'input'",
        "'TSV file that was produced when running make_examples '",
        "'with --profile_by_region. Can be sharded, e.g. /path/runtime@64.tsv.'",
        "'title'",
        "'Title will be shown at the top of the report and will '",
        "'be used as a prefix for downloaded image files.'",
        "'output'",
        "'runtime_by_region_report.html'",
        "'Path for the output report, which will be an html file.'",
        "'get reads'",
        "'find candidates'",
        "'make pileup images'",
        "'write outputs'",
        "'num reads'",
        "'num examples'",
        "'num candidates'",
        "'gs://'",
        "'\\t'",
        "'\\t'",
        "'Task'",
        "''",
        "f'{int(hours)}h'",
        "f'{int(minutes)}m'",
        "f'{seconds}s'",
        "'total runtime'",
        "'Runtime'",
        "'total runtime'",
        "'total runtime'",
        "'Task'",
        "''",
        "'Stage'",
        "'runtime_by_stage'",
        "'runtime_by_stage:Q'",
        "'Runtime (seconds)'",
        "'count()'",
        "'Count of regions'",
        "'Stage:N'",
        "''",
        "'region'",
        "'total runtime'",
        "'column'",
        "'quantitative'",
        "\"datum.value + 's'\"",
        "'row'",
        "'quantitative'",
        "'region'",
        "'total runtime'",
        "'Runtime (seconds)'",
        "'index'",
        "'Stage'",
        "'Runtime'",
        "'Runtime (seconds)'",
        "'Runtime (seconds)'",
        "'Stage'",
        "'Runtime'",
        "'Stage'",
        "'Overall runtime by stage'",
        "f\"{row['task cumsum order']:.2f}% of regions \"",
        "'task cumsum order'",
        "f\"account for {row['task cumsum fraction']:.2f}% of \"",
        "'task cumsum fraction'",
        "f\"the runtime in task {row['Task']}\"",
        "'Task'",
        "'task total runtime'",
        "'total runtime'",
        "'Runtime for task'",
        "'task total runtime'",
        "'task num examples'",
        "'num examples'",
        "'task cumsum fraction'",
        "'total runtime'",
        "'total runtime'",
        "'task cumsum order'",
        "'tooltip'",
        "'Task'",
        "'total runtime'",
        "'task cumsum order'",
        "'task cumsum fraction'",
        "'tooltip'",
        "'Task'",
        "'task total runtime'",
        "'task num examples'",
        "'Runtime for task'",
        "'task cumsum order'",
        "'The longest-runtime X% of regions'",
        "'%'",
        "'task cumsum fraction'",
        "'Account for Y% of the total runtime'",
        "'%'",
        "'tooltip'",
        "'Task:N'",
        "'lightgray'",
        "'Pareto curve for each task'",
        "'max(task total runtime)'",
        "'Runtime (seconds)'",
        "'task num examples:Q'",
        "'Number of examples'",
        "'Task:N'",
        "'lightgray'",
        "'Task'",
        "'Runtime for task'",
        "'Total runtime for each task (drag to highlight)'",
        "''",
        "'region'",
        "'Runtime'",
        "'Stage'",
        "'runtime_by_stage'",
        "'region:N'",
        "'runtime_by_stage:Q'",
        "'linear'",
        "'Runtime (seconds)'",
        "'Stage:N'",
        "'Runtime:N'",
        "'Top runtime regions'",
        "'Median runtime regions'",
        "'num examples'",
        "'total runtime'",
        "'total runtime'",
        "f'Spent {runtime_of_zeros:.2f} hours processing the '",
        "f'{len(regions_with_zero_examples)} regions that produced no examples, '",
        "f'which is {runtime_of_zeros / total_runtime * 100:.2f}% of the total '",
        "f'runtime of {total_runtime:.2f} hours.'",
        "'total runtime'",
        "'text'",
        "'The longest-running regions that produced no examples'",
        "'subtitle'",
        "'<!DOCTYPE html>\\n<html>\\n<head>'",
        "'<script type=\"text/javascript\" src=\"{}/vega@5\"></script>'",
        "'\\n'",
        "'<script type=\"text/javascript\" src=\"{}/vega-lite@4.8.1\"></script>'",
        "'\\n'",
        "'<script type=\"text/javascript\" src=\"{}/vega-embed@6\"></script>'",
        "'\\n'",
        "'</head>\\n<body>'",
        "'<h1>{}</h1>\\n'",
        "'<h2>{}</h2>\\n'",
        "'<div>'",
        "'<div class=\"chart-container\" id=\"vis_{}\"></div>\\n'",
        "'id'",
        "'</div>'",
        "'<script>\\n'",
        "'var spec_{} = {};\\n'",
        "'id'",
        "'chart'",
        "'{}_{}'",
        "' '",
        "'_'",
        "'id'",
        "'mode'",
        "'vega-lite'",
        "'downloadFileName'",
        "'vegaEmbed(\"#vis_{}\", spec_{}, {})\\n'",
        "'id'",
        "'id'",
        "'</script>\\n'",
        "'</body></html>'",
        "'id'",
        "'total_by_stage'",
        "'chart'",
        "'id'",
        "'pareto_and_runtimes_by_task'",
        "'chart'",
        "'id'",
        "'histogram_by_task'",
        "'chart'",
        "'Stage runtimes for each task'",
        "'id'",
        "'selected_longest_and_median_regions'",
        "'chart'",
        "'id'",
        "'zero_examples'",
        "'chart'",
        "'id'",
        "'histogram'",
        "'chart'",
        "'Runtime by stage for all regions'",
        "'id'",
        "'scatter_grid'",
        "'chart'",
        "'Trends for all regions'",
        "'total runtime'",
        "'total runtime'",
        "'total runtime'",
        "'id'",
        "'histogram_bottom_99_percent'",
        "'chart'",
        "'Regions in the bottom 99% by runtime'",
        "'id'",
        "'histogram_top_100'",
        "'chart'",
        "'Runtime by stage for top 100 regions by runtime'",
        "'id'",
        "'scatter_grid_top_5000'",
        "'chart'",
        "'Trends for top 5000 regions by runtime'",
        "'id'",
        "'scatter_grid_bottom_99_percent'",
        "'chart'",
        "'Regions in the bottom 99% by runtime'",
        "f'Totals: {len(df)} regions '",
        "f'across {len(by_task)} task{\"(s)\" if len(by_task) > 1 else \"\"}'",
        "\"(s)\"",
        "\"\"",
        "'Command line parsing failure: this script does not accept '",
        "'positional arguments, but found these extra arguments: \"{}\".'",
        "''",
        "'html'",
        "f'{FLAGS.output}.html'",
        "'w'",
        "'Output written to:'",
        "'__main__'",
        "'input'",
        "'title'"
    ],
    "variables": [
        "VEGA_URL",
        "FLAGS",
        "RUNTIME_COLUMNS",
        "COUNT_COLUMNS",
        "CSS_STYLES",
        "paths",
        "paths",
        "list_of_dataframes",
        "d",
        "d",
        "d",
        "minutes",
        "seconds",
        "hours",
        "minutes",
        "seconds",
        "output",
        "df",
        "df",
        "by_task",
        "columns_used",
        "d",
        "columns_used",
        "d",
        "stage_totals_series",
        "stage_totals",
        "stage_totals",
        "stage_totals",
        "df_subset",
        "df_subset",
        "df_subset",
        "df_subset",
        "n",
        "df_subset",
        "df_subset",
        "grouped",
        "df",
        "x",
        "df",
        "columns_used",
        "df",
        "brush",
        "pareto_by_task",
        "task_scatter",
        "columns_used",
        "d",
        "num_rows",
        "mid",
        "regions_with_zero_examples",
        "runtime_of_zeros",
        "total_runtime",
        "subtitle",
        "download_filename",
        "embed_options",
        "df",
        "df",
        "by_task",
        "charts",
        "top_100",
        "top_5000",
        "bottom_99_percent",
        "bottom_99_percent",
        "df",
        "by_task",
        "charts",
        "subtitle",
        "output_filename",
        "output_filename",
        "html_output"
    ],
    "comments": [
        "Copyright 2020 Google LLC.",
        "",
        "Redistribution and use in source and binary forms, with or without",
        "modification, are permitted provided that the following conditions",
        "are met:",
        "",
        "1. Redistributions of source code must retain the above copyright notice,",
        "this list of conditions and the following disclaimer.",
        "",
        "2. Redistributions in binary form must reproduce the above copyright",
        "notice, this list of conditions and the following disclaimer in the",
        "documentation and/or other materials provided with the distribution.",
        "",
        "3. Neither the name of the copyright holder nor the names of its",
        "contributors may be used to endorse or promote products derived from this",
        "software without specific prior written permission.",
        "",
        "THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"",
        "AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE",
        "IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE",
        "ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE",
        "LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR",
        "CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF",
        "SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS",
        "INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN",
        "CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)",
        "ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE",
        "POSSIBILITY OF SUCH DAMAGE.",
        "Altair uses a lot of method chaining, such as",
        "chart.mark_bar().encode(...).properties(...), so using backslash",
        "continuation to break this into separate lines makes the code more readable.",
        "pylint: disable=g-backslash-continuation",
        "Once pandas is updated to 0.24+, pd.read_csv will work for gs://",
        "without this workaround.",
        "'total runtime' is a simple sum of the runtime columns.",
        "Create a formatted runtime string for tooltips.",
        "Sort by descending total region runtime.",
        "These are the same for all regions in the same task, for the scatter plot:",
        "These are cumulative sums for the pareto curves:",
        "Sample along the Pareto curve, ensuring the longest regions are shown.",
        "Limit columns to greatly reduce the size of the html report.",
        "Brushing on the task_scatter plot highlights the same tasks in the Pareto",
        "curve.",
        "This chart needs to use the same dataframe as the first chart to enable the",
        "brushing on one to affect the other. Using max(task) for 'text' is a",
        "trick that causes bundling by task to avoid showing multiple overlapping",
        "points which otherwise make the text look funky.",
        "Start the HTML document.",
        "Add dependencies vega and vega-lite, which render the altair charts.",
        "Add styles (CSS).",
        "Make a div containing all the charts.",
        "Add JSON vega specs and hook them up to the divs with VegaEmbed.",
        "Close HTML document.",
        "Altair shows a max of 5000 data points.",
        "With up to 5000 points, just show them all.",
        "With too many points, make different subsets to show trends better.",
        "Sample the bottom 99% to avoid outliers that obscure general trends.",
        "Load data into pandas dataframes and add summary columns.",
        "Build all the charts.",
        "Write a subtitle with some top-level stats.",
        "Write the HTML report with all the charts.",
        "Add html to the output path if that is not already the suffix.",
        "Start HTML document. Using GFile enables writing to GCS too.",
        "Abstracted out the file open/close to enable testing."
    ],
    "docstrings": [
        "\"\"\"\n<style>\n    body {\n      font-family: sans-serif;\n    }\n    .chart-container {\n      padding: 30px;\n    }\n</style>\n\"\"\"",
        "\"\"\"Imports data from a single or sharded path into a pandas dataframe.\n\n  Args:\n    path_string: The path to the input file, which may be sharded.\n\n  Returns:\n    A dataframe matching the TSV file(s) but with added Task column.\n  \"\"\"",
        "\"\"\"Creates a nice format string from a potentially large number of seconds.\n\n  Args:\n    raw_seconds: A number of seconds.\n\n  Returns:\n    The seconds divided into hours, minutes, and remaining seconds, formatted\n        nicely. For example, 2h3m5.012s.\n  \"\"\"",
        "\"\"\"Calculates total runtime, formats it nicely, and sorts by it.\n\n  Args:\n    df: A dataframe of runtime profiling numbers.\n\n  Returns:\n    The same dataframe with some additional summary columns.\n  \"\"\"",
        "\"\"\"Groups regions to get the total runtime for each task.\n\n  Args:\n    df: A dataframe of runtime profiling numbers.\n\n  Returns:\n    The dataframe grouped by task.\n  \"\"\"",
        "\"\"\"Plots a histogram of runtimes stacked by stage.\n\n  Args:\n    d: A dataframe of runtimes, either by region or by task.\n    title: A title for the plot.\n\n  Returns:\n    An altair chart.\n  \"\"\"",
        "\"\"\"Produces a grid of scatter plots of runtimes of stages versus covariates.\n\n  Args:\n    d: A pandas dataframe of runtime by regions.\n    title: A title for the plot.\n\n  Returns:\n    An altair chart\n  \"\"\"",
        "\"\"\"Plots total runtimes for each stage.\n\n  Args:\n    d: A dataframe of runtimes.\n\n  Returns:\n    An altair chart.\n  \"\"\"",
        "\"\"\"For one row of a dataframe, computes a tooltip description.\n\n  Args:\n    row: A Pandas Series, one row of a dataframe containing some specific\n      cumulative sum columns.\n\n  Returns:\n    A string to show as the tooltip for a pareto curve.\n  \"\"\"",
        "\"\"\"Calculates cumulative sums for a subset of a dataframe.\n\n  Args:\n    df_subset: A dataframe subset of one task.\n\n  Returns:\n    The same dataframe subset with some additional columns.\n  \"\"\"",
        "\"\"\"Creates an interactive Pareto curve and scatter plot of task runtimes.\n\n  Tracing each curve shows to what extent a small proportion of long-running\n  regions contribute disproportionately to the overall runtime. That is,\n  \"The longest-running X% of regions account for Y% of the total runtime.\"\n  There is a curve for each task.\n\n  Args:\n    df: A dataframe of all regions.\n\n  Returns:\n    An altair chart.\n  \"\"\"",
        "\"\"\"Makes a stacked bar chart with runtime of each stage for individual regions.\n\n  Args:\n    small_df: A dataframe of regions, each of which will be shown as a bar.\n    title: A title for the plot. If a dict, it should contain 'title' and/or\n      'subtitle'.\n\n  Returns:\n    An altair chart.\n  \"\"\"",
        "\"\"\"Creates a stacked bar charts of the top 20 and median 20 regions.\n\n  Args:\n    df: A dataframe of all regions.\n\n  Returns:\n    An altair chart.\n  \"\"\"",
        "\"\"\"Creates a chart of the top regions that produced zero examples.\n\n  Args:\n    df: A dataframe of all regions.\n\n  Returns:\n    An altair chart.\n  \"\"\"",
        "\"\"\"Makes the html report with all the charts inserted.\n\n  Args:\n    charts: A list of altair chart objects.\n    title: The title to show at the top of the report.\n    subtitle: The subtitle to show just below the title on the report.\n    html_output: a writable file object.\n\n  Returns:\n      None. Writes into the html_output file object.\n  \"\"\"",
        "\"\"\"Loads data from a file into one dataframe as-is and one by task.\n\n  Args:\n    input_path: str, path of the input TSV file (may be sharded).\n\n  Returns:\n    df: A dataframe with one row per region.\n    by_task: A dataframe with one row per task.\n  \"\"\"",
        "\"\"\"Creates charts and puts them in a list with their ID names.\n\n  Args:\n    df: A dataframe with one row per region.\n    by_task: A dataframe with one row per task.\n\n  Returns:\n    list of dicts, each containing a chart and a descriptive ID.\n  \"\"\"",
        "\"\"\"Reads data, creates charts, and composes the charts into an HTML report.\n\n  Args:\n    input_path: Path of the input TSV file (or sharded files).\n    title: Title to put at the top of the report.\n    html_output: Writable file object where output will be written.\n  \"\"\""
    ],
    "functions": [
        "read_sharded_profile_tsvs",
        "format_runtime_string",
        "calculate_totals",
        "summarize_by_task",
        "stage_histogram",
        "correlation_scatter_charts",
        "totals_by_stage",
        "pareto_by_task_tooltip",
        "calculate_pareto_metrics",
        "pareto_and_runtimes_by_task",
        "individual_region_bars",
        "selected_longest_and_median_regions",
        "top_regions_producing_zero_examples",
        "write_to_html_report",
        "read_data_and_make_dataframes",
        "make_all_charts",
        "make_report",
        "main"
    ],
    "classes": []
}