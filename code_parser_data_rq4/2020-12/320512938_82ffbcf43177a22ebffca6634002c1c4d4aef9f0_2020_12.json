{
    "identifiers": [
        "os",
        "random",
        "itertools",
        "cycle",
        "tsfel",
        "ts",
        "tensorflow",
        "tf",
        "numpy",
        "np",
        "sklearn",
        "metrics",
        "sensormotion",
        "sm",
        "matplotlib",
        "pyplot",
        "plt",
        "math",
        "shutil",
        "copy2",
        "seaborn",
        "sns",
        "pandas",
        "pd",
        "imblearn",
        "metrics",
        "sensitivity_specificity_support",
        "imblearn",
        "over_sampling",
        "SMOTE",
        "ADASYN",
        "KMeansSMOTE",
        "RandomOverSampler",
        "imblearn",
        "under_sampling",
        "RandomUnderSampler",
        "NearMiss",
        "EditedNearestNeighbours",
        "scipy",
        "stats",
        "sklearn",
        "preprocessing",
        "sklearn",
        "ensemble",
        "ExtraTreesClassifier",
        "sklearn",
        "feature_selection",
        "VarianceThreshold",
        "SelectFromModel",
        "RFE",
        "sklearn",
        "metrics",
        "precision_recall_fscore_support",
        "accuracy_score",
        "classification_report",
        "confusion_matrix",
        "sklearn",
        "model_selection",
        "GridSearchCV",
        "train_test_split",
        "KFold",
        "pathlib",
        "Path",
        "datetime",
        "datetime",
        "sklearn",
        "svm",
        "LinearSVC",
        "SVR",
        "har_baseline",
        "utility",
        "configurator",
        "Configurator",
        "PrivateConfigurator",
        "har_baseline",
        "models",
        "Models",
        "MlModels",
        "logging",
        "config_file_path",
        "config_file_path",
        "_init_log",
        "_decode_csv",
        "ds_dir",
        "Configurator",
        "__cfg_path",
        "get",
        "separator",
        "Configurator",
        "__cfg_path",
        "get",
        "fallback",
        "header_type",
        "Configurator",
        "__cfg_path",
        "get",
        "has_header",
        "Configurator",
        "__cfg_path",
        "getboolean",
        "Configurator",
        "__cfg_path",
        "get",
        "Configurator",
        "__cfg_path",
        "get",
        "os",
        "path",
        "join",
        "Configurator",
        "__cfg_path",
        "get",
        "Path",
        "stats_dir",
        "mkdir",
        "parents",
        "exist_ok",
        "plt",
        "rcParams",
        "prop_cycle",
        "by_key",
        "df",
        "group_by",
        "value_counts",
        "plt",
        "title",
        "df",
        "group_by",
        "value_counts",
        "plot",
        "kind",
        "color",
        "colors",
        "value",
        "values",
        "plt",
        "text",
        "i",
        "value",
        "offset",
        "np",
        "round",
        "value",
        "np",
        "sum",
        "df",
        "group_by",
        "value_counts",
        "i",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "savefig",
        "os",
        "path",
        "join",
        "Configurator",
        "__cfg_path",
        "get",
        "plt",
        "show",
        "plt",
        "close",
        "header_type",
        "plt",
        "title",
        "df",
        "value_counts",
        "plot",
        "kind",
        "color",
        "colors",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "savefig",
        "os",
        "path",
        "join",
        "Configurator",
        "__cfg_path",
        "get",
        "plt",
        "show",
        "plt",
        "close",
        "df",
        "boxplot",
        "column",
        "df",
        "columns",
        "_data_delimiters",
        "header_type",
        "_data_delimiters",
        "header_type",
        "plt",
        "savefig",
        "os",
        "path",
        "join",
        "Configurator",
        "__cfg_path",
        "get",
        "plt",
        "show",
        "plt",
        "close",
        "df",
        "boxplot",
        "column",
        "df",
        "columns",
        "_data_delimiters",
        "header_type",
        "_data_delimiters",
        "header_type",
        "by",
        "plt",
        "savefig",
        "os",
        "path",
        "join",
        "Configurator",
        "__cfg_path",
        "get",
        "plt",
        "show",
        "plt",
        "close",
        "ml_models",
        "dl_models",
        "discard_class",
        "discard_patients",
        "ids_test",
        "_init_log",
        "Configurator",
        "__cfg_path",
        "getint",
        "Configurator",
        "__cfg_path",
        "getfloat",
        "_decode_csv",
        "ds_dir",
        "Configurator",
        "__cfg_path",
        "get",
        "separator",
        "Configurator",
        "__cfg_path",
        "get",
        "fallback",
        "header_type",
        "Configurator",
        "__cfg_path",
        "get",
        "has_header",
        "Configurator",
        "__cfg_path",
        "getboolean",
        "_clean_data",
        "df",
        "dataset",
        "sampling_frequency",
        "Configurator",
        "__cfg_path",
        "getint",
        "high_cutoff",
        "Configurator",
        "__cfg_path",
        "getint",
        "fallback",
        "low_cutoff",
        "Configurator",
        "__cfg_path",
        "getint",
        "fallback",
        "sub_method",
        "Configurator",
        "__cfg_path",
        "get",
        "header_type",
        "Configurator",
        "__cfg_path",
        "get",
        "Configurator",
        "__cfg_path",
        "get",
        "data_treatment_type",
        "_features_extraction",
        "df",
        "dataset",
        "sampling_frequency",
        "Configurator",
        "__cfg_path",
        "getint",
        "time_window",
        "time_window_size",
        "overlap",
        "Configurator",
        "__cfg_path",
        "getfloat",
        "header_type",
        "Configurator",
        "__cfg_path",
        "get",
        "data_treatment_type",
        "_apply_segmentation",
        "df",
        "dataset",
        "sampling_frequency",
        "Configurator",
        "__cfg_path",
        "getint",
        "time_window_size",
        "time_window_size",
        "overlap",
        "Configurator",
        "__cfg_path",
        "getfloat",
        "data_treatment_type",
        "dataset",
        "logging",
        "info",
        "data_treatment_type",
        "dataset",
        "_data_preprocessing",
        "df",
        "dt_dataset",
        "drop_class",
        "discard_class",
        "drop_patient",
        "discard_patients",
        "split_method",
        "Configurator",
        "__cfg_path",
        "get",
        "normalisation_method",
        "Configurator",
        "__cfg_path",
        "get",
        "selection_method",
        "Configurator",
        "__cfg_path",
        "get",
        "balancing_method",
        "Configurator",
        "__cfg_path",
        "get",
        "ids_test_set",
        "ids_test",
        "Configurator",
        "__cfg_path",
        "getboolean",
        "_start_ml_evaluation",
        "X_train_set",
        "Y_train_set",
        "X_validation_set",
        "Y_validation_set",
        "ml_models",
        "class_labels",
        "Configurator",
        "__cfg_path",
        "getboolean",
        "_dl_evaluation",
        "X_train_set",
        "Y_train_set",
        "X_validation_set",
        "Y_validation_set",
        "dl_models",
        "class_labels",
        "time_window_size",
        "df",
        "sampling_frequency",
        "time_window_size",
        "overlap",
        "Configurator",
        "__cfg_path",
        "get",
        "has_patient",
        "_get_window",
        "df",
        "sampling_frequency",
        "time_window_size",
        "overlap",
        "_get_window",
        "df",
        "sampling_frequency",
        "time_window_size",
        "overlap",
        "pd",
        "DataFrame",
        "x",
        "reshape",
        "x",
        "shape",
        "x",
        "shape",
        "y",
        "has_patient",
        "p",
        "p",
        "x_df",
        "x_train",
        "y_train",
        "x_val",
        "y_val",
        "dl_models",
        "class_labels",
        "time_window_size",
        "Configurator",
        "__cfg_path",
        "getboolean",
        "Configurator",
        "__cfg_path",
        "get",
        "logging",
        "info",
        "x_train",
        "shape",
        "PrivateConfigurator",
        "PrivateConfigurator",
        "n_features",
        "PrivateConfigurator",
        "PrivateConfigurator",
        "x_train",
        "reshape",
        "n_features",
        "x_val",
        "reshape",
        "n_features",
        "np",
        "asarray",
        "y_train",
        "reshape",
        "np",
        "asarray",
        "y_val",
        "reshape",
        "_start_cnn_evaluation",
        "X_training_features",
        "y_training_features",
        "X_testing_features",
        "y_testing_features",
        "dl_models",
        "Configurator",
        "__cfg_path",
        "getint",
        "Configurator",
        "__cfg_path",
        "getint",
        "Configurator",
        "__cfg_path",
        "getfloat",
        "np",
        "unique",
        "y_train",
        "class_labels",
        "logging",
        "info",
        "Configurator",
        "__cfg_path",
        "get",
        "x_train",
        "shape",
        "time_window_size",
        "x_train",
        "reshape",
        "time_window_size",
        "n_features",
        "x_val",
        "reshape",
        "time_window_size",
        "n_features",
        "PrivateConfigurator",
        "x_train",
        "shape",
        "PrivateConfigurator",
        "x_train",
        "shape",
        "n_features",
        "PrivateConfigurator",
        "PrivateConfigurator",
        "PrivateConfigurator",
        "PrivateConfigurator",
        "logging",
        "info",
        "x_train",
        "shape",
        "logging",
        "info",
        "x_val",
        "shape",
        "_start_cnn_evaluation",
        "x_train",
        "y_train",
        "x_val",
        "y_val",
        "dl_models",
        "Configurator",
        "__cfg_path",
        "getint",
        "Configurator",
        "__cfg_path",
        "getint",
        "Configurator",
        "__cfg_path",
        "getfloat",
        "np",
        "unique",
        "y_train",
        "class_labels",
        "Configurator",
        "__cfg_path",
        "get",
        "x_train",
        "shape",
        "PrivateConfigurator",
        "PrivateConfigurator",
        "n_features",
        "PrivateConfigurator",
        "PrivateConfigurator",
        "x_train",
        "reshape",
        "n_features",
        "x_val",
        "reshape",
        "n_features",
        "np",
        "asarray",
        "y_train",
        "reshape",
        "np",
        "asarray",
        "y_val",
        "reshape",
        "logging",
        "info",
        "x_train",
        "shape",
        "logging",
        "info",
        "x_val",
        "shape",
        "_start_cnn_evaluation",
        "X_training_features",
        "y_training_features",
        "X_testing_features",
        "y_testing_features",
        "dl_models",
        "Configurator",
        "__cfg_path",
        "getint",
        "Configurator",
        "__cfg_path",
        "getint",
        "Configurator",
        "__cfg_path",
        "getfloat",
        "np",
        "unique",
        "y_train",
        "class_labels",
        "df",
        "filter_name",
        "sample_rate",
        "frequency_cutoff",
        "order",
        "sm",
        "signal",
        "build_filter",
        "frequency",
        "frequency_cutoff",
        "sample_rate",
        "sample_rate",
        "filter_type",
        "filter_name",
        "filter_order",
        "order",
        "Configurator",
        "__cfg_path",
        "get",
        "column",
        "df",
        "columns",
        "_data_delimiters",
        "header_type",
        "_data_delimiters",
        "header_type",
        "sm",
        "signal",
        "filter_signal",
        "b",
        "a",
        "signal",
        "df",
        "column",
        "values",
        "df",
        "datetime",
        "now",
        "datetime",
        "fromtimestamp",
        "datetime",
        "timestamp",
        "now",
        "timestamp",
        "split",
        "os",
        "path",
        "join",
        "Configurator",
        "__cfg_path",
        "get",
        "log_dir_name",
        "Path",
        "new_log_dir_path",
        "mkdir",
        "parents",
        "exist_ok",
        "copy2",
        "new_log_dir_path",
        "Configurator",
        "__cfg_path",
        "new_log_dir_path",
        "logging",
        "basicConfig",
        "filename",
        "os",
        "path",
        "join",
        "new_log_dir_path",
        "format",
        "level",
        "logging",
        "INFO",
        "OSError",
        "logging",
        "log",
        "msg",
        "new_log_dir_path",
        "level",
        "logging",
        "ERROR",
        "logging",
        "log",
        "msg",
        "new_log_dir_path",
        "level",
        "logging",
        "INFO",
        "history",
        "title",
        "save_to_dl_dir",
        "save_to_dl_dir",
        "os",
        "path",
        "join",
        "Configurator",
        "__cfg_path",
        "get",
        "os",
        "path",
        "join",
        "dl_dir",
        "Path",
        "training_stats_dir",
        "mkdir",
        "parents",
        "exist_ok",
        "training_stats_dir",
        "Path",
        "os",
        "path",
        "join",
        "Configurator",
        "__cfg_path",
        "get",
        "mkdir",
        "parents",
        "exist_ok",
        "os",
        "path",
        "join",
        "Configurator",
        "__cfg_path",
        "get",
        "plt",
        "subplots",
        "fig",
        "suptitle",
        "title",
        "axis",
        "set_title",
        "axis",
        "plot",
        "history",
        "label",
        "c",
        "axis",
        "plot",
        "history",
        "label",
        "c",
        "axis",
        "legend",
        "axis",
        "set_title",
        "axis",
        "plot",
        "history",
        "label",
        "c",
        "axis",
        "plot",
        "history",
        "label",
        "c",
        "axis",
        "legend",
        "plt",
        "savefig",
        "os",
        "path",
        "join",
        "save_to",
        "title",
        "plt",
        "show",
        "plt",
        "close",
        "x",
        "y",
        "kf",
        "model",
        "model_name",
        "epochs",
        "x_unseen",
        "y_unseen",
        "model",
        "get_weights",
        "train",
        "test",
        "kf",
        "split",
        "x",
        "fold",
        "x",
        "train",
        "tf",
        "keras",
        "utils",
        "to_categorical",
        "y",
        "train",
        "x",
        "test",
        "tf",
        "keras",
        "utils",
        "to_categorical",
        "y",
        "test",
        "logging",
        "info",
        "logging",
        "info",
        "fold",
        "model",
        "fit",
        "x_train",
        "y_train",
        "validation_data",
        "x_test",
        "y_test",
        "verbose",
        "epochs",
        "epochs",
        "_print_val_train_stats",
        "history",
        "history",
        "model_name",
        "fold",
        "Configurator",
        "__cfg_path",
        "getboolean",
        "model",
        "predict",
        "x_test",
        "model",
        "evaluate",
        "x_test",
        "y_test",
        "verbose",
        "logging",
        "info",
        "fold",
        "model",
        "metrics_names",
        "scores",
        "model",
        "metrics_names",
        "scores",
        "accuracy_per_fold",
        "append",
        "scores",
        "loss_per_fold",
        "append",
        "scores",
        "x_unseen",
        "y_unseen",
        "model",
        "predict",
        "x_unseen",
        "trained_models",
        "update",
        "fold",
        "model",
        "get_weights",
        "y_test",
        "pred",
        "y_unseen_predicted",
        "scores",
        "np",
        "sqrt",
        "metrics",
        "mean_squared_error",
        "y_test",
        "argmax",
        "pred",
        "argmax",
        "trained_models",
        "update",
        "fold",
        "model",
        "get_weights",
        "y_test",
        "pred",
        "scores",
        "logging",
        "info",
        "fold",
        "len",
        "np",
        "where",
        "y_train",
        "argmax",
        "len",
        "np",
        "where",
        "y_train",
        "argmax",
        "logging",
        "info",
        "fold",
        "len",
        "np",
        "where",
        "y_test",
        "argmax",
        "len",
        "np",
        "where",
        "y_test",
        "argmax",
        "logging",
        "info",
        "classification_report",
        "y_test",
        "argmax",
        "pred",
        "argmax",
        "x_unseen",
        "y_unseen",
        "logging",
        "info",
        "classification_report",
        "y_unseen",
        "y_unseen_predicted",
        "argmax",
        "logging",
        "info",
        "np",
        "sqrt",
        "metrics",
        "mean_squared_error",
        "y_unseen",
        "y_unseen_predicted",
        "argmax",
        "logging",
        "info",
        "fold",
        "mse",
        "logging",
        "info",
        "model",
        "set_weights",
        "initial_weights",
        "logging",
        "info",
        "logging",
        "info",
        "len",
        "np",
        "where",
        "y",
        "len",
        "np",
        "where",
        "y",
        "logging",
        "info",
        "logging",
        "info",
        "logging",
        "info",
        "i",
        "len",
        "accuracy_per_fold",
        "logging",
        "info",
        "logging",
        "info",
        "i",
        "loss_per_fold",
        "i",
        "accuracy_per_fold",
        "i",
        "logging",
        "info",
        "logging",
        "info",
        "logging",
        "info",
        "np",
        "mean",
        "accuracy_per_fold",
        "np",
        "std",
        "accuracy_per_fold",
        "logging",
        "info",
        "np",
        "mean",
        "loss_per_fold",
        "logging",
        "info",
        "np",
        "mean",
        "accuracy_per_fold",
        "trained_models",
        "trained_models",
        "model",
        "x_test_unseen",
        "y_test",
        "model_name",
        "class_values",
        "class_txt_labels",
        "threshold",
        "key",
        "trained_models",
        "trained_models",
        "key",
        "threshold",
        "model",
        "set_weights",
        "trained_models",
        "key",
        "model",
        "predict",
        "x_test_unseen",
        "argmax",
        "predictions",
        "append",
        "y_pred",
        "predictions",
        "logging",
        "info",
        "len",
        "predictions",
        "stats",
        "mode",
        "np",
        "asarray",
        "predictions",
        "_cm_analysis",
        "y_test",
        "predictions",
        "class_values",
        "class_txt_labels",
        "model_name",
        "model_name",
        "n_used_models",
        "sensitivity_specificity_support",
        "y_test",
        "predictions",
        "average",
        "precision_recall_fscore_support",
        "y_test",
        "predictions",
        "average",
        "accuracy_score",
        "y_test",
        "predictions",
        "normalize",
        "logging",
        "log",
        "msg",
        "model_name",
        "metrics1",
        "metrics1",
        "metrics2",
        "metrics3",
        "metrics2",
        "metrics2",
        "level",
        "logging",
        "INFO",
        "y_true",
        "y_pred",
        "labels",
        "display_labels",
        "model_name",
        "title",
        "path",
        "ymap",
        "len",
        "np",
        "unique",
        "y_true",
        "tail_size",
        "n_class",
        "tail_size",
        "n_class",
        "ymap",
        "ymap",
        "yi",
        "yi",
        "y_pred",
        "ymap",
        "yi",
        "yi",
        "y_true",
        "ymap",
        "yi",
        "yi",
        "labels",
        "confusion_matrix",
        "y_true",
        "y_pred",
        "labels",
        "labels",
        "np",
        "sum",
        "cm",
        "axis",
        "keepdims",
        "cm",
        "cm_sum",
        "astype",
        "np",
        "empty_like",
        "cm",
        "astype",
        "cm",
        "shape",
        "i",
        "nrows",
        "j",
        "ncols",
        "cm",
        "i",
        "j",
        "cm_perc",
        "i",
        "j",
        "i",
        "j",
        "cm_sum",
        "i",
        "p",
        "c",
        "s",
        "c",
        "p",
        "c",
        "pd",
        "DataFrame",
        "cm",
        "index",
        "display_labels",
        "columns",
        "display_labels",
        "cm",
        "index",
        "cm",
        "columns",
        "plt",
        "subplots",
        "figsize",
        "figsize",
        "plt",
        "title",
        "title",
        "sns",
        "heatmap",
        "cm",
        "annot",
        "annot",
        "fmt",
        "ax",
        "ax",
        "plt",
        "savefig",
        "os",
        "path",
        "join",
        "Configurator",
        "__cfg_path",
        "get",
        "path",
        "model_name",
        "title",
        "plt",
        "show",
        "plt",
        "close",
        "fig",
        "plt",
        "close",
        "ds",
        "p_ids",
        "ds",
        "unique",
        "len",
        "patient_ids",
        "np",
        "floor",
        "total_patients",
        "Configurator",
        "__cfg_path",
        "getfloat",
        "p_ids",
        "p_ids",
        "patient_ids",
        "patient_ids",
        "remove",
        "test_patients",
        "_",
        "n_patient_validation",
        "random",
        "randint",
        "len",
        "patient_ids",
        "patient_ids",
        "pos",
        "np",
        "patient_ids",
        "pos",
        "test_patients",
        "append",
        "random_p_id",
        "logging",
        "info",
        "patient_ids",
        "logging",
        "info",
        "test_patients",
        "ds",
        "loc",
        "ds",
        "isin",
        "patient_ids",
        "sort_values",
        "by",
        "ds",
        "loc",
        "ds",
        "isin",
        "test_patients",
        "sort_values",
        "by",
        "training_dataset",
        "validation_dataset",
        "ds",
        "training_dataset",
        "validation_dataset",
        "tw_size",
        "p_id",
        "training_dataset",
        "unique",
        "_get_window",
        "ds",
        "loc",
        "ds",
        "ds",
        "p_id",
        "index",
        "Configurator",
        "__cfg_path",
        "getint",
        "tw_size",
        "Configurator",
        "__cfg_path",
        "getfloat",
        "cnn_training_data",
        "append",
        "data_i",
        "cnn_training_labels",
        "append",
        "label_i",
        "val_p_id",
        "validation_dataset",
        "unique",
        "_get_window",
        "ds",
        "loc",
        "ds",
        "ds",
        "val_p_id",
        "index",
        "Configurator",
        "__cfg_path",
        "getint",
        "tw_size",
        "Configurator",
        "__cfg_path",
        "getfloat",
        "cnn_validation_data",
        "append",
        "data_i",
        "cnn_validation_labels",
        "append",
        "label_i",
        "np",
        "concatenate",
        "cnn_training_data",
        "np",
        "concatenate",
        "cnn_training_labels",
        "np",
        "concatenate",
        "cnn_validation_data",
        "np",
        "concatenate",
        "cnn_validation_labels",
        "cnn_training_data",
        "cnn_validation_data",
        "cnn_training_labels",
        "cnn_validation_labels",
        "df",
        "drop_class",
        "drop_patient",
        "split_method",
        "normalisation_method",
        "selection_method",
        "balancing_method",
        "ids_test_set",
        "logging",
        "info",
        "drop_class",
        "class_name",
        "drop_class",
        "df",
        "df",
        "class_name",
        "index",
        "df",
        "drop",
        "indexes",
        "inplace",
        "drop_patient",
        "patient_id",
        "drop_patient",
        "df",
        "df",
        "patient_id",
        "index",
        "df",
        "drop",
        "indexes",
        "inplace",
        "df",
        "unique",
        "logging",
        "info",
        "old",
        "len",
        "old_labels",
        "old_labels",
        "logging",
        "info",
        "old",
        "original_name_labels",
        "append",
        "old",
        "df",
        "replace",
        "old",
        "Configurator",
        "__cfg_path",
        "get",
        "split_method",
        "header_type",
        "_select_patients_training_test",
        "df",
        "ids_test_set",
        "split_method",
        "header_type",
        "split_method",
        "train_test_split",
        "df",
        "shuffle",
        "test_size",
        "Configurator",
        "__cfg_path",
        "getfloat",
        "random_state",
        "logging",
        "info",
        "split_method",
        "split_method",
        "exit",
        "training_dataset",
        "columns",
        "training_dataset",
        "drop",
        "axis",
        "validation_dataset",
        "drop",
        "axis",
        "training_dataset",
        "drop",
        "axis",
        "validation_dataset",
        "drop",
        "axis",
        "training_dataset",
        "validation_dataset",
        "training_dataset",
        "validation_dataset",
        "normalisation_method",
        "preprocessing",
        "MinMaxScaler",
        "normalisation_method",
        "preprocessing",
        "RobustScaler",
        "preprocessing",
        "StandardScaler",
        "scaler",
        "fit_transform",
        "training_data",
        "scaler",
        "transform",
        "validation_data",
        "Configurator",
        "__cfg_path",
        "get",
        "os",
        "path",
        "join",
        "Configurator",
        "__cfg_path",
        "get",
        "Path",
        "features_path",
        "mkdir",
        "parents",
        "exist_ok",
        "open",
        "os",
        "path",
        "join",
        "features_path",
        "exf",
        "exf",
        "write",
        "join",
        "df",
        "columns",
        "Configurator",
        "__cfg_path",
        "getboolean",
        "Configurator",
        "__cfg_path",
        "get",
        "selection_method",
        "VarianceThreshold",
        "selector",
        "fit_transform",
        "training_data",
        "selector",
        "transform",
        "validation_data",
        "selection_method",
        "LinearSVC",
        "C",
        "penalty",
        "dual",
        "fit",
        "training_data",
        "training_labels",
        "SelectFromModel",
        "lsvc",
        "prefit",
        "model",
        "fit_transform",
        "training_data",
        "model",
        "transform",
        "validation_data",
        "selection_method",
        "ExtraTreesClassifier",
        "n_estimators",
        "clf",
        "fit",
        "training_data",
        "training_labels",
        "SelectFromModel",
        "clf",
        "prefit",
        "model",
        "fit_transform",
        "training_data",
        "model",
        "transform",
        "validation_data",
        "selection_method",
        "SVR",
        "kernel",
        "RFE",
        "estimator",
        "n_features_to_select",
        "step",
        "selector",
        "fit_transform",
        "training_data",
        "training_labels",
        "selector",
        "transform",
        "validation_data",
        "logging",
        "info",
        "selection_method",
        "selection_method",
        "exit",
        "logging",
        "info",
        "validation_data",
        "shape",
        "Configurator",
        "__cfg_path",
        "get",
        "resampling_technique",
        "balancing_method",
        "RandomUnderSampler",
        "balancing_method",
        "NearMiss",
        "balancing_method",
        "EditedNearestNeighbours",
        "logging",
        "info",
        "balancing_method",
        "RandomUnderSampler",
        "resampling_technique",
        "balancing_method",
        "SMOTE",
        "balancing_method",
        "ADASYN",
        "balancing_method",
        "KMeansSMOTE",
        "k_neighbors",
        "balancing_method",
        "RandomOverSampler",
        "logging",
        "info",
        "balancing_method",
        "RandomOverSampler",
        "sampler",
        "sampler",
        "fit_resample",
        "training_data",
        "training_labels",
        "training_data",
        "training_labels",
        "logging",
        "info",
        "resampling_technique",
        "balancing_method",
        "logging",
        "info",
        "training_data",
        "shape",
        "logging",
        "info",
        "validation_data",
        "shape",
        "training_data",
        "validation_data",
        "training_labels",
        "values",
        "validation_labels",
        "values",
        "original_name_labels",
        "df",
        "tw_size",
        "df",
        "unique",
        "p_id",
        "patient_ids",
        "_features_extraction",
        "df",
        "drop",
        "df",
        "df",
        "p_id",
        "index",
        "Configurator",
        "__cfg_path",
        "getint",
        "tw_size",
        "Configurator",
        "__cfg_path",
        "getfloat",
        "Configurator",
        "__cfg_path",
        "getfloat",
        "features",
        "append",
        "features_dataset_i",
        "pd",
        "concat",
        "features",
        "ignore_index",
        "features_dataset",
        "columns",
        "header_type",
        "columns",
        "_data_delimiters",
        "header_type",
        "_data_delimiters",
        "header_type",
        "header_type",
        "header_type",
        "column_index",
        "ax",
        "n",
        "cycle",
        "axis",
        "column_index",
        "accelerometer_name",
        "header",
        "append",
        "column_signature",
        "accelerometer_name",
        "ax",
        "header",
        "append",
        "header_type",
        "header_type",
        "header",
        "append",
        "header",
        "ds_dir",
        "header_type",
        "separator",
        "has_header",
        "file",
        "os",
        "listdir",
        "ds_dir",
        "is_first",
        "has_header",
        "_derive_headers",
        "pd",
        "read_csv",
        "os",
        "path",
        "join",
        "ds_dir",
        "file",
        "sep",
        "separator",
        "shape",
        "header_type",
        "has_header",
        "frames",
        "append",
        "pd",
        "read_csv",
        "os",
        "path",
        "join",
        "ds_dir",
        "file",
        "sep",
        "separator",
        "pd",
        "read_csv",
        "os",
        "path",
        "join",
        "ds_dir",
        "file",
        "sep",
        "separator",
        "header",
        "header",
        "frames",
        "append",
        "df_i",
        "pd",
        "concat",
        "frames",
        "ignore_index",
        "df",
        "sampling_frequency",
        "high_cutoff",
        "low_cutoff",
        "sub_method",
        "header_type",
        "logging",
        "info",
        "df",
        "replace",
        "math",
        "inf",
        "math",
        "inf",
        "np",
        "nan",
        "inplace",
        "sub_method",
        "df",
        "fillna",
        "df",
        "mean",
        "inplace",
        "sub_method",
        "df",
        "fillna",
        "method",
        "inplace",
        "sub_method",
        "df",
        "fillna",
        "method",
        "inplace",
        "sub_method",
        "df",
        "fillna",
        "Configurator",
        "__cfg_path",
        "getfloat",
        "logging",
        "info",
        "sub_method",
        "df",
        "reset_index",
        "drop",
        "Configurator",
        "__cfg_path",
        "get",
        "Configurator",
        "__cfg_path",
        "getint",
        "filter_name",
        "low_cutoff",
        "filter_name",
        "high_cutoff",
        "filter_name",
        "high_cutoff",
        "low_cutoff",
        "logging",
        "info",
        "filter_name",
        "filter_name",
        "exit",
        "pd",
        "DataFrame",
        "_apply_filter",
        "df",
        "df_filtered",
        "filter_name",
        "filter_name",
        "sample_rate",
        "sampling_frequency",
        "frequency_cutoff",
        "cutoff",
        "order",
        "filter_order",
        "columns",
        "df",
        "columns",
        "_data_delimiters",
        "header_type",
        "_data_delimiters",
        "header_type",
        "df",
        "header_type",
        "df",
        "header_type",
        "df_filtered",
        "insert",
        "df",
        "df_filtered",
        "df",
        "sampling_frequency",
        "time_window",
        "overlap",
        "header_type",
        "df",
        "drop",
        "axis",
        "header_type",
        "x",
        "drop",
        "axis",
        "header_type",
        "x",
        "drop",
        "axis",
        "df",
        "Configurator",
        "__cfg_path",
        "get",
        "domain",
        "ts",
        "get_features_by_domain",
        "ts",
        "get_features_by_domain",
        "domain",
        "ts",
        "time_series_features_extractor",
        "cfg",
        "x",
        "fs",
        "sampling_frequency",
        "window_size",
        "time_window",
        "overlap",
        "overlap",
        "verbose",
        "_labels_windowing",
        "y",
        "sampling_frequency",
        "time_window",
        "overlap",
        "_fill_missing_values",
        "X_features",
        "logging",
        "info",
        "X_features",
        "shape",
        "pd",
        "DataFrame",
        "X_features",
        "Y_features",
        "features_df",
        "x_train",
        "y_train",
        "x_test",
        "y_test",
        "models_and_params",
        "class_labels",
        "Path",
        "os",
        "path",
        "join",
        "Configurator",
        "__cfg_path",
        "get",
        "mkdir",
        "parents",
        "exist_ok",
        "logging",
        "info",
        "m",
        "models_and_params",
        "mp",
        "update",
        "m",
        "MlModels",
        "clf_model_params",
        "m",
        "name",
        "param",
        "mp",
        "items",
        "logging",
        "info",
        "name",
        "Configurator",
        "__cfg_path",
        "get",
        "GridSearchCV",
        "param",
        "param",
        "scoring",
        "n_jobs",
        "clf",
        "fit",
        "x_train",
        "y_train",
        "clf",
        "predict",
        "x_test",
        "sensitivity_specificity_support",
        "y_test",
        "y_pred",
        "average",
        "precision_recall_fscore_support",
        "y_test",
        "y_pred",
        "average",
        "accuracy_score",
        "y_test",
        "y_pred",
        "normalize",
        "report_raw",
        "append",
        "name",
        "y_pred",
        "metrics1",
        "metrics1",
        "metrics2",
        "metrics2",
        "metrics2",
        "metrics3",
        "_cm_analysis",
        "y_test",
        "y_pred",
        "np",
        "unique",
        "y_train",
        "class_labels",
        "name",
        "logging",
        "log",
        "msg",
        "classification_report",
        "y_test",
        "y_pred",
        "level",
        "logging",
        "INFO",
        "logging",
        "log",
        "msg",
        "name",
        "metrics1",
        "metrics1",
        "metrics2",
        "metrics3",
        "metrics2",
        "metrics2",
        "level",
        "logging",
        "INFO",
        "x_train",
        "y_train",
        "x_test",
        "y_test",
        "models_name",
        "epochs",
        "n_fold",
        "me_loss_threshold",
        "class_values",
        "class_labels",
        "title",
        "Path",
        "os",
        "path",
        "join",
        "Configurator",
        "__cfg_path",
        "get",
        "mkdir",
        "parents",
        "exist_ok",
        "logging",
        "log",
        "msg",
        "level",
        "logging",
        "INFO",
        "KFold",
        "n_fold",
        "shuffle",
        "random_state",
        "model_name",
        "models_name",
        "PrivateConfigurator",
        "len",
        "np",
        "unique",
        "y_train",
        "logging",
        "log",
        "msg",
        "model_name",
        "x_train",
        "shape",
        "epochs",
        "me_loss_threshold",
        "level",
        "logging",
        "INFO",
        "Models",
        "Configurator",
        "__cfg_path",
        "getfloat",
        "Configurator",
        "__cfg_path",
        "getfloat",
        "get_model",
        "model_name",
        "_do_k_fold",
        "x_train",
        "y_train",
        "kf",
        "model",
        "model_name",
        "title",
        "epochs",
        "_model_ensembles",
        "trained_models",
        "model",
        "x_test",
        "y_test",
        "model_name",
        "title",
        "threshold",
        "me_loss_threshold",
        "class_values",
        "class_values",
        "class_txt_labels",
        "class_labels",
        "df",
        "pd",
        "DataFrame",
        "sampling_frequency",
        "window_size",
        "overlap",
        "window_size",
        "sampling_frequency",
        "overlap",
        "Configurator",
        "__cfg_path",
        "get",
        "df",
        "columns",
        "_data_delimiters",
        "_data_delimiters",
        "i",
        "len",
        "df",
        "window_size",
        "hop_size",
        "column",
        "columns",
        "df",
        "column",
        "values",
        "i",
        "i",
        "window_size",
        "append",
        "x_i",
        "stats",
        "mode",
        "df",
        "values",
        "i",
        "i",
        "window_size",
        "data",
        "append",
        "np",
        "array",
        "T",
        "labels",
        "append",
        "label",
        "has_patient",
        "patients",
        "append",
        "stats",
        "mode",
        "df",
        "values",
        "i",
        "i",
        "window_size",
        "has_patient",
        "np",
        "asarray",
        "data",
        "np",
        "asarray",
        "labels",
        "np",
        "asarray",
        "patients",
        "np",
        "asarray",
        "data",
        "np",
        "asarray",
        "labels",
        "staticmethod",
        "data",
        "labels",
        "balancing",
        "n_features",
        "time_window",
        "balancing",
        "data",
        "labels",
        "balancing",
        "SMOTE",
        "oversample",
        "fit_resample",
        "data",
        "reshape",
        "n_features",
        "np",
        "concatenate",
        "x",
        "time_window",
        "x",
        "labels",
        "X_over",
        "reshape",
        "time_window",
        "n_features",
        "np",
        "asarray",
        "y_over",
        "time_window",
        "X_training_over",
        "y_training_over",
        "balancing",
        "RandomUnderSampler",
        "undersample",
        "fit_resample",
        "data",
        "reshape",
        "n_features",
        "np",
        "concatenate",
        "x",
        "time_window",
        "x",
        "labels",
        "X_under",
        "reshape",
        "time_window",
        "n_features",
        "np",
        "asarray",
        "y_under",
        "time_window",
        "X_training_under",
        "y_training_under",
        "staticmethod",
        "data",
        "labels",
        "balancing",
        "time_window",
        "n_features",
        "test_size",
        "train_test_split",
        "data",
        "labels",
        "test_size",
        "test_size",
        "shuffle",
        "random_state",
        "balancing",
        "X_training",
        "X_testing",
        "y_training",
        "y_testing",
        "balancing",
        "SMOTE",
        "oversample",
        "fit_resample",
        "X_training",
        "reshape",
        "n_features",
        "np",
        "concatenate",
        "x",
        "time_window",
        "x",
        "y_training",
        "X_over",
        "reshape",
        "time_window",
        "n_features",
        "np",
        "asarray",
        "y_over",
        "time_window",
        "X_training_over",
        "X_testing",
        "y_training_over",
        "y_testing",
        "balancing",
        "cls",
        "np",
        "unique",
        "labels",
        "indexes",
        "append",
        "np",
        "where",
        "y_training",
        "cls",
        "math",
        "inf",
        "cls",
        "indexes",
        "len",
        "cls",
        "min_cls",
        "len",
        "cls",
        "cls",
        "indexes",
        "random",
        "Random",
        "shuffle",
        "cls",
        "np",
        "vstack",
        "X_training",
        "x",
        "min_cls",
        "x",
        "indexes",
        "np",
        "hstack",
        "cls_val",
        "min_cls",
        "cls_val",
        "np",
        "unique",
        "labels",
        "X_training_under",
        "reshape",
        "n_features",
        "mean",
        "axis",
        "X_training_under",
        "reshape",
        "n_features",
        "std",
        "axis",
        "X_training_under",
        "training_mean",
        "training_std",
        "X_testing",
        "training_mean",
        "training_std",
        "X_training_under",
        "X_testing",
        "y_training_under",
        "y_testing",
        "staticmethod",
        "labels",
        "sampling_frequency",
        "time_window",
        "overlap",
        "time_window",
        "sampling_frequency",
        "overlap",
        "i",
        "len",
        "labels",
        "time_window",
        "hop_size",
        "stats",
        "mode",
        "labels",
        "values",
        "i",
        "i",
        "time_window",
        "windowed_labels",
        "append",
        "new_label",
        "np",
        "asarray",
        "windowed_labels",
        "staticmethod",
        "df",
        "df",
        "replace",
        "np",
        "inf",
        "np",
        "inf",
        "np",
        "nan",
        "inplace",
        "df",
        "fillna",
        "df",
        "mean",
        "inplace",
        "df"
    ],
    "literals": [
        "'tdc'",
        "'tdcp'",
        "'dc'",
        "'dcp'",
        "'dataset'",
        "'path'",
        "'dataset'",
        "'separator'",
        "' '",
        "'dataset'",
        "'header_type'",
        "'dataset'",
        "'has_header'",
        "'dataset'",
        "'header_type'",
        "'settings'",
        "'group_by'",
        "'settings'",
        "'log_dir'",
        "'stats'",
        "'axes.prop_cycle'",
        "'color'",
        "'Class Distribution'",
        "'bar'",
        "'%'",
        "'Classes'",
        "'Instances'",
        "'settings'",
        "'log_dir'",
        "'stats/class_barplot.png'",
        "'p'",
        "'Data per Patient'",
        "'P_ID'",
        "'bar'",
        "'Patients'",
        "'Instances'",
        "'settings'",
        "'log_dir'",
        "'stats/patients_barplot.png'",
        "'settings'",
        "'log_dir'",
        "'stats/data_boxplot.png'",
        "'CLASS'",
        "'settings'",
        "'log_dir'",
        "'stats/class_boxplot.png'",
        "'settings'",
        "'sampling_frequency'",
        "'settings'",
        "'time'",
        "'dataset'",
        "'path'",
        "'dataset'",
        "'separator'",
        "' '",
        "'dataset'",
        "'header_type'",
        "'dataset'",
        "'has_header'",
        "'settings'",
        "'sampling_frequency'",
        "'cleaning'",
        "'high_cut'",
        "'cleaning'",
        "'low_cut'",
        "'cleaning'",
        "'sub_method'",
        "'dataset'",
        "'header_type'",
        "'settings'",
        "'data_treatment'",
        "'features_extraction'",
        "'settings'",
        "'sampling_frequency'",
        "'settings'",
        "'overlap'",
        "'dataset'",
        "'header_type'",
        "'segmentation'",
        "'settings'",
        "'sampling_frequency'",
        "'settings'",
        "'overlap'",
        "'raw'",
        "'*** Fallback: not recognised %s, using Raw instead ***'",
        "'preprocessing'",
        "'split_method'",
        "'preprocessing'",
        "'normalisation_method'",
        "'preprocessing'",
        "'selection_method'",
        "'preprocessing'",
        "'balancing_method'",
        "'settings'",
        "'use_ml'",
        "'settings'",
        "'use_dl'",
        "'p'",
        "'dataset'",
        "'header_type'",
        "'CLASS'",
        "'P_ID'",
        "'training'",
        "'use_features'",
        "'settings'",
        "'data_treatment'",
        "'features_extraction'",
        "'--- Features as input of CNN ---'",
        "'cnn'",
        "'input_shape_x'",
        "'1'",
        "'cnn'",
        "'input_shape_y'",
        "'m1_acc'",
        "'conv-kernel'",
        "'1'",
        "'m1_acc'",
        "'pool-size'",
        "'1'",
        "'training'",
        "'epochs'",
        "'training'",
        "'k_fold'",
        "'training'",
        "'loss_threshold'",
        "'Features-as-input'",
        "'--- Accelerometer data as input of CNN ---'",
        "'settings'",
        "'data_treatment'",
        "'segmentation'",
        "'cnn'",
        "'input_shape_x'",
        "'cnn'",
        "'input_shape_y'",
        "'m1_acc'",
        "'conv-kernel'",
        "'1'",
        "'m1_acc'",
        "'pool-size'",
        "'1'",
        "'m1_acc'",
        "'conv-kernel'",
        "'3'",
        "'m1_acc'",
        "'pool-size'",
        "'2'",
        "'--> Training set shape: %s'",
        "'--> Validation set shape: %s'",
        "'training'",
        "'epochs'",
        "'training'",
        "'k_fold'",
        "'training'",
        "'loss_threshold'",
        "'Accelerometer-data'",
        "'settings'",
        "'data_treatment'",
        "'raw'",
        "'cnn'",
        "'input_shape_x'",
        "'1'",
        "'cnn'",
        "'input_shape_y'",
        "'m1_acc'",
        "'conv-kernel'",
        "'1'",
        "'m1_acc'",
        "'pool-size'",
        "'1'",
        "'--> Training set shape: %s'",
        "'--> Validation set shape: %s'",
        "'training'",
        "'epochs'",
        "'training'",
        "'k_fold'",
        "'training'",
        "'loss_threshold'",
        "'Raw'",
        "'dataset'",
        "'header_type'",
        "'%s - log'",
        "'.'",
        "'settings'",
        "'log_dir'",
        "'../config.cfg'",
        "'settings'",
        "'log_dir'",
        "'log.rtf'",
        "''",
        "\"Creation of the directory %s failed\"",
        "\"Successfully created the directory %s \"",
        "'settings'",
        "'log_dir'",
        "'deep_learning'",
        "'training'",
        "'settings'",
        "'log_dir'",
        "'training'",
        "'settings'",
        "'log_dir'",
        "'training'",
        "'%s'",
        "'Accuracy'",
        "'accuracy'",
        "'acc'",
        "'g'",
        "'val_accuracy'",
        "'val-acc'",
        "'b'",
        "'Loss'",
        "'loss'",
        "'loss'",
        "'r'",
        "'val_loss'",
        "'val-loss'",
        "'m'",
        "'training_stats_%s.png'",
        "'------------------------------------------------------------------------'",
        "'Training for fold %s ...'",
        "'%s fold %s'",
        "'settings'",
        "'use_dl'",
        "'\\nStats for fold %s: %s of %s; %s of %s'",
        "\"\\nTraining Fold %s info:\\n•Gait has %s instances\\n•FoG has %s instances\"",
        "\"\\nTesting Fold %s info: \\n•Gait has %s instances\\n•FoG has %s instances\"",
        "'Classification Report on Test Fold\\n%s'",
        "'Classification Report on Unseen Data\\n%s'",
        "\"\\nMean Squared Error on Unseen Data: %s\"",
        "\"\\nFold %s score: %s\\n\"",
        "'------------------------------------------------------------------------'",
        "'------------------------------------------------------------------------'",
        "'Dataset Information:\\n•Gait instances are %s\\n•FoG instances are %s'",
        "'------------------------------------------------------------------------'",
        "'------------------------------------------------------------------------'",
        "'Score per fold'",
        "'------------------------------------------------------------------------'",
        "'> Fold %s - Loss: %s - Accuracy: %s'",
        "'------------------------------------------------------------------------'",
        "'Average scores for all folds:'",
        "'> Accuracy: %s (+- %s)'",
        "'> Loss: %s'",
        "'------------------------------------------------------------------------'",
        "'There are no predictions, models were too bad.'",
        "'%s Model Ensembles (used %s)'",
        "'deep_learning'",
        "'weighted'",
        "'weighted'",
        "'--> clf: %s\\n'",
        "'   • specificity: %s\\n'",
        "'   • sensitivity: %s\\n'",
        "'   • precision: %s\\n'",
        "'   • accuracy: %s\\n'",
        "'   • recall: %s\\n'",
        "'   • f1-score: %s\\n'",
        "'%.1f%%\\n%d/%d'",
        "''",
        "'%.1f%%\\n%d'",
        "'Actual'",
        "'Predicted'",
        "'Confusion Matrix %s'",
        "''",
        "'settings'",
        "'log_dir'",
        "'%s/CM %s  %s.png'",
        "'P_ID'",
        "'training'",
        "'test_size'",
        "'--> Training subjects: %s'",
        "'--> Testing subjects: %s'",
        "'P_ID'",
        "'P_ID'",
        "'time'",
        "'P_ID'",
        "'P_ID'",
        "'time'",
        "'P_ID'",
        "'P_ID'",
        "'settings'",
        "'sampling_frequency'",
        "'settings'",
        "'overlap'",
        "'P_ID'",
        "'P_ID'",
        "'settings'",
        "'sampling_frequency'",
        "'settings'",
        "'overlap'",
        "'--- Data Preprocessing ---'",
        "'CLASS'",
        "'P_ID'",
        "'CLASS'",
        "'--> New labels:'",
        "'• %s --> %s'",
        "'CLASS'",
        "'CLASS'",
        "'dataset'",
        "'header_type'",
        "'inter'",
        "'p'",
        "'intra'",
        "'p'",
        "'holdout'",
        "'training'",
        "'test_size'",
        "'*** Error: %s not a valid train/test split method ***'",
        "'*** Error: %s not a valid train/test split method ***'",
        "'P_ID'",
        "'CLASS'",
        "'P_ID'",
        "'CLASS'",
        "'P_ID'",
        "'CLASS'",
        "'CLASS'",
        "'CLASS'",
        "'CLASS'",
        "'minmax'",
        "'robust'",
        "'settings'",
        "'data_treatment'",
        "'features_extraction'",
        "'settings'",
        "'log_dir'",
        "'features'",
        "'extracted_features.rtf'",
        "'a+'",
        "'%s'",
        "'\\n'",
        "'settings'",
        "'features_selection'",
        "'settings'",
        "'data_treatment'",
        "'features_extraction'",
        "'variance'",
        "'l1'",
        "\"l1\"",
        "'tree-based'",
        "'recursive'",
        "\"linear\"",
        "'*** Error: %s not implemented features selection technique ***'",
        "'*** Error: %s not implemented features selection technique ***'",
        "'--> Features selected: %s'",
        "'settings'",
        "'resampling'",
        "'under'",
        "'random_under'",
        "'near_miss'",
        "'edited_nn'",
        "'*** Fallback: not recognised %s, using RandomUnderSampler instead ***'",
        "'over'",
        "'smote'",
        "'adasyn'",
        "'kmeans_smote'",
        "'random_over'",
        "'*** Fallback: not recognised %s, using RandomOverSampler instead ***'",
        "'--> Applied %s %s'",
        "'--> Train test shape: %s'",
        "'--> Validation test shape: %s'",
        "'P_ID'",
        "'P_ID'",
        "'settings'",
        "'sampling_frequency'",
        "'settings'",
        "'overlap'",
        "'dataset'",
        "'header_type'",
        "'tdc'",
        "'tdcp'",
        "'time'",
        "'x'",
        "'y'",
        "'z'",
        "'A'",
        "'%s%s%s'",
        "'CLASS'",
        "'tdcp'",
        "'dcp'",
        "'P_ID'",
        "' '",
        "'--- Cleaning data ---'",
        "'mean'",
        "'forward'",
        "'ffill'",
        "'backward'",
        "'bfill'",
        "'constant'",
        "'cleaning'",
        "'constant_value'",
        "'*** Error: %s is not a valid substitution method, skipped ***'",
        "'cleaning'",
        "'filter'",
        "'cleaning'",
        "'filter_order'",
        "'low'",
        "'high'",
        "'bandpass'",
        "'*** Error: invalid filter name %s ***'",
        "'*** Error: invalid filter name %s ***'",
        "'CLASS'",
        "'CLASS'",
        "'p'",
        "'P_ID'",
        "'P_ID'",
        "'t'",
        "'time'",
        "'time'",
        "'CLASS'",
        "'p'",
        "'P_ID'",
        "'t'",
        "'time'",
        "'CLASS'",
        "'settings'",
        "'features_domain'",
        "'all'",
        "'--> Features extracted: %s'",
        "'CLASS'",
        "'settings'",
        "'log_dir'",
        "'machine_learning'",
        "'--- Starting ML evaluations ---'",
        "'--> Model %s: %ss time window'",
        "'settings'",
        "'time'",
        "'model'",
        "'param_grid'",
        "'accuracy'",
        "'weighted'",
        "'weighted'",
        "'clf'",
        "'y_pred'",
        "'sensitivity'",
        "'specificity'",
        "'precision'",
        "'recall'",
        "'f1-score'",
        "'accuracy'",
        "''",
        "'machine_learning'",
        "'--> clf: %s\\n'",
        "'   • specificity: %s\\n'",
        "'   • sensitivity: %s\\n'",
        "'   • precision: %s\\n'",
        "'   • accuracy: %s\\n'",
        "'   • recall: %s\\n'",
        "'   • f1-score: %s\\n'",
        "'settings'",
        "'log_dir'",
        "'deep_learning'",
        "'--- Starting CNN evaluations ---'",
        "'cnn'",
        "'output'",
        "'--> Model %s: %s time window, %s epochs, %s me threshold'",
        "'settings'",
        "'time'",
        "'settings'",
        "'sampling_frequency'",
        "'%s %s'",
        "'%s %s'",
        "'p'",
        "'dataset'",
        "'header_type'",
        "'tdcp'",
        "'tdcp'",
        "'CLASS'",
        "'P_ID'",
        "'normal'",
        "'over'",
        "'under'",
        "'normal'",
        "'over'",
        "'under'"
    ],
    "variables": [
        "_data_delimiters",
        "__cfg_path",
        "df",
        "header_type",
        "group_by",
        "stats_dir",
        "prop_cycle",
        "colors",
        "values",
        "i",
        "offset",
        "time_window_size",
        "dataset",
        "dataset",
        "data_treatment_type",
        "dt_dataset",
        "dt_dataset",
        "dt_dataset",
        "dt_dataset",
        "X_train_set",
        "X_validation_set",
        "Y_train_set",
        "Y_validation_set",
        "class_labels",
        "has_patient",
        "x",
        "y",
        "p",
        "x",
        "y",
        "p",
        "x_df",
        "x_df",
        "x_df",
        "n_features",
        "X_training_features",
        "X_testing_features",
        "y_training_features",
        "y_testing_features",
        "n_features",
        "x_train",
        "x_val",
        "n_features",
        "X_training_features",
        "X_testing_features",
        "y_training_features",
        "y_testing_features",
        "b",
        "a",
        "header_type",
        "df",
        "column",
        "now",
        "timestamp",
        "log_dir_name",
        "new_log_dir_path",
        "dl_dir",
        "training_stats_dir",
        "save_to",
        "save_to",
        "fig",
        "axis",
        "fold",
        "trained_models",
        "initial_weights",
        "accuracy_per_fold",
        "loss_per_fold",
        "x_train",
        "y_train",
        "x_test",
        "y_test",
        "history",
        "pred",
        "scores",
        "y_unseen_predicted",
        "y_unseen_predicted",
        "mse",
        "predictions",
        "y_pred",
        "n_used_models",
        "predictions",
        "metrics1",
        "metrics2",
        "metrics3",
        "tail_size",
        "n_class",
        "figsize",
        "y_pred",
        "y_true",
        "labels",
        "cm",
        "cm_sum",
        "cm_perc",
        "annot",
        "nrows",
        "ncols",
        "c",
        "p",
        "s",
        "annot",
        "i",
        "j",
        "annot",
        "i",
        "j",
        "annot",
        "i",
        "j",
        "cm",
        "name",
        "name",
        "fig",
        "ax",
        "patient_ids",
        "total_patients",
        "n_patient_validation",
        "test_patients",
        "test_patients",
        "patient_ids",
        "pos",
        "random_p_id",
        "patient_ids",
        "training_dataset",
        "validation_dataset",
        "cnn_training_data",
        "cnn_training_labels",
        "cnn_validation_data",
        "cnn_validation_labels",
        "data_i",
        "label_i",
        "_",
        "data_i",
        "label_i",
        "_",
        "cnn_training_data",
        "cnn_training_labels",
        "cnn_validation_data",
        "cnn_validation_labels",
        "indexes",
        "indexes",
        "old_labels",
        "original_name_labels",
        "df",
        "header_type",
        "training_dataset",
        "validation_dataset",
        "training_dataset",
        "validation_dataset",
        "training_dataset",
        "validation_dataset",
        "training_data",
        "validation_data",
        "training_data",
        "validation_data",
        "training_labels",
        "validation_labels",
        "scaler",
        "scaler",
        "scaler",
        "training_data",
        "validation_data",
        "features_path",
        "features_path",
        "selector",
        "training_data",
        "validation_data",
        "lsvc",
        "model",
        "training_data",
        "validation_data",
        "clf",
        "clf",
        "model",
        "training_data",
        "validation_data",
        "estimator",
        "selector",
        "training_data",
        "validation_data",
        "resampling_technique",
        "sampler",
        "sampler",
        "sampler",
        "sampler",
        "sampler",
        "sampler",
        "sampler",
        "sampler",
        "sampler",
        "sampler",
        "training_data",
        "training_labels",
        "training_data",
        "training_labels",
        "patient_ids",
        "features",
        "features_dataset_i",
        "features_dataset",
        "n",
        "header",
        "header",
        "axis",
        "column_signature",
        "accelerometer_name",
        "frames",
        "is_first",
        "header",
        "is_first",
        "header",
        "df_i",
        "df_i",
        "columns",
        "df",
        "df_filtered",
        "filter_name",
        "filter_order",
        "cutoff",
        "cutoff",
        "cutoff",
        "cutoff",
        "df_filtered",
        "df_filtered",
        "df_filtered",
        "x",
        "x",
        "x",
        "y",
        "domain",
        "cfg",
        "cfg",
        "X_features",
        "Y_features",
        "X_features",
        "features_df",
        "features_df",
        "report_raw",
        "mp",
        "clf",
        "y_pred",
        "metrics1",
        "metrics2",
        "metrics3",
        "kf",
        "model",
        "score",
        "trained_models",
        "hop_size",
        "data",
        "labels",
        "patients",
        "has_patient",
        "columns",
        "x_i",
        "label",
        "oversample",
        "X_over",
        "y_over",
        "X_training_over",
        "y_training_over",
        "undersample",
        "X_under",
        "y_under",
        "X_training_under",
        "y_training_under",
        "X_training",
        "X_testing",
        "y_training",
        "y_testing",
        "oversample",
        "X_over",
        "y_over",
        "X_training_over",
        "y_training_over",
        "indexes",
        "min_cls",
        "min_cls",
        "X_training_under",
        "y_training_under",
        "training_mean",
        "training_std",
        "X_training_under",
        "X_testing",
        "hop_size",
        "windowed_labels",
        "new_label"
    ],
    "comments": [
        "--- Public Methods ---",
        "Create stats directory",
        "Plot settings",
        "Bar Plot Class",
        "Bar Plot Patients",
        "Boxplot Data",
        "Boxplot Class",
        "Evaluate number of sample per time window",
        "--- Load Data ---",
        "-----------------",
        "TODO: Remove this",
        "dataset = dataset[:1120]",
        "--- Data Cleaning  ---",
        "-----------------",
        "--- Data Treatment ---",
        "----------------------",
        "--- Preprocessing ---",
        "---------------------",
        "--- Start ML Evaluation ---",
        "---------------------------",
        "--- Start DL Evaluation ---",
        "---------------------------",
        "--- Private Methods ---",
        "--- Use Also Features ---",
        "Set CNN input size",
        "Set CNN kernel sizes",
        "Reshape to feed CNN",
        "Evaluation",
        "------------------------",
        "--- Use accelerometer data as input to the CNN ---",
        "Get windowed data",
        "Set CNN input size",
        "Set CNN kernel sizes",
        "Evaluation",
        "---------------------------",
        "Set CNN input size",
        "Set CNN kernel sizes",
        "Reshape to feed CNN",
        "Evaluation",
        "Create run log directory",
        "Copy run settings",
        "Update log dir path for future usage",
        "Configure logging",
        "Create training stats directory",
        "Define supporting variables",
        "Do K-Fold",
        "Each fold is used once as a validation while the k - 1 remaining folds form the training set.",
        "Define training set",
        "Define testing set",
        "Training and Validation",
        "Check if the gap between train and validation is constant",
        "Predict values of validation",
        "Evaluate model score (Loss and Accuracy)",
        "Test on unseen data",
        "Measure this fold's RMSE",
        "lower is better",
        "Save trained model with its predictions and ground truth",
        "None instead of y_unseen_pred",
        "Reset model weights for the next train session",
        "Print a final summary",
        "Accuracy, models",
        "Use only models with a mean squared error under the threshold for prediction",
        "Metrics",
        "Calc figure size based on number of class, for better visualisation",
        "Select patient for validation",
        "Select random patient",
        "Keep track of selected patients",
        "Define intra patient training and validation datasets",
        "Create CNN format training dataset and labels",
        "Create CNN format training dataset and labels",
        "Drop unnecessary classes",
        "Drop unnecessary patients",
        "Class renaming",
        "Train/Test split",
        "Define inter patient training and validation datasets",
        "Get training data and labels",
        "Drop P_ID if exists",
        "Normalisation",
        "Create a directory in order to save extracted features names",
        "Highly correlated features are removed",
        "corr_features = ts.correlated_features(training_data)",
        "training_data.drop(corr_features, axis=1, inplace=True)",
        "validation_data.drop(corr_features, axis=1, inplace=True)",
        "Remove low variance features",
        "Save selected features names",
        "TODO: Check if it works",
        "with open(os.path.join(features_path, 'selected_features.rtf'), 'a+') as exf:",
        "exf.write('%s' % '\\n'.join(list(training_data.columns)))",
        "Balancing",
        "Features dataset of all patients",
        "4 different kind of header",
        "time data class          -> tdc",
        "time data class patient  -> tdcp",
        "data class               -> dc",
        "data class patient       -> dcp",
        "Add class column",
        "Add other columns depending on cases",
        "Derive header if not exists",
        "Append dataframes",
        "Handle Data Errors: clean from NaN and infinite values",
        "Apply filter",
        "Add class and other to the filtered dataset",
        "Available domains: \"statistical\"; \"spectral\"; \"temporal\"",
        "Features Extraction",
        "Handling eventual missing values from the feature extraction",
        "Attach labels",
        "Create ml directory if not exists",
        "Get selected models and params",
        "scoring='recall_macro'",
        "Raw data",
        "Metrics",
        "Create Report",
        "logging.log(msg=pd.DataFrame(report_raw).head(len(models_and_params)), level=logging.INFO)",
        "Create ml directory if not exists",
        "Set output size of CNN",
        "Get the model",
        "Train the model",
        "Model Ensembles",
        "Associate a label for the current window based on mode",
        "Return normal or balanced data",
        "Return normal data",
        "Oversample accelerometer data",
        "Restore original window format",
        "Undersample accelerometer data",
        "Restore original window format",
        "Split data into training and test set",
        "Return normal or balanced data",
        "Return normal data",
        "Oversample accelerometer data",
        "Restore original window format",
        "Training set balancing using Random Under sampling",
        "Get indexes of each class",
        "Get the min class",
        "Shuffle indexes",
        "Build up",
        "Zero Mean"
    ],
    "docstrings": [
        "\"\"\"\n        Prints out the statistics of a given dataset\n        :return: None\n        \"\"\"",
        "\"\"\"\n        Evaluates the input dataset with different machine learning and deep learning models in order to get a baseline for\n        future analysis and comparisons.\n\n        :param ids_test: list of patient id used as testing set\n        :param ml_models: list of machine learning models\n        :param dl_models: list of cnn models\n        :param discard_class: list of class useless for analysis\n        :param discard_patients: list of patient id useless for analysis\n        :return:\n        \"\"\"",
        "\"\"\"\n        Generate matrix plot of confusion matrix with pretty annotations.\n        The plot image is saved to disk.\n        args:\n          y_true:    true label of the data, with shape (n_samples,)\n          y_pred:    prediction of the data, with shape (n_samples,)\n          filename:  filename of figure file to save\n          labels:    string array, name the order of class labels in the confusion matrix.\n                     use `clf.classes_` if using scikit-learn models.\n                     with shape (nclass,).\n          ymap:      dict: any -> string, length == nclass.\n                     if not None, map the labels & ys to more understandable strings.\n                     Caution: original y_true, y_pred and labels must align.\n          figsize:   the size of the figure plotted.\n        \"\"\"",
        "\"\"\" Handle eventual missing data. Strategy: replace with mean.\n\n          Parameters\n          ----------\n          df pandas DataFrame\n          Returns\n          -------\n            Data Frame without missing values.\n        \"\"\""
    ],
    "functions": [
        "stats",
        "get_baseline",
        "_apply_segmentation",
        "_dl_evaluation",
        "_apply_filter",
        "_init_log",
        "_print_val_train_stats",
        "_do_k_fold",
        "_model_ensembles",
        "_cm_analysis",
        "_select_patients_training_test",
        "_get_pbp_window_train_and_test",
        "_data_preprocessing",
        "_pbp_features_extraction",
        "_derive_headers",
        "_decode_csv",
        "_clean_data",
        "_features_extraction",
        "_start_ml_evaluation",
        "_start_cnn_evaluation",
        "_get_window",
        "_get_pbp_train",
        "_get_train_and_test",
        "_labels_windowing",
        "_fill_missing_values"
    ],
    "classes": [
        "BHar"
    ]
}