{
    "identifiers": [
        "json",
        "os",
        "sqlite3",
        "kafka",
        "KafkaProducer",
        "flask",
        "Flask",
        "request",
        "jsonify",
        "make_response",
        "os",
        "path",
        "dirname",
        "Flask",
        "KafkaProducer",
        "bootstrap_servers",
        "topic",
        "update",
        "request",
        "headers",
        "producer",
        "send",
        "topic",
        "json",
        "dumps",
        "encode",
        "cursor",
        "row",
        "idx",
        "col",
        "cursor",
        "description",
        "col",
        "row",
        "idx",
        "d",
        "app",
        "route",
        "guild_id",
        "guild_id",
        "sqlite3",
        "connect",
        "os",
        "path",
        "join",
        "dirname",
        "dict_factory",
        "conn",
        "cursor",
        "cur",
        "execute",
        "query",
        "fetchall",
        "results",
        "log_to_kafka",
        "join_guild_event",
        "app",
        "route",
        "enemy_id",
        "enemy_id",
        "sqlite3",
        "connect",
        "os",
        "path",
        "join",
        "dirname",
        "dict_factory",
        "conn",
        "cursor",
        "cur",
        "execute",
        "query",
        "fetchall",
        "results",
        "log_to_kafka",
        "kill_enemy_event",
        "app",
        "route",
        "enemy_id",
        "enemy_id",
        "sqlite3",
        "connect",
        "os",
        "path",
        "join",
        "dirname",
        "dict_factory",
        "conn",
        "cursor",
        "cur",
        "execute",
        "query",
        "fetchall",
        "results",
        "log_to_kafka",
        "take_damage_event",
        "app",
        "route",
        "quest_id",
        "quest_id",
        "sqlite3",
        "connect",
        "os",
        "path",
        "join",
        "dirname",
        "dict_factory",
        "conn",
        "cursor",
        "cur",
        "execute",
        "query",
        "fetchall",
        "results",
        "log_to_kafka",
        "accept_quest_event",
        "app",
        "route",
        "inventory_id",
        "inventory_id",
        "sqlite3",
        "connect",
        "os",
        "path",
        "join",
        "dirname",
        "dict_factory",
        "conn",
        "cursor",
        "cur",
        "execute",
        "query",
        "fetchall",
        "results",
        "log_to_kafka",
        "transaction_event"
    ],
    "literals": [
        "'kafka:29092'",
        "\"/join_a_guild/<guild_id>\"",
        "\"SELECT * \\\n             FROM guild \\\n             WHERE guild_id =\"",
        "';'",
        "'db/guild.db'",
        "'events'",
        "\"Joined Guild!\\n\"",
        "\"/kill_enemy/<enemy_id>\"",
        "\"SELECT * \\\n             FROM enemy \\\n             WHERE enemy_id =\"",
        "';'",
        "'db/enemy.db'",
        "'events'",
        "\"kill_enemy!\\n\"",
        "\"/take_damage/<enemy_id>\"",
        "\"SELECT * \\\n             FROM damage \\\n             WHERE enemy_id =\"",
        "';'",
        "'db/take_damage.db'",
        "'events'",
        "\"Took Damage!\\n\"",
        "\"/accepted_a_quest/<quest_id>\"",
        "\"SELECT * \\\n             FROM quest \\\n             WHERE quest_id =\"",
        "';'",
        "'db/quest.db'",
        "'events'",
        "\"Quest Accepted!\\n\"",
        "\"/transaction/<inventory_id>\"",
        "\"SELECT * \\\n             FROM inventory \\\n             WHERE inventory_id =\"",
        "';'",
        "'db/store_transactions.db'",
        "'events'",
        "\"Transaction Complete!\\n\""
    ],
    "variables": [
        "dirname",
        "app",
        "producer",
        "d",
        "d",
        "query",
        "conn",
        "conn",
        "row_factory",
        "cur",
        "results",
        "join_guild_event",
        "query",
        "conn",
        "conn",
        "row_factory",
        "cur",
        "results",
        "kill_enemy_event",
        "query",
        "conn",
        "conn",
        "row_factory",
        "cur",
        "results",
        "take_damage_event",
        "query",
        "conn",
        "conn",
        "row_factory",
        "cur",
        "results",
        "accept_quest_event",
        "query",
        "conn",
        "conn",
        "row_factory",
        "cur",
        "results",
        "transaction_event"
    ],
    "comments": [
        "!/usr/bin/env python",
        "Set the Directory path for the file system",
        "Log events to Kafka",
        "Convert query function to a format that can be transformed into json",
        "Done",
        "print(results)",
        "print(results[0])"
    ],
    "docstrings": [
        "\"\"\"\n    This function responds to a request for /api/join_a_guild/{guild_id}\n    with one matching transaction from quest.db\n    \n    :param guild_id:      ID of the enemy\n    :return:              quest and attributes matching ID as JSON\n    \"\"\"",
        "\"\"\"\n    This function responds to a request for /api/kill_enemy/{enemy_id}\n    with one matching transaction from quest.db\n    \n    :param enemy_id:      ID of the enemy\n    :return:              quest and attributes matching ID as JSON\n    \"\"\"",
        "\"\"\"\n    This function responds to a request for /api/take_damage/{enemy_id}\n    with one matching transaction from quest.db\n    \n    :param enemy_id:      ID of the quest\n    :return:              quest and attributes matching ID as JSON\n    \"\"\"",
        "\"\"\"\n    This function responds to a request for /api/accepted_a_quest/{quest_id}\n    with one matching transaction from quest.db\n    \n    :param quest_id:      ID of the quest\n    :return:              quest and attributes matching ID as JSON\n    \"\"\"",
        "\"\"\"\n    This function responds to a request for /api/transaction/{transaction_id}\n    with one matching transaction from store_transactions.db\n    \n    :param inventory_id:  ID of the line item being transacted\n    :return:              transaction and attributes matching ID as JSON\n    \"\"\""
    ],
    "functions": [
        "log_to_kafka",
        "dict_factory",
        "join_a_guild",
        "kill_enemy",
        "take_damage",
        "accept_quest",
        "transaction"
    ],
    "classes": []
}