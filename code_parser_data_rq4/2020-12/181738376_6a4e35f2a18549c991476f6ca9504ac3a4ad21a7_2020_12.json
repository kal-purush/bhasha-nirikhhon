{
    "identifiers": [
        "com",
        "google",
        "zetasql",
        "com",
        "google",
        "common",
        "collect",
        "ImmutableList",
        "com",
        "google",
        "protobuf",
        "Descriptors",
        "Descriptor",
        "com",
        "google",
        "protobuf",
        "Descriptors",
        "EnumDescriptor",
        "com",
        "google",
        "protobuf",
        "Descriptors",
        "FieldDescriptor",
        "com",
        "google",
        "protobuf",
        "Descriptors",
        "FileDescriptor",
        "com",
        "google",
        "protobuf",
        "Descriptors",
        "OneofDescriptor",
        "java",
        "io",
        "Serializable",
        "javax",
        "annotation",
        "DescriptorPool",
        "name",
        "name",
        "name",
        "ZetaSQLFileDescriptor",
        "ZetaSQLEnumDescriptor",
        "ZetaSQLDescriptor",
        "number",
        "ZetaSQLFieldDescriptor"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *",
        "* Class mimicking the C++ version of DescriptorPool. It defines a mapping from fullname (package +\n * name) to various \"ZetaSQL*Descriptor\". Each of these is a wrapper around a\n * com.google.protobuf.Descriptor object with a reference back to this object.\n *\n * <p>\n *\n * @see \"(broken link)\"\n *     <p>This class is not thread safe.",
        "* Returns the {@code ZetaSQLEnumDescriptor} of the enum with given {@code name} or null if not\n   * found.",
        "* Returns the {@code ZetaSQLDescriptor} of the message with given {@code name} or null if not\n   * found.",
        "* Returns the {@code ZetaSQLFileDescriptor} of the file with given {@code name} or null if not\n   * found.",
        "* Wrapped {@code FileDescriptor} with the {@code ImmutableZetaSQLDescriptorPool} from which it\n   * was created.",
        "* Wrapped {@code EnumDescriptor} with the {@code ImmutableZetaSQLDescriptorPool} from which it\n   * was created.",
        "* Wrapped {@code Descriptor} with the {@code ImmutableZetaSQLDescriptorPool} from which it was\n   * created.",
        "* Wrapped {@code FieldDescriptor} with the {@code ZetaSQLDescriptorPool} from which it was\n   * created."
    ],
    "functions": [
        "ZetaSQLEnumDescriptor",
        "findEnumTypeByName",
        "ZetaSQLDescriptor",
        "findMessageTypeByName",
        "ZetaSQLFileDescriptor",
        "findFileByName",
        "DescriptorPool",
        "getZetaSQLDescriptorPool",
        "DescriptorPool",
        "getDescriptorPool",
        "FileDescriptor",
        "getDescriptor",
        "DescriptorPool",
        "getZetaSQLDescriptorPool",
        "DescriptorPool",
        "getDescriptorPool",
        "EnumDescriptor",
        "getDescriptor",
        "DescriptorPool",
        "getZetaSQLDescriptorPool",
        "DescriptorPool",
        "getDescriptorPool",
        "Descriptor",
        "getDescriptor",
        "ZetaSQLFieldDescriptor",
        "findFieldByNumber",
        "DescriptorPool",
        "getZetaSQLDescriptorPool",
        "DescriptorPool",
        "getDescriptorPool",
        "FieldDescriptor",
        "getDescriptor",
        "getAllFileDescriptors"
    ],
    "classes": []
}