{
    "identifiers": [
        "os",
        "gevent",
        "logging",
        "tempfile",
        "pdfkit",
        "logging",
        "getLogger",
        "warning",
        "datetime",
        "datetime",
        "SimpleHTML",
        "HardwareRepository",
        "BaseHardwareObjects",
        "HardwareObject",
        "HardwareObject",
        "name",
        "HardwareObject",
        "name",
        "gevent",
        "Event",
        "getObjectByRole",
        "bl_hwobj",
        "session_hwobj",
        "beamline_name",
        "getProperty",
        "test_directory",
        "os",
        "path",
        "join",
        "tempfile",
        "gettempdir",
        "logging",
        "getLogger",
        "debug",
        "test_directory",
        "os",
        "path",
        "join",
        "test_directory",
        "datetime",
        "now",
        "strftime",
        "test",
        "eval",
        "getProperty",
        "available_tests_dict",
        "TEST_DICT",
        "test",
        "logging",
        "getLogger",
        "debug",
        "available_tests_dict",
        "TEST_DICT",
        "eval",
        "getProperty",
        "logging",
        "getLogger",
        "debug",
        "getProperty",
        "start_test_queue",
        "startup_test_list",
        "test_list",
        "create_report",
        "create_report",
        "logging",
        "getLogger",
        "debug",
        "test_directory",
        "os",
        "path",
        "exists",
        "test_directory",
        "os",
        "makedirs",
        "test_directory",
        "logging",
        "getLogger",
        "debug",
        "test_source_directory",
        "os",
        "path",
        "exists",
        "test_source_directory",
        "os",
        "makedirs",
        "test_source_directory",
        "logging",
        "getLogger",
        "warning",
        "test_index",
        "test_name",
        "test_list",
        "test_name",
        "lower",
        "hasattr",
        "test_method_name",
        "TEST_DICT",
        "has_key",
        "test_name",
        "logging",
        "getLogger",
        "debug",
        "test_name",
        "TEST_DICT",
        "test_name",
        "len",
        "test_list",
        "TEST_DICT",
        "test_name",
        "emit",
        "test_index",
        "progress_info",
        "datetime",
        "now",
        "strftime",
        "gevent",
        "spawn",
        "getattr",
        "test_method_name",
        "current_test_procedure",
        "get",
        "datetime",
        "now",
        "strftime",
        "results_list",
        "append",
        "test_name",
        "TEST_DICT",
        "test_name",
        "test_result",
        "get",
        "test_result",
        "get",
        "start_time",
        "end_time",
        "results_html_list",
        "append",
        "test_name",
        "TEST_DICT",
        "test_name",
        "results_html_list",
        "append",
        "start_time",
        "results_html_list",
        "append",
        "end_time",
        "test_result",
        "get",
        "results_html_list",
        "append",
        "TEST_COLORS_FONT",
        "test_result",
        "test_result",
        "len",
        "test_result",
        "get",
        "results_html_list",
        "append",
        "results_html_list",
        "extend",
        "test_result",
        "get",
        "results_html_list",
        "append",
        "msg",
        "TEST_COLORS_FONT",
        "test_method_name",
        "TEST_DICT",
        "test_name",
        "logging",
        "getLogger",
        "error",
        "test_method_name",
        "results_html_list",
        "append",
        "create_report",
        "generate_html_report",
        "ready_event",
        "result",
        "ready_event",
        "result",
        "available_tests_dict",
        "test",
        "startup_test_list",
        "TEST_DICT",
        "get",
        "test",
        "test_list",
        "append",
        "TEST_DICT",
        "test",
        "test_list",
        "os",
        "path",
        "join",
        "test_directory",
        "test_filename",
        "os",
        "path",
        "join",
        "test_directory",
        "test_filename",
        "os",
        "path",
        "join",
        "test_directory",
        "datetime",
        "now",
        "strftime",
        "test_filename",
        "open",
        "html_filename",
        "output_file",
        "write",
        "SimpleHTML",
        "create_html_start",
        "output_file",
        "write",
        "beamline_name",
        "output_file",
        "write",
        "test",
        "results_list",
        "table_cells",
        "append",
        "TEST_COLORS_TABLE",
        "test",
        "test",
        "test",
        "test",
        "test",
        "test",
        "SimpleHTML",
        "create_table",
        "table_cells",
        "row",
        "table_rec",
        "output_file",
        "write",
        "row",
        "output_file",
        "write",
        "test_result",
        "results_html_list",
        "output_file",
        "write",
        "test_result",
        "output_file",
        "write",
        "SimpleHTML",
        "create_html_end",
        "output_file",
        "close",
        "emit",
        "html_filename",
        "logging",
        "getLogger",
        "info",
        "html_filename",
        "logging",
        "getLogger",
        "error",
        "html_filename",
        "pdfkit",
        "from_url",
        "html_filename",
        "pdf_filename",
        "logging",
        "getLogger",
        "info",
        "pdf_filename",
        "emit",
        "html_filename",
        "os",
        "path",
        "join",
        "test_directory",
        "test_filename",
        "os",
        "path",
        "exists",
        "html_filename",
        "html_filename"
    ],
    "literals": [
        "\"HWR\"",
        "\"pdfkit not available\"",
        "\"Ivars Karpics\"",
        "\"MXCuBE colaboration\"",
        "\"2.2.\"",
        "\"example_one\"",
        "\"Beamline test example no 1.\"",
        "\"example_two\"",
        "\"Beamline test example no 2.\"",
        "'#FFCCCC'",
        "'#CCFFCC'",
        "'#FE0000'",
        "'#007800'",
        "\"beamline_setup\"",
        "\"results_directory\"",
        "\"mxcube\"",
        "\"beamline_test\"",
        "\"HWR\"",
        "\"BeamlineTest: directory for test \"",
        "\"reports not defined. Set to: %s\"",
        "\"%Y_%m_%d_%H\"",
        "\"_source\"",
        "\"mxcube_test_report\"",
        "\"available_tests\"",
        "\"HWR\"",
        "\"BeamlineTest: Available tests are \"",
        "\"not defined in xml. Setting all tests as available.\"",
        "\"startup_tests\"",
        "\"HWR\"",
        "'BeamlineTest: Test list not defined.'",
        "\"run_tests_at_startup\"",
        "\"HWR\"",
        "\"BeamlineTest: Creating directory %s\"",
        "\"HWR\"",
        "\"BeamlineTest: Creating source directory %s\"",
        "\"HWR\"",
        "\"BeamlineTest: Unable to create test directories\"",
        "\"test_\"",
        "\"HWR\"",
        "\"BeamlineTest: Executing test %s (%s)\"",
        "\"progress_total\"",
        "\"progress_msg\"",
        "\"executing %s\"",
        "\"testProgress\"",
        "'%Y-%m-%d %H:%M:%S'",
        "'%Y-%m-%d %H:%M:%S'",
        "\"short_name\"",
        "\"full_name\"",
        "\"result_bit\"",
        "\"result_bit\"",
        "\"result_short\"",
        "\"result_short\"",
        "\"\"",
        "\"start_time\"",
        "\"end_time\"",
        "\"<h2 id=%s>%s</h2>\"",
        "\"Started: %s<br>\"",
        "\"Ended: %s<br>\"",
        "\"result_short\"",
        "\"<h3><font color=%s>Result : %s</font></h3>\"",
        "\"result_bit\"",
        "\"result_short\"",
        "\"result_details\"",
        "\"<h3>Detailed results:</h3>\"",
        "\"result_details\"",
        "\"<h2><font color=%s>Execution method %s \"",
        "\"for the test %s does not exist</font></h3>\"",
        "\"HWR\"",
        "\"BeamlineTest: Test method %s not available\"",
        "\"</p>\\n<hr>\"",
        "\"result_bit\"",
        "\"result_short\"",
        "\"Test passed\"",
        "\"result_details\"",
        "\"An example test that was successful\"",
        "\"result_bit\"",
        "\"result_short\"",
        "\"Test failed\"",
        "\"result_details\"",
        "\"An example test that failed\"",
        "\".html\"",
        "\".pdf\"",
        "\"%Y_%m_%d_%H\"",
        "\"_\"",
        "\"w\"",
        "\"Beamline test summary\"",
        "\"<h1>Beamline %s Test results</h1>\"",
        "\"<h2>Executed tests:</h2>\"",
        "\"bgcolor=%s\"",
        "\"result_bit\"",
        "\"<a href=#%s>%s</a>\"",
        "\"short_name\"",
        "\"full_name\"",
        "\"result_short\"",
        "\"start_time\"",
        "\"end_time\"",
        "\"Name\"",
        "\"Result\"",
        "\"Start time\"",
        "\"End time\"",
        "\"\\n<hr>\\n\"",
        "\"\\n\"",
        "\"htmlGenerated\"",
        "\"HWR\"",
        "\"BeamlineTest: Test result written in file %s\"",
        "\"HWR\"",
        "\"BeamlineTest: Unable to generate html report file %s\"",
        "\"GUI\"",
        "\"PDF report %s generated\"",
        "'testFinished'"
    ],
    "variables": [
        "__author__",
        "__credits__",
        "__version__",
        "TEST_DICT",
        "TEST_COLORS_TABLE",
        "TEST_COLORS_FONT",
        "ready_event",
        "test_queue_dict",
        "current_test_procedure",
        "beamline_name",
        "test_directory",
        "test_source_directory",
        "test_filename",
        "available_tests_dict",
        "startup_test_list",
        "results_list",
        "results_html_list",
        "bl_hwobj",
        "ready_event",
        "bl_hwobj",
        "beamline_name",
        "test_directory",
        "test_directory",
        "test_source_directory",
        "test_filename",
        "test",
        "available_tests_dict",
        "startup_test_list",
        "results_list",
        "results_html_list",
        "test_method_name",
        "progress_info",
        "start_time",
        "current_test_procedure",
        "test_result",
        "end_time",
        "msg",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "test_list",
        "html_filename",
        "pdf_filename",
        "archive_filename",
        "output_file",
        "table_cells",
        "table_rec",
        "html_filename"
    ],
    "comments": [
        "",
        "Project: MXCuBE",
        "https://github.com/mxcube.",
        "",
        "This file is part of MXCuBE software.",
        "",
        "MXCuBE is free software: you can redistribute it and/or modify",
        "it under the terms of the GNU General Public License as published by",
        "the Free Software Foundation, either version 3 of the License, or",
        "(at your option) any later version.",
        "",
        "MXCuBE is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "GNU General Public License for more details.",
        "",
        "You should have received a copy of the GNU General Public License",
        "along with MXCuBE.  If not, see <http://www.gnu.org/licenses/>.",
        "self.ready_event.wait()",
        "self.ready_event.clear()",
        "html_filename = None",
        "self.emit('testFinished', html_filename)"
    ],
    "docstrings": [
        "\"\"\"\nBeamlineTestMockup\n\n\"\"\"",
        "\"\"\"BeamlineTestMockup\"\"\"",
        "\"\"\"init\"\"\"",
        "\"\"\"init\"\"\"",
        "\"\"\"\n        Descrip. :\n        \"\"\"",
        "\"\"\"Text one\"\"\"",
        "\"\"\"Text one\"\"\"",
        "\"\"\"\n        Descript. :\n        \"\"\"",
        "\"\"\"\n        Descript. :\n        \"\"\"",
        "\"\"\"\n        Descript. :\n        \"\"\"",
        "\"\"\"\n        Descript. :\n        \"\"\""
    ],
    "functions": [
        "init",
        "start_test_queue",
        "test_example_one",
        "test_example_two",
        "get_available_tests",
        "get_startup_test_list",
        "generate_html_report",
        "get_result_html"
    ],
    "classes": [
        "BeamlineTestMockup"
    ]
}