{
    "identifiers": [
        "grunt",
        "packageJson",
        "require",
        "require",
        "require",
        "pkgDir",
        "process",
        "grunt",
        "grunt",
        "grunt",
        "grunt",
        "grunt",
        "grunt",
        "path",
        "packagePath",
        "preReleaseTag",
        "version",
        "preReleaseTag",
        "regexp",
        "version",
        "version1",
        "version2",
        "version2",
        "version1",
        "versionInPackage",
        "existingVersions",
        "existingVersions",
        "v",
        "matchesVersion",
        "versionInPackage",
        "v",
        "v",
        "matchesPreReleaseTag",
        "preReleaseTag",
        "v",
        "v",
        "parseInt",
        "matchesPreReleaseTag",
        "preReleaseTag",
        "v",
        "filteredVersions",
        "filteredVersions",
        "versionInPackage",
        "preReleaseTag",
        "nextVersion",
        "packageJson",
        "packageJson",
        "packageJson",
        "packageJson",
        "packageJson",
        "packageJson",
        "packageJson",
        "bin",
        "args",
        "options",
        "executeOnDryRun",
        "dryRun",
        "executeOnDryRun",
        "grunt",
        "bin",
        "bin",
        "args",
        "grunt",
        "bin",
        "options",
        "dryRun",
        "executeOnDryRun",
        "execa",
        "bin",
        "options",
        "grunt",
        "command",
        "npmBin",
        "result",
        "result",
        "err",
        "grunt",
        "command",
        "npmBin",
        "result",
        "result",
        "maintainers",
        "maintainers",
        "maintainer",
        "maintainer",
        "whoamiPromise",
        "maintainersPromise",
        "results",
        "results",
        "results",
        "maintainers",
        "user",
        "isMaintainer",
        "grunt",
        "user",
        "done",
        "grunt",
        "command",
        "gitBin",
        "result",
        "result",
        "grunt",
        "command",
        "gitBin",
        "result",
        "result",
        "defaultBranch",
        "grunt",
        "defaultBranch",
        "done",
        "grunt",
        "command",
        "npmBin",
        "args",
        "temp",
        "tag",
        "args",
        "tag",
        "grunt",
        "dryRun",
        "promises",
        "command",
        "npmBin",
        "temp",
        "promises",
        "done",
        "grunt",
        "initialPackageJson",
        "command",
        "npmBin",
        "result",
        "result",
        "result",
        "getNextPreReleaseTagVersion",
        "versionInPackage",
        "versions",
        "versionToRelease",
        "dryRun",
        "args",
        "grunt",
        "versionToRelease",
        "command",
        "npmBin",
        "args",
        "done",
        "grunt",
        "grunt",
        "releaseVersion",
        "dryRun",
        "args",
        "grunt",
        "releaseVersion",
        "command",
        "npmBin",
        "args",
        "done",
        "grunt",
        "initialPackageJson",
        "nextVersion",
        "packageJson",
        "nextVersion",
        "grunt",
        "packageJson",
        "grunt",
        "packageJson",
        "command",
        "gitBin",
        "commitMsg",
        "grunt",
        "done",
        "grunt",
        "grunt",
        "grunt",
        "path",
        "packagePath",
        "grunt",
        "grunt",
        "dist",
        "temp",
        "temp",
        "grunt",
        "path",
        "temp",
        "preparePackageJson",
        "pkg",
        "grunt",
        "tasks",
        "grunt",
        "dryRun",
        "tasks",
        "preReleaseTag",
        "preReleaseTags",
        "preReleaseTag",
        "tasks",
        "releaseVersion",
        "nextVersion",
        "tasks",
        "grunt",
        "tasks",
        "tasks",
        "grunt",
        "tasks"
    ],
    "literals": [
        "'execa'",
        "'path'",
        "'pkg-dir'",
        "'npm'",
        "'git'",
        "'temp/'",
        "'master'",
        "'alpha'",
        "'beta'",
        "'rc'",
        "string",
        "'release-version'",
        "string",
        "'next-version'",
        "string",
        "'pre-release-tag'",
        "'dry-run'",
        "string",
        "'tag'",
        "'package.json'",
        "'\"Update package metadata\"'",
        "string",
        "string",
        "string",
        "(.*)-(${preReleaseTag})\\\\.(\\\\d+)",
        "string",
        "string",
        "string",
        "string",
        "string",
        "${versionInPackage}-${preReleaseTag}.${nextVersion}",
        "'main.js'",
        "string",
        "string",
        "'dry-run (not running)'",
        "${bin} ${args.join(' ')}",
        "' '",
        "${bin} - ${JSON.stringify(options)}",
        "'can-publish-check'",
        "'check whether author can publish'",
        "'whoami'",
        "'not logged into npm'",
        "'view'",
        "'.'",
        "'--json'",
        "string",
        "string",
        "''",
        "cannot publish this package with user ${user}",
        "'repo-is-clean-check'",
        "'check whether the repo is clean'",
        "'status'",
        "'--porcelain'",
        "'there are changes in the working tree'",
        "'rev-parse'",
        "'--abbrev-ref'",
        "'HEAD'",
        "not on ${defaultBranch} branch",
        "'release-publish'",
        "'publish the package to npm'",
        "'publish'",
        "'.'",
        "'--tag'",
        "'publishing to npm...'",
        "'pack'",
        "'../'",
        "'dist'",
        "'release-version-pre-release-tag'",
        "'auto version based on pre release tag'",
        "''",
        "'view'",
        "'.'",
        "'--json'",
        "string",
        "'version'",
        "'--no-git-tag-version'",
        "version to release: ${versionToRelease}",
        "'failed to fetch versions from npm'",
        "'release-version-specific'",
        "'set the version manually'",
        "'version'",
        "'--no-git-tag-version'",
        "version to release: ${releaseVersion}",
        "'post-release-version'",
        "'update the version post release'",
        "'package.json'",
        "'  '",
        "'\\n'",
        "version of package.json to commit: ${packageJson.version}",
        "'commit'",
        "'-am'",
        "'release completed, remember to push back to remote'",
        "'release-publish-flat'",
        "'publish the flat package'",
        "'making flat package...'",
        "'package.json'",
        "'copy.staticDefinitionFiles.dest'",
        "'copy:temp'",
        "'release-publish'",
        "'clean:temp'",
        "'**'",
        "'package.json'",
        "'  '",
        "'\\n'",
        "'release'",
        "'release'",
        "'repo-is-clean-check'",
        "'dist'",
        "'can-publish-check'",
        "'release-version-pre-release-tag'",
        "'release-version-specific'",
        "'please specify --pre-release-tag or --release-version and --next-version'",
        "'release-publish-flat'",
        "'post-release-version'"
    ],
    "variables": [
        "execa",
        "path",
        "pkgDir",
        "packagePath",
        "npmBin",
        "gitBin",
        "temp",
        "defaultBranch",
        "preReleaseTags",
        "releaseVersion",
        "nextVersion",
        "preReleaseTag",
        "dryRun",
        "tag",
        "initialPackageJson",
        "commitMsg",
        "regexp",
        "filteredVersions",
        "nextVersion",
        "done",
        "whoamiPromise",
        "maintainersPromise",
        "user",
        "maintainers",
        "isMaintainer",
        "done",
        "done",
        "args",
        "promises",
        "done",
        "versionInPackage",
        "versions",
        "versionToRelease",
        "args",
        "done",
        "args",
        "done",
        "packageJson",
        "pkg",
        "dist",
        "tasks",
        "tasks"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "matchesPreReleaseTag",
        "matchesVersion",
        "getNextPreReleaseTagVersion",
        "preparePackageJson",
        "command"
    ],
    "classes": []
}