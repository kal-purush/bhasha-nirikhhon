{
    "identifiers": [
        "Serilog",
        "Formatting",
        "Compact",
        "messageTemplate",
        "messageTemplate",
        "ArgumentNullException",
        "nameof",
        "messageTemplate",
        "i",
        "messageTemplate",
        "Length",
        "i",
        "hash",
        "messageTemplate",
        "i",
        "hash",
        "hash",
        "hash",
        "hash",
        "hash",
        "hash",
        "hash",
        "hash",
        "hash",
        "hash",
        "hash"
    ],
    "literals": [],
    "variables": [
        "hash",
        "i"
    ],
    "comments": [
        "Copyright 2016 Serilog Contributors",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "Hash functions for message templates. See <see cref=\"Compute\"/>.",
        "</summary>",
        "This class is left internal bc it's been borrowed from here",
        "https://github.com/serilog/serilog-formatting-compact/blob/dev/src/Serilog.Formatting.Compact/Formatting/Compact/EventIdHash.cs",
        "Alternatively, we could take a dependency on the formatting library and use that event hash but the tradeoff would be",
        "adding an additional dependency to nuget- could result in binding redirects or version conflicts as asms are updated moving forward",
        "Compute a 32-bit hash of the provided <paramref name=\"messageTemplate\"/>. The",
        "resulting hash value can be uses as an event id in lieu of transmitting the",
        "full template string.",
        "</summary>",
        "<param name=\"messageTemplate\">A message template.</param>",
        "<returns>A 32-bit hash of the template.</returns>",
        "Jenkins one-at-a-time https://en.wikipedia.org/wiki/Jenkins_hash_function"
    ],
    "docstrings": [
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Compute"
    ],
    "classes": [
        "EventIdHash"
    ]
}