{
    "identifiers": [
        "atexit",
        "threading",
        "serial",
        "time",
        "PortAddr",
        "Multiwii",
        "IDLE",
        "threading",
        "Lock",
        "threading",
        "target",
        "_update_imu",
        "args",
        "cond1",
        "threading",
        "target",
        "_update_ht",
        "args",
        "cond2",
        "threading",
        "target",
        "_update_fc",
        "args",
        "cond3",
        "threading",
        "Condition",
        "threading",
        "Condition",
        "threading",
        "Condition",
        "_imu_thread",
        "_sonar_thread",
        "_fc_thread",
        "_imu_thread",
        "start",
        "_sonar_thread",
        "start",
        "_fc_thread",
        "start",
        "serial",
        "Serial",
        "ser",
        "PortAddr",
        "ser",
        "ser",
        "serial",
        "EIGHTBITS",
        "ser",
        "serial",
        "PARITY_NONE",
        "ser",
        "serial",
        "STOPBITS_ONE",
        "ser",
        "ser",
        "ser",
        "ser",
        "ser",
        "ser",
        "open",
        "ser",
        "port",
        "time",
        "sleep",
        "error",
        "ser",
        "port",
        "error",
        "inBuf",
        "p",
        "inBuf",
        "p",
        "inBuf",
        "p",
        "inBuf",
        "p",
        "p",
        "value",
        "inBuf",
        "p",
        "inBuf",
        "p",
        "p",
        "value",
        "inBuf",
        "p",
        "p",
        "value",
        "msp",
        "payload",
        "payloadinbytes",
        "msp",
        "len",
        "payload",
        "bf",
        "append",
        "pl_size",
        "checksum",
        "pl_size",
        "bf",
        "append",
        "msp",
        "checksum",
        "msp",
        "payload",
        "payloadinbytes",
        "c",
        "pack",
        "pl_size",
        "payload",
        "checksum",
        "ord",
        "c",
        "c",
        "pack",
        "pl_size",
        "payload",
        "checksum",
        "ord",
        "c",
        "bf",
        "payload",
        "bf",
        "append",
        "checksum",
        "bf",
        "msp",
        "payloadinbytes",
        "i",
        "msp",
        "data",
        "append",
        "i",
        "payloadinbytes",
        "ser",
        "write",
        "pack",
        "len",
        "data",
        "data",
        "ser",
        "write",
        "pack",
        "len",
        "data",
        "data",
        "error",
        "error",
        "cmd",
        "dataSize",
        "cmd",
        "Multiwii",
        "MSP_IDENT",
        "msp_ident",
        "read8",
        "msp_ident",
        "read8",
        "read8",
        "msp_ident",
        "read32",
        "cmd",
        "Multiwii",
        "MSP_STATUS",
        "msp_status",
        "read16",
        "msp_status",
        "read16",
        "msp_status",
        "read16",
        "msp_status",
        "read32",
        "cmd",
        "Multiwii",
        "MSP_RAW_IMU",
        "msp_raw_imu",
        "read16",
        "msp_raw_imu",
        "read16",
        "msp_raw_imu",
        "read16",
        "msp_raw_imu",
        "read16",
        "msp_raw_imu",
        "read16",
        "msp_raw_imu",
        "read16",
        "msp_raw_imu",
        "read16",
        "msp_raw_imu",
        "read16",
        "msp_raw_imu",
        "read16",
        "msp_raw_imu",
        "dataSize",
        "cmd",
        "Multiwii",
        "MSP_SERVO",
        "i",
        "servo",
        "append",
        "read16",
        "cmd",
        "Multiwii",
        "MSP_MOTOR",
        "i",
        "mot",
        "append",
        "read16",
        "cmd",
        "Multiwii",
        "MSP_RC",
        "i",
        "RCChan",
        "append",
        "read16",
        "cmd",
        "Multiwii",
        "MSP_RAW_GPS",
        "msp_raw_gps",
        "read8",
        "msp_raw_gps",
        "read8",
        "msp_raw_gps",
        "read32",
        "msp_raw_gps",
        "read32",
        "msp_raw_gps",
        "read16",
        "read16",
        "cmd",
        "Multiwii",
        "MSP_COMP_GPS",
        "msp_comp_gps",
        "read16",
        "msp_comp_gps",
        "read16",
        "msp_comp_gps",
        "read8",
        "cmd",
        "Multiwii",
        "MSP_ATTITUDE",
        "msp_attitude",
        "read16",
        "msp_attitude",
        "read16",
        "msp_attitude",
        "read16",
        "cmd",
        "Multiwii",
        "MSP_ALTITUDE",
        "msp_altitude",
        "read32",
        "cmd",
        "Multiwii",
        "MSP_ANALOG",
        "cmd",
        "Multiwii",
        "MSP_RC_TUNING",
        "msp_rc_tuning",
        "read8",
        "msp_rc_tuning",
        "read8",
        "msp_rc_tuning",
        "read8",
        "msp_rc_tuning",
        "read8",
        "msp_rc_tuning",
        "read8",
        "msp_rc_tuning",
        "read8",
        "msp_rc_tuning",
        "read8",
        "cmd",
        "Multiwii",
        "MSP_ACC_CALIBRATION",
        "cmd",
        "Multiwii",
        "MSP_MAG_CALIBRATION",
        "cmd",
        "Multiwii",
        "MSP_PID",
        "i",
        "byteP",
        "read8",
        "byteI",
        "read8",
        "byteD",
        "read8",
        "i",
        "i",
        "i",
        "confP",
        "byteP",
        "i",
        "confI",
        "byteI",
        "i",
        "confD",
        "byteD",
        "i",
        "confP",
        "byteP",
        "confI",
        "byteI",
        "confD",
        "byteD",
        "confP",
        "byteP",
        "confI",
        "byteI",
        "confD",
        "byteD",
        "confP",
        "byteP",
        "confI",
        "byteI",
        "confD",
        "byteD",
        "cmd",
        "Multiwii",
        "MSP_BOX",
        "cmd",
        "Multiwii",
        "MSP_BOXNAMES",
        "cmd",
        "Multiwii",
        "MSP_PIDNAMES",
        "cmd",
        "Multiwii",
        "MSP_SERVO_CONF",
        "cmd",
        "Multiwii",
        "MSP_MISC",
        "msp_misc",
        "read16",
        "i",
        "MConf",
        "read16",
        "MConf",
        "read32",
        "MConf",
        "read32",
        "cmd",
        "Multiwii",
        "MSP_MOTOR_PINS",
        "i",
        "byteMP",
        "append",
        "read16",
        "cmd",
        "Multiwii",
        "MSP_DEBUGMSG",
        "cmd",
        "Multiwii",
        "MSP_DEBUG",
        "cmd",
        "ser",
        "inWaiting",
        "ser",
        "read",
        "c_state",
        "Multiwii",
        "IDLE",
        "c",
        "Multiwii",
        "HEADER_START",
        "Multiwii",
        "IDLE",
        "c_state",
        "Multiwii",
        "HEADER_START",
        "c",
        "Multiwii",
        "HEADER_M",
        "Multiwii",
        "IDLE",
        "c_state",
        "Multiwii",
        "HEADER_M",
        "c",
        "Multiwii",
        "HEADER_ARROW",
        "c",
        "Multiwii",
        "HEADER_ERR",
        "Multiwii",
        "IDLE",
        "c_state",
        "Multiwii",
        "HEADER_ARROW",
        "c_state",
        "Multiwii",
        "HEADER_ERR",
        "c_state",
        "Multiwii",
        "HEADER_ERR",
        "unpack",
        "c",
        "checksum",
        "unpack",
        "c",
        "Multiwii",
        "HEADER_SIZE",
        "c_state",
        "Multiwii",
        "HEADER_SIZE",
        "unpack",
        "c",
        "checksum",
        "unpack",
        "c",
        "Multiwii",
        "HEADER_CMD",
        "c_state",
        "Multiwii",
        "HEADER_CMD",
        "offset",
        "dataSize",
        "checksum",
        "unpack",
        "c",
        "inBuf",
        "append",
        "unpack",
        "c",
        "offset",
        "c_state",
        "Multiwii",
        "HEADER_CMD",
        "offset",
        "dataSize",
        "checksum",
        "unpack",
        "c",
        "err_rcvd",
        "evaluateCommand",
        "cmd",
        "dataSize",
        "ser",
        "flushInput",
        "ser",
        "flushOutput",
        "i",
        "len",
        "dataSize",
        "i",
        "inBuf",
        "i",
        "unpack",
        "c",
        "Multiwii",
        "IDLE",
        "sendRequestMSP",
        "requestMSP",
        "Multiwii",
        "MSP_PID",
        "recieveData",
        "Multiwii",
        "MSP_PID",
        "time",
        "sleep",
        "i",
        "Multiwii",
        "PIDITEMS",
        "byteP",
        "round",
        "confP",
        "i",
        "byteI",
        "round",
        "confI",
        "i",
        "byteD",
        "round",
        "confD",
        "i",
        "byteP",
        "round",
        "confP",
        "byteI",
        "round",
        "confI",
        "byteP",
        "round",
        "confP",
        "byteI",
        "round",
        "confI",
        "byteD",
        "round",
        "confD",
        "byteP",
        "round",
        "confP",
        "byteI",
        "round",
        "confI",
        "byteD",
        "round",
        "confD",
        "i",
        "Multiwii",
        "PIDITEMS",
        "payload",
        "append",
        "byteP",
        "i",
        "payload",
        "append",
        "byteI",
        "i",
        "payload",
        "append",
        "byteD",
        "i",
        "payload",
        "sendRequestMSP",
        "requestMSP",
        "Multiwii",
        "MSP_SET_PID",
        "payload",
        "time",
        "time",
        "timer",
        "sendRequestMSP",
        "requestMSP",
        "Multiwii",
        "MSP_SET_RAW_RC",
        "data",
        "time",
        "sleep",
        "timer",
        "time",
        "time",
        "start",
        "time",
        "time",
        "time",
        "time",
        "timer",
        "sendRequestMSP",
        "requestMSP",
        "Multiwii",
        "MSP_SET_RAW_RC",
        "data",
        "time",
        "sleep",
        "timer",
        "time",
        "time",
        "start",
        "time",
        "time",
        "sendRequestMSP",
        "requestMSP",
        "Multiwii",
        "MSP_RAW_IMU",
        "time",
        "sleep",
        "recieveData",
        "Multiwii",
        "MSP_RAW_IMU",
        "msp_raw_imu",
        "msp_raw_imu",
        "msp_raw_imu",
        "msp_raw_imu",
        "msp_raw_imu",
        "msp_raw_imu",
        "msp_raw_imu",
        "msp_raw_imu",
        "msp_raw_imu",
        "msp_raw_imu",
        "msp_raw_imu",
        "msp_raw_imu",
        "_imu_callback",
        "_imu_callback",
        "msp_raw_imu",
        "msp_raw_imu",
        "msp_raw_imu",
        "msp_raw_imu",
        "msp_raw_imu",
        "msp_raw_imu",
        "time",
        "sleep",
        "sendRequestMSP",
        "requestMSP",
        "Multiwii",
        "MSP_ACC_CALIBRATION",
        "time",
        "sleep",
        "callback",
        "callback"
    ],
    "literals": [
        "'version'",
        "'multiType'",
        "'multiCapability'",
        "'cycleTime'",
        "'i2cError'",
        "'present'",
        "'mode'",
        "'size'",
        "'accx'",
        "'accy'",
        "'accz'",
        "'gyrx'",
        "'gyry'",
        "'gyrz'",
        "'roll'",
        "'pitch'",
        "'yaw'",
        "'throttle'",
        "'aux1'",
        "'aux2'",
        "'aux3'",
        "'aux4'",
        "'GPS_fix'",
        "'GPS_numSat'",
        "'GPS_latitude'",
        "'GPS_longitude'",
        "'GPS_altitude'",
        "'GPS_speed'",
        "'GPS_distanceToHome'",
        "'GPS_directionToHome'",
        "'GPS_update'",
        "'angx'",
        "'angy'",
        "'heading'",
        "'alt'",
        "'byteRC_RATE'",
        "'byteRC_EXPO'",
        "'byteRollPitchRate'",
        "'byteYawRate'",
        "'byteDynThrPID'",
        "'byteThrottle_MID'",
        "'byteThrottle_EXPO'",
        "'intPowerTrigger'",
        "\"Waking up board on \"",
        "\"...\"",
        "\"\\n\\nError opening \"",
        "\" port.\\n\"",
        "\"\\n\\n\"",
        "'$'",
        "'M'",
        "'<'",
        "'<%dh'",
        "'<%Bh'",
        "'<3c2B%dhB'",
        "'<3c2B%BhB'",
        "\"Error in sendRequestMSP\"",
        "\"(\"",
        "\")\\n\\n\"",
        "'version'",
        "'multiType'",
        "'multiCapability'",
        "'cycleTime'",
        "'i2cError'",
        "'present'",
        "'mode'",
        "'accx'",
        "'accy'",
        "'accz'",
        "'gyrx'",
        "'gyry'",
        "'gyrz'",
        "'magx'",
        "'magy'",
        "'magz'",
        "'size'",
        "'GPS_fix'",
        "'GPS_numSat'",
        "'GPS_latitude'",
        "'GPS_longitude'",
        "'GPS_altitude'",
        "'GPS_distanceToHome'",
        "'GPS_directionToHome'",
        "'GPS_update'",
        "'angx'",
        "'angy'",
        "'head'",
        "'alt'",
        "'byteRC_RATE'",
        "'byteRC_EXPO'",
        "'byteRollPitchRate'",
        "'byteYawRate'",
        "'byteDynThrPID'",
        "'byteThrottle_MID'",
        "'byteThrottle_EXPO'",
        "'intPowerTrigger'",
        "'$'",
        "'M'",
        "'>'",
        "'!'",
        "'<B'",
        "'<B'",
        "'<B'",
        "'<B'",
        "'<B'",
        "'<B'",
        "'<B'",
        "\"Copter didn't understand the request type\"",
        "'\"invalid checksum for command \"+((int)(cmd&0xFF))+\": \"+(checksum&0xFF)+\" expected, got \"+(int)(c&0xFF))'",
        "'\"<\"+(cmd&0xFF)+\" \"+(dataSize&0xFF)+\"> {\");'",
        "\"\"",
        "\"} [\"",
        "'<B'",
        "\"]\"",
        "\"String\"",
        "\"Payload:...\"",
        "'accx'",
        "'accx'",
        "'accy'",
        "'accy'",
        "'accz'",
        "'accz'",
        "'gyrx'",
        "'gyrx'",
        "'gyry'",
        "'gyry'",
        "'gyrz'",
        "'gyrz'",
        "'accx'",
        "'accy'",
        "'accz'",
        "'gyrx'",
        "'gyry'",
        "'gyrz'"
    ],
    "variables": [
        "MSP_IDENT",
        "MSP_STATUS",
        "MSP_RAW_IMU",
        "MSP_SERVO",
        "MSP_MOTOR",
        "MSP_RC",
        "MSP_RAW_GPS",
        "MSP_COMP_GPS",
        "MSP_ATTITUDE",
        "MSP_ALTITUDE",
        "MSP_ANALOG",
        "MSP_RC_TUNING",
        "MSP_PID",
        "MSP_BOX",
        "MSP_MISC",
        "MSP_MOTOR_PINS",
        "MSP_BOXNAMES",
        "MSP_PIDNAMES",
        "MSP_SERVO_CONF",
        "MSP_SET_RAW_RC",
        "MSP_SET_RAW_GPS",
        "MSP_SET_PID",
        "MSP_SET_BOX",
        "MSP_SET_RC_TUNING",
        "MSP_ACC_CALIBRATION",
        "MSP_MAG_CALIBRATION",
        "MSP_SET_MISC",
        "MSP_RESET_CONF",
        "MSP_SELECT_SETTING",
        "MSP_SET_HEAD",
        "MSP_SET_SERVO_CONF",
        "MSP_SET_MOTOR",
        "MSP_BIND",
        "MSP_EEPROM_WRITE",
        "MSP_DEBUGMSG",
        "MSP_DEBUG",
        "IDLE",
        "HEADER_START",
        "HEADER_M",
        "HEADER_ARROW",
        "HEADER_SIZE",
        "HEADER_CMD",
        "HEADER_ERR",
        "PIDITEMS",
        "msp_ident",
        "msp_status",
        "msp_raw_imu",
        "msp_set_rc",
        "msp_raw_gps",
        "msp_comp_gps",
        "msp_attitude",
        "msp_altitude",
        "msp_rc_tuning",
        "msp_misc",
        "inBuf",
        "p",
        "c_state",
        "err_rcvd",
        "checksum",
        "cmd",
        "offset",
        "dataSize",
        "servo",
        "mot",
        "RCChan",
        "byteP",
        "byteI",
        "byteD",
        "confINF",
        "byteMP",
        "confP",
        "confI",
        "confD",
        "_lock",
        "_imu_callback",
        "_sonar_callback",
        "_fc_callback",
        "_imu_thread",
        "_sonar_thread",
        "_fc_thread",
        "cond1",
        "cond2",
        "cond3",
        "daemon",
        "daemon",
        "daemon",
        "ser",
        "port",
        "baudrate",
        "bytesize",
        "parity",
        "stopbits",
        "timeout",
        "xonxoff",
        "rtscts",
        "dsrdtr",
        "writeTimeout",
        "value",
        "p",
        "value",
        "p",
        "value",
        "p",
        "checksum",
        "bf",
        "pl_size",
        "bf",
        "data",
        "b",
        "b",
        "b",
        "b",
        "GPS_speed",
        "x",
        "x",
        "x",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "x",
        "x",
        "x",
        "x",
        "i",
        "x",
        "x",
        "c",
        "c_state",
        "c_state",
        "c_state",
        "c_state",
        "c_state",
        "c_state",
        "c_state",
        "err_rcvd",
        "dataSize",
        "p",
        "offset",
        "checksum",
        "c_state",
        "cmd",
        "c_state",
        "c_state",
        "payload",
        "i",
        "i",
        "i",
        "timer",
        "start",
        "data",
        "timer",
        "start",
        "timer",
        "start",
        "data",
        "timer",
        "start",
        "_imu_callback"
    ],
    "comments": [
        "!/usr/bin/env python",
        "",
        "#",
        "MULTIWII CLASS                                                    #",
        "#",
        "",
        "Multiwii Serial Protocol ##################################################",
        "Multiwii variables ################################################",
        "Flask related variables ##########################################",
        "Create a lock to syncronize access to hardware from multiple threads.",
        "Initialize callbacks to none",
        "self._cam_callback = None",
        "self._cam_thread = threading.Thread(target=self._update_cam, args=(cond4, ))      ######  Later... ######",
        "condition variable to implement wait() in threads.",
        "self.cond4 = threading.Condition()",
        "self._cam_thread.daemon = True",
        "self._dht_thread.start()",
        "serial port connection ###########################################",
        "Read the data from buffer variable ##########################",
        "Request the Flight Controller #################################",
        "print \"here in requesrMSP\"",
        "print bf",
        "print \"here in sendRequestMSP\"",
        "print data",
        "print \"Data length %d \" %(len(data)-6)",
        "b = self.ser.write(struct.pack('<3c3B', *data))",
        "Set the Multiwii variables ####################################",
        "MSP version",
        "Parse incoming data bytes ######################################",
        "print \"recieveData...\"",
        "print c",
        "print (struct.unpack('<B',c)[0])",
        "reset index variables",
        "the command is to follow",
        "print (struct.unpack('<B',c)[0])",
        "print (struct.unpack('<B',c)[0])",
        "print \"self.inBuf...\"",
        "print self.inBuf[offset-1]",
        "compare calculated and transferred checksum",
        "print \"Final step...\"",
        "self.ser.flushOutput()",
        "",
        "#",
        "HELPER FUNCTIONS                                                        #",
        "#",
        "",
        "POS - 4 POSR - 5 NAVR - 6",
        "2^15 ...to check if negative number is recieved",
        "2^16 ...converting into 2's complement",
        "print \"size: %d, accx: %f, accy: %f, accz: %f, gyrx: %f, gyry: %f, gyrz: %f  \" %(self.msp_raw_imu['size'], self.msp_raw_imu['accx'], self.msp_raw_imu['accy'], self.msp_raw_imu['accz'], self.msp_raw_imu['gyrx'], self.msp_raw_imu['gyry'], self.msp_raw_imu['gyrz'])",
        "Flask related functions #############################################"
    ],
    "docstrings": [
        "\"\"\"Register a function to be called when imu state changes.\"\"\""
    ],
    "functions": [
        "read32",
        "read16",
        "read8",
        "requestMSP",
        "sendRequestMSP",
        "evaluateCommand",
        "recieveData",
        "setPID",
        "arm",
        "disarm",
        "recieveIMU",
        "calibrateIMU",
        "on_imu_readings_change"
    ],
    "classes": [
        "Multiwii"
    ]
}