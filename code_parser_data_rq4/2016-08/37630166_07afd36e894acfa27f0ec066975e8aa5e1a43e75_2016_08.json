{
    "identifiers": [
        "args",
        "name",
        "name",
        "GameStartr",
        "GameStartr",
        "name",
        "GameStartr",
        "GameStartr",
        "GameStartr",
        "GameStartr",
        "GameStartr",
        "GameStartr",
        "GameStartr",
        "GameStartr",
        "i",
        "GameStartr",
        "GameStartr",
        "GameStartr",
        "args",
        "i",
        "GameStartr",
        "args",
        "GameStartr",
        "i",
        "i",
        "GameStarter",
        "GameStartr",
        "GameStartr",
        "name",
        "name",
        "name",
        "attributes",
        "name",
        "schema",
        "GameStartr",
        "GameStartr",
        "name",
        "schema",
        "GameStartr",
        "name",
        "schema",
        "GameStartr",
        "name",
        "name",
        "name",
        "dialog",
        "onCompletion",
        "name",
        "name",
        "settings",
        "name",
        "name",
        "dx",
        "dy",
        "name",
        "x",
        "y",
        "name",
        "direction"
    ],
    "literals": [
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"menu\"",
        "\"text\"",
        "\"thing\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [],
    "comments": [
        "<reference path=\"../typings/GameStartr.d.ts\" />"
    ],
    "docstrings": [
        "* General attributes for both Menus and MenuSchemas.",
        "* A menu to set as active when this one is deleted.",
        "* A callback for when this menu is set as active.",
        "* Schemas of children to add on creation.",
        "* A containing menu to position within.",
        "* Whether this should be deleted when its dialog finishes.",
        "* Whether the dialog should finish when the last word is displayed, instead\n     * of waiting for user input.",
        "* How long to delay completion when finishAutomatically is true.",
        "* How tall this should be.",
        "* Whether user selection events should be ignored.",
        "* Whether user deselection events should be ignored.",
        "* Whether deselection events should count as selection during dialogs.",
        "* Whether this should be kept alive when deselected.",
        "* Other menus to delete when this is deleted.",
        "* A callback for when this becomes active.",
        "* A callback for when this is deselected.",
        "* A callback for a user event directing down.",
        "* A callback for when this becomes inactive.",
        "* A callback for a user event directing to the left.",
        "* A callback for when this is deleted.",
        "* A callback for a user event directing to the right.",
        "* A callback for a user event directing up.",
        "* A sizing description for this, including width and height.",
        "* A menu to set as active if the start button is pressed while this menu is active.",
        "* A manual width for the area text may be placed in.",
        "* How tall text characters should be treated as.",
        "* How much horizontal padding should be between characters.",
        "* How much vertical padding should be between characters.",
        "* How long to delay between placing words.",
        "* A manual starting x-location for dialog text.",
        "* How wide text characters should be treated as.",
        "* A multiplier for textWidth. Commonly -1 for right-to-left text.",
        "* A horizontal offset for the text placement area.",
        "* A vertical offset for text placement area.",
        "* How wide this should be.",
        "* Existing menus, listed by name.",
        "* A Menu Thing, with any number of children.",
        "* Child Things visible within the Menu.",
        "* How tall this is.",
        "* A summary of where this menu is in its dialog.",
        "* Where text should start displaying, horizontally.",
        "* How wide this is.",
        "* A general Text THing.",
        "* How much vertical padding this Thing requires.",
        "* A summary of a menu's progress through its dialog.",
        "* Whether the dialog has been completed.",
        "* A callback for when the dialog completes.",
        "* Whether the dialog is currently being added to the menu.",
        "* Known menu schemas, keyed by name.",
        "* A schema to specify creating a menu.",
        "* How the menu should be positioned within its container.",
        "* A schema to specify creating a list menu.",
        "* How many scrolling items should be visible within the menu.",
        "* Whether scrolling items should be computed on creation.",
        "* A description of how wide and tall a menu should be.",
        "* How wide the menu should be.",
        "* How tall the menu should be.",
        "* A description of how a meny should be positioned within its container.",
        "* An optional horizontal position modifier, as \"center\", \"right\", or \"stretch\".",
        "* Horizontal and vertical offsets to shfit the menu by.",
        "* Whether this should have children not shifted vertically relative to the \n     * menu top (used by list menus).",
        "* An optional vertical position modifier, as \"center\", \"bottom\", or \"stretch\".",
        "* Horizontal and vertical offsets to shift the menu by.",
        "* How far to shift the menu vertically from the top.",
        "* How far to shift the menu horizontally from the right.",
        "* How far to shift the menu vertically from the bottom.",
        "* How far to shift the menu horizontally from the left.",
        "* A description of a menu child to create, including name and child type.",
        "* What type of child this is.",
        "* A description of a menu to create as a menu child.",
        "* Menu attributes to pass to the menu.",
        "* The name of the menu.",
        "* A descripion of a word to create as a menu child.",
        "* How to position the word within the menu.",
        "* A description of the word area's size.",
        "* Raw words to set as the text contents.",
        "* A description of a Thing to create as a menu child.",
        "* Arguments to proliferate onto the Thing.",
        "* How to position the Thing within the menu.",
        "* A description of the Thing's size.",
        "* What Thing title to create.",
        "* Various raw forms of dialog that may be used. A single String is common\n * for short dialogs, and longer ones may use a String for each word or character,\n * as well as filtered Objects.",
        "* A general word and/or command to use within a text dialog.",
        "* How many characters long the word is.",
        "* The actual word to place, if this is a text",
        "* A word command to modify dialog within its text.",
        "* Whether the command's position changing should have unitsize applied.",
        "* An attribute to change, if this is an attribute change command.",
        "* The command, as \"attribute\", \"attributeReset\", \"padLeft\", or \"position\".",
        "* A value for the attribute to change, if this is an attribute change command.",
        "* A pad left command to add a word with padding.",
        "* Whether the amount of padding should be reduced by the word length.",
        "* A word command to reset an attribute after an attribute change command.",
        "* The name of the attribute to reset.",
        "* A word command to shift the position to add subsequent words.",
        "* How far to shift horizontally.",
        "* How far to shift vertically.",
        "* A menu containing some number of options as cells in a grid.",
        "* The arrow Thing indicating the current selection.",
        "* A horizontal offset for the arrow Thing.",
        "* A vertical offset for the arrow Thing.",
        "* The grid of options, as columns containing rows.",
        "* How many columns are available in the grid.",
        "* How many rows are available in the grid.",
        "* How tall this is.",
        "* All options available in the grid.",
        "* Descriptions of the options, with their grid cell and Things.",
        "* A summary of the menu's progress through its list.",
        "* How many rows the menu has visually scrolled.",
        "* Whether the list should be a single column, rather than auto-flow.",
        "* The currently selected [column, row] in the grid.",
        "* How wide each column of text should be in the grid.",
        "* How wide this is.",
        "* A single option within a list menu's grid.",
        "* A callback for selecting this cell with a user selection event.",
        "* The column containing this option.",
        "* What number column contains this option.",
        "* This option's index within all grid options.",
        "* What number row contains this option.",
        "* Text to display to represent this option.",
        "* Optionally, an equivalent title that represents this option.",
        "* Floating texts that should be added with the option.",
        "* Things that visually represent this option.",
        "* Optionally, some value represented by this option.",
        "* A horizontal left edge for this option's area.",
        "* A vertical top edge for this option's area.",
        "* Settings to create a new list menu.",
        "* A bottom option to place below all grid options.",
        "* Options within the menu, or a Function to generate them.",
        "* A default starting selected index.",
        "* A summary of the menu's progress through its list.",
        "* The current words in the list.",
        "* The index of the currently selected option.",
        "* The horizontal position of the currently selected option.",
        "* The vertical position of the currently selected option.",
        "* Alternate Thing titles for characters, such as \" \" for \"space\".",
        "* Programmatic replacements for deliniated words.",
        "* A Function to generate a word replacement based on the GameStarter's state.",
        "* Settings to initialize a new IMenuGraphr.",
        "* The parent GameStartr.IGameStartr managing Things.",
        "* Known menu schemas, keyed by name.",
        "* Alternate Thing titles for charactes, such as \" \" for \"space\".",
        "* Programmatic replacements for deliniated words.",
        "* The separator for words to replace using replacements.",
        "* A menu management system. Menus can have dialog-style text, scrollable\n * and unscrollable grids, and children menus or decorations added.",
        "* @returns All available menus, keyed by name.",
        "* @param name   A name of a menu.\n     * @returns The menu under the given name.",
        "* Returns a menu, throwing an error if it doesn't exist.\n     * \n     * @param name   A name of a menu.\n     * @returns The menu under the given name.",
        "* @returns The currently active menu.",
        "* @returns The name of the currently active menu.",
        "* @returns The alternate Thing titles for characters.",
        "* @returns The programmatic replacements for deliniated words.",
        "* Creates a menu with the given name and attributes, and stores it under the name.\n     * Default information is used from the schema of that name, such as position and\n     * children, but may be override by attributes.\n     * \n     * @param name   The name of the menu.\n     * @param attributes   Custom attributes to apply to the menu.\n     * @returns The newly created menu.",
        "* Adds a child object to an existing menu.\n     * \n     * @param name   The name of the existing menu.\n     * @param schema   Settings for the child, including name and child type.\n     * @returns The newly created Thing or Things.\n     * @remarks Creating a menu is done using this.createMenu, so the created menu might\n     *          not mark itself as a child of the parent.",
        "* Creates a series of words as a child of a menu.\n     * \n     * @param name   The name of the menu.\n     * @param schema   Settings for the words.\n     * @returns The words' character Things.",
        "* Creates a Thing as a child of a menu.\n     * \n     * @param name   The name of the menu.\n     * @param schema   Settings for the Thing.\n     * @returns The newly created Thing.",
        "* Hides a menu of the given name and deletes its children, if it exists.\n     * \n     * @param name   The name of the menu to hide.",
        "* Deletes a menu of the given name, if it exists.\n     * \n     * @param name   The name of the menu to delete.",
        "* Deletes the active menu, if it exists.",
        "* Adds dialog-style text to a menu. If the text overflows, \n     * \n     * @param name   The name of the menu.\n     * @param dialog   Raw dialog to add to the menu.\n     * @param onCompletion   An optional callback for when the text is done.",
        "* Continues a menu from its current display words to the next line.\n     * \n     * @param name    The name of the menu.",
        "* Adds a list of text options to a menu.\n     * \n     * @param name   The name of the menu.\n     * @param settings   Settings for the list, particularly its options, starting\n     *                   index, and optional floating bottom.",
        "* Retrives the currently selected grid cell of a menu.\n     * \n     * @param name   The name of the menu.\n     * @returns The currently selected grid cell of the menu.",
        "* Shifts the selected index of a list menu, adjusting for scrolling if necessary.\n     * \n     * @param name   The name of the menu.\n     * @param dx   How far along the menu's grid to shift horizontally.\n     * @param dy   How far along the menu's grid to shift vertically.",
        "* Sets the current selected index of a menu.\n     * \n     * @param name   The name of the menu.\n     * @param x   The new horizontal value for the index.\n     * @param y   The new vertical value for the index.",
        "* Sets the currently active menu.\n     * \n     * @param name   The name of the menu to set as active.",
        "* Reacts to a user event directing in the given direction.\n     * \n     * @param direction   The direction of the interaction.",
        "* Reacts to a user event directing up.",
        "* Reacts to a user event directing to the right.",
        "* Reacts to a user event directing down.",
        "* Reacts to a user event directing to the left.",
        "* Reacts to a user event from pressing a selection key.",
        "* Reacts to a user event from pressing a deselection key.",
        "* Reacts to a user event from pressing a start key."
    ],
    "functions": [],
    "classes": []
}