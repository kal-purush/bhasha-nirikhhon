{
    "identifiers": [
        "Microsoft",
        "CodeAnalysis",
        "Microsoft",
        "CodeAnalysis",
        "CSharp",
        "Microsoft",
        "CodeAnalysis",
        "CSharp",
        "Syntax",
        "Microsoft",
        "CodeAnalysis",
        "Diagnostics",
        "Microsoft",
        "CodeAnalysis",
        "Text",
        "Collections",
        "Immutable",
        "Linq",
        "CodeCracker",
        "CSharp",
        "Style",
        "DiagnosticAnalyzer",
        "LanguageNames",
        "CSharp",
        "DiagnosticAnalyzer",
        "SupportedCategories",
        "Style",
        "DiagnosticDescriptor",
        "DiagnosticId",
        "UnnecessaryToStringInStringConcatenation",
        "ToDiagnosticId",
        "Title",
        "MessageFormat",
        "Category",
        "DiagnosticSeverity",
        "Info",
        "customTags",
        "WellKnownDiagnosticTags",
        "Unnecessary",
        "isEnabledByDefault",
        "description",
        "Description",
        "helpLinkUri",
        "HelpLink",
        "ForDiagnostic",
        "DiagnosticId",
        "UnnecessaryToStringInStringConcatenation",
        "ImmutableArray",
        "DiagnosticDescriptor",
        "ImmutableArray",
        "Create",
        "Rule",
        "AnalysisContext",
        "context",
        "context",
        "RegisterSyntaxNodeAction",
        "Analyzer",
        "SyntaxKind",
        "AddExpression",
        "SyntaxNodeAnalysisContext",
        "context",
        "context",
        "IsGenerated",
        "context",
        "Node",
        "BinaryExpressionSyntax",
        "addExpression",
        "IsKind",
        "SyntaxKind",
        "AddExpression",
        "addExpression",
        "ChildNodesAndTokens",
        "Any",
        "x",
        "IsKind",
        "SyntaxKind",
        "PlusToken",
        "addExpression",
        "ChildNodesAndTokens",
        "Any",
        "x",
        "IsKind",
        "SyntaxKind",
        "InvocationExpression",
        "hasPlusToken",
        "hasInvocationExpression",
        "GetInvocationExpressionsThatHaveToStringCall",
        "addExpression",
        "expression",
        "invocationExpressionsThatHaveToStringCall",
        "expression",
        "Expression",
        "ChildNodesAndTokens",
        "Last",
        "x",
        "IsKind",
        "SyntaxKind",
        "DotToken",
        "expression",
        "ChildNodes",
        "Last",
        "x",
        "IsKind",
        "SyntaxKind",
        "ArgumentList",
        "expression",
        "ArgumentList",
        "Arguments",
        "Count",
        "expression",
        "SyntaxTree",
        "TextSpan",
        "lastDot",
        "Start",
        "argumentList",
        "End",
        "lastDot",
        "Start",
        "Diagnostic",
        "Create",
        "Rule",
        "Location",
        "Create",
        "context",
        "Node",
        "SyntaxTree",
        "textspan",
        "context",
        "ReportDiagnostic",
        "diagnostic",
        "Collections",
        "Generic",
        "InvocationExpressionSyntax",
        "BinaryExpressionSyntax",
        "addExpression",
        "addExpression",
        "ChildNodes",
        "OfType",
        "InvocationExpressionSyntax",
        "Where",
        "x",
        "Expression",
        "ToString",
        "EndsWith",
        "ToList"
    ],
    "literals": [
        "\"Unnecessary '.ToString()' call in string concatenation.\"",
        "\"The runtime automatically calls '.ToString()' method for\"",
        "\" string concatenation operations when there is no parameters. Remove them.\""
    ],
    "variables": [
        "Title",
        "MessageFormat",
        "Title",
        "Category",
        "Description",
        "DiagnosticDescriptor",
        "Rule",
        "SupportedDiagnostics",
        "addExpression",
        "hasPlusToken",
        "hasInvocationExpression",
        "invocationExpressionsThatHaveToStringCall",
        "lastDot",
        "argumentList",
        "tree",
        "textspan",
        "diagnostic"
    ],
    "comments": [
        "string concatenation must have PlusToken and an InvocationExpression",
        "Only default call to ToString method must be accepted"
    ],
    "docstrings": [],
    "functions": [
        "Initialize",
        "Analyzer",
        "GetInvocationExpressionsThatHaveToStringCall"
    ],
    "classes": [
        "UnnecessaryToStringInStringConcatenationAnalyzer"
    ]
}