{
    "identifiers": [
        "image_segmentation",
        "simularity_set",
        "image_print_utils",
        "histogram_utils",
        "PIL",
        "Image",
        "sys",
        "getopt",
        "yaml",
        "numpy",
        "np",
        "getopt",
        "getopt",
        "sys",
        "argv",
        "getopt",
        "GetoptError",
        "sys",
        "exit",
        "opt",
        "arg",
        "opts",
        "opt",
        "sys",
        "exit",
        "opt",
        "arg",
        "opt",
        "arg",
        "opt",
        "arg",
        "image_name",
        "sys",
        "exit",
        "format",
        "image_name",
        "output_file",
        "format",
        "output_file",
        "parameter_file",
        "format",
        "sigma",
        "min_size",
        "th",
        "format",
        "parameter_file",
        "open",
        "parameter_file",
        "yml_file",
        "yaml",
        "load",
        "yml_file",
        "format",
        "sigma",
        "min_size",
        "th",
        "Image",
        "open",
        "image_name",
        "IOError",
        "format",
        "image_name",
        "sys",
        "exit",
        "im",
        "convert",
        "np",
        "array",
        "im",
        "image_segmentation",
        "segment_image",
        "im",
        "sigma",
        "th",
        "min_size",
        "simularity_set",
        "simularity_set",
        "region_image",
        "pixel_class",
        "image",
        "im",
        "disjoint_set",
        "disjoint_set",
        "seg_image",
        "seg_image",
        "region",
        "bbox",
        "sim_set",
        "bounding_box",
        "items",
        "bounding_boxes",
        "add",
        "bbox",
        "sim_set",
        "disjoint_set",
        "num_sets",
        "sim_set",
        "get_most_similar_regions",
        "sim_set",
        "merge_regions",
        "reg_a",
        "reg_b",
        "bounding_boxes",
        "add",
        "bbox",
        "open",
        "output_file",
        "file",
        "bbox",
        "bounding_boxes",
        "file",
        "write",
        "format",
        "bbox",
        "x0",
        "bbox",
        "y0",
        "bbox",
        "width",
        "bbox",
        "height",
        "format",
        "output_file"
    ],
    "literals": [
        "''",
        "''",
        "''",
        "\"hi:o:p:\"",
        "'get_candidate_regions.py -i <input_image> -o <output_file> -p <param_file>'",
        "'get_candidate_regions.py -h for more help'",
        "'-h'",
        "'--------------------------------------------------------------------------------------'",
        "\"This function generates bounding box values for candidate regions that can be used for\"",
        "\"object detection candidate regions.\"",
        "\"--------------------------------------------------------------------------------------\"",
        "'get_candidate_regions.py -i <input_image> -o <output_file> -p <param_file>'",
        "'-i <input_image>'",
        "'Image to generate the bounding box candidates for. Must be an image format'",
        "\"\"",
        "'-o <output_file>'",
        "'Output file that contains the bounding box locations of each of the regions.'",
        "'Format of the file: each line contains one region with format: x0 y0 width height.'",
        "\"\"",
        "'-p <param_file>'",
        "'.yml file that specifies the parameters for the segmentation'",
        "'Parameters:'",
        "'\tsigma = Gaussian filter sigma'",
        "'\tmin_size = Minimum size for a region allowable'",
        "'\tth = Threshold for region segmentation. The larger this is, the larger the initial regions are.'",
        "\"--------------------------------------------------------------------------------------\"",
        "'-i'",
        "'-o'",
        "'-p'",
        "\"\"",
        "'Must specify an image name. Use -h for more information.'",
        "\"Input Image: {}\"",
        "\"\"",
        "'Using default output file name: out.txt'",
        "'out.txt'",
        "\"Output Name: {}\"",
        "\"\"",
        "'Using default parameter values: sigma={}, min_size={}, th={}'",
        "\"Parameter File: {}\"",
        "'r'",
        "\"segmentation_params\"",
        "\"sigma\"",
        "\"segmentation_params\"",
        "\"min_size\"",
        "\"segmentation_params\"",
        "\"th\"",
        "'Using Found Parameters: sigma={}, min_size={}, th={}'",
        "\"Image name {} is not a valid image format.\"",
        "'RGB'",
        "\"Getting simularity set...\"",
        "\"Got simularity set.\"",
        "'Getting the region information...'",
        "'Got all the region information.'",
        "\"Storing the region information...\"",
        "'w'",
        "'{} {} {} {}\\n'",
        "\"Stored all the region infromation in file: {}\""
    ],
    "variables": [
        "image_name",
        "output_file",
        "parameter_file",
        "opts",
        "args",
        "image_name",
        "output_file",
        "parameter_file",
        "output_file",
        "sigma",
        "min_size",
        "th",
        "sigma",
        "min_size",
        "th",
        "im",
        "im",
        "im",
        "seg_image",
        "pixel_class",
        "disjoint_set",
        "sim_set",
        "bounding_boxes",
        "reg_a",
        "reg_b",
        "bbox"
    ],
    "comments": [
        "!/usr/bin/python",
        "",
        "Interface code to generate regions of an image that can be used for object detection",
        "",
        "Get all of the initial regions",
        "Get the rest of the regions as you combine the best ones"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}