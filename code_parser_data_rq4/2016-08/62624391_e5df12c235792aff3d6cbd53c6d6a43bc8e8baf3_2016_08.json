{
    "identifiers": [
        "csv",
        "sys",
        "name",
        "len",
        "proto_dict",
        "proto_dict",
        "name",
        "exit",
        "proto",
        "len",
        "proto_dict",
        "sys",
        "argv",
        "upper",
        "proto_dict",
        "proto",
        "display",
        "sys",
        "argv",
        "upper",
        "proto_dict",
        "proto",
        "proto_dict",
        "proto",
        "IndexError",
        "usage",
        "display",
        "len",
        "proto_dict",
        "usage",
        "open",
        "file_path",
        "csvfile",
        "csv",
        "reader",
        "csvfile",
        "delimiter",
        "line",
        "lines",
        "len",
        "line",
        "contents",
        "append",
        "line",
        "line",
        "len",
        "contents",
        "contents",
        "line",
        "column",
        "sys",
        "argv",
        "upper",
        "contents",
        "line",
        "split",
        "line",
        "get_frame_no",
        "check",
        "pos",
        "LINE_COUNT",
        "pos",
        "LINE_COUNT",
        "check",
        "contents",
        "check",
        "split",
        "check_frame",
        "frame_no",
        "protocol_check",
        "append",
        "contents",
        "check",
        "column",
        "IndexError",
        "sys",
        "argv",
        "upper",
        "protocol_check",
        "error_frames",
        "append",
        "frame_no",
        "error_frames",
        "result",
        "error",
        "result",
        "error"
    ],
    "literals": [
        "\"PATH OF THE FILE\"",
        "\"name\"",
        "\"M3UA\"",
        "\"line\"",
        "\"2\"",
        "\"name\"",
        "\"SCCP\"",
        "\"line\"",
        "\"3\"",
        "\"name\"",
        "\"BSSAP\"",
        "\"line\"",
        "\"4\"",
        "\"name\"",
        "\"RANAP\"",
        "\"line\"",
        "\"5\"",
        "\"name\"",
        "\"MMCC\"",
        "\"line\"",
        "\"6\"",
        "\"name\"",
        "\"GMM\"",
        "\"line\"",
        "\"7\"",
        "\"name\"",
        "\"TCAP\"",
        "\"line\"",
        "\"8\"",
        "\"name\"",
        "\"MAP\"",
        "\"line\"",
        "\"9\"",
        "\"ENTERED wrong protocol, use these : \"",
        "\"name\"",
        "\"name\"",
        "\"name\"",
        "\"line\"",
        "'r'",
        "\"\\t\"",
        "\"#\"",
        "\"#\"",
        "\"ERROR IN FRAME NO : \"",
        "\"NO ERROR FRAMES FOUND\""
    ],
    "variables": [
        "file_path",
        "proto_dict",
        "display",
        "column",
        "contents",
        "frame_no",
        "pos",
        "result",
        "error_frames",
        "protocol_check",
        "LINE_COUNT",
        "column",
        "lines",
        "get_frame_no",
        "pos",
        "frame_no",
        "single_frame",
        "check_frame",
        "protocol_check",
        "result"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\n                ------------------\n                MODULE DESCRIPTION\n                ------------------\nCurrent module was developed to check the error frames based on the following\nconditions.\n\n    1) In Each frame the protocol presence is mandatory and absence of the\n    protocol is treated as an error frame.\n\n    2) Each frame is not restricted to a single line and it can be in multiple\n    lines.\n\nSolution:\n\n    1) Check the error frame i.e NoRANAP and store the frame number, position\n    in which the error frame is present.\n\n    2) Check the above and below lines for the same frame number and also\n    for the presence of the protocol.\n\n    3) If found its not an error.\n\n\nSample Log:\n\nDec Frame # 1\tSCTP\tM3UA\tSCCP\tNoBSSAP\tNoRANAP\tNoMMCC\tNoGMM\tNoTCAP\tNoMAP\n\nDec Frame # 1\tSCTP\tM3UA\tSCCP\tNoBSSAP\tRANAP\tNoMMCC\tNoGMM\tNoTCAP\tNoMAP\n\nDec Frame # 1\tSCTP\tM3UA\tSCCP\tNoBSSAP\tRANAP\tNoMMCC\tNoGMM\tNoTCAP\tNoMAP\n\nDec Frame # 1\tSCTP\tM3UA\tSCCP\tNoBSSAP\tRANAP\tNoMMCC\tNoGMM\tNoTCAP\tNoMAP\n\nDec Frame # 1\tSCTP\tM3UA\tSCCP\tNoBSSAP\tRANAP\tMMCC\tNoGMM\tNoTCAP\tMAP\n\nDec Frame # 2\tSCTP\tM3UA\tSCCP\tNoBSSAP\tRANAP\tMMCC\tNoGMM\tNoTCAP\tMAP\n\nDec Frame # 3\tSCTP\tM3UA\tSCCP\tNoBSSAP\tRANAP\tMMCC\tNoGMM\tNoTCAP\tMAP\n\nDec Frame # 4\tSCTP\tM3UA\tSCCP\tNoBSSAP\tRANAP\tMMCC\tNoGMM\tNoTCAP\tMAP\n\nDec Frame # 4\tSCTP\tM3UA\tSCCP\tNoBSSAP\tRANAP\tNoMMCC\tNoGMM\tNoTCAP\tNoMAP\n\nDec Frame # 4\tSCTP\tM3UA\tSCCP\tNoBSSAP\tRANAP\tMMCC\tNoGMM\tNoTCAP\tNoMAP\n\nDec Frame # 5\tSCTP\tM3UA\tSCCP\tNoBSSAP\tRANAP\tMMCC\tNoGMM\tNoTCAP\tMAP\n\nDec Frame # 6\tSCTP\tM3UA\tSCCP\tNoBSSAP\tRANAP\tMMCC\tNoGMM\tNoTCAP\tMAP\n\nDec Frame # 7\tSCTP\tM3UA\tSCCP\tNoBSSAP\tRANAP\tMMCC\tNoGMM\tNoTCAP\tNoMAP\n\nDec Frame # 7\tSCTP\tM3UA\tSCCP\tNoBSSAP\tRANAP\tMMCC\tNoGMM\tNoTCAP\tMAP\n\nDec Frame # 8\tSCTP\tM3UA\tSCCP\tNoBSSAP\tRANAP\tMMCC\tNoGMM\tNoTCAP\tMAP\n\nDec Frame # 9\tSCTP\tM3UA\tSCCP\tNoBSSAP\tRANAP\tMMCC\tNoGMM\tNoTCAP\tMAP\n\nDec Frame # 10\tSCTP\tM3UA\tSCCP\tNoBSSAP\tRANAP\tMMCC\tNoGMM\tNoTCAP\tMAP\n\n\"\"\"",
        "\"\"\" error printing function \"\"\"",
        "\"\"\" error checking conditions \"\"\"",
        "\"\"\"    splits each line of the file based on delimiter  \"\"\"",
        "\"\"\" Each line is added to the list : frames \"\"\"",
        "\"\"\"checks for missing protocol, eg: NoRANAP\"\"\"",
        "\"\"\" split the line using the delimiter, RHS will result in frame no \"\"\"",
        "\"\"\"\n        from the above code, position/line at which the NoRANAP and frame Num\n        is found. Now check the condition if it matches for the error condition.\n        i.e RANAP should present in same frame Num which can be either in the\n        above lines or below lines with respect to frame_no.\n        \"\"\"",
        "\"\"\"\n            condition to check if the operation pos-1 should not result in a\n            negative num. This can occur in case of NoRANAP found in the first\n            line i.e zero position\n            \"\"\"",
        "\"\"\"\n                check if the required frame Num matches, if matched then check\n                for RANAP presence.\n                \"\"\""
    ],
    "functions": [
        "usage"
    ],
    "classes": []
}