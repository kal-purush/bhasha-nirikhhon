{
    "identifiers": [
        "require",
        "require",
        "require",
        "LIVERELOAD_PORT",
        "connect",
        "dir",
        "serveStatic",
        "require",
        "dir",
        "grunt",
        "grunt",
        "require",
        "grunt",
        "grunt",
        "grunt",
        "connect",
        "options",
        "rewrite",
        "rules",
        "lrSnippet",
        "mountFolder",
        "connect",
        "options",
        "connect",
        "options",
        "rewrite",
        "rules",
        "mountFolder",
        "connect",
        "options",
        "grunt",
        "pkg",
        "pkg",
        "pkg",
        "grunt",
        "pkg",
        "pkg",
        "pkg",
        "destBase",
        "destPath",
        "destBase",
        "destPath",
        "destBase",
        "destPath",
        "destBase",
        "destPath",
        "LIVERELOAD_PORT",
        "grunt",
        "grunt",
        "version",
        "grunt"
    ],
    "literals": [
        "'use strict'",
        "'serve-static'",
        "'connect-modrewrite'",
        "'connect-livereload'",
        "'path'",
        "'semver'",
        "'patch'",
        "'matchdep'",
        "'grunt-*'",
        "'package.json'",
        "'app/assets'",
        "'app'",
        "'dist'",
        "'dist/assets'",
        "'e2e-tests'",
        "'unit-tests'",
        "'<%= project.app %>/index.html'",
        "'<%= project.app %>/assets'",
        "'src/scss/style.scss'",
        "'<%= project.src %>/js/*.js'",
        "'<%= project.app %>/'",
        "'<%= project.dist %>/'",
        "'<%= project.app %>/index.html'",
        "'<%= project.app %>/index.html'",
        "'<%= project.assets %>/js/**/*.js'",
        "'<%= project.assets %>/app/**/*.js'",
        "'<%= project.assets %>/css/*.css'",
        "'<%= project.dist %>/index.html'",
        "'<%= project.dist_src %>/js/**/*.js'",
        "'<%= project.dist_src %>/app/**/*.js'",
        "'<%= project.dist_src %>/css/*.css'",
        "'<!-- bower:{{ext}} -->'",
        "'<!-- endbower -->'",
        "'<%= project.app %>/index.html'",
        "'bower.json'",
        "'/*!\\n'",
        "' * <%= pkg.name %>\\n'",
        "' * <%= pkg.title %>\\n'",
        "' * <%= pkg.url %>\\n'",
        "' * @author <%= pkg.author %>\\n'",
        "' * @version <%= pkg.version %>\\n'",
        "' * Copyright <%= pkg.copyright %>. <%= pkg.license %> licensed.\\n'",
        "' */\\n'",
        "'package.json'",
        "'config.json'",
        "'utf8'",
        "'md5'",
        "'<%= project.dist_src %>/app/**/*.js'",
        "'<%= project.dist_src %>/js/**/*.js'",
        "'<%= project.dist_src %>/css/**/*.css'",
        "'*'",
        "'app'",
        "'!\\\\.html|\\\\.js|\\\\.css|\\\\.svg|\\\\.jp(e?)g|\\\\.png|\\\\.gif$ /index.html [L]'",
        "'app'",
        "'!\\\\.html|\\\\.js|\\\\.css|\\\\.svg|\\\\.jp(e?)g|\\\\.png|\\\\.gif$ /index.html [L]'",
        "'<%= project.app %>/'",
        "'**/*'",
        "'!**/assets/css/**'",
        "'!**/assets/js/**'",
        "'!**/assets/app/**/*.js'",
        "'<%= project.dist %>'",
        "'<%= project.assets %>/js/config.js'",
        "\"(function () {\\n'use strict';\\n {%= __ngModule %} })();\"",
        "'config'",
        "' '",
        "'config.json'",
        "'DEV'",
        "'We are in development!'",
        "'<%= project.assets %>/js/config.js'",
        "\"(function () {\\n'use strict';\\n {%= __ngModule %} })();\"",
        "'config'",
        "' '",
        "'config.json'",
        "'PROD'",
        "'We are in production!'",
        "'<%= project.dist %>/'",
        "'*.html'",
        "'<%= project.dist %>/'",
        "'<%= project.dist_src %>/app/'",
        "'**/*.html'",
        "'<%= project.dist_src %>/app/'",
        "'<%= project.src %>/js/{,*/}*.js'",
        "'<%= project.src %>/app/{,*/}*.js'",
        "'<%= project.e2e_test %>/specs/{,*/}*.js'",
        "'<%= project.unit_test %>/specs/{,*/}*.js'",
        "'.jshintrc'",
        "\"<%= tag.banner %>\"",
        "'min'",
        "'<%= project.src %>/js/'",
        "'**/*.js'",
        "'<%= project.dist_src %>/js/'",
        "'.js'",
        "'.min.js'",
        "'<%= project.src %>/app/'",
        "'**/*.js'",
        "'<%= project.dist_src %>/app/'",
        "'.js'",
        "'.min.js'",
        "'<%= project.dist_src %>/images/'",
        "'**/*.{png,PNG,jpg,JPG,jpeg,JPEG,gif,GIF}'",
        "'<%= project.dist_src %>/images/'",
        "'<%= project.dist %>/'",
        "'*.{png,PNG,jpg,JPG,jpeg,JPEG,gif,GIF,ico,ICO}'",
        "'<%= project.dist %>/'",
        "'<%= project.dist %>'",
        "'expanded'",
        "'<%= project.assets %>/css/style.css'",
        "'<%= project.css %>'",
        "'none'",
        "'compressed'",
        "'<%= project.dist_src %>/css/style.min.css'",
        "'<%= project.css %>'",
        "'http://localhost:<%= connect.options.port %>'",
        "'<%= project.assets %>/js/{,*/}*.js'",
        "'<%= project.assets %>/app/{,*/}*.js'",
        "'<%= project.e2e_test %>/specs/{,*/}*.js'",
        "'<%= project.unit_test %>/specs/{,*/}*.js'",
        "'jshint'",
        "'<%= project.src %>/js/{,*/}*.js'",
        "'<%= project.src %>/app/{,*/}*.js'",
        "'<%= project.e2e_test %>/specs/{,*/}*.js'",
        "'<%= project.unit_test %>/specs/{,*/}*.js'",
        "'karma:continuous:run'",
        "'src/scss/{,*/}*.{scss,sass}'",
        "'sass:dev'",
        "'<%= project.app %>/{,*/}*.html'",
        "'<%= project.assets %>/app/{,*/}*.html'",
        "'<%= project.assets %>/css/{,*/}*.css'",
        "'<%= project.assets %>/js/{,*/}*.js'",
        "'<%= project.assets %>/app/{,*/}*.js'",
        "'<%= project.assets %>/images/{,*/}*.{png,PNG,jpg,JPG,jpeg,JPEG,gif,GIF,webp,WEBP,svg,SVG}'",
        "'node node_modules/protractor/bin/webdriver-manager update'",
        "'<%= project.unit_test %>/karma.conf.js'",
        "'Chrome'",
        "'Firefox'",
        "'dots'",
        "'PhantomJS'",
        "\"node_modules/protractor/example/conf.js\"",
        "\"<%= project.e2e_test %>/protractor.conf.js\"",
        "'default'",
        "'sass:dev'",
        "'ngconstant:dev'",
        "'jshint'",
        "'injector:dev'",
        "'injector:bower'",
        "'connect:livereload'",
        "'open'",
        "'karma:continuous:start'",
        "'watch'",
        "'build'",
        "'clean'",
        "'bump-only:'",
        "'sass:dist'",
        "'test'",
        "'copy'",
        "'jshint'",
        "'ngconstant:dist'",
        "'uglify'",
        "'filerev:dist'",
        "'injector:dist'",
        "'injector:bower'",
        "'imagemin:dist'",
        "'htmlmin:dist'",
        "'test'",
        "'shell:protractor_update'",
        "'jshint'",
        "'connect:test'",
        "'protractor:e2e'",
        "'karma:unit'"
    ],
    "variables": [
        "LIVERELOAD_PORT",
        "serveStatic",
        "rewrite",
        "lrSnippet",
        "mountFolder",
        "version",
        "rules",
        "rules",
        "pkg",
        "pkg"
    ],
    "comments": [
        "!\n * NsWeb Angular Gruntfile\n * @author Jovica Čonkić"
    ],
    "docstrings": [
        "* Livereload and connect variables",
        "* Grunt module",
        "* Dynamically load npm tasks",
        "* NsWeb Angular Grunt config",
        "* Set project info",
        "* Injector\n     * https://github.com/klei/grunt-injector\n     * Inject references to files into other files\n     * (think scripts and stylesheets into an html file)",
        "* Project banner\n     * Dynamically appended to CSS/JS files\n     * Inherits text from package.json",
        "* Bump\n     * https://github.com/vojtajina/grunt-bump\n     * Bump package version, create tag, commit, push .",
        "* Files revisioning\n     * https://github.com/yeoman/grunt-filerev\n     * Static asset revisioning through file content hash",
        "* Connect port/livereload\n     * https://github.com/gruntjs/grunt-contrib-connect\n     * Starts a local webserver and injects\n     * livereload snippet",
        "* Copy\n     * https://github.com/gruntjs/grunt-contrib-copy\n     * Copy files and folders",
        "* NG Constant\n     * https://github.com/werk85/grunt-ng-constant\n     * Create angular constants",
        "* HTMLmin\n     * https://github.com/gruntjs/grunt-contrib-htmlmin\n     * Minify HTML",
        "* JSHint\n     * https://github.com/gruntjs/grunt-contrib-jshint\n     * Manage the options inside .jshintrc file",
        "* Uglify (minify) JavaScript files\n     * https://github.com/gruntjs/grunt-contrib-uglify\n     * Compresses and minifies all JavaScript files",
        "* Minify PNG and JPEG images\n     * https://github.com/gruntjs/grunt-contrib-imagemin\n     * Compresses and minify images",
        "* Clean\n     * https://github.com/gruntjs/grunt-contrib-clean\n     * Clean files and folders",
        "* Compile Sass/SCSS files\n     * https://github.com/gruntjs/grunt-contrib-sass\n     * Compiles all Sass/SCSS files and appends project banner",
        "* Opens the web server in the browser\n     * https://github.com/jsoverson/grunt-open",
        "* Runs tasks against changed watched files\n     * https://github.com/gruntjs/grunt-contrib-watch\n     * Watching development files and run concat/compile tasks\n     * Livereload the browser once complete",
        "* Runs shell commands\n     * https://github.com/sindresorhus/grunt-shell  \n     * Webdriver-manager update command",
        "* Runs karma unit tests\n     * https://github.com/karma-runner/grunt-karma",
        "* Grunt plugin for running Protractor runner\n     * https://github.com/teerapap/grunt-protractor-runner \n     * Run protractor described tests",
        "* Default task\n   * Run `grunt` on the command line",
        "* Build task\n   * Run `grunt build` on the command line\n   * Then clean, copy, minify and optimize content for distribution",
        "* Test task\n   * Run `grunt e2e-test` on the command line\n   * Then test all described tests using protractor selenium wrapper"
    ],
    "functions": [],
    "classes": []
}