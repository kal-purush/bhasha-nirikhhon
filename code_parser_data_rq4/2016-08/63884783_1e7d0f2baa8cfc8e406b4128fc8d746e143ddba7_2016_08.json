{
    "identifiers": [
        "sys",
        "synapseclient",
        "collections",
        "OrderedDict",
        "multiprocessing",
        "dummy",
        "mp",
        "threading",
        "json2neo4j",
        "argparse",
        "logging",
        "json",
        "synapseclient",
        "login",
        "it",
        "it",
        "threading",
        "Lock",
        "it",
        "next",
        "f",
        "a",
        "kw",
        "threadsafe_iter",
        "f",
        "a",
        "kw",
        "g",
        "threadsafe_generator",
        "start",
        "start",
        "i",
        "i",
        "idGenerator",
        "idGenerator",
        "projectId",
        "logging",
        "info",
        "syn",
        "chunkedQuery",
        "projectId",
        "ent",
        "query",
        "ent",
        "key",
        "ent",
        "keys",
        "join",
        "key",
        "split",
        "ent",
        "pop",
        "key",
        "item",
        "item",
        "len",
        "item",
        "item",
        "newId",
        "next",
        "ent",
        "pop",
        "ent",
        "ent",
        "ent",
        "ent",
        "ent",
        "ent",
        "logging",
        "info",
        "ent",
        "ent",
        "ent",
        "entityDict",
        "entity",
        "entity",
        "k",
        "counter2",
        "next",
        "logging",
        "info",
        "k",
        "counter2",
        "next",
        "syn",
        "getProvenance",
        "ent",
        "version",
        "ent",
        "k",
        "prov",
        "synapseclient",
        "exceptions",
        "SynapseHTTPError",
        "k",
        "activities",
        "logging",
        "info",
        "k",
        "activity",
        "activities",
        "k",
        "logging",
        "info",
        "k",
        "activity",
        "activity",
        "pop",
        "newId",
        "next",
        "activity",
        "returnDict",
        "nodes",
        "activities",
        "logging",
        "info",
        "k",
        "entity",
        "nodes",
        "items",
        "k",
        "logging",
        "info",
        "k",
        "k",
        "activities",
        "activities",
        "k",
        "activity",
        "new_nodes",
        "activity",
        "activity",
        "used",
        "activity",
        "used",
        "used",
        "used",
        "get",
        "targetId",
        "nodes",
        "newId",
        "next",
        "used",
        "used",
        "get",
        "used",
        "used",
        "targetId",
        "nodes",
        "newId",
        "next",
        "used",
        "get",
        "used",
        "used",
        "edges",
        "append",
        "newId",
        "next",
        "activity",
        "nodes",
        "targetId",
        "used",
        "get",
        "activity",
        "activity",
        "activity",
        "activity",
        "new_nodes",
        "activity",
        "edges",
        "append",
        "newId",
        "next",
        "entity",
        "activity",
        "activity",
        "activity",
        "activity",
        "activity",
        "nodes",
        "update",
        "new_nodes",
        "edges",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "metavar",
        "nargs",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "args",
        "id",
        "len",
        "sys",
        "argv",
        "sys",
        "exit",
        "synapseclient",
        "Synapse",
        "syn",
        "login",
        "args",
        "id",
        "args",
        "j",
        "args",
        "j",
        "args",
        "p",
        "mp",
        "Pool",
        "args",
        "p",
        "mp",
        "Pool",
        "proj",
        "proj_inputs",
        "proj",
        "nodes",
        "update",
        "getEntities",
        "projectId",
        "proj",
        "len",
        "nodes",
        "p",
        "safeGetActivity",
        "nodes",
        "items",
        "cleanUpActivities",
        "activities",
        "len",
        "activities",
        "len",
        "nodes",
        "len",
        "activities",
        "buildEdgesfromActivities",
        "nodes",
        "activities",
        "len",
        "nodes",
        "len",
        "edges",
        "open",
        "json_file",
        "fp",
        "json",
        "dump",
        "OrderedDict",
        "nodes",
        "values",
        "edges",
        "fp",
        "indent",
        "open",
        "json_file",
        "json",
        "load",
        "json_file",
        "authenticate",
        "db_info",
        "db_info",
        "db_info",
        "db_info",
        "Graph",
        "db_dir"
    ],
    "literals": [
        "'dataset'",
        "'layer'",
        "'project'",
        "'preview'",
        "'folder'",
        "'analysis'",
        "'step'",
        "'code'",
        "'link'",
        "'phenotypedata'",
        "'genotypedata'",
        "'expressiondata'",
        "'robject'",
        "'summary'",
        "'genomicdata'",
        "'page'",
        "'file'",
        "'table'",
        "'community'",
        "'Getting and formatting all entities with the inputted projectId'",
        "'select * from entity where projectId ==\"%s\"'",
        "'entity.nodeType'",
        "'.'",
        "'.'",
        "'_type'",
        "'vertex'",
        "'_id'",
        "'synId'",
        "'id'",
        "'%s.%s'",
        "'synId'",
        "'versionNumber'",
        "'getting entity (%i): %s.%s'",
        "'_id'",
        "'synId'",
        "'versionNumber'",
        "'Getting entity (%i): %s.%s'",
        "'_id'",
        "'synId'",
        "'versionNumber'",
        "'Getting Provenance for:'",
        "'Getting Provenance for:'",
        "'synId'",
        "'versionNumber'",
        "'Removing all activity-less entities'",
        "'Cleaning up activity: %s'",
        "'Cleaning up activity: %s'",
        "'synId'",
        "'id'",
        "'concreteType'",
        "'activity'",
        "'_id'",
        "'_type'",
        "'vertex'",
        "'Constructing directed edges based on provenance'",
        "'processing entity:'",
        "'processing entity:'",
        "'synId'",
        "'synId'",
        "'used'",
        "'concreteType'",
        "'org.sagebionetworks.repo.model.provenance.UsedEntity'",
        "'%s.%s'",
        "'reference'",
        "'targetId'",
        "'reference'",
        "'targetVersionNumber'",
        "'_id'",
        "'_type'",
        "'vertex'",
        "'synId'",
        "'reference'",
        "'targetId'",
        "'versionNumber'",
        "'reference'",
        "'targetVersionNumber'",
        "'concreteType'",
        "'org.sagebionetworks.repo.model.provenance.UsedURL'",
        "'url'",
        "'_id'",
        "'_type'",
        "'vertex'",
        "'name'",
        "'name'",
        "'url'",
        "'url'",
        "'concreteType'",
        "'concreteType'",
        "'_id'",
        "'_inV'",
        "'_id'",
        "'_type'",
        "'edge'",
        "'_outV'",
        "'_id'",
        "'_label'",
        "'used'",
        "'wasExecuted'",
        "'wasExecuted'",
        "'createdBy'",
        "'createdBy'",
        "'createdOn'",
        "'createdOn'",
        "'modifiedBy'",
        "'modifiedBy'",
        "'modifiedOn'",
        "'modifiedOn'",
        "'synId'",
        "'_id'",
        "'_inV'",
        "'_id'",
        "'_outV'",
        "'_id'",
        "'_type'",
        "'edge'",
        "'_label'",
        "'generatedBy'",
        "'createdBy'",
        "'createdBy'",
        "'createdOn'",
        "'createdOn'",
        "'modifiedBy'",
        "'modifiedBy'",
        "'modifiedOn'",
        "'modifiedOn'",
        "'__main__'",
        "'Please input the [1] synapse ID or space-separated list of synapse ID and the [2] name of json outfile to graph provenance'",
        "'id'",
        "'synId'",
        "'+'",
        "'Input the synapse ID or list of synapse IDs'",
        "'--j'",
        "'Input name of json outfile'",
        "'--p'",
        "'Specify the pool size for the multiprocessing module'",
        "'Incorrect number of arguments'",
        "'graph.json'",
        "'Getting entities from %s'",
        "'Fetched %i entities'",
        "'%i activities found i.e. %0.2g%% entities have provenance'",
        "'I have  %i nodes and %i edges'",
        "'w'",
        "'vertices'",
        "'edges'",
        "'Connecting to Neo4j and authenticating user credentials'",
        "'credentials.json'",
        "'machine'",
        "'username'",
        "'password'",
        "'machine'",
        "\"/db/data\""
    ],
    "variables": [
        "syn",
        "NODETYPES",
        "it",
        "i",
        "newId",
        "counter2",
        "query",
        "entityDict",
        "new_key",
        "item",
        "ent",
        "new_key",
        "ent",
        "ent",
        "ent",
        "entityDict",
        "k",
        "ent",
        "prov",
        "returnDict",
        "activity",
        "activity",
        "activity",
        "activity",
        "returnDict",
        "k",
        "new_nodes",
        "edges",
        "activity",
        "new_nodes",
        "targetId",
        "nodes",
        "targetId",
        "targetId",
        "nodes",
        "targetId",
        "activity",
        "parser",
        "args",
        "syn",
        "proj_inputs",
        "json_file",
        "json_file",
        "p",
        "p",
        "nodes",
        "activities",
        "activities",
        "edges",
        "db_info",
        "db_dir",
        "graph"
    ],
    "comments": [
        "used in getEntities",
        "29602)",
        "Remove containers by ignoring layers, projects, and previews",
        "remove the \"entity\" portion of query",
        "Determine if we have already seen this activity",
        "Add input relationships",
        "add missing vertices to nodes",
        "Create the incoming edges",
        "Add generated relationship (i.e. out edge)",
        "function not completed",
        "try:",
        "json2neo4j(json_file)",
        "except:",
        "print 'Error involving loading data from json file to Neo4j database'",
        "pass"
    ],
    "docstrings": [
        "\"\"\"Takes an iterator/generator and makes it thread-safe by\n    serializing call to the `next` method of given iterator/generator.\n    \"\"\"",
        "\"\"\"A decorator that takes a generator function and makes it thread-safe.\n    \"\"\"",
        "'''generates relevant id numbers starting from 0 as default'''",
        "'''get and format all entities with the inputted projectId'''",
        "'''retrieve activity/provenance associated with a particular entity'''",
        "'''remove all activity-less entities'''",
        "'''construct directed edges based on provenance'''"
    ],
    "functions": [
        "__iter__",
        "next",
        "threadsafe_generator",
        "g",
        "idGenerator",
        "getEntities",
        "safeGetActivity",
        "cleanUpActivities",
        "buildEdgesfromActivities"
    ],
    "classes": [
        "threadsafe_iter"
    ]
}