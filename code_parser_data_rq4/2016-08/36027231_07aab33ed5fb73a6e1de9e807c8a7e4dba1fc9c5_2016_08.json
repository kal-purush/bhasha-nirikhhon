{
    "identifiers": [
        "Microsoft",
        "Azure",
        "WebJobs",
        "Newtonsoft",
        "Json",
        "Linq",
        "Twilio",
        "ExtensionsSample",
        "Samples",
        "QueueTrigger",
        "Order",
        "order",
        "TwilioSms",
        "To",
        "From",
        "Body",
        "SMSMessage",
        "message",
        "message",
        "SMSMessage",
        "Disable",
        "QueueTrigger",
        "Order",
        "order",
        "TwilioSms",
        "SMSMessage",
        "message",
        "message",
        "SMSMessage",
        "From",
        "order",
        "StorePhoneNumber",
        "To",
        "order",
        "CustomerPhoneNumber",
        "Body",
        "Format",
        "order",
        "CustomerName",
        "order",
        "OrderId",
        "Disable",
        "QueueTrigger",
        "Order",
        "order",
        "TwilioSms",
        "JObject",
        "message",
        "message",
        "JObject",
        "order",
        "StorePhoneNumber",
        "order",
        "CustomerPhoneNumber",
        "Format",
        "order",
        "CustomerName",
        "order",
        "OrderId",
        "Disable",
        "QueueTrigger",
        "Order",
        "order",
        "TwilioSms",
        "IAsyncCollector",
        "SMSMessage",
        "messages",
        "SMSMessage",
        "From",
        "order",
        "StorePhoneNumber",
        "To",
        "order",
        "CustomerPhoneNumber",
        "Body",
        "Format",
        "order",
        "CustomerName",
        "order",
        "OrderId",
        "messages",
        "AddAsync",
        "message",
        "Disable",
        "QueueTrigger",
        "Order",
        "order",
        "TwilioSms",
        "IAsyncCollector",
        "JObject",
        "messages",
        "JObject",
        "order",
        "StorePhoneNumber",
        "order",
        "CustomerPhoneNumber",
        "Format",
        "order",
        "CustomerName",
        "order",
        "OrderId",
        "messages",
        "AddAsync",
        "message"
    ],
    "literals": [
        "\"{CustomerPhoneNumber}\"",
        "\"{StorePhoneNumber}\"",
        "\"{CustomerName}, we've received your order ({OrderId}) and have begun processing it!\"",
        "\"{0}, we've received your order ({1}) and have begun processing it!\"",
        "\"From\"",
        "\"To\"",
        "\"Body\"",
        "\"{0}, we've received your order ({1}) and have begun processing it!\"",
        "\"{0}, we've received your order ({1}) and have begun processing it!\"",
        "\"From\"",
        "\"To\"",
        "\"Body\"",
        "\"{0}, we've received your order ({1}) and have begun processing it!\""
    ],
    "variables": [
        "message",
        "message"
    ],
    "comments": [
        "Copyright (c) .NET Foundation. All rights reserved.",
        "Licensed under the MIT License. See License.txt in the project root for license information.",
        "To use the TwilioSamples:",
        "1. Configure your Twilio Account SID via the 'AzureWebJobsTwilioAccountSid' App Setting or Environment variable",
        "2. Configure your Twilio Auth Token via the 'AzureWebJobsTwilioAuthToken' App Setting or Environment variable",
        "3. Add typeof(TwilioSamples) to the SamplesTypeLocator in Program.cs",
        "Demonstrates declaratively defining all SMS message properties with parameter binding",
        "to message properties.",
        "</summary>",
        "You can set additional message properties here",
        "Demonstrates imperatively setting SMS message properties inline in the function.",
        "</summary>",
        "Demonstrates the JObject binding (the JObject will be converted into an SMSMessage)",
        "</summary>",
        "Demonstrates the IAsyncCollector binding. This works with JObject",
        "or SMSMessage. Using IAsyncCollector is also a way to conditionally",
        "send messages from a function.",
        "</summary>",
        "Demonstrates the IAsyncCollector binding. This works with JObject",
        "or SMSMessage. Using IAsyncCollector is also a way to conditionally",
        "send messages from a function.",
        "</summary>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "ProcessOrder_Declarative",
        "ProcessOrder_Imperative",
        "ProcessOrder_JObject",
        "ProcessOrder_MessageAsyncCollector",
        "ProcessOrder_JObjectAsyncCollector"
    ],
    "classes": [
        "TwilioSamples"
    ]
}