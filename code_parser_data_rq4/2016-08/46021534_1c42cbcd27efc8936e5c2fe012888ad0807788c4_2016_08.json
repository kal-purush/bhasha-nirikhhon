{
    "identifiers": [
        "com",
        "mgz",
        "acceptance",
        "com",
        "mgz",
        "afp",
        "StructuredField",
        "com",
        "mgz",
        "afp",
        "StructuredFieldIntroducer",
        "com",
        "mgz",
        "afp",
        "parser",
        "AFPParser",
        "com",
        "mgz",
        "afp",
        "parser",
        "AFPParserConfiguration",
        "org",
        "junit",
        "BeforeClass",
        "org",
        "junit",
        "Test",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileInputStream",
        "java",
        "io",
        "FileOutputStream",
        "java",
        "security",
        "DigestInputStream",
        "java",
        "security",
        "DigestOutputStream",
        "java",
        "security",
        "MessageDigest",
        "java",
        "util",
        "Arrays",
        "org",
        "junit",
        "Assert",
        "assertArrayEquals",
        "org",
        "junit",
        "Assert",
        "assertNotNull",
        "LOG",
        "LoggerFactory",
        "getLogger",
        "filesSuite",
        "BeforeClass",
        "FilesSuite",
        "getAfpFiles",
        "filesSuite",
        "FilesSuite",
        "getAfpFiles",
        "Test",
        "pc",
        "afpFile",
        "filesSuite",
        "LOG",
        "debug",
        "afpFile",
        "getAbsolutePath",
        "pc",
        "setInputStream",
        "afpFile",
        "parser",
        "pc",
        "sf",
        "sf",
        "parser",
        "parseNextSF",
        "sf",
        "LOG",
        "debug",
        "sf",
        "sfi",
        "sf",
        "getStructuredFieldIntroducer",
        "assertNotNull",
        "sfi",
        "sf",
        "pc",
        "getInputStream",
        "close",
        "exception",
        "LOG",
        "error",
        "exception",
        "getLocalizedMessage",
        "Test",
        "pc",
        "pc",
        "setParseToStructuredFieldsBaseData",
        "tmpFile",
        "mdIs",
        "MessageDigest",
        "getInstance",
        "mdOs",
        "MessageDigest",
        "getInstance",
        "afpFile",
        "filesSuite",
        "dis",
        "afpFile",
        "mdIs",
        "pc",
        "setInputStream",
        "dis",
        "dos",
        "tmpFile",
        "mdOs",
        "parser",
        "pc",
        "sf",
        "sf",
        "parser",
        "parseNextSF",
        "sf",
        "LOG",
        "debug",
        "sf",
        "sf",
        "writeAFP",
        "dos",
        "pc",
        "assertArrayEquals",
        "afpFile",
        "getName",
        "toHexString",
        "sf",
        "getStructuredFieldIntroducer",
        "getFileOffset",
        "sf",
        "getClass",
        "getSimpleName",
        "dis",
        "getMessageDigest",
        "digest",
        "dos",
        "getMessageDigest",
        "digest",
        "sf",
        "dos",
        "close",
        "dis",
        "close",
        "tmpFile",
        "exception",
        "LOG",
        "error",
        "exception",
        "getLocalizedMessage",
        "Test",
        "pc",
        "pc",
        "setParseToStructuredFieldsBaseData",
        "tmpFile",
        "mdIs",
        "MessageDigest",
        "getInstance",
        "mdOs",
        "MessageDigest",
        "getInstance",
        "afpFile",
        "filesSuite",
        "dis",
        "afpFile",
        "mdIs",
        "pc",
        "setInputStream",
        "dis",
        "dos",
        "tmpFile",
        "mdOs",
        "parser",
        "pc",
        "sf",
        "sf",
        "parser",
        "parseNextSF",
        "sf",
        "LOG",
        "debug",
        "sf",
        "sf",
        "writeAFP",
        "dos",
        "pc",
        "Arrays",
        "equals",
        "mdIs",
        "digest",
        "mdOs",
        "digest",
        "sf",
        "writeAFP",
        "dos",
        "pc",
        "assertArrayEquals",
        "afpFile",
        "getName",
        "toHexString",
        "sf",
        "getStructuredFieldIntroducer",
        "getFileOffset",
        "sf",
        "getClass",
        "getSimpleName",
        "dis",
        "getMessageDigest",
        "digest",
        "dos",
        "getMessageDigest",
        "digest",
        "sf",
        "dos",
        "close",
        "dis",
        "close",
        "tmpFile",
        "exception",
        "LOG",
        "error",
        "exception",
        "getLocalizedMessage"
    ],
    "literals": [
        "\"AFPParserTest\"",
        "\"--- FILE: {}\"",
        "\"StructuredField: {}\"",
        "\"Unable to testParsingAllTestFiles SF: {}\"",
        "\"junit_testWritingTmp.afp\"",
        "\"MD5\"",
        "\"MD5\"",
        "\"StructuredField: {}\"",
        "\" 0x\"",
        "\" \"",
        "\"Unable to testParsingAllTestFiles SF: {}\"",
        "\"junit_testWritingTmp.afp\"",
        "\"MD5\"",
        "\"MD5\"",
        "\"StructuredField: {}\"",
        "\" 0x\"",
        "\" \"",
        "\"Unable to testAFPSerializationStructuredFieldBase SF: {}\""
    ],
    "variables": [
        "sf",
        "sf",
        "sf"
    ],
    "comments": [],
    "docstrings": [
        "Copyright 2015 Rudolf Fiala\n\nThis file is part of Alpheus AFP Parser.\n\nAlpheus AFP Parser is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nAlpheus AFP Parser is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Alpheus AFP Parser.  If not, see <http://www.gnu.org/licenses/>"
    ],
    "functions": [
        "onlyOnce",
        "testParsingAllTestFiles",
        "testAFPSerializationActualClassType",
        "testAFPSerializationStructuredFieldBase"
    ],
    "classes": [
        "AFPParserTest"
    ]
}