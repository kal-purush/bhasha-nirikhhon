{
    "identifiers": [
        "cordova",
        "require",
        "exports",
        "require",
        "exports",
        "exports",
        "exports",
        "callback",
        "scope",
        "callback",
        "scope",
        "exec",
        "fn",
        "fn",
        "exports",
        "options",
        "callback",
        "scope",
        "callback",
        "scope",
        "options",
        "options",
        "exec",
        "fn",
        "options",
        "exports",
        "alias",
        "alias",
        "exports",
        "arguments",
        "exports",
        "arguments",
        "exports",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "key",
        "defaults",
        "options",
        "key",
        "options",
        "key",
        "defaults",
        "key",
        "options",
        "key",
        "defaults",
        "key",
        "custom_",
        "custom_",
        "options",
        "key",
        "default_",
        "default_",
        "custom_",
        "default_",
        "options",
        "key",
        "custom_",
        "default_",
        "options",
        "key",
        "custom_",
        "options",
        "exports",
        "callbackFn",
        "scope",
        "callbackFn",
        "callbackFn",
        "scope",
        "arguments"
    ],
    "literals": [
        "\"cordova-plugin-email.EmailComposer\"",
        "'cordova/exec'",
        "'com.google.android.gm'",
        "''",
        "''",
        "'EmailComposer'",
        "'isAvailable'",
        "'EmailComposer'",
        "'open'",
        "'`email.isServiceAvailable` is deprecated.'",
        "' Please use `email.isAvailable` instead.'",
        "'isHTML'",
        "'app'",
        "'string'",
        "''",
        "'object'",
        "'function'"
    ],
    "variables": [
        "exec",
        "fn",
        "fn",
        "defaults",
        "custom_",
        "default_"
    ],
    "comments": [
        "Copyright 2013-2014 appPlant UG\n\n    Licensed to the Apache Software Foundation (ASF) under one\n    or more contributor license agreements.  See the NOTICE file\n    distributed with this work for additional information\n    regarding copyright ownership.  The ASF licenses this file\n    to you under the Apache License, Version 2.0 (the\n    \"License\"); you may not use this file except in compliance\n    with the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing,\n    software distributed under the License is distributed on an\n    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, either express or implied.  See the License for the\n    specific language governing permissions and limitations\n    under the License."
    ],
    "docstrings": [
        "* List of all registered mail app aliases.",
        "* List of all available options with their default value.\n *\n * @return {Object}",
        "* Verifies if sending emails is supported on the device.\n *\n * @param {Function} callback\n *      A callback function to be called with the result\n * @param {Object} scope\n *      The scope of the callback",
        "* Displays the email composer pre-filled with data.\n *\n * @param {Object} options\n *      Different properties of the email like the body, subject\n * @param {Function} callback\n *      A callback function to be called with the result\n * @param {Object?} scope\n *      The scope of the callback",
        "* Adds a new mail app alias.\n *\n * @param {String} alias\n *      The alias name\n * @param {String} package\n *      The package name",
        "* @depreacted",
        "* Alias f√ºr `open()`.",
        "* @private\n *\n * Merge settings with default values.\n *\n * @param {Object} options\n *      The custom options\n *\n * @retrun {Object}\n *      Default values merged\n *      with custom values",
        "* @private\n *\n * Creates a callback, which will be executed\n * within a specific scope.\n *\n * @param {Function} callbackFn\n *      The callback function\n * @param {Object} scope\n *      The scope for the function\n *\n * @return {Function}\n *      The new callback function"
    ],
    "functions": [],
    "classes": []
}