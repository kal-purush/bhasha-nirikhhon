{
    "identifiers": [
        "ch1",
        "util",
        "Question",
        "Override",
        "hello",
        "a",
        "a_rot",
        "printRes",
        "a",
        "a_rot",
        "b",
        "b_rot",
        "printRes",
        "b",
        "b_rot",
        "c",
        "c_rot",
        "printRes",
        "c",
        "c_rot",
        "d",
        "d_rot",
        "printRes",
        "d",
        "d_rot",
        "e",
        "e_rot",
        "printRes",
        "e",
        "e_rot",
        "f",
        "f_rot",
        "printRes",
        "f",
        "f_rot",
        "g",
        "g_rot",
        "printRes",
        "g",
        "g_rot",
        "bye",
        "first",
        "second",
        "isRot",
        "isRotation",
        "first",
        "second",
        "printf",
        "first",
        "second",
        "isRot",
        "s1",
        "s2",
        "s1",
        "length",
        "s1",
        "length",
        "s2",
        "length",
        "s2s2",
        "s2",
        "s2",
        "isSubstring",
        "s1",
        "s2s2",
        "first",
        "second",
        "second",
        "indexOf",
        "first"
    ],
    "literals": [
        "\"1.8\"",
        "\"Given an 'isSubstring' method, check if string X is a rotation of string Y by calling 'isSubstring' just once\"",
        "\"chestnut\"",
        "\"nutchest\"",
        "\"arora\"",
        "\"roraa\"",
        "\"bananaman\"",
        "\"namanbana\"",
        "\"a\"",
        "\"a\"",
        "\"a\"",
        "\"b\"",
        "\"ab\"",
        "\"aa\"",
        "\"abc\"",
        "\"cabd\"",
        "\"%10s %10s - %1b\\n\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "*\n     * @param s1\n     * @param s2\n     * @return true if s2 is rotation of s1"
    ],
    "functions": [
        "IsRotation",
        "run",
        "printRes",
        "isRotation",
        "isSubstring"
    ],
    "classes": [
        "IsRotation"
    ]
}