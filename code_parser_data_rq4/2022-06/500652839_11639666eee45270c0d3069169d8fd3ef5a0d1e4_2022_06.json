{
    "identifiers": [
        "java",
        "sql",
        "DriverManager",
        "java",
        "sql",
        "Connection",
        "java",
        "sql",
        "Statement",
        "java",
        "sql",
        "ResultSet",
        "java",
        "sql",
        "ResultSetMetaData",
        "java",
        "sql",
        "SQLException",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileReader",
        "java",
        "io",
        "BufferedReader",
        "java",
        "io",
        "InputStreamReader",
        "java",
        "util",
        "java",
        "util",
        "java",
        "io",
        "_connection",
        "authorisedUser",
        "authorisedUser",
        "a",
        "authorisedUser",
        "a",
        "dbname",
        "dbport",
        "user",
        "passwd",
        "url",
        "dbport",
        "dbname",
        "url",
        "_connection",
        "DriverManager",
        "getConnection",
        "url",
        "user",
        "passwd",
        "e",
        "err",
        "e",
        "getMessage",
        "exit",
        "sql",
        "stmt",
        "_connection",
        "createStatement",
        "stmt",
        "executeUpdate",
        "sql",
        "stmt",
        "close",
        "query",
        "stmt",
        "_connection",
        "createStatement",
        "rs",
        "stmt",
        "executeQuery",
        "query",
        "rsmd",
        "rs",
        "getMetaData",
        "numCol",
        "rsmd",
        "getColumnCount",
        "rowCount",
        "outputHeader",
        "rs",
        "next",
        "outputHeader",
        "i",
        "i",
        "numCol",
        "i",
        "rsmd",
        "getColumnName",
        "i",
        "outputHeader",
        "i",
        "i",
        "numCol",
        "i",
        "rs",
        "getString",
        "i",
        "rowCount",
        "stmt",
        "close",
        "rowCount",
        "query",
        "stmt",
        "_connection",
        "createStatement",
        "rs",
        "stmt",
        "executeQuery",
        "query",
        "rsmd",
        "rs",
        "getMetaData",
        "numCol",
        "rsmd",
        "getColumnCount",
        "rowCount",
        "outputHeader",
        "result",
        "rs",
        "next",
        "record",
        "i",
        "i",
        "numCol",
        "i",
        "record",
        "add",
        "rs",
        "getString",
        "i",
        "result",
        "add",
        "record",
        "stmt",
        "close",
        "result",
        "query",
        "stmt",
        "_connection",
        "createStatement",
        "rs",
        "stmt",
        "executeQuery",
        "query",
        "rowCount",
        "rs",
        "next",
        "rowCount",
        "stmt",
        "close",
        "rowCount",
        "sequence",
        "stmt",
        "_connection",
        "createStatement",
        "rs",
        "stmt",
        "executeQuery",
        "format",
        "sequence",
        "rs",
        "next",
        "rs",
        "getInt",
        "_connection",
        "_connection",
        "close",
        "e",
        "args",
        "args",
        "length",
        "err",
        "getName",
        "Greeting",
        "esql",
        "Class",
        "forName",
        "newInstance",
        "dbname",
        "args",
        "dbport",
        "args",
        "user",
        "args",
        "esql",
        "dbname",
        "dbport",
        "user",
        "keepon",
        "keepon",
        "tempuser",
        "readChoice",
        "CreateUser",
        "esql",
        "tempuser",
        "LogIn",
        "esql",
        "esql",
        "setAuthorisedUser",
        "tempuser",
        "keepon",
        "esql",
        "getAuthorisedUser",
        "usermenu",
        "usermenu",
        "readChoice",
        "Menu",
        "esql",
        "UpdateProfile",
        "esql",
        "PlaceOrder",
        "esql",
        "UpdateOrder",
        "esql",
        "usermenu",
        "e",
        "err",
        "e",
        "getMessage",
        "esql",
        "esql",
        "cleanup",
        "e",
        "input",
        "input",
        "parseInt",
        "readLine",
        "e",
        "input",
        "esql",
        "login",
        "readLine",
        "password",
        "readLine",
        "phone",
        "readLine",
        "favItems",
        "query",
        "format",
        "phone",
        "login",
        "password",
        "favItems",
        "esql",
        "executeUpdate",
        "query",
        "e",
        "err",
        "e",
        "getMessage",
        "esql",
        "login",
        "readLine",
        "password",
        "readLine",
        "query",
        "format",
        "login",
        "password",
        "userNum",
        "esql",
        "executeQuery",
        "query",
        "userNum",
        "login",
        "e",
        "err",
        "e",
        "getMessage",
        "esql",
        "result",
        "esql",
        "executeQueryAndReturnResult",
        "format",
        "esql",
        "getAuthorisedUser",
        "result",
        "isEmpty",
        "isManager",
        "result",
        "get",
        "get",
        "contains",
        "options",
        "optionsToShow",
        "isManager",
        "done",
        "done",
        "esql",
        "executeQueryAndPrintResult",
        "i",
        "i",
        "optionsToShow",
        "i",
        "options",
        "i",
        "format",
        "optionsToShow",
        "selection",
        "selection",
        "parseInt",
        "readLine",
        "e",
        "selection",
        "input",
        "queryCount",
        "selection",
        "input",
        "readLine",
        "input",
        "isEmpty",
        "queryCount",
        "esql",
        "executeQueryAndPrintResult",
        "format",
        "input",
        "input",
        "readLine",
        "input",
        "isEmpty",
        "queryCount",
        "esql",
        "executeQueryAndPrintResult",
        "format",
        "input",
        "isManager",
        "done",
        "query",
        "query",
        "query",
        "format",
        "readLine",
        "query",
        "format",
        "readLine",
        "query",
        "format",
        "readLine",
        "query",
        "format",
        "readLine",
        "query",
        "format",
        "readLine",
        "esql",
        "executeUpdate",
        "query",
        "input",
        "readLine",
        "input",
        "contains",
        "input",
        "contains",
        "isManager",
        "input",
        "readLine",
        "input",
        "isEmpty",
        "esql",
        "executeUpdate",
        "format",
        "input",
        "isManager",
        "done",
        "e",
        "err",
        "e",
        "getMessage",
        "esql",
        "user_choice",
        "esql",
        "readChoice",
        "new_entry",
        "query",
        "user_choice",
        "new_entry",
        "readLine",
        "query",
        "new_entry",
        "esql",
        "getAuthorisedUser",
        "esql",
        "executeUpdate",
        "query",
        "e",
        "e",
        "new_entry",
        "readLine",
        "query",
        "new_entry",
        "esql",
        "getAuthorisedUser",
        "esql",
        "executeUpdate",
        "query",
        "e",
        "e",
        "new_entry",
        "readLine",
        "query",
        "new_entry",
        "esql",
        "getAuthorisedUser",
        "esql",
        "executeUpdate",
        "query",
        "e",
        "e",
        "valueOf",
        "user_choice",
        "esql",
        "user_choice",
        "user_choice2",
        "user_entry",
        "query",
        "orders",
        "result",
        "total",
        "itemname",
        "user_choice",
        "user_choice",
        "user_choice",
        "parseInt",
        "readLine",
        "user_choice",
        "user_entry",
        "readLine",
        "query",
        "user_entry",
        "esql",
        "executeQueryAndPrintResult",
        "query",
        "e",
        "e",
        "user_choice2",
        "readLine",
        "user_choice2",
        "result",
        "esql",
        "executeQueryAndReturnResult",
        "query",
        "itemname",
        "result",
        "get",
        "get",
        "itemname",
        "itemname",
        "replaceAll",
        "total",
        "parseDouble",
        "result",
        "get",
        "get",
        "orders",
        "add",
        "itemname",
        "itemname",
        "total",
        "itemname",
        "total",
        "valueOf",
        "user_choice",
        "order_id",
        "esql",
        "executeQuery",
        "user_login",
        "esql",
        "getAuthorisedUser",
        "orders",
        "forEach",
        "order",
        "order",
        "total",
        "valueOf",
        "user_choice",
        "esql"
    ],
    "literals": [
        "\"Connecting to database...\"",
        "\"jdbc:postgresql://localhost:\"",
        "\"/\"",
        "\"?gssEncMode=disable\"",
        "\"Connection URL: \"",
        "\"\\n\"",
        "\"Done\"",
        "\"Error - Unable to Connect to Database: \"",
        "\"Make sure you started postgres on this machine\"",
        "\"\\t\"",
        "\"Select currval('%s')\"",
        "\"Usage: \"",
        "\"java [-classpath <classpath>] \"",
        "\" <dbname> <port> <user>\"",
        "\"org.postgresql.Driver\"",
        "\"\"",
        "\"MAIN MENU\"",
        "\"---------\"",
        "\"1. Create user\"",
        "\"2. Log in\"",
        "\"9. < EXIT\"",
        "\"Unrecognized choice!\"",
        "\"MAIN MENU\"",
        "\"---------\"",
        "\"1. Goto Menu\"",
        "\"2. Update Profile\"",
        "\"3. Place a Order\"",
        "\"4. Update a Order\"",
        "\".........................\"",
        "\"9. Log out\"",
        "\"Unrecognized choice!\"",
        "\"Disconnecting from database...\"",
        "\"Done\\n\\nBye !\"",
        "\"\\n\\n*******************************************************\\n\"",
        "\"              User Interface      \t               \\n\"",
        "\"*******************************************************\\n\"",
        "\"Please make your choice: \"",
        "\"Your input is invalid!\"",
        "\"\\tEnter user login: \"",
        "\"\\tEnter user password: \"",
        "\"\\tEnter user phone: \"",
        "\"Customer\"",
        "\"\"",
        "\"INSERT INTO USERS (phoneNum, login, password, favItems, type) VALUES ('%s','%s','%s','%s','%s')\"",
        "\"User successfully created!\"",
        "\"\\tEnter user login: \"",
        "\"\\tEnter user password: \"",
        "\"SELECT * FROM USERS WHERE login = '%s' AND password = '%s'\"",
        "\"SELECT type FROM USERS WHERE login = '%s'\"",
        "\"User does not exist\"",
        "\"Manager\"",
        "\"1. Search item by name\"",
        "\"2. Search items by type\"",
        "\"3. Add item\"",
        "\"4. Delete item\"",
        "\"SELECT itemName, type, description, price FROM Menu\"",
        "\"%d. Main Menu\"",
        "\"Enter your selection: \"",
        "\"\"",
        "\"[Empty to return]\\nEnter the item name: \"",
        "\"SELECT itemName, type, description, price FROM Menu WHERE itemName = '%s'\"",
        "\"[Empty to return]\\nEnter the item type: \"",
        "\"SELECT itemName, type, description, price FROM Menu WHERE type = '%s'\"",
        "\"\"",
        "\"INSERT INTO Menu (itemName, type, price, description, imageURL) VALUES(\"",
        "\"Enter item name: \"",
        "\"'%s', \"",
        "\"\\nEnter item type: \"",
        "\"'%s', \"",
        "\"\\nEnter item price: \"",
        "\"%s, \"",
        "\"\\nEnter item description: \"",
        "\"'%s', \"",
        "\"\\nEnter item's image URL: \"",
        "\"'%s')\"",
        "\"Add another item [y/n]: \"",
        "\"n\"",
        "\"N\"",
        "\"[Empty to return]\\nEnter the item name: \"",
        "\"DELETE FROM Menu WHERE itemName = '%s'\"",
        "\"Invalid Choice\"",
        "\"\\n(1) to update login \\n(2) to update phone \\n(3) to update password\\n\\n\"",
        "\"\"",
        "\"UPDATE users SET \"",
        "\"Enter new login: \"",
        "\"login = '\"",
        "\"' WHERE login = '\"",
        "\"'\"",
        "\"Enter new phone: \"",
        "\"phoneNum = \"",
        "\" WHERE login = '\"",
        "\"'\"",
        "\"Enter new password: \"",
        "\"password = '\"",
        "\"' WHERE login = '\"",
        "\"'\"",
        "\" is not an option.\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\\n(1) to enter itemName \\n(2) to enter item type \\n(3) to check out: \"",
        "\"\\nEnter itemName: \"",
        "\"\\nResult: \\n\"",
        "\"SELECT * from Menu WHERE itemName = '\"",
        "\"'\"",
        "\"Order Item? (y)es or (n)o : \"",
        "\"y\"",
        "\"\\\\s+\"",
        "\"\"",
        "\" added. Total: \"",
        "\"n\"",
        "\" not added. Total: \"",
        "\" is not an option.\"",
        "\"SELECT * FROM ORDERS\"",
        "\"\\n\\nChecking out...\\n\"",
        "\"---------------------\"",
        "\"Items in cart: \"",
        "\"*\"",
        "\"\\nTotal: \"",
        "\"\\n\"",
        "\"---------------------\\n\"",
        "\" is not an option.\""
    ],
    "variables": [
        "input",
        "user_choice2",
        "result"
    ],
    "comments": [
        "reference to physical database connection.",
        "handling the keyboard inputs through a BufferedReader",
        "This variable can be global for convenience.",
        "constructs the connection URL",
        "obtain a physical connection",
        "end catch",
        "end Cafe",
        "creates a statement object",
        "issues the update instruction",
        "close the instruction",
        "end executeUpdate",
        "creates a statement object",
        "issues the query instruction",
        "iterates through the result set and output them to standard out.",
        "end while",
        "end executeQuery",
        "creates a statement object",
        "issues the query instruction",
        "iterates through the result set and saves the data returned by the query.",
        "end while",
        "end executeQueryAndReturnResult",
        "creates a statement object",
        "issues the query instruction",
        "iterates through the result set and count nuber of results.",
        "end while",
        "end if",
        "ignored.",
        "end try",
        "end cleanup",
        "end if",
        "use postgres JDBC driver.",
        "instantiate the Cafe object and creates a physical",
        "connection.",
        "These are sample SQL statements",
        "end switch",
        "end while",
        "make sure to cleanup the created table and close the connection.",
        "end if",
        "ignored.",
        "end try",
        "end try",
        "end main",
        "end Greeting",
        "returns only if a correct value is given.",
        "read the integer, parse it and break.",
        "end try",
        "end readChoice",
        "end CreateUser",
        "end",
        "Rest of the functions definition go in here",
        "end Cafe"
    ],
    "docstrings": [
        "* Template JAVA User Interface\n * =============================\n *\n * Database Management Systems\n * Department of Computer Science &amp; Engineering\n * University of California - Riverside\n *\n * Target DBMS: 'Postgres'\n *",
        "* This class defines a simple embedded SQL utility class that is designed to\n * work with PostgreSQL JDBC drivers.\n *",
        "* Creates a new instance of Cafe\n    *\n    * @param hostname the MySQL or PostgreSQL server hostname2\n    * @param database the name of the database\n    * @param username the user name used to login to the database\n    * @param password the user login password\n    * @throws java.sql.SQLException when failed to make a connection.",
        "* Method to execute an update SQL statement.  Update SQL instructions\n    * includes CREATE, INSERT, UPDATE, DELETE, and DROP.\n    *\n    * @param sql the input SQL string\n    * @throws java.sql.SQLException when update failed",
        "* Method to execute an input query SQL instruction (i.e. SELECT).  This\n    * method issues the query to the DBMS and outputs the results to\n    * standard out.\n    *\n    * @param query the input query string\n    * @return the number of rows returned\n    * @throws java.sql.SQLException when failed to execute the query",
        "** obtains the metadata object for the returned result set.  The metadata\n       ** contains row and column info.",
        "* Method to execute an input query SQL instruction (i.e. SELECT).  This\n    * method issues the query to the DBMS and returns the results as\n    * a list of records. Each record in turn is a list of attribute values\n    *\n    * @param query the input query string\n    * @return the query result as a list of records\n    * @throws java.sql.SQLException when failed to execute the query",
        "** obtains the metadata object for the returned result set.  The metadata\n       ** contains row and column info.",
        "* Method to execute an input query SQL instruction (i.e. SELECT).  This\n    * method issues the query to the DBMS and returns the number of results\n    *\n    * @param query the input query string\n    * @return the number of rows returned\n    * @throws java.sql.SQLException when failed to execute the query",
        "* Method to fetch the last value from sequence. This\n    * method issues the query to the DBMS and returns the current\n    * value of sequence used for autogenerated keys\n    *\n    * @param sequence name of the DB sequence\n    * @return current value of a sequence\n    * @throws java.sql.SQLException when failed to execute the query",
        "* Method to close the physical connection if it is open.",
        "* The main execution method\n    *\n    * @param args the command line arguments this inclues the <mysql|pgsql> <login file>",
        "* Reads the users choice given from the keyboard\n    * @int\n    *",
        "* Creates a new user with privided login, passowrd and phoneNum\n    *",
        "* Check log in credentials for an existing user\n    * @return User login or null is the user does not exist\n    *"
    ],
    "functions": [
        "getAuthorisedUser",
        "setAuthorisedUser",
        "Cafe",
        "executeUpdate",
        "executeQueryAndPrintResult",
        "executeQueryAndReturnResult",
        "executeQuery",
        "getCurrSeqVal",
        "cleanup",
        "main",
        "Greeting",
        "readChoice",
        "CreateUser",
        "LogIn",
        "Menu",
        "UpdateProfile",
        "PlaceOrder",
        "UpdateOrder"
    ],
    "classes": [
        "Cafe"
    ]
}