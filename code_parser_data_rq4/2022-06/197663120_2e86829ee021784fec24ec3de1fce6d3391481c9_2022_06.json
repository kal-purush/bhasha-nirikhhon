{
    "identifiers": [
        "org",
        "csanchez",
        "jenkins",
        "plugins",
        "kubernetes",
        "pipeline",
        "hudson",
        "Extension",
        "hudson",
        "ExtensionList",
        "hudson",
        "model",
        "Node",
        "hudson",
        "model",
        "labels",
        "LabelAtom",
        "java",
        "io",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "logging",
        "Logger",
        "jenkins",
        "model",
        "Jenkins",
        "org",
        "csanchez",
        "jenkins",
        "plugins",
        "kubernetes",
        "KubernetesCloud",
        "org",
        "csanchez",
        "jenkins",
        "plugins",
        "kubernetes",
        "KubernetesSlave",
        "org",
        "csanchez",
        "jenkins",
        "plugins",
        "kubernetes",
        "pod",
        "retention",
        "Reaper",
        "org",
        "jenkinsci",
        "org",
        "jenkinsci",
        "plugins",
        "workflow",
        "actions",
        "ErrorAction",
        "org",
        "jenkinsci",
        "plugins",
        "workflow",
        "actions",
        "WorkspaceAction",
        "org",
        "jenkinsci",
        "plugins",
        "workflow",
        "flow",
        "ErrorCondition",
        "org",
        "jenkinsci",
        "plugins",
        "workflow",
        "flow",
        "FlowExecution",
        "org",
        "jenkinsci",
        "plugins",
        "workflow",
        "graph",
        "BlockEndNode",
        "org",
        "jenkinsci",
        "plugins",
        "workflow",
        "graph",
        "FlowNode",
        "org",
        "jenkinsci",
        "plugins",
        "workflow",
        "graphanalysis",
        "LinearBlockHoppingScanner",
        "org",
        "jenkinsci",
        "plugins",
        "workflow",
        "steps",
        "FlowInterruptedException",
        "org",
        "jenkinsci",
        "plugins",
        "workflow",
        "steps",
        "StepContext",
        "org",
        "jenkinsci",
        "plugins",
        "workflow",
        "support",
        "steps",
        "AgentErrorCondition",
        "org",
        "jenkinsci",
        "plugins",
        "workflow",
        "support",
        "steps",
        "ExecutorStepExecution",
        "org",
        "kohsuke",
        "stapler",
        "DataBoundConstructor",
        "LOGGER",
        "Logger",
        "getLogger",
        "getName",
        "IGNORED_CONTAINER_TERMINATION_REASONS",
        "IGNORED_CONTAINER_TERMINATION_REASONS",
        "add",
        "IGNORED_CONTAINER_TERMINATION_REASONS",
        "add",
        "IGNORED_CONTAINER_TERMINATION_REASONS",
        "add",
        "DataBoundConstructor",
        "Override",
        "t",
        "context",
        "context",
        "LOGGER",
        "fine",
        "test",
        "t",
        "context",
        "t",
        "t",
        "getCauses",
        "stream",
        "anyMatch",
        "isInstance",
        "LOGGER",
        "fine",
        "LOGGER",
        "fine",
        "t",
        "_origin",
        "ErrorAction",
        "findOrigin",
        "t",
        "context",
        "get",
        "_origin",
        "LOGGER",
        "fine",
        "t",
        "origin",
        "_origin",
        "_origin",
        "getStartNode",
        "_origin",
        "LOGGER",
        "fine",
        "origin",
        "origin",
        "getDisplayFunctionName",
        "scanner",
        "scanner",
        "setup",
        "origin",
        "callStack",
        "scanner",
        "ws",
        "callStack",
        "getPersistentAction",
        "ws",
        "node",
        "ws",
        "getNode",
        "n",
        "Jenkins",
        "get",
        "getNode",
        "node",
        "n",
        "n",
        "LOGGER",
        "fine",
        "node",
        "labels",
        "ws",
        "getLabels",
        "labels",
        "stream",
        "noneMatch",
        "l",
        "Jenkins",
        "get",
        "clouds",
        "stream",
        "anyMatch",
        "c",
        "c",
        "c",
        "getTemplate",
        "l",
        "LOGGER",
        "fine",
        "node",
        "labels",
        "terminationReasons",
        "ExtensionList",
        "lookupSingleton",
        "terminationReasons",
        "node",
        "terminationReasons",
        "stream",
        "anyMatch",
        "r",
        "IGNORED_CONTAINER_TERMINATION_REASONS",
        "contains",
        "r",
        "LOGGER",
        "fine",
        "node",
        "terminationReasons",
        "LOGGER",
        "fine",
        "node",
        "terminationReasons",
        "LOGGER",
        "fine",
        "origin",
        "Extension",
        "Override"
    ],
    "literals": [
        "\"OOMKilled\"",
        "\"Completed\"",
        "\"DeadlineExceeded\"",
        "\"Cannot check error without context\"",
        "\"QueueTaskCancelled normally ignored by AgentErrorCondition but might be delivered here from Reaper.TerminateAgentOnContainerTerminated\"",
        "\"Not a recognized failure: \"",
        "\"No recognized origin of error: \"",
        "\"Found origin \"",
        "\" \"",
        "\" was not a K8s agent\"",
        "\" was not a K8s agent judging by \"",
        "\"ignored termination reason(s) for \"",
        "\": \"",
        "\"active on \"",
        "\" (termination reasons: \"",
        "\")\"",
        "\"found no WorkspaceAction starting from \"",
        "\"kubernetesAgent\"",
        "\"Kubernetes agent errors\""
    ],
    "variables": [],
    "comments": [
        "TODO cleaner to somehow suppress that QueueTaskCancelled and let the underlying RemovedNodeCause be delivered",
        "(or just let AgentErrorCondition trigger on QueueTaskCancelled)",
        "May have been removed already, but we can look up the labels to see what it was."
    ],
    "docstrings": [
        "* Copyright 2021 CloudBees, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Qualifies {@code node} blocks associated with {@link KubernetesSlave} to be retried if the node was deleted.\n * A more specific version of {@link AgentErrorCondition}."
    ],
    "functions": [
        "KubernetesAgentErrorCondition",
        "test",
        "getDisplayName"
    ],
    "classes": [
        "KubernetesAgentErrorCondition",
        "DescriptorImpl"
    ]
}