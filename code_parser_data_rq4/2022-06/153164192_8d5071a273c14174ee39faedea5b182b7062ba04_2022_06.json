{
    "identifiers": [
        "createReadStream",
        "existsSync",
        "promises",
        "fs",
        "path",
        "parseChangelog",
        "Octokit",
        "process",
        "process",
        "process",
        "process",
        "process",
        "process",
        "Octokit",
        "process",
        "process",
        "process",
        "existsSync",
        "release_notes_file",
        "fs",
        "release_notes_file",
        "version",
        "existsSync",
        "changelog_file",
        "parseChangelog",
        "changelog_file",
        "changelog",
        "item",
        "item",
        "version",
        "entry",
        "version",
        "changelog_file",
        "entry",
        "fs",
        "path",
        "process",
        "build_manifest",
        "manifest",
        "manifest",
        "tag_name",
        "client",
        "tag_name",
        "cause",
        "cause",
        "cause",
        "release",
        "tag_name",
        "read_release_notes",
        "release_notes",
        "release_notes",
        "read_changelog",
        "manifest",
        "release",
        "client",
        "commit",
        "release_notes",
        "assetPath",
        "process",
        "path",
        "assetPath",
        "release",
        "asset",
        "asset",
        "assetName",
        "tag_name",
        "assetName",
        "assetName",
        "assetPath",
        "client",
        "release",
        "assetName",
        "createReadStream",
        "assetPath",
        "main",
        "e",
        "e",
        "process"
    ],
    "literals": [
        "'fs'",
        "'path'",
        "'changelog-parser'",
        "'octokit'",
        "'GITHUB_TOKEN is required'",
        "'GITHUB_REPO is required'",
        "'GITHUB_OWNER is required'",
        "'./build.json'",
        "'./CHANGELOG.md'",
        "'./RELEASE_NOTES.md'",
        "'utf8'",
        "string",
        "No changelog entry found for version ${version} in ${changelog_file}",
        "'utf-8'",
        "v${manifest.version}",
        "Checking if release ${tag_name} already exists...",
        "️⚠️ Release '${tag_name}' already exists. Release notes will not be updated.",
        "'Reading release notes...'",
        "'No release notes found... Reading changelog...'",
        "'Uploading assets...'",
        "⚠️ Release '${tag_name}' already has an asset named '${assetName}'. Leaving it as-is.",
        "Uploading asset '${assetName}' from ${assetPath}",
        "'POST'",
        "'✅ done'",
        "'❌'"
    ],
    "variables": [
        "build_manifest",
        "changelog_file",
        "release_notes_file",
        "client",
        "owner",
        "repo",
        "changelog",
        "entry",
        "manifest",
        "tag_name",
        "commit",
        "release",
        "release_notes",
        "assetName"
    ],
    "comments": [
        "Note: using client.request here so we can pass the body as a stream instead of as a string"
    ],
    "docstrings": [],
    "functions": [
        "read_release_notes",
        "read_changelog",
        "main"
    ],
    "classes": []
}