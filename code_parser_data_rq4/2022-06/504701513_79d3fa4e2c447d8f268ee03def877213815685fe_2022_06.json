{
    "identifiers": [
        "random",
        "datetime",
        "timedelta",
        "datetime",
        "airflow",
        "DAG",
        "airflow",
        "decorators",
        "dag",
        "task",
        "airflow",
        "operators",
        "dummy",
        "DummyOperator",
        "airflow",
        "operators",
        "bash",
        "BashOperator",
        "airflow",
        "operators",
        "python",
        "PythonOperator",
        "airflow",
        "operators",
        "empty",
        "EmptyOperator",
        "airflow",
        "utils",
        "dates",
        "days_ago",
        "open",
        "echo_file",
        "echo_file",
        "apple_on_string",
        "apple_on_string",
        "days_ago",
        "timedelta",
        "minutes",
        "DAG",
        "description",
        "default_args",
        "default_args",
        "tags",
        "dag",
        "BashOperator",
        "task_id",
        "bash_command",
        "PythonOperator",
        "task_id",
        "python_callable",
        "print_greeting",
        "BashOperator",
        "task_id",
        "bash_command",
        "n",
        "random",
        "choice",
        "APPLE_BASKET",
        "PythonOperator",
        "task_id",
        "n",
        "python_callable",
        "print_apple_string",
        "op_kwargs",
        "apple_on_string",
        "apple_task",
        "append",
        "task",
        "EmptyOperator",
        "task_id",
        "trigger_rule",
        "t1",
        "t2",
        "t3",
        "apple_task",
        "t7"
    ],
    "literals": [
        "\"pink lady\"",
        "\"jazz\"",
        "\"orange pippin\"",
        "\"granny smith\"",
        "\"red delicious\"",
        "\"gala\"",
        "\"honeycrisp\"",
        "\"mcintosh\"",
        "\"fuji\"",
        "'opt/airflow/dags/ch6_code_review.txt'",
        "'r'",
        "f'Hey, {echo_file: read()}. Here is your echo back. make sure you keep better track of it next time'",
        "f'{apple_on_string}'",
        "'owner'",
        "'airflow'",
        "'start_date'",
        "'schedule_interval'",
        "'@once'",
        "'retries'",
        "'retry_delay'",
        "'apple_echo'",
        "'A simple DAG to return our nam echo with a bonus random apple'",
        "'code_review'",
        "'echo_back_yall'",
        "'say_my_name'",
        "'echo \"bri\" > /opt/airflow/dags/ch6_code_review.txt'",
        "\"echo_back\"",
        "'rando_apples'",
        "'echo \"picking three apples at random from the apple basket\"'",
        "f\"{n}\"",
        "'The apple I have for you is a '",
        "\"THE END\"",
        "'all_done'"
    ],
    "variables": [
        "APPLE_BASKET",
        "default_args",
        "t1",
        "t2",
        "t3",
        "apple_task",
        "apple_on_string",
        "task",
        "t7"
    ],
    "comments": [
        "open up our saved echo and save it to a variable called echo_file",
        "release our echo from the file and say it back to us as a greeting",
        "assign owner so they know who it belongs to",
        "set it to start to two days ago so it runs twice before we look at it",
        "set the code to run once, and only once",
        "allow it to retry the code if it fails, but just one time",
        "set how long to wait to retry to 1 minute",
        "passing the arg as the defaults args",
        "task to take my echo and save it in a file for later",
        "name our greeting function",
        "call on our greeting function",
        "name our echo apples operator",
        "give our task the chore of yellin our echo back at us",
        "t4, t5, t6",
        "Pass a random apple from the 'APPLES' list as the argument to that function.",
        "create apple triplet task",
        "Have a unique task ID that includes the snumber generated by 'range'",
        "Use a python_callable that calls a function that takes a string as an argument and prints that string",
        "set our kwargs up to set a string with our random apple",
        "add our triplet tasks to apple task",
        "name the emptiness",
        "set it to go off when all of the previous tasks have done their thing",
        "set the task dependencies"
    ],
    "docstrings": [
        "\"\"\"A 'greeting' task that reads our echo and gives it back to us with a bonus string\"\"\"",
        "\"\"\"function that takes a string as an argument and prints that string\"\"\"",
        "\"\"\"set out default args for the dag\"\"\"",
        "\"\"\"dag instantiation, no breathing\"\"\"",
        "\"\"\"echo to file task\"\"\"",
        "\"\"\"Python function to greet me\"\"\"",
        "\"\"\"using a Bash operator, echo picking three random apples\"\"\"",
        "\"\"\"Use a for loop with range to create three Python operator tasks that will run simultaneously\"\"\"",
        "\"\"\"set an empty operator to end our day\"\"\""
    ],
    "functions": [
        "print_greeting",
        "print_apple_string"
    ],
    "classes": []
}