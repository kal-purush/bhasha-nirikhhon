{
    "identifiers": [
        "sklearn",
        "sk",
        "streamlit",
        "st",
        "pickle",
        "nltk",
        "nltk",
        "corpus",
        "stopwords",
        "nltk",
        "stem",
        "porter",
        "PorterStemmer",
        "PorterStemmer",
        "pandas",
        "pd",
        "text",
        "text",
        "lower",
        "nltk",
        "word_tokenize",
        "text",
        "i",
        "T",
        "i",
        "isalnum",
        "append",
        "i",
        "clear",
        "i",
        "T",
        "i",
        "stopwords",
        "words",
        "i",
        "punctuation",
        "append",
        "i",
        "clear",
        "i",
        "text",
        "append",
        "ps",
        "stem",
        "i",
        "join",
        "pd",
        "read_pickle",
        "pd",
        "read_pickle",
        "st",
        "title",
        "st",
        "text_area",
        "st",
        "button",
        "Transform_text",
        "data",
        "vect",
        "transform",
        "transformed",
        "model",
        "predict",
        "Result",
        "st",
        "header",
        "st",
        "header"
    ],
    "literals": [
        "'english'",
        "\" \"",
        "\"Vectorizer.pkl\"",
        "\"model.pkl\"",
        "\"\\n Email Spam Detector\"",
        "\"Paste/Write your Email\"",
        "\"PREDICT\"",
        "\"It is a Spam E-Mail :( \"",
        "\"It's not a Spam E-Mail :)\""
    ],
    "variables": [
        "ps",
        "T",
        "T",
        "T",
        "text",
        "vect",
        "model",
        "data",
        "transformed",
        "Result"
    ],
    "comments": [
        "for reading and dumping models",
        "for many function used below",
        "for stops words like is the of etc",
        "for converting to Dic form",
        "for getting access to English most common punctuations",
        "One Way of loading Pickle file",
        "let's import our modules",
        "tfidf = pickle.load(open('Vectorizer.pkl', 'b'))",
        "model = pickle.load(open('model.pkl', 'b'))",
        "preprocessing = pickle.load(open(\"preprocessing\"))",
        "by this method we can read our pickle modules",
        "Transformer function for preprocessing",
        "for getting single single words",
        "for removing special characters",
        "to store all char",
        "just alphabet and numbers are allowed",
        "as list is immutable so will have to copy like this or .copy()",
        "to use it again",
        "let's check for other conditions",
        "for stemming",
        "to get as a string of list",
        "preprocess = pd.read_pickle(\"preprocessing.pkl\")",
        "body of web page",
        "getting input",
        "let's add button",
        "Step one",
        "Trans = preprocess([data])",
        "st.header(transformed)",
        "step Two Vectorization",
        "st.header(Vector)",
        "Step three Prediction",
        "There are two result 0 or 1, we move 0",
        "st.header(Result)",
        "condition"
    ],
    "docstrings": [],
    "functions": [
        "Transform_text"
    ],
    "classes": []
}