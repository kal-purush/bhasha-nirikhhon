{
    "identifiers": [
        "argparse",
        "torch",
        "torch",
        "nn",
        "nn",
        "torch",
        "nn",
        "functional",
        "F",
        "torch",
        "optim",
        "optim",
        "torchvision",
        "datasets",
        "transforms",
        "torch",
        "autograd",
        "Variable",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "parse_args",
        "args",
        "no_cuda",
        "torch",
        "cuda",
        "is_available",
        "args",
        "torch",
        "manual_seed",
        "args",
        "seed",
        "args",
        "cuda",
        "torch",
        "cuda",
        "manual_seed",
        "args",
        "seed",
        "args",
        "cuda",
        "torch",
        "utils",
        "data",
        "DataLoader",
        "datasets",
        "MNIST",
        "train",
        "download",
        "transform",
        "transforms",
        "Compose",
        "transforms",
        "ToTensor",
        "transforms",
        "Normalize",
        "batch_size",
        "args",
        "batch_size",
        "shuffle",
        "kwargs",
        "torch",
        "utils",
        "data",
        "DataLoader",
        "datasets",
        "MNIST",
        "train",
        "transform",
        "transforms",
        "Compose",
        "transforms",
        "ToTensor",
        "transforms",
        "Normalize",
        "batch_size",
        "args",
        "test_batch_size",
        "shuffle",
        "kwargs",
        "nn",
        "Module",
        "Net",
        "nn",
        "Conv2d",
        "kernel_size",
        "nn",
        "Conv2d",
        "kernel_size",
        "nn",
        "Dropout2d",
        "nn",
        "Linear",
        "nn",
        "Linear",
        "x",
        "F",
        "relu",
        "F",
        "max_pool2d",
        "conv1",
        "x",
        "F",
        "relu",
        "F",
        "max_pool2d",
        "conv2_drop",
        "conv2",
        "x",
        "x",
        "view",
        "F",
        "relu",
        "fc1",
        "x",
        "F",
        "dropout",
        "x",
        "training",
        "training",
        "fc2",
        "x",
        "F",
        "log_softmax",
        "x",
        "Net",
        "args",
        "cuda",
        "model",
        "cuda",
        "optim",
        "SGD",
        "model",
        "parameters",
        "lr",
        "args",
        "lr",
        "momentum",
        "args",
        "momentum",
        "epoch",
        "model",
        "train",
        "batch_idx",
        "data",
        "target",
        "train_loader",
        "args",
        "cuda",
        "data",
        "cuda",
        "target",
        "cuda",
        "Variable",
        "data",
        "Variable",
        "target",
        "optimizer",
        "zero_grad",
        "model",
        "data",
        "F",
        "nll_loss",
        "output",
        "target",
        "loss",
        "backward",
        "optimizer",
        "step",
        "batch_idx",
        "args",
        "log_interval",
        "format",
        "epoch",
        "batch_idx",
        "len",
        "data",
        "len",
        "train_loader",
        "dataset",
        "batch_idx",
        "len",
        "train_loader",
        "loss",
        "data",
        "model",
        "eval",
        "data",
        "target",
        "test_loader",
        "args",
        "cuda",
        "data",
        "cuda",
        "target",
        "cuda",
        "Variable",
        "data",
        "Variable",
        "target",
        "model",
        "data",
        "test_loss",
        "F",
        "nll_loss",
        "output",
        "target",
        "size_average",
        "data",
        "output",
        "data",
        "max",
        "keepdim",
        "correct",
        "pred",
        "eq",
        "target",
        "data",
        "view_as",
        "pred",
        "cpu",
        "sum",
        "test_loss",
        "len",
        "test_loader",
        "dataset",
        "format",
        "test_loss",
        "correct",
        "len",
        "test_loader",
        "dataset",
        "correct",
        "len",
        "test_loader",
        "dataset",
        "epoch",
        "args",
        "epochs",
        "train",
        "epoch",
        "test"
    ],
    "literals": [
        "'PyTorch MNIST Examples'",
        "'--batch-size'",
        "'N'",
        "'input batch size for training (default: 64)'",
        "'--test-batch-size'",
        "'N'",
        "'input batch size for testing (default: 1000)'",
        "'--epochs'",
        "'N'",
        "'number of epochs to train (default: 10)'",
        "'--lr'",
        "'LR'",
        "'learning rate (default: 0.01)'",
        "'--momentum'",
        "'M'",
        "'SGD momentum (default: 0.5)'",
        "'--no-cuda'",
        "'store_true'",
        "'disables CUDA training'",
        "'--seed'",
        "'S'",
        "'random seed (default: 1)'",
        "'--log-interval'",
        "'N'",
        "'how many batches to wait before logging training status'",
        "'num_workers'",
        "'pin_memory'",
        "'./data'",
        "'./data'",
        "'Train Epoch: {} [{}/{} ({:.0f}%)]\\tLoss: {:.6f}'",
        "'\\nTeset set: Average loss: {:.4f}, Accuracy: {}/{} ({:.0f}%)\\n'"
    ],
    "variables": [
        "parser",
        "args",
        "args",
        "cuda",
        "kwargs",
        "train_loader",
        "test_loader",
        "conv1",
        "conv2",
        "conv2_drop",
        "fc1",
        "fc2",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "model",
        "optimizer",
        "data",
        "target",
        "data",
        "target",
        "output",
        "loss",
        "test_loss",
        "currect",
        "data",
        "target",
        "data",
        "target",
        "output",
        "pred"
    ],
    "comments": [
        "https://discuss.pytorch.org/t/normalization-in-the-mnist-example/457/6",
        "ToTensor()で [0, 255] => [0, 1]",
        "Normalize()で平均0、標準偏差1になるように正規化（1チャンネルのみ）",
        "training mode"
    ],
    "docstrings": [],
    "functions": [
        "forward",
        "train",
        "test"
    ],
    "classes": [
        "Net"
    ]
}