{
    "identifiers": [
        "serial",
        "sys",
        "logging",
        "paho",
        "mqtt",
        "client",
        "mqtt",
        "yaml",
        "open",
        "config_f",
        "yaml",
        "safe_load",
        "config_f",
        "config",
        "sys",
        "exit",
        "serial",
        "Serial",
        "config",
        "config",
        "timeout",
        "logging",
        "getLogger",
        "logger",
        "setLevel",
        "logging",
        "DEBUG",
        "logging",
        "Formatter",
        "logging",
        "FileHandler",
        "fh",
        "setLevel",
        "logging",
        "DEBUG",
        "fh",
        "setFormatter",
        "formatter",
        "logger",
        "addHandler",
        "fh",
        "logging",
        "StreamHandler",
        "ch",
        "setLevel",
        "logging",
        "DEBUG",
        "ch",
        "setFormatter",
        "formatter",
        "logger",
        "addHandler",
        "ch",
        "logging",
        "info",
        "mqtt",
        "Client",
        "config",
        "mqttc",
        "connect",
        "config",
        "mqttc",
        "will_set",
        "config",
        "payload",
        "qos",
        "retain",
        "mqttc",
        "publish",
        "config",
        "payload",
        "qos",
        "retain",
        "mqttc",
        "publish",
        "config",
        "mqttc",
        "loop_start",
        "ser",
        "write",
        "ser",
        "readline",
        "strip",
        "card_id",
        "logging",
        "debug",
        "card_id",
        "card_id",
        "logging",
        "info",
        "mqttc",
        "publish",
        "config",
        "qos",
        "ser",
        "write",
        "card_id",
        "card_id",
        "card_id",
        "card_id",
        "logging",
        "info",
        "card_id",
        "members_f",
        "open",
        "member",
        "members_f",
        "readlines",
        "member",
        "strip",
        "split",
        "member",
        "startswith",
        "card_id",
        "ser",
        "write",
        "ser",
        "write",
        "logging",
        "info",
        "card_id",
        "member",
        "mqttc",
        "publish",
        "config",
        "member",
        "qos",
        "found",
        "ser",
        "write",
        "logging",
        "info",
        "card_id",
        "mqttc",
        "publish",
        "config",
        "qos"
    ],
    "literals": [
        "'config.yaml'",
        "\"Lol you need a config.yaml mate\"",
        "'serial'",
        "'port'",
        "'serial'",
        "'baud'",
        "'%(asctime)s %(message)s'",
        "'fred.log'",
        "\"FRED 1.0\"",
        "'mqtt'",
        "'name'",
        "'mqtt'",
        "'server'",
        "\"system/%s/state\"",
        "'mqtt'",
        "'name'",
        "'offline'",
        "\"system/%s/state\"",
        "'mqtt'",
        "'name'",
        "'online'",
        "\"door/%s/rebooted\"",
        "'door'",
        "'name'",
        "'E'",
        "'D0-0'",
        "'Door Button Pressed'",
        "\"door/%s/opened/button\"",
        "'door'",
        "'name'",
        "'1'",
        "'C'",
        "'88'",
        "\"Card ID: %s\"",
        "'members'",
        "'r'",
        "','",
        "'1'",
        "'G'",
        "\"%s found, %s opened the door!\"",
        "\"door/%s/opened/username\"",
        "'door'",
        "'name'",
        "'R'",
        "\"%s not found!\"",
        "\"door/%s/invalidcard\"",
        "'door'",
        "'name'"
    ],
    "variables": [
        "config",
        "ser",
        "logger",
        "formatter",
        "fh",
        "ch",
        "mqttc",
        "card_id",
        "card_id",
        "card_id",
        "found",
        "member",
        "found"
    ],
    "comments": [
        "!/usr/bin/python",
        "We want to use a logger",
        "Anything DEBUG or higher should be logged to disk",
        "Anything DEBUG or higher should be spat out to the console"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}