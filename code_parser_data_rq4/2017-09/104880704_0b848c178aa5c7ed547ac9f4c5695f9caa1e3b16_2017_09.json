{
    "identifiers": [
        "com",
        "composum",
        "pages",
        "commons",
        "com",
        "composum",
        "sling",
        "core",
        "ResourceFilter",
        "com",
        "composum",
        "sling",
        "core",
        "mapping",
        "jcr",
        "ResourceFilterMapping",
        "com",
        "composum",
        "sling",
        "core",
        "servlet",
        "AbstractServiceServlet",
        "org",
        "apache",
        "felix",
        "scr",
        "annotations",
        "Activate",
        "org",
        "apache",
        "felix",
        "scr",
        "annotations",
        "Component",
        "org",
        "apache",
        "felix",
        "scr",
        "annotations",
        "Deactivate",
        "org",
        "apache",
        "felix",
        "scr",
        "annotations",
        "Modified",
        "org",
        "apache",
        "felix",
        "scr",
        "annotations",
        "Property",
        "org",
        "apache",
        "felix",
        "scr",
        "annotations",
        "Service",
        "org",
        "osgi",
        "service",
        "component",
        "ComponentContext",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "com",
        "composum",
        "sling",
        "core",
        "CoreConfiguration",
        "TREE_INTERMEDIATE_FILTER_KEY",
        "Component",
        "label",
        "description",
        "immediate",
        "metatype",
        "Service",
        "Property",
        "name",
        "SITE_NODE_FILTER_KEY",
        "label",
        "description",
        "value",
        "siteNodeFilter",
        "Property",
        "name",
        "PAGE_NODE_FILTER_KEY",
        "label",
        "description",
        "value",
        "pageNodeFilter",
        "Property",
        "name",
        "CONTAINER_NODE_FILTER_KEY",
        "label",
        "description",
        "value",
        "containerNodeFilter",
        "Property",
        "name",
        "COMPONENT_NODE_FILTER_KEY",
        "label",
        "description",
        "value",
        "componentNodeFilter",
        "Property",
        "name",
        "DEVELOPMENT_TREE_FILTER_KEY",
        "label",
        "description",
        "value",
        "develomentTreeFilter",
        "Property",
        "name",
        "COMPONENT_INTERMEDIATE_FILTER_KEY",
        "label",
        "description",
        "value",
        "componentIntermediateFilter",
        "Property",
        "name",
        "SITE_INTERMEDIATE_FILTER_KEY",
        "label",
        "description",
        "value",
        "siteIntermediateFilter",
        "Property",
        "name",
        "DEV_INTERMEDIATE_FILTER_KEY",
        "label",
        "description",
        "value",
        "devIntermediateFilter",
        "Property",
        "name",
        "TREE_INTERMEDIATE_FILTER_KEY",
        "label",
        "description",
        "value",
        "treeIntermediateFilter",
        "Property",
        "name",
        "ORDERABLE_NODES_FILTER_KEY",
        "label",
        "description",
        "value",
        "orderableNodesFilter",
        "enabledServlets",
        "Override",
        "servlet",
        "result",
        "enabledServlets",
        "get",
        "servlet",
        "getClass",
        "getSimpleName",
        "result",
        "result",
        "Override",
        "siteNodeFilter",
        "Override",
        "pageNodeFilter",
        "Override",
        "containerNodeFilter",
        "Override",
        "componentNodeFilter",
        "Override",
        "develomentTreeFilter",
        "Override",
        "treeIntermediateFilter",
        "Override",
        "orderableNodesFilter",
        "properties",
        "properties",
        "configuredFilter",
        "intermediateFilter",
        "ResourceFilter",
        "FilterSet",
        "Rule",
        "tree",
        "configuredFilter",
        "intermediateFilter",
        "Activate",
        "Modified",
        "context",
        "properties",
        "context",
        "getProperties",
        "orderableNodesFilter",
        "ResourceFilterMapping",
        "fromString",
        "properties",
        "get",
        "ORDERABLE_NODES_FILTER_KEY",
        "treeIntermediateFilter",
        "ResourceFilterMapping",
        "fromString",
        "properties",
        "get",
        "TREE_INTERMEDIATE_FILTER_KEY",
        "siteIntermediateFilter",
        "ResourceFilter",
        "FilterSet",
        "Rule",
        "ResourceFilterMapping",
        "fromString",
        "properties",
        "get",
        "SITE_INTERMEDIATE_FILTER_KEY",
        "treeIntermediateFilter",
        "siteNodeFilter",
        "buildTreeFilter",
        "ResourceFilterMapping",
        "fromString",
        "properties",
        "get",
        "SITE_NODE_FILTER_KEY",
        "siteIntermediateFilter",
        "pageNodeFilter",
        "buildTreeFilter",
        "ResourceFilterMapping",
        "fromString",
        "properties",
        "get",
        "PAGE_NODE_FILTER_KEY",
        "treeIntermediateFilter",
        "componentIntermediateFilter",
        "ResourceFilter",
        "FilterSet",
        "Rule",
        "ResourceFilterMapping",
        "fromString",
        "properties",
        "get",
        "COMPONENT_INTERMEDIATE_FILTER_KEY",
        "treeIntermediateFilter",
        "containerNodeFilter",
        "buildTreeFilter",
        "ResourceFilterMapping",
        "fromString",
        "properties",
        "get",
        "CONTAINER_NODE_FILTER_KEY",
        "componentIntermediateFilter",
        "componentNodeFilter",
        "buildTreeFilter",
        "ResourceFilterMapping",
        "fromString",
        "properties",
        "get",
        "COMPONENT_NODE_FILTER_KEY",
        "componentIntermediateFilter",
        "devIntermediateFilter",
        "ResourceFilterMapping",
        "fromString",
        "properties",
        "get",
        "DEV_INTERMEDIATE_FILTER_KEY",
        "develomentTreeFilter",
        "buildTreeFilter",
        "ResourceFilterMapping",
        "fromString",
        "properties",
        "get",
        "DEVELOPMENT_TREE_FILTER_KEY",
        "devIntermediateFilter",
        "enabledServlets",
        "Deactivate",
        "context",
        "properties"
    ],
    "literals": [
        "\"Composum Pages Configuration\"",
        "\"the configuration service for all servlets in the pages bundles\"",
        "\"Sites Filter\"",
        "\"the filter configuration to set the scope to the  internet sites\"",
        "\"PrimaryType(+'^cpp:(Element|Container|Site)$')\"",
        "\"Content Page Filter\"",
        "\"the filter configuration to set the scope to the content pages\"",
        "\"PrimaryType(+'^cpp:(Page|Site)$')\"",
        "\"Container resource filter\"",
        "\"the filter configuration to set the scope to the content containers\"",
        "\"PrimaryType(+'^cpp:(Container|Page|Site)$')\"",
        "\"Component resource filter\"",
        "\"the filter configuration to set the scope to the content components\"",
        "\"PrimaryType(+'^cpp:(Element|Container|Page|Site)$')\"",
        "\"Development tree filter\"",
        "\"the filter configuration to set the scope to component development\"",
        "\"PrimaryType(+'^cpp:(Site|Component|Theme)$')\"",
        "\"Page Content Intermediate Filter\"",
        "\"the filter configuration to determine all intermediate nodes in the content structure\"",
        "\"PrimaryType(+'^cpp:(PageContent)$')\"",
        "\"Site Configuration Intermediate Filter\"",
        "\"the filter configuration to determine all intermediate nodes in the site definition\"",
        "\"or{PrimaryType(+'^cpp:(SiteConfiguration)$'),ResourceType(+'^composum/pages/stage/edit/template(/(content|set))?$')}\"",
        "\"Development Intermediate Filter\"",
        "\"the filter configuration to determine all intermediate nodes in the development scope\"",
        "\"and{Folder(),Path(+'^/(etc|apps|libs|sightly|htl|var)')}\"",
        "\"Tree Intermediate (Folder) Filter\"",
        "\"the filter configuration to determine all intermediate nodes in the tree view\"",
        "\"and{Folder(),Path(-'^/(etc|apps|libs|sightly|htl|var)')}\"",
        "\"Orderable Nodes Filter\"",
        "\"the filter configuration to detect ordered nodes (prevent from sorting in the tree)\"",
        "\"or{Type(+[node:orderable]),PrimaryType(+'^.*([Oo]rdered|[Pp]age).*$')}\""
    ],
    "variables": [
        "siteNodeFilter",
        "pageNodeFilter",
        "containerNodeFilter",
        "componentNodeFilter",
        "develomentTreeFilter",
        "componentIntermediateFilter",
        "siteIntermediateFilter",
        "devIntermediateFilter",
        "treeIntermediateFilter",
        "orderableNodesFilter",
        "enabledServlets",
        "properties"
    ],
    "comments": [],
    "docstrings": [
        "* The configuration service for all servlets in the pages bundle.",
        "* Creates a 'tree filter' as combination with the configured filter and the rules for the\n     * 'intermediate' nodes (folders) to traverse up to the target nodes.\n     *\n     * @param configuredFilter the filter for the target nodes"
    ],
    "functions": [
        "isEnabled",
        "ResourceFilter",
        "getSiteNodeFilter",
        "ResourceFilter",
        "getPageNodeFilter",
        "ResourceFilter",
        "getContainerNodeFilter",
        "ResourceFilter",
        "getComponentNodeFilter",
        "ResourceFilter",
        "getDevelopmentTreeFilter",
        "ResourceFilter",
        "getTreeIntermediateFilter",
        "ResourceFilter",
        "getOrderableNodesFilter",
        "getProperties",
        "ResourceFilter",
        "buildTreeFilter",
        "activate",
        "deactivate"
    ],
    "classes": [
        "PagesConfigImpl"
    ]
}