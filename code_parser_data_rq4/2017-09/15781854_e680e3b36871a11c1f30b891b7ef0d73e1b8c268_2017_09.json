{
    "identifiers": [
        "absolute_import",
        "sys",
        "logging",
        "subprocess",
        "check_output",
        "sys",
        "version_info",
        "decode",
        "version",
        "arch",
        "home",
        "venv",
        "kw_args",
        "CondaManager",
        "kw_args",
        "logging",
        "getLogger",
        "format",
        "__class__",
        "version",
        "arch",
        "home",
        "venv",
        "exc_type",
        "exc_val",
        "exc_tb",
        "logger",
        "info",
        "home",
        "check_output",
        "cmd",
        "shell",
        "logger",
        "debug",
        "decode",
        "msg",
        "logger",
        "info",
        "logger",
        "info",
        "home",
        "check_output",
        "cmd",
        "shell",
        "logger",
        "debug",
        "decode",
        "msg",
        "logger",
        "info",
        "args",
        "logger",
        "info",
        "venv",
        "venv",
        "version",
        "args",
        "check_output",
        "cmd",
        "shell",
        "logger",
        "debug",
        "decode",
        "msg",
        "venv",
        "check_output",
        "cmd",
        "shell",
        "logger",
        "debug",
        "decode",
        "msg",
        "check_output",
        "cmd",
        "shell",
        "logger",
        "debug",
        "decode",
        "msg",
        "check_output",
        "cmd",
        "shell",
        "logger",
        "debug",
        "decode",
        "msg",
        "logger",
        "info"
    ],
    "literals": [
        "\"{}.{}\"",
        "\"Configuring '%s'...\"",
        "\"conda\"",
        "\"config\"",
        "\"--set\"",
        "\"always_yes\"",
        "\"yes\"",
        "\"--set\"",
        "\"changeps1\"",
        "\"no\"",
        "\"Done.\"",
        "\"Updating '%s'...\"",
        "\"conda\"",
        "\"update\"",
        "\"-q\"",
        "\"conda\"",
        "\"Done.\"",
        "\"Creating environment '%s'...\"",
        "\"conda\"",
        "\"create\"",
        "\"-q\"",
        "\"-n\"",
        "\"python=\"",
        "\"activate\"",
        "\"conda\"",
        "\"info\"",
        "\"-a\"",
        "\"conda\"",
        "\"list\"",
        "\"Done.\""
    ],
    "variables": [
        "logger",
        "version",
        "arch",
        "home",
        "venv",
        "cmd",
        "msg",
        "cmd",
        "msg",
        "cmd",
        "msg",
        "cmd",
        "msg",
        "cmd",
        "msg",
        "cmd",
        "msg"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "False reraises the exception",
        "cmd = r\"SET PYTHON=\"+self.home",
        "msg = check_output(cmd, shell=True)",
        "self.logger.debug(decode(msg))",
        "cmd = \"SET PATH=\"+self.home+\";\"+self.home+\"\\\\Scripts;\"",
        "msg = check_output(cmd, shell=True)",
        "self.logger.debug(decode(msg))",
        "import os",
        "self.logger.debug( os.listdir( \"C:\\\\\"))",
        "consider only for debugging"
    ],
    "docstrings": [
        "\"\"\"\n\"\"\"",
        "\"\"\"Manage the AppVeyor Miniconda installation through Python.\n\n    AppVeyor has pre-installed Python 2.7.x as well as Miniconda (2 and 3). Thus\n    we only need to configure that properly and create the desired environment.\n    \"\"\""
    ],
    "functions": [
        "decode",
        "decode",
        "__enter__",
        "__exit__",
        "configure",
        "update",
        "create"
    ],
    "classes": [
        "CondaManager"
    ]
}