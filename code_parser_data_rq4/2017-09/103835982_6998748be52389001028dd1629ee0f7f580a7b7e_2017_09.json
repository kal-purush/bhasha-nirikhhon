{
    "identifiers": [
        "pre",
        "vin",
        "vin",
        "TreeNode",
        "pre",
        "i",
        "i",
        "vin",
        "i",
        "vin",
        "i",
        "pre",
        "root",
        "i",
        "j",
        "j",
        "root",
        "j",
        "left_pre",
        "pre",
        "j",
        "left_in",
        "vin",
        "j",
        "j",
        "root",
        "j",
        "vin",
        "j",
        "right_pre",
        "pre",
        "j",
        "right_in",
        "vin",
        "j",
        "head",
        "reConstructBinaryTree",
        "left_pre",
        "left_in",
        "head",
        "reConstructBinaryTree",
        "right_pre",
        "right_in",
        "head"
    ],
    "literals": [],
    "variables": [
        "root",
        "i",
        "j",
        "left_pre",
        "right_pre",
        "left_in",
        "right_in",
        "head"
    ],
    "comments": [
        "输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的",
        "前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列{1,2,4",
        ",7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。",
        "function TreeNode(x) {\n    this.val = x;\n    this.left = null;\n    this.right = null;\n}",
        "write code here"
    ],
    "docstrings": [],
    "functions": [
        "reConstructBinaryTree"
    ],
    "classes": []
}