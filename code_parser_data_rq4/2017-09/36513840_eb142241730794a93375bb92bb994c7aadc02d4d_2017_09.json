{
    "identifiers": [
        "re",
        "subprocess",
        "sys",
        "input_string",
        "pattern",
        "re",
        "compile",
        "pattern",
        "r",
        "match",
        "input_string",
        "matches",
        "len",
        "matches",
        "groups",
        "format",
        "input_string",
        "matches",
        "group",
        "batsim_command",
        "pattern",
        "subprocess",
        "run",
        "format",
        "cmd",
        "batsim_command",
        "shell",
        "check",
        "stdout",
        "subprocess",
        "PIPE",
        "version_from_string",
        "p",
        "stdout",
        "decode",
        "pattern",
        "git_command",
        "pattern",
        "subprocess",
        "run",
        "format",
        "cmd",
        "git_command",
        "shell",
        "stdout",
        "subprocess",
        "PIPE",
        "p",
        "returncode",
        "format",
        "cmd",
        "git_command",
        "ret",
        "p",
        "returncode",
        "o",
        "p",
        "stdout",
        "decode",
        "version_from_string",
        "p",
        "stdout",
        "decode",
        "pattern",
        "batsim_binary_version",
        "batsim_git_version",
        "bin_version",
        "git_version",
        "format",
        "v",
        "bin_version",
        "format",
        "bin",
        "bin_version",
        "git",
        "git_version",
        "sys",
        "exit",
        "main"
    ],
    "literals": [
        "\"Cannot retrieve a version in '{}'\"",
        "\"batsim\"",
        "\"{cmd} --version\"",
        "'utf-8'",
        "'git describe --match \"v[0-9]*.[0-9]*.[0-9]*\"'",
        "\"{cmd}\"",
        "\"Command '{cmd}' returned {ret}. Output:\\n{o}\"",
        "'utf-8'",
        "'utf-8'",
        "\"Batsim binary and git match on version {v}\"",
        "\"Version mismatch!\\n\"",
        "\"- batsim binary: {bin}\\n\"",
        "\"- git: {git}\"",
        "\"\"",
        "'__main__'"
    ],
    "variables": [
        "r",
        "matches",
        "p",
        "p",
        "bin_version",
        "git_version"
    ],
    "comments": [
        "!/usr/bin/env python3"
    ],
    "docstrings": [
        "\"\"\"Check that batsim --version is consistent with batsim git releases.\"\"\"",
        "'''^(v\\d+\\.\\d+\\.\\d+).*$'''",
        "\"\"\"Retrieve a version string from a string.\"\"\"",
        "'''(v\\d+\\.\\d+\\.\\d+).*'''",
        "\"\"\"Retrieve the version from the batsim binary.\"\"\"",
        "'''(v\\d+\\.\\d+\\.\\d+).*'''",
        "\"\"\"Retrieve the latest released Batsim version (in the git tags).\n\n    This is done by calling git describe --match PATTERN,\n    which should return either:\n    - v1.2.0              if the current commit is a released version\n    - v1.1.0-20-g0fcd0c9  if the current commit is after v1.1.0 in the tree\n    - or fail if there is no released version before the current commit.\n    \"\"\"",
        "\"\"\"Entry point.\"\"\""
    ],
    "functions": [
        "version_from_string",
        "batsim_binary_version",
        "batsim_git_version",
        "main"
    ],
    "classes": []
}