{
    "identifiers": [
        "Globalization",
        "Linq",
        "Security",
        "Claims",
        "Threading",
        "Tasks",
        "Web",
        "Web",
        "Mvc",
        "Microsoft",
        "AspNet",
        "Identity",
        "Microsoft",
        "AspNet",
        "Identity",
        "Owin",
        "Microsoft",
        "Owin",
        "Security",
        "MomCom",
        "Models",
        "MomCom",
        "Controllers",
        "Authorize",
        "Controller",
        "ApplicationUserManager",
        "userManager",
        "ApplicationSignInManager",
        "signInManager",
        "UserManager",
        "userManager",
        "SignInManager",
        "signInManager",
        "_signInManager",
        "HttpContext",
        "GetOwinContext",
        "Get",
        "ApplicationSignInManager",
        "_signInManager",
        "value",
        "_userManager",
        "HttpContext",
        "GetOwinContext",
        "GetUserManager",
        "ApplicationUserManager",
        "_userManager",
        "value",
        "AllowAnonymous",
        "returnUrl",
        "ViewBag",
        "ReturnUrl",
        "returnUrl",
        "View",
        "HttpPost",
        "AllowAnonymous",
        "ValidateAntiForgeryToken",
        "ActionResult",
        "LoginViewModel",
        "model",
        "returnUrl",
        "ModelState",
        "IsValid",
        "View",
        "model",
        "SignInManager",
        "PasswordSignInAsync",
        "model",
        "Email",
        "model",
        "Password",
        "model",
        "RememberMe",
        "shouldLockout",
        "result",
        "SignInStatus",
        "Success",
        "RedirectToLocal",
        "returnUrl",
        "SignInStatus",
        "LockedOut",
        "View",
        "SignInStatus",
        "RequiresVerification",
        "RedirectToAction",
        "ReturnUrl",
        "returnUrl",
        "RememberMe",
        "model",
        "RememberMe",
        "SignInStatus",
        "Failure",
        "ModelState",
        "AddModelError",
        "View",
        "model",
        "AllowAnonymous",
        "ActionResult",
        "provider",
        "returnUrl",
        "rememberMe",
        "SignInManager",
        "HasBeenVerifiedAsync",
        "View",
        "View",
        "VerifyCodeViewModel",
        "Provider",
        "provider",
        "ReturnUrl",
        "returnUrl",
        "RememberMe",
        "rememberMe",
        "HttpPost",
        "AllowAnonymous",
        "ValidateAntiForgeryToken",
        "ActionResult",
        "VerifyCodeViewModel",
        "model",
        "ModelState",
        "IsValid",
        "View",
        "model",
        "SignInManager",
        "TwoFactorSignInAsync",
        "model",
        "Provider",
        "model",
        "Code",
        "isPersistent",
        "model",
        "RememberMe",
        "rememberBrowser",
        "model",
        "RememberBrowser",
        "result",
        "SignInStatus",
        "Success",
        "RedirectToLocal",
        "model",
        "ReturnUrl",
        "SignInStatus",
        "LockedOut",
        "View",
        "SignInStatus",
        "Failure",
        "ModelState",
        "AddModelError",
        "View",
        "model",
        "AllowAnonymous",
        "View",
        "HttpPost",
        "AllowAnonymous",
        "ValidateAntiForgeryToken",
        "ActionResult",
        "RegisterViewModel",
        "model",
        "ModelState",
        "IsValid",
        "ApplicationUser",
        "UserName",
        "model",
        "Email",
        "Email",
        "model",
        "Email",
        "UserManager",
        "CreateAsync",
        "user",
        "model",
        "Password",
        "result",
        "Succeeded",
        "SignInManager",
        "SignInAsync",
        "user",
        "isPersistent",
        "rememberBrowser",
        "RedirectToAction",
        "AddErrors",
        "result",
        "View",
        "model",
        "AllowAnonymous",
        "ActionResult",
        "userId",
        "code",
        "userId",
        "code",
        "View",
        "UserManager",
        "ConfirmEmailAsync",
        "userId",
        "code",
        "View",
        "result",
        "Succeeded",
        "AllowAnonymous",
        "View",
        "HttpPost",
        "AllowAnonymous",
        "ValidateAntiForgeryToken",
        "ActionResult",
        "ForgotPasswordViewModel",
        "model",
        "ModelState",
        "IsValid",
        "UserManager",
        "FindByNameAsync",
        "model",
        "Email",
        "user",
        "UserManager",
        "IsEmailConfirmedAsync",
        "user",
        "Id",
        "View",
        "View",
        "model",
        "AllowAnonymous",
        "View",
        "AllowAnonymous",
        "code",
        "code",
        "View",
        "View",
        "HttpPost",
        "AllowAnonymous",
        "ValidateAntiForgeryToken",
        "ActionResult",
        "ResetPasswordViewModel",
        "model",
        "ModelState",
        "IsValid",
        "View",
        "model",
        "UserManager",
        "FindByNameAsync",
        "model",
        "Email",
        "user",
        "RedirectToAction",
        "UserManager",
        "ResetPasswordAsync",
        "user",
        "Id",
        "model",
        "Code",
        "model",
        "Password",
        "result",
        "Succeeded",
        "RedirectToAction",
        "AddErrors",
        "result",
        "View",
        "AllowAnonymous",
        "View",
        "HttpPost",
        "AllowAnonymous",
        "ValidateAntiForgeryToken",
        "provider",
        "returnUrl",
        "ChallengeResult",
        "provider",
        "Url",
        "Action",
        "ReturnUrl",
        "returnUrl",
        "AllowAnonymous",
        "ActionResult",
        "returnUrl",
        "rememberMe",
        "SignInManager",
        "GetVerifiedUserIdAsync",
        "userId",
        "View",
        "UserManager",
        "GetValidTwoFactorProvidersAsync",
        "userId",
        "userFactors",
        "Select",
        "SelectListItem",
        "Text",
        "purpose",
        "Value",
        "purpose",
        "ToList",
        "View",
        "SendCodeViewModel",
        "Providers",
        "factorOptions",
        "ReturnUrl",
        "returnUrl",
        "RememberMe",
        "rememberMe",
        "HttpPost",
        "AllowAnonymous",
        "ValidateAntiForgeryToken",
        "ActionResult",
        "SendCodeViewModel",
        "model",
        "ModelState",
        "IsValid",
        "View",
        "SignInManager",
        "SendTwoFactorCodeAsync",
        "model",
        "SelectedProvider",
        "View",
        "RedirectToAction",
        "Provider",
        "model",
        "SelectedProvider",
        "ReturnUrl",
        "model",
        "ReturnUrl",
        "RememberMe",
        "model",
        "RememberMe",
        "AllowAnonymous",
        "ActionResult",
        "returnUrl",
        "AuthenticationManager",
        "GetExternalLoginInfoAsync",
        "loginInfo",
        "RedirectToAction",
        "SignInManager",
        "ExternalSignInAsync",
        "loginInfo",
        "isPersistent",
        "result",
        "SignInStatus",
        "Success",
        "RedirectToLocal",
        "returnUrl",
        "SignInStatus",
        "LockedOut",
        "View",
        "SignInStatus",
        "RequiresVerification",
        "RedirectToAction",
        "ReturnUrl",
        "returnUrl",
        "RememberMe",
        "SignInStatus",
        "Failure",
        "ViewBag",
        "ReturnUrl",
        "returnUrl",
        "ViewBag",
        "LoginProvider",
        "loginInfo",
        "Login",
        "LoginProvider",
        "View",
        "ExternalLoginConfirmationViewModel",
        "Email",
        "loginInfo",
        "Email",
        "HttpPost",
        "AllowAnonymous",
        "ValidateAntiForgeryToken",
        "ActionResult",
        "ExternalLoginConfirmationViewModel",
        "model",
        "returnUrl",
        "User",
        "Identity",
        "IsAuthenticated",
        "RedirectToAction",
        "ModelState",
        "IsValid",
        "AuthenticationManager",
        "GetExternalLoginInfoAsync",
        "info",
        "View",
        "ApplicationUser",
        "UserName",
        "model",
        "Email",
        "Email",
        "model",
        "Email",
        "UserManager",
        "CreateAsync",
        "user",
        "result",
        "Succeeded",
        "result",
        "UserManager",
        "AddLoginAsync",
        "user",
        "Id",
        "info",
        "Login",
        "result",
        "Succeeded",
        "SignInManager",
        "SignInAsync",
        "user",
        "isPersistent",
        "rememberBrowser",
        "RedirectToLocal",
        "returnUrl",
        "AddErrors",
        "result",
        "ViewBag",
        "ReturnUrl",
        "returnUrl",
        "View",
        "model",
        "HttpPost",
        "ValidateAntiForgeryToken",
        "AuthenticationManager",
        "SignOut",
        "DefaultAuthenticationTypes",
        "ApplicationCookie",
        "RedirectToAction",
        "AllowAnonymous",
        "View",
        "disposing",
        "disposing",
        "_userManager",
        "_userManager",
        "Dispose",
        "_userManager",
        "_signInManager",
        "_signInManager",
        "Dispose",
        "_signInManager",
        "Dispose",
        "disposing",
        "HttpContext",
        "GetOwinContext",
        "Authentication",
        "IdentityResult",
        "result",
        "error",
        "result",
        "Errors",
        "ModelState",
        "AddModelError",
        "error",
        "returnUrl",
        "Url",
        "IsLocalUrl",
        "returnUrl",
        "Redirect",
        "returnUrl",
        "RedirectToAction",
        "HttpUnauthorizedResult",
        "provider",
        "redirectUri",
        "provider",
        "redirectUri",
        "provider",
        "redirectUri",
        "userId",
        "LoginProvider",
        "provider",
        "RedirectUri",
        "redirectUri",
        "UserId",
        "userId",
        "ControllerContext",
        "context",
        "AuthenticationProperties",
        "RedirectUri",
        "RedirectUri",
        "UserId",
        "properties",
        "XsrfKey",
        "UserId",
        "context",
        "HttpContext",
        "GetOwinContext",
        "Authentication",
        "Challenge",
        "properties",
        "LoginProvider"
    ],
    "literals": [
        "\"Lockout\"",
        "\"SendCode\"",
        "\"\"",
        "\"Invalid login attempt.\"",
        "\"Error\"",
        "\"Lockout\"",
        "\"\"",
        "\"Invalid code.\"",
        "\"Index\"",
        "\"Home\"",
        "\"Error\"",
        "\"ConfirmEmail\"",
        "\"Error\"",
        "\"ForgotPasswordConfirmation\"",
        "\"Error\"",
        "\"ResetPasswordConfirmation\"",
        "\"Account\"",
        "\"ResetPasswordConfirmation\"",
        "\"Account\"",
        "\"ExternalLoginCallback\"",
        "\"Account\"",
        "\"Error\"",
        "\"Error\"",
        "\"VerifyCode\"",
        "\"Login\"",
        "\"Lockout\"",
        "\"SendCode\"",
        "\"ExternalLoginConfirmation\"",
        "\"Index\"",
        "\"Manage\"",
        "\"ExternalLoginFailure\"",
        "\"Index\"",
        "\"Home\"",
        "\"XsrfId\"",
        "\"\"",
        "\"Index\"",
        "\"Home\""
    ],
    "variables": [
        "ApplicationSignInManager",
        "_signInManager",
        "ApplicationUserManager",
        "_userManager",
        "ApplicationSignInManager",
        "SignInManager",
        "ApplicationUserManager",
        "UserManager",
        "result",
        "result",
        "user",
        "result",
        "result",
        "user",
        "user",
        "result",
        "userId",
        "userFactors",
        "factorOptions",
        "loginInfo",
        "result",
        "info",
        "user",
        "result",
        "XsrfKey",
        "IAuthenticationManager",
        "AuthenticationManager",
        "LoginProvider",
        "RedirectUri",
        "UserId",
        "properties"
    ],
    "comments": [
        "",
        "GET: /Account/Login",
        "",
        "POST: /Account/Login",
        "This doesn't count login failures towards account lockout",
        "To enable password failures to trigger account lockout, change to shouldLockout: true",
        "",
        "GET: /Account/VerifyCode",
        "Require that the user has already logged in via username/password or external login",
        "",
        "POST: /Account/VerifyCode",
        "The following code protects for brute force attacks against the two factor codes.",
        "If a user enters incorrect codes for a specified amount of time then the user account",
        "will be locked out for a specified amount of time.",
        "You can configure the account lockout settings in IdentityConfig",
        "",
        "GET: /Account/Register",
        "",
        "POST: /Account/Register",
        "For more information on how to enable account confirmation and password reset please visit https://go.microsoft.com/fwlink/?LinkID=320771",
        "Send an email with this link",
        "string code = await UserManager.GenerateEmailConfirmationTokenAsync(user.Id);",
        "var callbackUrl = Url.Action(\"ConfirmEmail\", \"Account\", new { userId = user.Id, code = code }, protocol: Request.Url.Scheme);",
        "await UserManager.SendEmailAsync(user.Id, \"Confirm your account\", \"Please confirm your account by clicking <a href=\\\"\" + callbackUrl + \"\\\">here</a>\");",
        "If we got this far, something failed, redisplay form",
        "",
        "GET: /Account/ConfirmEmail",
        "",
        "GET: /Account/ForgotPassword",
        "",
        "POST: /Account/ForgotPassword",
        "Don't reveal that the user does not exist or is not confirmed",
        "For more information on how to enable account confirmation and password reset please visit https://go.microsoft.com/fwlink/?LinkID=320771",
        "Send an email with this link",
        "string code = await UserManager.GeneratePasswordResetTokenAsync(user.Id);",
        "var callbackUrl = Url.Action(\"ResetPassword\", \"Account\", new { userId = user.Id, code = code }, protocol: Request.Url.Scheme);",
        "await UserManager.SendEmailAsync(user.Id, \"Reset Password\", \"Please reset your password by clicking <a href=\\\"\" + callbackUrl + \"\\\">here</a>\");",
        "return RedirectToAction(\"ForgotPasswordConfirmation\", \"Account\");",
        "If we got this far, something failed, redisplay form",
        "",
        "GET: /Account/ForgotPasswordConfirmation",
        "",
        "GET: /Account/ResetPassword",
        "",
        "POST: /Account/ResetPassword",
        "Don't reveal that the user does not exist",
        "",
        "GET: /Account/ResetPasswordConfirmation",
        "",
        "POST: /Account/ExternalLogin",
        "Request a redirect to the external login provider",
        "",
        "GET: /Account/SendCode",
        "",
        "POST: /Account/SendCode",
        "Generate the token and send it",
        "",
        "GET: /Account/ExternalLoginCallback",
        "Sign in the user with this external login provider if the user already has a login",
        "If the user does not have an account, then prompt the user to create an account",
        "",
        "POST: /Account/ExternalLoginConfirmation",
        "Get the information about the user from the external login provider",
        "",
        "POST: /Account/LogOff",
        "",
        "GET: /Account/ExternalLoginFailure",
        "Used for XSRF protection when adding external logins"
    ],
    "docstrings": [],
    "functions": [
        "AccountController",
        "AccountController",
        "ActionResult",
        "Login",
        "Login",
        "VerifyCode",
        "VerifyCode",
        "ActionResult",
        "Register",
        "Register",
        "ConfirmEmail",
        "ActionResult",
        "ForgotPassword",
        "ForgotPassword",
        "ActionResult",
        "ForgotPasswordConfirmation",
        "ActionResult",
        "ResetPassword",
        "ResetPassword",
        "ActionResult",
        "ResetPasswordConfirmation",
        "ActionResult",
        "ExternalLogin",
        "SendCode",
        "SendCode",
        "ExternalLoginCallback",
        "ExternalLoginConfirmation",
        "ActionResult",
        "LogOff",
        "ActionResult",
        "ExternalLoginFailure",
        "Dispose",
        "AddErrors",
        "ActionResult",
        "RedirectToLocal",
        "ChallengeResult",
        "ChallengeResult",
        "ExecuteResult"
    ],
    "classes": [
        "AccountController",
        "ChallengeResult"
    ]
}