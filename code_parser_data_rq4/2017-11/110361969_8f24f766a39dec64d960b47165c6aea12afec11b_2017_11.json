{
    "identifiers": [
        "argparse",
        "os",
        "signal",
        "time",
        "unicorn",
        "unicorn",
        "x86_const",
        "unicorn_loader",
        "uc",
        "address",
        "size",
        "user_data",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "parse_args",
        "format",
        "args",
        "context_dir",
        "unicorn_loader",
        "AflUnicornEngine",
        "args",
        "context_dir",
        "enable_trace",
        "args",
        "debug",
        "debug_print",
        "unicorn_heap",
        "unicorn_loader",
        "UnicornSimpleHeap",
        "uc",
        "debug_print",
        "uc",
        "hook_add",
        "UC_HOOK_CODE",
        "unicorn_hook_instruction",
        "uc",
        "emu_start",
        "START_ADDRESS",
        "count",
        "UcError",
        "e",
        "format",
        "e",
        "args",
        "input_file",
        "format",
        "args",
        "input_file",
        "open",
        "args",
        "input_file",
        "input_file",
        "read",
        "input_file",
        "close",
        "unicorn_heap",
        "malloc",
        "len",
        "input_content",
        "uc",
        "mem_write",
        "buf_addr",
        "input_content",
        "format",
        "buf_addr",
        "format",
        "START_ADDRESS",
        "END_ADDRESS",
        "uc",
        "emu_start",
        "START_ADDRESS",
        "END_ADDRESS",
        "timeout",
        "count",
        "UcError",
        "e",
        "format",
        "e",
        "uc",
        "dump_regs",
        "uc",
        "force_crash",
        "e",
        "uc",
        "dump_regs",
        "main"
    ],
    "literals": [
        "'context_dir'",
        "\"Directory containing process context\"",
        "'input_file'",
        "\"Path to the file containing the mutated input content\"",
        "'-d'",
        "'--debug'",
        "\"store_true\"",
        "\"Dump trace info\"",
        "\"Loading context from {}\"",
        "\"Starting the forkserver by executing 1 instruction\"",
        "\"ERROR: Failed to execute a single instruction (error: {})!\"",
        "\"Loading input content from {}\"",
        "'rb'",
        "\"Allocated mutated input buffer @ 0x{0:08x}\"",
        "\"Executing from 0x{0:08x} to 0x{1:08x}\"",
        "\"Execution failed with error: {}\"",
        "\"Final register state:\"",
        "\"Done.\"",
        "\"__main__\""
    ],
    "variables": [
        "unicorn_heap",
        "START_ADDRESS",
        "END_ADDRESS",
        "parser",
        "args",
        "uc",
        "unicorn_heap",
        "input_file",
        "input_content",
        "buf_addr",
        "result"
    ],
    "comments": [
        "Simple stand-in heap to prevent OS/kernel issues",
        "Start and end address of emulation",
        "TODO: Setup hooks and handle anything you need to here",
        "- For example, hook malloc/free/etc. and handle it internally",
        "------------------------",
        "---- Main test function",
        "Instantiate the hook function to avoid emulation errors",
        "Execute 1 instruction just to startup the forkserver",
        "Allocate a buffer and load a mutated input and put it into the right spot",
        "TODO: Apply constraints to mutated input here",
        "Allocate a new buffer and put the input into it",
        "TODO: Set the input into the state so it will be handled",
        "Run the test"
    ],
    "docstrings": [
        "\"\"\"\n    example_test_harness.py\n\n    Loads the context of a process into Unicorn Engine,\n    loads a custom (mutated) inputs, and executes the \n    desired code. Designed to be used in conjunction with\n    one of the Unicorn Context Dumper scripts.\n\n    Author:\n        Nathan Voss <njvoss299@gmail.com>\n\"\"\"",
        "\"\"\"\n    Implement target-specific hooks in here.\n    Stub out, skip past, and re-implement necessary functionality as appropriate\n\"\"\""
    ],
    "functions": [
        "unicorn_hook_instruction",
        "main"
    ],
    "classes": []
}