{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Text",
        "Threading",
        "Threading",
        "Tasks",
        "Qoollo",
        "PerformanceCounters",
        "CompositeCounters",
        "Counters",
        "DeltaCountCounter",
        "CompositeCounterDescriptor",
        "name",
        "description",
        "name",
        "description",
        "CounterTypes",
        "DeltaCount",
        "Counter",
        "counters",
        "CompositeDeltaCountCounter",
        "Name",
        "Description",
        "counters",
        "Cast",
        "DeltaCountCounter",
        "name",
        "description",
        "Descriptor",
        "name",
        "description",
        "DeltaCountCounter",
        "name",
        "description",
        "DeltaCountCounter",
        "counters",
        "name",
        "description",
        "counters",
        "ArgumentNullException",
        "_wrappedCounters",
        "counters",
        "ToArray",
        "_wrappedCounters",
        "Length",
        "_wrappedCounters",
        "DeltaCountCounter",
        "NullCounters",
        "Counters",
        "NullDeltaCountCounter",
        "name",
        "description",
        "_wrappedCounters",
        "Decrement",
        "i",
        "_wrappedCounters",
        "Length",
        "i",
        "_wrappedCounters",
        "i",
        "Decrement",
        "result",
        "value",
        "_wrappedCounters",
        "DecrementBy",
        "value",
        "i",
        "_wrappedCounters",
        "Length",
        "i",
        "_wrappedCounters",
        "i",
        "DecrementBy",
        "value",
        "result",
        "_wrappedCounters",
        "Increment",
        "i",
        "_wrappedCounters",
        "Length",
        "i",
        "_wrappedCounters",
        "i",
        "Increment",
        "result",
        "value",
        "_wrappedCounters",
        "IncrementBy",
        "value",
        "i",
        "_wrappedCounters",
        "Length",
        "i",
        "_wrappedCounters",
        "i",
        "IncrementBy",
        "value",
        "result",
        "value",
        "i",
        "_wrappedCounters",
        "Length",
        "i",
        "_wrappedCounters",
        "i",
        "SetValue",
        "value",
        "_wrappedCounters",
        "CurrentValue"
    ],
    "literals": [
        "\"counters\""
    ],
    "variables": [
        "_wrappedCounters",
        "result",
        "i",
        "result",
        "i",
        "result",
        "i",
        "result",
        "i",
        "i",
        "CurrentValue"
    ],
    "comments": [
        "Счетчик мгновенного значения, показывающий последнее наблюдавшееся значение для CompositeCounters",
        "</summary>",
        "Дескриптор для счётчика CompositeNumberOfItemsCounter",
        "</summary>",
        "Конструктор Descriptor",
        "</summary>",
        "<param name=\"name\">Имя счётчика</param>",
        "<param name=\"description\">Описание счётчика</param>",
        "Метод создания счётчика из дескриптора",
        "</summary>",
        "<param name=\"counters\">Оборачиваемые счётчики</param>",
        "<returns>Созданный счётчик</returns>",
        "Метод создания дескриптора для CompositeNumberOfItemsCounter",
        "</summary>",
        "<param name=\"name\">Имя счётчика</param>",
        "<param name=\"description\">Описание счётчика</param>",
        "<returns>Дескриптор</returns>",
        "===================",
        "Оборачиваемые счётчики",
        "</summary>",
        "Конструктор CompositeNumberOfItemsCounter",
        "</summary>",
        "<param name=\"name\">Имя счётчика</param>",
        "<param name=\"description\">Описание счётчика</param>",
        "<param name=\"counters\">Оборачиваемые счётчики</param>",
        "Уменьшить значение на 1",
        "</summary>",
        "<returns>Текущее значение или Counter.FailureNum</returns>",
        "Уменьшить значение на \"value\"",
        "</summary>",
        "<param name=\"value\">Значение, на которое уменьшаем</param>",
        "<returns>Текущее значение или Counter.FailureNum</returns>",
        "Увеличить значение на 1",
        "</summary>",
        "<returns>Текущее значение или Counter.FailureNum</returns>",
        "Увеличить значение на \"value\"",
        "</summary>",
        "<param name=\"value\">Значение, на которое увеличиваем</param>",
        "<returns>Текущее значение или Counter.FailureNum</returns>",
        "Задать значение",
        "</summary>",
        "<param name=\"value\">Новое значение</param>",
        "Получает текущее значение счетчика производительности",
        "</summary>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Descriptor",
        "Counter",
        "CreateCounter",
        "CompositeCounterDescriptor",
        "CreateDescriptor",
        "CompositeDeltaCountCounter",
        "Decrement",
        "DecrementBy",
        "Increment",
        "IncrementBy",
        "SetValue"
    ],
    "classes": [
        "CompositeDeltaCountCounter",
        "Descriptor"
    ]
}