{
    "identifiers": [
        "angular",
        "kopf",
        "header",
        "body",
        "action",
        "confirmCallback",
        "closeCallback",
        "header",
        "body",
        "action",
        "confirmCallback",
        "closeCallback",
        "kopf",
        "$routeProvider",
        "$locationProvider",
        "$locationProvider",
        "$routeProvider",
        "kopf",
        "$scope",
        "AlertService",
        "$scope",
        "$scope",
        "AlertService",
        "newValue",
        "oldValue",
        "$scope",
        "AlertService",
        "$scope",
        "id",
        "AlertService",
        "id",
        "kopf",
        "$scope",
        "AlertService",
        "AceEditorService",
        "ElasticService",
        "$scope",
        "Paginator",
        "AliasFilter",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "Alias",
        "$scope",
        "$scope",
        "ElasticService",
        "previous",
        "$scope",
        "ElasticService",
        "$scope",
        "previous",
        "$scope",
        "$scope",
        "$scope",
        "alias",
        "$scope",
        "alias",
        "$scope",
        "angular",
        "$scope",
        "$scope",
        "AceEditorService",
        "$scope",
        "$scope",
        "$scope",
        "isDefined",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "collection",
        "a",
        "a",
        "indexName",
        "indices",
        "collection",
        "IndexAliases",
        "indexName",
        "$scope",
        "indices",
        "indexAliases",
        "a",
        "aliasName",
        "a",
        "aliases",
        "indexAliases",
        "$scope",
        "$scope",
        "Alias",
        "$scope",
        "collection",
        "$scope",
        "$scope",
        "AlertService",
        "error",
        "AlertService",
        "error",
        "AlertService",
        "$scope",
        "$scope",
        "index",
        "$scope",
        "position",
        "collection",
        "position",
        "index",
        "collection",
        "position",
        "collection",
        "position",
        "$scope",
        "collection",
        "$scope",
        "$scope",
        "AlertService",
        "index",
        "$scope",
        "index",
        "alias",
        "$scope",
        "indexPosition",
        "collection",
        "indexPosition",
        "index",
        "collection",
        "indexPosition",
        "collection",
        "indexPosition",
        "indexAliases",
        "aliasPosition",
        "size",
        "aliasPosition",
        "alias",
        "indexAliases",
        "aliasPosition",
        "indexAliases",
        "aliasPosition",
        "indexAliases",
        "collection",
        "indexPosition",
        "$scope",
        "collection",
        "$scope",
        "$scope",
        "AlertService",
        "$scope",
        "$scope",
        "IndexAliases",
        "collection",
        "$scope",
        "IndexAliases",
        "$scope",
        "collection",
        "adds",
        "deletes",
        "AlertService",
        "ElasticService",
        "adds",
        "deletes",
        "response",
        "AlertService",
        "response",
        "$scope",
        "error",
        "AlertService",
        "error",
        "$scope",
        "ElasticService",
        "indexAliases",
        "$scope",
        "indexAliases",
        "ia",
        "ia",
        "$scope",
        "indexAliases",
        "$scope",
        "$scope",
        "error",
        "AlertService",
        "error",
        "$scope",
        "$scope",
        "ElasticService",
        "$scope",
        "$scope",
        "kopf",
        "$scope",
        "$location",
        "$timeout",
        "AlertService",
        "ElasticService",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "ElasticService",
        "previous",
        "$scope",
        "ElasticService",
        "$scope",
        "current",
        "previous",
        "isDefined",
        "current",
        "$scope",
        "current",
        "$scope",
        "index",
        "$scope",
        "$scope",
        "notEmpty",
        "index",
        "ElasticService",
        "index",
        "metadata",
        "$scope",
        "metadata",
        "error",
        "$scope",
        "AlertService",
        "error",
        "$scope",
        "current",
        "previous",
        "isDefined",
        "current",
        "$scope",
        "current",
        "$scope",
        "index",
        "$scope",
        "notEmpty",
        "index",
        "ElasticService",
        "index",
        "metadata",
        "$scope",
        "metadata",
        "error",
        "$scope",
        "AlertService",
        "error",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "ElasticService",
        "$scope",
        "$scope",
        "$scope",
        "response",
        "$scope",
        "response",
        "error",
        "$scope",
        "AlertService",
        "error",
        "$scope",
        "notEmpty",
        "$scope",
        "notEmpty",
        "$scope",
        "$scope",
        "ElasticService",
        "$scope",
        "$scope",
        "$scope",
        "response",
        "$scope",
        "response",
        "error",
        "$scope",
        "AlertService",
        "error",
        "$scope",
        "$scope",
        "ElasticService",
        "kopf",
        "$scope",
        "$location",
        "$timeout",
        "AlertService",
        "ElasticService",
        "$scope",
        "Benchmark",
        "$scope",
        "Competitor",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "ElasticService",
        "$scope",
        "notEmpty",
        "$scope",
        "$scope",
        "$scope",
        "Competitor",
        "AlertService",
        "$scope",
        "index",
        "$scope",
        "index",
        "$scope",
        "index",
        "$scope",
        "index",
        "$scope",
        "edit",
        "$scope",
        "$",
        "$scope",
        "ElasticService",
        "json",
        "response",
        "$scope",
        "JSONTree",
        "response",
        "$",
        "$scope",
        "error",
        "status",
        "status",
        "AlertService",
        "AlertService",
        "error",
        "error",
        "AlertService",
        "error",
        "kopf",
        "$scope",
        "ElasticService",
        "AlertService",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "ElasticService",
        "$scope",
        "result",
        "$scope",
        "result",
        "error",
        "AlertService",
        "error",
        "$scope",
        "AlertService",
        "kopf",
        "$scope",
        "$location",
        "$timeout",
        "$sce",
        "$http",
        "AlertService",
        "ConfirmDialogService",
        "ElasticService",
        "$scope",
        "$scope",
        "$scope",
        "$",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "ConfirmDialogService",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "AlertService",
        "ElasticService",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "responses",
        "$scope",
        "responses",
        "responses",
        "responses",
        "$scope",
        "results",
        "responses",
        "idx",
        "JSONTree",
        "results",
        "results",
        "$sce",
        "htmlHealth",
        "$scope",
        "results",
        "responses",
        "idx",
        "JSONTree",
        "results",
        "results",
        "$sce",
        "htmlState",
        "$scope",
        "results",
        "responses",
        "idx",
        "JSONTree",
        "results",
        "results",
        "$sce",
        "htmlStats",
        "$scope",
        "results",
        "responses",
        "idx",
        "$scope",
        "results",
        "$scope",
        "AlertService",
        "infoId",
        "failedRequest",
        "AlertService",
        "infoId",
        "AlertService",
        "failedRequest",
        "$scope",
        "defaultDescription",
        "notEmpty",
        "$scope",
        "gist",
        "$scope",
        "isDefined",
        "$scope",
        "isDefined",
        "$scope",
        "$scope",
        "files",
        "health",
        "isDefined",
        "$scope",
        "$scope",
        "files",
        "state",
        "isDefined",
        "$scope",
        "$scope",
        "files",
        "stats",
        "isDefined",
        "$scope",
        "$scope",
        "files",
        "ht",
        "gist",
        "files",
        "gist",
        "$http",
        "data",
        "data",
        "status",
        "headers",
        "config",
        "$scope",
        "Gist",
        "gist",
        "data",
        "AlertService",
        "data",
        "data",
        "status",
        "headers",
        "config",
        "AlertService",
        "data",
        "$scope",
        "gist",
        "$scope",
        "gist",
        "$scope",
        "$scope",
        "localStorage",
        "$scope",
        "$scope",
        "isDefined",
        "localStorage",
        "history",
        "localStorage",
        "h",
        "Gist",
        "h",
        "error",
        "localStorage",
        "history",
        "$scope",
        "$scope",
        "kopf",
        "$scope",
        "$window",
        "ConfirmDialogService",
        "AlertService",
        "ElasticService",
        "AppState",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$",
        "$window",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$window",
        "$scope",
        "AppState",
        "IndexFilter",
        "$scope",
        "AppState",
        "Paginator",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "AppState",
        "NodeFilter",
        "$scope",
        "ElasticService",
        "newValue",
        "oldValue",
        "$scope",
        "ElasticService",
        "$scope",
        "ElasticService",
        "$scope",
        "ElasticService",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "previous",
        "$scope",
        "ElasticService",
        "$scope",
        "previous",
        "$scope",
        "ElasticService",
        "$scope",
        "shard",
        "$scope",
        "shard",
        "$scope",
        "nodes",
        "$scope",
        "nodes",
        "node",
        "$scope",
        "node",
        "$scope",
        "indices",
        "$scope",
        "indices",
        "$scope",
        "$scope",
        "$scope",
        "index",
        "ElasticService",
        "index",
        "response",
        "AlertService",
        "response",
        "error",
        "AlertService",
        "error",
        "$scope",
        "index",
        "ConfirmDialogService",
        "index",
        "$scope",
        "index",
        "$scope",
        "index",
        "ElasticService",
        "index",
        "response",
        "ElasticService",
        "error",
        "AlertService",
        "error",
        "$scope",
        "index",
        "ConfirmDialogService",
        "index",
        "$scope",
        "index",
        "$scope",
        "index",
        "ElasticService",
        "index",
        "response",
        "AlertService",
        "response",
        "ElasticService",
        "error",
        "AlertService",
        "error",
        "$scope",
        "index",
        "ConfirmDialogService",
        "index",
        "$scope",
        "index",
        "$scope",
        "index",
        "ElasticService",
        "index",
        "response",
        "AlertService",
        "response",
        "error",
        "AlertService",
        "error",
        "$scope",
        "index",
        "ConfirmDialogService",
        "index",
        "$scope",
        "index",
        "$scope",
        "ElasticService",
        "response",
        "AlertService",
        "response",
        "ElasticService",
        "error",
        "AlertService",
        "error",
        "$scope",
        "ElasticService",
        "response",
        "AlertService",
        "response",
        "ElasticService",
        "error",
        "AlertService",
        "error",
        "$scope",
        "index",
        "ConfirmDialogService",
        "index",
        "ElasticService",
        "index",
        "$scope",
        "index",
        "ConfirmDialogService",
        "index",
        "ElasticService",
        "index",
        "$scope",
        "$scope",
        "index",
        "index",
        "ConfirmDialogService",
        "indices",
        "ElasticService",
        "indices",
        "$scope",
        "$scope",
        "index",
        "index",
        "ConfirmDialogService",
        "indices",
        "ElasticService",
        "indices",
        "$scope",
        "$scope",
        "index",
        "index",
        "ConfirmDialogService",
        "indices",
        "$scope",
        "indices",
        "$scope",
        "$scope",
        "index",
        "index",
        "ConfirmDialogService",
        "indices",
        "$scope",
        "indices",
        "$scope",
        "$scope",
        "index",
        "index",
        "ConfirmDialogService",
        "indices",
        "$scope",
        "indices",
        "$scope",
        "$scope",
        "index",
        "index",
        "ConfirmDialogService",
        "indices",
        "$scope",
        "indices",
        "$scope",
        "index",
        "ElasticService",
        "index",
        "metadata",
        "$scope",
        "index",
        "metadata",
        "error",
        "AlertService",
        "error",
        "$scope",
        "index",
        "ElasticService",
        "index",
        "metadata",
        "$scope",
        "index",
        "metadata",
        "error",
        "AlertService",
        "error",
        "$scope",
        "nodeId",
        "ElasticService",
        "nodeId",
        "nodeStats",
        "$scope",
        "nodeStats",
        "nodeStats",
        "error",
        "AlertService",
        "error",
        "$scope",
        "shard",
        "index",
        "nodeId",
        "ElasticService",
        "shard",
        "index",
        "nodeId",
        "stats",
        "$scope",
        "shard",
        "stats",
        "error",
        "AlertService",
        "error",
        "$scope",
        "shard",
        "index",
        "fromNode",
        "toNode",
        "ElasticService",
        "shard",
        "index",
        "fromNode",
        "toNode",
        "response",
        "ElasticService",
        "$scope",
        "AlertService",
        "response",
        "error",
        "$scope",
        "AlertService",
        "error",
        "$scope",
        "toNode",
        "$scope",
        "$scope",
        "$scope",
        "ConfirmDialogService",
        "$scope",
        "shard",
        "index",
        "fromNode",
        "toNode",
        "$scope",
        "index",
        "node",
        "$scope",
        "shard",
        "index",
        "shard",
        "node",
        "shard",
        "index",
        "$scope",
        "node",
        "index",
        "s",
        "s",
        "shard",
        "shards",
        "sameShard",
        "kopf",
        "$scope",
        "$location",
        "$timeout",
        "AlertService",
        "ElasticService",
        "$scope",
        "$",
        "$",
        "$",
        "$scope",
        "$scope",
        "ClusterSettings",
        "ElasticService",
        "$scope",
        "$scope",
        "ElasticService",
        "settings",
        "response",
        "AlertService",
        "response",
        "ElasticService",
        "error",
        "AlertService",
        "error",
        "kopf",
        "$scope",
        "ElasticService",
        "$scope",
        "$scope",
        "ElasticService",
        "newValue",
        "oldValue",
        "$scope",
        "ElasticService",
        "kopf",
        "$scope",
        "ConfirmDialogService",
        "$scope",
        "ConfirmDialogService",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "kopf",
        "$scope",
        "AlertService",
        "ElasticService",
        "AceEditorService",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$",
        "$scope",
        "$scope",
        "ElasticService",
        "$scope",
        "meta",
        "meta",
        "meta",
        "$scope",
        "body",
        "error",
        "AlertService",
        "error",
        "$scope",
        "$scope",
        "AlertService",
        "$scope",
        "isDefined",
        "$scope",
        "AlertService",
        "$scope",
        "bodyString",
        "body",
        "body",
        "$scope",
        "body",
        "$scope",
        "$scope",
        "body",
        "$scope",
        "bodyString",
        "body",
        "ElasticService",
        "$scope",
        "bodyString",
        "response",
        "ElasticService",
        "error",
        "AlertService",
        "error",
        "$scope",
        "isDefined",
        "$scope",
        "$scope",
        "AceEditorService",
        "$scope",
        "ElasticService",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "kopf",
        "$scope",
        "DebugService",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "DebugService",
        "newValue",
        "oldValue",
        "$scope",
        "$scope",
        "DebugService",
        "kopf",
        "$scope",
        "$location",
        "$sce",
        "$window",
        "AlertService",
        "ElasticService",
        "ExternalSettingsService",
        "PageService",
        "$scope",
        "$scope",
        "ModalControls",
        "$scope",
        "ElasticService",
        "newValue",
        "oldValue",
        "ElasticService",
        "version",
        "version",
        "version",
        "major",
        "parseInt",
        "$scope",
        "AlertService",
        "$scope",
        "ExternalSettingsService",
        "$scope",
        "name",
        "name",
        "regExp",
        "$window",
        "isDefined",
        "results",
        "results",
        "$scope",
        "$location",
        "$scope",
        "$location",
        "isDefined",
        "location",
        "host",
        "location",
        "url",
        "host",
        "url",
        "url",
        "host",
        "$location",
        "$location",
        "$location",
        "ElasticService",
        "host",
        "error",
        "AlertService",
        "error",
        "error",
        "$scope",
        "ElasticService",
        "$scope",
        "isDefined",
        "ElasticService",
        "$scope",
        "title",
        "info",
        "$scope",
        "title",
        "$scope",
        "$sce",
        "JSONTree",
        "info",
        "$",
        "kopf",
        "$scope",
        "ElasticService",
        "AlertService",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "ElasticService",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "result",
        "$scope",
        "result",
        "error",
        "AlertService",
        "error",
        "$scope",
        "$scope",
        "ElasticService",
        "current",
        "previous",
        "$scope",
        "ElasticService",
        "$scope",
        "$scope",
        "ElasticService",
        "kopf",
        "$scope",
        "$location",
        "AlertService",
        "ElasticService",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "editableSettings",
        "setting",
        "notEmpty",
        "editableSettings",
        "setting",
        "newSettings",
        "setting",
        "editableSettings",
        "setting",
        "ElasticService",
        "index",
        "newSettings",
        "response",
        "AlertService",
        "response",
        "ElasticService",
        "error",
        "AlertService",
        "error",
        "$scope",
        "$location",
        "ElasticService",
        "index",
        "metadata",
        "$scope",
        "index",
        "$scope",
        "metadata",
        "$scope",
        "EditableIndexSettings",
        "$scope",
        "error",
        "AlertService",
        "index",
        "error",
        "kopf",
        "$scope",
        "ConfirmDialogService",
        "AlertService",
        "AceEditorService",
        "ElasticService",
        "$scope",
        "$scope",
        "Paginator",
        "IndexTemplateFilter",
        "$scope",
        "IndexTemplate",
        "$scope",
        "previous",
        "$scope",
        "$scope",
        "$scope",
        "angular",
        "$scope",
        "$scope",
        "AceEditorService",
        "$scope",
        "TemplateBase",
        "$scope",
        "ElasticService",
        "templates",
        "$scope",
        "templates",
        "$scope",
        "$scope",
        "error",
        "AlertService",
        "error",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "isDefined",
        "$scope",
        "$scope",
        "$scope",
        "ElasticService",
        "$scope",
        "response",
        "$scope",
        "AlertService",
        "response",
        "error",
        "AlertService",
        "error",
        "AlertService",
        "AlertService",
        "$scope",
        "template",
        "ConfirmDialogService",
        "template",
        "template",
        "ElasticService",
        "template",
        "response",
        "AlertService",
        "response",
        "$scope",
        "error",
        "AlertService",
        "error",
        "$scope",
        "template",
        "$scope",
        "template",
        "$scope",
        "template",
        "$scope",
        "$scope",
        "$scope",
        "kopf",
        "$scope",
        "$location",
        "ExternalSettingsService",
        "ElasticService",
        "AlertService",
        "HostHistoryService",
        "$scope",
        "ExternalSettingsService",
        "$scope",
        "ExternalSettingsService",
        "$scope",
        "$scope",
        "ElasticService",
        "$scope",
        "HostHistoryService",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "ElasticService",
        "newValue",
        "oldValue",
        "$scope",
        "ElasticService",
        "$scope",
        "ElasticService",
        "newValue",
        "oldValue",
        "isDefined",
        "ElasticService",
        "$scope",
        "ElasticService",
        "$scope",
        "ElasticService",
        "$scope",
        "ElasticService",
        "$scope",
        "ElasticService",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "notEmpty",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "host",
        "ElasticService",
        "host",
        "HostHistoryService",
        "ElasticService",
        "$scope",
        "HostHistoryService",
        "error",
        "AlertService",
        "error",
        "$scope",
        "ElasticService",
        "ElasticService",
        "$scope",
        "ExternalSettingsService",
        "$scope",
        "$scope",
        "ExternalSettingsService",
        "$scope",
        "kopf",
        "$scope",
        "ConfirmDialogService",
        "AlertService",
        "ElasticService",
        "AppState",
        "$scope",
        "$scope",
        "$scope",
        "field",
        "$scope",
        "field",
        "$scope",
        "$scope",
        "$scope",
        "field",
        "$scope",
        "AppState",
        "NodeFilter",
        "$scope",
        "$scope",
        "newValue",
        "oldValue",
        "$scope",
        "$scope",
        "ElasticService",
        "newValue",
        "oldValue",
        "$scope",
        "$scope",
        "ElasticService",
        "$scope",
        "nodes",
        "node",
        "$scope",
        "node",
        "$scope",
        "nodeId",
        "ElasticService",
        "nodeId",
        "nodeStats",
        "$scope",
        "nodeStats",
        "nodeStats",
        "error",
        "AlertService",
        "error",
        "kopf",
        "$scope",
        "ConfirmDialogService",
        "AlertService",
        "AceEditorService",
        "ElasticService",
        "$scope",
        "$scope",
        "PercolatorsPage",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "PercolateQuery",
        "$scope",
        "ElasticService",
        "previous",
        "$scope",
        "ElasticService",
        "$scope",
        "angular",
        "$scope",
        "$scope",
        "AceEditorService",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "id",
        "queries",
        "id",
        "$scope",
        "$scope",
        "field",
        "q",
        "field",
        "field",
        "queries",
        "q",
        "queries",
        "$scope",
        "query",
        "ConfirmDialogService",
        "query",
        "query",
        "query",
        "ElasticService",
        "query",
        "query",
        "response",
        "query",
        "ElasticService",
        "refreshIndex",
        "response",
        "AlertService",
        "response",
        "$scope",
        "error",
        "AlertService",
        "error",
        "error",
        "AlertService",
        "error",
        "$scope",
        "notEmpty",
        "$scope",
        "notEmpty",
        "$scope",
        "AlertService",
        "$scope",
        "$scope",
        "isDefined",
        "$scope",
        "AlertService",
        "notEmpty",
        "$scope",
        "AlertService",
        "ElasticService",
        "$scope",
        "response",
        "$scope",
        "ElasticService",
        "refreshIndex",
        "response",
        "AlertService",
        "response",
        "$scope",
        "$scope",
        "$scope",
        "error",
        "AlertService",
        "error",
        "error",
        "AlertService",
        "error",
        "$scope",
        "isDefined",
        "$scope",
        "$scope",
        "AlertService",
        "$scope",
        "isDefined",
        "$scope",
        "queries",
        "body",
        "queries",
        "ElasticService",
        "$scope",
        "body",
        "percolators",
        "$scope",
        "percolators",
        "error",
        "AlertService",
        "error",
        "error",
        "AlertService",
        "$scope",
        "$scope",
        "ElasticService",
        "$scope",
        "kopf",
        "$scope",
        "$location",
        "$timeout",
        "ExplainService",
        "AlertService",
        "AceEditorService",
        "ElasticService",
        "ClipboardService",
        "$scope",
        "Request",
        "decodeURIComponent",
        "$location",
        "decodeURIComponent",
        "$location",
        "decodeURIComponent",
        "$location",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "text",
        "$scope",
        "URLAutocomplete",
        "$scope",
        "$scope",
        "autocomplete",
        "text",
        "$scope",
        "$scope",
        "ElasticService",
        "encodeURI",
        "$scope",
        "$scope",
        "method",
        "host",
        "path",
        "method",
        "curl",
        "body",
        "ClipboardService",
        "curl",
        "AlertService",
        "AlertService",
        "$scope",
        "localStorage",
        "isDefined",
        "rawHistory",
        "rawHistory",
        "h",
        "history",
        "Request",
        "h",
        "error",
        "localStorage",
        "history",
        "$scope",
        "request",
        "$scope",
        "encodeURI",
        "request",
        "$scope",
        "request",
        "$scope",
        "request",
        "$scope",
        "request",
        "$scope",
        "path",
        "method",
        "body",
        "Request",
        "path",
        "method",
        "body",
        "i",
        "$scope",
        "i",
        "$scope",
        "i",
        "request",
        "exists",
        "exists",
        "$scope",
        "request",
        "$scope",
        "$scope",
        "$scope",
        "localStorage",
        "historyRaw",
        "data",
        "$scope",
        "data",
        "successCallback",
        "notEmpty",
        "$scope",
        "encodeURI",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "AlertService",
        "ElasticService",
        "$scope",
        "path",
        "$scope",
        "response",
        "successCallback",
        "response",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "error",
        "status",
        "status",
        "AlertService",
        "_handleResponse",
        "error",
        "ElasticService",
        "path",
        "AlertService",
        "url",
        "AlertService",
        "$scope",
        "doSendRequest",
        "response",
        "_handleResponse",
        "response",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "isExplain",
        "isSearch",
        "$scope",
        "isSearch",
        "$scope",
        "ExplainService",
        "$scope",
        "AlertService",
        "doSendRequest",
        "response",
        "$scope",
        "ExplainService",
        "response",
        "$scope",
        "response",
        "$scope",
        "doCSV",
        "$scope",
        "Blob",
        "csv",
        "angular",
        "downloadLink",
        "blob",
        "downloadLink",
        "downloadLink",
        "$scope",
        "isDefined",
        "$scope",
        "$scope",
        "AceEditorService",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "ElasticService",
        "mapping",
        "$scope",
        "mapping",
        "$scope",
        "$scope",
        "error",
        "AlertService",
        "error",
        "$scope",
        "kopf",
        "$scope",
        "ConfirmDialogService",
        "AlertService",
        "ElasticService",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "Paginator",
        "SnapshotFilter",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "Repository",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "current",
        "previous",
        "$scope",
        "$scope",
        "ElasticService",
        "previous",
        "$scope",
        "$scope",
        "$scope",
        "ElasticService",
        "$scope",
        "indices",
        "indices",
        "idx",
        "idx",
        "$scope",
        "indices",
        "$scope",
        "previous",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "notEmpty",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "body",
        "paramname",
        "angular",
        "paramname",
        "body",
        "paramname",
        "paramname",
        "body",
        "$scope",
        "repository",
        "ElasticService",
        "repository",
        "response",
        "AlertService",
        "response",
        "notEmpty",
        "$scope",
        "$scope",
        "repository",
        "$scope",
        "$scope",
        "error",
        "AlertService",
        "error",
        "$scope",
        "repository",
        "ConfirmDialogService",
        "repository",
        "repository",
        "$scope",
        "repository",
        "$scope",
        "angular",
        "$scope",
        "$scope",
        "body",
        "$scope",
        "$scope",
        "body",
        "$scope",
        "$scope",
        "body",
        "$scope",
        "$scope",
        "body",
        "$scope",
        "$scope",
        "body",
        "$scope",
        "$scope",
        "body",
        "$scope",
        "ElasticService",
        "$scope",
        "$scope",
        "body",
        "response",
        "AlertService",
        "$scope",
        "error",
        "AlertService",
        "error",
        "$scope",
        "$scope",
        "ElasticService",
        "$scope",
        "$scope",
        "response",
        "AlertService",
        "$scope",
        "error",
        "AlertService",
        "error",
        "error",
        "AlertService",
        "error",
        "$scope",
        "ElasticService",
        "response",
        "$scope",
        "response",
        "error",
        "$scope",
        "AlertService",
        "error",
        "$scope",
        "isDefined",
        "$scope",
        "AlertService",
        "isDefined",
        "$scope",
        "AlertService",
        "isDefined",
        "$scope",
        "$scope",
        "body",
        "$scope",
        "isDefined",
        "$scope",
        "body",
        "$scope",
        "$scope",
        "body",
        "$scope",
        "ElasticService",
        "$scope",
        "$scope",
        "body",
        "response",
        "AlertService",
        "$scope",
        "error",
        "AlertService",
        "error",
        "$scope",
        "snapshot",
        "ConfirmDialogService",
        "snapshot",
        "snapshot",
        "ElasticService",
        "$scope",
        "snapshot",
        "response",
        "AlertService",
        "response",
        "$scope",
        "error",
        "AlertService",
        "error",
        "$scope",
        "repository",
        "ElasticService",
        "repository",
        "response",
        "$scope",
        "response",
        "$scope",
        "$scope",
        "error",
        "$scope",
        "$scope",
        "$scope",
        "AlertService",
        "error",
        "$scope",
        "snapshot",
        "$scope",
        "snapshot",
        "$scope",
        "$scope",
        "$scope",
        "repository",
        "$scope",
        "repository",
        "$scope",
        "repository",
        "$scope",
        "$scope",
        "$scope",
        "kopf",
        "$scope",
        "ConfirmDialogService",
        "AlertService",
        "AceEditorService",
        "ElasticService",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "Paginator",
        "WarmerFilter",
        "$scope",
        "$scope",
        "$scope",
        "Warmer",
        "$scope",
        "$scope",
        "ElasticService",
        "previous",
        "$scope",
        "ElasticService",
        "$scope",
        "previous",
        "$scope",
        "$scope",
        "$scope",
        "angular",
        "$scope",
        "$scope",
        "AceEditorService",
        "$scope",
        "$scope",
        "$scope",
        "isDefined",
        "$scope",
        "$scope",
        "$scope",
        "ElasticService",
        "$scope",
        "response",
        "$scope",
        "AlertService",
        "response",
        "error",
        "AlertService",
        "error",
        "AlertService",
        "$scope",
        "warmer",
        "ConfirmDialogService",
        "warmer",
        "warmer",
        "ElasticService",
        "warmer",
        "response",
        "AlertService",
        "response",
        "$scope",
        "error",
        "AlertService",
        "error",
        "$scope",
        "isDefined",
        "$scope",
        "ElasticService",
        "$scope",
        "warmers",
        "$scope",
        "warmers",
        "$scope",
        "$scope",
        "error",
        "$scope",
        "$scope",
        "$scope",
        "AlertService",
        "error",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "ElasticService",
        "$scope",
        "kopf",
        "JSONTree",
        "kopf",
        "$sce",
        "scope",
        "element",
        "attrs",
        "requires",
        "scope",
        "value",
        "value",
        "result",
        "JSONTree",
        "value",
        "invalidJsonError",
        "result",
        "invalidJsonError",
        "result",
        "scope",
        "$sce",
        "result",
        "directive",
        "kopf",
        "JSONTree",
        "kopf",
        "$location",
        "ElasticService",
        "elem",
        "attrs",
        "attrs",
        "ElasticService",
        "attrs",
        "attrs",
        "attrs",
        "attrs",
        "target",
        "icon",
        "text",
        "kopf",
        "$document",
        "scope",
        "element",
        "attrs",
        "$",
        "$target",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "$document",
        "handler",
        "element",
        "$document",
        "handler",
        "kopf",
        "scope",
        "elem",
        "attrs",
        "scope",
        "attrs",
        "elem",
        "sortIcon",
        "sorts",
        "scope",
        "sortIcon",
        "sortIcon",
        "scope",
        "elem",
        "attrs",
        "scope",
        "scope",
        "updateSortingIcon",
        "scope",
        "elem",
        "attrs",
        "scope",
        "scope",
        "updateSortingIcon",
        "scope",
        "elem",
        "attrs",
        "link",
        "elem",
        "attrs",
        "attrs",
        "attrs",
        "kopf",
        "elem",
        "attr",
        "attr",
        "index",
        "aliases",
        "index",
        "aliases",
        "IndexAliases",
        "cloned",
        "alias",
        "alias",
        "cloned",
        "IndexAliases",
        "original",
        "modified",
        "modified",
        "ia",
        "original",
        "origIA",
        "ia",
        "origIA",
        "isNew",
        "ia",
        "alias",
        "origIA",
        "originalAlias",
        "alias",
        "originalAlias",
        "originalAliases",
        "differences",
        "alias",
        "isNew",
        "ia",
        "alias",
        "differences",
        "alias",
        "differences",
        "alias",
        "index",
        "indexRouting",
        "searchRouting",
        "isDefined",
        "alias",
        "alias",
        "isDefined",
        "index",
        "index",
        "isDefined",
        "isDefined",
        "indexRouting",
        "indexRouting",
        "isDefined",
        "searchRouting",
        "searchRouting",
        "notEmpty",
        "notEmpty",
        "otherAlias",
        "otherAlias",
        "otherAlias",
        "otherAlias",
        "otherAlias",
        "otherAlias",
        "equal",
        "info",
        "info",
        "isDefined",
        "notEmpty",
        "info",
        "info",
        "notEmpty",
        "info",
        "notEmpty",
        "info",
        "info",
        "Alias",
        "health",
        "state",
        "nodesStats",
        "settings",
        "nodes",
        "health",
        "health",
        "health",
        "health",
        "health",
        "health",
        "health",
        "health",
        "health",
        "getTimeString",
        "state",
        "state",
        "settings",
        "nodes",
        "nodeId",
        "nodesStats",
        "nodeId",
        "nodes",
        "nodeId",
        "Node",
        "nodeId",
        "nodeStats",
        "nodeInfo",
        "nodeId",
        "state",
        "node",
        "node",
        "readablizeBytes",
        "totalSize",
        "totalSize",
        "result",
        "result",
        "lines",
        "header",
        "lines",
        "line",
        "columns",
        "column",
        "i",
        "header",
        "column",
        "i",
        "columns",
        "lastColumn",
        "header",
        "columns",
        "i",
        "line",
        "start",
        "end",
        "columns",
        "values",
        "health",
        "state",
        "stats",
        "nodesStats",
        "settings",
        "aliases",
        "nodes",
        "main",
        "main",
        "health",
        "health",
        "health",
        "health",
        "health",
        "health",
        "health",
        "health",
        "health",
        "getTimeString",
        "state",
        "state",
        "getProperty",
        "settings",
        "getProperty",
        "settings",
        "transientAllocation",
        "transientAllocation",
        "persistentAllocation",
        "settings",
        "nodes",
        "nodeId",
        "nodesStats",
        "nodeId",
        "nodes",
        "nodeId",
        "Node",
        "nodeId",
        "nodeStats",
        "nodeInfo",
        "nodeId",
        "state",
        "node",
        "node",
        "state",
        "indicesNames",
        "indexName",
        "stats",
        "indexName",
        "aliases",
        "indexName",
        "Index",
        "indexName",
        "state",
        "indexStats",
        "indexAliases",
        "index",
        "specialIndices",
        "index",
        "isDefined",
        "state",
        "state",
        "indexName",
        "state",
        "indexName",
        "indices",
        "Index",
        "indexName",
        "closedIndices",
        "specialIndices",
        "closedIndices",
        "stats",
        "hasData",
        "stats",
        "hasData",
        "stats",
        "oldCluster",
        "ClusterChanges",
        "isDefined",
        "oldCluster",
        "oldCluster",
        "oldCluster",
        "node",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "node",
        "node",
        "isDefined",
        "node",
        "changes",
        "node",
        "oldCluster",
        "nodes",
        "changes",
        "nodes",
        "node",
        "i",
        "oldCluster",
        "i",
        "oldCluster",
        "i",
        "node",
        "node",
        "isDefined",
        "node",
        "changes",
        "node",
        "oldCluster",
        "index",
        "i",
        "indices",
        "i",
        "indices",
        "i",
        "index",
        "index",
        "isDefined",
        "index",
        "changes",
        "index",
        "oldCluster",
        "indices",
        "equalNumberOfIndices",
        "changes",
        "indices",
        "index",
        "i",
        "oldCluster",
        "i",
        "oldCluster",
        "i",
        "index",
        "index",
        "isDefined",
        "index",
        "changes",
        "index",
        "oldCluster",
        "changes",
        "docDelta",
        "oldCluster",
        "changes",
        "dataDelta",
        "changes",
        "index",
        "index",
        "state",
        "indicesNames",
        "indexName",
        "indicesRouting",
        "indexName",
        "totalShards",
        "shardNum",
        "indicesRouting",
        "indexName",
        "shardNum",
        "shardData",
        "shardData",
        "isDefined",
        "unassignedShards",
        "shardData",
        "unassignedShards",
        "shardData",
        "unassignedShards",
        "shardData",
        "Shard",
        "shardData",
        "Shard",
        "shardData",
        "shard",
        "shard",
        "isDefined",
        "shards",
        "key",
        "shards",
        "key",
        "shards",
        "key",
        "shard",
        "nodeId",
        "indexName",
        "shards",
        "nodeId",
        "indexName",
        "isDefined",
        "allocated",
        "allocated",
        "indexName",
        "unassignedShards",
        "indexName",
        "isDefined",
        "unassigned",
        "unassigned",
        "delta",
        "delta",
        "readablizeBytes",
        "delta",
        "delta",
        "isDefined",
        "isDefined",
        "isDefined",
        "isDefined",
        "node",
        "isDefined",
        "node",
        "node",
        "isDefined",
        "node",
        "isDefined",
        "isDefined",
        "isDefined",
        "isDefined",
        "index",
        "isDefined",
        "index",
        "index",
        "isDefined",
        "index",
        "health",
        "health",
        "health",
        "health",
        "health",
        "health",
        "health",
        "health",
        "health",
        "health",
        "health",
        "getTimeString",
        "data",
        "data",
        "index",
        "getProperty",
        "data",
        "index",
        "indexMapping",
        "settings",
        "instance",
        "settings",
        "valid",
        "setting",
        "instance",
        "setting",
        "getProperty",
        "currentSettings",
        "setting",
        "settings",
        "setting",
        "instance",
        "setting",
        "getProperty",
        "settings",
        "setting",
        "url",
        "withCredentials",
        "url",
        "url",
        "url",
        "url",
        "withCredentials",
        "notEmpty",
        "url",
        "protectedUrl",
        "url",
        "isDefined",
        "connectionParts",
        "connectionParts",
        "connectionParts",
        "connectionParts",
        "connectionParts",
        "url",
        "header",
        "header",
        "data",
        "data",
        "data",
        "NodeHotThreads",
        "data",
        "indexName",
        "clusterState",
        "indexStats",
        "aliases",
        "indexName",
        "isDefined",
        "aliases",
        "aliases",
        "isDefined",
        "indexAliases",
        "aliases",
        "isDefined",
        "clusterState",
        "getProperty",
        "clusterState",
        "isDefined",
        "routing",
        "routing",
        "indexName",
        "shards",
        "routing",
        "indexName",
        "shardMap",
        "getProperty",
        "indexStats",
        "getProperty",
        "indexStats",
        "getProperty",
        "indexStats",
        "getProperty",
        "indexStats",
        "isDefined",
        "clusterState",
        "isDefined",
        "clusterState",
        "clusterState",
        "shardsMap",
        "shardNum",
        "shardsMap",
        "shardNum",
        "shard",
        "shard",
        "instance",
        "index",
        "index",
        "index",
        "index",
        "metadata",
        "index",
        "metadata",
        "metadata",
        "a",
        "b",
        "a",
        "b",
        "getProperty",
        "analyzers",
        "setting",
        "setting",
        "setting",
        "analyzer",
        "analyzer",
        "analyzer",
        "$",
        "analyzer",
        "analyzers",
        "analyzers",
        "analyzer",
        "analyzers",
        "a",
        "b",
        "a",
        "b",
        "analyzableTypes",
        "isDefined",
        "fields",
        "fields",
        "a",
        "b",
        "a",
        "b",
        "parent",
        "fields",
        "parent",
        "parent",
        "field",
        "fields",
        "isDefined",
        "fields",
        "field",
        "fields",
        "field",
        "addPrefix",
        "prefix",
        "field",
        "prefix",
        "multiPrefix",
        "fields",
        "field",
        "validFields",
        "validFields",
        "multiProps",
        "fields",
        "field",
        "fields",
        "field",
        "nestedType",
        "objectType",
        "isDefined",
        "fields",
        "field",
        "prefix",
        "field",
        "fields",
        "field",
        "validFields",
        "validFields",
        "nestedProperties",
        "isDefined",
        "fields",
        "field",
        "isAnalyzable",
        "fields",
        "field",
        "validFields",
        "prefix",
        "field",
        "validFields",
        "name",
        "body",
        "name",
        "body",
        "nodeId",
        "nodeStats",
        "nodeInfo",
        "nodeId",
        "nodeInfo",
        "nodeInfo",
        "nodeInfo",
        "nodeInfo",
        "nodeInfo",
        "nodeInfo",
        "getProperty",
        "nodeInfo",
        "attributes",
        "attributes",
        "attributes",
        "master",
        "client",
        "data",
        "client",
        "client",
        "master",
        "data",
        "nodeStats",
        "nodeStats",
        "readablizeBytes",
        "getProperty",
        "readablizeBytes",
        "getProperty",
        "getProperty",
        "readablizeBytes",
        "getProperty",
        "getProperty",
        "getProperty",
        "diskUsedInBytes",
        "usedRatio",
        "getProperty",
        "getProperty",
        "node",
        "node",
        "data",
        "data",
        "lines",
        "lines",
        "BackwardCompatible",
        "BackwardCompatible",
        "lines",
        "lines",
        "HeaderLines",
        "lines",
        "HeaderLines",
        "line",
        "line",
        "thread",
        "thread",
        "thread",
        "line",
        "blankLine",
        "thread",
        "thread",
        "line",
        "thread",
        "HotThread",
        "line",
        "threads",
        "thread",
        "threads",
        "id",
        "stats",
        "id",
        "stats",
        "stats",
        "queryInfo",
        "queryInfo",
        "queryInfo",
        "queryInfo",
        "error",
        "other",
        "other",
        "PercolateQuery",
        "other",
        "other",
        "other",
        "size",
        "total",
        "percolators",
        "size",
        "total",
        "percolators",
        "size",
        "total",
        "total",
        "size",
        "total",
        "size",
        "size",
        "percolators",
        "total",
        "name",
        "info",
        "name",
        "info",
        "info",
        "json",
        "fsSettings",
        "json",
        "urlSettings",
        "json",
        "s3Settings",
        "json",
        "hdfsSettings",
        "json",
        "azureSettings",
        "json",
        "notEmpty",
        "notEmpty",
        "fsRequired",
        "urlRequired",
        "s3Required",
        "hdfsRequired",
        "required",
        "required",
        "setting",
        "notEmpty",
        "repository",
        "setting",
        "repository",
        "setting",
        "availableSettings",
        "availableSettings",
        "setting",
        "notEmpty",
        "currentSettings",
        "setting",
        "settings",
        "setting",
        "currentSettings",
        "setting",
        "settings",
        "routing",
        "routing",
        "routing",
        "routing",
        "routing",
        "routing",
        "shard",
        "index",
        "stats",
        "shard",
        "index",
        "stats",
        "info",
        "info",
        "info",
        "info",
        "info",
        "info",
        "info",
        "info",
        "info",
        "info",
        "info",
        "token",
        "startOffset",
        "endOffset",
        "position",
        "token",
        "startOffset",
        "endOffset",
        "position",
        "version",
        "checkVersion",
        "value",
        "valid",
        "checkVersion",
        "version",
        "major",
        "parseInt",
        "parts",
        "minor",
        "parseInt",
        "parts",
        "patch",
        "parseInt",
        "parts",
        "valid",
        "major",
        "minor",
        "patch",
        "value",
        "other",
        "major",
        "other",
        "major",
        "other",
        "minor",
        "other",
        "major",
        "other",
        "minor",
        "other",
        "patch",
        "other",
        "higherMajor",
        "higherMinor",
        "higherPatch",
        "id",
        "index",
        "body",
        "id",
        "index",
        "body",
        "body",
        "kopf",
        "e",
        "UNITS",
        "e",
        "UNITS",
        "stringify",
        "kopf",
        "prefix",
        "prefix",
        "elements",
        "prefix",
        "angular",
        "elements",
        "element",
        "strStartsWith",
        "element",
        "prefix",
        "filtered",
        "element",
        "filtered",
        "kopf",
        "seconds",
        "idx",
        "UNITS",
        "idx",
        "seconds",
        "UNIT_MEASURE",
        "UNITS",
        "idx",
        "amount",
        "result",
        "amount",
        "UNITS",
        "idx",
        "result",
        "seconds",
        "stringify",
        "seconds",
        "target",
        "ace",
        "ace",
        "target",
        "value",
        "value",
        "isDefined",
        "content",
        "content",
        "content",
        "content",
        "content",
        "error",
        "error",
        "content",
        "index",
        "alias",
        "index",
        "alias",
        "AliasFilter",
        "other",
        "other",
        "other",
        "other",
        "notEmpty",
        "notEmpty",
        "indexAlias",
        "notEmpty",
        "matches",
        "indexAlias",
        "matches",
        "notEmpty",
        "matches",
        "indexAlias",
        "matches",
        "i",
        "aliases",
        "i",
        "aliases",
        "i",
        "matches",
        "alias",
        "matches",
        "competitor",
        "competitor",
        "body",
        "notEmpty",
        "body",
        "notEmpty",
        "body",
        "body",
        "c",
        "c",
        "notEmpty",
        "body",
        "notEmpty",
        "body",
        "notEmpty",
        "body",
        "notEmpty",
        "body",
        "body",
        "body",
        "notEmpty",
        "body",
        "notEmpty",
        "isNumber",
        "body",
        "parseInt",
        "notEmpty",
        "isNumber",
        "body",
        "parseInt",
        "notEmpty",
        "isNumber",
        "body",
        "parseInt",
        "notEmpty",
        "isNumber",
        "body",
        "parseInt",
        "notEmpty",
        "body",
        "index",
        "index",
        "notEmpty",
        "body",
        "body",
        "body",
        "body",
        "body",
        "body",
        "body",
        "notEmpty",
        "body",
        "field",
        "field",
        "notEmpty",
        "body",
        "key",
        "key",
        "body",
        "title",
        "url",
        "getTimeString",
        "title",
        "url",
        "json",
        "json",
        "json",
        "json",
        "name",
        "closed",
        "special",
        "healthy",
        "asc",
        "timestamp",
        "name",
        "closed",
        "special",
        "healthy",
        "asc",
        "timestamp",
        "a",
        "b",
        "asc",
        "a",
        "b",
        "b",
        "a",
        "IndexFilter",
        "other",
        "other",
        "other",
        "other",
        "other",
        "other",
        "other",
        "other",
        "notEmpty",
        "index",
        "index",
        "matches",
        "index",
        "matches",
        "index",
        "matches",
        "matches",
        "notEmpty",
        "matches",
        "regExp",
        "index",
        "matches",
        "idx",
        "index",
        "idx",
        "matches",
        "regExp",
        "index",
        "idx",
        "err",
        "matches",
        "index",
        "matches",
        "idx",
        "index",
        "idx",
        "index",
        "idx",
        "matches",
        "matches",
        "alias",
        "matches",
        "name",
        "template",
        "name",
        "template",
        "IndexTemplateFilter",
        "name",
        "template",
        "a",
        "b",
        "a",
        "b",
        "other",
        "other",
        "other",
        "other",
        "notEmpty",
        "notEmpty",
        "template",
        "notEmpty",
        "matches",
        "template",
        "matches",
        "notEmpty",
        "matches",
        "template",
        "matches",
        "name",
        "data",
        "master",
        "client",
        "timestamp",
        "name",
        "data",
        "master",
        "client",
        "timestamp",
        "NodeFilter",
        "other",
        "other",
        "other",
        "other",
        "other",
        "other",
        "other",
        "notEmpty",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "name",
        "notEmpty",
        "name",
        "page",
        "pageSize",
        "collection",
        "page",
        "pageSize",
        "isDefined",
        "collection",
        "collection",
        "newSize",
        "newSize",
        "results",
        "total",
        "total",
        "first",
        "first",
        "total",
        "lastPage",
        "total",
        "total",
        "results",
        "first",
        "last",
        "total",
        "elements",
        "elements",
        "Page",
        "elements",
        "total",
        "first",
        "last",
        "next",
        "previous",
        "collection",
        "collection",
        "collection",
        "collection",
        "collection",
        "item",
        "item",
        "filtered",
        "item",
        "filtered",
        "elements",
        "total",
        "first",
        "last",
        "next",
        "previous",
        "elements",
        "total",
        "first",
        "last",
        "next",
        "previous",
        "path",
        "method",
        "body",
        "getTimeString",
        "path",
        "method",
        "body",
        "json",
        "isDefined",
        "json",
        "json",
        "url",
        "url",
        "path",
        "json",
        "json",
        "json",
        "json",
        "request",
        "request",
        "request",
        "request",
        "SnapshotFilter",
        "other",
        "other",
        "snapshot",
        "mappings",
        "previousTokens",
        "suggestedToken",
        "previousTokens",
        "previousTokens",
        "prefix",
        "prefix",
        "suggestedToken",
        "suggestedToken",
        "suggestedToken",
        "path",
        "path",
        "pathTokens",
        "pathTokens",
        "suggestedPathTokens",
        "suggestedPathTokens",
        "token",
        "position",
        "position",
        "pathTokens",
        "token",
        "pathTokens",
        "position",
        "token",
        "replaced",
        "pathTokens",
        "suggestedPathTokens",
        "suggestedPathTokens",
        "token",
        "index",
        "valid",
        "index",
        "pathTokens",
        "token",
        "valid",
        "mappings",
        "pathTokens",
        "index",
        "valid",
        "mappings",
        "pathTokens",
        "index",
        "pathTokens",
        "index",
        "valid",
        "pathTokens",
        "index",
        "token",
        "valid",
        "collection",
        "element",
        "collection",
        "element",
        "collection",
        "element",
        "PATHS",
        "suggestedPath",
        "suggestedPath",
        "suggestedPathTokens",
        "suggestedTokenIndex",
        "isValidSuggestion",
        "pathTokens",
        "suggestedPathTokens",
        "suggestedPathTokens",
        "replaceVariables",
        "pathTokens",
        "suggestedPathTokens",
        "suggestedPathTokens",
        "suggestedTokenIndex",
        "suggestedToken",
        "mappings",
        "index",
        "addIfNotPresent",
        "alternatives",
        "format",
        "pathTokens",
        "index",
        "pathTokens",
        "suggestedTokenIndex",
        "mappings",
        "pathIndex",
        "addIfNotPresent",
        "alternatives",
        "format",
        "pathTokens",
        "addIfNotPresent",
        "alternatives",
        "format",
        "pathTokens",
        "suggestedToken",
        "alternatives",
        "a",
        "b",
        "a",
        "b",
        "id",
        "id",
        "WarmerFilter",
        "other",
        "other",
        "other",
        "notEmpty",
        "warmer",
        "warmer",
        "kopf",
        "name",
        "AceEditor",
        "name",
        "message",
        "response",
        "level",
        "_class",
        "icon",
        "message",
        "response",
        "level",
        "_class",
        "icon",
        "getTimeString",
        "currentDate",
        "currentDate",
        "isDefined",
        "isDefined",
        "kopf",
        "id",
        "$",
        "id",
        "$",
        "a",
        "id",
        "a",
        "msg",
        "resp",
        "timeout",
        "timeout",
        "isDefined",
        "timeout",
        "timeout",
        "Alert",
        "msg",
        "resp",
        "alert",
        "timeout",
        "msg",
        "resp",
        "timeout",
        "timeout",
        "isDefined",
        "timeout",
        "timeout",
        "Alert",
        "msg",
        "resp",
        "alert",
        "timeout",
        "msg",
        "resp",
        "timeout",
        "timeout",
        "isDefined",
        "timeout",
        "timeout",
        "Alert",
        "msg",
        "resp",
        "alert",
        "timeout",
        "msg",
        "resp",
        "timeout",
        "timeout",
        "isDefined",
        "timeout",
        "timeout",
        "Alert",
        "msg",
        "resp",
        "alert",
        "timeout",
        "alert",
        "timeout",
        "alert",
        "setTimeout",
        "service",
        "alert",
        "timeout",
        "alert",
        "kopf",
        "AlertService",
        "$document",
        "$window",
        "angular",
        "$document",
        "textarea",
        "$window",
        "$document",
        "textarea",
        "angular",
        "$document",
        "textarea",
        "value",
        "success",
        "failure",
        "textarea",
        "value",
        "textarea",
        "$document",
        "success",
        "error",
        "failure",
        "kopf",
        "$filter",
        "message",
        "messages",
        "$filter",
        "date",
        "message",
        "messages",
        "MaxMessages",
        "messages",
        "updatedAt",
        "date",
        "message",
        "data",
        "addMessage",
        "message",
        "data",
        "addMessage",
        "data",
        "updatedAt",
        "messages",
        "kopf",
        "$http",
        "$q",
        "$timeout",
        "$location",
        "ExternalSettingsService",
        "DebugService",
        "AlertService",
        "text",
        "encodeURIComponent",
        "text",
        "text",
        "instance",
        "text",
        "isDefined",
        "changes",
        "changes",
        "changes",
        "node",
        "node",
        "node",
        "AlertService",
        "joins",
        "joins",
        "changes",
        "changes",
        "node",
        "node",
        "node",
        "AlertService",
        "changes",
        "leaves",
        "changes",
        "changes",
        "index",
        "index",
        "AlertService",
        "changes",
        "created",
        "changes",
        "changes",
        "index",
        "index",
        "AlertService",
        "changes",
        "deleted",
        "host",
        "ExternalSettingsService",
        "ExternalSettingsService",
        "ESConnection",
        "host",
        "root",
        "withCredentials",
        "DebugService",
        "data",
        "data",
        "DebugService",
        "DebugService",
        "host",
        "instance",
        "host",
        "instance",
        "data",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "data",
        "data",
        "DebugService",
        "instance",
        "data",
        "instance",
        "instance",
        "AlertService",
        "instance",
        "instance",
        "instance",
        "AlertService",
        "instance",
        "data",
        "version",
        "Version",
        "version",
        "DebugService",
        "version",
        "version",
        "version",
        "isDefined",
        "Version",
        "version",
        "name",
        "settings",
        "success",
        "error",
        "encode",
        "name",
        "path",
        "settings",
        "success",
        "error",
        "success",
        "error",
        "body",
        "success",
        "error",
        "success",
        "error",
        "body",
        "success",
        "error",
        "index",
        "encode",
        "index",
        "response",
        "AlertService",
        "response",
        "instance",
        "response",
        "AlertService",
        "response",
        "path",
        "success",
        "error",
        "index",
        "success",
        "error",
        "encode",
        "index",
        "path",
        "success",
        "error",
        "index",
        "success",
        "error",
        "encode",
        "index",
        "path",
        "success",
        "error",
        "index",
        "encode",
        "index",
        "response",
        "AlertService",
        "response",
        "instance",
        "error",
        "AlertService",
        "error",
        "path",
        "success",
        "error",
        "index",
        "success",
        "error",
        "encode",
        "index",
        "path",
        "success",
        "error",
        "index",
        "success",
        "error",
        "encode",
        "index",
        "path",
        "success",
        "error",
        "name",
        "settings",
        "success",
        "error",
        "encode",
        "name",
        "path",
        "settings",
        "success",
        "error",
        "settings",
        "success",
        "error",
        "path",
        "settings",
        "success",
        "error",
        "warmer",
        "success",
        "error",
        "encode",
        "warmer",
        "encode",
        "warmer",
        "path",
        "success",
        "error",
        "index",
        "id",
        "success",
        "error",
        "encode",
        "index",
        "encode",
        "id",
        "path",
        "success",
        "error",
        "percolator",
        "success",
        "error",
        "percolator",
        "percolator",
        "encode",
        "index",
        "encode",
        "id",
        "path",
        "percolator",
        "success",
        "error",
        "repository",
        "body",
        "success",
        "error",
        "encode",
        "repository",
        "path",
        "body",
        "success",
        "error",
        "repository",
        "success",
        "error",
        "encode",
        "repository",
        "path",
        "success",
        "error",
        "repository",
        "snapshot",
        "success",
        "error",
        "encode",
        "repository",
        "encode",
        "snapshot",
        "path",
        "success",
        "error",
        "repository",
        "name",
        "body",
        "success",
        "error",
        "encode",
        "repository",
        "path",
        "encode",
        "name",
        "path",
        "body",
        "success",
        "error",
        "repository",
        "snapshot",
        "body",
        "success",
        "error",
        "encode",
        "repository",
        "encode",
        "snapshot",
        "path",
        "body",
        "success",
        "error",
        "body",
        "success",
        "error",
        "path",
        "body",
        "success",
        "error",
        "warmer",
        "success",
        "error",
        "encode",
        "warmer",
        "notEmpty",
        "warmer",
        "path",
        "encode",
        "warmer",
        "path",
        "encode",
        "warmer",
        "warmer",
        "path",
        "body",
        "success",
        "error",
        "add",
        "remove",
        "success",
        "error",
        "add",
        "a",
        "data",
        "a",
        "remove",
        "a",
        "data",
        "a",
        "data",
        "success",
        "error",
        "name",
        "success",
        "error",
        "encode",
        "name",
        "path",
        "success",
        "error",
        "template",
        "success",
        "error",
        "encode",
        "template",
        "template",
        "path",
        "body",
        "success",
        "error",
        "success",
        "error",
        "response",
        "response",
        "name",
        "IndexTemplate",
        "name",
        "response",
        "name",
        "success",
        "templates",
        "path",
        "parseTemplates",
        "error",
        "shard",
        "index",
        "fromNode",
        "toNode",
        "success",
        "error",
        "shard",
        "index",
        "fromNode",
        "toNode",
        "path",
        "body",
        "success",
        "error",
        "api",
        "success",
        "error",
        "encode",
        "api",
        "response",
        "success",
        "CatResult",
        "response",
        "path",
        "parseCat",
        "error",
        "node",
        "threads",
        "interval",
        "ignoreIdleThreads",
        "success",
        "error",
        "node",
        "encode",
        "node",
        "threads",
        "ignoreIdleThreads",
        "interval",
        "response",
        "HotThreads",
        "response",
        "success",
        "threads",
        "path",
        "parseHotThreads",
        "error",
        "success",
        "error",
        "response",
        "success",
        "ClusterMapping",
        "response",
        "path",
        "transformed",
        "error",
        "name",
        "success",
        "error",
        "response",
        "success",
        "IndexMetadata",
        "name",
        "response",
        "name",
        "encode",
        "name",
        "path",
        "transformed",
        "error",
        "nodeId",
        "success",
        "error",
        "response",
        "success",
        "NodeStats",
        "name",
        "response",
        "nodeId",
        "encode",
        "nodeId",
        "path",
        "transformed",
        "error",
        "shard",
        "index",
        "nodeId",
        "success",
        "error",
        "$q",
        "$http",
        "host",
        "encode",
        "index",
        "$http",
        "host",
        "encode",
        "index",
        "responses",
        "responses",
        "indexStats",
        "index",
        "shard",
        "shardsStats",
        "shardsStats",
        "shardsStats",
        "shardsStats",
        "stats",
        "stats",
        "nodeId",
        "shardStats",
        "success",
        "ShardStats",
        "shard",
        "index",
        "shardStats",
        "responses",
        "indexRecovery",
        "index",
        "recovery",
        "recovery",
        "nodeId",
        "recovery",
        "shard",
        "success",
        "ShardStats",
        "shard",
        "index",
        "shardRecoveries",
        "exception",
        "DebugService",
        "exception",
        "DebugService",
        "responses",
        "error",
        "exception",
        "response",
        "DebugService",
        "response",
        "error",
        "response",
        "success",
        "error",
        "response",
        "response",
        "indices",
        "index",
        "response",
        "index",
        "indexAliases",
        "indexAliases",
        "indexAliases",
        "alias",
        "indexAliases",
        "alias",
        "Alias",
        "alias",
        "index",
        "info",
        "info",
        "info",
        "allAliases",
        "IndexAliases",
        "index",
        "aliases",
        "success",
        "allAliases",
        "createAliases",
        "error",
        "index",
        "body",
        "success",
        "error",
        "response",
        "response",
        "t",
        "Token",
        "t",
        "t",
        "t",
        "t",
        "success",
        "tokens",
        "encode",
        "index",
        "instance",
        "path",
        "body",
        "buildTokens",
        "error",
        "index",
        "field",
        "text",
        "success",
        "error",
        "analyze",
        "index",
        "text",
        "field",
        "success",
        "error",
        "index",
        "analyzer",
        "text",
        "success",
        "error",
        "analyze",
        "index",
        "text",
        "analyzer",
        "success",
        "error",
        "index",
        "warmer",
        "success",
        "error",
        "encode",
        "index",
        "encode",
        "warmer",
        "response",
        "response",
        "i",
        "response",
        "index",
        "indexWarmers",
        "warmerId",
        "warmers",
        "Warmer",
        "warmerId",
        "index",
        "indexWarmers",
        "warmerId",
        "success",
        "warmers",
        "path",
        "parseWarmers",
        "error",
        "index",
        "query",
        "success",
        "error",
        "encode",
        "index",
        "response",
        "response",
        "q",
        "PercolateQuery",
        "q",
        "query",
        "response",
        "query",
        "PercolatorsPage",
        "size",
        "total",
        "collection",
        "success",
        "percolators",
        "query",
        "path",
        "body",
        "parsePercolators",
        "error",
        "success",
        "error",
        "response",
        "response",
        "repository",
        "Repository",
        "repository",
        "response",
        "repository",
        "success",
        "repositories",
        "path",
        "parseRepositories",
        "error",
        "repository",
        "success",
        "error",
        "encode",
        "repository",
        "response",
        "response",
        "snapshot",
        "Snapshot",
        "snapshot",
        "success",
        "snapshots",
        "path",
        "parseSnapshots",
        "error",
        "method",
        "path",
        "data",
        "success",
        "error",
        "path",
        "method",
        "url",
        "data",
        "config",
        "$http",
        "config",
        "data",
        "status",
        "headers",
        "config",
        "success",
        "data",
        "exception",
        "DebugService",
        "exception",
        "DebugService",
        "data",
        "error",
        "exception",
        "data",
        "status",
        "headers",
        "config",
        "DebugService",
        "config",
        "DebugService",
        "data",
        "error",
        "data",
        "success",
        "error",
        "$q",
        "$http",
        "host",
        "$http",
        "host",
        "$http",
        "host",
        "$http",
        "host",
        "$http",
        "host",
        "$http",
        "host",
        "$http",
        "host",
        "$http",
        "host",
        "responses",
        "responses",
        "responses",
        "responses",
        "responses",
        "responses",
        "responses",
        "responses",
        "responses",
        "Cluster",
        "health",
        "state",
        "indexStats",
        "nodesStats",
        "settings",
        "aliases",
        "nodes",
        "main",
        "success",
        "cluster",
        "exception",
        "DebugService",
        "exception",
        "DebugService",
        "responses",
        "error",
        "exception",
        "response",
        "DebugService",
        "response",
        "error",
        "response",
        "success",
        "error",
        "$q",
        "$http",
        "host",
        "$http",
        "host",
        "$http",
        "host",
        "$http",
        "host",
        "$http",
        "host",
        "responses",
        "responses",
        "responses",
        "responses",
        "responses",
        "responses",
        "BrokenCluster",
        "health",
        "state",
        "nodesStats",
        "settings",
        "nodes",
        "success",
        "cluster",
        "exception",
        "DebugService",
        "exception",
        "DebugService",
        "responses",
        "error",
        "exception",
        "response",
        "DebugService",
        "DebugService",
        "response",
        "AlertService",
        "response",
        "instance",
        "health",
        "state",
        "stats",
        "hotthreads",
        "success",
        "error",
        "health",
        "requests",
        "$http",
        "host",
        "state",
        "requests",
        "$http",
        "host",
        "stats",
        "requests",
        "$http",
        "host",
        "hotthreads",
        "requests",
        "$http",
        "host",
        "$q",
        "requests",
        "responses",
        "success",
        "responses",
        "response",
        "response",
        "exception",
        "error",
        "exception",
        "response",
        "error",
        "response",
        "ExternalSettingsService",
        "$timeout",
        "instance",
        "instance",
        "brokenCluster",
        "instance",
        "brokenCluster",
        "instance",
        "DebugService",
        "instance",
        "response",
        "AlertService",
        "response",
        "instance",
        "instance",
        "cluster",
        "end",
        "start",
        "took",
        "threshold",
        "AlertService",
        "cluster",
        "instance",
        "instance",
        "cluster",
        "instance",
        "response",
        "response",
        "DebugService",
        "message",
        "AlertService",
        "message",
        "instance",
        "AlertService",
        "response",
        "instance",
        "broken",
        "instance",
        "broken",
        "broken",
        "$location",
        "instance",
        "instance",
        "$timeout",
        "nextRefresh",
        "ExternalSettingsService",
        "config",
        "isDefined",
        "config",
        "config",
        "kopf",
        "$TreeDnDConvert",
        "value",
        "searched",
        "value",
        "searched",
        "path",
        "path",
        "containsString",
        "path",
        "containsString",
        "path",
        "containsString",
        "path",
        "response",
        "response",
        "lHits",
        "response",
        "response",
        "lHits",
        "response",
        "lHits",
        "lHit",
        "lHit",
        "lHit",
        "response",
        "response",
        "lExplanation",
        "lHit",
        "lHit",
        "lHit",
        "lHit",
        "lHit",
        "lHit",
        "lHit",
        "lHit",
        "lHit",
        "$TreeDnDConvert",
        "lHit",
        "lHits",
        "kopf",
        "DebugService",
        "REFRESH_RATE",
        "THEME",
        "isDefined",
        "localSettings",
        "$",
        "settingsFuture",
        "data",
        "data",
        "setting",
        "settings",
        "setting",
        "data",
        "setting",
        "error",
        "data",
        "settingsFuture",
        "error",
        "error",
        "settings",
        "ES_ROOT_PATH",
        "WITH_CREDENTIALS",
        "REFRESH_RATE",
        "rate",
        "REFRESH_RATE",
        "rate",
        "THEME",
        "theme",
        "THEME",
        "theme",
        "setting",
        "UPDATABLE_SETTINGS",
        "setting",
        "settings",
        "setting",
        "setting",
        "localStorage",
        "KEY",
        "settings",
        "localStorage",
        "KEY",
        "content",
        "settings",
        "content",
        "error",
        "DebugService",
        "settings",
        "settings",
        "settings",
        "setting",
        "settings",
        "UPDATABLE_SETTINGS",
        "setting",
        "setting",
        "settings",
        "setting",
        "kopf",
        "localStorage",
        "history",
        "isDefined",
        "history",
        "history",
        "history",
        "connection",
        "connection",
        "connection",
        "connection",
        "username",
        "password",
        "host",
        "host",
        "addAuth",
        "prefix",
        "prefix",
        "username",
        "password",
        "host",
        "i",
        "history",
        "i",
        "history",
        "i",
        "host",
        "history",
        "i",
        "history",
        "entry",
        "history",
        "history",
        "localStorage",
        "history",
        "localStorage",
        "kopf",
        "ElasticService",
        "DebugService",
        "$rootScope",
        "$document",
        "$document",
        "$document",
        "img",
        "faviconUrl",
        "$rootScope",
        "ElasticService",
        "cluster",
        "oldValue",
        "instance",
        "cluster",
        "cluster",
        "instance",
        "cluster",
        "cluster",
        "name",
        "name",
        "name",
        "$rootScope",
        "name",
        "$rootScope",
        "name",
        "status",
        "status",
        "status",
        "status",
        "colors",
        "status",
        "$document",
        "canvas",
        "canvas",
        "canvas",
        "context",
        "img",
        "context",
        "context",
        "color",
        "context",
        "context",
        "canvas",
        "exception",
        "DebugService",
        "exception",
        "kopf",
        "controller",
        "property",
        "defaultValue",
        "controller",
        "controller",
        "controller",
        "property",
        "controller",
        "property",
        "defaultValue",
        "controller",
        "property",
        "e",
        "s",
        "e",
        "propertyPath",
        "defaultValue",
        "isDefined",
        "isDefined",
        "propertyPath",
        "propertyPath",
        "propertyPath",
        "i",
        "pathParts",
        "isDefined",
        "i",
        "pathParts",
        "i",
        "isDefined",
        "defaultValue",
        "value",
        "value",
        "value",
        "value",
        "isDefined",
        "value",
        "value",
        "value",
        "exp",
        "value",
        "date",
        "date",
        "date",
        "date",
        "hh",
        "mm",
        "ss"
    ],
    "literals": [
        "'kopf'",
        "'ngRoute'",
        "'ntt.TreeDnD'",
        "'ngAnimate'",
        "'ui.bootstrap'",
        "'ConfirmDialogService'",
        "'Default Header'",
        "'Default Body'",
        "'cancel'",
        "'confirm'",
        "'!'",
        "'/cluster'",
        "'partials/cluster_overview.html'",
        "'ClusterOverviewController'",
        "'/nodes'",
        "'partials/nodes/nodes.html'",
        "'NodesController'",
        "'/rest'",
        "'partials/rest_client.html'",
        "'RestController'",
        "'/aliases'",
        "'partials/aliases.html'",
        "'AliasesController'",
        "'/analysis'",
        "'partials/analysis.html'",
        "'AnalysisController'",
        "'/percolator'",
        "'partials/percolator.html'",
        "'PercolatorController'",
        "'/warmers'",
        "'partials/warmers.html'",
        "'WarmersController'",
        "'/snapshot'",
        "'partials/snapshot.html'",
        "'SnapshotController'",
        "'/createIndex'",
        "'partials/create_index.html'",
        "'CreateIndexController'",
        "'/clusterHealth'",
        "'partials/cluster_health.html'",
        "'ClusterHealthController'",
        "'/clusterSettings'",
        "'partials/cluster_settings.html'",
        "'ClusterSettingsController'",
        "'/indexSettings'",
        "'partials/index_settings.html'",
        "'IndexSettingsController'",
        "'/indexTemplates'",
        "'partials/index_templates.html'",
        "'IndexTemplatesController'",
        "'/cat'",
        "'partials/cat.html'",
        "'CatController'",
        "'/hotthreads'",
        "'partials/hotthreads.html'",
        "'HotThreadsController'",
        "'/cluster'",
        "'AlertsController'",
        "'$scope'",
        "'AlertService'",
        "'AliasesController'",
        "'$scope'",
        "'AlertService'",
        "'AceEditorService'",
        "'ElasticService'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'paginator'",
        "'alias-filter-editor'",
        "'Alias is already associated with this index'",
        "'Alias successfully added. Note that changes '",
        "'made will only be persisted after saving changes'",
        "'Invalid filter defined for alias'",
        "'All aliases were removed for '",
        "'Alias successfully dissociated from index. '",
        "'Note that changes made will only be persisted after saving changes'",
        "'No changes were made: nothing to save'",
        "'Aliases were successfully updated'",
        "'Error while updating aliases'",
        "'Error while fetching aliases'",
        "'AnalysisController'",
        "'$scope'",
        "'$location'",
        "'$timeout'",
        "'AlertService'",
        "'ElasticService'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'field_index'",
        "''",
        "''",
        "''",
        "'Error loading index types'",
        "'analyzer_index'",
        "''",
        "''",
        "'Error loading index analyzers'",
        "'Error analyzing text by field'",
        "'Error analyzing text by analyzer'",
        "'BenchmarkController'",
        "'$scope'",
        "'$location'",
        "'$timeout'",
        "'AlertService'",
        "'ElasticService'",
        "'Competitor needs a name'",
        "'#benchmark-result'",
        "''",
        "'#benchmark-result'",
        "'No available nodes for benchmarking. '",
        "'At least one node must be started with '",
        "'\\'--node.bench true\\' option.'",
        "'CatController'",
        "'$scope'",
        "'ElasticService'",
        "'AlertService'",
        "'aliases'",
        "'count'",
        "'master'",
        "'plugins'",
        "'recovery'",
        "''",
        "'Error while fetching data'",
        "'You must select an API'",
        "'ClusterHealthController'",
        "'$scope'",
        "'$location'",
        "'$timeout'",
        "'$sce'",
        "'$http'",
        "'AlertService'",
        "'ConfirmDialogService'",
        "'ElasticService'",
        "'Cluster information delivered by kopf'",
        "''",
        "'#cluster_health_option a'",
        "'show'",
        "''",
        "'Are you share you want to share your cluster information?'",
        "'By sharing information through a public Gist you might be '",
        "'exposing sensitive information about your cluster, such as '",
        "'host name, indices names and etc.'",
        "'Agree'",
        "'Loading cluster health state. '",
        "'This could take a few moments.'",
        "''",
        "''",
        "'Error while retrieving cluster health '",
        "'information'",
        "'content'",
        "'indent'",
        "'2'",
        "'language'",
        "'JSON'",
        "'content'",
        "'indent'",
        "'2'",
        "'language'",
        "'JSON'",
        "'content'",
        "'indent'",
        "'2'",
        "'language'",
        "'JSON'",
        "'content'",
        "'indent'",
        "'2'",
        "'language'",
        "'JSON'",
        "'POST'",
        "'https://api.github.com/gists'",
        "'Cluster health information successfully '",
        "'shared at: '",
        "'Error while publishing Gist'",
        "'ClusterOverviewController'",
        "'$scope'",
        "'$window'",
        "'ConfirmDialogService'",
        "'AlertService'",
        "'ElasticService'",
        "'AppState'",
        "'ClusterOverview'",
        "'index_filter'",
        "''",
        "'ClusterOverview'",
        "'index_paginator'",
        "'ClusterOverview'",
        "'node_filter'",
        "''",
        "'node_filter'",
        "'index_paginator'",
        "'Index was successfully optimized'",
        "'Error while optimizing index'",
        "'are you sure you want to optimize index '",
        "'?'",
        "'Optimizing an index is a resource intensive operation and '",
        "'should be done with caution. Usually, you will only want to '",
        "'optimize an index when it will no longer receive updates'",
        "'Optimize'",
        "'Error while deleting index'",
        "'are you sure you want to delete index '",
        "'?'",
        "'Deleting an index cannot be undone and all data for this '",
        "'index will be lost'",
        "'Delete'",
        "'Index cache was cleared'",
        "'Error while clearing index cache'",
        "'are you sure you want to clear the cache for '",
        "'?'",
        "'This will clear all caches for this index.'",
        "'Clear'",
        "'Index was successfully refreshed'",
        "'Error while refreshing index'",
        "'are you sure you want to refresh index '",
        "'?'",
        "'Refreshing an index makes all operations performed since the '",
        "'last refresh available for search.'",
        "'Refresh'",
        "'Shard allocation was enabled'",
        "'Error while enabling shard allocation'",
        "'Shard allocation was disabled'",
        "'Error while disabling shard allocation'",
        "'are you sure you want to close index '",
        "'?'",
        "'Closing an index will remove all it\\'s allocated shards from '",
        "'the cluster.  Both searches and updates will no longer be '",
        "'accepted for the index. A closed index can be reopened.'",
        "'Close index'",
        "'are you sure you want to open index '",
        "'?'",
        "'Opening an index will trigger the recovery process. '",
        "'This process could take sometime depending on the index size.'",
        "'Open index'",
        "'are you sure you want to close all selected indices?'",
        "'Closing an index will remove all it\\'s allocated shards from '",
        "'the cluster.  Both searches and updates will no longer be '",
        "'accepted for the index. A closed index can be reopened.\\n\\n'",
        "'Selected indices:\\n'",
        "'\\n'",
        "'Close index'",
        "','",
        "'are you sure you want to open all selected indices?'",
        "'Opening an index will trigger the recovery process. '",
        "'This process could take sometime depending on the index size.\\n\\n'",
        "'Selected indices:\\n'",
        "'\\n'",
        "'Open index'",
        "','",
        "'are you sure you want to refresh all selected indices?'",
        "'Refreshing an index makes all operations performed since the '",
        "'last refresh available for search.\\n\\n'",
        "'Selected indices:\\n'",
        "'\\n'",
        "'Refresh'",
        "','",
        "'are you sure you want to clear the cache for all selected indices?'",
        "'This will clear all caches for this index.\\n\\n'",
        "'Selected indices:\\n'",
        "'\\n'",
        "'Clear'",
        "','",
        "'are you sure you want to delete all selected indices?'",
        "'Deleting an index cannot be undone and all data for this '",
        "'index will be lost.\\n\\n'",
        "'Selected indices:\\n'",
        "'\\n'",
        "'Delete'",
        "','",
        "'are you sure you want to optimize all selected indices?'",
        "'Optimizing an index is a resource intensive operation and '",
        "'should be done with caution. Usually, you will only want to '",
        "'optimize an index when it will no longer receive updates.\\n\\n'",
        "'Selected indices:\\n'",
        "'\\n'",
        "'Optimize'",
        "','",
        "'settings for '",
        "'Error while loading index settings'",
        "'mappings for '",
        "'Error while loading index mappings'",
        "'stats for '",
        "'Error while loading node stats'",
        "'stats for shard '",
        "'Error while loading shard stats'",
        "'Relocation successfully executed'",
        "'Error while moving shard'",
        "'are you sure you want relocate the shard?'",
        "'Once the relocation finishes, the cluster will try to '",
        "'rebalance itself to an even state'",
        "'Relocate'",
        "'ClusterSettingsController'",
        "'$scope'",
        "'$location'",
        "'$timeout'",
        "'AlertService'",
        "'ElasticService'",
        "'#cluster_settings_option a'",
        "'show'",
        "'#cluster_settings_tabs a:first'",
        "'show'",
        "'.setting-info'",
        "'transient'",
        "''",
        "'Cluster settings were successfully updated'",
        "'Error while updating cluster settings'",
        "'ClusterStatsController'",
        "'$scope'",
        "'ElasticService'",
        "'ConfirmDialogController'",
        "'$scope'",
        "'ConfirmDialogService'",
        "'CreateIndexController'",
        "'$scope'",
        "'AlertService'",
        "'ElasticService'",
        "'AceEditorService'",
        "''",
        "''",
        "''",
        "'#create_index_option a'",
        "'show'",
        "'Error while loading index settings'",
        "'You must specify a valid index name'",
        "'Invalid JSON: '",
        "'Error while creating index'",
        "'index-settings-editor'",
        "'{}'",
        "''",
        "''",
        "''",
        "'DebugController'",
        "'$scope'",
        "'DebugService'",
        "'GlobalController'",
        "'$scope'",
        "'$location'",
        "'$sce'",
        "'$window'",
        "'AlertService'",
        "'ElasticService'",
        "'ExternalSettingsService'",
        "'PageService'",
        "'5.2.1.2'",
        "'This version of kopf is not compatible with your ES version'",
        "'Upgrading to newest supported version is recommended'",
        "'[\\\\?&]'",
        "'=([^&#]*)'",
        "'http://localhost:9200'",
        "''",
        "'location'",
        "'/_plugin/kopf'",
        "'/_plugin/kopf'",
        "'://'",
        "':'",
        "'#modal_info'",
        "'HotThreadsController'",
        "'$scope'",
        "'ElasticService'",
        "'AlertService'",
        "'cpu'",
        "'cpu'",
        "'wait'",
        "'block'",
        "'500ms'",
        "'Error while fetching hot threads'",
        "'IndexSettingsController'",
        "'$scope'",
        "'$location'",
        "'AlertService'",
        "'ElasticService'",
        "''",
        "'Index settings were successfully updated'",
        "'Error while updating index settings'",
        "'Error while loading index settings for ['",
        "']'",
        "'IndexTemplatesController'",
        "'$scope'",
        "'ConfirmDialogService'",
        "'AlertService'",
        "'AceEditorService'",
        "'ElasticService'",
        "'template pattern(e.g.: index*)'",
        "''",
        "''",
        "''",
        "'paginator'",
        "'index-template-editor'",
        "'Error while loading templates'",
        "'Template successfully created'",
        "'Error while creating template'",
        "'Template body can\\'t be empty'",
        "'Template name can\\'t be empty'",
        "'are you sure you want to delete template '",
        "'?'",
        "'Delete'",
        "'Template successfully deleted'",
        "'Error while deleting template'",
        "'NavbarController'",
        "'$scope'",
        "'$location'",
        "'ExternalSettingsService'",
        "'ElasticService'",
        "'AlertService'",
        "'HostHistoryService'",
        "''",
        "''",
        "'Error while connecting to new target host'",
        "'NodesController'",
        "'$scope'",
        "'ConfirmDialogService'",
        "'AlertService'",
        "'ElasticService'",
        "'AppState'",
        "'name'",
        "'NodesController'",
        "'filter'",
        "''",
        "'filter'",
        "'stats for '",
        "'Error while loading node stats'",
        "'PercolatorController'",
        "'$scope'",
        "'ConfirmDialogService'",
        "'AlertService'",
        "'AceEditorService'",
        "'ElasticService'",
        "''",
        "''",
        "'percolator-query-editor'",
        "'query_string'",
        "'_id'",
        "'term'",
        "'are you sure you want to delete query '",
        "' for index '",
        "'?'",
        "'Delete'",
        "'Query successfully deleted'",
        "'Error while reloading queries'",
        "'Error while deleting query'",
        "'Both index and query id must be specified'",
        "'Invalid percolator query'",
        "'Query must be defined'",
        "'Percolator Query successfully created'",
        "'Error while reloading queries'",
        "'Error while creating percolator query'",
        "'No index is selected'",
        "'Error loading percolate queries'",
        "'Filter is not a valid JSON'",
        "'RestController'",
        "'$scope'",
        "'$location'",
        "'$timeout'",
        "'ExplainService'",
        "'AlertService'",
        "'AceEditorService'",
        "'ElasticService'",
        "'ClipboardService'",
        "''",
        "'GET'",
        "'{}'",
        "''",
        "'curl -X'",
        "' \\''",
        "'\\''",
        "'POST'",
        "'PUT'",
        "' -d \\''",
        "'\\''",
        "'cURL request successfully copied to clipboard'",
        "'Error while copying request to clipboard'",
        "'kopf_request_history'",
        "'kopf_request_history'",
        "'kopf_request_history'",
        "'/'",
        "''",
        "'GET'",
        "'{}'",
        "'You are executing a GET request with body '",
        "'content. Maybe you meant to use POST or PUT?'",
        "'Request was not successful'",
        "' is unreachable'",
        "'Path is empty'",
        "'_search'",
        "'_explain'",
        "'GET'",
        "'POST'",
        "'You are executing a request '",
        "'without _explain nor ?explain=true'",
        "'data:text/csv;charset=utf-8;'",
        "'<a></a>'",
        "'href'",
        "'download'",
        "'data.csv'",
        "'rest-client-editor'",
        "'Error while loading cluster mappings'",
        "'description'",
        "'explanation-result-description'",
        "'value'",
        "'explanation-result-header'",
        "'text-right'",
        "'SnapshotController'",
        "'$scope'",
        "'ConfirmDialogService'",
        "'AlertService'",
        "'ElasticService'",
        "''",
        "''",
        "''",
        "'showSpecialIndices'",
        "'paginator'",
        "'Repository successfully deleted'",
        "''",
        "'Error while deleting repository'",
        "'are you sure you want to delete repository '",
        "'?'",
        "'Delete'",
        "','",
        "'include_global_state'",
        "'include_aliases'",
        "'ignore_unavailable'",
        "'rename_replacement'",
        "'rename_pattern'",
        "'Snapshot Restored Started'",
        "'Error while starting restore of snapshot'",
        "'Repository created'",
        "'Error while creating repository'",
        "'Error while reading snapshot'",
        "'Repository is required'",
        "'Snapshot name is required'",
        "','",
        "'ignore_unavailable'",
        "'Snapshot created'",
        "'Error while creating snapshot'",
        "'are you sure you want to delete snapshot '",
        "'?'",
        "'Delete'",
        "'Snapshot successfully deleted'",
        "'Error while deleting snapshot'",
        "'Error while fetching snapshots'",
        "'WarmersController'",
        "'$scope'",
        "'ConfirmDialogService'",
        "'AlertService'",
        "'AceEditorService'",
        "'ElasticService'",
        "''",
        "''",
        "''",
        "'paginator'",
        "'warmer-editor'",
        "'Warmer successfully created'",
        "'Request returned invalid JSON'",
        "'Warmer query can\\'t be empty'",
        "'are you sure you want to delete warmer '",
        "'?'",
        "'Delete'",
        "'Warmer successfully deleted'",
        "'Error while deleting warmer'",
        "''",
        "'Error while fetching warmers'",
        "'use strict'",
        "'kopfJsonTree'",
        "'E'",
        "'<div class=\"json-tree\" ng-bind-html=\"result\"></div>'",
        "'='",
        "'kopfBind'",
        "''",
        "'ngNavbarSection'",
        "'$location'",
        "'ElasticService'",
        "'<a href=\"#!'",
        "'\">'",
        "'<i class=\"fa fa-fw '",
        "'\"></i> '",
        "'</a>'",
        "''",
        "'ngPagination'",
        "'$document'",
        "'=paginator'",
        "'=page'",
        "'=label'",
        "'./partials/directives/pagination.html'",
        "'input, textarea'",
        "'keydown'",
        "'$destroy'",
        "'keydown'",
        "'ngSortBy'",
        "'i'",
        "'fa-sort-asc fa-sort-desc'",
        "'fa-sort-desc'",
        "'fa-sort-asc'",
        "'<a href=\"\" target=\"_self\" ng-click=setSortBy(\\''",
        "'\\')>'",
        "'<i class=\"fa fa-fw fa-sort-asc\"></i></a>'",
        "'ngStaticInclude'",
        "'./partials/'",
        "'.html'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'Alias must have a non empty name'",
        "'Alias must have a valid index name'",
        "'string'",
        "'\\n'",
        "'false'",
        "'persistent.cluster.routing.allocation.enable'",
        "'all'",
        "'transient.cluster.routing.allocation.enable'",
        "''",
        "''",
        "'all'",
        "'false'",
        "'true'",
        "'all'",
        "'true'",
        "'4'",
        "'open'",
        "'UNASSIGNED'",
        "'_'",
        "'_'",
        "'.mappings'",
        "'cluster.blocks.read_only'",
        "'indices.ttl.interval'",
        "'indices.cache.filter.size'",
        "'discovery.zen.minimum_master_nodes'",
        "'indices.recovery.concurrent_streams'",
        "'indices.recovery.compress'",
        "'indices.recovery.file_chunk_size'",
        "'indices.recovery.translog_ops'",
        "'indices.recovery.translog_size'",
        "'indices.recovery.max_bytes_per_sec'",
        "'cluster.routing.allocation.node_initial_primaries_recoveries'",
        "'cluster.routing.allocation.cluster_concurrent_rebalance'",
        "'cluster.routing.allocation.awareness.attributes'",
        "'cluster.routing.allocation.node_concurrent_recoveries'",
        "'cluster.routing.allocation.disable_allocation'",
        "'cluster.routing.allocation.disable_replica_allocation'",
        "'persistent'",
        "'transient'",
        "'index.blocks.read_only'",
        "'index.blocks.read'",
        "'index.blocks.write'",
        "'index.blocks.metadata'",
        "'index.cache.filter.max_size'",
        "'index.cache.filter.expire'",
        "'index.number_of_replicas'",
        "'index.index_concurrency'",
        "'index.warmer.enabled'",
        "'index.refresh_interval'",
        "'index.term_index_divisor'",
        "'index.ttl.disable_purge'",
        "'index.fail_on_merge_failure'",
        "'index.gc_deletes'",
        "'index.codec'",
        "'index.compound_on_flush'",
        "'index.term_index_interval'",
        "'index.auto_expand_replicas'",
        "'index.recovery.initial_shards'",
        "'index.compound_format'",
        "'index.routing.allocation.disable_allocation'",
        "'index.routing.allocation.disable_new_allocation'",
        "'index.routing.allocation.disable_replica_allocation'",
        "'index.routing.allocation.total_shards_per_node'",
        "'index.search.slowlog.threshold.query.warn'",
        "'index.search.slowlog.threshold.query.info'",
        "'index.search.slowlog.threshold.query.debug'",
        "'index.search.slowlog.threshold.query.trace'",
        "'index.search.slowlog.threshold.fetch.warn'",
        "'index.search.slowlog.threshold.fetch.info'",
        "'index.search.slowlog.threshold.fetch.debug'",
        "'index.search.slowlog.threshold.fetch.trace'",
        "'index.indexing.slowlog.threshold.index.warn'",
        "'index.indexing.slowlog.threshold.index.info'",
        "'index.indexing.slowlog.threshold.index.debug'",
        "'index.indexing.slowlog.threshold.index.trace'",
        "'index.translog.flush_threshold_ops'",
        "'index.translog.flush_threshold_size'",
        "'index.translog.flush_threshold_period'",
        "'index.translog.disable_flush'",
        "'index.translog.fs.type'",
        "'http://'",
        "'https://'",
        "'http://'",
        "'http://localhost:9200'",
        "'://'",
        "'Basic '",
        "':'",
        "':::'",
        "'close'",
        "'routing_table.indices'",
        "'open'",
        "'primaries.docs.count'",
        "'primaries.docs.deleted'",
        "'primaries.store.size_in_bytes'",
        "'total.store.size_in_bytes'",
        "'STARTED'",
        "'.'",
        "'_'",
        "'close'",
        "'open'",
        "'index.analysis.analyzer'",
        "'index.analysis.analyzer'",
        "'index.analysis.analyzer.'",
        "'.'",
        "'float'",
        "'double'",
        "'byte'",
        "'short'",
        "'integer'",
        "'long'",
        "'nested'",
        "'object'",
        "''",
        "''",
        "'.'",
        "''",
        "'just_name'",
        "'nested'",
        "'object'",
        "'attributes'",
        "'false'",
        "'false'",
        "'true'",
        "'jvm.mem.heap_used_in_bytes'",
        "'jvm.mem.heap_committed_in_bytes'",
        "'jvm.mem.heap_used_percent'",
        "'jvm.mem.heap_max_in_bytes'",
        "'fs.total.total_in_bytes'",
        "'fs.total.free_in_bytes'",
        "'process.cpu.percent'",
        "'os.load_average'",
        "'\\n'",
        "'Hot threads at'",
        "'['",
        "']'",
        "'fs'",
        "'location'",
        "'chunk_size'",
        "'max_restore_bytes_per_sec'",
        "'max_snapshot_bytes_per_sec'",
        "'compress'",
        "'url'",
        "'url'",
        "'s3'",
        "'region'",
        "'bucket'",
        "'base_path'",
        "'access_key'",
        "'secret_key'",
        "'chunk_size'",
        "'max_retries'",
        "'compress'",
        "'server_side_encryption'",
        "'hdfs'",
        "'uri'",
        "'path'",
        "'load_defaults'",
        "'conf_location'",
        "'concurrent_streams'",
        "'compress'",
        "'chunk_size'",
        "'azure'",
        "'container'",
        "'base_path'",
        "'concurrent_streams'",
        "'chunk_size'",
        "'compress'",
        "'Repository name is required'",
        "'Repository type is required'",
        "'fs'",
        "'location'",
        "'url'",
        "'url'",
        "'s3'",
        "'bucket'",
        "'hdfs'",
        "'path'",
        "' is required for snapshot of type '",
        "'_'",
        "'_'",
        "'(\\\\d)\\\\.(\\\\d)\\\\.(\\\\d)\\\\.*'",
        "'bytes'",
        "'b'",
        "'KB'",
        "'MB'",
        "'GB'",
        "'TB'",
        "'PB'",
        "'startsWith'",
        "''",
        "'timeInterval'",
        "'yr'",
        "'mo'",
        "'d'",
        "'h'",
        "'min'",
        "'less than a minute'",
        "'.'",
        "'basePath'",
        "'dist/'",
        "'10px'",
        "'ace/theme/kopf'",
        "'ace/mode/json'",
        "'Monaco, Menlo, Consolas, \"Courier New\", monospace'",
        "'12px'",
        "'400'",
        "''",
        "'[10, 25, 50, 75, 90, 99]'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'query_then_fetch'",
        "''",
        "''",
        "''",
        "''",
        "'Iterations must be a valid number'",
        "'Concurrency must be a valid number'",
        "'Multiplier must be a valid number'",
        "'Num slowest must be a valid number'",
        "','",
        "','",
        "','",
        "','",
        "'name'",
        "'name'",
        "'i'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'/'",
        "'_suggest'",
        "'{index}/_suggest'",
        "'_msearch'",
        "'{index}/_msearch'",
        "'{index}/{type}/_msearch'",
        "'_msearch/template'",
        "'{index}/_msearch/template'",
        "'{index}/{type}/_msearch/template'",
        "'_search'",
        "'{index}/_search'",
        "'{index}/{type}/_search'",
        "'_search/template'",
        "'{index}/_search/template'",
        "'{index}/{type}/_search/template'",
        "'_search/exists'",
        "'{index}/_search/exists'",
        "'{index}/{type}/_search/exists'",
        "'/'",
        "'/'",
        "'/'",
        "'{'",
        "'{index}'",
        "'{type}'",
        "'/'",
        "'{index}'",
        "'{type}'",
        "'AceEditorService'",
        "'alert_box_'",
        "'AlertService'",
        "'#'",
        "'error'",
        "'alert-danger'",
        "'fa fa-warning'",
        "'info'",
        "'alert-info'",
        "'fa fa-info'",
        "'success'",
        "'alert-success'",
        "'fa fa-check'",
        "'warn'",
        "'alert-warning'",
        "'fa fa-info'",
        "'ClipboardService'",
        "'AlertService'",
        "'$document'",
        "'$window'",
        "'textarea'",
        "'absolute'",
        "'-9999px'",
        "'px'",
        "''",
        "'copy'",
        "'DebugService'",
        "'$filter'",
        "'date'",
        "'[yyyy-MM-dd HH:mm:ss] '",
        "'ElasticService'",
        "'$http'",
        "'$q'",
        "'$timeout'",
        "'$location'",
        "'ExternalSettingsService'",
        "'DebugService'",
        "'AlertService'",
        "'['",
        "']'",
        "' new node(s) joined the cluster'",
        "'['",
        "']'",
        "' node(s) left the cluster'",
        "' indices created: ['",
        "','",
        "']'",
        "' indices deleted: ['",
        "','",
        "']'",
        "'Elasticseach connection:'",
        "'GET'",
        "'/'",
        "'elasticsearch-http-basic plugin detected'",
        "'Attemping to connect with ['",
        "'/]'",
        "'/'",
        "'No active master, switching to basic mode'",
        "'No active master, switching to basic mode'",
        "'Error connecting to ['",
        "']'",
        "'Invalid Elasticsearch version['",
        "']'",
        "'Invalid Elasticsearch version['",
        "']'",
        "''",
        "'/'",
        "'POST'",
        "'cluster.routing.allocation.enable'",
        "'all'",
        "'PUT'",
        "'/_cluster/settings'",
        "'cluster.routing.allocation.enable'",
        "'none'",
        "'PUT'",
        "'/_cluster/settings'",
        "'/'",
        "'/_open'",
        "'Index was successfully opened'",
        "'Error while opening index'",
        "'POST'",
        "'/'",
        "'/_optimize'",
        "'POST'",
        "'/'",
        "'/_cache/clear'",
        "'POST'",
        "'/'",
        "'/_close'",
        "'Index was successfully closed'",
        "'Error while closing index'",
        "'POST'",
        "'/'",
        "'/_refresh'",
        "'POST'",
        "'/'",
        "'DELETE'",
        "'/'",
        "'/_settings'",
        "'PUT'",
        "'/_cluster/settings'",
        "'PUT'",
        "'/'",
        "'/_warmer/'",
        "'DELETE'",
        "'/'",
        "'/.percolator/'",
        "'DELETE'",
        "'/'",
        "'/.percolator/'",
        "'PUT'",
        "'/_snapshot/'",
        "'POST'",
        "'/_snapshot/'",
        "'DELETE'",
        "'/_snapshot/'",
        "'/'",
        "'DELETE'",
        "'/_snapshot/'",
        "'/'",
        "'/_restore'",
        "'POST'",
        "'/_snapshot/'",
        "'/'",
        "'PUT'",
        "'/_bench'",
        "'PUT'",
        "'/'",
        "'/'",
        "'/_warmer/'",
        "'PUT'",
        "'POST'",
        "'/_aliases'",
        "'/_template/'",
        "'DELETE'",
        "'/_template/'",
        "'PUT'",
        "'/_template'",
        "'GET'",
        "'/_cluster/reroute'",
        "'POST'",
        "'/_cat/'",
        "'?v'",
        "'GET'",
        "'/_nodes'",
        "'/'",
        "''",
        "'/hot_threads'",
        "'GET'",
        "'/_mapping'",
        "'GET'",
        "'/_cluster/state/metadata/'",
        "'?human'",
        "'GET'",
        "'/_nodes/'",
        "'/stats?human'",
        "'GET'",
        "'/'",
        "'/_stats?level=shards&human'",
        "'/'",
        "'/_recovery?active_only=true&human'",
        "'Error parsing output:'",
        "'REST APIs output:'",
        "'Error requesting shard stats data:'",
        "'GET'",
        "'/_aliases'",
        "'/'",
        "'/_analyze'",
        "'POST'",
        "'/'",
        "'/_warmer/'",
        "'GET'",
        "'/'",
        "'/.percolator/_search'",
        "'POST'",
        "'/_snapshot/_all'",
        "'GET'",
        "'/_snapshot/'",
        "'/_all'",
        "'GET'",
        "'Error parsing REST API data:'",
        "'REST API output:'",
        "'Error executing request:'",
        "'REST API output:'",
        "'/_cluster/state/master_node,routing_table,blocks/'",
        "'/_stats/docs,store'",
        "'/_nodes/stats/jvm,fs,os,process'",
        "'/_cluster/settings'",
        "'/_aliases'",
        "'/_cluster/health'",
        "'/_nodes/_all/os,jvm'",
        "'Error parsing cluster data:'",
        "'REST APIs output:'",
        "'Error requesting cluster data:'",
        "'/_cluster/state/master_node,blocks?local=true'",
        "'/_nodes/stats/jvm,fs,os?local=true'",
        "'/_cluster/settings?local=true'",
        "'/_cluster/health?local=true'",
        "'/_nodes/_all/os,jvm?local=true'",
        "'Error parsing cluster data:'",
        "'REST APIs output:'",
        "'Error requesting cluster data:'",
        "'REST API output:'",
        "'Error requesting cluster data'",
        "'/_cluster/health'",
        "'/_cluster/state'",
        "'/_nodes/stats?all=true'",
        "'/_nodes/hot_threads'",
        "'red'",
        "'Switching to normal mode'",
        "'Error loading cluster data'",
        "'Loading cluster information is taking '",
        "'too long. Try increasing the refresh interval'",
        "'No active master, switching to basic mode'",
        "'Error loading cluster data'",
        "'nodes'",
        "'ExplainService'",
        "'$TreeDnDConvert'",
        "'_explain'",
        "'?explain'",
        "'explain=true'",
        "'/'",
        "'/'",
        "'details'",
        "'ExternalSettingsService'",
        "'DebugService'",
        "'kopfSettings'",
        "'elasticsearch_root_path'",
        "'with_credentials'",
        "'refresh_rate'",
        "'theme'",
        "'GET'",
        "'./kopf_external_settings.json'",
        "'json'",
        "'Error processing external settings'",
        "'Error fetching external settings from file'",
        "'Error while loading settings from local storage'",
        "'HostHistoryService'",
        "'kopfHostHistory'",
        "'[]'",
        "':'",
        "'@'",
        "'kopfHostHistory'",
        "'kopfHostHistory'",
        "'PageService'",
        "'ElasticService'",
        "'DebugService'",
        "'$rootScope'",
        "'$document'",
        "'link[rel~=\\'icon\\']'",
        "'img'",
        "'kopf['",
        "']'",
        "'kopf - no connection'",
        "'#468847'",
        "'#c09853'",
        "'#B94A48'",
        "'#333'",
        "'canvas'",
        "'2d'",
        "'source-in'",
        "'image/x-icon'",
        "'Error while changing favicon'",
        "'AppState'",
        "'b'",
        "'KB'",
        "'MB'",
        "'GB'",
        "'TB'",
        "'PB'",
        "'.'",
        "'undefined'",
        "'0'",
        "'0'",
        "'0'",
        "':'",
        "':'"
    ],
    "variables": [
        "kopf",
        "indexName",
        "aliasName",
        "collection",
        "indices",
        "indexAliases",
        "aliases",
        "collection",
        "position",
        "indexPosition",
        "collection",
        "indexAliases",
        "size",
        "aliasPosition",
        "collection",
        "deletes",
        "adds",
        "edit",
        "json",
        "defaultDescription",
        "results",
        "infoId",
        "idx",
        "htmlHealth",
        "htmlState",
        "htmlStats",
        "gist",
        "files",
        "health",
        "state",
        "stats",
        "ht",
        "data",
        "history",
        "indices",
        "indices",
        "indices",
        "indices",
        "indices",
        "indices",
        "shard",
        "index",
        "fromNode",
        "shard",
        "shards",
        "sameShard",
        "settings",
        "body",
        "bodyString",
        "body",
        "version",
        "major",
        "regExp",
        "results",
        "host",
        "location",
        "url",
        "index",
        "settings",
        "newSettings",
        "editableSettings",
        "index",
        "TemplateBase",
        "nodes",
        "queries",
        "id",
        "q",
        "refreshIndex",
        "refreshIndex",
        "queries",
        "body",
        "autocomplete",
        "method",
        "host",
        "path",
        "body",
        "curl",
        "history",
        "rawHistory",
        "request",
        "exists",
        "i",
        "historyRaw",
        "path",
        "url",
        "isSearch",
        "isExplain",
        "csv",
        "blob",
        "downloadLink",
        "indices",
        "body",
        "body",
        "directive",
        "result",
        "target",
        "text",
        "icon",
        "handler",
        "$target",
        "sorts",
        "sortIcon",
        "cloned",
        "differences",
        "isNew",
        "originalAliases",
        "equal",
        "info",
        "totalSize",
        "nodeStats",
        "nodeInfo",
        "node",
        "lines",
        "header",
        "columns",
        "values",
        "start",
        "lastColumn",
        "end",
        "persistentAllocation",
        "transientAllocation",
        "nodeStats",
        "nodeInfo",
        "node",
        "indicesNames",
        "specialIndices",
        "closedIndices",
        "indexStats",
        "indexAliases",
        "index",
        "indices",
        "hasData",
        "nodes",
        "indices",
        "changes",
        "i",
        "i",
        "i",
        "equalNumberOfIndices",
        "i",
        "docDelta",
        "dataDelta",
        "shards",
        "unassignedShards",
        "indicesRouting",
        "totalShards",
        "shard",
        "key",
        "allocated",
        "unassigned",
        "indexMapping",
        "valid",
        "instance",
        "currentSettings",
        "instance",
        "protectedUrl",
        "connectionParts",
        "indexAliases",
        "routing",
        "shards",
        "shardMap",
        "instance",
        "shardsMap",
        "analyzers",
        "analyzer",
        "analyzableTypes",
        "fields",
        "prefix",
        "validFields",
        "addPrefix",
        "multiPrefix",
        "multiProps",
        "nestedType",
        "objectType",
        "nestedProperties",
        "attributes",
        "master",
        "data",
        "client",
        "diskUsedInBytes",
        "usedRatio",
        "lines",
        "BackwardCompatible",
        "HeaderLines",
        "threads",
        "thread",
        "blankLine",
        "json",
        "fsSettings",
        "urlSettings",
        "s3Settings",
        "hdfsSettings",
        "azureSettings",
        "fsRequired",
        "urlRequired",
        "s3Required",
        "hdfsRequired",
        "repository",
        "settings",
        "currentSettings",
        "checkVersion",
        "major",
        "minor",
        "patch",
        "value",
        "version",
        "valid",
        "parts",
        "higherMajor",
        "higherMinor",
        "higherPatch",
        "UNITS",
        "e",
        "filtered",
        "UNITS",
        "UNIT_MEASURE",
        "result",
        "idx",
        "amount",
        "content",
        "matches",
        "aliases",
        "i",
        "alias",
        "body",
        "body",
        "asc",
        "matches",
        "regExp",
        "idx",
        "idx",
        "alias",
        "matches",
        "results",
        "total",
        "first",
        "lastPage",
        "last",
        "elements",
        "next",
        "previous",
        "collection",
        "filtered",
        "url",
        "path",
        "PATHS",
        "format",
        "prefix",
        "pathTokens",
        "suggestedTokenIndex",
        "replaceVariables",
        "replaced",
        "isValidSuggestion",
        "valid",
        "alternatives",
        "addIfNotPresent",
        "suggestedPathTokens",
        "suggestedToken",
        "pathIndex",
        "Alert",
        "currentDate",
        "alert",
        "alert",
        "alert",
        "alert",
        "service",
        "textarea",
        "MaxMessages",
        "messages",
        "updatedAt",
        "addMessage",
        "date",
        "instance",
        "encode",
        "changes",
        "joins",
        "leaves",
        "created",
        "deleted",
        "root",
        "withCredentials",
        "path",
        "body",
        "body",
        "path",
        "success",
        "error",
        "path",
        "path",
        "path",
        "success",
        "error",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "index",
        "id",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "body",
        "data",
        "path",
        "path",
        "body",
        "path",
        "parseTemplates",
        "templates",
        "path",
        "body",
        "path",
        "parseCat",
        "path",
        "parseHotThreads",
        "threads",
        "transformed",
        "path",
        "transformed",
        "path",
        "transformed",
        "path",
        "host",
        "indexStats",
        "shardsStats",
        "shardStats",
        "indexRecovery",
        "shardRecoveries",
        "createAliases",
        "indices",
        "allAliases",
        "indexAliases",
        "aliases",
        "info",
        "buildTokens",
        "tokens",
        "path",
        "path",
        "parseWarmers",
        "warmers",
        "index",
        "i",
        "indexWarmers",
        "path",
        "parsePercolators",
        "collection",
        "total",
        "size",
        "percolators",
        "body",
        "parseRepositories",
        "repositories",
        "path",
        "path",
        "parseSnapshots",
        "snapshots",
        "url",
        "config",
        "host",
        "state",
        "indexStats",
        "nodesStats",
        "settings",
        "aliases",
        "health",
        "nodes",
        "main",
        "cluster",
        "host",
        "state",
        "nodesStats",
        "settings",
        "health",
        "nodes",
        "cluster",
        "host",
        "requests",
        "threshold",
        "start",
        "end",
        "took",
        "message",
        "nextRefresh",
        "lHits",
        "lExplanation",
        "KEY",
        "ES_ROOT_PATH",
        "WITH_CREDENTIALS",
        "REFRESH_RATE",
        "THEME",
        "UPDATABLE_SETTINGS",
        "localSettings",
        "settings",
        "settingsFuture",
        "settings",
        "settings",
        "content",
        "history",
        "host",
        "username",
        "password",
        "entry",
        "history",
        "i",
        "instance",
        "faviconUrl",
        "img",
        "colors",
        "color",
        "canvas",
        "context",
        "s",
        "e",
        "pathParts",
        "i",
        "exp",
        "hh",
        "mm",
        "ss"
    ],
    "comments": [
        "manages behavior of confirmation dialog",
        "when created, does nothing",
        "when created, does nothing",
        "if alias already exists, check if its already associated with index",
        "by index",
        "By analyzer",
        "'allocation',",
        "'fielddata',",
        "'health',",
        "'indices',",
        "'nodes',",
        "'pending_tasks',",
        "'thread_pool',",
        "'shards',",
        "'segments'",
        "selects which info should be retrieved",
        "so logic bellow remains the same in case result is not an array",
        "since control is only exposed when shards are moving",
        "in case num indices < num columns",
        "remember last active?",
        "$scope.version = '2.1.2';",
        "default",
        "not opening from fs",
        "TODO: could move that to editable_index_settings model",
        "registered snapshot",
        "dont add to body if not present, these are optional, all indices included by default",
        "name and repo required",
        "dont add to body if not present, these are optional, all indices included by default",
        "clear 'active' snapshot",
        "FIXME: better send name + id",
        "main -> GET /",
        "Cluster Health(/_cluster/health)",
        "INDEX_CLOSED_BLOCK = new ClusterBlock(4, \"index closed\", ...",
        "checks for node differences",
        "checks for indices differences",
        "var docRate = docDelta / ((this.created_at - old_cluster.created_at) / 1000);",
        "FIXME: 0.90/1.0 check",
        "cluster",
        "recovery",
        "routing",
        "FIXME: 0.90/1.0 check",
        "blocks",
        "cache",
        "index",
        "routing",
        "slowlog",
        "translog",
        "Expects URL according to /^(https|http):\\/\\/(\\w+):(\\w+)@(.*)/i;",
        "Examples:",
        "http://localhost:9200",
        "http://user:password@localhost:9200",
        "https://localhost:9200",
        "default",
        "multi field",
        "nested and object types",
        "normal fields",
        "pre 4859ce5d79a786b58b1cd2fb131614677efd6b91",
        "TYPES *",
        "ace editor",
        "validation error",
        "sets value and moves cursor to beggining",
        "formats the json content",
        "override benchmark options",
        "defined only by competitor",
        "cache",
        "Hide healthy == show unhealthy only",
        "if not valid regexp, still try normal matching",
        "Suggest",
        "Multi Search",
        "Search",
        "removes ALL alerts",
        "remove a particular alert message",
        "creates an error alert",
        "creates an info alert",
        "creates success alert",
        "creates a warn alert",
        "detected https://github.com/Asquera/elasticsearch-http-basic",
        "shard is started",
        "non started shard",
        "Explain query",
        "Remove hits from main response",
        "Explain document",
        "Sometimes ._explanation, .sometimes explanation, let's normalize it",
        "Gets the value of a nested property from an object if it exists.",
        "Otherwise returns the default_value given.",
        "Example: get the value of object[a][b][c][d]",
        "where property_path is [a,b,c,d]",
        "path as nested properties",
        "Checks if value is both non null and undefined",
        "Checks if the String representation of value is a non empty string",
        "string.trim().length is grater than 0",
        "Returns the given date as a String formatted as hh:MM:ss"
    ],
    "docstrings": [
        "* Prompts confirmation dialog for relocating currently selected shard\n     * to the given node\n     * @param {string} toNode - target node id",
        "* Evaluates if relocation target box should be displayed for the cell\n     * corresponding to the given index and node\n     *\n     * @param {Index} index - index\n     * @param {Node} node - target node\n     * @returns {boolean}",
        "* Replaces the variables on suggestedPathTokens({index}, {type}...) for\n     * actual values extracted from pathTokens\n     * @param {Array} pathTokens tokens for the path to be suggested\n     * @param {Array} suggestedPathTokens tokens for the suggested path\n     * @returns {Array} a new array with the variables from suggestedPathTokens\n     * replaced by the actual values from pathTokens",
        "* Checks if a given path matches the definition and current state of\n     * the path to be autocompleted\n     *\n     * @param {Array} pathTokens tokens of path to be autocompleted\n     * @param {Array} suggestedPathTokens tokens of possible suggestion\n     * @returns {boolean} if suggestion is valid",
        "* Resets service state",
        "* Connects to Elasticsearch instance and triggers auto polling of cluster\n     * state\n     *\n     * @param {string} host - Elasticsearch url",
        "* Creates an index\n     *\n     * @param {string} name - new index name\n     * @param {Object} settings - index settings\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Enables shard allocation\n     *\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Disables shard allocation\n     *\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Opens index\n     *\n     * @param {string} index - index name",
        "* Optimizes index\n     *\n     * @param {string} index - index name\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Clears index cache\n     *\n     * @param {string} index - index name\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Closes index\n     *\n     * @param {string} index - index name",
        "* Refreshes index\n     *\n     * @param {string} index - index name\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Deletes index\n     *\n     * @param {string} index - index name\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Updates index settings\n     *\n     * @param {string} name - index name\n     * @param {Object} settings - index settings\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Updates the cluster settings\n     *\n     * @param {Object} settings - new cluster settings\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Deletes a warmer\n     *\n     * @param {Warmer} warmer - warmer to be deleted\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Deletes a percolator\n     *\n     * @param {string} index - percolator target index\n     * @param {string} id - percolator id\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Creates a percolator query\n     *\n     * @param {Percolator} percolator - percolator to be created\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Creates a repository\n     *\n     * @param {string} repository - repository name\n     * @param {Object} body - repository settings\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Deletes a repository\n     *\n     * @param {string} repository - repository name\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Deletes a snapshot\n     *\n     * @param {string} repository - repository name\n     * @param {string} snapshot - snapshot name\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Restores a snapshot\n     *\n     * @param {string} repository - repository name\n     * @param {string} name - snapshot name\n     * @param {Object} body - restore settings\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Creates a snapshot\n     *\n     * @param {string} repository - repository name\n     * @param {string} snapshot - snapshot name\n     * @param {Object} body - snapshot settings\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Executes a benchmark\n     *\n     * @param {Object} body - benchmark settings\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Registers a warmer query\n     *\n     * @param {Warmer} warmer - Warmer query\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Updates indices aliases\n     *\n     * @param {Alias[]} add - aliases that should be added\n     * @param {Alias[]} remove - aliases that should be removed\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Deletes an index template\n     *\n     * @param {string} name - template name\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Creates a new index template\n     *\n     * @param {IndexTemplate} template - The index template\n     * @callback success - invoked on success\n     * @callback error - invoked on error",
        "* Fetches all index templates\n     * @callback success\n     * @callback error",
        "* Relocates a shard to a given node\n     * @param {string} shard - The shard to be relocated\n     * @param {string} index - The index the shard belongs to\n     * @param {string} fromNode - Node where shard is currently located\n     * @param {string} toNode - Target node for shard relocation\n     * @callback success\n     * @callback error",
        "* Executes cat api request\n     * @callback success\n     * @callback error",
        "* Get hot threads\n     *\n     * @param {string} node - The target node(or empty if all)\n     * @param {string} type - the type of threads to be sampled\n     * @param {string} threads - The number of threads to be sampled\n     * @param {string} interval - The sampling interval in ms\n     * @param {boolean} ignoreIdleThreads - Ignores idle threads or not\n     * @callback success\n     * @callback error",
        "* Retrieve comples cluster mapping\n     *\n     * @callback success\n     * @callback error",
        "* Fetches shard information both from index/_stats and index/_recovery\n     * @param {string} shard - shard number\n     * @param {string} index - index\n     * @param {string} nodeId - node id\n     * @callback success\n     * @callback error",
        "* Sets the cluster state as broken and refreshes cluster state.\n     * If cluster is broken, redirect view to nodes view\n     * @param {Boolean} broken - indicates if cluster is broken",
        "* Adds authentication information/cookies to request params\n     * @param {Object} config - request config",
        "* Normalize Get document by id and Document search responses.\n     * Build explanation tree for TreeDnd directive.",
        "* Updates page title if name is different than clusterName\n     *\n     * @param {string} name - cluster name"
    ],
    "functions": [
        "_handleResponse",
        "doSendRequest",
        "updateSortingIcon",
        "link",
        "IndexAliases",
        "Alias",
        "BrokenCluster",
        "CatResult",
        "Cluster",
        "ClusterChanges",
        "ClusterHealth",
        "ClusterMapping",
        "ClusterSettings",
        "EditableIndexSettings",
        "ESConnection",
        "HotThread",
        "HotThreads",
        "Index",
        "IndexMetadata",
        "isAnalyzable",
        "IndexTemplate",
        "Node",
        "NodeHotThreads",
        "NodeStats",
        "PercolateQuery",
        "PercolatorsPage",
        "Repository",
        "Shard",
        "ShardStats",
        "Snapshot",
        "Token",
        "Version",
        "Warmer",
        "stringify",
        "strStartsWith",
        "stringify",
        "AceEditor",
        "AliasFilter",
        "Benchmark",
        "Competitor",
        "Gist",
        "IndexFilter",
        "IndexTemplateFilter",
        "ModalControls",
        "NodeFilter",
        "Paginator",
        "Page",
        "Request",
        "SnapshotFilter",
        "URLAutocomplete",
        "WarmerFilter",
        "analyze",
        "containsString",
        "readablizeBytes",
        "getProperty",
        "isDefined",
        "notEmpty",
        "isNumber",
        "getTimeString"
    ],
    "classes": []
}