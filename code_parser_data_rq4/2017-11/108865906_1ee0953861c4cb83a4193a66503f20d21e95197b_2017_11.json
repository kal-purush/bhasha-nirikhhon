{
    "identifiers": [
        "logging",
        "base64",
        "collections",
        "json",
        "socket",
        "requests",
        "logging",
        "getLogger",
        "host",
        "mac",
        "host",
        "mac",
        "method",
        "json",
        "dumps",
        "method",
        "json",
        "dumps",
        "method",
        "ret",
        "pin",
        "clientid",
        "nickname",
        "json",
        "dumps",
        "clientid",
        "nickname",
        "encode",
        "pin",
        "base64",
        "encodebytes",
        "username",
        "pin",
        "encode",
        "decode",
        "replace",
        "base64string",
        "requests",
        "post",
        "_host",
        "data",
        "authorization",
        "headers",
        "headers",
        "timeout",
        "TIMEOUT",
        "response",
        "raise_for_status",
        "requests",
        "exceptions",
        "HTTPError",
        "exception_instance",
        "_LOGGER",
        "error",
        "exception_instance",
        "exception_instance",
        "_LOGGER",
        "error",
        "exception_instance",
        "response",
        "json",
        "_LOGGER",
        "debug",
        "json",
        "dumps",
        "resp",
        "indent",
        "resp",
        "resp",
        "get",
        "response",
        "cookies",
        "_cookies",
        "_mac",
        "_mac",
        "split",
        "pack",
        "addr_byte",
        "addr_byte",
        "addr_byte",
        "addr_byte",
        "addr_byte",
        "addr_byte",
        "hw_addr",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_DGRAM",
        "socket_instance",
        "setsockopt",
        "socket",
        "SOL_SOCKET",
        "socket",
        "SO_BROADCAST",
        "socket_instance",
        "sendto",
        "msg",
        "socket_instance",
        "close",
        "log_errors",
        "encode",
        "requests",
        "post",
        "_host",
        "headers",
        "headers",
        "cookies",
        "_cookies",
        "data",
        "data",
        "timeout",
        "TIMEOUT",
        "requests",
        "exceptions",
        "HTTPError",
        "exception_instance",
        "log_errors",
        "_LOGGER",
        "error",
        "exception_instance",
        "exception_instance",
        "log_errors",
        "_LOGGER",
        "error",
        "exception_instance",
        "response",
        "content",
        "content",
        "url",
        "log_errors",
        "requests",
        "post",
        "_host",
        "url",
        "data",
        "encode",
        "cookies",
        "_cookies",
        "timeout",
        "TIMEOUT",
        "requests",
        "exceptions",
        "HTTPError",
        "exception_instance",
        "log_errors",
        "_LOGGER",
        "error",
        "exception_instance",
        "exception_instance",
        "log_errors",
        "_LOGGER",
        "error",
        "exception_instance",
        "json",
        "loads",
        "response",
        "content",
        "decode",
        "html",
        "command",
        "send_req_ircc",
        "get_command_code",
        "command",
        "source",
        "bravia_req_json",
        "_jdata_build",
        "source",
        "content_index",
        "resp",
        "get",
        "len",
        "resp",
        "get",
        "resp",
        "get",
        "original_content_list",
        "extend",
        "resp",
        "get",
        "original_content_list",
        "bravia_req_json",
        "_jdata_build",
        "resp",
        "get",
        "resp",
        "get",
        "result",
        "results",
        "result",
        "original_content_list",
        "extend",
        "get_source",
        "result",
        "bravia_req_json",
        "_jdata_build",
        "resp",
        "get",
        "resp",
        "get",
        "result",
        "results",
        "result",
        "bravia_req_json",
        "_jdata_build",
        "result",
        "resp",
        "get",
        "original_content_list",
        "extend",
        "resp",
        "get",
        "collections",
        "OrderedDict",
        "content_item",
        "original_content_list",
        "content_item",
        "content_item",
        "return_value",
        "bravia_req_json",
        "_jdata_build",
        "resp",
        "resp",
        "get",
        "resp",
        "get",
        "playing_content_data",
        "get",
        "playing_content_data",
        "get",
        "playing_content_data",
        "get",
        "playing_content_data",
        "get",
        "playing_content_data",
        "get",
        "playing_content_data",
        "get",
        "playing_content_data",
        "get",
        "playing_content_data",
        "get",
        "return_value",
        "bravia_req_json",
        "_jdata_build",
        "resp",
        "resp",
        "get",
        "resp",
        "get",
        "power_data",
        "get",
        "return_value",
        "bravia_req_json",
        "_jdata_build",
        "resp",
        "get",
        "resp",
        "get",
        "_LOGGER",
        "error",
        "json",
        "dumps",
        "resp",
        "indent",
        "command_name",
        "len",
        "_commands",
        "_refresh_commands",
        "command_data",
        "_commands",
        "command_data",
        "get",
        "command_name",
        "command_data",
        "get",
        "bravia_req_json",
        "_jdata_build",
        "resp",
        "get",
        "resp",
        "get",
        "result",
        "results",
        "result",
        "get",
        "result",
        "_LOGGER",
        "error",
        "json",
        "dumps",
        "resp",
        "indent",
        "volume",
        "bravia_req_json",
        "_jdata_build",
        "volume",
        "bravia_req_json",
        "_jdata_build",
        "resp",
        "resp",
        "get",
        "resp",
        "get",
        "system_content_data",
        "get",
        "system_content_data",
        "get",
        "system_content_data",
        "get",
        "return_value",
        "requests",
        "cookies",
        "RequestsCookieJar",
        "cookies",
        "_cookies",
        "get",
        "cookies",
        "log_errors",
        "_recreate_auth_cookie",
        "requests",
        "get",
        "_host",
        "cookies",
        "cookies",
        "timeout",
        "TIMEOUT",
        "requests",
        "exceptions",
        "HTTPError",
        "exception_instance",
        "log_errors",
        "_LOGGER",
        "error",
        "exception_instance",
        "exception_instance",
        "log_errors",
        "_LOGGER",
        "error",
        "exception_instance",
        "response",
        "content",
        "xml",
        "dom",
        "minidom",
        "minidom",
        "parseString",
        "content",
        "obj",
        "parsed_xml",
        "getElementsByTagName",
        "obj",
        "getElementsByTagName",
        "firstChild",
        "obj",
        "getElementsByTagName",
        "firstChild",
        "obj",
        "getElementsByTagName",
        "firstChild",
        "nodeValue",
        "obj",
        "getElementsByTagName",
        "firstChild",
        "nodeValue",
        "parsed_objects",
        "app_name",
        "log_errors",
        "len",
        "_app_list",
        "load_app_list",
        "log_errors",
        "log_errors",
        "app_name",
        "_app_list",
        "_start_app",
        "_app_list",
        "app_name",
        "log_errors",
        "log_errors",
        "app_id",
        "log_errors",
        "_recreate_auth_cookie",
        "requests",
        "post",
        "_host",
        "app_id",
        "cookies",
        "cookies",
        "timeout",
        "TIMEOUT",
        "requests",
        "exceptions",
        "HTTPError",
        "exception_instance",
        "log_errors",
        "_LOGGER",
        "error",
        "exception_instance",
        "exception_instance",
        "log_errors",
        "_LOGGER",
        "error",
        "exception_instance",
        "response",
        "content",
        "content",
        "_wakeonlan",
        "get_power_status",
        "send_req_ircc",
        "get_command_code",
        "send_req_ircc",
        "get_command_code",
        "send_req_ircc",
        "get_command_code",
        "send_req_ircc",
        "get_command_code",
        "mute",
        "send_req_ircc",
        "get_command_code",
        "source",
        "len",
        "_content_mapping",
        "load_source_list",
        "source",
        "_content_mapping",
        "_content_mapping",
        "source",
        "play_content",
        "uri",
        "uri",
        "bravia_req_json",
        "_jdata_build",
        "uri",
        "send_req_ircc",
        "get_command_code",
        "send_req_ircc",
        "get_command_code",
        "send_req_ircc",
        "get_command_code",
        "send_req_ircc",
        "get_command_code"
    ],
    "literals": [
        "\"method\"",
        "\"params\"",
        "\"id\"",
        "\"version\"",
        "\"1.0\"",
        "\"method\"",
        "\"params\"",
        "\"id\"",
        "\"version\"",
        "\"1.0\"",
        "\"method\"",
        "\"actRegister\"",
        "\"params\"",
        "\"clientid\"",
        "\"nickname\"",
        "\"level\"",
        "\"private\"",
        "\"value\"",
        "\"yes\"",
        "\"function\"",
        "\"WOL\"",
        "\"id\"",
        "\"version\"",
        "\"1.0\"",
        "'utf-8'",
        "''",
        "'%s:%s'",
        "'\\n'",
        "''",
        "'Authorization'",
        "\"Basic %s\"",
        "'Connection'",
        "\"keep-alive\"",
        "'http://'",
        "'/sony/accessControl'",
        "\"[W] HTTPError: \"",
        "\"[W] Exception: \"",
        "'error'",
        "':'",
        "'BBBBBB'",
        "b'\\xff'",
        "'<broadcast>'",
        "'SOAPACTION'",
        "'\"urn:schemas-sony-com:service:IRCC:1#X_SendIRCC\"'",
        "\"<?xml version=\\\"1.0\\\"?><s:Envelope xmlns:s=\\\"http://schemas.xmlsoap.org\"",
        "\"/soap/envelope/\\\" \"",
        "\"s:encodingStyle=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\"><s:Body>\"",
        "\"<u:X_SendIRCC \"",
        "\"xmlns:u=\\\"urn:schemas-sony-com:service:IRCC:1\\\"><IRCCCode>\"",
        "\"</IRCCCode></u:X_SendIRCC></s:Body></s:Envelope>\"",
        "\"UTF-8\"",
        "'http://'",
        "'/sony/IRCC'",
        "\"HTTPError: \"",
        "\"Exception: \"",
        "'http://'",
        "'/'",
        "\"UTF-8\"",
        "\"HTTPError: \"",
        "\"Exception: \"",
        "'utf-8'",
        "\"sony/avContent\"",
        "\"getContentList\"",
        "\"source\"",
        "\"stIdx\"",
        "'error'",
        "'result'",
        "'result'",
        "'index'",
        "'result'",
        "\"sony/avContent\"",
        "\"getSourceList\"",
        "\"scheme\"",
        "\"tv\"",
        "'error'",
        "'result'",
        "'source'",
        "'tv:dvbc'",
        "'tv:dvbt'",
        "'source'",
        "\"sony/avContent\"",
        "\"getSourceList\"",
        "\"scheme\"",
        "\"extInput\"",
        "'error'",
        "'result'",
        "'source'",
        "'extInput:hdmi'",
        "'extInput:composite'",
        "'extInput:component'",
        "\"sony/avContent\"",
        "\"getContentList\"",
        "'error'",
        "'result'",
        "'title'",
        "'uri'",
        "\"sony/avContent\"",
        "\"getPlayingContentInfo\"",
        "'error'",
        "'result'",
        "'programTitle'",
        "'programTitle'",
        "'title'",
        "'title'",
        "'programMediaType'",
        "'programMediaType'",
        "'dispNum'",
        "'dispNum'",
        "'source'",
        "'source'",
        "'uri'",
        "'uri'",
        "'durationSec'",
        "'durationSec'",
        "'startDateTime'",
        "'startDateTime'",
        "'off'",
        "\"sony/system\"",
        "\"getPowerStatus\"",
        "'error'",
        "'result'",
        "'status'",
        "\"sony/system\"",
        "\"getRemoteControllerInfo\"",
        "'error'",
        "'result'",
        "\"JSON request error: \"",
        "'name'",
        "'value'",
        "\"sony/audio\"",
        "\"getVolumeInformation\"",
        "'error'",
        "'result'",
        "'target'",
        "'speaker'",
        "\"JSON request error:\"",
        "\"sony/audio\"",
        "\"setAudioVolume\"",
        "\"target\"",
        "\"speaker\"",
        "\"volume\"",
        "\"sony/system\"",
        "\"getSystemInformation\"",
        "'error'",
        "'result'",
        "'name'",
        "'name'",
        "'model'",
        "'model'",
        "'language'",
        "'language'",
        "\"auth\"",
        "\"auth\"",
        "'http://'",
        "'/DIAL/sony/applist'",
        "\"HTTPError: \"",
        "\"Exception: \"",
        "\"app\"",
        "\"name\"",
        "\"id\"",
        "\"name\"",
        "\"id\"",
        "'http://'",
        "'/DIAL/apps/'",
        "\"HTTPError: \"",
        "\"Exception: \"",
        "'active'",
        "'TvPower'",
        "'PowerOff'",
        "'VolumeUp'",
        "'VolumeDown'",
        "'Mute'",
        "\"sony/avContent\"",
        "\"setPlayContent\"",
        "\"uri\"",
        "'Play'",
        "'Pause'",
        "'Next'",
        "'Prev'"
    ],
    "variables": [
        "TIMEOUT",
        "_LOGGER",
        "_host",
        "_mac",
        "_cookies",
        "_commands",
        "_content_mapping",
        "_app_list",
        "ret",
        "ret",
        "authorization",
        "headers",
        "username",
        "base64string",
        "headers",
        "headers",
        "response",
        "resp",
        "_cookies",
        "addr_byte",
        "hw_addr",
        "msg",
        "socket_instance",
        "headers",
        "data",
        "response",
        "content",
        "response",
        "html",
        "original_content_list",
        "content_index",
        "resp",
        "content_index",
        "original_content_list",
        "resp",
        "results",
        "resp",
        "results",
        "resp",
        "return_value",
        "return_value",
        "return_value",
        "resp",
        "playing_content_data",
        "return_value",
        "return_value",
        "return_value",
        "return_value",
        "return_value",
        "return_value",
        "return_value",
        "return_value",
        "return_value",
        "resp",
        "power_data",
        "return_value",
        "resp",
        "_commands",
        "resp",
        "results",
        "return_value",
        "resp",
        "system_content_data",
        "return_value",
        "return_value",
        "return_value",
        "cookies",
        "headers",
        "parsed_objects",
        "cookies",
        "response",
        "content",
        "parsed_xml",
        "parsed_objects",
        "_app_list",
        "headers",
        "cookies",
        "response",
        "content",
        "_content_mapping",
        "uri"
    ],
    "comments": [
        "mac address is optional but necessary if we want to turn on the TV",
        "pylint: disable=broad-except",
        "pylint: disable=broad-except",
        "pylint: disable=broad-except",
        "tv:dvbc = via cable, tv:dvbt = via DTT",
        "physical inputs",
        "by default the TV is turned off",
        "pylint: disable=broad-except",
        "pylint: disable=broad-except",
        "pylint: disable=broad-except",
        "Try using the power on command incase the WOL doesn't work"
    ],
    "docstrings": [
        "\"\"\"\nSony Bravia RC API\n\nBy Antonio Parraga Navarro\n\ndedicated to Isabel\n\n\"\"\"",
        "\"\"\"Initialize the Sony Bravia RC class.\"\"\"",
        "\"\"\"Connect to TV and get authentication cookie.\n\n        Parameters\n        ---------\n        pin: str\n            Pin code show by TV (or 0000 to get Pin Code).\n        clientid: str\n            Client ID.\n        nickname: str\n            Client human friendly name.\n\n        Returns\n        -------\n        bool\n            True if connected.\n        \"\"\"",
        "\"\"\"Send an IRCC command via HTTP to Sony Bravia.\"\"\"",
        "\"\"\" Send request command via HTTP json to Sony Bravia.\"\"\"",
        "\"\"\"Sends a command to the TV.\"\"\"",
        "\"\"\"Returns list of Sources\"\"\"",
        "\"\"\" Load source list from Sony Bravia.\"\"\"",
        "\"\"\"Get power status: off, active, standby\"\"\"",
        "\"\"\"Get volume info.\"\"\"",
        "\"\"\"Set volume level, range 0..1.\"\"\"",
        "\"\"\"\n        The default cookie is for URL/sony. For some commands we need it for the root path\n        \"\"\"",
        "\"\"\"Get the list of installed apps\"\"\"",
        "\"\"\"Start an app by name\"\"\"",
        "\"\"\"Start an app by id\"\"\"",
        "\"\"\"Turn the media player on.\"\"\"",
        "\"\"\"Turn off media player.\"\"\"",
        "\"\"\"Volume up the media player.\"\"\"",
        "\"\"\"Volume down media player.\"\"\"",
        "\"\"\"Send mute command.\"\"\"",
        "\"\"\"Set the input source.\"\"\"",
        "\"\"\"Play content by URI.\"\"\"",
        "\"\"\"Send play command.\"\"\"",
        "\"\"\"Send media pause command to media player.\"\"\"",
        "\"\"\"Send next track command.\"\"\"",
        "\"\"\"Send the previous track command.\"\"\""
    ],
    "functions": [
        "_jdata_build",
        "connect",
        "is_connected",
        "_wakeonlan",
        "send_req_ircc",
        "bravia_req_json",
        "send_command",
        "get_source",
        "load_source_list",
        "get_playing_info",
        "get_power_status",
        "_refresh_commands",
        "get_command_code",
        "get_volume_info",
        "set_volume_level",
        "get_system_info",
        "_recreate_auth_cookie",
        "load_app_list",
        "start_app",
        "_start_app",
        "turn_on",
        "turn_off",
        "volume_up",
        "volume_down",
        "mute_volume",
        "select_source",
        "play_content",
        "media_play",
        "media_pause",
        "media_next_track",
        "media_previous_track"
    ],
    "classes": [
        "BraviaRC"
    ]
}