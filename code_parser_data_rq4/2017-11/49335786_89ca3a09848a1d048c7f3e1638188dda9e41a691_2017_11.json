{
    "identifiers": [
        "org",
        "eclipse",
        "che",
        "sample",
        "ide",
        "javax",
        "inject",
        "Inject",
        "org",
        "eclipse",
        "che",
        "api",
        "promises",
        "client",
        "org",
        "eclipse",
        "che",
        "ide",
        "api",
        "app",
        "AppContext",
        "org",
        "eclipse",
        "che",
        "ide",
        "rest",
        "AsyncRequestFactory",
        "org",
        "eclipse",
        "che",
        "ide",
        "rest",
        "StringUnmarshaller",
        "org",
        "eclipse",
        "che",
        "ide",
        "ui",
        "loaders",
        "request",
        "LoaderFactory",
        "appContext",
        "asyncRequestFactory",
        "loaderFactory",
        "Inject",
        "appContext",
        "asyncRequestFactory",
        "loaderFactory",
        "appContext",
        "appContext",
        "asyncRequestFactory",
        "asyncRequestFactory",
        "loaderFactory",
        "loaderFactory",
        "name",
        "asyncRequestFactory",
        "createGetRequest",
        "appContext",
        "getMasterApiEndpoint",
        "name",
        "loader",
        "loaderFactory",
        "newLoader",
        "send"
    ],
    "literals": [
        "\"/hello/\"",
        "\"Waiting for hello...\""
    ],
    "variables": [
        "appContext",
        "asyncRequestFactory",
        "loaderFactory"
    ],
    "comments": [],
    "docstrings": [
        "* Copyright (c) 2012-2017\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html",
        "* Client for consuming the sample server service.\n *\n * @author Edgar Mueller",
        "* Constructor.\n   *\n   * @param appContext the {@link AppContext}\n   * @param asyncRequestFactory the {@link AsyncRequestFactory} that is used to create requests\n   * @param loaderFactory the {@link LoaderFactory} for displaying a message while waiting for a\n   *     response",
        "* Invoke the sample server service.\n   *\n   * @param name a parameter\n   * @return a Promise containing the server response"
    ],
    "functions": [
        "MyServiceClient",
        "getHello"
    ],
    "classes": [
        "MyServiceClient"
    ]
}