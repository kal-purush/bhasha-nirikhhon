{
    "identifiers": [
        "fs",
        "path",
        "vm",
        "moduleId",
        "pluginName",
        "moduleName",
        "write",
        "pluginName",
        "entryPoint",
        "req",
        "write",
        "filename",
        "contents",
        "config",
        "write",
        "filename",
        "contents",
        "something",
        "moduleId",
        "code",
        "something",
        "something",
        "moduleId",
        "node",
        "node",
        "moduleId",
        "path",
        "entryPoints",
        "config",
        "callback",
        "err",
        "result",
        "entryPoints",
        "entryPointsMap",
        "modules",
        "entryPoints",
        "allMentionedModulesMap",
        "includedModule",
        "allMentionedModulesMap",
        "includedModule",
        "excludedModule",
        "allMentionedModulesMap",
        "excludedModule",
        "require",
        "path",
        "__dirname",
        "vm",
        "code",
        "r",
        "require",
        "loaderModule",
        "loaderModule",
        "loaderModule",
        "config",
        "config",
        "config",
        "config",
        "config",
        "loader",
        "config",
        "loader",
        "localRequire",
        "resolvePath",
        "path",
        "localRequire",
        "path",
        "r",
        "r",
        "r",
        "moduleId",
        "entryPointsMap",
        "entryPointsMap",
        "moduleId",
        "entryPoint",
        "entryPoint",
        "entryPoint",
        "resolvePath",
        "entryPoint",
        "entryPoint",
        "entryPoint",
        "resolvePath",
        "loader",
        "allMentionedModulesMap",
        "loader",
        "emitEntryPoints",
        "modules",
        "entryPointsMap",
        "loader",
        "callback",
        "partialResult",
        "cssInlinedResources",
        "partialResult",
        "err",
        "callback",
        "err",
        "modules",
        "entryPoints",
        "modules",
        "m",
        "modulesMap",
        "m",
        "m",
        "modules",
        "m",
        "modulesGraph",
        "m",
        "m",
        "topologicalSort",
        "modulesGraph",
        "modulesGraph",
        "entryPoints",
        "moduleToBundle",
        "entryPoints",
        "moduleToBundle",
        "moduleToBundle",
        "info",
        "visit",
        "rootNodes",
        "modulesGraph",
        "info",
        "excludes",
        "excludeRoot",
        "visit",
        "excludeRoot",
        "modulesGraph",
        "allExcludes",
        "exclude",
        "allDependencies",
        "exclude",
        "sortedModules",
        "allDependencies",
        "bundleData",
        "moduleToBundle",
        "includedModules",
        "emitEntryPoint",
        "modulesMap",
        "modulesGraph",
        "moduleToBundle",
        "includedModules",
        "info",
        "info",
        "info",
        "result",
        "result",
        "res",
        "pluginName",
        "res",
        "usedPlugins",
        "pluginName",
        "usedPlugins",
        "pluginName",
        "res",
        "pluginName",
        "usedPlugins",
        "pluginName",
        "usedPlugins",
        "pluginName",
        "plugin",
        "write",
        "filename",
        "contents",
        "result",
        "filename",
        "contents",
        "plugin",
        "write",
        "extractStrings",
        "removeDuplicateTSBoilerplate",
        "result",
        "bundleData",
        "destFiles",
        "parseDefineCall",
        "moduleMatch",
        "depsMatch",
        "moduleMatch",
        "depsMatch",
        "deps",
        "deps",
        "dep",
        "dep",
        "dep",
        "dep",
        "dep",
        "dep",
        "dep",
        "dep",
        "pieces",
        "prefix",
        "pieces",
        "_path",
        "pieces",
        "prefix",
        "_path",
        "pieces",
        "_path",
        "_path",
        "path",
        "path",
        "_path",
        "prefix",
        "res",
        "prefix",
        "_path",
        "deps",
        "destFiles",
        "destFile",
        "index",
        "destFile",
        "destFile",
        "moduleId",
        "destFile",
        "source",
        "source",
        "matches",
        "parseDefineCall",
        "matches",
        "matches",
        "useCounts",
        "defineCall",
        "useCounts",
        "defineCall",
        "defineCall",
        "dep",
        "useCounts",
        "dep",
        "useCounts",
        "dep",
        "useCounts",
        "sortedByUseModules",
        "a",
        "b",
        "useCounts",
        "b",
        "useCounts",
        "a",
        "moduleId",
        "sortedByUseModules",
        "index",
        "replacementMap",
        "index",
        "destFile",
        "source",
        "source",
        "source",
        "_",
        "moduleMatch",
        "depsMatch",
        "parseDefineCall",
        "moduleMatch",
        "depsMatch",
        "replacementMap",
        "defineCall",
        "defineCall",
        "defineCall",
        "dep",
        "replacementMap",
        "dep",
        "dep",
        "destFile",
        "sortedByUseModules",
        "destFile",
        "destFiles",
        "destFiles",
        "destFiles",
        "destFile",
        "destFile",
        "source",
        "source",
        "i",
        "lines",
        "i",
        "lines",
        "i",
        "IS_REMOVING_BOILERPLATE",
        "newLines",
        "END_BOILERPLATE",
        "line",
        "IS_REMOVING_BOILERPLATE",
        "j",
        "BOILERPLATE",
        "j",
        "BOILERPLATE",
        "j",
        "boilerplate",
        "line",
        "SEEN_BOILERPLATE",
        "j",
        "IS_REMOVING_BOILERPLATE",
        "END_BOILERPLATE",
        "boilerplate",
        "SEEN_BOILERPLATE",
        "j",
        "IS_REMOVING_BOILERPLATE",
        "newLines",
        "newLines",
        "line",
        "source",
        "newLines",
        "destFiles",
        "moduleId",
        "modulesMap",
        "deps",
        "entryPoint",
        "includedModules",
        "prepend",
        "append",
        "dest",
        "dest",
        "dest",
        "entryPoint",
        "dest",
        "mainResult",
        "getLoaderPlugin",
        "pluginName",
        "usedPlugins",
        "pluginName",
        "usedPlugins",
        "pluginName",
        "modulesMap",
        "pluginName",
        "usedPlugins",
        "pluginName",
        "includedModules",
        "c",
        "c",
        "bangIndex",
        "c",
        "bangIndex",
        "getLoaderPlugin",
        "pluginName",
        "mainResult",
        "emitPlugin",
        "entryPoint",
        "plugin",
        "pluginName",
        "c",
        "bangIndex",
        "modulesMap",
        "c",
        "readFileAndRemoveBOM",
        "mainResult",
        "emitShimmedModule",
        "c",
        "deps",
        "c",
        "contents",
        "mainResult",
        "emitNamedModule",
        "c",
        "deps",
        "c",
        "contents",
        "usedPlugins",
        "pluginName",
        "usedPlugins",
        "pluginName",
        "plugin",
        "req",
        "something",
        "something",
        "write",
        "filename",
        "contents",
        "results",
        "filename",
        "contents",
        "plugin",
        "pluginName",
        "entryPoint",
        "req",
        "write",
        "toIFile",
        "path",
        "readFileAndRemoveBOM",
        "path",
        "path",
        "contents",
        "prepend",
        "toIFile",
        "append",
        "toIFile",
        "mainResult",
        "toPrepend",
        "mainResult",
        "toAppend",
        "results",
        "usedPlugins",
        "path",
        "fs",
        "path",
        "contents",
        "BOM_CHAR_CODE",
        "contents",
        "contents",
        "contents",
        "entryPoint",
        "plugin",
        "pluginName",
        "moduleName",
        "plugin",
        "what",
        "result",
        "what",
        "write",
        "entryPoint",
        "write",
        "moduleId",
        "code",
        "code",
        "code",
        "moduleId",
        "result",
        "code",
        "plugin",
        "pluginName",
        "moduleName",
        "write",
        "result",
        "moduleId",
        "myDeps",
        "defineCallPosition",
        "path",
        "contents",
        "positionToOffset",
        "contents",
        "defineCallPosition",
        "defineCallPosition",
        "contents",
        "defineCallOffset",
        "moduleId",
        "path",
        "contents",
        "parensOffset",
        "insertStr",
        "contents",
        "parensOffset",
        "moduleId",
        "myDeps",
        "factory",
        "path",
        "contents",
        "myDeps",
        "myDeps",
        "moduleId",
        "strDeps",
        "factory",
        "path",
        "contents",
        "strDefine",
        "desiredLine",
        "desiredCol",
        "desiredLine",
        "desiredCol",
        "desiredLine",
        "line",
        "lastNewLineOffset",
        "desiredCol",
        "lastNewLineOffset",
        "lastNewLineOffset",
        "line",
        "lastNewLineOffset",
        "rootNodes",
        "graph",
        "rootNodes",
        "node",
        "result",
        "node",
        "queue",
        "queue",
        "graph",
        "el",
        "myEdges",
        "toNode",
        "result",
        "toNode",
        "result",
        "toNode",
        "queue",
        "toNode",
        "result",
        "graph",
        "node",
        "graph",
        "fromNode",
        "allNodes",
        "fromNode",
        "outgoingEdgeCount",
        "fromNode",
        "graph",
        "fromNode",
        "graph",
        "fromNode",
        "toNode",
        "allNodes",
        "toNode",
        "outgoingEdgeCount",
        "toNode",
        "outgoingEdgeCount",
        "toNode",
        "inverseEdges",
        "toNode",
        "inverseEdges",
        "toNode",
        "inverseEdges",
        "toNode",
        "fromNode",
        "allNodes",
        "node",
        "outgoingEdgeCount",
        "node",
        "outgoingEdgeCount",
        "node",
        "S",
        "node",
        "S",
        "S",
        "S",
        "L",
        "n",
        "inverseEdges",
        "n",
        "myInverseEdges",
        "m",
        "outgoingEdgeCount",
        "m",
        "outgoingEdgeCount",
        "m",
        "outgoingEdgeCount",
        "m",
        "S",
        "m",
        "outgoingEdgeCount",
        "outgoingEdgeCount",
        "L"
    ],
    "literals": [
        "'fs'",
        "'path'",
        "'vm'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'fs'",
        "'../../src/vs/loader.js'",
        "'(function(require, module, exports) { '",
        "'\\n});'",
        "'vs/nls'",
        "'out-build/vs/nls.build'",
        "'vs/css'",
        "'out-build/vs/css.build'",
        "'require'",
        "string",
        "'.js'",
        "'vs/css'",
        "string",
        "string",
        "'require'",
        "'exports'",
        "'module'",
        "string",
        "string",
        "string",
        "string",
        "'function'",
        "string",
        "string",
        "string",
        "string",
        "''",
        "','",
        "''",
        "''",
        "string",
        "string",
        "'!'",
        "'!'",
        "''",
        "'/'",
        "string",
        "string",
        "define(__m[${replacementMap[defineCall.module]}/*${defineCall.module}*/], __M([${defineCall.deps.map(dep => replacementMap[dep] + '/*' + dep + '*/').join(',')}])",
        "'/*'",
        "'*/'",
        "','",
        "'(function() {'",
        "var __m = ${JSON.stringify(sortedByUseModules)};",
        "var __M = function(deps) {",
        "var result = [];",
        "for (var i = 0, len = deps.length; i < len; i++) {",
        "result[i] = __m[deps[i]];",
        "}",
        "return result;",
        "};",
        "'\\n'",
        "'}).call(this);'",
        "string",
        "''",
        "''",
        "'\\n'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'.js'",
        "string",
        "string",
        "'!'",
        "'empty:'",
        "string",
        "'function'",
        "'no-no!'",
        "string",
        "string",
        "string",
        "string",
        "'utf8'",
        "string",
        "string",
        "string",
        "''",
        "'function'",
        "string",
        "string",
        "'define(\"'",
        "'\",'",
        "string",
        "string",
        "string",
        "string",
        "'('",
        "'\"'",
        "'\", '",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'\"'",
        "'\", \"'",
        "'\"'",
        "''",
        "'define(\"'",
        "'\", ['",
        "'], '",
        "');'",
        "'\\n;\\n'",
        "string",
        "'\\n'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'Cannot do topological sort on cyclic graph, remaining nodes: '"
    ],
    "variables": [
        "entryPointsMap",
        "allMentionedModulesMap",
        "code",
        "r",
        "loaderModule",
        "loader",
        "resolvePath",
        "r",
        "entryPoint",
        "modules",
        "partialResult",
        "cssInlinedResources",
        "modulesMap",
        "modulesGraph",
        "sortedModules",
        "result",
        "usedPlugins",
        "bundleData",
        "info",
        "rootNodes",
        "allDependencies",
        "excludes",
        "allExcludes",
        "includedModules",
        "res",
        "plugin",
        "write",
        "parseDefineCall",
        "deps",
        "prefix",
        "_path",
        "pieces",
        "res",
        "useCounts",
        "matches",
        "defineCall",
        "sortedByUseModules",
        "replacementMap",
        "defineCall",
        "BOILERPLATE",
        "SEEN_BOILERPLATE",
        "lines",
        "newLines",
        "IS_REMOVING_BOILERPLATE",
        "END_BOILERPLATE",
        "i",
        "line",
        "j",
        "boilerplate",
        "mainResult",
        "results",
        "usedPlugins",
        "getLoaderPlugin",
        "bangIndex",
        "pluginName",
        "plugin",
        "contents",
        "plugin",
        "req",
        "write",
        "toIFile",
        "contents",
        "toPrepend",
        "toAppend",
        "BOM_CHAR_CODE",
        "contents",
        "result",
        "write",
        "defineCallOffset",
        "parensOffset",
        "insertStr",
        "strDeps",
        "strDefine",
        "line",
        "lastNewLineOffset",
        "result",
        "queue",
        "rootNodes",
        "el",
        "myEdges",
        "allNodes",
        "outgoingEdgeCount",
        "inverseEdges",
        "S",
        "L",
        "n",
        "myInverseEdges"
    ],
    "comments": [
        "---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the Source EULA. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------",
        "TODO@TS 2.1.2",
        "Do one pass to record the usage counts for each module id",
        "Taken from typescript compiler => emitFiles",
        "Remove BOM",
        "`defineCallPosition` is the position in code: |define()",
        "`parensOffset` is the position in code: define|()",
        "https://en.wikipedia.org/wiki/Topological_sorting",
        "Ensure the exact same order all the time with the same inputs"
    ],
    "docstrings": [
        "* Bundle `entryPoints` given config `config`.",
        "* Convert a position (line:col) to (offset) in string `str`",
        "* Return a set of reachable nodes in `graph` starting from `rootNodes`",
        "* Perform a topological sort on `graph`"
    ],
    "functions": [
        "bundle",
        "emitEntryPoints",
        "extractStrings",
        "removeDuplicateTSBoilerplate",
        "emitEntryPoint",
        "readFileAndRemoveBOM",
        "emitPlugin",
        "emitNamedModule",
        "emitShimmedModule",
        "positionToOffset",
        "visit",
        "topologicalSort"
    ],
    "classes": []
}