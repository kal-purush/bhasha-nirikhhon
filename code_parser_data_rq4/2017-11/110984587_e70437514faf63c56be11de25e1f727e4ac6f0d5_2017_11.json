{
    "identifiers": [
        "print_function",
        "random",
        "os",
        "path",
        "example0",
        "example1",
        "example2",
        "example3",
        "example4",
        "example5",
        "example6",
        "example7",
        "team0",
        "team1",
        "team2",
        "team3",
        "team4",
        "team5",
        "team6",
        "team7",
        "team8",
        "team9",
        "team10",
        "team11",
        "team12",
        "team13",
        "team14",
        "example1",
        "example0",
        "example0",
        "example1",
        "example2",
        "example3",
        "example4",
        "example5",
        "example6",
        "example7",
        "team0",
        "team1",
        "team2",
        "team3",
        "team4",
        "team5",
        "team6",
        "team7",
        "team8",
        "team9",
        "team10",
        "team11",
        "team12",
        "team13",
        "team14",
        "modules",
        "reload",
        "required_variable",
        "hasattr",
        "required_variable",
        "setattr",
        "required_variable",
        "modules",
        "play_tournament",
        "modules",
        "make_reports",
        "modules",
        "scores",
        "moves",
        "make_code_string",
        "modules",
        "section0",
        "section1",
        "section2",
        "post_to_file",
        "section0",
        "section1",
        "section2",
        "code",
        "join",
        "section3",
        "scores",
        "moves",
        "section0",
        "section1",
        "section2",
        "section3",
        "modules",
        "len",
        "modules",
        "zeros_list",
        "modules",
        "zeros_list",
        "modules",
        "first_team_index",
        "len",
        "modules",
        "second_team_index",
        "first_team_index",
        "modules",
        "first_team_index",
        "modules",
        "second_team_index",
        "play_iterative_rounds",
        "player1",
        "player2",
        "capitalize",
        "moves1",
        "moves2",
        "scores",
        "first_team_index",
        "score1",
        "len",
        "moves1",
        "moves",
        "first_team_index",
        "moves1",
        "scores",
        "second_team_index",
        "score2",
        "len",
        "moves2",
        "moves",
        "second_team_index",
        "moves2",
        "scores",
        "first_team_index",
        "moves",
        "first_team_index",
        "scores",
        "moves",
        "player1",
        "player2",
        "random",
        "randint",
        "round",
        "number_of_rounds",
        "play_round",
        "player1",
        "player2",
        "score1",
        "score2",
        "moves1",
        "moves2",
        "score1",
        "score2",
        "moves1",
        "moves2",
        "player1",
        "player2",
        "score1",
        "score2",
        "moves1",
        "moves2",
        "player1",
        "move",
        "moves1",
        "moves2",
        "score1",
        "score2",
        "player2",
        "move",
        "moves2",
        "moves1",
        "score2",
        "score1",
        "action1",
        "len",
        "action1",
        "action2",
        "len",
        "action2",
        "action1",
        "action2",
        "actions",
        "score1",
        "RELEASE",
        "score2",
        "RELEASE",
        "actions",
        "score1",
        "SEVERE_PUNISHMENT",
        "score2",
        "TREAT",
        "actions",
        "score1",
        "TREAT",
        "score2",
        "SEVERE_PUNISHMENT",
        "actions",
        "score1",
        "PUNISHMENT",
        "score2",
        "PUNISHMENT",
        "score1",
        "ERROR",
        "score2",
        "ERROR",
        "action1",
        "moves1",
        "action1",
        "moves1",
        "action2",
        "moves2",
        "action2",
        "moves2",
        "score1",
        "score2",
        "moves1",
        "moves2",
        "modules",
        "scores",
        "moves",
        "make_section0",
        "modules",
        "scores",
        "make_section1",
        "modules",
        "scores",
        "make_section2",
        "modules",
        "scores",
        "index",
        "len",
        "modules",
        "section3",
        "append",
        "make_section3",
        "modules",
        "moves",
        "scores",
        "index",
        "section0",
        "section1",
        "section2",
        "section3",
        "modules",
        "scores",
        "section0",
        "section0",
        "index",
        "len",
        "modules",
        "section0",
        "index",
        "index",
        "section0",
        "modules",
        "index",
        "team_name",
        "modules",
        "index",
        "strategy_name",
        "modules",
        "index",
        "strategy_description",
        "len",
        "strategy_description",
        "strategy_description",
        "find",
        "newline",
        "section0",
        "strategy_description",
        "newline",
        "strategy_description",
        "newline",
        "section0",
        "strategy_description",
        "strategy_description",
        "section0",
        "modules",
        "scores",
        "section1",
        "section1",
        "i",
        "len",
        "modules",
        "section1",
        "format",
        "i",
        "section1",
        "index",
        "len",
        "modules",
        "section1",
        "index",
        "i",
        "len",
        "modules",
        "section1",
        "format",
        "scores",
        "i",
        "index",
        "section1",
        "section1",
        "index",
        "len",
        "modules",
        "section1",
        "format",
        "sum",
        "scores",
        "index",
        "section1",
        "modules",
        "scores",
        "section2",
        "section2",
        "index",
        "len",
        "modules",
        "section2_list",
        "append",
        "modules",
        "index",
        "team_name",
        "index",
        "sum",
        "scores",
        "index",
        "len",
        "modules",
        "modules",
        "index",
        "strategy_name",
        "section2_list",
        "sort",
        "key",
        "x",
        "x",
        "reverse",
        "team",
        "section2_list",
        "team",
        "section2",
        "format",
        "team_name",
        "Pn",
        "n_points",
        "strategy_name",
        "section2",
        "modules",
        "moves",
        "scores",
        "index",
        "section3",
        "modules",
        "index",
        "team_name",
        "section3",
        "opponent_index",
        "len",
        "modules",
        "opponent_index",
        "index",
        "section3",
        "scores",
        "index",
        "opponent_index",
        "section3",
        "modules",
        "index",
        "team_name",
        "section3",
        "index",
        "modules",
        "index",
        "strategy_name",
        "section3",
        "scores",
        "opponent_index",
        "index",
        "section3",
        "modules",
        "opponent_index",
        "team_name",
        "section3",
        "opponent_index",
        "modules",
        "opponent_index",
        "strategy_name",
        "capitalize",
        "moves",
        "index",
        "opponent_index",
        "moves",
        "opponent_index",
        "index",
        "len",
        "hist1",
        "section3",
        "hist1",
        "section3",
        "hist2",
        "hist1",
        "hist2",
        "section3",
        "section3",
        "history1",
        "history2",
        "i",
        "len",
        "history1",
        "history1",
        "i",
        "history2",
        "i",
        "p1",
        "p2",
        "upper",
        "p2",
        "p1",
        "upper",
        "caphistory1",
        "p1",
        "caphistory2",
        "p2",
        "caphistory1",
        "caphistory2",
        "modules",
        "code",
        "index",
        "len",
        "modules",
        "modules",
        "index",
        "split",
        "replace",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "directory",
        "players_code_filename",
        "open",
        "filename",
        "code",
        "code",
        "players_code_filename",
        "code",
        "code",
        "join",
        "players_code_file",
        "readlines",
        "code",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "abspath",
        "open",
        "os",
        "path",
        "join",
        "directory",
        "sourcefile",
        "sourcefile",
        "readlines",
        "i",
        "i",
        "os",
        "path",
        "join",
        "directory",
        "target",
        "open",
        "filename",
        "target_file",
        "target_file",
        "write",
        "join",
        "source",
        "filename",
        "directory",
        "directory",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "directory",
        "filename",
        "open",
        "filename",
        "filehandle",
        "write",
        "main_play",
        "modules",
        "reports"
    ],
    "literals": [
        "'reloaded'",
        "'team_name'",
        "'strategy_name'",
        "'strategy_description'",
        "'missing assignment'",
        "''",
        "''",
        "''",
        "''",
        "' '",
        "' '",
        "'cc'",
        "'cb'",
        "'bc'",
        "'bb'",
        "'bc'",
        "' '",
        "'bc'",
        "' '",
        "'-'",
        "'\\n'",
        "'Section 0 - Line up\\n'",
        "'-'",
        "'\\n'",
        "'Player '",
        "' (P'",
        "'): '",
        "', '",
        "'\\n'",
        "'\\n'",
        "' '",
        "' '",
        "'\\n'",
        "'-'",
        "'\\nSection 1 - Player vs. Player\\n'",
        "'-'",
        "'\\n'",
        "'Each column shows pts/round earned against each other player:\\n'",
        "'        '",
        "'{:>7}'",
        "'P'",
        "'\\n'",
        "'vs. P'",
        "' :'",
        "'{:>7}'",
        "'\\n'",
        "'TOTAL  :'",
        "'{:>7}'",
        "'\\n'",
        "'-'",
        "'\\nSection 2 - Leaderboard\\n'",
        "'-'",
        "'\\n'",
        "'Average points per round:\\n'",
        "'Team name (P#):  Score      with strategy name\\n'",
        "'P'",
        "'{:<10}({}): {:>10} points with {:<40}\\n'",
        "'-'",
        "'\\nSection 3 - Game Data for Team '",
        "'\\n'",
        "'-'",
        "'\\n'",
        "' pt/round: '",
        "'(P'",
        "') \"'",
        "'\"\\n'",
        "' pt/round: '",
        "'(P'",
        "') \"'",
        "'\"\\n'",
        "'\\n'",
        "'\\n\\n'",
        "'-'",
        "'\\n'",
        "''",
        "''",
        "'c'",
        "'cC'",
        "'-'",
        "'\\n'",
        "'Code of each player\\'s algorithm\\n'",
        "'-'",
        "'\\n'",
        "' '",
        "'\\''",
        "''",
        "'.py'",
        "'r'",
        "'-'",
        "'\\n'",
        "'-'",
        "'\\n'",
        "''",
        "'team0.py'",
        "'r'",
        "'team'",
        "'.py'",
        "'w'",
        "''",
        "'tournament.txt'",
        "''",
        "''",
        "'w'",
        "'__main__'"
    ],
    "variables": [
        "betray",
        "collude",
        "modules",
        "scores",
        "moves",
        "section0",
        "section1",
        "section2",
        "section3",
        "code",
        "zeros_list",
        "scores",
        "moves",
        "player1",
        "player2",
        "score1",
        "score2",
        "moves1",
        "moves2",
        "second_team_index",
        "second_team_index",
        "first_team_index",
        "first_team_index",
        "first_team_index",
        "first_team_index",
        "number_of_rounds",
        "moves1",
        "moves2",
        "score1",
        "score2",
        "score1",
        "score2",
        "moves1",
        "moves2",
        "RELEASE",
        "TREAT",
        "SEVERE_PUNISHMENT",
        "PUNISHMENT",
        "ERROR",
        "action1",
        "action2",
        "action1",
        "action2",
        "actions",
        "section0",
        "section1",
        "section2",
        "section3",
        "section0",
        "strategy_description",
        "newline",
        "strategy_description",
        "strategy_description",
        "section1",
        "section2",
        "section2_list",
        "team_name",
        "Pn",
        "n_points",
        "strategy_name",
        "section3",
        "hist1",
        "hist2",
        "hist1",
        "hist2",
        "caphistory1",
        "caphistory2",
        "p1",
        "p2",
        "p2",
        "p1",
        "code",
        "code",
        "players_code_filename",
        "directory",
        "filename",
        "players_code_file",
        "directory",
        "source",
        "target",
        "filename",
        "directory",
        "filename",
        "filehandle",
        "scores",
        "moves",
        "reports",
        "section0",
        "section1",
        "section2",
        "section3"
    ],
    "comments": [
        "",
        "Computer Science and Software Engineering",
        "PLTW AP CS Principles",
        "(c)2014 Project Lead The Way, Inc.",
        "",
        "Activity 1.3.9 Tools for Collaboration",
        "Project 1.3.10 Collaborating on a Project",
        "",
        "To run a tournament, execute this file.",
        "Place each team's strategy in a file in the same directory as this file.",
        "Tournament results saved to tournament.txt in this directory.",
        "",
        "prisoners_dilemma.py automates competition among different strategies",
        "for the Iterative Prisoners Dilemma, the canonical game of game-theory.",
        "Each strategy is pitted against each other strategy for 100 to 200 rounds.",
        "The results of all previous rounds within a 100-200 round stretch are known",
        "to both players.",
        "",
        "play_tournament([team0, team1, team2]) executes a tournament and writes to tournament.txt",
        "",
        "Each team's strategy should be coded in their assigned Python file, called a module.",
        "Each player should have their own .py file containing",
        "three strings team_name, strategy_name, and strategy_description",
        "and a function move(my_history, their_history, my_score, their_score)",
        "",
        "By default, when executing this file, [example0, example1, example2, example3]",
        "play a tournament. To run the tournament of [team, team1, team1, example1]:",
        "scores, moves, reports = main_play([team1]*3+[example1])",
        "section0, section1, section2, section3 = reports",
        "",
        "On screen, include the first three out of four sections of the report.",
        "To file output, store all teams' code and all teams' section 3 reports.",
        "to initialize each player's head-to-head scores",
        "Copy it or it's only 1 list",
        "Copy it or it's only 1 list",
        "int division not an issue",
        "Redundant, but record this for the other player, from their perspective",
        "Playing yourself doesn't do anything",
        "(R, \"reward\" in literature) when both players collude",
        "(T, \"temptation\" in literature) when you betray your partner",
        "(S, \"sucker\" in literature) when your partner betrays you",
        "(P) when both players betray each other",
        "Keep T > R > P > S to be a Prisoner's Dilemma",
        "Keep 2R > T + S to be an Iterative Prisoner's Dilemma",
        "Get the two players' actions and remember them.",
        "Change scores based upon player actions.",
        "Both players collude; get reward.",
        "Player 1 colludes, player 2 betrays; get severe, treat.",
        "Player 1 betrays, player 2 colludes; get treat, severe.",
        "Both players betray; get punishment.",
        "Both players get the \"error score\" if someone's code returns an improper action.",
        "Append the actions to the previous histories.",
        "Return scores incremented by this round's results.",
        "Format with 8 space indent 80 char wide",
        "First line",
        "Second line",
        "Add one line per team",
        "Last line",
        "Make a list of teams' 4-tuples",
        "Generate one string per team",
        "Rockettes (P1):  -500 points with Backstabber",
        "Make 4 lines per opponent",
        "Line 1",
        "Line 2",
        "Lines 3-4",
        "Use the same directory as the python script",
        "Name the file tournament.txt",
        "Create the file for the round-by-round results",
        "Call main_play() if this file is executed"
    ],
    "docstrings": [
        "'''main_play plays a tournament and outputs results to screen and file.\n    This function is called once when this file is executed.\n    modules: a list of modules such as [team1, team2]    \n    \n    Returns:\n        scores:\n        moves:\n        sections: a list of [str, str, str, list of str]    \n            '''",
        "'''Each argument is a module name\n    Each module must contain \n        team_name: a string\n        strategy_name: a string\n        strategy_description: a string\n        move: A function that returns 'c' or 'b'\n    '''",
        "'''\n    Plays a random number of rounds (between 100 and 200 rounds) \n    of the iterative prisoners' dilemma between two strategies.\n    player1 and player2 are modules.\n    Returns 4-tuple, for example ('cc', 'bb', -200, 600) \n    but with much longer strings \n    '''",
        "'''\n    Calls the move() function from each module which return\n    'c' or 'b' for collude or betray for each player.\n    The history is provided in a string, e.g. 'ccb' indicates the player\n    colluded in the first two rounds and betrayed in the most recent round.\n    Returns a 2-tuple with score1 and score2 incremented by this round\n    '''",
        "'''\n    Produce the following string:\n    ----------------------------------------------------------------------------\n    Section 0 - Line up\n    ----------------------------------------------------------------------------\n    Player 0 (P0): Team name 0, Strategy name 0,\n         Strategy 0 description\n    Player 1 (P1): Team name 1, Strategy name 1, \n         Strategy 1 description\n    '''",
        "'''\n    ----------------------------------------------------------------------------\n    Section 1 - Player vs. Player\n    ----------------------------------------------------------------------------\n    A column shows pts/round earned against each other player:      \n                P0    P1         \n    vs. P0 :     0   100          \n    vs. P1 :  -500     0             \n    TOTAL  :  -500   100\n    '''",
        "'''\n    ----------------------------------------------------------------------------\n    Section 2 - Leaderboard\n    ----------------------------------------------------------------------------\n    Average points per round:\n    Team name (P#):  Score       with strategy name\n    Champ10nz (P0):   100 points with Loyal\n    Rockettes (P1):  -500 points with Backstabber\n    '''",
        "'''Return a string with information for the player at index, like:\n    ----------------------------------------------------------------------------\n    Section 3 - Game Data for Team Colloid c=-500 b=-250 C=0 B=+100\n    ----------------------------------------------------------------------------\n    -133 pt/round: Colloid (P6) \"Collude every 3rd round\"\n    -233 pt/round: 2PwnU (P8) \"Betray, then alternate\"\n    bBcBbCbBcBbCbBcBbCbBcBbCbBcBbCbBcBbCbBcBbCbBcBbCbBcBbCbBcBbCbBcBbCbBcBbCbBcB\n    bcBcbCbcbcbCBcbcbCBcbcbCBcbcbCBcbcbCBcbcbCBcbcbCBcbcbCBcbcbCBcbcbCBcbcbCBcbc\n    '''",
        "'''Accept two strings of equal length.\n    Return the same two strings but capitalizing the opponent of 'c' each round.\n    '''",
        "'''Returns a string of the code from each file.\n    '''",
        "'''Transfer code in team0.py to team1.py though team14.py\n    '''",
        "'''Write output in a txt file.\n    '''"
    ],
    "functions": [
        "main_play",
        "play_tournament",
        "play_iterative_rounds",
        "play_round",
        "make_reports",
        "make_section0",
        "make_section1",
        "make_section2",
        "make_section3",
        "capitalize",
        "make_code_string",
        "copy_template",
        "post_to_api",
        "post_to_local_html",
        "post_to_file"
    ],
    "classes": []
}