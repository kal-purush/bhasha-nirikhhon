{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "baseUrl",
        "getAllUrls",
        "resolve",
        "reject",
        "request",
        "urlSourceUrl",
        "error",
        "response",
        "html",
        "error",
        "response",
        "reject",
        "error",
        "cheerio",
        "html",
        "$",
        "i",
        "element",
        "$",
        "element",
        "address",
        "listings",
        "address",
        "urls",
        "url",
        "resolve",
        "urls",
        "getPhantomHTML",
        "url",
        "resolve",
        "reject",
        "phantom",
        "ph",
        "phantomInstance",
        "ph",
        "ph",
        "page",
        "sitePage",
        "page",
        "page",
        "url",
        "status",
        "sitePage",
        "content",
        "resolve",
        "content",
        "sitePage",
        "phantomInstance",
        "reject",
        "getImagesForListing",
        "url",
        "resolve",
        "reject",
        "getPhantomHTML",
        "url",
        "html",
        "cheerio",
        "html",
        "$",
        "imageElement",
        "image",
        "resolve",
        "image",
        "reject",
        "execute",
        "oneByOne",
        "getAllUrls",
        "theUrls",
        "urls",
        "urls",
        "promise",
        "url",
        "promise",
        "result",
        "url",
        "getImagesForListing",
        "url",
        "images",
        "listings",
        "listing",
        "listing",
        "url",
        "listings",
        "listingIndex",
        "images",
        "allImages",
        "result",
        "oneByOne",
        "getImagesForAllUrls",
        "urls",
        "listings",
        "urls",
        "url",
        "getImagesForListing",
        "url",
        "images",
        "allImages",
        "images",
        "listings",
        "listing",
        "listing",
        "url",
        "listings",
        "listingIndex",
        "images",
        "allImages",
        "urls",
        "listings",
        "listings",
        "listings",
        "err",
        "err",
        "execute"
    ],
    "literals": [
        "'cheerio'",
        "'fs'",
        "'phantom'",
        "'request'",
        "'http://9300realty.com'",
        "'/index.cfm?page=allRentals'",
        "'.dspListings2Elements'",
        "'b a'",
        "'http://www.9300realty.com/'",
        "'href'",
        "'creating phantom page'",
        "'phantom page created'",
        "'content'",
        "'.mainImage'",
        "'#property_image'",
        "'src'",
        "'got image for listing: '",
        "'running phantom script'",
        "url: ${ url }",
        "Listings is ${ listings }",
        "'got all listings. there are '",
        "' of them'",
        "'here are a few for example: '",
        "'err: '"
    ],
    "variables": [
        "cheerio",
        "fs",
        "phantom",
        "request",
        "baseUrl",
        "urlSourceUrl",
        "listings",
        "getAllUrls",
        "$",
        "urls",
        "address",
        "url",
        "getPhantomHTML",
        "phantomInstance",
        "sitePage",
        "getImagesForListing",
        "$",
        "imageElement",
        "image",
        "execute",
        "urls",
        "theUrls",
        "allImages",
        "listingIndex",
        "listingIndex"
    ],
    "comments": [
        "jshint esversion: 6",
        "^^ this is for the 'linters' (text editor plugin thing - ignore it)",
        "set module dependencies",
        "you must have phantom running on your computer for this to work",
        "setup some convenience variables",
        "and this is the array that we'll fill with listings and their various",
        "parameters throughout the function",
        "setup some functions to use in the main execution function (all the way at",
        "the bottom) and then call the execution function:",
        "get all the urls we'll be scraping",
        "this is a \"promise\", which is just an alterntive to providing a",
        "\"callback function\" as a function parameter. basically, it allow the",
        "program to do something after this function is finished running even",
        "though the function is doing something \"asynchronous\". using this",
        "pattern avoids a common javascript programming pitfall: \"callback hell\"",
        "this is why you will see 'then()' statements throughout the code",
        "save this as a function-scoped variable so we can end",
        "the phantom instance later, outside of this function",
        "same reasoning as the phantomInstance right above this",
        "get html for url",
        "console.log('got html: ', html);",
        "console.log('image element: ', imageElement);",
        "let urls = theUrls.slice(0,4);",
        "get images for each url & store as a promise for those images",
        "execute(true); // one by one",
        "execute(false); // all at once"
    ],
    "docstrings": [],
    "functions": [
        "getImagesForAllUrls"
    ],
    "classes": []
}