{
    "identifiers": [
        "barf",
        "barf",
        "BARF",
        "angr",
        "simuvex",
        "pyvex",
        "claripy",
        "cfg",
        "main_dispatcher",
        "block",
        "cfg",
        "basic_blocks",
        "len",
        "block",
        "branches",
        "block",
        "direct_branch",
        "block",
        "start_address",
        "block",
        "direct_branch",
        "main_dispatcher",
        "block",
        "start_address",
        "retn",
        "pre_dispatcher",
        "cfg",
        "pre_dispatcher",
        "prologue",
        "retn",
        "block",
        "cfg",
        "basic_blocks",
        "block",
        "direct_branch",
        "pre_dispatcher",
        "len",
        "block",
        "instrs",
        "relevant_blocks",
        "append",
        "block",
        "start_address",
        "block",
        "start_address",
        "prologue",
        "block",
        "start_address",
        "retn",
        "nop_blocks",
        "append",
        "block",
        "relevant_blocks",
        "nop_blocks",
        "state",
        "modify_value",
        "state",
        "scratch",
        "irsb",
        "statements",
        "state",
        "inspect",
        "statement",
        "expressions",
        "len",
        "expressions",
        "isinstance",
        "expressions",
        "pyvex",
        "expr",
        "ITE",
        "state",
        "scratch",
        "temps",
        "expressions",
        "cond",
        "tmp",
        "modify_value",
        "state",
        "inspect",
        "_breakpoints",
        "start_addr",
        "hook_addr",
        "modify",
        "inspect",
        "b",
        "relevants",
        "modify_value",
        "hook_addr",
        "b",
        "hook",
        "hook_addr",
        "retn_procedure",
        "length",
        "modify",
        "modify",
        "b",
        "factory",
        "blank_state",
        "addr",
        "start_addr",
        "remove_options",
        "simuvex",
        "o",
        "LAZY_SOLVES",
        "inspect",
        "state",
        "inspect",
        "b",
        "when",
        "simuvex",
        "BP_BEFORE",
        "action",
        "statement_inspect",
        "b",
        "factory",
        "path",
        "state",
        "p",
        "step",
        "succ",
        "successors",
        "addr",
        "relevants",
        "succ",
        "successors",
        "step",
        "succ",
        "successors",
        "addr",
        "state",
        "b",
        "state",
        "se",
        "eval",
        "state",
        "regs",
        "ip",
        "b",
        "unhook",
        "ip",
        "data",
        "start",
        "end",
        "opcode",
        "i",
        "start",
        "end",
        "opcode",
        "data",
        "start",
        "offset",
        "pack",
        "offset",
        "i",
        "start",
        "i",
        "jmp_offset",
        "i",
        "BARF",
        "filename",
        "barf",
        "binary",
        "entry_point",
        "angr",
        "Project",
        "filename",
        "load_options",
        "barf",
        "recover_cfg",
        "start",
        "cfg",
        "basic_blocks",
        "start",
        "cfg",
        "find_basic_block",
        "prologue",
        "direct_branch",
        "get_retn_predispatcher",
        "cfg",
        "get_relevant_nop_blocks",
        "cfg",
        "start",
        "main_dispatcher",
        "pre_dispatcher",
        "retn",
        "hex",
        "addr",
        "addr",
        "relevant_blocks",
        "relevant_blocks",
        "relevants",
        "append",
        "prologue",
        "relevants",
        "relevants",
        "append",
        "retn",
        "parent",
        "relevants",
        "relevant",
        "relevants_without_retn",
        "relevant",
        "cfg",
        "find_basic_block",
        "relevant",
        "ins",
        "block",
        "instrs",
        "ins",
        "asm_instr",
        "mnemonic",
        "startswith",
        "ins",
        "asm_instr",
        "ins",
        "asm_instr",
        "mnemonic",
        "startswith",
        "ins",
        "address",
        "has_branches",
        "flow",
        "relevant",
        "append",
        "symbolic_execution",
        "relevant",
        "hook_addr",
        "claripy",
        "BVV",
        "flow",
        "relevant",
        "append",
        "symbolic_execution",
        "relevant",
        "hook_addr",
        "claripy",
        "BVV",
        "flow",
        "relevant",
        "append",
        "symbolic_execution",
        "relevant",
        "hook_addr",
        "flow",
        "pop",
        "retn",
        "open",
        "filename",
        "origin",
        "read",
        "origin",
        "close",
        "open",
        "filename",
        "nop_block",
        "nop_blocks",
        "fill_nop",
        "origin_data",
        "nop_block",
        "start_address",
        "base_addr",
        "nop_block",
        "end_address",
        "base_addr",
        "parent",
        "childs",
        "flow",
        "items",
        "len",
        "childs",
        "cfg",
        "find_basic_block",
        "parent",
        "instrs",
        "asm_instr",
        "last_instr",
        "address",
        "base_addr",
        "opcode",
        "file_offset",
        "fill_nop",
        "origin_data",
        "file_offset",
        "file_offset",
        "last_instr",
        "size",
        "fill_jmp_offset",
        "origin_data",
        "file_offset",
        "childs",
        "last_instr",
        "address",
        "patch_instrs",
        "parent",
        "instr",
        "address",
        "base_addr",
        "fill_nop",
        "origin_data",
        "file_offset",
        "cfg",
        "find_basic_block",
        "parent",
        "end_address",
        "base_addr",
        "opcode",
        "file_offset",
        "opcode",
        "instr",
        "mnemonic",
        "fill_jmp_offset",
        "origin_data",
        "file_offset",
        "childs",
        "instr",
        "address",
        "file_offset",
        "opcode",
        "fill_jmp_offset",
        "origin_data",
        "file_offset",
        "childs",
        "instr",
        "address",
        "recovery",
        "write",
        "join",
        "origin_data",
        "recovery",
        "close",
        "filename"
    ],
    "literals": [
        "'statement'",
        "'statement'",
        "'nop'",
        "'<i'",
        "'__main__'",
        "'a'",
        "'\\x87'",
        "'ae'",
        "'\\x83'",
        "'b'",
        "'\\x82'",
        "'be'",
        "'\\x86'",
        "'c'",
        "'\\x82'",
        "'e'",
        "'\\x84'",
        "'z'",
        "'\\x84'",
        "'g'",
        "'\\x8F'",
        "'ge'",
        "'\\x8D'",
        "'l'",
        "'\\x8C'",
        "'le'",
        "'\\x8E'",
        "'na'",
        "'\\x86'",
        "'nae'",
        "'\\x82'",
        "'nb'",
        "'\\x83'",
        "'nbe'",
        "'\\x87'",
        "'nc'",
        "'\\x83'",
        "'ne'",
        "'\\x85'",
        "'ng'",
        "'\\x8E'",
        "'nge'",
        "'\\x8C'",
        "'nl'",
        "'\\x8D'",
        "'nle'",
        "'\\x8F'",
        "'no'",
        "'\\x81'",
        "'np'",
        "'\\x8B'",
        "'ns'",
        "'\\x89'",
        "'nz'",
        "'\\x85'",
        "'o'",
        "'\\x80'",
        "'p'",
        "'\\x8A'",
        "'pe'",
        "'\\x8A'",
        "'po'",
        "'\\x8B'",
        "'s'",
        "'\\x88'",
        "'nop'",
        "'\\x90'",
        "'jmp'",
        "'\\xE9'",
        "'j'",
        "'\\x0F'",
        "'/Users/liumeng/check_passwd_flat'",
        "'auto_load_libs'",
        "'main_opts'",
        "'custom_base_addr'",
        "'*******************relevant blocks************************'",
        "'prologue:%#x'",
        "'main_dispatcher:%#x'",
        "'pre_dispatcher:%#x'",
        "'retn:%#x'",
        "'relevant_blocks:'",
        "'*******************symbolic execution*********************'",
        "'-------------------dse %#x---------------------'",
        "'cmov'",
        "'call'",
        "'************************flow******************************'",
        "'************************patch*****************************'",
        "'rb'",
        "'.recovered'",
        "'wb'",
        "'jmp'",
        "'j'",
        "'jmp'",
        "''",
        "'Successful! The recovered file: %s'",
        "'.recovered'"
    ],
    "variables": [
        "retn",
        "pre_dispatcher",
        "relevant_blocks",
        "nop_blocks",
        "expressions",
        "modify_value",
        "state",
        "p",
        "succ",
        "succ",
        "ip",
        "data",
        "i",
        "jmp_offset",
        "data",
        "opcode",
        "filename",
        "start",
        "barf",
        "base_addr",
        "b",
        "cfg",
        "blocks",
        "prologue",
        "main_dispatcher",
        "retn",
        "pre_dispatcher",
        "relevant_blocks",
        "nop_blocks",
        "relevants",
        "relevants_without_retn",
        "flow",
        "flow",
        "parent",
        "modify_value",
        "patch_instrs",
        "block",
        "has_branches",
        "hook_addr",
        "patch_instrs",
        "relevant",
        "has_branches",
        "hook_addr",
        "origin",
        "origin_data",
        "recovery",
        "last_instr",
        "file_offset",
        "origin_data",
        "file_offset",
        "instr",
        "file_offset",
        "origin_data",
        "file_offset",
        "origin_data",
        "origin_data",
        "file_offset"
    ],
    "comments": [
        "relevants.append(0x40099b)",
        "for (k, v) in flow.items():",
        "print '%#x:' % k, [hex(child) for child in v]"
    ],
    "docstrings": [],
    "functions": [
        "get_retn_predispatcher",
        "get_relevant_nop_blocks",
        "statement_inspect",
        "symbolic_execution",
        "retn_procedure",
        "fill_nop",
        "fill_jmp_offset"
    ],
    "classes": []
}