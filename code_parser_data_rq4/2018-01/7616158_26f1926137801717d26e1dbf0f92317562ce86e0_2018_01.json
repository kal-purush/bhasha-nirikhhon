{
    "identifiers": [
        "com",
        "netflix",
        "loadbalancer",
        "org",
        "awaitility",
        "core",
        "ThrowingRunnable",
        "org",
        "junit",
        "After",
        "org",
        "junit",
        "Before",
        "org",
        "junit",
        "Test",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "asList",
        "java",
        "util",
        "Collections",
        "singletonList",
        "org",
        "awaitility",
        "Awaitility",
        "await",
        "org",
        "junit",
        "Assert",
        "assertNotEquals",
        "org",
        "junit",
        "Assert",
        "assertNotNull",
        "org",
        "mockito",
        "Mockito",
        "mock",
        "org",
        "mockito",
        "Mockito",
        "when",
        "KEY",
        "loadBalancer",
        "rule",
        "Before",
        "rule",
        "loadBalancer",
        "mock",
        "setupLoadBalancer",
        "asList",
        "server",
        "server",
        "server",
        "rule",
        "setLoadBalancer",
        "loadBalancer",
        "After",
        "rule",
        "shutdown",
        "Test",
        "waitUntilWeightsAreCalculated",
        "setupLoadBalancer",
        "singletonList",
        "server",
        "chosen",
        "rule",
        "choose",
        "loadBalancer",
        "KEY",
        "assertNotNull",
        "chosen",
        "await",
        "untilAsserted",
        "Override",
        "weights",
        "rule",
        "getAccumulatedWeights",
        "assertNotEquals",
        "weights",
        "size",
        "servers",
        "loadBalancerStats",
        "getLoadBalancerStats",
        "servers",
        "when",
        "loadBalancer",
        "getLoadBalancerStats",
        "thenReturn",
        "loadBalancerStats",
        "when",
        "loadBalancer",
        "getReachableServers",
        "thenReturn",
        "servers",
        "when",
        "loadBalancer",
        "getAllServers",
        "thenReturn",
        "servers",
        "loadBalancer",
        "servers",
        "stats",
        "mock",
        "responseTimeMax",
        "servers",
        "size",
        "server",
        "servers",
        "s1",
        "statsWithResponseTimeAverage",
        "responseTimeMax",
        "when",
        "stats",
        "getSingleServerStat",
        "server",
        "thenReturn",
        "s1",
        "responseTimeMax",
        "stats",
        "responseTimeAverage",
        "serverStats",
        "mock",
        "when",
        "serverStats",
        "getResponseTimeAvg",
        "thenReturn",
        "responseTimeAverage",
        "serverStats",
        "id",
        "server",
        "id",
        "server",
        "setAlive",
        "server"
    ],
    "literals": [
        "\"key\"",
        "\"first\"",
        "\"second\"",
        "\"third\"",
        "\"other\""
    ],
    "variables": [
        "loadBalancer",
        "rule"
    ],
    "comments": [
        "initialize first server with maximum response time",
        "so that we could reproduce issue with decreased number of servers in loadbalancer"
    ],
    "docstrings": [],
    "functions": [
        "setUp",
        "tearDown",
        "shouldNotFailWithIndexOutOfBoundExceptionWhenChoosingServerWhenNumberOfServersIsDecreased",
        "waitUntilWeightsAreCalculated",
        "run",
        "AbstractLoadBalancer",
        "setupLoadBalancer",
        "LoadBalancerStats",
        "getLoadBalancerStats",
        "ServerStats",
        "statsWithResponseTimeAverage",
        "Server",
        "server"
    ],
    "classes": [
        "WeightedResponseTimeRuleTest"
    ]
}