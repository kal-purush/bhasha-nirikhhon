{
    "identifiers": [
        "Collections",
        "Generic",
        "Reflection",
        "Threading",
        "Tasks",
        "FakeItEasy",
        "Microsoft",
        "Extensions",
        "DependencyInjection",
        "Microsoft",
        "Extensions",
        "Logging",
        "Newtonsoft",
        "Json",
        "RapidCore",
        "DependencyInjection",
        "RapidCore",
        "Locking",
        "RapidCore",
        "Migration",
        "RapidCore",
        "Redis",
        "FunctionalTest",
        "Migration",
        "TestMigration",
        "RapidCore",
        "Redis",
        "Migration",
        "StackExchange",
        "Redis",
        "Xunit",
        "RapidCore",
        "Redis",
        "FunctionalTest",
        "Migration",
        "hostname",
        "redisMuxer",
        "ConnectionMultiplexer",
        "Connect",
        "hostname",
        "redisMuxer",
        "GetServer",
        "hostname",
        "FlushDatabaseAsync",
        "Fact",
        "EnsureEmptyDb",
        "redisMuxer",
        "GetDatabase",
        "ServiceCollection",
        "services",
        "AddSingleton",
        "IConnectionMultiplexer",
        "redisMuxer",
        "RedisMigrationStorage",
        "RedisMigrationContext",
        "Container",
        "ServiceProviderRapidContainerAdapter",
        "services",
        "BuildServiceProvider",
        "MigrationRunner",
        "LoggerFactory",
        "CreateLogger",
        "MigrationRunner",
        "ServiceProviderRapidContainerAdapter",
        "services",
        "BuildServiceProvider",
        "MigrationEnvironment",
        "A",
        "Fake",
        "IDistributedAppLockProvider",
        "RedisMigrationContextFactory",
        "ReflectionMigrationFinder",
        "Assembly",
        "MigrationTests",
        "GetTypeInfo",
        "Assembly",
        "storage",
        "db",
        "StringSetAsync",
        "db",
        "StringSetAsync",
        "storage",
        "MarkAsCompleteAsync",
        "context",
        "Migration01",
        "runner",
        "UpgradeAsync",
        "GetAllMigrationInfos",
        "Assert",
        "Equal",
        "migrationInfos",
        "Count",
        "Assert",
        "Contains",
        "migrationInfos",
        "x",
        "Name",
        "nameof",
        "Migration01",
        "x",
        "MigrationCompleted",
        "Assert",
        "Contains",
        "migrationInfos",
        "x",
        "Name",
        "nameof",
        "Migration02",
        "x",
        "MigrationCompleted",
        "Assert",
        "Contains",
        "migrationInfos",
        "x",
        "Name",
        "nameof",
        "Migration03",
        "x",
        "MigrationCompleted",
        "Assert",
        "Equal",
        "db",
        "StringGetAsync",
        "Assert",
        "Equal",
        "db",
        "StringGetAsync",
        "Assert",
        "Equal",
        "db",
        "StringGetAsync",
        "MigrationInfo",
        "MigrationInfo",
        "key",
        "redisMuxer",
        "GetServer",
        "hostname",
        "Keys",
        "pattern",
        "redisMuxer",
        "GetDatabase",
        "StringGetAsync",
        "key",
        "infos",
        "Add",
        "JsonConvert",
        "DeserializeObject",
        "MigrationInfo",
        "value",
        "ToString",
        "infos"
    ],
    "literals": [
        "\"127.0.0.1:6379\"",
        "\"staging\"",
        "\"five\"",
        "\"5\"",
        "\"seven\"",
        "\"7\"",
        "\"5 up\"",
        "\"five\"",
        "\"7 up\"",
        "\"seven\"",
        "\"OMG OMG OMG\"",
        "\"thirteen\"",
        "\"migrations:*\""
    ],
    "variables": [
        "IConnectionMultiplexer",
        "redisMuxer",
        "hostname",
        "db",
        "services",
        "storage",
        "context",
        "runner",
        "migrationInfos",
        "infos",
        "value"
    ],
    "comments": [
        "setup some state",
        "let's say that migration01 has already been completed",
        "are all the migrations marked as completed?",
        "check the state of the db"
    ],
    "docstrings": [],
    "functions": [
        "MigrationTests",
        "EnsureEmptyDb",
        "RunMigration",
        "GetAllMigrationInfos"
    ],
    "classes": [
        "MigrationTests"
    ]
}