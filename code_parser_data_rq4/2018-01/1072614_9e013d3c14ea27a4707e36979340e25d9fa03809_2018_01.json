{
    "identifiers": [
        "org",
        "springframework",
        "data",
        "java",
        "util",
        "org",
        "springframework",
        "core",
        "ClassMetadata",
        "org",
        "springframework",
        "core",
        "MethodMetadata",
        "MethodsMetadata",
        "name"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Copyright 2018 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Interface that defines abstract metadata of a specific class, in a form that does not require that class to be loaded\n * yet.\n *\n * @author Mark Paluch\n * @since 2.1\n * @see MethodMetadata\n * @see ClassMetadata\n * @see MethodsMetadataReader#getMethodsMetadata()",
        "* Return all methods.\n\t *\n\t * @return the methods declared in the class ordered as found in the class file. Order does not necessarily reflect\n\t *         the declaration order in the source file.",
        "* Return all methods matching method {@code name}.\n\t *\n\t * @param name name of the method, must not be {@literal null} or empty.\n\t * @return the methods matching method {@code name } declared in the class ordered as found in the class file. Order\n\t *         does not necessarily reflect the declaration order in the source file."
    ],
    "functions": [
        "getMethods",
        "getMethods"
    ],
    "classes": []
}