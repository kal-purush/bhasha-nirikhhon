{
    "identifiers": [
        "base64",
        "json",
        "os",
        "urllib2",
        "urllib2",
        "HTTPError",
        "util",
        "hook",
        "http",
        "REPO_API_PATH",
        "REPO_API_PATH",
        "hook",
        "command",
        "inp",
        "db",
        "load_github_config",
        "GITHUB_CONFIG",
        "GITHUB_CONFIG",
        "GITHUB_CONFIG",
        "required_key",
        "required_keys",
        "required_key",
        "GITHUB_CONFIG",
        "required_key",
        "GITHUB_CONFIG",
        "GITHUB_CONFIG",
        "LAST_COMMIT_HASH",
        "get_last_commit",
        "GITHUB_CONFIG",
        "LAST_COMMIT_HASH",
        "last_commit",
        "last_commit",
        "fetch_remote_config",
        "GITHUB_CONFIG",
        "open",
        "write",
        "config_str",
        "github_config",
        "LAST_COMMIT_PATH_TEMPLATE",
        "format",
        "github_config",
        "fetch_json",
        "url",
        "github_config",
        "response",
        "response",
        "github_config",
        "CONFIG_PATH_TEMPLATE",
        "format",
        "github_config",
        "fetch_json",
        "url",
        "github_config",
        "response",
        "base64",
        "b64decode",
        "response",
        "url",
        "github_config",
        "github_config",
        "urllib2",
        "Request",
        "url",
        "headers",
        "auth_headers",
        "urllib2",
        "urlopen",
        "req",
        "json",
        "loads",
        "urllib2",
        "urlopen",
        "req",
        "read",
        "HTTPError",
        "e",
        "url",
        "e",
        "getcode",
        "StandardError",
        "e",
        "e",
        "GITHUB_CONFIG",
        "os",
        "path",
        "exists",
        "github_config_path",
        "json",
        "load",
        "open",
        "github_config_path",
        "ValueError",
        "github_config_path",
        "github_config_path",
        "github_config_path",
        "load_github_config",
        "GITHUB_CONFIG",
        "githubconfig"
    ],
    "literals": [
        "''",
        "'https://api.github.com/repos'",
        "'/{owner}/{repo}/contents/{config_path}'",
        "'/{owner}/{repo}/git/refs/heads/{branch}'",
        "'refreshconfig'",
        "'owner'",
        "'repo'",
        "'private_token'",
        "\"Missing GitHub config.\"",
        "\"Missing API key '\"",
        "\"'.\"",
        "'branch'",
        "'branch'",
        "'master'",
        "'config_path'",
        "'config_path'",
        "'config.json'",
        "\"Stored commit hash matches latest commit. No changes have been made.\"",
        "'config.json'",
        "'w'",
        "\"Updated config from remote repo.\"",
        "'object'",
        "'sha'",
        "'content'",
        "\"Authorization\"",
        "\"token \"",
        "'private_token'",
        "\"Error getting from URL\"",
        "\"Unknown error\"",
        "'githubconfig.json'",
        "'r'",
        "\"Error parsing \"",
        "\" not found\"",
        "\"Successfully parsed \""
    ],
    "variables": [
        "GITHUB_CONFIG",
        "LAST_COMMIT_HASH",
        "REPO_API_PATH",
        "CONFIG_PATH_TEMPLATE",
        "LAST_COMMIT_PATH_TEMPLATE",
        "required_keys",
        "GITHUB_CONFIG",
        "GITHUB_CONFIG",
        "last_commit",
        "LAST_COMMIT_HASH",
        "config_str",
        "url",
        "response",
        "url",
        "response",
        "auth_headers",
        "req",
        "github_config_path",
        "GITHUB_CONFIG",
        "GITHUB_CONFIG",
        "GITHUB_CONFIG"
    ],
    "comments": [
        "reload GITHUB_CONFIG from githubconfig.json",
        "default to master branch",
        "default to config.json in base directory",
        "This should execute on init/reload"
    ],
    "docstrings": [
        "\"\"\"\nTo use this plugin, create githubconfig.json in the base directory (same directory as bot.py)\ngithubconfig.json format:\n{\n    \"owner\": \"repo_owner\",\n    \"repo\": \"repo_name\",\n    \"branch\": \"config_branch\", (optional, defaults to \"master\")\n    \"config_path\": \"skybot_config_path\", (optional, defaults to \"config.json\")\n    \"private_token\": \"github_token_for_user_with_repo_read_access\"\n}\nIf enabled, this plugin will execute on init/reload, overwriting config.json.\n\"\"\""
    ],
    "functions": [
        "githubconfig",
        "get_last_commit",
        "fetch_remote_config",
        "fetch_json",
        "load_github_config"
    ],
    "classes": []
}