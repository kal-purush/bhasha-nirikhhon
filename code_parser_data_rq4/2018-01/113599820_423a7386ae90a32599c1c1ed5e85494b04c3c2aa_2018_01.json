{
    "identifiers": [
        "Utils",
        "Utils",
        "input_path",
        "Utils",
        "read_csv",
        "input_path",
        "Utils",
        "get_data",
        "row",
        "db_data_2",
        "row",
        "row",
        "row",
        "read_data",
        "row",
        "strip",
        "row",
        "find",
        "invalid_data",
        "append",
        "row",
        "row",
        "split",
        "tmp",
        "find",
        "dict_data",
        "get",
        "tmp",
        "dict_data",
        "get",
        "tmp",
        "result_data",
        "append",
        "join",
        "tmp",
        "invalid_data",
        "result_data",
        "input_path",
        "Utils",
        "read_csv",
        "input_path",
        "row",
        "data",
        "row",
        "strip",
        "split",
        "tmp",
        "find",
        "tmp",
        "split",
        "c",
        "col_1",
        "tmp_list",
        "append",
        "c",
        "tmp",
        "tmp",
        "row",
        "tmp_list",
        "row",
        "split",
        "tmp",
        "find",
        "tmp",
        "split",
        "c",
        "col_1",
        "result_data",
        "append",
        "tmp",
        "c",
        "tmp",
        "result_data",
        "file",
        "education_level",
        "education_level",
        "sql",
        "sql",
        "Utils",
        "get_data",
        "sql",
        "Utils",
        "read_csv",
        "file",
        "row",
        "data_list",
        "row",
        "strip",
        "split",
        "data",
        "strip",
        "data",
        "strip",
        "data",
        "strip",
        "data_dict",
        "get",
        "university",
        "major",
        "high_courses",
        "get",
        "courses_text",
        "u_m_id",
        "h_id",
        "correct_data",
        "append",
        "format",
        "u_m_id",
        "h_id",
        "wrong_data",
        "append",
        "row",
        "strip",
        "i",
        "correct_data",
        "insert",
        "sql",
        "correct_data",
        "wrong_data",
        "convert_data_to_sql",
        "Utils",
        "save_to_file",
        "correct_data",
        "Utils",
        "save_to_file",
        "wrong_data",
        "convert_data_to_sql",
        "Utils",
        "save_to_file",
        "correct_data",
        "Utils",
        "save_to_file",
        "wrong_data"
    ],
    "literals": [
        "\"SELECT \\\n                                  a.major_name, \\\n                                  a.major_code, \\\n                                  group_concat(b.major_name SEPARATOR '|') \\\n                                FROM university_major_list a LEFT JOIN university_major_list b ON a.id = b.p_id AND b.type = 3 \\\n                                WHERE a.type = 2 AND a.major_code < '1399' \\\n                                GROUP BY a.major_name,a.major_code \\\n                                ORDER BY a.major_code\"",
        "\"不限\"",
        "\",\"",
        "\"类\"",
        "\",\"",
        "\",\"",
        "\"|\"",
        "\"|\"",
        "\",\"",
        "\",\"",
        "\",\"",
        "\"|\"",
        "\"|\"",
        "\",\"",
        "\",\"",
        "'SELECT concat(a.university_name, b.major_name) as `key`, c.id FROM university_list a, university_major_list b, '",
        "'university_has_major c WHERE a.id = c.university_list_id AND b.id = c.university_major_list_id'",
        "' AND a.education_level LIKE \"%本科%\"'",
        "' AND a.education_level LIKE \"%高职(专科)%\"'",
        "\"物理\"",
        "\"1\"",
        "\"化学\"",
        "\"2\"",
        "\"生物\"",
        "\"3\"",
        "\"思想政治\"",
        "\"4\"",
        "\"历史\"",
        "\"5\"",
        "\"地理\"",
        "\"6\"",
        "\"技术\"",
        "\"7\"",
        "\"INSERT INTO `university_has_major_has_school_course` (`university_has_major_id`, `high_school_course_id`) VALUES \"",
        "\",\"",
        "\"({},{}),\"",
        "\"output/高校招生专业要求-专业高中课程展开数据.csv\"",
        "\"output/高校专业高中课程-本科-正确.csv\"",
        "\"output/高校专业高中课程-本科-错误.csv\"",
        "\"output/高校招生专业要求-专业高中课程展开数据.csv\"",
        "\"output/高校专业高中课程-专科-正确.csv\"",
        "\"output/高校专业高中课程-专科-错误.csv\""
    ],
    "variables": [
        "read_data",
        "invalid_data",
        "result_data",
        "dict_data",
        "db_data_2",
        "dict_data",
        "row",
        "tmp",
        "tmp",
        "tmp_list",
        "result_data",
        "data",
        "tmp",
        "col_1",
        "tmp",
        "col_1",
        "correct_data",
        "wrong_data",
        "sql",
        "data_dict",
        "high_courses",
        "data_list",
        "sql",
        "i",
        "data",
        "major",
        "courses_text",
        "university",
        "u_m_id",
        "h_id",
        "correct_data",
        "wrong_data",
        "correct_data",
        "wrong_data"
    ],
    "comments": [
        "区分含有'不限'的数据",
        "展开第一列",
        "展开第二列",
        "return result_data",
        "大学专业列表",
        "高校列表",
        "1，2",
        "invalid, valid = expand_2_to_3(\"input/高校招生专业要求 0905.csv\")",
        "",
        "Utils.save_to_file(invalid, \"output/高校招生专业要求-不限.csv\")",
        "Utils.save_to_file(valid, \"output/高校招生专业要求-正常数据.csv\")",
        "3，4,5",
        "data_3 = expand_str_to_list(\"output/高校招生专业要求-正常数据.csv\")",
        "Utils.save_to_file(data_3, \"output/高校招生专业要求-专业高中课程展开数据.csv\")",
        "本科",
        "高职"
    ],
    "docstrings": [
        "\"\"\"\n这个脚本将高校招生专业要求0905.csv的数据，转化生成为Insert SQL\nCSV文件格式：\n第一列：大学专业或者门类\n第二列：高中课程\n第三列：大学名称\n\n将分为6步：\n\n1. 去除第二列高中课程为不限的数据\n2. 把带「类」字的二级科目展开到三级一行，xx类 → xx1|xx2\n3. 将第一列三级专业科目xx1|xx2展开到多条数据\n4. 将第三列高中课程 地理|历史 展开到多行数据\n5. 将经过3，4步展开后的数据按大学、专业、高中课程，是否相同的逻辑来去重\n6. 更新本科大学-分成将大学专业、高中课程、大学名称，转换到对应表的ID，并生成SQL\n7. 更新专科大学\n\"\"\"",
        "\"\"\"\n    将二级类数据展开到三级\n    :return:\n    \"\"\""
    ],
    "functions": [
        "expand_2_to_3",
        "expand_str_to_list",
        "convert_data_to_sql"
    ],
    "classes": []
}