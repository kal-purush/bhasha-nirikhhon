{
    "identifiers": [
        "logging",
        "argparse",
        "time",
        "requests",
        "collections",
        "urllist",
        "kwargs",
        "u",
        "requests",
        "head",
        "u",
        "status_code",
        "u",
        "urllist",
        "urllist",
        "kwargs",
        "u",
        "u",
        "urllist",
        "urls",
        "kwargs",
        "kwargs",
        "len",
        "urls",
        "size",
        "logging",
        "error",
        "format",
        "commentary",
        "callable",
        "logging",
        "error",
        "format",
        "commentary",
        "TimeExecution",
        "urls",
        "time",
        "join",
        "format",
        "a",
        "kwargs",
        "a",
        "a",
        "kwargs",
        "format",
        "kwstring",
        "size",
        "time",
        "size",
        "time",
        "urls",
        "time",
        "time",
        "urls",
        "time",
        "time",
        "t1",
        "t0",
        "collections",
        "Counter",
        "r",
        "values",
        "argparse",
        "ArgumentParser",
        "description",
        "ap",
        "add_argument",
        "metavar",
        "help",
        "ap",
        "parse_args",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "INFO",
        "format",
        "time",
        "time",
        "open",
        "args",
        "urllist",
        "urlfile",
        "urlfile",
        "read",
        "splitlines",
        "IOError",
        "FileNotFoundError",
        "e",
        "logging",
        "critical",
        "format",
        "args",
        "urllist",
        "e",
        "logging",
        "debug",
        "format",
        "len",
        "urllist",
        "args",
        "urllist",
        "time",
        "time",
        "t0",
        "Test",
        "urllist",
        "f",
        "commentary",
        "c",
        "f",
        "c",
        "FuckAll",
        "NaiveGet"
    ],
    "literals": [
        "'Test {} has no URLs'",
        "'Test {} has no callable function'",
        "\", \"",
        "\"{}={}\"",
        "\"{} {:,} URLS in {:7.1g} sec = {:7.1g} per second\"",
        "\"Unknown test.\"",
        "'__main__'",
        "'Time getting URLs'",
        "'--urllist'",
        "'file'",
        "'URL list file'",
        "'urllist.txt'",
        "'%(asctime)s: %(levelname)-7s %(message)s'",
        "\"Error reading {}: {}\"",
        "\"Read {} lines from {} in {:.1f} ms\"",
        "'No operation'",
        "'Naive requests.get()'"
    ],
    "variables": [
        "kwargs",
        "size",
        "time",
        "kwstring",
        "t0",
        "r",
        "t1",
        "time",
        "counts",
        "ap",
        "args",
        "t0",
        "urllist",
        "tests"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\nInvestigating the most efficient (i.e. fastest) way of getting the status of many\n(in the real world >> 10**6) URLs. Ordinary sequential request.head() is too slow.\n\nSo reads the status of a set of URLs listed in a file and then tries various means of\ngetting their statuses.\n\"\"\"",
        "\"\"\"\n    Does a naive get of the list of URLs by doing a simple loop which performs a request.head()\n    call for each. This is the baseline for inefficiency\n    :param urllist:\n    :param kwargs:\n    :return:\n    \"\"\"",
        "\"\"\"\n    Does nothing. Just returns a list of 200 codes withouth checking any URLs\n    :param urllist:\n    :param kwargs:\n    :return:\n    \"\"\"",
        "\"\"\"\n    Results of the various IO latency tests\n    \"\"\"",
        "\"\"\"\n        Times execution of the function on the list of URLs\n        :return:\n        \"\"\""
    ],
    "functions": [
        "NaiveGet",
        "FuckAll",
        "__repr__",
        "TimeExecution"
    ],
    "classes": [
        "Test"
    ]
}