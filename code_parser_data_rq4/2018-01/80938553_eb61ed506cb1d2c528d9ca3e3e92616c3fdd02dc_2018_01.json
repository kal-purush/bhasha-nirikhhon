{
    "identifiers": [
        "chunks",
        "updateHexagonContainerHeight",
        "height",
        "footer",
        "hexagonContainer",
        "width",
        "hexagonContainer",
        "initializeChunks",
        "i",
        "chunks",
        "i",
        "i",
        "button",
        "i",
        "button",
        "revealChunk",
        "i",
        "clearInterval",
        "chunkInterval",
        "i",
        "transitionButtons",
        "button",
        "revealChunk",
        "chunkInterval",
        "setInterval",
        "scrollChunks",
        "chunkAnimationTime",
        "chunkNum",
        "currentIndex",
        "chunkNum",
        "i",
        "chunks",
        "i",
        "chunks",
        "i",
        "transitionButtons",
        "i",
        "i",
        "chunkNum",
        "chunk",
        "button",
        "clearTimeout",
        "currentTimeout",
        "i",
        "chunks",
        "i",
        "currentTimeout",
        "setTimeout",
        "chunk",
        "animationTime",
        "animationWaitRatio",
        "i",
        "button",
        "keyCode",
        "keyCode",
        "currentIndex",
        "keyCode",
        "currentIndex",
        "currentIndex",
        "buttonCount",
        "currentIndex",
        "buttonCount",
        "revealChunk",
        "currentIndex",
        "e",
        "e",
        "clearInterval",
        "chunkInterval",
        "scrollChunks",
        "keyCode",
        "handleKeypress",
        "getHexagonSize",
        "hexagons",
        "hexagonSize",
        "hexagonSize",
        "hexagonSize",
        "hexagonSize",
        "updateHexagonContainerHeight",
        "colCount",
        "hexagons",
        "hexagonContainer",
        "containerWidth",
        "widthOffsetRatio",
        "containerWidth",
        "offset",
        "footer",
        "hexagonContainer",
        "containerWidth",
        "longestSide",
        "containerHeight",
        "longestSide",
        "numCols",
        "numRows",
        "hexagons",
        "fits",
        "currentScale",
        "scaleFactor",
        "numCols",
        "containerWidth",
        "longestSide",
        "currentScale",
        "numRows",
        "containerHeight",
        "longestSide",
        "currentScale",
        "fits",
        "numCols",
        "numRows",
        "hexagons",
        "containerHeight",
        "numRows",
        "containerWidth",
        "numCols",
        "longestSide",
        "currentScale",
        "shortestSide",
        "currentScale",
        "currentScale",
        "i",
        "hexagons",
        "i",
        "hexagons",
        "i",
        "hexagon",
        "hexagon",
        "currentScale",
        "hexagon",
        "hexagon",
        "currentScale",
        "longestSide",
        "distanceFactor",
        "poissonDiscSampler",
        "width",
        "longestSide",
        "height",
        "longestSide",
        "distance",
        "width",
        "height",
        "distance",
        "width",
        "longestSide",
        "height",
        "longestSide",
        "width",
        "longestSide",
        "height",
        "longestSide",
        "sampler",
        "leftCenterPoint",
        "leftCenterPoint",
        "sampler",
        "rightCenterPoint",
        "rightCenterPoint",
        "leftCenterPoint",
        "rightCenterPoint",
        "sample",
        "sampler",
        "generatedSamples",
        "hexagons",
        "samples",
        "sample",
        "generatedSamples",
        "samples",
        "i",
        "samples",
        "i",
        "randomlyRotateHexagon",
        "hexagons",
        "i",
        "moveHexagonToPosition",
        "hexagons",
        "i",
        "samples",
        "i",
        "samples",
        "i",
        "hexagonImageElement",
        "rotationAmount",
        "rotationAmount",
        "hexagonImageElement",
        "rotation",
        "cellWidth",
        "cellHeight",
        "rowColArray",
        "offset",
        "hexagon",
        "cellWidth",
        "hexagon",
        "cellHeight",
        "hexagon",
        "xSpace",
        "ySpace",
        "rowColArray",
        "cellWidth",
        "xSpace",
        "offset",
        "rowColArray",
        "cellHeight",
        "ySpace",
        "hexagon",
        "xPosition",
        "hexagon",
        "yPosition",
        "hexagonImageElement",
        "position",
        "hexagonImageElement",
        "position",
        "hexagonImageElement",
        "position",
        "hexagonImageElement",
        "hexagonImageElement",
        "hexagonImageElement",
        "hexagonImageElement",
        "hexagonImageElement",
        "hexagonImageElement",
        "hexagonContainer",
        "containerHeightModifier",
        "hexagonContainer",
        "longestSide",
        "footer",
        "hexagonContainer",
        "longestSide",
        "numRows",
        "numCols",
        "i",
        "numRows",
        "i",
        "j",
        "numCols",
        "j",
        "cells",
        "i",
        "j",
        "shuffle",
        "cells",
        "cells",
        "placeHexagons",
        "rectA",
        "rectB",
        "rectB",
        "rectA",
        "rectB",
        "rectA",
        "rectB",
        "rectA",
        "rectB",
        "rectA",
        "a",
        "i",
        "a",
        "i",
        "i",
        "j",
        "i",
        "x",
        "a",
        "i",
        "a",
        "i",
        "a",
        "j",
        "a",
        "j",
        "x"
    ],
    "literals": [
        "'transition-buttons'",
        "'info-chunk'",
        "'glyphs'",
        "'hexagon-img'",
        "'footer'",
        "'div'",
        "'active-button'",
        "'hidden'",
        "'active-button'",
        "'hidden'",
        "'active-button'",
        "\"rotate(\"",
        "\"deg)\""
    ],
    "variables": [
        "transitionButtons",
        "chunks",
        "hexagonContainer",
        "hexagons",
        "footer",
        "currentIndex",
        "buttonCount",
        "animationTime",
        "animationWaitRatio",
        "currentTimeout",
        "chunkInterval",
        "chunkAnimationTime",
        "width",
        "height",
        "i",
        "button",
        "i",
        "chunk",
        "button",
        "chunk",
        "keyCode",
        "scaleFactor",
        "hexagonOffset",
        "rotationAmount",
        "maxAttempts",
        "hexagonSize",
        "longestSide",
        "shortestSide",
        "widthOffsetRatio",
        "distanceFactor",
        "rowCount",
        "containerWidth",
        "offset",
        "containerHeight",
        "numCols",
        "numRows",
        "fits",
        "currentScale",
        "cellHeight",
        "cellWidth",
        "i",
        "hexagon",
        "distance",
        "sampler",
        "leftCenterPoint",
        "rightCenterPoint",
        "generatedSamples",
        "sample",
        "samples",
        "i",
        "rotation",
        "xSpace",
        "ySpace",
        "xPosition",
        "yPosition",
        "cells",
        "i",
        "j",
        "j",
        "x",
        "i"
    ],
    "comments": [
        "taken from the css file",
        "39 makes it go right",
        "left",
        "right",
        "clear interval because when the user starts messing with it, we don't want to keep auto-scrolling",
        "hexagon stuff",
        "how much we will scale the images down by if we can't fit them all",
        "// will not work with like 13 ppl sooo",
        "var heightForHexagons = document.body.clientHeight - hexagonContainer.offsetTop;",
        "var widthForHexagons = hexagonContainer.clientWidth;",
        "var center = getHexagonContainerCenter();",
        "console.log(center);",
        "moveHexagonToPosition(hexagons[0], sub(center, scalarMultiply(getHexagonSize(hexagons[0]), 1/2)));",
        "randomlyRotateHexagon(hexagons[0]);",
        "var hexagonSize = getHexagonSize(hexagons[0]);",
        "var longestSide = Math.max(hexagonSize.x, hexagonSize.y);",
        "var shortestSide = Math.min(hexagonSize.x, hexagonSize.y);",
        "var sizeDelta = longestSide - shortestSide;",
        "for (var i = 1; i < hexagons.length; i++) {",
        "if (i <= 6) {",
        "var newPosition = add(scalarMultiply(angleToUnitVector(i * 60), longestSide + sizeDelta), getHexagonPosition(hexagons[0]));",
        "moveHexagonToPosition(hexagons[i], newPosition);",
        "randomlyRotateHexagon(hexagons[i]);",
        "}",
        "}",
        "console.log(hexagons.length)",
        "console.log(\"a\",offset)",
        "resize hexagons if we need to, in order to make them all fit without overlap",
        "console.log(numRows, numCols, hexagons.length, cellHeight, cellWidth);",
        "var cells = generateRandomCellOrder(numRows, numCols);",
        "// rowCount = Math.ceil(rowCount * height / width);",
        "// colCount = Math.ceil(colCount * width / height);",
        "// console.log(rowCount, colCount)",
        "// var maxHeight = height / rowCount;",
        "// var maxWidth = width / colCount;",
        "// console.log(maxHeight, maxWidth)",
        "// TODO, find a better way to position these pseudo-randomly without just randomly putting shit down lmao",
        "for (var i = 0; i < hexagons.length; i++) {",
        "var hexagon = hexagons[i];",
        "var cell = cells[i];",
        "// moveHexagonToPosition(hexagon, getRandomPosition());",
        "moveHexagonToRandomPositionInCell(cellWidth, cellHeight, cell, offset, hexagon);",
        "randomlyRotateHexagon(hexagon);",
        "}",
        "for (var i = 0; i < hexagons.length; i++) {",
        "var hexagon = hexagons[i];",
        "moveHexagonToPosition(hexagon, getRandomPosition());",
        "var colliding = false;",
        "for (var j = 0; j < i; j++) {",
        "var target = hexagons[j];",
        "var currentAttempts = 0;",
        "while (intersectRect(hexagon.getBoundingClientRect(), target.getBoundingClientRect()) && currentAttempts < maxAttempts) {",
        "moveHexagonToPosition(hexagon, getRandomPosition());",
        "currentAttempts++;",
        "}",
        "}",
        "}",
        "from https://github.com/Barry127/intersect-rect",
        "from https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array"
    ],
    "docstrings": [],
    "functions": [
        "updateHexagonContainerHeight",
        "initializeChunks",
        "revealChunk",
        "scrollChunks",
        "handleKeypress",
        "placeHexagons",
        "randomlyRotateHexagon",
        "moveHexagonToRandomPositionInCell",
        "moveHexagonToPosition",
        "getHexagonSize",
        "getHexagonPosition",
        "getHexagonContainerCenter",
        "getRandomPosition",
        "generateRandomCellOrder",
        "intersectRect",
        "shuffle"
    ],
    "classes": []
}