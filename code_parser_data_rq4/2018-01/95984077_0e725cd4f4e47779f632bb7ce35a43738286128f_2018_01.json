{
    "identifiers": [
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "a",
        "b",
        "np",
        "random",
        "random",
        "from_0_1_to_interval",
        "r_0_1",
        "a",
        "b",
        "x",
        "a",
        "b",
        "a",
        "x",
        "b",
        "a",
        "mu",
        "log_sigma",
        "np",
        "exp",
        "log_sigma",
        "np",
        "random",
        "normal",
        "mu",
        "sigma",
        "mu",
        "log_sigma",
        "log_alpha",
        "np",
        "exp",
        "log_sigma",
        "np",
        "exp",
        "log_alpha",
        "np",
        "random",
        "normal",
        "mu",
        "sigma",
        "np",
        "random",
        "choice",
        "np",
        "random",
        "pareto",
        "alpha",
        "x",
        "center",
        "max_step_size",
        "x",
        "center",
        "np",
        "exp",
        "d",
        "np",
        "random",
        "random",
        "sigmoid",
        "r",
        "max_step_size",
        "r",
        "max_step_size",
        "x",
        "a",
        "b",
        "c",
        "get_step_normal",
        "a",
        "b",
        "r",
        "r",
        "x",
        "x_s",
        "a",
        "a_s",
        "b",
        "b_s",
        "x",
        "i",
        "i",
        "get_time_series",
        "next",
        "g",
        "x",
        "xs",
        "plt",
        "plot",
        "xs",
        "ys",
        "plt",
        "show"
    ],
    "literals": [
        "\"__main__\""
    ],
    "variables": [
        "r_0_1",
        "sigma",
        "sigma",
        "alpha",
        "d",
        "sigmoid",
        "x",
        "a",
        "b",
        "c",
        "x_s",
        "a_s",
        "b_s",
        "xs",
        "g",
        "ys"
    ],
    "comments": [
        "x is random walk process",
        "each step is the sum of a normal variable (for drift and variance) and a s",
        "mu is random walk in reals",
        "sigma and alpha are random walks in log space",
        "can each of these variables' random walks themselves be parametrized in the same way as the output process?",
        "x can be sigma of mu-generating process, for instance",
        "so we can have a matrix such as this:",
        "output   mu sigma alpha",
        "x[n+1] m[n]  s[n]  a[n]",
        "m[n+1] s[n]  a[n]  x[n]",
        "s[n+1] a[n]  x[n]  m[n]",
        "a[n+1] x[n]  m[n]  s[n]",
        "but may start with m, s, and a just being simple random walks to simplify things",
        "too jumpy!",
        "in [0, 1]",
        "area under the sigmoid is probability of moving farther down, above of moving farther up, then within those just uniform",
        "get_step(b, c, x)",
        "get_step(c, x, a)",
        "c_s = get_step_with_restorative_force(c, 0, 0.01) #get_step(x, a, b)",
        "c += c_s"
    ],
    "docstrings": [],
    "functions": [
        "r",
        "from_0_1_to_interval",
        "get_step_normal",
        "get_step_normal_plus_pareto",
        "get_step_with_restorative_force",
        "get_time_series"
    ],
    "classes": []
}