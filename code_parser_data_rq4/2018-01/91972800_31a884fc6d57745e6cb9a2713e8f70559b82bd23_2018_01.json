{
    "identifiers": [
        "com",
        "rcv",
        "java",
        "io",
        "java",
        "util",
        "tiedCandidates",
        "tieBreakMode",
        "round",
        "numVotes",
        "roundTallies",
        "selection",
        "explanation",
        "tiedCandidates",
        "tieBreakMode",
        "round",
        "numVotes",
        "roundTallies",
        "tiedCandidates",
        "tiedCandidates",
        "tieBreakMode",
        "tieBreakMode",
        "round",
        "round",
        "numVotes",
        "numVotes",
        "roundTallies",
        "roundTallies",
        "selection",
        "selection",
        "breakTie",
        "selection",
        "explanation",
        "getSelection",
        "explanation",
        "options",
        "contestOptionId",
        "tiedCandidates",
        "contestOptionId",
        "equals",
        "selection",
        "options",
        "add",
        "contestOptionId",
        "nonselected",
        "options",
        "size",
        "nonselected",
        "options",
        "get",
        "options",
        "size",
        "nonselected",
        "options",
        "get",
        "options",
        "get",
        "sb",
        "i",
        "i",
        "options",
        "size",
        "i",
        "sb",
        "append",
        "options",
        "get",
        "i",
        "append",
        "sb",
        "append",
        "append",
        "options",
        "get",
        "options",
        "size",
        "nonselected",
        "sb",
        "toString",
        "nonselected",
        "selection",
        "tieBreakMode",
        "INTERACTIVE",
        "selection",
        "doInteractive",
        "RANDOM",
        "selection",
        "doRandom",
        "loser",
        "doPreviousRounds",
        "loser",
        "selection",
        "loser",
        "tieBreakMode",
        "Tabulator",
        "TieBreakMode",
        "PREVIOUS_ROUND_COUNTS_THEN_INTERACTIVE",
        "selection",
        "doInteractive",
        "selection",
        "doRandom",
        "selection",
        "round",
        "numVotes",
        "i",
        "i",
        "tiedCandidates",
        "size",
        "i",
        "i",
        "tiedCandidates",
        "get",
        "i",
        "c",
        "line",
        "c",
        "readLine",
        "choice",
        "parseInt",
        "line",
        "choice",
        "choice",
        "tiedCandidates",
        "size",
        "explanation",
        "tiedCandidates",
        "get",
        "choice",
        "e",
        "roundTally",
        "candidatesToInclude",
        "shouldLog",
        "tallyToCandidates",
        "candidate",
        "candidatesToInclude",
        "votes",
        "roundTally",
        "get",
        "candidate",
        "shouldLog",
        "Logger",
        "log",
        "candidate",
        "votes",
        "candidates",
        "tallyToCandidates",
        "get",
        "votes",
        "candidates",
        "candidates",
        "tallyToCandidates",
        "put",
        "votes",
        "candidates",
        "candidates",
        "add",
        "candidate",
        "tallyToCandidates",
        "r",
        "random",
        "index",
        "floor",
        "r",
        "tiedCandidates",
        "size",
        "explanation",
        "tiedCandidates",
        "get",
        "index",
        "candidatesInContention",
        "tiedCandidates",
        "selected",
        "roundToCheck",
        "round",
        "roundToCheck",
        "roundToCheck",
        "countToCandidates",
        "buildTallyToCandidates",
        "roundTallies",
        "get",
        "roundToCheck",
        "candidatesInContention",
        "minVotes",
        "countToCandidates",
        "firstKey",
        "candidatesWithLowestTotal",
        "countToCandidates",
        "get",
        "minVotes",
        "candidatesWithLowestTotal",
        "size",
        "explanation",
        "minVotes",
        "roundToCheck",
        "selected",
        "candidatesWithLowestTotal",
        "getFirst",
        "candidatesInContention",
        "candidatesWithLowestTotal",
        "selected"
    ],
    "literals": [
        "\" and \"",
        "\", \"",
        "\"and \"",
        "\"Tie in round \"",
        "\" for these candidateIDs, each of whom has \"",
        "\" votes:\"",
        "\". \"",
        "\"Enter the number corresponding to the candidate who should lose this tiebreaker.\"",
        "\"The loser was supplied by the operator.\"",
        "\"Invalid selection. Please try again.\"",
        "\"Candidate %s got %d votes.\"",
        "\"The loser was randomly selected.\"",
        "\"The loser had the fewest votes (\"",
        "\") in round \"",
        "\".\""
    ],
    "variables": [
        "tiedCandidates",
        "tieBreakMode",
        "round",
        "numVotes",
        "roundTallies",
        "selection",
        "explanation",
        "nonselected",
        "selection"
    ],
    "comments": [
        "purpose: utility function to \"invert\" the input map of candidateID => tally",
        "into a sorted map of tally => List<candidateID>",
        "a list is used because multiple candidates may have the same (tying) tally",
        "this is used to determine when a final winner is picked, and running tiebreak logic",
        "param: roundTally",
        "input map of candidateID to tally for a particular round",
        "param candidatesToInclude:",
        "input list of candidateIDs may appear in the output.",
        "This filters out candidates when running a tiebreak tabulation which relies",
        "on the tied candidate's previous round totals to break the tie",
        "param: soundLog",
        "if set output the candidate tally to console and audit",
        "return: map of tally => List<candidateID> from the input data (excluding candidates",
        "not appearing in candidatesToInclude",
        "output map structure containing the map of vote tally to candidate(s)",
        "for each candidate record their vote total into the countToCandidates object",
        "candidate is the current candidate as we iterate all candidates under consideration",
        "vote count for this candidate",
        "all candidates in the existing output structure (if any) who received the same vote tally",
        "new container list for candidates who recieved this vote tally",
        "TODO: use java.security.SecureRandom"
    ],
    "docstrings": [
        "* Created by Jonathan Moldover on 1/28/18\n * Copyright 2018 Bright Spots\n * Purpose:\n * Version: 1.0"
    ],
    "functions": [
        "TieBreak",
        "getSelection",
        "getExplanation",
        "nonselectedString",
        "breakTie",
        "doInteractive",
        "buildTallyToCandidates",
        "doRandom",
        "doPreviousRounds"
    ],
    "classes": [
        "TieBreak"
    ]
}