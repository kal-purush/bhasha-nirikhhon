{
    "identifiers": [
        "Dexie",
        "Proteus",
        "CRUDEngine",
        "EventEmitter",
        "store",
        "prekey_id",
        "session_id",
        "Proteus",
        "prekey_id",
        "Proteus",
        "Proteus",
        "identity",
        "Proteus",
        "session_id",
        "Proteus",
        "identity",
        "Proteus",
        "Proteus",
        "preKey",
        "Proteus",
        "Proteus",
        "preKeys",
        "Proteus",
        "Proteus",
        "session_id",
        "session",
        "Proteus",
        "Proteus",
        "session_id",
        "session",
        "Proteus",
        "Proteus",
        "engine",
        "prekey_id",
        "Proteus",
        "prekey_id",
        "Proteus",
        "Proteus",
        "identity",
        "Proteus",
        "Proteus",
        "pre_key",
        "Proteus",
        "Proteus",
        "pre_keys",
        "Proteus",
        "Proteus",
        "session_id",
        "session",
        "Proteus",
        "Proteus",
        "identity",
        "Proteus",
        "session_id",
        "Proteus",
        "session_id",
        "session",
        "Proteus",
        "Proteus",
        "session_id",
        "prekey_id",
        "Proteus",
        "prekey_id",
        "Proteus",
        "Proteus",
        "identity",
        "Proteus",
        "Proteus",
        "pre_key",
        "Proteus",
        "Proteus",
        "pre_keys",
        "Proteus",
        "Proteus",
        "session_id",
        "session",
        "Proteus",
        "Proteus",
        "identity",
        "Proteus",
        "session_id",
        "Proteus",
        "session_id",
        "session",
        "Proteus",
        "Proteus",
        "session_id",
        "CryptoboxCRUDStore",
        "storeName",
        "primaryKey",
        "record",
        "store_name",
        "primary_key",
        "changes",
        "store_name",
        "primary_key",
        "store_name",
        "store_name",
        "primary_key",
        "Proteus",
        "identifier",
        "store_name",
        "primary_key",
        "entity",
        "store_name",
        "primary_key",
        "store_name",
        "primary_key",
        "changes",
        "store_name",
        "primary_key",
        "prekey_id",
        "session_id",
        "Proteus",
        "prekey_id",
        "Proteus",
        "Proteus",
        "identity",
        "Proteus",
        "session_id",
        "Proteus",
        "identity",
        "Proteus",
        "Proteus",
        "prekey",
        "Proteus",
        "Proteus",
        "prekeys",
        "Proteus",
        "Proteus",
        "session_id",
        "session",
        "Proteus",
        "Proteus",
        "session_id",
        "session",
        "Proteus",
        "Proteus",
        "Proteus",
        "store",
        "deletedPreKeyIds",
        "prekey_id",
        "Proteus",
        "prekey_id",
        "message",
        "message",
        "serialised",
        "id",
        "EventEmitter",
        "Proteus",
        "Proteus",
        "cryptoBoxStore",
        "store",
        "minimumAmountOfPreKeys",
        "Proteus",
        "Proteus",
        "session_id",
        "ciphertext",
        "session",
        "payload",
        "pre_key_bundle",
        "Proteus",
        "prekey_id",
        "start",
        "size",
        "Proteus",
        "prekey",
        "Proteus",
        "session_id",
        "session_id",
        "envelope",
        "Proteus",
        "client_id",
        "pre_key_bundle",
        "session_id",
        "session",
        "store",
        "Proteus",
        "id",
        "pk_store",
        "store",
        "session",
        "Proteus",
        "ciphertext",
        "plaintext",
        "message",
        "message"
    ],
    "literals": [
        "\"dexie\"",
        "\"wire-webapp-proteus\"",
        "\"@wireapp/store-engine/dist/commonjs/engine\"",
        "'events'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [],
    "comments": [
        "",
        "Wire",
        "Copyright (C) 2016 Wire Swiss GmbH",
        "",
        "This program is free software: you can redistribute it and/or modify",
        "it under the terms of the GNU General Public License as published by",
        "the Free Software Foundation, either version 3 of the License, or",
        "(at your option) any later version.",
        "",
        "This program is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the",
        "GNU General Public License for more details.",
        "",
        "You should have received a copy of the GNU General Public License",
        "along with this program. If not, see http://www.gnu.org/licenses/.",
        "",
        "<reference types=\"node\" />"
    ],
    "docstrings": [],
    "functions": [],
    "classes": [
        "Cache",
        "CryptoboxCRUDStore",
        "FileStore",
        "IndexedDB",
        "ReadOnlyStore",
        "RecordAlreadyExistsError",
        "RecordNotFoundError",
        "SerialisedRecord",
        "SerialisedUpdate",
        "Cryptobox",
        "CryptoboxSession",
        "DecryptionError",
        "InvalidPreKeyFormatError"
    ]
}