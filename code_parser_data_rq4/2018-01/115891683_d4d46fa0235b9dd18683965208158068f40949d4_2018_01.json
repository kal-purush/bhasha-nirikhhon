{
    "identifiers": [
        "os",
        "re",
        "sets",
        "sys",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "re",
        "compile",
        "re",
        "compile",
        "directory",
        "relative_path",
        "os",
        "path",
        "isfile",
        "os",
        "path",
        "join",
        "directory",
        "relative_path",
        "relative_path",
        "directory",
        "sys",
        "exit",
        "gtest_root",
        "VerifyFileExists",
        "gtest_root",
        "GTEST_H_SEED",
        "VerifyFileExists",
        "gtest_root",
        "GTEST_ALL_CC_SEED",
        "output_dir",
        "relative_path",
        "os",
        "path",
        "join",
        "output_dir",
        "relative_path",
        "os",
        "path",
        "exists",
        "output_file",
        "relative_path",
        "output_dir",
        "sys",
        "stdin",
        "readline",
        "strip",
        "answer",
        "sys",
        "exit",
        "os",
        "path",
        "dirname",
        "output_file",
        "os",
        "path",
        "isdir",
        "parent_directory",
        "os",
        "makedirs",
        "parent_directory",
        "output_dir",
        "VerifyOutputFile",
        "output_dir",
        "GTEST_H_OUTPUT",
        "VerifyOutputFile",
        "output_dir",
        "GTEST_ALL_CC_OUTPUT",
        "gtest_root",
        "output_dir",
        "file",
        "os",
        "path",
        "join",
        "output_dir",
        "GTEST_H_OUTPUT",
        "sets",
        "gtest_header_path",
        "gtest_header_path",
        "processed_files",
        "processed_files",
        "add",
        "gtest_header_path",
        "line",
        "file",
        "os",
        "path",
        "join",
        "gtest_root",
        "gtest_header_path",
        "INCLUDE_GTEST_FILE_REGEX",
        "match",
        "line",
        "m",
        "ProcessFile",
        "m",
        "group",
        "output_file",
        "write",
        "line",
        "ProcessFile",
        "GTEST_H_SEED",
        "output_file",
        "close",
        "gtest_root",
        "output_file",
        "sets",
        "gtest_source_file",
        "gtest_source_file",
        "processed_files",
        "processed_files",
        "add",
        "gtest_source_file",
        "line",
        "file",
        "os",
        "path",
        "join",
        "gtest_root",
        "gtest_source_file",
        "INCLUDE_GTEST_FILE_REGEX",
        "match",
        "line",
        "m",
        "m",
        "group",
        "GTEST_SPI_H_SEED",
        "ProcessFile",
        "GTEST_SPI_H_SEED",
        "GTEST_H_SEED",
        "processed_files",
        "processed_files",
        "add",
        "GTEST_H_SEED",
        "output_file",
        "write",
        "GTEST_H_OUTPUT",
        "INCLUDE_SRC_FILE_REGEX",
        "match",
        "line",
        "m",
        "ProcessFile",
        "m",
        "group",
        "output_file",
        "write",
        "line",
        "ProcessFile",
        "GTEST_ALL_CC_SEED",
        "gtest_root",
        "output_dir",
        "file",
        "os",
        "path",
        "join",
        "output_dir",
        "GTEST_ALL_CC_OUTPUT",
        "FuseGTestAllCcToFile",
        "gtest_root",
        "output_file",
        "output_file",
        "close",
        "gtest_root",
        "output_dir",
        "ValidateGTestRootDir",
        "gtest_root",
        "ValidateOutputDir",
        "output_dir",
        "FuseGTestH",
        "gtest_root",
        "output_dir",
        "FuseGTestAllCc",
        "gtest_root",
        "output_dir",
        "len",
        "sys",
        "argv",
        "argc",
        "FuseGTest",
        "DEFAULT_GTEST_ROOT_DIR",
        "sys",
        "argv",
        "argc",
        "FuseGTest",
        "sys",
        "argv",
        "sys",
        "argv",
        "__doc__",
        "sys",
        "exit",
        "main"
    ],
    "literals": [
        "'wan@google.com (Zhanyong Wan)'",
        "'..'",
        "r'^\\s*#\\s*include\\s*\"(gtest/.+)\"'",
        "r'^\\s*#\\s*include\\s*\"(src/.+)\"'",
        "'include/gtest/gtest.h'",
        "'include/gtest/gtest-spi.h'",
        "'src/gtest-all.cc'",
        "'gtest/gtest.h'",
        "'gtest/gtest-all.cc'",
        "'ERROR: Cannot find %s in directory %s.'",
        "'Please either specify a valid project root directory '",
        "'or omit it on the command line.'",
        "'%s already exists in directory %s - overwrite it? (y/N) '",
        "'y'",
        "'Y'",
        "'ABORTED.'",
        "'w'",
        "'r'",
        "'include/'",
        "'r'",
        "'include/'",
        "'#include \"%s\"\\n'",
        "'w'",
        "'__main__'"
    ],
    "variables": [
        "__author__",
        "DEFAULT_GTEST_ROOT_DIR",
        "INCLUDE_GTEST_FILE_REGEX",
        "INCLUDE_SRC_FILE_REGEX",
        "GTEST_H_SEED",
        "GTEST_SPI_H_SEED",
        "GTEST_ALL_CC_SEED",
        "GTEST_H_OUTPUT",
        "GTEST_ALL_CC_OUTPUT",
        "output_file",
        "answer",
        "parent_directory",
        "output_file",
        "processed_files",
        "m",
        "processed_files",
        "m",
        "m",
        "output_file",
        "argc"
    ],
    "comments": [
        "!/usr/bin/env python",
        "",
        "Copyright 2009, Google Inc.",
        "All rights reserved.",
        "",
        "Redistribution and use in source and binary forms, with or without",
        "modification, are permitted provided that the following conditions are",
        "met:",
        "",
        "notice, this list of conditions and the following disclaimer.",
        "copyright notice, this list of conditions and the following disclaimer",
        "in the documentation and/or other materials provided with the",
        "distribution.",
        "contributors may be used to endorse or promote products derived from",
        "this software without specific prior written permission.",
        "",
        "THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS",
        "\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT",
        "LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR",
        "A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT",
        "OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,",
        "SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT",
        "LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,",
        "DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY",
        "THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT",
        "(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE",
        "OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
        "We assume that this file is in the scripts/ directory in the Google",
        "Test root directory.",
        "Regex for matching '#include \"gtest/...\"'.",
        "Regex for matching '#include \"src/...\"'.",
        "Where to find the source seed files.",
        "Where to put the generated files.",
        "Makes sure the output file either doesn't exist or can be overwritten.",
        "TODO(wan@google.com): The following user-interaction doesn't",
        "work with automated processes.  We should provide a way for the",
        "Makefile to force overwriting the files.",
        "Makes sure the directory holding the output file exists; creates",
        "it and all its ancestors if necessary.",
        "Holds all gtest headers we've processed.",
        "We don't process the same header twice.",
        "Reads each line in the given gtest header.",
        "It's '#include \"gtest/...\"' - let's process it recursively.",
        "Otherwise we copy the line unchanged to the output file.",
        "We don't process the same #included file twice.",
        "Reads each line in the given gtest source file.",
        "It's '#include \"gtest/gtest-spi.h\"'.  This file is not",
        "#included by \"gtest/gtest.h\", so we need to process it.",
        "It's '#include \"gtest/foo.h\"' where foo is not gtest-spi.",
        "We treat it as '#include \"gtest/gtest.h\"', as all other",
        "gtest headers are being fused into gtest.h and cannot be",
        "#included directly.",
        "There is no need to #include \"gtest/gtest.h\" more than once.",
        "It's '#include \"src/foo\"' - let's process it recursively.",
        "fuse_gtest_files.py OUTPUT_DIR",
        "fuse_gtest_files.py GTEST_ROOT_DIR OUTPUT_DIR"
    ],
    "docstrings": [
        "* Redistributions of source code must retain the above copyright",
        "* Redistributions in binary form must reproduce the above",
        "* Neither the name of Google Inc. nor the names of its",
        "\"\"\"fuse_gtest_files.py v0.2.0\nFuses Google Test source code into a .h file and a .cc file.\n\nSYNOPSIS\n       fuse_gtest_files.py [GTEST_ROOT_DIR] OUTPUT_DIR\n\n       Scans GTEST_ROOT_DIR for Google Test source code, and generates\n       two files: OUTPUT_DIR/gtest/gtest.h and OUTPUT_DIR/gtest/gtest-all.cc.\n       Then you can build your tests by adding OUTPUT_DIR to the include\n       search path and linking with OUTPUT_DIR/gtest/gtest-all.cc.  These\n       two files contain everything you need to use Google Test.  Hence\n       you can \"install\" Google Test by copying them to wherever you want.\n\n       GTEST_ROOT_DIR can be omitted and defaults to the parent\n       directory of the directory holding this script.\n\nEXAMPLES\n       ./fuse_gtest_files.py fused_gtest\n       ./fuse_gtest_files.py path/to/unpacked/gtest fused_gtest\n\nThis tool is experimental.  In particular, it assumes that there is no\nconditional inclusion of Google Test headers.  Please report any\nproblems to googletestframework@googlegroups.com.  You can read\nhttp://code.google.com/p/googletest/wiki/GoogleTestAdvancedGuide for\nmore information.\n\"\"\"",
        "\"\"\"Verifies that the given file exists; aborts on failure.\n\n  relative_path is the file path relative to the given directory.\n  \"\"\"",
        "\"\"\"Makes sure gtest_root points to a valid gtest root directory.\n\n  The function aborts the program on failure.\n  \"\"\"",
        "\"\"\"Verifies that the given output file path is valid.\n\n  relative_path is relative to the output_dir directory.\n  \"\"\"",
        "\"\"\"Makes sure output_dir points to a valid output directory.\n\n  The function aborts the program on failure.\n  \"\"\"",
        "\"\"\"Scans folder gtest_root to generate gtest/gtest.h in output_dir.\"\"\"",
        "\"\"\"Processes the given gtest header file.\"\"\"",
        "\"\"\"Scans folder gtest_root to generate gtest/gtest-all.cc in output_file.\"\"\"",
        "\"\"\"Processes the given gtest source file.\"\"\"",
        "\"\"\"Scans folder gtest_root to generate gtest/gtest-all.cc in output_dir.\"\"\"",
        "\"\"\"Fuses gtest.h and gtest-all.cc.\"\"\""
    ],
    "functions": [
        "VerifyFileExists",
        "ValidateGTestRootDir",
        "VerifyOutputFile",
        "ValidateOutputDir",
        "FuseGTestH",
        "ProcessFile",
        "FuseGTestAllCcToFile",
        "ProcessFile",
        "FuseGTestAllCc",
        "FuseGTest",
        "main"
    ],
    "classes": []
}