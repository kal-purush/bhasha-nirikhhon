{
    "identifiers": [
        "os",
        "os",
        "listdir",
        "os",
        "chdir",
        "os",
        "getcwd",
        "features_kmeans",
        "km",
        "pandas",
        "pd",
        "timeit",
        "numpy",
        "np",
        "pickle",
        "cv2",
        "xml",
        "etree",
        "ElementTree",
        "ET",
        "sklearn",
        "decomposition",
        "PCA",
        "sklearn",
        "cluster",
        "KMeans",
        "sklearn",
        "svm",
        "sklearn",
        "model_selection",
        "cross_val_score",
        "sklearn",
        "preprocessing",
        "normalize",
        "sklearn",
        "model_selection",
        "GridSearchCV",
        "sklearn",
        "model_selection",
        "train_test_split",
        "sklearn",
        "metrics",
        "accuracy_score",
        "pickle",
        "load",
        "open",
        "obj_total",
        "obj_total",
        "obj_total",
        "pickle",
        "load",
        "open",
        "pd",
        "DataFrame",
        "obj_desc_list",
        "pd",
        "DataFrame",
        "pca",
        "transform",
        "pca_obj_desc",
        "pickle",
        "load",
        "open",
        "pickle",
        "load",
        "open",
        "clusters",
        "np",
        "array",
        "np",
        "repeat",
        "dtype",
        "reshape",
        "np",
        "unique",
        "clusters",
        "return_counts",
        "j",
        "len",
        "code",
        "code",
        "j",
        "counts",
        "j",
        "freq",
        "test_dir",
        "test_ann_dir",
        "target_size",
        "specific_img",
        "os",
        "listdir",
        "test_dir",
        "os",
        "listdir",
        "test_ann_dir",
        "pd",
        "DataFrame",
        "index",
        "Classes",
        "pd",
        "DataFrame",
        "index",
        "Classes",
        "specific_img",
        "x",
        "x",
        "test_imgs",
        "x",
        "specific_img",
        "img_name",
        "test_imgs",
        "img_name",
        "img_num",
        "img_name",
        "img_name",
        "test_anns",
        "img_name",
        "cv2",
        "imread",
        "test_dir",
        "img_name",
        "cv2",
        "cvtColor",
        "img",
        "cv2",
        "COLOR_BGR2GRAY",
        "cv2",
        "xfeatures2d",
        "SIFT_create",
        "sift",
        "detect",
        "gray",
        "sift",
        "compute",
        "gray",
        "k_sift",
        "desc",
        "d_sift",
        "pd",
        "DataFrame",
        "pca",
        "transform",
        "d_sift",
        "obj_kmeans_total",
        "predict",
        "pca_desc",
        "iloc",
        "desc_freq",
        "clusters",
        "pd",
        "DataFrame",
        "label",
        "svm",
        "svms",
        "items",
        "svm",
        "predict",
        "cluster_freq_pivot",
        "preds",
        "loc",
        "pred",
        "pred_class",
        "join",
        "preds",
        "img_name",
        "ET",
        "parse",
        "test_ann_dir",
        "img_name",
        "tree",
        "getroot",
        "child",
        "root",
        "child",
        "tag",
        "child",
        "find",
        "text",
        "obj_name",
        "class_names",
        "class_names",
        "obj_name",
        "img_labels",
        "class_names",
        "pd",
        "DataFrame",
        "np",
        "repeat",
        "index",
        "Classes",
        "columns",
        "img_name",
        "class_name",
        "class_names",
        "one_hot",
        "loc",
        "true_class",
        "join",
        "one_hot",
        "pd",
        "DataFrame",
        "columns",
        "y",
        "pred_class",
        "index",
        "x",
        "pred_class",
        "columns",
        "true_class",
        "loc",
        "y",
        "x",
        "pred_class",
        "loc",
        "y",
        "x",
        "true_val",
        "pred_val",
        "tp",
        "temp_tp",
        "true_val",
        "pred_val",
        "fp",
        "temp_fp",
        "true_val",
        "pred_val",
        "fn",
        "temp_fn",
        "true_val",
        "pred_val",
        "tn",
        "temp_tn",
        "results",
        "loc",
        "temp_tp",
        "results",
        "loc",
        "temp_fp",
        "results",
        "loc",
        "temp_tn",
        "results",
        "loc",
        "temp_fn",
        "results",
        "loc",
        "temp_tp",
        "temp_tn",
        "temp_tp",
        "temp_fp",
        "temp_tn",
        "temp_fn",
        "temp_tp",
        "temp_fp",
        "results",
        "loc",
        "temp_tp",
        "temp_tp",
        "temp_fp",
        "temp_tp",
        "temp_fn",
        "results",
        "loc",
        "temp_tp",
        "temp_tp",
        "temp_fn",
        "x",
        "pred_class",
        "columns",
        "x",
        "y",
        "pred_class",
        "index",
        "y",
        "pred_class",
        "loc",
        "y",
        "x",
        "y",
        "pred_class",
        "index",
        "y",
        "true_class",
        "loc",
        "y",
        "x",
        "tp",
        "fp",
        "tn",
        "fn",
        "tp",
        "tn",
        "tp",
        "fp",
        "tn",
        "fn",
        "tp",
        "tp",
        "fp",
        "tp",
        "tp",
        "fn",
        "results",
        "loc",
        "tp",
        "results",
        "loc",
        "fp",
        "results",
        "loc",
        "tn",
        "results",
        "loc",
        "fn",
        "results",
        "loc",
        "tp",
        "tn",
        "tp",
        "fp",
        "tn",
        "fn",
        "results",
        "loc",
        "tp",
        "tp",
        "fp",
        "results",
        "loc",
        "tp",
        "tp",
        "fn",
        "results",
        "to_csv",
        "results_file",
        "pred_class",
        "true_class",
        "make_prediction",
        "test_dir",
        "test_ann_dir",
        "target_size",
        "specific_img"
    ],
    "literals": [
        "'D:/GD/MLDM/Computer_Vision_Project/cnn5/data/training'",
        "'D:/GD/MLDM/Computer_Vision_Project/Data/test_VOC2007/JPEGImages/'",
        "\"D:/GD/MLDM/Computer_Vision_Project/Data/test_VOC2007/Annotations2/\"",
        "'D:/GD/MLDM/Computer_Vision_Project/cnn5/results/cvp_bow_sigmoid_10_10_results.csv'",
        "'D:/GD/MLDM/Computer_Vision_Project/github2'",
        "'D:/GD/MLDM/Computer_Vision_Project/obj_total.sav'",
        "'rb'",
        "'D:/GD/MLDM/Computer_Vision_Project/obj_pca.sav'",
        "'rb'",
        "'D:/GD/MLDM/Computer_Vision_Project/obj_kmeans.sav'",
        "'rb'",
        "'D:/GD/MLDM/Computer_Vision_Project/svms_obj3.sav'",
        "'rb'",
        "'float64'",
        "'.xml'",
        "'descr: '",
        "'.jpg'",
        "'.xml'",
        "\"object\"",
        "\"name\"",
        "'tp'",
        "'fp'",
        "'tn'",
        "'fn'",
        "'acc'",
        "'prec'",
        "'rec'",
        "'tp'",
        "'fp'",
        "'tn'",
        "'fn'",
        "'acc'",
        "'prec'",
        "'rec'",
        "'#######################################'",
        "'Image: '",
        "'***************************************'",
        "'Predicted Labels:'",
        "': '",
        "'***************************************'",
        "'True Labels:'",
        "': '",
        "'***************************************'",
        "'True Positives: '",
        "'False Positives: '",
        "'True Negatives: '",
        "'False Negatives: '",
        "'Accuracy: '",
        "'Precision: '",
        "'Recall: '",
        "'#######################################'",
        "'Total'",
        "'tp'",
        "'Total'",
        "'fp'",
        "'Total'",
        "'tn'",
        "'Total'",
        "'fn'",
        "'Total'",
        "'acc'",
        "'Total'",
        "'prec'",
        "'Total'",
        "'rec'",
        "'D:/GD/MLDM/Computer_Vision_Project/cnn5/results/cvp_bow_sigmoid_10_10_results2.csv'",
        "'Starting prediction model'"
    ],
    "variables": [
        "Classes",
        "test_dir",
        "test_ann_dir",
        "results_file",
        "specific_img",
        "obj_total",
        "obj_desc_list",
        "obj_id",
        "obj_name",
        "pca",
        "pca_obj_desc",
        "pca_obj_desc",
        "obj_kmeans_total",
        "svms",
        "freq",
        "code",
        "counts",
        "freq",
        "test_imgs",
        "test_anns",
        "pred_class",
        "true_class",
        "test_imgs",
        "desc",
        "img_num",
        "img_labels",
        "img_name",
        "img_num",
        "img",
        "gray",
        "sift",
        "k_sift",
        "k_sift",
        "d_sift",
        "desc",
        "pca_desc",
        "clusters",
        "cluster_freq_pivot",
        "preds",
        "pred",
        "label",
        "img_name",
        "pred_class",
        "tree",
        "root",
        "class_names",
        "obj_name",
        "one_hot",
        "class_name",
        "img_name",
        "true_class",
        "results",
        "tp",
        "fp",
        "tn",
        "fn",
        "temp_tp",
        "temp_fp",
        "temp_tn",
        "temp_fn",
        "true_val",
        "pred_val",
        "y",
        "y",
        "y",
        "y",
        "y",
        "y",
        "y",
        "results_file",
        "target_size",
        "pred_class",
        "true_class"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "",
        "Set Params",
        "[] Create a list of specific images in the directory",
        "",
        "%%",
        "Set working directory",
        "os.path.dirname(os.path.abspath(__file__))",
        "%%",
        "Load assetts",
        "%%",
        "Get frequency of each descripter",
        "%%",
        "%%",
        "Get all test images",
        "Iterate and get prediction and correct class tables",
        "Ensure we have correct label values",
        "Load image",
        "img = Image.open(test_dir+img_name+'.jpg')",
        "Convert to grayscale",
        "load feature detection algorithms",
        "brisk=cv2.BRISK_create()",
        "Run feature detection algorithm",
        "k_brisk = brisk.detect(gray,None)",
        "Computer keypoints and descriptors",
        "k_brisk,d_brisk = brisk.compute(gray,k_brisk)",
        "Use pca to reduce dimensionality",
        "Predict using KMEANS to get bag of words for svm training objects",
        "Format to frequency of cluster for svm training feed",
        "obj_cluster_pivot = km.cluster_format(obj_clusters_total, obj_id,obj_name)",
        "Normalize",
        "cluster_freq_pivot = normalize(cluster_freq_pivot,axis=1)",
        "Predict using SVM",
        "Continually combine",
        "Get correct labels",
        "Create one hot encoding",
        "Compare predictions vs true labels",
        "Print prediction vs actual",
        "Accuracy, precision, recall",
        "Run Prediction",
        "fixed size for InceptionV3 architecture",
        "check = make_prediction(test_dir,test_ann_dir,target_size,specific_img)"
    ],
    "docstrings": [
        "\"\"\"\nUsing kmeans to create a bag of visual words and SVM to predict\nobject recognition in images.\n\nBy: Austin Schwinn, Jérémie Blanchard, and Oussama Bouldjedri.\n\nMLDM Master's Year 2\nFall Semester 2017\n\"\"\""
    ],
    "functions": [
        "desc_freq",
        "make_prediction"
    ],
    "classes": []
}