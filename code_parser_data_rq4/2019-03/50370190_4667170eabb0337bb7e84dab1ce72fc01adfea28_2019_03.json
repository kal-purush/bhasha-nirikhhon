{
    "identifiers": [
        "org",
        "locationtech",
        "jts",
        "noding",
        "snapround",
        "java",
        "util",
        "java",
        "util",
        "org",
        "locationtech",
        "jts",
        "geom",
        "Geometry",
        "org",
        "locationtech",
        "jts",
        "geom",
        "PrecisionModel",
        "org",
        "locationtech",
        "jts",
        "io",
        "ParseException",
        "org",
        "locationtech",
        "jts",
        "io",
        "WKTReader",
        "org",
        "locationtech",
        "jts",
        "noding",
        "NodedSegmentString",
        "org",
        "locationtech",
        "jts",
        "noding",
        "SegmentString",
        "junit",
        "framework",
        "TestCase",
        "junit",
        "textui",
        "TestRunner",
        "rdr",
        "args",
        "TestRunner",
        "run",
        "name",
        "name",
        "wkt",
        "pm",
        "checkNodedStrings",
        "wkt",
        "pm",
        "wkt",
        "pm",
        "checkNodedStrings",
        "wkt",
        "pm",
        "wkt",
        "pm",
        "g",
        "read",
        "wkt",
        "strings",
        "strings",
        "add",
        "g",
        "getCoordinates",
        "pm",
        "computeNodes",
        "strings",
        "SuppressWarnings",
        "noded",
        "NodedSegmentString",
        "getNodedSubstrings",
        "strings",
        "s",
        "noded",
        "assertTrue",
        "s",
        "size",
        "assertTrue",
        "isCollapsed",
        "s",
        "s",
        "s",
        "size",
        "isEndsEqual",
        "s",
        "getCoordinate",
        "equals2D",
        "s",
        "getCoordinate",
        "isMiddleDifferent",
        "s",
        "getCoordinate",
        "equals2D",
        "s",
        "getCoordinate",
        "isCollapsed",
        "isEndsEqual",
        "isMiddleDifferent",
        "isCollapsed"
    ],
    "literals": [
        "\"LINESTRING ( 55121.54481117887 42694.49730855581, 55121.54481117887 42694.4973085558, 55121.458748617406 42694.419143944244, 55121.54481117887 42694.49730855581 )\"",
        "\"LINESTRING ( -1677607.6366504875 -588231.47100446, -1674050.1010869485 -587435.2186255794, -1670493.6527468169 -586636.7948791061, -1424286.3681743187 -525586.1397894835, -1670493.6527468169 -586636.7948791061, -1674050.1010869485 -587435.2186255795, -1677607.6366504875 -588231.47100446)\"",
        "\"unchecked\"",
        "\"Found a 1-point segmentstring\"",
        "\"Found a collapsed edge\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Copyright (c) 2016 Vivid Solutions.\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * and Eclipse Distribution License v. 1.0 which accompanies this distribution.\n * The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html\n * and the Eclipse Distribution License is available at\n *\n * http://www.eclipse.org/org/documents/edl-v10.php.",
        "* Test for correctly created Noded Segment Strings\n * under an extreme usage of SnapRounding.\n * This test reveals a bug in SegmentNodeList.createSplitEdge()\n * which can create 1-point Segment Strings\n * if the input is incorrectly noded due to robustness issues.\n * It also reveals a limitation in SegmentNode sorting which\n * can cause nodes to sort wrongly if their coordinates are very close \n * and they are relatively far off the line segment containing them.\n * This is actually outside of the operating regime of the SegmentNode comparison,\n * but in there is a simple fix which handles some cases like these.\n * \n * See https://github.com/locationtech/jts/pull/395\n *\n * @version 1.17",
        "* Test if the segmentString is a collapsed edge \n   * of the form ABA.\n   * These should not be returned by noding. \n   *\n   * @param s a segmentString\n   * @return true if the segmentString is collapsed"
    ],
    "functions": [
        "main",
        "SegmentStringNodingTest",
        "testThinTriangle",
        "testSegmentLength1Failure",
        "checkNodedStrings",
        "isCollapsed"
    ],
    "classes": [
        "SegmentStringNodingTest"
    ]
}