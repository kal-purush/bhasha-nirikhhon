{
    "identifiers": [
        "sys",
        "time",
        "os",
        "json",
        "codecs",
        "datetime",
        "datetime",
        "utils",
        "helper_utils",
        "readable_time",
        "utils",
        "file_utils",
        "load_config",
        "setup_pid",
        "std_flush",
        "time",
        "time",
        "load_config",
        "keyword",
        "config",
        "config",
        "keyword",
        "config",
        "keyword",
        "open",
        "source_list",
        "sources",
        "line",
        "sources",
        "json",
        "loads",
        "line",
        "lines_json",
        "lines_json",
        "source",
        "source_data",
        "source",
        "source_data",
        "source",
        "datetime",
        "now",
        "__import__",
        "source_data",
        "source",
        "fromlist",
        "source_data",
        "source",
        "getattr",
        "feed_reader",
        "source_data",
        "source",
        "feed_reader",
        "config",
        "feed_read",
        "get",
        "source_data",
        "source",
        "source_data",
        "source",
        "datetime",
        "utcnow",
        "os",
        "path",
        "join",
        "keyword",
        "date",
        "year",
        "date",
        "month",
        "date",
        "day",
        "date",
        "hour",
        "os",
        "path",
        "join",
        "dir_",
        "date",
        "minute",
        "os",
        "makedirs",
        "dir_",
        "open",
        "path",
        "join",
        "json",
        "dumps",
        "data",
        "item",
        "item",
        "data",
        "output",
        "write",
        "data_write",
        "output",
        "close"
    ],
    "literals": [
        "'__main__'",
        "'../config.json'",
        "'keyws'",
        "'keyws'",
        "'news_valid'",
        "'keyws'",
        "'news_source'",
        "'../'",
        "'r'",
        "'name'",
        "\"Retrieving: \"",
        "\"       using library: \"",
        "'library'",
        "\" on \"",
        "'news_downloaders.'",
        "'library'",
        "'library'",
        "'_downloader'",
        "'library'",
        "'_downloader'",
        "'url'",
        "'parameters'",
        "'%s_%s_%s'",
        "'../downloads/news'",
        "'%02d'",
        "'%02d'",
        "'%02d'",
        "'%02d.json'",
        "'a'",
        "'\\n'"
    ],
    "variables": [
        "startTime",
        "config",
        "source_data",
        "source_list",
        "lines_json",
        "source_data",
        "write_data",
        "feed_reader",
        "feed_reader",
        "feed_read",
        "data",
        "date",
        "dir_",
        "path",
        "output",
        "data_write"
    ],
    "comments": [
        "begin disaster loop:",
        "extract source_file for current diasters",
        "extract sources from source list",
        "now we have a list of sources",
        "for eaach source, we'll import the neccesary library and use the getFeeds to get the titles...?",
        "source is the name field",
        "if source_data[source]['library'] == \"landslide\":",
        "so this does 'from news_downloaders.google import google_downloader <-- google_downloader is the class'",
        "here we clear save the data:",
        "no need for time check I think",
        "create directory",
        "create directory if it doesn't exist yet",
        "bugfix got rid of empty files yay!"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}