{
    "identifiers": [
        "pymc3",
        "pm",
        "theano",
        "tt",
        "theano",
        "sandbox",
        "rng_mrg",
        "MRG_RandomStreams",
        "matplotlib",
        "pyplot",
        "plt",
        "numpy",
        "np",
        "os",
        "getcwd",
        "tt",
        "config",
        "th_rng",
        "n_samples",
        "n_choices",
        "np",
        "random",
        "uniform",
        "n_samples",
        "np",
        "random",
        "uniform",
        "n_samples",
        "np",
        "random",
        "uniform",
        "n_samples",
        "np",
        "random",
        "choice",
        "n_samples",
        "p",
        "np",
        "random",
        "choice",
        "n_samples",
        "p",
        "np",
        "random",
        "uniform",
        "n_samples",
        "np",
        "ones",
        "n_samples",
        "tt",
        "tensor",
        "_shared",
        "intercept",
        "np",
        "column_stack",
        "occupancy",
        "T",
        "temp_out",
        "T",
        "tmp_delta",
        "T",
        "pre_tmp_delta",
        "T",
        "oaf_delta",
        "T",
        "intercept",
        "T",
        "np",
        "linspace",
        "X_temp",
        "shape",
        "pm",
        "math",
        "dot",
        "X_temp",
        "betas_temp",
        "np",
        "random",
        "randn",
        "n_samples",
        "np",
        "column_stack",
        "occupancy",
        "T",
        "rh_out",
        "T",
        "tmp_delta",
        "T",
        "pre_tmp_delta",
        "T",
        "oaf_delta",
        "T",
        "intercept",
        "T",
        "np",
        "linspace",
        "X_hum",
        "shape",
        "pm",
        "math",
        "dot",
        "X_hum",
        "betas_hum",
        "np",
        "random",
        "randn",
        "n_samples",
        "np",
        "column_stack",
        "occupancy",
        "T",
        "oaf_delta",
        "T",
        "intercept",
        "T",
        "np",
        "linspace",
        "X_co2",
        "shape",
        "pm",
        "math",
        "dot",
        "X_co2",
        "betas_co2",
        "np",
        "random",
        "randn",
        "n_samples",
        "np",
        "random",
        "uniform",
        "n_samples",
        "np",
        "random",
        "uniform",
        "n_samples",
        "np",
        "column_stack",
        "occupancy",
        "T",
        "shade_out",
        "T",
        "lt_delta",
        "T",
        "intercept",
        "T",
        "np",
        "linspace",
        "X_lt",
        "shape",
        "pm",
        "math",
        "dot",
        "X_lt",
        "betas_lt",
        "np",
        "random",
        "randn",
        "n_samples",
        "np",
        "random",
        "uniform",
        "n_samples",
        "tt",
        "tensor",
        "_shared",
        "plug_delta",
        "np",
        "column_stack",
        "occupancy",
        "T",
        "oaf_delta",
        "T",
        "lt_delta",
        "T",
        "plug_delta",
        "T",
        "tmp_delta",
        "T",
        "pre_tmp_delta",
        "T",
        "np",
        "column_stack",
        "temp_out",
        "T",
        "intercept",
        "T",
        "np",
        "linspace",
        "X_dmd_nc",
        "shape",
        "pm",
        "math",
        "dmd_sp1",
        "temp_out",
        "pm",
        "math",
        "dot",
        "X_dmd_c",
        "b_1",
        "pm",
        "math",
        "dot",
        "X_dmd_c",
        "b_2",
        "pm",
        "math",
        "dmd_sp2",
        "temp_out",
        "y_dmd_c",
        "pm",
        "math",
        "dot",
        "X_dmd_c",
        "b_3",
        "pm",
        "math",
        "dot",
        "X_dmd_nc",
        "betas_dmd_nc",
        "np",
        "random",
        "randn",
        "n_samples",
        "tt",
        "tensor",
        "stack",
        "Y_temp",
        "Y_hum",
        "Y_co2",
        "Y_lt",
        "plug_delta",
        "Y_dmd",
        "intercept",
        "T",
        "tt",
        "tensor",
        "_shared",
        "np",
        "linspace",
        "x_choice",
        "shape",
        "eval",
        "tt",
        "tensor",
        "_shared",
        "np",
        "linspace",
        "x_choice",
        "shape",
        "eval",
        "tt",
        "tensor",
        "_shared",
        "np",
        "linspace",
        "x_choice",
        "shape",
        "eval",
        "tt",
        "tensor",
        "stack",
        "betas_choice_1",
        "betas_choice_2",
        "betas_choice_3",
        "T",
        "pm",
        "math",
        "dot",
        "x_choice",
        "betas_choice",
        "th_rng",
        "normal",
        "n_samples",
        "n_choices",
        "tt",
        "tensor",
        "nnet",
        "softmax",
        "logit",
        "th_rng",
        "multinomial",
        "n",
        "pvals",
        "choice_probs",
        "eval",
        "np",
        "zeros",
        "len",
        "y_choice",
        "ind",
        "r",
        "y_choice",
        "Y_choice",
        "np",
        "nonzero",
        "r",
        "base_dir",
        "np",
        "random",
        "seed",
        "MRG_RandomStreams",
        "th_rng",
        "seed",
        "ModelIO",
        "th_rng",
        "n_samples",
        "n_choices",
        "pm",
        "Model",
        "flex_bdn",
        "pm",
        "Normal",
        "shape",
        "io",
        "X_temp",
        "shape",
        "pm",
        "Uniform",
        "pm",
        "math",
        "dot",
        "io",
        "X_temp",
        "ta_params",
        "pm",
        "Normal",
        "mu",
        "ta_est",
        "sd",
        "ta_sd",
        "observed",
        "io",
        "Y_temp",
        "pm",
        "Normal",
        "shape",
        "io",
        "X_hum",
        "shape",
        "pm",
        "Uniform",
        "pm",
        "math",
        "dot",
        "io",
        "X_hum",
        "rh_params",
        "pm",
        "Normal",
        "mu",
        "rh_est",
        "sd",
        "rh_sd",
        "observed",
        "io",
        "Y_hum",
        "pm",
        "Normal",
        "shape",
        "io",
        "X_co2",
        "shape",
        "pm",
        "Uniform",
        "pm",
        "math",
        "dot",
        "io",
        "X_co2",
        "co2_params",
        "pm",
        "Normal",
        "mu",
        "co2_est",
        "sd",
        "co2_sd",
        "observed",
        "io",
        "Y_co2",
        "pm",
        "Normal",
        "shape",
        "io",
        "X_lt",
        "shape",
        "pm",
        "Uniform",
        "pm",
        "math",
        "dot",
        "io",
        "X_lt",
        "lt_params",
        "pm",
        "Normal",
        "mu",
        "lt_est",
        "sd",
        "lt_sd",
        "observed",
        "io",
        "Y_lt",
        "pm",
        "DiscreteUniform",
        "io",
        "temp_out",
        "min",
        "io",
        "temp_out",
        "max",
        "pm",
        "DiscreteUniform",
        "dmd_sp1",
        "io",
        "temp_out",
        "max",
        "pm",
        "Normal",
        "shape",
        "io",
        "X_dmd_c",
        "shape",
        "pm",
        "Normal",
        "shape",
        "io",
        "X_dmd_nc",
        "shape",
        "pm",
        "Uniform",
        "pm",
        "math",
        "dmd_sp1",
        "io",
        "temp_out",
        "pm",
        "math",
        "dot",
        "io",
        "X_dmd_c",
        "dmd_params_c",
        "pm",
        "math",
        "dot",
        "io",
        "X_dmd_c",
        "dmd_params_c",
        "pm",
        "math",
        "dmd_sp2",
        "io",
        "temp_out",
        "dmd_est_c",
        "pm",
        "math",
        "dot",
        "io",
        "X_dmd_c",
        "dmd_params_c",
        "pm",
        "math",
        "dot",
        "io",
        "X_dmd_nc",
        "dmd_params_nc",
        "pm",
        "Normal",
        "mu",
        "dmd_est",
        "sd",
        "dmd_sd",
        "observed",
        "io",
        "Y_dmd",
        "tt",
        "tensor",
        "stack",
        "ta",
        "rh",
        "co2",
        "lt",
        "io",
        "plug_delta",
        "dmd",
        "io",
        "intercept",
        "T",
        "pm",
        "Normal",
        "mu",
        "sd",
        "shape",
        "x_choice_bn",
        "shape",
        "eval",
        "n_choices",
        "pm",
        "math",
        "dot",
        "x_choice_bn",
        "choice_params",
        "tt",
        "tensor",
        "nnet",
        "softmax",
        "logit_bn",
        "pm",
        "Deterministic",
        "choice_probs_bn",
        "pm",
        "Categorical",
        "p",
        "p",
        "observed",
        "io",
        "Y_choice",
        "pm",
        "sample",
        "pm",
        "traceplot",
        "trace",
        "plt",
        "show",
        "getcwd",
        "main",
        "base_dir"
    ],
    "literals": [
        "\"ignore\"",
        "'ta_params'",
        "'ta_sd'",
        "'ta'",
        "'rh_params'",
        "'rh_sd'",
        "'rh'",
        "'co2_params'",
        "'co2_sd'",
        "'co2'",
        "'lt_params'",
        "'lt_sd'",
        "'lt'",
        "'dmd_sp1'",
        "'dmd_sp2'",
        "'dmd_params_c'",
        "'dmd_params_nc'",
        "'dmd_sd'",
        "'dmd'",
        "'choice_params'",
        "'p'",
        "'choice'",
        "'__main__'"
    ],
    "variables": [
        "compute_test_value",
        "occupancy",
        "temp_out",
        "rh_out",
        "tmp_delta",
        "pre_tmp_delta",
        "oaf_delta",
        "intercept",
        "intercept",
        "X_temp",
        "betas_temp",
        "Y_temp",
        "X_hum",
        "betas_hum",
        "Y_hum",
        "X_co2",
        "betas_co2",
        "Y_co2",
        "shade_out",
        "lt_delta",
        "X_lt",
        "betas_lt",
        "Y_lt",
        "plug_delta",
        "plug_delta",
        "X_dmd_nc",
        "X_dmd_c",
        "betas_dmd_nc",
        "dmd_sp1",
        "dmd_sp2",
        "b_1",
        "b_2",
        "b_3",
        "y_dmd_c",
        "Y_dmd",
        "x_choice",
        "betas_choice_1",
        "betas_choice_2",
        "betas_choice_3",
        "betas_choice",
        "logit",
        "choice_probs",
        "y_choice",
        "Y_choice",
        "ind",
        "th_rng",
        "n_samples",
        "n_choices",
        "io",
        "ta_params",
        "ta_sd",
        "ta_est",
        "ta",
        "rh_params",
        "rh_sd",
        "rh_est",
        "rh",
        "co2_params",
        "co2_sd",
        "co2_est",
        "co2",
        "lt_params",
        "lt_sd",
        "lt_est",
        "lt",
        "dmd_sp1",
        "dmd_sp2",
        "dmd_params_c",
        "dmd_params_nc",
        "dmd_sd",
        "dmd_est_c",
        "dmd_est",
        "dmd",
        "x_choice_bn",
        "choice_params",
        "logit_bn",
        "choice_probs_bn",
        "p",
        "choice",
        "trace",
        "base_dir"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "Whole building occupancy fraction",
        "Outdoor air temperature",
        "Outdoor relative humidity",
        "Cooling delta T",
        "Pre-cooling delta T",
        "OA ventilation fraction reduction",
        "Set a vector of ones for intercept estimation",
        "Convert to theano tensor",
        "Temperature model X variables",
        "Temperature model betas",
        "Temperature model Y variable",
        "Humidity model X variables",
        "Humidity model betas",
        "Humidity model Y variable",
        "CO2 model X variables",
        "CO2 model betas",
        "CO2 model Y variable",
        "Exterior cloud cover fraction",
        "Lighting fraction reduction",
        "Lighting model X variables",
        "Lighting model betas",
        "Lighting model Y variable",
        "Plug load power fraction reduction",
        "Convert to theano tensor for use in pm.Model()",
        "Facility energy use model X variables (no change point behavior)",
        "Facility energy use model X variables (change point behavior)",
        "Facility energy use model betas (no change point behavior)",
        "Facility energy use model betas (change point behavior)",
        "Set switch points",
        "Set betas for each region between the switch points",
        "Facility energy use model Y variable",
        "Y values before switch point one, between switch point one and two",
        "Y values after switch point two",
        "Control choice model X variables",
        "Control choice model betas (one set for each control alternative,",
        "here testing with three alternatives)",
        "Softmax transformation of linear estimator into multinomial choice",
        "probabilities",
        "Control choice model Y variable - theano yields a vector where the",
        "elements are themselves vectors of length three, with ones in",
        "the chosen index elements (e.g., [[0, 1, 0], [0, 0, 1], ...])",
        "Reformat choice tensor such that it is a vector with the choice",
        "index (0, 1, 2) in each of the elements (e.g., [1, 2, ...])",
        "Set numpy and theano RNG seeds for consistency",
        "Set number of observations to use for parameter updating (for now,",
        "assume model parameters are updated daily given 15 minute interval data",
        "from all 24 hours)",
        "Set number of control choices",
        "Initialize test data",
        "Estimate Bayesian network model",
        "Set parameter priors (betas, error)",
        "Likelihood of temperature estimator",
        "Likelihood of temperature",
        "Set parameter priors (betas, error)",
        "Likelihood of humidity estimator",
        "Likelihood of humidity",
        "Set parameter priors (betas, error)",
        "Likelihood of CO2 estimator",
        "Likelihood of CO2",
        "Set parameter priors (betas, error)",
        "Likelihood of lighting estimator",
        "Likelihood of lighting",
        "Set parameter priors (switch points, betas, error)",
        "Switch points",
        "Betas",
        "Error",
        "Likelihood of demand estimator",
        "Likelihood of demand",
        "X variables are the outputs of the above sub-models",
        "Set parameter priors (betas)",
        "Softmax transformation of linear estimator into multinomial choice",
        "probabilities",
        "Set choice probabilities as deterministic PyMC3 variable type",
        "Likelihood of choice",
        "Draw posterior samples",
        "# Sample from the posterior predictive distribution",
        "ppc = pm.sample_posterior_predictive(trace, samples=1, model=flex_bdn)",
        "print(ppc)",
        "Plot parameter traces for diagnostic purposes"
    ],
    "docstrings": [
        "\"\"\"Dummy observations to use in testing the Bayesian network models.\n\n    Attributes:\n        temp_out (numpy ndarray): Test outdoor temperature data.\n        intercept (theano tensor): Vector of ones for intercept terms.\n        X_temp (numpy ndarray): Temperature model input observations.\n        Y_temp (theano tensor): Temperature model output observations.\n        X_hum (numpy ndarray): Humidity model input observations.\n        Y_hum (theano tensor): Humidity model output observations.\n        X_co2 (numpy ndarray): CO2 model input observations.\n        Y_co2 (theano tensor): CO2 model output observations.\n        X_lt (numpy ndarray): Illuminance model input observations.\n        Y_lt (theano tensor): Illuminance model output observations.\n        plug_delta (theano tensor): Plug load power fraction observations.\n        X_dmd_nc (numpy ndarray): Energy model inputs, no change point.\n        X_dmd_c (numpy ndarray): Energy model input, change point.\n        Y_dmd (theano tensor): Energy model output observations.\n        Y_choice (numpy ndarray): Choice model output observations.\n    \"\"\"",
        "\"\"\"Initialize class attributes.\"\"\"",
        "\"\"\"Implement Bayesian network and plot resultant parameter estimates.\"\"\"",
        "*** Temperature sub-model ***",
        "*** RH sub-model ***",
        "*** CO2 sub-model ***",
        "*** Lighting sub-model ***",
        "*** Demand sub-model ***",
        "*** Choice sub-model ***"
    ],
    "functions": [
        "main"
    ],
    "classes": [
        "ModelIO"
    ]
}