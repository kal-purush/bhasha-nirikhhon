{
    "identifiers": [
        "Octokit",
        "Bottleneck",
        "NextFunction",
        "Request",
        "Response",
        "nock",
        "request",
        "Application",
        "createProbot",
        "Probot",
        "GitHubAPI",
        "path",
        "helper",
        "describe",
        "beforeEach",
        "probot",
        "createProbot",
        "require",
        "it",
        "createProbot",
        "createProbot",
        "describe",
        "NodeJS",
        "beforeAll",
        "env",
        "process",
        "process",
        "process",
        "path",
        "__dirname",
        "process",
        "process",
        "afterAll",
        "process",
        "env",
        "it",
        "process",
        "probot",
        "Probot",
        "app",
        "initialized",
        "expect",
        "probot",
        "expect",
        "initialized",
        "probot",
        "it",
        "probot",
        "Probot",
        "expect",
        "probot",
        "probot",
        "it",
        "process",
        "probot",
        "Probot",
        "app",
        "initialized",
        "expect",
        "probot",
        "expect",
        "initialized",
        "probot",
        "describe",
        "it",
        "probot",
        "app",
        "jest",
        "probot",
        "expect",
        "app",
        "it",
        "probot",
        "jest",
        "probot",
        "probot",
        "e",
        "expect",
        "probot",
        "jest",
        "it",
        "probot",
        "jest",
        "probot",
        "probot",
        "e",
        "expect",
        "probot",
        "jest",
        "it",
        "probot",
        "jest",
        "probot",
        "probot",
        "e",
        "expect",
        "probot",
        "jest",
        "it",
        "probot",
        "jest",
        "probot",
        "probot",
        "e",
        "expect",
        "probot",
        "jest",
        "it",
        "probot",
        "jest",
        "probot",
        "probot",
        "e",
        "expect",
        "probot",
        "jest",
        "describe",
        "it",
        "probot",
        "app",
        "app",
        "route",
        "req",
        "res",
        "res",
        "request",
        "probot",
        "it",
        "probot",
        "app",
        "app",
        "route",
        "req",
        "res",
        "res",
        "request",
        "probot",
        "it",
        "probot",
        "app",
        "app",
        "route",
        "req",
        "res",
        "res",
        "request",
        "probot",
        "it",
        "name",
        "probot",
        "app",
        "app",
        "name",
        "route",
        "req",
        "res",
        "next",
        "res",
        "name",
        "next",
        "route",
        "req",
        "res",
        "res",
        "name",
        "request",
        "probot",
        "request",
        "probot",
        "it",
        "probot",
        "createProbot",
        "probot",
        "err",
        "req",
        "res",
        "next",
        "probot",
        "app",
        "app",
        "route",
        "req",
        "res",
        "res",
        "route",
        "req",
        "res",
        "res",
        "request",
        "probot",
        "request",
        "probot",
        "it",
        "probot",
        "err",
        "req",
        "res",
        "next",
        "request",
        "probot",
        "it",
        "probot",
        "request",
        "probot",
        "it",
        "probot",
        "request",
        "probot",
        "describe",
        "it",
        "jest",
        "probot",
        "appl",
        "appl",
        "spy",
        "app",
        "jest",
        "probot",
        "expect",
        "spy",
        "describe",
        "beforeEach",
        "process",
        "nock",
        "app",
        "helper",
        "afterEach",
        "process",
        "it",
        "jest",
        "appFn",
        "appl",
        "appl",
        "github",
        "spy",
        "res",
        "appFn",
        "app",
        "app",
        "expect",
        "spy",
        "it",
        "probot",
        "createProbot",
        "expect",
        "probot",
        "it",
        "process",
        "app",
        "e",
        "expect",
        "e",
        "createProbot",
        "e",
        "expect",
        "e",
        "describe",
        "beforeEach",
        "process",
        "afterEach",
        "process",
        "it",
        "probot",
        "createProbot",
        "expect",
        "probot",
        "Bottleneck",
        "expect",
        "probot",
        "Bottleneck",
        "describe",
        "it",
        "probot",
        "createProbot",
        "expect",
        "probot",
        "Bottleneck",
        "expect",
        "probot",
        "Bottleneck",
        "describe",
        "beforeEach",
        "Octokit",
        "octokit",
        "key",
        "octokit",
        "probot",
        "createProbot",
        "MyOctokit",
        "it",
        "probot",
        "key",
        "app",
        "expect",
        "githubApi"
    ],
    "literals": [
        "'@octokit/rest'",
        "'bottleneck'",
        "'express'",
        "'nock'",
        "'supertest'",
        "'../src'",
        "'../src/github'",
        "'path'",
        "'./apps/helper'",
        "'Probot'",
        "string",
        "string",
        "'faketoken'",
        "'0'",
        "'push'",
        "'./fixtures/webhook/push'",
        "'constructor'",
        "'faketoken'",
        "'xxxx'",
        "'run'",
        "'1'",
        "'test-private-key.pem'",
        "'https://smee.io/EfHXC9BFfGAxbM6J'",
        "'true'",
        "'runs with a function as argument'",
        "'3003'",
        "'runs with an array of strings'",
        "'run'",
        "'file.js'",
        "'runs without config and loads the setup app'",
        "'webhook delivery'",
        "'forwards webhooks to the app'",
        "'responds with the correct error if webhook secret does not match'",
        "'push'",
        "'X-Hub-Signature does not match blob signature'",
        "'responds with the correct error if webhook secret is not found'",
        "'push'",
        "'No X-Hub-Signature found on request'",
        "'responds with the correct error if webhook secret is wrong'",
        "'push'",
        "'webhooks:receiver ignored: POST / due to missing headers: x-hub-signature'",
        "'responds with the correct error if the PEM file is missing'",
        "'*'",
        "'error:0906D06C:PEM routines:PEM_read_bio:no start line'",
        "'responds with the correct error if the jwt could not be decoded'",
        "'*'",
        "'{\"message\":\"A JSON web token could not be decoded\",\"documentation_url\":\"https://developer.github.com/v3\"}'",
        "'server'",
        "'prefixes paths with route name'",
        "'/my-app'",
        "'/foo'",
        "'foo'",
        "'/my-app/foo'",
        "'foo'",
        "'allows routes with no path'",
        "'/foo'",
        "'foo'",
        "'/foo'",
        "'foo'",
        "'allows you to overwrite the root path'",
        "'/'",
        "'foo'",
        "'/'",
        "'foo'",
        "'isolates apps from affecting eachother'",
        "'foo'",
        "'bar'",
        "'/'",
        "'X-Test'",
        "'/hello'",
        "'/foo/hello'",
        "'foo'",
        "'X-Test'",
        "'foo'",
        "'/bar/hello'",
        "'bar'",
        "'X-Test'",
        "'bar'",
        "'allows users to configure webhook paths'",
        "'/webhook'",
        "'faketoken'",
        "'/webhook'",
        "'get-webhook'",
        "'/webhook'",
        "'post-webhook'",
        "'/webhook'",
        "'get-webhook'",
        "'/webhook'",
        "'defaults webhook path to `/`'",
        "'/'",
        "'responds with 500 on error'",
        "'/boom'",
        "'boom'",
        "'/boom'",
        "'responds with 500 on async error'",
        "'/boom'",
        "'boom'",
        "'/boom'",
        "'receive'",
        "'forwards events to each app'",
        "'push'",
        "'ghe support'",
        "'notreallygithub.com'",
        "'https://notreallygithub.com/api/v3'",
        "'Content-Type'",
        "'application/json'",
        "'/app/installations'",
        "'I work!'",
        "'/app/installations/5/access_tokens'",
        "'github_token'",
        "'requests from the correct API URL'",
        "'I work!'",
        "'passes GHE host to the app'",
        "'-----BEGIN RSA PRIVATE KEY-----\\n'",
        "'MIIBOQIBAAJBAIILhiN9IFpaE0pUXsesuuoaj6eeDiAqCiE49WB1tMB8ZMhC37kY\\n'",
        "'Fl52NUYbUxb7JEf6pH5H9vqw1Wp69u78XeUCAwEAAQJAb88urnaXiXdmnIK71tuo\\n'",
        "'/TyHBKt9I6Rhfzz0o9Gv7coL7a537FVDvV5UCARXHJMF41tKwj+zlt9EEUw7a1HY\\n'",
        "'wQIhAL4F/VHWSPHeTgXYf4EaX2OlpSOk/n7lsFtL/6bWRzRVAiEArzJs2vopJitv\\n'",
        "'A1yBjz3q2nX+zthk+GLXrJQkYOnIk1ECIHfeFV8TWm5gej1LxZquBTA5pINoqDVq\\n'",
        "'NKZSuZEHqGEFAiB6EDrxkovq8SYGhIQsJeqkTMO8n94xhMRZlFmIQDokEQIgAq5U\\n'",
        "'r1UQNnUExRh7ZT0kFbMfO9jKYZVlQdCL9Dn93vo=\\n'",
        "'-----END RSA PRIVATE KEY-----'",
        "'github_token'",
        "'throws if the GHE host includes a protocol'",
        "'https://notreallygithub.com'",
        "'xxxx'",
        "'process.env.REDIS_URL'",
        "'test'",
        "'sets throttleOptions'",
        "'/webhook'",
        "'faketoken'",
        "'redis configuration object'",
        "'sets throttleOptions'",
        "'test'",
        "'/webhook'",
        "'faketoken'",
        "'custom Octokit constructor'",
        "string",
        "'bar'",
        "'faketoken'",
        "'is propagated to GithubAPI'",
        "string",
        "'bar'"
    ],
    "variables": [
        "probot",
        "env",
        "initialized",
        "initialized",
        "app",
        "route",
        "route",
        "route",
        "route",
        "route",
        "spy",
        "app",
        "app",
        "spy",
        "appFn",
        "github",
        "res",
        "redisConfig",
        "MyOctokit",
        "app",
        "githubApi"
    ],
    "comments": [
        "tslint:disable:no-empty",
        "probot with token. Should not throw",
        "probot with id/cert",
        "Error handler to avoid printing logs",
        "tslint:disable-next-line handle-callback-err",
        "GET requests should succeed",
        "POST requests should fail b/c webhook path has precedence",
        "Error handler to avoid printing logs",
        "tslint:disable-next-line handle-callback-err",
        "POST requests to `/` should 400 b/c webhook signature will fail",
        "Some valid RSA key to be able to sign the initial token",
        "tslint:disable-next-line:object-literal-sort-keys"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}