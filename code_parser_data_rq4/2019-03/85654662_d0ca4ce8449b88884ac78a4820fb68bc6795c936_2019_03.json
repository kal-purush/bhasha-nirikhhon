{
    "identifiers": [
        "mpi4py",
        "MPI",
        "logging",
        "os",
        "path",
        "abspath",
        "logging",
        "FileHandler",
        "filename",
        "mode",
        "MPI",
        "MODE_WRONLY",
        "MPI",
        "MODE_CREATE",
        "MPI",
        "MODE_APPEND",
        "encoding",
        "delay",
        "comm",
        "MPI",
        "COMM_WORLD",
        "abspath",
        "filename",
        "mode",
        "encoding",
        "comm",
        "delay",
        "logging",
        "Handler",
        "logging",
        "StreamHandler",
        "_open",
        "MPI",
        "File",
        "Open",
        "comm",
        "baseFilename",
        "mode",
        "stream",
        "Set_atomicity",
        "stream",
        "record",
        "format",
        "record",
        "stream",
        "stream",
        "Write_shared",
        "msg",
        "terminator",
        "encode",
        "encoding",
        "handleError",
        "record",
        "stream",
        "stream",
        "Sync",
        "stream",
        "Close",
        "MPI",
        "COMM_WORLD",
        "logging",
        "getLogger",
        "comm",
        "rank",
        "logger",
        "setLevel",
        "logging",
        "DEBUG",
        "MPIFileHandler",
        "logging",
        "Formatter",
        "mh",
        "setFormatter",
        "formatter",
        "logger",
        "addHandler",
        "mh",
        "logger",
        "debug",
        "logger",
        "info",
        "logger",
        "warning",
        "logger",
        "error",
        "logger",
        "critical"
    ],
    "literals": [
        "\"utf-8\"",
        "\"__main__\"",
        "\"rank[%i]\"",
        "\"logfile.log\"",
        "\"%(asctime)s:%(name)s:%(levelname)s:%(message)s\"",
        "\"debug message\"",
        "\"info message\"",
        "\"warn message\"",
        "\"error message\"",
        "\"critical message\""
    ],
    "variables": [
        "baseFilename",
        "mode",
        "encoding",
        "comm",
        "stream",
        "stream",
        "msg",
        "stream",
        "stream",
        "comm",
        "logger",
        "mh",
        "formatter"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "%% mpi4py logging handler",
        "We don't open the stream, but we still need to call the",
        "Handler constructor to set level, formatter, lock etc.",
        "self.flush()",
        "%% example code",
        "'application' code"
    ],
    "docstrings": [
        "\"\"\"\n[ Obtained from https://gist.github.com/chengdi123000/42ec8ed2cbef09ee050766c2f25498cb ]\n\nCreated on Wed Feb 14 16:17:38 2018\nThis handler is used to deal with logging with mpi4py in Python3.\n\n@author: cheng\n\n@reference: \n    https://cvw.cac.cornell.edu/python/logging\n    https://groups.google.com/forum/#!topic/mpi4py/SaNzc8bdj6U\n    https://gist.github.com/JohnCEarls/8172807\n\"\"\"",
        "\"\"\"\n        Emit a record.\n\n        If a formatter is specified, it is used to format the record.\n        The record is then written to the stream with a trailing newline.  If\n        exception information is present, it is formatted using\n        traceback.print_exception and appended to the stream.  If the stream\n        has an 'encoding' attribute, it is used to determine how to do the\n        output to the stream.\n        \n        Modification:\n            stream is MPI.File, so it must use `Write_shared` method rather\n            than `write` method. And `Write_shared` method only accept \n            bytestring, so `encode` is used. `Write_shared` should be invoked\n            only once in each all of this emit function to keep atomicity.\n        \"\"\""
    ],
    "functions": [
        "_open",
        "emit",
        "close"
    ],
    "classes": [
        "MPIFileHandler"
    ]
}