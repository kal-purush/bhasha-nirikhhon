{
    "identifiers": [
        "requests",
        "base64",
        "json",
        "sys",
        "pandas",
        "pd",
        "time",
        "re",
        "ast",
        "requests",
        "packages",
        "urllib3",
        "exceptions",
        "InsecureRequestWarning",
        "requests",
        "packages",
        "urllib3",
        "disable_warnings",
        "InsecureRequestWarning",
        "open",
        "x",
        "f",
        "y",
        "append",
        "x",
        "split",
        "y",
        "strip",
        "debug",
        "lower",
        "y",
        "strip",
        "debug",
        "ise_ip",
        "y",
        "strip",
        "debug",
        "ise_un",
        "y",
        "strip",
        "debug",
        "ise_pw",
        "y",
        "strip",
        "debug",
        "dnac_ip",
        "y",
        "strip",
        "debug",
        "dnac_un",
        "y",
        "strip",
        "debug",
        "dnac_pw",
        "un",
        "pw",
        "un",
        "pw",
        "base64",
        "b64encode",
        "encodedvalue",
        "encode",
        "decode",
        "b64Val",
        "ip",
        "b64Val",
        "requests",
        "get",
        "ip",
        "headers",
        "b64Val",
        "verify",
        "r",
        "text",
        "r",
        "raise_for_status",
        "requests",
        "exceptions",
        "Timeout",
        "errt",
        "errt",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "ConnectionError",
        "errc",
        "errc",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "HTTPError",
        "errh",
        "errh",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "RequestException",
        "err",
        "err",
        "sys",
        "exit",
        "r",
        "headers",
        "split",
        "a",
        "split",
        "b",
        "c",
        "cookie",
        "ip",
        "cookie",
        "body",
        "requests",
        "post",
        "ip",
        "cookies",
        "cookie",
        "json",
        "body",
        "verify",
        "debug",
        "r",
        "text",
        "re",
        "compile",
        "pattern",
        "findall",
        "r",
        "text",
        "match",
        "r",
        "raise_for_status",
        "requests",
        "exceptions",
        "Timeout",
        "errt",
        "errt",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "ConnectionError",
        "errc",
        "errc",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "HTTPError",
        "errh",
        "errh",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "RequestException",
        "err",
        "err",
        "sys",
        "exit",
        "re",
        "compile",
        "pattern",
        "findall",
        "r",
        "text",
        "match",
        "task_id",
        "ip",
        "cookie",
        "task_id",
        "requests",
        "get",
        "ip",
        "task_id",
        "cookies",
        "cookie",
        "verify",
        "debug",
        "r",
        "text",
        "re",
        "compile",
        "pattern",
        "findall",
        "r",
        "text",
        "match",
        "r",
        "raise_for_status",
        "requests",
        "exceptions",
        "Timeout",
        "errt",
        "errt",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "ConnectionError",
        "errc",
        "errc",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "HTTPError",
        "errh",
        "errh",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "RequestException",
        "err",
        "err",
        "sys",
        "exit",
        "match",
        "file_id",
        "ip",
        "cookie",
        "file_id",
        "requests",
        "get",
        "ip",
        "file_id",
        "cookies",
        "cookie",
        "verify",
        "r",
        "raise_for_status",
        "requests",
        "exceptions",
        "Timeout",
        "errt",
        "errt",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "ConnectionError",
        "errc",
        "errc",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "HTTPError",
        "errh",
        "errh",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "RequestException",
        "err",
        "err",
        "sys",
        "exit",
        "r",
        "text",
        "ip",
        "cookie",
        "file_id",
        "requests",
        "get",
        "ip",
        "file_id",
        "cookies",
        "cookie",
        "verify",
        "json",
        "loads",
        "r",
        "text",
        "r",
        "raise_for_status",
        "requests",
        "exceptions",
        "Timeout",
        "errt",
        "errt",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "ConnectionError",
        "errc",
        "errc",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "HTTPError",
        "errh",
        "errh",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "RequestException",
        "err",
        "err",
        "sys",
        "exit",
        "json_data",
        "json_data",
        "debug",
        "repr",
        "output",
        "re",
        "findall",
        "output",
        "re",
        "M",
        "re",
        "I",
        "vrfnames",
        "debug",
        "vrfnames",
        "vrfnames",
        "vrfnames",
        "ip",
        "cookie",
        "devid",
        "unknwnval",
        "element",
        "vrfnames",
        "element",
        "devid",
        "poller",
        "ip",
        "cookie",
        "body",
        "time",
        "sleep",
        "task",
        "ip",
        "cookie",
        "task_id",
        "file_id",
        "time",
        "sleep",
        "poller",
        "ip",
        "cookie",
        "body",
        "time",
        "sleep",
        "task",
        "ip",
        "cookie",
        "task_id",
        "requests",
        "get",
        "ip",
        "file_id",
        "cookies",
        "cookie",
        "verify",
        "r",
        "raise_for_status",
        "requests",
        "exceptions",
        "Timeout",
        "errt",
        "errt",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "ConnectionError",
        "errc",
        "errc",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "HTTPError",
        "errh",
        "errh",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "RequestException",
        "err",
        "err",
        "sys",
        "exit",
        "responses",
        "append",
        "r",
        "text",
        "devid",
        "poller",
        "ip",
        "cookie",
        "body",
        "time",
        "sleep",
        "task",
        "ip",
        "cookie",
        "task_id",
        "file_id",
        "time",
        "sleep",
        "poller",
        "ip",
        "cookie",
        "body",
        "time",
        "sleep",
        "task",
        "ip",
        "cookie",
        "task_id",
        "requests",
        "get",
        "ip",
        "file_id",
        "cookies",
        "cookie",
        "verify",
        "r",
        "raise_for_status",
        "requests",
        "exceptions",
        "Timeout",
        "errt",
        "errt",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "ConnectionError",
        "errc",
        "errc",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "HTTPError",
        "errh",
        "errh",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "RequestException",
        "err",
        "err",
        "sys",
        "exit",
        "responses",
        "append",
        "r",
        "text",
        "i",
        "len",
        "responses",
        "debug",
        "responses",
        "i",
        "responses",
        "i",
        "find",
        "sgtlist",
        "append",
        "sgtvrf",
        "append",
        "iplist",
        "append",
        "re",
        "compile",
        "pattern",
        "findall",
        "responses",
        "i",
        "i",
        "match",
        "sgt",
        "append",
        "i",
        "ips",
        "append",
        "i",
        "sgtvrf",
        "append",
        "sgt",
        "fromkeys",
        "sgt",
        "sgtlist",
        "append",
        "sgt",
        "iplist",
        "append",
        "ips",
        "unknwnval",
        "sgtlist",
        "append",
        "debug",
        "sgtlist",
        "sgtlist",
        "iplist",
        "sgtvrf",
        "sgtlist",
        "ip",
        "cookie",
        "devid",
        "element",
        "sgtlist",
        "element",
        "dgtlist",
        "append",
        "sgacllist",
        "append",
        "acllist",
        "append",
        "i",
        "element",
        "i",
        "devid",
        "poller",
        "ip",
        "cookie",
        "body",
        "time",
        "sleep",
        "task",
        "ip",
        "cookie",
        "task_id",
        "file_id",
        "time",
        "sleep",
        "poller",
        "ip",
        "cookie",
        "body",
        "time",
        "sleep",
        "task",
        "ip",
        "cookie",
        "task_id",
        "requests",
        "get",
        "ip",
        "file_id",
        "cookies",
        "cookie",
        "verify",
        "r",
        "raise_for_status",
        "requests",
        "exceptions",
        "Timeout",
        "errt",
        "errt",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "ConnectionError",
        "errc",
        "errc",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "HTTPError",
        "errh",
        "errh",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "RequestException",
        "err",
        "err",
        "sys",
        "exit",
        "re",
        "findall",
        "r",
        "text",
        "n",
        "i",
        "res",
        "i",
        "debug",
        "res",
        "res",
        "dgt",
        "append",
        "sgacl",
        "append",
        "acl",
        "append",
        "dgt",
        "append",
        "res",
        "r",
        "text",
        "split",
        "res2",
        "pop",
        "i",
        "res2",
        "re",
        "findall",
        "i",
        "res3",
        "re",
        "findall",
        "i",
        "re",
        "findall",
        "i",
        "sgacl1",
        "append",
        "res5",
        "acl1",
        "append",
        "res4",
        "sgacl",
        "append",
        "sgacl1",
        "acl",
        "append",
        "acl1",
        "dgtlist",
        "append",
        "dgt",
        "sgacllist",
        "append",
        "sgacl",
        "acllist",
        "append",
        "acl",
        "debug",
        "dgtlist",
        "sgacllist",
        "acllist",
        "dgtlist",
        "sgacllist",
        "acllist",
        "acllist",
        "ip",
        "cookie",
        "devid",
        "devid",
        "poller",
        "ip",
        "cookie",
        "body",
        "time",
        "sleep",
        "task",
        "ip",
        "cookie",
        "task_id",
        "file_id",
        "time",
        "sleep",
        "poller",
        "ip",
        "cookie",
        "body",
        "time",
        "sleep",
        "task",
        "ip",
        "cookie",
        "task_id",
        "requests",
        "get",
        "ip",
        "file_id",
        "cookies",
        "cookie",
        "verify",
        "r",
        "text",
        "find",
        "r",
        "text",
        "l",
        "debug",
        "repr",
        "x",
        "r",
        "raise_for_status",
        "requests",
        "exceptions",
        "Timeout",
        "errt",
        "errt",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "ConnectionError",
        "errc",
        "errc",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "HTTPError",
        "errh",
        "errh",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "RequestException",
        "err",
        "err",
        "sys",
        "exit",
        "x",
        "split",
        "el",
        "acllist",
        "el",
        "aclcontlist",
        "append",
        "el1",
        "el",
        "el1",
        "aclcont1",
        "append",
        "el2",
        "el1",
        "el3",
        "el2",
        "i",
        "z",
        "el3",
        "i",
        "z",
        "index",
        "i",
        "j",
        "pos",
        "len",
        "z",
        "z",
        "j",
        "startswith",
        "re",
        "findall",
        "z",
        "j",
        "j",
        "res1",
        "append",
        "res",
        "strip",
        "len",
        "res1",
        "match",
        "append",
        "res1",
        "match",
        "append",
        "res1",
        "aclcont",
        "append",
        "match",
        "aclcont1",
        "append",
        "aclcont",
        "aclcontlist",
        "append",
        "aclcont1",
        "debug",
        "aclcontlist",
        "aclcontlist",
        "ip",
        "b64Val",
        "requests",
        "get",
        "ip",
        "headers",
        "b64Val",
        "verify",
        "r",
        "status_code",
        "json",
        "loads",
        "r",
        "text",
        "repos",
        "append",
        "json_data",
        "json_data",
        "json_data",
        "requests",
        "get",
        "url",
        "headers",
        "b64Val",
        "verify",
        "json",
        "loads",
        "r",
        "text",
        "json_data",
        "repos",
        "append",
        "json_data",
        "i",
        "repos",
        "i",
        "element",
        "len",
        "x",
        "ids",
        "append",
        "x",
        "element",
        "r",
        "raise_for_status",
        "requests",
        "exceptions",
        "Timeout",
        "errt",
        "errt",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "ConnectionError",
        "errc",
        "errc",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "HTTPError",
        "errh",
        "errh",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "RequestException",
        "err",
        "err",
        "sys",
        "exit",
        "debug",
        "ids",
        "len",
        "ids",
        "ids",
        "ids",
        "ip",
        "b64Val",
        "element",
        "ids",
        "requests",
        "get",
        "ip",
        "element",
        "headers",
        "b64Val",
        "verify",
        "json",
        "loads",
        "r",
        "text",
        "responses",
        "append",
        "json_data",
        "r",
        "raise_for_status",
        "requests",
        "exceptions",
        "Timeout",
        "errt",
        "errt",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "ConnectionError",
        "errc",
        "errc",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "HTTPError",
        "errh",
        "errh",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "RequestException",
        "err",
        "err",
        "sys",
        "exit",
        "responses",
        "responses",
        "i",
        "len",
        "responses",
        "sgtid",
        "append",
        "responses",
        "i",
        "dgtid",
        "append",
        "responses",
        "i",
        "sgaclid",
        "append",
        "responses",
        "i",
        "sgtid",
        "dgtid",
        "sgaclid",
        "ip",
        "b64Val",
        "gtid",
        "i",
        "len",
        "gtid",
        "requests",
        "get",
        "ip",
        "gtid",
        "i",
        "headers",
        "b64Val",
        "verify",
        "json",
        "loads",
        "r",
        "text",
        "gtresp",
        "append",
        "json_data",
        "r",
        "raise_for_status",
        "requests",
        "exceptions",
        "Timeout",
        "errt",
        "errt",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "ConnectionError",
        "errc",
        "errc",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "HTTPError",
        "errh",
        "errh",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "RequestException",
        "err",
        "err",
        "sys",
        "exit",
        "gtresp",
        "ip",
        "b64Val",
        "sgaclid",
        "i",
        "sgaclid",
        "l",
        "i",
        "requests",
        "get",
        "ip",
        "l",
        "headers",
        "b64Val",
        "verify",
        "json",
        "loads",
        "r",
        "text",
        "responses",
        "append",
        "json_data",
        "r",
        "raise_for_status",
        "requests",
        "exceptions",
        "Timeout",
        "errt",
        "errt",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "ConnectionError",
        "errc",
        "errc",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "HTTPError",
        "errh",
        "errh",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "RequestException",
        "err",
        "err",
        "sys",
        "exit",
        "sgaclresp",
        "append",
        "responses",
        "i",
        "sgaclresp",
        "debug",
        "i",
        "j",
        "i",
        "sgaclval",
        "append",
        "j",
        "j",
        "x",
        "split",
        "len",
        "k",
        "z",
        "k",
        "aclcont",
        "append",
        "z",
        "aclcont",
        "append",
        "k",
        "sgaclvallist",
        "append",
        "sgaclval",
        "aclcontlist",
        "append",
        "aclcont",
        "debug",
        "sgaclvallist",
        "aclcontlist",
        "sgaclvallist",
        "aclcontlist",
        "ip",
        "cookie",
        "requests",
        "get",
        "ip",
        "cookies",
        "cookie",
        "verify",
        "json",
        "loads",
        "r",
        "text",
        "json_data",
        "debug",
        "count",
        "r",
        "raise_for_status",
        "requests",
        "exceptions",
        "Timeout",
        "errt",
        "errt",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "ConnectionError",
        "errc",
        "errc",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "HTTPError",
        "errh",
        "errh",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "RequestException",
        "err",
        "err",
        "sys",
        "exit",
        "requests",
        "get",
        "ip",
        "cookies",
        "cookie",
        "verify",
        "r",
        "raise_for_status",
        "requests",
        "exceptions",
        "Timeout",
        "errt",
        "errt",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "ConnectionError",
        "errc",
        "errc",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "HTTPError",
        "errh",
        "errh",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "RequestException",
        "err",
        "err",
        "sys",
        "exit",
        "json",
        "loads",
        "r",
        "text",
        "i",
        "count",
        "obj",
        "i",
        "debug",
        "x",
        "x",
        "find",
        "x",
        "find",
        "x",
        "esc",
        "esc1",
        "deviceid",
        "append",
        "x",
        "device",
        "append",
        "x",
        "mipaddr",
        "append",
        "x",
        "devinfo",
        "append",
        "x",
        "debug",
        "deviceid",
        "device",
        "mipaddr",
        "count",
        "devinfo",
        "devid",
        "ip",
        "cookie",
        "count",
        "defperm",
        "devid",
        "poller",
        "ip",
        "cookie",
        "body",
        "time",
        "sleep",
        "task",
        "ip",
        "cookie",
        "task_id",
        "file_id",
        "time",
        "sleep",
        "poller",
        "ip",
        "cookie",
        "body",
        "time",
        "sleep",
        "task",
        "ip",
        "cookie",
        "task_id",
        "requests",
        "get",
        "ip",
        "file_id",
        "cookies",
        "cookie",
        "verify",
        "debug",
        "r",
        "text",
        "r",
        "raise_for_status",
        "requests",
        "exceptions",
        "Timeout",
        "errt",
        "errt",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "ConnectionError",
        "errc",
        "errc",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "HTTPError",
        "errh",
        "errh",
        "sys",
        "exit",
        "requests",
        "exceptions",
        "RequestException",
        "err",
        "err",
        "sys",
        "exit",
        "re",
        "findall",
        "r",
        "text",
        "res",
        "defperm",
        "defaultperm",
        "update",
        "count",
        "res",
        "defaultperm",
        "update",
        "count",
        "res",
        "defaultperm",
        "success",
        "ise_un",
        "ise_pw",
        "ise_ip",
        "encoder",
        "un",
        "pw",
        "egressconfig",
        "ip",
        "b64Val",
        "ids",
        "egressresp",
        "ids",
        "ip",
        "b64Val",
        "idsresp",
        "responses",
        "gtresponse",
        "ip",
        "b64Val",
        "sgtid",
        "gtresponse",
        "ip",
        "b64Val",
        "dgtid",
        "i",
        "len",
        "dgtresp",
        "dgtval",
        "append",
        "dgtresp",
        "i",
        "i",
        "len",
        "sgtresp",
        "sgtval",
        "append",
        "sgtresp",
        "i",
        "sgaclresponse",
        "ip",
        "b64Val",
        "sgaclid",
        "pd",
        "set_option",
        "pd",
        "DataFrame",
        "responses",
        "i",
        "len",
        "responses",
        "pd",
        "DataFrame",
        "responses",
        "i",
        "pd",
        "concat",
        "df",
        "df1",
        "sort",
        "ignore_index",
        "i",
        "len",
        "responses",
        "debug",
        "responses",
        "i",
        "name",
        "append",
        "responses",
        "i",
        "defaultRule",
        "append",
        "responses",
        "i",
        "responses",
        "i",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "sgtval",
        "dgtval",
        "df",
        "nums",
        "i",
        "len",
        "nums",
        "isinstance",
        "nums",
        "i",
        "res",
        "extend",
        "nums",
        "i",
        "index",
        "extend",
        "i",
        "len",
        "nums",
        "i",
        "res",
        "append",
        "nums",
        "i",
        "index",
        "append",
        "i",
        "res",
        "index",
        "flat",
        "eval",
        "x",
        "pd",
        "DataFrame",
        "x",
        "list_flat",
        "index",
        "list_index",
        "pd",
        "concat",
        "df1",
        "dataframe",
        "axis",
        "sort",
        "flat",
        "eval",
        "x",
        "pd",
        "DataFrame",
        "x",
        "list_flat",
        "index",
        "list_index",
        "pd",
        "concat",
        "df1",
        "dataframe",
        "axis",
        "sort",
        "df1",
        "astype",
        "df1",
        "drop_duplicates",
        "keep",
        "inplace",
        "sgaclval",
        "aclcont",
        "df",
        "astype",
        "df",
        "astype",
        "df",
        "drop_duplicates",
        "keep",
        "inplace",
        "debug",
        "name",
        "defaultRule",
        "sgtval",
        "dgtval",
        "sgaclval",
        "aclcont",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "defaultRule",
        "name",
        "sgtval",
        "dgtval",
        "sgaclval",
        "aclcont",
        "f",
        "g",
        "f1",
        "g1",
        "f",
        "g",
        "isinstance",
        "g1",
        "final_list",
        "append",
        "b",
        "c",
        "d",
        "e",
        "f1",
        "g1",
        "g2",
        "g1",
        "final_list",
        "append",
        "b",
        "c",
        "d",
        "e",
        "f1",
        "g2",
        "pd",
        "DataFrame",
        "final_list",
        "columns",
        "df2",
        "drop_duplicates",
        "keep",
        "inplace",
        "debug",
        "df2",
        "df2",
        "to_csv",
        "i",
        "k",
        "df",
        "df",
        "j",
        "i",
        "df",
        "j",
        "ast",
        "literal_eval",
        "defperm",
        "k",
        "success",
        "dnac_un",
        "dnac_pw",
        "dnac_ip",
        "encoder",
        "un",
        "pw",
        "auth",
        "ip",
        "b64Val",
        "cookie",
        "devices",
        "ip",
        "cookie",
        "devid",
        "deviceid",
        "count",
        "debug",
        "count",
        "devid",
        "devicenames",
        "count",
        "count",
        "devid",
        "poller",
        "ip",
        "cookie",
        "body",
        "time",
        "sleep",
        "task",
        "ip",
        "cookie",
        "task_id",
        "file_id",
        "time",
        "sleep",
        "poller",
        "ip",
        "cookie",
        "body",
        "time",
        "sleep",
        "task",
        "ip",
        "cookie",
        "task_id",
        "fileo",
        "ip",
        "cookie",
        "file_id",
        "output",
        "find",
        "l",
        "pacinfo",
        "update",
        "count",
        "output",
        "l",
        "output",
        "split",
        "pacinfo",
        "update",
        "count",
        "out1",
        "re",
        "compile",
        "pattern",
        "findall",
        "output",
        "el",
        "match",
        "format",
        "el",
        "el",
        "sxpinfo",
        "update",
        "count",
        "sxp",
        "debug",
        "pacinfo",
        "sxpinfo",
        "defaultval",
        "devid",
        "ip",
        "cookie",
        "count",
        "defperm",
        "debug",
        "defaultperm",
        "devid",
        "poller",
        "ip",
        "cookie",
        "body",
        "time",
        "sleep",
        "task",
        "ip",
        "cookie",
        "task_id",
        "file_id",
        "time",
        "sleep",
        "poller",
        "ip",
        "cookie",
        "body",
        "time",
        "sleep",
        "task",
        "ip",
        "cookie",
        "task_id",
        "vrf",
        "ip",
        "cookie",
        "file_id",
        "sgtlist",
        "vrfnames",
        "ip",
        "cookie",
        "devid",
        "unknwnval",
        "sgtperm",
        "sgtlst",
        "ip",
        "cookie",
        "devid",
        "inList",
        "inList",
        "isinstance",
        "inList",
        "inList",
        "all",
        "isListEmpty",
        "inList",
        "isListEmpty",
        "dgtlst",
        "debug",
        "dfa2",
        "update",
        "count",
        "dfa1",
        "update",
        "count",
        "aclcontent",
        "aclcontlst",
        "ip",
        "cookie",
        "devid",
        "exist",
        "append",
        "count",
        "DEVICES",
        "update",
        "count",
        "devinfo",
        "count",
        "count",
        "debug",
        "sgtlst",
        "dgtlst",
        "sgacllst",
        "acl",
        "pd",
        "set_option",
        "b",
        "c",
        "d",
        "e",
        "sgtlst",
        "dgtlst",
        "sgacllst",
        "acl",
        "b",
        "c",
        "d",
        "e",
        "b1",
        "c1",
        "d1",
        "e1",
        "b",
        "c",
        "d",
        "e",
        "c1",
        "d1",
        "e1",
        "c2",
        "d2",
        "e2",
        "c1",
        "d1",
        "e1",
        "d3",
        "e3",
        "d2",
        "e2",
        "isinstance",
        "e3",
        "final_list",
        "append",
        "b1",
        "c2",
        "d3",
        "e3",
        "e4",
        "e3",
        "final_list",
        "append",
        "b1",
        "c2",
        "d3",
        "e4",
        "final_list",
        "append",
        "b1",
        "c1",
        "d1",
        "e1",
        "final_list",
        "append",
        "b",
        "c",
        "d",
        "e",
        "count",
        "pd",
        "DataFrame",
        "final_list",
        "columns",
        "dfa2",
        "count",
        "drop_duplicates",
        "keep",
        "inplace",
        "b",
        "c",
        "d",
        "e",
        "sgtlst",
        "dgtlst",
        "sgacllst",
        "acl",
        "b",
        "c",
        "d",
        "e",
        "b1",
        "c1",
        "d1",
        "e1",
        "b",
        "c",
        "d",
        "e",
        "c1",
        "d1",
        "e1",
        "c2",
        "d2",
        "e2",
        "c1",
        "d1",
        "e1",
        "d3",
        "e3",
        "d2",
        "e2",
        "final_list",
        "append",
        "b1",
        "c2",
        "d3",
        "e3",
        "final_list",
        "append",
        "b1",
        "c1",
        "d1",
        "e1",
        "final_list",
        "append",
        "b",
        "c",
        "d",
        "e",
        "count",
        "pd",
        "DataFrame",
        "final_list",
        "columns",
        "dfa3",
        "count",
        "dfa3",
        "count",
        "astype",
        "dfa3",
        "count",
        "drop_duplicates",
        "keep",
        "inplace",
        "unknwnval",
        "vrfnames",
        "append",
        "count",
        "pd",
        "DataFrame",
        "vrfnames",
        "flat",
        "eval",
        "x",
        "pd",
        "DataFrame",
        "x",
        "list_flat",
        "index",
        "list_index",
        "count",
        "pd",
        "concat",
        "dfa",
        "count",
        "dataframe",
        "axis",
        "sort",
        "sgtbig",
        "update",
        "count",
        "list_flat",
        "flat",
        "eval",
        "x",
        "pd",
        "DataFrame",
        "x",
        "list_flat",
        "index",
        "list_index",
        "count",
        "pd",
        "concat",
        "dfa",
        "count",
        "dataframe",
        "axis",
        "sort",
        "dgtbig",
        "update",
        "count",
        "list_flat",
        "flat",
        "eval",
        "x",
        "pd",
        "DataFrame",
        "x",
        "list_flat",
        "index",
        "list_index",
        "count",
        "pd",
        "concat",
        "dfa",
        "count",
        "dataframe",
        "axis",
        "sort",
        "flat",
        "eval",
        "x",
        "pd",
        "DataFrame",
        "x",
        "list_flat",
        "index",
        "list_index",
        "count",
        "pd",
        "concat",
        "dfa",
        "count",
        "dataframe",
        "axis",
        "sort",
        "dfa",
        "count",
        "dfa",
        "count",
        "dfa",
        "count",
        "dfa",
        "count",
        "astype",
        "dfa",
        "count",
        "dfa",
        "count",
        "astype",
        "dfa",
        "count",
        "dfa",
        "count",
        "astype",
        "dfa",
        "count",
        "drop_duplicates",
        "keep",
        "inplace",
        "unknwnval",
        "vrfnames",
        "count",
        "pd",
        "DataFrame",
        "vrfnames",
        "flat",
        "eval",
        "x",
        "pd",
        "DataFrame",
        "x",
        "list_flat",
        "index",
        "list_index",
        "count",
        "pd",
        "concat",
        "dfa1",
        "count",
        "dataframe",
        "axis",
        "sort",
        "flat",
        "eval",
        "x",
        "pd",
        "DataFrame",
        "x",
        "list_flat",
        "index",
        "list_index",
        "count",
        "pd",
        "concat",
        "dfa1",
        "count",
        "dataframe",
        "axis",
        "sort",
        "dfa1",
        "count",
        "dfa1",
        "count",
        "drop_duplicates",
        "keep",
        "inplace",
        "pd",
        "set_option",
        "li1",
        "li2",
        "li1",
        "li2",
        "pd",
        "set_option",
        "p",
        "exist",
        "a",
        "c",
        "sgtbig",
        "p",
        "dgtbig",
        "p",
        "a",
        "d",
        "a",
        "d",
        "append",
        "a",
        "b",
        "append",
        "a",
        "df1",
        "loc",
        "df1",
        "isin",
        "b",
        "df_temp",
        "df_temp",
        "df_temp",
        "reindex",
        "columns",
        "columnsTitles",
        "df_temp",
        "sort_values",
        "by",
        "df_temp",
        "reset_index",
        "drop",
        "debug",
        "df_temp",
        "dfa3",
        "p",
        "loc",
        "dfa3",
        "p",
        "isin",
        "b",
        "df_temp1",
        "sort_values",
        "by",
        "df_temp1",
        "reset_index",
        "drop",
        "debug",
        "df_temp1",
        "c",
        "df_temp1",
        "astype",
        "df_temp1",
        "astype",
        "df_temp",
        "merge",
        "df_temp1",
        "on",
        "how",
        "debug",
        "df_final1",
        "df_final1",
        "to_dict",
        "orient",
        "i",
        "di",
        "table",
        "update",
        "j",
        "i",
        "j",
        "pd",
        "DataFrame",
        "table",
        "num",
        "num",
        "num",
        "res",
        "append",
        "df_final1",
        "res1",
        "append",
        "df_temp",
        "output2",
        "update",
        "p",
        "res1",
        "output1",
        "update",
        "p",
        "res",
        "p",
        "exist",
        "debug",
        "p",
        "a",
        "b",
        "c",
        "d",
        "dfa",
        "p",
        "dfa",
        "p",
        "dfa",
        "p",
        "dfa",
        "p",
        "a",
        "e",
        "df",
        "a",
        "e",
        "b",
        "ast",
        "literal_eval",
        "b",
        "n",
        "b",
        "isinstance",
        "b",
        "n",
        "strip",
        "c",
        "ast",
        "literal_eval",
        "c",
        "n",
        "c",
        "isinstance",
        "c",
        "n",
        "strip",
        "d",
        "ast",
        "literal_eval",
        "d",
        "n",
        "d",
        "isinstance",
        "d",
        "n",
        "strip",
        "i",
        "j",
        "k",
        "l",
        "df",
        "df",
        "df",
        "df",
        "i",
        "e",
        "ast",
        "literal_eval",
        "k",
        "n",
        "k",
        "isinstance",
        "k",
        "n",
        "strip",
        "ast",
        "literal_eval",
        "l",
        "n",
        "l",
        "isinstance",
        "n",
        "n",
        "strip",
        "f",
        "append",
        "j",
        "g",
        "append",
        "k",
        "h",
        "append",
        "l",
        "t",
        "t",
        "sorted",
        "f",
        "g",
        "h",
        "t",
        "t",
        "sorted",
        "f",
        "g",
        "h",
        "t",
        "t",
        "sorted",
        "b",
        "c",
        "d",
        "debug",
        "f",
        "b",
        "g",
        "c",
        "h",
        "d",
        "f",
        "b",
        "g",
        "c",
        "h",
        "d",
        "a",
        "append",
        "append",
        "a",
        "yes",
        "append",
        "returnNotMatches",
        "g",
        "c",
        "match1",
        "returnNotMatches",
        "c",
        "g",
        "a",
        "append",
        "format",
        "match1",
        "debug",
        "format",
        "match1",
        "append",
        "format",
        "a",
        "match1",
        "debug",
        "format",
        "a",
        "match1",
        "returnNotMatches",
        "f",
        "b",
        "match1",
        "returnNotMatches",
        "b",
        "f",
        "a",
        "append",
        "format",
        "match1",
        "debug",
        "format",
        "match1",
        "append",
        "format",
        "a",
        "match1",
        "debug",
        "format",
        "a",
        "match1",
        "match",
        "a",
        "append",
        "format",
        "a",
        "debug",
        "format",
        "a",
        "append",
        "format",
        "a",
        "a",
        "debug",
        "format",
        "a",
        "a",
        "out1",
        "update",
        "p",
        "len",
        "yes",
        "len",
        "success",
        "update",
        "p",
        "success",
        "update",
        "p",
        "debug",
        "df2",
        "dfa2",
        "dfa1",
        "pacinfo",
        "sxpinfo",
        "DEVICES",
        "success",
        "out1",
        "output1",
        "numpy",
        "np",
        "reportlab",
        "lib",
        "styles",
        "ParagraphStyle",
        "PS",
        "reportlab",
        "platypus",
        "PageBreak",
        "reportlab",
        "platypus",
        "paragraph",
        "Paragraph",
        "reportlab",
        "platypus",
        "doctemplate",
        "PageTemplate",
        "BaseDocTemplate",
        "reportlab",
        "platypus",
        "tableofcontents",
        "TableOfContents",
        "reportlab",
        "platypus",
        "frames",
        "Frame",
        "reportlab",
        "lib",
        "styles",
        "ParagraphStyle",
        "reportlab",
        "lib",
        "units",
        "cm",
        "BaseDocTemplate",
        "filename",
        "kw",
        "BaseDocTemplate",
        "filename",
        "kw",
        "PageTemplate",
        "Frame",
        "cm",
        "cm",
        "cm",
        "cm",
        "id",
        "addPageTemplates",
        "template",
        "flowable",
        "flowable",
        "__class__",
        "flowable",
        "getPlainText",
        "flowable",
        "style",
        "name",
        "style",
        "style",
        "level",
        "text",
        "page",
        "getattr",
        "flowable",
        "bn",
        "E",
        "append",
        "bn",
        "notify",
        "E",
        "PS",
        "name",
        "fontSize",
        "leading",
        "alignment",
        "spaceAfter",
        "PS",
        "name",
        "fontSize",
        "leading",
        "alignment",
        "fontName",
        "PS",
        "name",
        "fontSize",
        "leading",
        "alignment",
        "fontName",
        "element",
        "append",
        "Paragraph",
        "centered",
        "TableOfContents",
        "PS",
        "fontName",
        "fontSize",
        "name",
        "leftIndent",
        "firstLineIndent",
        "spaceBefore",
        "leading",
        "PS",
        "fontSize",
        "name",
        "leftIndent",
        "firstLineIndent",
        "spaceBefore",
        "leading",
        "element",
        "append",
        "toc",
        "element",
        "append",
        "PageBreak",
        "text",
        "sty",
        "hashlib",
        "sha1",
        "sha1",
        "text",
        "sty",
        "name",
        "encode",
        "hexdigest",
        "Paragraph",
        "text",
        "bn",
        "sty",
        "bn",
        "element",
        "append",
        "h",
        "ParagraphStyle",
        "ParagraphStyle",
        "name",
        "fontName",
        "fontSize",
        "alignment",
        "ParagraphStyle",
        "name",
        "fontName",
        "fontSize",
        "alignment",
        "np",
        "array",
        "df2",
        "np",
        "array",
        "li",
        "np",
        "vstack",
        "b",
        "a",
        "Table",
        "np",
        "array",
        "p",
        "tolist",
        "t1",
        "setStyle",
        "TableStyle",
        "colors",
        "black",
        "colors",
        "red",
        "doHeading",
        "h1",
        "element",
        "append",
        "Spacer",
        "inch",
        "element",
        "append",
        "t1",
        "element",
        "append",
        "PageBreak",
        "i",
        "exist",
        "i",
        "doHeading",
        "h3",
        "doHeading",
        "DEVICES",
        "j",
        "h2",
        "element",
        "append",
        "Spacer",
        "inch",
        "element",
        "append",
        "Paragraph",
        "DEVICES",
        "j",
        "style1",
        "element",
        "append",
        "Spacer",
        "inch",
        "element",
        "append",
        "Paragraph",
        "pacinfo",
        "j",
        "style1",
        "element",
        "append",
        "Spacer",
        "inch",
        "element",
        "append",
        "Paragraph",
        "sxpinfo",
        "j",
        "style1",
        "element",
        "append",
        "Spacer",
        "inch",
        "element",
        "append",
        "Paragraph",
        "style",
        "element",
        "append",
        "Spacer",
        "inch",
        "np",
        "array",
        "li",
        "k",
        "output2",
        "j",
        "np",
        "array",
        "k",
        "np",
        "vstack",
        "b",
        "a",
        "Table",
        "np",
        "array",
        "p",
        "tolist",
        "t2",
        "setStyle",
        "TableStyle",
        "colors",
        "black",
        "colors",
        "red",
        "element",
        "append",
        "t2",
        "element",
        "append",
        "Spacer",
        "inch",
        "element",
        "append",
        "Spacer",
        "inch",
        "element",
        "append",
        "Paragraph",
        "style",
        "element",
        "append",
        "Spacer",
        "inch",
        "np",
        "array",
        "dfa1",
        "j",
        "np",
        "array",
        "li",
        "np",
        "vstack",
        "b",
        "a",
        "Table",
        "np",
        "array",
        "p",
        "tolist",
        "t3",
        "setStyle",
        "TableStyle",
        "colors",
        "black",
        "colors",
        "red",
        "np",
        "array",
        "dfa2",
        "j",
        "np",
        "array",
        "li",
        "np",
        "vstack",
        "b",
        "a",
        "Table",
        "np",
        "array",
        "p",
        "tolist",
        "t4",
        "setStyle",
        "TableStyle",
        "colors",
        "black",
        "colors",
        "red",
        "element",
        "append",
        "t3",
        "element",
        "append",
        "Spacer",
        "inch",
        "element",
        "append",
        "t4",
        "element",
        "append",
        "Spacer",
        "inch",
        "element",
        "append",
        "Paragraph",
        "style",
        "element",
        "append",
        "Spacer",
        "inch",
        "np",
        "array",
        "li",
        "l",
        "out1",
        "j",
        "element",
        "append",
        "Paragraph",
        "l",
        "style1",
        "element",
        "append",
        "Spacer",
        "inch",
        "element",
        "append",
        "Spacer",
        "inch",
        "k",
        "output1",
        "j",
        "k",
        "k",
        "isNaN",
        "k",
        "index",
        "values",
        "astype",
        "dfb",
        "k",
        "isNaN",
        "k",
        "index",
        "values",
        "astype",
        "dfb1",
        "np",
        "array",
        "k",
        "np",
        "vstack",
        "b",
        "a",
        "Table",
        "np",
        "array",
        "p",
        "tolist",
        "t5",
        "setStyle",
        "TableStyle",
        "colors",
        "black",
        "colors",
        "red",
        "dfb",
        "size",
        "i",
        "dfb",
        "i",
        "t5",
        "setStyle",
        "TableStyle",
        "i",
        "i",
        "colors",
        "red",
        "dfb1",
        "size",
        "j",
        "dfb1",
        "j",
        "t5",
        "setStyle",
        "TableStyle",
        "j",
        "j",
        "colors",
        "red",
        "ix",
        "k",
        "index",
        "isNaN",
        "k",
        "loc",
        "ix",
        "isNaN",
        "k",
        "loc",
        "ix",
        "k",
        "loc",
        "ix",
        "k",
        "loc",
        "ix",
        "s",
        "append",
        "ix",
        "s",
        "i",
        "s",
        "t5",
        "setStyle",
        "TableStyle",
        "i",
        "i",
        "colors",
        "yellow",
        "element",
        "append",
        "t5",
        "element",
        "append",
        "Spacer",
        "inch",
        "element",
        "append",
        "Spacer",
        "inch",
        "element",
        "append",
        "PageBreak",
        "MyDocTemplate",
        "doc",
        "multiBuild",
        "element"
    ],
    "literals": [
        "\"input.txt\"",
        "\"r\"",
        "\"-\"",
        "\"yes\"",
        "\":\"",
        "'UTF-8'",
        "'utf-8'",
        "'https://'",
        "'/api/system/v1/auth/login'",
        "\"Authorization\"",
        "\"Basic %s\"",
        "\"Content-Type\"",
        "\"application/json\"",
        "\"success\"",
        "\"Please check the data you entered again\"",
        "\"error\"",
        "\"Timeout Error:\"",
        "\"Error Connecting:\"",
        "\"Http Error:\"",
        "\"Oops: Something Else\"",
        "'Set-Cookie'",
        "\";\"",
        "\"=\"",
        "'X-JWT-ACCESS-TOKEN'",
        "'https://'",
        "'/api/v1/network-device-poller/cli/read-request'",
        "\"POLL:\"",
        "\"\\n\"",
        "'errorCode'",
        "\"error\"",
        "\"Timeout Error:\"",
        "\"Error Connecting:\"",
        "\"Http Error:\"",
        "\"Oops: Something Else\"",
        "r'taskId\":\"([a-zA-z0-9-]+)\"'",
        "'https://'",
        "'/api/v1/task/'",
        "\"\\n TASK:\"",
        "r'fileId\\\\\":\\\\\"([a-zA-Z0-9-]+)\\\\'",
        "\"error\"",
        "\"Timeout Error:\"",
        "\"Error Connecting:\"",
        "\"Http Error:\"",
        "\"Oops: Something Else\"",
        "'https://'",
        "'/api/v1/file/%s'",
        "\"Timeout Error:\"",
        "\"Error Connecting:\"",
        "\"Http Error:\"",
        "\"Oops: Something Else\"",
        "'https://'",
        "'/api/v1/file/%s'",
        "\"Timeout Error:\"",
        "\"Error Connecting:\"",
        "\"Http Error:\"",
        "\"Oops: Something Else\"",
        "'commandResponses'",
        "'SUCCESS'",
        "\"error\"",
        "'commandResponses'",
        "'SUCCESS'",
        "'sh vrf'",
        "\"VRFRESPONSE: \"",
        "\"\\n\"",
        "\"\\n\\s\\s([\\w+-]+)\\s+\"",
        "\"\\n VRF: \"",
        "\"\\n\"",
        "\"commands\"",
        "\"sh cts role-based sgt-map vrf %s all\"",
        "\"description\"",
        "\"string\"",
        "\"deviceUuids\"",
        "\"name\"",
        "\"string\"",
        "\"timeout\"",
        "\"error\"",
        "'https://'",
        "'/api/v1/file/%s'",
        "\"Timeout Error:\"",
        "\"Error Connecting:\"",
        "\"Http Error:\"",
        "\"Oops: Something Else\"",
        "\"commands\"",
        "\"sh cts role-based sgt-map all\"",
        "\"description\"",
        "\"string\"",
        "\"deviceUuids\"",
        "\"name\"",
        "\"string\"",
        "\"timeout\"",
        "\"error\"",
        "'https://'",
        "'/api/v1/file/%s'",
        "\"Timeout Error:\"",
        "\"Error Connecting:\"",
        "\"Http Error:\"",
        "\"Oops: Something Else\"",
        "\"\\n SGTRESP: \"",
        "'Active IPv4'",
        "''",
        "''",
        "''",
        "r'\\\\n(\\d*\\.\\d*\\.\\d*\\.\\d*/?\\d*?)\\s+(\\d+)'",
        "'0'",
        "\"SGT(LGT): \"",
        "''",
        "''",
        "''",
        "\"commands\"",
        "\"sh cts role-based permission to %s\"",
        "\"description\"",
        "\"string\"",
        "\"deviceUuids\"",
        "\"name\"",
        "\"string\"",
        "\"timeout\"",
        "\"error\"",
        "'https://'",
        "'/api/v1/file/%s'",
        "\"Timeout Error:\"",
        "\"Error Connecting:\"",
        "\"Http Error:\"",
        "\"Oops: Something Else\"",
        "r'IPv4 Role-based permissions from group ([a-zA-Z\\d]+)'",
        "'Unknown'",
        "'0'",
        "''",
        "''",
        "''",
        "\"IPv4\"",
        "r'\\(configured\\):'",
        "r'\\\\n\\\\t([\\w\\d -]+)'",
        "r'\\\\n\\\\t([\\w ]+)'",
        "\"DGT(RGT): \"",
        "\"\\n SGACL: \"",
        "\"\\n ACL: \"",
        "\"\\n\"",
        "\"commands\"",
        "'sh ip access-lists'",
        "\"description\"",
        "\"string\"",
        "\"deviceUuids\"",
        "\"name\"",
        "\"string\"",
        "\"timeout\"",
        "\"error\"",
        "'https://'",
        "'/api/v1/file/%s'",
        "'Role-based IP access list'",
        "\"ACLRESP : \"",
        "\"\\n\"",
        "\"Timeout Error:\"",
        "\"Error Connecting:\"",
        "\"Http Error:\"",
        "\"Oops: Something Else\"",
        "\"\\\\n\"",
        "''",
        "''",
        "' '",
        "r'\\d+\\s([a-z ]+)'",
        "\"ACLCONTENT:\"",
        "'https://'",
        "'/ers/config/egressmatrixcell?simple=yes&page=1'",
        "\"Authorization\"",
        "\"Basic %s\"",
        "\"Content-Type\"",
        "\"application/json\"",
        "\"Accept\"",
        "\"application/json\"",
        "\"Please check the data you entered again\"",
        "\"error\"",
        "\"SearchResult\"",
        "\"nextPage\"",
        "'rel'",
        "'next'",
        "\"SearchResult\"",
        "\"nextPage\"",
        "'href'",
        "\"Authorization\"",
        "\"Basic %s\"",
        "\"Content-Type\"",
        "\"application/json\"",
        "\"Accept\"",
        "\"application/json\"",
        "\"SearchResult\"",
        "\"nextPage\"",
        "\"\"",
        "\"\"",
        "'SearchResult'",
        "'resources'",
        "'id'",
        "\"Timeout Error:\"",
        "\"Error Connecting:\"",
        "\"Http Error:\"",
        "\"Oops: Something Else\"",
        "'https://'",
        "'/ers/config/egressmatrixcell/'",
        "\"Authorization\"",
        "\"Basic %s\"",
        "\"Content-Type\"",
        "\"application/json\"",
        "\"Accept\"",
        "\"application/json\"",
        "\"Timeout Error:\"",
        "\"Error Connecting:\"",
        "\"Http Error:\"",
        "\"Oops: Something Else\"",
        "'EgressMatrixCell'",
        "'sourceSgtId'",
        "'EgressMatrixCell'",
        "'destinationSgtId'",
        "'EgressMatrixCell'",
        "'sgacls'",
        "'https://'",
        "'/ers/config/sgt/'",
        "\"Authorization\"",
        "\"Basic %s\"",
        "\"Content-Type\"",
        "\"application/json\"",
        "\"Accept\"",
        "\"application/json\"",
        "\"Timeout Error:\"",
        "\"Error Connecting:\"",
        "\"Http Error:\"",
        "\"Oops: Something Else\"",
        "'https://'",
        "'/ers/config/sgacl/'",
        "\"Authorization\"",
        "\"Basic %s\"",
        "\"Content-Type\"",
        "\"application/json\"",
        "\"Accept\"",
        "\"application/json\"",
        "\"Timeout Error:\"",
        "\"Error Connecting:\"",
        "\"Http Error:\"",
        "\"Oops: Something Else\"",
        "'Sgacl'",
        "'name'",
        "'Sgacl'",
        "'aclcontent'",
        "\"\\n\"",
        "\"SGACL: \"",
        "\"ACLCONTENT: \"",
        "'https://'",
        "'/api/v1/network-device/count'",
        "\"response\"",
        "\"No of device: \"",
        "\"Timeout Error:\"",
        "\"Error Connecting:\"",
        "\"Http Error:\"",
        "\"Oops: Something Else\"",
        "'https://'",
        "'/api/v1/network-device/'",
        "\"Timeout Error:\"",
        "\"Error Connecting:\"",
        "\"Http Error:\"",
        "\"Oops: Something Else\"",
        "'response'",
        "\"type\"",
        "\"Wireless Controllers\"",
        "\"type\"",
        "\"Access Point\"",
        "\"errorCode\"",
        "'DEV-UNREACHED'",
        "\"instanceUuid\"",
        "\"type\"",
        "\"managementIpAddress\"",
        "\"in\"",
        "\"commands\"",
        "'sh cts role-based permission default'",
        "\"description\"",
        "\"string\"",
        "\"deviceUuids\"",
        "\"name\"",
        "\"string\"",
        "\"timeout\"",
        "\"error\"",
        "'https://'",
        "'/api/v1/file/%s'",
        "\"\\n DEFAULT RESP:\"",
        "\"Timeout Error:\"",
        "\"Error Connecting:\"",
        "\"Http Error:\"",
        "\"Oops: Something Else\"",
        "r'IPv4 Role-based permissions default:\\\\n\\\\t([a-zA-z _]+)-..'",
        "\"device%s\"",
        "\" matches\"",
        "\"device%s\"",
        "\" does not match\"",
        "\"Reading ISE Response\"",
        "\"error\"",
        "'Sgt'",
        "'value'",
        "'Sgt'",
        "'value'",
        "\"generating ISE dataframe\"",
        "'display.max_colwidth'",
        "'EgressMatrixCell'",
        "'EgressMatrixCell'",
        "'FALSE'",
        "'TRUE'",
        "'EgressMatrixCell'",
        "'name'",
        "'EgressMatrixCell'",
        "'defaultRule'",
        "'EgressMatrixCell'",
        "'defaultRule'",
        "'description'",
        "'link'",
        "'matrixCellStatus'",
        "'defaultRule'",
        "'destinationSgtId'",
        "'id'",
        "'name'",
        "'sgacls-id'",
        "'sourceSgtId'",
        "'destinationSgtId'",
        "'id'",
        "'sgacls-id'",
        "'sourceSgtId'",
        "'sgtval'",
        "'dgtval'",
        "\"sgaclval\"",
        "\"aclcont\"",
        "\"defaultRule\"",
        "\"name\"",
        "\"sgtval\"",
        "\"dgtval\"",
        "\"sgacl\"",
        "\"aclcont\"",
        "'aclcont'",
        "'aclcont'",
        "\"first\"",
        "'sgaclval'",
        "'aclcont'",
        "'sgaclval'",
        "'sgaclval'",
        "'aclcont'",
        "'aclcont'",
        "\"first\"",
        "\"defaultRule\"",
        "\"name\"",
        "\"sgtval\"",
        "\"dgtval\"",
        "\"sgacl\"",
        "\"aclcont\"",
        "\"first\"",
        "\"ISE\"",
        "'ise.csv'",
        "'name'",
        "'dgtval'",
        "\"ANY-ANY\"",
        "'sgaclval'",
        "\"Reading DNAC response\"",
        "\"error\"",
        "\"\\n\"",
        "\" DEVICE:\"",
        "\" : \"",
        "\"\\n\"",
        "\"Reading device \"",
        "\"commands\"",
        "\"show cts sxp connections\"",
        "\"show cts pac\"",
        "\"description\"",
        "\"string\"",
        "\"deviceUuids\"",
        "\"name\"",
        "\"string\"",
        "\"timeout\"",
        "\"error\"",
        "'Credential Lifetime'",
        "\"device%s\"",
        "\"No Information found\"",
        "\"\\\\n\"",
        "\"device%s\"",
        "r'\\\\n\\s(SXP)\\s+:\\s(\\w+)\\\\n'",
        "\"{0} : {1}\"",
        "\"device%s\"",
        "\"commands\"",
        "\"sh vrf\"",
        "\"description\"",
        "\"string\"",
        "\"deviceUuids\"",
        "\"name\"",
        "\"string\"",
        "\"timeout\"",
        "\"error\"",
        "''",
        "\"dgt list is emptyy\"",
        "\"device%s\"",
        "''",
        "\"device%s\"",
        "''",
        "\"device%s\"",
        "\"generating dataframe for device \"",
        "\"FINAL\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\n\"",
        "'display.max_colwidth'",
        "\"device%s\"",
        "'LGT'",
        "'RGT'",
        "'SGACL'",
        "'ACLCONT'",
        "\"device%s\"",
        "\"first\"",
        "\"device%s\"",
        "'LGT'",
        "'RGT'",
        "'SGACL'",
        "'ACLCONT'",
        "\"device%s\"",
        "'ACLCONT'",
        "\"device%s\"",
        "'ACLCONT'",
        "\"device%s\"",
        "\"first\"",
        "''",
        "\"device%s\"",
        "\"VRFNames\"",
        "\"sgtlst\"",
        "\"device%s\"",
        "\"device%s\"",
        "'VRFNames'",
        "\"device%s\"",
        "\"dgtlst\"",
        "\"device%s\"",
        "\"device%s\"",
        "\"device%s\"",
        "\"sgacllst\"",
        "\"device%s\"",
        "\"device%s\"",
        "\"acl\"",
        "\"device%s\"",
        "\"device%s\"",
        "\"device%s\"",
        "\"VRFNames\"",
        "\"LGT\"",
        "\"RGT\"",
        "\"SGACL\"",
        "\"ACLCONT\"",
        "\"device%s\"",
        "\"VRFNames\"",
        "\"device%s\"",
        "'SGACL'",
        "\"device%s\"",
        "'SGACL'",
        "\"device%s\"",
        "'RGT'",
        "\"device%s\"",
        "'RGT'",
        "\"device%s\"",
        "'ACLCONT'",
        "\"device%s\"",
        "'ACLCONT'",
        "\"device%s\"",
        "\"first\"",
        "\"device%s\"",
        "\"VRFNames\"",
        "\"iplist\"",
        "\"device%s\"",
        "\"device%s\"",
        "\"sgtvrf\"",
        "\"device%s\"",
        "\"device%s\"",
        "\"device%s\"",
        "\"VRFNames\"",
        "\"IP\"",
        "\"LGT\"",
        "\"device%s\"",
        "\"first\"",
        "'display.max_colwidth'",
        "\"Consistency check\"",
        "'display.max_colwidth'",
        "\"device%s\"",
        "\"device%s\"",
        "'dgtval'",
        "'DF'",
        "'name'",
        "'SGT'",
        "'DGT'",
        "'SGACL'",
        "'ACL_ISE'",
        "'DF'",
        "'name'",
        "\"DGT\"",
        "\"SGT\"",
        "\"SGACL\"",
        "\"ACL_ISE\"",
        "'SGT'",
        "\"ISE\"",
        "\"device%s\"",
        "\"device%s\"",
        "'LGT'",
        "'DGT'",
        "'SGT'",
        "'SGACL'",
        "'ACL_device'",
        "'SGT'",
        "\"Network device\"",
        "'SGT'",
        "'SGT'",
        "'DGT'",
        "'DGT'",
        "\"DGT\"",
        "\"SGT\"",
        "\"SGACL\"",
        "'outer'",
        "\"1.DGT\"",
        "\"2.SGT\"",
        "\"3.SGACL\"",
        "\"4.ACL_ISE\"",
        "\"5.ACL_Device\"",
        "'records'",
        "\"device%s\"",
        "\"device%s\"",
        "\"device \"",
        "\"device%s\"",
        "'LGT'",
        "\"device%s\"",
        "'RGT'",
        "\"device%s\"",
        "'SGACL'",
        "\"device%s\"",
        "'ACLCONT'",
        "''",
        "'dgtval'",
        "'dgtval'",
        "'sgtval'",
        "'sgaclval'",
        "'aclcont'",
        "\"final\"",
        "'0'",
        "\"policy 'unknown' download okay\"",
        "\"policy %s download okay\"",
        "''",
        "'0'",
        "\"policy 'unknown' download not okay as these acl's are missing: {}\"",
        "\"policy 'unknown' download not okay as these acl's are missing: {}\"",
        "\"policy {} download not okay as these acl's are missing: {}\"",
        "\"policy {} download not okay as these acl's are missing: {}\"",
        "'0'",
        "\"policy 'unknown' download not okay as these remote group tags (source) are missing: {}\"",
        "\"policy 'unknown' download not okay as these remote group tags (source) are missing: {}\"",
        "\"policy {} download not okay as these remote group tags (source) are missing: {}\"",
        "\"policy {} download not okay as these remote group tags (source) are missing: {}\"",
        "'0'",
        "\"policy 'unknown' download not okay as {} local group tag (dest) is missing\"",
        "\"policy 'unknown' download not okay as {} local group tag (dest) is missing\"",
        "\"policy {} download not okay as {} local group tag (dest) is missing\"",
        "\"policy {} download not okay as {} local group tag (dest) is missing\"",
        "\"device%s\"",
        "\"device%s\"",
        "\"success\"",
        "\"device%s\"",
        "\"failed\"",
        "\"Generating PDF\"",
        "'normal'",
        "'F1'",
        "\"Registers TOC entries.\"",
        "'Paragraph'",
        "'Heading1'",
        "'Heading2'",
        "'_bookmarkName'",
        "'TOCEntry'",
        "'centered'",
        "'Heading1'",
        "'Helvetica-Bold'",
        "'Heading2'",
        "'Helvetica-Bold'",
        "'<b>Table of contents</b>'",
        "'Times-Bold'",
        "'TOCHeading1'",
        "'TOCHeading2'",
        "'utf-8'",
        "'<a name=\"%s\"/>'",
        "'Normal'",
        "'Helvetica-Bold'",
        "'Normal'",
        "'Helvetica'",
        "'defaultRule'",
        "'name'",
        "'sgtval'",
        "'dgtval'",
        "'sgacl'",
        "'aclcont'",
        "'GRID'",
        "'TEXTCOLOR'",
        "'FONTNAME'",
        "'Helvetica-Bold'",
        "\"ISE\"",
        "\"device%s\"",
        "\"home\"",
        "'type'",
        "\"Management IP Address: %s\"",
        "'managementIpAddress'",
        "\"ISE\"",
        "'DGT'",
        "'SGT'",
        "'SGACL_ISE'",
        "'ACL_ISE'",
        "'GRID'",
        "'TEXTCOLOR'",
        "'FONTNAME'",
        "'Helvetica-Bold'",
        "\"Network Device(from DNAC)\"",
        "'VRFNames'",
        "'IP'",
        "'LGT'",
        "'GRID'",
        "'TEXTCOLOR'",
        "'FONTNAME'",
        "'Helvetica-Bold'",
        "'LGT'",
        "'RGT'",
        "'SGACL'",
        "'ACLCONT'",
        "'GRID'",
        "'TEXTCOLOR'",
        "'FONTNAME'",
        "'Helvetica-Bold'",
        "\"Consistency checker information\"",
        "'DGT'",
        "'SGT'",
        "'SGACL'",
        "'ACL_ISE'",
        "'ACL_Device'",
        "'5.ACL_Device'",
        "'4.ACL_ISE'",
        "'GRID'",
        "'TEXTCOLOR'",
        "'FONTNAME'",
        "'Helvetica-Bold'",
        "'BACKGROUND'",
        "'BACKGROUND'",
        "'4.ACL_ISE'",
        "'5.ACL_Device'",
        "'4.ACL_ISE'",
        "'5.ACL_Device'",
        "'BACKGROUND'",
        "'table.pdf'",
        "\"table.pdf is ready to view\""
    ],
    "variables": [
        "f",
        "y",
        "debug",
        "debug",
        "debug",
        "ise_ip",
        "ise_un",
        "ise_pw",
        "dnac_ip",
        "dnac_un",
        "dnac_pw",
        "encodedvalue",
        "b64Val",
        "r",
        "a",
        "b",
        "c",
        "cookie",
        "r",
        "pattern",
        "match",
        "pattern",
        "match",
        "task_id",
        "r",
        "pattern",
        "match",
        "file_id",
        "r",
        "r",
        "json_data",
        "output",
        "vrfnames",
        "vrfnames",
        "responses",
        "body",
        "task_id",
        "file_id",
        "task_id",
        "file_id",
        "r",
        "body",
        "task_id",
        "file_id",
        "task_id",
        "file_id",
        "r",
        "sgtlist",
        "sgtvrf",
        "iplist",
        "sgt",
        "ips",
        "pattern",
        "match",
        "sgt",
        "dgtlist",
        "sgacllist",
        "acllist",
        "dgt",
        "sgacl",
        "acl",
        "body",
        "task_id",
        "file_id",
        "task_id",
        "file_id",
        "sgacl1",
        "acl1",
        "r",
        "res",
        "res",
        "n",
        "res2",
        "sgacl1",
        "acl1",
        "res3",
        "res4",
        "res5",
        "aclcontlist",
        "body",
        "task_id",
        "file_id",
        "task_id",
        "file_id",
        "r",
        "l",
        "x",
        "z",
        "aclcontlist",
        "aclcont1",
        "aclcont",
        "match",
        "res1",
        "pos",
        "res",
        "j",
        "ids",
        "repos",
        "r",
        "json_data",
        "url",
        "r",
        "json_data",
        "x",
        "x",
        "responses",
        "r",
        "json_data",
        "sgtid",
        "dgtid",
        "sgaclid",
        "gtresp",
        "r",
        "json_data",
        "sgaclresp",
        "responses",
        "r",
        "json_data",
        "sgaclvallist",
        "aclcontlist",
        "sgaclval",
        "aclcont",
        "x",
        "k",
        "r",
        "json_data",
        "count",
        "r",
        "obj",
        "deviceid",
        "device",
        "mipaddr",
        "devinfo",
        "x",
        "esc",
        "esc1",
        "defaultperm",
        "body",
        "task_id",
        "file_id",
        "task_id",
        "file_id",
        "r",
        "res",
        "success",
        "unknwnval",
        "un",
        "pw",
        "ip",
        "b64Val",
        "ids",
        "ids",
        "success",
        "responses",
        "responses",
        "sgtid",
        "dgtid",
        "sgaclid",
        "sgtid",
        "dgtid",
        "sgaclid",
        "sgtresp",
        "sgtresp",
        "dgtresp",
        "dgtresp",
        "dgtval",
        "sgtval",
        "sgaclval",
        "aclcont",
        "sgaclval",
        "aclcont",
        "df",
        "df1",
        "df",
        "name",
        "defaultRule",
        "df",
        "columns",
        "df",
        "df",
        "df1",
        "res",
        "index",
        "x",
        "list_flat",
        "list_index",
        "dataframe",
        "df1",
        "x",
        "list_flat",
        "list_index",
        "dataframe",
        "df1",
        "df1",
        "columns",
        "df1",
        "df",
        "df",
        "df",
        "df",
        "final_list",
        "df2",
        "j",
        "j",
        "defaultval",
        "defperm",
        "defperm",
        "unknwnval",
        "success",
        "un",
        "pw",
        "ip",
        "b64Val",
        "cookie",
        "success",
        "deviceid",
        "devicenames",
        "mipaddr",
        "count",
        "devinfo",
        "count",
        "dfa",
        "dfa1",
        "dfa2",
        "dfa3",
        "exist",
        "pacinfo",
        "sxpinfo",
        "sgtbig",
        "dgtbig",
        "DEVICES",
        "count",
        "body",
        "task_id",
        "file_id",
        "task_id",
        "file_id",
        "output",
        "l",
        "output",
        "out1",
        "pattern",
        "match",
        "sxp",
        "defaultperm",
        "body",
        "task_id",
        "file_id",
        "task_id",
        "file_id",
        "vrfnames",
        "sgtlst",
        "iplist",
        "sgtvrf",
        "dgtlst",
        "sgacllst",
        "aclcontlst",
        "acl",
        "final_list",
        "dfa2",
        "final_list",
        "dfa3",
        "dfa",
        "x",
        "list_flat",
        "list_index",
        "dataframe",
        "dfa",
        "x",
        "list_flat",
        "list_index",
        "dataframe",
        "dfa",
        "x",
        "list_flat",
        "list_index",
        "dataframe",
        "dfa",
        "x",
        "list_flat",
        "list_index",
        "dataframe",
        "dfa",
        "columns",
        "dfa1",
        "x",
        "list_flat",
        "list_index",
        "dataframe",
        "dfa1",
        "x",
        "list_flat",
        "list_index",
        "dataframe",
        "dfa1",
        "columns",
        "output1",
        "output2",
        "res",
        "res1",
        "d",
        "b",
        "df_temp",
        "df_temp",
        "columns",
        "columnsTitles",
        "df_temp",
        "df_temp",
        "df_temp",
        "df_temp1",
        "df_temp1",
        "columns",
        "df_temp1",
        "df_temp1",
        "df_temp1",
        "df_final1",
        "df_final1",
        "columns",
        "di",
        "table",
        "j",
        "j",
        "table",
        "out1",
        "success",
        "yes",
        "match",
        "match",
        "b",
        "c",
        "d",
        "f",
        "g",
        "h",
        "k",
        "l",
        "f",
        "g",
        "h",
        "f",
        "g",
        "h",
        "b",
        "c",
        "d",
        "match1",
        "match1",
        "match1",
        "match1",
        "allowSplitting",
        "template",
        "text",
        "style",
        "level",
        "level",
        "E",
        "bn",
        "centered",
        "h1",
        "h2",
        "element",
        "toc",
        "toc",
        "levelStyles",
        "bn",
        "h",
        "h",
        "_bookmarkName",
        "PS",
        "style",
        "style1",
        "a",
        "li",
        "b",
        "p",
        "t1",
        "j",
        "li",
        "b",
        "a",
        "p",
        "t2",
        "a",
        "li",
        "b",
        "p",
        "t3",
        "a",
        "li",
        "b",
        "p",
        "t4",
        "li",
        "b",
        "s",
        "dfb",
        "dfb1",
        "a",
        "p",
        "t5",
        "doc"
    ],
    "comments": [
        "package required to make api calls",
        "packages required for handling large data",
        "package imoported to implement sleep function",
        "package for regex",
        "package to covert string into list",
        "package required to suppress warnings about not having SSL certificate verification",
        "command to suppress warning",
        "encoding for the request to authorize access to the DNAC instance",
        "to get token",
        "print(r.status_code)",
        "checking for correct username and password",
        "error handling",
        "to extract the cookie",
        "print(cookie)",
        "to get task id",
        "checking if poller request was not successful",
        "error handling",
        "to extract task id",
        "to get file id",
        "to extract file-id",
        "when proper file-id is not generated return error",
        "error handling",
        "return file-id",
        "print(\"FILEID: \",file_id,\"\\n\")",
        "Function to get pac and sxp info",
        "print(repr(r.text))",
        "error handling",
        "to get vrfnames",
        "print(repr(r.text))",
        "error handling",
        "Extracting vrf names",
        "to remove 'name' from vrfnames list",
        "to get sgts(local group tags LTGs) and iplist",
        "print(task_id)",
        "print(file_id)",
        "print(repr(r.text))",
        "error handling",
        "Global sgt response",
        "print(task_id)",
        "print(file_id)",
        "print(\"SGTGLOBAL:\",r.text)",
        "error handling",
        "print(\"\\n SGTRESP: \",responses)",
        "list of sgt's",
        "list of sgt's to display in vrf dataframe",
        "list of ip's",
        "extracting sgt's and ip's",
        "print(match)",
        "to remove duplicate sgts",
        "print(sgt)",
        "Unknown sgt is 0",
        "to get dgtlist, sgacllist and acllist",
        "print(task_id)",
        "print(file_id)",
        "print(repr(r.text))",
        "error handling",
        "extracting dgt, sgacl and acl",
        "print(repr(r.text))",
        "extracting dgts",
        "print(i)",
        "skip if configured is found",
        "print(res3)",
        "exctracting acl",
        "print(res4)",
        "extracting sgacl",
        "print(res5)",
        "print(dgt,sgacl,acl)",
        "to extract aclcontent",
        "print(task_id)",
        "print(type(file_id))",
        "print(file_id)",
        "json_data = json.loads(r.text)",
        "error handling",
        "print(acllist)",
        "print(\"1\",el)",
        "print(\"2\",el1)",
        "print(\"3\",el2)",
        "print(\"4\",el3)",
        "print(res)",
        "print(\"0:\",res1)",
        "print(\"3:\",match)",
        "print(\"2:\",aclcont)",
        "print(\"1:\",aclcont1)",
        "to get ISE egressmatrix cell ids",
        "print(r.text)",
        "print(type(r.text))",
        "print(r.status_code)",
        "checking for correct username and password",
        "checking for next page",
        "print(r.text)",
        "print(r)",
        "print(x)",
        "print(repos,len(repos))",
        "print(i)",
        "print(x)",
        "print(ids)",
        "Error handling",
        "to get egressmatrix cell responses",
        "print(element)",
        "error handling",
        "print(responses)",
        "to get sgtid,dgtid,sgaclid",
        "to get sgtresponse and dgtresponse",
        "print(r.text)",
        "error handling",
        "print(gtresp)",
        "to get sgacllist and aclcontentlist",
        "error handling",
        "print(j)",
        "print(sgaclval,aclcont)",
        "print(sgaclvallist)",
        "print(aclcontlist)",
        "to get network devices information",
        "error handling",
        "print(r.text)",
        "error handling",
        "to get default permissions",
        "list to store default permissions",
        "print(task_id)",
        "print(file_id)",
        "error handling",
        "print(r.text)",
        "print(res)",
        "============================================ISE=========================================================",
        "un = input(\"Enter the username of the ISE instance here: \")",
        "pw = input(\"Enter the password of the ISE instance here: \")",
        "ip = input(\"Enter the ***correct ip address of the ISE instance here: \")",
        "enter the username of the ISE instance here",
        "enter the password of the ISE instance here",
        "enter the ip address of the ISE instance here",
        "encoding for the request to authorize acces to the ISE instance",
        "print(b64Val)",
        "Calls https://ip/ers/config/egressmatrixcell and returns all the id's",
        "Calls https://ip/ers/config/egressmatrixcell/id and returns all the matrix cell responses",
        "Extracts sgt-id, dgt-id, and sgacl-id",
        "print(len(ids))",
        "print(len(responses))",
        "print(len(sgtid), len(dgtid), len(sgaclid))",
        "Calls https://ip/ers/config/sgt/sgtid to get sgt response",
        "Calls https://ip/ers/config/sgt/dgtid to get sgt response",
        "print(len(sgtresp),len(dgtresp))",
        "extracting DGT's",
        "extracting SGT's",
        "print(sgtval,dgtval)",
        "print(len(sgtval),len(dgtval))",
        "Calls https://ip/ers/config/sgacl/sgaclid and returns sgacl and aclcontent",
        "print(len(sgaclval),len(aclcont))",
        "print(sgaclval)",
        "print(aclcont)",
        "Create pandas dataframe for ISE and csv file apitable.csv",
        "to display complete data frame",
        "Removing columns that are not necessary",
        "renaming columns",
        "Removing columns that are not necessary",
        "adding sgtval column",
        "adding dgtval column",
        "print(df)",
        "function to flatten lists",
        "print(list_flat,list_index)",
        "print(list_flat,list_index)",
        "print(df1)",
        "print(df1)",
        "inorder to drop duplicates in dataframe lists have to converted to string for conversion",
        "print(df)",
        "print(b, c, d, e, f, g)",
        "print(f1, g1)",
        "if name \"ANY-ANY\" if found in ISE table check if default permissions of ISE and network devices match",
        "if DGT 0 is found in ISE table append 0 to sgtlist(lgt) of each network device",
        "===============================================DNAC=============================================================",
        "un = input(\"Enter the username of the DNAC instance here: \")",
        "pw = input(\"Enter the password of the DNAC instance here: \")",
        "ip = input(\"Enter the ip address of the DNAC instance here: \")",
        "enter the username of the DNAC instance here",
        "enter the password of the DNAC instance here",
        "enter the ip address of the DNAC instance here",
        "encoding for the request to authorize acces to the DNAC instance",
        "Calls https://ip/api/system/v1/auth/login and returns token",
        "Calls https://ip/api/v1/network-device/count and https://ip/api/v1/network-device to return device-ids' , device names, management IP addresses, no. of devices and device informations",
        "print(deviceid, devicenames, mipaddr, count)",
        "Variable to keep track of no of devices",
        "dictionary of data frame of each device",
        "to keep track of which device has a dataframe",
        "PAC Information",
        "SXP Connections Information",
        "list of sgts(LGT) of all devices",
        "list of dgts(RGT) of all devices",
        "to store device information",
        "Counter for no of devices",
        "To get Pac info and SXP info",
        "https://ip/api/v1/network-device-poller/cli/read-request  and returns task-id",
        "Giving some time so that dnac returns proper file-id.",
        "Calls https://ip/api/v1/task/task-id and returns file-id",
        "Calls https://ip/api/v1/file/file-id and returns response from which pac info and SXP info has to be parsed",
        "print(\"PAC AND SXP\", output)",
        "to extract pac info",
        "print(output)",
        "to extract SXP info",
        "print(match)",
        "check default permissions",
        "https://ip/api/v1/network-device-poller/cli/read-request  and returns task-id",
        "Giving some time so that dnac returns proper file-id output",
        "Calls https://ip/api/v1/task/task-id and returns file-id",
        "Calls https://ip/api/v1/file/file-id and we are extracting vrfnames from the response",
        "returns the sgt-list for every vrfname",
        "function to check if a list is empty",
        "print(isListEmpty(dgtlst))",
        "skip if dgt list is empty",
        "returns aclcont list",
        "print(acl)",
        "print(repr(type(e3)))",
        "print(dfa2)",
        "print(\"1\",b,c,d,e)",
        "print(\"2\",c1,d1,e1)",
        "print(\"3\",c2,d2,e2)",
        "print(dfa3[\"device%s\"%count])",
        "Create dataframe for all the data extracted from dnac",
        "print(list_flat,list_index)",
        "print (list_flat,list_index)",
        "print (list_flat,list_index)",
        "print(dfa[\"device%s\"%count])",
        "print (list_flat,list_index)",
        "print (dfa[\"device%s\"%count])",
        "function to return differences between 2 lists",
        "===================================Consistency check===========================================================",
        "print(exist)",
        "print(di)",
        "print(table)",
        "print(table)",
        "print(dfa[\"device%s\"%p]['LGT'])",
        "print(a,e)",
        "comparing LGT with dgt",
        "print(a,e)",
        "print(n)",
        "print(n)",
        "comapring current dgt value with outer loop dgt value and if it matches",
        "print(i,e,type(i))",
        "print(n)",
        "append all sgt, sgacl and aclcont that corresponds to dgt",
        "print(f,b,g,c,h,d)",
        "print(type(f),type(b),type(g),type(c),type(h),type(d))",
        "check if all sgt is there in device ie sgt==rgt",
        "check if all sgacl and aclcont is there in device ie sgacl==SGACL and acl==ACLCONT",
        "print(\"policy %s download okay\"%a)",
        "print(\"policy 'unknown' download okay\")",
        "print(\"policy %s download okay\"%a)",
        "if sgacl didnt match SGACL print the missing acls in SGACL",
        "if sgt didnt match rgt print missing sgt in rgt",
        "print(match)",
        "LGT wasnt found in dgt list at all",
        "================================to generate pdf===================================================",
        "if we have a bookmark name append that to our notify data",
        "toc.levelStyles = [h1, h2]",
        "create bookmarkname",
        "modify paragraph text to include an anchor point with name bn",
        "store the bookmark name on the flowable so afterFlowable can see this",
        "print(a)",
        "print(b)",
        "print(p)",
        "print(j)",
        "print(b)",
        "print(a)",
        "print(p)",
        "print(t2)",
        "print(a)",
        "print(b)",
        "print(p)",
        "print(t3)",
        "print(b)",
        "print(a)",
        "print(p)",
        "print(t5)"
    ],
    "docstrings": [],
    "functions": [
        "encoder",
        "auth",
        "poller",
        "task",
        "fileo",
        "vrf",
        "sgtlist",
        "sgtperm",
        "aclcontent",
        "egressconfig",
        "egressresp",
        "idsresp",
        "gtresponse",
        "sgaclresponse",
        "devices",
        "flat",
        "isListEmpty",
        "returnNotMatches",
        "isNaN",
        "afterFlowable",
        "doHeading"
    ],
    "classes": [
        "MyDocTemplate"
    ]
}