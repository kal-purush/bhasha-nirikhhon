{
    "identifiers": [
        "seedu",
        "address",
        "logic",
        "commands",
        "org",
        "junit",
        "Assert",
        "assertEquals",
        "org",
        "junit",
        "Assert",
        "assertFalse",
        "org",
        "junit",
        "Assert",
        "assertTrue",
        "seedu",
        "address",
        "commons",
        "core",
        "Messages",
        "MESSAGE_MEDICINES_LISTED_OVERVIEW",
        "seedu",
        "address",
        "logic",
        "commands",
        "CommandTestUtil",
        "assertCommandSuccess",
        "seedu",
        "address",
        "testutil",
        "TypicalMedicines",
        "ACETAMINOPHEN",
        "seedu",
        "address",
        "testutil",
        "TypicalMedicines",
        "LISINOPRIL",
        "seedu",
        "address",
        "testutil",
        "TypicalMedicines",
        "PREDNISONE",
        "seedu",
        "address",
        "testutil",
        "TypicalMedicines",
        "getTypicalInventory",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "Collections",
        "org",
        "junit",
        "Test",
        "seedu",
        "address",
        "logic",
        "CommandHistory",
        "seedu",
        "address",
        "model",
        "Model",
        "seedu",
        "address",
        "model",
        "ModelManager",
        "seedu",
        "address",
        "model",
        "UserPrefs",
        "seedu",
        "address",
        "model",
        "medicine",
        "NameContainsKeywordsPredicate",
        "model",
        "getTypicalInventory",
        "expectedModel",
        "getTypicalInventory",
        "commandHistory",
        "Test",
        "firstPredicate",
        "Collections",
        "singletonList",
        "secondPredicate",
        "Collections",
        "singletonList",
        "findFirstCommand",
        "firstPredicate",
        "findSecondCommand",
        "secondPredicate",
        "assertTrue",
        "findFirstCommand",
        "equals",
        "findFirstCommand",
        "findFirstCommandCopy",
        "firstPredicate",
        "assertTrue",
        "findFirstCommand",
        "equals",
        "findFirstCommandCopy",
        "assertFalse",
        "findFirstCommand",
        "equals",
        "assertFalse",
        "findFirstCommand",
        "equals",
        "assertFalse",
        "findFirstCommand",
        "equals",
        "findSecondCommand",
        "Test",
        "expectedMessage",
        "format",
        "MESSAGE_MEDICINES_LISTED_OVERVIEW",
        "predicate",
        "preparePredicate",
        "command",
        "predicate",
        "expectedModel",
        "updateFilteredMedicineList",
        "predicate",
        "assertCommandSuccess",
        "command",
        "model",
        "commandHistory",
        "expectedMessage",
        "expectedModel",
        "assertEquals",
        "Collections",
        "emptyList",
        "model",
        "getFilteredMedicineList",
        "Test",
        "expectedMessage",
        "format",
        "MESSAGE_MEDICINES_LISTED_OVERVIEW",
        "predicate",
        "preparePredicate",
        "command",
        "predicate",
        "expectedModel",
        "updateFilteredMedicineList",
        "predicate",
        "assertCommandSuccess",
        "command",
        "model",
        "commandHistory",
        "expectedMessage",
        "expectedModel",
        "assertEquals",
        "Arrays",
        "asList",
        "ACETAMINOPHEN",
        "LISINOPRIL",
        "PREDNISONE",
        "model",
        "getFilteredMedicineList",
        "userInput",
        "Arrays",
        "asList",
        "userInput",
        "split"
    ],
    "literals": [
        "\"first\"",
        "\"second\"",
        "\" \"",
        "\"Acetaminophen Lisinopril Prednisone\"",
        "\"\\\\s+\""
    ],
    "variables": [],
    "comments": [
        "same object -> returns true",
        "same values -> returns true",
        "different types -> returns false",
        "null -> returns false",
        "different medicine -> returns false"
    ],
    "docstrings": [
        "* Contains integration tests (interaction with the Model) for {@code FindCommand}.",
        "* Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}."
    ],
    "functions": [
        "equals",
        "execute_zeroKeywords_noMedicineFound",
        "execute_multipleKeywords_multipleMedicinesFound",
        "NameContainsKeywordsPredicate",
        "preparePredicate"
    ],
    "classes": [
        "FindCommandTest"
    ]
}