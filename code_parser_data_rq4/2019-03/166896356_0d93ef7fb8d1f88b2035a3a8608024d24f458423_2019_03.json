{
    "identifiers": [
        "bisect",
        "bisect_right",
        "itertools",
        "islice",
        "dwavebinarycsp",
        "dbc",
        "dwave",
        "system",
        "samplers",
        "DWaveSampler",
        "dwave",
        "system",
        "composites",
        "EmbeddingComposite",
        "neal",
        "SimulatedAnnealingSampler",
        "args",
        "sum",
        "args",
        "job",
        "position",
        "machine",
        "timeSpan",
        "job",
        "position",
        "machine",
        "timeSpan",
        "job",
        "pos",
        "mach",
        "span",
        "join",
        "job",
        "pos",
        "mach",
        "span",
        "taskStr",
        "array",
        "keyFn",
        "array",
        "keyFn",
        "len",
        "array",
        "index",
        "array",
        "index",
        "keyFn",
        "item",
        "key",
        "jobDict",
        "maxTime",
        "maxTime",
        "dbc",
        "ConstraintSatisfactionProblem",
        "dbc",
        "BINARY",
        "_processData",
        "jobDict",
        "jobs",
        "jName",
        "jTasks",
        "jobs",
        "items",
        "i",
        "machine",
        "timeSpan",
        "jTasks",
        "tasks",
        "append",
        "jName",
        "i",
        "machine",
        "timeSpan",
        "totalTime",
        "timeSpan",
        "tasks",
        "maxTime",
        "totalTime",
        "task",
        "time",
        "task",
        "job",
        "task",
        "pos",
        "name",
        "time",
        "task",
        "tasks",
        "_getLabel",
        "task",
        "t",
        "t",
        "xrange",
        "maxTime",
        "csp",
        "add_constraint",
        "sumToOne",
        "taskTimes",
        "i",
        "cTask",
        "tasks",
        "tasks",
        "i",
        "cTask",
        "job",
        "nTask",
        "job",
        "t",
        "xrange",
        "maxTime",
        "_getLabel",
        "cTask",
        "t",
        "tt",
        "xrange",
        "min",
        "t",
        "cTask",
        "span",
        "maxTime",
        "_getLabel",
        "nTask",
        "tt",
        "csp",
        "add_constraint",
        "validEdges",
        "cLabel",
        "nLabel",
        "sorted",
        "tasks",
        "key",
        "x",
        "x",
        "mach",
        "KeyList",
        "sortedTasks",
        "x",
        "x",
        "mach",
        "head",
        "len",
        "sortedTasks",
        "bisect_right",
        "wrappedTasks",
        "sortedTasks",
        "head",
        "mach",
        "sortedTasks",
        "head",
        "tail",
        "tail",
        "len",
        "sameMachTasks",
        "task",
        "sameMachTasks",
        "otherTask",
        "sameMachTasks",
        "task",
        "job",
        "otherTask",
        "job",
        "task",
        "pos",
        "otherTask",
        "pos",
        "t",
        "xrange",
        "maxTime",
        "_getLabel",
        "task",
        "t",
        "tt",
        "xrange",
        "t",
        "min",
        "t",
        "task",
        "span",
        "maxTime",
        "csp",
        "add_constraint",
        "validValues",
        "currLabel",
        "_getLabel",
        "otherTask",
        "tt",
        "task",
        "tasks",
        "t",
        "xrange",
        "task",
        "pos",
        "_getLabel",
        "task",
        "t",
        "csp",
        "fix_variable",
        "label",
        "t",
        "xrange",
        "task",
        "span",
        "_getLabel",
        "task",
        "maxTime",
        "t",
        "csp",
        "fix_variable",
        "label",
        "_addOneStartConstraint",
        "_addPrecedenceConstraint",
        "_addShareMachineConstraint",
        "_removeAbsurdTimes",
        "dbc",
        "stitch",
        "csp",
        "EmbeddingComposite",
        "DWaveSampler",
        "sampler",
        "sample",
        "bqm",
        "num_reads",
        "response",
        "csp",
        "JobShopScheduler",
        "jobs",
        "maxTime",
        "scheduler",
        "solve",
        "sample",
        "energy",
        "nOccurences",
        "islice",
        "response",
        "data",
        "nSamples",
        "energy",
        "csp",
        "check",
        "sample",
        "key",
        "sorted",
        "sample",
        "keys",
        "key",
        "sample",
        "key",
        "demo"
    ],
    "literals": [
        "\"job: \"",
        "\"pos: \"",
        "\"mach: \"",
        "\"span: \"",
        "\", \"",
        "\"{\"",
        "\"}\"",
        "\"_\"",
        "\",\"",
        "\"j0\"",
        "\"j1\"",
        "\"j2\"",
        "\"energy: \"",
        "\"check: \"",
        "\": \"",
        "\"\"",
        "\"__main__\""
    ],
    "variables": [
        "job",
        "pos",
        "mach",
        "span",
        "job",
        "pos",
        "mach",
        "span",
        "taskStr",
        "array",
        "keyFn",
        "item",
        "key",
        "tasks",
        "maxTime",
        "csp",
        "tasks",
        "totalTime",
        "tasks",
        "maxTime",
        "name",
        "taskTimes",
        "validEdges",
        "nTask",
        "cLabel",
        "nLabel",
        "sortedTasks",
        "wrappedTasks",
        "head",
        "validValues",
        "tail",
        "sameMachTasks",
        "head",
        "currLabel",
        "label",
        "label",
        "bqm",
        "sampler",
        "response",
        "jobs",
        "nSamples",
        "maxTime",
        "scheduler",
        "response",
        "csp"
    ],
    "comments": [
        "TODO: could do better a differentiating strings and numbers",
        "An iterable",
        "Function for grabbing the key of a given item",
        "TODO: put asserts to validate jobs",
        "Populates self.tasks and self.maxTime",
        "Create and concatenate Task objects",
        "total time of all jobs",
        "Update values",
        "Forming constraints with the relevant times of the next task",
        "Key wrapper",
        "Find tasks that share a machine",
        "Update",
        "No need to build coupling for a single task",
        "Apply constraint between all tasks for each unit of time",
        "TODO: deal with overlaps in time",
        "Times that are too early for task",
        "Times that are too late for task to complete",
        "-1 to ignore span==1",
        "-1 for zero-indexed time",
        "Apply constraints to self.csp",
        "Get BQM",
        "Sample",
        "sampler = SimulatedAnnealingSampler()",
        "Solve JSS",
        "Assumes that there are no tasks with non-positive processing times.",
        "Print response"
    ],
    "docstrings": [
        "\"\"\" A wrapper to an array. Used for passing the key of a custom object\n\tto the bisect function.\n\n\tNote: bisect function does not let you choose an artbitrary key, hence\n\tthis class was created.\n\t\"\"\"",
        "\"\"\" Process user input into a format that is more convenient for\n\t\tJobShopScheduler functions.\n\t\t\"\"\"",
        "\"\"\" Creates a standardized name for variables in the constraint\n\t\tsatisfaction problem, self.csp.\n\t\t\"\"\"",
        "\"\"\" self.csp gets the constraint: A task can start once and only once\n\t\t\"\"\"",
        "\"\"\" self.csp gets the constraint: Task must follow a particular order\n\t\tNote: assumes self.tasks are sorted by jobs and then by position\n\t\t\"\"\"",
        "\"\"\" self.csp gets the constraint: At most one task per machine per time\n\t\t\"\"\"",
        "\"\"\" Sets impossible task times in self.csp to 0.\n\t\t\"\"\"",
        "\"\"\" Returns a response to the Job Shop Scheduling problem.\n\t\t\"\"\""
    ],
    "functions": [
        "sumToOne",
        "__str__",
        "__len__",
        "__getitem__",
        "_processData",
        "_getLabel",
        "_addOneStartConstraint",
        "_addPrecedenceConstraint",
        "_addShareMachineConstraint",
        "_removeAbsurdTimes",
        "solve",
        "demo"
    ],
    "classes": [
        "KeyList",
        "JobShopScheduler"
    ]
}