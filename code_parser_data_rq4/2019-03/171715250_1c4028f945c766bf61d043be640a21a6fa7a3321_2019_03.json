{
    "identifiers": [
        "org",
        "team5",
        "app",
        "main",
        "org",
        "team5",
        "app",
        "dataprocessing",
        "CSVReader",
        "org",
        "team5",
        "app",
        "dataprocessing",
        "DataPoint",
        "java",
        "util",
        "concurrent",
        "BlockingQueue",
        "csvFilePath",
        "buffer",
        "buffer",
        "csvFilePath",
        "csvFilePath",
        "csvFilePath",
        "buffer",
        "buffer",
        "Override",
        "reader",
        "csvFilePath",
        "i",
        "i",
        "reader",
        "dataPoints",
        "size",
        "i",
        "buffer",
        "put",
        "reader",
        "dataPoints",
        "get",
        "i",
        "reader",
        "dataPoints",
        "get",
        "i",
        "getValue",
        "e",
        "e",
        "printStackTrace",
        "buffer",
        "size",
        "buffer",
        "take",
        "e",
        "e",
        "printStackTrace"
    ],
    "literals": [
        "\"InputThread running\"",
        "\"Put message rate \"",
        "\"InputThread exiting\"",
        "\"Buffer size: \""
    ],
    "variables": [
        "csvFilePath",
        "buffer"
    ],
    "comments": [
        "Start queueing up the message rate in a separate thread"
    ],
    "docstrings": [
        "* @param buffer the blocking queue buffer that holds message rates per time\n     * @param csvFilePath path to the csv file to be read",
        "* This thread reads the message rates into a blocking queue buffer.\n     * A BlockingQueue is a queue that additionally supports operations that wait for\n     * the queue to become non-empty when retrieving an element, and wait for space to become available\n     * in the queue when storing an element.\n     * <p>\n     * When an object implementing interface <code>Runnable</code> is used\n     * to create a thread, starting the thread causes the object's\n     * <code>run</code> method to be called in that separately executing\n     * thread."
    ],
    "functions": [
        "InputThread",
        "run",
        "checkSize",
        "DataPoint",
        "remove"
    ],
    "classes": [
        "InputThread"
    ]
}