{
    "identifiers": [
        "Collections",
        "Generic",
        "Diagnostics",
        "IO",
        "Runtime",
        "Serialization",
        "Runtime",
        "Serialization",
        "Formatters",
        "Binary",
        "Text",
        "Threading",
        "Threading",
        "Tasks",
        "Newtonsoft",
        "Json",
        "Westwind",
        "Utilities",
        "WebSurge",
        "RequestWriterBase",
        "HttpRequestData",
        "HttpRequestData",
        "StressTester",
        "tester",
        "tester",
        "Process",
        "GetCurrentProcess",
        "Id",
        "TempFolderName",
        "Path",
        "Combine",
        "Path",
        "GetTempPath",
        "name",
        "Directory",
        "Delete",
        "TempFolderName",
        "Directory",
        "CreateDirectory",
        "TempFolderName",
        "StringUtils",
        "Replicate",
        "JsonSerializationUtils",
        "CreateJsonNet",
        "HttpRequestData",
        "result",
        "result",
        "IsError",
        "RequestsProcessed",
        "result",
        "ResponseContent",
        "_stressTester",
        "Options",
        "CaptureMinimalResponseData",
        "result",
        "Headers",
        "result",
        "ResponseHeaders",
        "result",
        "FullRequest",
        "result",
        "RequestContent",
        "InsertLock",
        "Results",
        "Add",
        "result",
        "RequestsProcessed",
        "result",
        "IsError",
        "RequestsFailed",
        "Results",
        "Count",
        "MaxCollectionItems",
        "FileCount",
        "savedCount",
        "FileCount",
        "writeOut",
        "Results",
        "Results",
        "HttpRequestData",
        "writeOut",
        "ThreadPool",
        "QueueUserWorkItem",
        "parm",
        "FileWriteParms",
        "parm",
        "Path",
        "Combine",
        "TempFolderName",
        "BaseFilename",
        "parms",
        "FileCount",
        "FileStream",
        "file",
        "FileMode",
        "CreateNew",
        "FileAccess",
        "Write",
        "StreamWriter",
        "Stream",
        "fileStream",
        "Encoding",
        "UTF8",
        "JsonTextWriter",
        "TextWriter",
        "streamWriter",
        "jsonTextWriter",
        "QuoteChar",
        "jsonNet",
        "Serialize",
        "JsonWriter",
        "jsonTextWriter",
        "parms",
        "Requests",
        "FileWriteParms",
        "FileCount",
        "savedCount",
        "Requests",
        "savedResults",
        "HttpRequestData",
        "FileCount",
        "Results",
        "HttpRequestData",
        "EnsureFileExists",
        "Path",
        "Combine",
        "TempFolderName",
        "FileCount",
        "Directory",
        "GetFiles",
        "Path",
        "Combine",
        "TempFolderName",
        "SearchOption",
        "TopDirectoryOnly",
        "file",
        "files",
        "EnsureFileExists",
        "file",
        "JsonSerializationUtils",
        "DeserializeFromFile",
        "file",
        "HttpRequestData",
        "HttpRequestData",
        "reqs",
        "AddRange",
        "reqs",
        "AddRange",
        "Results",
        "file",
        "x",
        "FileStream",
        "file",
        "FileMode",
        "Open",
        "FileAccess",
        "Read",
        "Sleep",
        "Directory",
        "Exists",
        "TempFolderName",
        "Directory",
        "Delete",
        "TempFolderName",
        "FileWriteParms",
        "HttpRequestData"
    ],
    "literals": [
        "\"WebSurgeRequests_\"",
        "\"WebSurge_\"",
        "\".json\"",
        "\"WebSurgeRequests_\"",
        "\".json\"",
        "\"WebSurgeRequests_*.json\""
    ],
    "variables": [
        "TempFolderName",
        "_Results",
        "ResultsList",
        "FileCount",
        "BaseFilename",
        "InsertLock",
        "name",
        "LongString",
        "JsonSerializer",
        "jsonNet",
        "writeOut",
        "savedResults",
        "Results",
        "savedCount",
        "FileWriteParms",
        "parms",
        "file",
        "FileStream",
        "fileStream",
        "StreamWriter",
        "streamWriter",
        "JsonTextWriter",
        "jsonTextWriter",
        "files",
        "x",
        "reqs",
        "yx",
        "x",
        "fstream",
        "MaxCollectionItems",
        "Requests",
        "FileCount"
    ],
    "comments": [
        "Writes values into a collection until it reaches a certain size and t",
        "writes out to a file as serialization. Retrieving the collection",
        "reconstructs the collection.",
        "</summary>",
        "don't log request detail data for non errors over a certain no of requests",
        "always clear response",
        "detail data only if we explicitly requested",
        "Console.WriteLine();",
        "Console.WriteLine(\"QUWI Thread: \" + Thread.CurrentThread.ManagedThreadId);",
        "JsonSerializationUtils.SerializeToFile(parms.Requests, file, false);",
        "SerializationUtils.SerializeObject(parms.Requests, file, true);",
        "if(ResultsList == null)",
        "ResultsList = new List<List<HttpRequestData>>();",
        "ResultsList.Add(parms.Requests);",
        "ResultsList.Add(null);",
        "ResultsList[ResultsList.Count-1] = parms.Requests;",
        "var r = parms.Requests;",
        "Console.WriteLine(\"Queued Item \" + parms.FileCount  + \" \" + r.Count);",
        "IFormatter formatter = new BinaryFormatter();",
        "Stream stream = new FileStream(file, FileMode.Create, FileAccess.Write, FileShare.None);",
        "formatter.Serialize(stream, parms.Requests);",
        "stream.Close();",
        "Console.WriteLine(\"Queue Use Worker Item time: \" + swatch.ElapsedTicks.ToString(\"N0\") + \" \" + Thread.CurrentThread.ManagedThreadId);",
        "Retrieves results from various request files",
        "</summary>",
        "<returns></returns>",
        "try to open the file for reading",
        "Explicitly remove the temp folder",
        "</summary>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "FileCollectionRequestWriter",
        "Write",
        "GetResults",
        "EnsureFileExists",
        "Dispose"
    ],
    "classes": [
        "FileCollectionRequestWriter"
    ]
}