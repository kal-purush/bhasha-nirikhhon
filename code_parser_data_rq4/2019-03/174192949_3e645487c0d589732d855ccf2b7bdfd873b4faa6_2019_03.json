{
    "identifiers": [
        "numpy",
        "np",
        "pandas",
        "pd",
        "matplotlib",
        "pyplot",
        "plt",
        "skimage",
        "filters",
        "os",
        "scipy",
        "ndimage",
        "sys",
        "img",
        "percentile",
        "normalize",
        "np",
        "copy",
        "img",
        "img_",
        "np",
        "percentile",
        "img_",
        "percentile",
        "np",
        "percentile",
        "img_",
        "percentile",
        "normalize",
        "img_",
        "img_",
        "max",
        "normalize",
        "img_",
        "ValueError",
        "txt_file",
        "preview_imgs",
        "cmap",
        "sys",
        "stdout",
        "write",
        "txt_file",
        "sys",
        "stdout",
        "flush",
        "pd",
        "read_csv",
        "txt_file",
        "sep",
        "init_import",
        "values",
        "init_import",
        "max",
        "init_import",
        "max",
        "init_array",
        "shape",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "flush",
        "x_size",
        "y_size",
        "init_array",
        "shape",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "flush",
        "os",
        "mkdir",
        "txt_file",
        "bad_shape",
        "y_size",
        "init_array",
        "shape",
        "x_size",
        "y_size",
        "init_array",
        "delta",
        "np",
        "reshape",
        "clipped",
        "y_size",
        "x_size",
        "z_size",
        "order",
        "i",
        "z_size",
        "sys",
        "stdout",
        "write",
        "format",
        "i",
        "z_size",
        "i",
        "z_size",
        "i",
        "i",
        "z_size",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "flush",
        "np",
        "save",
        "os",
        "path",
        "join",
        "txt_file",
        "init_import",
        "columns",
        "values",
        "i",
        "full_image",
        "i",
        "preview_imgs",
        "plt",
        "imshow",
        "filters",
        "gaussian",
        "clamp",
        "full_image",
        "i",
        "sigma",
        "cmap",
        "cmap",
        "plt",
        "colorbar",
        "plt",
        "savefig",
        "os",
        "path",
        "join",
        "txt_file",
        "init_import",
        "columns",
        "values",
        "i",
        "dpi",
        "plt",
        "clf",
        "np",
        "reshape",
        "init_array",
        "y_size",
        "x_size",
        "z_size",
        "order",
        "i",
        "z_size",
        "sys",
        "stdout",
        "write",
        "format",
        "i",
        "z_size",
        "i",
        "z_size",
        "i",
        "i",
        "z_size",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "flush",
        "np",
        "save",
        "os",
        "path",
        "join",
        "txt_file",
        "init_import",
        "columns",
        "values",
        "i",
        "full_image",
        "i",
        "preview_imgs",
        "plt",
        "imshow",
        "filters",
        "gaussian",
        "clamp",
        "full_image",
        "i",
        "sigma",
        "cmap",
        "cmap",
        "plt",
        "colorbar",
        "plt",
        "savefig",
        "os",
        "path",
        "join",
        "txt_file",
        "init_import",
        "columns",
        "values",
        "i",
        "dpi",
        "plt",
        "clf",
        "img",
        "np",
        "dstack",
        "img",
        "np",
        "zeros_like",
        "img",
        "np",
        "zeros_like",
        "img",
        "img",
        "max",
        "sys",
        "stdout",
        "write",
        "warning",
        "sys",
        "stdout",
        "flush",
        "img",
        "np",
        "dstack",
        "np",
        "zeros_like",
        "img",
        "img",
        "np",
        "zeros_like",
        "img",
        "img",
        "max",
        "sys",
        "stdout",
        "write",
        "warning",
        "sys",
        "stdout",
        "flush",
        "img",
        "np",
        "dstack",
        "np",
        "zeros_like",
        "img",
        "np",
        "zeros_like",
        "img",
        "img",
        "img",
        "max",
        "sys",
        "stdout",
        "write",
        "warning",
        "sys",
        "stdout",
        "flush",
        "img",
        "grey2green",
        "img",
        "grey2blue",
        "img",
        "img",
        "grey2red",
        "img",
        "grey2green",
        "img",
        "img",
        "grey2red",
        "img",
        "grey2blue",
        "img",
        "te_img",
        "xe_img",
        "te_iso",
        "xe_iso",
        "clamp_neg",
        "te_iso",
        "xe_abundances",
        "format",
        "te_iso",
        "te_img",
        "xe_abundances",
        "te_iso",
        "xe_abundances",
        "xe_iso",
        "xe_img",
        "ratio",
        "te_img",
        "scaled_xe",
        "clamp_neg",
        "subtracted",
        "subtracted",
        "img1",
        "img2",
        "thresh",
        "img1",
        "thresh",
        "img2",
        "thresh",
        "np",
        "logical_not",
        "mask1",
        "mask2",
        "np",
        "ma",
        "masked_array",
        "img1",
        "mask",
        "mask",
        "np",
        "ma",
        "masked_array",
        "img2",
        "mask",
        "mask",
        "masked1",
        "compressed",
        "masked2",
        "compressed",
        "img1",
        "img2",
        "iso1",
        "iso2",
        "thresh",
        "force_origin",
        "plot",
        "bins",
        "iso1",
        "iso2",
        "te_dict",
        "siso2",
        "te_dict",
        "siso1",
        "get_vals",
        "img1",
        "img2",
        "thresh",
        "thresh",
        "vals",
        "vals",
        "np",
        "median",
        "ratio_distribution",
        "np",
        "std",
        "ratio_distribution",
        "plot",
        "plt",
        "subplots",
        "ncols",
        "ax",
        "hist",
        "ratio_distribution",
        "bins",
        "color",
        "ax",
        "set_title",
        "ax",
        "set_xlabel",
        "siso2",
        "siso1",
        "ax",
        "set_ylabel",
        "ax",
        "axvline",
        "th_ratio",
        "c",
        "linestyle",
        "ax",
        "axvline",
        "calc_ratio",
        "c",
        "np",
        "percentile",
        "vals",
        "np",
        "percentile",
        "vals",
        "ax",
        "hexbin",
        "vals",
        "vals",
        "cmap",
        "bins",
        "bins",
        "ax",
        "plot",
        "xlim",
        "xlim",
        "th_ratio",
        "c",
        "linestyle",
        "label",
        "format",
        "round",
        "th_ratio",
        "ax",
        "plot",
        "xlim",
        "xlim",
        "calc_ratio",
        "c",
        "label",
        "format",
        "round",
        "calc_ratio",
        "ax",
        "set_xlim",
        "xlim",
        "ax",
        "set_ylim",
        "ylim",
        "ax",
        "set_title",
        "ax",
        "set_xlabel",
        "siso1",
        "ax",
        "set_ylabel",
        "siso2",
        "plt",
        "legend",
        "plt",
        "tight_layout",
        "plt",
        "show",
        "siso2",
        "siso1",
        "th_ratio",
        "calc_ratio",
        "calc_std",
        "calc_ratio",
        "th_ratio",
        "calc_std",
        "th_ratio",
        "siso2",
        "siso1",
        "th_ratio",
        "calc_ratio",
        "calc_std",
        "calc_ratio",
        "th_ratio",
        "calc_std",
        "th_ratio",
        "imgs",
        "mode",
        "xyz_blur",
        "sigma",
        "np",
        "dstack",
        "imgs",
        "xyz_blur",
        "sigma",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "flush",
        "ndimage",
        "filters",
        "gaussian_filter",
        "stack",
        "sigma",
        "sigma",
        "mode",
        "np",
        "sum",
        "stack",
        "axis",
        "collapsed",
        "len",
        "imgs",
        "mode",
        "np",
        "product",
        "stack",
        "axis",
        "collapsed",
        "len",
        "imgs",
        "sys",
        "stdout",
        "write",
        "format",
        "mode",
        "sys",
        "stdout",
        "write",
        "collapsed"
    ],
    "literals": [
        "'Normalize must be either True or False.'",
        "'gray'",
        "'Reading '",
        "'\\n'",
        "'\\t'",
        "'X'",
        "'Y'",
        "'Data read successfully.\\n'",
        "'Bad shape.  Will clip last raster line.\\n'",
        "'Can happen if ablation is stopped halfway through a row.\\n'",
        "'C'",
        "'\\rSaving channel {0} of {1}. '",
        "'['",
        "'-'",
        "' '",
        "']'",
        "'\\n'",
        "'_preview.png'",
        "'C'",
        "'\\rSaving channel {0} of {1}. '",
        "'['",
        "'-'",
        "' '",
        "']'",
        "'\\n'",
        "'_preview.png'",
        "'Warning: input image is not normalized to 1.\\n\\\n        This did not affect the data processing but colour images need to be\\n\\\n        either floats between 0 and 1 or integers between 0 and 255.\\n'",
        "'Warning: input image is not normalized to 1.\\n\\\n        This did not affect the data processing but colour images need to be\\n\\\n        either floats between 0 and 1 or integers between 0 and 255.\\n'",
        "'Warning: input image is not normalized to 1.\\n\\\n        This did not affect the data processing but colour images need to be\\n\\\n        either floats between 0 and 1 or integers between 0 and 255.\\n'",
        "'124'",
        "'126'",
        "'128'",
        "'129'",
        "'130'",
        "'131'",
        "'132'",
        "'134'",
        "'136'",
        "'{0} is not contaminated with Xe.  Input image returned.'",
        "'120'",
        "'122'",
        "'123'",
        "'124'",
        "'125'",
        "'126'",
        "'128'",
        "'130'",
        "'1D histogram'",
        "'/'",
        "' ratio'",
        "'Number of pixels'",
        "'r'",
        "'--'",
        "'g'",
        "'binary'",
        "'r'",
        "'--'",
        "'th. ratio = {0}'",
        "'g'",
        "'calc. ratio = {0}'",
        "'2D histogram'",
        "'th. ratio '",
        "'/'",
        "'calc. ratio'",
        "'calc. std'",
        "'TEB'",
        "'TEB std'",
        "'th. ratio '",
        "'/'",
        "'calc. ratio'",
        "'calc. std'",
        "'TEB'",
        "'TEB std'",
        "'You must provide a sigma value for the blur.'",
        "'arithmetic'",
        "'geometric'",
        "'Invalid argument for mode: {0}\\n'",
        "'Please specify either \\'arithmetic\\' or \\'geometric\\'.\\n'"
    ],
    "variables": [
        "img_",
        "img_",
        "init_import",
        "init_array",
        "x_size",
        "y_size",
        "z_size",
        "bad_shape",
        "bad_shape",
        "delta",
        "clipped",
        "full_image",
        "full_image",
        "warning",
        "warning",
        "warning",
        "xe_abundances",
        "ratio",
        "scaled_xe",
        "subtracted",
        "subtracted",
        "mask1",
        "mask2",
        "mask",
        "masked1",
        "masked2",
        "te_dict",
        "siso1",
        "siso2",
        "th_ratio",
        "vals",
        "ratio_distribution",
        "calc_ratio",
        "calc_std",
        "fig",
        "ax",
        "xlim",
        "ylim",
        "stack",
        "stack",
        "collapsed",
        "collapsed",
        "collapsed",
        "collapsed"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "-*- coding: utf-8 -*-",
        "array manipulation",
        "fast loading of txt files",
        "saving images",
        "2D Gaussian blur",
        "making directories to store images",
        "3D Gaussian blur",
        "printing warnings to user",
        "Percentage abundance of different Xe isotopes",
        "Clamp negative pixels to zero if clamp_neg"
    ],
    "docstrings": [
        "\"\"\"\nCreated on Mon Nov  6 15:53:52 2017\n\n@author: Jay Bassan\n\nUseful processing functions for IMC with tellurium probes.\n\"\"\"",
        "\"\"\"\n    Takes an image and clamps any value above the specified percentile to\n    that value, with optional normalization to 1.\n    Useful for getting rid of the few very bright pixels that skew the image.\n    \"\"\"",
        "\"\"\"\n    Converts standard Fluidigm txt file to a series of numpy arrays.\n    Corrects for badly shaped data -- i.e. images where the ablation was\n    stopped halfway across a row.\n    \"\"\"",
        "\"\"\"\n    Checks to see if the data has a bad shape.\n    \"\"\"",
        "\"\"\"\n    Makes a directory, clips if bad shape, and saves.  If preview images,\n    saves a clamped blurred png image for each channel with colour map and\n    axes.  Prints progress.\n    \"\"\"",
        "\"\"\"\n    Transforms a greyscale image to red.\n    \"\"\"",
        "\"\"\"\n    Transforms a greyscale image to green.\n    \"\"\"",
        "\"\"\"\n    Transforms a greyscale image to blue.\n    \"\"\"",
        "\"\"\"\n    Transforms a greyscale image to cyan.\n    Remember to multiply by 0.5 in any final CYM compilation.\n    \"\"\"",
        "\"\"\"\n    Transforms a greyscale image to yellow.\n    Remember to multiply by 0.5 in any final CYM compilation.\n    \"\"\"",
        "\"\"\"\n    Transforms a greyscale image to magenta.\n    Remember to multiply by 0.5 in any final CYM compilation.\n    \"\"\"",
        "\"\"\"\n    Based on the abundances of the Xe and Te isotopes in question, and the Xe\n    images, calculates the expected component the Te image that actually comes\n    from Xe and subtracts it.\n    By default the function assumes any pixels that become negative after\n    subtraction contain no tellurium and so clamps them to 0.\n    \"\"\"",
        "\"\"\"\n    Checks that the isotope requested is xenon contaminated.\n    Returns the input array if not, and prints a warning.\n    \"\"\"",
        "\"\"\"\n    * * * Intended as an internal function. * * *\n    Speeds up getting ratio of two images where both images have a non zero\n    value for any given pixel.\n    \"\"\"",
        "\"\"\"\n    Takes two tellurium images and shows an isotopic scatter plot.  The thresh\n    allows ignoring of values that are very low in either channel.\n    \"\"\"",
        "\"\"\"\n    Takes an interable of tellurium images (must be same ablation!) and\n    combines them.  Returns one image of the same shape as each image in the\n    iterable.\n\n    Arguments\n    --------\n    imgs:\n        an iterable (tuple, list or ndarray) where each item is an image the\n        user wants to include in the final combined image.\n    mode:\n        'arithmetic':\n            combines the images in an arithmetic fashion\n        'geometric':\n            combines the images in a geometric fashion\n    xyz_blur:\n        If True, performs a 3D Gaussian blur on the images in a stack.\n    sigma:\n        If xyz_blur is requested, a sigma value must be provided.  Will warn\n        users who request the blur but forget to provide a sigma value.\n\n    Returns\n    --------\n    Image as ndarray.  Will be same size as the input images.\n    \"\"\""
    ],
    "functions": [
        "clamp",
        "txt_to_npy",
        "grey2red",
        "grey2green",
        "grey2blue",
        "grey2cyan",
        "grey2yellow",
        "grey2magenta",
        "remove_xenon",
        "get_vals",
        "calculate_teb",
        "combine_channels"
    ],
    "classes": []
}