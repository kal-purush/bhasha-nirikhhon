{
    "identifiers": [
        "require",
        "require",
        "require",
        "sinon",
        "TsPromise",
        "Thenable",
        "BluebirdPromise",
        "resolver",
        "fulfill",
        "value",
        "reject",
        "reason",
        "value",
        "reason",
        "thenables",
        "i",
        "chainLength",
        "i",
        "p",
        "p",
        "n",
        "n",
        "p",
        "boomError",
        "i",
        "chainLength",
        "i",
        "p",
        "p",
        "n",
        "n",
        "p",
        "v",
        "res",
        "resolver",
        "res",
        "i",
        "chainLength",
        "i",
        "p",
        "p",
        "n",
        "n",
        "resolver",
        "p",
        "v",
        "r",
        "res",
        "rej",
        "resolver",
        "res",
        "rejecter",
        "rej",
        "i",
        "chainLength",
        "i",
        "p",
        "p",
        "n",
        "n",
        "rejecter",
        "boomError",
        "p",
        "testFunc",
        "run",
        "ready",
        "sinon",
        "i",
        "parallelCount",
        "i",
        "testFunc",
        "callback",
        "callback",
        "clock",
        "clock",
        "ready",
        "parallelCount",
        "e",
        "e",
        "BluebirdPromise",
        "setImmediate",
        "arguments",
        "makeRunner",
        "TsPromise",
        "testSyncResolve",
        "prime",
        "suite",
        "name",
        "promiseStatic",
        "suite",
        "name",
        "makeRunner",
        "promiseStatic",
        "testSyncResolve",
        "name",
        "makeRunner",
        "promiseStatic",
        "testAsyncResolve",
        "name",
        "makeRunner",
        "promiseStatic",
        "testSyncReject",
        "name",
        "makeRunner",
        "promiseStatic",
        "testAsyncReject",
        "Benchmark",
        "suite",
        "parallelCount",
        "chainLength",
        "parallelCount",
        "chainLength",
        "addTests",
        "suite",
        "TsPromise",
        "addTests",
        "suite",
        "BluebirdPromise",
        "suite"
    ],
    "literals": [
        "\"use strict\"",
        "\"source-map-support\"",
        "\"microtime\"",
        "\"benchmark\"",
        "\"assert\"",
        "\"sinon\"",
        "\"ts-promise\"",
        "\"bluebird\"",
        "\"boom\"",
        "\"Error flushing promises\"",
        "string",
        "\" syncResolve\"",
        "\" asyncResolve\"",
        "\" syncReject\"",
        "\" asyncReject\"",
        "\"cycle\"",
        "Every run creates ${parallelCount} chains of ${chainLength} promises = ~${parallelCount * chainLength} promises",
        "\"ts-promise\"",
        "\"Bluebird\""
    ],
    "variables": [
        "Benchmark",
        "parallelCount",
        "chainLength",
        "boomError",
        "p",
        "i",
        "p",
        "i",
        "resolver",
        "p",
        "i",
        "resolver",
        "rejecter",
        "p",
        "i",
        "promises",
        "ready",
        "clock",
        "i",
        "e",
        "suite"
    ],
    "comments": [
        "<reference path=\"typings/tsd.d.ts\" />",
        "These have no typings yet",
        "import * as Q from \"q\";",
        "import { Promise as RsvpPromise } from \"es6-promise\";",
        "Override Bluebird's scheduler, such that it uses setImmediate, which can be",
        "overriden by Sinon. (Could also e.g. have used process.nextTick).",
        "Note that the scheduler is not called often, so it does not have a big impact",
        "anyway.",
        "It seems necessary to run one of the implementations once, to 'prime' the JIT"
    ],
    "docstrings": [
        "* Some made-up benchmarks for Promise implementation performance.\n *\n * These are pretty 'raw' tests, a more realistic test involving different\n * 'patterns' would make sense to get 'real world' stats.\n *\n * Copyright (C) 2015 Martin Poelstra"
    ],
    "functions": [
        "testSyncResolve",
        "testSyncReject",
        "testAsyncResolve",
        "testAsyncReject",
        "makeRunner",
        "callback",
        "prime",
        "addTests"
    ],
    "classes": []
}