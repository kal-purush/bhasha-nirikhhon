{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "file",
        "callback",
        "linguist",
        "file",
        "language",
        "language",
        "language",
        "language",
        "callback",
        "language",
        "e",
        "callback",
        "e",
        "file",
        "linguist",
        "file",
        "language",
        "language",
        "language",
        "language",
        "language",
        "e",
        "e",
        "array",
        "array",
        "i",
        "array",
        "i",
        "ignore",
        "i",
        "ignore",
        "i",
        "ignore",
        "i",
        "ignore",
        "i",
        "ignore",
        "i",
        "ignored",
        "ignore",
        "i",
        "ignored",
        "ignore",
        "i",
        "ignored",
        "ignore",
        "i",
        "ignored",
        "fileOrFolder",
        "ignored",
        "i",
        "ignored",
        "i",
        "fileOrFolder",
        "ignored",
        "i",
        "fileOrFolder",
        "ignored",
        "i",
        "ignored",
        "i",
        "fileOrFolder",
        "ignored",
        "i",
        "parts",
        "parts",
        "fileType",
        "folder",
        "ignore",
        "ignore",
        "Languist",
        "ignore",
        "Report",
        "file",
        "folder",
        "dirPath",
        "dirs",
        "files",
        "ignored",
        "Languist",
        "dirPath",
        "ignored",
        "files",
        "file",
        "ignored",
        "Languist",
        "file",
        "ignored",
        "Languist",
        "dirPath",
        "file",
        "language",
        "report",
        "file",
        "language",
        "Languist",
        "report",
        "language",
        "report",
        "language",
        "report",
        "language",
        "report",
        "language",
        "report",
        "language",
        "report"
    ],
    "literals": [
        "'use strict'",
        "\"coffee-script/register\"",
        "\"util\"",
        "\"file\"",
        "\"atom-linguist\"",
        "\"./report.js\"",
        "\"*\"",
        "\".\"",
        "\".\"",
        "\"undefined\"",
        "\"/\"",
        "\"undefined\"",
        "\"undefined\""
    ],
    "variables": [
        "util",
        "file",
        "linguist",
        "Report",
        "Languist",
        "language",
        "language",
        "i",
        "ignored",
        "i",
        "i",
        "parts",
        "fileType",
        "ignored",
        "report",
        "language"
    ],
    "comments": [
        "When it returns multiple languages, grab the last one",
        "When it returns multiple languages, grab the last one",
        "If we're talking about a file type",
        "File name",
        "Format the given ignored files/directories seperately",
        "Loop through the given folder",
        "Skip ignored directories",
        "Skip ignored files",
        "Filter out not recognized files",
        "Only add language once",
        "occurrences for statistics"
    ],
    "docstrings": [
        "* identify\n  *\n  * Identifies the language for a single file\n  *\n  * @param file\n  *   The file you would like to identify\n  *\n  * @returns callback(error, language)\n  *   Where error is a potential error and language\n  *   the identified language",
        "* identify\n  *\n  * Identifies the language for a single file\n  *\n  * @param file\n  *   The file you would like to identify\n  *\n  * @returns language\n  *   The identified language",
        "* sortIgnore\n  *\n  * Formats the given array and sorts it in \n  * files and folders\n  *\n  * @param ignore \n  *   The array containing the ignored folder names, file names or file types",
        "* isIgnored\n  *\n  * Checks if a file or folder is on the ignore list\n  *\n  * @param fileOrFolder\n  *   The file or folder to be checked against the respective array of ignored files/folders\n  *\n  * @param ignored\n  *   The ignored folder or files array",
        "* This part fixes for example that *.js does not ignore json files",
        "* walkIdentifySync\n  *\n  * Identifies an entire directory recursively\n  * \n  * @param folder\n  *   The name of the folder you would like to identify\n  *\n  * @param ignore\n  *   The array containing the ignored folder names, file names or file types\n  *\n  * @returns Report\n  *   Returns the Report object"
    ],
    "functions": [],
    "classes": []
}