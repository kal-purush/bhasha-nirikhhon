{
    "identifiers": [
        "base64",
        "json",
        "os",
        "socket",
        "tornado",
        "ioloop",
        "tornado",
        "web",
        "bson",
        "binary",
        "Binary",
        "pymongo",
        "MongoClient",
        "tornado",
        "escape",
        "recursive_unicode",
        "json",
        "JSONEncoder",
        "obj",
        "isinstance",
        "obj",
        "datetime",
        "datetime",
        "obj",
        "isoformat",
        "isinstance",
        "obj",
        "datetime",
        "date",
        "obj",
        "isoformat",
        "isinstance",
        "obj",
        "Decimal",
        "obj",
        "CustomJSONEncoder",
        "obj",
        "value",
        "json",
        "dumps",
        "recursive_unicode",
        "value",
        "cls",
        "CustomJSONEncoder",
        "replace",
        "tornado",
        "web",
        "RequestHandler",
        "tornado",
        "web",
        "asynchronous",
        "json",
        "loads",
        "request",
        "body",
        "data",
        "data",
        "data",
        "data",
        "base_image_path",
        "name",
        "count",
        "open",
        "file_name",
        "base64",
        "b64decode",
        "image",
        "fo",
        "write",
        "png_image",
        "fo",
        "close",
        "ValueError",
        "e",
        "e",
        "MongoClient",
        "client",
        "DroneRecognizer",
        "ClassifierData",
        "collect",
        "update",
        "name",
        "file_name",
        "upsert",
        "set_header",
        "write",
        "json_str",
        "order",
        "db_to_file",
        "collect",
        "remove",
        "socket",
        "socket",
        "sock",
        "connect",
        "address",
        "port",
        "sock",
        "send",
        "base_path",
        "sock",
        "close",
        "socket",
        "error",
        "value",
        "message",
        "message",
        "finish",
        "tornado",
        "web",
        "RequestHandler",
        "remove_old_pictures",
        "base_image_path",
        "set_header",
        "write",
        "json_str",
        "MongoClient",
        "client",
        "DroneRecognizer",
        "ClassifierData",
        "db",
        "find",
        "open",
        "base_path",
        "item",
        "results",
        "path",
        "item",
        "fo",
        "write",
        "path",
        "fo",
        "close",
        "path",
        "current_file",
        "os",
        "listdir",
        "path",
        "os",
        "path",
        "join",
        "path",
        "current_file",
        "os",
        "path",
        "isfile",
        "file_path",
        "os",
        "unlink",
        "file_path",
        "exception",
        "exception",
        "tornado",
        "web",
        "Application",
        "MainHandler",
        "DeleteHandler",
        "application",
        "listen",
        "tornado",
        "ioloop",
        "IOLoop",
        "instance",
        "start"
    ],
    "literals": [
        "\"104.150.120.136\"",
        "\"/home/ubuntu/msd/\"",
        "\"/home/ubuntu/msd/pictures/\"",
        "\"</\"",
        "\"<\\\\/\"",
        "\"Inside POST\"",
        "\"\"",
        "'image'",
        "'name'",
        "'count'",
        "'last'",
        "\".png\"",
        "\"wb\"",
        "\"Problem Parsing Post \"",
        "\"Inserting into Mongo\"",
        "\"name\"",
        "\"$push\"",
        "\"images\"",
        "\"Content-Type\"",
        "\"application/json\"",
        "'arg1'",
        "\"OK\"",
        "\"true\"",
        "\"Making txt file\"",
        "'database_contents.txt'",
        "\"Problem Opening the socket or seding the data.\"",
        "\" ERROR \"",
        "\"Removing old pictures\"",
        "\"Content-Type\"",
        "\"application/json\"",
        "'arg1'",
        "\"OK\"",
        "'database_contents.txt'",
        "'w'",
        "'images'",
        "\"\\n\"",
        "r\"/\"",
        "r\"/remove\"",
        "\"__main__\""
    ],
    "variables": [
        "address",
        "port",
        "base_path",
        "base_image_path",
        "data",
        "file_name",
        "image",
        "name",
        "count",
        "order",
        "file_name",
        "fo",
        "png_image",
        "client",
        "collect",
        "sock",
        "client",
        "db",
        "results",
        "fo",
        "file_path",
        "application"
    ],
    "comments": [
        "!/usr/bin/env python",
        "",
        "#",
        "04/13/2015                                                                  #",
        "Mobile Sensing Assignment 6                                                 #",
        "Tornado server to handle post request that acepts a .png picture            #",
        "#",
        "",
        "address = \"127.0.0.1\"",
        "base_path = \"/Users/elena/\"",
        "base_image_path = \"/Users/elena/Desktop/pictures/\"",
        "Code taken from Eric's example",
        "Code taken from Eric's example",
        "",
        "Getting post data",
        "",
        "",
        "Insert picture path in DB",
        "",
        "localhost, default port",
        "",
        "Sending response",
        "",
        "",
        "Openning socket to let open cv the images are ready",
        "",
        "",
        "Finish the asynch task",
        "",
        "",
        "Sending response",
        "",
        "",
        "",
        "Function that writes all the pictures' path to a file.",
        "The output file is called database_contents.txt",
        "",
        "",
        "localhost, default port",
        "find all documents",
        "",
        "Iterate through the documents and writing their paths in the output file",
        "",
        "",
        "",
        "Function that removes all the pictures in the pictures folder",
        "",
        "Return: void",
        "",
        "",
        "",
        "Linking the different handelers to their paths",
        "",
        "",
        "",
        "Main Driver",
        "",
        ""
    ],
    "docstrings": [],
    "functions": [
        "json_str",
        "post",
        "post",
        "db_to_file",
        "remove_old_pictures"
    ],
    "classes": [
        "CustomJSONEncoder",
        "MainHandler",
        "DeleteHandler"
    ]
}