{
    "identifiers": [
        "Linq",
        "Management",
        "Automation",
        "Runtime",
        "InteropServices",
        "Runtime",
        "InteropServices",
        "ComTypes",
        "EnvDTE",
        "Process",
        "Diagnostics",
        "Process",
        "Threading",
        "WPFLocales",
        "Powershell",
        "Cmdlet",
        "VerbsCommon",
        "Get",
        "PSCmdlet",
        "Parameter",
        "Mandatory",
        "HelpMessage",
        "Position",
        "Parameter",
        "Mandatory",
        "HelpMessage",
        "Position",
        "MessageFilter",
        "Register",
        "TryParse",
        "Environment",
        "GetEnvironmentVariable",
        "envVariableName",
        "EnvironmentVariableTarget",
        "User",
        "devenvPid",
        "devenvProcess",
        "Process",
        "GetProcesses",
        "FirstOrDefault",
        "x",
        "Id",
        "devenvPid",
        "devenvProcess",
        "devenvPid",
        "Process",
        "Start",
        "VSPath",
        "Id",
        "dte",
        "VSAutomationHelper",
        "GetDTE",
        "devenvPid",
        "dte",
        "Sleep",
        "Environment",
        "SetEnvironmentVariable",
        "envVariableName",
        "devenvPid",
        "ToString",
        "EnvironmentVariableTarget",
        "User",
        "WriteObject",
        "dte",
        "MessageFilter",
        "Revoke",
        "processId",
        "processId",
        "Marshal",
        "ThrowExceptionForHR",
        "CreateBindCtx",
        "bindCtx",
        "bindCtx",
        "GetRunningObjectTable",
        "runningObjects",
        "runningObjects",
        "EnumRunning",
        "enumMonikers",
        "IMoniker",
        "IMoniker",
        "IntPtr",
        "Zero",
        "enumMonikers",
        "Next",
        "moniker",
        "numberFetched",
        "moniker",
        "runningObjectMoniker",
        "runningObjectMoniker",
        "GetDisplayName",
        "bindCtx",
        "name",
        "UnauthorizedAccessException",
        "IsNullOrEmpty",
        "name",
        "Equals",
        "name",
        "progId",
        "StringComparison",
        "Ordinal",
        "Marshal",
        "ThrowExceptionForHR",
        "runningObjects",
        "GetObject",
        "runningObjectMoniker",
        "runningObject",
        "e",
        "enumMonikers",
        "Marshal",
        "ReleaseComObject",
        "enumMonikers",
        "runningObjects",
        "Marshal",
        "ReleaseComObject",
        "runningObjects",
        "bindCtx",
        "Marshal",
        "ReleaseComObject",
        "bindCtx",
        "DTE",
        "runningObject",
        "DllImport",
        "reserved",
        "IBindCtx",
        "ppbc",
        "IOleMessageFilter",
        "MessageFilter",
        "CoRegisterMessageFilter",
        "newFilter",
        "oldFilter",
        "CoRegisterMessageFilter",
        "oldFilter",
        "IOleMessageFilter",
        "dwCallType",
        "IntPtr",
        "hTaskCaller",
        "dwTickCount",
        "IntPtr",
        "lpInterfaceInfo",
        "IOleMessageFilter",
        "IntPtr",
        "hTaskCallee",
        "dwTickCount",
        "dwPendingType",
        "IOleMessageFilter",
        "IntPtr",
        "hTaskCallee",
        "dwTickCount",
        "dwRejectType",
        "dwRejectType",
        "DllImport",
        "IOleMessageFilter",
        "newFilter",
        "IOleMessageFilter",
        "oldFilter",
        "ComImport",
        "Guid",
        "InterfaceType",
        "ComInterfaceType",
        "InterfaceIsIUnknown",
        "IOleMessageFilter",
        "PreserveSig",
        "dwCallType",
        "IntPtr",
        "hTaskCaller",
        "dwTickCount",
        "IntPtr",
        "lpInterfaceInfo",
        "PreserveSig",
        "IntPtr",
        "hTaskCallee",
        "dwTickCount",
        "dwRejectType",
        "PreserveSig",
        "IntPtr",
        "hTaskCallee",
        "dwTickCount",
        "dwPendingType"
    ],
    "literals": [
        "\"DTE\"",
        "\"Path to Visual Studio\"",
        "\"Path to project\"",
        "\"devenvPID\"",
        "\"!VisualStudio.DTE.12.0:\"",
        "\"ole32.dll\"",
        "\"Ole32.dll\"",
        "\"00000016-0000-0000-C000-000000000046\""
    ],
    "variables": [
        "VSPath",
        "ProjPath",
        "envVariableName",
        "devenvPid",
        "Process",
        "devenvProcess",
        "DTE",
        "dte",
        "progId",
        "runningObject",
        "IBindCtx",
        "bindCtx",
        "IRunningObjectTable",
        "runningObjects",
        "IEnumMoniker",
        "enumMonikers",
        "moniker",
        "IntPtr",
        "numberFetched",
        "IMoniker",
        "runningObjectMoniker",
        "name",
        "IOleMessageFilter",
        "newFilter",
        "IOleMessageFilter",
        "oldFilter",
        "IOleMessageFilter",
        "oldFilter"
    ],
    "comments": [
        "Do nothing, there is something in the ROT that we do not have access to.",
        "Class containing the IOleMessageFilter",
        "thread error-handling functions.",
        "Start the filter.",
        "Done with the filter, close it.",
        "IOleMessageFilter functions.",
        "Handle incoming thread requests.",
        "Return the flag SERVERCALL_ISHANDLED.",
        "Return the flag PENDINGMSG_WAITDEFPROCESS.",
        "Thread call was rejected, so try again.",
        "flag = SERVERCALL_RETRYLATER.",
        "Retry the thread call immediately if return >=0 &",
        "<100.",
        "Too busy; cancel call.",
        "Implement the IOleMessageFilter interface."
    ],
    "docstrings": [],
    "functions": [
        "ProcessRecord",
        "DTE",
        "GetDTE",
        "CreateBindCtx",
        "Register",
        "Revoke",
        "HandleInComingCall",
        "MessagePending",
        "RetryRejectedCall",
        "CoRegisterMessageFilter",
        "HandleInComingCall",
        "RetryRejectedCall",
        "MessagePending"
    ],
    "classes": [
        "GetDTE",
        "VSAutomationHelper",
        "MessageFilter"
    ]
}