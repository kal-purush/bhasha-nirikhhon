{
    "identifiers": [
        "socket",
        "threading",
        "time",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_DGRAM",
        "server_socket",
        "bind",
        "clients_adresses",
        "ishere",
        "need_to_disconnect_inactive_clients",
        "need_to_disconnect_inactive_clients",
        "time",
        "sleep",
        "client_address",
        "clients_adresses",
        "client_address",
        "server_socket",
        "sendto",
        "client_address",
        "time",
        "sleep",
        "client_address",
        "ishere",
        "client_address",
        "clients_adresses",
        "discard",
        "client_address",
        "server_socket",
        "sendto",
        "client_address",
        "ishere",
        "discard",
        "client_address",
        "clients_adresses",
        "server_socket",
        "clients_adresses",
        "ishere",
        "need_to_disconnect_inactive_clients",
        "got_data_already",
        "server_socket",
        "recvfrom",
        "e",
        "e",
        "ishere",
        "add",
        "client_address",
        "clients_adresses",
        "add",
        "client_address",
        "clients_adresses",
        "data",
        "len",
        "clients_adresses",
        "address",
        "clients_adresses",
        "address",
        "client_address",
        "address",
        "server_socket",
        "sendto",
        "address",
        "clients_to_remove",
        "add",
        "address",
        "server_socket",
        "settimeout",
        "server_socket",
        "recvfrom",
        "socket",
        "timeout",
        "timeouts",
        "timeouts",
        "len",
        "clients_adresses",
        "socket",
        "error",
        "e",
        "e",
        "server_socket",
        "recvfrom",
        "data",
        "server_socket",
        "settimeout",
        "data",
        "client",
        "clients_to_remove",
        "client",
        "address",
        "client",
        "client_address",
        "server_socket",
        "sendto",
        "client",
        "clients_adresses",
        "remove",
        "client",
        "server_socket",
        "sendto",
        "client_address",
        "address",
        "data",
        "ishere",
        "add",
        "address",
        "address",
        "server_socket",
        "sendto",
        "address",
        "client_address",
        "time",
        "sleep",
        "server_socket",
        "sendto",
        "address",
        "client_address",
        "time",
        "sleep",
        "server_socket",
        "sendto",
        "client_address",
        "address",
        "time",
        "sleep",
        "server_socket",
        "sendto",
        "client_address",
        "address",
        "client_address",
        "client_address",
        "address",
        "address",
        "clients_adresses",
        "discard",
        "client_address",
        "address",
        "clients_adresses",
        "clients_adresses",
        "discard",
        "address",
        "data",
        "data",
        "data",
        "client_address",
        "clients_adresses",
        "clients_adresses",
        "discard",
        "client_address",
        "threading",
        "name",
        "target",
        "disconnectInactiveClients",
        "thread_disconnectInactiveClients",
        "start",
        "prezendousServer"
    ],
    "literals": [
        "'0.0.0.0'",
        "'asked if %s is here'",
        "'Are you here?'",
        "'went to sleep for 1.5 seconds'",
        "'woke up after a 1.5 seconds sleep'",
        "'disconnecting '",
        "'YOU ARE DISCONNECTED'",
        "'faced an exception'",
        "'Get me an opponent'",
        "''",
        "'sure dude, i will find you an opponent. wait a second'",
        "'not enough clients connected yet. wait for another client to connect'",
        "'asked %s if he wants to connect.'",
        "'Want to connect with someone?'",
        "'\\x00'",
        "'waiting for a response from one of the other clients.'",
        "'trying to recvfrom a client'",
        "'timed out.'",
        "'socket error'",
        "'I got: '",
        "'finished trying to recieve from sockets.'",
        "'Yes, I do want to connect'",
        "'I removed you'",
        "'\\x00'",
        "'Get ready for IP.'",
        "'\\x00'",
        "'one of the clients does want to connect with you.'",
        "'he sent: '",
        "'got answer from '",
        "'\\nconnecting him with requester. created holes in NAT.'",
        "'\\x00'",
        "'\\x00'",
        "'\\x00'",
        "'\\x00'",
        "'\\n\\n client adress:'",
        "','",
        "' address: '",
        "','",
        "'\\n\\n'",
        "'Get me an opponent'",
        "'Remove me from waiting list.'",
        "'Ok, I will remove you from the waiting list'",
        "'disconnectInactiveClients'"
    ],
    "variables": [
        "server_socket",
        "need_to_disconnect_inactive_clients",
        "clients_adresses",
        "ishere",
        "need_to_disconnect_inactive_clients",
        "got_data_already",
        "data",
        "client_address",
        "got_data_already",
        "totaldata",
        "clients_to_remove",
        "data",
        "timeouts",
        "data",
        "address",
        "data",
        "address",
        "need_to_disconnect_inactive_clients",
        "got_data_already",
        "threads",
        "thread_disconnectInactiveClients"
    ],
    "comments": [
        "rendezvous  server for UDP hole punching",
        "server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)",
        "server_socket.bind(('0.0.0.0', 5006))",
        "because clients_adresses contains the clients socket that shouldn't answer as well."
    ],
    "docstrings": [],
    "functions": [
        "disconnectInactiveClients",
        "prezendousServer"
    ],
    "classes": []
}