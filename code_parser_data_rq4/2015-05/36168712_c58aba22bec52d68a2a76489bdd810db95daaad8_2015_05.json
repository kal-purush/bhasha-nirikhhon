{
    "identifiers": [
        "min",
        "max",
        "reader",
        "a",
        "b",
        "TRange",
        "a",
        "b",
        "a",
        "b",
        "a",
        "index",
        "index",
        "index",
        "TRange",
        "TRange",
        "offset",
        "TRange",
        "offset",
        "offset",
        "TRange",
        "Reader",
        "file",
        "pos",
        "start",
        "end",
        "start",
        "start",
        "end",
        "end",
        "TRange",
        "start",
        "end",
        "length",
        "TRange",
        "length",
        "length",
        "start",
        "end",
        "start",
        "end",
        "start",
        "count",
        "count",
        "count",
        "count",
        "count",
        "count",
        "count",
        "count",
        "count",
        "lit",
        "lit",
        "lit",
        "lit",
        "lit",
        "lit",
        "lit",
        "lit",
        "lit",
        "v",
        "v",
        "result",
        "result",
        "m",
        "m",
        "v",
        "v",
        "result",
        "result",
        "start",
        "end",
        "start",
        "start",
        "end",
        "index",
        "index",
        "end",
        "startIndex",
        "readerContext",
        "reader",
        "context",
        "context",
        "skipper",
        "skipper",
        "tokens",
        "min",
        "max",
        "clazz",
        "GrammarNode",
        "tokens",
        "values",
        "separators",
        "tokens",
        "GrammarNode",
        "tokens",
        "items",
        "tokens",
        "GrammarNode",
        "tokens",
        "tokens",
        "matched",
        "node",
        "node",
        "GrammarResult",
        "node",
        "GrammarResult",
        "readerContext",
        "GBase",
        "readerContext",
        "readerContext",
        "GrammarResult",
        "UnmatchGrammarNode",
        "GBase",
        "value",
        "clazz",
        "UnmatchGrammarNode",
        "readerContext",
        "readerContext",
        "readerContext",
        "result",
        "GrammarResult",
        "GrammarResult",
        "clazz",
        "result",
        "GBase",
        "value",
        "clazz",
        "UnmatchGrammarNode",
        "readerContext",
        "readerContext",
        "readerContext",
        "result",
        "GrammarResult",
        "GrammarResult",
        "clazz",
        "result",
        "GBase",
        "items",
        "readerContext",
        "readerContext",
        "readerContext",
        "readerContext",
        "i",
        "i",
        "readerContext",
        "result",
        "result",
        "reader",
        "start",
        "GrammarResult",
        "GBase",
        "value",
        "readerContext",
        "readerContext",
        "readerContext",
        "readerContext",
        "readerContext",
        "v",
        "v",
        "reader",
        "start",
        "GrammarResult",
        "GrammarNode",
        "GBase",
        "value",
        "value",
        "readerContext",
        "readerContext",
        "GBase",
        "value",
        "skipper",
        "readerContext",
        "readerContext",
        "readerContext",
        "result",
        "readerContext",
        "GBase",
        "items",
        "clazz",
        "readerContext",
        "readerContext",
        "readerContext",
        "i",
        "i",
        "GSure",
        "sure",
        "i",
        "readerContext",
        "r",
        "readerContext",
        "startPos",
        "r",
        "tokens",
        "tokens",
        "r",
        "r",
        "r",
        "UnmatchGrammarNode",
        "nodes",
        "r",
        "clazz",
        "clazz",
        "SequenceGrammarNode",
        "GrammarResult",
        "clazz",
        "tokens",
        "nodes",
        "GBase",
        "element",
        "separator",
        "min",
        "clazz",
        "readerContext",
        "readerContext",
        "GrammarResult",
        "GrammarNode",
        "readerContext",
        "readerContext",
        "r",
        "r2",
        "GrammarResult",
        "r",
        "count",
        "tokens",
        "tokens",
        "r",
        "elements",
        "r",
        "r2",
        "readerContext",
        "r2",
        "tokens",
        "tokens",
        "r2",
        "separators",
        "r2",
        "count",
        "GrammarResult",
        "clazz",
        "clazz",
        "ListGrammarNode",
        "GrammarResult",
        "clazz",
        "tokens",
        "elements",
        "separators",
        "root",
        "root",
        "ReaderContext",
        "Reader",
        "v",
        "clazz",
        "v",
        "v",
        "GBase",
        "v",
        "v",
        "GRegExp",
        "v",
        "clazz",
        "GLiteral",
        "v",
        "clazz",
        "v",
        "tok",
        "v",
        "clazz",
        "GSequence",
        "_tok",
        "clazz",
        "GAny",
        "_tok",
        "v",
        "GOptional",
        "tok",
        "v",
        "GSure",
        "GRef",
        "Infix",
        "args",
        "element",
        "separator",
        "min",
        "clazz",
        "GList",
        "tok",
        "element",
        "tok",
        "separator",
        "min",
        "clazz",
        "GrammarNode",
        "tokens",
        "left",
        "op",
        "right",
        "tokens",
        "ListGrammarNode",
        "tokens",
        "values",
        "operators",
        "tokens",
        "values",
        "operators",
        "o",
        "o",
        "GrammarNode",
        "tokens",
        "nodes",
        "tokens",
        "nodes",
        "nodes",
        "nodes",
        "GrammarNode",
        "tokens",
        "nodes",
        "tokens",
        "nodes",
        "nodes",
        "GrammarNode",
        "tokens",
        "tokens",
        "parseInt",
        "tokens",
        "GrammarNode",
        "tokens",
        "tokens",
        "tokens",
        "GrammarNode",
        "tokens",
        "tokens",
        "parseFloat",
        "tokens",
        "Grammar",
        "tok",
        "FloatNode",
        "tok",
        "IntNode",
        "tok",
        "BoolNode",
        "tok",
        "BoolNode",
        "tok",
        "IntNode",
        "_bool",
        "_float",
        "_int",
        "_expr",
        "_lit",
        "_id",
        "seq",
        "_expr",
        "_typedecl",
        "_id",
        "seq",
        "_typedecl",
        "seq",
        "sure",
        "_expr",
        "_stm",
        "opt",
        "seq",
        "_stm",
        "IfNode",
        "seq",
        "sure",
        "_id",
        "_expr",
        "_stm",
        "seq",
        "sure",
        "_expr",
        "_stm",
        "WhileNode",
        "seq",
        "sure",
        "_expr",
        "_stm",
        "_expr",
        "seq",
        "sure",
        "_expr",
        "_stm",
        "seq",
        "sure",
        "_id",
        "seq",
        "sure",
        "_id",
        "seq",
        "sure",
        "_id",
        "seq",
        "_id",
        "opt",
        "_sc_typedecl",
        "opt",
        "seq",
        "_expr",
        "seq",
        "sure",
        "_vardecl",
        "seq",
        "_id",
        "opt",
        "_sc_typedecl",
        "_stm",
        "seq",
        "_stms",
        "_if",
        "_for",
        "_while",
        "_return",
        "_class",
        "_enum",
        "_vars",
        "_function",
        "seq",
        "_expr",
        "_stms",
        "ReaderContext",
        "Reader"
    ],
    "literals": [
        "${this.min}:${this.max}",
        "string",
        "string",
        "''",
        "string",
        "string",
        "'file'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'GrammarNode'",
        "''",
        "'ListGrammarNode'",
        "'SequenceGrammarNode'",
        "'UnmatchGrammarNode'",
        "\"Must override match\"",
        "string",
        "string",
        "string",
        "string",
        "'BinaryOp'",
        "string",
        "'BinaryOpList'",
        "'IfNode'",
        "'WhileNode'",
        "'IntNode'",
        "'BoolNode'",
        "'true'",
        "'FloatNode'",
        "'true'",
        "'false'",
        "'+'",
        "'-'",
        "'/'",
        "'*'",
        "'%'",
        "'&'",
        "'|'",
        "'^'",
        "'&&'",
        "'||'",
        "'('",
        "')'",
        "':'",
        "'if'",
        "'('",
        "')'",
        "'else'",
        "'for'",
        "'('",
        "'in'",
        "')'",
        "'while'",
        "'('",
        "')'",
        "'do'",
        "'('",
        "')'",
        "'while'",
        "'('",
        "')'",
        "';'",
        "'return'",
        "';'",
        "'class'",
        "'{'",
        "'}'",
        "'struct'",
        "'{'",
        "'}'",
        "'enum'",
        "'{'",
        "'}'",
        "'='",
        "'=>'",
        "'var'",
        "','",
        "';'",
        "'function'",
        "'('",
        "')'",
        "'{'",
        "'}'",
        "';'",
        "'{'",
        "'}'",
        "';'",
        "'var a:int = 1, b = 3;'"
    ],
    "variables": [
        "result",
        "m",
        "result",
        "startIndex",
        "index",
        "min",
        "max",
        "result",
        "clazz",
        "result",
        "clazz",
        "reader",
        "start",
        "result",
        "reader",
        "start",
        "v",
        "result",
        "startPos",
        "tokens",
        "nodes",
        "sure",
        "r",
        "clazz",
        "r2",
        "tokens",
        "elements",
        "separators",
        "count",
        "r",
        "clazz",
        "_expr",
        "_stm",
        "_typedecl",
        "_float",
        "_int",
        "_bool",
        "_id",
        "_lit",
        "_binop",
        "_sc_typedecl",
        "_if",
        "_for",
        "_while",
        "_do",
        "_return",
        "_stms",
        "_class",
        "_struct",
        "_enum",
        "_vardecl",
        "_vars",
        "_function"
    ],
    "comments": [
        "trace(index);",
        "constructor(build: () => string) {\n    }",
        "console.log(i.constructor, i, r);",
        "var _var = seq([opt('lazy'), 'var', sure(), _id, ';']);",
        "console.log(_if.match(new ReaderContext(new Reader('if ((1)) 1; else 1;'))));",
        "console.log(_stms.match(new ReaderContext(new Reader('var a; var b; function test() {}'))));",
        "console.log(_lit.match(new ReaderContext(new Reader('777.3'))));"
    ],
    "docstrings": [],
    "functions": [
        "combine",
        "contains",
        "toString",
        "file",
        "text",
        "startEmptyRange",
        "endEmptyRange",
        "displace",
        "createDummy",
        "reset",
        "eof",
        "createRange",
        "readRange",
        "peek",
        "peekChar",
        "read",
        "unread",
        "readChar",
        "skip",
        "matchLit",
        "matchLitRange",
        "matchEReg",
        "matchERegRange",
        "matchStartEnd",
        "skip",
        "pushSkipper",
        "popSkipper",
        "text",
        "matched",
        "unmatched",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "tok",
        "_tok",
        "seq",
        "opt",
        "sure",
        "operatorsRaw"
    ],
    "classes": [
        "TRange",
        "Reader",
        "ReaderContext",
        "GrammarNode",
        "ListGrammarNode",
        "SequenceGrammarNode",
        "UnmatchGrammarNode",
        "GrammarResult",
        "GBase",
        "GSure",
        "GLiteral",
        "GRegExp",
        "GAny",
        "GOptional",
        "GRef",
        "GSkipper",
        "GSequence",
        "GList",
        "Grammar",
        "BinaryOp",
        "BinaryOpList",
        "IfNode",
        "WhileNode",
        "IntNode",
        "BoolNode",
        "FloatNode"
    ]
}