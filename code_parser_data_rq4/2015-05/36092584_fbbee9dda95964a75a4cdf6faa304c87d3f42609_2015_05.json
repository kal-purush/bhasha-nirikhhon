{
    "identifiers": [
        "loader",
        "loader",
        "has",
        "name",
        "name",
        "value",
        "element",
        "now",
        "force",
        "name",
        "value",
        "now",
        "force",
        "has",
        "loader",
        "require",
        "has",
        "has",
        "name",
        "name",
        "hasCache",
        "name",
        "hasCache",
        "name",
        "hasCache",
        "name",
        "element",
        "hasCache",
        "name",
        "has",
        "name",
        "test",
        "now",
        "force",
        "name",
        "hasCache",
        "force",
        "hasCache",
        "name",
        "test",
        "now",
        "has",
        "name",
        "has",
        "has",
        "location",
        "has",
        "process",
        "process",
        "process",
        "has",
        "has",
        "resourceId",
        "normalize",
        "moduleId",
        "resourceId",
        "skip",
        "tokens",
        "i",
        "term",
        "tokens",
        "i",
        "skip",
        "has",
        "term",
        "get",
        "get",
        "get",
        "skip",
        "term",
        "resourceId",
        "get",
        "resourceId",
        "normalize",
        "resourceId",
        "has",
        "resourceId",
        "require",
        "loader",
        "load",
        "value",
        "resourceId",
        "require",
        "resourceId",
        "load",
        "load",
        "has"
    ],
    "literals": [
        "'./loader'",
        "string",
        "string",
        "string",
        "string",
        "'div'",
        "string",
        "'function'",
        "string",
        "'host-browser'",
        "'undefined'",
        "'undefined'",
        "'host-node'",
        "'object'",
        "'debug'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "':'",
        "'?'",
        "string"
    ],
    "variables": [
        "process",
        "require",
        "has",
        "hasCache",
        "element",
        "has",
        "tokens",
        "i",
        "term"
    ],
    "comments": [
        "tslint:disable:class-name",
        "tslint:enable:class-name",
        "empty string module name, resolves to 0",
        "postfixed with a ? means it is a feature to branch on, the term is the name of the feature",
        "matched the feature, get the first value from the options",
        "did not match, get the second value, passing over the first",
        "a module"
    ],
    "docstrings": [],
    "functions": [
        "get"
    ],
    "classes": []
}