{
    "identifiers": [
        "print_function",
        "division",
        "absolute_import",
        "collections",
        "defaultdict",
        "pandas",
        "pd",
        "effects",
        "padding_around_mutation",
        "effect",
        "effects",
        "effect",
        "mutant_protein_sequence",
        "seq",
        "effect",
        "aa_mutation_start_offset",
        "effect",
        "aa_mutation_end_offset",
        "max",
        "mutation_start",
        "padding_around_mutation",
        "min",
        "len",
        "seq",
        "mutation_end",
        "padding_around_mutation",
        "seq",
        "start",
        "end",
        "result",
        "binding_prediction",
        "effect",
        "binding_prediction",
        "offset",
        "binding_prediction",
        "offset",
        "binding_prediction",
        "length",
        "peptide_start",
        "effect",
        "aa_mutation_end_offset",
        "peptide_end",
        "effect",
        "aa_mutation_start_offset",
        "epitope_collection",
        "gene_expression_dict",
        "transcript_expression_dict",
        "defaultdict",
        "binding_prediction",
        "binding_prediction",
        "source_sequence_key",
        "binding_prediction",
        "get_effect",
        "binding_prediction",
        "variant",
        "x",
        "x",
        "allele",
        "x",
        "x",
        "peptide",
        "x",
        "x",
        "length",
        "x",
        "x",
        "value",
        "x",
        "x",
        "percentile_rank",
        "x",
        "get_effect",
        "x",
        "gene_name",
        "x",
        "get_effect",
        "x",
        "transcript_name",
        "x",
        "get_variant",
        "x",
        "short_description",
        "x",
        "get_effect",
        "x",
        "short_description",
        "x",
        "get_effect",
        "x",
        "__class__",
        "x",
        "x",
        "prediction_method_name",
        "x",
        "get_effect",
        "x",
        "mutant_protein_sequence",
        "x",
        "get_effect",
        "x",
        "aa_mutation_start_offset",
        "x",
        "get_effect",
        "x",
        "aa_mutation_end_offset",
        "x",
        "x",
        "offset",
        "gene_expression_dict",
        "x",
        "gene_expression_dict",
        "get",
        "get_effect",
        "x",
        "gene_id",
        "simple_column_extractors",
        "append",
        "key_fn_pair",
        "transcript_expression_dict",
        "x",
        "transcript_expression_dict",
        "get",
        "get_effect",
        "x",
        "transcript_id",
        "simple_column_extractors",
        "append",
        "key_fn_pair",
        "x",
        "epitope_collection",
        "column_name",
        "fn",
        "simple_column_extractors",
        "column_dict",
        "column_name",
        "append",
        "fn",
        "x",
        "x",
        "source_sequence_key",
        "effect",
        "aa_mutation_start_offset",
        "effect",
        "aa_mutation_end_offset",
        "contains_mutation",
        "x",
        "effect",
        "min",
        "x",
        "length",
        "max",
        "mut_start_in_source_seq",
        "x",
        "offset",
        "min",
        "x",
        "length",
        "max",
        "mut_end_in_source_seq",
        "x",
        "offset",
        "column_dict",
        "append",
        "peptide_mut_start",
        "column_dict",
        "append",
        "peptide_mut_end",
        "column_dict",
        "append",
        "mutated",
        "pair",
        "pair",
        "simple_column_extractors",
        "pd",
        "DataFrame",
        "column_dict",
        "columns",
        "column_names",
        "epitope_collection",
        "csv_path",
        "epitopes_to_dataframe",
        "epitope_collection",
        "df",
        "to_csv",
        "csv_path",
        "index"
    ],
    "literals": [
        "\"allele\"",
        "\"peptide\"",
        "\"length\"",
        "\"ic50\"",
        "\"percentile_rank\"",
        "\"gene\"",
        "\"transcript\"",
        "\"variant\"",
        "\"effect\"",
        "\"effect_type\"",
        "\"prediction_method\"",
        "\"protein_sequence\"",
        "\"protein_mutation_start\"",
        "\"protein_mutation_end\"",
        "\"peptide_offset_in_protein\"",
        "\"gene_expression\"",
        "\"transcript_expression\"",
        "'peptide_mutation_start'",
        "'peptide_mutation_end'",
        "'peptide_contains_mutation'",
        "'peptide_mutation_start'",
        "'peptide_mutation_end'",
        "'peptide_contains_mutation'"
    ],
    "variables": [
        "result",
        "seq",
        "mutation_start",
        "mutation_end",
        "start",
        "end",
        "result",
        "effect",
        "peptide_start",
        "peptide_end",
        "column_dict",
        "simple_column_extractors",
        "key_fn_pair",
        "key_fn_pair",
        "effect",
        "mut_start_in_source_seq",
        "mut_end_in_source_seq",
        "peptide_mut_start",
        "peptide_mut_end",
        "mutated",
        "peptide_mut_start",
        "peptide_mut_end",
        "mutated",
        "column_names",
        "df"
    ],
    "comments": [
        "Copyright (c) 2015. Mount Sinai School of Medicine",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "some effects will lack a mutant protein sequence since",
        "they are either silent or unpredictable",
        "list of column names and functions to extract the value for that column",
        "from a single binding prediction.",
        "Important for understanding this code: each element of epitope_collection",
        "is an mhctools.BindingPrediction object whose `source_sequence_key` field",
        "is being abused to store a Varcode.MutationEffect object (which acts as",
        "a unique key for the longer amino acid sequences out of which we pulled",
        "candidate epitopes)",
        "half-open interval of mutated residues in the source sequence",
        "the peptide was extracted from",
        "TODO: write unit tests for all interval logic,",
        "since it's easy to get wrong",
        "need a half-open start/end interval"
    ],
    "docstrings": [
        "\"\"\"\nHelpers to convert between data representations\n\"\"\"",
        "\"\"\"\n    Map each effect onto a source sequence, and start/end of an interval\n    from which the caller can construct a peptide subsequence containing\n    mutated residues\n    \"\"\"",
        "\"\"\"\n    An mhctools.EpitopeCollection creates a very noisy DataFrame representation\n    (since it doesn't know e.g. that Topiary's sequence keys are variants).\n    So, here's some specialized logic for making a DataFrame from a\n    Variant-specific EpitopeCollection.\n\n    Optional arguments for expression level dictionaries will cause the\n    data frame to have columns 'gene_expression' and/or 'transcript_expression'.\n    \"\"\""
    ],
    "functions": [
        "extract_mutant_peptides",
        "contains_mutation",
        "epitopes_to_dataframe",
        "get_effect",
        "get_variant",
        "epitopes_to_csv"
    ],
    "classes": []
}