{
    "identifiers": [
        "com",
        "facebook",
        "presto",
        "execution",
        "com",
        "google",
        "common",
        "Throwables",
        "com",
        "google",
        "common",
        "util",
        "concurrent",
        "ListenableFuture",
        "com",
        "google",
        "common",
        "util",
        "concurrent",
        "SettableFuture",
        "io",
        "airlift",
        "units",
        "Duration",
        "org",
        "testng",
        "annotations",
        "AfterClass",
        "org",
        "testng",
        "annotations",
        "Test",
        "java",
        "util",
        "concurrent",
        "ExecutorService",
        "java",
        "util",
        "concurrent",
        "Future",
        "io",
        "airlift",
        "concurrent",
        "Threads",
        "daemonThreadsNamed",
        "java",
        "util",
        "concurrent",
        "Executors",
        "newCachedThreadPool",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "MILLISECONDS",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "SECONDS",
        "org",
        "testng",
        "Assert",
        "assertEquals",
        "org",
        "testng",
        "Assert",
        "assertFalse",
        "org",
        "testng",
        "Assert",
        "assertTrue",
        "State",
        "BREAKFAST",
        "LUNCH",
        "DINNER",
        "executor",
        "newCachedThreadPool",
        "daemonThreadsNamed",
        "AfterClass",
        "executor",
        "shutdownNow",
        "Test",
        "stateMachine",
        "executor",
        "State",
        "BREAKFAST",
        "assertEquals",
        "stateMachine",
        "get",
        "State",
        "BREAKFAST",
        "assertNoStateChange",
        "stateMachine",
        "assertEquals",
        "stateMachine",
        "State",
        "BREAKFAST",
        "State",
        "BREAKFAST",
        "assertStateChange",
        "stateMachine",
        "assertEquals",
        "stateMachine",
        "State",
        "LUNCH",
        "State",
        "BREAKFAST",
        "State",
        "LUNCH",
        "assertStateChange",
        "stateMachine",
        "assertEquals",
        "stateMachine",
        "State",
        "BREAKFAST",
        "State",
        "LUNCH",
        "State",
        "BREAKFAST",
        "Test",
        "stateMachine",
        "executor",
        "State",
        "BREAKFAST",
        "assertEquals",
        "stateMachine",
        "get",
        "State",
        "BREAKFAST",
        "assertNoStateChange",
        "stateMachine",
        "stateMachine",
        "compareAndSet",
        "State",
        "DINNER",
        "State",
        "LUNCH",
        "assertStateChange",
        "stateMachine",
        "stateMachine",
        "compareAndSet",
        "State",
        "BREAKFAST",
        "State",
        "LUNCH",
        "State",
        "LUNCH",
        "assertNoStateChange",
        "stateMachine",
        "stateMachine",
        "compareAndSet",
        "State",
        "BREAKFAST",
        "State",
        "LUNCH",
        "assertNoStateChange",
        "stateMachine",
        "stateMachine",
        "compareAndSet",
        "State",
        "LUNCH",
        "State",
        "LUNCH",
        "Test",
        "stateMachine",
        "executor",
        "State",
        "BREAKFAST",
        "assertEquals",
        "stateMachine",
        "get",
        "State",
        "BREAKFAST",
        "assertNoStateChange",
        "stateMachine",
        "assertFalse",
        "stateMachine",
        "setIf",
        "State",
        "LUNCH",
        "currentState",
        "assertEquals",
        "currentState",
        "State",
        "BREAKFAST",
        "assertStateChange",
        "stateMachine",
        "assertTrue",
        "stateMachine",
        "setIf",
        "State",
        "LUNCH",
        "currentState",
        "assertEquals",
        "currentState",
        "State",
        "BREAKFAST",
        "State",
        "LUNCH",
        "assertNoStateChange",
        "stateMachine",
        "assertFalse",
        "stateMachine",
        "setIf",
        "State",
        "LUNCH",
        "currentState",
        "assertEquals",
        "currentState",
        "State",
        "LUNCH",
        "assertNoStateChange",
        "stateMachine",
        "assertFalse",
        "stateMachine",
        "setIf",
        "State",
        "LUNCH",
        "currentState",
        "assertEquals",
        "currentState",
        "State",
        "LUNCH",
        "stateMachine",
        "stateChange",
        "expectedState",
        "initialState",
        "stateMachine",
        "get",
        "futureChange",
        "stateMachine",
        "getStateChange",
        "initialState",
        "listenerChange",
        "SettableFuture",
        "create",
        "stateMachine",
        "addStateChangeListener",
        "listenerChange",
        "waitChange",
        "executor",
        "submit",
        "stateMachine",
        "waitForStateChange",
        "initialState",
        "SECONDS",
        "stateMachine",
        "get",
        "e",
        "currentThread",
        "interrupt",
        "Throwables",
        "propagate",
        "e",
        "e",
        "Throwables",
        "propagate",
        "e",
        "stateChange",
        "run",
        "assertEquals",
        "stateMachine",
        "get",
        "expectedState",
        "assertEquals",
        "futureChange",
        "get",
        "SECONDS",
        "expectedState",
        "assertEquals",
        "listenerChange",
        "get",
        "SECONDS",
        "expectedState",
        "assertEquals",
        "waitChange",
        "get",
        "SECONDS",
        "expectedState",
        "stateMachine",
        "stateChange",
        "initialState",
        "stateMachine",
        "get",
        "futureChange",
        "stateMachine",
        "getStateChange",
        "initialState",
        "listenerChange",
        "SettableFuture",
        "create",
        "stateMachine",
        "addStateChangeListener",
        "listenerChange",
        "waitChange",
        "executor",
        "submit",
        "stateMachine",
        "waitForStateChange",
        "initialState",
        "SECONDS",
        "stateMachine",
        "get",
        "e",
        "currentThread",
        "interrupt",
        "Throwables",
        "propagate",
        "e",
        "stateChange",
        "run",
        "assertEquals",
        "stateMachine",
        "get",
        "initialState",
        "futureChange",
        "get",
        "MILLISECONDS",
        "e",
        "e",
        "ignored",
        "assertFalse",
        "futureChange",
        "isDone",
        "futureChange",
        "cancel",
        "assertFalse",
        "listenerChange",
        "isDone",
        "listenerChange",
        "cancel",
        "assertFalse",
        "waitChange",
        "isDone",
        "waitChange",
        "cancel",
        "StateChanger"
    ],
    "literals": [
        "\"test-%s\"",
        "\"test\"",
        "\"test\"",
        "\"test\""
    ],
    "variables": [],
    "comments": [
        "no match with new state",
        "match with new state",
        "no match with same state",
        "match with same state",
        "false predicate with new state",
        "true predicate with new state",
        "false predicate with same state",
        "true predicate with same state",
        "none of the futures should finish, but there is no way to prove that",
        "the state change is not happening (the changes happen in another thread),",
        "so we wait a short time for nothing to happen."
    ],
    "docstrings": [
        "* Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "tearDown",
        "testSet",
        "testCompareAndSet",
        "testSetIf",
        "assertStateChange",
        "assertNoStateChange",
        "run"
    ],
    "classes": [
        "TestStateMachine"
    ]
}