{
    "identifiers": [
        "unittest",
        "env",
        "waagent",
        "sys",
        "tests",
        "tools",
        "status",
        "status",
        "args",
        "kwargs",
        "args",
        "kwargs",
        "host",
        "port",
        "__class__",
        "host",
        "__class__",
        "port",
        "method",
        "url",
        "data",
        "headers",
        "__class__",
        "url",
        "__class__",
        "MockCallCount",
        "args",
        "kwargs",
        "MockHTTPResponse",
        "MockOldHTTPConnection",
        "args",
        "kwargs",
        "MockHTTPConnection",
        "args",
        "kwargs",
        "MockHTTPResponse",
        "MockHTTPConnection",
        "unittest",
        "TestCase",
        "waagent",
        "Util",
        "httputil",
        "_ParseUrl",
        "assertEquals",
        "host",
        "assertEquals",
        "port",
        "assertEquals",
        "secure",
        "assertEquals",
        "path",
        "httputil",
        "_ParseUrl",
        "assertEquals",
        "host",
        "assertEquals",
        "port",
        "assertEquals",
        "secure",
        "assertEquals",
        "path",
        "httputil",
        "_ParseUrl",
        "assertEquals",
        "host",
        "assertEquals",
        "port",
        "assertEquals",
        "secure",
        "assertEquals",
        "path",
        "assertRaises",
        "ValueError",
        "httputil",
        "_ParseUrl",
        "httputil",
        "_ParseUrl",
        "assertEquals",
        "host",
        "assertEquals",
        "port",
        "assertEquals",
        "secure",
        "assertEquals",
        "path",
        "httputil",
        "_ParseUrl",
        "assertEquals",
        "host",
        "assertEquals",
        "port",
        "assertEquals",
        "secure",
        "assertEquals",
        "path",
        "Mockup",
        "waagent",
        "httplib",
        "MockHTTPConnection",
        "Mockup",
        "waagent",
        "os",
        "MockOSEnv",
        "waagent",
        "Util",
        "httputil",
        "HttpRequest",
        "chkProxy",
        "assertEquals",
        "MockHTTPConnection",
        "MockHost",
        "assertEquals",
        "MockHTTPConnection",
        "MockPort",
        "assertEquals",
        "MockHTTPConnection",
        "MockUrl",
        "httputil",
        "HttpRequest",
        "chkProxy",
        "assertEquals",
        "MockHTTPConnection",
        "MockHost",
        "assertEquals",
        "MockHTTPConnection",
        "MockPort",
        "assertEquals",
        "MockHTTPConnection",
        "MockUrl",
        "Mockup",
        "waagent",
        "MockHttpLib",
        "waagent",
        "Util",
        "httputil",
        "HttpRequest",
        "assertEquals",
        "MockHTTPConnection",
        "MockUrl",
        "Mockup",
        "waagent",
        "httplib",
        "MockOldHTTPConnection",
        "Mockup",
        "waagent",
        "httplib",
        "MockOldHTTPConnection",
        "Mockup",
        "waagent",
        "os",
        "MockOSEnv",
        "waagent",
        "Util",
        "httputil",
        "HttpRequest",
        "chkProxy",
        "assertEquals",
        "MockOldHTTPConnection",
        "MockUrl",
        "Mockup",
        "waagent",
        "Util",
        "Mockup",
        "waagent",
        "httplib",
        "MockBadHTTPConnection",
        "waagent",
        "Util",
        "httputil",
        "HttpRequest",
        "chkProxy",
        "maxRetry",
        "assertEquals",
        "MockBadHTTPConnection",
        "MockCallCount",
        "unittest",
        "main"
    ],
    "literals": [
        "\"foo\"",
        "\"hehe\"",
        "\"haha\"",
        "\"bar\"",
        "\"http_proxy\"",
        "\"http://httpproxy:8888\"",
        "\"https_proxy\"",
        "\"https://httpsproxy:8888\"",
        "\"http://foo:8/bar?hehe\"",
        "\"foo\"",
        "\"/bar?hehe\"",
        "\"http://foo.bar/\"",
        "\"foo.bar\"",
        "\"/\"",
        "\"https://foo.bar/\"",
        "\"foo.bar\"",
        "\"/\"",
        "\"https://a:b@foo.bar/\"",
        "\"https://foo.bar\"",
        "\"foo.bar\"",
        "\"/\"",
        "\"http://a:b@foo.bar:8888\"",
        "\"a:b@foo.bar\"",
        "\"/\"",
        "\"HTTPConnection\"",
        "\"environ\"",
        "\"GET\"",
        "\"http://foo.bar/get\"",
        "\"httpproxy\"",
        "\"http://foo.bar:80/get\"",
        "\"GET\"",
        "\"http://foo.bar/get\"",
        "\"foo.bar\"",
        "\"/get\"",
        "\"httplib\"",
        "\"The bellowing warning log is expected:\"",
        "\"GET\"",
        "\"https://foo.bar/get\"",
        "\"/get\"",
        "\"HTTPConnection\"",
        "\"HTTPSConnection\"",
        "\"environ\"",
        "\"The bellowing warning log is expected:\"",
        "\"GET\"",
        "\"https://foo.bar/get\"",
        "\"http://foo.bar:80/get\"",
        "\"RetryWaitingInterval\"",
        "\"HTTPConnection\"",
        "\"The bellowing error log is expected:\"",
        "\"GET\"",
        "\"http://foo.bar\"",
        "'__main__'"
    ],
    "variables": [
        "status",
        "reason",
        "MockHost",
        "MockPort",
        "MockUrl",
        "MockCallCount",
        "MockHost",
        "MockPort",
        "MockUrl",
        "HTTPConnection",
        "OK",
        "MockOSEnv",
        "httputil",
        "host",
        "port",
        "secure",
        "path",
        "host",
        "port",
        "secure",
        "path",
        "host",
        "port",
        "secure",
        "path",
        "host",
        "port",
        "secure",
        "path",
        "host",
        "port",
        "secure",
        "path",
        "httputil",
        "httputil",
        "httputil",
        "httputil",
        "MockBadHTTPConnection",
        "MockCallCount"
    ],
    "comments": [
        "Copyright 2014 Microsoft Corporation",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "",
        "If chkProxy is on, host and port should point to proxy server",
        "If chkProxy is off, ignore proxy"
    ],
    "docstrings": [],
    "functions": [
        "getheaders",
        "read",
        "request",
        "getresponse",
        "set_tunnel",
        "getresponse",
        "test_parseurl",
        "test_http_request",
        "test_https_fallback",
        "test_https_fallback2",
        "test_retry"
    ],
    "classes": [
        "MockHTTPResponse",
        "MockOldHTTPConnection",
        "MockHTTPConnection",
        "MockBadHTTPConnection",
        "MockHttpLib",
        "TestHttp"
    ]
}