{
    "identifiers": [
        "Collections",
        "Generic",
        "Newtonsoft",
        "Json",
        "Newtonsoft",
        "Json",
        "Linq",
        "Sim_Harness_GUI",
        "JsonUser",
        "JsonHouse",
        "jsonConfig",
        "_error",
        "jsonStringParser",
        "jsonConfig",
        "jsonConfig",
        "IsNullOrEmpty",
        "jsonConfig",
        "info",
        "JObject",
        "Parse",
        "jsonConfig",
        "JsonException",
        "ex",
        "Format",
        "ex",
        "Message",
        "WriteLine",
        "error",
        "info",
        "TryGetValue",
        "house_list",
        "_houses",
        "JsonHouse",
        "IJEnumerable",
        "JToken",
        "house_list",
        "Children",
        "JToken",
        "house",
        "houses",
        "JsonHouse",
        "house",
        "_houses",
        "Add",
        "newHouse",
        "id",
        "newHouse",
        "info",
        "TryGetValue",
        "user_list",
        "_users",
        "JsonHouse",
        "IJEnumerable",
        "JToken",
        "user_list",
        "Children",
        "JToken",
        "user",
        "users",
        "JsonUser",
        "user",
        "_houses",
        "Add",
        "newUser",
        "id",
        "newUser",
        "JToken",
        "house",
        "houses",
        "JObject",
        "Parse",
        "house",
        "ToString",
        "house_obj",
        "TryGetValue",
        "name",
        "name",
        "ToString",
        "house_id",
        "house_obj",
        "TryGetValue",
        "port_tok",
        "_port",
        "JsonConvert",
        "DeserializeObject",
        "port_tok",
        "ToString",
        "_port",
        "Net",
        "IPEndPoint",
        "MaxPort",
        "_port",
        "Net",
        "IPEndPoint",
        "MinPort",
        "house_obj",
        "TryGetValue",
        "dev_tok",
        "Diagnostics",
        "Debug",
        "Assert",
        "success",
        "IJEnumerable",
        "JToken",
        "dev_tok",
        "Children",
        "JToken",
        "dev",
        "devices",
        "Interfaces",
        "DeserializeDevice",
        "dev",
        "ToString",
        "TimeFrame",
        "device",
        "device",
        "ID",
        "DeviceID",
        "id",
        "DeviceModel",
        "Instance",
        "Devices",
        "Add",
        "device",
        "success",
        "house_obj",
        "TryGetValue",
        "weather_tok",
        "Diagnostics",
        "Debug",
        "Assert",
        "success",
        "_weather",
        "LinearWeather",
        "IJEnumerable",
        "JToken",
        "weather_tok",
        "Children",
        "JToken",
        "temp",
        "temps",
        "_weather",
        "Add",
        "JsonConvert",
        "DeserializeObject",
        "TemperatureSetPoint",
        "temp",
        "ToString",
        "Diagnostics",
        "Debug",
        "Assert",
        "DeviceModel",
        "Instance",
        "Devices",
        "Count",
        "status"
    ],
    "literals": [
        "\"Scenario parsing error: {0}\"",
        "\"houses\"",
        "\"users\"",
        "\"name\"",
        "\"port\"",
        "\"devices\"",
        "\"weather\""
    ],
    "variables": [
        "_users",
        "_houses",
        "_error",
        "JObject",
        "info",
        "error",
        "JToken",
        "house_list",
        "JToken",
        "user_list",
        "houses",
        "JsonHouse",
        "newHouse",
        "users",
        "JsonHouse",
        "newUser",
        "status",
        "JObject",
        "house_obj",
        "JToken",
        "name",
        "JToken",
        "port_tok",
        "JToken",
        "dev_tok",
        "success",
        "devices",
        "UInt64",
        "id",
        "Device",
        "device",
        "JToken",
        "weather_tok",
        "temps"
    ],
    "comments": [
        "Get all houses",
        "Get all users",
        "search through houses. Pity this isn't a map.",
        "found our house",
        "must get a valid port value",
        "TODO: Create DeviceInput and DeviceOutput for control",
        "class",
        "namespace"
    ],
    "docstrings": [],
    "functions": [
        "JsonFile",
        "jsonStringParser"
    ],
    "classes": [
        "JsonFile"
    ]
}