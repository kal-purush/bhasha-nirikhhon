{
    "identifiers": [
        "foo",
        "foo",
        "Fruit",
        "Fruit",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "foo3",
        "i",
        "i",
        "i",
        "foo4",
        "i",
        "i",
        "i",
        "foo5",
        "i",
        "i",
        "i",
        "source",
        "subString",
        "mySearch",
        "src",
        "sub",
        "src",
        "sub",
        "x",
        "y",
        "x",
        "Point",
        "Point",
        "Point",
        "Point",
        "x",
        "y",
        "z",
        "x",
        "y",
        "d",
        "d",
        "Geometry",
        "sideLength",
        "Geometry",
        "G",
        "Geometry",
        "G",
        "item1",
        "item2",
        "p",
        "Tuple",
        "p",
        "p",
        "pairToTuple"
    ],
    "literals": [
        "string",
        "\"Jonn\"",
        "\"a string\"",
        "'wada!'",
        "string",
        "\"Bobby\"",
        "\"Bobby\"",
        "\"Bobby\"",
        "string",
        "string",
        "string",
        "string",
        "\"hello\"",
        "\"world\""
    ],
    "variables": [
        "name",
        "isSuccess",
        "age",
        "foo",
        "foo",
        "foo1",
        "foo2",
        "foo3",
        "foo4",
        "foo5",
        "p",
        "validPerson",
        "invalidPerson",
        "mySearch",
        "p1",
        "p2",
        "d",
        "s1",
        "s2",
        "pairToTuple"
    ],
    "comments": [
        "There are 3 basic types in TypeScript",
        "Use 'any' type when it's impossible to know",
        "For collections, there are typed arrays and generic arrays",
        "generic array type",
        "For enumerations:",
        "\"void\" is used when a function returning nothing",
        "More function samples",
        "Interfaces are structural, anything that has the properties is compliant with the interface",
        "Optional properties, marked with a \"?\"",
        "And of course functions",
        "Object that implements the \"Person\" interface",
        "Can be treated as a Person since it has the name and move properties",
        "Objects that have the optional property:",
        "Is not a person because age is not a number",
        "Interfaces can also describe a function type",
        "Only the parameters' types are important, names are not important.",
        "Classes - members are public by default",
        "Properties",
        "Constructor - the public/private keywords in this context will generate",
        "the boiler plate code for the property and the initialization in the",
        "constructor.",
        "In this example, \"y\" will be defined just like \"x\" is, but with less code",
        "Default values are also supported",
        "Functions",
        "Static members",
        "y will be 0",
        "Inheritance",
        "Explicit call to the super class constructor is mandatory",
        "Overwrite",
        "Modules, \".\" can be used as separator for sub modules",
        "Local alias for referencing a module",
        "Generics",
        "Classes",
        "Interfaces",
        "And functions",
        "Including references to a definition file:",
        "<reference path=\"jquery.d.ts\" />"
    ],
    "docstrings": [],
    "functions": [
        "sayWada",
        "dist",
        "dist",
        "area"
    ],
    "classes": [
        "Point",
        "Point3D",
        "Square",
        "Tuple"
    ]
}