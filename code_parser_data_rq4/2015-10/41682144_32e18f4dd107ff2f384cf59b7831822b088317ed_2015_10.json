{
    "identifiers": [
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "edit",
        "n3editing",
        "configuration",
        "generators",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "javax",
        "servlet",
        "http",
        "HttpSession",
        "org",
        "apache",
        "commons",
        "lang",
        "StringUtils",
        "org",
        "apache",
        "commons",
        "logging",
        "Log",
        "org",
        "apache",
        "commons",
        "logging",
        "LogFactory",
        "org",
        "vivoweb",
        "webapp",
        "util",
        "ModelUtils",
        "com",
        "hp",
        "hpl",
        "jena",
        "vocabulary",
        "RDF",
        "com",
        "hp",
        "hpl",
        "jena",
        "vocabulary",
        "RDFS",
        "com",
        "hp",
        "hpl",
        "jena",
        "vocabulary",
        "XSD",
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "beans",
        "ObjectProperty",
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "controller",
        "VitroRequest",
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "dao",
        "VitroVocabulary",
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "dao",
        "WebappDaoFactory",
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "dao",
        "jena",
        "QueryUtils",
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "edit",
        "n3editing",
        "AutocompleteRequiredInputValidator",
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "edit",
        "n3editing",
        "VTwo",
        "DateTimeIntervalValidationVTwo",
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "edit",
        "n3editing",
        "VTwo",
        "DateTimeWithPrecisionVTwo",
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "edit",
        "n3editing",
        "VTwo",
        "EditConfigurationUtils",
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "edit",
        "n3editing",
        "VTwo",
        "EditConfigurationVTwo",
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "edit",
        "n3editing",
        "VTwo",
        "fields",
        "ChildVClassesOptions",
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "edit",
        "n3editing",
        "VTwo",
        "fields",
        "ConstantFieldOptions",
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "edit",
        "n3editing",
        "VTwo",
        "fields",
        "FieldOptions",
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "edit",
        "n3editing",
        "VTwo",
        "fields",
        "FieldVTwo",
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "edit",
        "n3editing",
        "VTwo",
        "fields",
        "IndividualsViaClassGroupOptions",
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "edit",
        "n3editing",
        "configuration",
        "preprocessors",
        "RoleToActivityPredicatePreprocessor",
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "edit",
        "n3editing",
        "configuration",
        "validators",
        "AntiXssValidation",
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "utils",
        "FrontEndEditingUtils",
        "EditMode",
        "edu",
        "cornell",
        "mannlib",
        "vitro",
        "webapp",
        "utils",
        "generators",
        "EditModeUtils",
        "log",
        "LogFactory",
        "getLog",
        "vreq",
        "Override",
        "vreq",
        "session",
        "editConfiguration",
        "initProcessParameters",
        "vreq",
        "session",
        "editConfiguration",
        "editConfiguration",
        "setVarNameForSubject",
        "editConfiguration",
        "setVarNameForPredicate",
        "editConfiguration",
        "setVarNameForObject",
        "editConfiguration",
        "setN3Required",
        "N3_PREFIX",
        "editConfiguration",
        "setN3Optional",
        "getN3ForNewRoleActivity",
        "getN3ForExistingRoleActivity",
        "getN3RoleLabelAssertion",
        "getN3ForStart",
        "getN3ForEnd",
        "editConfiguration",
        "setNewResources",
        "newResources",
        "vreq",
        "setUrisAndLiteralsInScope",
        "editConfiguration",
        "vreq",
        "setUrisAndLiteralsOnForm",
        "editConfiguration",
        "vreq",
        "setSparqlQueries",
        "editConfiguration",
        "vreq",
        "setFields",
        "editConfiguration",
        "vreq",
        "EditConfigurationUtils",
        "getPredicateUri",
        "vreq",
        "editConfiguration",
        "setTemplate",
        "getTemplate",
        "editConfiguration",
        "addValidator",
        "editConfiguration",
        "addValidator",
        "editConfiguration",
        "addValidator",
        "addPreprocessors",
        "editConfiguration",
        "vreq",
        "getWebappDaoFactory",
        "addFormSpecificData",
        "editConfiguration",
        "vreq",
        "prepare",
        "vreq",
        "editConfiguration",
        "editConfiguration",
        "vreq",
        "session",
        "editConfiguration",
        "editConfiguration",
        "setFormUrl",
        "EditConfigurationUtils",
        "getFormUrlWithoutContext",
        "vreq",
        "editConfiguration",
        "setEntityToReturnTo",
        "EditConfigurationUtils",
        "getSubjectUri",
        "vreq",
        "n3ForNewRoleActivity",
        "n3ForNewRoleActivity",
        "add",
        "getRoleToActivityPlaceholder",
        "getActivityToRolePlaceholder",
        "RDFS",
        "label",
        "getURI",
        "n3ForNewRoleActivity",
        "n3ForExistingRoleActivity",
        "n3ForExistingRoleActivity",
        "add",
        "getRoleToActivityPlaceholder",
        "getActivityToRolePlaceholder",
        "n3ForExistingRoleActivity",
        "RDFS",
        "label",
        "getURI",
        "n3ForStart",
        "n3ForStart",
        "add",
        "RoleToIntervalURI",
        "RDF",
        "getURI",
        "IntervalTypeURI",
        "IntervalToStartURI",
        "RDF",
        "getURI",
        "DateTimeValueTypeURI",
        "DateTimeValueURI",
        "DateTimePrecisionURI",
        "n3ForStart",
        "n3ForEnd",
        "n3ForEnd",
        "add",
        "RoleToIntervalURI",
        "RDF",
        "getURI",
        "IntervalTypeURI",
        "IntervalToEndURI",
        "RDF",
        "getURI",
        "DateTimeValueTypeURI",
        "DateTimeValueURI",
        "DateTimePrecisionURI",
        "n3ForEnd",
        "vreq",
        "DEFAULT_NS_TOKEN",
        "newResources",
        "newResources",
        "put",
        "DEFAULT_NS_TOKEN",
        "newResources",
        "put",
        "DEFAULT_NS_TOKEN",
        "newResources",
        "put",
        "DEFAULT_NS_TOKEN",
        "newResources",
        "put",
        "DEFAULT_NS_TOKEN",
        "newResources",
        "put",
        "DEFAULT_NS_TOKEN",
        "newResources",
        "editConfiguration",
        "vreq",
        "urisInScope",
        "urisInScope",
        "put",
        "getInversePredicate",
        "vreq",
        "urisInScope",
        "put",
        "getRoleType",
        "editConfiguration",
        "setUrisInScope",
        "urisInScope",
        "vreq",
        "inversePredicateArray",
        "op",
        "EditConfigurationUtils",
        "getObjectProperty",
        "vreq",
        "op",
        "op",
        "getURIInverse",
        "inversePredicateArray",
        "add",
        "op",
        "getURIInverse",
        "inversePredicateArray",
        "editConfiguration",
        "vreq",
        "urisOnForm",
        "urisOnForm",
        "add",
        "urisOnForm",
        "add",
        "urisOnForm",
        "add",
        "urisOnForm",
        "add",
        "editConfiguration",
        "setUrisOnform",
        "urisOnForm",
        "literalsOnForm",
        "literalsOnForm",
        "add",
        "literalsOnForm",
        "add",
        "literalsOnForm",
        "add",
        "editConfiguration",
        "setLiteralsOnForm",
        "literalsOnForm",
        "editConfiguration",
        "vreq",
        "put",
        "getActivityLabelQuery",
        "vreq",
        "put",
        "getRoleLabelQuery",
        "vreq",
        "put",
        "getExistingStartDateQuery",
        "vreq",
        "put",
        "getExistingEndDateQuery",
        "vreq",
        "editConfiguration",
        "setSparqlForExistingLiterals",
        "put",
        "getExistingRoleActivityQuery",
        "vreq",
        "put",
        "getActivityTypeQuery",
        "vreq",
        "put",
        "getIntervalNodeQuery",
        "vreq",
        "put",
        "getStartNodeQuery",
        "vreq",
        "put",
        "getEndNodeQuery",
        "vreq",
        "put",
        "getStartPrecisionQuery",
        "vreq",
        "put",
        "getEndPrecisionQuery",
        "vreq",
        "put",
        "getRoleToActivityPredicateQuery",
        "vreq",
        "put",
        "getActivityToRolePredicateQuery",
        "vreq",
        "editConfiguration",
        "setSparqlForExistingUris",
        "vreq",
        "query",
        "addToQuery",
        "predicates",
        "getPossibleActivityToRolePredicates",
        "p",
        "predicates",
        "addToQuery",
        "add",
        "p",
        "query",
        "StringUtils",
        "join",
        "addToQuery",
        "query",
        "query",
        "vreq",
        "query",
        "query",
        "getFilterRoleToActivityPredicate",
        "query",
        "query",
        "vreq",
        "query",
        "RoleToIntervalURI",
        "VitroVocabulary",
        "RDF_TYPE",
        "IntervalTypeURI",
        "IntervalToEndURI",
        "VitroVocabulary",
        "RDF_TYPE",
        "DateTimeValueTypeURI",
        "DateTimePrecisionURI",
        "query",
        "vreq",
        "query",
        "RoleToIntervalURI",
        "VitroVocabulary",
        "RDF_TYPE",
        "IntervalTypeURI",
        "IntervalToStartURI",
        "VitroVocabulary",
        "RDF_TYPE",
        "DateTimeValueTypeURI",
        "DateTimePrecisionURI",
        "query",
        "vreq",
        "query",
        "RoleToIntervalURI",
        "VitroVocabulary",
        "RDF_TYPE",
        "IntervalTypeURI",
        "IntervalToEndURI",
        "VitroVocabulary",
        "RDF_TYPE",
        "DateTimeValueTypeURI",
        "query",
        "vreq",
        "query",
        "RoleToIntervalURI",
        "VitroVocabulary",
        "RDF_TYPE",
        "IntervalTypeURI",
        "IntervalToStartURI",
        "VitroVocabulary",
        "RDF_TYPE",
        "DateTimeValueTypeURI",
        "query",
        "vreq",
        "query",
        "RoleToIntervalURI",
        "VitroVocabulary",
        "RDF_TYPE",
        "IntervalTypeURI",
        "query",
        "vreq",
        "fieldOptions",
        "options",
        "fieldOptions",
        "getOptions",
        "options",
        "options",
        "size",
        "typeUris",
        "typeUri",
        "options",
        "keySet",
        "typeUri",
        "typeUri",
        "isEmpty",
        "typeUris",
        "add",
        "typeUri",
        "defaultActivityTypeQuery",
        "getDefaultActivityTypeQuery",
        "vreq",
        "typeFilters",
        "StringUtils",
        "join",
        "typeUris",
        "defaultActivityTypeQuery",
        "replaceAll",
        "typeFilters",
        "getDefaultActivityTypeQuery",
        "vreq",
        "vreq",
        "opts",
        "log",
        "debug",
        "opts",
        "getClassUri",
        "QueryUtils",
        "subUriForQueryVar",
        "getSubclassActivityTypeQuery",
        "vreq",
        "opts",
        "getClassUri",
        "vreq",
        "opts",
        "log",
        "debug",
        "opts",
        "getClassGroupUri",
        "QueryUtils",
        "subUriForQueryVar",
        "getClassgroupActivityTypeQuery",
        "vreq",
        "opts",
        "getClassGroupUri",
        "vreq",
        "activityTypeQuery",
        "fieldOpts",
        "getRoleActivityFieldOptions",
        "vreq",
        "fieldOpts",
        "activityTypeQuery",
        "getDefaultActivityTypeQuery",
        "vreq",
        "fieldOpts",
        "activityTypeQuery",
        "getActivityTypeQueryForConstantOptions",
        "vreq",
        "fieldOpts",
        "fieldOpts",
        "activityTypeQuery",
        "getActivityTypeQueryForChildVClassOptions",
        "vreq",
        "fieldOpts",
        "fieldOpts",
        "activityTypeQuery",
        "getActivityTypeQueryForIndividualsViaClassGroupOptions",
        "vreq",
        "fieldOpts",
        "ex",
        "log",
        "debug",
        "ex",
        "activityTypeQuery",
        "getDefaultActivityTypeQuery",
        "vreq",
        "activityTypeQuery",
        "QueryUtils",
        "replaceQueryVar",
        "activityTypeQuery",
        "getRoleToActivityPlaceholderName",
        "log",
        "debug",
        "activityTypeQuery",
        "activityTypeQuery",
        "vreq",
        "query",
        "VIVO_NS",
        "VitroVocabulary",
        "vitroURI",
        "query",
        "getFilterRoleToActivityPredicate",
        "query",
        "query",
        "vreq",
        "query",
        "VIVO_NS",
        "VitroVocabulary",
        "RDFS",
        "VitroVocabulary",
        "vitroURI",
        "query",
        "getFilterRoleToActivityPredicate",
        "query",
        "query",
        "vreq",
        "query",
        "VIVO_NS",
        "VitroVocabulary",
        "vitroURI",
        "query",
        "getFilterRoleToActivityPredicate",
        "query",
        "query",
        "vreq",
        "query",
        "VIVO_NS",
        "query",
        "query",
        "getFilterRoleToActivityPredicate",
        "query",
        "query",
        "vreq",
        "query",
        "RoleToIntervalURI",
        "VitroVocabulary",
        "RDF_TYPE",
        "IntervalTypeURI",
        "IntervalToEndURI",
        "VitroVocabulary",
        "RDF_TYPE",
        "DateTimeValueTypeURI",
        "DateTimeValueURI",
        "query",
        "vreq",
        "query",
        "RoleToIntervalURI",
        "VitroVocabulary",
        "RDF_TYPE",
        "IntervalTypeURI",
        "IntervalToStartURI",
        "VitroVocabulary",
        "RDF_TYPE",
        "DateTimeValueTypeURI",
        "DateTimeValueURI",
        "query",
        "vreq",
        "query",
        "VitroVocabulary",
        "LABEL",
        "query",
        "vreq",
        "query",
        "VIVO_NS",
        "RDFS",
        "getURI",
        "query",
        "query",
        "getFilterRoleToActivityPredicate",
        "query",
        "query",
        "editConfiguration",
        "vreq",
        "predicateUri",
        "fields",
        "getActivityLabelField",
        "editConfiguration",
        "vreq",
        "fields",
        "getActivityLabelDisplayField",
        "editConfiguration",
        "vreq",
        "fields",
        "getRoleActivityTypeField",
        "editConfiguration",
        "vreq",
        "fields",
        "getExistingRoleActivityField",
        "editConfiguration",
        "vreq",
        "fields",
        "getRoleLabelField",
        "editConfiguration",
        "vreq",
        "fields",
        "getStartField",
        "editConfiguration",
        "vreq",
        "fields",
        "getEndField",
        "editConfiguration",
        "vreq",
        "fields",
        "getRoleToActivityPredicateField",
        "editConfiguration",
        "vreq",
        "fields",
        "getActivityToRolePredicateField",
        "editConfiguration",
        "vreq",
        "fields",
        "editConfiguration",
        "setFields",
        "fields",
        "editConfiguration",
        "vreq",
        "fields",
        "field",
        "fieldName",
        "field",
        "setName",
        "fieldName",
        "stringDatatypeUri",
        "XSD",
        "xstring",
        "toString",
        "field",
        "setRangeDatatypeUri",
        "stringDatatypeUri",
        "fields",
        "put",
        "field",
        "getName",
        "field",
        "editConfiguration",
        "vreq",
        "fields",
        "field",
        "fieldName",
        "field",
        "setName",
        "fieldName",
        "stringDatatypeUri",
        "XSD",
        "xstring",
        "toString",
        "field",
        "setRangeDatatypeUri",
        "stringDatatypeUri",
        "fields",
        "put",
        "field",
        "getName",
        "field",
        "editConfiguration",
        "vreq",
        "fields",
        "field",
        "fieldName",
        "field",
        "setName",
        "fieldName",
        "stringDatatypeUri",
        "XSD",
        "xstring",
        "toString",
        "field",
        "setRangeDatatypeUri",
        "stringDatatypeUri",
        "validators",
        "validators",
        "add",
        "stringDatatypeUri",
        "field",
        "setValidators",
        "validators",
        "fields",
        "put",
        "field",
        "getName",
        "field",
        "editConfiguration",
        "vreq",
        "fields",
        "field",
        "fieldName",
        "field",
        "setName",
        "fieldName",
        "stringDatatypeUri",
        "XSD",
        "xstring",
        "toString",
        "field",
        "setRangeDatatypeUri",
        "stringDatatypeUri",
        "fields",
        "put",
        "field",
        "getName",
        "field",
        "editConfiguration",
        "vreq",
        "fields",
        "fieldName",
        "field",
        "field",
        "setName",
        "fieldName",
        "validators",
        "isAddMode",
        "vreq",
        "isRepairMode",
        "vreq",
        "validators",
        "add",
        "field",
        "setValidators",
        "validators",
        "field",
        "setOptions",
        "getRoleActivityFieldOptions",
        "vreq",
        "fields",
        "put",
        "field",
        "getName",
        "field",
        "editConfiguration",
        "vreq",
        "fields",
        "fieldName",
        "field",
        "field",
        "setName",
        "fieldName",
        "fields",
        "put",
        "field",
        "getName",
        "field",
        "editConfiguration",
        "vreq",
        "fields",
        "fieldName",
        "field",
        "field",
        "setName",
        "fieldName",
        "stringDatatypeUri",
        "XSD",
        "xstring",
        "toString",
        "field",
        "setRangeDatatypeUri",
        "stringDatatypeUri",
        "validators",
        "validators",
        "add",
        "stringDatatypeUri",
        "field",
        "setValidators",
        "validators",
        "fields",
        "put",
        "field",
        "getName",
        "field",
        "editConfiguration",
        "vreq",
        "fields",
        "field",
        "fieldName",
        "field",
        "setName",
        "fieldName",
        "field",
        "setEditElement",
        "field",
        "getStartDatePrecision",
        "VitroVocabulary",
        "Precision",
        "NONE",
        "uri",
        "fields",
        "put",
        "field",
        "getName",
        "field",
        "editConfiguration",
        "vreq",
        "fields",
        "field",
        "fieldName",
        "field",
        "setName",
        "fieldName",
        "field",
        "setEditElement",
        "field",
        "getEndDatePrecision",
        "VitroVocabulary",
        "Precision",
        "NONE",
        "uri",
        "fields",
        "put",
        "field",
        "getName",
        "field",
        "editConfiguration",
        "wadf",
        "editConfiguration",
        "addEditSubmissionPreprocessor",
        "editConfiguration",
        "wadf",
        "vreq",
        "getRoleToActivityPlaceholder",
        "ModelUtils",
        "getPossiblePropertiesForRole",
        "ModelUtils",
        "getPossibleInversePropertiesForRole",
        "vreq",
        "roleToGrantPredicates",
        "getPossibleRoleToActivityPredicates",
        "EditModeUtils",
        "getEditMode",
        "vreq",
        "roleToGrantPredicates",
        "vreq",
        "EditModeUtils",
        "isAddMode",
        "getEditMode",
        "vreq",
        "vreq",
        "EditModeUtils",
        "isEditMode",
        "getEditMode",
        "vreq",
        "vreq",
        "EditModeUtils",
        "isRepairMode",
        "getEditMode",
        "vreq",
        "VIVO_NS",
        "RoleToIntervalURI",
        "VIVO_NS",
        "IntervalTypeURI",
        "VIVO_NS",
        "IntervalToStartURI",
        "VIVO_NS",
        "IntervalToEndURI",
        "VIVO_NS",
        "StartYearPredURI",
        "VIVO_NS",
        "EndYearPredURI",
        "VIVO_NS",
        "DateTimeValueTypeURI",
        "VIVO_NS",
        "DateTimePrecisionURI",
        "VIVO_NS",
        "DateTimeValueURI",
        "VIVO_NS",
        "editConfiguration",
        "vreq",
        "formSpecificData",
        "formSpecificData",
        "put",
        "getEditMode",
        "vreq",
        "name",
        "toLowerCase",
        "objectSelect",
        "objectSelect",
        "add",
        "formSpecificData",
        "put",
        "objectSelect",
        "formSpecificData",
        "put",
        "isShowRoleLabelField",
        "editConfiguration",
        "setFormSpecificData",
        "formSpecificData",
        "predicateVar",
        "addFilter",
        "predicates",
        "getPossibleRoleToActivityPredicates",
        "filterPortions",
        "p",
        "predicates",
        "filterPortions",
        "add",
        "predicateVar",
        "p",
        "addFilter",
        "StringUtils",
        "join",
        "filterPortions",
        "addFilter",
        "addFilter",
        "getRoleToActivityPlaceholderName",
        "RoleActivityOptionTypes",
        "VCLASSGROUP",
        "CHILD_VCLASSES",
        "HARDCODED_LITERALS",
        "N3_PREFIX",
        "precision",
        "VitroVocabulary",
        "Precision",
        "YEAR",
        "uri",
        "precision",
        "precision",
        "VitroVocabulary",
        "Precision",
        "YEAR",
        "uri",
        "precision"
    ],
    "literals": [
        "\"person\"",
        "\"rolePredicate\"",
        "\"role\"",
        "\"\\n\"",
        "\"?person ?rolePredicate ?role .\\n\"",
        "\"?role a ?roleType .\\n\"",
        "\"?role ?inverseRolePredicate ?person .\"",
        "\"startField\"",
        "\"endField\"",
        "\"existingRoleActivity\"",
        "\"activityLabel\"",
        "\"?role \"",
        "\" ?roleActivity .\\n\"",
        "\"?roleActivity \"",
        "\" ?role . \\n\"",
        "\"?roleActivity <\"",
        "\"> ?activityLabel . \\n\"",
        "\"?roleActivity a ?roleActivityType .\"",
        "\"?role \"",
        "\" ?existingRoleActivity .\\n\"",
        "\"?existingRoleActivity \"",
        "\" ?role . \\n\"",
        "\"?existingRoleActivity a ?roleActivityType .\"",
        "\"?role <\"",
        "\"> ?roleLabel .\"",
        "\"?role  <\"",
        "\"> ?intervalNode .\"",
        "\"?intervalNode  <\"",
        "\"> <\"",
        "\"> .\"",
        "\"?intervalNode <\"",
        "\"> ?startNode .\"",
        "\"?startNode  <\"",
        "\"> <\"",
        "\"> .\"",
        "\"?startNode  <\"",
        "\"> ?startField-value .\"",
        "\"?startNode  <\"",
        "\"> ?startField-precision .\"",
        "\"?role      <\"",
        "\"> ?intervalNode .  \"",
        "\"?intervalNode  <\"",
        "\"> <\"",
        "\"> .\"",
        "\"?intervalNode <\"",
        "\"> ?endNode .\"",
        "\"?endNode  <\"",
        "\"> <\"",
        "\"> .\"",
        "\"?endNode  <\"",
        "\"> ?endField-value .\"",
        "\"?endNode  <\"",
        "\"> ?endField-precision .\"",
        "\"role\"",
        "\"roleActivity\"",
        "\"intervalNode\"",
        "\"startNode\"",
        "\"endNode\"",
        "\"inverseRolePredicate\"",
        "\"roleType\"",
        "\"existingRoleActivity\"",
        "\"roleActivityType\"",
        "\"roleToActivityPredicate\"",
        "\"activityToRolePredicate\"",
        "\"activityLabel\"",
        "\"activityLabelDisplay\"",
        "\"roleLabel\"",
        "\"activityLabel\"",
        "\"roleLabel\"",
        "\"startField-value\"",
        "\"endField-value\"",
        "\"existingRoleActivity\"",
        "\"roleActivityType\"",
        "\"intervalNode\"",
        "\"startNode\"",
        "\"endNode\"",
        "\"startField-precision\"",
        "\"endField-precision\"",
        "\"roleToActivityPredicate\"",
        "\"activityToRolePredicate\"",
        "\"SELECT ?existingActivityToRolePredicate \\n \"",
        "\"WHERE { \\n\"",
        "\"?roleActivity ?existingActivityToRolePredicate ?role .\\n\"",
        "\"(?existingActivityToRolePredicate=<\"",
        "\">)\"",
        "\"FILTER (\"",
        "\" || \"",
        "\")\\n\"",
        "\"}\"",
        "\"SELECT ?existingRoleToActivityPredicate \\n \"",
        "\"WHERE { \\n\"",
        "\"?role ?existingRoleToActivityPredicate ?roleActivity .\\n\"",
        "\"existingRoleToActivityPredicate\"",
        "\"\\n}\"",
        "\"SELECT ?existingEndPrecision WHERE {\\n\"",
        "\"?role <\"",
        "\"> ?intervalNode .\\n\"",
        "\"?intervalNode <\"",
        "\"> <\"",
        "\"> .\\n\"",
        "\"?intervalNode <\"",
        "\"> ?endNode .\\n\"",
        "\"?endNode <\"",
        "\"> <\"",
        "\"> .  \\n\"",
        "\"?endNode <\"",
        "\"> ?existingEndPrecision . }\"",
        "\"SELECT ?existingStartPrecision WHERE {\\n\"",
        "\"?role <\"",
        "\"> ?intervalNode .\\n\"",
        "\"?intervalNode <\"",
        "\"> <\"",
        "\"> .\\n\"",
        "\"?intervalNode <\"",
        "\"> ?startNode .\\n\"",
        "\"?startNode <\"",
        "\"> <\"",
        "\"> .  \\n\"",
        "\"?startNode <\"",
        "\"> ?existingStartPrecision . }\"",
        "\"SELECT ?existingEndNode WHERE {\\n\"",
        "\"?role <\"",
        "\"> ?intervalNode .\\n\"",
        "\"?intervalNode <\"",
        "\"> <\"",
        "\"> .\\n\"",
        "\"?intervalNode <\"",
        "\"> ?existingEndNode . \\n\"",
        "\"?existingEndNode <\"",
        "\"> <\"",
        "\"> .}\\n\"",
        "\"SELECT ?existingStartNode WHERE {\\n\"",
        "\"?role <\"",
        "\"> ?intervalNode .\\n\"",
        "\"?intervalNode <\"",
        "\"> <\"",
        "\"> .\\n\"",
        "\"?intervalNode <\"",
        "\"> ?existingStartNode . \\n\"",
        "\"?existingStartNode <\"",
        "\"> <\"",
        "\"> .}\"",
        "\"SELECT ?existingIntervalNode WHERE { \\n\"",
        "\"?role <\"",
        "\"> ?existingIntervalNode . \\n\"",
        "\" ?existingIntervalNode <\"",
        "\"> <\"",
        "\"> . }\\n\"",
        "\"(?existingActivityType = <\"",
        "\">)\"",
        "\"FILTER (\"",
        "\"||\"",
        "\")\"",
        "\"}$\"",
        "\"\"",
        "\"}\"",
        "\"objectClassUri = \"",
        "\"objectClassUri\"",
        "\"ClassGroupUri = \"",
        "\"classgroup\"",
        "\"error while building activity type query\"",
        "\"predicate\"",
        "\"Activity type query: \"",
        "\"PREFIX core: <\"",
        "\">\\n\"",
        "\"PREFIX vitro: <\"",
        "\"> \\n\"",
        "\"SELECT ?existingActivityType WHERE { \\n\"",
        "\"    ?role ?predicate ?existingActivity . \\n\"",
        "\"    ?existingActivity vitro:mostSpecificType ?existingActivityType . \\n\"",
        "\"predicate\"",
        "\"}\"",
        "\"PREFIX core: <\"",
        "\">\\n\"",
        "\"PREFIX rdfs: <\"",
        "\">\\n\"",
        "\"PREFIX vitro: <\"",
        "\"> \\n\"",
        "\"SELECT ?existingActivityType WHERE {\\n\"",
        "\"    ?role ?predicate ?existingActivity . \\n\"",
        "\"    ?existingActivity vitro:mostSpecificType ?existingActivityType . \\n\"",
        "\"    ?existingActivityType rdfs:subClassOf ?objectClassUri . \\n\"",
        "\"predicate\"",
        "\"}\"",
        "\"PREFIX core: <\"",
        "\">\\n\"",
        "\"PREFIX vitro: <\"",
        "\"> \\n\"",
        "\"SELECT ?existingActivityType WHERE { \\n\"",
        "\"    ?role ?predicate ?existingActivity . \\n\"",
        "\"    ?existingActivity vitro:mostSpecificType ?existingActivityType . \\n\"",
        "\"    ?existingActivityType vitro:inClassGroup ?classgroup . \\n\"",
        "\"predicate\"",
        "\"}\"",
        "\"PREFIX core: <\"",
        "\">\"",
        "\"SELECT ?existingRoleActivity WHERE { \\n\"",
        "\" ?role ?predicate ?existingRoleActivity . \\n \"",
        "\"predicate\"",
        "\"}\"",
        "\" SELECT ?existingEndDate WHERE {\\n\"",
        "\"?role <\"",
        "\"> ?intervalNode .\\n\"",
        "\"?intervalNode <\"",
        "\"> <\"",
        "\"> .\\n\"",
        "\"?intervalNode <\"",
        "\"> ?endNode .\\n\"",
        "\"?endNode <\"",
        "\"> <\"",
        "\"> .\\n\"",
        "\"?endNode <\"",
        "\"> ?existingEndDate . }\"",
        "\"SELECT ?existingDateStart WHERE {\\n\"",
        "\"?role <\"",
        "\"> ?intervalNode .\\n\"",
        "\"?intervalNode <\"",
        "\"> <\"",
        "\"> .\\n\"",
        "\"?intervalNode <\"",
        "\"> ?startNode .\\n\"",
        "\"?startNode <\"",
        "\"> <\"",
        "\"> .\\n\"",
        "\"?startNode <\"",
        "\"> ?existingDateStart . }\"",
        "\"SELECT ?existingRoleLabel WHERE { \\n\"",
        "\"?role  <\"",
        "\"> ?existingRoleLabel . }\"",
        "\"PREFIX core: <\"",
        "\">\"",
        "\"PREFIX rdfs: <\"",
        "\"> \\n\"",
        "\"SELECT ?existingTitle WHERE { \\n\"",
        "\"?role ?predicate ?existingActivity . \\n\"",
        "\"?existingActivity rdfs:label ?existingTitle . \\n\"",
        "\"predicate\"",
        "\"}\"",
        "\"activityToRolePredicate\"",
        "\"roleToActivityPredicate\"",
        "\"activityLabel\"",
        "\"datatype:\"",
        "\"activityLabelDisplay\"",
        "\"roleActivityType\"",
        "\"nonempty\"",
        "\"existingRoleActivity\"",
        "\"roleLabel\"",
        "\"datatype:\"",
        "\"startField\"",
        "\"endField\"",
        "\"http://vivoweb.org/ontology/core#\"",
        "\"dateTimeInterval\"",
        "\"DateTimeInterval\"",
        "\"start\"",
        "\"end\"",
        "\"startYear\"",
        "\"endYear\"",
        "\"DateTimeValue\"",
        "\"dateTimePrecision\"",
        "\"dateTime\"",
        "\"editMode\"",
        "\"roleActivityType\"",
        "\"objectSelect\"",
        "\"showRoleLabelField\"",
        "\"FILTER (\"",
        "\"(?\"",
        "\"=<\"",
        "\">)\"",
        "\" || \"",
        "\")\"",
        "\"?\"",
        "\"roleToActivityPredicate\"",
        "\"?activityToRolePredicate\"",
        "\"@prefix core: <http://vivoweb.org/ontology/core#> .\""
    ],
    "variables": [],
    "comments": [
        "abstract String getStartDatePrecision();",
        "abstract String getEndDatePrecision();",
        "not needed any more since the FieldOption can be returned",
        "abstract HashMap<String, String> getRoleActivityTypeLiteralOptions();",
        "not needed any more since the FieldOption can be returned",
        "abstract RoleActivityOptionTypes getRoleActivityTypeOptionsType();",
        "not needed any more since the FieldOption can be returned",
        "abstract String getRoleActivityTypeObjectClassUri(VitroRequest vreq);",
        "Bdc34: not used anywhere? that's odd",
        "abstract String getActivityToRolePredicate();",
        "Required N3",
        "Optional N3",
        "Note here we are placing the role to activity relationships as optional, since",
        "it's possible to delete this relationship from the activity",
        "On submission, if we kept these statements in n3required, the retractions would",
        "not have all variables substituted, leading to an error",
        "Note also we are including the relationship as a separate string in the array, to allow it to be",
        "independently evaluated and passed back with substitutions even if the other strings are not",
        "substituted correctly.",
        "getN3ForActivityType(),",
        "In scope",
        "on Form",
        "Sparql queries",
        "set fields",
        "Form title and submit label now moved to edit configuration template",
        "TODO: check if edit configuration template correct place to set those or whether",
        "additional methods here should be used and reference instead, e.g. edit configuration template could call",
        "default obj property form.populateTemplate or some such method",
        "Select from existing also set within template itself",
        "Add validator",
        "Add preprocessors",
        "Adding additional data, specifically edit mode",
        "prepare",
        "null forces the default NS",
        "Setting inverse role predicate",
        "Uris in scope include subject, predicate, and object var",
        "literals in scope empty initially, usually populated by code in prepare for update",
        "with existing values for variables",
        "add role activity and roleActivityType to uris on form",
        "Also adding the predicates",
        "TODO: Check how to override this in case of default parameter? Just write hidden input to form?",
        "activity label and role label are literals on form",
        "Queries for activity label, role label, start Field value, end Field value",
        "Queries for role activity, activity type query, interval node,",
        "start node, end node, start field precision, endfield precision",
        "Also need sparql queries for roleToActivityPredicate and activityToRolePredicate",
        "Get possible predicates",
        "Get possible predicates",
        "make list of type URIs from options, this can be called with null since",
        "ConstantFieldOptions doesn't use any of the arguments.",
        "",
        "The replacement of activity type query's predicate was only relevant when we actually",
        "know which predicate is definitely being used here",
        "Here we have multiple values possible for predicate so the original",
        "Replacement should only happen when we have an actual predicate",
        "String replaceRoleToActivityPredicate = getRoleToActivityPredicate(vreq);",
        "If role to activity predicate is the default query, then we need to replace with a union",
        "of both realizedIn and the other",
        "Multiple fields",
        "These fields are for the predicates that will be set later",
        "TODO: Do these only if not using a parameter for the predicate?",
        "This is a literal technically?",
        "get range data type uri and range language",
        "get range data type uri and range language",
        "Label of \"right side\" of role, i.e. label for role roleIn Activity",
        "get range data type uri and range language",
        "get range data type uri and range language",
        "type of \"right side\" of role, i.e. type of activity from role roleIn activity",
        "get range data type uri and range language",
        "field.setOptionsType(getRoleActivityTypeOptionsType().toString());",
        "field.setObjectClassUri(getRoleActivityTypeObjectClassUri(vreq));",
        "",
        "HashMap<String, String> literalOptionsMap = getRoleActivityTypeLiteralOptions();",
        "List<List<String>> fieldLiteralOptions = new ArrayList<List<String>>();",
        "Set<String> optionUris = literalOptionsMap.keySet();",
        "for(String optionUri: optionUris) {",
        "List<String> uriLabelArray = new ArrayList<String>();",
        "uriLabelArray.add(optionUri);",
        "uriLabelArray.add(literalOptionsMap.get(optionUri));",
        "fieldLiteralOptions.add(uriLabelArray);",
        "}",
        "field.setLiteralOptions(fieldLiteralOptions);",
        "Assuming URI for activity for role?",
        "Add preprocessor that will replace the role to activity predicate and inverse",
        "with correct properties based on the activity type",
        "This has a default value, but note that even that will not be used",
        "in the update with realized in or contributes to",
        "Overridden when need be in subclassed generator",
        "Also note that for now we're going to actually going to return a",
        "placeholder value by default",
        "TODO: <uri> and ?placeholder are incompatible",
        "Ensure when overwritten that this includes the <> b/c otherwise the query won't work",
        "Some values will have a default value",
        "Form specific data",
        "Fields that will need select lists generated",
        "Store field names",
        "TODO: Check if this is the proper way to do this?",
        "Also put in show role label field",
        "Put in the fact that we require field",
        "Types of options to populate drop-down for types for the \"right side\" of the role"
    ],
    "docstrings": [
        "$This file is distributed under the terms of the license in /doc/license.txt$",
        "* Generates the edit configuration for adding a Role to a Person.  \n  \n  Stage one is selecting the type of the non-person thing \n  associated with the Role with the intention of reducing the \n  number of Individuals that the user has to select from.\n  Stage two is selecting the non-person Individual to associate\n  with the Role. \n\n  This is intended to create a set of statements like:\n\n  ?person  core:hasResearchActivityRole ?newRole.\n  ?newRole rdf:type core:ResearchActivityRole ;         \n           roleToActivityPredicate ?someActivity .\n  ?someActivity rdf:type core:ResearchActivity .\n  ?someActivity rdfs:label \"activity title\" .\n  \n  \n  \n  Important: This form cannot be directly used as a custom form.  It has parameters that must be set.\n  See addClinicalRoleToPerson.jsp for an example.\n     \n    roleToActivityPredicate and activityToRolePredicate are both dependent on the type of\n    the activity itself. For a new statement, the predicate type is not known.\n    For an existing statement, the predicate is known but may change based on the type of the activity newly selected.  \n    \n \n   bdc34:\n   TODO: figure out what needs to be customized per role form, document it here in comments\n   TODO: rewrite class as an abstract class with simple, documented, required methods to override\n  \n   AddRoleToPersonTwoStageGenerator is abstract, each subclass will need to configure:\n   From the old JSP version:\n   \n   showRoleLabelField boolean\n   roleType URI   \n   roleToActivityPredicate URI\n   activityToRolePredicate URI      \n   roleActivityType_optionsType\n   roleActivityType_objectClassURI\n   roleActivityType_literalOptions\n   \n   For the new generator version:\n    template\n *",
        "***** Methods that are REQUIRED to be implemented in subclasses *****",
        "Freemarker template to use",
        "URI of type for the role context node",
        "return the java object that generates the role activity field options for \n     * the subclass. \n     * @throws Exception",
        "In the case of literal options, subclass generator will set the options to be returned",
        "* Each subclass generator will return its own type of option here:    \n     * whether literal hardcoded, based on class group, or subclasses of a specific class\n     * The latter two will apparently lend some kind of uri to objectClassUri ?",
        "The URI of a Class to use with options if required. An option type like\n     * CHILD_VCLASSES would reqire a role activity object class URI.",
        "If true an input should be shown on the form for a \n     * label for the role context node \n     * TODO: move this to the FTL and have label optional.",
        "URI of predicate between role context node and activity \n     * @throws Exception",
        "N3 Required and Optional Generators as well as supporting methods",
        "Get new resources",
        "Set URIS and Literals In Scope and on form and supporting methods",
        "Set SPARQL Queries and supporting methods. \n     * @throws Exception",
        "* Utility method for subclasses to make a query for type from a ConstantFieldOptions object.\n\t * @throws Exception",
        "* Utility method for subclasses to make a query for type from a ChildVClassesOptions object.\n     * @throws Exception",
        "* Utility method for subclasses to make a query for type from a IndividualsViaClassGroupOptions object.\n     * @throws Exception",
        "* The activity type query results must be limited to the values in the activity type select element. \n\t * Sometimes the query returns a superclass such as owl:Thing instead.\n\t * Make use of vitro:mostSpecificType so that, for example, an individual is both a \n\t * core:InvitedTalk and a core:Presentation, core:InvitedTalk is selected.\n\t * vitro:mostSpecificType alone may not suffice, since it does not guarantee that the value returned\n\t * is in the select list.\n\t * We could still have problems if the value from the select list is not a vitro:mostSpecificType, \n\t * but that is unlikely.\n\t *",
        "* \n\t * Set Fields and supporting methods\n\t * @throws Exception",
        "Methods that check edit mode",
        "URIS for various predicates"
    ],
    "functions": [
        "getTemplate",
        "getRoleType",
        "FieldOptions",
        "getRoleActivityFieldOptions",
        "isShowRoleLabelField",
        "EditConfigurationVTwo",
        "getEditConfiguration",
        "initProcessParameters",
        "getN3ForNewRoleActivity",
        "getN3ForExistingRoleActivity",
        "getN3RoleLabelAssertion",
        "getN3ForStart",
        "getN3ForEnd",
        "newResources",
        "setUrisAndLiteralsInScope",
        "getInversePredicate",
        "setUrisAndLiteralsOnForm",
        "setSparqlQueries",
        "getActivityToRolePredicateQuery",
        "getRoleToActivityPredicateQuery",
        "getEndPrecisionQuery",
        "getStartPrecisionQuery",
        "getEndNodeQuery",
        "getStartNodeQuery",
        "getIntervalNodeQuery",
        "getActivityTypeQueryForConstantOptions",
        "getActivityTypeQueryForChildVClassOptions",
        "getActivityTypeQueryForIndividualsViaClassGroupOptions",
        "getActivityTypeQuery",
        "getDefaultActivityTypeQuery",
        "getSubclassActivityTypeQuery",
        "getClassgroupActivityTypeQuery",
        "getExistingRoleActivityQuery",
        "getExistingEndDateQuery",
        "getExistingStartDateQuery",
        "getRoleLabelQuery",
        "getActivityLabelQuery",
        "setFields",
        "getActivityToRolePredicateField",
        "getRoleToActivityPredicateField",
        "getActivityLabelField",
        "getActivityLabelDisplayField",
        "getRoleActivityTypeField",
        "getExistingRoleActivityField",
        "getRoleLabelField",
        "getStartField",
        "getEndField",
        "addPreprocessors",
        "getRoleToActivityPredicate",
        "getPossibleRoleToActivityPredicates",
        "getPossibleActivityToRolePredicates",
        "EditMode",
        "getEditMode",
        "isAddMode",
        "isEditMode",
        "isRepairMode",
        "addFormSpecificData",
        "getFilterRoleToActivityPredicate",
        "getRoleToActivityPlaceholder",
        "getRoleToActivityPlaceholderName",
        "getActivityToRolePlaceholder",
        "getStartDatePrecision",
        "getEndDatePrecision"
    ],
    "classes": [
        "AddRoleToPersonTwoStageGenerator"
    ]
}