{
    "identifiers": [
        "edu",
        "mines",
        "jtk",
        "mosaic",
        "java",
        "awt",
        "java",
        "awt",
        "image",
        "java",
        "util",
        "edu",
        "mines",
        "jtk",
        "awt",
        "edu",
        "mines",
        "jtk",
        "dsp",
        "Sampling",
        "edu",
        "mines",
        "jtk",
        "util",
        "Check",
        "edu",
        "mines",
        "jtk",
        "util",
        "ArrayMath",
        "Orientation",
        "X1RIGHT_X2UP",
        "X1DOWN_X2RIGHT",
        "Line",
        "NONE",
        "SOLID",
        "DASH",
        "DOT",
        "DASH_DOT",
        "Alignment",
        "ALIGN_CENTER",
        "ALIGN_BEFORE",
        "ALIGN_AFTER",
        "x2",
        "x1",
        "rampfloat",
        "x2",
        "length",
        "x1",
        "x2",
        "s1",
        "x2",
        "s1",
        "x2",
        "x2",
        "x2",
        "s1",
        "x2",
        "Check",
        "argument",
        "s1",
        "getCount",
        "x2",
        "length",
        "n1",
        "x2",
        "length",
        "n2",
        "x2",
        "length",
        "x1",
        "n2",
        "n1",
        "i2",
        "i2",
        "n2",
        "i2",
        "i1",
        "i1",
        "n1",
        "i1",
        "x1",
        "i2",
        "i1",
        "s1",
        "getValue",
        "i1",
        "x1",
        "x2",
        "x1",
        "x2",
        "x1",
        "x2",
        "x1",
        "x2",
        "x1",
        "x2",
        "s1",
        "x2",
        "Check",
        "argument",
        "s1",
        "getCount",
        "x2",
        "length",
        "n1",
        "x2",
        "length",
        "x1",
        "n1",
        "i1",
        "i1",
        "n1",
        "i1",
        "x1",
        "i1",
        "s1",
        "getValue",
        "i1",
        "x1",
        "x2",
        "x1",
        "x2",
        "Check",
        "argument",
        "x1",
        "length",
        "x2",
        "length",
        "_ns",
        "_nx",
        "clear",
        "_x1",
        "clear",
        "_x2",
        "clear",
        "_nxmax",
        "x1",
        "length",
        "_nx",
        "add",
        "x1",
        "length",
        "_x1",
        "add",
        "copy",
        "x1",
        "_x2",
        "add",
        "copy",
        "x2",
        "_colorMaps",
        "_ns",
        "i",
        "i",
        "_ns",
        "i",
        "_colorMaps",
        "i",
        "Color",
        "CYAN",
        "_lineColor",
        "_ns",
        "updateBestProjectors",
        "repaint",
        "x1",
        "x2",
        "Check",
        "argument",
        "x1",
        "length",
        "x2",
        "length",
        "_ns",
        "x1",
        "length",
        "_nx",
        "clear",
        "_x1",
        "clear",
        "_x2",
        "clear",
        "_nxmax",
        "_ns",
        "Check",
        "argument",
        "x1",
        "length",
        "x2",
        "length",
        "_nxmax",
        "max",
        "_nxmax",
        "x1",
        "length",
        "_nx",
        "add",
        "x1",
        "length",
        "_x1",
        "add",
        "copy",
        "x1",
        "_x2",
        "add",
        "copy",
        "x2",
        "_colorMaps",
        "_ns",
        "i",
        "i",
        "_ns",
        "i",
        "_colorMaps",
        "i",
        "Color",
        "CYAN",
        "_lineColor",
        "_ns",
        "updateBestProjectors",
        "repaint",
        "orientation",
        "_orientation",
        "orientation",
        "_orientation",
        "orientation",
        "updateBestProjectors",
        "repaint",
        "_orientation",
        "style",
        "style",
        "contains",
        "setLineColor",
        "Color",
        "RED",
        "style",
        "contains",
        "setLineColor",
        "Color",
        "GREEN",
        "style",
        "contains",
        "setLineColor",
        "Color",
        "BLUE",
        "style",
        "contains",
        "setLineColor",
        "Color",
        "CYAN",
        "style",
        "contains",
        "setLineColor",
        "Color",
        "MAGENTA",
        "style",
        "contains",
        "setLineColor",
        "Color",
        "YELLOW",
        "style",
        "contains",
        "setLineColor",
        "Color",
        "BLACK",
        "style",
        "contains",
        "setLineColor",
        "Color",
        "WHITE",
        "setLineColor",
        "style",
        "contains",
        "setLineStyle",
        "Line",
        "DASH_DOT",
        "style",
        "contains",
        "setLineStyle",
        "Line",
        "DASH",
        "style",
        "contains",
        "setLineStyle",
        "Line",
        "DOT",
        "style",
        "contains",
        "setLineStyle",
        "Line",
        "SOLID",
        "setLineStyle",
        "Line",
        "NONE",
        "width",
        "_barWidth",
        "width",
        "repaint",
        "color",
        "i",
        "i",
        "_ns",
        "i",
        "setFillColor",
        "i",
        "color",
        "colorModel",
        "_ns",
        "setColorModel",
        "colorModel",
        "i",
        "colorModel",
        "_colorMaps",
        "i",
        "setColorModel",
        "colorModel",
        "repaint",
        "colorMap",
        "_ns",
        "setColorMap",
        "colorMap",
        "i",
        "colorMap",
        "_colorMaps",
        "i",
        "colorMap",
        "repaint",
        "i",
        "color",
        "_colorMaps",
        "i",
        "color",
        "repaint",
        "alignment",
        "_alignment",
        "alignment",
        "_alignment",
        "alignment",
        "updateBestProjectors",
        "repaint",
        "stack",
        "_stackingBars",
        "stack",
        "updateBestProjectors",
        "repaint",
        "style",
        "_lineStyle",
        "style",
        "repaint",
        "width",
        "_lineWidth",
        "width",
        "_lineWidth",
        "width",
        "updateBestProjectors",
        "repaint",
        "color",
        "i",
        "i",
        "_ns",
        "i",
        "setLineColor",
        "i",
        "color",
        "ibar",
        "color",
        "_lineColor",
        "ibar",
        "color",
        "repaint",
        "format",
        "_textFormat",
        "format",
        "repaint",
        "g2d",
        "g2d",
        "setRenderingHint",
        "RenderingHints",
        "KEY_ANTIALIASING",
        "RenderingHints",
        "VALUE_ANTIALIAS_ON",
        "hp",
        "getHorizontalProjector",
        "vp",
        "getVerticalProjector",
        "ts",
        "getTranscaler",
        "fontSize",
        "g2d",
        "getFont",
        "getSize2D",
        "lineWidth",
        "stroke",
        "g2d",
        "getStroke",
        "stroke",
        "bs",
        "stroke",
        "lineWidth",
        "bs",
        "getLineWidth",
        "gline",
        "_lineStyle",
        "Line",
        "NONE",
        "gline",
        "g2d",
        "create",
        "width",
        "lineWidth",
        "_lineWidth",
        "width",
        "_lineWidth",
        "dash",
        "_lineStyle",
        "Line",
        "SOLID",
        "dotLength",
        "width",
        "dashLength",
        "width",
        "gapLength",
        "dotLength",
        "dashLength",
        "_lineStyle",
        "Line",
        "DASH",
        "dash",
        "dashLength",
        "gapLength",
        "_lineStyle",
        "Line",
        "DOT",
        "dash",
        "dotLength",
        "gapLength",
        "_lineStyle",
        "Line",
        "DASH_DOT",
        "dash",
        "dashLength",
        "gapLength",
        "dotLength",
        "gapLength",
        "bs",
        "dash",
        "cap",
        "BasicStroke",
        "CAP_ROUND",
        "join",
        "BasicStroke",
        "JOIN_ROUND",
        "miter",
        "phase",
        "bs",
        "width",
        "cap",
        "join",
        "miter",
        "dash",
        "phase",
        "bs",
        "width",
        "gline",
        "setStroke",
        "bs",
        "gtext",
        "x",
        "_nxmax",
        "y",
        "_nxmax",
        "gbar",
        "g2d",
        "create",
        "o1",
        "o2",
        "ox",
        "oy",
        "colors",
        "_ns",
        "_nxmax",
        "_ns",
        "x2",
        "_x2",
        "get",
        "ix",
        "ix",
        "_nxmax",
        "ix",
        "colors",
        "ix",
        "_colorMaps",
        "getColor",
        "x2",
        "ix",
        "computeXY",
        "hp",
        "vp",
        "ts",
        "o1",
        "o2",
        "ox",
        "oy",
        "bottom",
        "_nxmax",
        "prevTop",
        "_nxmax",
        "i",
        "i",
        "_nxmax",
        "i",
        "prevTop",
        "i",
        "_orientation",
        "BarsView",
        "Orientation",
        "X1RIGHT_X2UP",
        "oy",
        "ox",
        "shift",
        "_alignment",
        "Alignment",
        "ALIGN_BEFORE",
        "shift",
        "_alignment",
        "Alignment",
        "ALIGN_AFTER",
        "shift",
        "_ns",
        "n",
        "_nx",
        "get",
        "x1",
        "copy",
        "_x1",
        "get",
        "x2",
        "copy",
        "_x2",
        "get",
        "_stackingBars",
        "i",
        "i",
        "n",
        "i",
        "x2",
        "i",
        "bottom",
        "i",
        "computeXY",
        "hp",
        "vp",
        "ts",
        "n",
        "x1",
        "x2",
        "x",
        "y",
        "_colorMaps",
        "paintBars",
        "gbar",
        "_barWidth",
        "prevTop",
        "n",
        "x",
        "y",
        "shift",
        "colors",
        "_lineColor",
        "gbar",
        "setColor",
        "_lineColor",
        "gbar",
        "setColor",
        "Color",
        "BLACK",
        "paintBars",
        "gbar",
        "_barWidth",
        "prevTop",
        "n",
        "x",
        "y",
        "shift",
        "_stackingBars",
        "_orientation",
        "BarsView",
        "Orientation",
        "X1RIGHT_X2UP",
        "bottom",
        "copy",
        "x2",
        "prevTop",
        "copy",
        "y",
        "prevTop",
        "copy",
        "x",
        "bottom",
        "copy",
        "x2",
        "_ns",
        "_nx",
        "_x1",
        "_x2",
        "_nxmax",
        "_orientation",
        "Orientation",
        "X1RIGHT_X2UP",
        "_alignment",
        "Alignment",
        "ALIGN_CENTER",
        "_stackingBars",
        "_lineStyle",
        "Line",
        "SOLID",
        "_lineWidth",
        "_lineColor",
        "_barWidth",
        "_textFormat",
        "_colorMaps",
        "max",
        "Collections",
        "max",
        "_nx",
        "sum",
        "max",
        "x1min",
        "FLT_MAX",
        "x2min",
        "FLT_MAX",
        "x1max",
        "FLT_MAX",
        "x2max",
        "FLT_MAX",
        "_ns",
        "nx",
        "_nx",
        "get",
        "x1",
        "_x1",
        "get",
        "x2",
        "_x2",
        "get",
        "ix",
        "ix",
        "nx",
        "ix",
        "x1i",
        "x1",
        "ix",
        "x2i",
        "x2",
        "ix",
        "x1min",
        "min",
        "x1min",
        "x1i",
        "x1max",
        "max",
        "x1max",
        "x1i",
        "x2min",
        "min",
        "x2min",
        "x2i",
        "x2max",
        "max",
        "x2max",
        "x2i",
        "sum",
        "ix",
        "x2",
        "ix",
        "_stackingBars",
        "x2max",
        "max",
        "max",
        "sum",
        "x2min",
        "min",
        "min",
        "sum",
        "x1min",
        "x1max",
        "x1min",
        "ulp",
        "x1min",
        "x1max",
        "ulp",
        "x1max",
        "x2min",
        "x2max",
        "x2min",
        "ulp",
        "x2min",
        "x2max",
        "ulp",
        "x2max",
        "u0",
        "u1",
        "_lineWidth",
        "u0",
        "u1",
        "w",
        "_barWidth",
        "_alignment",
        "Alignment",
        "ALIGN_CENTER",
        "x1min",
        "w",
        "x1max",
        "w",
        "_alignment",
        "Alignment",
        "ALIGN_BEFORE",
        "x1min",
        "w",
        "x1max",
        "w",
        "bhp",
        "bvp",
        "_orientation",
        "Orientation",
        "X1RIGHT_X2UP",
        "bhp",
        "x1min",
        "x1max",
        "x1min",
        "x1max",
        "u0",
        "u1",
        "bvp",
        "x2min",
        "x2max",
        "x2max",
        "x2min",
        "u0",
        "u1",
        "_orientation",
        "Orientation",
        "X1DOWN_X2RIGHT",
        "bhp",
        "x2min",
        "x2max",
        "x2min",
        "x2max",
        "u0",
        "u1",
        "bvp",
        "x1min",
        "x1max",
        "x1min",
        "x1max",
        "u0",
        "u1",
        "setBestProjectors",
        "bhp",
        "bvp",
        "ca",
        "cb",
        "ca",
        "cb",
        "ca",
        "equals",
        "cb",
        "hp",
        "vp",
        "ts",
        "n",
        "x1",
        "x2",
        "x",
        "y",
        "ts",
        "ts",
        "combineWith",
        "hp",
        "vp",
        "xv",
        "yv",
        "_orientation",
        "Orientation",
        "X1RIGHT_X2UP",
        "xv",
        "x1",
        "yv",
        "x2",
        "_orientation",
        "Orientation",
        "X1DOWN_X2RIGHT",
        "xv",
        "x2",
        "yv",
        "x1",
        "i",
        "i",
        "n",
        "i",
        "x",
        "i",
        "ts",
        "x",
        "xv",
        "i",
        "y",
        "i",
        "ts",
        "y",
        "yv",
        "i",
        "g2d",
        "wb",
        "bottoms",
        "n",
        "x",
        "y",
        "s",
        "adj",
        "fill",
        "colors",
        "_orientation",
        "BarsView",
        "Orientation",
        "X1RIGHT_X2UP",
        "paintBarsVertical",
        "g2d",
        "wb",
        "bottoms",
        "n",
        "x",
        "y",
        "s",
        "adj",
        "fill",
        "colors",
        "paintBarsHorizontal",
        "g2d",
        "wb",
        "bottoms",
        "n",
        "x",
        "y",
        "s",
        "adj",
        "fill",
        "colors",
        "g2d",
        "wb",
        "bottoms",
        "n",
        "x",
        "y",
        "s",
        "adj",
        "fill",
        "colors",
        "pw",
        "py",
        "frac",
        "adj",
        "_ns",
        "w",
        "n",
        "wb",
        "y",
        "y",
        "hw",
        "w",
        "yim1",
        "y",
        "hw",
        "s",
        "hw",
        "i",
        "i",
        "n",
        "i",
        "zero",
        "bottoms",
        "i",
        "w",
        "i",
        "wb",
        "y",
        "i",
        "y",
        "i",
        "w",
        "hw",
        "w",
        "ypos",
        "max",
        "yim1",
        "y",
        "i",
        "hw",
        "xpos",
        "min",
        "zero",
        "x",
        "i",
        "h",
        "abs",
        "zero",
        "x",
        "i",
        "_stackingBars",
        "py",
        "ypos",
        "w",
        "frac",
        "pw",
        "w",
        "_ns",
        "py",
        "ypos",
        "pw",
        "w",
        "fill",
        "g2d",
        "setColor",
        "colors",
        "i",
        "g2d",
        "fillRect",
        "xpos",
        "py",
        "h",
        "pw",
        "g2d",
        "drawRect",
        "xpos",
        "py",
        "h",
        "pw",
        "yim1",
        "ypos",
        "w",
        "g2d",
        "wb",
        "bottoms",
        "n",
        "x",
        "y",
        "s",
        "adj",
        "fill",
        "colors",
        "pw",
        "px",
        "frac",
        "adj",
        "_ns",
        "w",
        "n",
        "wb",
        "x",
        "x",
        "hw",
        "w",
        "xim1",
        "x",
        "hw",
        "s",
        "hw",
        "i",
        "i",
        "n",
        "i",
        "zero",
        "bottoms",
        "i",
        "w",
        "i",
        "wb",
        "x",
        "i",
        "x",
        "i",
        "w",
        "hw",
        "w",
        "xpos",
        "max",
        "xim1",
        "x",
        "i",
        "hw",
        "ypos",
        "min",
        "zero",
        "y",
        "i",
        "h",
        "abs",
        "zero",
        "y",
        "i",
        "_stackingBars",
        "px",
        "xpos",
        "w",
        "frac",
        "pw",
        "w",
        "_ns",
        "px",
        "xpos",
        "pw",
        "w",
        "fill",
        "g2d",
        "setColor",
        "colors",
        "i",
        "g2d",
        "fillRect",
        "px",
        "ypos",
        "pw",
        "h",
        "g2d",
        "drawRect",
        "px",
        "ypos",
        "pw",
        "h",
        "xim1",
        "xpos",
        "w",
        "g2d",
        "s",
        "n",
        "x",
        "y",
        "z",
        "s",
        "i",
        "i",
        "n",
        "i",
        "xi",
        "x",
        "i",
        "yi",
        "y",
        "i",
        "g2d",
        "drawString",
        "format",
        "_textFormat",
        "z",
        "i",
        "xi",
        "s",
        "yi",
        "s"
    ],
    "literals": [
        "\"s1 count equals x2 length\"",
        "\"s1 count equals x2 length\"",
        "\"x1.length equals x2.length\"",
        "\"x1.length equals x2.length\"",
        "\"x1[i].length equals x2[i].length\"",
        "\"r\"",
        "\"g\"",
        "\"b\"",
        "\"c\"",
        "\"m\"",
        "\"y\"",
        "\"k\"",
        "\"w\"",
        "\"--.\"",
        "\"--\"",
        "\"-.\"",
        "\"-\"",
        "\"%1.4G\""
    ],
    "variables": [
        "bs",
        "_ns",
        "_nxmax",
        "pw",
        "py",
        "pw",
        "px"
    ],
    "comments": [
        "Color.",
        "Line style.",
        "Font size and line width from graphics context.",
        "Graphics context for lines.",
        "Graphics context for text labels.",
        "Arrays for (x,y) coordinates.",
        "Convert color map to color arrays",
        "Get origin in pixels",
        "For all plot segments  ...",
        "Compute (x,y) coordinates.",
        "First draw the filled bar, then the outline",
        "",
        "private",
        "number of segments",
        "numbers of (x1,x2)",
        "arrays of x1",
        "arrays of x2",
        "maximum number of points in a segment",
        "View orientation",
        "View alignment",
        "Flag for bar arrangement",
        "Visual stuff",
        "Color lists with default null",
        "Min and max (x1,x2) values.",
        "Ensure x1min<x1max and x2min<x2max.",
        "Assume mark sizes and line widths less than 2% of plot dimensions.",
        "The goal is to avoid clipping big marks and wide lines. The problem",
        "is that mark sizes and line widths are specified in screen pixels",
        "(or points), but margins u0 and u1 are specified in normalized",
        "coordinates, fractions of our tile's width and height. Here, we do",
        "not know those dimensions.",
        "The two bars on the either end of the bars view will be clipped in",
        "half, so we want to mitigate that by extending the bounds out by a half",
        "bar width in either direction.",
        "Best projectors.",
        "To circumvent any pixel rounding"
    ],
    "docstrings": [
        "**************************************************************************\nCopyright 2015, Colorado School of Mines.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n \n    http://www.apache.org/licenses/LICENSE-2.0\n \nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n***************************************************************************",
        "* A view of bars.\n * Points (x1,x2) may be specified as arrays x1 and x2 of coordinates. Each\n * pair of arrays x1 and x2 corresponds to one plot segment. Multiple plot\n * segments may be specified by arrays of arrays of x1 and x2 coordinates.\n * <p>\n * For example, to view sampled functions x2 = sin(x1) and x2 = cos(x1),\n * one might construct two plot segments by specifying an array of two\n * arrays of x1 coordinates and a corresponding array of two arrays of\n * x2 coordinates.\n * <p>\n * Note that mark and line attributes are constant for each points view.\n * These attributes do not vary among plot segments. To paint marks and\n * lines with different attributes, construct multiple views.\n * @author Chris Engelsma, Colorado School of Mines\n * @version 2015.10.26",
        "* Orientation of axes x1 and x2. For example, the default orientation\n   * X1RIGHT_X2UP corresponds to x1 increasing horizontally from left to\n   * right, and x2 increasing vertically from bottom to top.",
        "* The style of line plotted between consecutive points (x1,x2).\n   * The default line style is solid.",
        "* The bar alignment relative to the tick.\n   * The default alignment is centered.",
        "* Constructs a view of bars with specified x2 quantities.\n   * The corresponding coordinates x1 are assumed to be 0, 1, 2, ....\n   * @param x2 array of x2 coordinates.",
        "* Constructs a view of bars for a sampled function x2(x1).\n   * @param s1 the sampling of x1 coordinates.\n   * @param x2 array of x2 values.",
        "* Constructs a view of bars for x2.length data sets.\n   * @param x2 array of values containing x2.length separate sets.",
        "* Constructs a view of bars with multiple plot segments.\n   * @param s1 the sampling of x1 coordinates.\n   * @param x2 array of x2 values, containing x2.length plot segments.",
        "* Constructs a view of bars with multiple plot segments.\n   * @param x1 array of x1 coordinates.\n   * @param x2 array of x2 coordinates.",
        "* Constructs a view of bars with a single plot segment.\n   * The lengths of the specified arrays x1 and x2 must be equal.\n   * @param x1 array of x1 coordinates.\n   * @param x2 array of x2 coordinates.",
        "* Sets (x1,x2) coordinates for a sampled function x2(x1).\n   * @param s1 the sampling of x1 coordinates.\n   * @param x2 array of x2 coordinates.",
        "* Sets array of (x1,x2) coordinates for a plot segment.\n   * The lengths of x1 and x2 must be equal.\n   * @param x1 array of x1 values.\n   * @param x2 array of x2 coordinates.",
        "* Sets array of arrays of (x1,x2) coordinates for multiple plot segments.\n   * The lengths of the specified arrays x1 and x2 must be equal.\n   * @param x1 array of arrays of x1 values.\n   * @param x2 array of arrays of x2 coordinates.",
        "* Sets the orientation of (x1,x2) axes.\n   * @param orientation the orientation.",
        "* Gets the orientation of (x1,x2) axes.\n   * @return the orientation.",
        "* Sets the color, line style, and mark style from a style string.\n   * This method provides a convenient way to set the most commonly\n   * specified attributes of lines and marks painted by this view.\n   * <p>\n   * To specify a color, the style string may contain one of \"r\" for red,\n   * \"g\" for green, \"b\" for blue, \"c\" for cyan, \"m\" for magenta, \"y\" for\n   * yellow, \"k\" for black, or \"w\" for white. If the style string contains\n   * none of these colors, then the default color is used.\n   * <p>\n   * To specify a line style, the style string may contain one of \"-\" for\n   * solid lines, \"--\" for dashed lines, \"-.\" for dotted lines, or \"--.\"\n   * for dash-dotted lines. If the style string contains none of these\n   * line styles, then no lines are painted.\n   * <p>\n   * To specify a mark style, the style string may contain one of \".\" for\n   * point, \"+\" for plus, \"x\" for cross, \"o\" for hollow circle\", \"O\" for\n   * filled circle, \"s\" for hollow square, or \"S\" for filled square. If\n   * the style string contains none of these mark styles, then no marks\n   * are painted.\n   * @param style the style string.",
        "* Sets the bar width.\n   * The default width will be 1, or fully expanded bars.\n   * @param style the bar width in range [0.0 - 1.0]",
        "* Sets the fill color for all bar sets.\n   * The default fill color is the tile background color.\n   * @param color the bar color.",
        "* Sets a color model for all bar sets.\n   * @param colorModel a color model.",
        "* Sets a color model for a specific bar set.\n   * @param i index of a bar set.\n   * @param colorModel a color model.",
        "* Sets a color map for all bar sets.\n   * @param colorMap a color map.",
        "* Sets a color map for a specific bar set.\n   * @param i index of a bar set.\n   * @param colorModel a color model.",
        "* Sets the fill color for a set of bars.\n   * The default fill color is the tile background color.\n   * @param i the index of a bar set.\n   * @param color the bar color.",
        "* Sets the alignment of the bars.\n   * The default alignment is centered about the value's tick mark.\n   * @param alignment the bar alignment.",
        "* Sets the stacking behavior of the bars.\n   * The default stacking behavior is to plot multiple bars adjacent.\n   * @param stack true, if stacking bars; false, otherwise.",
        "* Sets the line style.\n   * The default style is solid.\n   * @param style the line style.",
        "* Sets the line width.\n   * The default width is zero, for the thinnest lines.\n   * @param width the line width.",
        "* Sets the line color for all sets of bars.\n   * The default line color is the tile foreground color.\n   * That default is used if the specified line color is null.\n   * @param color the line color; null, for tile foreground color.",
        "* Sets the line color for a set of bars.\n   * The default line color is the tile foreground color.\n   * That default is used if the specified line color is null.\n   * @param ibar the index of the set of bars.\n   * @param color the line color; null, for tile foreground color.",
        "* Sets the format used for text labels.\n   * The default format is \"%1.4G\".\n   * @param format the text format.",
        "* Called when we might new realignment."
    ],
    "functions": [
        "BarsView",
        "BarsView",
        "BarsView",
        "BarsView",
        "BarsView",
        "BarsView",
        "setOrientation",
        "Orientation",
        "getOrientation",
        "setStyle",
        "setBarWidth",
        "setFillColor",
        "setColorModel",
        "setColorModel",
        "setColorMap",
        "setColorMap",
        "setFillColor",
        "setAlignment",
        "setStackBars",
        "setLineStyle",
        "setLineWidth",
        "setLineColor",
        "setLineColor",
        "setTextFormat",
        "paint",
        "updateBestProjectors",
        "equalColors",
        "computeXY",
        "paintBars",
        "paintBarsHorizontal",
        "paintBarsVertical",
        "paintLabel"
    ],
    "classes": [
        "BarsView"
    ]
}