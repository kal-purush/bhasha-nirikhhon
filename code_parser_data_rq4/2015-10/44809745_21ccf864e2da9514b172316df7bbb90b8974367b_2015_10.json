{
    "identifiers": [
        "data",
        "data",
        "data",
        "Float32Array",
        "data",
        "Float32Array",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "other",
        "other",
        "source",
        "dest",
        "i",
        "i",
        "dest",
        "i",
        "source",
        "i",
        "other",
        "other",
        "data",
        "target",
        "target",
        "Float32Array",
        "i",
        "i",
        "target",
        "i",
        "data",
        "i",
        "i",
        "i",
        "i",
        "ai0",
        "data",
        "i",
        "ai1",
        "data",
        "i",
        "ai2",
        "data",
        "i",
        "ai3",
        "data",
        "i",
        "data",
        "i",
        "ai0",
        "target",
        "ai1",
        "target",
        "ai2",
        "target",
        "ai3",
        "target",
        "data",
        "i",
        "ai0",
        "target",
        "ai1",
        "target",
        "ai2",
        "target",
        "ai3",
        "target",
        "data",
        "i",
        "ai0",
        "target",
        "ai1",
        "target",
        "ai2",
        "target",
        "ai3",
        "target",
        "data",
        "i",
        "ai0",
        "target",
        "ai1",
        "target",
        "ai2",
        "target",
        "ai3",
        "target",
        "pos",
        "pos",
        "Vector3",
        "v",
        "result",
        "p",
        "e",
        "p",
        "e",
        "p",
        "e",
        "e",
        "result",
        "p",
        "e",
        "p",
        "e",
        "p",
        "e",
        "e",
        "result",
        "p",
        "e",
        "p",
        "e",
        "p",
        "e",
        "e",
        "v",
        "pos",
        "pos",
        "Vector4",
        "v",
        "result",
        "p",
        "e",
        "p",
        "e",
        "p",
        "e",
        "p",
        "e",
        "result",
        "p",
        "e",
        "p",
        "e",
        "p",
        "e",
        "p",
        "e",
        "result",
        "p",
        "e",
        "p",
        "e",
        "p",
        "e",
        "p",
        "e",
        "result",
        "p",
        "e",
        "p",
        "e",
        "p",
        "e",
        "p",
        "e",
        "v",
        "t",
        "d",
        "d",
        "d",
        "d",
        "t",
        "t",
        "d",
        "d",
        "d",
        "d",
        "t",
        "t",
        "d",
        "d",
        "d",
        "d",
        "t",
        "t",
        "d",
        "d",
        "d",
        "d",
        "t",
        "t",
        "d",
        "d",
        "d",
        "d",
        "t",
        "t",
        "d",
        "d",
        "d",
        "d",
        "t",
        "other",
        "s",
        "other",
        "d",
        "inv",
        "Float32Array",
        "inv",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "inv",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "inv",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "inv",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "inv",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "inv",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "inv",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "inv",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "inv",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "inv",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "inv",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "inv",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "inv",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "inv",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "inv",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "inv",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "det",
        "s",
        "inv",
        "s",
        "inv",
        "s",
        "inv",
        "s",
        "inv",
        "det",
        "det",
        "det",
        "i",
        "i",
        "i",
        "d",
        "i",
        "inv",
        "i",
        "det",
        "left",
        "right",
        "bottom",
        "top",
        "near",
        "far",
        "left",
        "right",
        "bottom",
        "top",
        "near",
        "far",
        "rw",
        "right",
        "left",
        "rh",
        "top",
        "bottom",
        "rd",
        "far",
        "near",
        "e",
        "e",
        "rw",
        "e",
        "e",
        "e",
        "e",
        "e",
        "rh",
        "e",
        "e",
        "e",
        "e",
        "e",
        "rd",
        "e",
        "e",
        "right",
        "left",
        "rw",
        "e",
        "top",
        "bottom",
        "rh",
        "e",
        "far",
        "near",
        "rd",
        "e",
        "left",
        "right",
        "bottom",
        "top",
        "near",
        "far",
        "Matrix4",
        "left",
        "right",
        "bottom",
        "top",
        "near",
        "far",
        "left",
        "right",
        "bottom",
        "top",
        "near",
        "far",
        "left",
        "right",
        "top",
        "bottom",
        "near",
        "far",
        "near",
        "far",
        "rw",
        "right",
        "left",
        "rh",
        "top",
        "bottom",
        "rd",
        "far",
        "near",
        "e",
        "e",
        "near",
        "rw",
        "e",
        "e",
        "e",
        "e",
        "e",
        "near",
        "rh",
        "e",
        "e",
        "e",
        "right",
        "left",
        "rw",
        "e",
        "top",
        "bottom",
        "rh",
        "e",
        "far",
        "near",
        "rd",
        "e",
        "e",
        "e",
        "e",
        "near",
        "far",
        "rd",
        "e",
        "left",
        "right",
        "bottom",
        "top",
        "near",
        "far",
        "Matrix4",
        "left",
        "right",
        "bottom",
        "top",
        "near",
        "far",
        "fovy",
        "aspect",
        "near",
        "far",
        "near",
        "far",
        "aspect",
        "near",
        "far",
        "fovy",
        "fovy",
        "s",
        "fovy",
        "s",
        "rd",
        "far",
        "near",
        "ct",
        "fovy",
        "s",
        "e",
        "e",
        "ct",
        "aspect",
        "e",
        "e",
        "e",
        "e",
        "e",
        "ct",
        "e",
        "e",
        "e",
        "e",
        "e",
        "far",
        "near",
        "rd",
        "e",
        "e",
        "e",
        "e",
        "near",
        "far",
        "rd",
        "e",
        "fovy",
        "aspect",
        "near",
        "far",
        "Matrix4",
        "fovy",
        "aspect",
        "near",
        "far",
        "x",
        "y",
        "z",
        "e",
        "x",
        "e",
        "e",
        "e",
        "e",
        "e",
        "y",
        "e",
        "e",
        "e",
        "e",
        "e",
        "z",
        "e",
        "e",
        "e",
        "e",
        "e",
        "x",
        "y",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "x",
        "y",
        "z",
        "e",
        "e",
        "e",
        "e",
        "x",
        "e",
        "e",
        "e",
        "e",
        "y",
        "e",
        "e",
        "e",
        "e",
        "z",
        "e",
        "e",
        "e",
        "e",
        "x",
        "y",
        "z",
        "e",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "angle",
        "x",
        "y",
        "z",
        "angle",
        "angle",
        "e",
        "s",
        "angle",
        "c",
        "angle",
        "x",
        "y",
        "z",
        "x",
        "s",
        "s",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "c",
        "e",
        "s",
        "e",
        "e",
        "e",
        "s",
        "e",
        "c",
        "e",
        "e",
        "e",
        "e",
        "e",
        "x",
        "y",
        "z",
        "y",
        "s",
        "s",
        "e",
        "c",
        "e",
        "e",
        "s",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "s",
        "e",
        "e",
        "c",
        "e",
        "e",
        "e",
        "e",
        "e",
        "x",
        "y",
        "z",
        "z",
        "s",
        "s",
        "e",
        "c",
        "e",
        "s",
        "e",
        "e",
        "e",
        "s",
        "e",
        "c",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "len",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "len",
        "rlen",
        "len",
        "x",
        "rlen",
        "y",
        "rlen",
        "z",
        "rlen",
        "nc",
        "c",
        "xy",
        "x",
        "y",
        "yz",
        "y",
        "z",
        "zx",
        "z",
        "x",
        "xs",
        "x",
        "s",
        "ys",
        "y",
        "s",
        "zs",
        "z",
        "s",
        "e",
        "x",
        "x",
        "nc",
        "c",
        "e",
        "xy",
        "nc",
        "zs",
        "e",
        "zx",
        "nc",
        "ys",
        "e",
        "e",
        "xy",
        "nc",
        "zs",
        "e",
        "y",
        "y",
        "nc",
        "c",
        "e",
        "yz",
        "nc",
        "xs",
        "e",
        "e",
        "zx",
        "nc",
        "ys",
        "e",
        "yz",
        "nc",
        "xs",
        "e",
        "z",
        "z",
        "nc",
        "c",
        "e",
        "e",
        "e",
        "e",
        "e",
        "angle",
        "x",
        "y",
        "z",
        "Matrix4",
        "angle",
        "x",
        "y",
        "z",
        "eyeX",
        "eyeY",
        "eyeZ",
        "centerX",
        "centerY",
        "centerZ",
        "upX",
        "upY",
        "upZ",
        "fx",
        "centerX",
        "eyeX",
        "fy",
        "centerY",
        "eyeY",
        "fz",
        "centerZ",
        "eyeZ",
        "rlf",
        "fx",
        "fx",
        "fy",
        "fy",
        "fz",
        "fz",
        "fx",
        "rlf",
        "fy",
        "rlf",
        "fz",
        "rlf",
        "sx",
        "fy",
        "upZ",
        "fz",
        "upY",
        "sy",
        "fz",
        "upX",
        "fx",
        "upZ",
        "sz",
        "fx",
        "upY",
        "fy",
        "upX",
        "rls",
        "sx",
        "sx",
        "sy",
        "sy",
        "sz",
        "sz",
        "sx",
        "rls",
        "sy",
        "rls",
        "sz",
        "rls",
        "ux",
        "sy",
        "fz",
        "sz",
        "fy",
        "uy",
        "sz",
        "fx",
        "sx",
        "fz",
        "uz",
        "sx",
        "fy",
        "sy",
        "fx",
        "e",
        "e",
        "sx",
        "e",
        "ux",
        "e",
        "fx",
        "e",
        "e",
        "sy",
        "e",
        "uy",
        "e",
        "fy",
        "e",
        "e",
        "sz",
        "e",
        "uz",
        "e",
        "fz",
        "e",
        "e",
        "e",
        "e",
        "e",
        "eyeX",
        "eyeY",
        "eyeZ",
        "eyeX",
        "eyeY",
        "eyeZ",
        "centerX",
        "centerY",
        "centerZ",
        "upX",
        "upY",
        "upZ",
        "Matrix4",
        "eyeX",
        "eyeY",
        "eyeZ",
        "centerX",
        "centerY",
        "centerZ",
        "upX",
        "upY",
        "upZ",
        "plane",
        "light",
        "Matrix4",
        "mat",
        "plane",
        "light",
        "plane",
        "light",
        "plane",
        "light",
        "plane",
        "light",
        "e",
        "dot",
        "light",
        "plane",
        "e",
        "light",
        "plane",
        "e",
        "light",
        "plane",
        "e",
        "light",
        "plane",
        "e",
        "light",
        "plane",
        "e",
        "dot",
        "light",
        "plane",
        "e",
        "light",
        "plane",
        "e",
        "light",
        "plane",
        "e",
        "light",
        "plane",
        "e",
        "light",
        "plane",
        "e",
        "dot",
        "light",
        "plane",
        "e",
        "light",
        "plane",
        "e",
        "light",
        "plane",
        "e",
        "light",
        "plane",
        "e",
        "light",
        "plane",
        "e",
        "dot",
        "light",
        "plane",
        "mat",
        "normX",
        "normY",
        "normZ",
        "planeX",
        "planeY",
        "planeZ",
        "lightX",
        "lightY",
        "lightZ",
        "planeX",
        "normX",
        "planeY",
        "normY",
        "planeZ",
        "normZ",
        "normX",
        "normY",
        "normZ",
        "a",
        "lightX",
        "lightY",
        "lightZ"
    ],
    "literals": [
        "'null frustum'",
        "'null frustum'",
        "'near <= 0'",
        "'far <= 0'",
        "'null frustum'",
        "'near <= 0'",
        "'far <= 0'",
        "'null frustum'"
    ],
    "variables": [
        "data",
        "source",
        "dest",
        "i",
        "data",
        "target",
        "i",
        "ai0",
        "ai1",
        "ai2",
        "ai3",
        "e",
        "p",
        "v",
        "result",
        "e",
        "p",
        "v",
        "result",
        "d",
        "t",
        "i",
        "s",
        "d",
        "inv",
        "det",
        "e",
        "rw",
        "rh",
        "rd",
        "e",
        "rw",
        "rh",
        "rd",
        "e",
        "rd",
        "s",
        "ct",
        "e",
        "e",
        "e",
        "e",
        "e",
        "s",
        "c",
        "len",
        "rlen",
        "nc",
        "xy",
        "yz",
        "zx",
        "xs",
        "ys",
        "zs",
        "e",
        "fx",
        "fy",
        "fz",
        "rlf",
        "sx",
        "sy",
        "sz",
        "rls",
        "ux",
        "uy",
        "uz",
        "mat",
        "e",
        "dot",
        "a"
    ],
    "comments": [
        "",
        "",
        "Copyright (c) 2014-2015, Egret Technology Inc.",
        "All rights reserved.",
        "Redistribution and use in source and binary forms, with or without",
        "modification, are permitted provided that the following conditions are met:",
        "",
        "notice, this list of conditions and the following disclaimer.",
        "notice, this list of conditions and the following disclaimer in the",
        "documentation and/or other materials provided with the distribution.",
        "names of its contributors may be used to endorse or promote products",
        "derived from this software without specific prior written permission.",
        "",
        "THIS SOFTWARE IS PROVIDED BY EGRET AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS",
        "OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES",
        "OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.",
        "IN NO EVENT SHALL EGRET AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,",
        "INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT",
        "LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;LOSS OF USE, DATA,",
        "OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF",
        "LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING",
        "NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,",
        "EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
        "",
        "",
        "Rotation around X axis",
        "Rotation around Y axis",
        "Rotation around Z axis",
        "Rotation around another axis",
        "Normalize f.",
        "Calculate cross product of f and up.",
        "Normalize s.",
        "Calculate cross product of s and f.",
        "Set to this.",
        "Translate."
    ],
    "docstrings": [
        "* Redistributions of source code must retain the above copyright",
        "* Redistributions in binary form must reproduce the above copyright",
        "* Neither the name of the Egret nor the",
        "* the data of this matrix",
        "* Set the identity matrix.\n     * @return this",
        "* Copy matrix.\n     * @param other source matrix\n     * @return this",
        "* Multiply the matrix from the right.\n     * @param other The multiply matrix\n     * @return this",
        "* Multiply the three-dimensional vector.\n     * @param pos  The multiply vector\n     * @return The result of multiplication(Float32Array)",
        "* Multiply the four-dimensional vector.\n     * @param pos  The multiply vector\n     * @return The result of multiplication(Float32Array)",
        "* Transpose the matrix.\n     * @return this",
        "* Calculate the inverse matrix of specified matrix, and set to this.\n     * @param other The source matrix\n     * @return this",
        "* Calculate the inverse matrix of this, and set to this.\n     * @return this",
        "* Set the orthographic projection matrix.\n     * @param left The coordinate of the left of clipping plane.\n     * @param right The coordinate of the right of clipping plane.\n     * @param bottom The coordinate of the bottom of clipping plane.\n     * @param top The coordinate of the top top clipping plane.\n     * @param near The distances to the nearer depth clipping plane. This value is minus if the plane is to be behind the viewer.\n     * @param far The distances to the farther depth clipping plane. This value is minus if the plane is to be behind the viewer.\n     * @return this",
        "* Multiply the orthographic projection matrix from the right.\n     * @param left The coordinate of the left of clipping plane.\n     * @param right The coordinate of the right of clipping plane.\n     * @param bottom The coordinate of the bottom of clipping plane.\n     * @param top The coordinate of the top top clipping plane.\n     * @param near The distances to the nearer depth clipping plane. This value is minus if the plane is to be behind the viewer.\n     * @param far The distances to the farther depth clipping plane. This value is minus if the plane is to be behind the viewer.\n     * @return this",
        "* Set the perspective projection matrix.\n     * @param left The coordinate of the left of clipping plane.\n     * @param right The coordinate of the right of clipping plane.\n     * @param bottom The coordinate of the bottom of clipping plane.\n     * @param top The coordinate of the top top clipping plane.\n     * @param near The distances to the nearer depth clipping plane. This value must be plus value.\n     * @param far The distances to the farther depth clipping plane. This value must be plus value.\n     * @return this",
        "* Multiply the perspective projection matrix from the right.\n     * @param left The coordinate of the left of clipping plane.\n     * @param right The coordinate of the right of clipping plane.\n     * @param bottom The coordinate of the bottom of clipping plane.\n     * @param top The coordinate of the top top clipping plane.\n     * @param near The distances to the nearer depth clipping plane. This value must be plus value.\n     * @param far The distances to the farther depth clipping plane. This value must be plus value.\n     * @return this",
        "* Set the perspective projection matrix by fovy and aspect.\n     * @param fovy The angle between the upper and lower sides of the frustum.\n     * @param aspect The aspect ratio of the frustum. (width/height)\n     * @param near The distances to the nearer depth clipping plane. This value must be plus value.\n     * @param far The distances to the farther depth clipping plane. This value must be plus value.\n     * @return this",
        "* Multiply the perspective projection matrix from the right.\n     * @param fovy The angle between the upper and lower sides of the frustum.\n     * @param aspect The aspect ratio of the frustum. (width/height)\n     * @param near The distances to the nearer depth clipping plane. This value must be plus value.\n     * @param far The distances to the farther depth clipping plane. This value must be plus value.\n     * @return this",
        "* Set the matrix for scaling.\n     * @param x The scale factor along the X axis\n     * @param y The scale factor along the Y axis\n     * @param z The scale factor along the Z axis\n     * @return this",
        "* Multiply the matrix for scaling from the right.\n     * @param x The scale factor along the X axis\n     * @param y The scale factor along the Y axis\n     * @param z The scale factor along the Z axis\n     * @return this",
        "* Set the matrix for translation.\n     * @param x The X value of a translation.\n     * @param y The Y value of a translation.\n     * @param z The Z value of a translation.\n     * @return this",
        "* Multiply the matrix for translation from the right.\n     * @param x The X value of a translation.\n     * @param y The Y value of a translation.\n     * @param z The Z value of a translation.\n     * @return this",
        "* Set the matrix for rotation.\n     * The vector of rotation axis may not be normalized.\n     * @param angle The angle of rotation (degrees)\n     * @param x The X coordinate of vector of rotation axis.\n     * @param y The Y coordinate of vector of rotation axis.\n     * @param z The Z coordinate of vector of rotation axis.\n     * @return this",
        "* Multiply the matrix for rotation from the right.\n     * The vector of rotation axis may not be normalized.\n     * @param angle The angle of rotation (degrees)\n     * @param x The X coordinate of vector of rotation axis.\n     * @param y The Y coordinate of vector of rotation axis.\n     * @param z The Z coordinate of vector of rotation axis.\n     * @return this",
        "* Set the viewing matrix.\n     * @param eyeX, eyeY, eyeZ The position of the eye point.\n     * @param centerX, centerY, centerZ The position of the reference point.\n     * @param upX, upY, upZ The direction of the up vector.\n     * @return this",
        "* Multiply the viewing matrix from the right.\n     * @param eyeX, eyeY, eyeZ The position of the eye point.\n     * @param centerX, centerY, centerZ The position of the reference point.\n     * @param upX, upY, upZ The direction of the up vector.\n     * @return this",
        "* Multiply the matrix for project vertex to plane from the right.\n     * @param plane The array[A, B, C, D] of the equation of plane \"Ax + By + Cz + D = 0\".\n     * @param light The array which stored coordinates of the light. if light[3]=0, treated as parallel light.\n     * @return this",
        "* Multiply the matrix for project vertex to plane from the right.(Projected by parallel light.)\n     * @param normX, normY, normZ The normal vector of the plane.(Not necessary to be normalized.)\n     * @param planeX, planeY, planeZ The coordinate of arbitrary points on a plane.\n     * @param lightX, lightY, lightZ The vector of the direction of light.(Not necessary to be normalized.)\n     * @return this"
    ],
    "functions": [
        "identity",
        "copyFrom",
        "concat",
        "multiplyVector3",
        "multiplyVector4",
        "transpose",
        "setInverseOf",
        "invert",
        "setOrtho",
        "ortho",
        "setFrustum",
        "frustum",
        "setPerspective",
        "perspective",
        "setScale",
        "scale",
        "setTranslate",
        "translate",
        "setRotate",
        "rotate",
        "setLookAt",
        "lookAt",
        "dropShadow",
        "dropShadowDirectionally"
    ],
    "classes": [
        "Matrix4"
    ]
}