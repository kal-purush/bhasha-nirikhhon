{
    "identifiers": [
        "werkzeug",
        "security",
        "generate_password_hash",
        "check_password_hash",
        "sqlite3",
        "database",
        "schema",
        "sqlite3",
        "connect",
        "database",
        "check_same_thread",
        "db",
        "cursor",
        "database",
        "format_schema",
        "schema",
        "c",
        "execute",
        "fetchall",
        "schema",
        "table",
        "c",
        "execute",
        "fetchall",
        "table",
        "c",
        "execute",
        "table",
        "statement",
        "schema",
        "statement",
        "c",
        "execute",
        "statement",
        "title",
        "author",
        "contents",
        "c",
        "execute",
        "title",
        "author",
        "contents",
        "db",
        "commit",
        "c",
        "lastrowid",
        "story",
        "link",
        "c",
        "execute",
        "link",
        "story",
        "db",
        "commit",
        "c",
        "execute",
        "username",
        "password",
        "generate_password_hash",
        "password",
        "c",
        "execute",
        "username",
        "password",
        "db",
        "commit",
        "username",
        "new_password",
        "generate_password_hash",
        "new_password",
        "c",
        "execute",
        "password",
        "username",
        "db",
        "commit",
        "parse_simple_selection",
        "c",
        "execute",
        "fetchall",
        "parse_simple_selection",
        "c",
        "execute",
        "fetchall",
        "parse_simple_selection",
        "c",
        "execute",
        "fetchall",
        "username",
        "password",
        "c",
        "execute",
        "username",
        "fetchone",
        "dat",
        "check_password_hash",
        "dat",
        "password",
        "dat",
        "userid",
        "c",
        "execute",
        "userid",
        "fetchone",
        "output",
        "member",
        "output",
        "members",
        "append",
        "member",
        "members",
        "schema",
        "table",
        "schema",
        "table",
        "col",
        "table",
        "statement",
        "col",
        "col",
        "statement",
        "output_match",
        "append",
        "statement",
        "output_match"
    ],
    "literals": [
        "\" !- Connecting to databse'\"",
        "\"'...\"",
        "\"SELECT sql FROM sqlite_master WHERE type='table';\"",
        "\" !- Invalid database schema! Dropping everything and recreating.\"",
        "\"SELECT name FROM sqlite_master WHERE type='table';\"",
        "\" !-- Dropping table \"",
        "\"...\"",
        "\"DROP TABLE \"",
        "\";\"",
        "\" !-- Execute: (\"",
        "\";)\"",
        "\";\"",
        "\" !- Valid database schema. Carry on.\"",
        "\"INSERT INTO stories VALUES(?, ?, ?, ?);\"",
        "\"UPDATE stories SET link=(?) WHERE rowid=(?);\"",
        "\"select max(rowid) from stories;\"",
        "\"INSERT INTO users VALUES(?, ?);\"",
        "\"UPDATE users SET password=(?) WHERE username=(?);\"",
        "\"SELECT title FROM stories;\"",
        "\"SELECT contents FROM stories;\"",
        "\"SELECT username FROM users;\"",
        "\"SELECT rowid, password FROM users WHERE username=(?);\"",
        "\"SELECT username FROM users WHERE rowid=(?);\"",
        "u'CREATE TABLE '",
        "' ('",
        "' '",
        "', '",
        "')'"
    ],
    "variables": [
        "db",
        "db",
        "c",
        "c",
        "schema",
        "password",
        "password",
        "dat",
        "members",
        "output_match",
        "statement",
        "statement"
    ],
    "comments": [
        "self.db.commit()"
    ],
    "docstrings": [
        "\"\"\"StoryBored SQLite database handler module.\n\nAllows for database communication. Instantiate with:\n    \n    db = Database(<path to database>, <schema>)\n    \nSchemas should be formatted as follows:\n\n    SCHEMA = [\n        ('<table1>', [\n            ('<col1>', 'type'),\n            ('<col2>', 'type'),\n            ...\n        ]),\n        ('<table2>', [\n            ('<col1>', 'type'),\n            ('<col2>', 'type'),\n            ...\n        ]),\n        ...\n    ]\n\"\"\"",
        "\"\"\"StoryBored main database handler class.\n    \n    Attributes:\n        db (sqlite3 connection): The sqlite3 connection to the database.\n        c (sqlite3 Cursor): The Cursor that can be used to send statements to\n            the sqlite3 database.\n    \n    \"\"\"",
        "\"\"\"StoryBored Database __init__.\n        \n        Args:\n            database (str): Path to the sqlite3 database.\n            schema (schema_statement): Schema to be applied to the\n                database.\n    \n        If the database's schema does not match the one provided by the schema\n        statement, all of the database's tables will be dropped and it will be\n        recrated with the appropriate tables and data.\n        \"\"\""
    ],
    "functions": [
        "add_story",
        "update_story_link",
        "get_next_rowid",
        "add_user",
        "update_user_password",
        "get_titles",
        "get_content",
        "get_users",
        "check_user_password",
        "get_user_by_id",
        "parse_simple_selection",
        "format_schema"
    ],
    "classes": [
        "Database"
    ]
}