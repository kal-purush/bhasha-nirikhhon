{
    "identifiers": [
        "org",
        "jf",
        "dexlib2",
        "builder",
        "org",
        "jf",
        "dexlib2",
        "Opcode",
        "org",
        "jf",
        "dexlib2",
        "builder",
        "instruction",
        "BuilderInstruction10x",
        "org",
        "jf",
        "dexlib2",
        "builder",
        "instruction",
        "BuilderInstruction32x",
        "org",
        "jf",
        "dexlib2",
        "iface",
        "MethodImplementation",
        "org",
        "junit",
        "Assert",
        "org",
        "junit",
        "Test",
        "Test",
        "builder",
        "startLabel",
        "builder",
        "addLabel",
        "builder",
        "addInstruction",
        "Opcode",
        "NOP",
        "builder",
        "addInstruction",
        "Opcode",
        "NOP",
        "builder",
        "addInstruction",
        "Opcode",
        "NOP",
        "builder",
        "addInstruction",
        "Opcode",
        "NOP",
        "builder",
        "addInstruction",
        "Opcode",
        "NOP",
        "builder",
        "addInstruction",
        "Opcode",
        "MOVE_16",
        "endLabel",
        "builder",
        "addLabel",
        "builder",
        "addCatch",
        "startLabel",
        "endLabel",
        "startLabel",
        "methodImplementation",
        "builder",
        "getMethodImplementation",
        "Assert",
        "assertEquals",
        "methodImplementation",
        "getTryBlocks",
        "get",
        "getStartCodeAddress",
        "Assert",
        "assertEquals",
        "methodImplementation",
        "getTryBlocks",
        "get",
        "getCodeUnitCount",
        "methodImplementation",
        "methodImplementation",
        "Assert",
        "assertEquals",
        "methodImplementation",
        "getTryBlocks",
        "get",
        "getStartCodeAddress",
        "Assert",
        "assertEquals",
        "methodImplementation",
        "getTryBlocks",
        "get",
        "getCodeUnitCount",
        "Test",
        "builder",
        "builder",
        "addInstruction",
        "Opcode",
        "NOP",
        "builder",
        "addInstruction",
        "Opcode",
        "NOP",
        "builder",
        "addInstruction",
        "Opcode",
        "NOP",
        "builder",
        "addInstruction",
        "Opcode",
        "NOP",
        "builder",
        "addInstruction",
        "Opcode",
        "NOP",
        "builder",
        "addInstruction",
        "Opcode",
        "MOVE_16",
        "mutableMethodImplementation",
        "builder",
        "getMethodImplementation",
        "mutableMethodImplementation",
        "addCatch",
        "mutableMethodImplementation",
        "newLabelForAddress",
        "mutableMethodImplementation",
        "newLabelForAddress",
        "mutableMethodImplementation",
        "newLabelForAddress",
        "Assert",
        "assertEquals",
        "mutableMethodImplementation",
        "getTryBlocks",
        "get",
        "getStartCodeAddress",
        "Assert",
        "assertEquals",
        "mutableMethodImplementation",
        "getTryBlocks",
        "get",
        "getCodeUnitCount",
        "Assert",
        "assertEquals",
        "mutableMethodImplementation",
        "getTryBlocks",
        "get",
        "getExceptionHandlers",
        "get",
        "getHandlerCodeAddress",
        "Test",
        "builder",
        "builder",
        "addInstruction",
        "Opcode",
        "NOP",
        "builder",
        "addInstruction",
        "Opcode",
        "NOP",
        "builder",
        "addInstruction",
        "Opcode",
        "NOP",
        "builder",
        "addInstruction",
        "Opcode",
        "NOP",
        "builder",
        "addInstruction",
        "Opcode",
        "NOP",
        "builder",
        "addInstruction",
        "Opcode",
        "MOVE_16",
        "mutableMethodImplementation",
        "builder",
        "getMethodImplementation",
        "mutableMethodImplementation",
        "addCatch",
        "mutableMethodImplementation",
        "newLabelForIndex",
        "mutableMethodImplementation",
        "newLabelForIndex",
        "mutableMethodImplementation",
        "newLabelForIndex",
        "Assert",
        "assertEquals",
        "mutableMethodImplementation",
        "getTryBlocks",
        "get",
        "getStartCodeAddress",
        "Assert",
        "assertEquals",
        "mutableMethodImplementation",
        "getTryBlocks",
        "get",
        "getCodeUnitCount",
        "Assert",
        "assertEquals",
        "mutableMethodImplementation",
        "getTryBlocks",
        "get",
        "getExceptionHandlers",
        "get",
        "getHandlerCodeAddress"
    ],
    "literals": [
        "\"start\"",
        "\"end\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Copyright 2015, Google Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
    ],
    "functions": [
        "testTryEndAtEndOfMethod",
        "testNewLabelByAddress",
        "testNewLabelByIndex"
    ],
    "classes": [
        "MutableMethodImplementationTest"
    ]
}