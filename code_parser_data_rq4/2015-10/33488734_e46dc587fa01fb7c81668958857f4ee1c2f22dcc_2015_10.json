{
    "identifiers": [
        "sorttable",
        "arguments",
        "arguments",
        "_timer",
        "clearInterval",
        "_timer",
        "sorttable",
        "forEach",
        "table",
        "table",
        "sorttable",
        "table",
        "table",
        "table",
        "the",
        "the",
        "table",
        "table",
        "the",
        "table",
        "table",
        "table",
        "table",
        "table",
        "sortbottomrows",
        "i",
        "table",
        "i",
        "table",
        "i",
        "sortbottomrows",
        "sortbottomrows",
        "table",
        "i",
        "sortbottomrows",
        "table",
        "tfo",
        "table",
        "tfo",
        "i",
        "sortbottomrows",
        "i",
        "tfo",
        "sortbottomrows",
        "i",
        "sortbottomrows",
        "headrow",
        "table",
        "i",
        "headrow",
        "i",
        "headrow",
        "i",
        "mtch",
        "headrow",
        "i",
        "mtch",
        "mtch",
        "mtch",
        "sorttable",
        "headrow",
        "i",
        "sorttable",
        "headrow",
        "i",
        "sorttable",
        "table",
        "i",
        "headrow",
        "i",
        "i",
        "headrow",
        "i",
        "table",
        "dean_addEvent",
        "headrow",
        "i",
        "sorttable",
        "e",
        "sorttable",
        "sortrevind",
        "sortrevind",
        "sortrevind",
        "stIsIE",
        "sortrevind",
        "sorttable",
        "sortfwdind",
        "sortfwdind",
        "sortfwdind",
        "stIsIE",
        "sortfwdind",
        "theadrow",
        "forEach",
        "theadrow",
        "cell",
        "cell",
        "cell",
        "cell",
        "cell",
        "cell",
        "sortfwdind",
        "sortfwdind",
        "sortfwdind",
        "sortfwdind",
        "sortrevind",
        "sortrevind",
        "sortrevind",
        "sortrevind",
        "sortfwdind",
        "sortfwdind",
        "sortfwdind",
        "stIsIE",
        "sortfwdind",
        "row_array",
        "col",
        "rows",
        "j",
        "rows",
        "j",
        "row_array",
        "row_array",
        "sorttable",
        "rows",
        "j",
        "col",
        "rows",
        "j",
        "row_array",
        "tb",
        "j",
        "row_array",
        "j",
        "tb",
        "row_array",
        "j",
        "row_array",
        "table",
        "column",
        "sortfn",
        "sorttable",
        "i",
        "table",
        "i",
        "text",
        "sorttable",
        "table",
        "i",
        "column",
        "text",
        "text",
        "sorttable",
        "possdate",
        "text",
        "sorttable",
        "possdate",
        "first",
        "parseInt",
        "possdate",
        "second",
        "parseInt",
        "possdate",
        "first",
        "sorttable",
        "second",
        "sorttable",
        "sortfn",
        "sorttable",
        "sortfn",
        "node",
        "node",
        "hasInputs",
        "node",
        "node",
        "node",
        "node",
        "node",
        "hasInputs",
        "node",
        "node",
        "hasInputs",
        "node",
        "node",
        "hasInputs",
        "node",
        "node",
        "node",
        "node",
        "node",
        "i",
        "node",
        "i",
        "innerText",
        "sorttable",
        "node",
        "i",
        "innerText",
        "tbody",
        "newrows",
        "i",
        "tbody",
        "i",
        "newrows",
        "newrows",
        "tbody",
        "i",
        "newrows",
        "i",
        "i",
        "tbody",
        "newrows",
        "i",
        "newrows",
        "a",
        "b",
        "aa",
        "parseFloat",
        "a",
        "isNaN",
        "aa",
        "aa",
        "bb",
        "parseFloat",
        "b",
        "isNaN",
        "bb",
        "bb",
        "aa",
        "bb",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "mtch",
        "a",
        "sorttable",
        "y",
        "mtch",
        "m",
        "mtch",
        "d",
        "mtch",
        "m",
        "m",
        "m",
        "d",
        "d",
        "d",
        "dt1",
        "y",
        "m",
        "d",
        "mtch",
        "b",
        "sorttable",
        "y",
        "mtch",
        "m",
        "mtch",
        "d",
        "mtch",
        "m",
        "m",
        "m",
        "d",
        "d",
        "d",
        "dt2",
        "y",
        "m",
        "d",
        "dt1",
        "dt2",
        "dt1",
        "dt2",
        "a",
        "b",
        "mtch",
        "a",
        "sorttable",
        "y",
        "mtch",
        "d",
        "mtch",
        "m",
        "mtch",
        "m",
        "m",
        "m",
        "d",
        "d",
        "d",
        "dt1",
        "y",
        "m",
        "d",
        "mtch",
        "b",
        "sorttable",
        "y",
        "mtch",
        "d",
        "mtch",
        "m",
        "mtch",
        "m",
        "m",
        "m",
        "d",
        "d",
        "d",
        "dt2",
        "y",
        "m",
        "d",
        "dt1",
        "dt2",
        "dt1",
        "dt2",
        "comp_func",
        "swap",
        "swap",
        "i",
        "t",
        "i",
        "comp_func",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "q",
        "swap",
        "t",
        "swap",
        "i",
        "b",
        "i",
        "comp_func",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "q",
        "swap",
        "b",
        "sorttable",
        "navigator",
        "setInterval",
        "sorttable",
        "sorttable",
        "element",
        "handler",
        "element",
        "element",
        "handler",
        "handler",
        "handler",
        "dean_addEvent",
        "element",
        "element",
        "element",
        "handlers",
        "handlers",
        "element",
        "element",
        "handlers",
        "element",
        "handlers",
        "handler",
        "handler",
        "element",
        "handleEvent",
        "dean_addEvent",
        "element",
        "handler",
        "element",
        "element",
        "handler",
        "element",
        "element",
        "element",
        "handler",
        "fixEvent",
        "i",
        "handlers",
        "handlers",
        "i",
        "returnValue",
        "returnValue",
        "fixEvent",
        "fixEvent",
        "fixEvent",
        "fixEvent",
        "array",
        "block",
        "context",
        "i",
        "array",
        "i",
        "block",
        "context",
        "array",
        "i",
        "i",
        "array",
        "block",
        "context",
        "key",
        "key",
        "block",
        "context",
        "key",
        "key",
        "block",
        "context",
        "chr",
        "index",
        "block",
        "context",
        "chr",
        "index",
        "block",
        "context",
        "resolve",
        "block",
        "context",
        "resolve",
        "resolve",
        "resolve",
        "block",
        "context"
    ],
    "literals": [
        "'table'",
        "'thead'",
        "'thead'",
        "'thead'",
        "'tfoot'",
        "\"sort_\"",
        "'function'",
        "\"sort_\"",
        "\"click\"",
        "'sorttable_sorted'",
        "'sorttable_sorted_reverse'",
        "'sorttable_sortfwdind'",
        "'span'",
        "\"sorttable_sortrevind\"",
        "'&nbsp<font face=\"webdings\">5</font>'",
        "'&nbsp;&#x25B4;'",
        "'sorttable_sorted_reverse'",
        "'sorttable_sorted'",
        "'sorttable_sortrevind'",
        "'span'",
        "\"sorttable_sortfwdind\"",
        "'&nbsp<font face=\"webdings\">6</font>'",
        "'&nbsp;&#x25BE;'",
        "'sorttable_sorted_reverse'",
        "''",
        "'sorttable_sorted'",
        "''",
        "'sorttable_sortfwdind'",
        "'sorttable_sortrevind'",
        "' sorttable_sorted'",
        "'span'",
        "\"sorttable_sortfwdind\"",
        "'&nbsp<font face=\"webdings\">6</font>'",
        "'&nbsp;&#x25BE;'",
        "''",
        "\"\"",
        "'function'",
        "'input'",
        "\"sorttable_customkey\"",
        "\"sorttable_customkey\"",
        "'undefined'",
        "''",
        "'undefined'",
        "''",
        "'undefined'",
        "''",
        "'input'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'0'",
        "'0'",
        "'0'",
        "'0'",
        "'0'",
        "'0'",
        "'0'",
        "'0'",
        "\"DOMContentLoaded\"",
        "\"on\"",
        "\"on\"",
        "\"on\"",
        "\"undefined\"",
        "\"\"",
        "\"string\"",
        "\"number\""
    ],
    "variables": [
        "stIsIE",
        "i",
        "i",
        "i",
        "j",
        "j",
        "i",
        "innerText",
        "i",
        "i",
        "i",
        "b",
        "t",
        "swap",
        "i",
        "b",
        "q",
        "i",
        "t",
        "q",
        "_timer",
        "handlers",
        "returnValue",
        "handlers",
        "i",
        "forEach",
        "resolve"
    ],
    "comments": [
        "SortTable\n  version 2\n  7th April 2007\n  Stuart Langridge, http://www.kryogenix.org/code/browser/sorttable/\n\n  Instructions:\n  Download this file\n  Add <script src=\"sorttable.js\"></script> to your HTML\n  Add class=\"sortable\" to any table you'd like to make sortable\n  Click on the headers to sort\n\n  Thanks to many, many people for contributions and suggestions.\n  Licenced as X11: http://www.kryogenix.org/code/browser/licence.html\n  This basically means: do what you want with it.",
        "@cc_on!@",
        "quit if this function has already been called",
        "flag this function so we don't do the same thing twice",
        "kill the timer",
        "table doesn't have a tHead. Since it should have, create one and",
        "put the first table row in it.",
        "Safari doesn't support table.tHead, sigh",
        "can't cope with two header rows",
        "Sorttable v1 put rows with a class of \"sortbottom\" at the bottom (as",
        "\"total\" rows, for example). This is B&R, since what you're supposed",
        "to do is put them in a tfoot. So, if there are sortbottom rows,",
        "for backwards compatibility, move them to tfoot (creating it if needed).",
        "table doesn't have a tfoot. Create one.",
        "work through each column and calculate its type",
        "manually override the type with a sorttable_type attribute",
        "skip this col",
        "make it clickable to sort",
        "if we're already sorted by this column, just",
        "reverse the table, which is quicker",
        "if we're already sorted by this column in reverse, just",
        "re-reverse the table, which is quicker",
        "remove sorttable_sorted classes",
        "an element",
        "build an array to sort. This is a Schwartzian transform thing,",
        "i.e., we \"decorate\" each row with the actual sort key,",
        "sort based on the sort keys, and then put the rows back in order",
        "which is a lot faster because you only do getInnerText once per row",
        "If you want a stable sort, uncomment the following line",
        "sorttable.shaker_sort(row_array, this.sorttable_sortfunction);",
        "and comment out this one",
        "guess the type of a column based on its first non-blank row",
        "check for a date: dd/mm/yyyy or dd/mm/yy",
        "can have / or . or - as separator",
        "can be mm/dd as well",
        "looks like a date",
        "definitely dd/mm",
        "looks like a date, but we can't tell which, so assume",
        "that it's dd/mm (English imperialism!) and keep looking",
        "gets the text we want to use for sorting for a cell.",
        "strips leading and trailing whitespace.",
        "this is *not* a generic getInnerText function; it's special to sorttable.",
        "for example, you can override the cell text with a customkey attribute.",
        "it also gets .value for <input> fields.",
        "reverse the rows in a tbody",
        "sort functions\n     each sort function takes two parameters, a and b\n     you are comparing a[0] and b[0]",
        "A stable sort function to allow multi-level sorting of data",
        "see: http://en.wikipedia.org/wiki/Cocktail_sort",
        "thanks to Joseph Nahmias",
        "for",
        "for",
        "while(swap)",
        "Dean Edwards/Matthias Miller/John Resig",
        "for Mozilla/Opera9",
        "for Internet Explorer",
        "@cc_on @",
        "@if (@_win32)\n    document.write(\"<script id=__ie_onload defer src=javascript:void(0)><\\/script>\");\n    var script = document.getElementById(\"__ie_onload\");\n    script.onreadystatechange = function() {\n        if (this.readyState == \"complete\") {\n            sorttable.init(); // call the onload handler\n        }\n    };\n/*@end @",
        "for Safari",
        "sniff",
        "call the onload handler",
        "for other browsers",
        "written by Dean Edwards, 2005",
        "with input from Tino Zijdel, Matthias Miller, Diego Perini",
        "http://dean.edwards.name/weblog/2005/10/add-event/",
        "assign each event handler a unique ID",
        "create a hash table of event types for the element",
        "create a hash table of event handlers for each element/event pair",
        "store the existing event handler (if there is one)",
        "store the event handler in the hash table",
        "assign a global event handler to do all the work",
        "a counter used to create unique IDs",
        "delete the event handler from the hash table",
        "grab the event object (IE uses a global event object)",
        "get a reference to the hash table of event handlers",
        "execute each event handler",
        "add W3C standard event methods",
        "Dean's forEach: http://dean.edwards.name/base/forEach.js",
        "forEach, version 1.0\n\tCopyright 2006, Dean Edwards\n\tLicense: http://www.opensource.org/licenses/mit-license.php",
        "array-like enumeration",
        "mozilla already supports this",
        "generic enumeration",
        "character enumeration",
        "globally resolve forEach enumeration",
        "default",
        "functions have a \"length\" property",
        "the object implements a custom forEach method so use that",
        "the object is a string",
        "the object is array-like"
    ],
    "docstrings": [
        "******************************************************************\n   Supporting functions: bundled here to avoid depending on a library\n   ******************************************************************"
    ],
    "functions": [
        "dean_addEvent",
        "removeEvent",
        "handleEvent",
        "fixEvent"
    ],
    "classes": []
}