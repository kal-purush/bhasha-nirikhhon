{
    "identifiers": [
        "GetObjectFromName",
        "IsNullOrUndefined",
        "IsNotNullnorUndefined",
        "describe",
        "context",
        "it",
        "GetObjectFromName",
        "processOut",
        "process",
        "it",
        "GetObjectFromName",
        "IsNotNullnorUndefined",
        "obj",
        "require",
        "bunyan",
        "IsNotNullnorUndefined",
        "target",
        "obj",
        "target",
        "it",
        "GetObjectFromName",
        "IsNotNullnorUndefined",
        "obj",
        "require",
        "bunyan",
        "IsNotNullnorUndefined",
        "target",
        "obj",
        "target",
        "context",
        "it",
        "normalObj",
        "IsNullOrUndefined",
        "nullObj",
        "IsNullOrUndefined",
        "undefinedObj",
        "IsNullOrUndefined",
        "normalObj",
        "IsNotNullnorUndefined",
        "nullObj",
        "IsNotNullnorUndefined",
        "undefinedObj",
        "IsNotNullnorUndefined",
        "normalObj"
    ],
    "literals": [
        "'source-map-support/register'",
        "'assert'",
        "'../../../src/lib/node/index'",
        "\"JsObjectUtil:\"",
        "'Verify get object API methods'",
        "\"(Native Object): get object from string notation\"",
        "\"process.stdout\"",
        "\"should be the same object.\"",
        "\"(Module Object): get object from string notation and module path, with 2 layer deep\"",
        "\"bunyan.stdSerializers1\"",
        "\"bunyan\"",
        "\"got object should not be undefined or null.\"",
        "'bunyan'",
        "\"bunyan bundled serializer should not be undefined.\"",
        "\"should be the same object.\"",
        "\"(Module Object): get object from string notation and module path, with 3 layer deep\"",
        "\"bunyan.stdSerializers.req\"",
        "\"bunyan\"",
        "\"got object should not be undefined or null.\"",
        "'bunyan'",
        "\"bunyan bundled serializer should not be undefined.\"",
        "\"should be the same object.\"",
        "'Verify check Null, Undefined object methods'",
        "\"Verify check object null or undefined API methods\"",
        "'not exist property'",
        "\"should return false when input argument is null.\"",
        "\"should return false when input argument is undefined.\"",
        "\"should return true when input argument is normal object\"",
        "\"should return false when input argument is null.\"",
        "\"should return false when input argument is undefined.\"",
        "\"should return true when input argument is normal object\""
    ],
    "variables": [
        "processOut",
        "obj",
        "bunyan",
        "target",
        "obj",
        "bunyan",
        "target",
        "nullObj",
        "normalObj",
        "undefinedObj"
    ],
    "comments": [
        "<reference path=\"../../../typings/tsd.d.ts\" />"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}