{
    "identifiers": [
        "ResponseError",
        "RequestType",
        "IRequestHandler",
        "NotificationType",
        "INotificationHandler",
        "IValidatorConnection",
        "createValidatorConnection",
        "SingleFileValidator",
        "InitializeResult",
        "InitializeError",
        "IValidationRequestor",
        "ISimpleTextDocument",
        "Diagnostic",
        "Severity",
        "Position",
        "Files",
        "FileEvent",
        "FileChangeType",
        "LanguageServerError",
        "MessageKind",
        "fs",
        "path",
        "key",
        "content",
        "options",
        "globals",
        "key",
        "createValidatorConnection",
        "process",
        "process",
        "rootFolder",
        "workspaceRoot",
        "rootFolder",
        "Files",
        "rootFolder",
        "value",
        "value",
        "ResponseError",
        "lib",
        "value",
        "error",
        "ResponseError",
        "changes",
        "requestor",
        "optionsCache",
        "requestor",
        "_settings",
        "requestor",
        "settings",
        "_settings",
        "settings",
        "jshintSettings",
        "settings",
        "optionsCache",
        "requestor",
        "lib",
        "Files",
        "fsPath",
        "fsPath",
        "workspaceRoot",
        "fsPath",
        "options",
        "optionsCache",
        "fsPath",
        "options",
        "options",
        "readOptions",
        "fsPath",
        "optionsCache",
        "fsPath",
        "options",
        "options",
        "optionsCache",
        "options",
        "options",
        "readOptions",
        "fsPath",
        "optionsCache",
        "options",
        "options",
        "options",
        "JSHINT",
        "content",
        "options",
        "options",
        "JSHINT",
        "errors",
        "errors",
        "error",
        "error",
        "diagnostics",
        "makeDiagnostic",
        "error",
        "diagnostics",
        "problem",
        "problem",
        "getSeverity",
        "problem",
        "problem",
        "problem",
        "problem",
        "problem",
        "problem",
        "Severity",
        "Severity",
        "process",
        "fsPath",
        "directory",
        "fileName",
        "directory",
        "parent",
        "path",
        "directory",
        "fileName",
        "fs",
        "location",
        "location",
        "parent",
        "path",
        "directory",
        "parent",
        "directory",
        "content",
        "content",
        "regexp",
        "match",
        "m1",
        "m2",
        "m3",
        "m4",
        "m3",
        "m4",
        "m4",
        "length",
        "m4",
        "length",
        "m4",
        "length",
        "match",
        "result",
        "file",
        "stripComments",
        "fs",
        "file",
        "err",
        "LanguageServerError",
        "file",
        "MessageKind",
        "process",
        "isWindows",
        "jshintSettings",
        "fs",
        "jshintSettings",
        "readJsonFile",
        "jshintSettings",
        "fsPath",
        "locateFile",
        "fsPath",
        "packageFile",
        "readJsonFile",
        "packageFile",
        "content",
        "content",
        "locateFile",
        "fsPath",
        "JSHINTRC",
        "configFile",
        "readJsonFile",
        "configFile",
        "getUserHome",
        "home",
        "path",
        "home",
        "JSHINTRC",
        "fs",
        "file",
        "readJsonFile",
        "file",
        "jshintSettings",
        "connection",
        "validator"
    ],
    "literals": [
        "'vscode-languageserver'",
        "'fs'",
        "'path'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'.jshintrc'",
        "string",
        "string",
        "'jshint'",
        "'The jshint library doesn\\'t export a JSHINT property.'",
        "'Failed to load jshint library. Please install jshint in your workspace folder using \\'npm install jshint\\' and then press Retry.'",
        "''",
        "''",
        "'(error)'",
        "'win32'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"\"",
        "'\\n'",
        "'\\r'",
        "'\\r\\n'",
        "'\\n'",
        "\"\"",
        "string",
        "\"Can't load JSHint configuration from file \"",
        "\". Please check the file for syntax errors.\"",
        "'USERPROFILE'",
        "'HOME'",
        "'package.json'"
    ],
    "variables": [
        "workspaceRoot",
        "settings",
        "jshintSettings",
        "lib",
        "JSHINTRC",
        "optionsCache",
        "connection",
        "validator",
        "content",
        "JSHINT",
        "fsPath",
        "options",
        "diagnostics",
        "errors",
        "parent",
        "directory",
        "location",
        "regexp",
        "result",
        "length",
        "packageFile",
        "content",
        "configFile",
        "home",
        "file"
    ],
    "comments": [
        "---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------",
        "For some reason the errors array contains null.",
        "Only one of m1, m2, m3, m4 matches",
        "A block comment. Replace with nothing",
        "A line comment. If it ends in \\r?\\n then keep it.",
        "We match a string"
    ],
    "docstrings": [
        "* First capturing group mathes double quoted string\n\t\t * Second matches singler quotes string\n\t\t * Thrid matches block comments\n\t\t * Fourth matches line comments"
    ],
    "functions": [
        "onFileEvents",
        "onConfigurationChange",
        "makeDiagnostic",
        "getSeverity",
        "isWindows",
        "readOptions",
        "locateFile",
        "stripComments",
        "readJsonFile",
        "getUserHome"
    ],
    "classes": []
}