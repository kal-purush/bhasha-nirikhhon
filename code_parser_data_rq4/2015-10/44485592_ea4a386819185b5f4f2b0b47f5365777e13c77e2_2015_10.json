{
    "identifiers": [
        "acorn",
        "ESTree",
        "s",
        "makeStringTransform",
        "name",
        "options",
        "transform",
        "content",
        "transformOptions",
        "done",
        "err",
        "newContent",
        "makeFalafelTransform",
        "name",
        "options",
        "transform",
        "node",
        "transformOptions",
        "done",
        "err",
        "makeRequireTransform",
        "name",
        "options",
        "transform",
        "args",
        "options",
        "done",
        "err",
        "replacement",
        "loadTransformConfig",
        "name",
        "file",
        "cb",
        "err",
        "configData",
        "loadTransformConfigSync",
        "name",
        "file",
        "skipFile",
        "file",
        "configData",
        "runTransform",
        "transform",
        "file",
        "config",
        "cb",
        "err",
        "transformed"
    ],
    "literals": [
        "\"browserify-transform-tools\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [],
    "comments": [
        "A list of extensions which will not be processed, e.g. \"['.coffee', '.jade']\"",
        "A list of extensions to process. If this options is not specified, then all",
        "extensions will be processed. If this option is specified, then any file with",
        "an extension not in this list will skipped.",
        "If set true, then your transform will only run on \"javascript\" files. This is",
        "handy for Falafel and Require transforms, defined below. This is equivalent to",
        "passing includeExtensions: [\".js\", \".coffee\", \".coffee.md\", \".litcoffee\",",
        "\"._js\", \"._coffee\", \".jsx\", \".es\", \".es6\"].",
        "Options passed to Falafel.",
        "makeRequireTransform can parse many simple expressions, so the above would",
        "succesfully parse require(\"f\" + \"oo\"), for example. Any expression",
        "involving core JavaScript, __filename, __dirname, path, and join (where",
        "join is an alias for path.join) can be parsed. Setting the evaluateArguments",
        "option to false will disable this behavior, in which case the source code",
        "for everything inside the ()s will be returned.",
        "Return the source for the given node, including any modifications made to",
        "children nodes.",
        "Transform the source for the present node to the string s.",
        "Reference to the parent element or null at the root element.",
        "The configuration for the transform.",
        "The directory the configuration was loaded from; the directory which contains",
        "package.json if that's where the config came from, or the directory which",
        "contains the file specified in package.json. This is handy for resolving",
        "relative paths. Note that this field may be null if the configuration is set",
        "programatically.",
        "The file the configuration was loaded from. Note that this field may be null",
        "if the configuration is set programatically.",
        "Since a transform is run once for each file in a project, configuration data",
        "is cached using the location of the package.json file as the key. If this value",
        "is true, it means that data was loaded from the cache.",
        "The appliesTo property from the configuration.",
        "A list of extensions to process. If this option is not specified, then all",
        "extensions will be processed. If this option is specified, then any file with an",
        "extension not in this list will skipped.",
        "A list of extensions which will not be processed. e.g. \"['.coffee', '.jade']\"",
        "A list of paths, relative to the configuration file, of files which should be",
        "transformed. Only these files will be transformed.",
        "A regex or a list of regexes. If any regex matches the full path of the file,",
        "then the file will be processed, otherwise not.",
        "The transform's configuration data."
    ],
    "docstrings": [
        "* Typings for the browserify transform tools.\n *\n * @url https://www.npmjs.com/package/browserify-transform-tools\n * @author John Vilk <jvilk@cs.umass.edu>",
        "* Options literal for transforms.",
        "* Options literal for Falafel transforms.",
        "* Options literal for require() transforms.",
        "* A Falafel AST node.",
        "* Configuration data for a transform.",
        "* Configures what files the transform will be applied to.",
        "* Options passed in to a transform function.",
        "* Create a simple string transform.",
        "* Create a transform using Falafel.",
        "* Create a transform that changes require() calls.",
        "* Loads the named transform's configuration from the given file.",
        "* Synchronous version of loadTransformConfig.",
        "* Returns if the transform should skip the file based on the input configdata.",
        "* Run the named transform on the given file, and return the result to the callback.\n   * Useful for unit testing."
    ],
    "functions": [],
    "classes": []
}