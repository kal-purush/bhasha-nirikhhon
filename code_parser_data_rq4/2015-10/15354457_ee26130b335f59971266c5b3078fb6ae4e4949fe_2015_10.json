{
    "identifiers": [
        "com",
        "mucommander",
        "commons",
        "file",
        "archiver",
        "com",
        "github",
        "stephenc",
        "javaisotools",
        "eltorito",
        "impl",
        "ElToritoConfig",
        "com",
        "github",
        "stephenc",
        "javaisotools",
        "iso9660",
        "ConfigException",
        "com",
        "github",
        "stephenc",
        "javaisotools",
        "iso9660",
        "ISO9660Directory",
        "com",
        "github",
        "stephenc",
        "javaisotools",
        "iso9660",
        "ISO9660File",
        "com",
        "github",
        "stephenc",
        "javaisotools",
        "iso9660",
        "ISO9660RootDirectory",
        "com",
        "github",
        "stephenc",
        "javaisotools",
        "iso9660",
        "impl",
        "ISO9660Config",
        "com",
        "github",
        "stephenc",
        "javaisotools",
        "iso9660",
        "impl",
        "ISOImageFileHandler",
        "com",
        "github",
        "stephenc",
        "javaisotools",
        "joliet",
        "impl",
        "JolietConfig",
        "com",
        "github",
        "stephenc",
        "javaisotools",
        "rockridge",
        "impl",
        "RockRidgeConfig",
        "com",
        "github",
        "stephenc",
        "javaisotools",
        "sabre",
        "HandlerException",
        "com",
        "github",
        "stephenc",
        "javaisotools",
        "sabre",
        "StreamHandler",
        "com",
        "mucommander",
        "commons",
        "file",
        "AbstractFile",
        "com",
        "mucommander",
        "commons",
        "file",
        "FileAttributes",
        "com",
        "mucommander",
        "commons",
        "file",
        "impl",
        "iso",
        "MuCreateISO",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileNotFoundException",
        "java",
        "io",
        "java",
        "io",
        "OutputStream",
        "java",
        "util",
        "logging",
        "Level",
        "java",
        "util",
        "logging",
        "Logger",
        "streamHandler",
        "config",
        "root",
        "enableJoliet",
        "enableRockRidge",
        "enableElTorito",
        "createISOProcess",
        "file",
        "supporStream",
        "config",
        "config",
        "allowASCII",
        "config",
        "setInterchangeLevel",
        "enableRockRidge",
        "config",
        "restrictDirDepthTo8",
        "config",
        "restrictDirDepthTo8",
        "config",
        "setPublisher",
        "getProperty",
        "config",
        "setVolumeID",
        "file",
        "getName",
        "substring",
        "min",
        "file",
        "getName",
        "length",
        "config",
        "setDataPreparer",
        "getProperty",
        "config",
        "forceDotDelimiter",
        "ex",
        "Logger",
        "getLogger",
        "getName",
        "log",
        "Level",
        "SEVERE",
        "ex",
        "root",
        "streamHandler",
        "file",
        "getPath",
        "ex",
        "Logger",
        "getLogger",
        "getName",
        "log",
        "Level",
        "SEVERE",
        "ex",
        "Override",
        "entryPath",
        "attributes",
        "isDirectory",
        "attributes",
        "isDirectory",
        "isDirectory",
        "split",
        "entryPath",
        "split",
        "dir",
        "split",
        "split",
        "length",
        "getParentDirectory",
        "entryPath",
        "addDirectory",
        "dir",
        "file",
        "attributes",
        "getPath",
        "getParentDirectory",
        "entryPath",
        "addFile",
        "file",
        "ex",
        "Logger",
        "getLogger",
        "getName",
        "log",
        "Level",
        "SEVERE",
        "ex",
        "e",
        "e",
        "printStackTrace",
        "e",
        "isoPath",
        "directories",
        "isoPath",
        "split",
        "parent",
        "root",
        "i",
        "i",
        "directories",
        "length",
        "i",
        "dir",
        "containsDirectory",
        "parent",
        "directories",
        "i",
        "dir",
        "parent",
        "dir",
        "parent",
        "parentDirectory",
        "isoSubDirPath",
        "directory",
        "parentDirectory",
        "getDirectories",
        "directory",
        "getName",
        "equals",
        "isoSubDirPath",
        "directory",
        "Override",
        "createISOProcess",
        "createISOProcess",
        "getProcessingFile",
        "Override",
        "createISOProcess",
        "createISOProcess",
        "totalWrittenBytes",
        "Override",
        "createISOProcess",
        "createISOProcess",
        "writtenBytesCurrentFile",
        "Override",
        "createISOProcess",
        "createISOProcess",
        "currentFileLength",
        "Override",
        "root",
        "hasSubDirs",
        "root",
        "getFiles",
        "size",
        "createISOProcess",
        "streamHandler",
        "root",
        "rrConfig",
        "enableRockRidge",
        "rrConfig",
        "rrConfig",
        "setMkisofsCompatibility",
        "rrConfig",
        "hideMovedDirectoriesStore",
        "rrConfig",
        "forcePortableFilenameCharacterSet",
        "jolietConfig",
        "enableJoliet",
        "jolietConfig",
        "config",
        "getPublisher",
        "jolietConfig",
        "setPublisher",
        "config",
        "getPublisher",
        "jolietConfig",
        "setPublisher",
        "config",
        "getPublisher",
        "ex",
        "Logger",
        "getLogger",
        "getName",
        "log",
        "Level",
        "SEVERE",
        "ex",
        "jolietConfig",
        "setVolumeID",
        "config",
        "getVolumeID",
        "substring",
        "min",
        "config",
        "getVolumeID",
        "length",
        "config",
        "getDataPreparer",
        "config",
        "getDataPreparer",
        "jolietConfig",
        "setDataPreparer",
        "config",
        "getDataPreparer",
        "jolietConfig",
        "setDataPreparer",
        "config",
        "getDataPreparer",
        "ex",
        "Logger",
        "getLogger",
        "getName",
        "log",
        "Level",
        "SEVERE",
        "ex",
        "jolietConfig",
        "forceDotDelimiter",
        "ex",
        "Logger",
        "getLogger",
        "getName",
        "log",
        "Level",
        "SEVERE",
        "ex",
        "elToritoConfig",
        "createISOProcess",
        "process",
        "config",
        "rrConfig",
        "jolietConfig",
        "elToritoConfig",
        "ex",
        "Logger",
        "getLogger",
        "getName",
        "log",
        "Level",
        "SEVERE",
        "ex",
        "Override"
    ],
    "literals": [
        "\"user.name\"",
        "\"user.name\"",
        "\"\\\\\\\\\"",
        "\"\\\\\\\\\""
    ],
    "variables": [
        "streamHandler",
        "config",
        "root"
    ],
    "comments": [
        "Adds support for longer file names & wider range of characters",
        "Adds support for deeper directory hierarchies and even bigger file names (up to 255 bytes)",
        "Adds support for creation of bootable iso files (not implemented)",
        "The rock ridge extension of ISO9660 allow directory depth to exceed 8",
        "Max length of volume is 32 chars",
        "",
        "Archiver implementation //",
        "",
        "Initial directory (root)",
        "Rock Ridge support",
        "Joliet support",
        "Max volume id is 16 in the joliet config",
        "ELTorito adds support for bootable ISO files, which is not supported at this time",
        "As this is for archiving, not creation of bootable ISO files (yet)"
    ],
    "docstrings": [
        "* This file is part of muCommander, http://www.mucommander.com\n * Copyright (C) 2002-2010 Maxence Bernard\n *\n * muCommander is free software; you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * muCommander is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.",
        "* Archiver implementation using the ISO9660 archive format.\n *\n * @author Jeppe Vennekilde",
        "* Get the ISO9660Directory parent object the path belongs to\n     *\n     * @param isoPath the sub directory/file of the parent directory it will return\n     * @return an ISO9660Directory that is the parent of the provided path",
        "* Check if an ISO9660Directory contain a provided sub directory\n     *\n     * @param parentDirectory the directory that will be searched\n     * @param isoSubDirPath the ISO path that will be used for reference to see \n     * if the parent directory contains the sub directory\n     * @return an ISO9660Directory that is sub directory of the parent directory\n     * null if it does not contain the sub directory"
    ],
    "functions": [
        "ISOArchiver",
        "OutputStream",
        "createEntry",
        "ISO9660Directory",
        "getParentDirectory",
        "ISO9660Directory",
        "containsDirectory",
        "getProcessingFile",
        "totalWrittenBytes",
        "writtenBytesCurrentFile",
        "currentFileLength",
        "postProcess",
        "close"
    ],
    "classes": [
        "ISOArchiver"
    ]
}