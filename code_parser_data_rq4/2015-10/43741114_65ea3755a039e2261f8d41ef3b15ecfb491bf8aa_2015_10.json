{
    "identifiers": [
        "signal",
        "value",
        "connections",
        "signal",
        "connections",
        "obj",
        "conditions",
        "connections",
        "signal",
        "items",
        "condition",
        "values",
        "conditions",
        "items",
        "condition",
        "condition",
        "value",
        "overrideValue",
        "slots",
        "values",
        "items",
        "overrideValue",
        "overrideValue",
        "isinstance",
        "overrideValue",
        "usedValue",
        "replace",
        "value",
        "value",
        "slot",
        "slots",
        "hasattr",
        "obj",
        "slot",
        "obj",
        "__class__",
        "slot",
        "getattr",
        "obj",
        "slot",
        "usedValue",
        "acceptsArguments",
        "slotMethod",
        "results",
        "append",
        "slotMethod",
        "usedValue",
        "acceptsArguments",
        "slotMethod",
        "results",
        "append",
        "slotMethod",
        "results",
        "append",
        "results",
        "append",
        "slotMethod",
        "results",
        "signal",
        "condition",
        "receiver",
        "slot",
        "value",
        "signal",
        "signals",
        "__class__",
        "signal",
        "connections",
        "connections",
        "setdefault",
        "signal",
        "connections",
        "setdefault",
        "receiver",
        "connection",
        "setdefault",
        "condition",
        "connection",
        "setdefault",
        "value",
        "slot",
        "connection",
        "connection",
        "append",
        "slot",
        "signal",
        "condition",
        "obj",
        "slot",
        "value",
        "slot",
        "connections",
        "signal",
        "obj",
        "condition",
        "value",
        "connection",
        "remove",
        "slot",
        "obj",
        "connections",
        "signal",
        "pop",
        "obj",
        "signal",
        "connections",
        "pop",
        "signal",
        "method",
        "numberOfArguments",
        "method",
        "__class__",
        "numberOfArguments",
        "getattr",
        "method",
        "getattr",
        "method",
        "getattr",
        "func",
        "getattr",
        "func",
        "funcDefaults",
        "len",
        "funcDefaults",
        "method",
        "__class__",
        "getattr",
        "method",
        "getattr",
        "method",
        "funcDefaults",
        "len",
        "funcDefaults",
        "getattr",
        "method",
        "getattr",
        "method",
        "co_argcount",
        "coArgCount",
        "numberOfArguments",
        "coArgCount",
        "numberOfDefaults",
        "numberOfArguments"
    ],
    "literals": [
        "\"connections\"",
        "'${value}'",
        "\" slot not defined: \"",
        "''",
        "\"%(name)s is trying to connect a slot to an undefined signal: %(signal)s\"",
        "'name'",
        "'signal'",
        "'method'",
        "'im_func'",
        "'__func__'",
        "'func_defaults'",
        "'__defaults__'",
        "'function'",
        "'func_defaults'",
        "'__defaults__'",
        "'func_code'",
        "'__code__'"
    ],
    "variables": [
        "__slots__",
        "signals",
        "connections",
        "results",
        "usedValue",
        "usedValue",
        "usedValue",
        "slotMethod",
        "connections",
        "connections",
        "connection",
        "connection",
        "connection",
        "connection",
        "connections",
        "func",
        "funcDefaults",
        "numberOfDefaults",
        "funcDefaults",
        "numberOfDefaults",
        "coArgCount"
    ],
    "comments": [],
    "docstrings": [
        "'''\n    Connectable.py\n\n    Connectable enables child object to create dynamic connections\n    (via signals/slots) at run-time. Inspired by QT's signal / slot mechanism\n\n    Copyright (C) 2015  Timothy Edmund Crosley\n\n    This program is free software; you can redistribute it and/or\n    modify it under the terms of the GNU General Public License\n    as published by the Free Software Foundation; either version 2\n    of the License, or (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n'''",
        "\"\"\"\n            Calls all slot methods connected with signal,\n            optionally passing in a value\n\n            signal - the name of the signal to emit, must be defined in the classes 'signals' list.\n            value - the value to pass to all connected slot methods.\n        \"\"\"",
        "\"\"\"\n            Defines a connection between this objects signal\n            and another objects slot:\n\n            signal - the signal this class will emit, to cause the slot method to be called.\n            condition - only call the slot method if the value emitted matches this condition.\n            receiver - the object containing the slot method to be called.\n            slot - the name of the slot method to call.\n            value - an optional value override to pass into the slot method as the first variable.\n        \"\"\"",
        "\"\"\"\n            Removes connection(s) between this objects signal\n            and connected slot(s):\n\n            signal - the signal this class will emit, to cause the slot method to be called.\n            condition - only call the slot method if the value emitted matches this condition.\n            receiver - the object containing the slot method to be called.\n            slot - the name of the slot method to call.\n            value - an optional value override to pass into the slot method as the first variable.\n        \"\"\"",
        "\"\"\"\n        Returns True if the given method will accept the given number of arguments:\n            method - the method to perform introspection on\n            numberOfArguments - the numberOfArguments\n    \"\"\""
    ],
    "functions": [
        "emit",
        "connect",
        "disconnect",
        "acceptsArguments"
    ],
    "classes": [
        "Connectable"
    ]
}