{
    "identifiers": [
        "argparse",
        "shutil",
        "sys",
        "elftools",
        "elf",
        "elffile",
        "ELFFile",
        "input",
        "output",
        "verbose",
        "file",
        "nbytes",
        "from_bytes",
        "file",
        "read",
        "nbytes",
        "file",
        "seek",
        "read_int",
        "ELFCLASS64",
        "file",
        "seek",
        "read_int",
        "ET_DYN",
        "file",
        "seek",
        "open",
        "input",
        "file",
        "check",
        "file",
        "ELFFile",
        "file",
        "elf",
        "get_section_by_name",
        "index",
        "symbol",
        "section",
        "iter_symbols",
        "symbol",
        "entry",
        "st_info",
        "bind",
        "section",
        "header",
        "sh_addr",
        "index",
        "ELF64_SYM_SIZE",
        "ST_INFO_OFFSET",
        "address",
        "append",
        "offset",
        "verbose",
        "address",
        "symbol",
        "name",
        "len",
        "address",
        "output",
        "input",
        "output",
        "input",
        "output",
        "shutil",
        "copyfile",
        "input",
        "output",
        "follow_symlinks",
        "open",
        "output",
        "file",
        "offset",
        "address",
        "verbose",
        "offset",
        "file",
        "seek",
        "offset",
        "from_bytes",
        "file",
        "read",
        "info",
        "STB_GNU_UNIQUE",
        "file",
        "seek",
        "offset",
        "file",
        "write",
        "STB_WEAK",
        "info",
        "STV_HIDDEN",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "required",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "action",
        "parser",
        "set_defaults",
        "call",
        "patch",
        "parser",
        "parse_args",
        "sys",
        "argv",
        "args",
        "call",
        "args",
        "input",
        "args",
        "output",
        "verbose",
        "args",
        "verbose"
    ],
    "literals": [
        "\"little\"",
        "\"only x64 library are supported\"",
        "\"only dynamic library are supported\"",
        "\"rb\"",
        "\".dynsym\"",
        "\"STB_GNU_UNIQUE\"",
        "\"STB_LOOS\"",
        "f\"Found UNIQUE 0x{address[-1]:08x}: {symbol.name}\"",
        "f\"Found {len(address)} symbol(s)\"",
        "f\"Patch inplace: {input}\"",
        "f\"Output to: {output}\"",
        "\"r+b\"",
        "f\"Patch UNIQUE 0x{offset:08x}\"",
        "\"little\"",
        "\"__main__\"",
        "\"Replace STB_GNU_UNIQUE or STB_LOOS with STB_WEAK in shared libraries.\"",
        "\"-i\"",
        "\"--input\"",
        "\"-o\"",
        "\"--output\"",
        "\"-v\"",
        "\"--verbose\"",
        "\"store_true\""
    ],
    "variables": [
        "ELF64_SYM_SIZE",
        "ST_INFO_OFFSET",
        "STB_GNU_UNIQUE",
        "STB_WEAK",
        "STV_HIDDEN",
        "ELFCLASS64",
        "ET_DYN",
        "read_int",
        "address",
        "elf",
        "address",
        "section",
        "offset",
        "output",
        "info",
        "parser",
        "args"
    ],
    "comments": [
        "https://llvm.org/doxygen/BinaryFormat_2ELF_8h_source.html#l01291",
        "https://refspecs.linuxfoundation.org/elf/gabi4+/ch4.symtab.html",
        "https://refspecs.linuxfoundation.org/elf/gabi4+/ch4.eheader.html",
        "size of 64 bit struct.",
        "size of Elf64_Word (uint32_t)",
        "Also we may debug with: hexdump -C -n 20 FILE_PATH",
        "64-bit objects",
        "shared object file",
        "offset EI_CLASS",
        "offset EI_NIDENT",
        "reset",
        "address of st_info",
        "symtab ignored as we are using dlopen",
        "st_info consists of bind (higher 4 bit) and type (lower 4 bit)",
        "typedef struct {",
        "Elf64_Word    st_name;",
        "unsigned char st_info; <--- here",
        "unsigned char st_other;",
        "Elf64_Half    st_shndx;",
        "Elf64_Addr    st_value;",
        "Elf64_Xword   st_size;",
        "} Elf64_Sym;"
    ],
    "docstrings": [],
    "functions": [
        "patch",
        "check"
    ],
    "classes": []
}