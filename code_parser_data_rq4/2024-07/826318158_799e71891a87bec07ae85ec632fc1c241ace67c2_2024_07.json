{
    "identifiers": [
        "nus",
        "mini",
        "backend",
        "controllers",
        "java",
        "io",
        "java",
        "math",
        "BigDecimal",
        "java",
        "sql",
        "SQLException",
        "java",
        "time",
        "LocalDateTime",
        "java",
        "time",
        "format",
        "DateTimeFormatter",
        "java",
        "util",
        "java",
        "util",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "stereotype",
        "Service",
        "com",
        "google",
        "cloud",
        "documentai",
        "v1",
        "Document",
        "com",
        "google",
        "cloud",
        "documentai",
        "v1",
        "Document",
        "Entity",
        "com",
        "google",
        "cloud",
        "documentai",
        "v1",
        "DocumentProcessorServiceClient",
        "com",
        "google",
        "cloud",
        "documentai",
        "v1",
        "ProcessRequest",
        "com",
        "google",
        "cloud",
        "documentai",
        "v1",
        "ProcessResponse",
        "com",
        "google",
        "cloud",
        "documentai",
        "v1",
        "ProcessorName",
        "com",
        "google",
        "cloud",
        "documentai",
        "v1",
        "RawDocument",
        "nus",
        "mini",
        "backend",
        "jdbcrepositories",
        "ReceiptRepository",
        "nus",
        "mini",
        "backend",
        "models",
        "EnumTypes",
        "nus",
        "mini",
        "backend",
        "models",
        "Receipt",
        "nus",
        "mini",
        "backend",
        "utilities",
        "DateTimeParser",
        "Service",
        "Autowired",
        "receiptRepository",
        "PROJECT_ID",
        "LOCATION",
        "PROCESSOR_ID",
        "user",
        "fileName",
        "contentType",
        "content",
        "processDocument",
        "content",
        "contentType",
        "extractedReceipt",
        "extractDataFromDocument",
        "user",
        "fileName",
        "extractedReceipt",
        "toString",
        "receiptRepository",
        "save",
        "extractedReceipt",
        "fileContent",
        "mineType",
        "client",
        "DocumentProcessorServiceClient",
        "create",
        "processorName",
        "ProcessorName",
        "of",
        "PROJECT_ID",
        "LOCATION",
        "PROCESSOR_ID",
        "processorName",
        "toString",
        "request",
        "ProcessRequest",
        "newBuilder",
        "setName",
        "processorName",
        "toString",
        "setRawDocument",
        "RawDocument",
        "newBuilder",
        "setContent",
        "com",
        "google",
        "protobuf",
        "ByteString",
        "copyFrom",
        "fileContent",
        "setMimeType",
        "mineType",
        "build",
        "build",
        "result",
        "client",
        "processDocument",
        "request",
        "result",
        "getDocument",
        "userId",
        "fileName",
        "dataMap",
        "entity",
        "getEntitiesList",
        "dataMap",
        "put",
        "entity",
        "getType",
        "entity",
        "getMentionText",
        "dataMap",
        "toString",
        "dateTime",
        "DateTimeParser",
        "parseDateTime",
        "dataMap",
        "get",
        "dataMap",
        "get",
        "Receipt",
        "builder",
        "userId",
        "userId",
        "fileUrl",
        "fileName",
        "uploadTime",
        "LocalDateTime",
        "now",
        "payer",
        "dataMap",
        "get",
        "total",
        "valueOf",
        "dataMap",
        "get",
        "trxTime",
        "dateTime",
        "category",
        "EnumTypes",
        "CatType",
        "OTHER",
        "platform",
        "EnumTypes",
        "PltfmType",
        "OTHER",
        "paymentType",
        "getPaymentType",
        "dataMap",
        "get",
        "merchant",
        "dataMap",
        "get",
        "build",
        "paymentType",
        "paymentType",
        "toLowerCase",
        "EnumTypes",
        "PmtsType",
        "CASH",
        "EnumTypes",
        "PmtsType",
        "CREDIT",
        "EnumTypes",
        "PmtsType",
        "OTHER",
        "dateStr",
        "timeStr",
        "dateTime",
        "DateTimeParser",
        "parseDateTime",
        "dateStr",
        "timeStr",
        "formatter",
        "DateTimeFormatter",
        "ofPattern",
        "formattedDateTime",
        "dateTime",
        "format",
        "formatter",
        "formattedDateTime",
        "formattedDateTime"
    ],
    "literals": [
        "\"neat-shell-428904-j4\"",
        "\"us\"",
        "\"f0907bec67c693f3\"",
        "\"handleFileUpload >>> document: \"",
        "\"handleFileUpload >>> receipt: \"",
        "\"ZZZZZZZZZZZZZZZZZZZZzBefore costructing AI ProcessorName >>>  \"",
        "\"Before costructing AI ProcessorName >>>  \"",
        "\"processDocument >>> processorName: \"",
        "\"processDocument >>> request: \"",
        "\"extractDataFromDocument dataMap >>>>>>>: \"",
        "\"receipt_date\"",
        "\"purchase_time\"",
        "\"credit_card_last_four_digits\"",
        "\"total_amount\"",
        "\"payment_type\"",
        "\"supplier_name\"",
        "\"cash\"",
        "\"visa\"",
        "\"yyyy-MM-dd'T'HH:mm:ss\"",
        "\"Formatted LocalDateTime: \""
    ],
    "variables": [
        "receiptRepository"
    ],
    "comments": [
        "@Autowired",
        "private GoogleAIService documentAIService;",
        "e.g., \"us\"",
        "System.out.println(\"handleFileUpload >>> userId: \"+user);",
        "System.out.println(\"handleFileUpload >>> fileName: \"+fileName);",
        "System.out.println(\"handleFileUpload >>> contentType: \"+contentType);",
        "create a new Receipt record in MySql",
        "process the uploaded file using Google Document AI",
        "assuming MultipartFile.getContentType() uses same format as RawDocument.mimeType",
        "https://eu-documentai.googleapis.com/v1/projects/$PROJECT_ID/locations/eu/processors/$PROCESSOR_ID:process",
        ".setMimeType(\"image/jpeg\")",
        "//                 .setMimeType(\"application/pdf\")",
        "extract data from the Document object into a Receipt object and save it to MySql",
        "dataMap.put(entity.getEntityType().name(), entity.getText());",
        "dataMap.put(entity.getType(), entity.getValue());",
        "@TODO determine the category by supplier_name",
        "@TODO determine the platform by supplier_address",
        "to normalize the payment type",
        "To formats date 09/06/24(DD/MM/YY),  2024-06-23, July 10, 2024,  14 Jun 24 18:21 +0800,",
        "and purchase_time: 18:21 +0800, 1:05,14:51, 11:20:30",
        "dateTime.replace(\"T\", \" \");"
    ],
    "docstrings": [],
    "functions": [
        "handleFileUpload",
        "Document",
        "processDocument",
        "Receipt",
        "extractDataFromDocument",
        "getPaymentType",
        "formatDateTIme"
    ],
    "classes": [
        "ImgAIService"
    ]
}