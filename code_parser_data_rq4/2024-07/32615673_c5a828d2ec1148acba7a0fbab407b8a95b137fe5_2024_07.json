{
    "identifiers": [
        "com",
        "unboundid",
        "scim2",
        "common",
        "com",
        "fasterxml",
        "jackson",
        "annotation",
        "JsonInclude",
        "com",
        "fasterxml",
        "jackson",
        "core",
        "JsonProcessingException",
        "com",
        "fasterxml",
        "jackson",
        "databind",
        "ObjectMapper",
        "com",
        "fasterxml",
        "jackson",
        "databind",
        "node",
        "TextNode",
        "com",
        "unboundid",
        "scim2",
        "common",
        "annotations",
        "NotNull",
        "com",
        "unboundid",
        "scim2",
        "common",
        "exceptions",
        "BadRequestException",
        "com",
        "unboundid",
        "scim2",
        "common",
        "filters",
        "Filter",
        "com",
        "unboundid",
        "scim2",
        "common",
        "filters",
        "FilterType",
        "com",
        "unboundid",
        "scim2",
        "common",
        "types",
        "Email",
        "com",
        "unboundid",
        "scim2",
        "common",
        "types",
        "Name",
        "com",
        "unboundid",
        "scim2",
        "common",
        "types",
        "UserResource",
        "com",
        "unboundid",
        "scim2",
        "common",
        "utils",
        "JsonUtils",
        "com",
        "unboundid",
        "scim2",
        "common",
        "utils",
        "MapperFactory",
        "org",
        "testng",
        "annotations",
        "AfterMethod",
        "org",
        "testng",
        "annotations",
        "Test",
        "java",
        "util",
        "com",
        "fasterxml",
        "jackson",
        "core",
        "JsonParser",
        "Feature",
        "ALLOW_SINGLE_QUOTES",
        "com",
        "fasterxml",
        "jackson",
        "databind",
        "DeserializationFeature",
        "FAIL_ON_UNKNOWN_PROPERTIES",
        "com",
        "fasterxml",
        "jackson",
        "databind",
        "MapperFeature",
        "SORT_PROPERTIES_ALPHABETICALLY",
        "com",
        "fasterxml",
        "jackson",
        "databind",
        "SerializationFeature",
        "WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED",
        "org",
        "assertj",
        "core",
        "api",
        "Assertions",
        "assertThat",
        "org",
        "assertj",
        "core",
        "api",
        "Assertions",
        "assertThatThrownBy",
        "AfterMethod",
        "JsonUtils",
        "setCustomMapperFactory",
        "Test",
        "rawJSONString",
        "expectedJSON",
        "JsonUtils",
        "getObjectReader",
        "readTree",
        "rawJSONString",
        "toString",
        "user",
        "setUserName",
        "setEmails",
        "setValue",
        "setDisplayName",
        "userJSON",
        "JsonUtils",
        "getObjectWriter",
        "writeValueAsString",
        "user",
        "assertThat",
        "userJSON",
        "isNotEqualTo",
        "expectedJSON",
        "factory",
        "setMapperCustomFeatures",
        "of",
        "SORT_PROPERTIES_ALPHABETICALLY",
        "JsonUtils",
        "setCustomMapperFactory",
        "factory",
        "userJSON",
        "JsonUtils",
        "getObjectWriter",
        "writeValueAsString",
        "user",
        "assertThat",
        "userJSON",
        "isEqualTo",
        "expectedJSON",
        "Test",
        "rawJSONString",
        "expectedPOJO",
        "setFamilyName",
        "setGivenName",
        "setMiddleName",
        "setFormatted",
        "assertThatThrownBy",
        "JsonUtils",
        "getObjectReader",
        "forType",
        "readValue",
        "rawJSONString",
        "isInstanceOf",
        "factory",
        "setDeserializationCustomFeatures",
        "of",
        "FAIL_ON_UNKNOWN_PROPERTIES",
        "JsonUtils",
        "setCustomMapperFactory",
        "factory",
        "javaObject",
        "JsonUtils",
        "getObjectReader",
        "forType",
        "readValue",
        "rawJSONString",
        "assertThat",
        "javaObject",
        "isEqualTo",
        "expectedPOJO",
        "assertThat",
        "javaObject",
        "toString",
        "doesNotContain",
        "Test",
        "rawJSONString",
        "expectedJSON",
        "JsonUtils",
        "getObjectReader",
        "readTree",
        "rawJSONString",
        "toString",
        "user",
        "setUserName",
        "userJSON",
        "JsonUtils",
        "getObjectWriter",
        "writeValueAsString",
        "user",
        "assertThat",
        "userJSON",
        "isNotEqualTo",
        "expectedJSON",
        "assertThat",
        "userJSON",
        "contains",
        "factory",
        "setSerializationCustomFeatures",
        "of",
        "WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED",
        "JsonUtils",
        "setCustomMapperFactory",
        "factory",
        "userJSON",
        "JsonUtils",
        "getObjectWriter",
        "writeValueAsString",
        "user",
        "assertThat",
        "userJSON",
        "isEqualTo",
        "expectedJSON",
        "assertThat",
        "userJSON",
        "doesNotContain",
        "Test",
        "assertThatThrownBy",
        "Filter",
        "fromString",
        "isInstanceOf",
        "factory",
        "setJsonParserCustomFeatures",
        "of",
        "ALLOW_SINGLE_QUOTES",
        "JsonUtils",
        "setCustomMapperFactory",
        "factory",
        "equalFilter",
        "Filter",
        "fromString",
        "assertThat",
        "equalFilter",
        "getFilterType",
        "isEqualTo",
        "FilterType",
        "EQUAL",
        "assertThat",
        "equalFilter",
        "getAttributePath",
        "isNotNull",
        "matches",
        "path",
        "path",
        "toString",
        "equals",
        "assertThat",
        "equalFilter",
        "getComparisonValue",
        "isEqualTo",
        "TextNode",
        "valueOf",
        "Test",
        "NotNull",
        "Override",
        "mapper",
        "createObjectMapper",
        "mapper",
        "setSerializationInclusion",
        "JsonInclude",
        "Include",
        "USE_DEFAULTS",
        "mapper",
        "user",
        "setUserName",
        "assertThat",
        "user",
        "toString",
        "doesNotContain",
        "factory",
        "JsonUtils",
        "setCustomMapperFactory",
        "factory",
        "assertThat",
        "user",
        "toString",
        "contains"
    ],
    "literals": [
        "\"{\"",
        "\"  \\\"schemas\\\" : [ \\\"urn:ietf:params:scim:schemas:core:2.0:User\\\" ],\"",
        "\"  \\\"displayName\\\" : \\\"Kendrick Lamar\\\",\"",
        "\"  \\\"emails\\\" : [{ \\\"value\\\" : \\\"NLU@example.com\\\" }],\"",
        "\"  \\\"userName\\\" : \\\"K.Dot\\\"\"",
        "\"}\"",
        "\"K.Dot\"",
        "\"NLU@example.com\"",
        "\"Kendrick Lamar\"",
        "\"{\"",
        "\"    \\\"familyName\\\": \\\"Duckworth\\\",\"",
        "\"    \\\"givenName\\\": \\\"Kendrick\\\",\"",
        "\"    \\\"middleName\\\": \\\"Lamar\\\",\"",
        "\"    \\\"formatted\\\": \\\"Kendrick Lamar Duckworth\\\",\"",
        "\"    \\\"stageName\\\": \\\"K.Dot\\\"\"",
        "\"}\"",
        "\"Duckworth\"",
        "\"Kendrick\"",
        "\"Lamar\"",
        "\"Kendrick Lamar Duckworth\"",
        "\"stageName\"",
        "\"{\"",
        "\"    \\\"schemas\\\": \\\"urn:ietf:params:scim:schemas:core:2.0:User\\\",\"",
        "\"    \\\"userName\\\": \\\"kendrick.lamar\\\"\"",
        "\"}\"",
        "\"kendrick.lamar\"",
        "\"[\"",
        "\"]\"",
        "\"[\"",
        "\"]\"",
        "\"userName eq 'kendrick'\"",
        "\"userName eq 'kendrick'\"",
        "\"userName\"",
        "\"kendrick\"",
        "\"kendrick.lamar\"",
        "\"null\"",
        "\"null\""
    ],
    "variables": [],
    "comments": [
        "A SCIM resource with the attributes (except 'schema') sorted",
        "alphabetically.",
        "Reformat the string in a standardized form.",
        "By default, the 'userName' field appears before fields like 'email'.",
        "Verify that the serialized user resource does not list attributes in",
        "alphabetical order.",
        "Update the object mapper to sort the elements of a SCIM resource.",
        "Serialize the user resource again. This time, the object mapper should",
        "sort the fields alphabetically.",
        "The JSON representing the 'name' field for a UserResource. The",
        "'stageName' field is not established by the SCIM standard.",
        "The default configuration should not allow the unknown field.",
        "Update the mapper factory to ignore unknown fields.",
        "Attempt to deserialize the data to a Name object again. This time, it",
        "should not throw an exception, and the unknown field should be ignored.",
        "A SCIM resource with a 'schemas' field set to a string instead of an",
        "array.",
        "Reformat the string in a standardized form.",
        "Convert the user resource to a standardized JSON string and ensure the",
        "representation does not match 'expectedJSON'. By default, this member",
        "variable should be converted to an array.",
        "Update the object mapper to convert string values into single-valued",
        "arrays for array attributes.",
        "Convert the resource to a string again. This time, the converted string",
        "should be equivalent to the expected JSON.",
        "Ensure that single quotes are not permitted for filter values by default.",
        "Permit single quotes.",
        "The conversion should now be permitted.",
        "Define a class that inherits from the SCIM SDK's MapperFactory and",
        "overrides the object mapper configuration to explicitly print all null",
        "values.",
        "Validate the SCIM SDK's default behavior.",
        "Update the SCIM SDK's object mapper with the custom factory, which",
        "prints null values.",
        "Convert the resource to a string again and verify the change in behavior."
    ],
    "docstrings": [
        "* Copyright 2024 Ping Identity Corporation\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License (GPLv2 only)\n * or the terms of the GNU Lesser General Public License (LGPLv2.1 only)\n * as published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses>.",
        "* This class contains tests that validate customization of the\n * {@link MapperFactory} and its object mapper.",
        "* Reset the mapper factory configuration to the default settings.",
        "* Tests a custom {@link com.fasterxml.jackson.databind.MapperFeature} setting\n   * on a mapper factory.\n   *\n   * @throws Exception  If an unexpected error occurs.",
        "* Tests a custom deserialization setting on a mapper factory.\n   *\n   * @throws Exception  If an unexpected error occurs.",
        "* Tests a custom serialization setting on a mapper factory.\n   *\n   * @throws Exception  If an unexpected error occurs.",
        "* Validates the behavior of setting a custom JSON parser feature.\n   * <br><br>\n   *\n   * Note that the {@link com.unboundid.scim2.common.utils.Parser} class (used\n   * for processing string filters) leverages Jackson JSON Parsers, so this unit\n   * test validates that the behavior of the filter parser can be updated.\n   *\n   * @throws Exception  If an unexpected error occurs.",
        "* Tests support for overriding the {@link MapperFactory#createObjectMapper()}\n   * method.\n   * <br><br>\n   *\n   * In some cases, a client application may require more specific\n   * customizations, such as setting custom serializers/deserializers for\n   * better integration with a SCIM service provider that provides\n   * non-standardized SCIM responses. For those cases, we should ensure that\n   * it's possible for client applications to extend the MapperFactory class and\n   * implement their own object mapper settings."
    ],
    "functions": [
        "tearDown",
        "testCustomMapperFeatures",
        "testCustomDeserializationFeatures",
        "testCustomSerialization",
        "testCustomJSONParser",
        "testOverrideMapperFactoryClass",
        "ObjectMapper",
        "createObjectMapper"
    ],
    "classes": [
        "MapperFactoryTest",
        "CustomFactory"
    ]
}