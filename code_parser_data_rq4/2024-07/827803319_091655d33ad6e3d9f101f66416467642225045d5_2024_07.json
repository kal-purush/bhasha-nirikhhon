{
    "identifiers": [
        "bottleCounter",
        "BOTTLE_ORDER",
        "color",
        "isFilled",
        "isCapped",
        "color",
        "color",
        "color",
        "isEmpty",
        "color",
        "isBlank",
        "color",
        "color",
        "isFilled",
        "isCapped",
        "bottleCounter",
        "BOTTLE_ORDER",
        "bottleCounter",
        "BOTTLE_ORDER",
        "color",
        "bottleCounter",
        "isFilled",
        "isFilled",
        "isCapped",
        "isFilled",
        "isCapped",
        "Override",
        "o",
        "o",
        "getSerialNumber",
        "equals",
        "o",
        "getSerialNumber",
        "Override",
        "getSerialNumber",
        "isFilled",
        "isCapped"
    ],
    "literals": [
        "\"color cannot be empty\"",
        "\"SN\"",
        "\"Empty bottle cannot be capped\"",
        "\":\"",
        "\"Filled\"",
        "\"Empty\"",
        "\":\"",
        "\"Capped\"",
        "\"Open\""
    ],
    "variables": [
        "BOTTLE_ORDER",
        "color",
        "isFilled",
        "isCapped"
    ],
    "comments": [
        "DO NOT SUBMIT THIS FILE TO GRADESCOPE!",
        "shared counter for bottles in factory",
        "order of production/creation of this Bottle. The order of the",
        "first created bottle is 1.",
        "color of this Bottle",
        "bottle fill status",
        "bottle seal status",
        "add examples in the write-up!"
    ],
    "docstrings": [
        "* This class models Bottle objects produced, filled, and capped in a Bottle Factory Chain.\n *",
        "* Constructs an empty bottle, assigns a serial number using the bottle color and order\n   * \n   * @param color string defining the bottle's color\n   * @throws IllegalArgumentException when the color is invalid (null or empty or blank)",
        "* Returns the serialNumber of this bottle using its order of production and color<BR>\n   * Example: SN1Blue\n   * \n   * @return string formatted as follows<BR>\n   *         \"SN\" + BOTTLE_ORDER + color",
        "* Resets the bottle counter to zero. This method is used each time a new Bottle supply line is\n   * created.",
        "* Checks whether the bottle is filled\n   * \n   * @return true if this bottle is filled.",
        "* Sets the bottle status to filled",
        "* Checks whether this bottle is Capped\n   * \n   * @return true if this bottle is Capped",
        "* Caps the bottle, only if it is filled\n   * \n   * @throws IllegalStateException if the bottle is empty, it cannot be capped",
        "* Checks whether this Bottle equals another specific object\n   * \n   * @param o other object to compare to\n   * @return true if o is a Bottle and has the exact same serial number as this Bottle.",
        "* Returns a string representation of the bottle in the format\n   * \"(SerialNumber):Filled/Empty:Capped/Open\"\n   * \n   * @return a String representation of the Bottle"
    ],
    "functions": [
        "Bottle",
        "getSerialNumber",
        "resetBottleCounter",
        "isFilled",
        "fillBottle",
        "isCapped",
        "sealBottle",
        "equals",
        "toString"
    ],
    "classes": [
        "Bottle"
    ]
}