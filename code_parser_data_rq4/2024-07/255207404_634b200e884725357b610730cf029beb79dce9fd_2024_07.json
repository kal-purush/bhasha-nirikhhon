{
    "identifiers": [
        "org",
        "apache",
        "hadoop",
        "hbase",
        "master",
        "procedure",
        "java",
        "io",
        "java",
        "util",
        "Consumer",
        "org",
        "apache",
        "commons",
        "lang3",
        "mutable",
        "MutableBoolean",
        "org",
        "apache",
        "hadoop",
        "hbase",
        "TableName",
        "org",
        "apache",
        "hadoop",
        "hbase",
        "master",
        "assignment",
        "TransitRegionStateProcedure",
        "org",
        "apache",
        "hadoop",
        "hbase",
        "procedure2",
        "ProcedureSuspendedException",
        "org",
        "apache",
        "hadoop",
        "hbase",
        "procedure2",
        "ProcedureUtil",
        "org",
        "apache",
        "hadoop",
        "hbase",
        "procedure2",
        "ProcedureYieldException",
        "org",
        "apache",
        "hadoop",
        "hbase",
        "util",
        "RetryCounter",
        "org",
        "apache",
        "yetus",
        "audience",
        "InterfaceAudience",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "org",
        "apache",
        "hadoop",
        "hbase",
        "shaded",
        "protobuf",
        "generated",
        "ProcedureProtos",
        "InterfaceAudience",
        "Private",
        "LOG",
        "LoggerFactory",
        "getLogger",
        "tableName",
        "retryCounter",
        "tableName",
        "tableName",
        "tableName",
        "Override",
        "tableName",
        "Override",
        "TableOperationType",
        "REGION_EDIT",
        "env",
        "submitted",
        "inTransitionCount",
        "submitUnassignProcedure",
        "env",
        "p",
        "submitted",
        "setTrue",
        "addChildProcedure",
        "p",
        "inTransitionCount",
        "submitted",
        "isFalse",
        "retryCounter",
        "retryCounter",
        "ProcedureUtil",
        "createRetryCounter",
        "env",
        "getMasterConfiguration",
        "backoffMillis",
        "retryCounter",
        "getBackoffTimeAndIncrementAttempts",
        "LOG",
        "info",
        "inTransitionCount",
        "tableName",
        "getClass",
        "getSimpleName",
        "backoffMillis",
        "suspend",
        "backoffMillis",
        "setNextState",
        "getConfirmState",
        "Flow",
        "HAS_MORE_STATE",
        "env",
        "unclosedCount",
        "numberOfUnclosedRegions",
        "env",
        "unclosedCount",
        "LOG",
        "info",
        "unclosedCount",
        "tableName",
        "getClass",
        "getSimpleName",
        "setNextState",
        "getInitialState",
        "Flow",
        "HAS_MORE_STATE",
        "Flow",
        "NO_MORE_STATE",
        "Override",
        "env",
        "state",
        "LOG",
        "trace",
        "state",
        "state",
        "getInitialState",
        "schedule",
        "env",
        "state",
        "getConfirmState",
        "confirm",
        "env",
        "state",
        "Override",
        "env",
        "state",
        "Override",
        "env",
        "setState",
        "ProcedureProtos",
        "ProcedureState",
        "RUNNABLE",
        "env",
        "getProcedureScheduler",
        "addFront",
        "env",
        "submit",
        "env"
    ],
    "literals": [
        "\"There are still {} region(s) in transition for closing regions of table {}\"",
        "\" when executing {}, suspend {}secs and try again later\"",
        "\"There are still {} unclosed region(s) for closing regions of table {}\"",
        "\" when executing {}, continue...\"",
        "\"{} execute state={}\"",
        "\"unhandled state=\""
    ],
    "variables": [
        "tableName",
        "retryCounter"
    ],
    "comments": [
        "we haven't scheduled any unassign procedures and there are still regions in",
        "transition, sleep for a while and try again"
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Base class for unassigning table regions.",
        "* We have two state for this type of procedures, the initial state for scheduling unassign\n   * procedures, and the confirm state for checking whether we have unassigned all the regions.\n   * @return the confirm state",
        "* Submit TRSP for unassigning regions. Return the number of regions in RIT state that we can not\n   * schedule TRSP for them.",
        "* Return the number of uncloses regions. Returning {@code 0} means we are done."
    ],
    "functions": [
        "AbstractCloseTableRegionsProcedure",
        "AbstractCloseTableRegionsProcedure",
        "TableName",
        "getTableName",
        "TableOperationType",
        "getTableOperationType",
        "Flow",
        "schedule",
        "Flow",
        "confirm",
        "Flow",
        "executeFromState",
        "rollbackState",
        "setTimeoutFailure",
        "TState",
        "getConfirmState",
        "submitUnassignProcedure",
        "numberOfUnclosedRegions"
    ],
    "classes": [
        "AbstractCloseTableRegionsProcedure"
    ]
}