{
    "identifiers": [
        "annotations",
        "typing",
        "TYPE_CHECKING",
        "Literal",
        "overload",
        "semantic_text_splitter",
        "CodeSplitter",
        "MarkdownSplitter",
        "TextSplitter",
        "tree_sitter_language_pack",
        "SupportedLanguage",
        "get_binding",
        "typing_extensions",
        "TypeAlias",
        "TYPE_CHECKING",
        "collections",
        "abc",
        "Generator",
        "Literal",
        "Literal",
        "TypeAlias",
        "overload",
        "chunk_size",
        "chunking_type",
        "TextualChunkingType",
        "language",
        "model",
        "TextSplitter",
        "MarkdownSplitter",
        "overload",
        "chunk_size",
        "chunking_type",
        "CodeChunkingType",
        "language",
        "SupportedLanguage",
        "model",
        "CodeSplitter",
        "chunk_size",
        "chunking_type",
        "ChunkingType",
        "language",
        "SupportedLanguage",
        "model",
        "TextSplitter",
        "MarkdownSplitter",
        "CodeSplitter",
        "chunking_type",
        "language",
        "ValueError",
        "CodeSplitter",
        "from_tiktoken_model",
        "model",
        "model",
        "capacity",
        "chunk_size",
        "language",
        "get_binding",
        "language",
        "chunking_type",
        "MarkdownSplitter",
        "from_tiktoken_model",
        "model",
        "model",
        "capacity",
        "chunk_size",
        "TextSplitter",
        "from_tiktoken_model",
        "model",
        "model",
        "capacity",
        "chunk_size",
        "overload",
        "content",
        "chunk_size",
        "chunking_type",
        "TextualChunkingType",
        "model",
        "Generator",
        "overload",
        "content",
        "chunk_size",
        "chunking_type",
        "CodeChunkingType",
        "language",
        "SupportedLanguage",
        "model",
        "Generator",
        "content",
        "chunk_size",
        "chunking_type",
        "ChunkingType",
        "language",
        "SupportedLanguage",
        "model",
        "Generator",
        "get_chunker",
        "chunking_type",
        "chunking_type",
        "model",
        "model",
        "chunk_size",
        "chunk_size",
        "language",
        "language",
        "chunker",
        "chunks",
        "content"
    ],
    "literals": [
        "\"text\"",
        "\"markdown\"",
        "\"code\"",
        "\"TextualChunkingType | CodeChunkingType\"",
        "\"code\"",
        "\"Language is required for code chunking\"",
        "\"markdown\""
    ],
    "variables": [
        "TextualChunkingType",
        "CodeChunkingType",
        "ChunkingType",
        "chunker"
    ],
    "comments": [
        "type: ignore[arg-type]"
    ],
    "docstrings": [
        "\"\"\"Get the chunker for the given chunking type.\n\n    Args:\n        chunk_size: The maximal number of tokens per chunk.\n        chunking_type: The type of content to chunk.\n        language: The coding language to chunk - if the content is code.\n        model: The model name, e.g. gpt-3.5-turbo.\n\n    Raises:\n        ValueError: If the language is not provided for code chunking.\n\n    Returns:\n        The chunker for the given chunking type.\n    \"\"\"",
        "\"\"\"Chunk the given content into chunks of the given size.\n\n    Args:\n        content: The content to chunk.\n        chunk_size: The maximal number of tokens per chunk.\n        chunking_type: The type of content to chunk.\n        language: The coding language to chunk - if the content is code.\n        model: The model name, e.g. gpt-3.5-turbo.\n\n    Yields:\n        str: A chunk string\n    \"\"\""
    ],
    "functions": [
        "get_chunker",
        "get_chunker",
        "get_chunker",
        "chunk_content",
        "chunk_content",
        "chunk_content"
    ],
    "classes": []
}