{
    "identifiers": [
        "com",
        "hydata",
        "intelligence",
        "platform",
        "service",
        "com",
        "alibaba",
        "fastjson",
        "JSONArray",
        "com",
        "alibaba",
        "fastjson",
        "JSONObject",
        "com",
        "hydata",
        "intelligence",
        "platform",
        "model",
        "MQTT",
        "com",
        "hydata",
        "intelligence",
        "platform",
        "repositories",
        "org",
        "apache",
        "logging",
        "log4j",
        "LogManager",
        "org",
        "apache",
        "logging",
        "log4j",
        "Logger",
        "org",
        "eclipse",
        "paho",
        "client",
        "mqttv3",
        "MqttException",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "context",
        "annotation",
        "Bean",
        "org",
        "springframework",
        "integration",
        "annotation",
        "ServiceActivator",
        "org",
        "springframework",
        "integration",
        "channel",
        "DirectChannel",
        "org",
        "springframework",
        "integration",
        "mqtt",
        "inbound",
        "MqttPahoMessageDrivenChannelAdapter",
        "org",
        "springframework",
        "integration",
        "mqtt",
        "support",
        "DefaultPahoMessageConverter",
        "org",
        "springframework",
        "messaging",
        "Message",
        "org",
        "springframework",
        "messaging",
        "MessageChannel",
        "org",
        "springframework",
        "messaging",
        "MessageHandler",
        "org",
        "springframework",
        "messaging",
        "MessagingException",
        "com",
        "hydata",
        "intelligence",
        "platform",
        "service",
        "MqttReceiveConfig",
        "cachedThreadPool",
        "Autowired",
        "datastreamModelRepository",
        "Autowired",
        "productRepository",
        "Autowired",
        "triggerRepository",
        "Autowired",
        "deviceService",
        "Autowired",
        "triggerService",
        "Autowired",
        "deviceDatastreamRepository",
        "Autowired",
        "ddTriggerRepository",
        "Autowired",
        "triggerTypeRepository",
        "qos",
        "logger",
        "LogManager",
        "getLogger",
        "Bean",
        "topic",
        "adapter",
        "MQTT",
        "getClientId",
        "MqttReceiveConfig",
        "mqttClientFactory",
        "adapter",
        "setCompletionTimeout",
        "MQTT",
        "getCompletionTimeout",
        "adapter",
        "setConverter",
        "adapter",
        "setQos",
        "qos",
        "adapter",
        "setOutputChannel",
        "mqttDataChannel",
        "adapter",
        "addTopic",
        "topic",
        "topic",
        "adapter",
        "MQTT",
        "getClientId",
        "MqttReceiveConfig",
        "mqttClientFactory",
        "adapter",
        "setCompletionTimeout",
        "MQTT",
        "getCompletionTimeout",
        "adapter",
        "setConverter",
        "adapter",
        "setQos",
        "qos",
        "adapter",
        "setOutputChannel",
        "mqttDataChannel",
        "adapter",
        "removeTopic",
        "topic",
        "Bean",
        "ServiceActivator",
        "inputChannel",
        "Override",
        "message",
        "topic",
        "message",
        "getHeaders",
        "get",
        "toString",
        "content",
        "message",
        "getPayload",
        "toString",
        "cachedThreadPool",
        "execute",
        "Override",
        "data",
        "mqttDataAnalysis",
        "content",
        "deviceService",
        "dealWithData",
        "topic",
        "data",
        "triggerService",
        "TriggerAlarm",
        "topic",
        "data",
        "e",
        "e",
        "printStackTrace",
        "data",
        "result",
        "datas",
        "data",
        "split",
        "i",
        "i",
        "datas",
        "length",
        "i",
        "tmp",
        "datas",
        "i",
        "split",
        "dm_name",
        "tmp",
        "value",
        "parseInt",
        "tmp",
        "put",
        "dm_name",
        "put",
        "value",
        "result",
        "add",
        "result"
    ],
    "literals": [
        "\"_inbound\"",
        "\"_inbound\"",
        "\"mqttInputChannel\"",
        "\"deviceSn\"",
        "\";\"",
        "\",\"",
        "\"dm_name\"",
        "\"value\""
    ],
    "variables": [
        "datastreamModelRepository",
        "productRepository",
        "triggerRepository",
        "deviceService",
        "triggerService",
        "deviceDatastreamRepository",
        "ddTriggerRepository",
        "triggerTypeRepository"
    ],
    "comments": [
        "sendClient.subscribe(topic);",
        "sendClient.unsubscribe(topic);",
        "通过通道获取数据",
        "解析收到的实时数据流",
        "存储实时数据流到mongodb",
        "进行触发器判断",
        "JSONArray result = JSONArray.parseArray(data);"
    ],
    "docstrings": [
        "* @author: Jasmine\n * @createTime: 2018-12-27 14:49\n * @description: <MQTT接收消息处理，添加和删除订阅>\n * @modified:",
        "* haizhe\n     * 增加一个方法(供pyt调用）\n     * 添加topic，传入sn进来，将其加为topic\n     * @return",
        "* haizhe\n     * 增加一个方法，（供pyt调用）\n     * 删除topic，传入sn进来，将其topic去除，不再订阅\n     * TODO\n     * @return",
        "* MQTT数据解析\n     * 实时信息流格式String：name1, value1; name2, value2;...\n     * 返回格式JSONArray：[{\"dm_name\":\"name1\",\"value\":\"value1\"},{\"dm_name\":\"name2\",\"value\":\"value2\"},...]"
    ],
    "functions": [
        "MessageChannel",
        "mqttDataChannel",
        "mqttAddDevice",
        "mqttRemoveDevice",
        "MessageHandler",
        "handler",
        "handleMessage",
        "run",
        "JSONArray",
        "mqttDataAnalysis"
    ],
    "classes": [
        "MqttHandler"
    ]
}