{
    "identifiers": [
        "Collections",
        "Concurrent",
        "Collections",
        "Generic",
        "Linq",
        "Threading",
        "Threading",
        "Tasks",
        "Moq",
        "VirtoCommerce",
        "CoreModule",
        "Data",
        "Model",
        "VirtoCommerce",
        "CoreModule",
        "Data",
        "Repositories",
        "VirtoCommerce",
        "CoreModule",
        "Data",
        "Services",
        "VirtoCommerce",
        "Platform",
        "Core",
        "Common",
        "Xunit",
        "VirtoCommerce",
        "CoreModule",
        "Tests",
        "Trait",
        "SequenceUniqueNumberGeneratorServiceImpl",
        "SequenceReservationRange",
        "Fact",
        "GetMockedRepository",
        "SequenceUniqueNumberGeneratorServiceImpl",
        "repositoryMocked",
        "_reservationCount",
        "_sequenceCountInReservation",
        "i",
        "sequences",
        "Length",
        "i",
        "sequences",
        "i",
        "generator",
        "GenerateNumber",
        "_sequenceTemplate",
        "AssertSequences",
        "_reservationCount",
        "sequences",
        "Fact",
        "GetMockedRepository",
        "ConcurrentQueue",
        "_reservationCount",
        "CountdownEvent",
        "_reservationCount",
        "i",
        "_reservationCount",
        "i",
        "tasks",
        "i",
        "Run",
        "SequenceUniqueNumberGeneratorServiceImpl",
        "repositoryMocked",
        "_sequenceCountInReservation",
        "j",
        "oneSequenceArray",
        "Length",
        "j",
        "j",
        "countdownEvent",
        "Signal",
        "countdownEvent",
        "Wait",
        "sequences",
        "Enqueue",
        "generator",
        "GenerateNumber",
        "_sequenceTemplate",
        "WhenAll",
        "tasks",
        "sequences",
        "ToList",
        "AssertSequences",
        "_reservationCount",
        "flattenList",
        "reservationCount",
        "IList",
        "flattenList",
        "Assert",
        "Equal",
        "reservationCount",
        "_sequenceCountInReservation",
        "flattenList",
        "Count",
        "i",
        "flattenList",
        "Count",
        "i",
        "Assert",
        "TryParse",
        "flattenList",
        "i",
        "previous",
        "TryParse",
        "flattenList",
        "i",
        "current",
        "Assert",
        "Equal",
        "current",
        "previous",
        "Mock",
        "ICommerceRepository",
        "Sequence",
        "mockRepository",
        "Setup",
        "x",
        "Sequences",
        "Returns",
        "sequenceCollection",
        "AsQueryable",
        "mockRepository",
        "Setup",
        "x",
        "Add",
        "It",
        "IsAny",
        "Sequence",
        "Callback",
        "Sequence",
        "s",
        "sequenceCollection",
        "Add",
        "s",
        "Mock",
        "IUnitOfWork",
        "mockRepository",
        "Setup",
        "x",
        "UnitOfWork",
        "Returns",
        "mockUnitOfWork",
        "mockRepository"
    ],
    "literals": [
        "\"Category\"",
        "\"CI\"",
        "\"{1}\""
    ],
    "variables": [
        "_reservationCount",
        "_sequenceCountInReservation",
        "_sequenceTemplate",
        "repositoryMocked",
        "generator",
        "sequences",
        "i",
        "repositoryMocked",
        "sequences",
        "tasks",
        "countdownEvent",
        "i",
        "generator",
        "oneSequenceArray",
        "j",
        "flattenList",
        "previous",
        "current",
        "i",
        "mockRepository",
        "sequenceCollection",
        "mockUnitOfWork"
    ],
    "comments": [
        "All threads start pregeneration simultaneously to create real concurrency.",
        "Check if collection consists of sequential integers."
    ],
    "docstrings": [],
    "functions": [
        "SequenceTests",
        "TestOrdersAreSequentialSingleThread",
        "TestOrdersAreSequentialMultipleThreads",
        "AssertSequences",
        "ICommerceRepository",
        "GetMockedRepository"
    ],
    "classes": [
        "SequenceTests"
    ]
}