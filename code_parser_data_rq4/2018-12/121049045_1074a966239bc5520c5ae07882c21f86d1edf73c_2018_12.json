{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Security",
        "Claims",
        "Security",
        "Principal",
        "Threading",
        "Tasks",
        "IdentityModel",
        "IdentityServer4",
        "Events",
        "IdentityServer4",
        "Services",
        "IdentityServer4",
        "Stores",
        "Microsoft",
        "AspNetCore",
        "Authentication",
        "Microsoft",
        "AspNetCore",
        "Authorization",
        "Microsoft",
        "AspNetCore",
        "Http",
        "Microsoft",
        "AspNetCore",
        "Identity",
        "Microsoft",
        "AspNetCore",
        "Mvc",
        "Skoruba",
        "IdentityServer4",
        "Admin",
        "EntityFramework",
        "Identity",
        "Entities",
        "Identity",
        "Skoruba",
        "IdentityServer4",
        "STS",
        "Identity",
        "Quickstart",
        "Account",
        "SecurityHeaders",
        "AllowAnonymous",
        "Controller",
        "UserManager",
        "UserIdentity",
        "SignInManager",
        "UserIdentity",
        "UserManager",
        "UserIdentity",
        "userManager",
        "SignInManager",
        "UserIdentity",
        "signInManager",
        "IIdentityServerInteractionService",
        "interaction",
        "IClientStore",
        "clientStore",
        "IEventService",
        "events",
        "_userManager",
        "userManager",
        "_signInManager",
        "signInManager",
        "_interaction",
        "interaction",
        "_clientStore",
        "clientStore",
        "_events",
        "events",
        "HttpGet",
        "IActionResult",
        "provider",
        "returnUrl",
        "IsNullOrEmpty",
        "returnUrl",
        "returnUrl",
        "Url",
        "IsLocalUrl",
        "returnUrl",
        "_interaction",
        "IsValidReturnUrl",
        "returnUrl",
        "AccountOptions",
        "WindowsAuthenticationSchemeName",
        "provider",
        "ProcessWindowsLoginAsync",
        "returnUrl",
        "AuthenticationProperties",
        "RedirectUri",
        "Url",
        "Action",
        "nameof",
        "Callback",
        "Items",
        "returnUrl",
        "provider",
        "Challenge",
        "props",
        "provider",
        "HttpGet",
        "IActionResult",
        "HttpContext",
        "AuthenticateAsync",
        "IdentityConstants",
        "ExternalScheme",
        "result",
        "Succeeded",
        "user",
        "provider",
        "providerUserId",
        "claims",
        "FindUserFromExternalProviderAsync",
        "result",
        "user",
        "user",
        "AutoProvisionUserAsync",
        "provider",
        "providerUserId",
        "claims",
        "Claim",
        "AuthenticationProperties",
        "ProcessLoginCallbackForOidc",
        "result",
        "additionalLocalClaims",
        "localSignInProps",
        "ProcessLoginCallbackForWsFed",
        "result",
        "additionalLocalClaims",
        "localSignInProps",
        "ProcessLoginCallbackForSaml2p",
        "result",
        "additionalLocalClaims",
        "localSignInProps",
        "_signInManager",
        "CreateUserPrincipalAsync",
        "user",
        "additionalLocalClaims",
        "AddRange",
        "principal",
        "Claims",
        "principal",
        "FindFirst",
        "JwtClaimTypes",
        "Name",
        "Value",
        "user",
        "Id",
        "ToString",
        "_events",
        "RaiseAsync",
        "UserLoginSuccessEvent",
        "provider",
        "providerUserId",
        "user",
        "Id",
        "ToString",
        "name",
        "HttpContext",
        "SignInAsync",
        "user",
        "Id",
        "ToString",
        "name",
        "provider",
        "localSignInProps",
        "additionalLocalClaims",
        "ToArray",
        "HttpContext",
        "SignOutAsync",
        "IdentityConstants",
        "ExternalScheme",
        "result",
        "Properties",
        "Items",
        "_interaction",
        "IsValidReturnUrl",
        "returnUrl",
        "Url",
        "IsLocalUrl",
        "returnUrl",
        "Redirect",
        "returnUrl",
        "Redirect",
        "IActionResult",
        "returnUrl",
        "HttpContext",
        "AuthenticateAsync",
        "AccountOptions",
        "WindowsAuthenticationSchemeName",
        "result",
        "Principal",
        "WindowsPrincipal",
        "wp",
        "AuthenticationProperties",
        "RedirectUri",
        "Url",
        "Action",
        "Items",
        "returnUrl",
        "AccountOptions",
        "WindowsAuthenticationSchemeName",
        "ClaimsIdentity",
        "AccountOptions",
        "WindowsAuthenticationSchemeName",
        "id",
        "AddClaim",
        "Claim",
        "JwtClaimTypes",
        "Subject",
        "wp",
        "Identity",
        "Name",
        "id",
        "AddClaim",
        "Claim",
        "JwtClaimTypes",
        "Name",
        "wp",
        "Identity",
        "Name",
        "AccountOptions",
        "IncludeWindowsGroups",
        "wp",
        "Identity",
        "WindowsIdentity",
        "wi",
        "Groups",
        "Translate",
        "NTAccount",
        "groups",
        "Select",
        "Claim",
        "JwtClaimTypes",
        "Role",
        "x",
        "Value",
        "id",
        "AddClaims",
        "roles",
        "HttpContext",
        "SignInAsync",
        "IdentityServer4",
        "IdentityServerConstants",
        "ExternalCookieAuthenticationScheme",
        "ClaimsPrincipal",
        "id",
        "props",
        "Redirect",
        "props",
        "RedirectUri",
        "Challenge",
        "AccountOptions",
        "WindowsAuthenticationSchemeName",
        "UserIdentity",
        "user",
        "provider",
        "providerUserId",
        "Claim",
        "claims",
        "AuthenticateResult",
        "result",
        "result",
        "Principal",
        "externalUser",
        "FindFirst",
        "JwtClaimTypes",
        "Subject",
        "externalUser",
        "FindFirst",
        "ClaimTypes",
        "NameIdentifier",
        "externalUser",
        "Claims",
        "ToList",
        "claims",
        "Remove",
        "userIdClaim",
        "result",
        "Properties",
        "Items",
        "userIdClaim",
        "Value",
        "_userManager",
        "FindByLoginAsync",
        "provider",
        "providerUserId",
        "user",
        "provider",
        "providerUserId",
        "claims",
        "UserIdentity",
        "provider",
        "providerUserId",
        "Claim",
        "claims",
        "Claim",
        "claims",
        "FirstOrDefault",
        "x",
        "Type",
        "JwtClaimTypes",
        "Name",
        "Value",
        "claims",
        "FirstOrDefault",
        "x",
        "Type",
        "ClaimTypes",
        "Name",
        "Value",
        "name",
        "filtered",
        "Add",
        "Claim",
        "JwtClaimTypes",
        "Name",
        "name",
        "claims",
        "FirstOrDefault",
        "x",
        "Type",
        "JwtClaimTypes",
        "GivenName",
        "Value",
        "claims",
        "FirstOrDefault",
        "x",
        "Type",
        "ClaimTypes",
        "GivenName",
        "Value",
        "claims",
        "FirstOrDefault",
        "x",
        "Type",
        "JwtClaimTypes",
        "FamilyName",
        "Value",
        "claims",
        "FirstOrDefault",
        "x",
        "Type",
        "ClaimTypes",
        "Surname",
        "Value",
        "first",
        "last",
        "filtered",
        "Add",
        "Claim",
        "JwtClaimTypes",
        "Name",
        "first",
        "last",
        "first",
        "filtered",
        "Add",
        "Claim",
        "JwtClaimTypes",
        "Name",
        "first",
        "last",
        "filtered",
        "Add",
        "Claim",
        "JwtClaimTypes",
        "Name",
        "last",
        "claims",
        "FirstOrDefault",
        "x",
        "Type",
        "JwtClaimTypes",
        "Email",
        "Value",
        "claims",
        "FirstOrDefault",
        "x",
        "Type",
        "ClaimTypes",
        "Email",
        "Value",
        "email",
        "filtered",
        "Add",
        "Claim",
        "JwtClaimTypes",
        "Email",
        "email",
        "UserIdentity",
        "UserName",
        "Guid",
        "NewGuid",
        "ToString",
        "_userManager",
        "CreateAsync",
        "user",
        "identityResult",
        "Succeeded",
        "identityResult",
        "Errors",
        "First",
        "Description",
        "filtered",
        "Any",
        "identityResult",
        "_userManager",
        "AddClaimsAsync",
        "user",
        "filtered",
        "identityResult",
        "Succeeded",
        "identityResult",
        "Errors",
        "First",
        "Description",
        "identityResult",
        "_userManager",
        "AddLoginAsync",
        "user",
        "UserLoginInfo",
        "provider",
        "providerUserId",
        "provider",
        "identityResult",
        "Succeeded",
        "identityResult",
        "Errors",
        "First",
        "Description",
        "user",
        "AuthenticateResult",
        "externalResult",
        "Claim",
        "localClaims",
        "AuthenticationProperties",
        "localSignInProps",
        "externalResult",
        "Principal",
        "Claims",
        "FirstOrDefault",
        "x",
        "Type",
        "JwtClaimTypes",
        "SessionId",
        "sid",
        "localClaims",
        "Add",
        "Claim",
        "JwtClaimTypes",
        "SessionId",
        "sid",
        "Value",
        "externalResult",
        "Properties",
        "GetTokenValue",
        "id_token",
        "localSignInProps",
        "StoreTokens",
        "AuthenticationToken",
        "Name",
        "Value",
        "id_token",
        "AuthenticateResult",
        "externalResult",
        "Claim",
        "localClaims",
        "AuthenticationProperties",
        "localSignInProps",
        "AuthenticateResult",
        "externalResult",
        "Claim",
        "localClaims",
        "AuthenticationProperties",
        "localSignInProps"
    ],
    "literals": [
        "\"~/\"",
        "\"invalid return URL\"",
        "\"returnUrl\"",
        "\"scheme\"",
        "\"External authentication error\"",
        "\"returnUrl\"",
        "\"~/\"",
        "\"Callback\"",
        "\"returnUrl\"",
        "\"scheme\"",
        "\"Unknown userid\"",
        "\"scheme\"",
        "\" \"",
        "\"id_token\"",
        "\"id_token\""
    ],
    "variables": [
        "_userManager",
        "_signInManager",
        "IIdentityServerInteractionService",
        "_interaction",
        "IClientStore",
        "_clientStore",
        "IEventService",
        "_events",
        "props",
        "result",
        "additionalLocalClaims",
        "localSignInProps",
        "principal",
        "name",
        "returnUrl",
        "result",
        "props",
        "id",
        "wi",
        "groups",
        "roles",
        "externalUser",
        "userIdClaim",
        "claims",
        "provider",
        "providerUserId",
        "user",
        "filtered",
        "name",
        "first",
        "last",
        "email",
        "user",
        "identityResult",
        "sid",
        "id_token"
    ],
    "comments": [
        "initiate roundtrip to external authentication provider",
        "</summary>",
        "validate returnUrl - either it is a valid OIDC URL or back to a local page",
        "user might have clicked on a malicious link - should be logged",
        "windows authentication needs special handling",
        "start challenge and roundtrip the return URL and scheme",
        "Post processing of external authentication",
        "</summary>",
        "read external identity from the temporary cookie",
        "lookup our user and external provider info",
        "this might be where you might initiate a custom workflow for user registration",
        "in this sample we don't show how that would be done, as our sample implementation",
        "simply auto-provisions new external user",
        "this allows us to collect any additonal claims or properties",
        "for the specific prtotocols used and store them in the local auth cookie.",
        "this is typically used to store data needed for signout from those protocols.",
        "issue authentication cookie for user",
        "we must issue the cookie maually, and can't use the SignInManager because",
        "it doesn't expose an API to issue additional claims from the login workflow",
        "delete temporary cookie used during external authentication",
        "validate return URL and redirect back to authorization endpoint or a local page",
        "see if windows auth has already been requested and succeeded",
        "we will issue the external cookie and then redirect the",
        "user back to the external callback, in essence, treating windows",
        "auth the same as any other external authentication mechanism",
        "add the groups as claims -- be careful if the number of groups is too large",
        "trigger windows auth",
        "since windows auth don't support the redirect uri,",
        "this URL is re-triggered when we call challenge",
        "try to determine the unique id of the external user (issued by the provider)",
        "the most common claim type for that are the sub claim and the NameIdentifier",
        "depending on the external provider, some other claim type might be used",
        "remove the user id claim so we don't include it as an extra claim if/when we provision the user",
        "find external user",
        "create a list of claims that we want to transfer into our store",
        "user's display name",
        "email",
        "if the external system sent a session id claim, copy it over",
        "so we can use it for single sign-out",
        "if the external provider issued an id_token, we'll keep it for signout"
    ],
    "docstrings": [
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "ExternalController",
        "Challenge",
        "Callback",
        "ProcessWindowsLoginAsync",
        "FindUserFromExternalProviderAsync",
        "AutoProvisionUserAsync",
        "ProcessLoginCallbackForOidc",
        "ProcessLoginCallbackForWsFed",
        "ProcessLoginCallbackForSaml2p"
    ],
    "classes": [
        "ExternalController"
    ]
}