{
    "identifiers": [
        "Checkbook",
        "Api",
        "Tests",
        "Controllers",
        "Collections",
        "Generic",
        "Checkbook",
        "Api",
        "Controllers",
        "Checkbook",
        "Api",
        "Models",
        "Checkbook",
        "Api",
        "Repositories",
        "Microsoft",
        "AspNetCore",
        "Mvc",
        "Microsoft",
        "VisualStudio",
        "TestTools",
        "UnitTesting",
        "Moq",
        "Mock",
        "IAccountsRepository",
        "TestInitialize",
        "mockAccountsRepository",
        "Mock",
        "IAccountsRepository",
        "TestClass",
        "AccountsControllerTests",
        "Account",
        "TestInitialize",
        "Initialize",
        "userId",
        "stubAccounts",
        "Account",
        "mockAccountsRepository",
        "Setup",
        "m",
        "GetBankAccounts",
        "It",
        "IsAny",
        "Returns",
        "stubAccounts",
        "TestMethod",
        "AccountsController",
        "mockAccountsRepository",
        "controller",
        "GetBankAccounts",
        "result",
        "OkObjectResult",
        "mockAccountsRepository",
        "Verify",
        "m",
        "GetBankAccounts",
        "userId",
        "Times",
        "Once",
        "mockAccountsRepository",
        "VerifyNoOtherCalls",
        "Assert",
        "IsNotNull",
        "okResult",
        "Assert",
        "AreEqual",
        "okResult",
        "StatusCode",
        "Assert",
        "AreEqual",
        "stubAccounts",
        "okResult",
        "Value",
        "TestMethod",
        "stubAccounts",
        "mockAccountsRepository",
        "Setup",
        "m",
        "GetBankAccounts",
        "It",
        "IsAny",
        "Returns",
        "stubAccounts",
        "AccountsController",
        "mockAccountsRepository",
        "controller",
        "GetBankAccounts",
        "result",
        "OkObjectResult",
        "mockAccountsRepository",
        "Verify",
        "m",
        "GetBankAccounts",
        "userId",
        "Times",
        "Once",
        "mockAccountsRepository",
        "VerifyNoOtherCalls",
        "Assert",
        "IsNotNull",
        "okResult",
        "Assert",
        "AreEqual",
        "okResult",
        "StatusCode",
        "Assert",
        "AreEqual",
        "okResult",
        "Value",
        "Account",
        "Count",
        "TestMethod",
        "mockAccountsRepository",
        "Setup",
        "m",
        "GetBankAccounts",
        "It",
        "IsAny",
        "Throws",
        "AccountsController",
        "mockAccountsRepository",
        "controller",
        "GetBankAccounts",
        "result",
        "ObjectResult",
        "Assert",
        "IsNotNull",
        "objectResult",
        "Assert",
        "AreEqual",
        "objectResult",
        "StatusCode",
        "Assert",
        "AreEqual",
        "expectedMessage",
        "objectResult",
        "Value",
        "TestClass",
        "AccountsControllerTests",
        "Account",
        "TestInitialize",
        "Initialize",
        "stubAccounts",
        "Account",
        "mockAccountsRepository",
        "Setup",
        "m",
        "GetMerchantAccounts",
        "Returns",
        "stubAccounts",
        "TestMethod",
        "AccountsController",
        "mockAccountsRepository",
        "controller",
        "GetMerchantAccounts",
        "result",
        "OkObjectResult",
        "mockAccountsRepository",
        "Verify",
        "m",
        "GetMerchantAccounts",
        "Times",
        "Once",
        "mockAccountsRepository",
        "VerifyNoOtherCalls",
        "Assert",
        "IsNotNull",
        "okResult",
        "Assert",
        "AreEqual",
        "okResult",
        "StatusCode",
        "Assert",
        "AreEqual",
        "stubAccounts",
        "okResult",
        "Value",
        "TestMethod",
        "stubAccounts",
        "mockAccountsRepository",
        "Setup",
        "m",
        "GetMerchantAccounts",
        "Returns",
        "stubAccounts",
        "AccountsController",
        "mockAccountsRepository",
        "controller",
        "GetMerchantAccounts",
        "result",
        "OkObjectResult",
        "mockAccountsRepository",
        "Verify",
        "m",
        "GetMerchantAccounts",
        "Times",
        "Once",
        "mockAccountsRepository",
        "VerifyNoOtherCalls",
        "Assert",
        "IsNotNull",
        "okResult",
        "Assert",
        "AreEqual",
        "okResult",
        "StatusCode",
        "Assert",
        "AreEqual",
        "okResult",
        "Value",
        "Account",
        "Count",
        "TestMethod",
        "mockAccountsRepository",
        "Setup",
        "m",
        "GetMerchantAccounts",
        "Throws",
        "AccountsController",
        "mockAccountsRepository",
        "controller",
        "GetMerchantAccounts",
        "result",
        "ObjectResult",
        "Assert",
        "IsNotNull",
        "objectResult",
        "Assert",
        "AreEqual",
        "objectResult",
        "StatusCode",
        "Assert",
        "AreEqual",
        "expectedMessage",
        "objectResult",
        "Value",
        "TestClass",
        "AccountsControllerTests",
        "TestInitialize",
        "Initialize",
        "userId",
        "id",
        "stubAccount",
        "Account",
        "mockAccountsRepository",
        "Setup",
        "m",
        "Get",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "Returns",
        "stubAccount",
        "TestMethod",
        "AccountsController",
        "mockAccountsRepository",
        "controller",
        "Get",
        "id",
        "result",
        "OkObjectResult",
        "mockAccountsRepository",
        "Verify",
        "m",
        "Get",
        "id",
        "userId",
        "Times",
        "Once",
        "mockAccountsRepository",
        "VerifyNoOtherCalls",
        "Assert",
        "IsNotNull",
        "okResult",
        "Assert",
        "AreEqual",
        "okResult",
        "StatusCode",
        "Assert",
        "AreEqual",
        "stubAccount",
        "okResult",
        "Value",
        "TestMethod",
        "stubAccount",
        "mockAccountsRepository",
        "Setup",
        "m",
        "Get",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "Returns",
        "stubAccount",
        "AccountsController",
        "mockAccountsRepository",
        "controller",
        "Get",
        "id",
        "result",
        "NotFoundResult",
        "mockAccountsRepository",
        "Verify",
        "m",
        "Get",
        "id",
        "userId",
        "Times",
        "Once",
        "mockAccountsRepository",
        "VerifyNoOtherCalls",
        "Assert",
        "IsNotNull",
        "notFoundResult",
        "Assert",
        "AreEqual",
        "notFoundResult",
        "StatusCode",
        "TestMethod",
        "mockAccountsRepository",
        "Setup",
        "m",
        "Get",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "Returns",
        "Account",
        "AccountsController",
        "mockAccountsRepository",
        "controller",
        "Get",
        "id",
        "result",
        "NotFoundResult",
        "Assert",
        "IsNotNull",
        "notFoundResult",
        "Assert",
        "AreEqual",
        "notFoundResult",
        "StatusCode",
        "TestMethod",
        "mockAccountsRepository",
        "Setup",
        "m",
        "Get",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "Throws",
        "AccountsController",
        "mockAccountsRepository",
        "controller",
        "Get",
        "id",
        "result",
        "ObjectResult",
        "Assert",
        "IsNotNull",
        "objectResult",
        "Assert",
        "AreEqual",
        "objectResult",
        "StatusCode",
        "Assert",
        "AreEqual",
        "expectedMessage",
        "objectResult",
        "Value"
    ],
    "literals": [
        "\"The accounts should have been requested from the repository.\"",
        "\"An OK response should have been returned.\"",
        "\"The status code from the response should have been 200.\"",
        "\"The result from the repository should have been returned.\"",
        "\"The accounts should have been requested from the repository.\"",
        "\"An OK response should have been returned.\"",
        "\"The status code from the response should have been 200.\"",
        "\"An empty list should be the result.\"",
        "\"An object result should have been returned.\"",
        "\"The status code from the response should have been 500.\"",
        "\"There was an error getting the bank accounts.\"",
        "\"The error message should have been the result.\"",
        "\"The accounts should have been requested from the repository.\"",
        "\"An OK response should have been returned.\"",
        "\"The status code from the response should have been 200.\"",
        "\"The result from the repository should have been returned.\"",
        "\"The accounts should have been requested from the repository.\"",
        "\"An OK response should have been returned.\"",
        "\"The status code from the response should have been 200.\"",
        "\"An empty list should be the result.\"",
        "\"An object result should have been returned.\"",
        "\"The status code from the response should have been 500.\"",
        "\"There was an error getting the merchant accounts.\"",
        "\"The error message should have been the result.\"",
        "\"The accounts should have been requested from the repository.\"",
        "\"An OK response should have been returned.\"",
        "\"The status code from the response should have been 200.\"",
        "\"The result from the repository should have been returned.\"",
        "\"The account should have been requested from the repository.\"",
        "\"A Not Found response should have been returned.\"",
        "\"The status code from the response should have been 404.\"",
        "\"An object result should have been returned.\"",
        "\"The status code from the response should have been 404.\"",
        "\"An object result should have been returned.\"",
        "\"The status code from the response should have been 500.\"",
        "\"There was an error getting the account.\"",
        "\"The error message should have been the result.\""
    ],
    "variables": [
        "mockAccountsRepository",
        "userId",
        "stubAccounts",
        "AccountsController",
        "controller",
        "IActionResult",
        "result",
        "OkObjectResult",
        "okResult",
        "AccountsController",
        "controller",
        "IActionResult",
        "result",
        "OkObjectResult",
        "okResult",
        "AccountsController",
        "controller",
        "IActionResult",
        "result",
        "ObjectResult",
        "objectResult",
        "expectedMessage",
        "stubAccounts",
        "AccountsController",
        "controller",
        "IActionResult",
        "result",
        "OkObjectResult",
        "okResult",
        "AccountsController",
        "controller",
        "IActionResult",
        "result",
        "OkObjectResult",
        "okResult",
        "AccountsController",
        "controller",
        "IActionResult",
        "result",
        "ObjectResult",
        "objectResult",
        "expectedMessage",
        "userId",
        "id",
        "Account",
        "stubAccount",
        "AccountsController",
        "controller",
        "IActionResult",
        "result",
        "OkObjectResult",
        "okResult",
        "AccountsController",
        "controller",
        "IActionResult",
        "result",
        "NotFoundResult",
        "notFoundResult",
        "AccountsController",
        "controller",
        "IActionResult",
        "result",
        "NotFoundResult",
        "notFoundResult",
        "AccountsController",
        "controller",
        "IActionResult",
        "result",
        "ObjectResult",
        "objectResult",
        "expectedMessage"
    ],
    "comments": [
        "Copyright (c) Palouse Coding Conglomerate. All Rights Reserved.",
        "Tests for the <see cref=\"AccountsController\"/> class.",
        "</summary>",
        "The mock implementation of the accounts repository.",
        "</summary>",
        "Initializes the tests for the class.",
        "</summary>",
        "Initialize the mock object(s).",
        "Tests for the parameterless GetBankAccounts() method.",
        "</summary>",
        "The user ID.",
        "</summary>",
        "The stub repository response.",
        "</summary>",
        "Initializes the tests for the method.",
        "</summary>",
        "Initialize the mock repository method.",
        "Verifies the result from the repository is retrieved correctly.",
        "</summary>",
        "Act.",
        "Assert.",
        "Verifies an empty list is returned when the repository returns null.",
        "</summary>",
        "Arrange.",
        "Act.",
        "Assert.",
        "Verifies that general exceptions are handled correctly.",
        "</summary>",
        "Arrange.",
        "Act.",
        "Assert.",
        "Tests for the parameterless GetMerchantAccounts() method.",
        "</summary>",
        "The stub repository response.",
        "</summary>",
        "Initializes the tests for the method.",
        "</summary>",
        "Initialize the mock repository method.",
        "Verifies the result from the repository is retrieved correctly.",
        "</summary>",
        "Act.",
        "Assert.",
        "Verifies an empty list is returned when the repository returns null.",
        "</summary>",
        "Arrange.",
        "Act.",
        "Assert.",
        "Verifies that general exceptions are handled correctly.",
        "</summary>",
        "Arrange.",
        "Act.",
        "Assert.",
        "Tests for the Get() method that takes in an ID value.",
        "</summary>",
        "The user ID.",
        "</summary>",
        "The ID used as an input.",
        "</summary>",
        "The stub repository response.",
        "</summary>",
        "Initializes the tests for the method.",
        "</summary>",
        "Initialize the input(s).",
        "Initialize the mock repository method.",
        "Verifies the result from the repository is retrieved correctly.",
        "</summary>",
        "Act.",
        "Assert.",
        "Verifies an empty list is returned when the repository returns null.",
        "</summary>",
        "Arrange.",
        "Act.",
        "Assert.",
        "Verifies the correct result is returned when the entity is not found.",
        "</summary>",
        "Arrange.",
        "Act.",
        "Assert.",
        "Verifies that general exceptions are handled correctly.",
        "</summary>",
        "Arrange.",
        "Act.",
        "Assert."
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Initialize",
        "Initialize",
        "ReturnsRepositoryResult",
        "ReturnsAnEmptyListWhenRepositoryReturnsNull",
        "HandlesGeneralException",
        "Initialize",
        "ReturnsRepositoryResult",
        "ReturnsAnEmptyListWhenRepositoryReturnsNull",
        "HandlesGeneralException",
        "Initialize",
        "ReturnsRepositoryResult",
        "ReturnsNotFoundWhenRepositoryReturnsNull",
        "HandlesNotFound",
        "HandlesGeneralException"
    ],
    "classes": [
        "AccountsControllerTests",
        "GetBankAccountsMethod",
        "GetMerchantAccountsMethod",
        "GetMethod_Id"
    ]
}