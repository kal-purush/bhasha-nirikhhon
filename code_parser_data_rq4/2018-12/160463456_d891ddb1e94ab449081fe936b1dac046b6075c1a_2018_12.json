{
    "identifiers": [
        "os",
        "sys",
        "urllib",
        "request",
        "luigi",
        "bs4",
        "BeautifulSoup",
        "selenium",
        "webdriver",
        "luigi",
        "luigi",
        "Parameter",
        "os",
        "path",
        "exists",
        "os",
        "mkdir",
        "sale_url",
        "strip",
        "split",
        "sale_url_split",
        "luigi",
        "LocalTarget",
        "format",
        "sale_name",
        "webdriver",
        "Chrome",
        "driver",
        "get",
        "sale_url",
        "driver",
        "find_element_by_class_name",
        "load_all_link",
        "click",
        "BeautifulSoup",
        "driver",
        "page_source",
        "soup_lot",
        "find",
        "id",
        "open",
        "out_fp",
        "out_file",
        "li",
        "lots_container",
        "children",
        "li",
        "li",
        "find",
        "li",
        "find",
        "info_container",
        "p",
        "text",
        "strip",
        "split",
        "out_file",
        "write",
        "format",
        "lot_no",
        "lot_href",
        "luigi",
        "luigi",
        "Parameter",
        "lot_urls",
        "strip",
        "split",
        "sale_url_split",
        "split",
        "luigi",
        "LocalTarget",
        "format",
        "sale_name",
        "PullLotURLsFromSale",
        "sale_url",
        "os",
        "path",
        "exists",
        "os",
        "mkdir",
        "os",
        "path",
        "exists",
        "format",
        "sale_name",
        "os",
        "mkdir",
        "format",
        "sale_name",
        "open",
        "format",
        "sale_name",
        "f",
        "line",
        "f",
        "line",
        "strip",
        "split",
        "request",
        "urlopen",
        "lot_url",
        "response",
        "read",
        "BeautifulSoup",
        "lot_html",
        "open",
        "format",
        "sale_name",
        "line_split",
        "html_file",
        "html_file",
        "write",
        "soup",
        "find",
        "id",
        "prettify",
        "open",
        "output",
        "flag_file",
        "flag_file",
        "write",
        "luigi",
        "luigi",
        "Parameter",
        "luigi",
        "LocalTarget",
        "format",
        "sale_name",
        "CacheLotHTMLFromUrl",
        "sale_name",
        "sale_name",
        "sales",
        "luigi",
        "run"
    ],
    "literals": [
        "'data/'",
        "'data/'",
        "'/'",
        "\"data/{}_lot_urls.csv\"",
        "'load-all'",
        "'ResultContainer'",
        "'w'",
        "'\\n'",
        "'a'",
        "'class'",
        "'cta-image'",
        "'href'",
        "'span'",
        "'class'",
        "'infoContainer'",
        "\"{0}, {1}\\n\"",
        "'/'",
        "'.'",
        "\"data/html/flag_{}\"",
        "'data/html/'",
        "'data/html'",
        "\"data/html/{}/\"",
        "\"data/html/{}/\"",
        "\"data/{}_lot_urls.csv\"",
        "'r'",
        "','",
        "\"data/html/{0}/lot_{1}.html\"",
        "'w'",
        "\"MainContent\"",
        "'w'",
        "' '",
        "\"data/{}_lot_info.csv\"",
        "\"__main__\""
    ],
    "variables": [
        "sale_url",
        "sales_url_split",
        "sale_name",
        "driver",
        "load_all_link",
        "soup_lot",
        "lots_container",
        "lot_href",
        "info_container",
        "lot_no",
        "sale_url",
        "sales_url_split",
        "sale_name",
        "line_split",
        "response",
        "lot_html",
        "soup",
        "lot_no"
    ],
    "comments": [
        "Get sale names from lot_urls, return Cache task as requirement"
    ],
    "docstrings": [
        "''' Pull the HTML doc from a url to lot information and cache it\n    '''"
    ],
    "functions": [
        "requires",
        "output",
        "run",
        "output",
        "requires",
        "run",
        "output",
        "requires",
        "run"
    ],
    "classes": [
        "PullLotURLsFromSale",
        "CacheLotHTMLFromUrl",
        "PullLotDataFromHtml"
    ]
}