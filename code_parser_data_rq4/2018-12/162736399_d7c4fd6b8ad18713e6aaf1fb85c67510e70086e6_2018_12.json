{
    "identifiers": [
        "org",
        "firstinspires",
        "ftc",
        "teamcode",
        "onbot",
        "android",
        "app",
        "Activity",
        "android",
        "graphics",
        "Color",
        "android",
        "view",
        "View",
        "com",
        "qualcomm",
        "robotcore",
        "eventloop",
        "opmode",
        "Disabled",
        "com",
        "qualcomm",
        "robotcore",
        "eventloop",
        "opmode",
        "LinearOpMode",
        "com",
        "qualcomm",
        "robotcore",
        "eventloop",
        "opmode",
        "TeleOp",
        "com",
        "qualcomm",
        "robotcore",
        "hardware",
        "ColorSensor",
        "com",
        "qualcomm",
        "robotcore",
        "hardware",
        "DistanceSensor",
        "org",
        "firstinspires",
        "ftc",
        "robotcore",
        "external",
        "navigation",
        "DistanceUnit",
        "java",
        "util",
        "Locale",
        "TeleOp",
        "name",
        "group",
        "Disabled",
        "sensorColor",
        "sensorDistance",
        "Override",
        "sensorColor",
        "hardwareMap",
        "get",
        "sensorDistance",
        "hardwareMap",
        "get",
        "hsvValues",
        "values",
        "hsvValues",
        "SCALE_FACTOR",
        "relativeLayoutId",
        "hardwareMap",
        "appContext",
        "getResources",
        "getIdentifier",
        "hardwareMap",
        "appContext",
        "getPackageName",
        "relativeLayout",
        "hardwareMap",
        "appContext",
        "findViewById",
        "relativeLayoutId",
        "waitForStart",
        "opModeIsActive",
        "Color",
        "RGBToHSV",
        "sensorColor",
        "red",
        "SCALE_FACTOR",
        "sensorColor",
        "green",
        "SCALE_FACTOR",
        "sensorColor",
        "blue",
        "SCALE_FACTOR",
        "hsvValues",
        "telemetry",
        "addData",
        "format",
        "Locale",
        "US",
        "sensorDistance",
        "getDistance",
        "DistanceUnit",
        "CM",
        "telemetry",
        "addData",
        "sensorColor",
        "alpha",
        "telemetry",
        "addData",
        "sensorColor",
        "red",
        "telemetry",
        "addData",
        "sensorColor",
        "green",
        "telemetry",
        "addData",
        "sensorColor",
        "blue",
        "telemetry",
        "addData",
        "hsvValues",
        "relativeLayout",
        "post",
        "relativeLayout",
        "setBackgroundColor",
        "Color",
        "HSVToColor",
        "values",
        "telemetry",
        "update",
        "relativeLayout",
        "post",
        "relativeLayout",
        "setBackgroundColor",
        "Color",
        "WHITE"
    ],
    "literals": [
        "\"Sensor: REVColorDistance\"",
        "\"Sensor\"",
        "\"sensor_color_distance\"",
        "\"sensor_color_distance\"",
        "\"RelativeLayout\"",
        "\"id\"",
        "\"Distance (cm)\"",
        "\"%.02f\"",
        "\"Alpha\"",
        "\"Red  \"",
        "\"Green\"",
        "\"Blue \"",
        "\"Hue\""
    ],
    "variables": [
        "sensorColor",
        "sensorDistance"
    ],
    "comments": [
        "Comment this out to add to the opmode list",
        "get a reference to the color sensor.",
        "get a reference to the distance sensor that shares the same name.",
        "hsvValues is an array that will hold the hue, saturation, and value information.",
        "values is a reference to the hsvValues array.",
        "sometimes it helps to multiply the raw RGB values with a scale factor",
        "to amplify/attentuate the measured values.",
        "get a reference to the RelativeLayout so we can change the background",
        "color of the Robot Controller app to match the hue detected by the RGB sensor.",
        "wait for the start button to be pressed.",
        "loop and read the RGB and distance data.",
        "Note we use opModeIsActive() as our loop condition because it is an interruptible method.",
        "convert the RGB values to HSV values.",
        "multiply by the SCALE_FACTOR.",
        "then cast it back to int (SCALE_FACTOR is a double)",
        "send the info back to driver station using telemetry function.",
        "change the background color to match the color detected by the RGB sensor.",
        "pass a reference to the hue, saturation, and value array as an argument",
        "to the HSVToColor method.",
        "Set the panel back to the default color"
    ],
    "docstrings": [
        "* This is an example LinearOpMode that shows how to use\n * the REV Robotics Color-Distance Sensor.\n *\n * It assumes the sensor is configured with the name \"sensor_color_distance\".\n *\n * Use Android Studio to Copy this Class, and Paste it into your team's code folder with a new name.\n * Remove or comment out the @Disabled line to add this opmode to the Driver Station OpMode list.",
        "* Note that the REV Robotics Color-Distance incorporates two sensors into one device.\n     * It has a light/distance (range) sensor.  It also has an RGB color sensor.\n     * The light/distance sensor saturates at around 2\" (5cm).  This means that targets that are 2\"\n     * or closer will display the same value for distance/light detected.\n     *\n     * Although you configure a single REV Robotics Color-Distance sensor in your configuration file,\n     * you can treat the sensor as two separate sensors that share the same name in your op mode.\n     *\n     * In this example, we represent the detected color by a hue, saturation, and value color\n     * model (see https://en.wikipedia.org/wiki/HSL_and_HSV).  We change the background\n     * color of the screen to match the detected color.\n     *\n     * In this example, we  also use the distance sensor to display the distance\n     * to the target object.  Note that the distance sensor saturates at around 2\" (5 cm).\n     *"
    ],
    "functions": [
        "runOpMode",
        "run",
        "run"
    ],
    "classes": [
        "ColorDistanceSensor"
    ]
}