{
    "identifiers": [
        "argparse",
        "os",
        "re",
        "numpy",
        "np",
        "pandas",
        "pd",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "parse_args",
        "contest",
        "contest",
        "endswith",
        "contest",
        "endswith",
        "contest",
        "endswith",
        "re",
        "findall",
        "contest",
        "np",
        "nan",
        "contest",
        "contest",
        "contest",
        "endswith",
        "contest",
        "contest",
        "endswith",
        "contest",
        "contest",
        "endswith",
        "contest",
        "dirpath",
        "_",
        "filenames",
        "os",
        "walk",
        "args",
        "i",
        "filename",
        "filenames",
        "format",
        "dirpath",
        "filename",
        "pd",
        "read_csv",
        "full_path",
        "encoding",
        "all_data_df",
        "df",
        "pd",
        "concat",
        "all_data_df",
        "df",
        "all_data_df",
        "PartyName",
        "fillna",
        "inplace",
        "all_data_df",
        "a",
        "PARTY_TRANSLATIONS",
        "a",
        "all_data_df",
        "a",
        "WRITE_IN_TRANSLATIONS",
        "a",
        "a",
        "WRITE_IN_TRANSLATIONS",
        "a",
        "all_data_df",
        "all_data_df",
        "ContestName",
        "isnull",
        "EISContestID",
        "unique",
        "target_id",
        "target_ids",
        "all_data_df",
        "all_data_df",
        "EISContestID",
        "target_id",
        "all_data_df",
        "ContestName",
        "notnull",
        "iloc",
        "ContestName",
        "all_data_df",
        "EISContestID",
        "target_id",
        "all_data_df",
        "loc",
        "all_data_df",
        "loc",
        "mask",
        "fillna",
        "filler_name",
        "all_data_df",
        "apply",
        "row",
        "extract_office_from_contest",
        "row",
        "axis",
        "all_data_df",
        "apply",
        "row",
        "extract_district_from_contest",
        "row",
        "axis",
        "all_data_df",
        "rename",
        "columns",
        "inplace",
        "all_data_df",
        "all_data_df",
        "sort_values",
        "by",
        "inplace",
        "all_data_df",
        "to_csv",
        "args",
        "o",
        "encoding",
        "na_rep",
        "index"
    ],
    "literals": [
        "\"-i\"",
        "\"The input directory containing the source CSVs\"",
        "\"-o\"",
        "\"The output file path\"",
        "''",
        "''",
        "'CONSERVATIVE'",
        "'CONSERVATIVE'",
        "'Conservative'",
        "'CONSERVATIVE'",
        "'DEMOCRACT'",
        "'DEMOCRACTIC'",
        "'Democrat'",
        "'DEMOCRACTIC'",
        "'DEMOCRATIC'",
        "'DEMOCRACTIC'",
        "'Democratic'",
        "'DEMOCRACTIC'",
        "'DOWNSTATE UNITED'",
        "'DOWNSTATE UNITED'",
        "'Green'",
        "'GREEN'",
        "'GREEN'",
        "'GREEN'",
        "'Independent'",
        "'INDEPENDENT'",
        "'INDEPENDENT'",
        "'INDEPENDENT'",
        "'LIBERTARIAN'",
        "'LIBERTARIAN'",
        "'Libertarian'",
        "'LIBERTARIAN'",
        "'NON-PARTISAN'",
        "'NONPARTISAN'",
        "'Non-Partisan'",
        "'NONPARTISAN'",
        "'Nonpartisan'",
        "'NONPARTISAN'",
        "'NonPartisan'",
        "'NONPARTISAN'",
        "'NONPARTISAN'",
        "'NONPARTISAN'",
        "'REPUBLICAN'",
        "'REPUBLICAN'",
        "'Republican'",
        "'REPUBLICAN'",
        "'WRITE-IN'",
        "'WRITE-IN'",
        "'Write-In'",
        "'WRITE-IN'",
        "'write-in'",
        "'WRITE-IN'",
        "'Write-in'",
        "'WRITE-IN'",
        "' REPRESENTATIVE'",
        "' SENATE'",
        "' CONGRESS'",
        "r'\\d+'",
        "' REPRESENTATIVE'",
        "'STATE HOUSE'",
        "' SENATE'",
        "'STATE SENATE'",
        "' CONGRESS'",
        "'U.S. HOUSE'",
        "'{}{}'",
        "'utf-8'",
        "''",
        "'PartyName'",
        "'PartyName'",
        "'CandidateName'",
        "'CandidateName'",
        "'ContestName'",
        "'ContestName'",
        "'office'",
        "'ContestName'",
        "'district'",
        "'ContestName'",
        "'JurisName'",
        "'county'",
        "'CandidateName'",
        "'candidate'",
        "'PrecinctName'",
        "'precinct'",
        "'PartyName'",
        "'party'",
        "'VoteCount'",
        "'votes'",
        "'county'",
        "'precinct'",
        "'office'",
        "'district'",
        "'party'",
        "'candidate'",
        "'votes'",
        "'county'",
        "'precinct'",
        "'office'",
        "'district'",
        "'party'",
        "'utf-8'",
        "''"
    ],
    "variables": [
        "parser",
        "args",
        "PARTY_TRANSLATIONS",
        "WRITE_IN_TRANSLATIONS",
        "all_data_df",
        "full_path",
        "df",
        "all_data_df",
        "all_data_df",
        "all_data_df",
        "all_data_df",
        "target_ids",
        "filler_name",
        "mask",
        "mask",
        "all_data_df",
        "all_data_df",
        "all_data_df"
    ],
    "comments": [
        "This might not be an exhaustive list for all cycles",
        "Get all the ContestName that are NaN",
        "And replace that null value with the first not-null ContestName of the same EISContestID",
        "repalce NaNs"
    ],
    "docstrings": [],
    "functions": [
        "extract_district_from_contest",
        "extract_office_from_contest"
    ],
    "classes": []
}