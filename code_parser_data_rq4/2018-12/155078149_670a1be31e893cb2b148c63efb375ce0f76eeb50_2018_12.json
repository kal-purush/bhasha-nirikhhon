{
    "identifiers": [
        "Controller",
        "Model",
        "javafx",
        "collections",
        "FXCollections",
        "javafx",
        "collections",
        "ObservableList",
        "javafx",
        "scene",
        "control",
        "Alert",
        "java",
        "text",
        "DateFormat",
        "java",
        "text",
        "SimpleDateFormat",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "sqlModel",
        "loged",
        "sqlModel",
        "SQLModel",
        "GetInstance",
        "username",
        "pwd",
        "fields",
        "TblFields",
        "enumDict",
        "get",
        "size",
        "fields",
        "username",
        "fields",
        "pwd",
        "user",
        "sqlModel",
        "selectFromTable",
        "Tables",
        "TBL_USERS",
        "fields",
        "user",
        "valid",
        "user",
        "split",
        "loged",
        "valid",
        "allRequests",
        "loged",
        "getMyRequests",
        "vactaionAndRequests",
        "i",
        "i",
        "allRequests",
        "size",
        "i",
        "req",
        "allRequests",
        "get",
        "i",
        "vac",
        "req",
        "getVacation",
        "vac",
        "get_vacationStatus",
        "Vacation",
        "VacationStatus",
        "IN_PROGRESS",
        "vactaionAndRequests",
        "add",
        "format",
        "vac",
        "get__startDate",
        "format",
        "vac",
        "get_endDate",
        "vac",
        "get_destination",
        "loged",
        "getUsername",
        "req",
        "getR_answer",
        "FXCollections",
        "observableList",
        "vactaionAndRequests",
        "allRequests",
        "loged",
        "getRequestsForMe",
        "vactaionAndRequests",
        "i",
        "i",
        "allRequests",
        "size",
        "i",
        "req",
        "allRequests",
        "get",
        "i",
        "allRequests",
        "get",
        "i",
        "getR_answer",
        "vac",
        "req",
        "getVacation",
        "vactaionAndRequests",
        "add",
        "format",
        "vac",
        "get__startDate",
        "format",
        "vac",
        "get_endDate",
        "vac",
        "get_destination",
        "loged",
        "getUsername",
        "req",
        "getR_answer",
        "FXCollections",
        "observableList",
        "vactaionAndRequests",
        "userToDelete",
        "loged",
        "getUsername",
        "sqlModel",
        "deleteRecordFromTable",
        "userToDelete",
        "loged",
        "pwd",
        "birthday",
        "privateName",
        "lastName",
        "city",
        "bankAcount",
        "creditCard",
        "id",
        "loged",
        "loged",
        "getUsername",
        "pwd",
        "birthday",
        "privateName",
        "lastName",
        "city",
        "bankAcount",
        "id",
        "sqlModel",
        "updateRecord",
        "loged",
        "__startDate",
        "_endDate",
        "_destination",
        "_aviationCompany",
        "_numOfTickets",
        "_ticketType",
        "_isBaggageIncluded",
        "_isRoundTrip",
        "_vacationType",
        "_vacationStatus",
        "_vacationSleepingArrangements",
        "_ownerID",
        "newVacation",
        "loged",
        "getUsername",
        "__startDate",
        "_endDate",
        "_destination",
        "_aviationCompany",
        "_numOfTickets",
        "_ticketType",
        "_isBaggageIncluded",
        "_isRoundTrip",
        "_vacationType",
        "_vacationStatus",
        "_vacationSleepingArrangements",
        "_ownerID",
        "sqlModel",
        "insertRecordToTable",
        "Tables",
        "TBL_VACATIONS",
        "toString",
        "toLowerCase",
        "newVacation",
        "r_seller",
        "vacationID",
        "newRequest",
        "loged",
        "getUsername",
        "r_seller",
        "vacationID",
        "sqlModel",
        "insertRecordToTable",
        "Tables",
        "TBL_REQUESTS",
        "name",
        "toLowerCase",
        "newRequest",
        "loged",
        "UpdateMyRequsts",
        "newRequest",
        "newRequest",
        "getVacation",
        "set_vacationStatus",
        "Vacation",
        "VacationStatus",
        "IN_PROGRESS",
        "sqlModel",
        "updateRecord",
        "newRequest",
        "getVacation",
        "aprovedRequestId",
        "newPayment",
        "aprovedRequestId",
        "newPayment",
        "get_Request",
        "setR_answer",
        "newPayment",
        "get_Request",
        "setPayment",
        "newPayment",
        "loged",
        "UpdateMyRequsts",
        "newPayment",
        "get_Request",
        "sqlModel",
        "updateRecord",
        "newPayment",
        "get_Request",
        "newPayment",
        "get_Request",
        "getVacation",
        "set_vacationStatus",
        "Vacation",
        "VacationStatus",
        "SOLD",
        "sqlModel",
        "updateRecord",
        "newPayment",
        "get_Request",
        "getVacation",
        "sqlModel",
        "insertRecordToTable",
        "Tables",
        "TBL_PAYMENTS",
        "name",
        "toLowerCase",
        "newPayment"
    ],
    "literals": [
        "\"userFields\"",
        "\"\"",
        "\"\\n\"",
        "\"dd/mm/yyyy-HH:mm\"",
        "\"dd/MM/yyyy-HH:mm\"",
        "\"pending\"",
        "\"dd/MM/yyyy-HH:mm\"",
        "\"dd/MM/yyyy-HH:mm\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"Approved\""
    ],
    "variables": [
        "sqlModel",
        "loged"
    ],
    "comments": [
        "String[] fields = new String[TblFields.enumDict.get(\"requestTblFields\").size()];",
        "fields[1] = logedInUsername;",
        "String[] allRequests = SQLModel.GetInstance().selectFromTable(Tables.TBL_REQUESTS, fields).split(\"\\n\");",
        "vactaionAndRequests.add(new VactaionAndRequest(new SimpleDateFormat(\"dd/mm/yyyy-HH:mm\").format(vac.get__startDate()),",
        "new SimpleDateFormat(\"dd/mm/yyyy-HH:mm\").format(vac.get_endDate()), vac.get_destination(), logedInUsername, req.getR_answer()));",
        "VactaionAndRequest vactaionAndRequest =ne",
        "Request req = new Request(allRequests[i]);",
        "String vecationID = req.getVacationID();",
        "fields = new String[TblFields.enumDict.get(\"vacationFields\").size()];",
        "fields[0] = vecationID;",
        "fields[10] = Vacation.VacationStatus.IN_PROGRESS.name();",
        "String reqVacation = SQLModel.GetInstance().selectFromTable(Tables.TBL_VACATIONS, fields);",
        "if (reqVacation != \"\") {",
        "Vacation vac = new Vacation(reqVacation);",
        "DateFormat formatter = new SimpleDateFormat(\"dd/mm/yyyy-HH:mm\");",
        "",
        "}",
        "}",
        "String[] fields = new String[TblFields.enumDict.get(\"requestTblFields\").size()];",
        "fields[2] = logedInUsername;",
        "fields[4] = \"pending\";",
        "String[] allRequests = SQLModel.GetInstance().selectFromTable(Tables.TBL_REQUESTS, fields).split(\"\\n\");",
        "Request req = new Request(allRequests[i]);",
        "String vecationID = req.getVacationID();",
        "fields = new String[TblFields.enumDict.get(\"vacationFields\").size()];",
        "fields[0] = vecationID;",
        "String reqVacation = SQLModel.GetInstance().selectFromTable(Tables.TBL_VACATIONS, fields);",
        "if (reqVacation != \"\") {",
        "Vacation vac = new Vacation(reqVacation);",
        "DateFormat formatter = new SimpleDateFormat(\"dd/mm/yyyy-HH:mm\");",
        "vactaionAndRequests.add(new VactaionAndRequest(new SimpleDateFormat(\"dd/mm/yyyy-HH:mm:ss\").format(vac.get__startDate()),",
        "new SimpleDateFormat(\"dd/mm/yyyy-HH:mm:ss\").format(vac.get_endDate()), vac.get_destination(), logedInUsername, req.getR_answer()));",
        "}",
        "create request",
        "update vacation",
        "String[] fields = {newRequest.getR_ID(),newRequest.getR_seller(),\"\",\"\",\"\",\"\",",
        "\"\",\"\",\"\",\"\",\"\",\"\",\"\"};",
        "String vacation = sqlModel.selectFromTable(Tables.TBL_VACATIONS,fields);",
        "if(vacation!=\"\"){",
        "Vacation forUpdate = new Vacation(vacation);",
        "forUpdate.set_vacationStatus(Vacation.VacationStatus.IN_PROGRESS);",
        "sqlModel.updateRecord(forUpdate);",
        "}",
        "Insert Payment to DB",
        "Set request as approved:",
        "String[] requestFields = new String[TblFields.enumDict.get(\"requestTblFields\").size()];",
        "String approvedReqId = newPayment.get_aprovedRequest();",
        "requestFields[0] = approvedReqId;",
        "approvedRequest.setPayment(newPayment);",
        "Request approvedRequest = new Request(sqlModel.selectFromTable(Tables.TBL_REQUESTS, requestFields));",
        "approvedRequest.setR_answer(\"Approved\");",
        "Set vacation as sold:",
        "String[] vacationFields = new String[TblFields.enumDict.get(\"vacationFields\").size()];",
        "String vacationId = approvedRequest.getVacationID();",
        "vacationFields[0] = vacationId;",
        "Vacation vacation = new Vacation(sqlModel.selectFromTable(Tables.TBL_VACATIONS, vacationFields));",
        "vacation.set_vacationStatus(Vacation.VacationStatus.SOLD);"
    ],
    "docstrings": [],
    "functions": [
        "LogedInController",
        "tryLogIn",
        "getMyRequests",
        "getToAnswerRequests",
        "deleteUser",
        "UpdateUser",
        "CreateVacation",
        "CreateRequestAndUpdateVacation",
        "CreatePaymentAndUpdateVacation"
    ],
    "classes": [
        "LogedInController"
    ]
}