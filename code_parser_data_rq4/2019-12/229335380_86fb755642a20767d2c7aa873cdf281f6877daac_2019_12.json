{
    "identifiers": [
        "hdn",
        "projects",
        "gestiondevis",
        "controller",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "assertEquals",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "assertNotNull",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "assertTrue",
        "org",
        "mockito",
        "ArgumentMatchers",
        "org",
        "mockito",
        "Mockito",
        "verify",
        "org",
        "mockito",
        "Mockito",
        "when",
        "org",
        "springframework",
        "security",
        "test",
        "web",
        "servlet",
        "request",
        "SecurityMockMvcRequestPostProcessors",
        "csrf",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "result",
        "MockMvcResultMatchers",
        "content",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "result",
        "MockMvcResultMatchers",
        "jsonPath",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "result",
        "MockMvcResultMatchers",
        "status",
        "java",
        "time",
        "LocalDate",
        "java",
        "time",
        "format",
        "DateTimeFormatter",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "java",
        "util",
        "concurrent",
        "ThreadLocalRandom",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeAll",
        "org",
        "junit",
        "jupiter",
        "api",
        "MethodOrderer",
        "org",
        "junit",
        "jupiter",
        "api",
        "Order",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "junit",
        "jupiter",
        "api",
        "TestMethodOrder",
        "org",
        "junit",
        "jupiter",
        "api",
        "extension",
        "ExtendWith",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Value",
        "org",
        "springframework",
        "boot",
        "test",
        "autoconfigure",
        "web",
        "servlet",
        "AutoConfigureMockMvc",
        "org",
        "springframework",
        "boot",
        "test",
        "autoconfigure",
        "web",
        "servlet",
        "WebMvcTest",
        "org",
        "springframework",
        "boot",
        "test",
        "mock",
        "mockito",
        "MockBean",
        "org",
        "springframework",
        "http",
        "HttpHeaders",
        "org",
        "springframework",
        "http",
        "HttpStatus",
        "org",
        "springframework",
        "http",
        "MediaType",
        "org",
        "springframework",
        "security",
        "test",
        "context",
        "support",
        "WithMockUser",
        "org",
        "springframework",
        "test",
        "context",
        "TestPropertySource",
        "org",
        "springframework",
        "test",
        "context",
        "junit",
        "jupiter",
        "SpringExtension",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "MockMvc",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "MvcResult",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "request",
        "MockMvcRequestBuilders",
        "com",
        "fasterxml",
        "jackson",
        "databind",
        "ObjectMapper",
        "com",
        "fasterxml",
        "jackson",
        "databind",
        "SerializationFeature",
        "com",
        "fasterxml",
        "jackson",
        "datatype",
        "jsr310",
        "JavaTimeModule",
        "hdn",
        "projects",
        "gestiondevis",
        "entities",
        "Client",
        "hdn",
        "projects",
        "gestiondevis",
        "entities",
        "Devis",
        "hdn",
        "projects",
        "gestiondevis",
        "service",
        "IGestion",
        "hdn",
        "projects",
        "gestiondevis",
        "utils",
        "EtatOperation",
        "ExtendWith",
        "WebMvcTest",
        "controllers",
        "AutoConfigureMockMvc",
        "TestPropertySource",
        "locations",
        "TestMethodOrder",
        "Autowired",
        "mockMvc",
        "MockBean",
        "devisService",
        "Value",
        "devisControllerPath",
        "Value",
        "dateFormat",
        "objectMapper",
        "uri",
        "uri",
        "devisControllerPath",
        "uri",
        "uri",
        "liste",
        "BeforeAll",
        "client",
        "i",
        "i",
        "i",
        "devis",
        "genererDevis",
        "devis",
        "setReference",
        "valueOf",
        "i",
        "liste",
        "add",
        "devis",
        "liste",
        "get",
        "setClient",
        "client",
        "objectMapper",
        "registerModule",
        "objectMapper",
        "disable",
        "SerializationFeature",
        "WRITE_DATES_AS_TIMESTAMPS",
        "Test",
        "Order",
        "WithMockUser",
        "username",
        "password",
        "when",
        "devisService",
        "getEntities",
        "thenReturn",
        "liste",
        "result",
        "mockMvc",
        "perform",
        "MockMvcRequestBuilders",
        "get",
        "getURL",
        "accept",
        "MediaType",
        "APPLICATION_JSON",
        "andReturn",
        "status",
        "result",
        "getResponse",
        "getStatus",
        "assertTrue",
        "status",
        "HttpStatus",
        "OK",
        "value",
        "status",
        "HttpStatus",
        "FOUND",
        "value",
        "verify",
        "devisService",
        "getEntities",
        "listeResult",
        "Arrays",
        "asList",
        "objectMapper",
        "readValue",
        "result",
        "getResponse",
        "getContentAsString",
        "assertNotNull",
        "listeResult",
        "assertEquals",
        "liste",
        "size",
        "listeResult",
        "size",
        "Test",
        "Order",
        "WithMockUser",
        "username",
        "password",
        "when",
        "devisService",
        "saveOrUpdateEntity",
        "thenReturn",
        "liste",
        "get",
        "result",
        "mockMvc",
        "perform",
        "MockMvcRequestBuilders",
        "post",
        "getURL",
        "csrf",
        "content",
        "objectMapper",
        "writeValueAsString",
        "liste",
        "get",
        "header",
        "HttpHeaders",
        "CONTENT_TYPE",
        "MediaType",
        "APPLICATION_JSON",
        "andExpect",
        "status",
        "isCreated",
        "andReturn",
        "status",
        "result",
        "getResponse",
        "getStatus",
        "assertEquals",
        "HttpStatus",
        "CREATED",
        "value",
        "status",
        "resultDevis",
        "objectMapper",
        "readValue",
        "result",
        "getResponse",
        "getContentAsString",
        "assertNotNull",
        "resultDevis",
        "verify",
        "devisService",
        "saveOrUpdateEntity",
        "Test",
        "Order",
        "WithMockUser",
        "username",
        "password",
        "when",
        "devisService",
        "getEntityWithOptional",
        "thenReturn",
        "liste",
        "get",
        "dateJour",
        "LocalDate",
        "now",
        "dateJourString",
        "dateJour",
        "format",
        "DateTimeFormatter",
        "ofPattern",
        "dateFormat",
        "result",
        "mockMvc",
        "perform",
        "MockMvcRequestBuilders",
        "get",
        "getURL",
        "accept",
        "MediaType",
        "APPLICATION_JSON",
        "andExpect",
        "status",
        "isFound",
        "andExpect",
        "content",
        "contentType",
        "MediaType",
        "APPLICATION_JSON",
        "andExpect",
        "jsonPath",
        "value",
        "dateJourString",
        "andReturn",
        "resultDevis",
        "objectMapper",
        "readValue",
        "result",
        "getResponse",
        "getContentAsString",
        "assertNotNull",
        "resultDevis",
        "verify",
        "devisService",
        "getEntityWithOptional",
        "Test",
        "Order",
        "WithMockUser",
        "username",
        "password",
        "when",
        "devisService",
        "getEntityWithOptional",
        "thenReturn",
        "liste",
        "get",
        "when",
        "devisService",
        "saveOrUpdateEntity",
        "thenReturn",
        "liste",
        "get",
        "mockMvc",
        "perform",
        "MockMvcRequestBuilders",
        "put",
        "getURL",
        "csrf",
        "content",
        "objectMapper",
        "writeValueAsString",
        "liste",
        "get",
        "header",
        "HttpHeaders",
        "CONTENT_TYPE",
        "MediaType",
        "APPLICATION_JSON",
        "andExpect",
        "status",
        "isOk",
        "andExpect",
        "jsonPath",
        "value",
        "andReturn",
        "verify",
        "devisService",
        "saveOrUpdateEntity",
        "Test",
        "Order",
        "WithMockUser",
        "username",
        "password",
        "mockMvc",
        "perform",
        "MockMvcRequestBuilders",
        "getURL",
        "csrf",
        "andExpect",
        "status",
        "isGone",
        "verify",
        "devisService",
        "deleteEntity",
        "tva20Pourcent",
        "ThreadLocalRandom",
        "current",
        "nextBoolean",
        "montantDevis",
        "ThreadLocalRandom",
        "current",
        "nextDouble",
        "montantApport",
        "ThreadLocalRandom",
        "current",
        "nextDouble",
        "montantDevis",
        "dureerTravaux",
        "ThreadLocalRandom",
        "current",
        "nextInt",
        "round",
        "montantDevis",
        "devis",
        "LocalDate",
        "now",
        "montantDevis",
        "tva20Pourcent",
        "montantApport",
        "ThreadLocalRandom",
        "current",
        "nextBoolean",
        "dureerTravaux",
        "devis"
    ],
    "literals": [
        "\"classpath:test.properties\"",
        "\"${controller.devisPath}\"",
        "\"${date.format}\"",
        "\"john\"",
        "\"doe\"",
        "\"johnDoe\"",
        "\"123456\"",
        "\"admin\"",
        "\"admin\"",
        "\"liste\"",
        "\"Aucun devis\"",
        "\"Incorrect Devis List\"",
        "\"admin\"",
        "\"admin\"",
        "\"liste\"",
        "\"Incorrect Response Status\"",
        "\"admin\"",
        "\"admin\"",
        "\"liste/1\"",
        "\"$.dateDevis\"",
        "\"admin\"",
        "\"admin\"",
        "\"liste/1\"",
        "\"$.reference\"",
        "\"1\"",
        "\"admin\"",
        "\"admin\"",
        "\"liste/1\""
    ],
    "variables": [
        "mockMvc",
        "devisService",
        "devisControllerPath",
        "dateFormat"
    ],
    "comments": [
        "configure Jackson to map a LocalDate into a String",
        "prepare data and mock's behaviour",
        "execute",
        "verify",
        "verify that service method was called once",
        "execute",
        "sinon 403",
        "verify that service method was called once",
        "execute",
        "verify that service method was called once",
        "sinon 403",
        "verify that service method was called once",
        "sinon 403",
        "verify that service method was called once"
    ],
    "docstrings": [
        "* @return Devis"
    ],
    "functions": [
        "getURL",
        "init",
        "test_getDevis",
        "test_saveDevis",
        "test_findDevisByReference",
        "test_updateDevis",
        "test_deleteDevis",
        "Devis",
        "genererDevis"
    ],
    "classes": [
        "DevisControllerIntegrationTest"
    ]
}