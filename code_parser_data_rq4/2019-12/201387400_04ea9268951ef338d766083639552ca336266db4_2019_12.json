{
    "identifiers": [
        "$U",
        "expect2",
        "GETERR",
        "environ",
        "DynamoStorageService",
        "DummyStorageService",
        "StorageService",
        "CoreModel",
        "ProxyStorageService",
        "GeneralKeyMaker",
        "GeneralModelFilter",
        "CORE_FIELDS",
        "CoreKeyMakeable",
        "CoreModelFilterable",
        "credentials",
        "GeneralKeyMaker",
        "GeneralModelFilter",
        "FIELDS",
        "model",
        "origin",
        "model",
        "model",
        "origin",
        "model",
        "model",
        "$U",
        "model",
        "model",
        "ProxyStorageService",
        "service",
        "storage",
        "filters",
        "current",
        "service",
        "storage",
        "FIELDS",
        "filters",
        "current",
        "ts",
        "ts",
        "ts",
        "instance",
        "table",
        "MyService",
        "MyModelFilter",
        "MyStorage",
        "service",
        "ProxyStorageService",
        "table",
        "FIELDS",
        "filters",
        "current",
        "ProxyStorageService",
        "service",
        "table",
        "FIELDS",
        "describe",
        "environ",
        "credentials",
        "environ",
        "it",
        "done",
        "instance",
        "expect2",
        "storage",
        "expect2",
        "storage2",
        "expect2",
        "service",
        "expect2",
        "service",
        "expect2",
        "service",
        "expect2",
        "service",
        "expect2",
        "storage",
        "current",
        "current",
        "current",
        "expect2",
        "storage",
        "current",
        "current",
        "current",
        "current",
        "expect2",
        "CORE_FIELDS",
        "expect2",
        "FIELDS",
        "done",
        "build_test_scenario_by_type",
        "done",
        "instance",
        "expect2",
        "storage",
        "DummyStorageService",
        "expect2",
        "storage",
        "DynamoStorageService",
        "expect2",
        "storage",
        "expect2",
        "service",
        "expect2",
        "storage",
        "CORE_FIELDS",
        "FIELDS",
        "expect2",
        "storage",
        "FIELD_COUNT",
        "PROFILE",
        "done",
        "current",
        "current",
        "current",
        "expect2",
        "storage",
        "storage",
        "GETERR",
        "expect2",
        "storage",
        "GETERR",
        "expect2",
        "storage",
        "GETERR",
        "expect2",
        "storage",
        "expect2",
        "storage",
        "expect2",
        "storage",
        "expect2",
        "storage",
        "storage",
        "GETERR",
        "expect2",
        "storage",
        "GETERR",
        "expect2",
        "storage",
        "expect2",
        "storage",
        "expect2",
        "storage",
        "storage",
        "GETERR",
        "expect2",
        "storage",
        "expect2",
        "storage",
        "storage",
        "storage",
        "expect2",
        "$test",
        "expect2",
        "$test",
        "expect2",
        "$user",
        "GETERR",
        "service",
        "id",
        "$key",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "_id",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "expect2",
        "$test",
        "id",
        "expect2",
        "$test",
        "id",
        "expect2",
        "$test",
        "id",
        "expect2",
        "$test",
        "expect2",
        "$test",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "service",
        "id",
        "$key",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "_id",
        "expect2",
        "$test",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "createdAt",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "createdAt",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "expect2",
        "storage",
        "_id",
        "GETERR",
        "expect2",
        "storage",
        "_id",
        "GETERR",
        "expect2",
        "$test",
        "id",
        "GETERR",
        "done",
        "it",
        "build_test_scenario_by_type",
        "it",
        "build_test_scenario_by_type"
    ],
    "literals": [
        "'../engine'",
        "'../common/test-helper'",
        "'./storage-service'",
        "'./proxy-storage-service'",
        "'../tools/shared'",
        "''",
        "'test'",
        "string",
        "'name,count'",
        "','",
        "'TT'",
        "':'",
        "string",
        "'ProxyStorageService'",
        "'! env.PROFILE ='",
        "'PROFILE'",
        "'PROFILE'",
        "'should pass basic service'",
        "'dummy-account-data.yml'",
        "'proxy-storage-service:dummy-storage-service:dummy-account-data/_id'",
        "'proxy-storage-service:dummy-storage-service:dummy-account-data/_id'",
        "'test'",
        "'AAA'",
        "'TT'",
        "'test'",
        "'AAA'",
        "'TT:test:AAA'",
        "'test'",
        "'1:23:45'",
        "'_id'",
        "'TT:test:1-23-45'",
        "'test'",
        "'1:23:45'",
        "'_id'",
        "'TT:test:1-23-45'",
        "'test'",
        "'1:23:45'",
        "'TT'",
        "'test'",
        "'1:23:45'",
        "'TT:test:1-23-45'",
        "'dummy'",
        "'dynamo'",
        "'dummy'",
        "'dummy-account-data.yml'",
        "'TestCoreTable'",
        "'dummy'",
        "'dummy'",
        "'test'",
        "'1:23:45'",
        "'TT:test:1-23-45'",
        "'test'",
        "'AAA'",
        "'TT'",
        "'test'",
        "'AAA'",
        "'TT:test:AAA'",
        "'dummy'",
        "'proxy-storage-service:dummy-storage-service:dummy-account-data/_id'",
        "proxy-storage-service:dynamo-storage-service:TestCoreTable/_id/${FIELD_COUNT}",
        "'test'",
        "'sequence'",
        "''",
        "'@id (model-id) is required!'",
        "'sequence'",
        "'test'",
        "'404 NOT FOUND - _id:TT:sequence:test'",
        "'test'",
        "'test'",
        "'d01764cd-9ef2-41e2-9e88-68e79555c979'",
        "'-'",
        "'d01764cd-9ef2-41e2-9e88-68e79555c979'",
        "'-'",
        "'test'",
        "'aaa'",
        "'test'",
        "'aaa'",
        "'404 NOT FOUND - _id:TT:test:aaa'",
        "'test'",
        "'aaa'",
        "'a'",
        "'id,stereo'",
        "'aaa'",
        "'a'",
        "'test'",
        "'aaa'",
        "'b'",
        "'id,stereo'",
        "'aaa'",
        "'a'",
        "'test'",
        "'aaa'",
        "'_id,stereo'",
        "'TT:test:aaa'",
        "'a'",
        "'test'",
        "'bbb'",
        "'test'",
        "'bbb'",
        "'b'",
        "'TT:test:bbb'",
        "'b'",
        "'test'",
        "'bbb'",
        "'TT:test:bbb'",
        "'b'",
        "'test'",
        "'user'",
        "'aaa'",
        "'_id,stereo'",
        "'TT:test:aaa'",
        "'a'",
        "'bbb'",
        "'!updatedAt'",
        "'TT:test:bbb'",
        "'b'",
        "'aaa'",
        "'404 NOT FOUND - _id:TT:user:aaa'",
        "'a01'",
        "'test'",
        "404 NOT FOUND - _id:${_id}",
        "'bob'",
        "'bob'",
        "'TT'",
        "'test'",
        "'bob'",
        "'TT'",
        "'test'",
        "'col'",
        "'id,name'",
        "'1000003'",
        "'col'",
        "'@id (model-id) is required!'",
        "'@id (model-id) is required!'",
        "'500 FAILED TO LOCK - model[TT:test:a01].lock = 4'",
        "'500 FAILED TO LOCK - model[TT:test:a01].lock = 5'",
        "'bbb'",
        "'test'",
        "404 NOT FOUND - _id:${_id}",
        "''",
        "'bob'",
        "'@id (model-id) is required!'",
        "'bob'",
        "'TT'",
        "'test'",
        "'bob'",
        "'id,name,createdAt,updatedAt'",
        "'bob'",
        "'bob'",
        "'guk'",
        "'guk'",
        "'1'",
        "'id,name,meta,createdAt,updatedAt'",
        "'guk'",
        "''",
        "'id,name,meta,createdAt,updatedAt'",
        "'guk'",
        "'_id,lock,name'",
        "'guk'",
        "'_id,lock,name'",
        "'guk'",
        "'1'",
        "'1'",
        "'A'",
        "'id,name,createdAt,updatedAt,deletedAt'",
        "'guk'",
        "'TT:test:bbb'",
        "'_id,name'",
        "'should pass service w/ dummy-storage'",
        "'dummy'",
        "'should pass service w/ dynamo-storage'",
        "'dynamo'"
    ],
    "variables": [
        "FIELDS",
        "createdAt",
        "updatedAt",
        "deletedAt",
        "instance",
        "service",
        "filters",
        "current",
        "storage",
        "storage2",
        "PROFILE",
        "build_test_scenario_by_type",
        "FIELD_COUNT",
        "createdAt",
        "updatedAt",
        "deletedAt",
        "$test",
        "$user",
        "id",
        "$key",
        "_id",
        "id",
        "$key",
        "_id"
    ],
    "comments": [
        "eslint-disable-next-line @typescript-eslint/no-unused-vars",
        "-------------------------",
        "! internal definitions",
        "! sample to filter model",
        "! conversion data-type.",
        "! override of ProxyStorageService to have constant asTime()",
        "-------------------------",
        "! create service instance.",
        "! main test body.",
        "! test w/ service",
        "eslint-disable prettier/prettier",
        "! check basic functions",
        "! check fields count.",
        "eslint-enable prettier/prettier",
        "! builder to test main service by type",
        "eslint-disable prettier/prettier",
        "! check type of internal storage.",
        "! check common functions.",
        "! check basic foot-print.",
        "! check count of fields",
        "`type,meta` is common w/ StorageModel.",
        "! ignore if no profile loaded.",
        "! define constants to test..",
        "! delete old, and check next-seq",
        "! check auto create on read().",
        "BE SURE 404",
        "AUTO CREATE",
        "DO NOT UPDATE",
        "READ BACK",
        "! check auto create on update().",
        "! use typed-model-service.",
        "! test storage-service",
        "! test base CRUD with typed-storage-service.",
        "BE SURE 404",
        "! test lock",
        "AUTO CREATED!!!",
        "lock := 0",
        "2 cycle waiting.",
        "1 cycle waiting.",
        "! basic CRUD.",
        "BE SURE 404",
        "created!",
        "nothing to save",
        "updated.",
        "type conversion to number",
        "meta save.",
        "! overwrite meta.",
        "clear meta",
        "! test lock",
        "lock field is created",
        "! internal fields",
        "constant member",
        "ignore Object Name",
        "ignore internal name",
        "ignore internal name",
        "ignore internal name",
        "ignore internal name",
        "ignore internal name",
        "! not destroy",
        "! internal object",
        "eslint-enable prettier/prettier",
        "! test w/ dummy storage.",
        "! test w/ dynamo service."
    ],
    "docstrings": [
        "* `proxy-storage-service.spec.js`\n * - common service for `proxy-storage-service`\n *\n *\n * @author      Steve Jung <steve@lemoncloud.io>\n * @date        2019-12-03 migrated via origin accounts-service.js\n *\n * @copyright (C) 2019 LemonCloud Co Ltd. - All Rights Reserved."
    ],
    "functions": [
        "onBeforeSave",
        "asTime"
    ],
    "classes": [
        "MyService",
        "MyModelFilter",
        "MyStorage"
    ]
}