{
    "identifiers": [
        "Keycloak",
        "KeycloakInitOptions",
        "KeycloakInstance",
        "sessionStorage",
        "sessionStorage",
        "sessionStorage",
        "kcInstance",
        "kcInstance",
        "keyCloakConfigurl",
        "resolve",
        "reject",
        "Keycloak",
        "keyCloakConfigurl",
        "authenticated",
        "authenticated",
        "resolve",
        "err",
        "err",
        "reject",
        "refreshEarlyTime",
        "refreshEarlyTime",
        "refreshEarlyTimeinMilliseconds",
        "resolve",
        "reject",
        "refreshed",
        "refreshed",
        "resolve",
        "reject",
        "clearTimeout",
        "refreshEarlyTimeinMilliseconds",
        "refreshTokenExpiresIn",
        "expiresIn",
        "refreshEarlyTimeinMilliseconds",
        "expiresIn",
        "refreshInMilliSeconds",
        "setTimeout",
        "refreshed",
        "refreshed",
        "refreshEarlyTimeinMilliseconds",
        "clearTimeout",
        "refreshInMilliSeconds",
        "sessionStorage",
        "sessionStorage",
        "sessionStorage",
        "sessionStorage",
        "token",
        "decodeURIComponent",
        "base64Url",
        "c",
        "c",
        "base64",
        "error",
        "error",
        "TokenServices"
    ],
    "literals": [
        "'keycloak-js'",
        "'login-required'",
        "'KEYCLOAK_TOKEN'",
        "'KEYCLOAK_REFRESH_TOKEN'",
        "'KEYCLOAK_ID_TOKEN'",
        "'[TokenServices] KC Instance registered using kc instance'",
        "string",
        "'[TokenServices] KC Instance registered using kc URL'",
        "'[TokenServices] is User Authenticated:Syncing'",
        "'[TokenServices] Fatal Error:Could not Initialise KC instance'",
        "'Could not Initialise KC'",
        "'[TokenServices Starting the timer] '",
        "'[TokenServices] One time Token Refreshing '",
        "'[TokenServices] One time Token Refreshed '",
        "'Could not refresh Token'",
        "'[TokenServices Stopping the timer] '",
        "'exp'",
        "'Refresh Token Expired..No more token refreshes'",
        "'exp'",
        "'[TokenServices] Token Expires in %s Seconds:'",
        "'[TokenServices] Token Refreshal Scheduled in %s Seconds'",
        "'[TokenServices] Refreshing Token Attempt: %s '",
        "'successfully refreshed'",
        "'refresh failed'",
        "'[TokenServices] Timer id:'",
        "'KEYCLOAK_TOKEN'",
        "'KEYCLOAK_REFRESH_TOKEN'",
        "'ID_TOKEN'",
        "'KEYCLOAK_TOKEN'",
        "'.'",
        "''",
        "'%'",
        "'00'",
        "''",
        "'Error parsing JWT - '"
    ],
    "variables": [
        "refreshEarlyTimeinMilliseconds",
        "refreshTokenExpiresIn",
        "expiresIn",
        "refreshInMilliSeconds",
        "token",
        "base64Url",
        "base64"
    ],
    "comments": [
        "in seconds",
        "this.cleanupSession()",
        "check if refresh token is still valid . Or else clear all timers and throw errors",
        "in milliseconds"
    ],
    "docstrings": [],
    "functions": [
        "initUsingKc",
        "initUsingUrl",
        "scheduleRefreshTimer",
        "refreshToken",
        "stopRefreshTimer",
        "scheduleRefreshToken",
        "syncSessionStorage",
        "decodeToken"
    ],
    "classes": [
        "TokenServices"
    ]
}