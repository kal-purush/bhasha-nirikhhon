{
    "identifiers": [
        "require",
        "require",
        "require",
        "lib",
        "path",
        "__dirname",
        "lib",
        "file",
        "callback",
        "fs",
        "lib",
        "file",
        "err",
        "fileDescriptor",
        "err",
        "fileDescriptor",
        "fs",
        "fileDescriptor",
        "err",
        "err",
        "fs",
        "fileDescriptor",
        "err",
        "err",
        "callback",
        "callback",
        "callback",
        "callback",
        "lib",
        "includeCompressedLogs",
        "callback",
        "fs",
        "lib",
        "err",
        "data",
        "err",
        "data",
        "data",
        "data",
        "fileName",
        "fileName",
        "trimmedFileNames",
        "fileName",
        "fileName",
        "includeCompressedLogs",
        "trimmedFileNames",
        "fileName",
        "callback",
        "trimmedFileNames",
        "callback",
        "err",
        "data",
        "lib",
        "logId",
        "newFileId",
        "callback",
        "logId",
        "newFileId",
        "fs",
        "lib",
        "sourceFile",
        "err",
        "inputString",
        "err",
        "inputString",
        "zlib",
        "inputString",
        "err",
        "buffer",
        "err",
        "buffer",
        "fs",
        "lib",
        "destFile",
        "err",
        "fileDescriptor",
        "err",
        "fileDescriptor",
        "fs",
        "fileDescriptor",
        "buffer",
        "err",
        "err",
        "fs",
        "fileDescriptor",
        "err",
        "err",
        "callback",
        "callback",
        "err",
        "callback",
        "err",
        "callback",
        "err",
        "callback",
        "err",
        "callback",
        "err",
        "lib",
        "fileId",
        "callback",
        "fileId",
        "fs",
        "lib",
        "fileName",
        "err",
        "err",
        "Buffer",
        "zlib",
        "inputBuffer",
        "err",
        "outputBuffer",
        "err",
        "outputBuffer",
        "outputBuffer",
        "callback",
        "callback",
        "err",
        "callback",
        "err",
        "lib",
        "logId",
        "callback",
        "fs",
        "lib",
        "logId",
        "err",
        "err",
        "callback",
        "callback",
        "err",
        "lib"
    ],
    "literals": [
        "\"fs\"",
        "\"path\"",
        "\"zlib\"",
        "\"/../.logs/\"",
        "\".log\"",
        "\"a\"",
        "\"\\n\\n\"",
        "\"Error closing file that was being appended\"",
        "\"Error appending to file\"",
        "\"Could open file for appending\"",
        "\".log\"",
        "\".log\"",
        "\"\"",
        "\".gz.b64\"",
        "\".gz.b64\"",
        "\"\"",
        "\".log\"",
        "\".gz.b64\"",
        "\"utf8\"",
        "\"wx\"",
        "\"base64\"",
        "\".gz.b64\"",
        "\"utf8\"",
        "\"base64\"",
        "\".log\""
    ],
    "variables": [
        "fs",
        "path",
        "zlib",
        "lib",
        "trimmedFileNames",
        "sourceFile",
        "destFile",
        "fileName",
        "inputBuffer"
    ],
    "comments": [
        "Dependencies",
        "Container for module (to be exported)",
        "Base directory of data folder",
        "Append a string to a file. Create the file if it does not exist",
        "Open the file for appending",
        "Append to file and close it",
        "List all the logs, and optionally include the compressed logs",
        "Add the .log files",
        "Add the .gz files",
        "Compress the contents of one .log file into a .gz.b64 file within the same directory",
        "Read the source file",
        "Compress the data using gzip",
        "Send the data to the destination file",
        "Write to the destination file",
        "Close the destination file",
        "Decompress the contents of a .gz file into a string variable",
        "Inflate the data",
        "Callback",
        "Truncate a log file",
        "Export the module"
    ],
    "docstrings": [
        "* Library for storing and rotating logs\n *"
    ],
    "functions": [],
    "classes": []
}