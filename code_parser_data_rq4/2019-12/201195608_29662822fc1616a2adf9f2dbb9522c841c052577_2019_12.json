{
    "identifiers": [
        "Tensor",
        "Algebra",
        "LinearAlgebraOperation",
        "LinearAlgebraOperation",
        "args",
        "args",
        "args",
        "Tensor",
        "Algebra",
        "_",
        "s",
        "Algebra",
        "s",
        "Algebra",
        "s",
        "Algebra",
        "A",
        "B",
        "Algebra",
        "Algebra",
        "R",
        "dot",
        "Algebra",
        "Algebra",
        "Algebra",
        "Algebra",
        "Algebra"
    ],
    "literals": [
        "'../../tensor/index.mjs'",
        "'../../template/algebra.mjs'",
        "'./operation.mjs'",
        "'A = this.of'",
        "'B = this.with'",
        "'R = this.result'",
        "'return R'",
        "'\\n'",
        "'R.data'",
        "'A.data'",
        "'B.data'",
        "'\\n'",
        "'A.data'",
        "'AIndex'",
        "'B.data'",
        "'BIndex'",
        "'R.data'",
        "'RIndex'",
        "const AIndex = r * A.strides[0] + s * A.strides[1] + A.offset",
        "const BIndex = r * B.strides[0] + s * B.strides[1] + B.offset",
        "const RIndex = r * R.strides[0] + c * R.strides[1] + R.offset",
        "for (let r = 0; r < A.shape[0]; r++){",
        "for (let c = 0; c < B.shape[1]; c++){",
        "R.data[RIndex] = 0",
        "for (let s = 0; s < A.shape[1]; s++) {",
        "'+='",
        "}}}",
        "'\\n'"
    ],
    "variables": [
        "R",
        "dot",
        "A",
        "B"
    ],
    "comments": [
        "Superclass",
        "Result",
        "Initialize",
        "super class method",
        "super class method, utilizes helpers below",
        "Create",
        "Resultant Tensor",
        "Pointwise Implementation",
        "Symbolic Implementation"
    ],
    "docstrings": [],
    "functions": [
        "resultant",
        "start",
        "inLoop",
        "finish",
        "symbolicSourceBoilerplate",
        "symbolicSourceTemplate"
    ],
    "classes": [
        "MatrixMultiplication"
    ]
}