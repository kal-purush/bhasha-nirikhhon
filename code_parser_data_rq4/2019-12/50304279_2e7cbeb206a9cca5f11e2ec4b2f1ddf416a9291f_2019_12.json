{
    "identifiers": [
        "ts",
        "pxtc",
        "key",
        "mainName",
        "l",
        "l",
        "code",
        "code",
        "code",
        "code",
        "codeEquivalences",
        "lang",
        "txt",
        "toComparable",
        "txt",
        "eq",
        "codeEquivalences",
        "eq",
        "lang",
        "txtComp",
        "eq",
        "lang1",
        "lang1Txt",
        "lang2",
        "lang2Txt",
        "equiv",
        "lang1",
        "lang1Txt",
        "equiv",
        "lang1",
        "toComparable",
        "lang1Txt",
        "equiv",
        "lang2",
        "lang2Txt",
        "equiv",
        "lang2",
        "toComparable",
        "lang2Txt",
        "codeEquivalences",
        "equiv",
        "codeEquivalences",
        "MAX_CODE_EQUIVS",
        "codeEquivalences",
        "l",
        "txt",
        "key",
        "outfiles",
        "mainName",
        "l",
        "txt",
        "fromTxt",
        "to",
        "doRealTranspile",
        "tryGetCachedTranspile",
        "fromTxt",
        "equiv",
        "equiv",
        "to",
        "equiv",
        "to",
        "makeSuccess",
        "to",
        "toTxt",
        "res",
        "doRealTranspile",
        "res",
        "res",
        "mainName",
        "to",
        "cacheTranspile",
        "fromTxt",
        "to",
        "toTxt",
        "res",
        "options",
        "pxtc",
        "filename",
        "mainName",
        "doRealTranspile",
        "pxt",
        "options",
        "options",
        "filename",
        "U",
        "fromTxt",
        "fromTxt",
        "filename",
        "transpileInternal",
        "fromTxt",
        "doRealTranspile",
        "program",
        "ts",
        "filename",
        "mainName",
        "doRealTranspile",
        "pxt",
        "program",
        "filename",
        "program",
        "filename",
        "U",
        "tsSrc",
        "tsSrc",
        "filename",
        "tsSrc",
        "transpileInternal",
        "fromTxt",
        "doRealTranspile"
    ],
    "literals": [
        "string",
        "string",
        "main.${l}",
        "\"py\"",
        "\"blocks\"",
        "\"ts\"",
        "string",
        "string",
        "string",
        "string",
        "\"\"",
        "string",
        "string",
        "string",
        "\"ts\"",
        "\"blocks\"",
        "\"py\"",
        "\"ts\"",
        "\"blocks\"",
        "\"py\"",
        "string",
        "string",
        "string",
        "string",
        "\"\"",
        "string",
        "\"py\"",
        "Missing file \"${filename}\" when converting from py->ts",
        "\"py\"",
        "\"ts\"",
        "string",
        "\"ts\"",
        "Missing file \"${filename}\" when converting from ts->py",
        "\"ts\"",
        "\"py\""
    ],
    "variables": [
        "mainName",
        "codeEquivalences",
        "MAX_CODE_EQUIVS",
        "txtComp",
        "equiv",
        "outfiles",
        "equiv",
        "toTxt",
        "res",
        "res",
        "toTxt",
        "doRealTranspile",
        "fromTxt",
        "doRealTranspile",
        "tsSrc",
        "fromTxt"
    ],
    "comments": [
        "TODO: enable reference so we don't need to use: (pxt as any).py",
        "the issue is that this creates a circular dependency. This",
        "is easily handled if we used proper TS modules.",
        "<reference path=\"../../built/pxtpy.d.ts\"/>",
        "This code centralizes transpiling between typescript and python",
        "so that we can cache results for better performance and user",
        "experience (since compile -> decompile round-trips are lossy)",
        "a circular buffer of size MAX_CODE_EQUIVS that stores",
        "sets of equivalent code files so that when we translate",
        "from ts -> py -> ts we get back the same ts.",
        "Ignore whitespace",
        "return from cache",
        "not found in cache, do the compile",
        "store the result"
    ],
    "docstrings": [],
    "functions": [
        "toComparable",
        "resetCache",
        "tryGetCachedTranspile",
        "cacheTranspile",
        "makeSuccess",
        "transpileInternal",
        "pyToTs",
        "tsToPy"
    ],
    "classes": []
}