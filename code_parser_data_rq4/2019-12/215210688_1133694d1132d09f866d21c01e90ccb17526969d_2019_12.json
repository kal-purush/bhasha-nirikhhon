{
    "identifiers": [
        "require",
        "require",
        "express",
        "app",
        "express",
        "__dirname",
        "app",
        "app",
        "bodyParser",
        "app",
        "req",
        "res",
        "ip",
        "req",
        "req",
        "req",
        "req",
        "req",
        "res",
        "Users",
        "process",
        "app",
        "port",
        "require",
        "server",
        "io",
        "socket",
        "Users",
        "socket",
        "ip",
        "socket",
        "data",
        "socket",
        "data",
        "ip",
        "socket",
        "data",
        "socket",
        "data",
        "socket",
        "socket",
        "socket",
        "startIP",
        "socket",
        "startIP",
        "endIP",
        "ip",
        "IPOfSender",
        "ISentTheMessage",
        "io",
        "data",
        "usernameWithoutIP",
        "ISentTheMessage",
        "socket",
        "Users"
    ],
    "literals": [
        "'express'",
        "'body-parser'",
        "\"/public\"",
        "\"view engine\"",
        "\"ejs\"",
        "\"/\"",
        "'X-forwarded-for'",
        "\"index\"",
        "'Server has been started!'",
        "\"socket.io\"",
        "\"connection\"",
        "\"New User connected!\"",
        "'Anonymous('",
        "')'",
        "'changeUserName'",
        "'('",
        "')'",
        "\"changeUserName\"",
        "\"newMessage\"",
        "'('",
        "')'",
        "\"newMessage\"",
        "\"disconnect\"",
        "'A user disconnected!'"
    ],
    "variables": [
        "express",
        "bodyParser",
        "app",
        "Users",
        "ip",
        "port",
        "server",
        "io",
        "startIP",
        "endIP",
        "usernameWithoutIP",
        "IPOfSender",
        "ISentTheMessage"
    ],
    "comments": [
        "const User=require(\"./models/user\")",
        "Count of Users and IP address of socket",
        "Server listening (Port config)",
        "Username in socket stores IP address as well",
        "Stripping IP address from socket's username to get plain username",
        "Check whether client is the one who sent the message",
        "console.log(\"Hey \"+ip+\" \"+IPOfSender+\" \"+socket.username+\" \"+startIP+\" \"+endIP);",
        "broadcast"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}