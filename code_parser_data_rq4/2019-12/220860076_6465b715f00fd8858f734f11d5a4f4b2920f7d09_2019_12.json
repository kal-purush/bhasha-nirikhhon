{
    "identifiers": [
        "numpy",
        "np",
        "cv2",
        "os",
        "scipy",
        "io",
        "loadmat",
        "random",
        "randint",
        "json",
        "loadmat",
        "metadata_dir",
        "np",
        "asarray",
        "sorted",
        "os",
        "listdir",
        "image_dir",
        "x",
        "datatype",
        "np",
        "asarray",
        "sorted",
        "image_age",
        "i",
        "age_groups",
        "i",
        "age_groups",
        "i",
        "age_groups",
        "i",
        "age_groups",
        "i",
        "age_groups",
        "i",
        "image_age",
        "np",
        "reshape",
        "paths",
        "paths",
        "shape",
        "np",
        "reshape",
        "age_group_labels",
        "len",
        "age_group_labels",
        "np",
        "concatenate",
        "paths",
        "age_group_labels",
        "axis",
        "ages_path",
        "get_batch_metadata",
        "open",
        "filehandle",
        "json",
        "dump",
        "array",
        "tolist",
        "filehandle"
    ],
    "literals": [
        "'data/celebrity2000_meta.mat'",
        "'data/CACD2000'",
        "'celebrityData'",
        "'celebrityImageData'",
        "'ages_paths.txt'",
        "'w'"
    ],
    "variables": [
        "metadata_dir",
        "image_dir",
        "age_groups",
        "x",
        "datatype",
        "paths",
        "image_age",
        "image_age",
        "age_group_labels",
        "paths",
        "age_group_labels",
        "ages_path",
        "array"
    ],
    "comments": [
        "names = x[datatype[0]][0][0][0]",
        "identity = x[datatype[0]][0][0][1]",
        "birth = x[datatype[0]][0][0][2]",
        "rank = x[datatype[0]][0][0][3] #rank of the celebrity with same birth year in IMDB.com when the dataset was constructed",
        "lfw = x[datatype[0]][0][0][4] #whether the celebrity is in LFW dataset",
        "celeb_metadata = [datatype, names, identity, birth, rank, lfw] #array of celeb features",
        "image_metadata = [image_age, age_group_labels, image_id, image_year, image_features, image_filename] #array of image features",
        "np.random.shuffle(agesd_path)"
    ],
    "docstrings": [
        "\"\"\"\n    Gets the metadata from metadata directory and returns the metadata for both celebrities and images.\n\n        :param metadata_dir: directory of metadata\n\n        :return: two arrays of celebrity and image metadata\n    \"\"\""
    ],
    "functions": [
        "get_batch_metadata"
    ],
    "classes": []
}