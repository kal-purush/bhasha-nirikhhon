{
    "identifiers": [
        "david",
        "java",
        "util",
        "Scanner",
        "text",
        "text",
        "text",
        "text",
        "s",
        "nextLine",
        "s",
        "length",
        "res",
        "s",
        "charAt",
        "res",
        "s",
        "nextInt",
        "s",
        "ROWS",
        "COLS",
        "playground",
        "y",
        "y",
        "ROWS",
        "y",
        "x",
        "x",
        "COLS",
        "x",
        "playground",
        "y",
        "x",
        "unten",
        "unten",
        "COLS",
        "unten",
        "zahl",
        "zahl",
        "COLS",
        "zahl",
        "zahl",
        "args",
        "playground",
        "ROWS",
        "COLS",
        "y",
        "y",
        "ROWS",
        "y",
        "x",
        "x",
        "COLS",
        "x",
        "tmp",
        "x",
        "y",
        "tmp",
        "playground",
        "y",
        "x",
        "tmp",
        "playground",
        "y",
        "x",
        "playground",
        "y",
        "x",
        "printPlayGround",
        "playground",
        "column",
        "get_valid_num",
        "playground",
        "column",
        "printPlayGround",
        "playground",
        "get_zahl",
        "get_zahl",
        "scan_int",
        "get_zahl",
        "get_zahl",
        "get_zahl",
        "get_zahl",
        "playground",
        "COLS",
        "ROWS",
        "y",
        "y",
        "playground",
        "length",
        "y",
        "x",
        "x",
        "playground",
        "y",
        "length",
        "x",
        "tmp",
        "x",
        "y",
        "tmp",
        "playground",
        "y",
        "x",
        "tmp",
        "playground",
        "y",
        "x",
        "playground",
        "y",
        "x",
        "printPlayGround",
        "playground",
        "playground",
        "y",
        "y",
        "playground",
        "length",
        "y",
        "zeile",
        "playground",
        "y",
        "x",
        "x",
        "zeile",
        "length",
        "x",
        "zeile",
        "x"
    ],
    "literals": [
        "\"nun kommen die DaTeN\"",
        "\"|  \"",
        "\"\"",
        "\"  \"",
        "\"|\"",
        "\"\\n\"",
        "\"___\"",
        "\"\\n \"",
        "\"  \"",
        "\"\"",
        "\"Wählen Sie eine Feldnummer (0-9):\"",
        "\"Deine Eingabe ist \"",
        "\". Liegt die Zahl außerhalb des Geltungsbereich, erscheint erneut die Eingabeaufforderung\"",
        "\"   :\"",
        "\"\"",
        "\"  \"",
        "\"\""
    ],
    "variables": [
        "get_zahl"
    ],
    "comments": [
        "vor allem",
        "vor der Datenzeile",
        "Zwischen den Daten",
        "nach der Datenzeile",
        "Absatz",
        "nach allem",
        "Absatz + Leerzeichen",
        "for(int unten =0; unten<=COLS; unten++) {",
        "print(\"____\");",
        "}",
        "Absatz am Ende",
        "Beispieldaten werdden erzeugt",
        "erste Eingabe speichern",
        "Methoden",
        "1. scan_char aufrufen",
        "2. Wert überpfüfen, muss zwischen 0-9 liegen",
        "Bei Fehler, Fehlerausgabe machen, so das der Spieler neu eingeben muss ( also zurück zu 1.)",
        "3. char in int umwandeln ( also '0' -> 0 und nicht ascii 65 oder was auch immer) (kann auch vor 2.)",
        "4. Ergebnis zurückgeben (return)",
        "write your code here",
        "int[][] matrix = {{1, 2, 3}, {4, 5, 6}};",
        "Erstellung der Matrix -->Koordinatensystem ist obenlinks!!!",
        "Anzahl der \"Schranksysteme\"",
        "Anzahl der Fächer des Schrankelements an der Stelle y",
        "Beispieldaten werdden erzeugt",
        "Funktionsaufruf",
        "Ausgeben des Wertes aus Zeile 3 Spalte 9",
        "jede Zeile wird durchgelaufen",
        "Schrank Y wird \"Zeile\" zugewiessen (Wichtig, nicht die Schublade und keine Kopie!!!)",
        "Es wird jede Schublade x des Schrankes y durchlaufen",
        "Ausgabe Inhald der Schublade x"
    ],
    "docstrings": [
        "while(true) {\n            println(\"Was ist dein Liebligsbuchstabe oder Ziffer?\");\n            char liebling = scan_char();\n            println(\"Aso, also \" + liebling);\n            if (liebling == ' ') {\n                println(\"Spinner :D\");\n            }\n        }"
    ],
    "functions": [
        "scan_char",
        "scan_int",
        "printPlayGround",
        "main",
        "get_valid_num",
        "beispiele"
    ],
    "classes": [
        "Main"
    ]
}