{
    "identifiers": [
        "ArrowFunction",
        "FunctionDeclaration",
        "FunctionExpression",
        "FunctionLikeDeclaration",
        "GetAccessorDeclaration",
        "MethodDeclaration",
        "Node",
        "SourceFile",
        "SyntaxKind",
        "Type",
        "TypeChecker",
        "forEachChild",
        "isArrowFunction",
        "isBinaryExpression",
        "isCallExpression",
        "isClassDeclaration",
        "isFunctionDeclaration",
        "isFunctionExpression",
        "isGetAccessorDeclaration",
        "isMethodDeclaration",
        "isNewExpression",
        "isPropertyDeclaration",
        "isReturnStatement",
        "isTemplateSpan",
        "isVariableDeclaration",
        "getChildOfKind",
        "isAssignmentKind",
        "createRule",
        "getFunctionLikeParent",
        "TSESLint",
        "ParserServices",
        "messages",
        "createRule",
        "context",
        "typeChecker",
        "sourceFile",
        "callback",
        "node",
        "isArrowFunction",
        "node",
        "isFunctionDeclaration",
        "node",
        "isFunctionExpression",
        "node",
        "isMethodDeclaration",
        "node",
        "isGetAccessorDeclaration",
        "node",
        "node",
        "context",
        "parserServices",
        "node",
        "node",
        "forEachChild",
        "node",
        "callback",
        "forEachChild",
        "sourceFile",
        "callback",
        "node",
        "nodeType",
        "node",
        "error",
        "nodeType",
        "callSignature",
        "callSignature",
        "nodeType",
        "returnType",
        "returnTypeString",
        "PROMISE_RETURN_TYPE_REGEX",
        "isModifiedWithAsync",
        "node",
        "promiseMatchResult",
        "primitiveReturnType",
        "promiseMatchResult",
        "complexTypeFixer",
        "PRIMITIVE_TYPE_STRING_SET",
        "primitiveReturnType",
        "returnTypeString",
        "node",
        "TSESLint",
        "node",
        "node",
        "missingReturnTypeString",
        "getChildOfKind",
        "node",
        "SyntaxKind",
        "closeParenToken",
        "fixer",
        "fixer",
        "closeParenToken",
        "closeParenToken",
        "missingReturnTypeString",
        "node",
        "node",
        "isFunctionDeclaration",
        "node",
        "isMethodDeclaration",
        "node",
        "isClassDeclaration",
        "node",
        "node",
        "node",
        "node",
        "parent",
        "isVariableDeclaration",
        "parent",
        "isPropertyDeclaration",
        "parent",
        "parent",
        "isCallExpression",
        "parent",
        "isTemplateSpan",
        "parent",
        "isNewExpression",
        "parent",
        "isBinaryExpression",
        "parent",
        "isAssignmentKind",
        "parent",
        "isArrowFunction",
        "parent",
        "parent",
        "isReturnStatement",
        "parent",
        "getFunctionLikeParent",
        "parent",
        "functionLikeParent",
        "isReturnTypeRelatedFunctionLikeDeclaration",
        "functionLikeParent",
        "functionLikeParent",
        "parent",
        "node",
        "node",
        "isFunctionDeclaration",
        "node",
        "isFunctionExpression",
        "node",
        "isArrowFunction",
        "node",
        "isMethodDeclaration",
        "node",
        "isGetAccessorDeclaration",
        "node",
        "node",
        "modifiers",
        "modifiers",
        "modifier",
        "modifiers",
        "modifier",
        "SyntaxKind",
        "context",
        "TSESLint",
        "context",
        "context",
        "context",
        "context",
        "getParserServices",
        "context",
        "ExplicitReturnTypeWalker",
        "parserServices",
        "parserServices",
        "context"
    ],
    "literals": [
        "'typescript'",
        "'tsutils'",
        "'./@utils'",
        "'@typescript-eslint/experimental-utils'",
        "'This function requires explicit return type.'",
        "'explicit-return-type'",
        "'suggestion'",
        "''",
        "'Stylistic Issues'",
        "'error'",
        "'code'",
        "'object'",
        "'boolean'",
        "'boolean'",
        "'number'",
        "'string'",
        "'array'",
        "'tuple'",
        "'null'",
        "'undefined'",
        "'never'",
        "'void'",
        "'explicitReturnTypeRequired'",
        "string",
        ": ${missingReturnTypeString}",
        "string",
        "'You have used a rule which requires parserServices to be generated. You must therefore provide a value for the \"parserOptions.project\" property for @typescript-eslint/parser.'"
    ],
    "variables": [
        "messages",
        "explicitReturnTypeRule",
        "options",
        "PRIMITIVE_TYPE_STRING_SET",
        "PROMISE_RETURN_TYPE_REGEX",
        "callback",
        "nodeType",
        "callSignature",
        "returnType",
        "returnTypeString",
        "primitiveReturnType",
        "returnTypeString",
        "promiseMatchResult",
        "options",
        "missingReturnTypeString",
        "closeParenToken",
        "parent",
        "functionLikeParent",
        "node",
        "parserServices"
    ],
    "comments": [
        "function foo() {}",
        "class Foo {bar() {}}",
        "let foo: Foo = () => {};",
        "class Foo {bar: Bar = () => {};}",
        "[].map(() => {});",
        "`${() => {}}`;",
        "new Foo(() => {})",
        "foo.bar = () => {};",
        "foo: () => () => {};",
        "return () => {};",
        "Actually return statement should be invalid here in setter and",
        "constructor."
    ],
    "docstrings": [
        "* The user needs to have configured \"project\" in their parserOptions\n         * for @typescript-eslint/parser"
    ],
    "functions": [
        "create",
        "walk",
        "getMissingReturnTypeString",
        "buildFixer",
        "checkReturnType",
        "checkExpressionType",
        "isReturnTypeRelatedFunctionLikeDeclaration",
        "isModifiedWithAsync",
        "getParserServices"
    ],
    "classes": [
        "ExplicitReturnTypeWalker"
    ]
}