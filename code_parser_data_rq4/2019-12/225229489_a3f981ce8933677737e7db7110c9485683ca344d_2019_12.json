{
    "identifiers": [
        "express",
        "Router",
        "Request",
        "Response",
        "bodyParser",
        "Car",
        "cars",
        "cars_list",
        "express",
        "app",
        "bodyParser",
        "app",
        "req",
        "res",
        "res",
        "app",
        "req",
        "res",
        "req",
        "name",
        "res",
        "res",
        "name",
        "app",
        "req",
        "res",
        "req",
        "name",
        "res",
        "res",
        "name",
        "app",
        "req",
        "res",
        "req",
        "name",
        "res",
        "res",
        "name",
        "app",
        "req",
        "res",
        "req",
        "make",
        "cars_list",
        "cars",
        "car",
        "car",
        "make",
        "res",
        "cars_list",
        "app",
        "req",
        "res",
        "req",
        "id",
        "res",
        "cars",
        "car",
        "car",
        "id",
        "car",
        "car",
        "res",
        "res",
        "car",
        "app",
        "req",
        "res",
        "req",
        "id",
        "model",
        "cost",
        "res",
        "make",
        "model",
        "cost",
        "id",
        "cars",
        "new_car",
        "res",
        "new_car",
        "app",
        "port",
        "port"
    ],
    "literals": [
        "'express'",
        "'body-parser'",
        "'./cars'",
        "\"/\"",
        "\"Welcome to the Cloud!\"",
        "\"/persons/:name\"",
        "name is required",
        "Welcome to the Cloud, ${name}!",
        "\"/persons/\"",
        "name is required",
        "Welcome to the Cloud, ${name}!",
        "\"/persons\"",
        "name is required",
        "Welcome to the Cloud, ${name}!",
        "\"/cars/\"",
        "\"/cars/:id\"",
        "id is required",
        "car is not found",
        "\"/cars/\"",
        "make, type, model, cost, id are required",
        "server running http://localhost:${ port }",
        "press CTRL+C to stop server"
    ],
    "variables": [
        "cars",
        "cars_list",
        "app",
        "port",
        "cars_list",
        "cars",
        "car",
        "new_car"
    ],
    "comments": [
        "Create an express applicaiton",
        "default port to listen",
        "use middleware so post bodies",
        "are accessable as req.body.{{variable}}",
        "Root URI call",
        "Get a greeting to a specific person",
        "to demonstrate routing parameters",
        "> try it {{host}}/persons/:the_name",
        "Get a greeting to a specific person to demonstrate req.query",
        "> try it {{host}}/persons?name=the_name",
        "Post a greeting to a specific person",
        "to demonstrate req.body",
        "> try it by posting {\"name\": \"the_name\" } as",
        "an application/json body to {{host}}/persons",
        "@TODO Add an endpoint to get a list of cars",
        "it should be filterable by make with a query paramater",
        "destruct our query paramaters",
        "if we have an optional query paramater, filter by it",
        "return the resulting list along with 200 success",
        "@TODO Add an endpoint to get a specific car",
        "it should require id",
        "it should fail gracefully if no matching car is found",
        "destruct our path params",
        "check to make sure the id is set",
        "respond with an error if not",
        "try to find the car by id",
        "respond not found, if we do not have this id",
        "return the car with a sucess status code",
        "@TODO Add an endpoint to post a new car to our list",
        "it should require id, type, model, and cost",
        "destruct our body payload for our variables",
        "check to make sure all required variables are set",
        "respond with an error if not",
        "create a new car instance",
        "add this car to our local variable",
        "send the complete car object as a response",
        "along with 201 - creation success",
        "Start the Server"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}