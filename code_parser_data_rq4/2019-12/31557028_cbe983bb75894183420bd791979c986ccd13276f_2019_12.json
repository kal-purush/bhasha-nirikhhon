{
    "identifiers": [
        "logging",
        "galaxy",
        "tool_util",
        "deps",
        "views",
        "galaxy",
        "web",
        "expose_api",
        "require_admin",
        "galaxy",
        "webapps",
        "controller",
        "BaseAPIController",
        "logging",
        "getLogger",
        "BaseAPIController",
        "app",
        "ContainerResolutionAPIController",
        "app",
        "views",
        "ContainerResolutionView",
        "app",
        "expose_api",
        "require_admin",
        "trans",
        "kwd",
        "_view",
        "index",
        "expose_api",
        "require_admin",
        "trans",
        "id",
        "_view",
        "show",
        "id",
        "expose_api",
        "require_admin",
        "trans",
        "index",
        "kwds",
        "_view",
        "resolve",
        "index",
        "index",
        "kwds",
        "expose_api",
        "require_admin",
        "trans",
        "kwds",
        "_view",
        "resolve_toolbox",
        "kwds",
        "expose_api",
        "require_admin",
        "trans",
        "payload",
        "kwds",
        "kwds",
        "update",
        "payload",
        "_view",
        "resolve_toolbox",
        "kwds",
        "expose_api",
        "require_admin",
        "trans",
        "payload",
        "kwds",
        "kwds",
        "update",
        "payload",
        "_view",
        "resolve",
        "kwds"
    ],
    "literals": [
        "\"install\"",
        "\"install\""
    ],
    "variables": [
        "log",
        "_view",
        "kwds",
        "kwds"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\nAPI operations allowing clients to manage tool dependencies.\n\"\"\"",
        "\"\"\"\n        GET /api/container_resolvers\n        \"\"\"",
        "\"\"\"\n        GET /api/container_resolvers/<id>\n        \"\"\"",
        "\"\"\"\n        GET /api/container_resolvers/resolve\n        GET /api/container_resolvers/{index}/resolve\n\n        Resolve described requirement against specified container resolvers.\n\n        :type   tool_id:            str\n        :param  tool_id:            tool_id to resolve against containers\n        :type   requirements_only:  boolean\n        :param  requirements_only:  ignore tool containers, properties - just search based on tool requirements\n                                    set to True to mimic default behavior of tool dependency API.\n        :type   index:              int\n        :param  index:              index of the container resolver, if unset resolvers searched in order\n        :type   container_type:     str\n        :param  container_type:     restrict resolution to specified container type (e.g. 'docker', 'singularity')\n        :type   resolver_type:      str\n        :param  resolver_type:      restrict resolution to specified resolver type (e.g. 'build_mulled', 'explicit')\n        :type   install:            boolean\n        :param  install:            allow installation of new containers (for build_mulled* containers) the way job resolution\n                                    will operate, defaults to False\n        :rtype:     dict\n        :returns:   a dictified description of the container dependency, with attribute\n                    ``dependency_type: None`` if no match was found.\n        \"\"\"",
        "\"\"\"\n        GET /api/container_resolvers/toolbox\n        GET /api/container_resolvers/{index}/toolbox\n\n        Apply resolve() to each tool in the toolbox and return the results as a list. See\n        documentation for resolve() for a description of parameters that can be consumed and\n        a description of the resulting items.\n\n        :type   tool_ids:            str\n        :param  tool_ids:            tool_ids to filter toolbox on\n\n        :rtype:     list\n        :returns:   list of items returned from resolve()\n        \"\"\"",
        "\"\"\"\n        POST /api/container_resolvers/toolbox/install\n        POST /api/container_resolvers/{index}/toolbox/install\n\n        Do the resolution of dependencies like resolve_toolbox(), but allow building\n        and installing new containers. payload of POST body maybe contain same parameters\n        as resolve_toolbox query parameters.\n\n        :rtype:     list\n        :returns:   list of items returned from resolve()\n        \"\"\"",
        "\"\"\"\n        POST /api/container_resolvers/resolve/install\n        POST /api/container_resolvers/{index}/resolve/install\n\n        Do the resolution of dependencies like resolve(), but allow building\n        and installing new containers during installation. payload of POST body maybe\n        contain same parameters as resolve query parameters.\n\n        :rtype:     dict\n        :returns:   a dictified description of the container dependency, with attribute\n                    ``dependency_type: None`` if no match was found.\n        \"\"\""
    ],
    "functions": [
        "index",
        "show",
        "resolve",
        "resolve_toolbox",
        "resolve_toolbox_with_install",
        "resolve_with_install"
    ],
    "classes": [
        "ContainerResolutionAPIController"
    ]
}