{
    "identifiers": [
        "require",
        "require",
        "syncStateUpdate",
        "rehydrateApplicationState",
        "dateReviver",
        "afield",
        "key",
        "value",
        "value",
        "value",
        "TypeB",
        "value",
        "TypeA",
        "value",
        "value",
        "value",
        "value",
        "dateReviver",
        "key",
        "value",
        "key",
        "value",
        "key",
        "key",
        "value",
        "a",
        "a",
        "json",
        "TypeA",
        "json",
        "json",
        "json",
        "TypeB",
        "json",
        "astring",
        "anumber",
        "adate",
        "aclass",
        "key",
        "key",
        "index",
        "key",
        "key",
        "key",
        "data",
        "key",
        "data",
        "key",
        "index",
        "describe",
        "TypeA",
        "TypeB",
        "t1",
        "TypeA",
        "TypeB",
        "t1Filtered",
        "t1",
        "initialState",
        "it",
        "MockStorage",
        "syncStateUpdate",
        "initialState",
        "s",
        "s",
        "expect",
        "raw",
        "t1Json",
        "rehydrateApplicationState",
        "s",
        "expect",
        "finalState",
        "initialStateJson",
        "expect",
        "t1",
        "TypeA",
        "expect",
        "finalState",
        "TypeA",
        "it",
        "MockStorage",
        "t1",
        "syncStateUpdate",
        "initialState",
        "keys",
        "s",
        "s",
        "expect",
        "raw",
        "t1Filtered",
        "rehydrateApplicationState",
        "keys",
        "s",
        "expect",
        "finalState",
        "t1Filtered",
        "expect",
        "t1",
        "TypeA",
        "expect",
        "finalState",
        "TypeA",
        "it",
        "MockStorage",
        "t1",
        "TypeA",
        "syncStateUpdate",
        "initialState",
        "keys",
        "s",
        "rehydrateApplicationState",
        "keys",
        "s",
        "expect",
        "finalState",
        "initialState",
        "expect",
        "finalState",
        "TypeA",
        "expect",
        "finalState",
        "TypeB",
        "it",
        "MockStorage",
        "t1",
        "TypeA",
        "syncStateUpdate",
        "initialState",
        "keys",
        "s",
        "rehydrateApplicationState",
        "keys",
        "s",
        "expect",
        "finalState",
        "initialState",
        "expect",
        "finalState",
        "TypeA",
        "expect",
        "finalState",
        "TypeB",
        "it",
        "MockStorage",
        "t1",
        "syncStateUpdate",
        "initialState",
        "keys",
        "s",
        "s",
        "expect",
        "raw",
        "t1Filtered",
        "rehydrateApplicationState",
        "keys",
        "s",
        "expect",
        "finalState",
        "t1Filtered",
        "expect",
        "t1",
        "TypeA",
        "expect",
        "finalState",
        "TypeA",
        "it",
        "MockStorage",
        "t1",
        "TypeA",
        "syncStateUpdate",
        "initialState",
        "keys",
        "s",
        "rehydrateApplicationState",
        "keys",
        "s",
        "expect",
        "finalState",
        "t1Filtered",
        "expect",
        "t1",
        "TypeA",
        "expect",
        "finalState",
        "TypeA",
        "it",
        "MockStorage",
        "t1",
        "syncStateUpdate",
        "initialState",
        "keys",
        "s",
        "s",
        "expect",
        "raw",
        "rehydrateApplicationState",
        "keys",
        "s",
        "expect",
        "finalState",
        "expect",
        "t1",
        "TypeA",
        "expect",
        "finalState",
        "TypeA",
        "it",
        "MockStorage",
        "t1",
        "TypeA",
        "TypeA",
        "syncStateUpdate",
        "initialState",
        "keys",
        "s",
        "rehydrateApplicationState",
        "keys",
        "s",
        "expect",
        "finalState",
        "initialStateJson",
        "expect",
        "finalState",
        "TypeA",
        "expect",
        "finalState",
        "TypeB"
    ],
    "literals": [
        "'es6-shim'",
        "'reflect-metadata'",
        "'../src/index'",
        "string",
        "string",
        "'object'",
        "string",
        "\"anumber\"",
        "\"adate\"",
        "string",
        "string",
        "\"Not Implemented\"",
        "string",
        "string",
        "\"Not Implemented\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'ngrxLocalStorage'",
        "\"Testing\"",
        "'1968-11-16T12:30:00'",
        "\"Nested Class\"",
        "\"Testing\"",
        "\"Nested Class\"",
        "\"Testing\"",
        "\"1968-11-16T12:30:00.000Z\"",
        "'simple'",
        "\"state\"",
        "\"state\"",
        "\"state\"",
        "'filtered'",
        "\"astring\"",
        "\"aclass\"",
        "\"state\"",
        "'reviver'",
        "'reviver-object'",
        "'filter-object'",
        "\"astring\"",
        "\"aclass\"",
        "\"filtered\"",
        "'replacer-function'",
        "'replacer-array'",
        "\"astring\"",
        "\"adate\"",
        "\"anumber\"",
        "\"replacer\"",
        "\"\"",
        "'{  \"astring\": \"Testing\",  \"adate\": \"1968-11-16T12:30:00.000Z\",  \"anumber\": 3.14159\\}'",
        "'{\"replacer\":{\"astring\":\"Testing\",\"adate\":\"1968-11-16T12:30:00.000Z\",\"anumber\":3.14159}}'",
        "'serializer'"
    ],
    "variables": [
        "beforeEachProviders",
        "it",
        "describe",
        "expect",
        "inject",
        "t1",
        "t1Json",
        "t1Filtered",
        "t1FilteredJson",
        "t1Simple",
        "initialState",
        "initialStateJson",
        "s",
        "raw",
        "finalState",
        "s",
        "initialState",
        "keys",
        "raw",
        "finalState",
        "s",
        "initialState",
        "keys",
        "finalState",
        "s",
        "initialState",
        "keys",
        "finalState",
        "s",
        "initialState",
        "keys",
        "raw",
        "finalState",
        "s",
        "initialState",
        "keys",
        "finalState",
        "s",
        "initialState",
        "keys",
        "raw",
        "finalState",
        "s",
        "initialState",
        "keys",
        "finalState"
    ],
    "comments": [
        "Very simple classes to test serialization options.  They cover string, number, date, and nested classes",
        "The top level class has static functions to help test reviver, replacer, serialize and deserialize",
        "This tests a very simple state object syncing to mock Storage",
        "Since we're not specifiying anything for rehydration, the roundtrip",
        "loses type information...",
        "Use the filter by field option to round-trip an object while",
        "filtering out the anumber and adate filed",
        "Since we're not specifiying anything for rehydration, the roundtrip",
        "loses type information...",
        "Use the reviver option to restore including classes",
        "Use the reviver in the object options to restore including classes",
        "Use the filter by field option to round-trip an object while",
        "filtering out the anumber and adate filed",
        "Since we're not specifiying anything for rehydration, the roundtrip",
        "loses type information...",
        "Use the replacer function to filter",
        "Use the replacer option to do some custom filtering of the class",
        "Note that this completely loses the idea that the revived object ever contained the",
        "fields not specified by the replacer, so we have to do some custom comparing",
        "We want to validate the space parameter, but don't want to trip up on OS specific newlines, so filter the newlines out and",
        "compare against the literal string.",
        "Use the serialize/deserialize options to save and restore including classes"
    ],
    "docstrings": [],
    "functions": [
        "reviver",
        "replacer",
        "serialize",
        "deserialize",
        "clear",
        "getItem",
        "key",
        "removeItem",
        "setItem"
    ],
    "classes": [
        "TypeB",
        "TypeA",
        "MockStorage"
    ]
}