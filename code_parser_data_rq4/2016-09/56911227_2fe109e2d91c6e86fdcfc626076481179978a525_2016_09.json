{
    "identifiers": [
        "EventEmitter",
        "Duplex",
        "redis",
        "command",
        "err",
        "reply",
        "args",
        "cb",
        "arg",
        "args",
        "cb",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "arg5",
        "arg6",
        "cb",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "arg5",
        "cb",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "cb",
        "arg1",
        "arg2",
        "arg3",
        "cb",
        "arg1",
        "arg2",
        "cb",
        "arg1",
        "cb",
        "args",
        "key",
        "args",
        "cb",
        "key",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "arg5",
        "arg6",
        "cb",
        "key",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "arg5",
        "cb",
        "key",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "cb",
        "key",
        "arg1",
        "arg2",
        "arg3",
        "cb",
        "key",
        "arg1",
        "arg2",
        "cb",
        "key",
        "arg1",
        "cb",
        "key",
        "args",
        "args",
        "args",
        "cb",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "arg5",
        "arg6",
        "cb",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "arg5",
        "cb",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "cb",
        "arg1",
        "arg2",
        "arg3",
        "cb",
        "arg1",
        "arg2",
        "cb",
        "arg1",
        "cb",
        "args",
        "key",
        "arg",
        "key",
        "cb",
        "key",
        "args",
        "cb",
        "key",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "arg5",
        "arg6",
        "cb",
        "key",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "arg5",
        "cb",
        "key",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "cb",
        "key",
        "arg1",
        "arg2",
        "arg3",
        "cb",
        "key",
        "arg1",
        "arg2",
        "cb",
        "key",
        "arg1",
        "cb",
        "key",
        "args",
        "args",
        "cb",
        "arg",
        "args",
        "cb",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "arg5",
        "arg6",
        "cb",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "arg5",
        "cb",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "cb",
        "arg1",
        "arg2",
        "arg3",
        "cb",
        "arg1",
        "arg2",
        "cb",
        "args",
        "cb",
        "cb",
        "cb",
        "section",
        "cb",
        "cb",
        "section",
        "cb",
        "callback",
        "message",
        "callback",
        "channel",
        "value",
        "cb",
        "password",
        "callback",
        "password",
        "callback",
        "key",
        "value",
        "cb",
        "key",
        "value",
        "cb",
        "cb",
        "cb",
        "cb",
        "cb",
        "key",
        "cb",
        "key",
        "start",
        "end",
        "cb",
        "key",
        "cb",
        "key",
        "start",
        "end",
        "cb",
        "operation",
        "destkey",
        "key1",
        "key2",
        "key3",
        "cb",
        "operation",
        "destkey",
        "key1",
        "key2",
        "cb",
        "operation",
        "destkey",
        "key",
        "cb",
        "operation",
        "destkey",
        "args",
        "operation",
        "destkey",
        "key1",
        "key2",
        "key3",
        "cb",
        "operation",
        "destkey",
        "key1",
        "key2",
        "cb",
        "operation",
        "destkey",
        "key",
        "cb",
        "operation",
        "destkey",
        "args",
        "key",
        "bit",
        "start",
        "end",
        "cb",
        "key",
        "bit",
        "start",
        "cb",
        "key",
        "bit",
        "cb",
        "key",
        "bit",
        "start",
        "end",
        "cb",
        "key",
        "bit",
        "start",
        "cb",
        "key",
        "bit",
        "cb",
        "source",
        "destination",
        "timeout",
        "cb",
        "source",
        "destination",
        "timeout",
        "cb",
        "cb",
        "cb",
        "cb",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "key",
        "decrement",
        "cb",
        "key",
        "decrement",
        "cb",
        "cb",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "message",
        "cb",
        "message",
        "cb",
        "key",
        "seconds",
        "cb",
        "key",
        "seconds",
        "cb",
        "key",
        "timestamp",
        "cb",
        "key",
        "timestamp",
        "cb",
        "cb",
        "cb",
        "cb",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "key",
        "offset",
        "cb",
        "key",
        "offset",
        "cb",
        "key",
        "start",
        "end",
        "cb",
        "key",
        "start",
        "end",
        "cb",
        "key",
        "value",
        "cb",
        "key",
        "value",
        "cb",
        "key",
        "field",
        "cb",
        "key",
        "field",
        "cb",
        "key",
        "field",
        "cb",
        "key",
        "field",
        "cb",
        "key",
        "cb",
        "key",
        "key",
        "cb",
        "key",
        "key",
        "field",
        "increment",
        "cb",
        "key",
        "field",
        "increment",
        "cb",
        "key",
        "field",
        "increment",
        "cb",
        "key",
        "field",
        "increment",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "key",
        "field",
        "value",
        "cb",
        "key",
        "field",
        "value",
        "cb",
        "key",
        "field",
        "value",
        "cb",
        "key",
        "field",
        "value",
        "cb",
        "key",
        "field",
        "cb",
        "key",
        "field",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "key",
        "increment",
        "cb",
        "key",
        "increment",
        "cb",
        "key",
        "increment",
        "cb",
        "key",
        "increment",
        "cb",
        "pattern",
        "cb",
        "pattern",
        "cb",
        "cb",
        "cb",
        "key",
        "index",
        "cb",
        "key",
        "index",
        "cb",
        "key",
        "dir",
        "pivot",
        "value",
        "cb",
        "key",
        "dir",
        "pivot",
        "value",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "key",
        "value",
        "cb",
        "key",
        "value",
        "cb",
        "key",
        "start",
        "stop",
        "cb",
        "key",
        "start",
        "stop",
        "cb",
        "key",
        "count",
        "value",
        "cb",
        "key",
        "count",
        "value",
        "cb",
        "key",
        "index",
        "value",
        "cb",
        "key",
        "index",
        "value",
        "cb",
        "key",
        "start",
        "stop",
        "cb",
        "key",
        "start",
        "stop",
        "cb",
        "key",
        "db",
        "key",
        "db",
        "key",
        "cb",
        "key",
        "cb",
        "key",
        "milliseconds",
        "cb",
        "key",
        "milliseconds",
        "cb",
        "key",
        "millisecondsTimestamp",
        "cb",
        "key",
        "millisecondsTimestamp",
        "cb",
        "key",
        "milliseconds",
        "value",
        "cb",
        "key",
        "milliseconds",
        "value",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "cb",
        "cb",
        "cb",
        "cb",
        "cb",
        "cb",
        "cb",
        "cb",
        "key",
        "newkey",
        "cb",
        "key",
        "newkey",
        "cb",
        "key",
        "newkey",
        "cb",
        "key",
        "newkey",
        "cb",
        "key",
        "ttl",
        "serializedValue",
        "cb",
        "key",
        "ttl",
        "serializedValue",
        "cb",
        "cb",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "source",
        "destination",
        "cb",
        "source",
        "destination",
        "cb",
        "key",
        "value",
        "cb",
        "key",
        "value",
        "cb",
        "cb",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "index",
        "cb",
        "index",
        "cb",
        "key",
        "value",
        "cb",
        "key",
        "value",
        "flag",
        "cb",
        "key",
        "value",
        "mode",
        "duration",
        "cb",
        "key",
        "value",
        "mode",
        "duration",
        "flag",
        "cb",
        "key",
        "value",
        "cb",
        "key",
        "value",
        "flag",
        "cb",
        "key",
        "value",
        "mode",
        "duration",
        "cb",
        "key",
        "value",
        "mode",
        "duration",
        "flag",
        "cb",
        "key",
        "offset",
        "value",
        "cb",
        "key",
        "offset",
        "value",
        "cb",
        "key",
        "seconds",
        "value",
        "cb",
        "key",
        "seconds",
        "value",
        "cb",
        "key",
        "value",
        "cb",
        "key",
        "value",
        "cb",
        "key",
        "offset",
        "value",
        "cb",
        "key",
        "offset",
        "value",
        "cb",
        "key",
        "member",
        "cb",
        "key",
        "member",
        "cb",
        "host",
        "port",
        "cb",
        "host",
        "port",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "source",
        "destination",
        "member",
        "cb",
        "source",
        "destination",
        "member",
        "cb",
        "key",
        "cb",
        "key",
        "count",
        "cb",
        "key",
        "cb",
        "key",
        "count",
        "cb",
        "key",
        "cb",
        "key",
        "count",
        "cb",
        "key",
        "cb",
        "key",
        "count",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "cb",
        "cb",
        "cb",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "cb",
        "cb",
        "numslaves",
        "timeout",
        "cb",
        "numslaves",
        "timeout",
        "cb",
        "key",
        "cb",
        "key",
        "cb",
        "key",
        "min",
        "max",
        "cb",
        "key",
        "min",
        "max",
        "cb",
        "key",
        "increment",
        "member",
        "cb",
        "key",
        "increment",
        "member",
        "cb",
        "key",
        "min",
        "max",
        "cb",
        "key",
        "min",
        "max",
        "cb",
        "key",
        "start",
        "stop",
        "cb",
        "key",
        "start",
        "stop",
        "withscores",
        "cb",
        "key",
        "start",
        "stop",
        "cb",
        "key",
        "start",
        "stop",
        "withscores",
        "cb",
        "key",
        "min",
        "max",
        "cb",
        "key",
        "min",
        "max",
        "limit",
        "offset",
        "count",
        "cb",
        "key",
        "min",
        "max",
        "cb",
        "key",
        "min",
        "max",
        "limit",
        "offset",
        "count",
        "cb",
        "key",
        "min",
        "max",
        "cb",
        "key",
        "min",
        "max",
        "limit",
        "offset",
        "count",
        "cb",
        "key",
        "min",
        "max",
        "cb",
        "key",
        "min",
        "max",
        "limit",
        "offset",
        "count",
        "cb",
        "key",
        "min",
        "max",
        "cb",
        "key",
        "min",
        "max",
        "withscores",
        "cb",
        "key",
        "min",
        "max",
        "limit",
        "offset",
        "count",
        "cb",
        "key",
        "min",
        "max",
        "withscores",
        "limit",
        "offset",
        "count",
        "cb",
        "key",
        "min",
        "max",
        "cb",
        "key",
        "min",
        "max",
        "withscores",
        "cb",
        "key",
        "min",
        "max",
        "limit",
        "offset",
        "count",
        "cb",
        "key",
        "min",
        "max",
        "withscores",
        "limit",
        "offset",
        "count",
        "cb",
        "key",
        "member",
        "cb",
        "key",
        "member",
        "cb",
        "key",
        "min",
        "max",
        "cb",
        "key",
        "min",
        "max",
        "cb",
        "key",
        "start",
        "stop",
        "cb",
        "key",
        "start",
        "stop",
        "cb",
        "key",
        "min",
        "max",
        "cb",
        "key",
        "min",
        "max",
        "cb",
        "key",
        "start",
        "stop",
        "cb",
        "key",
        "start",
        "stop",
        "withscores",
        "cb",
        "key",
        "start",
        "stop",
        "cb",
        "key",
        "start",
        "stop",
        "withscores",
        "cb",
        "key",
        "min",
        "max",
        "cb",
        "key",
        "min",
        "max",
        "withscores",
        "cb",
        "key",
        "min",
        "max",
        "limit",
        "offset",
        "count",
        "cb",
        "key",
        "min",
        "max",
        "withscores",
        "limit",
        "offset",
        "count",
        "cb",
        "key",
        "min",
        "max",
        "cb",
        "key",
        "min",
        "max",
        "withscores",
        "cb",
        "key",
        "min",
        "max",
        "limit",
        "offset",
        "count",
        "cb",
        "key",
        "min",
        "max",
        "withscores",
        "limit",
        "offset",
        "count",
        "cb",
        "key",
        "member",
        "cb",
        "key",
        "member",
        "cb",
        "key",
        "member",
        "cb",
        "key",
        "member",
        "cb",
        "options",
        "listener",
        "channel",
        "message",
        "listener",
        "pattern",
        "channel",
        "message",
        "listener",
        "channel",
        "message",
        "listener",
        "pattern",
        "channel",
        "message",
        "listener",
        "channel",
        "count",
        "listener",
        "pattern",
        "count",
        "listener",
        "channel",
        "count",
        "listener",
        "pattern",
        "count",
        "listener",
        "args",
        "flush",
        "options",
        "cb",
        "command",
        "args",
        "cb",
        "command",
        "args",
        "cb",
        "args",
        "args",
        "args",
        "args",
        "cb",
        "cb",
        "cb",
        "cb",
        "createClient",
        "port",
        "host",
        "options",
        "createClient",
        "unix_socket",
        "options",
        "createClient",
        "redis_url",
        "options",
        "createClient",
        "options",
        "err",
        "reply",
        "redis"
    ],
    "literals": [
        "'redis'",
        "'events'",
        "'stream'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'OK'",
        "'OK'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'OK'",
        "'OK'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'BEFORE'",
        "'AFTER'",
        "string",
        "string",
        "string",
        "string",
        "'BEFORE'",
        "'AFTER'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'OK'",
        "string",
        "string",
        "'OK'",
        "string",
        "'OK'",
        "string",
        "'OK'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'OK'",
        "string",
        "string",
        "'OK'",
        "string",
        "string",
        "string",
        "string",
        "'OK'",
        "'OK'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'OK'",
        "string",
        "string",
        "'OK'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'OK'",
        "string",
        "string",
        "'OK'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'OK'",
        "string",
        "string",
        "string",
        "'OK'",
        "string",
        "string",
        "string",
        "'OK'",
        "string",
        "string",
        "string",
        "string",
        "'OK'",
        "string",
        "string",
        "'OK'",
        "string",
        "string",
        "string",
        "'OK'",
        "string",
        "string",
        "string",
        "'OK'",
        "string",
        "string",
        "string",
        "string",
        "'OK'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'OK'",
        "'OK'",
        "string",
        "'OK'",
        "string",
        "'OK'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'message'",
        "string",
        "string",
        "'pmessage'",
        "string",
        "string",
        "string",
        "'message_buffer'",
        "string",
        "string",
        "'pmessage_buffer'",
        "string",
        "string",
        "string",
        "'subscribe'",
        "string",
        "'psubscribe'",
        "string",
        "'unsubscribe'",
        "string",
        "'punsubscribe'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [
        "RedisClient",
        "Multi",
        "debug_mode"
    ],
    "comments": [
        "Generated by typings",
        "Source: index.d.ts"
    ],
    "docstrings": [
        "* Listen for all requests received by the server in real time.",
        "* Get information and statistics about the server.",
        "* Ping the server.",
        "* Post a message to a channel.",
        "* Authenticate to the server.",
        "* KILL - Kill the connection of a client.\n     * LIST - Get the list of client connections.\n     * GETNAME - Get the current connection name.\n     * PAUSE - Stop processing commands from clients for some time.\n     * REPLY - Instruct the server whether to reply to commands.\n     * SETNAME - Set the current connection name.",
        "* Set multiple hash fields to multiple values.",
        "* Listen for messages published to the given channels.",
        "* Stop listening for messages posted to the given channels.",
        "* Listen for messages published to channels matching the given patterns.",
        "* Stop listening for messages posted to channels matching the given patterns.",
        "* Append a value to a key.",
        "* Asynchronously rewrite the append-only file.",
        "* Asynchronously save the dataset to disk.",
        "* Count set bits in a string.",
        "* Perform arbitrary bitfield integer operations on strings.",
        "* Perform bitwise operations between strings.",
        "* Find first bit set or clear in a string.",
        "* Remove and get the first element in a list, or block until one is available.",
        "* Remove and get the last element in a list, or block until one is available.",
        "* Pop a value from a list, push it to another list and return it; or block until one is available.",
        "* ADDSLOTS - Assign new hash slots to receiving node.\n     * COUNT-FAILURE-REPORTS - Return the number of failure reports active for a given node.\n     * COUNTKEYSINSLOT - Return the number of local keys in the specified hash slot.\n     * DELSLOTS - Set hash slots as unbound in receiving node.\n     * FAILOVER - Forces a slave to perform a manual failover of its master.\n     * FORGET - Remove a node from the nodes table.\n     * GETKEYSINSLOT - Return local key names in the specified hash slot.\n     * INFO - Provides info about Redis Cluster node state.\n     * KEYSLOT - Returns the hash slot of the specified key.\n     * MEET - Force a node cluster to handshake with another node.\n     * NODES - Get cluster config for the node.\n     * REPLICATE - Reconfigure a node as a slave of the specified master node.\n     * RESET - Reset a Redis Cluster node.\n     * SAVECONFIG - Forces the node to save cluster state on disk.\n     * SET-CONFIG-EPOCH - Set the configuration epoch in a new node.\n     * SETSLOT - Bind a hash slot to a specified node.\n     * SLAVES - List slave nodes of the specified master node.\n     * SLOTS - Get array of Cluster slot to node mappings.",
        "* Get array of Redis command details.\n     *\n     * COUNT - Get total number of Redis commands.\n     * GETKEYS - Extract keys given a full Redis command.\n     * INFO - Get array of specific REdis command details.",
        "* Get array of Redis command details.\n     *\n     * COUNT - Get array of Redis command details.\n     * GETKEYS - Extract keys given a full Redis command.\n     * INFO - Get array of specific Redis command details.\n     * GET - Get the value of a configuration parameter.\n     * REWRITE - Rewrite the configuration file with the in memory configuration.\n     * SET - Set a configuration parameter to the given value.\n     * RESETSTAT - Reset the stats returned by INFO.",
        "* Return the number of keys in the selected database.",
        "* OBJECT - Get debugging information about a key.\n     * SEGFAULT - Make the server crash.",
        "* Decrement the integer value of a key by one.",
        "* Decrement the integer value of a key by the given number.",
        "* Delete a key.",
        "* Discard all commands issued after MULTI.",
        "* Return a serialized version of the value stored at the specified key.",
        "* Echo the given string.",
        "* Execute a Lua script server side.",
        "* Execute a Lue script server side.",
        "* Determine if a key exists.",
        "* Set a key's time to live in seconds.",
        "* Set the expiration for a key as a UNIX timestamp.",
        "* Remove all keys from all databases.",
        "* Remove all keys from the current database.",
        "* Add one or more geospatial items in the geospatial index represented using a sorted set.",
        "* Returns members of a geospatial index as standard geohash strings.",
        "* Returns longitude and latitude of members of a geospatial index.",
        "* Returns the distance between two members of a geospatial index.",
        "* Query a sorted set representing a geospatial index to fetch members matching a given maximum distance from a point.",
        "* Query a sorted set representing a geospatial index to fetch members matching a given maximum distance from a member.",
        "* Get the value of a key.",
        "* Returns the bit value at offset in the string value stored at key.",
        "* Get a substring of the string stored at a key.",
        "* Set the string value of a key and return its old value.",
        "* Delete on or more hash fields.",
        "* Determine if a hash field exists.",
        "* Get the value of a hash field.",
        "* Get all fields and values in a hash.",
        "* Increment the integer value of a hash field by the given number.",
        "* Increment the float value of a hash field by the given amount.",
        "* Get all the fields of a hash.",
        "* Get the number of fields in a hash.",
        "* Get the values of all the given hash fields.",
        "* Set the string value of a hash field.",
        "* Set the value of a hash field, only if the field does not exist.",
        "* Get the length of the value of a hash field.",
        "* Get all the values of a hash.",
        "* Increment the integer value of a key by one.",
        "* Increment the integer value of a key by the given amount.",
        "* Increment the float value of a key by the given amount.",
        "* Find all keys matching the given pattern.",
        "* Get the UNIX time stamp of the last successful save to disk.",
        "* Get an element from a list by its index.",
        "* Insert an element before or after another element in a list.",
        "* Get the length of a list.",
        "* Remove and get the first element in a list.",
        "* Prepend one or multiple values to a list.",
        "* Prepend a value to a list, only if the list exists.",
        "* Get a range of elements from a list.",
        "* Remove elements from a list.",
        "* Set the value of an element in a list by its index.",
        "* Trim a list to the specified range.",
        "* Get the values of all given keys.",
        "* Atomically tranfer a key from a Redis instance to another one.",
        "* Move a key to another database.",
        "* Set multiple keys to multiple values.",
        "* Set multiple keys to multiple values, only if none of the keys exist.",
        "* Inspect the internals of Redis objects.",
        "* Remove the expiration from a key.",
        "* Remove a key's time to live in milliseconds.",
        "* Set the expiration for a key as a UNIX timestamp specified in milliseconds.",
        "* Adds the specified elements to the specified HyperLogLog.",
        "* Return the approximated cardinality of the set(s) observed by the HyperLogLog at key(s).",
        "* Merge N different HyperLogLogs into a single one.",
        "* Set the value and expiration in milliseconds of a key.",
        "* Inspect the state of the Pub/Sub subsytem.",
        "* Get the time to live for a key in milliseconds.",
        "* Close the connection.",
        "* Return a random key from the keyspace.",
        "* Enables read queries for a connection to a cluster slave node.",
        "* Disables read queries for a connection to cluster slave node.",
        "* Rename a key.",
        "* Rename a key, only if the new key does not exist.",
        "* Create a key using the provided serialized value, previously obtained using DUMP.",
        "* Return the role of the instance in the context of replication.",
        "* Remove and get the last element in a list.",
        "* Remove the last element in a list, prepend it to another list and return it.",
        "* Append one or multiple values to a list.",
        "* Append a value to a list, only if the list exists.",
        "* Append one or multiple members to a set.",
        "* Synchronously save the dataset to disk.",
        "* Get the number of members in a set.",
        "* DEBUG - Set the debug mode for executed scripts.\n     * EXISTS - Check existence of scripts in the script cache.\n     * FLUSH - Remove all scripts from the script cache.\n     * KILL - Kill the script currently in execution.\n     * LOAD - Load the specified Lua script into the script cache.",
        "* Subtract multiple sets.",
        "* Subtract multiple sets and store the resulting set in a key.",
        "* Change the selected database for the current connection.",
        "* Set the string value of a key.",
        "* Sets or clears the bit at offset in the string value stored at key.",
        "* Set the value and expiration of a key.",
        "* Set the value of a key, only if the key does not exist.",
        "* Overwrite part of a string at key starting at the specified offset.",
        "* Synchronously save the dataset to disk and then shut down the server.",
        "* Intersect multiple sets.",
        "* Intersect multiple sets and store the resulting set in a key.",
        "* Determine if a given value is a member of a set.",
        "* Make the server a slave of another instance, or promote it as master.",
        "* Manages the Redis slow queries log.",
        "* Get all the members in a set.",
        "* Move a member from one set to another.",
        "* Sort the elements in a list, set or sorted set.",
        "* Remove and return one or multiple random members from a set.",
        "* Get one or multiple random members from a set.",
        "* Remove one or more members from a set.",
        "* Get the length of the value stored in a key.",
        "* Add multiple sets.",
        "* Add multiple sets and store the resulting set in a key.",
        "* Internal command used for replication.",
        "* Return the current server time.",
        "* Get the time to live for a key.",
        "* Determine the type stored at key.",
        "* Forget about all watched keys.",
        "* Wait for the synchronous replication of all the write commands sent in the context of the current connection.",
        "* Watch the given keys to determine execution of the MULTI/EXEC block.",
        "* Add one or more members to a sorted set, or update its score if it already exists.",
        "* Get the number of members in a sorted set.",
        "* Count the members in a sorted set with scores between the given values.",
        "* Increment the score of a member in a sorted set.",
        "* Intersect multiple sorted sets and store the resulting sorted set in a new key.",
        "* Count the number of members in a sorted set between a given lexicographic range.",
        "* Return a range of members in a sorted set, by index.",
        "* Return a range of members in a sorted set, by lexicographical range.",
        "* Return a range of members in a sorted set, by lexicographical range, ordered from higher to lower strings.",
        "* Return a range of members in a sorted set, by score.",
        "* Determine the index of a member in a sorted set.",
        "* Remove one or more members from a sorted set.",
        "* Remove all members in a sorted set between the given lexicographical range.",
        "* Remove all members in a sorted set within the given indexes.",
        "* Remove all members in a sorted set within the given indexes.",
        "* Return a range of members in a sorted set, by index, with scores ordered from high to low.",
        "* Return a range of members in a sorted set, by score, with scores ordered from high to low.",
        "* Determine the index of a member in a sorted set, with scores ordered from high to low.",
        "* Get the score associated with the given member in a sorted set.",
        "* Add multiple sorted sets and store the resulting sorted set in a new key.",
        "* Incrementally iterate the keys space.",
        "* Incrementally iterate Set elements.",
        "* Incrementally iterate hash fields and associated values.",
        "* Incrementally iterate sorted sets elements and associated scores.",
        "* Client methods.",
        "* Mark the start of a transaction block."
    ],
    "functions": [],
    "classes": []
}