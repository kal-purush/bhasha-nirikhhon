{
    "identifiers": [
        "ch",
        "blinkenlights",
        "android",
        "vanilla",
        "android",
        "app",
        "AlertDialog",
        "android",
        "app",
        "Dialog",
        "android",
        "app",
        "DialogFragment",
        "android",
        "content",
        "ContentResolver",
        "android",
        "content",
        "DialogInterface",
        "android",
        "content",
        "Intent",
        "android",
        "os",
        "Bundle",
        "android",
        "text",
        "Editable",
        "android",
        "text",
        "InputType",
        "android",
        "text",
        "TextWatcher",
        "android",
        "widget",
        "EditText",
        "Callback",
        "input",
        "mEditText",
        "mCallback",
        "mActionRes",
        "mInitialText",
        "mDialog",
        "callback",
        "initialText",
        "actionRes",
        "mCallback",
        "callback",
        "mInitialText",
        "initialText",
        "mActionRes",
        "actionRes",
        "Override",
        "savedInstanceState",
        "mEditText",
        "getActivity",
        "mEditText",
        "setInputType",
        "InputType",
        "TYPE_CLASS_TEXT",
        "mEditText",
        "addTextChangedListener",
        "builder",
        "getActivity",
        "builder",
        "setTitle",
        "R",
        "choose_playlist_name",
        "setView",
        "mEditText",
        "setPositiveButton",
        "mActionRes",
        "setNegativeButton",
        "android",
        "R",
        "cancel",
        "mDialog",
        "builder",
        "create",
        "mDialog",
        "onStart",
        "mDialog",
        "getButton",
        "DialogInterface",
        "BUTTON_POSITIVE",
        "setEnabled",
        "mEditText",
        "setText",
        "mInitialText",
        "mEditText",
        "requestFocus",
        "s",
        "s",
        "start",
        "count",
        "after",
        "text",
        "start",
        "before",
        "count",
        "text",
        "toString",
        "equals",
        "mInitialText",
        "mDialog",
        "getButton",
        "DialogInterface",
        "BUTTON_POSITIVE",
        "setEnabled",
        "mDialog",
        "getButton",
        "DialogInterface",
        "BUTTON_POSITIVE",
        "setEnabled",
        "resolver",
        "getContext",
        "getContentResolver",
        "res",
        "Playlist",
        "getPlaylist",
        "resolver",
        "mActionRes",
        "R",
        "overwrite",
        "mDialog",
        "getButton",
        "DialogInterface",
        "BUTTON_POSITIVE",
        "setText",
        "res",
        "Override",
        "dialog",
        "which",
        "which",
        "DialogInterface",
        "BUTTON_NEGATIVE",
        "DialogInterface",
        "BUTTON_POSITIVE",
        "mCallback",
        "onSuccess",
        "mEditText",
        "getText",
        "toString",
        "dialog",
        "dismiss"
    ],
    "literals": [],
    "variables": [
        "mEditText",
        "mCallback",
        "mActionRes",
        "mInitialText",
        "mDialog"
    ],
    "comments": [
        "noop",
        "noop",
        "noop"
    ],
    "docstrings": [
        "* Copyright (C) 2016 Adrian Ulrich <adrian@blinkenlights.ch>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.",
        "* A editText instance",
        "* Our callback implementing the PlaylistInputDialog.Callback\n\t * interface",
        "* The label of the positive button",
        "* The initial text to display",
        "* The instance of the alert dialog",
        "* Creates a new instance\n\t * @param callback the callback to call back\n\t * @param initialText the initial value mEditText\n\t * @param actionRes the label of the positive button",
        "* Called when the view becomes visible, so we can\n\t * set the button positive-button and request focus",
        "* Called after mEditText changed",
        "* Called before mEditText changed",
        "* Called when mEditText changed"
    ],
    "functions": [
        "onSuccess",
        "PlaylistInputDialog",
        "Dialog",
        "onCreateDialog",
        "onStart",
        "afterTextChanged",
        "beforeTextChanged",
        "onTextChanged",
        "onClick"
    ],
    "classes": [
        "PlaylistInputDialog"
    ]
}