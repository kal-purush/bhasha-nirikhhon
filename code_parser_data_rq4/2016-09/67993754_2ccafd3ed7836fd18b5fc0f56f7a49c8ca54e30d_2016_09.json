{
    "identifiers": [
        "signal",
        "threading",
        "BaseHTTPServer",
        "HTTPServer",
        "BaseHTTPRequestHandler",
        "urlparse",
        "orb_process_store",
        "BaseHTTPRequestHandler",
        "headers",
        "rfile",
        "read",
        "length",
        "orb_process_store",
        "processDescriptorsFromImage",
        "content",
        "path",
        "send_response",
        "orb_process_store",
        "search",
        "rfile",
        "read",
        "headers",
        "getheader",
        "port",
        "port",
        "port",
        "HTTPServer",
        "server_address",
        "MyHandler",
        "httpd",
        "serve_forever",
        "target",
        "run_on",
        "args",
        "server",
        "start",
        "signal",
        "pause"
    ],
    "literals": [
        "\"----- SOMETHING WAS PUT!! ------\"",
        "'Content-Length'",
        "\"---- GET!! ----\"",
        "\"-- GOT POST--\"",
        "'Content-Length'",
        "\"Starting a server on port %i\"",
        "'localhost'",
        "\"__main__\""
    ],
    "variables": [
        "length",
        "content",
        "server_address",
        "httpd",
        "server",
        "server",
        "daemon"
    ],
    "comments": [
        "!/usr/bin/python",
        "curl -T filename.txt http://www.example.com/dir/",
        "@todo get arg \"?index=a...1\" and pass to this function",
        "print postvars",
        "@todo get arg \"?index=a...1\" and pass to this function",
        "so that multiple separate indexes can be contained in the case of band name etc",
        "length = int(self.headers['Content-Length'])",
        "orb_process_store.search(postvars[''][0])",
        "Get descriptors, load existing index, begin brute force matching",
        "Do not make us wait for you to exit",
        "Wait for interrupt signal, e.g. KeyboardInterrupt"
    ],
    "docstrings": [],
    "functions": [
        "do_PUT",
        "do_GET",
        "do_POST",
        "run_on"
    ],
    "classes": [
        "MyHandler"
    ]
}