{
    "identifiers": [
        "argparse",
        "cv2",
        "numpy",
        "np",
        "scipy",
        "misc",
        "slmpy",
        "argparse",
        "ArgumentParser",
        "ap",
        "add_argument",
        "help",
        "ap",
        "add_argument",
        "help",
        "ap",
        "add_argument",
        "help",
        "ap",
        "add_mutually_exclusive_group",
        "required",
        "feature_parser",
        "add_argument",
        "help",
        "action",
        "ap",
        "add_mutually_exclusive_group",
        "required",
        "feature_parser",
        "add_argument",
        "help",
        "action",
        "ap",
        "add_mutually_exclusive_group",
        "required",
        "feature_parser",
        "add_argument",
        "help",
        "action",
        "vars",
        "ap",
        "parse_args",
        "args",
        "args",
        "args",
        "args",
        "np",
        "abs",
        "args",
        "args",
        "beamCharge",
        "beamCharge",
        "beamCharge",
        "np",
        "zeros",
        "ImgResY",
        "ImgResX",
        "np",
        "angle",
        "np",
        "exp",
        "beamCharge",
        "np",
        "angle",
        "X",
        "Y",
        "normalize_image",
        "image",
        "image8bit",
        "beamCharge",
        "gratingPeriod",
        "gratingPeriod",
        "np",
        "zeros",
        "ImgResY",
        "ImgResX",
        "gratingPeriod",
        "np",
        "angle",
        "np",
        "exp",
        "np",
        "pi",
        "X",
        "gratingPeriod",
        "np",
        "exp",
        "beamCharge",
        "np",
        "angle",
        "X",
        "Y",
        "gratingPeriod",
        "np",
        "angle",
        "np",
        "exp",
        "np",
        "pi",
        "X",
        "gratingPeriod",
        "np",
        "pi",
        "np",
        "exp",
        "beamCharge",
        "np",
        "angle",
        "X",
        "Y",
        "normalize_image",
        "image",
        "image8bit",
        "image",
        "cv2",
        "normalize",
        "image",
        "alpha",
        "beta",
        "norm_type",
        "cv2",
        "NORM_MINMAX",
        "dtype",
        "cv2",
        "CV_32F",
        "np",
        "round",
        "img",
        "astype",
        "image8bit",
        "image",
        "np",
        "zeros",
        "ImgResY",
        "ImgResX",
        "dtype",
        "cv2",
        "imread",
        "cv2",
        "cvtColor",
        "SLMbmpMask",
        "cv2",
        "COLOR_BGR2GRAY",
        "SLMbmpMask",
        "shape",
        "rows",
        "cols",
        "SLMbmpMask",
        "SLMcorrectionMask",
        "image",
        "slmFlag",
        "slmpy",
        "SLMdisplay",
        "isImageLock",
        "slm",
        "getSize",
        "ImgResX",
        "ImgResY",
        "np",
        "linspace",
        "ImgResX",
        "ImgResX",
        "np",
        "linspace",
        "ImgResY",
        "ImgResY",
        "np",
        "meshgrid",
        "x",
        "y",
        "X",
        "ImgCenterX",
        "Y",
        "ImgCenterY",
        "np",
        "zeros",
        "ImgResY",
        "ImgResX",
        "dtype",
        "cv2",
        "circle",
        "maskCircle",
        "ImgCenterX",
        "ImgCenterY",
        "maskRadius",
        "normalize_image",
        "maskCircle",
        "slmFlag",
        "gratingPeriod",
        "generate_displaced_LG_Mask",
        "beamCharge",
        "gratingPeriod",
        "generate_LG_Mask",
        "beamCharge",
        "maskRadius",
        "cv2",
        "bitwise_and",
        "image8bit",
        "image8bit",
        "mask",
        "maskCircle",
        "cv2",
        "imshow",
        "image8bit",
        "cv2",
        "waitKey",
        "saveFlag",
        "scipy",
        "misc",
        "imsave",
        "fileStr",
        "image8bit",
        "fileStr",
        "gratingPeriod",
        "generate_displaced_LG_Mask",
        "beamCharge",
        "gratingPeriod",
        "generate_LG_Mask",
        "beamCharge",
        "maskRadius",
        "cv2",
        "bitwise_and",
        "image8bit",
        "image8bit",
        "mask",
        "maskCircle",
        "correctionFlag",
        "apply_correction_mask",
        "image8bit",
        "cv2",
        "resize",
        "image8bit",
        "interpolation",
        "cv2",
        "INTER_CUBIC",
        "cv2",
        "cvtColor",
        "image",
        "cv2",
        "COLOR_GRAY2BGR",
        "cv2",
        "putText",
        "image",
        "cv2",
        "FONT_HERSHEY_SIMPLEX",
        "cv2",
        "imshow",
        "image",
        "slm",
        "updateArray",
        "image8bit",
        "cv2",
        "waitKey",
        "key",
        "ord",
        "slm",
        "close",
        "cv2",
        "destroyAllWindows"
    ],
    "literals": [
        "\"-c\"",
        "\"--charge\"",
        "\"LG beam charge (default = 1)\"",
        "\"-w\"",
        "\"--window\"",
        "\"mask window radius (default = 0)\"",
        "\"-g\"",
        "\"--grating\"",
        "\"grating period (default = 0)\"",
        "\"-s\"",
        "\"--slm\"",
        "\"send image to SLM\"",
        "'store_true'",
        "\"-m\"",
        "\"--mask\"",
        "\"apply correction mask\"",
        "'store_true'",
        "\"-b\"",
        "\"--bmp\"",
        "\"save *.bmp file\"",
        "'store_true'",
        "\"charge\"",
        "\"bmp\"",
        "\"slm\"",
        "\"mask\"",
        "\"window\"",
        "\"grating\"",
        "'LG_ch_'",
        "'.bmp'",
        "'uint8'",
        "\"uint8\"",
        "\"mask_750nm.bmp\"",
        "\"uint8\"",
        "'phase hologram'",
        "\"file: \"",
        "\" saved! Press any key to continue.\"",
        "\"press q to exit...\"",
        "'Phase mask'",
        "'q'"
    ],
    "variables": [
        "ap",
        "feature_parser",
        "feature_parser",
        "feature_parser",
        "args",
        "beamCharge",
        "saveFlag",
        "slmFlag",
        "correctionFlag",
        "maskRadius",
        "gratingPeriod",
        "fileStr",
        "image",
        "image",
        "image8bit",
        "image",
        "image",
        "image",
        "image8bit",
        "img",
        "image8bit",
        "SLMcorrectionMask",
        "SLMbmpMask",
        "SLMbmpMask",
        "rows",
        "cols",
        "SLMcorrectionMask",
        "slm",
        "ImgResX",
        "ImgResY",
        "ImgResX",
        "ImgResY",
        "ImgCenterX",
        "ImgCenterY",
        "x",
        "y",
        "X",
        "Y",
        "X",
        "Y",
        "maskCircle",
        "maskCircle",
        "image8bit",
        "image8bit",
        "image8bit",
        "image8bit",
        "image8bit",
        "image8bit",
        "image8bit",
        "image",
        "image",
        "key"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "construct the argument parse and parse the arguments",
        "generate phase mask for LG beam",
        "if period = 0 ... show zero phase mask",
        "if period > 0 ... shift beam to the RIGHT wrt period = 0",
        "if period < 0 ... shift beam to the LEFT wrt period = 0",
        "normalize image to range [0, 1]",
        "create the object that handles the SLM array",
        "retrieve SLM resolution (defined in monitor options)",
        "initialize image matrix",
        "generate circular window mask",
        "apply SLM correction mask provided by manufacturer",
        "display image on window",
        "send image to SLM",
        "press 'q' to exit"
    ],
    "docstrings": [
        "\"\"\"\nCreated on Fri Aug 26 16:07:20 2016\n\nFilename: generate_Laguerre_Gauss_SLM.py\n\nAuthor:Luis José Salazar-Serrano        \n        totesalaz@gmail.com / luis-jose.salazar@icfo.es\n        http://opensourcelab.salazarserrano.com\n        \nDescription: \n\nProgram that generates a phase mask of a Laguerre Gauss beam with a CHARGE\nprovided by the user. The mask is sent to the second monitor output where the SLM is\nconnected. The mask generated is also shown in the main monitor in a small window.\n\nTo use the program: \n\n>> python generate_Laguerre_Gauss_SLM.py [list of arguments] where: \n\n -c CHARGE sets the CHARGE of the LG beam.\n -w RADIUS use this option to put a circular mask centered in the screen center.\n -g PERIOD add a grating to the LG phase. The period in pixels is specified with the variable PERIOD.\n\n -s when added the image generated is sent to the SLM\n -m when added, the SLM correction mask provided by the manufacturer is applied to the phase mask.\n -b when added, the image of the phase mask is stored in the bmp file \"LG_ch_CHARGE.bmp\"\n\nThe code requires the library slmpy.py, written by Sébastien Popoff that can be found on the link\nhttp://wavefrontshaping.net/index.php/57-community/tutorials/spatial-lights-modulators-slms/124-how-to-control-a-slm-with-python\n             \nUsage examples:\n\n>>python LaguerreGauss.py -c 10 (image generated is not sent to the SLM)\n>>python LaguerreGauss.py -c 10 -b (add -b to save image as LG_ch_10.bmp)\n>>python LaguerreGauss.py -c -5 -m -s (LG beam charge -5, use correction mask and image sent to SLM) \n\nTo exit, press 'q' after clicking on the 'phase mask' window.\n\n\"\"\""
    ],
    "functions": [
        "generate_LG_Mask",
        "generate_displaced_LG_Mask",
        "normalize_image",
        "apply_correction_mask"
    ],
    "classes": []
}