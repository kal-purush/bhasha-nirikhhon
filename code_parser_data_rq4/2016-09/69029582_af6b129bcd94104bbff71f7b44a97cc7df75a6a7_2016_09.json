{
    "identifiers": [
        "time",
        "RPi",
        "GPIO",
        "GPIO",
        "bluetooth",
        "Adafruit_DHT",
        "Adafruit_DHT",
        "read_retry",
        "sensor",
        "pin",
        "humidity",
        "temperature",
        "temperature",
        "humidity",
        "BluetoothSocket",
        "RFCOMM",
        "server_sock",
        "bind",
        "PORT_ANY",
        "server_sock",
        "listen",
        "server_sock",
        "getsockname",
        "advertise_service",
        "server_sock",
        "service_id",
        "uuid",
        "service_classes",
        "uuid",
        "SERIAL_PORT_CLASS",
        "profiles",
        "SERIAL_PORT_PROFILE",
        "port",
        "server_sock",
        "accept",
        "client_info",
        "client_sock",
        "recv",
        "len",
        "data",
        "data",
        "data",
        "read_temp",
        "data",
        "data",
        "GPIO",
        "output",
        "data",
        "GPIO",
        "output",
        "client_sock",
        "send",
        "data",
        "data",
        "IOError",
        "KeyboardInterrupt",
        "client_sock",
        "close",
        "server_sock",
        "close"
    ],
    "literals": [
        "\",\"",
        "'Failed to get reading. Try again!'",
        "\"\"",
        "\"94f39d29-7d6d-437d-973b-fba39e49d4ee\"",
        "\"AquaPiServer\"",
        "\"Waiting for connection on RFCOMM channel %d\"",
        "\"Accepted connection from \"",
        "\"received [%s]\"",
        "'temp'",
        "'!'",
        "'lightOn'",
        "'light on!'",
        "'lightOff'",
        "'light off!'",
        "'WTF!'",
        "\"sending [%s]\"",
        "\"disconnected\"",
        "\"all done\""
    ],
    "variables": [
        "sensor",
        "pin",
        "humidity",
        "temperature",
        "server_sock",
        "port",
        "uuid",
        "client_sock",
        "client_info",
        "data",
        "data",
        "data",
        "data",
        "data"
    ],
    "comments": [
        "IN THE NAME OF GOD",
        "KOMEIL SHAH HOSSEINI",
        "READING TEMPERATURE AND HUMIDITY FROM DHT11 SENSOR AND SENDING IT TO ANDROID PHONE VIA BLUETOOTH",
        "print temperature,humidity",
        "while True:",
        "print(read_temp())",
        "time.sleep(1)",
        "protocols = [ OBEX_UUID ]"
    ],
    "docstrings": [],
    "functions": [
        "read_temp"
    ],
    "classes": []
}