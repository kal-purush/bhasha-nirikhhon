{
    "identifiers": [
        "boto3",
        "moto",
        "mock_s3",
        "parquet2hive",
        "parquet2hivelib",
        "lib",
        "s3",
        "bucket_name",
        "s3_client",
        "bucket",
        "dataset_file",
        "boto3",
        "resource",
        "boto3",
        "client",
        "s3_client",
        "create_bucket",
        "Bucket",
        "bucket_name",
        "s3",
        "Bucket",
        "bucket_name",
        "mock_s3",
        "_setup_module",
        "s3_client",
        "put_object",
        "Bucket",
        "bucket_name",
        "Key",
        "join",
        "prefix",
        "version",
        "objectname",
        "Body",
        "open",
        "dataset_file",
        "join",
        "bucket_name",
        "prefix",
        "lib",
        "get_bash_cmd",
        "dataset",
        "bash_cmd",
        "startswith",
        "bash_cmd",
        "bash_cmd",
        "bash_cmd",
        "bash_cmd",
        "mock_s3",
        "_setup_module",
        "k",
        "join",
        "prefix",
        "v",
        "objectname",
        "v",
        "versions",
        "s3_client",
        "put_object",
        "Bucket",
        "bucket_name",
        "Key",
        "k",
        "Body",
        "open",
        "dataset_file",
        "join",
        "bucket_name",
        "prefix",
        "lib",
        "get_bash_cmd",
        "dataset",
        "version",
        "bash_cmd",
        "bash_cmd",
        "mock_s3",
        "_setup_module",
        "k",
        "join",
        "prefix",
        "v",
        "objectname",
        "v",
        "versions",
        "s3_client",
        "put_object",
        "Bucket",
        "bucket_name",
        "Key",
        "k",
        "Body",
        "open",
        "dataset_file",
        "join",
        "bucket_name",
        "prefix",
        "lib",
        "get_bash_cmd",
        "dataset",
        "bash_cmd",
        "find",
        "bash_cmd",
        "find",
        "mock_s3",
        "_setup_module",
        "k",
        "join",
        "prefix",
        "v",
        "objectname",
        "v",
        "versions",
        "s3_client",
        "put_object",
        "Bucket",
        "bucket_name",
        "Key",
        "k",
        "Body",
        "open",
        "dataset_file",
        "s3_client",
        "put_object",
        "Bucket",
        "bucket_name",
        "Key",
        "join",
        "prefix",
        "Body",
        "join",
        "bucket_name",
        "prefix",
        "lib",
        "get_bash_cmd",
        "dataset",
        "success_only",
        "bash_cmd",
        "bash_cmd",
        "mock_s3",
        "_setup_module",
        "k",
        "join",
        "prefix",
        "v",
        "objectname",
        "v",
        "versions",
        "s3_client",
        "put_object",
        "Bucket",
        "bucket_name",
        "Key",
        "k",
        "Body",
        "open",
        "dataset_file",
        "join",
        "bucket_name",
        "prefix",
        "lib",
        "get_bash_cmd",
        "dataset",
        "recent_versions",
        "bash_cmd",
        "bash_cmd",
        "mock_s3",
        "_setup_module",
        "k",
        "join",
        "prefix",
        "v",
        "objectname",
        "v",
        "versions",
        "s3_client",
        "put_object",
        "Bucket",
        "bucket_name",
        "Key",
        "k",
        "Body",
        "open",
        "dataset_file",
        "s3_client",
        "put_object",
        "Bucket",
        "bucket_name",
        "Key",
        "join",
        "prefix",
        "Body",
        "join",
        "bucket_name",
        "prefix",
        "lib",
        "get_bash_cmd",
        "dataset",
        "recent_versions",
        "success_only",
        "bash_cmd",
        "bash_cmd",
        "mock_s3",
        "_setup_module",
        "k",
        "join",
        "prefix",
        "v",
        "objectname",
        "v",
        "versions",
        "s3_client",
        "put_object",
        "Bucket",
        "bucket_name",
        "Key",
        "k",
        "Body",
        "open",
        "dataset_file",
        "join",
        "bucket_name",
        "prefix",
        "lib",
        "get_bash_cmd",
        "dataset",
        "recent_versions",
        "bash_cmd",
        "bash_cmd",
        "bash_cmd",
        "mock_s3",
        "_setup_module",
        "k",
        "join",
        "prefix",
        "v",
        "objectname",
        "v",
        "versions",
        "s3_client",
        "put_object",
        "Bucket",
        "bucket_name",
        "Key",
        "k",
        "Body",
        "open",
        "dataset_file",
        "v",
        "versions",
        "s3_client",
        "put_object",
        "Bucket",
        "bucket_name",
        "Key",
        "join",
        "prefix",
        "v",
        "Body",
        "join",
        "bucket_name",
        "prefix",
        "lib",
        "get_bash_cmd",
        "dataset",
        "recent_versions",
        "success_only",
        "bash_cmd",
        "bash_cmd",
        "bash_cmd",
        "find",
        "bash_cmd",
        "find",
        "bash_cmd",
        "find",
        "bash_cmd",
        "mock_s3",
        "_setup_module",
        "join",
        "prefix",
        "version",
        "key",
        "key",
        "k",
        "keys",
        "s3_client",
        "put_object",
        "Bucket",
        "bucket_name",
        "Key",
        "k",
        "Body",
        "lib",
        "get_versions",
        "bucket",
        "prefix",
        "mock_s3",
        "_setup_module",
        "join",
        "prefix",
        "key",
        "key",
        "k",
        "keys",
        "s3_client",
        "put_object",
        "Bucket",
        "bucket_name",
        "Key",
        "k",
        "Body",
        "lib",
        "get_versions",
        "bucket",
        "prefix",
        "mock_s3",
        "_setup_module",
        "join",
        "prefix",
        "version",
        "key",
        "version",
        "versions",
        "key",
        "k",
        "keys",
        "s3_client",
        "put_object",
        "Bucket",
        "bucket_name",
        "Key",
        "k",
        "Body",
        "v",
        "v",
        "lib",
        "get_versions",
        "bucket",
        "prefix",
        "mock_s3",
        "_setup_module",
        "join",
        "prefix",
        "version",
        "partition",
        "fname",
        "fname",
        "k",
        "keys",
        "s3_client",
        "put_object",
        "Bucket",
        "bucket_name",
        "Key",
        "k",
        "Body",
        "lib",
        "check_success_exists",
        "s3",
        "bucket_name",
        "join",
        "prefix",
        "version",
        "partition",
        "mock_s3",
        "_setup_module",
        "join",
        "prefix",
        "version",
        "fname",
        "fname",
        "k",
        "keys",
        "s3_client",
        "put_object",
        "Bucket",
        "bucket_name",
        "Key",
        "k",
        "Body",
        "lib",
        "check_success_exists",
        "s3",
        "bucket_name",
        "join",
        "prefix",
        "version",
        "mock_s3",
        "_setup_module",
        "join",
        "prefix",
        "version",
        "partition",
        "fname",
        "fname",
        "k",
        "keys",
        "s3_client",
        "put_object",
        "Bucket",
        "bucket_name",
        "Key",
        "k",
        "Body",
        "lib",
        "check_success_exists",
        "s3",
        "bucket_name",
        "join",
        "prefix",
        "version",
        "partition",
        "mock_s3",
        "_setup_module",
        "join",
        "prefix",
        "version",
        "fname",
        "fname",
        "k",
        "keys",
        "s3_client",
        "put_object",
        "Bucket",
        "bucket_name",
        "Key",
        "k",
        "Body",
        "lib",
        "check_success_exists",
        "s3",
        "bucket_name",
        "join",
        "prefix",
        "version",
        "lib",
        "get_partitioning_fields",
        "create_table_sql",
        "create_table_sql",
        "lib",
        "avro2sql",
        "avro",
        "name",
        "version",
        "location",
        "partitions",
        "create_table_sql",
        "format",
        "lib",
        "avro2sql",
        "avro",
        "name",
        "version",
        "location",
        "partitions",
        "create_table_sql",
        "format",
        "lib",
        "transform_type",
        "lib",
        "transform_type",
        "lib",
        "transform_type",
        "avro",
        "lib",
        "transform_type",
        "avro",
        "lib",
        "transform_type",
        "avro",
        "lib",
        "transform_type",
        "avro",
        "lib",
        "udf",
        "lib",
        "transform_type",
        "avro",
        "lib",
        "find_jar_path"
    ],
    "literals": [
        "'s3'",
        "'test-bucket'",
        "'s3'",
        "'tests/dataset.parquet'",
        "'churn'",
        "'v2'",
        "'parquet'",
        "'/'",
        "'rb'",
        "'s3://'",
        "'/'",
        "'hive'",
        "'Should be a valid hive command'",
        "'drop table if exists churn'",
        "'Should drop table without version'",
        "'create external table churn'",
        "'Should create table without version'",
        "'drop table if exists churn_v2'",
        "'Should drop table with version'",
        "'create external table churn_v2'",
        "'Should create table with version'",
        "'churn'",
        "'v2'",
        "'v3'",
        "'parquet'",
        "'/'",
        "'rb'",
        "'s3://'",
        "'/'",
        "'v2'",
        "'v3'",
        "'Should only process v2, but found v3'",
        "'v2'",
        "'Should process v2, but didn\\'t'",
        "'churn'",
        "'v2'",
        "'v3'",
        "'parquet'",
        "'/'",
        "'rb'",
        "'s3://'",
        "'/'",
        "'v3'",
        "'v2'",
        "'v3 should process before v2, but didn\\'t'",
        "'churn'",
        "'v2'",
        "'v3'",
        "'parquet'",
        "'/'",
        "'rb'",
        "'/'",
        "'v3'",
        "'_SUCCESS'",
        "b'SUCCESS'",
        "'s3://'",
        "'/'",
        "'v3'",
        "'Should process v3 but didn\\'t'",
        "'v2'",
        "'Should not process v2 since _SUCCESS is missing, but did'",
        "'churn'",
        "'v2'",
        "'v3'",
        "'parquet'",
        "'/'",
        "'rb'",
        "'s3://'",
        "'/'",
        "'v3'",
        "'Should process v3, but didn\\'t'",
        "'v2'",
        "'Should only process v3 and not v2, but didn\\'t'",
        "'churn'",
        "'v2'",
        "'v3'",
        "'parquet'",
        "'/'",
        "'rb'",
        "'/'",
        "'v2'",
        "'_SUCCESS'",
        "b'SUCCESS'",
        "'s3://'",
        "'/'",
        "'v2'",
        "'Should process v2, but didn\\'t'",
        "'v3'",
        "'Should only process v2 and not v3, but didn\\'t'",
        "'churn'",
        "'v1'",
        "'v2'",
        "'v3'",
        "'parquet'",
        "'/'",
        "'rb'",
        "'s3://'",
        "'/'",
        "'v3'",
        "'Should process v3, but didn\\'t'",
        "'v2'",
        "'Should process v2, but didn\\'t'",
        "'v1'",
        "'Should only process v3 and v2 and not v1, but didn\\'t'",
        "'churn'",
        "'v1'",
        "'v2'",
        "'v3'",
        "'parquet'",
        "'/'",
        "'rb'",
        "'/'",
        "'_SUCCESS'",
        "b'SUCCESS'",
        "'s3://'",
        "'/'",
        "'v1'",
        "'Should process v1, but didn\\'t'",
        "'v2'",
        "'Should process v2, but didn\\'t'",
        "'churn_v2;'",
        "'churn;'",
        "'churn_v1;'",
        "'Should process v2 as both churn_v2 and churn before processing v1'",
        "'v3'",
        "'Should only process v1 and v2 and not v3, but didn\\'t'",
        "'prefix'",
        "'24'",
        "'/'",
        "'p1'",
        "'p2'",
        "'p3'",
        "b'teststring'",
        "'incorrect version should have been ignored'",
        "'v1'",
        "'/'",
        "'p1'",
        "'p2'",
        "'p3'",
        "b'teststring'",
        "'missing prefix should have been ignored'",
        "'prefix'",
        "'v1'",
        "'v2'",
        "'/'",
        "'p1'",
        "'p2'",
        "'p3'",
        "b'teststring'",
        "'v2'",
        "'v1'",
        "'versions not returned in descending order'",
        "'longitudinal'",
        "'v1'",
        "'sample_id=1'",
        "'/'",
        "'p1'",
        "'p2'",
        "'_SUCCESS'",
        "b'teststring'",
        "'/'",
        "'_SUCCESS not found in partition when it exists'",
        "'longitudinal'",
        "'v1'",
        "'/'",
        "'p1'",
        "'p2'",
        "'_SUCCESS'",
        "b'teststring'",
        "'/'",
        "'_SUCCESS not found in dir when it exists'",
        "'longitudinal'",
        "'v1'",
        "'sample_id=1'",
        "'/'",
        "'p1'",
        "'p2'",
        "'p3'",
        "b'teststring'",
        "'/'",
        "'_SUCCESS found when actually missing from partition'",
        "'longitudinal'",
        "'v1'",
        "'/'",
        "'p1'",
        "'p2'",
        "'p3'",
        "b'teststring'",
        "'/'",
        "'_SUCCESS found when actually missing from directory'",
        "'sample_id=1/test_id=3/obj'",
        "'sample_id'",
        "'test_id'",
        "'fields'",
        "'metadata'",
        "'type'",
        "'string'",
        "'name'",
        "'clientId'",
        "'nullable'",
        "'metadata'",
        "'type'",
        "'integer'",
        "'name'",
        "'sampleId'",
        "'nullable'",
        "'type'",
        "'struct'",
        "\"churn\"",
        "\"v3\"",
        "\"localhost\"",
        "'drop table if exists {0}; '",
        "'create external table {0}(`clientId` string, `sampleId` int) stored as parquet location \\'\"\\'localhost/v3\\'\"\\'; '",
        "'msck repair table {0};'",
        "'churn_v3'",
        "'SQL Schema is not correct'",
        "'churn'",
        "'SQL Schema is not correct'",
        "'string'",
        "'string'",
        "'Unchanged type is changed when it should not be'",
        "'integer'",
        "'int'",
        "'Mapped type is not mapping to correct value'",
        "'type'",
        "'map'",
        "'values'",
        "'string'",
        "'map<string,string>'",
        "'Map of string to string did not return correct schema'",
        "'type'",
        "'map'",
        "'values'",
        "'type'",
        "'map'",
        "'values'",
        "'string'",
        "'map<string,map<string,string>>'",
        "'Nested map of string-string did not return correct schema'",
        "'type'",
        "'array'",
        "'items'",
        "'integer'",
        "'array<int>'",
        "'Array of ints did not return correct schema'",
        "'type'",
        "'record'",
        "'name'",
        "'udf1'",
        "'fields'",
        "'name'",
        "'field1'",
        "'type'",
        "'integer'",
        "'name'",
        "'field2'",
        "'type'",
        "'string'",
        "'struct<`field1`: int, `field2`: string>'",
        "'Record with two fields did not return correct schema'",
        "'udf1'",
        "'New udf not inserted into udf dict'",
        "'type'",
        "'struct'",
        "'fields'",
        "'name'",
        "'field1'",
        "'type'",
        "'long'",
        "'name'",
        "'field2'",
        "'type'",
        "'timestamp'",
        "'struct<`field1`: bigint, `field2`: timestamp>'",
        "'Struct with two fields did not return correct schema'",
        "'Did not find jar!'"
    ],
    "variables": [
        "s3",
        "bucket_name",
        "s3_client",
        "bucket",
        "dataset_file",
        "prefix",
        "version",
        "objectname",
        "dataset",
        "bash_cmd",
        "prefix",
        "versions",
        "objectname",
        "dataset",
        "bash_cmd",
        "prefix",
        "versions",
        "objectname",
        "dataset",
        "bash_cmd",
        "prefix",
        "versions",
        "objectname",
        "dataset",
        "bash_cmd",
        "prefix",
        "versions",
        "objectname",
        "dataset",
        "bash_cmd",
        "prefix",
        "versions",
        "objectname",
        "dataset",
        "bash_cmd",
        "prefix",
        "versions",
        "objectname",
        "dataset",
        "bash_cmd",
        "prefix",
        "versions",
        "objectname",
        "dataset",
        "bash_cmd",
        "prefix",
        "version",
        "keys",
        "prefix",
        "keys",
        "prefix",
        "versions",
        "keys",
        "prefix",
        "version",
        "partition",
        "keys",
        "prefix",
        "version",
        "keys",
        "prefix",
        "version",
        "partition",
        "keys",
        "prefix",
        "version",
        "keys",
        "avro",
        "name",
        "version",
        "location",
        "partitions",
        "create_table_sql",
        "avro",
        "avro",
        "avro",
        "avro",
        "avro"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "_setup_module",
        "test_with_single_file",
        "test_dataset_version",
        "test_version_order",
        "test_success_only",
        "test_use_last_version",
        "test_use_last_version_success_only",
        "test_use_last_versions",
        "test_use_last_versions_success_only",
        "test_incorrect_version",
        "test_missing_prefix",
        "test_in_order",
        "test_exists_within_partition",
        "test_exists_within_version",
        "test_missing_from_partition",
        "test_missing_from_version",
        "test_finds_partitions",
        "setup",
        "test_churn_transform",
        "test_churn_transform_no_version",
        "test_unchanged_type",
        "test_mapped_type",
        "test_map_type",
        "test_nested_map",
        "test_array_type",
        "test_record_type",
        "test_struct_type",
        "test_find_jar"
    ],
    "classes": [
        "TestGetBashCmd",
        "TestGetVersions",
        "TestSuccessExists",
        "TestGetPartitioningFields",
        "TestAvro2Sql",
        "TestTransformType",
        "TestJarFile"
    ]
}