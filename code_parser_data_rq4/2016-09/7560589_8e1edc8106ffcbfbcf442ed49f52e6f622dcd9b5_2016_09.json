{
    "identifiers": [
        "Threading",
        "Tasks",
        "Senparc",
        "Weixin",
        "Entities",
        "Senparc",
        "Weixin",
        "MP",
        "AdvancedAPIs",
        "GroupMessage",
        "Senparc",
        "Weixin",
        "MP",
        "CommonAPIs",
        "Senparc",
        "Weixin",
        "HttpUtility",
        "Senparc",
        "Weixin",
        "MP",
        "AdvancedAPIs",
        "accessTokenOrAppId",
        "groupId",
        "value",
        "GroupMessageType",
        "isToAll",
        "timeOut",
        "Config",
        "TIME_OUT",
        "ApiHandlerWapper",
        "TryCommonApi",
        "GroupMessageType",
        "image",
        "baseData",
        "GroupMessageByGroupId_ImageData",
        "GroupMessageByGroupId_GroupId",
        "group_id",
        "groupId",
        "is_to_all",
        "isToAll",
        "image",
        "GroupMessageByGroupId_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "voice",
        "baseData",
        "GroupMessageByGroupId_VoiceData",
        "GroupMessageByGroupId_GroupId",
        "group_id",
        "groupId",
        "is_to_all",
        "isToAll",
        "voice",
        "GroupMessageByGroupId_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "mpnews",
        "baseData",
        "GroupMessageByGroupId_MpNewsData",
        "GroupMessageByGroupId_GroupId",
        "group_id",
        "groupId",
        "is_to_all",
        "isToAll",
        "mpnews",
        "GroupMessageByGroupId_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "video",
        "baseData",
        "GroupMessageByGroupId_MpVideoData",
        "GroupMessageByGroupId_GroupId",
        "group_id",
        "groupId",
        "is_to_all",
        "isToAll",
        "mpvideo",
        "GroupMessageByGroupId_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "wxcard",
        "baseData",
        "GroupMessageByGroupId_WxCardData",
        "GroupMessageByGroupId_GroupId",
        "group_id",
        "groupId",
        "is_to_all",
        "isToAll",
        "wxcard",
        "GroupMessageByGroupId_WxCard",
        "card_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "text",
        "baseData",
        "GroupMessageByGroupId_TextData",
        "GroupMessageByGroupId_GroupId",
        "group_id",
        "groupId",
        "is_to_all",
        "isToAll",
        "text",
        "GroupMessageByGroupId_Content",
        "content",
        "value",
        "msgtype",
        "CommonJsonSend",
        "Send",
        "SendResult",
        "accessToken",
        "urlFormat",
        "baseData",
        "timeOut",
        "timeOut",
        "accessTokenOrAppId",
        "accessTokenOrAppId",
        "GroupMessageType",
        "value",
        "timeOut",
        "Config",
        "TIME_OUT",
        "openIds",
        "ApiHandlerWapper",
        "TryCommonApi",
        "GroupMessageType",
        "image",
        "baseData",
        "GroupMessageByOpenId_ImageData",
        "touser",
        "openIds",
        "image",
        "GroupMessageByOpenId_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "voice",
        "baseData",
        "GroupMessageByOpenId_VoiceData",
        "touser",
        "openIds",
        "voice",
        "GroupMessageByOpenId_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "mpnews",
        "baseData",
        "GroupMessageByOpenId_MpNewsData",
        "touser",
        "openIds",
        "mpnews",
        "GroupMessageByOpenId_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "wxcard",
        "baseData",
        "GroupMessageByOpenId_WxCardData",
        "touser",
        "openIds",
        "wxcard",
        "GroupMessageByOpenId_WxCard",
        "card_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "video",
        "GroupMessageType",
        "text",
        "baseData",
        "GroupMessageByOpenId_TextData",
        "touser",
        "openIds",
        "text",
        "GroupMessageByOpenId_Content",
        "content",
        "value",
        "msgtype",
        "CommonJsonSend",
        "Send",
        "SendResult",
        "accessToken",
        "urlFormat",
        "baseData",
        "timeOut",
        "timeOut",
        "accessTokenOrAppId",
        "accessTokenOrAppId",
        "title",
        "description",
        "mediaId",
        "timeOut",
        "Config",
        "TIME_OUT",
        "openIds",
        "ApiHandlerWapper",
        "TryCommonApi",
        "GroupMessageByOpenId_MpVideoData",
        "touser",
        "openIds",
        "video",
        "GroupMessageByOpenId_Video",
        "title",
        "title",
        "description",
        "description",
        "media_id",
        "mediaId",
        "msgtype",
        "CommonJsonSend",
        "Send",
        "SendResult",
        "accessToken",
        "urlFormat",
        "baseData",
        "timeOut",
        "timeOut",
        "accessTokenOrAppId",
        "accessTokenOrAppId",
        "msgId",
        "timeOut",
        "Config",
        "TIME_OUT",
        "ApiHandlerWapper",
        "TryCommonApi",
        "msg_id",
        "msgId",
        "CommonJsonSend",
        "Send",
        "WxJsonResult",
        "accessToken",
        "urlFormat",
        "data",
        "timeOut",
        "timeOut",
        "accessTokenOrAppId",
        "accessTokenOrAppId",
        "GroupMessageType",
        "value",
        "openId",
        "wxName",
        "timeOut",
        "Config",
        "TIME_OUT",
        "ApiHandlerWapper",
        "TryCommonApi",
        "GroupMessageType",
        "image",
        "baseData",
        "GroupMessagePreview_ImageData",
        "touser",
        "openId",
        "towxname",
        "wxName",
        "image",
        "GroupMessagePreview_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "voice",
        "baseData",
        "GroupMessagePreview_VoiceData",
        "touser",
        "openId",
        "towxname",
        "wxName",
        "voice",
        "GroupMessagePreview_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "mpnews",
        "baseData",
        "GroupMessagePreview_MpNewsData",
        "touser",
        "openId",
        "towxname",
        "wxName",
        "mpnews",
        "GroupMessagePreview_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "video",
        "baseData",
        "GroupMessagePreview_MpVideoData",
        "touser",
        "openId",
        "towxname",
        "wxName",
        "mpvideo",
        "GroupMessagePreview_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "text",
        "baseData",
        "GroupMessagePreview_TextData",
        "touser",
        "openId",
        "towxname",
        "wxName",
        "text",
        "GroupMessagePreview_Content",
        "content",
        "value",
        "msgtype",
        "GroupMessageType",
        "wxcard",
        "CommonJsonSend",
        "Send",
        "SendResult",
        "accessToken",
        "urlFormat",
        "baseData",
        "timeOut",
        "timeOut",
        "accessTokenOrAppId",
        "accessTokenOrAppId",
        "cardId",
        "code",
        "openId",
        "wxName",
        "timestamp",
        "signature",
        "timeOut",
        "Config",
        "TIME_OUT",
        "ApiHandlerWapper",
        "TryCommonApi",
        "GroupMessagePreview_WxCardData",
        "touser",
        "openId",
        "towxname",
        "wxName",
        "wxcard",
        "GroupMessagePreview_WxCard",
        "card_id",
        "cardId",
        "card_ext",
        "Format",
        "code",
        "openId",
        "timestamp",
        "signature",
        "msgtype",
        "CommonJsonSend",
        "Send",
        "SendResult",
        "accessToken",
        "urlFormat",
        "baseData",
        "timeOut",
        "timeOut",
        "accessTokenOrAppId",
        "accessTokenOrAppId",
        "msgId",
        "timeOut",
        "Config",
        "TIME_OUT",
        "ApiHandlerWapper",
        "TryCommonApi",
        "msg_id",
        "msgId",
        "CommonJsonSend",
        "Send",
        "GetSendResult",
        "accessToken",
        "urlFormat",
        "data",
        "timeOut",
        "timeOut",
        "accessTokenOrAppId",
        "accessTokenOrAppId",
        "mediaId",
        "title",
        "description",
        "timeOut",
        "Config",
        "TIME_OUT",
        "ApiHandlerWapper",
        "TryCommonApi",
        "Format",
        "accessToken",
        "AsUrlData",
        "media_id",
        "mediaId",
        "title",
        "title",
        "description",
        "description",
        "CommonJsonSend",
        "Send",
        "VideoMediaIdResult",
        "url",
        "data",
        "CommonJsonSendType",
        "POST",
        "timeOut",
        "accessTokenOrAppId",
        "SendResult",
        "accessTokenOrAppId",
        "groupId",
        "value",
        "GroupMessageType",
        "isToAll",
        "timeOut",
        "Config",
        "TIME_OUT",
        "ApiHandlerWapper",
        "TryCommonApiAsync",
        "GroupMessageType",
        "image",
        "baseData",
        "GroupMessageByGroupId_ImageData",
        "GroupMessageByGroupId_GroupId",
        "group_id",
        "groupId",
        "is_to_all",
        "isToAll",
        "image",
        "GroupMessageByGroupId_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "voice",
        "baseData",
        "GroupMessageByGroupId_VoiceData",
        "GroupMessageByGroupId_GroupId",
        "group_id",
        "groupId",
        "is_to_all",
        "isToAll",
        "voice",
        "GroupMessageByGroupId_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "mpnews",
        "baseData",
        "GroupMessageByGroupId_MpNewsData",
        "GroupMessageByGroupId_GroupId",
        "group_id",
        "groupId",
        "is_to_all",
        "isToAll",
        "mpnews",
        "GroupMessageByGroupId_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "video",
        "baseData",
        "GroupMessageByGroupId_MpVideoData",
        "GroupMessageByGroupId_GroupId",
        "group_id",
        "groupId",
        "is_to_all",
        "isToAll",
        "mpvideo",
        "GroupMessageByGroupId_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "wxcard",
        "baseData",
        "GroupMessageByGroupId_WxCardData",
        "GroupMessageByGroupId_GroupId",
        "group_id",
        "groupId",
        "is_to_all",
        "isToAll",
        "wxcard",
        "GroupMessageByGroupId_WxCard",
        "card_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "text",
        "baseData",
        "GroupMessageByGroupId_TextData",
        "GroupMessageByGroupId_GroupId",
        "group_id",
        "groupId",
        "is_to_all",
        "isToAll",
        "text",
        "GroupMessageByGroupId_Content",
        "content",
        "value",
        "msgtype",
        "Senparc",
        "Weixin",
        "CommonAPIs",
        "CommonJsonSend",
        "SendAsync",
        "SendResult",
        "accessToken",
        "urlFormat",
        "baseData",
        "timeOut",
        "timeOut",
        "accessTokenOrAppId",
        "SendResult",
        "accessTokenOrAppId",
        "GroupMessageType",
        "value",
        "timeOut",
        "Config",
        "TIME_OUT",
        "openIds",
        "ApiHandlerWapper",
        "TryCommonApiAsync",
        "GroupMessageType",
        "image",
        "baseData",
        "GroupMessageByOpenId_ImageData",
        "touser",
        "openIds",
        "image",
        "GroupMessageByOpenId_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "voice",
        "baseData",
        "GroupMessageByOpenId_VoiceData",
        "touser",
        "openIds",
        "voice",
        "GroupMessageByOpenId_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "mpnews",
        "baseData",
        "GroupMessageByOpenId_MpNewsData",
        "touser",
        "openIds",
        "mpnews",
        "GroupMessageByOpenId_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "wxcard",
        "baseData",
        "GroupMessageByOpenId_WxCardData",
        "touser",
        "openIds",
        "wxcard",
        "GroupMessageByOpenId_WxCard",
        "card_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "video",
        "GroupMessageType",
        "text",
        "baseData",
        "GroupMessageByOpenId_TextData",
        "touser",
        "openIds",
        "text",
        "GroupMessageByOpenId_Content",
        "content",
        "value",
        "msgtype",
        "Senparc",
        "Weixin",
        "CommonAPIs",
        "CommonJsonSend",
        "SendAsync",
        "SendResult",
        "accessToken",
        "urlFormat",
        "baseData",
        "timeOut",
        "timeOut",
        "accessTokenOrAppId",
        "SendResult",
        "accessTokenOrAppId",
        "title",
        "description",
        "mediaId",
        "timeOut",
        "Config",
        "TIME_OUT",
        "openIds",
        "ApiHandlerWapper",
        "TryCommonApiAsync",
        "GroupMessageByOpenId_MpVideoData",
        "touser",
        "openIds",
        "video",
        "GroupMessageByOpenId_Video",
        "title",
        "title",
        "description",
        "description",
        "media_id",
        "mediaId",
        "msgtype",
        "Senparc",
        "Weixin",
        "CommonAPIs",
        "CommonJsonSend",
        "SendAsync",
        "SendResult",
        "accessToken",
        "urlFormat",
        "baseData",
        "timeOut",
        "timeOut",
        "accessTokenOrAppId",
        "WxJsonResult",
        "accessTokenOrAppId",
        "msgId",
        "timeOut",
        "Config",
        "TIME_OUT",
        "ApiHandlerWapper",
        "TryCommonApiAsync",
        "msg_id",
        "msgId",
        "Senparc",
        "Weixin",
        "CommonAPIs",
        "CommonJsonSend",
        "SendAsync",
        "WxJsonResult",
        "accessToken",
        "urlFormat",
        "data",
        "timeOut",
        "timeOut",
        "accessTokenOrAppId",
        "SendResult",
        "accessTokenOrAppId",
        "GroupMessageType",
        "value",
        "openId",
        "wxName",
        "timeOut",
        "Config",
        "TIME_OUT",
        "ApiHandlerWapper",
        "TryCommonApiAsync",
        "GroupMessageType",
        "image",
        "baseData",
        "GroupMessagePreview_ImageData",
        "touser",
        "openId",
        "towxname",
        "wxName",
        "image",
        "GroupMessagePreview_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "voice",
        "baseData",
        "GroupMessagePreview_VoiceData",
        "touser",
        "openId",
        "towxname",
        "wxName",
        "voice",
        "GroupMessagePreview_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "mpnews",
        "baseData",
        "GroupMessagePreview_MpNewsData",
        "touser",
        "openId",
        "towxname",
        "wxName",
        "mpnews",
        "GroupMessagePreview_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "video",
        "baseData",
        "GroupMessagePreview_MpVideoData",
        "touser",
        "openId",
        "towxname",
        "wxName",
        "mpvideo",
        "GroupMessagePreview_MediaId",
        "media_id",
        "value",
        "msgtype",
        "GroupMessageType",
        "text",
        "baseData",
        "GroupMessagePreview_TextData",
        "touser",
        "openId",
        "towxname",
        "wxName",
        "text",
        "GroupMessagePreview_Content",
        "content",
        "value",
        "msgtype",
        "GroupMessageType",
        "wxcard",
        "Senparc",
        "Weixin",
        "CommonAPIs",
        "CommonJsonSend",
        "SendAsync",
        "SendResult",
        "accessToken",
        "urlFormat",
        "baseData",
        "timeOut",
        "timeOut",
        "accessTokenOrAppId",
        "SendResult",
        "accessTokenOrAppId",
        "cardId",
        "code",
        "openId",
        "wxName",
        "timestamp",
        "signature",
        "timeOut",
        "Config",
        "TIME_OUT",
        "ApiHandlerWapper",
        "TryCommonApiAsync",
        "GroupMessagePreview_WxCardData",
        "touser",
        "openId",
        "towxname",
        "wxName",
        "wxcard",
        "GroupMessagePreview_WxCard",
        "card_id",
        "cardId",
        "card_ext",
        "Format",
        "code",
        "openId",
        "timestamp",
        "signature",
        "msgtype",
        "Senparc",
        "Weixin",
        "CommonAPIs",
        "CommonJsonSend",
        "SendAsync",
        "SendResult",
        "accessToken",
        "urlFormat",
        "baseData",
        "timeOut",
        "timeOut",
        "accessTokenOrAppId",
        "GetSendResult",
        "accessTokenOrAppId",
        "msgId",
        "timeOut",
        "Config",
        "TIME_OUT",
        "ApiHandlerWapper",
        "TryCommonApiAsync",
        "msg_id",
        "msgId",
        "Senparc",
        "Weixin",
        "CommonAPIs",
        "CommonJsonSend",
        "SendAsync",
        "GetSendResult",
        "accessToken",
        "urlFormat",
        "data",
        "timeOut",
        "timeOut",
        "accessTokenOrAppId",
        "VideoMediaIdResult",
        "accessTokenOrAppId",
        "mediaId",
        "title",
        "description",
        "timeOut",
        "Config",
        "TIME_OUT",
        "ApiHandlerWapper",
        "TryCommonApiAsync",
        "Format",
        "accessToken",
        "AsUrlData",
        "media_id",
        "mediaId",
        "title",
        "title",
        "description",
        "description",
        "Senparc",
        "Weixin",
        "CommonAPIs",
        "CommonJsonSend",
        "SendAsync",
        "VideoMediaIdResult",
        "url",
        "data",
        "CommonJsonSendType",
        "POST",
        "timeOut",
        "accessTokenOrAppId"
    ],
    "literals": [
        "\"https://api.weixin.qq.com/cgi-bin/message/mass/sendall?access_token={0}\"",
        "\"image\"",
        "\"voice\"",
        "\"mpnews\"",
        "\"mpvideo\"",
        "\"wxcard\"",
        "\"text\"",
        "\"参数错误。\"",
        "\"https://api.weixin.qq.com/cgi-bin/message/mass/send?access_token={0}\"",
        "\"image\"",
        "\"voice\"",
        "\"mpnews\"",
        "\"wxcard\"",
        "\"发送视频信息请使用SendVideoGroupMessageByOpenId方法。\"",
        "\"text\"",
        "\"参数错误。\"",
        "\"https://api.weixin.qq.com/cgi-bin/message/mass/send?access_token={0}\"",
        "\"mpvideo\"",
        "\"https://api.weixin.qq.com/cgi-bin/message/mass/delete?access_token={0}\"",
        "\"https://api.weixin.qq.com/cgi-bin/message/mass/preview?access_token={0}\"",
        "\"image\"",
        "\"voice\"",
        "\"mpnews\"",
        "\"mpvideo\"",
        "\"text\"",
        "\"发送卡券息请使用WxCardGroupMessagePreview方法。\"",
        "\"参数错误。\"",
        "\"https://api.weixin.qq.com/cgi-bin/message/mass/preview?access_token={0}\"",
        "\"\\\"code\\\":\\\"{0}\\\",\\\"openid\\\":\\\"{1}\\\",\\\"timestamp\\\":\\\"{2}\\\",\\\"signature\\\":\\\"{3}\\\"\"",
        "\"wxcard\"",
        "\"https://api.weixin.qq.com/cgi-bin/message/mass/get?access_token={0}\"",
        "\"https://file.api.weixin.qq.com/cgi-bin/media/uploadvideo?access_token={0}\"",
        "\"https://api.weixin.qq.com/cgi-bin/message/mass/sendall?access_token={0}\"",
        "\"image\"",
        "\"voice\"",
        "\"mpnews\"",
        "\"mpvideo\"",
        "\"wxcard\"",
        "\"text\"",
        "\"参数错误。\"",
        "\"https://api.weixin.qq.com/cgi-bin/message/mass/send?access_token={0}\"",
        "\"image\"",
        "\"voice\"",
        "\"mpnews\"",
        "\"wxcard\"",
        "\"发送视频信息请使用SendVideoGroupMessageByOpenId方法。\"",
        "\"text\"",
        "\"参数错误。\"",
        "\"https://api.weixin.qq.com/cgi-bin/message/mass/send?access_token={0}\"",
        "\"mpvideo\"",
        "\"https://api.weixin.qq.com/cgi-bin/message/mass/delete?access_token={0}\"",
        "\"https://api.weixin.qq.com/cgi-bin/message/mass/preview?access_token={0}\"",
        "\"image\"",
        "\"voice\"",
        "\"mpnews\"",
        "\"mpvideo\"",
        "\"text\"",
        "\"发送卡券息请使用WxCardGroupMessagePreview方法。\"",
        "\"参数错误。\"",
        "\"https://api.weixin.qq.com/cgi-bin/message/mass/preview?access_token={0}\"",
        "\"\\\"code\\\":\\\"{0}\\\",\\\"openid\\\":\\\"{1}\\\",\\\"timestamp\\\":\\\"{2}\\\",\\\"signature\\\":\\\"{3}\\\"\"",
        "\"wxcard\"",
        "\"https://api.weixin.qq.com/cgi-bin/message/mass/get?access_token={0}\"",
        "\"https://file.api.weixin.qq.com/cgi-bin/media/uploadvideo?access_token={0}\""
    ],
    "variables": [
        "urlFormat",
        "BaseGroupMessageDataByGroupId",
        "baseData",
        "urlFormat",
        "BaseGroupMessageDataByOpenId",
        "baseData",
        "urlFormat",
        "BaseGroupMessageDataByOpenId",
        "baseData",
        "urlFormat",
        "data",
        "urlFormat",
        "BaseGroupMessageDataPreview",
        "baseData",
        "urlFormat",
        "BaseGroupMessageDataPreview",
        "baseData",
        "urlFormat",
        "data",
        "url",
        "data",
        "urlFormat",
        "BaseGroupMessageDataByGroupId",
        "baseData",
        "urlFormat",
        "BaseGroupMessageDataByOpenId",
        "baseData",
        "urlFormat",
        "BaseGroupMessageDataByOpenId",
        "baseData",
        "urlFormat",
        "data",
        "urlFormat",
        "BaseGroupMessageDataPreview",
        "baseData",
        "urlFormat",
        "BaseGroupMessageDataPreview",
        "baseData",
        "urlFormat",
        "data",
        "url",
        "data"
    ],
    "comments": [
        "----------------------------------------------------------------\n    Copyright (C) 2016 Senparc\n    \n    文件名：GroupMessageAPI.cs\n    文件功能描述：高级群发接口\n    \n    \n    创建标识：Senparc - 20150211\n    \n    修改标识：Senparc - 20150303\n    修改描述：整理接口\n \n    修改标识：Senparc - 20150312\n    修改描述：开放代理请求超时时间\n\n    修改标识：Senparc - 20160718\n    修改描述：增加其接口的异步方法\n----------------------------------------------------------------",
        "API地址：http://mp.weixin.qq.com/wiki/15/5380a4e6f02f2ffdc7981a8ed7a40753.html",
        "高级群发接口",
        "</summary>",
        "根据分组进行群发【订阅号与服务号认证后均可用】",
        "",
        "请注意：",
        "1、该接口暂时仅提供给已微信认证的服务号",
        "2、虽然开发者使用高级群发接口的每日调用限制为100次，但是用户每月只能接收4条，请小心测试",
        "3、无论在公众平台网站上，还是使用接口群发，用户每月只能接收4条群发消息，多于4条的群发将对该用户发送失败。",
        "4、群发视频时需要先调用GetVideoMediaIdResult接口获取专用的MediaId然后进行群发",
        "",
        "</summary>",
        "<param name=\"accessTokenOrAppId\"></param>",
        "<param name=\"groupId\">群发到的分组的group_id，参加用户管理中用户分组接口，若is_to_all值为true，可不填写group_id</param>",
        "<param name=\"value\">群发媒体文件时传入mediaId,群发文本消息时传入content,群发卡券时传入cardId</param>",
        "<param name=\"type\"></param>",
        "<param name=\"isToAll\">用于设定是否向全部用户发送，值为true或false，选择true该消息群发给所有用户，选择false可根据group_id发送给指定群组的用户</param>",
        "<param name=\"timeOut\">代理请求超时时间（毫秒）</param>",
        "<returns></returns>",
        "根据OpenId进行群发",
        "</summary>",
        "<param name=\"accessTokenOrAppId\"></param>",
        "<param name=\"value\">群发媒体文件时传入mediaId,群发文本消息时传入content,群发卡券时传入cardId</param>",
        "<param name=\"type\"></param>",
        "<param name=\"openIds\">openId字符串数组</param>",
        "<param name=\"timeOut\">代理请求超时时间（毫秒）</param>",
        "<returns></returns>",
        "根据OpenID列表群发视频消息【订阅号不可用，服务号认证后可用】",
        "注意：群发视频时需要先调用GetVideoMediaIdResult接口获取专用的MediaId然后进行群发",
        "</summary>",
        "<param name=\"accessTokenOrAppId\"></param>",
        "<param name=\"title\"></param>",
        "<param name=\"mediaId\"></param>",
        "<param name=\"openIds\">openId字符串数组</param>",
        "<param name=\"description\"></param>",
        "<param name=\"timeOut\">代理请求超时时间（毫秒）</param>",
        "<returns></returns>",
        "删除群发消息",
        "</summary>",
        "<param name=\"accessTokenOrAppId\"></param>",
        "<param name=\"msgId\">发送出去的消息ID</param>",
        "<param name=\"timeOut\">代理请求超时时间（毫秒）</param>",
        "<returns></returns>",
        "官方API地址为https://api.weixin.qq.com//cgi-bin/message/mass/delete?access_token={0}，应该是多了一个/",
        "预览接口【订阅号与服务号认证后均可用】",
        "注意：openId与wxName两者任选其一，同时传入以wxName优先",
        "</summary>",
        "<param name=\"accessTokenOrAppId\"></param>",
        "<param name=\"value\">群发媒体消息时为media_id，群发文本信息为content</param>",
        "<param name=\"type\"></param>",
        "<param name=\"openId\">接收消息用户对应该公众号的openid</param>",
        "<param name=\"wxName\">接收消息用户的微信号</param>",
        "<param name=\"timeOut\">代理请求超时时间（毫秒）</param>",
        "<returns></returns>",
        "预览卡券接口",
        "</summary>",
        "<param name=\"accessTokenOrAppId\"></param>",
        "<param name=\"cardId\"></param>",
        "<param name=\"code\"></param>",
        "<param name=\"openId\"></param>",
        "<param name=\"wxName\"></param>",
        "<param name=\"timestamp\"></param>",
        "<param name=\"signature\"></param>",
        "<param name=\"timeOut\"></param>",
        "<returns></returns>",
        "查询群发消息发送状态【订阅号与服务号认证后均可用】",
        "</summary>",
        "<param name=\"accessTokenOrAppId\"></param>",
        "<param name=\"msgId\">群发消息后返回的消息id</param>",
        "<param name=\"timeOut\">代理请求超时时间（毫秒）</param>",
        "<returns></returns>",
        "获取视频群发用的MediaId",
        "</summary>",
        "<param name=\"accessTokenOrAppId\"></param>",
        "<param name=\"mediaId\"></param>",
        "<param name=\"title\"></param>",
        "<param name=\"description\"></param>",
        "<param name=\"timeOut\"></param>",
        "<returns></returns>",
        "【异步方法】根据分组进行群发【订阅号与服务号认证后均可用】",
        "",
        "请注意：",
        "1、该接口暂时仅提供给已微信认证的服务号",
        "2、虽然开发者使用高级群发接口的每日调用限制为100次，但是用户每月只能接收4条，请小心测试",
        "3、无论在公众平台网站上，还是使用接口群发，用户每月只能接收4条群发消息，多于4条的群发将对该用户发送失败。",
        "4、群发视频时需要先调用GetVideoMediaIdResult接口获取专用的MediaId然后进行群发",
        "",
        "</summary>",
        "<param name=\"accessTokenOrAppId\"></param>",
        "<param name=\"groupId\">群发到的分组的group_id，参加用户管理中用户分组接口，若is_to_all值为true，可不填写group_id</param>",
        "<param name=\"value\">群发媒体文件时传入mediaId,群发文本消息时传入content,群发卡券时传入cardId</param>",
        "<param name=\"type\"></param>",
        "<param name=\"isToAll\">用于设定是否向全部用户发送，值为true或false，选择true该消息群发给所有用户，选择false可根据group_id发送给指定群组的用户</param>",
        "<param name=\"timeOut\">代理请求超时时间（毫秒）</param>",
        "<returns></returns>",
        "【异步方法】根据OpenId进行群发",
        "</summary>",
        "<param name=\"accessTokenOrAppId\"></param>",
        "<param name=\"value\">群发媒体文件时传入mediaId,群发文本消息时传入content,群发卡券时传入cardId</param>",
        "<param name=\"type\"></param>",
        "<param name=\"openIds\">openId字符串数组</param>",
        "<param name=\"timeOut\">代理请求超时时间（毫秒）</param>",
        "<returns></returns>",
        "【异步方法】根据OpenID列表群发视频消息【订阅号不可用，服务号认证后可用】",
        "注意：群发视频时需要先调用GetVideoMediaIdResult接口获取专用的MediaId然后进行群发",
        "</summary>",
        "<param name=\"accessTokenOrAppId\"></param>",
        "<param name=\"title\"></param>",
        "<param name=\"mediaId\"></param>",
        "<param name=\"openIds\">openId字符串数组</param>",
        "<param name=\"description\"></param>",
        "<param name=\"timeOut\">代理请求超时时间（毫秒）</param>",
        "<returns></returns>",
        "【异步方法】删除群发消息",
        "</summary>",
        "<param name=\"accessTokenOrAppId\"></param>",
        "<param name=\"msgId\">发送出去的消息ID</param>",
        "<param name=\"timeOut\">代理请求超时时间（毫秒）</param>",
        "<returns></returns>",
        "官方API地址为https://api.weixin.qq.com//cgi-bin/message/mass/delete?access_token={0}，应该是多了一个/",
        "【异步方法】预览接口【订阅号与服务号认证后均可用】",
        "注意：openId与wxName两者任选其一，同时传入以wxName优先",
        "</summary>",
        "<param name=\"accessTokenOrAppId\"></param>",
        "<param name=\"value\">群发媒体消息时为media_id，群发文本信息为content</param>",
        "<param name=\"type\"></param>",
        "<param name=\"openId\">接收消息用户对应该公众号的openid</param>",
        "<param name=\"wxName\">接收消息用户的微信号</param>",
        "<param name=\"timeOut\">代理请求超时时间（毫秒）</param>",
        "<returns></returns>",
        "【异步方法】预览卡券接口",
        "</summary>",
        "<param name=\"accessTokenOrAppId\"></param>",
        "<param name=\"cardId\"></param>",
        "<param name=\"code\"></param>",
        "<param name=\"openId\"></param>",
        "<param name=\"wxName\"></param>",
        "<param name=\"timestamp\"></param>",
        "<param name=\"signature\"></param>",
        "<param name=\"timeOut\"></param>",
        "<returns></returns>",
        "【异步方法】查询群发消息发送状态【订阅号与服务号认证后均可用】",
        "</summary>",
        "<param name=\"accessTokenOrAppId\"></param>",
        "<param name=\"msgId\">群发消息后返回的消息id</param>",
        "<param name=\"timeOut\">代理请求超时时间（毫秒）</param>",
        "<returns></returns>",
        "【异步方法】获取视频群发用的MediaId",
        "</summary>",
        "<param name=\"accessTokenOrAppId\"></param>",
        "<param name=\"mediaId\"></param>",
        "<param name=\"title\"></param>",
        "<param name=\"description\"></param>",
        "<param name=\"timeOut\"></param>",
        "<returns></returns>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "SendResult",
        "SendGroupMessageByGroupId",
        "SendResult",
        "SendGroupMessageByOpenId",
        "SendResult",
        "SendVideoGroupMessageByOpenId",
        "WxJsonResult",
        "DeleteSendMessage",
        "SendResult",
        "SendGroupMessagePreview",
        "SendResult",
        "WxCardGroupMessagePreview",
        "GetSendResult",
        "GetGroupMessageResult",
        "VideoMediaIdResult",
        "GetVideoMediaIdResult",
        "SendGroupMessageByGroupIdAsync",
        "SendGroupMessageByOpenIdAsync",
        "SendVideoGroupMessageByOpenIdAsync",
        "DeleteSendMessageAsync",
        "SendGroupMessagePreviewAsync",
        "WxCardGroupMessagePreviewAsync",
        "GetGroupMessageResultAsync",
        "GetVideoMediaIdResultAsync"
    ],
    "classes": [
        "GroupMessageApi"
    ]
}