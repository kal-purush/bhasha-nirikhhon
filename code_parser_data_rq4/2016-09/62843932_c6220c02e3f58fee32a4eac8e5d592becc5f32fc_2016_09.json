{
    "identifiers": [
        "he",
        "he",
        "text",
        "options",
        "html",
        "options",
        "escape",
        "text"
    ],
    "literals": [
        "\"he\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [
        "version",
        "encode",
        "decode",
        "unescape"
    ],
    "comments": [
        "Generated by typings",
        "Source: https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/f86e99d05c7258d925bf04556f5eac4706cac576/he/he.d.ts"
    ],
    "docstrings": [
        "* The default value for the useNamedReferences option is false. This\n        * means that encode() will not use any named character references\n        * (e.g. &copy;) in the output — hexadecimal escapes (e.g. &#xA9;) will\n        * be used instead. Set it to true to enable the use of named references.",
        "* The default value for the encodeEverything option is false. This means\n        * that encode() will not use any character references for printable ASCII\n        * symbols that don’t need escaping. Set it to true to encode every symbol\n        * in the input string. When set to true, this option takes precedence over\n        * allowUnsafeSymbols (i.e. setting the latter to true in such a case has\n          * no effect).",
        "* The default value for the strict option is false. This means that\n        * encode() will encode any HTML text content you feed it, even if it\n        * contains any symbols that cause parse errors. To throw an error when such\n        * invalid HTML is encountered, set the strict option to true. This option\n        * makes it possible to use he as part of HTML parsers and HTML validators.",
        "* The default value for the allowUnsafeSymbols option is false. This means\n        * that characters that are unsafe for use in HTML content (&, <, >, \", ',\n        * and `) will be encoded. When set to true, only non-ASCII characters will\n        * be encoded. If the encodeEverything option is set to true, this option\n        * will be ignored.",
        "* Encode a string of text\n        *\n        * This function takes a string of text and encodes (by default) any symbols\n        * that aren’t printable ASCII symbols and &, <, >, \", ', and `, replacing\n        * them with character references.\n        *\n        * As long as the input string contains allowed code points only, the return\n        * value of this function is always valid HTML. Any (invalid) code points\n        * that cannot be represented using a character reference in the input are\n        * not encoded.",
        "* The default value for the isAttributeValue option is false. This means\n         * that decode() will decode the string as if it were used in a text\n         * context in an HTML document. HTML has different rules for parsing\n         * character references in attribute values — set this option to true to\n         * treat the input string as if it were used as an attribute value.",
        "* The default value for the strict option is false. This means that\n         * decode() will decode any HTML text content you feed it, even if it\n         * contains any entities that cause parse errors. To throw an error when\n         * such invalid HTML is encountered, set the strict option to true. This\n         * option makes it possible to use he as part of HTML parsers and HTML\n         * validators.",
        "* Decode a string of HTML text\n         *\n         * This function takes a string of HTML and decodes any named and numerical\n         * character references in it using the algorithm described in section\n         * 12.2.4.69 of the HTML spec.",
        "* Escape XML entities\n     *\n     * This function takes a string of text and escapes it for use in text\n     * contexts in XML or HTML documents. Only the following characters are\n     * escaped: &, <, >, \", ', and `."
    ],
    "functions": [],
    "classes": []
}