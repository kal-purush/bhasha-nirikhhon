{
    "identifiers": [
        "com",
        "rocketfuel",
        "libertybell",
        "java",
        "awt",
        "image",
        "BufferedImage",
        "java",
        "io",
        "ByteArrayInputStream",
        "java",
        "io",
        "DataInputStream",
        "java",
        "io",
        "java",
        "io",
        "InputStream",
        "javax",
        "imageio",
        "ImageIO",
        "MAX_HEADER_SIZE",
        "boundary",
        "inStream",
        "boundary",
        "inStream",
        "boundary",
        "boundary",
        "sequence",
        "length",
        "b",
        "posSequence",
        "i",
        "i",
        "MAX_HEADER_SIZE",
        "i",
        "b",
        "readByte",
        "b",
        "sequence",
        "posSequence",
        "posSequence",
        "posSequence",
        "sequence",
        "length",
        "length",
        "posSequence",
        "length",
        "sbuf",
        "isEnd",
        "isReturn",
        "isEnd",
        "ch",
        "ch",
        "read",
        "ch",
        "isReturn",
        "ch",
        "isEnd",
        "sbuf",
        "append",
        "ch",
        "sbuf",
        "toString",
        "buffer",
        "BOUNDARY",
        "boundary",
        "getBytes",
        "advanceToSequence",
        "BOUNDARY",
        "typeLine",
        "lengthLine",
        "line",
        "line",
        "readStreamLine",
        "line",
        "length",
        "line",
        "toLowerCase",
        "startsWith",
        "typeLine",
        "line",
        "line",
        "toLowerCase",
        "startsWith",
        "lengthLine",
        "line",
        "err",
        "line",
        "typeLine",
        "lengthLine",
        "err",
        "typePieces",
        "typeLine",
        "split",
        "lengthPieces",
        "lengthLine",
        "split",
        "typePieces",
        "length",
        "lengthPieces",
        "length",
        "err",
        "contentLength",
        "parseInt",
        "lengthPieces",
        "buffer",
        "contentLength",
        "readFully",
        "buffer",
        "buffer",
        "b",
        "readJpegAsByteArray",
        "ImageIO",
        "read",
        "b"
    ],
    "literals": [
        "\"\\r\\n\"",
        "\"content-type\"",
        "\"content-length\"",
        "\"Unknown line type: \"",
        "\"ERROR READING ... the header was corrupt.\"",
        "\": \"",
        "\": \"",
        "\"Error Reading .... \""
    ],
    "variables": [
        "ch"
    ],
    "comments": [
        "Search for the stream boundary",
        "Blocking read of the full stream"
    ],
    "docstrings": [
        "* Test class for an MjpegInputStream.\n * @author a. schoessow\n * @version 0.0.1\n * \n * Change log:\n * 30.09.2014: First implementation",
        "* Default Constructor\n     * @param inStream The input stream needed for the client connection\n     * @param boundary The boundary split ID for the data content",
        "* Advance a byte stream to a specific position\n     * @param sequence The sequence the byte stream shall be forwarded to\n     * @return length The stream length\n     * @throws IOException",
        "* Read exactly one line from the stream.\n     * @return String The received line as string\n     * @throws IOException",
        "* \n     * @return byte[] The received Jpeg as byte array.\n     * @throws IOException",
        "* Read the Jpeg as buffered image.\n     * @return BufferedImage The image\n     * @throws IOException"
    ],
    "functions": [
        "MjpegInputStream",
        "advanceToSequence",
        "readStreamLine",
        "readJpegAsByteArray",
        "BufferedImage",
        "readJpegAsBufferedImage"
    ],
    "classes": [
        "MjpegInputStream"
    ]
}