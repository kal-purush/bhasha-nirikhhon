{
    "identifiers": [
        "argparse",
        "sys",
        "urllib2",
        "xml",
        "etree",
        "ElementTree",
        "ET",
        "re",
        "context",
        "on_session_started",
        "on_launch",
        "on_intent",
        "on_session_ended",
        "session_started_request",
        "session",
        "session_started_request",
        "session",
        "launch_request",
        "session",
        "launch_request",
        "session",
        "get_welcome_response",
        "intent_request",
        "session",
        "intent_request",
        "session",
        "intent_request",
        "intent_request",
        "intent_name",
        "get_WolfRam",
        "intent",
        "session",
        "intent_name",
        "signoff",
        "intent_name",
        "get_help",
        "intent_name",
        "get_help",
        "intent_name",
        "get_help",
        "intent_name",
        "signoff",
        "get_help",
        "session_ended_request",
        "session",
        "session_ended_request",
        "session",
        "build_response",
        "session_attributes",
        "build_speechlet_response",
        "card_title",
        "speech_output",
        "reprompt_text",
        "should_end_session",
        "intent",
        "session",
        "intent",
        "get",
        "multiple_replace",
        "replace",
        "query",
        "app_id",
        "query",
        "urllib2",
        "urlopen",
        "url",
        "ET",
        "parse",
        "data",
        "dataxml",
        "getroot",
        "dataxmlroot",
        "get",
        "plaintext",
        "dataxmlroot",
        "iter",
        "plaintext",
        "text",
        "multiple_replace",
        "replace",
        "query",
        "query",
        "result",
        "build_response",
        "session_attributes",
        "build_speechlet_response",
        "intent",
        "speech_output",
        "reprompt_text",
        "should_end_session",
        "build_response",
        "session_attributes",
        "build_speechlet_response",
        "card_title",
        "speech_output",
        "reprompt_text",
        "should_end_session",
        "build_response",
        "session_attributes",
        "build_speechlet_response",
        "card_title",
        "speech_output",
        "reprompt_text",
        "should_end_session",
        "text",
        "re",
        "compile",
        "join",
        "re",
        "escape",
        "keys",
        "regex",
        "sub",
        "mo",
        "mo",
        "mo",
        "start",
        "mo",
        "end",
        "text",
        "title",
        "output",
        "reprompt_text",
        "should_end_session",
        "output",
        "reprompt_text",
        "should_end_session",
        "session_attributes",
        "speechlet_response",
        "session_attributes",
        "speechlet_response"
    ],
    "literals": [
        "\"event.session.application.applicationId=\"",
        "'session'",
        "'application'",
        "'applicationId'",
        "'session'",
        "'new'",
        "'requestId'",
        "'request'",
        "'requestId'",
        "'session'",
        "'request'",
        "'type'",
        "\"LaunchRequest\"",
        "'request'",
        "'session'",
        "'request'",
        "'type'",
        "\"IntentRequest\"",
        "'request'",
        "'session'",
        "'request'",
        "'type'",
        "\"SessionEndedRequest\"",
        "'request'",
        "'session'",
        "\"on_session_started requestId=\"",
        "'requestId'",
        "\", sessionId=\"",
        "'sessionId'",
        "\"on_launch requestId=\"",
        "'requestId'",
        "\", sessionId=\"",
        "'sessionId'",
        "\"on_intent requestId=\"",
        "'requestId'",
        "\", sessionId=\"",
        "'sessionId'",
        "'intent'",
        "'intent'",
        "'name'",
        "\"askWolfRam\"",
        "\"AMAZON.NoIntent\"",
        "\"AMAZON.YesIntent\"",
        "\"AMAZON.HelpIntent\"",
        "\"AMAZON.CancelIntent\"",
        "\"AMAZON.StopIntent\"",
        "\"on_session_ended requestId=\"",
        "'requestId'",
        "\", sessionId=\"",
        "'sessionId'",
        "\"Welcome to Wolfram\"",
        "\"Welcome to Wolf Ram Alpha, what is your question?\"",
        "\"Can you repeat the question\"",
        "\"enter your app id\"",
        "'slots'",
        "'response'",
        "'value'",
        "\" \"",
        "\"%20\"",
        "\"http://api.wolframalpha.com/v2/query?podindex=2&format=plaintext&appid=\"",
        "\"&input=\"",
        "\"Wolfram Alpha doesn't understand your query. \"",
        "'success'",
        "'plaintext'",
        "\"%20\"",
        "\" \"",
        "\"The answer to your question: \"",
        "\" is: \"",
        "\" Would you like to ask another question?\"",
        "\"I must be deaf, what did you say?\"",
        "'name'",
        "\"Help\"",
        "\"Ask wolf ram alpha a question.\"",
        "\"I must be deaf, what did you say?\"",
        "\"Signing off\"",
        "\"This is wolf ram alpha signing off\"",
        "\"\"",
        "\"(%s)\"",
        "\"|\"",
        "'outputSpeech'",
        "'type'",
        "'PlainText'",
        "'text'",
        "'reprompt'",
        "'outputSpeech'",
        "'type'",
        "'PlainText'",
        "'text'",
        "'shouldEndSession'",
        "'version'",
        "'1.0'",
        "'sessionAttributes'",
        "'response'"
    ],
    "variables": [
        "intent",
        "intent_name",
        "session_attributes",
        "card_title",
        "speech_output",
        "reprompt_text",
        "should_end_session",
        "session_attributes",
        "app_id",
        "query",
        "replace",
        "query",
        "url",
        "data",
        "dataxml",
        "dataxmlroot",
        "result",
        "result",
        "replace",
        "query",
        "speech_output",
        "reprompt_text",
        "should_end_session",
        "session_attributes",
        "card_title",
        "speech_output",
        "should_end_session",
        "reprompt_text",
        "session_attributes",
        "card_title",
        "speech_output",
        "should_end_session",
        "reprompt_text",
        "regex"
    ],
    "comments": [
        "if (event['session']['application']['applicationId'] !=",
        "\"amzn1.echo-sdk-ams.app.[unique-value-here]\"):",
        "raise ValueError(\"Invalid Application ID\")",
        "Dispatch to your skill's launch",
        "Dispatch to your skill's intent handlers",
        "add cleanup logic here",
        "--------------- Functions that control the skill's behavior ------------------",
        "To get appid, sign up at https://developer.wolframalpha.com/portal/apisignup.html",
        "Create a regular expression  from the dictionary keys",
        "For each match, look-up corresponding value in dictionary",
        "--------------- Helpers that build all of the responses ----------------------"
    ],
    "docstrings": [
        "\"\"\" Route the incoming request based on type (LaunchRequest, IntentRequest,\n    etc.) The JSON body of the request is provided in the event parameter.\n    \"\"\"",
        "\"\"\"\n    Uncomment this if statement and populate with your skill's application ID to\n    prevent someone else from configuring a skill that sends requests to this\n    function.\n    \"\"\"",
        "\"\"\" Called when the session starts \"\"\"",
        "\"\"\" Called when the user launches the skill without specifying what they\n    want\n    \"\"\"",
        "\"\"\" Called when the user specifies an intent for this skill \"\"\"",
        "\"\"\" Called when the user ends the session.\n\n    Is not called when the skill returns should_end_session=true\n    \"\"\""
    ],
    "functions": [
        "lambda_handler",
        "on_session_started",
        "on_launch",
        "on_intent",
        "on_session_ended",
        "get_welcome_response",
        "get_WolfRam",
        "get_help",
        "signoff",
        "multiple_replace",
        "build_speechlet_response",
        "build_response"
    ],
    "classes": []
}