{
    "identifiers": [
        "math",
        "math",
        "radians",
        "math",
        "radians",
        "math",
        "radians",
        "math",
        "radians",
        "rad_lat",
        "rad_lon",
        "deg_lat",
        "deg_lon",
        "rad_lat",
        "rad_lon",
        "deg_lat",
        "deg_lon",
        "_check_bounds",
        "classmethod",
        "cls",
        "deg_lat",
        "deg_lon",
        "math",
        "radians",
        "deg_lat",
        "math",
        "radians",
        "deg_lon",
        "GeoLocation",
        "rad_lat",
        "rad_lon",
        "deg_lat",
        "deg_lon",
        "classmethod",
        "cls",
        "rad_lat",
        "rad_lon",
        "math",
        "degrees",
        "rad_lat",
        "math",
        "degrees",
        "rad_lon",
        "GeoLocation",
        "rad_lat",
        "rad_lon",
        "deg_lat",
        "deg_lon",
        "rad_lat",
        "GeoLocation",
        "MIN_LAT",
        "rad_lat",
        "GeoLocation",
        "MAX_LAT",
        "rad_lon",
        "GeoLocation",
        "MIN_LON",
        "rad_lon",
        "GeoLocation",
        "MAX_LON",
        "other",
        "radius",
        "EARTH_RADIUS",
        "radius",
        "math",
        "acos",
        "math",
        "sin",
        "rad_lat",
        "math",
        "sin",
        "other",
        "rad_lat",
        "math",
        "cos",
        "rad_lat",
        "math",
        "cos",
        "other",
        "rad_lat",
        "math",
        "cos",
        "rad_lon",
        "other",
        "rad_lon",
        "distance",
        "radius",
        "EARTH_RADIUS",
        "radius",
        "distance",
        "distance",
        "radius",
        "rad_lat",
        "rad_dist",
        "rad_lat",
        "rad_dist",
        "min_lat",
        "GeoLocation",
        "MIN_LAT",
        "max_lat",
        "GeoLocation",
        "MAX_LAT",
        "math",
        "asin",
        "math",
        "sin",
        "rad_dist",
        "math",
        "cos",
        "rad_lat",
        "rad_lon",
        "delta_lon",
        "min_lon",
        "GeoLocation",
        "MIN_LON",
        "min_lon",
        "math",
        "pi",
        "rad_lon",
        "delta_lon",
        "max_lon",
        "GeoLocation",
        "MAX_LON",
        "max_lon",
        "math",
        "pi",
        "max",
        "min_lat",
        "GeoLocation",
        "MIN_LAT",
        "min",
        "max_lat",
        "GeoLocation",
        "MAX_LAT",
        "GeoLocation",
        "MIN_LON",
        "GeoLocation",
        "MAX_LON",
        "GeoLocation",
        "from_radians",
        "min_lat",
        "min_lon",
        "GeoLocation",
        "from_radians",
        "max_lat",
        "max_lon"
    ],
    "literals": [
        "\"Illegal arguments\"",
        "\"Illegal arguments\""
    ],
    "variables": [
        "MIN_LAT",
        "MAX_LAT",
        "MIN_LON",
        "MAX_LON",
        "EARTH_RADIUS",
        "rad_lat",
        "rad_lon",
        "deg_lat",
        "deg_lon",
        "rad_lat",
        "rad_lon",
        "deg_lat",
        "deg_lon",
        "rad_dist",
        "min_lat",
        "max_lat",
        "delta_lon",
        "min_lon",
        "max_lon",
        "min_lat",
        "max_lat",
        "min_lon",
        "max_lon"
    ],
    "comments": [
        "kilometers",
        "angular distance in radians on a great circle",
        "a pole is within the distance"
    ],
    "docstrings": [
        "'''\n    Class representing a coordinate on a sphere, most likely Earth.\n\n    This class is based from the code smaple in this paper:\n        http://janmatuschek.de/LatitudeLongitudeBoundingCoordinates\n\n    The owner of that website, Jan Philip Matuschek, is the full owner of\n    his intellectual property. This class is simply a Python port of his very\n    useful Java code. All code written by Jan Philip Matuschek and ported by github.com/jfein/PyGeoTools\n    (which is all of this class) is owned by Jan Philip Matuschek.\n    '''",
        "'''\n        Computes the great circle distance between this GeoLocation instance\n        and the other.\n        '''",
        "'''\n        Computes the bounding coordinates of all points on the surface\n        of a sphere that has a great circle distance to the point represented\n        by this GeoLocation instance that is less or equal to the distance argument.\n\n        Param:\n            distance - the distance from the point represented by this GeoLocation\n                       instance. Must be measured in the same unit as the radius\n                       argument (which is kilometers by default)\n\n            radius   - the radius of the sphere. defaults to Earth's radius.\n\n        Returns a list of two GeoLoations - the SW corner and the NE corner - that\n        represents the bounding box.\n        '''"
    ],
    "functions": [
        "from_degrees",
        "from_radians",
        "_check_bounds",
        "distance_to",
        "bounding_locations"
    ],
    "classes": [
        "GeoLocation"
    ]
}