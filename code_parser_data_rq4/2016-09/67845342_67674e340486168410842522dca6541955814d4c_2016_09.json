{
    "identifiers": [
        "A",
        "i",
        "xrange",
        "len",
        "A",
        "j",
        "xrange",
        "i",
        "len",
        "A",
        "A",
        "j",
        "i",
        "A",
        "i",
        "i",
        "n2",
        "n1",
        "n2",
        "sumVector",
        "multVector",
        "A",
        "i",
        "div",
        "A",
        "j",
        "A",
        "v",
        "x",
        "i",
        "xrange",
        "len",
        "v",
        "newV",
        "v",
        "i",
        "x",
        "newV",
        "v1",
        "v2",
        "i",
        "xrange",
        "len",
        "v1",
        "newV",
        "v1",
        "i",
        "v2",
        "i",
        "newV",
        "A",
        "i",
        "A",
        "j",
        "i",
        "j",
        "printMatrix",
        "A",
        "printMatrix",
        "pivotamento",
        "A"
    ],
    "literals": [
        "\"|\\t\"",
        "\"%.1f\"",
        "\"\\t\"",
        "\"\\t|\"",
        "\"\\n\\n\""
    ],
    "variables": [
        "n1",
        "n2",
        "div",
        "A",
        "j",
        "newV",
        "newV",
        "A"
    ],
    "comments": [
        "-*- coding: utf-8 -*-"
    ],
    "docstrings": [
        "\"\"\"\n. Algoritmo: pivotamento\n\npara i de 0 até N - 1\n    para j de i + 1 até N\n        n1 recebe Aji\n        pivot recebe Aii\n        div recebe pivot / n1\n        Aj recebe Aj - Ai*div\n\n====================================\n\nx recebe vetor(0)\npara i de N - 1 até 0\n    sum recebe 0\n    para j de N até 0\n        se i == j\n            x = A[i][j]\n        senão\n            sum recebe sum + A[i][j]\n    x[i] = A[i+1][j]\n\n\"\"\"",
        "\"\"\"A função recebe uma matriz A (n x n) e\n    retorna a matriz zerada na diagonal inferior\n    esquerda.\"\"\""
    ],
    "functions": [
        "pivotamento",
        "multVector",
        "sumVector",
        "printMatrix"
    ],
    "classes": []
}