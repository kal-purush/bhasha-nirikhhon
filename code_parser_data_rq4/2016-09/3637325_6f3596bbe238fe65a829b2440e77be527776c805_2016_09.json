{
    "identifiers": [
        "com",
        "enigmastation",
        "ml",
        "perceptron",
        "impl",
        "com",
        "enigmastation",
        "ml",
        "perceptron",
        "RelationalPerceptronRepository",
        "com",
        "enigmastation",
        "ml",
        "util",
        "LRUCache",
        "org",
        "apache",
        "commons",
        "dbcp",
        "ConnectionFactory",
        "org",
        "apache",
        "commons",
        "dbcp",
        "DriverManagerConnectionFactory",
        "org",
        "apache",
        "commons",
        "dbcp",
        "PoolableConnectionFactory",
        "org",
        "apache",
        "commons",
        "dbcp",
        "PoolingDriver",
        "org",
        "apache",
        "commons",
        "pool",
        "impl",
        "GenericObjectPool",
        "java",
        "sql",
        "java",
        "util",
        "java",
        "util",
        "stream",
        "Collectors",
        "DEFAULT_ID",
        "nodeIdCache",
        "buildTables",
        "nodeIdCache",
        "put",
        "Layer",
        "FROM",
        "nodeIdCache",
        "put",
        "Layer",
        "TO",
        "conn",
        "getConnection",
        "ps",
        "conn",
        "prepareStatement",
        "ps",
        "execute",
        "ps",
        "conn",
        "prepareStatement",
        "ps",
        "execute",
        "ps",
        "conn",
        "prepareStatement",
        "ps",
        "execute",
        "buildTables",
        "e",
        "e",
        "connectionPool",
        "connectionFactory",
        "SuppressWarnings",
        "poolableConnectionFactory",
        "connectionFactory",
        "connectionPool",
        "driver",
        "driver",
        "registerPool",
        "connectionPool",
        "conn",
        "getConnection",
        "tables",
        "rs",
        "conn",
        "getMetaData",
        "getTables",
        "rs",
        "next",
        "tables",
        "add",
        "rs",
        "getString",
        "toLowerCase",
        "tables",
        "contains",
        "ps",
        "conn",
        "prepareStatement",
        "ps",
        "execute",
        "ps",
        "conn",
        "prepareStatement",
        "ps",
        "execute",
        "tables",
        "contains",
        "ps",
        "conn",
        "prepareStatement",
        "Layer",
        "HIDDEN",
        "getStoreName",
        "ps",
        "execute",
        "ps",
        "conn",
        "prepareStatement",
        "Layer",
        "HIDDEN",
        "getStoreName",
        "Layer",
        "HIDDEN",
        "getStoreName",
        "ps",
        "execute",
        "ps",
        "conn",
        "prepareStatement",
        "Layer",
        "HIDDEN",
        "getStoreName",
        "Layer",
        "HIDDEN",
        "getStoreName",
        "ps",
        "execute",
        "tables",
        "contains",
        "ps",
        "conn",
        "prepareStatement",
        "Layer",
        "TO",
        "getStoreName",
        "ps",
        "execute",
        "ps",
        "conn",
        "prepareStatement",
        "Layer",
        "TO",
        "getStoreName",
        "Layer",
        "HIDDEN",
        "getStoreName",
        "ps",
        "execute",
        "ps",
        "conn",
        "prepareStatement",
        "Layer",
        "TO",
        "getStoreName",
        "Layer",
        "HIDDEN",
        "getStoreName",
        "ps",
        "execute",
        "e",
        "e",
        "Override",
        "token",
        "layer",
        "getNodeId",
        "token",
        "layer",
        "NodeCreation",
        "CREATE",
        "Override",
        "token",
        "layer",
        "creation",
        "id",
        "DEFAULT_ID",
        "layer",
        "equals",
        "Layer",
        "HIDDEN",
        "nodeId",
        "nodeIdCache",
        "get",
        "layer",
        "get",
        "token",
        "toString",
        "nodeId",
        "id",
        "nodeId",
        "id",
        "DEFAULT_ID",
        "conn",
        "getConnection",
        "ps",
        "conn",
        "prepareStatement",
        "ps",
        "setString",
        "token",
        "toString",
        "ps",
        "setInt",
        "layer",
        "ordinal",
        "rs",
        "ps",
        "executeQuery",
        "rs",
        "next",
        "id",
        "rs",
        "getInt",
        "creation",
        "NodeCreation",
        "CREATE",
        "id",
        "createNode",
        "token",
        "layer",
        "e",
        "e",
        "layer",
        "equals",
        "Layer",
        "HIDDEN",
        "nodeIdCache",
        "get",
        "layer",
        "put",
        "token",
        "toString",
        "id",
        "id",
        "token",
        "layer",
        "id",
        "conn",
        "getConnection",
        "ps",
        "conn",
        "prepareStatement",
        "Statement",
        "RETURN_GENERATED_KEYS",
        "ps",
        "setString",
        "token",
        "toString",
        "ps",
        "setInt",
        "layer",
        "ordinal",
        "ps",
        "executeUpdate",
        "rs",
        "ps",
        "getGeneratedKeys",
        "rs",
        "next",
        "id",
        "rs",
        "getInt",
        "e",
        "e",
        "id",
        "Override",
        "corpus",
        "targets",
        "nodeText",
        "corpus",
        "stream",
        "toString",
        "collect",
        "Collectors",
        "joining",
        "id",
        "getNodeId",
        "nodeText",
        "Layer",
        "HIDDEN",
        "NodeCreation",
        "NO_CREATE",
        "id",
        "DEFAULT_ID",
        "id",
        "createNode",
        "nodeText",
        "Layer",
        "HIDDEN",
        "token",
        "corpus",
        "setStrength",
        "getNodeId",
        "token",
        "Layer",
        "FROM",
        "id",
        "Layer",
        "HIDDEN",
        "corpus",
        "size",
        "token",
        "targets",
        "setStrength",
        "id",
        "getNodeId",
        "token",
        "Layer",
        "TO",
        "Layer",
        "TO",
        "Override",
        "targets",
        "conn",
        "getConnection",
        "ps",
        "conn",
        "prepareStatement",
        "ps",
        "setInt",
        "Layer",
        "TO",
        "ordinal",
        "rs",
        "ps",
        "executeQuery",
        "rs",
        "next",
        "targets",
        "add",
        "rs",
        "getString",
        "e",
        "e",
        "targets",
        "DriverManager",
        "getConnection",
        "e",
        "e",
        "Override",
        "to",
        "layer",
        "strength",
        "layer",
        "getStrength",
        "conn",
        "getConnection",
        "ps",
        "conn",
        "prepareStatement",
        "layer",
        "getStoreName",
        "ps",
        "setInt",
        "ps",
        "setInt",
        "to",
        "rs",
        "ps",
        "executeQuery",
        "rs",
        "next",
        "strength",
        "rs",
        "getDouble",
        "e",
        "e",
        "strength",
        "Override",
        "corpus",
        "targets",
        "hiddenIds",
        "conn",
        "getConnection",
        "ps",
        "conn",
        "prepareStatement",
        "Layer",
        "HIDDEN",
        "getStoreName",
        "c",
        "corpus",
        "ps",
        "setInt",
        "getNodeId",
        "c",
        "Layer",
        "FROM",
        "rs",
        "ps",
        "executeQuery",
        "rs",
        "next",
        "hiddenIds",
        "add",
        "rs",
        "getInt",
        "ps",
        "conn",
        "prepareStatement",
        "Layer",
        "TO",
        "getStoreName",
        "c",
        "targets",
        "ps",
        "setInt",
        "getNodeId",
        "c",
        "Layer",
        "TO",
        "rs",
        "ps",
        "executeQuery",
        "rs",
        "next",
        "hiddenIds",
        "add",
        "rs",
        "getInt",
        "e",
        "e",
        "hiddenIds",
        "Override",
        "to",
        "layer",
        "strength",
        "conn",
        "getConnection",
        "ps",
        "conn",
        "prepareStatement",
        "layer",
        "getStoreName",
        "ps",
        "setInt",
        "ps",
        "setInt",
        "to",
        "rs",
        "ps",
        "executeQuery",
        "rs",
        "next",
        "id",
        "rs",
        "getInt",
        "update",
        "conn",
        "prepareStatement",
        "layer",
        "getStoreName",
        "update",
        "setDouble",
        "strength",
        "update",
        "setInt",
        "id",
        "update",
        "executeUpdate",
        "insert",
        "conn",
        "prepareStatement",
        "layer",
        "getStoreName",
        "insert",
        "setInt",
        "insert",
        "setInt",
        "to",
        "insert",
        "setDouble",
        "strength",
        "insert",
        "executeUpdate",
        "e",
        "e"
    ],
    "literals": [
        "\"drop table node\"",
        "\"drop table wordhidden\"",
        "\"drop table hiddenword\"",
        "\"jdbc:h2:file:./perceptron\"",
        "\"SA\"",
        "\"\"",
        "\"UnusedDeclaration\"",
        "\"unused\"",
        "\"perceptron\"",
        "\"node\"",
        "\"create table node(id bigint identity(0), layer int, create_key longvarchar)\"",
        "\"create unique index node_ck on node(create_key, layer)\"",
        "\"wordhidden\"",
        "\"create table \"",
        "\" (id bigint identity(0), fromid bigint, toid bigint, strength double)\"",
        "\"create index \"",
        "\"_idx1 on \"",
        "\"(fromid)\"",
        "\"create index \"",
        "\"_idx2 on \"",
        "\"(toid)\"",
        "\"hiddenword\"",
        "\"create table \"",
        "\" (id bigint identity(0), fromid bigint, toid bigint, strength double)\"",
        "\"create index \"",
        "\"_idx1 on \"",
        "\"(fromid)\"",
        "\"create index \"",
        "\"_idx2 on \"",
        "\"(toid)\"",
        "\"select id from node where create_key=? and layer=?\"",
        "\"insert into node (create_key, layer) values (?, ?)\"",
        "\":\"",
        "\"select create_key from node where layer=?\"",
        "\"jdbc:apache:commons:dbcp:perceptron\"",
        "\"select strength from \"",
        "\" where fromid=? and toid=?\"",
        "\"select toid from \"",
        "\" where fromid=?\"",
        "\"select fromid from \"",
        "\" where toid=?\"",
        "\"select id from \"",
        "\" where fromid=? and toid=?\"",
        "\"update \"",
        "\" set strength=? where id=?\"",
        "\"insert into \"",
        "\" (fromid, toid, strength) \"",
        "\" values (?, ?, ?)\""
    ],
    "variables": [
        "id"
    ],
    "comments": [
        "check the cache! -- but we don't cache hidden nodes.",
        "we need to know if it's not there, because we need to create a data set if not",
        "not found!",
        "now create connections!",
        "update",
        "insert"
    ],
    "docstrings": [
        "Copyright 2012 Joseph B. Ottinger\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.",
        "* This is a repository for the perceptron that does internal resource pooling,\n * and is customized for use with HSQLDB.\n * <p>\n * This can be generified, I think. It can also be changed to use a datasource\n * provider from JNDI.",
        "* This could use a cache *so* bad... assuming it's called a whole lot for the same terms."
    ],
    "functions": [
        "H2PerceptronRepository",
        "clear",
        "buildTables",
        "getNodeId",
        "getNodeId",
        "createNode",
        "generateHiddenNodes",
        "getAllTargets",
        "Connection",
        "getConnection",
        "getStrength",
        "getAllHiddenIds",
        "setStrength"
    ],
    "classes": [
        "H2PerceptronRepository"
    ]
}