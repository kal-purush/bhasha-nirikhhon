{
    "identifiers": [
        "by",
        "ras",
        "config",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "context",
        "annotation",
        "Configuration",
        "org",
        "springframework",
        "security",
        "config",
        "annotation",
        "web",
        "builders",
        "HttpSecurity",
        "org",
        "springframework",
        "security",
        "config",
        "annotation",
        "web",
        "configuration",
        "EnableWebSecurity",
        "org",
        "springframework",
        "security",
        "config",
        "annotation",
        "web",
        "configuration",
        "WebSecurityConfigurerAdapter",
        "org",
        "springframework",
        "security",
        "core",
        "context",
        "SecurityContextHolder",
        "org",
        "springframework",
        "security",
        "core",
        "userdetails",
        "UserDetailsService",
        "org",
        "springframework",
        "security",
        "web",
        "util",
        "matcher",
        "AntPathRequestMatcher",
        "Configuration",
        "EnableWebSecurity",
        "userDetailsService",
        "Autowired",
        "userDetailsService",
        "userDetailsService",
        "userDetailsService",
        "Override",
        "http",
        "http",
        "authorizeRequests",
        "anyRequest",
        "authenticated",
        "formLogin",
        "loginPage",
        "permitAll",
        "logout",
        "logoutRequestMatcher",
        "permitAll"
    ],
    "literals": [
        "\"/\"",
        "\"/logout\""
    ],
    "variables": [
        "userDetailsService"
    ],
    "comments": [
        ".antMatchers(\"/market/*\").authenticated()",
        ".antMatchers(\"/market/admin/*\").hasAuthority(\"ADMIN\")",
        ".antMatchers(\"/user\", \"/usertest\", \"/market\", \"/market/user/*\", \"/market/user/usertest\").hasAuthority(\"CLIENT\")",
        ".and()",
        ".userDetailsService(userDetailsService)",
        "http.csrf().disable();",
        "get credetials of current user session",
        "SecurityContextHolder.getContext().getAuthentication().getName();"
    ],
    "docstrings": [],
    "functions": [
        "SecurityConfig",
        "configure"
    ],
    "classes": [
        "SecurityConfig"
    ]
}