{
    "identifiers": [
        "numpy",
        "np",
        "cv2",
        "matplotlib",
        "pyplot",
        "plt",
        "img1",
        "kp1",
        "img2",
        "kp2",
        "matches",
        "img1",
        "shape",
        "img1",
        "shape",
        "img2",
        "shape",
        "img2",
        "shape",
        "np",
        "zeros",
        "max",
        "rows1",
        "rows2",
        "cols1",
        "cols2",
        "dtype",
        "rows1",
        "cols1",
        "np",
        "dstack",
        "img1",
        "img1",
        "img1",
        "rows2",
        "cols1",
        "np",
        "dstack",
        "img2",
        "img2",
        "img2",
        "mat",
        "matches",
        "mat",
        "queryIdx",
        "mat",
        "trainIdx",
        "kp1",
        "img1_idx",
        "pt",
        "kp2",
        "img2_idx",
        "pt",
        "cv2",
        "circle",
        "x1",
        "y1",
        "cv2",
        "circle",
        "x2",
        "cols1",
        "y2",
        "cv2",
        "line",
        "x1",
        "y1",
        "x2",
        "cols1",
        "y2",
        "cv2",
        "namedWindow",
        "cv2",
        "WINDOW_NORMAL",
        "cv2",
        "resizeWindow",
        "cv2",
        "imshow",
        "cv2",
        "waitKey",
        "cv2",
        "destroyWindow",
        "cv2",
        "imread",
        "cv2",
        "imread",
        "cv2",
        "ORB",
        "orb",
        "detectAndCompute",
        "img1",
        "orb",
        "detectAndCompute",
        "img2",
        "cv2",
        "BFMatcher",
        "cv2",
        "NORM_HAMMING",
        "crossCheck",
        "bf",
        "match",
        "des1",
        "des2",
        "sorted",
        "matches",
        "key",
        "x",
        "x",
        "distance",
        "drawMatches",
        "img1",
        "kp1",
        "img2",
        "kp2",
        "matches",
        "plt",
        "imshow",
        "img3",
        "plt",
        "show"
    ],
    "literals": [
        "'uint8'",
        "'Matched Features'",
        "'Matched Features'",
        "'Matched Features'",
        "'Matched Features'",
        "'/Users/yw/ImageProcessing/Images/normal.jpg'",
        "'/Users/yw/ImageProcessing/Images/changed.jpg'"
    ],
    "variables": [
        "rows1",
        "cols1",
        "rows2",
        "cols2",
        "img1_idx",
        "img2_idx",
        "x1",
        "y1",
        "x2",
        "y2",
        "img1",
        "img2",
        "orb",
        "kp1",
        "des1",
        "kp2",
        "des2",
        "bf",
        "matches",
        "matches",
        "img3"
    ],
    "comments": [
        "Create a new output image that concatenates the two images together",
        "(a.k.a) a montage",
        "Create the output image",
        "The rows of the output are the largest between the two images",
        "and the columns are simply the sum of the two together",
        "The intent is to make this a colour image, so make this 3 channels",
        "Place the first image to the left",
        "Place the next image to the right of it",
        "For each pair of points we have between both images",
        "draw circles, then connect a line between them",
        "Get the matching keypoints for each of the images",
        "x - columns",
        "y - rows",
        "Draw a small circle at both co-ordinates",
        "radius 4",
        "colour blue",
        "thickness = 1",
        "Draw a line in between the two points",
        "thickness = 1",
        "colour blue",
        "Show the image",
        "Also return the image if you'd like a copy",
        "queryImage",
        "trainImage",
        "Initiate ORB detector",
        "find the keypoints and descriptors with ORB",
        "create BFMatcher object",
        "Match descriptors.",
        "Sort them in the order of their distance.",
        "Draw first 10 matches."
    ],
    "docstrings": [
        "\"\"\"\n    My own implementation of cv2.drawMatches as OpenCV 2.4.9\n    does not have this function available but it's supported in\n    OpenCV 3.0.0\n\n    This function takes in two images with their associated \n    keypoints, as well as a list of DMatch data structure (matches) \n    that contains which keypoints matched in which images.\n\n    An image will be produced where a montage is shown with\n    the first image followed by the second image beside it.\n\n    Keypoints are delineated with circles, while lines are connected\n    between matching keypoints.\n\n    img1,img2 - Grayscale images\n    kp1,kp2 - Detected list of keypoints through any of the OpenCV keypoint \n              detection algorithms\n    matches - A list of matches of corresponding keypoints through any\n              OpenCV keypoint matching algorithm\n    \"\"\""
    ],
    "functions": [
        "drawMatches"
    ],
    "classes": []
}