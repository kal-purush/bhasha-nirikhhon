{
    "identifiers": [
        "AggregateType",
        "Commit",
        "MarshalledCommit",
        "Store",
        "debug",
        "TransformationWorkerInput",
        "Transformation",
        "debug",
        "Transformation",
        "commit",
        "transformationSpec",
        "commit",
        "superParams",
        "superParams",
        "aggregateTypes",
        "marshalled",
        "transform",
        "softInternalDeadline",
        "hardInternalDeadline",
        "target",
        "writeCapacityLimit",
        "resultSet",
        "state",
        "aggregateTypes",
        "readCapacityLimit",
        "commitsScanned",
        "resultSet",
        "throttledReads",
        "resultSet",
        "commit",
        "marshalled",
        "resultSet",
        "resultSet",
        "commitsRead",
        "commit",
        "outputCommits",
        "outputCommits",
        "outputCommit",
        "Commit",
        "outputCommit",
        "commit",
        "targetMutator",
        "commit",
        "targetMutator",
        "outputCommits",
        "newState",
        "commit",
        "deadline",
        "completed",
        "deadline",
        "completed",
        "targetMutator",
        "newState",
        "targetMutator",
        "targetMutator",
        "targetMutator",
        "CommitTransformation"
    ],
    "literals": [
        "'@ddes/core'",
        "'debug'",
        "'.'",
        "'./Transformation'",
        "'@ddes/store-transformations:CommitTransformation'",
        "string",
        "'CommitTransformation#transform() must return an array'"
    ],
    "variables": [
        "log",
        "transformationSpec",
        "targetMutator",
        "completed",
        "newState",
        "commitsScanned",
        "commitsRead",
        "throttledReads",
        "outputCommits"
    ],
    "comments": [],
    "docstrings": [
        "* @module @ddes/store-transformations",
        "* @hidden",
        "* For transformations operating on the [[Commit]] level.\n * Is most useful when used in conjunction with a [[Transformer]].\n *\n * ```typescript\n * export default new CommitTransformation({\n *   name: 'Do something',\n *\n *   source: new AwsStore({tableName: 'tableA'}),\n *   target: new AwsStore({tableName: 'tableB'}),\n *\n *   async transform(commit: Commit) {\n *     // return the output commits of this commit transformation\n *     return [commit]\n *   },\n * })\n * ```"
    ],
    "functions": [
        "perform"
    ],
    "classes": [
        "CommitTransformation"
    ]
}