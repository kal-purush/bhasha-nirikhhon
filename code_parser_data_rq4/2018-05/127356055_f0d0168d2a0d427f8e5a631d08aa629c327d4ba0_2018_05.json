{
    "identifiers": [
        "AssertOptions",
        "doWithOptions",
        "FatalError",
        "SmokeTestWorld",
        "AllSdmGoals",
        "logger",
        "SdmGoal",
        "AllSdmGoals",
        "world",
        "sha",
        "test",
        "g",
        "state",
        "opts",
        "doWithOptions",
        "logger",
        "test",
        "sha",
        "opts",
        "world",
        "AllSdmGoals",
        "AllSdmGoals",
        "sha",
        "AllSdmGoals",
        "result",
        "goals",
        "test",
        "logger",
        "test",
        "sha",
        "goalsString",
        "goals",
        "it",
        "test",
        "sha",
        "goalsString",
        "goals",
        "it",
        "state",
        "FatalError",
        "test",
        "sha",
        "goalsString",
        "goals",
        "it",
        "state",
        "test",
        "sha",
        "goalsString",
        "goals",
        "it",
        "test",
        "state",
        "sha",
        "opts",
        "goals",
        "goals",
        "goals",
        "goalString",
        "s",
        "s"
    ],
    "literals": [
        "\"../AssertOptions\"",
        "\"../util/retry\"",
        "\"../../../../smoke-test/features/support/world\"",
        "\"../../../typings/types\"",
        "\"@atomist/automation-client\"",
        "\"planned\"",
        "\"requested\"",
        "\"in_process\"",
        "\"waiting_for_approval\"",
        "\"success\"",
        "\"failure\"",
        "\"skipped\"",
        "string",
        "Looking for goal satisfying [${test}] on commit ${sha}; options=${JSON.stringify(opts)}...",
        "\"src/graphql/query/AllSdmGoals\"",
        "Looking for goal satisfying [${test}] on commit ${sha}: Found",
        "Not there: Goal state satisfying [${test}] required on commit ${sha}: Found",
        "\"failure\"",
        "\"failure\"",
        "Failed state: Status satisfying [${test}] required on commit ${sha}: Found",
        "Keeping looking: Status satisfying [${test}] required on commit ${sha}: Found",
        "Waiting for status satisfying [${test}] and state [${state}] on commit ${sha}",
        "${goals.length} goals: \\n${goals.map(goalString).join(\"\\n\\t\")}",
        "\"\\n\\t\""
    ],
    "variables": [
        "result",
        "goals",
        "it"
    ],
    "comments": [
        "return `context='${s.context}';state='${s.state}';target_url=${s.target_url};description='${s.description}'`;"
    ],
    "docstrings": [],
    "functions": [
        "waitForGoalOf",
        "goalsString",
        "goalString"
    ],
    "classes": []
}