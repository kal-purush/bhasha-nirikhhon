{
    "identifiers": [
        "React",
        "Component",
        "View",
        "WebView",
        "StatusBar",
        "Component",
        "View",
        "StatusBar",
        "WebView",
        "webViewCode",
        "WebView",
        "View"
    ],
    "literals": [
        "'react'",
        "'react-native'",
        "<html>\n<head>\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\">\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js\"></script>\n<script type=\"text/javascript\" src=\"https://static.codehs.com/gulp/0c46c5da54af4d95de8cd2af3f1ae7c279106565/chs-js-lib/chs.js\"></script>\n\n<style>\n    body, html {\n        margin: 0;\n        padding: 0;\n    }\n    canvas {\n        margin: 0px;\n        padding: 0px;\n        display: inline-block;\n        vertical-align: top;\n    }\n    #btn-container {\n        text-align: center;\n        padding-top: 10px;\n    }\n    #btn-play {\n        background-color: #8cc63e;\n    }\n    #btn-stop {\n        background-color: #de5844;\n    }\n    .glyphicon {\n        margin-top: -3px;\n        color: #FFFFFF;\n    }\n</style>\n</head>\n\n<body>\n    <div id=\"canvas-container\" style=\"margin: 0 auto; \">\n        <canvas\n        id=\"game\"\n        width=\"400\"\n        height=\"480\"\n        class=\"codehs-editor-canvas\"\n        style=\"width: 100%; height: 100%; margin: 0 auto;\"\n        ></canvas>\n    </div>\n    <div id=\"console\"></div>\n    <div id=\"btn-container\">\n        <button class=\"btn btn-main btn-lg\" id=\"btn-play\" onclick='stopProgram(); runProgram();'><span class=\"glyphicon glyphicon-play\" aria-hidden=\"true\"></span></button>\n        <button class=\"btn btn-main btn-lg\" id=\"btn-stop\" onclick='stopProgram();'><span class=\"glyphicon glyphicon-stop\" aria-hidden=\"true\"></span></button>\n    </div>\n\n<script>\n    var console = {};\n    console.log = function(msg){\n        $(\"#console\").html($(\"#console\").html() + \"     \" + msg);\n    };\n\n    var runProgram = function() {\n        //Variables for making a big bee//\nvar head = new Circle(100);\nvar eye = new Circle(7);\nvar eyes = new Circle(7);\n\nvar body = new Arc(100,1,180,0);\nvar antenna = new Line(15,20,65,15);\nvar antennas = new Line(15,20,65,15);\n\nvar wing = new Oval(170,80);\nvar wings= new Oval(170,80);\nvar smallhead= new Circle(25);\n\nvar smalleye= new Circle(7);\nvar babyhead= new Circle(25);\nvar babybody= new Arc(25,1,180,0);\n\nvar babyeye= new Circle(3);\nvar babyeyes= new Circle(3);\nvar babywing= new Oval(10,30);\nvar babywings= new Oval(10,30);\n//Variables for making \"bees\" move//\nvar hive;\nvar swarm;\nvar dx = 4;\nvar dy = 4;\n\n//My Start Function//\nfunction start(){\n    firstJoke();\n    secondJoke();\n    background();\n    bee();\n    babyBee();\n    cleverbee();\n    yellowball();\n    hives();\n\t\n}\n//My joke storyline//\nfunction firstJoke(){\n    var first = readLine(\"Directions: Figure out the pun. Are you ready? \"); \n    var second = readLine(\"What bee is good for your health? \");\n    if(second = bee){\n\t\tprintln(\"You got it right!\");\n    }\n}\n\n//This is a challenge joke//\nfunction secondJoke(){\n    var beginning= readLine(\"So... you got the joke, prepare for a challenge! Are you ready? \");\n    var next= readLine(\"What are the cleverest bees? \");\n    if(next = bee){\n        println(\"Wow! Your smart\");\n    }\n    var gift= readLine(\"Since you buzzed my puns, I will reward you. Are you ready? \");\n}\n//Creation of mama bee//\nfunction bee(){\n    head.setPosition(200,250);\n    head.setColor(Color.yellow);\n    add(head);\n    \n    eye.setPosition(150,200);\n    eye.setColor(Color.black);\n    add(eye);\n \n    eyes.setPosition(250, 200);\n    eyes.setColor(Color.black);\n    add(eyes);\n    \n    body.setPosition(200,260);\n    body.setColor(Color.black);\n    body.rotate(180);\n    add(body);\n    \n    antenna.move(160,120);\n    antenna.setColor(Color.black);\n    antenna.rotate(95);\n    add(antenna);\n    \n    antennas.move(150,120);\n    antennas.setColor(Color.black);\n    antennas.rotate(95);\n    add(antennas);\n\n    wing.setPosition(70, 200);\n    wing.rotate(55);\n    wing.setColor(Color.gray);\n    add(wing);\n    \n    wings.setPosition(330, 200);\n    wings.rotate(118);\n    wings.setColor(Color.gray);\n    add(wings);\n    \n    smallhead.move(195,100);\n    add(smallhead);\n}\n//Hehehe, it's from my joke (What are the cleverest bees?)//\nfunction cleverbee(){\n    var glasses = new WebImage(\"http://clipartix.com/wp-content/uploads/2016/04/Sunglasses-clipart-free-clip-art-clipartwiz.png\");\n    glasses.setSize(180,100);\n    glasses.setPosition(getWidth()/3.8, getHeight()/3.2);\n    add(glasses);\n}\n//Creation of baby bee//\nfunction babyBee(){\n    babyhead.setPosition(200,420);\n    babyhead.setColor(Color.yellow);\n    add(babyhead);\n    \n    babybody.setPosition(200,420);\n    babybody.rotate(180);\n    babybody.setColor(Color.black);\n    add(babybody);\n    \n    babyeye.setPosition(195, 410);\n    babyeye.setColor(Color.black);\n    add(babyeye);\n    \n    babyeyes.setPosition(205, 410);\n    babyeyes.setColor(Color.black);\n    add(babyeyes);\n    \n    babywing.setPosition(230,410);\n    babywing.rotate(50);\n    babywing.setColor(Color.gray);\n    add(babywing);\n    \n    babywings.setPosition(170, 408);\n    babywings.rotate(-28);\n    babywings.setColor(Color.gray);\n    add(babywings);\n}\n//Orange color background//\nfunction background(){\n    setBackgroundColor(Color.orange);\n}\n//One of the flying bees//\nfunction yellowball(){\n    hive = new Circle(40);\n\thive.setPosition(250, 100);\n\tadd(hive);\n\tmouseClickMethod(making);\n\thive.setColor(Color.yellow);\n\tsetTimer(making, 10);\n}\n//Another flying bee//\nfunction hives(){\n    swarm = new Circle(40);\n\tswarm.setPosition(200, 300);\n\tadd(swarm);\n\tmouseClickMethod(production);\n\tswarm.setColor(Color.yellow);\n\tsetTimer(production, 15);\n}\n//How they move//\nfunction production(){\n    barrier();\n    swarm.move(dx, dy);\n}\n//How they move//\nfunction making(){\n    walls();\n\thive.move(dx, dy);\n}\n//Bouncing of the walls//\nfunction walls(){\n\t// Bounce off right wall\n\tif(hive.getX() + hive.getRadius() > getWidth()){\n\t\tdx = -dx;\n\t}\n\t\n\t// Bounce off left wall\n\tif(hive.getX() - hive.getRadius() < 0){\n\t\tdx = -dx;\n\t}\n\t\n\t// Bounce off bottom wall\n\tif(hive.getY() + hive.getRadius() > getHeight()){\n\t\tdy = -dy;\n\t}\n\t\n\t// Bounce off top wall\n\tif(hive.getY() - hive.getRadius() < 0){\n\t\tdy = -dy;\n\t}\n}\n//Bouncing of the walls//\nfunction barrier(){\n    // Bounce off right wall\n\tif(swarm.getX() + swarm.getRadius() > getWidth()){\n\t\tdx = -dx;\n\t}\n\t\n\t// Bounce off left wall\n\tif(swarm.getX() - swarm.getRadius() < 0){\n\t\tdx = -dx;\n\t}\n\t\n\t// Bounce off bottom wall\n\tif(swarm.getY() + swarm.getRadius() > getHeight()){\n\t\tdy = -dy;\n\t}\n\t\n\t// Bounce off top wall\n\tif(swarm.getY() - swarm.getRadius() < 0){\n\t\tdy = -dy;\n\t}\n}\n\n\n\n        if (typeof start === 'function') {\n            start();\n        }\n\n        // Overrides setSize() if called from the user's code. Needed because\n        // we have to change the canvas size and attributes to reflect the\n        // user's desired program size. Calling setSize() from user code only\n        // has an effect if Fit to Full Screen is Off. If Fit to Full Screen is\n        // On, then setSize() does nothing.\n        function setSize(width, height) {\n            if (!true) {\n                // Call original graphics setSize()\n                window.__graphics__.setSize(width, height);\n\n                // Scale to screen width but keep aspect ratio of program\n                // Subtract 2 to allow for border\n                var canvasWidth = window.innerWidth - 2;\n                var canvasHeight = canvasWidth * getHeight() / getWidth();\n\n                // Make canvas reflect desired size set\n                adjustMarginTop(canvasHeight);\n                setCanvasContainerSize(canvasWidth, canvasHeight);\n                setCanvasAttributes(canvasWidth, canvasHeight);\n            }\n        }\n    };\n\n    var stopProgram = function() {\n        removeAll();\n        window.__graphics__.fullReset();\n    }\n\n    window.onload = function() {\n        if (!false) {\n            $('#btn-container').remove();\n        }\n\n        var canvasWidth;\n        var canvasHeight;\n        if (true) {\n            // Get device window width and set program size to those dimensions\n            setSize(window.innerWidth, window.innerHeight);\n            canvasWidth = getWidth();\n            canvasHeight = getHeight();\n\n            if (false) {\n                // Make room for buttons if being shown\n                $('#btn-container').css('padding', '5px 0');\n                canvasHeight -= $('#btn-container').outerHeight();\n            }\n\n            setCanvasAttributes(canvasWidth, canvasHeight);\n        } else {\n            // Scale to screen width but keep aspect ratio of program\n            // Subtract 2 to allow for border\n            canvasWidth = window.innerWidth - 2;\n            canvasHeight = canvasWidth * getHeight() / getWidth();\n\n            // Light border around canvas if not full screen\n            $('#canvas-container').css('border', '1px solid #beccd4');\n\n            adjustMarginTop(canvasHeight);\n        }\n\n        setCanvasContainerSize(canvasWidth, canvasHeight);\n\n        if (true) {\n            runProgram();\n        }\n    };\n\n    // Set the canvas container width and height.\n    function setCanvasContainerSize(width, height) {\n        $('#canvas-container').width(width);\n        $('#canvas-container').height(height);\n    }\n\n    // Set the width and height attributes of the canvas. Allows\n    // getTouchCoordinates to sense x and y correctly.\n    function setCanvasAttributes(canvasWidth, canvasHeight) {\n        $('#game').attr('width', canvasWidth);\n        $('#game').attr('height', canvasHeight);\n    }\n\n    // Assumes the Fit to Full Screen setting is Off. Adjusts the top margin\n    // depending on the Show Play/Stop Buttons setting.\n    function adjustMarginTop(canvasHeight) {\n        var marginTop = (window.innerHeight - canvasHeight)/2;\n        if (false) {\n            marginTop -= $('#btn-container').height()/3;\n        }\n        $('#canvas-container').css('margin-top', marginTop);\n    }\n</script>\n</body>\n</html>",
        "\"/\""
    ],
    "variables": [
        "webViewCode"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "render"
    ],
    "classes": [
        "App"
    ]
}