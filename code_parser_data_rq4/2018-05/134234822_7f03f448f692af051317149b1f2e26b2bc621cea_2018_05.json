{
    "identifiers": [
        "root",
        "factory",
        "define",
        "define",
        "define",
        "factory",
        "root",
        "factory",
        "root",
        "root",
        "factory",
        "root",
        "number",
        "number",
        "number",
        "precision",
        "decimalAdjust",
        "number",
        "precision",
        "precision",
        "obj",
        "obj",
        "func",
        "func",
        "value",
        "value",
        "value",
        "val",
        "val",
        "val",
        "val",
        "value",
        "val",
        "val",
        "val",
        "val",
        "val",
        "val",
        "val",
        "value",
        "exp",
        "exp",
        "exp",
        "value",
        "value",
        "value",
        "exp",
        "exp",
        "isNaN",
        "value",
        "exp",
        "exp",
        "NaN",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "exp",
        "exp",
        "value",
        "value",
        "value",
        "value",
        "value",
        "exp",
        "exp",
        "message",
        "scope",
        "isFunction",
        "message",
        "message",
        "scope",
        "message",
        "dest",
        "obj",
        "key",
        "obj",
        "obj",
        "key",
        "value",
        "obj",
        "key",
        "isString",
        "value",
        "isNumber",
        "value",
        "isBoolean",
        "value",
        "isArray",
        "value",
        "dest",
        "key",
        "value",
        "dest",
        "key",
        "dest",
        "key",
        "merge",
        "dest",
        "key",
        "value",
        "dest",
        "I18n",
        "key",
        "DEFAULT_OPTIONS",
        "key",
        "DEFAULT_OPTIONS",
        "key",
        "I18n",
        "key",
        "DEFAULT_OPTIONS",
        "isSet",
        "key",
        "key",
        "DEFAULT_OPTIONS",
        "key",
        "I18n",
        "I18n",
        "I18n",
        "locale",
        "locale",
        "I18n",
        "isFunction",
        "result",
        "result",
        "result",
        "locale",
        "isArray",
        "result",
        "result",
        "result",
        "result",
        "I18n",
        "locale",
        "locale",
        "locales",
        "locale",
        "locale",
        "I18n",
        "locales",
        "I18n",
        "I18n",
        "I18n",
        "locales",
        "I18n",
        "locales",
        "locale",
        "locale",
        "localeParts",
        "firstFallback",
        "localeParts",
        "localeParts",
        "secondFallback",
        "localeParts",
        "localeParts",
        "firstFallback",
        "localeParts",
        "locale",
        "locale",
        "I18n",
        "firstFallback",
        "secondFallback",
        "nullableFallbackLocale",
        "nullableFallbackLocale",
        "nullableFallbackLocale",
        "nullableFallbackLocale",
        "locale",
        "nullableFallbackLocale",
        "nullableFallbackLocale",
        "locales",
        "locales",
        "I18n",
        "I18n",
        "locale",
        "locale",
        "I18n",
        "I18n",
        "count",
        "count",
        "I18n",
        "I18n",
        "isSet",
        "I18n",
        "scope",
        "options",
        "options",
        "options",
        "options",
        "locales",
        "fullScope",
        "scope",
        "options",
        "locales",
        "locale",
        "locales",
        "scopes",
        "fullScope",
        "translations",
        "locale",
        "translations",
        "scopes",
        "translations",
        "translations",
        "scopes",
        "translations",
        "translations",
        "translations",
        "translations",
        "translations",
        "isSet",
        "options",
        "lazyEvaluate",
        "options",
        "scope",
        "I18n",
        "count",
        "locale",
        "translations",
        "locale",
        "pluralizer",
        "count",
        "isObject",
        "translations",
        "pluralizerKeys",
        "pluralizerKey",
        "pluralizerKeys",
        "isSet",
        "translations",
        "pluralizerKey",
        "message",
        "translations",
        "pluralizerKey",
        "message",
        "I18n",
        "count",
        "scope",
        "options",
        "options",
        "options",
        "options",
        "locales",
        "scope",
        "scope",
        "options",
        "locales",
        "locale",
        "locales",
        "scopes",
        "scope",
        "translations",
        "locale",
        "translations",
        "scopes",
        "translations",
        "translations",
        "scopes",
        "isObject",
        "translations",
        "scopes",
        "message",
        "count",
        "locale",
        "translations",
        "message",
        "message",
        "message",
        "message",
        "isSet",
        "options",
        "isObject",
        "options",
        "message",
        "count",
        "options",
        "options",
        "message",
        "options",
        "translations",
        "options",
        "message",
        "translations",
        "I18n",
        "time",
        "time",
        "time",
        "time",
        "time",
        "date",
        "date",
        "date",
        "DATE",
        "I18n",
        "arguments",
        "args",
        "subject",
        "args",
        "subject",
        "attr",
        "subject",
        "subject",
        "attr",
        "isSet",
        "options",
        "attr",
        "options",
        "attr",
        "subject",
        "attr",
        "options",
        "I18n",
        "scope",
        "options",
        "scope",
        "isSet",
        "options",
        "translationOptions",
        "translationOptions",
        "options",
        "isSet",
        "options",
        "translationOptions",
        "options",
        "translationOptions",
        "I18n",
        "scope",
        "options",
        "options",
        "options",
        "scope",
        "options",
        "options",
        "optionsWithoutDefault",
        "translationOptions",
        "translationOption",
        "isSet",
        "translationOption",
        "translation",
        "translationOption",
        "optionsWithoutDefault",
        "isSet",
        "translationOption",
        "translation",
        "lazyEvaluate",
        "translationOption",
        "scope",
        "translation",
        "translation",
        "translationFound",
        "scope",
        "options",
        "translation",
        "translation",
        "translation",
        "options",
        "isObject",
        "translation",
        "isSet",
        "options",
        "translation",
        "options",
        "scope",
        "options",
        "translation",
        "I18n",
        "message",
        "options",
        "options",
        "options",
        "message",
        "matches",
        "message",
        "matches",
        "placeholder",
        "matches",
        "name",
        "placeholder",
        "isSet",
        "options",
        "name",
        "value",
        "options",
        "name",
        "name",
        "options",
        "value",
        "placeholder",
        "message",
        "options",
        "value",
        "placeholder",
        "message",
        "options",
        "regex",
        "placeholder",
        "message",
        "message",
        "regex",
        "value",
        "message",
        "I18n",
        "count",
        "scope",
        "options",
        "options",
        "count",
        "options",
        "result",
        "count",
        "scope",
        "options",
        "result",
        "result",
        "scope",
        "options",
        "result",
        "result",
        "result",
        "options",
        "pluralizer",
        "options",
        "scope",
        "pluralizer",
        "count",
        "options",
        "I18n",
        "scope",
        "options",
        "scope",
        "s",
        "match",
        "p1",
        "p2",
        "p1",
        "p2",
        "options",
        "options",
        "options",
        "scope",
        "options",
        "localeForTranslation",
        "fullScope",
        "fullScopeWithLocale",
        "I18n",
        "placeholder",
        "message",
        "options",
        "placeholder",
        "I18n",
        "I18n",
        "I18n",
        "arguments",
        "I18n",
        "number",
        "options",
        "options",
        "options",
        "NUMBER_FORMAT",
        "number",
        "toFixed",
        "number",
        "options",
        "options",
        "negative",
        "number",
        "parts",
        "precision",
        "parts",
        "number",
        "buffer",
        "number",
        "number",
        "number",
        "number",
        "number",
        "formattedNumber",
        "buffer",
        "options",
        "options",
        "precision",
        "precision",
        "precision",
        "options",
        "precision",
        "formattedNumber",
        "options",
        "precision",
        "options",
        "format",
        "format",
        "format",
        "format",
        "formattedNumber",
        "format",
        "options",
        "formattedNumber",
        "sign",
        "formattedNumber",
        "I18n",
        "number",
        "options",
        "options",
        "options",
        "CURRENCY_FORMAT",
        "number",
        "options",
        "I18n",
        "scope",
        "value",
        "options",
        "options",
        "options",
        "scope",
        "value",
        "scope",
        "value",
        "scope",
        "value",
        "scope",
        "localizedValue",
        "scope",
        "value",
        "localizedValue",
        "value",
        "localizedValue",
        "options",
        "I18n",
        "date",
        "date",
        "date",
        "matches",
        "date",
        "matches",
        "i",
        "i",
        "matches",
        "i",
        "parseInt",
        "matches",
        "i",
        "matches",
        "fraction",
        "matches",
        "matches",
        "matches",
        "convertedDate",
        "matches",
        "matches",
        "matches",
        "matches",
        "matches",
        "matches",
        "fraction",
        "convertedDate",
        "matches",
        "matches",
        "matches",
        "matches",
        "matches",
        "matches",
        "fraction",
        "date",
        "convertedDate",
        "convertedDate",
        "date",
        "date",
        "convertedDate",
        "convertedDate",
        "date",
        "convertedDate",
        "convertedDate",
        "date",
        "convertedDate",
        "convertedDate",
        "date",
        "convertedDate",
        "I18n",
        "date",
        "format",
        "I18n",
        "options",
        "options",
        "options",
        "options",
        "DATE",
        "isNaN",
        "date",
        "date",
        "date",
        "date",
        "date",
        "date",
        "hour",
        "date",
        "date",
        "date",
        "offset",
        "offset",
        "absOffsetHours",
        "offset",
        "absOffsetHours",
        "absOffsetHours",
        "absOffsetHours",
        "absOffsetMinutes",
        "absOffsetMinutes",
        "absOffsetMinutes",
        "hour12",
        "hour12",
        "hour12",
        "hour12",
        "hour12",
        "format",
        "format",
        "options",
        "weekDay",
        "format",
        "format",
        "options",
        "weekDay",
        "format",
        "format",
        "options",
        "month",
        "format",
        "format",
        "options",
        "month",
        "format",
        "format",
        "padding",
        "day",
        "format",
        "format",
        "day",
        "format",
        "format",
        "day",
        "format",
        "format",
        "padding",
        "hour",
        "format",
        "format",
        "hour",
        "format",
        "format",
        "padding",
        "hour12",
        "format",
        "format",
        "hour12",
        "format",
        "format",
        "padding",
        "month",
        "format",
        "format",
        "month",
        "format",
        "format",
        "padding",
        "mins",
        "format",
        "format",
        "mins",
        "format",
        "format",
        "meridianOptions",
        "meridian",
        "format",
        "format",
        "padding",
        "secs",
        "format",
        "format",
        "secs",
        "format",
        "format",
        "weekDay",
        "format",
        "format",
        "padding",
        "year",
        "format",
        "format",
        "padding",
        "year",
        "format",
        "format",
        "year",
        "format",
        "format",
        "timezoneoffset",
        "format",
        "I18n",
        "scope",
        "dateString",
        "dateString",
        "scope",
        "date",
        "date",
        "format",
        "date",
        "date",
        "format",
        "I18n",
        "number",
        "options",
        "options",
        "options",
        "PERCENTAGE_FORMAT",
        "number",
        "options",
        "I18n",
        "number",
        "options",
        "size",
        "kb",
        "iterations",
        "size",
        "size",
        "kb",
        "iterations",
        "iterations",
        "unit",
        "size",
        "precision",
        "unit",
        "SIZE_UNITS",
        "iterations",
        "precision",
        "size",
        "size",
        "options",
        "options",
        "unit",
        "precision",
        "size",
        "options",
        "I18n",
        "scope",
        "options",
        "options",
        "options",
        "isArray",
        "scope",
        "scope",
        "scope",
        "options",
        "scope",
        "options",
        "scope",
        "scope",
        "I18n",
        "obj1",
        "obj2",
        "obj1",
        "obj2",
        "merge",
        "obj1",
        "obj2",
        "I18n",
        "I18n",
        "I18n",
        "I18n",
        "I18n",
        "I18n",
        "I18n"
    ],
    "literals": [
        "'function'",
        "\"i18n\"",
        "'object'",
        "\"use strict\"",
        "\"0\"",
        "'round'",
        "'function'",
        "'object'",
        "'function'",
        "'undefined'",
        "'[object Array]'",
        "'string'",
        "'[object String]'",
        "'number'",
        "'[object Number]'",
        "'undefined'",
        "'number'",
        "'e'",
        "'e'",
        "'e'",
        "'e'",
        "\"Sunday\"",
        "\"Monday\"",
        "\"Tuesday\"",
        "\"Wednesday\"",
        "\"Thursday\"",
        "\"Friday\"",
        "\"Saturday\"",
        "\"Sun\"",
        "\"Mon\"",
        "\"Tue\"",
        "\"Wed\"",
        "\"Thu\"",
        "\"Fri\"",
        "\"Sat\"",
        "\"January\"",
        "\"February\"",
        "\"March\"",
        "\"April\"",
        "\"May\"",
        "\"June\"",
        "\"July\"",
        "\"August\"",
        "\"September\"",
        "\"October\"",
        "\"November\"",
        "\"December\"",
        "\"Jan\"",
        "\"Feb\"",
        "\"Mar\"",
        "\"Apr\"",
        "\"May\"",
        "\"Jun\"",
        "\"Jul\"",
        "\"Aug\"",
        "\"Sep\"",
        "\"Oct\"",
        "\"Nov\"",
        "\"Dec\"",
        "\"AM\"",
        "\"PM\"",
        "\".\"",
        "\",\"",
        "\"$\"",
        "\"%u%n\"",
        "\",\"",
        "\".\"",
        "\"%\"",
        "\"%n%u\"",
        "\".\"",
        "\"\"",
        "\"kb\"",
        "\"mb\"",
        "\"gb\"",
        "\"tb\"",
        "\"en\"",
        "\"en\"",
        "\".\"",
        "'message'",
        "''",
        "\"default\"",
        "\"default\"",
        "\"-\"",
        "\"-\"",
        "\"undefined\"",
        "\"en\"",
        "\"default\"",
        "\"default\"",
        "\"zero\"",
        "\"other\"",
        "\"one\"",
        "\"other\"",
        "\"time\"",
        "\"date\"",
        "\"object\"",
        "\"string\"",
        "\"$1\"",
        "\"_#$#_\"",
        "\"\\\\{\"",
        "\"\\\\}\"",
        "\"$\"",
        "'.'",
        "'guess'",
        "'.'",
        "''",
        "'_'",
        "' '",
        "' '",
        "'[missing \"'",
        "'\" translation]'",
        "\"[missing \"",
        "\" value]\"",
        "\"number.format\"",
        "\".\"",
        "\"%n\"",
        "\"-\"",
        "\"\"",
        "\"\"",
        "\"%s\"",
        "\"%n\"",
        "\"%s%n\"",
        "\"%u\"",
        "\"%n\"",
        "\"%s\"",
        "\"number.currency.format\"",
        "\"number.format\"",
        "\"currency\"",
        "\"number\"",
        "\"number.format\"",
        "\"percentage\"",
        "\"object\"",
        "\"0\"",
        "\"number\"",
        "\" \"",
        "\"date\"",
        "'I18n.strftime() requires a valid date object, but received an invalid date.'",
        "\"-\"",
        "\"+\"",
        "\"0\"",
        "\"0\"",
        "\"%a\"",
        "\"%A\"",
        "\"%b\"",
        "\"%B\"",
        "\"%d\"",
        "\"%e\"",
        "\"%-d\"",
        "\"%H\"",
        "\"%-H\"",
        "\"%I\"",
        "\"%-I\"",
        "\"%m\"",
        "\"%-m\"",
        "\"%M\"",
        "\"%-M\"",
        "\"%p\"",
        "\"%S\"",
        "\"%-S\"",
        "\"%w\"",
        "\"%y\"",
        "\"%-y\"",
        "\"\"",
        "\"%Y\"",
        "\"%z\"",
        "\"number.percentage.format\"",
        "\"number.format\"",
        "\"number.human.storage_units.units.byte\"",
        "\"number.human.storage_units.units.\"",
        "\"%n%u\"",
        "\"\"",
        "\"undefined\"",
        "\"undefined\""
    ],
    "variables": [
        "I18n",
        "padding",
        "toFixed",
        "isObject",
        "isFunction",
        "isSet",
        "isArray",
        "isString",
        "isNumber",
        "isBoolean",
        "decimalAdjust",
        "lazyEvaluate",
        "merge",
        "key",
        "value",
        "DATE",
        "NUMBER_FORMAT",
        "CURRENCY_FORMAT",
        "PERCENTAGE_FORMAT",
        "SIZE_UNITS",
        "DEFAULT_OPTIONS",
        "key",
        "key",
        "result",
        "locales",
        "localeParts",
        "firstFallback",
        "secondFallback",
        "locales",
        "requestedLocale",
        "locale",
        "scopes",
        "fullScope",
        "translations",
        "pluralizer",
        "pluralizerKeys",
        "pluralizerKey",
        "message",
        "locales",
        "requestedLocale",
        "locale",
        "scopes",
        "translations",
        "message",
        "time",
        "date",
        "args",
        "options",
        "subject",
        "translationOptions",
        "translationOptions",
        "translation",
        "optionsWithoutDefault",
        "translationFound",
        "matches",
        "placeholder",
        "value",
        "name",
        "regex",
        "value",
        "pluralizer",
        "message",
        "result",
        "s",
        "localeForTranslation",
        "fullScope",
        "fullScopeWithLocale",
        "negative",
        "parts",
        "precision",
        "buffer",
        "formattedNumber",
        "format",
        "sign",
        "localizedValue",
        "matches",
        "convertedDate",
        "fraction",
        "i",
        "options",
        "meridianOptions",
        "weekDay",
        "day",
        "year",
        "month",
        "hour",
        "hour12",
        "hour",
        "meridian",
        "secs",
        "mins",
        "offset",
        "absOffsetHours",
        "absOffsetMinutes",
        "timezoneoffset",
        "date",
        "format",
        "kb",
        "size",
        "number",
        "iterations",
        "unit",
        "precision"
    ],
    "comments": [
        "I18n.js",
        "=======",
        "",
        "This small library provides the Rails I18n API on the Javascript.",
        "You don't actually have to use Rails (or even Ruby) to use I18n.js.",
        "Just make sure you export all translations in an object like this:",
        "",
        "I18n.translations.en = {",
        "hello: \"Hello World\"",
        "};",
        "",
        "See tests for specific formatting like numbers and dates.",
        "",
        "Using UMD pattern from",
        "https://github.com/umdjs/umd#regular-module",
        "`returnExports.js` version",
        "AMD. Register as an anonymous module.",
        "Node. Does not work with strict CommonJS, but",
        "only CommonJS-like environments that support module.exports,",
        "like Node.",
        "Browser globals (root is window)",
        "Use previously defined object if exists in current scope",
        "Just cache the Array#slice function.",
        "Apply number padding.",
        "Improved toFixed number rounding function with support for unprecise floating points",
        "JavaScript's standard toFixed function does not round certain numbers correctly (for example 0.105 with precision 2).",
        "Is a given variable an object?",
        "Borrowed from Underscore.js",
        "Check if value is different than undefined and null;",
        "Is a given value an array?",
        "Borrowed from Underscore.js",
        "If the exp is undefined or zero...",
        "If the value is not a number or the exp is not an integer...",
        "Shift",
        "Shift back",
        "Set default days/months translations.",
        "Set default number format.",
        "Set default currency format.",
        "Set default percentage format.",
        "Set default size units.",
        "Other default options",
        "Set default locale. This locale will be used when fallback is enabled and",
        "the translation doesn't exist in a particular locale.",
        "Set the current locale to `en`.",
        "Set the translation key separator.",
        "Set the placeholder format. Accepts `{{placeholder}}` and `%{placeholder}`.",
        "Set if engine should fallback to the default locale when a translation",
        "is missing.",
        "Set the default translation object.",
        "Set missing translation behavior. 'message' will display a message",
        "that the translation is missing, 'guess' will try to guess the string",
        "if you use missingBehaviour with 'message', but want to know that the",
        "string is actually missing for testing purposes, you can prefix the",
        "guessed string by setting the value here. By default, no prefix!",
        "Set default locale. This locale will be used when fallback is enabled and",
        "the translation doesn't exist in a particular locale.",
        "Much like `reset`, but only assign options if not already assigned",
        "Return a list of all locales that must be tried before returning the",
        "missing translation message. By default, this will consider the inline option,",
        "current locale and fallback locale.",
        "",
        "I18n.locales.get(\"de-DE\");",
        "// [\"de-DE\", \"de\", \"en\"]",
        "",
        "You can define custom rules for any locale. Just make sure you return a array",
        "containing all locales.",
        "",
        "// Default the Wookie locale to English.",
        "I18n.locales[\"wk\"] = function(locale) {",
        "return [\"en\"];",
        "};",
        "",
        "Retrieve locales based on inline locale, current locale or default to",
        "I18n's detection.",
        "The default locale list.",
        "Handle the inline locale option that can be provided to",
        "the `I18n.t` options.",
        "Add the current locale to the list.",
        "Add the default locale if fallback strategy is enabled.",
        "Locale code format 1:",
        "According to RFC4646 (http://www.ietf.org/rfc/rfc4646.txt)",
        "language codes for Traditional Chinese should be `zh-Hant`",
        "",
        "But due to backward compatibility",
        "We use older version of IETF language tag",
        "@see http://www.w3.org/TR/html401/struct/dirlang.html",
        "@see http://en.wikipedia.org/wiki/IETF_language_tag",
        "",
        "Format: `language-code = primary-code ( \"-\" subcode )*`",
        "",
        "primary-code uses ISO639-1",
        "@see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes",
        "@see http://www.iso.org/iso/home/standards/language_codes.htm",
        "",
        "subcode uses ISO 3166-1 alpha-2",
        "@see http://en.wikipedia.org/wiki/ISO_3166",
        "@see http://www.iso.org/iso/country_codes.htm",
        "",
        "@note",
        "subcode can be in upper case or lower case",
        "defining it in upper case is a convention only",
        "Locale code format 2:",
        "Format: `code = primary-code ( \"-\" region-code )*`",
        "primary-code uses ISO 639-1",
        "script-code uses ISO 15924",
        "region-code uses ISO 3166-1 alpha-2",
        "Example: zh-Hant-TW, en-HK, zh-Hant-CN",
        "",
        "It is similar to RFC4646 (or actually the same),",
        "but seems to be limited to language, script, region",
        "Compute each locale with its country code.",
        "So this will return an array containing",
        "`de-DE` and `de`",
        "or",
        "`zh-hans-tw`, `zh-hans`, `zh`",
        "locales.",
        "We don't want null values",
        "We don't want duplicate values",
        "",
        "Comparing with `locale` first is faster than",
        "checking whether value's presence in the list",
        "No locales set? English it is.",
        "Hold pluralization rules.",
        "Return the pluralizer for a specific locale.",
        "If no specify locale is found, then I18n's default will be used.",
        "The default pluralizer rule.",
        "It detects the `zero`, `one`, and `other` scopes.",
        "Return current locale. If no locale has been set, then",
        "the current locale will be the default locale.",
        "Check if value is different than undefined and null;",
        "Find and process the translation using the provided scope and options.",
        "This is used internally by some functions and should not be used as an",
        "public API.",
        "lookup pluralization rule key into translations",
        "Lookup dedicated to pluralization",
        "Rails changed the way the meridian is stored.",
        "It started with `date.meridian` returning an array,",
        "then it switched to `time.am` and `time.pm`.",
        "This function abstracts this difference and returns",
        "the correct meridian or the default value when none is provided.",
        "Merge serveral hash options, checking if value is set before",
        "overwriting any value. The precedence is from left to right.",
        "",
        "I18n.prepareOptions({name: \"John Doe\"}, {name: \"Mary Doe\", role: \"user\"});",
        "#=> {name: \"John Doe\", role: \"user\"}",
        "",
        "Generate a list of translation options for default fallbacks.",
        "`defaultValue` is also deleted from options as it is returned as part of",
        "the translationOptions array.",
        "Defaults should be an array of hashes containing either",
        "fallback scopes or messages",
        "Maintain support for defaultValue. Since it is always a message",
        "insert it in to the translation options as such.",
        "Translate the given scope with the provided options.",
        "Iterate through the translation options until a translation",
        "or message is found.",
        "This function interpolates the all variables in the given message.",
        "Pluralize the given scope using the `count` value.",
        "The pluralized translation may have other placeholders,",
        "which will be retrieved from `options`.",
        "Return a missing translation message for the given parameters.",
        "guess intended string",
        "get only the last portion of the scope",
        "replace underscore with space && camelcase with space and lowercase letter",
        "Return a missing placeholder message for given parameters",
        "Format number using localization rules.",
        "The options will be retrieved from the `number.format` scope.",
        "If this isn't present, then the following options will be used:",
        "",
        "- `precision`: `3`",
        "- `separator`: `\".\"`",
        "- `delimiter`: `\",\"`",
        "- `strip_insignificant_zeros`: `false`",
        "",
        "You can also override these options by providing the `options` argument.",
        "",
        "Format currency with localization rules.",
        "The options will be retrieved from the `number.currency.format` and",
        "`number.format` scopes, in that order.",
        "",
        "Any missing option will be retrieved from the `I18n.toNumber` defaults and",
        "the following options:",
        "",
        "- `unit`: `\"$\"`",
        "- `precision`: `2`",
        "- `format`: `\"%u%n\"`",
        "- `delimiter`: `\",\"`",
        "- `separator`: `\".\"`",
        "",
        "You can also override these options by providing the `options` argument.",
        "",
        "Localize several values.",
        "You can provide the following scopes: `currency`, `number`, or `percentage`.",
        "If you provide a scope that matches the `/^(date|time)/` regular expression",
        "then the `value` will be converted by using the `I18n.toTime` function.",
        "",
        "It will default to the value's `toString` function.",
        "",
        "Parse a given `date` string into a JavaScript Date object.",
        "This function is time zone aware.",
        "",
        "The following string formats are recognized:",
        "",
        "yyyy-mm-dd",
        "yyyy-mm-dd[ T]hh:mm::ss",
        "yyyy-mm-dd[ T]hh:mm::ss",
        "yyyy-mm-dd[ T]hh:mm::ssZ",
        "yyyy-mm-dd[ T]hh:mm::ss+0000",
        "yyyy-mm-dd[ T]hh:mm::ss+00:00",
        "yyyy-mm-dd[ T]hh:mm::ss.123Z",
        "",
        "we have a date, so just return it.",
        "month starts on 0",
        "UNIX timestamp",
        "This format `Wed Jul 20 13:03:39 +0000 2011` is parsed by",
        "webkit/firefox, but not by IE, so we must parse it manually.",
        "a valid javascript format with timezone info",
        "an arbitrary javascript string",
        "Formats time according to the directives in the given format string.",
        "The directives begins with a percent (%) character. Any text not listed as a",
        "directive will be passed through to the output string.",
        "",
        "The accepted formats are:",
        "",
        "%a  - The abbreviated weekday name (Sun)",
        "%A  - The full weekday name (Sunday)",
        "%b  - The abbreviated month name (Jan)",
        "%B  - The full month name (January)",
        "%c  - The preferred local date and time representation",
        "%d  - Day of the month (01..31)",
        "%-d - Day of the month (1..31)",
        "%H  - Hour of the day, 24-hour clock (00..23)",
        "%-H - Hour of the day, 24-hour clock (0..23)",
        "%I  - Hour of the day, 12-hour clock (01..12)",
        "%-I - Hour of the day, 12-hour clock (1..12)",
        "%m  - Month of the year (01..12)",
        "%-m - Month of the year (1..12)",
        "%M  - Minute of the hour (00..59)",
        "%-M - Minute of the hour (0..59)",
        "%p  - Meridian indicator (AM  or  PM)",
        "%S  - Second of the minute (00..60)",
        "%-S - Second of the minute (0..60)",
        "%w  - Day of the week (Sunday is 0, 0..6)",
        "%y  - Year without a century (00..99)",
        "%-y - Year without a century (0..99)",
        "%Y  - Year with century",
        "%z  - Timezone offset (+0545)",
        "",
        "Convert the given dateString into a formatted date.",
        "Convert a number into a formatted percentage value.",
        "Convert a number into a readable size representation.",
        "Deal with the scope as an array.",
        "Deal with the scope option provided through the second argument.",
        "",
        "I18n.t('hello', {scope: 'greetings'});",
        "",
        "Set aliases, so we can save some typing."
    ],
    "docstrings": [
        "* Merge obj1 with obj2 (shallow merge), without modifying inputs\n   * @param {Object} obj1\n   * @param {Object} obj2\n   * @returns {Object} Merged values of obj1 and obj2\n   *\n   * In order to support ES3, `Object.prototype.hasOwnProperty.call` is used\n   * Idea is from:\n   * https://stackoverflow.com/questions/8157700/object-has-no-hasownproperty-method-i-e-its-undefined-ie8"
    ],
    "functions": [],
    "classes": []
}