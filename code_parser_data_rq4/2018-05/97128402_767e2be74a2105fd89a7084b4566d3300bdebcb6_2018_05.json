{
    "identifiers": [
        "Bitcoin",
        "BitcoinFee",
        "getBip32RootKey",
        "encryptAES128CTR",
        "decryptAES128CTR",
        "formatCoin",
        "limitDecimals",
        "bigNumber",
        "decryptBIP38",
        "_decryptBIP38",
        "encryptBIP38",
        "_encryptBIP38",
        "sortBy",
        "highest",
        "sum",
        "includesMultiple",
        "resolveAll",
        "validateAddress",
        "TYPE_COIN",
        "MAINNET",
        "TESTNET",
        "ASSET_LOGO",
        "LOCALSTORAGE_NETWORK",
        "MAINNET",
        "Bitcoin",
        "id",
        "networks",
        "networks",
        "id",
        "network_data",
        "network_id",
        "id",
        "network",
        "network_data",
        "url",
        "network_data",
        "api_url",
        "url",
        "coin_decimals",
        "ASSET_LOGO",
        "symbol",
        "index",
        "index",
        "index",
        "index",
        "index",
        "index",
        "index",
        "index",
        "value",
        "decimals",
        "coin_decimals",
        "formatCoin",
        "value",
        "decimals",
        "symbol",
        "value",
        "limitDecimals",
        "value",
        "coin_decimals",
        "value",
        "bigNumber",
        "value",
        "satoshis",
        "getWalletsFromSeed",
        "derived_path_function",
        "derived_path_function",
        "network_id",
        "MAINNET",
        "segwit",
        "derivation_path",
        "derivation_path",
        "segwit",
        "derivation_path",
        "derivation_path",
        "getBip32RootKey",
        "count",
        "derived_path_function",
        "index",
        "bip32RootKey",
        "path",
        "key",
        "wallets",
        "segwit",
        "getSegwitWalletFromKeyPair",
        "key",
        "getWalletFromKeyPair",
        "keypair",
        "wallets",
        "keypair",
        "keypair",
        "keypair",
        "keypair",
        "keypair",
        "Bitcoin",
        "pubKey",
        "Bitcoin",
        "pubKeyHash",
        "Bitcoin",
        "redeemScript",
        "Bitcoin",
        "redeemScriptHash",
        "Bitcoin",
        "scriptPubKey",
        "network",
        "keypair",
        "address",
        "validateAddress",
        "address",
        "Bitcoin",
        "address",
        "version",
        "networks",
        "MAINNET",
        "version",
        "networks",
        "TESTNET",
        "private_key",
        "getAddressFromPrivateKey",
        "private_key",
        "isAddress",
        "address",
        "e",
        "private_key",
        "private_key",
        "address",
        "address",
        "private_key",
        "Bitcoin",
        "private_key",
        "network",
        "wallet",
        "private_key",
        "Bitcoin",
        "private_key",
        "network",
        "Bitcoin",
        "wallet",
        "getSegwitAddressFromECPair",
        "ecpair",
        "ecpair",
        "getRedeemScript",
        "ecpair",
        "Bitcoin",
        "redeemScript",
        "Bitcoin",
        "redeemScriptHash",
        "Bitcoin",
        "scriptPubKey",
        "network",
        "ecpair",
        "ecpair",
        "Bitcoin",
        "pubKey",
        "Bitcoin",
        "pubKeyHash",
        "address",
        "url",
        "address",
        "txid",
        "url",
        "txid",
        "seed",
        "password",
        "encryptAES128CTR",
        "seed",
        "password",
        "seed_encrypted",
        "private_key",
        "password",
        "encryptAES128CTR",
        "private_key",
        "password",
        "address",
        "private_key_encrypted",
        "password",
        "decryptAES128CTR",
        "private_key_encrypted",
        "password",
        "isPrivateKey",
        "private_key",
        "isSegwitAddress",
        "address",
        "getSegwitAddressFromPrivateKey",
        "private_key",
        "getAddressFromPrivateKey",
        "private_key",
        "address_frompk",
        "address",
        "private_key",
        "address",
        "addresses",
        "seed_encrypted",
        "password",
        "decryptWalletFromSeed",
        "address",
        "addresses",
        "seed_encrypted",
        "password",
        "wallet",
        "wallet",
        "address",
        "addresses",
        "seed_encrypted",
        "password",
        "decryptWalletFromSeed",
        "address",
        "addresses",
        "seed_encrypted",
        "password",
        "wallet",
        "getWalletFromSeed",
        "wallet",
        "wallet",
        "wallet",
        "address",
        "addresses",
        "seed_encrypted",
        "password",
        "decryptAES128CTR",
        "seed_encrypted",
        "password",
        "addresses",
        "index",
        "index",
        "wallet",
        "getWalletFromSeed",
        "wallet",
        "address",
        "wallet",
        "seed",
        "wallet",
        "index",
        "wallet",
        "wallet",
        "wallet",
        "getWalletFromSeed",
        "wallet",
        "address",
        "wallet",
        "seed",
        "wallet",
        "index",
        "wallet",
        "wallet",
        "addresses",
        "seed_encrypted",
        "password",
        "decryptAES128CTR",
        "seed_encrypted",
        "password",
        "getWalletFromSeed",
        "getWalletFromSeed",
        "addresses",
        "wallet",
        "addresses",
        "wallet2",
        "seed",
        "privateKey",
        "password",
        "progressCallback",
        "_encryptBIP38",
        "privateKey",
        "password",
        "progressCallback",
        "encryptedKey",
        "password",
        "progressCallback",
        "_decryptBIP38",
        "encryptedKey",
        "password",
        "progressCallback",
        "network",
        "resolve",
        "getWalletFromSeed",
        "wallet",
        "fetchTotals",
        "address",
        "totals",
        "resolve",
        "totals",
        "totals",
        "onDiscoverAddress",
        "resolve",
        "onPush",
        "wallet",
        "onDiscoverAddress",
        "onDiscoverAddress",
        "wallet",
        "addresses",
        "wallet",
        "onFetch",
        "discoverAddress",
        "wallet",
        "wallet",
        "index",
        "onPush",
        "wallet",
        "onFetch",
        "segwit",
        "index",
        "segwit",
        "onFetch",
        "addresses",
        "index",
        "onPush",
        "wallet",
        "resolve",
        "addresses",
        "addresses",
        "onFetch",
        "address",
        "fetchTotals",
        "address",
        "data",
        "bigNumber",
        "data",
        "data",
        "data",
        "data",
        "addresses",
        "cacheRecomendedFee",
        "address",
        "cache",
        "cache",
        "cache",
        "first_time",
        "use_cache",
        "fetchFees",
        "e",
        "fee",
        "fee",
        "cacheRecomendedFee",
        "address",
        "fee",
        "fetch",
        "api_url",
        "address",
        "response",
        "response",
        "e",
        "utxo",
        "sortBy",
        "utxo",
        "input",
        "input",
        "cacheRecomendedFee",
        "address",
        "inputs",
        "promise",
        "cacheRecomendedFee",
        "address",
        "address_data",
        "amount",
        "address_data",
        "inputs",
        "outputs",
        "calcFee",
        "data",
        "fetch",
        "response",
        "response",
        "json",
        "json",
        "json",
        "index",
        "inputs",
        "amount_sum",
        "amount",
        "index",
        "amount_sum",
        "inputs",
        "index",
        "inputs_total",
        "cutDecimals",
        "bigNumber",
        "inputs_total",
        "outputs",
        "extra_bytes",
        "fee_per_kb",
        "satoshis",
        "addresses",
        "to",
        "fetch",
        "api_url",
        "addresses",
        "to",
        "response",
        "response",
        "json",
        "json",
        "json",
        "tx_raw",
        "tx_raw",
        "input",
        "addresses",
        "input",
        "v",
        "input",
        "v",
        "input",
        "bigNumber",
        "tx_raw",
        "output",
        "output",
        "pubkey",
        "pubkey",
        "includesMultiple",
        "pubkey",
        "addresses",
        "v",
        "output",
        "v",
        "output",
        "bigNumber",
        "tx_raw",
        "bigNumber",
        "tx_raw",
        "tx_raw",
        "tx_raw",
        "value_inputs",
        "value_outputs",
        "tx_raw",
        "tx",
        "tx",
        "tx",
        "tx_raw",
        "tx",
        "tx",
        "data",
        "tx",
        "data",
        "data",
        "address",
        "fetch",
        "api_url",
        "address",
        "response",
        "response",
        "totals",
        "totals",
        "from_addresses",
        "from_addresses",
        "change_address",
        "isAddress",
        "change_address",
        "change_address",
        "last_address",
        "fetch",
        "api_url",
        "from_addresses",
        "response",
        "response",
        "txs",
        "bigNumber",
        "bigNumber",
        "amount",
        "fee",
        "Bitcoin",
        "network",
        "sortBy",
        "txs",
        "tx",
        "index",
        "totalInput",
        "totalOutput",
        "txb",
        "tx",
        "tx",
        "txb",
        "index",
        "tx",
        "txb",
        "index",
        "tx",
        "totalInput",
        "totalInput",
        "tx",
        "txb",
        "to_address",
        "toSatoshis",
        "amount",
        "bigNumber",
        "totalInput",
        "amount",
        "bigNumber",
        "fee",
        "amountBack",
        "txb",
        "change_address",
        "toSatoshis",
        "amountBack",
        "txb",
        "input",
        "index",
        "isSegwitAddress",
        "input",
        "from_addresses",
        "input",
        "Bitcoin",
        "private_keys",
        "index_pk",
        "network",
        "is_segwit",
        "txb",
        "index",
        "ecpair",
        "getRedeemScript",
        "ecpair",
        "input",
        "txb",
        "index",
        "ecpair",
        "e",
        "e",
        "txb",
        "txb",
        "txHex",
        "sendProviders",
        "network_id",
        "MAINNET",
        "networks",
        "MAINNET",
        "sendRawTxInsight",
        "rawTx",
        "rawTx",
        "fetch",
        "api_url",
        "fetchOptions",
        "response",
        "response",
        "response",
        "response",
        "e",
        "response",
        "data",
        "data"
    ],
    "literals": [
        "'bitcoinjs-lib'",
        "'bitcoin-fee'",
        "'/api/bip39'",
        "'/api/crypto'",
        "'/api/numbers'",
        "'/api/crypto'",
        "'/api/arrays'",
        "'/api/promises'",
        "'/api/Coins/BTC'",
        "'/const/'",
        "'https://bch.blockdozer.com'",
        "'undefined'",
        "${url}/api",
        "'BCH'",
        "'Bcash'",
        "'#99c361'",
        "'Ƀ'",
        "'bch coin'",
        "m/44'/0'/0'/0/${index}",
        "m/49'/0'/0'/0/${index}",
        "m/44'/1'/0'/0/${index}",
        "m/49'/1'/0'/0/${index}",
        "''",
        "''",
        "${url}/address/${address}",
        "${url}/tx/${txid}",
        "'https://live.blockcypher.com/btc/decodetx/'",
        "','",
        "\"LTC.fetchRecomendedFee: We couldn't fetch fee prices\"",
        "${api_url}/addrs/${address}/utxo?noCache=1",
        "\"LTC.fetchRecomendedFee: We couldn't fetch utxo\"",
        "'-amount'",
        "https://api.blockcypher.com/v1/ltc/main",
        "${api_url}/addrs/${addresses.join(\n            ','\n        )}/txs?noScriptSig=1&noAsm=1&noSpent=0&from=${from}&to=${to}",
        "','",
        "${api_url}/addr/${address}",
        "${api_url}/addrs/${from_addresses.join(',')}/utxo?noCache=1",
        "','",
        "'-amount'",
        "'mainnet'",
        "'testnet'",
        "'Trezor.io'",
        "${networks[MAINNET].url}/tx/send",
        "'POST'",
        "'application/json'",
        "'Content-Type'",
        "'application/json'",
        "${api_url}/tx/send"
    ],
    "variables": [
        "networks",
        "url",
        "network",
        "network_id",
        "api_url",
        "network_data",
        "TYPE_COIN",
        "symbol",
        "symbol_fee",
        "symbol",
        "name",
        "color",
        "ascii",
        "coin_decimals",
        "price_decimals",
        "satoshis",
        "multiaddress",
        "changeaddress",
        "labels",
        "logo",
        "derivation_path",
        "wallets",
        "bip32RootKey",
        "path",
        "key",
        "keypair",
        "pubKey",
        "pubKeyHash",
        "redeemScript",
        "redeemScriptHash",
        "scriptPubKey",
        "address",
        "wallet",
        "wallet",
        "ecpair",
        "redeemScript",
        "redeemScriptHash",
        "scriptPubKey",
        "pubKey",
        "pubKeyHash",
        "seed_encrypted",
        "private_key",
        "address_frompk",
        "wallet",
        "wallet",
        "seed",
        "index",
        "wallet",
        "seed",
        "wallet",
        "wallet2",
        "wallet",
        "address",
        "index",
        "segwit",
        "addresses",
        "onPush",
        "onFetch",
        "cacheRecomendedFee",
        "address",
        "cache",
        "first_time",
        "promise",
        "inputs",
        "address_data",
        "inputs",
        "data",
        "amount_sum",
        "index",
        "inputs_total",
        "data",
        "value_inputs",
        "value_outputs",
        "pubkey",
        "tx",
        "last_address",
        "totalInput",
        "totalOutput",
        "txb",
        "amountBack",
        "is_segwit",
        "index_pk",
        "ecpair",
        "txHex",
        "sendProviders",
        "fetchOptions"
    ],
    "comments": [
        "network",
        "mainnet",
        "\"https://insight.litecore.io\"",
        "[TESTNET]: {",
        "// testnet",
        "network: {",
        "messagePrefix: '\\x19Litecoin Signed Message:\\n',",
        "bip32: {",
        "public: 0x043587cf,",
        "private: 0x04358394",
        "},",
        "pubKeyHash: 0x6f,",
        "scriptHash: 0xc4, //  for segwit (start with 2)",
        "wif: 0xef",
        "},",
        "url: 'https://testnet.litecore.io'",
        "}",
        "https://github.com/bitpay/insight-api",
        "exports",
        "if true we can't change the address on the user interface we use all the address as a full balance",
        "if true we change the remaining balance to the next address",
        "return",
        "Number(",
        "bigNumber(amount.toFixed(8))",
        ".times(satoshis)",
        ".toString()",
        ")",
        "console.log(index, count)",
        "wallet.compressed = false",
        "export function getAddressFromPublicKey(public_key) {",
        "const publicKeyBuffer = new Buffer(public_key, 'hex')",
        "const wallet = Bitcoin.ECPair.fromPublicKeyBuffer(publicKeyBuffer, network)",
        "return wallet.getAddress().toString()",
        "// console.log(new Bitcoin.ECPair(null, wallet.Q, { compressed: true }).getAddress())",
        "// console.log(new Bitcoin.ECPair(null, wallet.Q, { compressed: false }).getAddress())",
        "}",
        "export function getAllFormats(wallet) {",
        "const formats = {}",
        "if (typeof wallet == 'string')",
        "wallet = Bitcoin.ECPair.fromWIF(wallet, network)",
        "formats.compressed = wallet.compressed",
        "wallet.compressed = false",
        "formats.address = wallet.getAddress()",
        "formats.public_key = wallet.getPublicKeyBuffer().toString('hex')",
        "formats.private_key = wallet.toWIF()",
        "wallet.compressed = true",
        "formats.address_comp = wallet.getAddress()",
        "formats.public_key_comp = wallet.getPublicKeyBuffer().toString('hex')",
        "formats.private_key_comp = wallet.toWIF()",
        "return formats",
        "}",
        "seed_encrypted.hash = sha3(seed).toString('hex')",
        "fetchs",
        "console.log(seed, index, wallet)",
        "return fetch(`${api_url}/addr/${address}/balance`)",
        ".then(response => response.text())",
        ".then(balance => {",
        "// return Number(balance) / satoshis",
        "return bigNumber(balance).div(satoshis).toString()",
        "})",
        "extra output for change_address",
        "console.log(data)",
        "https://ltc-bitcore1.trezor.io/api/utils/estimatefee",
        "raw: tx_raw,",
        "If is a sent we remove the fee on the calculation",
        "We don't show the tx if value is 0",
        "console.log(JSON.stringify(data))",
        "const from_address = getAddressFromPrivateKey(private_key)",
        "console.log(txs)",
        "Adding inputs",
        "console.log(txs)",
        "Adding outputs",
        "txb.addOutput(to_address, 100000000)",
        "signing inputs",
        "testnet: [",
        "{",
        "name: 'Litecore.io',",
        "url: `${networks[TESTNET].url}/tx/send`,",
        "send: sendRawTxInsight",
        "}",
        "]"
    ],
    "docstrings": [],
    "functions": [
        "setupNetwork",
        "format",
        "cutDecimals",
        "toSatoshis",
        "getWalletFromSeed",
        "getWalletsFromSeed",
        "getWalletFromKeyPair",
        "getSegwitWalletFromKeyPair",
        "isAddress",
        "isSegwitAddress",
        "isPrivateKey",
        "isPrivateKeyBip",
        "formatAddress",
        "getAddressFromPrivateKey",
        "getSegwitAddressFromPrivateKey",
        "getSegwitAddressFromECPair",
        "getRedeemScript",
        "urlInfo",
        "urlInfoTx",
        "urlDecodeTx",
        "encryptSeed",
        "encryptPrivateKey",
        "decryptPrivateKey",
        "decryptPrivateKeyFromSeed",
        "getNextWalletFromSeed",
        "decryptWalletFromSeed",
        "decryptSeed",
        "encryptBIP38",
        "decryptBIP38",
        "discoverAddress",
        "discoverWallet",
        "fetchBalance",
        "fetchRecomendedFee",
        "fetchFees",
        "calcFee",
        "fetchTxs",
        "fetchTotals",
        "createSimpleTx",
        "getSendProviders",
        "sendRawTxInsight"
    ],
    "classes": []
}