{
    "identifiers": [
        "org",
        "apache",
        "calcite",
        "sql2rel",
        "org",
        "apache",
        "calcite",
        "rel",
        "RelHomogeneousShuttle",
        "org",
        "apache",
        "calcite",
        "rel",
        "RelNode",
        "org",
        "apache",
        "calcite",
        "rex",
        "RexBuilder",
        "org",
        "apache",
        "calcite",
        "rex",
        "RexCall",
        "org",
        "apache",
        "calcite",
        "rex",
        "RexNode",
        "org",
        "apache",
        "calcite",
        "rex",
        "RexShuttle",
        "org",
        "apache",
        "calcite",
        "sql",
        "SqlKind",
        "org",
        "apache",
        "calcite",
        "sql",
        "SqlOperator",
        "org",
        "apache",
        "calcite",
        "sql",
        "fun",
        "SqlStdOperatorTable",
        "org",
        "apache",
        "calcite",
        "sql",
        "SqlTypeName",
        "java",
        "util",
        "converter",
        "builder",
        "converter",
        "builder",
        "Override",
        "other",
        "mNode",
        "visitChildren",
        "other",
        "mNode",
        "accept",
        "converter",
        "builder",
        "builder",
        "builder",
        "builder",
        "Override",
        "call",
        "update",
        "clonedOperands",
        "visitList",
        "call",
        "operands",
        "update",
        "kind",
        "call",
        "getKind",
        "call",
        "getOperator",
        "kind",
        "PLUS",
        "SqlStdOperatorTable",
        "CHECKED_PLUS",
        "MINUS",
        "SqlStdOperatorTable",
        "CHECKED_MINUS",
        "TIMES",
        "SqlStdOperatorTable",
        "CHECKED_MULTIPLY",
        "MINUS_PREFIX",
        "SqlStdOperatorTable",
        "CHECKED_UNARY_MINUS",
        "DIVIDE",
        "SqlStdOperatorTable",
        "CHECKED_DIVIDE",
        "resultType",
        "call",
        "getType",
        "getSqlTypeName",
        "resultType",
        "SqlTypeName",
        "DECIMAL",
        "result",
        "call",
        "getOperator",
        "result",
        "call",
        "clone",
        "call",
        "getType",
        "clonedOperands",
        "result",
        "call",
        "builder",
        "makeCast",
        "call",
        "getType",
        "result",
        "SqlTypeName",
        "EXACT_TYPES",
        "contains",
        "resultType",
        "resultType",
        "SqlTypeName",
        "DECIMAL",
        "call",
        "getOperator",
        "update",
        "update",
        "call",
        "getOperator",
        "update",
        "call",
        "getOperator",
        "call",
        "clone",
        "call",
        "getType",
        "clonedOperands",
        "builder",
        "makeCall",
        "call",
        "getParserPosition",
        "call",
        "getType",
        "clonedOperands",
        "call"
    ],
    "literals": [],
    "variables": [
        "converter",
        "builder",
        "result"
    ],
    "comments": [
        "Checked decimal arithmetic is implemented using unchecked",
        "arithmetic followed by a CAST, which is always checked",
        "Do not rewrite operator if the type is e.g., DOUBLE or DATE"
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Converts a RelNode tree such that numeric arithmetic operations\n * use checked arithmetic.  Most SQL dialects should use checked arithmetic,\n * i.e., they should produce a runtime error on overflow.",
        "* Visitor which rewrites an expression tree such that all\n   * arithmetic operations that produce numeric values use checked arithmetic."
    ],
    "functions": [
        "ConvertToChecked",
        "RelNode",
        "visit",
        "ConvertRexToChecked",
        "RexNode",
        "visitCall"
    ],
    "classes": [
        "ConvertToChecked",
        "ConvertRexToChecked"
    ]
}