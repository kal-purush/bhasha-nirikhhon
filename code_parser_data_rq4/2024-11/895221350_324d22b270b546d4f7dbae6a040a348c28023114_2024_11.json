{
    "identifiers": [
        "json",
        "requests",
        "response",
        "paths",
        "path",
        "response",
        "url",
        "path",
        "paths",
        "url",
        "requests",
        "get",
        "url",
        "timeout",
        "response",
        "raise_for_status",
        "response",
        "json",
        "requests",
        "exceptions",
        "RequestException",
        "json",
        "JSONDecodeError",
        "is_present",
        "response",
        "response",
        "history",
        "response",
        "status_code",
        "result",
        "content",
        "result",
        "update",
        "len",
        "content",
        "get",
        "seller",
        "content",
        "get",
        "seller",
        "get",
        "strip",
        "lower",
        "stype",
        "SELLER_TYPES",
        "seller",
        "get",
        "seller",
        "get",
        "result",
        "seller",
        "get",
        "result",
        "seller",
        "get",
        "seller",
        "strip",
        "lower",
        "result",
        "stype",
        "add",
        "domain",
        "result",
        "stype",
        "stype",
        "result",
        "values",
        "len",
        "stype",
        "stype",
        "result",
        "input",
        "strip",
        "parse_sellers_json",
        "url",
        "open",
        "encoding",
        "f",
        "f",
        "write",
        "json",
        "dumps",
        "parsed_data",
        "indent"
    ],
    "literals": [
        "\"publisher\"",
        "\"intermediary\"",
        "\"both\"",
        "\"https://storage.googleapis.com/adx-rtb-dictionaries/sellers.json\"",
        "\"present\"",
        "\"/sellers.json\"",
        "\"redirected\"",
        "\"status\"",
        "\"present\"",
        "\"seller_count\"",
        "\"seller_types\"",
        "\"publisher\"",
        "\"domains\"",
        "\"seller_count\"",
        "\"intermediary\"",
        "\"domains\"",
        "\"seller_count\"",
        "\"both\"",
        "\"domains\"",
        "\"seller_count\"",
        "\"passthrough_count\"",
        "\"confidential_count\"",
        "\"seller_count\"",
        "\"sellers\"",
        "\"sellers\"",
        "\"seller_type\"",
        "\"\"",
        "\"seller_id\"",
        "\"is_passthrough\"",
        "\"passthrough_count\"",
        "\"is_confidential\"",
        "\"confidential_count\"",
        "\"domain\"",
        "\"domain\"",
        "\"seller_types\"",
        "\"domains\"",
        "\"seller_types\"",
        "\"seller_count\"",
        "\"seller_types\"",
        "\"domain_count\"",
        "\"domains\"",
        "\"domains\"",
        "\"domains\"",
        "\"__main__\"",
        "\"Enter the sellers.json URL: \"",
        "\"sellers.json\"",
        "\"w\"",
        "\"utf-8\""
    ],
    "variables": [
        "SELLER_TYPES",
        "result",
        "response",
        "content",
        "content",
        "result",
        "result",
        "stype",
        "domain",
        "stype",
        "stype",
        "url",
        "parsed_data"
    ],
    "comments": [
        "pylint: disable=import-error"
    ],
    "docstrings": [
        "\"\"\"\nDescription: This script is used to parse the sellers.json file from a given URL\nand extract the required information.\nThe extracted information is then written to a file named sellers.json in the current directory.\ne.g. Google sellers.json url = https://storage.googleapis.com/adx-rtb-dictionaries/sellers.json\n\"\"\"",
        "\"\"\"\n    Check if any of the given paths are present in the response URL.\n\n    Args:\n        response (object): The response object.\n        paths (list): A list of paths to check.\n\n    Returns:\n        bool: True if any of the paths are present in the response URL, False otherwise.\n    \"\"\"",
        "\"\"\"\n    Parse the sellers.json file from a given URL.\n\n    Args:\n        url (str): The URL of the sellers.json file.\n\n    Returns:\n        dict: A dictionary containing the parsed information.\n    \"\"\""
    ],
    "functions": [
        "is_present",
        "parse_sellers_json"
    ],
    "classes": []
}