{
    "identifiers": [
        "gui3_app",
        "java",
        "awt",
        "javax",
        "swing",
        "java",
        "io",
        "BufferedWriter",
        "java",
        "io",
        "FileWriter",
        "java",
        "io",
        "graphDrawer",
        "graphDrawer",
        "grader_",
        "gradtimmar_",
        "grader_",
        "gradtimmar_",
        "num1",
        "num2",
        "num3",
        "sum",
        "i",
        "i",
        "num1",
        "i",
        "sum",
        "sum",
        "i",
        "sum",
        "num1",
        "num2",
        "num1",
        "num2",
        "num1",
        "num2",
        "num1",
        "num2",
        "num1",
        "num2",
        "num1",
        "num2",
        "temp",
        "gradtimmar",
        "grader",
        "writer",
        "timmar",
        "timmar",
        "timmar",
        "grader",
        "calculateHours",
        "timmar",
        "temp",
        "gradtimmar",
        "gradtimmar",
        "grader",
        "gradtimmar_",
        "gradtimmar",
        "writer",
        "write",
        "timmar",
        "grader",
        "graphDrawer",
        "addDataPoint",
        "timmar",
        "grader",
        "e",
        "e",
        "printStackTrace",
        "frame",
        "graphDrawer",
        "frame",
        "getContentPane",
        "add",
        "graphDrawer",
        "BorderLayout",
        "CENTER",
        "frame",
        "setSize",
        "frame",
        "setDefaultCloseOperation",
        "JFrame",
        "EXIT_ON_CLOSE",
        "frame",
        "setVisible",
        "timmar",
        "temp",
        "grader",
        "timmar",
        "temp",
        "temp",
        "pow",
        "timmar",
        "temp",
        "pow",
        "timmar",
        "temp",
        "timmar",
        "pow",
        "cos",
        "timmar",
        "grader_",
        "grader",
        "grader"
    ],
    "literals": [
        "\"tempTable.txt\"",
        "\"For timmar = \"",
        "\", grader = \"",
        "\"\\n\"",
        "\"An error occurred.\"",
        "\"Graph\""
    ],
    "variables": [
        "graphDrawer",
        "grader"
    ],
    "comments": [
        "Create a frame",
        "JFrame frame = new JFrame(\"Graph\");",
        "Create an instance of GraphDrawer",
        "Add the graphDrawer to the frame",
        "Method to perform addition",
        "Method to perform subtraction",
        "Method to perform multiplication",
        "Method to perform division",
        "Method to print result to file",
        "Write the results to a text file",
        "Create a frame",
        "Create an instance of GraphDrawer",
        "Add the graphDrawer to the frame",
        "Set frame properties",
        "Method to do a calculation"
    ],
    "docstrings": [
        "* frame.getContentPane().add(graphDrawer, BorderLayout.CENTER);\n         * \n         * // Set frame properties\n         * frame.setSize(800, 600);\n         * frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n         * frame.setVisible(true);",
        "* public float calculateHours(int timmar, float temp) {\n     * float grader = (float) ((timmar - 4380) * (3.9 - 0.086 * temp) * 0.001 +\n     * temp * Math.pow(timmar * (1 + (8 - temp) / 586) / 8300, 38) -\n     * Math.pow(1550 / (700 + timmar), 3) +\n     * 1.5 * (temp * 1200 / ((500 + timmar) * 8)) * Math.pow(Math.cos((900 - timmar)\n     * / 585), 2));\n     * grader_ = grader;\n     * return grader;\n     * }",
        "* package gui3_app;\n * import java.awt.Graphics2D;\n * import java.io.BufferedWriter;\n * import java.io.FileWriter;\n * import java.io.IOException;\n * \n * //import gui3_app.*;\n * \n * \n * \n * public class Calculator {\n * \n * Graphics2D g2;\n * \n * private float grader_ = 0;\n * private float gradtimmar_ = 0;\n * \n * public float getGrader() {\n * return grader_;\n * }\n * public float getGradtimmar() {\n * return gradtimmar_;\n * }\n * \n * // Method to perform addition\n * public int add(int num1, int num2, int num3) {\n * int sum = 0;\n * for (int i = 0; i < num1; i++) {\n * sum = sum + i;\n * }\n * return sum;\n * }\n * \n * // Method to perform subtraction\n * public int subtract(int num1, int num2) {\n * return num1 - num2;\n * }\n * \n * // Method to perform multiplication\n * public int multiply(int num1, int num2) {\n * return num1 * num2;\n * }\n * \n * // Method to perform division\n * public int divide(int num1, int num2) {\n * return num1 / num2;\n * }\n * \n * // Method to print result to file\n * public void GenerateGraph (float temp) {\n * float gradtimmar = 0;\n * float grader;\n * try (BufferedWriter writer = new BufferedWriter(new\n * FileWriter(\"tempTable.txt\"))) {\n * for (int timmar = 0; timmar < 8760; timmar++) {\n * grader = calculateHours(timmar, temp);\n * gradtimmar = gradtimmar + grader;\n * gradtimmar_ = gradtimmar;\n * // Write the reults to a text file\n * writer.write(\"For timmar = \" + timmar + \", grader = \" + grader + \"\\n\");\n * }\n * } catch (IOException e) {\n * System.out.println(\"An error occurred.\");\n * e.printStackTrace();\n * }\n * }\n * \n * // Method to do a calulation\n * public float calculateHours(int timmar, float temp) {\n * float grader = (float)((timmar - 4380) * (3.9 - 0.086 * temp) * 0.001 +\n * temp * Math.pow(timmar * (1 + (8 - temp) / 586) / 8300, 38) -\n * Math.pow(1550 / (700 + timmar), 3) +\n * 1.5 * (temp * 1200 / ((500 + timmar) * 8)) * Math.pow(Math.cos((900 - timmar)\n * / 585), 2));\n * grader_ = grader;\n * return grader;\n * }\n * \n * }\n * // Print or store the result for each value of timmar\n * //System.out.println(\"For timmar = \" + timmar + \", grader = \" + grader);\n *"
    ],
    "functions": [
        "Calculator",
        "getGrader",
        "getGradtimmar",
        "add",
        "subtract",
        "multiply",
        "divide",
        "generateGraph",
        "calculateHours"
    ],
    "classes": [
        "Calculator"
    ]
}