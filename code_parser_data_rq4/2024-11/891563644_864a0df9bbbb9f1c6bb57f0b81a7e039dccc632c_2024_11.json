{
    "identifiers": [
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "java",
        "util",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "nums",
        "n",
        "nums",
        "length",
        "numsArr",
        "n",
        "i",
        "i",
        "n",
        "i",
        "numsArr",
        "i",
        "nums",
        "i",
        "Arrays",
        "sort",
        "numsArr",
        "x",
        "y",
        "sx",
        "sy",
        "sx",
        "x",
        "sx",
        "sy",
        "y",
        "sy",
        "sy",
        "x",
        "y",
        "sx",
        "y",
        "x",
        "numsArr",
        "ret",
        "num",
        "numsArr",
        "ret",
        "append",
        "num",
        "ret",
        "toString",
        "Test",
        "solution",
        "nums1",
        "expected1",
        "assertEquals",
        "expected1",
        "solution",
        "largestNumber",
        "nums1",
        "nums2",
        "expected2",
        "assertEquals",
        "expected2",
        "solution",
        "largestNumber",
        "nums2",
        "nums3",
        "expected3",
        "assertEquals",
        "expected3",
        "solution",
        "largestNumber",
        "nums3",
        "nums4",
        "expected4",
        "assertEquals",
        "expected4",
        "solution",
        "largestNumber",
        "nums4",
        "nums5",
        "expected5",
        "assertEquals",
        "expected5",
        "solution",
        "largestNumber",
        "nums5"
    ],
    "literals": [
        "\"0\"",
        "\"210\"",
        "\"9534330\"",
        "\"0\"",
        "\"1\"",
        "\"12121\""
    ],
    "variables": [],
    "comments": [
        "转换成包装类型，以便传入 Comparator 对象（此处为 lambda 表达式）",
        "测试用例 1",
        "测试用例 2",
        "测试用例 3 - 所有元素为 0",
        "测试用例 4 - 单个数字",
        "测试用例 5 - 两个数字组成回文"
    ],
    "docstrings": [
        "* @Description\n * 最大数\n * 给定一组非负整数 nums，重新排列每个数的顺序（每个数不可拆分）使之组成一个最大的整数。\n * 注意：输出结果可能非常大，所以你需要返回一个字符串而不是整数。\n *\n * 示例 1：\n * 输入：nums = [10,2]\n * 输出：\"210\"\n * 示例 2：\n * 输入：nums = [3,30,34,5,9]\n * 输出：\"9534330\""
    ],
    "functions": [
        "largestNumber",
        "testLargestNumber"
    ],
    "classes": [
        "Solution",
        "L2022111897_16_Test"
    ]
}