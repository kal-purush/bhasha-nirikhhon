{
    "identifiers": [
        "torch",
        "torch",
        "nn",
        "nn",
        "nn",
        "Module",
        "color_channel",
        "patch_size",
        "embedding_dim",
        "patch_size",
        "nn",
        "Conv2d",
        "in_channels",
        "color_channel",
        "out_channels",
        "embedding_dim",
        "kernel_size",
        "patch_size",
        "stride",
        "patch_size",
        "nn",
        "Flatten",
        "start_dim",
        "end_dim",
        "x",
        "x",
        "shape",
        "image_resolution",
        "patch_size",
        "image_resolution",
        "patch_size",
        "flatten",
        "patcher",
        "x",
        "permute",
        "nn",
        "Module",
        "num_layers",
        "patch_size",
        "embedding_dim",
        "MLP_size",
        "num_heads",
        "num_classes",
        "PatchEmbedding",
        "patch_size",
        "patch_size",
        "embedding_dim",
        "embedding_dim",
        "torch",
        "nn",
        "TransformerEncoderLayer",
        "d_model",
        "embedding_dim",
        "nhead",
        "num_heads",
        "dim_feedforward",
        "MLP_size",
        "batch_first",
        "activation",
        "dropout",
        "norm_first",
        "torch",
        "nn",
        "TransformerEncoder",
        "encoder_block",
        "num_layers",
        "num_layers",
        "nn",
        "Sequential",
        "nn",
        "LayerNorm",
        "normalized_shape",
        "embedding_dim",
        "nn",
        "Linear",
        "in_features",
        "embedding_dim",
        "out_features",
        "num_classes",
        "x",
        "patch_embed",
        "x",
        "encoder",
        "x",
        "classifier",
        "x",
        "x"
    ],
    "literals": [
        "f\"Image resolution ({image_resolution}) should be divisible by patch size ({self.patch_size})\"",
        "\"gelu\""
    ],
    "variables": [
        "patch_size",
        "patcher",
        "flatten",
        "image_resolution",
        "patch_embed",
        "encoder_block",
        "encoder",
        "classifier",
        "x",
        "x",
        "x"
    ],
    "comments": [
        "Input is a batch of images in shape -> [batch_size, num_channels, height, width]",
        "Shape [batch_size, num_patches, patch_size ** 2 * num_channels]"
    ],
    "docstrings": [
        "\"\"\"\n    Module block to process a batch of images of \n    shape [batch_size, num_channels, height, width]\n    -> [batch_size, num_patches, patch_size ** 2 * num_channels]\n    \"\"\""
    ],
    "functions": [
        "forward",
        "forward"
    ],
    "classes": [
        "PatchEmbedding",
        "ViT"
    ]
}