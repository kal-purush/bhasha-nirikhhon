{
    "identifiers": [
        "pairs",
        "graph",
        "outDegree",
        "inDegree",
        "pair",
        "pairs",
        "pair",
        "to",
        "pair",
        "graph",
        "computeIfAbsent",
        "k",
        "add",
        "to",
        "outDegree",
        "put",
        "outDegree",
        "getOrDefault",
        "inDegree",
        "put",
        "to",
        "inDegree",
        "getOrDefault",
        "to",
        "start",
        "pairs",
        "node",
        "graph",
        "keySet",
        "outDegree",
        "getOrDefault",
        "node",
        "inDegree",
        "getOrDefault",
        "node",
        "start",
        "node",
        "result",
        "stack",
        "stack",
        "push",
        "start",
        "stack",
        "isEmpty",
        "node",
        "stack",
        "peek",
        "graph",
        "containsKey",
        "node",
        "graph",
        "get",
        "node",
        "isEmpty",
        "nextNode",
        "graph",
        "get",
        "node",
        "poll",
        "stack",
        "push",
        "nextNode",
        "stack",
        "pop",
        "stack",
        "isEmpty",
        "result",
        "add",
        "stack",
        "peek",
        "node",
        "Collections",
        "reverse",
        "result",
        "result",
        "toArray",
        "result",
        "size"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "Step 1: Build the graph and degree information",
        "Build graph and track degrees",
        "Step 2: Find the starting node",
        "Step 3: Perform Hierholzer's algorithm",
        "Reverse the result to get the correct order"
    ],
    "docstrings": [],
    "functions": [
        "validArrangement"
    ],
    "classes": [
        "Solution"
    ]
}