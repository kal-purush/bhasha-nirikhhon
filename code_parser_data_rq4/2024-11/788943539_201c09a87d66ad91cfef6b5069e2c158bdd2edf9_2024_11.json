{
    "identifiers": [
        "panelVersion",
        "request",
        "env",
        "initializeParams",
        "request",
        "env",
        "panelVersion"
    ],
    "literals": [
        "\"../helpers/init\"",
        "<!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>UUID and Password Generator</title>\n    <style>\n        :root {\n            --color: black;\n            --primary-color: #09639f;\n            --background-color: #fff;\n            --container-background-color: #f9f9f9;\n            --text-color: #333;\n            --border-color: #ddd;\n        }\n        html, body { height: 100%; margin: 0; }\n        body {\n            font-family: system-ui;\n            background-color: var(--background-color);\n            color: var(--text-color);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n        .container {\n            background: var(--container-background-color);\n            padding: 20px;\n            border: 1px solid var(--border-color);\n            border-radius: 10px;\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n            text-align: center;\n            width: 90%;\n            max-width: 400px;\n        }\n        h1 { color: var(--primary-color); margin-bottom: 20px; }\n        .output-container {\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            margin: 15px 0;\n            padding: 10px;\n            background-color: #e9e9e9;\n            border-radius: 5px;\n            font-family: monospace;\n            font-size: 1rem;\n            word-wrap: break-word;\n        }\n        .output { flex: 1; margin-right: 10px; overflow-wrap: break-word; }\n        .copy-icon {\n            cursor: pointer;\n            font-size: 1.2rem;\n            color: var(--primary-color);\n            transition: color 0.2s;\n        }\n        .copy-icon:hover { color: #2980b9; }\n        button {\n            margin-top: 15px;\n            padding: 10px;\n            font-size: 16px;\n            font-weight: 600;\n            border: none;\n            border-radius: 5px;\n            color: white;\n            background-color: var(--primary-color);\n            cursor: pointer;\n            transition: background-color 0.3s ease;\n        }\n        button:hover { background-color: #2980b9; }\n    </style>\n    </head>\n    <body>\n        <div class=\"container\">\n            <h1>BPB Panel <span style=\"font-size: smaller;\">${panelVersion}</span> ðŸ’¦</h1>\n            <div>\n                <strong>Random UUID:</strong>\n                <div class=\"output-container\">\n                    <span id=\"uuid\" class=\"output\"></span>\n                    <span class=\"copy-icon\" onclick=\"copyToClipboard('uuid')\">ðŸ“‹</span>\n                </div>\n            </div>\n            <div>\n                <strong>Random Trojan Password:</strong>\n                <div class=\"output-container\">\n                    <span id=\"trojan-password\" class=\"output\"></span>\n                    <span class=\"copy-icon\" onclick=\"copyToClipboard('trojan-password')\">ðŸ“‹</span>\n                </div>\n            </div>\n            <button onclick=\"generateCredentials()\">Generate Again</button>\n        </div>\n\n        <script>\n            function generateUUID() {\n                return crypto.randomUUID();\n            }\n\n            function generateStrongPassword(length = 16) {\n                const charset =\n                    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+[]{}|;:',.<>?\";\n                let password = '';\n                const randomValues = new Uint8Array(length);\n                crypto.getRandomValues(randomValues);\n\n                for (let i = 0; i < length; i++) {\n                    password += charset[randomValues[i] % charset.length];\n                }\n                return password;\n            }\n\n            function generateCredentials() {\n                const uuid = generateUUID();\n                const password = generateStrongPassword();\n\n                document.getElementById('uuid').textContent = uuid;\n                document.getElementById('trojan-password').textContent = password;\n            }\n\n            function copyToClipboard(elementId) {\n                const textToCopy = document.getElementById(elementId).textContent;\n                navigator.clipboard.writeText(textToCopy)\n                    .then(() => alert('âœ… Copied to clipboard!'))\n                    .catch(err => console.error('Failed to copy text:', err));\n            }\n\n            generateCredentials();\n        </script>\n    </body>\n    </html>"
    ],
    "variables": [],
    "comments": [],
    "docstrings": [],
    "functions": [
        "renderSecretsPage"
    ],
    "classes": []
}