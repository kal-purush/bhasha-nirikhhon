{
    "identifiers": [
        "com",
        "minecrafttas",
        "lotas_light",
        "keybind",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Consumer",
        "com",
        "minecrafttas",
        "lotas_light",
        "mixin",
        "AccessorKeyMapping",
        "com",
        "mojang",
        "blaze3d",
        "platform",
        "InputConstants",
        "Key",
        "com",
        "mojang",
        "blaze3d",
        "platform",
        "InputConstants",
        "Type",
        "net",
        "fabricmc",
        "fabric",
        "api",
        "client",
        "keybinding",
        "v1",
        "KeyBindingHelper",
        "net",
        "minecraft",
        "Util",
        "net",
        "minecraft",
        "client",
        "KeyMapping",
        "net",
        "minecraft",
        "client",
        "Minecraft",
        "net",
        "minecraft",
        "client",
        "gui",
        "screens",
        "ChatScreen",
        "net",
        "minecraft",
        "client",
        "gui",
        "screens",
        "inventory",
        "SignEditScreen",
        "defaultFunction",
        "cooldownMap",
        "cooldown",
        "focused",
        "vanillaKeyBinding",
        "onKeyDown",
        "isKeyDownFunc",
        "name",
        "category",
        "defaultKey",
        "onKeyDown",
        "name",
        "category",
        "defaultKey",
        "onKeyDown",
        "name",
        "category",
        "defaultKey",
        "onKeyDown",
        "func",
        "vanillaKeyBinding",
        "name",
        "defaultKey",
        "category",
        "onKeyDown",
        "onKeyDown",
        "isKeyDownFunc",
        "func",
        "Override",
        "vanillaKeyBinding",
        "getName",
        "keybindings",
        "defaultFunction",
        "defaultFunction",
        "defaultFunction",
        "keybindings",
        "mc",
        "keybind",
        "keybindings",
        "keyDown",
        "keybind",
        "isKeyDownFunc",
        "keybind",
        "isKeyDownFunc",
        "defaultFunction",
        "keyDown",
        "isKeyDown",
        "keybind",
        "vanillaKeyBinding",
        "keybind",
        "onKeyDown",
        "accept",
        "mc",
        "keybind",
        "keybindings",
        "add",
        "keybind",
        "keyBinding",
        "keybind",
        "vanillaKeyBinding",
        "KeyBindingHelper",
        "registerKeyBinding",
        "keyBinding",
        "FunctionalInterface",
        "IsKeyDownFunc",
        "keybind",
        "keybind",
        "down",
        "key",
        "keybind",
        "getKey",
        "key",
        "getType",
        "keycode",
        "key",
        "getValue",
        "down",
        "Type",
        "KEYSYM",
        "Keyboard",
        "isKeyDown",
        "keycode",
        "Mouse",
        "isKeyDown",
        "keycode",
        "down",
        "currentTime",
        "Util",
        "getMillis",
        "cooldownMap",
        "containsKey",
        "keybind",
        "cooldown",
        "currentTime",
        "cooldownMap",
        "get",
        "keybind",
        "cooldownMap",
        "put",
        "keybind",
        "currentTime",
        "cooldownMap",
        "put",
        "keybind",
        "currentTime",
        "keybind",
        "mc",
        "Minecraft",
        "getInstance",
        "mc",
        "screen",
        "mc",
        "screen",
        "focused",
        "mc",
        "screen",
        "isKeyDown",
        "keybind"
    ],
    "literals": [],
    "variables": [
        "defaultFunction",
        "focused",
        "vanillaKeyBinding",
        "onKeyDown",
        "isKeyDownFunc",
        "keybindings"
    ],
    "comments": [],
    "docstrings": [
        "* Keybind manager\n * \n * @author Pancake, Scribble",
        "* Initialize keybind\n\t\t * \n\t\t * @param name       Name of keybind\n\t\t * @param category   Category of keybind\n\t\t * @param defaultKey Default key of keybind\n\t\t * @param onKeyDown  Will be run when the keybind is pressed",
        "* Initialize keybind with a different \"isKeyDown\" method\n\t\t * \n\t\t * @param name       Name of keybind\n\t\t * @param category   Category of keybind\n\t\t * @param defaultKey Default key of keybind\n\t\t * @param onKeyDown  Will be run when the keybind is pressed",
        "* Initialize keybind manage\n\t * \n\t * @param defaultFunction The default function used to determine if a keybind is\n\t *                        down. Can be overridden when registering a new keybind",
        "* Handle registered keybindings on game loop",
        "* Register new keybind\n\t * \n\t * @param keybind Keybind to register",
        "* Checks whether the keycode is pressed, regardless of any gui screens\n\t * \n\t * @param keybind The keybind to check\n\t * @return If the keybind is down"
    ],
    "functions": [
        "Keybind",
        "Keybind",
        "toString",
        "KeybindManager",
        "onRunClientGameLoop",
        "registerKeybind",
        "isKeyDown",
        "isKeyDown",
        "isKeyDownExceptTextField"
    ],
    "classes": [
        "KeybindManager",
        "Keybind"
    ]
}