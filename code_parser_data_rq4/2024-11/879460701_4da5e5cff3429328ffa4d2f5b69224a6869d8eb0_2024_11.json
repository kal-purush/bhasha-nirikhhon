{
    "identifiers": [
        "sqlite3",
        "tkinter",
        "messagebox",
        "sqlite3",
        "connect",
        "DATABASE",
        "connection",
        "connection",
        "cursor",
        "cursor",
        "execute",
        "CREATE_TABLE",
        "bk_title",
        "bk_author",
        "bk_genre",
        "bk_rating",
        "bk_pub_date",
        "sqlite3",
        "connect",
        "DATABASE",
        "connection",
        "connection",
        "cursor",
        "cursor",
        "execute",
        "INSERT_RECORD",
        "bk_title",
        "bk_author",
        "bk_genre",
        "bk_rating",
        "bk_pub_date",
        "messagebox",
        "showinfo",
        "sqlite3",
        "connect",
        "DATABASE",
        "connection",
        "connection",
        "cursor",
        "cursor",
        "execute",
        "FETCH_ALL_RECORDS",
        "fetchall",
        "records",
        "bk_id",
        "sqlite3",
        "connect",
        "DATABASE",
        "connection",
        "connection",
        "cursor",
        "cursor",
        "execute",
        "FETCH_RECORD",
        "bk_id",
        "fetchone",
        "book",
        "bk_id",
        "sqlite3",
        "connect",
        "DATABASE",
        "connection",
        "connection",
        "cursor",
        "cursor",
        "execute",
        "DELETE_RECORD",
        "bk_id",
        "messagebox",
        "showinfo",
        "book_id",
        "sqlite3",
        "connect",
        "DATABASE",
        "connection",
        "connection",
        "cursor",
        "cursor",
        "execute",
        "FETCH_RECORD",
        "book_id",
        "fetchone",
        "bk_id",
        "bk_title",
        "bk_author",
        "bk_genre",
        "bk_rating",
        "bk_pub_date",
        "sqlite3",
        "connect",
        "DATABASE",
        "connection",
        "connection",
        "cursor",
        "cursor",
        "execute",
        "UPDATE_RECORD",
        "bk_title",
        "bk_author",
        "bk_genre",
        "bk_rating",
        "bk_pub_date",
        "bk_id",
        "messagebox",
        "showinfo"
    ],
    "literals": [
        "'library.db'",
        "\"SELECT * FROM tbl_book;\"",
        "\"SELECT * FROM tbl_book WHERE bk_id = ?;\"",
        "\"DELETE FROM tbl_book WHERE bk_id = ?;\"",
        "\"UPDATE tbl_book SET bk_title = ?, bk_author = ?, bk_genre = ?, bk_rating = ?, bk_pub_date = ? WHERE bk_id = ?;\"",
        "\"DELETE FROM tbl_book;\"",
        "\"Book Added\"",
        "\"Book has been added.\"",
        "\"Book Deleted\"",
        "\"Book has been deleted.\"",
        "\"Book Updated\"",
        "\"Book has been updated.\""
    ],
    "variables": [
        "DATABASE",
        "CREATE_TABLE",
        "CREATE_TABLE",
        "INSERT_RECORD",
        "FETCH_ALL_RECORDS",
        "FETCH_RECORD",
        "DELETE_RECORD",
        "UPDATE_RECORD",
        "CLEAR_DATABASE",
        "cursor",
        "cursor",
        "cursor",
        "records",
        "cursor",
        "book",
        "cursor",
        "cursor",
        "cursor"
    ],
    "comments": [
        "Import sqlite3 database library",
        "---SQL STATEMENTS--------------------------------------------------------------SQL STATEMENTS----#",
        "SQL statements are text. SQL queries can be very long.",
        "A SQL statement can be assigned to a string variable.",
        "bk_author TEXT,",
        "---FUNCTIONS--------------------------------------------------------------------FUNCTIONS----#",
        "connect to database, automatically manages resources like files and databases",
        "ensures resources are cleaned up, like closing a database connection,",
        "after you're done-- even if an error occurs.",
        "the cursor object and all connections to the database are closed",
        "when the statement exits",
        "create a cursor object to interact wiht the database",
        "execute the SQL statement",
        "create a cursor object to interact with the database",
        "execute the SQL script against the database",
        "create a cursor object to interact with the database",
        "a list of tuples",
        "each tuple is a record/row in the database",
        "create a cursor object to interact with the database",
        "a list of tuples",
        "each tuple is a record/row in the database",
        "create a cursor object to interact with the database",
        "need to pass the book ID as a tuple",
        "create a cursor object to interact with the database",
        "fetch the selected record",
        "user clicks save",
        "create a cursor object to interact with the database",
        "update the selected record",
        "def clear_database():",
        "with sqlite3.connect(DATABASE) as connection:",
        "# create a cursor object to interact with the database",
        "cursor = connection.cursor()",
        "# execute the SQL script against the database",
        "cursor.execute(CLEAR_DATABASE)",
        "messagebox.showinfo(\"Books Deleted\", \"All books have been deleted.\")"
    ],
    "docstrings": [
        "\"\"\"\n    Name: library_database.py\n    Author: Jessica Soler\n    Date: 10/27/24\n    Purpose: CRUD module for Jessica's Library Database\n\"\"\"",
        "\"\"\"\n    CREATE TABLE IF NOT EXISTS tbl_author (\n        auth_id INTEGER PRIMARY KEY AUTOINCREMENT,\n        auth_fname TEXT,\n        auth_lname TEXT,\n    );\n\"\"\"",
        "\"\"\"\n    CREATE TABLE IF NOT EXISTS tbl_book (\n        bk_id INTEGER PRIMARY KEY AUTOINCREMENT,\n        bk_title TEXT,\n\n        bk_genre TEXT,\n        bk_rating INTEGER,\n        bk_pub_date TEXT\n        auth_id INTEGER,\n        CONSTRAINT fk_author\n            FOREIGN KEY (auth_id)\n            REFERENCES tbl_author(auth_id)\n            ON DELETE CASCADE\n    );\n\"\"\"",
        "\"\"\"\n    INSERT INTO tbl_book (\n        bk_title,\n        bk_author,\n        bk_genre,\n        bk_rating,\n        bk_pub_date\n    ) VALUES (?, ?, ?, ?, ?);\n\"\"\""
    ],
    "functions": [
        "create_table",
        "add_book",
        "fetch_books",
        "fetch_book",
        "delete_book",
        "edit_book",
        "save_book"
    ],
    "classes": []
}