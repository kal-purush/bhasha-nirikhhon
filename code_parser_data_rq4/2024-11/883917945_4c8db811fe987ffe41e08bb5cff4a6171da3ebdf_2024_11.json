{
    "identifiers": [
        "prop",
        "memory",
        "prop",
        "prop",
        "prop",
        "prop",
        "prefixes",
        "ucProp",
        "ucProp",
        "memory",
        "prop",
        "i",
        "props",
        "style",
        "props",
        "i",
        "memory",
        "prop",
        "props",
        "i",
        "memory",
        "prop",
        "order",
        "fallback",
        "order",
        "i",
        "order",
        "validChars",
        "order",
        "i",
        "returnStr",
        "order",
        "i",
        "validChars",
        "validChars",
        "order",
        "i",
        "returnStr",
        "returnStr",
        "fallback",
        "fallback",
        "el",
        "props",
        "key",
        "props",
        "props",
        "key",
        "pkey",
        "pfx",
        "key",
        "pkey",
        "el",
        "pkey",
        "props",
        "key",
        "el",
        "t",
        "t",
        "t",
        "t",
        "r",
        "revert",
        "r",
        "r",
        "order",
        "revert",
        "axes",
        "axes",
        "i",
        "axes",
        "i",
        "css",
        "axes",
        "i",
        "r",
        "axes",
        "i",
        "css",
        "s",
        "s",
        "config",
        "config",
        "config",
        "hScale",
        "wScale",
        "wScale",
        "hScale",
        "config",
        "scale",
        "config",
        "scale",
        "config",
        "config",
        "scale",
        "config",
        "scale",
        "config",
        "scale",
        "pfx",
        "body",
        "body",
        "impressSupported",
        "body",
        "rootId",
        "impressSupported",
        "empty",
        "empty",
        "empty",
        "empty",
        "empty",
        "empty",
        "rootId",
        "rootId",
        "roots",
        "rootId",
        "roots",
        "rootId",
        "lib",
        "initLibraries",
        "rootId",
        "body",
        "body",
        "lib",
        "rootId",
        "step",
        "lastEntered",
        "step",
        "lib",
        "step",
        "lastEntered",
        "step",
        "lib",
        "step",
        "currentStep",
        "nextStep",
        "lastEntered",
        "currentStep",
        "lib",
        "currentStep",
        "nextStep",
        "lastEntered",
        "el",
        "idx",
        "el",
        "lib",
        "data",
        "lib",
        "data",
        "lib",
        "data",
        "lib",
        "data",
        "lib",
        "data",
        "lib",
        "data",
        "data",
        "validateOrder",
        "data",
        "lib",
        "data",
        "lib",
        "data",
        "config",
        "el",
        "el",
        "el",
        "idx",
        "stepsData",
        "el",
        "step",
        "css",
        "el",
        "translate",
        "step",
        "rotate",
        "step",
        "scale",
        "step",
        "steps",
        "lib",
        "root",
        "steps",
        "initStep",
        "root",
        "lib",
        "rootData",
        "defaults",
        "lib",
        "rootData",
        "defaults",
        "lib",
        "rootData",
        "defaults",
        "lib",
        "rootData",
        "defaults",
        "lib",
        "rootData",
        "defaults",
        "lib",
        "rootData",
        "defaults",
        "initialized",
        "config",
        "buildConfig",
        "execPreInitPlugins",
        "root",
        "lib",
        "meta",
        "meta",
        "meta",
        "meta",
        "windowScale",
        "computeWindowScale",
        "config",
        "lib",
        "root",
        "el",
        "canvas",
        "el",
        "root",
        "canvas",
        "css",
        "body",
        "css",
        "root",
        "rootStyles",
        "css",
        "root",
        "config",
        "windowScale",
        "scale",
        "windowScale",
        "css",
        "canvas",
        "rootStyles",
        "body",
        "body",
        "initAllSteps",
        "currentState",
        "initialized",
        "lib",
        "root",
        "roots",
        "rootId",
        "step",
        "step",
        "step",
        "step",
        "steps",
        "steps",
        "step",
        "steps",
        "step",
        "step",
        "step",
        "lib",
        "step",
        "step",
        "step",
        "stepsData",
        "step",
        "step",
        "el",
        "duration",
        "reason",
        "origEvent",
        "reason",
        "reason",
        "origEvent",
        "origEvent",
        "initialized",
        "initAllSteps",
        "el",
        "getStep",
        "el",
        "stepsData",
        "el",
        "duration",
        "duration",
        "duration",
        "step",
        "activeStep",
        "activeStep",
        "el",
        "activeStep",
        "el",
        "duration",
        "reason",
        "origEvent",
        "origEvent",
        "execPreStepLeavePlugins",
        "el",
        "step",
        "stepsData",
        "el",
        "duration",
        "activeStep",
        "activeStep",
        "body",
        "activeStep",
        "el",
        "body",
        "el",
        "step",
        "step",
        "step",
        "step",
        "step",
        "step",
        "step",
        "step",
        "target",
        "currentState",
        "duration",
        "lib",
        "duration",
        "config",
        "duration",
        "el",
        "activeStep",
        "windowScale",
        "computeWindowScale",
        "config",
        "target",
        "windowScale",
        "activeStep",
        "activeStep",
        "el",
        "onStepLeave",
        "activeStep",
        "el",
        "css",
        "root",
        "config",
        "targetScale",
        "scale",
        "targetScale",
        "duration",
        "zoomin",
        "delay",
        "css",
        "canvas",
        "rotate",
        "target",
        "translate",
        "target",
        "duration",
        "zoomin",
        "delay",
        "currentState",
        "target",
        "currentState",
        "target",
        "currentState",
        "target",
        "currentState",
        "target",
        "currentState",
        "target",
        "currentState",
        "target",
        "currentState",
        "target",
        "delay",
        "currentState",
        "target",
        "activeStep",
        "el",
        "stepEnterTimeout",
        "stepEnterTimeout",
        "onStepEnter",
        "activeStep",
        "duration",
        "delay",
        "el",
        "origEvent",
        "steps",
        "activeStep",
        "prev",
        "prev",
        "steps",
        "prev",
        "steps",
        "steps",
        "prev",
        "origEvent",
        "origEvent",
        "steps",
        "activeStep",
        "next",
        "next",
        "steps",
        "steps",
        "next",
        "steps",
        "next",
        "origEvent",
        "a",
        "b",
        "k",
        "a",
        "b",
        "a",
        "k",
        "pct",
        "pct",
        "activeStep",
        "pct",
        "config",
        "pct",
        "idx",
        "steps",
        "activeStep",
        "idx",
        "steps",
        "steps",
        "idx",
        "steps",
        "pct",
        "idx",
        "steps",
        "activeStep",
        "idx",
        "steps",
        "idx",
        "steps",
        "steps",
        "execPreStepLeavePlugins",
        "stepsData",
        "nextElement",
        "nextStep",
        "windowScale",
        "pct",
        "interpolate",
        "currentState",
        "nextStep",
        "k",
        "interpolate",
        "currentState",
        "nextStep",
        "k",
        "interpolate",
        "currentState",
        "nextStep",
        "k",
        "interpolate",
        "currentState",
        "nextStep",
        "k",
        "interpolate",
        "currentState",
        "nextStep",
        "k",
        "interpolate",
        "currentState",
        "nextStep",
        "k",
        "k",
        "currentState",
        "nextStep",
        "interpolate",
        "currentState",
        "windowScale",
        "nextScale",
        "k",
        "css",
        "root",
        "config",
        "interpolatedStep",
        "scale",
        "interpolatedStep",
        "css",
        "canvas",
        "rotate",
        "interpolatedStep",
        "translate",
        "interpolatedStep",
        "lib",
        "roots",
        "rootId",
        "lib",
        "root",
        "steps",
        "step",
        "step",
        "lib",
        "root",
        "lib",
        "root",
        "lib",
        "root",
        "lib",
        "root",
        "lastHash",
        "lib",
        "lastHash",
        "lib",
        "lib",
        "steps",
        "body",
        "roots",
        "rootId",
        "init",
        "next",
        "prev",
        "swipe",
        "tear",
        "lib",
        "impress",
        "impressSupported",
        "impress",
        "obj",
        "libname",
        "obj",
        "obj",
        "libname",
        "libraryFactories",
        "libname",
        "obj",
        "libname",
        "rootId",
        "libname",
        "libraryFactories",
        "libraryFactories",
        "libname",
        "lib",
        "libname",
        "libname",
        "lib",
        "libname",
        "libraryFactories",
        "libname",
        "rootId",
        "lib",
        "impress",
        "plugin",
        "weight",
        "weight",
        "parseInt",
        "weight",
        "weight",
        "preInitPlugins",
        "weight",
        "preInitPlugins",
        "weight",
        "preInitPlugins",
        "weight",
        "plugin",
        "root",
        "i",
        "preInitPlugins",
        "i",
        "preInitPlugins",
        "i",
        "thisLevel",
        "j",
        "thisLevel",
        "j",
        "thisLevel",
        "j",
        "root",
        "roots",
        "root",
        "impress",
        "plugin",
        "weight",
        "weight",
        "parseInt",
        "weight",
        "weight",
        "preStepLeavePlugins",
        "weight",
        "preStepLeavePlugins",
        "weight",
        "preStepLeavePlugins",
        "weight",
        "plugin",
        "impress",
        "config",
        "i",
        "preStepLeavePlugins",
        "i",
        "preStepLeavePlugins",
        "i",
        "thisLevel",
        "j",
        "thisLevel",
        "j",
        "thisLevel",
        "j",
        "rootId",
        "roots",
        "rootId",
        "roots",
        "rootId",
        "recordStartingState",
        "rootId",
        "element",
        "elementList",
        "element",
        "parent",
        "element",
        "parent",
        "element",
        "pushElement",
        "element",
        "target",
        "listenerFunction",
        "eventListenerList",
        "target",
        "listenerFunction",
        "target",
        "listenerFunction",
        "target",
        "listenerFunction",
        "pushEventListener",
        "target",
        "listenerFunction",
        "callback",
        "callbackList",
        "callback",
        "pushCallback",
        "rootId",
        "resetStartingState",
        "rootId",
        "i",
        "callbackList",
        "i",
        "i",
        "callbackList",
        "i",
        "rootId",
        "callbackList",
        "i",
        "i",
        "elementList",
        "i",
        "elementList",
        "i",
        "elementList",
        "i",
        "elementList",
        "i",
        "i",
        "eventListenerList",
        "i",
        "eventListenerList",
        "i",
        "eventListenerList",
        "i",
        "eventListenerList",
        "i",
        "target",
        "listener",
        "pushElement",
        "appendChild",
        "pushEventListener",
        "addEventListener",
        "pushCallback",
        "teardown",
        "roots",
        "rootId",
        "lib",
        "rootsCount",
        "lib",
        "libraryFactory",
        "rootId",
        "startingState",
        "rootId",
        "startingState",
        "rootId",
        "rootId",
        "i",
        "steps",
        "i",
        "steps",
        "i",
        "startingState",
        "rootId",
        "el",
        "el",
        "rootsCount",
        "startingState",
        "startingState",
        "startingState",
        "i",
        "i",
        "metas",
        "i",
        "metas",
        "i",
        "m",
        "startingState",
        "m",
        "rootId",
        "rootId",
        "root",
        "activeId",
        "root",
        "i",
        "steps",
        "i",
        "steps",
        "i",
        "steps",
        "i",
        "steps",
        "i",
        "steps",
        "i",
        "steps",
        "i",
        "steps",
        "i",
        "steps",
        "i",
        "root",
        "root",
        "root",
        "root",
        "root",
        "root",
        "root",
        "steps",
        "startingState",
        "rootId",
        "step",
        "steps",
        "step",
        "step",
        "step",
        "step",
        "startingState",
        "rootId",
        "root",
        "canvas",
        "root",
        "canvasHTML",
        "roots",
        "rootId",
        "roots",
        "rootId",
        "rootsCount",
        "rootsCount",
        "startingState",
        "i",
        "i",
        "metas",
        "i",
        "metas",
        "i",
        "m",
        "startingState",
        "m",
        "startingState",
        "m",
        "m",
        "rootId",
        "roots",
        "rootId",
        "roots",
        "rootId",
        "selector",
        "context",
        "context",
        "context",
        "context",
        "selector",
        "selector",
        "context",
        "context",
        "context",
        "arrayify",
        "context",
        "selector",
        "a",
        "a",
        "id",
        "id",
        "byId",
        "decodeURIComponent",
        "encoded",
        "parameter",
        "parameter",
        "chunk",
        "chunk",
        "value",
        "value",
        "fn",
        "delay",
        "timer",
        "timer",
        "fn",
        "context",
        "args",
        "delay",
        "numeric",
        "fallback",
        "isNaN",
        "numeric",
        "fallback",
        "numeric",
        "numeric",
        "fallback",
        "numeric",
        "toNumber",
        "numeric",
        "fallback",
        "numeric",
        "ratio",
        "toNumber",
        "numeric",
        "fallback",
        "parseFloat",
        "ratio",
        "ratio",
        "config",
        "config",
        "value",
        "multiplier",
        "el",
        "eventName",
        "detail",
        "eventName",
        "detail",
        "el",
        "$",
        "$$",
        "arrayify",
        "byId",
        "getElementFromHash",
        "throttle",
        "toNumber",
        "toNumberAdvanced",
        "triggerEvent",
        "getUrlParamValue",
        "roots",
        "rootId",
        "lib",
        "lib",
        "libraryFactory",
        "rootId",
        "roots",
        "rootId",
        "roots",
        "rootId",
        "num",
        "num",
        "vec",
        "vec",
        "vec",
        "vec",
        "vec",
        "vec",
        "vec",
        "vec1",
        "vec2",
        "vec1",
        "vec2",
        "vec1",
        "vec2",
        "vec1",
        "vec2",
        "vec1",
        "vec2",
        "vec1",
        "vec2",
        "vec1",
        "vec2",
        "vec1",
        "vec2",
        "vec1",
        "vec2",
        "vec1",
        "vec2",
        "vec1",
        "vec2",
        "vec",
        "roundNumber",
        "vec",
        "roundNumber",
        "vec",
        "roundNumber",
        "vec",
        "vec1",
        "vec2",
        "vec3",
        "vectorDotProd",
        "vectorCrossProd",
        "vec1",
        "vec2",
        "vec3",
        "axis",
        "theta",
        "theta",
        "theta",
        "r",
        "radians",
        "t",
        "radians",
        "vectorLength",
        "axis",
        "r",
        "axis",
        "t",
        "axis",
        "t",
        "axis",
        "t",
        "q",
        "quaternion",
        "roundNumber",
        "quaternion",
        "roundNumber",
        "quaternion",
        "roundNumber",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "q1",
        "q2",
        "q1",
        "q2",
        "q1",
        "q2",
        "q1",
        "q2",
        "q1",
        "q2",
        "q1",
        "q2",
        "q1",
        "q2",
        "q1",
        "q2",
        "q1",
        "q2",
        "q1",
        "q2",
        "q1",
        "q2",
        "q1",
        "q2",
        "q1",
        "q2",
        "q1",
        "q2",
        "q1",
        "q2",
        "q1",
        "q2",
        "q1",
        "q2",
        "baseCoordinate",
        "rotation",
        "rotation",
        "rotation",
        "order",
        "i",
        "axes",
        "i",
        "rotation",
        "axes",
        "i",
        "deg",
        "deg",
        "i",
        "coordinate",
        "rotateByQuaternion",
        "baseCoordinate",
        "result",
        "rotateByQuaternion",
        "baseCoordinate",
        "result",
        "rotateByQuaternion",
        "baseCoordinate",
        "result",
        "result",
        "leftMulQuaternion",
        "makeQuaternion",
        "coordinate",
        "axes",
        "i",
        "deg",
        "result",
        "result",
        "vec",
        "quaternion",
        "makeQuaternion",
        "vec",
        "q",
        "leftMulQuaternion",
        "leftMulQuaternion",
        "quaternion",
        "q",
        "conjugateQuaternion",
        "quaternion",
        "quaternionToVector",
        "q",
        "baseCoordinate",
        "vec",
        "rotation",
        "rotationToQuaternion",
        "baseCoordinate",
        "rotation",
        "rotateByQuaternion",
        "vec",
        "quaternion",
        "coordinate",
        "rotation",
        "rotationToQuaternion",
        "coordinate",
        "rotation",
        "rotateByQuaternion",
        "coordinate",
        "quaternion",
        "rotateByQuaternion",
        "coordinate",
        "quaternion",
        "rotateByQuaternion",
        "coordinate",
        "quaternion",
        "axis",
        "vec1",
        "vec2",
        "vectorLength",
        "vec1",
        "vectorLength",
        "vec2",
        "vecLen1",
        "vecLen2",
        "vectorDotProd",
        "vec1",
        "vec2",
        "vecLen1",
        "vecLen2",
        "cos",
        "tripleProduct",
        "vec1",
        "vec2",
        "axis",
        "angle",
        "angle",
        "axis",
        "planeVec",
        "rotatedVec",
        "vectorCrossProd",
        "axis",
        "planeVec",
        "isZeroVector",
        "norm",
        "angleBetweenTwoVector",
        "axis",
        "rotatedVec",
        "norm",
        "coordinate",
        "order",
        "order",
        "order",
        "order",
        "order",
        "angleBetweenPlaneAndVector",
        "coordinate",
        "axis2",
        "worldUnitCoordinate",
        "axis0",
        "coordinate",
        "axis0",
        "reversedOrder",
        "r2",
        "axis2",
        "rotate2",
        "rotateCoordinate",
        "coordinate",
        "r2",
        "angleBetweenTwoVector",
        "coordinate1",
        "axis1",
        "worldUnitCoordinate",
        "axis0",
        "coordinate1",
        "axis0",
        "angleBetweenTwoVector",
        "worldUnitCoordinate",
        "axis0",
        "worldUnitCoordinate",
        "axis1",
        "coordinate1",
        "axis1",
        "rotation",
        "order",
        "rotation",
        "axis0",
        "roundNumber",
        "rotate0",
        "rotation",
        "axis1",
        "roundNumber",
        "rotate1",
        "rotation",
        "axis2",
        "roundNumber",
        "rotate2",
        "rotation",
        "coordinate",
        "i",
        "orders",
        "i",
        "rotations",
        "coordinateToOrderedRotation",
        "coordinate",
        "orders",
        "i",
        "rotations",
        "baseDeg",
        "deg",
        "deg",
        "baseDeg",
        "deg",
        "deg",
        "baseDeg",
        "deg",
        "deg",
        "baseRotate",
        "rotations",
        "i",
        "rotations",
        "i",
        "rotations",
        "i",
        "nearestAngle",
        "baseRotate",
        "rotations",
        "i",
        "nearestAngle",
        "baseRotate",
        "rotations",
        "i",
        "nearestAngle",
        "baseRotate",
        "rotations",
        "i",
        "rotation",
        "baseRotate",
        "rotation",
        "baseRotate",
        "rotation",
        "baseRotate",
        "i",
        "score",
        "bestScore",
        "bestScore",
        "score",
        "bestRotation",
        "rotation",
        "bestRotation",
        "baseRotate",
        "coordinate",
        "possibleRotations",
        "coordinate",
        "bestRotation",
        "baseRotate",
        "rotations",
        "rotations",
        "rotations",
        "i",
        "rotations",
        "i",
        "coordinate",
        "rotateCoordinate",
        "coordinate",
        "rotations",
        "i",
        "coordinateToRotation",
        "rotations",
        "coordinate",
        "rotate",
        "relative",
        "prevRotation",
        "rotateVector",
        "worldUnitCoordinate",
        "relative",
        "prevRotation",
        "result",
        "combineRotations",
        "prevRotation",
        "relative",
        "result",
        "translateRelative",
        "roots",
        "rootId",
        "lib",
        "lib",
        "libraryFactory",
        "util",
        "api",
        "root",
        "root",
        "util",
        "data",
        "autoplay",
        "autoplayDefault",
        "util",
        "autoplay",
        "toolbar",
        "addToolbarButton",
        "toolbar",
        "api",
        "clearTimeout",
        "timeoutHandle",
        "status",
        "reloadTimeout",
        "status",
        "reloadTimeout",
        "currentStepTimeout",
        "util",
        "step",
        "autoplayDefault",
        "status",
        "setAutoplayTimeout",
        "setAutoplayTimeout",
        "currentStepTimeout",
        "reloadTimeout",
        "reloadTimeout",
        "timeout",
        "timeoutHandle",
        "clearTimeout",
        "timeoutHandle",
        "timeout",
        "timeoutHandle",
        "setTimeout",
        "api",
        "timeout",
        "setButtonText",
        "html",
        "tempDiv",
        "html",
        "tempDiv",
        "currentStepTimeout",
        "status",
        "status",
        "status",
        "currentStepTimeout",
        "status",
        "toolbarButton",
        "toolbarButton",
        "toolbarButton",
        "toolbarButton",
        "getButtonText",
        "toolbarButton",
        "toolbarButton",
        "buttonWidth",
        "toolbarButton",
        "toolbarButton",
        "buttonHeight",
        "toolbar",
        "getButtonText",
        "toolbarButton",
        "makeDomElement",
        "html",
        "toolbarButton",
        "toggleStatus",
        "status",
        "autoplayDefault",
        "autoplayDefault",
        "currentStepTimeout",
        "currentStepTimeout",
        "autoplayDefault",
        "setAutoplayTimeout",
        "currentStepTimeout",
        "status",
        "setAutoplayTimeout",
        "util",
        "toolbar",
        "toolbarButton",
        "el",
        "props",
        "key",
        "props",
        "props",
        "key",
        "pkey",
        "pfx",
        "key",
        "pkey",
        "el",
        "pkey",
        "props",
        "key",
        "el",
        "prop",
        "memory",
        "prop",
        "prop",
        "prop",
        "prop",
        "prefixes",
        "ucProp",
        "ucProp",
        "memory",
        "prop",
        "i",
        "props",
        "style",
        "props",
        "i",
        "memory",
        "prop",
        "props",
        "i",
        "memory",
        "prop",
        "blackedOut",
        "css",
        "canvas",
        "blackedOut",
        "util",
        "root",
        "blackedOut",
        "removeBlackout",
        "css",
        "canvas",
        "blackedOut",
        "blackedOut",
        "blackedOut",
        "util",
        "root",
        "api",
        "util",
        "api",
        "root",
        "canvas",
        "root",
        "api",
        "gc",
        "blackedOut",
        "blackout",
        "removeBlackout",
        "gc",
        "removeBlackout",
        "elem",
        "src",
        "marked",
        "src",
        "elem",
        "src",
        "elem",
        "markdown",
        "src",
        "dialect",
        "elem",
        "elem",
        "text",
        "m",
        "text",
        "text",
        "m",
        "text",
        "SLIDE_SEPARATOR",
        "selector",
        "getMarkdownParser",
        "parseMarkdown",
        "elem",
        "selector",
        "elem",
        "id",
        "elem",
        "elem",
        "elem",
        "origTitle",
        "elem",
        "elem",
        "getMarkdownSlides",
        "elem",
        "elem",
        "j",
        "slides",
        "j",
        "elem",
        "newElem",
        "elem",
        "newElem",
        "slideElems",
        "slideElems",
        "newElem",
        "id",
        "slideElems",
        "id",
        "i",
        "slides",
        "i",
        "slideElems",
        "i",
        "parseMarkdown",
        "slideElems",
        "i",
        "slides",
        "i",
        "origTitle",
        "i",
        "slideElems",
        "i",
        "origTitle",
        "convertMarkdowns",
        "hljs",
        "mermaid",
        "impress",
        "preInit",
        "root",
        "api",
        "api",
        "selector",
        "selectors",
        "selector",
        "elements",
        "i",
        "elements",
        "i",
        "elements",
        "i",
        "gc",
        "e",
        "gc",
        "e",
        "elem",
        "api",
        "api",
        "gc",
        "enterFullscreen",
        "util",
        "root",
        "exitFullscreen",
        "util",
        "root",
        "util",
        "lib",
        "numeric",
        "isNaN",
        "numeric",
        "data",
        "data",
        "data",
        "data",
        "keylist",
        "nextlist",
        "keylist",
        "nextlist",
        "keylist",
        "index",
        "nextlist",
        "index",
        "isNumber",
        "next",
        "steps",
        "next",
        "lib",
        "next",
        "newTarget",
        "newTarget",
        "newTarget",
        "lib",
        "next",
        "isNumber",
        "data",
        "steps",
        "data",
        "lib",
        "data",
        "data",
        "newTarget",
        "newTarget",
        "newTarget",
        "lib",
        "data",
        "isNumber",
        "data",
        "steps",
        "data",
        "lib",
        "data",
        "data",
        "newTarget",
        "newTarget",
        "newTarget",
        "lib",
        "data",
        "isNumber",
        "data",
        "steps",
        "data",
        "lib",
        "data",
        "data",
        "newTarget",
        "newTarget",
        "newTarget",
        "lib",
        "data",
        "impress",
        "el",
        "eventName",
        "detail",
        "eventName",
        "detail",
        "el",
        "helpDiv",
        "row",
        "rows",
        "arrayItem",
        "row",
        "html",
        "rows",
        "row",
        "arrayItem",
        "html",
        "helpDiv",
        "html",
        "helpDiv",
        "helpDiv",
        "helpDiv",
        "helpDiv",
        "timeoutHandle",
        "toggleHelp",
        "e",
        "e",
        "rows",
        "rowIndex",
        "rows",
        "rowIndex",
        "rows",
        "rowIndex",
        "rows",
        "e",
        "e",
        "e",
        "renderHelpDiv",
        "e",
        "renderHelpDiv",
        "helpDiv",
        "helpDiv",
        "timeoutHandle",
        "helpDiv",
        "e",
        "api",
        "timeoutHandle",
        "helpDiv",
        "helpDiv",
        "rows",
        "triggerEvent",
        "el",
        "eventName",
        "detail",
        "eventName",
        "detail",
        "el",
        "navigator",
        "lang",
        "lang",
        "lang",
        "i",
        "i",
        "i",
        "rootId",
        "rootId",
        "rootId",
        "allConsoles",
        "rootId",
        "allConsoles",
        "rootId",
        "rootId",
        "nextElement",
        "nextElement",
        "nextElement",
        "nextElement",
        "nextElement",
        "nextElement",
        "nextElement",
        "classes",
        "nextElement",
        "classes",
        "classes",
        "consoleWindow",
        "lang",
        "nextElement",
        "nextElement",
        "nextElement",
        "nextElement",
        "nextElement",
        "nextElement",
        "nextElement",
        "nextElement",
        "nextElement",
        "nextElement",
        "consoleWindow",
        "lang",
        "consoleWindow",
        "newNotes",
        "newNotes",
        "newNotes",
        "newNotes",
        "lang",
        "consoleWindow",
        "newNotes",
        "baseURL",
        "baseURL",
        "nextStep",
        "consoleWindow",
        "slideView",
        "slideSrc",
        "slideView",
        "slideSrc",
        "consoleWindow",
        "preView",
        "preSrc",
        "preView",
        "preSrc",
        "consoleWindow",
        "lang",
        "consoleWindow",
        "newNotes",
        "newNotes",
        "newNotes",
        "newNotes",
        "lang",
        "consoleWindow",
        "notes",
        "newNotes",
        "notes",
        "baseURL",
        "baseURL",
        "nextStep",
        "consoleWindow",
        "slideView",
        "slideSrc",
        "slideView",
        "slideSrc",
        "consoleWindow",
        "preView",
        "preSrc",
        "preView",
        "preSrc",
        "consoleWindow",
        "lang",
        "consoleWindow",
        "onSubstepShow",
        "onSubstepHide",
        "consoleWindow",
        "triggerEventInView",
        "slideView",
        "consoleWindow",
        "triggerEventInView",
        "slideView",
        "frame",
        "eventName",
        "detail",
        "frame",
        "eventName",
        "detail",
        "frame",
        "consoleWindow",
        "notes",
        "notes",
        "notes",
        "notes",
        "notes",
        "consoleWindow",
        "now",
        "now",
        "now",
        "lang",
        "ampm",
        "hours",
        "hours",
        "hours",
        "hours",
        "hours",
        "hours",
        "hours",
        "hours",
        "zeroPad",
        "hours",
        "zeroPad",
        "minutes",
        "zeroPad",
        "seconds",
        "ampm",
        "consoleWindow",
        "clockStr",
        "seconds",
        "now",
        "consoleWindow",
        "minutes",
        "seconds",
        "seconds",
        "seconds",
        "consoleWindow",
        "zeroPad",
        "minutes",
        "zeroPad",
        "seconds",
        "consoleWindow",
        "consoleWindow",
        "consoleWindow",
        "consoleWindow",
        "keyCodes",
        "handler",
        "consoleWindow",
        "keyCodes",
        "keyCodes",
        "handler",
        "consoleWindow",
        "consoleWindow",
        "slideView",
        "preView",
        "cssFileIframe",
        "slideView",
        "cssFileIframe",
        "preView",
        "cssFileIframe",
        "slideView",
        "slideView",
        "cssFileIframe",
        "slideView",
        "cssFileIframe",
        "preView",
        "preView",
        "cssFileIframe",
        "preView",
        "cssFileIframe",
        "top",
        "consoleWindow",
        "consoleWindow",
        "consoleWindow",
        "consoleWindow",
        "consoleWindow",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "rootId",
        "rootId",
        "message",
        "styleStr",
        "clickStr",
        "lang",
        "message",
        "cssFile",
        "cssLink",
        "cssFile",
        "consoleWindow",
        "consoleWindow",
        "consoleTemplate",
        "cssStyleStr",
        "cssLink",
        "x",
        "lang",
        "x",
        "x",
        "consoleWindow",
        "consoleWindow",
        "consoleWindow",
        "consoleWindow",
        "consoleOnLoad",
        "consoleWindow",
        "consoleWindow",
        "timerReset",
        "consoleWindow",
        "setInterval",
        "allConsoles",
        "rootId",
        "registerKeyEvent",
        "registerKeyEvent",
        "registerKeyEvent",
        "spaceHandler",
        "registerKeyEvent",
        "timerReset",
        "consoleWindow",
        "clearInterval",
        "consoleWindow",
        "onStepEnter",
        "consoleWindow",
        "consoleWindow",
        "resize",
        "consoleWindow",
        "resize",
        "consoleWindow",
        "consoleWindow",
        "consoleWindow",
        "consoleWindow",
        "slideView",
        "slideView",
        "views",
        "delta",
        "slideViewWidth",
        "ratio",
        "slideViewHeight",
        "preViewGap",
        "slideViewWidth",
        "preViewDefaultFactor",
        "slideViewHeight",
        "preViewDefaultFactor",
        "views",
        "delta",
        "preViewTop",
        "preViewHeight",
        "preViewHeight",
        "views",
        "delta",
        "preViewTop",
        "preViewWidth",
        "preViewHeight",
        "ratio",
        "preViewWidth",
        "slideViewWidth",
        "preViewMinimumFactor",
        "slideViewWidth",
        "views",
        "delta",
        "slideViewHeight",
        "views",
        "delta",
        "preViewGap",
        "preViewMinimumFactor",
        "preViewTop",
        "slideViewHeight",
        "preViewGap",
        "preViewWidth",
        "slideViewWidth",
        "preViewMinimumFactor",
        "preViewHeight",
        "views",
        "delta",
        "preViewTop",
        "slideView",
        "slideViewWidth",
        "slideView",
        "slideViewHeight",
        "preView",
        "preViewTop",
        "preView",
        "preViewWidth",
        "preView",
        "preViewHeight",
        "cssConsole",
        "cssIframe",
        "cssConsole",
        "cssFile",
        "cssConsole",
        "root",
        "cssFile",
        "root",
        "cssIframe",
        "cssFileIframe",
        "cssIframe",
        "root",
        "cssFileIframe",
        "root",
        "root",
        "onStepLeave",
        "root",
        "onStepEnter",
        "root",
        "onSubstep",
        "root",
        "onSubstepShow",
        "root",
        "onSubstepHide",
        "consoleWindow",
        "consoleWindow",
        "consoleWindow",
        "registerKeyEvent",
        "open",
        "root",
        "open",
        "cssConsole",
        "cssIframe",
        "cssConsole",
        "cssConsole",
        "cssFileOldDefault",
        "cssIframe",
        "cssIframe",
        "cssFileIframeOldDefault",
        "_init",
        "cssConsole",
        "cssIframe",
        "root",
        "open",
        "root",
        "registerKeyEvent",
        "allConsoles",
        "rootId",
        "init",
        "open",
        "clockTick",
        "registerKeyEvent",
        "_init",
        "allConsoles",
        "rootId",
        "impressConsole",
        "triggerEvent",
        "attributeTracker",
        "root",
        "api",
        "gc",
        "api",
        "enhanceMedia",
        "gc",
        "teardown",
        "teardown",
        "removeMediaClasses",
        "i",
        "i",
        "attributeTracker",
        "i",
        "el",
        "attributeTracker",
        "i",
        "el",
        "el",
        "attributeTracker",
        "getMediaAttribute",
        "attributeName",
        "nodes",
        "attrName",
        "attributeName",
        "i",
        "i",
        "nodes",
        "i",
        "node",
        "nodes",
        "i",
        "node",
        "attrName",
        "attrValue",
        "node",
        "attrName",
        "attrValue",
        "attrValue",
        "onPlay",
        "onPause",
        "onEnded",
        "removeMediaClasses",
        "types",
        "types",
        "types",
        "types",
        "enhanceMediaNodes",
        "media",
        "root",
        "i",
        "i",
        "media",
        "i",
        "media",
        "i",
        "mediaElement",
        "media",
        "i",
        "id",
        "mediaElement",
        "id",
        "id",
        "mediaElement",
        "i",
        "attributeTracker",
        "mediaElement",
        "gc",
        "mediaElement",
        "onPlay",
        "gc",
        "mediaElement",
        "onPlay",
        "gc",
        "mediaElement",
        "onPause",
        "gc",
        "mediaElement",
        "onEnded",
        "enhanceMedia",
        "enhanceMediaNodes",
        "steps",
        "i",
        "i",
        "steps",
        "i",
        "stepElement",
        "steps",
        "i",
        "gc",
        "stepElement",
        "onStepenter",
        "gc",
        "stepElement",
        "onStepleave",
        "onStepenterDetectImpressConsole",
        "onStepenter",
        "stepElement",
        "removeMediaClasses",
        "media",
        "stepElement",
        "i",
        "i",
        "media",
        "i",
        "mediaElement",
        "media",
        "i",
        "onConsole",
        "onStepenterDetectImpressConsole",
        "autoplay",
        "getMediaAttribute",
        "mediaElement",
        "stepElement",
        "root",
        "autoplay",
        "onConsole",
        "onConsole",
        "mediaElement",
        "mediaElement",
        "onStepleave",
        "stepElement",
        "media",
        "i",
        "i",
        "media",
        "i",
        "mediaElement",
        "media",
        "i",
        "autoplay",
        "getMediaAttribute",
        "mediaElement",
        "stepElement",
        "root",
        "autopause",
        "getMediaAttribute",
        "mediaElement",
        "stepElement",
        "root",
        "autostop",
        "getMediaAttribute",
        "mediaElement",
        "stepElement",
        "root",
        "autostop",
        "autopause",
        "autostop",
        "autoplay",
        "autopause",
        "autostop",
        "mediaElement",
        "autostop",
        "mediaElement",
        "removeMediaClasses",
        "el",
        "i",
        "steps",
        "i",
        "steps",
        "i",
        "el",
        "i",
        "steps",
        "steps",
        "i",
        "steps",
        "el",
        "steps",
        "i",
        "i",
        "steps",
        "i",
        "el",
        "i",
        "steps",
        "i",
        "steps",
        "steps",
        "navigator",
        "body",
        "api",
        "prev",
        "prev",
        "next",
        "next",
        "getPrevStep",
        "prev",
        "getNextStep",
        "next",
        "oldprev",
        "oldprev",
        "oldnext",
        "oldnext",
        "timeoutHandle",
        "timeoutHandle",
        "timeoutHandle",
        "hide",
        "timeout",
        "api",
        "gc",
        "show",
        "gc",
        "show",
        "gc",
        "show",
        "show",
        "gc",
        "timeoutHandle",
        "api",
        "api",
        "gc",
        "isNavigationEvent",
        "gc",
        "isNavigationEvent",
        "api",
        "api",
        "api",
        "gc",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "href",
        "href",
        "target",
        "href",
        "api",
        "target",
        "err",
        "err",
        "err",
        "err",
        "gc",
        "target",
        "target",
        "target",
        "target",
        "target",
        "api",
        "target",
        "err",
        "err",
        "err",
        "err",
        "util",
        "el",
        "eventName",
        "detail",
        "eventName",
        "detail",
        "el",
        "html",
        "tempDiv",
        "html",
        "tempDiv",
        "step",
        "step",
        "step",
        "step",
        "line",
        "step",
        "line",
        "line",
        "line",
        "line",
        "MAX_TITLE_LEN",
        "line",
        "line",
        "MAX_TITLE_LEN",
        "step",
        "i",
        "steps",
        "i",
        "hideSteps",
        "steps",
        "i",
        "options",
        "options",
        "steps",
        "i",
        "getStepTitle",
        "steps",
        "i",
        "options",
        "api",
        "api",
        "root",
        "steps",
        "root",
        "selectOptionsHtml",
        "prev",
        "makeDomElement",
        "prevHtml",
        "prev",
        "api",
        "select",
        "makeDomElement",
        "selectHtml",
        "select",
        "api",
        "gc",
        "root",
        "steps",
        "root",
        "select",
        "selectOptionsHtml",
        "select",
        "next",
        "makeDomElement",
        "nextHtml",
        "next",
        "api",
        "triggerEvent",
        "toolbar",
        "prev",
        "triggerEvent",
        "toolbar",
        "select",
        "triggerEvent",
        "toolbar",
        "next",
        "hideSteps",
        "select",
        "select",
        "selectOptionsHtml",
        "toolbar",
        "toolbar",
        "addNavigationControls",
        "stepids",
        "root",
        "i",
        "steps",
        "i",
        "stepids",
        "i",
        "steps",
        "i",
        "root",
        "getSteps",
        "gc",
        "stepids",
        "progressbar",
        "progressbar",
        "progress",
        "progress",
        "progressbar",
        "progress",
        "updateProgressbar",
        "getSteps",
        "updateProgressbar",
        "slideId",
        "stepids",
        "slideId",
        "progressbar",
        "stepids",
        "slideNumber",
        "progressbar",
        "width",
        "progress",
        "progress",
        "slideNumber",
        "stepids",
        "el",
        "prev",
        "el",
        "prev",
        "prev",
        "data",
        "data",
        "el",
        "Node",
        "prev",
        "toNumberAdvanced",
        "prev",
        "toNumberAdvanced",
        "prev",
        "toNumberAdvanced",
        "prevPosition",
        "prev",
        "prev",
        "prev",
        "toNumber",
        "prev",
        "toNumber",
        "prev",
        "toNumber",
        "prev",
        "prevPosition",
        "toNumberAdvanced",
        "toNumberAdvanced",
        "toNumberAdvanced",
        "toNumberAdvanced",
        "toNumberAdvanced",
        "toNumberAdvanced",
        "data",
        "data",
        "el",
        "prev",
        "prev",
        "data",
        "inheritRotation",
        "toNumberAdvanced",
        "data",
        "prev",
        "toNumberAdvanced",
        "data",
        "prev",
        "toNumberAdvanced",
        "data",
        "prev",
        "toNumber",
        "data",
        "toNumber",
        "data",
        "toNumber",
        "data",
        "data",
        "data",
        "data",
        "prev",
        "toNumberAdvanced",
        "data",
        "prev",
        "toNumberAdvanced",
        "data",
        "prev",
        "toNumberAdvanced",
        "data",
        "prev",
        "toNumber",
        "data",
        "prev",
        "toNumber",
        "data",
        "prev",
        "toNumber",
        "data",
        "prev",
        "data",
        "step",
        "step",
        "inheritRotation",
        "relative",
        "api",
        "step",
        "prev",
        "relative",
        "step",
        "relative",
        "step",
        "relative",
        "step",
        "data",
        "relative",
        "step",
        "data",
        "relative",
        "step",
        "data",
        "relative",
        "step",
        "data",
        "inheritRotation",
        "relative",
        "step",
        "data",
        "inheritRotation",
        "relative",
        "step",
        "data",
        "data",
        "inheritRotation",
        "relative",
        "step",
        "step",
        "step",
        "relative",
        "step",
        "step",
        "relative",
        "step",
        "step",
        "relative",
        "step",
        "step",
        "relative",
        "step",
        "step",
        "relative",
        "step",
        "step",
        "relative",
        "step",
        "root",
        "impressApi",
        "api",
        "impressApi",
        "toNumber",
        "api",
        "toNumberAdvanced",
        "api",
        "root",
        "startingState",
        "root",
        "i",
        "steps",
        "i",
        "steps",
        "i",
        "startingState",
        "root",
        "el",
        "el",
        "el",
        "el",
        "el",
        "el",
        "el",
        "el",
        "el",
        "el",
        "el",
        "el",
        "el",
        "el",
        "el",
        "el",
        "computeRelativePositions",
        "el",
        "prev",
        "el",
        "step",
        "el",
        "step",
        "el",
        "step",
        "el",
        "step",
        "el",
        "step",
        "el",
        "step",
        "el",
        "step",
        "el",
        "step",
        "el",
        "step",
        "el",
        "step",
        "el",
        "step",
        "el",
        "step",
        "el",
        "step",
        "el",
        "step",
        "prev",
        "step",
        "rel",
        "startingState",
        "root",
        "step",
        "steps",
        "i",
        "attrs",
        "i",
        "step",
        "attrs",
        "i",
        "step",
        "attrs",
        "i",
        "step",
        "attrs",
        "i",
        "step",
        "attrs",
        "i",
        "step",
        "attrs",
        "i",
        "startingState",
        "root",
        "api",
        "api",
        "api",
        "util",
        "el",
        "i",
        "steps",
        "i",
        "steps",
        "i",
        "el",
        "i",
        "steps",
        "steps",
        "i",
        "steps",
        "el",
        "steps",
        "i",
        "i",
        "steps",
        "i",
        "el",
        "i",
        "steps",
        "i",
        "steps",
        "steps",
        "getNextStep",
        "skip",
        "getPrevStep",
        "skip",
        "util",
        "skip",
        "stop",
        "el",
        "eventName",
        "detail",
        "eventName",
        "detail",
        "el",
        "activeStep",
        "el",
        "showSubstepIfAny",
        "step",
        "el",
        "triggerEvent",
        "step",
        "el",
        "triggerEvent",
        "step",
        "el",
        "el",
        "hideSubstepIfAny",
        "step",
        "el",
        "triggerEvent",
        "step",
        "el",
        "triggerEvent",
        "step",
        "el",
        "step",
        "step",
        "substeps",
        "sortSubsteps",
        "substeps",
        "step",
        "showSubstep",
        "sorted",
        "visible",
        "substepNodeList",
        "substepNodeList",
        "substeps",
        "el",
        "el",
        "a",
        "b",
        "a",
        "b",
        "parseInt",
        "orderA",
        "parseInt",
        "orderB",
        "substeps",
        "el",
        "el",
        "sorted",
        "substeps",
        "visible",
        "visible",
        "substeps",
        "i",
        "substeps",
        "i",
        "substeps",
        "i",
        "visible",
        "j",
        "substeps",
        "j",
        "currentSubstepOrder",
        "currentSubstepOrder",
        "substeps",
        "j",
        "el",
        "substeps",
        "j",
        "currentSubstepOrder",
        "el",
        "el",
        "el",
        "currentSubstepOrder",
        "el",
        "step",
        "step",
        "step",
        "sortSubsteps",
        "visible",
        "substeps",
        "hideSubstep",
        "sorted",
        "visible",
        "visible",
        "i",
        "visible",
        "i",
        "visible",
        "i",
        "current",
        "i",
        "visible",
        "i",
        "current",
        "visible",
        "current",
        "visible",
        "visible",
        "el",
        "current",
        "visible",
        "current",
        "visible",
        "current",
        "visible",
        "current",
        "visible",
        "hideSubstep",
        "visible",
        "el",
        "substep",
        "step",
        "i",
        "visible",
        "i",
        "visible",
        "i",
        "showSubstepIfAny",
        "activeStep",
        "hideSubstepIfAny",
        "activeStep",
        "lastX",
        "startX",
        "x",
        "startX",
        "lastDX",
        "lastX",
        "x",
        "lastX",
        "x",
        "diff",
        "lastX",
        "startX",
        "totalDiff",
        "totalDiff",
        "lastDX",
        "totalDiff",
        "lastDX",
        "totalDiff",
        "lastDX",
        "lastDX",
        "threshold",
        "lastDX",
        "threshold",
        "lastDX",
        "threshold",
        "index",
        "index",
        "groups",
        "index",
        "groups",
        "index",
        "groups",
        "index",
        "id",
        "getNextGroupIndex",
        "index",
        "nextIndex",
        "toolbar",
        "groups",
        "index",
        "toolbar",
        "groups",
        "index",
        "groups",
        "nextIndex",
        "groups",
        "index",
        "index",
        "index",
        "groups",
        "i",
        "i",
        "groups",
        "i",
        "i",
        "groups",
        "i",
        "toolbar",
        "toolbar",
        "e",
        "getGroupElement",
        "e",
        "group",
        "e",
        "toolbar",
        "e",
        "toolbar",
        "e",
        "e",
        "toolbar",
        "e",
        "toolbar",
        "e",
        "api",
        "toolbar",
        "groups"
    ],
    "literals": [
        "\"use strict\"",
        "\"dummy\"",
        "\"Webkit Moz O ms Khtml\"",
        "\" \"",
        "\"undefined\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"xyz\"",
        "\"\"",
        "\"string\"",
        "\"\"",
        "\"\"",
        "\"xyz\"",
        "\" translate3d(\"",
        "\"px,\"",
        "\"px,\"",
        "\"px) \"",
        "\"xyz\"",
        "\"\"",
        "\"\"",
        "\" rotate\"",
        "\"(\"",
        "\"deg)\"",
        "\" scale(\"",
        "\") \"",
        "\"perspective\"",
        "\" impress-not-supported \"",
        "\"impress\"",
        "\"impress-root-\"",
        "\"impress-root-\"",
        "\"impress-not-supported\"",
        "\"impress-supported\"",
        "\"div\"",
        "\"impress:stepenter\"",
        "\"impress:steprefresh\"",
        "\"impress:stepleave\"",
        "\"step-\"",
        "\"impress-\"",
        "\"absolute\"",
        "\"translate(-50%,-50%)\"",
        "\"preserve-3d\"",
        "\".step\"",
        "\"meta[name='viewport']\"",
        "\"meta\"",
        "\"width=device-width, minimum-scale=1, maximum-scale=1, user-scalable=no\"",
        "\"viewport\"",
        "\"100%\"",
        "\"100%\"",
        "\"hidden\"",
        "\"absolute\"",
        "\"top left\"",
        "\"all 0s ease-in-out\"",
        "\"preserve-3d\"",
        "\"50%\"",
        "\"50%\"",
        "\"px\"",
        "\"impress-disabled\"",
        "\"impress-enabled\"",
        "\"xyz\"",
        "\"impress:init\"",
        "\"impress-root-\"",
        "\"number\"",
        "\"string\"",
        "\"impress-\"",
        "\"goto\"",
        "\"impress-\"",
        "\"impress-\"",
        "\"active\"",
        "\"impress-on-\"",
        "\"active\"",
        "\"impress-on-\"",
        "\"px\"",
        "\"ms\"",
        "\"ms\"",
        "\"ms\"",
        "\"ms\"",
        "\"prev\"",
        "\"next\"",
        "\"next\"",
        "\"prev\"",
        "\"impress-\"",
        "\"px\"",
        "\"0ms\"",
        "\"0ms\"",
        "\"0ms\"",
        "\"0ms\"",
        "\"impress-root-\"",
        "\"impress:init\"",
        "\"future\"",
        "\"impress:stepenter\"",
        "\"past\"",
        "\"future\"",
        "\"present\"",
        "\"impress:stepleave\"",
        "\"present\"",
        "\"past\"",
        "\"impress:init\"",
        "\"\"",
        "\"impress:stepenter\"",
        "\"#/\"",
        "\"hashchange\"",
        "\"impress-disabled\"",
        "\"impress-root-\"",
        "\"impress.js ERROR: Two libraries both tried to use libname: \"",
        "\"addPreInitPlugin: weight must be a positive integer\"",
        "\"impress-root-\"",
        "\"addPreStepLeavePlugin: weight must be a positive integer\"",
        "\"use strict\"",
        "\".step\"",
        "\"id\"",
        "\"impress-not-supported\"",
        "\"meta\"",
        "\"viewport\"",
        "\"impress-enabled\"",
        "\"impress-disabled\"",
        "\".active\"",
        "\"impress-on-\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\".step\"",
        "\"future\"",
        "\"past\"",
        "\"present\"",
        "\"active\"",
        "\"\"",
        "\"\"",
        "\"transform-style\"",
        "\"\"",
        "\"\"",
        "\"transform-origin\"",
        "\"\"",
        "\"\"",
        "\"transform-style\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"id\"",
        "\"id\"",
        "\"impress-supported\"",
        "\"impress-not-supported\"",
        "\"meta\"",
        "\"viewport\"",
        "\"use strict\"",
        "\"\"",
        "\"=\"",
        "\"&\"",
        "\"\"",
        "\"string\"",
        "\"w\"",
        "\"CustomEvent\"",
        "\"use strict\"",
        "\"impress-root-\"",
        "\"impress-root-\"",
        "\"xyz\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"xyz\"",
        "\"xzy\"",
        "\"yxz\"",
        "\"yzx\"",
        "\"zxy\"",
        "\"zyx\"",
        "\"xyz\"",
        "\"impress-root-\"",
        "\"use strict\"",
        "\"impress:init\"",
        "\"impress-autoplay\"",
        "\"#impress-toolbar\"",
        "\"impress:autoplay:pause\"",
        "\"paused\"",
        "\"impress:autoplay:play\"",
        "\"playing\"",
        "\"paused\"",
        "\"impress:stepenter\"",
        "\"impress:substep:enter\"",
        "\"not clicked\"",
        "\"div\"",
        "\"paused\"",
        "\"paused\"",
        "\"playing\"",
        "\"paused\"",
        "\"||\"",
        "\"&#9654;\"",
        "\"px\"",
        "\"px\"",
        "'<button id=\"impress-autoplay-playpause\" '",
        "'title=\"Autoplay\" class=\"impress-autoplay\">'",
        "\"</button>\"",
        "\"click\"",
        "\"playing\"",
        "\"paused\"",
        "\"impress:toolbar:appendChild\"",
        "\"use strict\"",
        "\"dummy\"",
        "\"Webkit Moz O ms Khtml\"",
        "\" \"",
        "\"undefined\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"block\"",
        "\"impress:autoplay:play\"",
        "\"none\"",
        "\"block\"",
        "\"impress:autoplay:pause\"",
        "\"impress:init\"",
        "\"keydown\"",
        "\"keyup\"",
        "\"impress:stepleave\"",
        "\"use strict\"",
        "\"marked\"",
        "\"markdown\"",
        "\"^\"",
        "\"mg\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\".markdown\"",
        "\"use strict\"",
        "\"impress:init\"",
        "\"input\"",
        "\"textarea\"",
        "\"select\"",
        "\"[contenteditable=true]\"",
        "\"keydown\"",
        "\"keyup\"",
        "\"impress:stepleave\"",
        "\"use strict\"",
        "\"impress:init\"",
        "\"keydown\"",
        "\"F5\"",
        "\".active\"",
        "\"impress:steprefresh\"",
        "\"Escape\"",
        "\"F5\"",
        "\".active\"",
        "\"impress:steprefresh\"",
        "\"impress:help:add\"",
        "\"F5 / ESC\"",
        "\"Fullscreen: Enter / Exit\"",
        "\"use strict\"",
        "\"impress:init\"",
        "\".step\"",
        "\" \"",
        "\" \"",
        "\"impress goto plugin: data-goto-key-list and data-goto-next-list don't match:\"",
        "\"step\"",
        "\"impress goto plugin: \"",
        "\" is not a step in this impress presentation.\"",
        "\"next\"",
        "\"next\"",
        "\"step\"",
        "\"impress goto plugin: \"",
        "\" is not a step in this impress presentation.\"",
        "\"prev\"",
        "\"prev\"",
        "\"step\"",
        "\"impress goto plugin: \"",
        "\" is not a step in this impress presentation.\"",
        "\"step\"",
        "\"impress goto plugin: \"",
        "\" is not a step in this impress presentation.\"",
        "\"use strict\"",
        "\"CustomEvent\"",
        "\"impress-help\"",
        "\"<table>\\n\"",
        "\"\\n\"",
        "\"</table>\\n\"",
        "\"impress-help\"",
        "\"block\"",
        "\"none\"",
        "\"block\"",
        "\"keyup\"",
        "\"impress:help:add\"",
        "\"object\"",
        "\"<tr><td><strong>\"",
        "\"</strong></td><td>\"",
        "\"</td></tr>\"",
        "\"impress:init\"",
        "\"impress-help\"",
        "\"block\"",
        "\"impress-help\"",
        "\"none\"",
        "\"\"",
        "\"\"",
        "\"impress:help:add\"",
        "\"H\"",
        "\"Show this help\"",
        "'use strict'",
        "'CustomEvent'",
        "'de'",
        "'noNotes'",
        "'<div class=\"noNotes\">Keine Notizen hierzu</div>'",
        "'restart'",
        "'Neustart'",
        "'clickToOpen'",
        "'Klicken um Sprecherkonsole zu öffnen'",
        "'prev'",
        "'zurück'",
        "'next'",
        "'weiter'",
        "'loading'",
        "'initalisiere'",
        "'ready'",
        "'Bereit'",
        "'moving'",
        "'in Bewegung'",
        "'useAMPM'",
        "'zh-CN'",
        "'zh-cn'",
        "'noNotes'",
        "'<div class=\"noNotes\">当前帧没有备注</div>'",
        "'restart'",
        "'重新开始'",
        "'clickToOpen'",
        "'点击以打开演讲者控制界面'",
        "'prev'",
        "'上一帧'",
        "'next'",
        "'下一帧'",
        "'loading'",
        "'加载中'",
        "'ready'",
        "'就绪'",
        "'moving'",
        "'移动中'",
        "'useAMPM'",
        "'en'",
        "'noNotes'",
        "'<div class=\"noNotes\">No notes for this step</div>'",
        "'restart'",
        "'Restart'",
        "'clickToOpen'",
        "'Click to open speaker console'",
        "'prev'",
        "'Prev'",
        "'next'",
        "'Next'",
        "'loading'",
        "'Loading'",
        "'ready'",
        "'Ready'",
        "'moving'",
        "'Moving'",
        "'useAMPM'",
        "'<!DOCTYPE html>'",
        "'<html id=\"impressconsole\"><head>'",
        "'{{cssStyle}}'",
        "'{{cssLink}}'",
        "'</head><body>'",
        "'<div id=\"console\">'",
        "'<div id=\"views\">'",
        "'<iframe id=\"slideView\" scrolling=\"no\"></iframe>'",
        "'<iframe id=\"preView\" scrolling=\"no\"></iframe>'",
        "'<div id=\"blocker\"></div>'",
        "'</div>'",
        "'<div id=\"notes\"></div>'",
        "'</div>'",
        "'<div id=\"controls\"> '",
        "'<div id=\"prev\"><a  href=\"#\" onclick=\"impress().prev(); return false;\" />'",
        "'{{prev}}</a></div>'",
        "'<div id=\"next\"><a  href=\"#\" onclick=\"impress().next(); return false;\" />'",
        "'{{next}}</a></div>'",
        "'<div id=\"clock\">--:--</div>'",
        "'<div id=\"timer\" onclick=\"timerReset()\">00m 00s</div>'",
        "'<div id=\"status\">{{loading}}</div>'",
        "'</div>'",
        "'</body></html>'",
        "'css/impressConsole.css'",
        "'css/iframe.css'",
        "'0'",
        "''",
        "'impress'",
        "''",
        "'.active'",
        "'class'",
        "'step'",
        "'blocker'",
        "'blocker'",
        "'.step'",
        "'.active'",
        "'.notes'",
        "'notes'",
        "'#/'",
        "'#'",
        "'.active'",
        "'#'",
        "'slideView'",
        "'preView'",
        "'status'",
        "'<span class=\"moving\">'",
        "'</span>'",
        "'.active'",
        "'.notes'",
        "'notes'",
        "'#/'",
        "'#'",
        "'.active'",
        "'#'",
        "'slideView'",
        "'preView'",
        "'status'",
        "'<span  class=\"ready\">'",
        "'</span>'",
        "'next'",
        "'prev'",
        "'slideView'",
        "'impress:substep:show'",
        "'slideView'",
        "'impress:substep:hide'",
        "'CustomEvent'",
        "'notes'",
        "''",
        "'AM'",
        "'PM'",
        "':'",
        "':'",
        "' '",
        "'clock'",
        "'timer'",
        "'m '",
        "'s'",
        "'slideView'",
        "'preView'",
        "'keydown'",
        "'keyup'",
        "'slideView'",
        "'preView'",
        "'impress-console'",
        "'slideView'",
        "'impress-console'",
        "'preView'",
        "'beforeend'",
        "'<link rel=\"stylesheet\" type=\"text/css\" href=\"'",
        "'\">'",
        "'beforeend'",
        "'<link rel=\"stylesheet\" type=\"text/css\" href=\"'",
        "'\">'",
        "'load'",
        "'impress-console'",
        "'slideView'",
        "'beforeend'",
        "'<link rel=\"stylesheet\" type=\"text/css\" href=\"'",
        "'\">'",
        "'load'",
        "'impress-console'",
        "'preView'",
        "'beforeend'",
        "'<link rel=\"stylesheet\" type=\"text/css\" href=\"'",
        "'\">'",
        "''",
        "'impressConsole'",
        "'div'",
        "'impress-console-button'",
        "'fixed'",
        "'rgba(255, 255, 255, 0.9)'",
        "'var x = document.getElementById(\\'impress-console-button\\');'",
        "'x.parentNode.removeChild(x);'",
        "'var r = document.getElementById(\\''",
        "'\\');'",
        "'impress(\\''",
        "'\\').lib.util.triggerEvent(r, \\'impress:console:open\\', {})'",
        "'margin: 25vh 25vw;width:50vw;height:50vh;'",
        "'<button style=\"'",
        "'\" '",
        "'onclick=\"'",
        "'\">'",
        "'</button>'",
        "''",
        "'<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"'",
        "'\">'",
        "'{{cssStyle}}'",
        "'{{cssLink}}'",
        "'Speaker Console ('",
        "')'",
        "'slideView'",
        "'preView'",
        "'views'",
        "'px'",
        "'px'",
        "'px'",
        "'px'",
        "'px'",
        "'impress:stepleave'",
        "'impress:stepenter'",
        "'impress:substep:stepleaveaborted'",
        "'impress:substep:show'",
        "'impress:substep:hide'",
        "'true'",
        "'impressConsole().init() is deprecated. '",
        "'impressConsole is now initialized automatically when you '",
        "'call impress().init().'",
        "'impress:console:open'",
        "'impress:console:registerKeyEvent'",
        "'impress:init'",
        "'impress:help:add'",
        "'P'",
        "'Presenter console'",
        "<style>\n            #impressconsole body {\n                background-color: rgb(255, 255, 255);\n                padding: 0;\n                margin: 0;\n                font-family: verdana, arial, sans-serif;\n                font-size: 2vw;\n            }\n\n            #impressconsole div#console {\n                position: absolute;\n                top: 0.5vw;\n                left: 0.5vw;\n                right: 0.5vw;\n                bottom: 3vw;\n                margin: 0;\n            }\n\n            #impressconsole div#views, #impressconsole div#notes {\n                position: absolute;\n                top: 0;\n                bottom: 0;\n            }\n\n            #impressconsole div#views {\n                left: 0;\n                right: 50vw;\n                overflow: hidden;\n            }\n\n            #impressconsole div#blocker {\n                position: absolute;\n                right: 0;\n                bottom: 0;\n            }\n\n            #impressconsole div#notes {\n                left: 50vw;\n                right: 0;\n                overflow-x: hidden;\n                overflow-y: auto;\n                padding: 0.3ex;\n                background-color: rgb(255, 255, 255);\n                border: solid 1px rgb(120, 120, 120);\n            }\n\n            #impressconsole div#notes .noNotes {\n                color: rgb(200, 200, 200);\n            }\n\n            #impressconsole div#notes p {\n                margin-top: 0;\n            }\n\n            #impressconsole iframe {\n                position: absolute;\n                margin: 0;\n                padding: 0;\n                left: 0;\n                border: solid 1px rgb(120, 120, 120);\n            }\n\n            #impressconsole iframe#slideView {\n                top: 0;\n                width: 49vw;\n                height: 49vh;\n            }\n\n            #impressconsole iframe#preView {\n                opacity: 0.7;\n                top: 50vh;\n                width: 30vw;\n                height: 30vh;\n            }\n\n            #impressconsole div#controls {\n                margin: 0;\n                position: absolute;\n                bottom: 0.25vw;\n                left: 0.5vw;\n                right: 0.5vw;\n                height: 2.5vw;\n                background-color: rgb(255, 255, 255);\n                background-color: rgba(255, 255, 255, 0.6);\n            }\n\n            #impressconsole div#prev, div#next {\n            }\n\n            #impressconsole div#prev a, #impressconsole div#next a {\n                display: block;\n                border: solid 1px rgb(70, 70, 70);\n                border-radius: 0.5vw;\n                font-size: 1.5vw;\n                padding: 0.25vw;\n                text-decoration: none;\n                background-color: rgb(220, 220, 220);\n                color: rgb(0, 0, 0);\n            }\n\n            #impressconsole div#prev a:hover, #impressconsole div#next a:hover {\n                background-color: rgb(245, 245, 245);\n            }\n\n            #impressconsole div#prev {\n                float: left;\n            }\n\n            #impressconsole div#next {\n                float: right;\n            }\n\n            #impressconsole div#status {\n                margin-left: 2em;\n                margin-right: 2em;\n                text-align: center;\n                float: right;\n            }\n\n            #impressconsole div#clock {\n                margin-left: 2em;\n                margin-right: 2em;\n                text-align: center;\n                float: left;\n            }\n\n            #impressconsole div#timer {\n                margin-left: 2em;\n                margin-right: 2em;\n                text-align: center;\n                float: left;\n            }\n\n            #impressconsole span.moving {\n                color: rgb(255, 0, 0);\n            }\n\n            #impressconsole span.ready {\n                color: rgb(0, 128, 0);\n            }\n        </style>",
        "\"use strict\"",
        "\"impress:init\"",
        "\"data-media-\"",
        "\"\"",
        "\"true\"",
        "\"impress-media-\"",
        "\"-playing\"",
        "\"impress-media-\"",
        "\"-paused\"",
        "\"impress-media-\"",
        "\"-paused\"",
        "\"impress-media-\"",
        "\"-playing\"",
        "\"impress-media-\"",
        "\"-playing\"",
        "\"impress-media-\"",
        "\"-paused\"",
        "\"video\"",
        "\"audio\"",
        "\"impress-media-\"",
        "\"-playing\"",
        "\"impress-media-\"",
        "\"-paused\"",
        "\"audio, video\"",
        "\"id\"",
        "\"id\"",
        "\"media-\"",
        "\"-\"",
        "\"node\"",
        "\"attr\"",
        "\"id\"",
        "\"play\"",
        "\"playing\"",
        "\"pause\"",
        "\"ended\"",
        "\"step\"",
        "\"impress:stepenter\"",
        "\"impress:stepleave\"",
        "\"preview\"",
        "\"preView\"",
        "\"slideView\"",
        "\"slideView\"",
        "\"audio, video\"",
        "\"autoplay\"",
        "\"audio, video\"",
        "\"autoplay\"",
        "\"autopause\"",
        "\"autostop\"",
        "\"use strict\"",
        "\".step\"",
        "\".step\"",
        "\"impress:init\"",
        "\"impress-mobile\"",
        "\"impress-mobile\"",
        "\"prev\"",
        "\"next\"",
        "\"undefined\"",
        "\"prev\"",
        "\"undefined\"",
        "\"next\"",
        "\"impress:stepenter\"",
        "\"prev\"",
        "\"next\"",
        "\"prev\"",
        "\"next\"",
        "\"undefined\"",
        "\"prev\"",
        "\"undefined\"",
        "\"next\"",
        "\"use strict\"",
        "\"impress-mouse-timeout\"",
        "\"impress-mouse-timeout\"",
        "\"impress:init\"",
        "\"mousemove\"",
        "\"click\"",
        "\"touch\"",
        "\"impress-mouse-timeout\"",
        "\"use strict\"",
        "\"impress:init\"",
        "\"keydown\"",
        "\"keyup\"",
        "\"click\"",
        "\"A\"",
        "\"A\"",
        "\"href\"",
        "\"#\"",
        "\"target is null\"",
        "\"click\"",
        "\"step\"",
        "\"active\"",
        "\"target is null\"",
        "\"impress:help:add\"",
        "\"Left &amp; Right\"",
        "\"Previous &amp; Next step\"",
        "'use strict'",
        "'CustomEvent'",
        "'div'",
        "'step-'",
        "'\\n'",
        "'...'",
        "''",
        "'<option value=\"'",
        "'\">'",
        "'</option>'",
        "'\\n'",
        "'.step'",
        "'<button id=\"impress-navigation-ui-prev\" title=\"Previous\" '",
        "'class=\"impress-navigation-ui\">&lt;</button>'",
        "'<select id=\"impress-navigation-ui-select\" title=\"Go to\" '",
        "'class=\"impress-navigation-ui\">'",
        "'\\n'",
        "'</select>'",
        "'<button id=\"impress-navigation-ui-next\" title=\"Next\" '",
        "'class=\"impress-navigation-ui\">&gt;</button>'",
        "'click'",
        "'change'",
        "'impress:steprefresh'",
        "'.step'",
        "'\\n'",
        "'click'",
        "'impress:toolbar:appendChild'",
        "'impress:toolbar:appendChild'",
        "'impress:toolbar:appendChild'",
        "'impress:navigation-ui:hideStep'",
        "'impress:init'",
        "'#impress-toolbar'",
        "\"use strict\"",
        "\".step\"",
        "\"impress:init\"",
        "\"\"",
        "\"\"",
        "\"div.impress-progressbar div\"",
        "\"div.impress-progress\"",
        "\"impress:stepleave\"",
        "\"impress:steprefresh\"",
        "\"%\"",
        "\"/\"",
        "\"use strict\"",
        "\"xyz\"",
        "\"absolute\"",
        "\"xyz\"",
        "\"data-x\"",
        "\"data-y\"",
        "\"data-z\"",
        "\"data-rel-position\"",
        "\"absolute\"",
        "\"relative\"",
        "\"xyz\"",
        "\"absolute\"",
        "\"xyz\"",
        "\"data-rotate-y\"",
        "\"data-rotate-x\"",
        "\"data-rotate-z\"",
        "\"data-rotate\"",
        "\"data-rel-x\"",
        "\"data-rel-y\"",
        "\"data-rel-z\"",
        "\"data-rel-rotate-x\"",
        "\"data-rel-rotate-y\"",
        "\"data-rel-rotate-z\"",
        "\"data-rel-rotate-order\"",
        "\"xyz\"",
        "\"impress.js rel plugin: Step \\\"\"",
        "\"\\\" is not defined \"",
        "\"*before* the current step. Referencing is limited to previously defined \"",
        "\"steps. Please check your markup. Ignoring data-rel-to attribute of \"",
        "\"this step. Have a look at the documentation for how to create relative \"",
        "\"positioning to later shown steps with the help of the goto plugin.\"",
        "\"impress.js rel plugin: \\\"\"",
        "\"\\\" is not a valid step in this \"",
        "\"impress.js presentation. Please check your markup. Ignoring data-rel-to \"",
        "\"attribute of this step.\"",
        "\"data-rel-reset\"",
        "\"xyz\"",
        "\"all\"",
        "\"xyz\"",
        "\"xyz\"",
        "\"relative\"",
        "\".step\"",
        "\"data-x\"",
        "\"data-y\"",
        "\"data-z\"",
        "\"data-rel-x\"",
        "\"data-rel-y\"",
        "\"data-rel-z\"",
        "\"data-rotate-x\"",
        "\"data-rotate-y\"",
        "\"data-rotate-z\"",
        "\"data-rotate\"",
        "\"data-rel-rotate-x\"",
        "\"data-rel-rotate-y\"",
        "\"data-rel-rotate-z\"",
        "\"data-rel-position\"",
        "\"data-rotate-order\"",
        "\"data-x\"",
        "\"data-y\"",
        "\"data-z\"",
        "\"data-rotate-x\"",
        "\"data-rotate-y\"",
        "\"data-rotate-z\"",
        "\"data-rotate-order\"",
        "\"data-rel-position\"",
        "\"data-rel-x\"",
        "\"data-rel-y\"",
        "\"data-rel-z\"",
        "\"data-rel-rotate-x\"",
        "\"data-rel-rotate-y\"",
        "\"data-rel-rotate-z\"",
        "\"impress:init\"",
        "\"x\"",
        "\"relX\"",
        "\"y\"",
        "\"relY\"",
        "\"z\"",
        "\"relZ\"",
        "\"rotate-x\"",
        "\"relRotateX\"",
        "\"rotate-y\"",
        "\"relRotateY\"",
        "\"rotate-z\"",
        "\"relRotateZ\"",
        "\"rotate-order\"",
        "\"relRotateOrder\"",
        "\"data-\"",
        "\"data-\"",
        "\"use strict\"",
        "\"impress:init\"",
        "\"resize\"",
        "\".step.active\"",
        "\"use strict\"",
        "\"impress:init\"",
        "\".step\"",
        "\".step\"",
        "\"skip\"",
        "\"next\"",
        "\"prev\"",
        "\"use strict\"",
        "\"stop\"",
        "\"next\"",
        "\"use strict\"",
        "\"CustomEvent\"",
        "\"impress:stepenter\"",
        "\"next\"",
        "\"impress:substep:stepleaveaborted\"",
        "\"next\"",
        "\"impress:substep:enter\"",
        "\"next\"",
        "\"prev\"",
        "\"impress:substep:stepleaveaborted\"",
        "\"prev\"",
        "\"impress:substep:leave\"",
        "\"prev\"",
        "\".substep\"",
        "\".substep-visible\"",
        "\"substep-active\"",
        "\"substep-visible\"",
        "\"substep-active\"",
        "\".substep\"",
        "\".substep-visible\"",
        "\"substep-active\"",
        "\"substep-active\"",
        "\"substep-active\"",
        "\"substep-visible\"",
        "\"impress:stepenter\"",
        "\".substep-visible\"",
        "\"substep-visible\"",
        "\"impress:substep:show\"",
        "\"impress:substep:hide\"",
        "\"use strict\"",
        "\"touchstart\"",
        "\"touchmove\"",
        "\"touchend\"",
        "\"#impress .step.active\"",
        "\"touchcancel\"",
        "\"#impress .step.active\"",
        "\"use strict\"",
        "\"impress-toolbar\"",
        "\"impress-toolbar-group-\"",
        "\"span\"",
        "\"impress:toolbar:appendChild\"",
        "\"impress:toolbar:insertBefore\"",
        "\"impress:toolbar:removeWidget\"",
        "\"impress:init\"",
        "\"\""
    ],
    "variables": [
        "lib",
        "pfx",
        "style",
        "prefixes",
        "memory",
        "ucProp",
        "props",
        "validateOrder",
        "validChars",
        "returnStr",
        "css",
        "key",
        "pkey",
        "translate",
        "rotate",
        "order",
        "css",
        "axes",
        "i",
        "scale",
        "computeWindowScale",
        "hScale",
        "wScale",
        "scale",
        "body",
        "impressSupported",
        "roots",
        "preInitPlugins",
        "preStepLeavePlugins",
        "defaults",
        "config",
        "empty",
        "impress",
        "stepsData",
        "activeStep",
        "currentState",
        "steps",
        "windowScale",
        "root",
        "canvas",
        "initialized",
        "lastEntered",
        "onStepEnter",
        "onStepLeave",
        "initStep",
        "data",
        "step",
        "initAllSteps",
        "buildConfig",
        "rootData",
        "init",
        "meta",
        "rootStyles",
        "getStep",
        "stepEnterTimeout",
        "step",
        "target",
        "zoomin",
        "delay",
        "targetScale",
        "prev",
        "prev",
        "next",
        "next",
        "interpolate",
        "swipe",
        "idx",
        "nextElement",
        "nextStep",
        "nextScale",
        "k",
        "interpolatedStep",
        "tear",
        "lastHash",
        "libraryFactories",
        "initLibraries",
        "lib",
        "execPreInitPlugins",
        "i",
        "thisLevel",
        "j",
        "execPreStepLeavePlugins",
        "i",
        "thisLevel",
        "j",
        "roots",
        "rootsCount",
        "startingState",
        "libraryFactory",
        "elementList",
        "eventListenerList",
        "callbackList",
        "pushElement",
        "appendChild",
        "pushEventListener",
        "addEventListener",
        "pushCallback",
        "teardown",
        "i",
        "target",
        "listener",
        "lib",
        "recordStartingState",
        "steps",
        "i",
        "el",
        "metas",
        "m",
        "resetStartingState",
        "root",
        "activeId",
        "steps",
        "i",
        "step",
        "canvas",
        "canvasHTML",
        "metas",
        "m",
        "roots",
        "libraryFactory",
        "$",
        "$$",
        "arrayify",
        "byId",
        "getElementFromHash",
        "encoded",
        "getUrlParamValue",
        "chunk",
        "value",
        "throttle",
        "timer",
        "context",
        "args",
        "arguments",
        "toNumber",
        "toNumberAdvanced",
        "ratio",
        "value",
        "config",
        "multiplier",
        "triggerEvent",
        "lib",
        "roots",
        "libraryFactory",
        "roundNumber",
        "vectorLength",
        "vectorDotProd",
        "vectorCrossProd",
        "isZeroVector",
        "tripleProduct",
        "worldUnitCoordinate",
        "makeQuaternion",
        "r",
        "t",
        "radians",
        "q",
        "quaternionToVector",
        "conjugateQuaternion",
        "leftMulQuaternion",
        "rotationToQuaternion",
        "order",
        "axes",
        "result",
        "i",
        "deg",
        "coordinate",
        "baseCoordinate",
        "rotateByQuaternion",
        "q",
        "rotateVector",
        "quaternion",
        "rotateCoordinate",
        "quaternion",
        "angleBetweenTwoVector",
        "vecLen1",
        "vecLen2",
        "cos",
        "angle",
        "angleBetweenPlaneAndVector",
        "norm",
        "coordinateToOrderedRotation",
        "axis0",
        "axis1",
        "axis2",
        "reversedOrder",
        "rotate2",
        "r2",
        "coordinate1",
        "rotate1",
        "rotate0",
        "rotation",
        "possibleRotations",
        "orders",
        "rotations",
        "i",
        "nearestAngle",
        "bestRotation",
        "bestScore",
        "bestRotation",
        "i",
        "rotation",
        "score",
        "coordinateToRotation",
        "rotations",
        "combineRotations",
        "coordinate",
        "worldUnitCoordinate",
        "i",
        "rotate",
        "translateRelative",
        "result",
        "lib",
        "autoplayDefault",
        "currentStepTimeout",
        "api",
        "timeoutHandle",
        "root",
        "util",
        "data",
        "autoplay",
        "toolbar",
        "reloadTimeout",
        "step",
        "setAutoplayTimeout",
        "status",
        "toolbarButton",
        "makeDomElement",
        "tempDiv",
        "toggleStatus",
        "getButtonText",
        "setButtonText",
        "buttonWidth",
        "buttonHeight",
        "addToolbarButton",
        "html",
        "canvas",
        "blackedOut",
        "util",
        "root",
        "api",
        "css",
        "key",
        "pkey",
        "pfx",
        "style",
        "prefixes",
        "memory",
        "ucProp",
        "props",
        "removeBlackout",
        "blackout",
        "gc",
        "SLIDE_SEPARATOR",
        "getMarkdownParser",
        "dialect",
        "getMarkdownSlides",
        "text",
        "m",
        "convertMarkdowns",
        "parseMarkdown",
        "id",
        "origTitle",
        "slides",
        "slideElems",
        "j",
        "newElem",
        "i",
        "preInit",
        "root",
        "api",
        "gc",
        "selectors",
        "elements",
        "i",
        "e",
        "elem",
        "api",
        "root",
        "gc",
        "util",
        "lib",
        "isNumber",
        "data",
        "steps",
        "keylist",
        "nextlist",
        "index",
        "next",
        "newTarget",
        "newTarget",
        "newTarget",
        "newTarget",
        "rows",
        "timeoutHandle",
        "triggerEvent",
        "renderHelpDiv",
        "helpDiv",
        "html",
        "toggleHelp",
        "helpDiv",
        "rowIndex",
        "helpDiv",
        "helpDiv",
        "api",
        "triggerEvent",
        "lang",
        "preViewDefaultFactor",
        "preViewMinimumFactor",
        "preViewGap",
        "consoleTemplate",
        "cssFileOldDefault",
        "cssFile",
        "cssFileIframeOldDefault",
        "cssFileIframe",
        "allConsoles",
        "zeroPad",
        "impressConsole",
        "root",
        "consoleWindow",
        "nextStep",
        "classes",
        "nextElement",
        "onStepLeave",
        "newNotes",
        "baseURL",
        "slideSrc",
        "preSrc",
        "slideView",
        "preView",
        "onStepEnter",
        "newNotes",
        "notes",
        "baseURL",
        "slideSrc",
        "preSrc",
        "slideView",
        "preView",
        "onSubstep",
        "onSubstepShow",
        "slideView",
        "onSubstepHide",
        "slideView",
        "triggerEventInView",
        "spaceHandler",
        "notes",
        "timerReset",
        "clockTick",
        "now",
        "hours",
        "minutes",
        "seconds",
        "ampm",
        "clockStr",
        "registerKeyEvent",
        "consoleOnLoad",
        "slideView",
        "preView",
        "open",
        "message",
        "clickStr",
        "styleStr",
        "cssLink",
        "resize",
        "slideView",
        "preView",
        "ratio",
        "views",
        "delta",
        "slideViewWidth",
        "slideViewHeight",
        "preViewTop",
        "preViewWidth",
        "preViewHeight",
        "_init",
        "init",
        "cssStyleStr",
        "root",
        "api",
        "gc",
        "attributeTracker",
        "enhanceMediaNodes",
        "enhanceMedia",
        "removeMediaClasses",
        "onStepenterDetectImpressConsole",
        "onStepenter",
        "onStepleave",
        "onPlay",
        "onPause",
        "onEnded",
        "getMediaAttribute",
        "teardown",
        "el",
        "i",
        "attrName",
        "attrValue",
        "i",
        "node",
        "types",
        "i",
        "id",
        "media",
        "mediaElement",
        "steps",
        "stepElement",
        "i",
        "stepElement",
        "media",
        "mediaElement",
        "i",
        "onConsole",
        "autoplay",
        "stepElement",
        "media",
        "i",
        "mediaElement",
        "autoplay",
        "autopause",
        "autostop",
        "getNextStep",
        "steps",
        "i",
        "getPrevStep",
        "steps",
        "i",
        "body",
        "api",
        "prev",
        "next",
        "oldprev",
        "oldnext",
        "prev",
        "next",
        "timeout",
        "timeoutHandle",
        "hide",
        "show",
        "api",
        "gc",
        "api",
        "gc",
        "util",
        "isNavigationEvent",
        "target",
        "href",
        "target",
        "toolbar",
        "api",
        "root",
        "steps",
        "hideSteps",
        "prev",
        "select",
        "next",
        "triggerEvent",
        "makeDomElement",
        "tempDiv",
        "getStepTitle",
        "MAX_TITLE_LEN",
        "selectOptionsHtml",
        "options",
        "i",
        "addNavigationControls",
        "gc",
        "prevHtml",
        "selectHtml",
        "nextHtml",
        "root",
        "stepids",
        "getSteps",
        "steps",
        "i",
        "gc",
        "progressbar",
        "progress",
        "slideNumber",
        "width",
        "api",
        "startingState",
        "toNumber",
        "toNumberAdvanced",
        "computeRelativePositions",
        "data",
        "prev",
        "prevPosition",
        "inheritRotation",
        "step",
        "relative",
        "rel",
        "steps",
        "prev",
        "i",
        "el",
        "step",
        "root",
        "steps",
        "step",
        "attrs",
        "i",
        "api",
        "util",
        "getNextStep",
        "steps",
        "i",
        "getPrevStep",
        "steps",
        "i",
        "skip",
        "stop",
        "triggerEvent",
        "activeStep",
        "substep",
        "step",
        "el",
        "showSubstepIfAny",
        "substeps",
        "sorted",
        "visible",
        "sortSubsteps",
        "substeps",
        "sorted",
        "orderA",
        "orderB",
        "showSubstep",
        "i",
        "el",
        "currentSubstepOrder",
        "j",
        "hideSubstepIfAny",
        "substeps",
        "visible",
        "sorted",
        "hideSubstep",
        "current",
        "i",
        "el",
        "step",
        "visible",
        "i",
        "startX",
        "lastX",
        "lastDX",
        "threshold",
        "x",
        "diff",
        "totalDiff",
        "toolbar",
        "groups",
        "getGroupElement",
        "id",
        "nextIndex",
        "getNextGroupIndex",
        "i",
        "group",
        "api"
    ],
    "comments": [
        "This file was automatically generated from files in src/ directory.",
        "! Licensed under MIT License - http://github.com/impress/impress.js",
        "You are one of those who like to know how things work inside?",
        "Let me show you the cogs that make impress.js run...",
        "HELPER FUNCTIONS",
        "`pfx` is a function that takes a standard CSS property name as a parameter",
        "and returns it's prefixed version valid for current browser it runs in.",
        "The code is heavily inspired by Modernizr http://www.modernizr.com/",
        "Each of x,y,z can be used only once.",
        "`css` function applies the styles given in `props` object to the element",
        "given as `el`. It runs all property names through `pfx` function to make",
        "sure proper prefixed version of the property is used.",
        "`translate` builds a translate transform string for given data.",
        "`rotate` builds a rotate transform string for given data.",
        "By default the rotations are in X Y Z order that can be reverted by passing `true`",
        "as second parameter.",
        "`scale` builds a scale transform string for given data.",
        "`computeWindowScale` counts the scale factor between window size and size",
        "defined for the presentation in the config.",
        "CHECK SUPPORT",
        "Browser should support CSS 3D transtorms",
        "And `classList` and `dataset` APIs",
        "We can't be sure that `classList` is supported",
        "GLOBALS AND DEFAULTS",
        "This is where the root elements of all impress.js instances will be kept.",
        "Yes, this means you can have more than one instance on a page, but I'm not",
        "sure if it makes any sense in practice ;)",
        "Some default config values.",
        "Configuration options",
        "It's just an empty function ... and a useless comment.",
        "IMPRESS.JS API",
        "And that's where interesting things will start to happen.",
        "It's the core `impress` function that returns the impress.js API",
        "for a presentation based on the element with given id (\"impress\"",
        "by default).",
        "If impress.js is not supported by the browser return a dummy API",
        "it may not be a perfect solution but we return early and avoid",
        "running code that may use features not implemented in the browser.",
        "If given root is already initialized just return the API",
        "The gc library depends on being initialized before we do any changes to DOM.",
        "Data of all presentation steps",
        "Element of currently active step",
        "Current state (position, rotation and scale) of the presentation",
        "Array of step elements",
        "Scale factor of the browser window",
        "Root presentation elements",
        "STEP EVENTS",
        "",
        "There are currently two step events triggered by impress.js",
        "`impress:stepenter` is triggered when the step is shown on the",
        "screen (the transition from the previous one is finished) and",
        "`impress:stepleave` is triggered when the step is left (the",
        "transition to next step just starts).",
        "Reference to last entered step",
        "`onStepEnter` is called whenever the step element is entered",
        "but the event is triggered only if the step is different than",
        "last entered step.",
        "We sometimes call `goto`, and therefore `onStepEnter`, just to redraw a step, such as",
        "after screen resize. In this case - more precisely, in any case - we trigger a",
        "`impress:steprefresh` event.",
        "`onStepLeave` is called whenever the currentStep element is left",
        "but the event is triggered only if the currentStep is the same as",
        "lastEntered step.",
        "`initStep` initializes given step element by reading data from its",
        "data attributes and setting correct styles.",
        "Initialize all steps.",
        "Read the data-* attributes, store in internal stepsData, and render with CSS.",
        "Build configuration from root and defaults",
        "`init` API function that initializes (and runs) the presentation.",
        "Initialize the configuration object, so it can be used by pre-init plugins.",
        "First we set up the viewport for mobile devices.",
        "For some reason iPad goes nuts when it is not done properly.",
        "Wrap steps with \"canvas\" element",
        "Set initial styles",
        "Get and init steps",
        "Set a default initial state of the canvas",
        "`getStep` is a helper function that returns a step element defined by parameter.",
        "If a number is given, step with index given by the number is returned, if a string",
        "is given step element with such id is returned, if DOM element is given it is returned",
        "if it is a correct step element.",
        "Used to reset timeout for `impress:stepenter` event",
        "`goto` API function that moves to step given as `el` parameter (by index, id or element).",
        "`duration` optionally given as second parameter, is the transition duration in css.",
        "`reason` is the string \"next\", \"prev\" or \"goto\" (default) and will be made available to",
        "preStepLeave plugins.",
        "`origEvent` may contain event that caused the call to goto, such as a key press event",
        "Re-execute initAllSteps for each transition. This allows to edit step attributes",
        "dynamically, such as change their coordinates, or even remove or add steps, and have",
        "that change apply when goto() is called.",
        "Sometimes it's possible to trigger focus on first link with some keyboard action.",
        "Browser in such a case tries to scroll the page to make this element visible",
        "(even that body overflow is set to hidden) and it breaks our careful positioning.",
        "",
        "So, as a lousy (and lazy) workaround we will make the page scroll back to the top",
        "whenever slide is selected",
        "",
        "If you are reading this and know any better way to handle it, I'll be glad to hear",
        "about it!",
        "If we are in fact moving to another step, start with executing the registered",
        "preStepLeave plugins.",
        "PreStepLeave plugins are allowed to abort the transition altogether, by",
        "returning false.",
        "see stop and substep plugins for an example of doing just that",
        "Plugins are allowed to change the detail values",
        "Compute target state of the canvas based on given step",
        "Check if the transition is zooming in or not.",
        "",
        "This information is used to alter the transition style:",
        "when we are zooming in - we start with move and rotate transition",
        "and the scaling is delayed, but when we are zooming out we start",
        "with scaling down and move and rotation are delayed.",
        "If the same step is re-selected, force computing window scaling,",
        "because it is likely to be caused by window resize",
        "Trigger leave of currently active element (if it's not the same step again)",
        "Now we alter transforms of `root` and `canvas` to trigger transitions.",
        "",
        "And here is why there are two elements: `root` and `canvas` - they are",
        "being animated separately:",
        "`root` is used for scaling and `canvas` for translate and rotations.",
        "Transitions on them are triggered with different delays (to make",
        "visually nice and \"natural\" looking transitions), so we need to know",
        "that both of them are finished.",
        "To keep the perspective look similar for different scales",
        "we need to \"scale\" the perspective, too",
        "For IE 11 support we must specify perspective independent",
        "of transform.",
        "Here is a tricky part...",
        "",
        "If there is no change in scale or no change in rotation and translation, it means",
        "there was actually no delay - because there was no transition on `root` or `canvas`",
        "elements. We want to trigger `impress:stepenter` event in the correct moment, so",
        "here we compare the current and target values to check if delay should be taken into",
        "account.",
        "",
        "I know that this `if` statement looks scary, but it's pretty simple when you know",
        "what is going on - it's simply comparing all the values.",
        "Store current state",
        "And here is where we trigger `impress:stepenter` event.",
        "We simply set up a timeout to fire it taking transition duration (and possible delay)",
        "into account.",
        "",
        "I really wanted to make it in more elegant way. The `transitionend` event seemed to",
        "be the best way to do it, but the fact that I'm using transitions on two separate",
        "elements and that the `transitionend` event is only triggered when there was a",
        "transition (change in the values) caused some bugs and made the code really",
        "complicated, cause I had to handle all the conditions separately. And it still",
        "needed a `setTimeout` fallback for the situations when there is no transition at all.",
        "So I decided that I'd rather make the code simpler than use shiny new",
        "`transitionend`.",
        "",
        "If you want learn something interesting and see how it was done with `transitionend`",
        "go back to version 0.5.2 of impress.js:",
        "http://github.com/bartaz/impress.js/blob/0.5.2/js/impress.js",
        "`prev` API function goes to previous step (in document order)",
        "`event` is optional, may contain the event that caused the need to call prev()",
        "`next` API function goes to next step (in document order)",
        "`event` is optional, may contain the event that caused the need to call next()",
        "Swipe for touch devices by @and3rson.",
        "Below we extend the api to control the animation between the currently",
        "active step and a presumed next/prev step. See touch plugin for",
        "an example of using this api.",
        "Helper function",
        "Animate a swipe.",
        "",
        "Pct is a value between -1.0 and +1.0, designating the current length",
        "of the swipe.",
        "",
        "If pct is negative, swipe towards the next() step, if positive,",
        "towards the prev() step.",
        "",
        "Note that pre-stepleave plugins such as goto can mess with what is a",
        "next() and prev() step, so we need to trigger the pre-stepleave event",
        "here, even if a swipe doesn't guarantee that the transition will",
        "actually happen.",
        "",
        "Calling swipe(), with any value of pct, won't in itself cause a",
        "transition to happen, this is just to animate the swipe. Once the",
        "transition is committed - such as at a touchend event - caller is",
        "responsible for also calling prev()/next() as appropriate.",
        "",
        "Note: For now, this function is made available to be used by the swipe plugin (which",
        "is the UI counterpart to this). It is a semi-internal API and intentionally not",
        "documented in DOCUMENTATION.md.",
        "Prepare & execute the preStepLeave event",
        "Will be ignored within swipe animation, but just in case a plugin wants to read this,",
        "humor them",
        "Needed by jshint",
        "No move",
        "If a preStepLeave plugin wants to abort the transition, don't animate a swipe",
        "For stop, this is probably ok. For substep, the plugin it self might want to do",
        "some animation, but that's not the current implementation.",
        "If the same step is re-selected, force computing window scaling,",
        "Unfortunately there's a discontinuity if rotation order changes. Nothing I",
        "can do about it?",
        "To keep the perspective look similar for different scales",
        "we need to 'scale' the perspective, too",
        "Teardown impress",
        "Resets the DOM to the state it was before impress().init() was called.",
        "(If you called impress(rootId).init() for multiple different rootId's, then you must",
        "also call tear() once for each of them.)",
        "Adding some useful classes to step elements.",
        "",
        "All the steps that have not been shown yet are given `future` class.",
        "When the step is entered the `future` class is removed and the `present`",
        "class is given. When the step is left `present` class is replaced with",
        "`past` class.",
        "",
        "So every step element is always in one of three possible states:",
        "`future`, `present` and `past`.",
        "",
        "There classes can be used in CSS to style different types of steps.",
        "For example the `present` class can be used to trigger some custom",
        "animations when step is shown.",
        "STEP CLASSES",
        "Adding hash change support.",
        "Last hash detected",
        "`#/step-id` is used instead of `#step-id` to prevent default browser",
        "scrolling to element in hash.",
        "",
        "And it has to be set after animation finishes, because in Chrome it",
        "makes transition laggy.",
        "BUG: http://code.google.com/p/chromium/issues/detail?id=62820",
        "When the step is entered hash in the location is updated",
        "(just few lines above from here), so the hash change is",
        "triggered and we would call `goto` again on the same element.",
        "",
        "To avoid this we store last entered hash and compare.",
        "START",
        "by selecting step defined in url or first step of the presentation",
        "Store and return API for given impress.js root element",
        "Flag that can be used in JS to check if browser have passed the support test",
        "ADD and INIT LIBRARIES",
        "Library factories are defined in src/lib/*.js, and register themselves by calling",
        "impress.addLibraryFactory(libraryFactoryObject). They're stored here, and used to augment",
        "the API with library functions when client calls impress(rootId).",
        "See src/lib/README.md for clearer example.",
        "(Advanced usage: For different values of rootId, a different instance of the libaries are",
        "generated, in case they need to hold different state for different root elements.)",
        "Call each library factory, and return the lib object that is added to the api.",
        "jshint ignore:line",
        "`addPreInitPlugin` allows plugins to register a function that should",
        "be run (synchronously) at the beginning of init, before",
        "impress().init() itself executes.",
        "Called at beginning of init, to execute all pre-init plugins.",
        "jshint ignore:line",
        "`addPreStepLeavePlugin` allows plugins to register a function that should",
        "be run (synchronously) at the beginning of goto()",
        "jshint ignore:line",
        "Called at beginning of goto(), to execute all preStepLeave plugins.",
        "jshint ignore:line",
        "If a plugin returns false, the stepleave event (and related transition)",
        "is aborted",
        "THAT'S ALL FOLKS!",
        "",
        "Thanks for reading it all.",
        "Or thanks for scrolling down and reading the last part.",
        "",
        "I've learnt a lot when building impress.js and I hope this code and comments",
        "will help somebody learn at least some part of it.",
        "Per root global variables (instance variables?)",
        "LIBRARY FUNCTIONS",
        "Definitions of the library functions we return as an object at the end",
        "`pushElement` adds a DOM element to the gc stack",
        "`appendChild` is a convenience wrapper that combines DOM appendChild with gc.pushElement",
        "`pushEventListener` adds an event listener to the gc stack",
        "`addEventListener` combines DOM addEventListener with gc.pushEventListener",
        "`pushCallback` If the above utilities are not enough, plugins can add their own callback",
        "function to do arbitrary things.",
        "`teardown` will",
        "- execute all callbacks in LIFO order",
        "- call `removeChild` on all DOM elements in LIFO order",
        "- call `removeEventListener` on all event listeners in LIFO order",
        "The goal of a teardown is to return to the same state that the DOM was before",
        "`impress().init()` was called.",
        "Execute the callbacks in LIFO order",
        "Needed by jshint",
        "Let impress core know about the existence of this library",
        "CORE INIT",
        "The library factory (gc(rootId)) is called at the beginning of impress(rootId).init()",
        "For the purposes of teardown(), we can use this as an opportunity to save the state",
        "of a few things in the DOM in their virgin state, before impress().init() did anything.",
        "Note: These could also be recorded by the code in impress.js core as these values",
        "are changed, but in an effort to not deviate too much from upstream, I'm adding",
        "them here rather than the core itself.",
        "Record whether the steps have an id or not",
        "In the rare case of multiple roots, the following is changed on first init() and",
        "reset at last tear().",
        "It is customary for authors to set body.class=\"impress-not-supported\" as a starting",
        "value, which can then be removed by impress().init(). But it is not required.",
        "Remember whether it was there or not.",
        "If there's a <meta name=\"viewport\"> element, its contents will be overwritten by init",
        "CORE TEARDOWN",
        "Reset body element",
        "Remove style values from the root and step elements",
        "Note: We remove the ones set by impress.js core. Otoh, we didn't preserve any original",
        "values. A more sophisticated implementation could keep track of original values and then",
        "reset those.",
        "Reset id of steps (\"step-1\" id's are auto generated)",
        "Move step div elements away from canvas, then delete canvas",
        "Note: There's an implicit assumption here that the canvas div is the only child element",
        "of the root div. If there would be something else, it's gonna be lost.",
        "In the rare case that more than one impress root elements were initialized, these",
        "are only reset when all are uninitialized.",
        "We need to remove or reset the meta element inserted by impress.js",
        "`$` returns first element for given CSS `selector` in the `context` of",
        "the given element or whole document.",
        "`$$` return an array of elements for given CSS `selector` in the `context` of",
        "the given element or whole document.",
        "`arrayify` takes an array-like object and turns it into real Array",
        "to make all the Array.prototype goodness available.",
        "`byId` returns element with given `id` - you probably have guessed that ;)",
        "`getElementFromHash` returns an element located by id from hash part of",
        "window location.",
        "Get id from url # by removing `#` or `#/` from the beginning,",
        "so both \"fallback\" `#slide-id` and \"enhanced\" `#/slide-id` will work",
        "`getUrlParamValue` return a given URL parameter value if it exists",
        "`undefined` if it doesn't exist",
        "Throttling function calls, by Remy Sharp",
        "http://remysharp.com/2010/07/21/throttling-function-calls/",
        "`toNumber` takes a value given as `numeric` parameter and tries to turn",
        "it into a number. If it is not possible it returns 0 (or other value",
        "given as `fallback`).",
        "`triggerEvent` builds a custom DOM event with given `eventName` and `detail` data",
        "and triggers it on element given as `el`.",
        "Let impress core know about the existence of this library",
        "Singleton library variables",
        "All CSS rotation is based on the rotated coordinate",
        "So we need to calculate the rotated coordinate first",
        "The r2 is the reverse of rotate for axis2",
        "The coordinate1 is the coordinate before rotate of axis2",
        "Calculate the rotation for axis1",
        "Calculate the rotation for axis0",
        "No rotation",
        "Find out the base coordinate",
        "One by one apply rotations in order",
        "Calculate one rotation from unit coordinate to rotated",
        "coordinate.  Because there're multiple possibles,",
        "select the one nearest to the base",
        "Let impress core know about the existence of this library",
        "global clearTimeout, setTimeout, document",
        "On impress:init, check whether there is a default setting, as well as",
        "handle step-1.",
        "Getting API from event data instead of global impress().init().",
        "You don't even need to know what is the id of the root element",
        "or anything. `impress:init` event data gives you everything you",
        "need to control the presentation that was just initialized.",
        "Element attributes starting with \"data-\", become available under",
        "element.dataset. In addition hyphenized words become camelCased.",
        "Note that right after impress:init event, also impress:stepenter is",
        "triggered for the first slide, so that's where code flow continues.",
        "If default autoplay time was defined in the presentation root, or",
        "in this step, set timeout.",
        "Pause",
        "Play",
        "Keep button size the same even if label content is changing",
        "jshint ignore:line",
        "jshint ignore:line",
        "jshint ignore:line",
        "global document",
        "While waiting for a shared library of utilities, copying these 2 from main impress.js",
        "Wait for impress.js to be initialized",
        "Accept b or . -> . is sent by presentation remote controllers",
        "Accept b or . -> . is sent by presentation remote controllers",
        "global markdown, marked, hljs, mermaid, impress",
        "Using marked",
        "Using builtin markdown engine",
        "Using first not blank line to detect leading whitespaces.",
        "can't properly handle the mixing of space and tabs",
        "Detect markdown engine",
        "Query all .markdown elements and translate to HTML",
        "Register the plugin to be called in pre-init phase",
        "Note: Markdown.js should run early/first, because it creates new div elements.",
        "So add this with a lower-than-default weight.",
        "global document",
        "global document",
        "Wait for impress.js to be initialized",
        "116 (F5) is sent by presentation remote controllers",
        "27 (Escape) is sent by presentation remote controllers",
        "global window, document, impress",
        "Data-goto-key-list=\"\" & data-goto-next-list=\"\" //////////////////////////////////////////",
        "Don't return, allow the other categories to work despite this error",
        "If the new next element has its own transitionDuration, we're responsible",
        "for setting that on the event as well",
        "Data-goto-next=\"\" & data-goto-prev=\"\" ///////////////////////////////////////////////////",
        "Handle event.target data-goto-next attribute",
        "If the new next element has its own transitionDuration, we're responsible for setting",
        "that on the event as well",
        "jshint ignore:line",
        "Handle event.target data-goto-prev attribute",
        "jshint ignore:line",
        "Data-goto=\"\" ///////////////////////////////////////////////////////////////////////////",
        "Handle event.target data-goto attribute",
        "jshint ignore:line",
        "Register the plugin to be called in pre-stepleave phase",
        "global window, document",
        "\"h\" || \"?\"",
        "API",
        "Other plugins can add help texts, typically if they support an action on a keypress.",
        "The idea is for the sender of the event to supply a unique row index, used for sorting.",
        "But just in case two plugins would ever use the same row index, we wrap each row into",
        "its own array. If there are more than one entry for the same index, they are shown in",
        "first come, first serve ordering.",
        "At start, show the help for 7 seconds.",
        "Regster callback to empty the help div on teardown",
        "Use our own API to register the help text for \"h\"",
        "This file contains so much HTML, that we will just respectfully disagree about js",
        "jshint quotmark:single",
        "global navigator, top, setInterval, clearInterval, document, window",
        "TODO: Move this to src/lib/util.js",
        "Create Language object depending on browsers language setting",
        "jshint ignore:line",
        "jshint ignore:line",
        "Settings to set iframe in speaker console",
        "This is the default template for the speaker console window",
        "Order is important: If user provides a cssFile, those will win, because they're later",
        "Default css location",
        "jshint ignore:line",
        "Css for styling iframs on the console",
        "jshint ignore:line",
        "All console windows, so that you can call impressConsole() repeatedly.",
        "Zero padding helper function:",
        "The console object",
        "Root presentation elements",
        "Return to parents as long as there is no next sibling",
        "First go into deep",
        "Go to next sibling or through parents until there is a next sibling",
        "No next element. Pick the first",
        "Sync the notes to the step",
        "Set notes to next steps notes.",
        "Set the views",
        "Setting when already set causes glitches in Firefox, so check first:",
        "Sync the previews to the step",
        "We do everything here again, because if you stopped the previos step to",
        "early, the onstepleave trigger is not called for that step, so",
        "we need this to sync things.",
        "Set the views",
        "Setting when already set causes glitches in Firefox, so check first:",
        "Sync substeps",
        "Note: Unfortunately Chrome does not allow createEvent on file:// URLs, so this won't",
        "work. This does work on Firefox, and should work if viewing the presentation on a",
        "http:// URL on Chrome.",
        "Show a clock",
        "Clock",
        "Timer",
        "Nudge the slide windows after load, or they will scrolled wrong on Firefox.",
        "Prevent default keydown action when one of supported key is pressed",
        "Trigger impress action on keyup",
        "Firefox:",
        "Chrome:",
        "If opening failes this may be because the browser prevents this from",
        "not (or less) interactive JavaScript...",
        "... so I add a button to klick.",
        "workaround on firefox",
        "This sets the window location to the main window location, so css can be loaded:",
        "Write the template:",
        "CssStyleStr is lots of inline <style></style> defined at the end of this file",
        "We set this flag so we can detect it later, to prevent infinite popups.",
        "Set the onload function:",
        "Add clock tick",
        "Keyboard navigation handlers",
        "33: pg up, 37: left, 38: up",
        "34: pg down, 39: right, 40: down",
        "32: space",
        "82: R",
        "Cleanup",
        "I don't know why onunload doesn't work here.",
        "It will need a little nudge on Firefox, but only after loading:",
        "Catch any window resize to pass size on",
        "Get ratio of presentation",
        "Get size available for views",
        "SlideView may have a border or some padding:",
        "asuming same border width on both direktions",
        "Set views",
        "Shrink preview to fit into space available",
        "If preview is not high enough forget ratios!",
        "Set the calculated into styles",
        "You can also specify the css in the presentation root div:",
        "<div id=\"impress\" data-console-css=...\" data-console-css-iframe=\"...\">",
        "Register the event",
        "When the window closes, clean up after ourselves.",
        "Open speaker console when they press 'p'",
        "Btw, you can also launch console automatically:",
        "<div id=\"impress\" data-console-autolaunch=\"true\">",
        "New API for impress.js plugins is based on using events",
        "Return the object",
        "This initializes impressConsole automatically when initializing impress itself",
        "Note: impressConsole wants the id string, not the DOM element directly",
        "Add 'P' to the help popup",
        "Returns a string to be used inline as a css <style> element in the console window.",
        "Apologies for length, but hiding it here at the end to keep it away from rest of the code.",
        "global window, document",
        "Function names",
        "Look for attributes in all nodes",
        "First test, if the attribute exists, because some browsers may return",
        "an empty string for non-existing attributes - specs are not clear at that point",
        "Attribute found, return their parsed boolean value, empty strings count as true",
        "to enable empty value booleans (common in html5 but not allowed in well formed",
        "xml).",
        "No attribute found at current node, proceed with next round",
        "Last resort: no attribute found - return undefined to distiguish from false",
        "Set an id to identify each media node - used e.g. for cross references by",
        "the consoleMedia plugin",
        "Autoplay when (maybe inherited) autoplay setting is true,",
        "but only if not on preview of the next step in impressConsole",
        "If both autostop and autopause are undefined, set it to the value of autoplay",
        "global document, navigator",
        "Detect mobile browsers & add CSS class as appropriate.",
        "Unset all this on teardown",
        "Add prev and next classes to the siblings of the newly entered active step element",
        "Remove prev and next classes from their current step elements",
        "Note: As an exception we break namespacing rules, as these are useful general purpose",
        "classes. (Naming rules would require us to use css classes mobile-next and mobile-prev,",
        "based on plugin name.)",
        "global window, document",
        "Mouse is now inactive",
        "Mouse is now active",
        "Then set new timeout after which it is considered inactive again",
        "Set first timeout",
        "Unset all this on teardown",
        "global document",
        "Wait for impress.js to be initialized",
        "Getting API from event data.",
        "So you don't event need to know what is the id of the root element",
        "or anything. `impress:init` event data gives you everything you",
        "need to control the presentation that was just initialized.",
        "Supported keys are:",
        "[space] - quite common in presentation software to move forward",
        "[up] [right] / [down] [left] - again common and natural addition,",
        "[pgdown] / [pgup] - often triggered by remote controllers,",
        "[tab] - this one is quite controversial, but the reason it ended up on",
        "this list is quite an interesting story... Remember that strange part",
        "in the impress.js code where window is scrolled to 0,0 on every presentation",
        "step, because sometimes browser scrolls viewport because of the focused element?",
        "Well, the [tab] key by default navigates around focusable elements, so clicking",
        "it very often caused scrolling to focused element and breaking impress.js",
        "positioning. I didn't want to just prevent this default action, so I used [tab]",
        "as another way to moving to next step... And yes, I know that for the sake of",
        "consistency I should add [shift+tab] as opposite action...",
        "Don't trigger navigation for example when user returns to browser window with ALT+TAB",
        "In the case of TAB, we force step navigation always, overriding the browser",
        "navigation between input elements, buttons and links.",
        "With the sole exception of TAB, we also ignore keys pressed if shift is down.",
        "KEYBOARD NAVIGATION HANDLERS",
        "Prevent default keydown action when one of supported key is pressed.",
        "Trigger impress action (next or prev) on keyup.",
        "Shift+tab",
        "Pg up",
        "Left",
        "Up",
        "Tab",
        "Space",
        "Pg down",
        "Right",
        "Down",
        "Delegated handler for clicking on the links to presentation steps",
        "Event delegation with \"bubbling\"",
        "check if event target (or any of its parents is a link)",
        "If it's a link to presentation step, target this step",
        "For example, when clicking on the button to launch speaker console, the button",
        "is immediately deleted from the DOM. In this case target is a DOM element when",
        "we get it, but turns out to be null if you try to actually do anything with it.",
        "Delegated handler for clicking on step elements",
        "Find closest step element that is not active",
        "For example, when clicking on the button to launch speaker console, the button",
        "is immediately deleted from the DOM. In this case target is a DOM element when",
        "we get it, but turns out to be null if you try to actually do anything with it.",
        "Add a line to the help popup",
        "This file contains so much HTML, that we will just respectfully disagree about js",
        "jshint quotmark:single",
        "global document",
        "Max length for title.",
        "Line longer than this will be cutted.",
        "Neither title nor id is defined",
        "Omit steps that are listed as hidden from select widget",
        "jshint ignore:line",
        "As impress.js core now allows to dynamically edit the steps, including adding,",
        "removing, and reordering steps, we need to requery and redraw the select list on",
        "every stepenter event.",
        "Make sure the list always shows the step we're actually on, even if it wasn't",
        "selected from the list",
        "API for not listing given step in the select widget.",
        "For example, if you set class=\"skip\" on some element, you may not want it to show up in the",
        "list either. Otoh we cannot assume that, or anything else, so steps that user wants omitted",
        "must be specifically added with this API call.",
        "Wait for impress.js to be initialized",
        "global document",
        "Get stepids from the steps under impress root",
        "Wait for impress.js to be initialized",
        "global document, window",
        "For the first step, inherit these defaults",
        "Test, if it is a previous step that already has some assigned position data",
        "For compatibility with the old behavior, doesn't inherit otherthings,",
        "just like a reset.",
        "For data-rel-position=\"relative\", inherit all",
        "We also inherit relatives from relTo slide",
        "Step not found",
        "While ``data-rel-reset=\"relative\"`` or just ``data-rel-reset``,",
        "``data-rel-x/y/z`` and ``data-rel-rotate-x/y/z`` will have default value of 0,",
        "instead of inherit from previous slide.",
        "",
        "If ``data-rel-reset=\"all\"``, ``data-rotate-*`` are not inherited from previous slide too.",
        "So ``data-rel-reset=\"all\" data-rotate-x=\"90\"`` means",
        "``data-rotate-x=\"90\" data-rotate-y=\"0\" data-rotate-z=\"0\"``, we doesn't need to",
        "bother clearing all unneeded attributes.",
        "Don't inherit from prev, just use the relative setting for current element",
        "The final relatives maybe or maybe not the same with orignal data-rel-*",
        "Calculate relatives based on previous slide",
        "Convert rotations to values that works with step.rotate",
        "Relative position is ignored/zero if absolute is given.",
        "Note that this also has the effect of resetting any inherited relative values.",
        "Apply relative position (if non-zero)",
        "Register the plugin to be called in pre-init phase",
        "Register teardown callback to reset the data.x, .y, .z values.",
        "Reset x/y/z in cases where this plugin has changed it.",
        "global document, window",
        "Wait for impress.js to be initialized",
        "Rescale presentation when window is resized",
        "Force going to active step again, to trigger rescaling",
        "global document, window",
        "Go to the next next step instead",
        "Recursively call this plugin again, until there's a step not to skip",
        "Go to the previous previous step instead",
        "If the new next element has its own transitionDuration, we're responsible for setting",
        "that on the event as well",
        "Register the plugin to be called in pre-stepleave phase",
        "The weight makes this plugin run early. This is a good thing, because this plugin calls",
        "itself recursively.",
        "global document, window",
        "Register the plugin to be called in pre-stepleave phase",
        "The weight makes this plugin run fairly early.",
        "global document, window",
        "Copied from core impress.js. Good candidate for moving to src/lib/util.js.",
        "Needed by jshint",
        "Send a message to others, that we aborted a stepleave event.",
        "Autoplay uses this for reloading itself",
        "Returning false aborts the stepleave event",
        "Loop over all substeps that are not yet visible and set",
        "those of currentSubstepOrder to visible and active",
        "Stop if the substepOrder is greater",
        "Stop after one substep as default order",
        "Continue if there is another substep with the same substepOrder",
        "Register the plugin to be called in pre-stepleave phase.",
        "The weight makes this plugin run before other preStepLeave plugins.",
        "When entering a step, in particular when re-entering, make sure that all substeps are hidden",
        "at first",
        "API for others to reveal/hide next substep ////////////////////////////////////////////////",
        "global document, window",
        "Touch handler to detect swiping left and right based on window size.",
        "If the difference in X change is bigger than 1/20 of the screen width,",
        "we simply call an appropriate API function to complete the transition.",
        "To be used in touchend",
        "No movement - move (back) to the current slide",
        "Move (back) to the current slide",
        "global document",
        "API",
        "Other plugins can add and remove buttons by sending them as events.",
        "In return, toolbar plugin will trigger events when button was added.",
        "If toolbar"
    ],
    "docstrings": [
        "* impress.js\n *\n * impress.js is a presentation tool based on the power of CSS3 transforms and transitions\n * in modern browsers and inspired by the idea behind prezi.com.\n *\n *\n * Copyright 2011-2012 Bartek Szopka (@bartaz), 2016-2023 Henrik Ingo (@henrikingo)\n * and 70+ other contributors\n *\n * Released under the MIT License.\n *\n * ------------------------------------------------\n *  author:  Bartek Szopka, Henrik Ingo\n *  version: 2.0.0\n *  url:     http://impress.js.org\n *  source:  http://github.com/impress/impress.js/",
        "* Garbage collection utility\n *\n * This library allows plugins to add elements and event listeners they add to the DOM. The user\n * can call `impress().lib.gc.teardown()` to cause all of them to be removed from DOM, so that\n * the document is in the state it was before calling `impress().init()`.\n *\n * In addition to just adding elements and event listeners to the garbage collector, plugins\n * can also register callback functions to do arbitrary cleanup upon teardown.\n *\n * Henrik Ingo (c) 2016\n * MIT License",
        "* Common utility functions\n *\n * Copyright 2011-2012 Bartek Szopka (@bartaz)\n * Henrik Ingo (c) 2016\n * MIT License",
        "* Extends toNumber() to correctly compute also relative-to-screen-size values 5w and 5h.\n         *\n         * Returns the computed value in pixels with w/h postfix removed.",
        "* Helper functions for rotation.\n *\n * Tommy Tam (c) 2021\n * MIT License",
        "* Round the number to 2 decimals, it's enough for use",
        "* Get the length/norm of a vector.\n         *\n         * https://en.wikipedia.org/wiki/Norm_(mathematics)",
        "* Dot product of two vectors.\n         *\n         * https://en.wikipedia.org/wiki/Dot_product",
        "* Cross product of two vectors.\n         *\n         * https://en.wikipedia.org/wiki/Cross_product",
        "* Determine wheter a vector is a zero vector",
        "* Scalar triple product of three vectors.\n         *\n         * It can be used to determine the handness of vectors.\n         *\n         * https://en.wikipedia.org/wiki/Triple_product#Scalar_triple_product",
        "* The world/absolute unit coordinates.\n         *\n         * This coordinate is used by browser to position objects.\n         * It will not be affected by object rotations.\n         * All relative positions will finally be converted to this\n         * coordinate to be used.",
        "* Make quaternion from rotation axis and angle.\n         *\n         * q = [ cos(½θ), sin(½θ) axis ]\n         *\n         * If the angle is zero, returns the corresponded quaternion\n         * of axis.\n         *\n         * If the angle is not zero, returns the rotating quaternion\n         * which corresponds to rotation about the axis, by the angle θ.\n         *\n         * https://en.wikipedia.org/wiki/Quaternion\n         * https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation",
        "* Extract vector from quaternion",
        "* Returns the conjugate quaternion of a quaternion\n         *\n         * https://en.wikipedia.org/wiki/Quaternion#Conjugation,_the_norm,_and_reciprocal",
        "* Left multiple two quaternion.\n         *\n         * Is's used to combine two rotating quaternion into one.",
        "* Convert a rotation into a quaternion",
        "* Rotate a vector by a quaternion.",
        "* Rotate a vector by rotaion sequence.",
        "* Given a rotation, return the rotationed coordinate",
        "* Return the angle between two vector.\n         *\n         * The axis is used to determine the rotation direction.",
        "* Return the angle between a vector and a plane.\n         *\n         * The plane is determined by an axis and a vector on the plane.",
        "* Calculated a order specified rotation sequence to\n         * transform from the world coordinate to required coordinate.",
        "* Returns the possible rotations from unit coordinate\n         * to specified coordinate.",
        "* Calculate a degree which in range (-180, 180] of baseDeg",
        "* Given a base rotation and multiple rotations, return the best one.\n         *\n         * The best one is the one has least rotate from base.",
        "* Given a coordinate, return the best rotation to achieve it.\n         *\n         * The baseRotate is used to select the near rotation from it.",
        "* Apply a relative rotation to the base rotation.\n         *\n         * Calculate the coordinate after the rotation on each axis,\n         * and finally find out a one step rotation has the effect\n         * of two rotation.\n         *\n         * If there're multiple way to accomplish, select the one\n         * that is nearest to the base.\n         *\n         * Return one rotation has the same effect.",
        "* Autoplay plugin - Automatically advance slideshow after N seconds\n *\n * Copyright 2016 Henrik Ingo, henrik.ingo@avoinelama.fi\n * Released under the MIT license.",
        "* Set timeout after which we move to next() step.",
        "* Toolbar plugin integration ******************************************",
        "* Blackout plugin\n *\n * Press b or . to hide all slides, and b or . again to show them.\n * Also navigating to a different slide will show them again (impress:stepleave).\n *\n * Copyright 2014 @Strikeskids\n * Released under the MIT license.",
        "* Extras Plugin\n *\n * This plugin performs initialization (like calling mermaid.initialize())\n * for the extras/ plugins if they are loaded into a presentation.\n *\n * See README.md for details.\n *\n * Copyright 2016 Henrik Ingo (@henrikingo)\n * Released under the MIT license.",
        "* Form support\n *\n * Functionality to better support use of input, textarea, button... elements in a presentation.\n *\n * This plugin does two things:\n *\n * Set stopPropagation on any element that might take text input. This allows users to type, for\n * example, the letter 'P' into a form field, without causing the presenter console to spring up.\n *\n * On impress:stepleave, de-focus any potentially active\n * element. This is to prevent the focus from being left in a form element that is no longer visible\n * in the window, and user therefore typing garbage into the form.\n *\n * TODO: Currently it is not possible to use TAB to navigate between form elements. Impress.js, and\n * in particular the navigation plugin, unfortunately must fully take control of the tab key,\n * otherwise a user could cause the browser to scroll to a link or button that's not on the current\n * step. However, it could be possible to allow tab navigation between form elements, as long as\n * they are on the active step. This is a topic for further study.\n *\n * Copyright 2016 Henrik Ingo\n * MIT License",
        "* Fullscreen plugin\n *\n * Press F5 to enter fullscreen and ESC to exit fullscreen mode.\n *\n * Copyright 2019 @giflw\n * Released under the MIT license.",
        "* Goto Plugin\n *\n * The goto plugin is a pre-stepleave plugin. It is executed before impress:stepleave,\n * and will alter the destination where to transition next.\n *\n * Example:\n *\n *         <!-- When leaving this step, go directly to \"step-5\" -->\n *         <div class=\"step\" data-goto=\"step-5\">\n *\n *         <!-- When leaving this step with next(), go directly to \"step-5\", instead of next step.\n *              If moving backwards to previous step - e.g. prev() instead of next() -\n *              then go to \"step-1\". -->\n *         <div class=\"step\" data-goto-next=\"step-5\" data-goto-prev=\"step-1\">\n *\n *        <!-- data-goto-key-list and data-goto-next-list allow you to build advanced non-linear\n *             navigation. -->\n *        <div class=\"step\"\n *             data-goto-key-list=\"ArrowUp ArrowDown ArrowRight ArrowLeft\"\n *             data-goto-next-list=\"step-4 step-3 step-2 step-5\">\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values for a table\n * of what strings to use for each key.\n *\n * Copyright 2016-2017 Henrik Ingo (@henrikingo)\n * Released under the MIT license.",
        "* Help popup plugin\n *\n * Example:\n *\n *     <!-- Show a help popup at start, or if user presses \"H\" -->\n *     <div id=\"impress-help\"></div>\n *\n * For developers:\n *\n * Typical use for this plugin, is for plugins that support some keypress, to add a line\n * to the help popup produced by this plugin. For example \"P: Presenter console\".\n *\n * Copyright 2016 Henrik Ingo (@henrikingo)\n * Released under the MIT license.",
        "* Add a help text to the help popup.\n     *\n     * :param: e.detail.command  Example: \"H\"\n     * :param: e.detail.text     Example: \"Show this help.\"\n     * :param: e.detail.row      Row index from 0 to 9 where to place this help text. Example: 0",
        "* Adds a presenter console to impress.js\n *\n * MIT Licensed, see license.txt.\n *\n * Copyright 2012, 2013, 2015 impress-console contributors (see README.txt)\n *\n * version: 1.3-dev\n *",
        "* Register a key code to an event handler\n         *\n         * :param: event.detail.keyCodes    List of key codes\n         * :param: event.detail.handler     A function registered as the event handler\n         * :param: event.detail.window      The console window to register the keycode in",
        "* Media Plugin\n *\n * This plugin will do the following things:\n *\n *  - Add a special class when playing (body.impress-media-video-playing\n *    and body.impress-media-video-playing) and pausing media (body.impress-media-video-paused\n *    and body.impress-media-audio-paused) (removing them when ending).\n *    This can be useful for example for darkening the background or fading out other elements\n *    while a video is playing.\n *    Only media at the current step are taken into account. All classes are removed when leaving\n *    a step.\n *\n *  - Introduce the following new data attributes:\n *\n *    - data-media-autoplay=\"true\": Autostart media when entering its step.\n *    - data-media-autostop=\"true\": Stop media (= pause and reset to start), when leaving its\n *      step.\n *    - data-media-autopause=\"true\": Pause media but keep current time when leaving its step.\n *\n *    When these attributes are added to a step they are inherited by all media on this step.\n *    Of course this setting can be overwritten by adding different attributes to inidvidual\n *    media.\n *\n *    The same rule applies when this attributes is added to the root element. Settings can be\n *    overwritten for individual steps and media.\n *\n *    Examples:\n *    - data-media-autoplay=\"true\" data-media-autostop=\"true\": start media on enter, stop on\n *      leave, restart from beginning when re-entering the step.\n *\n *    - data-media-autoplay=\"true\" data-media-autopause=\"true\": start media on enter, pause on\n *      leave, resume on re-enter\n *\n *    - data-media-autoplay=\"true\" data-media-autostop=\"true\" data-media-autopause=\"true\": start\n *      media on enter, stop on leave (stop overwrites pause).\n *\n *    - data-media-autoplay=\"true\" data-media-autopause=\"false\": let media start automatically\n *      when entering a step and let it play when leaving the step.\n *\n *    - <div id=\"impress\" data-media-autoplay=\"true\"> ... <div class=\"step\"\n *      data-media-autoplay=\"false\">\n *      All media is startet automatically on all steps except the one that has the\n *      data-media-autoplay=\"false\" attribute.\n *\n *  - Pro tip: Use <audio onended=\"impress().next()\"> or <video onended=\"impress().next()\"> to\n *    proceed to the next step automatically, when the end of the media is reached.\n *\n *\n * Copyright 2018 Holger Teichert (@complanar)\n * Released under the MIT license.",
        "* Mobile devices support\n *\n * Allow presentation creators to hide all but 3 slides, to save resources, particularly on mobile\n * devices, using classes body.impress-mobile, .step.prev, .step.active and .step.next.\n *\n * Note: This plugin does not take into account possible redirections done with skip, goto etc\n * plugins. Basically it wouldn't work as intended in such cases, but the active step will at least\n * be correct.\n *\n * Adapted to a plugin from a submission by @Kzeni:\n * https://github.com/impress/impress.js/issues/333",
        "* Mouse timeout plugin\n *\n * After 3 seconds of mouse inactivity, add the css class\n * `body.impress-mouse-timeout`. On `mousemove`, `click` or `touch`, remove the\n * class.\n *\n * The use case for this plugin is to use CSS to hide elements from the screen\n * and only make them visible when the mouse is moved. Examples where this\n * might be used are: the toolbar from the toolbar plugin, and the mouse cursor\n * itself.\n *\n * Example CSS:\n *\n *     body.impress-mouse-timeout {\n *         cursor: none;\n *     }\n *     body.impress-mouse-timeout div#impress-toolbar {\n *         display: none;\n *     }\n *\n *\n * Copyright 2016 Henrik Ingo (@henrikingo)\n * Released under the MIT license.",
        "* Navigation events plugin\n *\n * As you can see this part is separate from the impress.js core code.\n * It's because these navigation actions only need what impress.js provides with\n * its simple API.\n *\n * This plugin is what we call an _init plugin_. It's a simple kind of\n * impress.js plugin. When loaded, it starts listening to the `impress:init`\n * event. That event listener initializes the plugin functionality - in this\n * case we listen to some keypress and mouse events. The only dependencies on\n * core impress.js functionality is the `impress:init` method, as well as using\n * the public api `next(), prev(),` etc when keys are pressed.\n *\n * Copyright 2011-2012 Bartek Szopka (@bartaz)\n * Released under the MIT license.\n * ------------------------------------------------\n *  author:  Bartek Szopka\n *  version: 0.5.3\n *  url:     http://bartaz.github.com/impress.js/\n *  source:  http://github.com/bartaz/impress.js/\n *",
        "* Navigation UI plugin\n *\n * This plugin provides UI elements \"back\", \"forward\" and a list to select\n * a specific slide number.\n *\n * The navigation controls are added to the toolbar plugin via DOM events. User must enable the\n * toolbar in a presentation to have them visible.\n *\n * Copyright 2016 Henrik Ingo (@henrikingo)\n * Released under the MIT license.",
        "* Relative Positioning Plugin\n *\n * This plugin provides support for defining the coordinates of a step relative\n * to the previous step. This is often more convenient when creating presentations,\n * since as you add, remove or move steps, you may not need to edit the positions\n * as much as is the case with the absolute coordinates supported by impress.js\n * core.\n *\n * Example:\n *\n *         <!-- Position step 1000 px to the right and 500 px up from the previous step. -->\n *         <div class=\"step\" data-rel-x=\"1000\" data-rel-y=\"500\">\n *\n * Following html attributes are supported for step elements:\n *\n *     data-rel-x\n *     data-rel-y\n *     data-rel-z\n *\n * These values are also inherited from the previous step. This makes it easy to\n * create a boring presentation where each slide shifts for example 1000px down\n * from the previous.\n *\n * In addition to plain numbers, which are pixel values, it is also possible to\n * define relative positions as a multiple of screen height and width, using\n * a unit of \"h\" and \"w\", respectively, appended to the number.\n *\n * Example:\n *\n *        <div class=\"step\" data-rel-x=\"1.5w\" data-rel-y=\"1.5h\">\n *\n * This plugin is a *pre-init plugin*. It is called synchronously from impress.js\n * core at the beginning of `impress().init()`. This allows it to process its own\n * data attributes first, and possibly alter the data-x, data-y and data-z attributes\n * that will then be processed by `impress().init()`.\n *\n * (Another name for this kind of plugin might be called a *filter plugin*, but\n * *pre-init plugin* is more generic, as a plugin might do whatever it wants in\n * the pre-init stage.)\n *\n * Copyright 2016 Henrik Ingo (@henrikingo)\n * Released under the MIT license.",
        "* Resize plugin\n *\n * Rescale the presentation after a window resize.\n *\n * Copyright 2011-2012 Bartek Szopka (@bartaz)\n * Released under the MIT license.\n * ------------------------------------------------\n *  author:  Bartek Szopka\n *  version: 0.5.3\n *  url:     http://bartaz.github.com/impress.js/\n *  source:  http://github.com/bartaz/impress.js/\n *",
        "* Skip Plugin\n *\n * Example:\n *\n *    <!-- This slide is disabled in presentations, when moving with next()\n *         and prev() commands, but you can still move directly to it, for\n *         example with a url (anything using goto()). -->\n *         <div class=\"step skip\">\n *\n * Copyright 2016 Henrik Ingo (@henrikingo)\n * Released under the MIT license.",
        "* Stop Plugin\n *\n * Example:\n *\n *        <!-- Stop at this slide.\n *             (For example, when used on the last slide, this prevents the\n *             presentation from wrapping back to the beginning.) -->\n *        <div class=\"step stop\">\n *\n * Copyright 2016 Henrik Ingo (@henrikingo)\n * Released under the MIT license.",
        "* Substep Plugin\n *\n * Copyright 2017 Henrik Ingo (@henrikingo)\n * Released under the MIT license.",
        "* Support for swipe and tap on touch devices\n *\n * This plugin implements navigation for plugin devices, via swiping left/right,\n * or tapping on the left/right edges of the screen.\n *\n *\n *\n * Copyright 2015: Andrew Dunai (@and3rson)\n * Modified to a plugin, 2016: Henrik Ingo (@henrikingo)\n *\n * MIT License",
        "* Toolbar plugin\n *\n * This plugin provides a generic graphical toolbar. Other plugins that\n * want to expose a button or other widget, can add those to this toolbar.\n *\n * Using a single consolidated toolbar for all GUI widgets makes it easier\n * to position and style the toolbar rather than having to do that for lots\n * of different divs.\n *\n *\n * *** For presentation authors: *****************************************\n *\n * To add/activate the toolbar in your presentation, add this div:\n *\n *     <div id=\"impress-toolbar\"></div>\n *\n * Styling the toolbar is left to presentation author. Here's an example CSS:\n *\n *    .impress-enabled div#impress-toolbar {\n *        position: fixed;\n *        right: 1px;\n *        bottom: 1px;\n *        opacity: 0.6;\n *    }\n *    .impress-enabled div#impress-toolbar > span {\n *        margin-right: 10px;\n *    }\n *\n * The [mouse-timeout](../mouse-timeout/README.md) plugin can be leveraged to hide\n * the toolbar from sight, and only make it visible when mouse is moved.\n *\n *    body.impress-mouse-timeout div#impress-toolbar {\n *        display: none;\n *    }\n *\n *\n * *** For plugin authors **********************************************\n *\n * To add a button to the toolbar, trigger the `impress:toolbar:appendChild`\n * or `impress:toolbar:insertBefore` events as appropriate. The detail object\n * should contain following parameters:\n *\n *    { group : 1,                       // integer. Widgets with the same group are grouped inside\n *                                       // the same <span> element.\n *      html : \"<button>Click</button>\", // The html to add.\n *      callback : \"mycallback\",         // Toolbar plugin will trigger event\n *                                       // `impress:toolbar:added:mycallback` when done.\n *      before: element }                // The reference element for an insertBefore() call.\n *\n * You should also listen to the `impress:toolbar:added:mycallback` event. At\n * this point you can find the new widget in the DOM, and for example add an\n * event listener to it.\n *\n * You are free to use any integer for the group. It's ok to leave gaps. It's\n * ok to co-locate with widgets for another plugin, if you think they belong\n * together.\n *\n * See navigation-ui for an example.\n *\n * Copyright 2016 Henrik Ingo (@henrikingo)\n * Released under the MIT license.",
        "* Get the span element that is a child of toolbar, identified by index.\n     *\n     * If span element doesn't exist yet, it is created.\n     *\n     * Note: Because of Run-to-completion, this is not a race condition.\n     * https://developer.mozilla.org/en/docs/Web/JavaScript/EventLoop#Run-to-completion\n     *\n     * :param: index   Method will return the element <span id=\"impress-toolbar-group-{index}\">",
        "* Get the span element from groups[] that is immediately after given index.\n     *\n     * This can be used to find the reference node for an insertBefore() call.\n     * If no element exists at a larger index, returns undefined. (In this case,\n     * you'd use appendChild() instead.)\n     *\n     * Note that index needn't itself exist in groups[].",
        "* Append a widget inside toolbar span element identified by given group index.\n         *\n         * :param: e.detail.group    integer specifying the span element where widget will be placed\n         * :param: e.detail.element  a dom element to add to the toolbar",
        "* Add a widget to toolbar using insertBefore() DOM method.\n         *\n         * :param: e.detail.before   the reference dom element, before which new element is added\n         * :param: e.detail.element  a dom element to add to the toolbar",
        "* Remove the widget in e.detail.remove."
    ],
    "functions": [
        "enterFullscreen",
        "exitFullscreen",
        "updateProgressbar"
    ],
    "classes": []
}