{
    "identifiers": [
        "k8s",
        "k8s",
        "Models",
        "Collections",
        "Generic",
        "Runtime",
        "Serialization",
        "Text",
        "Json",
        "Text",
        "Json",
        "Nodes",
        "Text",
        "Json",
        "Serialization",
        "KubernetesCRDModelGen",
        "Models",
        "network",
        "azure",
        "upbound",
        "io",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecForProviderPrivateDnsResolverIdRefPolicy",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "IDictionary",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecForProviderPrivateDnsResolverIdSelectorPolicy",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecForProviderSubnetIdRefPolicy",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "IDictionary",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecForProviderSubnetIdSelectorPolicy",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecForProviderPrivateDnsResolverIdRef",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecForProviderPrivateDnsResolverIdSelector",
        "JsonPropertyName",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecForProviderSubnetIdRef",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecForProviderSubnetIdSelector",
        "JsonPropertyName",
        "IDictionary",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecInitProviderSubnetIdRefPolicy",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "IDictionary",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecInitProviderSubnetIdSelectorPolicy",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecInitProviderSubnetIdRef",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecInitProviderSubnetIdSelector",
        "JsonPropertyName",
        "IDictionary",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecProviderConfigRefPolicy",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecPublishConnectionDetailsToConfigRefPolicy",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "IDictionary",
        "JsonPropertyName",
        "IDictionary",
        "JsonPropertyName",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecPublishConnectionDetailsToConfigRef",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecPublishConnectionDetailsToMetadata",
        "JsonPropertyName",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecInitProvider",
        "JsonPropertyName",
        "IList",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecProviderConfigRef",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecPublishConnectionDetailsTo",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecWriteConnectionSecretToRef",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "JsonPropertyName",
        "JsonPropertyName",
        "JsonPropertyName",
        "IDictionary",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "JsonPropertyName",
        "JsonPropertyName",
        "JsonPropertyName",
        "JsonPropertyName",
        "JsonPropertyName",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointStatusAtProvider",
        "JsonPropertyName",
        "IList",
        "V1beta1PrivateDNSResolverOutboundEndpointStatusConditions",
        "JsonPropertyName",
        "CodeDom",
        "Compiler",
        "GeneratedCode",
        "Diagnostics",
        "CodeAnalysis",
        "ExcludeFromCodeCoverage",
        "KubernetesEntity",
        "Group",
        "KubeGroup",
        "Kind",
        "KubeKind",
        "ApiVersion",
        "KubeApiVersion",
        "PluralName",
        "KubePluralName",
        "IKubernetesObject",
        "V1ObjectMeta",
        "ISpec",
        "V1beta1PrivateDNSResolverOutboundEndpointSpec",
        "IStatus",
        "V1beta1PrivateDNSResolverOutboundEndpointStatus",
        "JsonPropertyName",
        "JsonPropertyName",
        "JsonPropertyName",
        "JsonPropertyName",
        "JsonPropertyName",
        "V1beta1PrivateDNSResolverOutboundEndpointStatus"
    ],
    "literals": [
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"resolution\"",
        "\"resolve\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"name\"",
        "\"policy\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"resolution\"",
        "\"resolve\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"matchControllerRef\"",
        "\"matchLabels\"",
        "\"policy\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"resolution\"",
        "\"resolve\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"name\"",
        "\"policy\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"resolution\"",
        "\"resolve\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"matchControllerRef\"",
        "\"matchLabels\"",
        "\"policy\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"location\"",
        "\"privateDnsResolverId\"",
        "\"privateDnsResolverIdRef\"",
        "\"privateDnsResolverIdSelector\"",
        "\"subnetId\"",
        "\"subnetIdRef\"",
        "\"subnetIdSelector\"",
        "\"tags\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"resolution\"",
        "\"resolve\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"name\"",
        "\"policy\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"resolution\"",
        "\"resolve\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"matchControllerRef\"",
        "\"matchLabels\"",
        "\"policy\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"location\"",
        "\"subnetId\"",
        "\"subnetIdRef\"",
        "\"subnetIdSelector\"",
        "\"tags\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"resolution\"",
        "\"resolve\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"name\"",
        "\"policy\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"resolution\"",
        "\"resolve\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"name\"",
        "\"policy\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"annotations\"",
        "\"labels\"",
        "\"type\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"configRef\"",
        "\"metadata\"",
        "\"name\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"name\"",
        "\"namespace\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"deletionPolicy\"",
        "\"forProvider\"",
        "\"initProvider\"",
        "\"managementPolicies\"",
        "\"providerConfigRef\"",
        "\"publishConnectionDetailsTo\"",
        "\"writeConnectionSecretToRef\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"id\"",
        "\"location\"",
        "\"privateDnsResolverId\"",
        "\"subnetId\"",
        "\"tags\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"lastTransitionTime\"",
        "\"message\"",
        "\"observedGeneration\"",
        "\"reason\"",
        "\"status\"",
        "\"type\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"atProvider\"",
        "\"conditions\"",
        "\"observedGeneration\"",
        "\"KubernetesCRDModelGen.Tool\"",
        "\"1.0.0.0\"",
        "\"v1beta1\"",
        "\"PrivateDNSResolverOutboundEndpoint\"",
        "\"network.azure.upbound.io\"",
        "\"privatednsresolveroutboundendpoints\"",
        "\"apiVersion\"",
        "\"kind\"",
        "\"metadata\"",
        "\"spec\"",
        "\"status\""
    ],
    "variables": [
        "Resolution",
        "Resolve",
        "Name",
        "Policy",
        "Resolution",
        "Resolve",
        "MatchControllerRef",
        "MatchLabels",
        "Policy",
        "Resolution",
        "Resolve",
        "Name",
        "Policy",
        "Resolution",
        "Resolve",
        "MatchControllerRef",
        "MatchLabels",
        "Policy",
        "Location",
        "PrivateDnsResolverId",
        "PrivateDnsResolverIdRef",
        "PrivateDnsResolverIdSelector",
        "SubnetId",
        "SubnetIdRef",
        "SubnetIdSelector",
        "Tags",
        "Resolution",
        "Resolve",
        "Name",
        "Policy",
        "Resolution",
        "Resolve",
        "MatchControllerRef",
        "MatchLabels",
        "Policy",
        "Location",
        "SubnetId",
        "SubnetIdRef",
        "SubnetIdSelector",
        "Tags",
        "Resolution",
        "Resolve",
        "Name",
        "Policy",
        "Resolution",
        "Resolve",
        "Name",
        "Policy",
        "Annotations",
        "Labels",
        "Type",
        "ConfigRef",
        "Metadata",
        "Name",
        "Name",
        "Namespace",
        "DeletionPolicy",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecForProvider",
        "ForProvider",
        "InitProvider",
        "ManagementPolicies",
        "ProviderConfigRef",
        "PublishConnectionDetailsTo",
        "WriteConnectionSecretToRef",
        "Id",
        "Location",
        "PrivateDnsResolverId",
        "SubnetId",
        "Tags",
        "LastTransitionTime",
        "Message",
        "ObservedGeneration",
        "Reason",
        "Status",
        "Type",
        "AtProvider",
        "Conditions",
        "ObservedGeneration",
        "KubeApiVersion",
        "KubeKind",
        "KubeGroup",
        "KubePluralName",
        "ApiVersion",
        "Kind",
        "V1ObjectMeta",
        "Metadata",
        "V1beta1PrivateDNSResolverOutboundEndpointSpec",
        "Spec",
        "Status"
    ],
    "comments": [],
    "docstrings": [
        "<summary>Policies for referencing.</summary>",
        "<summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>",
        "<summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>",
        "<summary>Reference to a PrivateDNSResolver in network to populate privateDnsResolverId.</summary>",
        "<summary>Name of the referenced object.</summary>",
        "<summary>Policies for referencing.</summary>",
        "<summary>Policies for selection.</summary>",
        "<summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>",
        "<summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>",
        "<summary>Selector for a PrivateDNSResolver in network to populate privateDnsResolverId.</summary>",
        "<summary>MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.</summary>",
        "<summary>MatchLabels ensures an object with matching labels is selected.</summary>",
        "<summary>Policies for selection.</summary>",
        "<summary>Policies for referencing.</summary>",
        "<summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>",
        "<summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>",
        "<summary>Reference to a Subnet in network to populate subnetId.</summary>",
        "<summary>Name of the referenced object.</summary>",
        "<summary>Policies for referencing.</summary>",
        "<summary>Policies for selection.</summary>",
        "<summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>",
        "<summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>",
        "<summary>Selector for a Subnet in network to populate subnetId.</summary>",
        "<summary>MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.</summary>",
        "<summary>MatchLabels ensures an object with matching labels is selected.</summary>",
        "<summary>Policies for selection.</summary>",
        "<summary></summary>",
        "<summary>Specifies the Azure Region where the Private DNS Resolver Outbound Endpoint should exist. Changing this forces a new Private DNS Resolver Outbound Endpoint to be created.</summary>",
        "<summary>Specifies the ID of the Private DNS Resolver Outbound Endpoint. Changing this forces a new Private DNS Resolver Outbound Endpoint to be created.</summary>",
        "<summary>Reference to a PrivateDNSResolver in network to populate privateDnsResolverId.</summary>",
        "<summary>Selector for a PrivateDNSResolver in network to populate privateDnsResolverId.</summary>",
        "<summary>The ID of the Subnet that is linked to the Private DNS Resolver Outbound Endpoint. Changing this forces a new resource to be created.</summary>",
        "<summary>Reference to a Subnet in network to populate subnetId.</summary>",
        "<summary>Selector for a Subnet in network to populate subnetId.</summary>",
        "<summary>A mapping of tags which should be assigned to the Private DNS Resolver Outbound Endpoint.</summary>",
        "<summary>Policies for referencing.</summary>",
        "<summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>",
        "<summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>",
        "<summary>Reference to a Subnet in network to populate subnetId.</summary>",
        "<summary>Name of the referenced object.</summary>",
        "<summary>Policies for referencing.</summary>",
        "<summary>Policies for selection.</summary>",
        "<summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>",
        "<summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>",
        "<summary>Selector for a Subnet in network to populate subnetId.</summary>",
        "<summary>MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.</summary>",
        "<summary>MatchLabels ensures an object with matching labels is selected.</summary>",
        "<summary>Policies for selection.</summary>",
        "<summary>THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.</summary>",
        "<summary>Specifies the Azure Region where the Private DNS Resolver Outbound Endpoint should exist. Changing this forces a new Private DNS Resolver Outbound Endpoint to be created.</summary>",
        "<summary>The ID of the Subnet that is linked to the Private DNS Resolver Outbound Endpoint. Changing this forces a new resource to be created.</summary>",
        "<summary>Reference to a Subnet in network to populate subnetId.</summary>",
        "<summary>Selector for a Subnet in network to populate subnetId.</summary>",
        "<summary>A mapping of tags which should be assigned to the Private DNS Resolver Outbound Endpoint.</summary>",
        "<summary>Policies for referencing.</summary>",
        "<summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>",
        "<summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>",
        "<summary>ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.</summary>",
        "<summary>Name of the referenced object.</summary>",
        "<summary>Policies for referencing.</summary>",
        "<summary>Policies for referencing.</summary>",
        "<summary>Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.</summary>",
        "<summary>Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.</summary>",
        "<summary>SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.</summary>",
        "<summary>Name of the referenced object.</summary>",
        "<summary>Policies for referencing.</summary>",
        "<summary>Metadata is the metadata for connection secret.</summary>",
        "<summary>Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.</summary>",
        "<summary>Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.</summary>",
        "<summary>Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.</summary>",
        "<summary>PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.</summary>",
        "<summary>SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.</summary>",
        "<summary>Metadata is the metadata for connection secret.</summary>",
        "<summary>Name is the name of the connection secret.</summary>",
        "<summary>WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.</summary>",
        "<summary>Name of the secret.</summary>",
        "<summary>Namespace of the secret.</summary>",
        "<summary>PrivateDNSResolverOutboundEndpointSpec defines the desired state of PrivateDNSResolverOutboundEndpoint</summary>",
        "<summary>DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223</summary>",
        "<summary></summary>",
        "<summary>THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.</summary>",
        "<summary>THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md</summary>",
        "<summary>ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.</summary>",
        "<summary>PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.</summary>",
        "<summary>WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.</summary>",
        "<summary></summary>",
        "<summary>The ID of the Private DNS Resolver Outbound Endpoint.</summary>",
        "<summary>Specifies the Azure Region where the Private DNS Resolver Outbound Endpoint should exist. Changing this forces a new Private DNS Resolver Outbound Endpoint to be created.</summary>",
        "<summary>Specifies the ID of the Private DNS Resolver Outbound Endpoint. Changing this forces a new Private DNS Resolver Outbound Endpoint to be created.</summary>",
        "<summary>The ID of the Subnet that is linked to the Private DNS Resolver Outbound Endpoint. Changing this forces a new resource to be created.</summary>",
        "<summary>A mapping of tags which should be assigned to the Private DNS Resolver Outbound Endpoint.</summary>",
        "<summary>A Condition that may apply to a resource.</summary>",
        "<summary>LastTransitionTime is the last time this condition transitioned from one status to another.</summary>",
        "<summary>A Message containing details about this condition's last transition from one status to another, if any.</summary>",
        "<summary>ObservedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.</summary>",
        "<summary>A Reason for this condition's last transition from one status to another.</summary>",
        "<summary>Status of this condition; is it currently True, False, or Unknown?</summary>",
        "<summary>Type of this condition. At most one of each condition type may apply to a resource at any point in time.</summary>",
        "<summary>PrivateDNSResolverOutboundEndpointStatus defines the observed state of PrivateDNSResolverOutboundEndpoint.</summary>",
        "<summary></summary>",
        "<summary>Conditions of the resource.</summary>",
        "<summary>ObservedGeneration is the latest metadata.generation which resulted in either a ready state, or stalled due to error it can not recover from without human intervention.</summary>",
        "<summary>PrivateDNSResolverOutboundEndpoint is the Schema for the PrivateDNSResolverOutboundEndpoints API. Manages a Private DNS Resolver Outbound Endpoint.</summary>",
        "<summary></summary>",
        "<summary></summary>",
        "<summary></summary>",
        "<summary>PrivateDNSResolverOutboundEndpointSpec defines the desired state of PrivateDNSResolverOutboundEndpoint</summary>",
        "<summary>PrivateDNSResolverOutboundEndpointStatus defines the observed state of PrivateDNSResolverOutboundEndpoint.</summary>"
    ],
    "functions": [],
    "classes": [
        "V1beta1PrivateDNSResolverOutboundEndpointSpecForProviderPrivateDnsResolverIdRefPolicy",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecForProviderPrivateDnsResolverIdRef",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecForProviderPrivateDnsResolverIdSelectorPolicy",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecForProviderPrivateDnsResolverIdSelector",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecForProviderSubnetIdRefPolicy",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecForProviderSubnetIdRef",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecForProviderSubnetIdSelectorPolicy",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecForProviderSubnetIdSelector",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecForProvider",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecInitProviderSubnetIdRefPolicy",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecInitProviderSubnetIdRef",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecInitProviderSubnetIdSelectorPolicy",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecInitProviderSubnetIdSelector",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecInitProvider",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecProviderConfigRefPolicy",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecProviderConfigRef",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecPublishConnectionDetailsToConfigRefPolicy",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecPublishConnectionDetailsToConfigRef",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecPublishConnectionDetailsToMetadata",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecPublishConnectionDetailsTo",
        "V1beta1PrivateDNSResolverOutboundEndpointSpecWriteConnectionSecretToRef",
        "V1beta1PrivateDNSResolverOutboundEndpointSpec",
        "V1beta1PrivateDNSResolverOutboundEndpointStatusAtProvider",
        "V1beta1PrivateDNSResolverOutboundEndpointStatusConditions",
        "V1beta1PrivateDNSResolverOutboundEndpointStatus",
        "V1beta1PrivateDNSResolverOutboundEndpoint"
    ]
}