{
    "identifiers": [
        "Collections",
        "Generic",
        "ICSharpCode",
        "Decompiler",
        "TypeSystem",
        "ICSharpCode",
        "ILSpyX",
        "MermaidDiagrammer",
        "Type",
        "Relationships",
        "IDictionary",
        "InheritedMembers",
        "IDictionary",
        "Relationships"
    ],
    "literals": [
        "\"\\n\""
    ],
    "variables": [
        "NewLine",
        "SourceAssemblyName",
        "SourceAssemblyVersion",
        "TypesByNamespace",
        "OutsideReferences",
        "Excluded",
        "HasOne",
        "HasMany",
        "Id",
        "Name",
        "Body",
        "BaseType",
        "Interfaces",
        "Inherited",
        "XmlDocs",
        "FlatMembers"
    ],
    "comments": [
        "Copyright (c) 2024 Holger Schmidt",
        "",
        "Permission is hereby granted, free of charge, to any person obtaining a copy of this",
        "software and associated documentation files (the \"Software\"), to deal in the Software",
        "without restriction, including without limitation the rights to use, copy, modify, merge,",
        "publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons",
        "to whom the Software is furnished to do so, subject to the following conditions:",
        "",
        "The above copyright notice and this permission notice shall be included in all copies or",
        "substantial portions of the Software.",
        "",
        "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,",
        "INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR",
        "PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE",
        "FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR",
        "OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER",
        "DEALINGS IN THE SOFTWARE.",
        "Serialized into JSON by <see cref=\"GenerateHtmlDiagrammer.SerializeModel(ClassDiagrammer)\"/>.</summary>",
        "<see cref=\"System.Type.Namespace\"/> to facilitate a structured type selection.</summary>",
        "but referenced by <see cref=\"Type\"/>s that are.",
        "Contains display names (values; similar to <see cref=\"Type.Name\"/>)",
        "by their referenced IDs (keys; similar to <see cref=\"Type.Id\"/>).</summary>",
        "used to support <see cref=\"GenerateHtmlDiagrammer.ReportExludedTypes\"/>.</summary>",
        "of property relations to one or many other <see cref=\"Type\"/>s.</summary>",
        "with the display member names as keys and the related <see cref=\"Type.Id\"/> as values.",
        "This is because member names must be unique within the owning <see cref=\"Type\"/>,",
        "while the related <see cref=\"Type\"/> may be the same for multiple properties.</summary>",
        "with the display member names as keys and the related <see cref=\"Type.Id\"/> as values.",
        "This is because member names must be unique within the owning <see cref=\"Type\"/>,",
        "while the related <see cref=\"Type\"/> may be the same for multiple properties.</summary>",
        "and XML documentation for a <see cref=\"System.Type\"/> from the source assembly.</summary>",
        "as well as any HTML diagrammer generated from it.",
        "Should match \\w+ to be safe to use as select option value and",
        "part of the DOM id of the SVG node rendered for this type.",
        "May be the type name itself.</summary>",
        "Not guaranteed to be unique in the scope of the <see cref=\"ClassDiagrammer\"/>.</summary>",
        "in mermaid class diagram syntax, see https://mermaid.js.org/syntax/classDiagram.html .</summary>",
        "and the (optional) differing display name as value of the single entry",
        "- or null if the base type is <see cref=\"object\"/>.",
        "Yes, Christopher Lambert, there can only be one. For now.",
        "But using the same interface as for <see cref=\"Interfaces\"/> is convenient",
        "and who knows - at some point the .Net bus may roll up with multi-inheritance.",
        "Then this'll look visionary!</summary>",
        "and their (optional) differing display names as values.</summary>",
        "for the consumer to choose which of them to display in an inheritance scenario.</summary>",
        "(using a <see cref=\"string.Empty\"/> key) and its members, if available.</summary>",
        "in mermaid class diagram syntax.</summary>"
    ],
    "docstrings": [
        "<summary>Contains type info and metadata for generating a HTML class diagrammer from a source assembly.",
        "<summary>Types selectable in the diagrammer, grouped by their",
        "<summary>Types not included in the <see cref=\"ClassDiagrammer\"/>,",
        "<summary>Types excluded from the <see cref=\"ClassDiagrammer\"/>;",
        "<summary>A <see cref=\"Type\"/>-like structure with collections",
        "<summary>Relations to zero or one other instances of <see cref=\"Type\"/>s included in the <see cref=\"ClassDiagrammer\"/>,",
        "<summary>Relations to zero to infinite other instances of <see cref=\"Type\"/>s included in the <see cref=\"ClassDiagrammer\"/>,",
        "<summary>The mermaid class diagram definition, inheritance and relationships metadata",
        "<summary>Uniquely identifies the <see cref=\"System.Type\"/> in the scope of the source assembly",
        "<summary>The human-readable label for the type, if different from <see cref=\"Id\"/>.",
        "<summary>Contains the definition of the type and its own (not inherited) flat members",
        "<summary>The base type directly implemented by this type, with the <see cref=\"Id\"/> as key",
        "<summary>Interfaces directly implemented by this type, with their <see cref=\"Id\"/> as keys",
        "<summary>Contains inherited members by the <see cref=\"Id\"/> of their <see cref=\"IMember.DeclaringType\"/>",
        "<summary>Contains the XML documentation comments for this type",
        "<summary>Members inherited from an ancestor type specified by the Key of <see cref=\"Inherited\"/>.</summary>",
        "<summary>The simple, non-complex members inherited from another <see cref=\"Type\"/>"
    ],
    "functions": [],
    "classes": [
        "ClassDiagrammer",
        "Relationships",
        "Type",
        "InheritedMembers"
    ]
}