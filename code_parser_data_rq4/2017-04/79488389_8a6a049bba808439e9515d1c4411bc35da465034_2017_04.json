{
    "identifiers": [
        "tkinter",
        "filename",
        "mode",
        "open",
        "filename",
        "mode",
        "fin",
        "fin",
        "read",
        "filename",
        "contents",
        "mode",
        "open",
        "filename",
        "mode",
        "fout",
        "fout",
        "write",
        "contents",
        "x",
        "y",
        "width",
        "height",
        "x",
        "y",
        "width",
        "height",
        "x",
        "y",
        "x",
        "x",
        "x",
        "width",
        "y",
        "y",
        "y",
        "height",
        "c",
        "text",
        "insert",
        "index",
        "c",
        "index",
        "delta",
        "index",
        "delta",
        "index",
        "delta",
        "len",
        "text",
        "index",
        "delta",
        "len",
        "text",
        "text",
        "pop",
        "canvas",
        "counter",
        "canvas",
        "create_rectangle",
        "x",
        "y",
        "x",
        "width",
        "y",
        "height",
        "width",
        "counter",
        "clicked",
        "text",
        "append",
        "canvas",
        "create_text",
        "x",
        "margin",
        "y",
        "margin",
        "text",
        "join",
        "text",
        "anchor",
        "NW",
        "font",
        "text",
        "pop",
        "canvas",
        "create_text",
        "x",
        "margin",
        "y",
        "margin",
        "text",
        "join",
        "text",
        "anchor",
        "NW",
        "join",
        "text",
        "ver",
        "get_text",
        "ver",
        "writeFile",
        "contents",
        "ver",
        "writeFile",
        "filename",
        "contents",
        "ver",
        "ver",
        "readFile",
        "ver",
        "readFile",
        "filename",
        "contents",
        "len",
        "text",
        "data",
        "variables",
        "expr",
        "expr",
        "i",
        "len",
        "expr",
        "expr",
        "i",
        "elist",
        "insert",
        "i",
        "offset",
        "offset",
        "join",
        "elist",
        "sorted",
        "variables",
        "key",
        "s",
        "len",
        "s",
        "sorted_by_len",
        "expr",
        "expr",
        "count",
        "expr",
        "replace",
        "temp",
        "variables",
        "num_occurences",
        "expr",
        "Struct",
        "replace_vars_with_values",
        "data",
        "variables",
        "replace_vars_with_values",
        "data",
        "variables",
        "replace_vars_with_values",
        "data",
        "variables",
        "replace_vars_with_values",
        "data",
        "variables",
        "replace_vars_with_values",
        "data",
        "variables",
        "replace_vars_with_values",
        "data",
        "variables",
        "replace_vars_with_values",
        "data",
        "variables",
        "replace_vars_with_values",
        "data",
        "variables",
        "replace_vars_with_values",
        "data",
        "variables",
        "data",
        "variables",
        "expr",
        "line_num",
        "variables",
        "expr",
        "replace_vars_with_values",
        "data",
        "variables",
        "expr",
        "expr",
        "c",
        "expr",
        "c",
        "isspace",
        "c",
        "isalpha",
        "c",
        "isdigit",
        "c",
        "safe_syms",
        "line_num",
        "expr",
        "eval",
        "expr",
        "eval",
        "expr",
        "e",
        "expr",
        "e",
        "line_num",
        "Struct",
        "eval_expr",
        "data",
        "variables",
        "eval_expr",
        "data",
        "variables",
        "eval_expr",
        "data",
        "variables",
        "eval_expr",
        "data",
        "variables",
        "eval_expr",
        "data",
        "variables",
        "eval_expr",
        "data",
        "variables",
        "s",
        "s",
        "i",
        "len",
        "s",
        "slist",
        "i",
        "isspace",
        "join",
        "slist",
        "i",
        "strip_end",
        "strip_end",
        "strip_end",
        "strip_end",
        "strip_end",
        "strip_end",
        "data",
        "code_lines",
        "k",
        "k",
        "len",
        "code_lines",
        "code_lines",
        "k",
        "isspace",
        "code_lines",
        "k",
        "start",
        "code_lines",
        "k",
        "start",
        "code_lines",
        "k",
        "code_lines",
        "k",
        "body",
        "code_lines",
        "k",
        "k",
        "body",
        "k",
        "Struct",
        "get_indent_body",
        "data",
        "code_lines",
        "get_indent_body",
        "data",
        "code_lines",
        "get_indent_body",
        "data",
        "code_lines",
        "get_indent_body",
        "data",
        "code_lines",
        "code_lines",
        "debug",
        "i",
        "len",
        "code_lines",
        "code_lines",
        "i",
        "line",
        "line",
        "isspace",
        "line",
        "startswith",
        "filtered_code",
        "append",
        "strip_end",
        "line",
        "debug",
        "filtered_code",
        "i",
        "len",
        "filtered_code",
        "filtered_code",
        "i",
        "line",
        "isspace",
        "j",
        "len",
        "line",
        "line",
        "j",
        "isspace",
        "line",
        "j",
        "debug_line",
        "result",
        "append",
        "debug_line",
        "result",
        "append",
        "filtered_code",
        "i",
        "i",
        "len",
        "filtered_code",
        "result",
        "append",
        "debug_line",
        "filtered_code",
        "result",
        "filter_space",
        "code_lines",
        "filter_space",
        "code_lines1",
        "filter_space",
        "code_lines2",
        "filter_space",
        "code_lines",
        "filter_space",
        "code_lines2",
        "data",
        "functions",
        "variables",
        "line",
        "color",
        "x0",
        "y0",
        "x1",
        "y1",
        "depth",
        "sorted",
        "functions",
        "key",
        "s",
        "len",
        "s",
        "fn_name",
        "sorted_by_len",
        "line",
        "find",
        "fn_name",
        "i",
        "line",
        "find",
        "i",
        "line",
        "find",
        "i",
        "line",
        "lparen_i",
        "strip",
        "line",
        "lparen_i",
        "rparen_i",
        "vals",
        "elem",
        "strip",
        "elem",
        "vals",
        "split",
        "eval_expr",
        "data",
        "variables",
        "expr",
        "i",
        "expr",
        "vals",
        "functions",
        "fn_name",
        "variables",
        "variables",
        "variables",
        "j",
        "len",
        "vals",
        "args",
        "j",
        "vals",
        "j",
        "interpret",
        "data",
        "body",
        "f_variables",
        "color",
        "x0",
        "y0",
        "x1",
        "y1",
        "depth",
        "depth",
        "f_variables",
        "f_variables",
        "f_variables",
        "line",
        "i",
        "line",
        "rparen_i",
        "f_variables",
        "variables",
        "line",
        "data",
        "code",
        "variables",
        "i",
        "color",
        "repeated",
        "x0",
        "y0",
        "x1",
        "y1",
        "depth",
        "code",
        "splitlines",
        "len",
        "code_lines",
        "depth",
        "variables",
        "i",
        "n",
        "i",
        "code_lines",
        "i",
        "line",
        "line",
        "startswith",
        "line",
        "split",
        "strip",
        "i",
        "replace_functions_with_values",
        "data",
        "data",
        "fns",
        "variables",
        "expr",
        "color",
        "x0",
        "y0",
        "x1",
        "y1",
        "eval_expr",
        "data",
        "variables",
        "expr",
        "i",
        "val",
        "val",
        "val",
        "line",
        "startswith",
        "line",
        "split",
        "strip",
        "replace_functions_with_values",
        "data",
        "data",
        "fns",
        "variables",
        "expr",
        "color",
        "x0",
        "y0",
        "x1",
        "y1",
        "eval_expr",
        "data",
        "variables",
        "expr",
        "i",
        "val",
        "val",
        "val",
        "line",
        "startswith",
        "len",
        "line",
        "split",
        "i",
        "line",
        "split",
        "strip",
        "color",
        "line",
        "len",
        "line",
        "split",
        "i",
        "line",
        "split",
        "strip",
        "line",
        "split",
        "strip",
        "expr",
        "replace_functions_with_values",
        "data",
        "data",
        "fns",
        "variables",
        "expr",
        "color",
        "x0",
        "y0",
        "x1",
        "y1",
        "expr",
        "eval_expr",
        "data",
        "variables",
        "expr",
        "i",
        "res",
        "res",
        "line",
        "startswith",
        "color",
        "x0",
        "y0",
        "x1",
        "y1",
        "data",
        "to_draw",
        "append",
        "x0",
        "y0",
        "x1",
        "y1",
        "color",
        "i",
        "x1",
        "y1",
        "line",
        "startswith",
        "line",
        "find",
        "line",
        "find",
        "line",
        "start",
        "end",
        "eval_expr",
        "data",
        "variables",
        "expr",
        "i",
        "e",
        "e",
        "e",
        "i",
        "cond",
        "i",
        "get_indent_body",
        "data",
        "code_lines",
        "i",
        "k",
        "n",
        "code_lines",
        "k",
        "startswith",
        "get_indent_body",
        "data",
        "code_lines",
        "k",
        "cond",
        "interpret",
        "data",
        "join",
        "body",
        "variables",
        "color",
        "x0",
        "y0",
        "x1",
        "y1",
        "depth",
        "result",
        "data",
        "error",
        "result",
        "break_called",
        "variables",
        "i",
        "color",
        "x0",
        "y0",
        "x1",
        "y1",
        "color",
        "data",
        "frames",
        "append",
        "frame",
        "x0",
        "y0",
        "x1",
        "y1",
        "color",
        "else_exists",
        "interpret",
        "data",
        "join",
        "else_body",
        "variables",
        "color",
        "x0",
        "y0",
        "x1",
        "y1",
        "depth",
        "result",
        "data",
        "error",
        "result",
        "break_called",
        "variables",
        "i",
        "color",
        "x0",
        "y0",
        "x1",
        "y1",
        "frame",
        "data",
        "frames",
        "append",
        "frame",
        "x0",
        "y0",
        "x1",
        "y1",
        "color",
        "variables",
        "k",
        "line",
        "startswith",
        "line",
        "find",
        "line",
        "find",
        "line",
        "start",
        "end",
        "eval_expr",
        "data",
        "variables",
        "expr",
        "i",
        "e",
        "e",
        "e",
        "i",
        "get_indent_body",
        "data",
        "code_lines",
        "i",
        "cond",
        "repeated",
        "data",
        "frames",
        "interpret",
        "data",
        "join",
        "body",
        "data",
        "frames",
        "pop",
        "interpret",
        "data",
        "join",
        "body",
        "variables",
        "color",
        "x0",
        "y0",
        "x1",
        "y1",
        "result",
        "data",
        "error",
        "result",
        "eval_expr",
        "data",
        "variables",
        "expr",
        "i",
        "break_called",
        "cond",
        "terminated",
        "k",
        "variables",
        "i",
        "color",
        "terminated",
        "x0",
        "y0",
        "x1",
        "y1",
        "frame",
        "data",
        "frames",
        "append",
        "frame",
        "x0",
        "y0",
        "x1",
        "y1",
        "color",
        "variables",
        "line",
        "startswith",
        "line",
        "split",
        "len",
        "strip",
        "e",
        "e",
        "i",
        "data",
        "to_repeat",
        "eval_expr",
        "data",
        "variables",
        "expr",
        "i",
        "m",
        "code_lines",
        "get_indent_body",
        "data",
        "code_lines",
        "i",
        "join",
        "body",
        "k",
        "i",
        "k",
        "j",
        "data",
        "to_repeat",
        "repeated",
        "data",
        "frames",
        "interpret",
        "data",
        "join",
        "body",
        "data",
        "frames",
        "pop",
        "depth",
        "depth",
        "variables",
        "x0",
        "y0",
        "interpret",
        "data",
        "join",
        "body",
        "variables",
        "color",
        "x0",
        "y0",
        "x1",
        "y1",
        "depth",
        "result",
        "data",
        "error",
        "result",
        "depth",
        "variables",
        "break_called",
        "j",
        "data",
        "to_repeat",
        "repeated",
        "k",
        "terminated",
        "terminated",
        "repeated",
        "variables",
        "i",
        "color",
        "repeated",
        "x0",
        "y0",
        "x1",
        "y1",
        "frame",
        "data",
        "frames",
        "append",
        "frame",
        "x0",
        "y0",
        "x1",
        "y1",
        "color",
        "variables",
        "k",
        "k",
        "line",
        "startswith",
        "line",
        "len",
        "s",
        "find",
        "s",
        "end",
        "replace_vars_with_values",
        "data",
        "variables",
        "s",
        "data",
        "print_string",
        "append",
        "s",
        "line",
        "startswith",
        "variables",
        "i",
        "color",
        "x0",
        "y0",
        "x1",
        "y1",
        "i",
        "n",
        "x0",
        "y0",
        "x1",
        "y1",
        "color",
        "variables",
        "frame",
        "data",
        "frames",
        "append",
        "frame",
        "x0",
        "y0",
        "x1",
        "y1",
        "color",
        "variables",
        "line",
        "startswith",
        "line",
        "find",
        "line",
        "find",
        "line",
        "offset",
        "lparen_i",
        "line",
        "lparen_i",
        "rparen_i",
        "elem",
        "strip",
        "elem",
        "args",
        "split",
        "get_indent_body",
        "data",
        "code_lines",
        "i",
        "k",
        "data",
        "fns",
        "len",
        "args",
        "args",
        "join",
        "body",
        "e",
        "e",
        "i",
        "line",
        "line",
        "find",
        "line",
        "find",
        "line",
        "lparen_i",
        "strip",
        "line",
        "lparen_i",
        "rparen_i",
        "vals",
        "elem",
        "strip",
        "elem",
        "vals",
        "split",
        "eval_expr",
        "data",
        "variables",
        "expr",
        "i",
        "expr",
        "vals",
        "name",
        "data",
        "fns",
        "data",
        "fns",
        "name",
        "variables",
        "variables",
        "variables",
        "j",
        "len",
        "vals",
        "args",
        "j",
        "vals",
        "j",
        "interpret",
        "data",
        "body",
        "f_variables",
        "color",
        "x0",
        "y0",
        "x1",
        "y1",
        "depth",
        "depth",
        "f_variables",
        "f_variables",
        "f_variables",
        "f_variables",
        "x0",
        "y0",
        "variables",
        "i",
        "line",
        "startswith",
        "line",
        "len",
        "strip",
        "expr",
        "eval_expr",
        "data",
        "variables",
        "expr",
        "i",
        "variables",
        "repr",
        "line",
        "i",
        "i",
        "depth",
        "variables",
        "x0",
        "y0",
        "x1",
        "y1",
        "color",
        "variables",
        "canvas",
        "data",
        "data",
        "height",
        "data",
        "draw_window_margin",
        "data",
        "draw_window_margin",
        "data",
        "draw_window_width",
        "data",
        "draw_window_margin",
        "draw_window_height",
        "obj",
        "data",
        "to_draw",
        "obj",
        "canvas",
        "create_line",
        "x0",
        "cx",
        "y0",
        "cy",
        "x1",
        "cx",
        "y1",
        "cy",
        "fill",
        "color",
        "width",
        "e",
        "e",
        "i",
        "canvas",
        "data",
        "data",
        "draw_window_margin",
        "data",
        "height",
        "offset",
        "data",
        "draw_window_margin",
        "data",
        "draw_window_width",
        "data",
        "draw_window_margin",
        "draw_window_height",
        "canvas",
        "create_line",
        "offset",
        "cy",
        "offset",
        "data",
        "draw_window_width",
        "cy",
        "data",
        "draw_window_width",
        "interval",
        "data",
        "draw_window_margin",
        "data",
        "draw_window_width",
        "data",
        "draw_window_margin",
        "draw_window_height",
        "i",
        "increments_x",
        "cx",
        "interval",
        "i",
        "cx",
        "interval",
        "i",
        "cy",
        "marker_radius",
        "cy",
        "marker_radius",
        "canvas",
        "create_line",
        "mx",
        "my_top",
        "mx",
        "my_bot",
        "canvas",
        "create_line",
        "mx_n",
        "my_top",
        "mx_n",
        "my_bot",
        "canvas",
        "create_line",
        "cx",
        "data",
        "draw_window_margin",
        "cx",
        "data",
        "draw_window_margin",
        "draw_window_height",
        "draw_window_height",
        "interval",
        "i",
        "increments_y",
        "cx",
        "marker_radius",
        "cx",
        "marker_radius",
        "cy",
        "interval",
        "i",
        "cy",
        "interval",
        "i",
        "canvas",
        "create_line",
        "mx_l",
        "my",
        "mx_r",
        "my",
        "canvas",
        "create_line",
        "mx_l",
        "my_n",
        "mx_r",
        "my_n",
        "data",
        "data",
        "width",
        "data",
        "height",
        "data",
        "draw_window_margin",
        "data",
        "draw_window_margin",
        "data",
        "draw_window_width",
        "data",
        "draw_window_margin",
        "data",
        "draw_window_height",
        "data",
        "draw_window_margin",
        "data",
        "draw_window_width",
        "data",
        "margin",
        "data",
        "draw_window_margin",
        "data",
        "width",
        "data",
        "draw_window_width",
        "data",
        "draw_window_margin",
        "data",
        "margin",
        "data",
        "height",
        "data",
        "draw_window_margin",
        "Textbox",
        "textx",
        "texty",
        "textw",
        "texth",
        "data",
        "data",
        "textbox",
        "get_text",
        "data",
        "init_GUI",
        "data",
        "init_compile_data",
        "data",
        "interpret",
        "data",
        "data",
        "code",
        "variables",
        "data",
        "data",
        "textbox",
        "in_bounds",
        "x",
        "y",
        "data",
        "data",
        "type_mode",
        "keysym",
        "data",
        "textbox",
        "add_text",
        "keysym",
        "data",
        "textbox",
        "add_text",
        "keysym",
        "data",
        "textbox",
        "backspace",
        "isalpha",
        "isdigit",
        "isspace",
        "valid",
        "data",
        "textbox",
        "add_text",
        "keysym",
        "init_compile_data",
        "data",
        "filter_space",
        "data",
        "code",
        "splitlines",
        "data",
        "debug_mode",
        "join",
        "code_lines",
        "interpret",
        "data",
        "data",
        "code",
        "variables",
        "data",
        "frames",
        "data",
        "axes",
        "data",
        "debug_mode",
        "isdigit",
        "ver",
        "data",
        "textbox",
        "save",
        "data",
        "ver",
        "data",
        "textbox",
        "load",
        "data",
        "ver",
        "len",
        "data",
        "frames",
        "data",
        "frames",
        "pop",
        "frame",
        "interpret",
        "data",
        "data",
        "code",
        "frame",
        "result",
        "result",
        "break_called",
        "data",
        "frames",
        "data",
        "data",
        "counter",
        "canvas",
        "data",
        "canvas",
        "create_rectangle",
        "data",
        "draw_window_margin",
        "data",
        "draw_window_margin",
        "data",
        "draw_window_margin",
        "data",
        "draw_window_width",
        "data",
        "height",
        "data",
        "draw_window_margin",
        "width",
        "data",
        "textbox",
        "draw",
        "canvas",
        "data",
        "counter",
        "canvas",
        "data",
        "draw_screens",
        "canvas",
        "data",
        "data",
        "debug_mode",
        "canvas",
        "create_text",
        "data",
        "draw_window_margin",
        "data",
        "margin",
        "data",
        "draw_window_margin",
        "data",
        "draw_window_height",
        "text",
        "anchor",
        "SW",
        "data",
        "axes",
        "draw_axes",
        "canvas",
        "data",
        "data",
        "error",
        "data",
        "err_line",
        "data",
        "err_msg",
        "canvas",
        "create_text",
        "data",
        "draw_window_margin",
        "data",
        "margin",
        "data",
        "draw_window_margin",
        "data",
        "margin",
        "text",
        "err_msg",
        "anchor",
        "NW",
        "draw_code",
        "canvas",
        "data",
        "join",
        "data",
        "print_string",
        "canvas",
        "create_text",
        "data",
        "draw_window_margin",
        "data",
        "margin",
        "data",
        "draw_window_margin",
        "data",
        "margin",
        "text",
        "p",
        "anchor",
        "NW",
        "width",
        "height",
        "canvas",
        "data",
        "canvas",
        "ALL",
        "redrawAll",
        "canvas",
        "data",
        "canvas",
        "update",
        "canvas",
        "data",
        "mousePressed",
        "data",
        "redrawAllWrapper",
        "canvas",
        "data",
        "canvas",
        "data",
        "keyPressed",
        "data",
        "redrawAllWrapper",
        "canvas",
        "data",
        "canvas",
        "data",
        "timerFired",
        "data",
        "redrawAllWrapper",
        "canvas",
        "data",
        "canvas",
        "after",
        "data",
        "timerDelay",
        "timerFiredWrapper",
        "canvas",
        "data",
        "Struct",
        "width",
        "height",
        "init",
        "data",
        "Tk",
        "Canvas",
        "root",
        "width",
        "data",
        "width",
        "height",
        "data",
        "height",
        "canvas",
        "pack",
        "root",
        "bind",
        "mousePressedWrapper",
        "canvas",
        "data",
        "root",
        "bind",
        "keyPressedWrapper",
        "canvas",
        "data",
        "timerFiredWrapper",
        "canvas",
        "data",
        "root",
        "mainloop",
        "test_replace_vars_with_vals",
        "test_eval_expr",
        "test_strip_end",
        "test_get_indent_body",
        "test_filter_space",
        "test_all",
        "run"
    ],
    "literals": [
        "\"rt\"",
        "\"wt\"",
        "\"|\"",
        "\"\"",
        "\"14\"",
        "\"\"",
        "\"\"",
        "\"code.txt\"",
        "\"code%d.txt\"",
        "\"code.txt\"",
        "\"code%d.txt\"",
        "\"%\"",
        "\"%\"",
        "\"\"",
        "\"%r\"",
        "\"Testing replace_vars_with_vals...\"",
        "\"x\"",
        "\"y\"",
        "\"z\"",
        "\"color\"",
        "\"blue\"",
        "\"color2\"",
        "\"\"",
        "\"\"",
        "\"x\"",
        "\"10\"",
        "\"z\"",
        "\"30\"",
        "\"color\"",
        "\"\\'blue\\'\"",
        "\"x + y\"",
        "\"10 + 20\"",
        "\"x + z*y\"",
        "\"10 + 30*20\"",
        "\"color2\"",
        "'None'",
        "\"color color2\"",
        "\"\\'blue\\' None\"",
        "\"42\"",
        "\"42\"",
        "\"...passed!\"",
        "\"\"",
        "\"\"",
        "\"165\"",
        "\"<>/*+-.()%=\"",
        "\"math syntax error\"",
        "\"range\"",
        "\"Exception line 178\"",
        "\"math syntax error\"",
        "\"Testing eval_expr...\"",
        "\"x\"",
        "\"y\"",
        "\"z\"",
        "\"t\"",
        "\"x + y * z / t\"",
        "\"(x + x + x)*5\"",
        "\"x**2 + y**2\"",
        "\"0\"",
        "\"(y+z)*(x+y)\"",
        "\"\"",
        "\"\"",
        "\"...passed!\"",
        "\"\"",
        "\"Testing strip_end...\"",
        "\"\"",
        "\"\"",
        "\"asdfsdfsdf      \"",
        "\"asdfsdfsdf\"",
        "\"asdf\\t   \\n \\n\"",
        "\"asdf\"",
        "\"hi this is text with stuff\\t \\t \\t \"",
        "\"hi this is text with stuff\"",
        "\"\\t    we don't touch stuff in the beginning  \"",
        "\"\\t    we don't touch stuff in the beginning\"",
        "\"how perfect there's nothing to strip\"",
        "\"how perfect there's nothing to strip\"",
        "\"...passed!\"",
        "\" \"",
        "\"\\t\"",
        "\"you missed something\"",
        "\"\\n\"",
        "\"Testing get_indent_body...\"",
        "\"#this is code\"",
        "\"x<-10\"",
        "\"    x<-10\"",
        "\"x<-10\"",
        "\"\\n\"",
        "\"repeat 5:\"",
        "\"    x<-x+10\"",
        "\"\\ty<-y+10\"",
        "\"\\tdraw\"",
        "\"# more stuff\"",
        "\"x<-x+10\"",
        "\"\\n\"",
        "\"y<-y+10\"",
        "\"\\n\"",
        "\"draw\"",
        "\"\\n\"",
        "\"repeat 5:\"",
        "\"    x<-x+10\"",
        "\"\\ty<-y+10\"",
        "\"\\tdraw\"",
        "\"# more stuff\"",
        "\"\\ty<-y+10\"",
        "\"\\tdraw\"",
        "\"y<-y+10\"",
        "\"\\n\"",
        "\"draw\"",
        "\"\\n\"",
        "\"...passed!\"",
        "\"\"",
        "\"#\"",
        "\"break\"",
        "\"Testing filter_space...\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"code\"",
        "\"code\"",
        "\"\"",
        "\"code\"",
        "\"\"",
        "\" \"",
        "\"    \"",
        "\"        \"",
        "\"code\"",
        "\"  \"",
        "\"   \"",
        "\"  \"",
        "\"\"",
        "\"code\"",
        "\"repeat 5:\"",
        "\"   \"",
        "\"    x<-x+10\"",
        "\"\\ty<-y+10\"",
        "\"\\tdraw\"",
        "\"# more stuff\"",
        "\"\\ty<-y+10\"",
        "\"\\tdraw\"",
        "\"\"",
        "\"# this is the end of stuff\"",
        "\"code\"",
        "\"code\"",
        "\"code\"",
        "\"code\"",
        "\"code\"",
        "\"repeat 5:\"",
        "\"    x<-x+10\"",
        "\"\\ty<-y+10\"",
        "\"\\tdraw\"",
        "\"\\ty<-y+10\"",
        "\"\\tdraw\"",
        "\"code\"",
        "\"break\"",
        "\"code\"",
        "\"break\"",
        "\"code\"",
        "\"break\"",
        "'repeat 5:'",
        "'    break'",
        "'    x<-x+10'",
        "'\\tbreak'",
        "'\\ty<-y+10'",
        "'\\tbreak'",
        "'\\tdraw'",
        "'\\tbreak'",
        "'\\ty<-y+10'",
        "'\\tbreak'",
        "'\\tdraw'",
        "'\\tbreak'",
        "\"(\"",
        "\")\"",
        "\"\"",
        "\",\"",
        "\"x\"",
        "\"x\"",
        "\"y\"",
        "\"y\"",
        "\"color\"",
        "\"color\"",
        "\"x\"",
        "\"x\"",
        "\"y\"",
        "\"y\"",
        "\"color\"",
        "\"color\"",
        "\"%r\"",
        "\"return\"",
        "\"variables\"",
        "\"\"",
        "\" \"",
        "\"line 347 variables\"",
        "\"i: \"",
        "\"processing line:\"",
        "\"x\"",
        "\"<-\"",
        "\"assignment should be of the form \\'x <- 5\\'\"",
        "'x'",
        "\"y\"",
        "\"<-\"",
        "'y'",
        "\"color\"",
        "\"<-\"",
        "\"should be of the form \\'color <- black\\'\"",
        "\"<-\"",
        "\"color\"",
        "\"<-\"",
        "\"<-\"",
        "\"should be of the form \\'variable_name <- value\\'\"",
        "\"<-\"",
        "\"<-\"",
        "\"line 389 var, expr\"",
        "\"line 391\"",
        "\"draw\"",
        "\"none\"",
        "\"x0, y0, x1, y1\"",
        "\"if\"",
        "\"(\"",
        "\")\"",
        "\"here!\"",
        "\"Condition not set\"",
        "\"else\"",
        "\"\"",
        "\"\"",
        "\"appending frame: \"",
        "\"not cond\"",
        "\"while\"",
        "\"(\"",
        "\")\"",
        "\"\"",
        "\"\"",
        "\"appending frame in while: \"",
        "\"repeat\"",
        "\":\"",
        "\"repeat\"",
        "\"before get_indent_body\"",
        "\"repeat loop body:\\n\"",
        "\"\"",
        "\"no content to repeat\\n\\\n(Hint: remember to indent the block\\nyou would like to repeat)\"",
        "\"\"",
        "\" \"",
        "\"line 415 variables: \"",
        "\"x0, y0\"",
        "\"\"",
        "\" \"",
        "\"line 421 variables\"",
        "\"we should be exiting the loop\"",
        "\"terminated: \"",
        "\"appending frame: \"",
        "\"i = %d\"",
        "\"print\"",
        "\"print(\"",
        "\")\"",
        "\"break\"",
        "\"appending frame: \"",
        "\"def\"",
        "\"(\"",
        "\")\"",
        "\",\"",
        "\"\"",
        "\"\\nfunction definition should be \\\nof the form\\ndef function_name(argument1, argument2, argument3):\\n\\t#code content goes here\"",
        "\"(\"",
        "\"(\"",
        "\")\"",
        "\"\"",
        "\",\"",
        "\"x\"",
        "\"x\"",
        "\"y\"",
        "\"y\"",
        "\"color\"",
        "\"color\"",
        "\"f_variables\"",
        "\"x\"",
        "\"x\"",
        "\"y\"",
        "\"y\"",
        "\"color\"",
        "\"color\"",
        "\"x0: %d, y0: %d\"",
        "\"variables\"",
        "\"returned\"",
        "\"invalid function name\"",
        "\"return\"",
        "\"return\"",
        "\"return\"",
        "\"line 637: ret val\"",
        "\"return\"",
        "\"error:\"",
        "\"invalid starting keyword\"",
        "\" \"",
        "\"line 495 variables: \"",
        "\"\"",
        "\"\"",
        "'x'",
        "'y'",
        "'color'",
        "\"\\><-+#:()^*/%=,\"",
        "\"Return\"",
        "\"\\n\"",
        "\"Tab\"",
        "\"    \"",
        "\"BackSpace\"",
        "\"Return\"",
        "\"\\n\"",
        "'x'",
        "'y'",
        "'color'",
        "\"frame post return: \"",
        "\"a\"",
        "\"d\"",
        "\"s\"",
        "\"data saved\"",
        "\"l\"",
        "\"data loaded\"",
        "\"h\"",
        "\"c\"",
        "\"popped frame:\"",
        "\"frame post c: \"",
        "\"Debug Mode\"",
        "\"Error on line %d: %s\"",
        "\"\\n\"",
        "\"<Button-1>\"",
        "\"<Key>\"",
        "\"bye!\"",
        "\"Testing all functions...\"",
        "\"...passed!\""
    ],
    "variables": [
        "x",
        "y",
        "width",
        "height",
        "text",
        "clicked",
        "index",
        "clicked",
        "clicked",
        "margin",
        "contents",
        "filename",
        "contents",
        "filename",
        "contents",
        "text",
        "index",
        "elist",
        "offset",
        "expr",
        "sorted_by_len",
        "num_occurences",
        "temp",
        "expr",
        "data",
        "variables",
        "expr",
        "safe_syms",
        "data",
        "error",
        "data",
        "err_msg",
        "data",
        "err_line",
        "data",
        "error",
        "data",
        "err_msg",
        "data",
        "err_line",
        "data",
        "variables",
        "slist",
        "i",
        "body",
        "start",
        "code_lines",
        "k",
        "code_lines",
        "k",
        "data",
        "code_lines",
        "code_lines",
        "code_lines",
        "filtered_code",
        "line",
        "result",
        "debug_line",
        "line",
        "debug_line",
        "result",
        "code_lines",
        "code_lines1",
        "code_lines2",
        "sorted_by_len",
        "i",
        "lparen_i",
        "rparen_i",
        "name",
        "vals",
        "vals",
        "vals",
        "vals",
        "_",
        "args",
        "body",
        "f_variables",
        "f_variables",
        "f_variables",
        "f_variables",
        "var_name",
        "f_variables",
        "var_name",
        "_",
        "_",
        "x0",
        "y0",
        "x1",
        "y1",
        "color",
        "_",
        "variables",
        "variables",
        "variables",
        "line",
        "code_lines",
        "n",
        "line",
        "expr",
        "data",
        "error",
        "data",
        "err_msg",
        "data",
        "err_line",
        "expr",
        "val",
        "variables",
        "x1",
        "expr",
        "expr",
        "val",
        "variables",
        "y1",
        "data",
        "error",
        "data",
        "err_msg",
        "data",
        "err_line",
        "color",
        "variables",
        "data",
        "error",
        "data",
        "err_msg",
        "data",
        "err_line",
        "expr",
        "expr",
        "res",
        "variables",
        "x0",
        "y0",
        "cond",
        "start",
        "end",
        "expr",
        "cond",
        "data",
        "error",
        "data",
        "err_msg",
        "data",
        "err_line",
        "data",
        "error",
        "data",
        "err_msg",
        "data",
        "err_line",
        "body",
        "k",
        "else_exists",
        "else_body",
        "else_exists",
        "else_body",
        "k",
        "result",
        "_",
        "break_called",
        "x0",
        "y0",
        "x1",
        "y1",
        "color",
        "variables",
        "frame",
        "result",
        "_",
        "break_called",
        "x0",
        "y0",
        "x1",
        "y1",
        "color",
        "variables",
        "frame",
        "i",
        "cond",
        "start",
        "end",
        "expr",
        "cond",
        "data",
        "error",
        "data",
        "err_msg",
        "data",
        "err_line",
        "body",
        "k",
        "result",
        "result",
        "terminated",
        "break_called",
        "x0",
        "y0",
        "x1",
        "y1",
        "color",
        "variables",
        "cond",
        "i",
        "frame",
        "expr",
        "data",
        "error",
        "data",
        "err_msg",
        "data",
        "err_line",
        "m",
        "data",
        "to_repeat",
        "body",
        "k",
        "data",
        "error",
        "data",
        "err_msg",
        "data",
        "err_line",
        "result",
        "result",
        "terminated",
        "break_called",
        "x0",
        "y0",
        "x1",
        "y1",
        "color",
        "variables",
        "i",
        "data",
        "to_repeat",
        "frame",
        "data",
        "to_repeat",
        "i",
        "s",
        "end",
        "s",
        "s",
        "frame",
        "lparen_i",
        "rparen_i",
        "offset",
        "fn_name",
        "args",
        "args",
        "body",
        "k",
        "i",
        "fn_name",
        "data",
        "error",
        "data",
        "err_msg",
        "data",
        "err_line",
        "lparen_i",
        "rparen_i",
        "name",
        "vals",
        "vals",
        "vals",
        "vals",
        "_",
        "args",
        "body",
        "f_variables",
        "f_variables",
        "f_variables",
        "f_variables",
        "var_name",
        "f_variables",
        "var_name",
        "_",
        "_",
        "x0",
        "y0",
        "x1",
        "y1",
        "color",
        "_",
        "variables",
        "variables",
        "variables",
        "data",
        "error",
        "data",
        "err_msg",
        "data",
        "err_line",
        "expr",
        "variables",
        "data",
        "error",
        "data",
        "err_msg",
        "data",
        "err_line",
        "draw_window_height",
        "cx",
        "cy",
        "x0",
        "y0",
        "x1",
        "y1",
        "color",
        "i",
        "data",
        "error",
        "data",
        "err_msg",
        "data",
        "err_line",
        "offset",
        "draw_window_height",
        "cx",
        "cy",
        "interval",
        "increments_x",
        "marker_radius",
        "cx",
        "cy",
        "mx",
        "mx_n",
        "my_top",
        "my_bot",
        "increments_y",
        "mx_l",
        "mx_r",
        "my",
        "my_n",
        "data",
        "draw_window_margin",
        "data",
        "draw_window_width",
        "data",
        "draw_window_height",
        "data",
        "margin",
        "data",
        "draw_window_cx",
        "data",
        "draw_window_cy",
        "textx",
        "texty",
        "textw",
        "texth",
        "data",
        "to_draw",
        "data",
        "axes",
        "data",
        "textbox",
        "data",
        "fns",
        "data",
        "to_repeat",
        "data",
        "error",
        "data",
        "err_msg",
        "data",
        "code",
        "data",
        "to_draw",
        "data",
        "frames",
        "data",
        "print_string",
        "data",
        "debug_mode",
        "data",
        "type_mode",
        "data",
        "counter",
        "data",
        "help",
        "data",
        "error",
        "data",
        "ver",
        "data",
        "err_line",
        "data",
        "err_msg",
        "data",
        "code",
        "variables",
        "variables",
        "variables",
        "variables",
        "data",
        "type_mode",
        "data",
        "type_mode",
        "valid",
        "code_lines",
        "data",
        "code",
        "variables",
        "variables",
        "variables",
        "variables",
        "data",
        "axes",
        "data",
        "debug_mode",
        "ver",
        "data",
        "ver",
        "data",
        "ver",
        "data",
        "help",
        "frame",
        "result",
        "data",
        "frames",
        "_",
        "break_called",
        "x0",
        "y0",
        "x1",
        "y1",
        "color",
        "variables",
        "err_msg",
        "p",
        "data",
        "data",
        "width",
        "data",
        "height",
        "data",
        "timerDelay",
        "root",
        "canvas"
    ],
    "comments": [
        "Begin writing interpreter for Adaas <- saada",
        "from Modules.numericStringParser import NumericStringParser",
        "taken from http://www.kosbie.net/cmu/fall-14/15-112/notes/file-and-web-io.py",
        "rt = \"read text\"",
        "taken from http://www.kosbie.net/cmu/fall-14/15-112/notes/file-and-web-io.py",
        "wt = \"write text\"",
        "helper function that replaces variable name in expression",
        "with the variables actual value",
        "variables:dict<str, _> - maps variable names to vals",
        "expr:str - expression containing some or no var names",
        "longest first",
        "helper function that processes mathematical assignment expressions",
        "variables is a mapping of var names to vals",
        "i is the line number of code being evaluated",
        "if expr doesn't result in a valid expr, None is returned and the error flag",
        "is set",
        "assert(eval_expr(data, variables, \"x+=0\",0) == None) # == None)",
        "strip but doesn't strip the beginning because indents are important",
        "returns list of split lines and new line number",
        "extracts indented body of code as in body of for loop/if statement etc.",
        "returns list of lines of code as well as the new line number",
        "get rid of 4 tabbed spaces",
        "there used to be strip_end call here",
        "gets rid of empty lines, lines with comments",
        "inserts break points if debug mode is on",
        "adds break statements between lines",
        "longest first",
        "0, color, 0, x0, y0, x1, y1",
        "if you can't split, then there's a syntax error",
        "if you can't split, then there's a syntax error",
        "there was an error",
        "if you can't split, then there's a syntax error",
        "get contents between parens",
        "DEFINE VAR AND VAL",
        "error occured",
        "frame is line number, color, #repeats, and coord vals",
        "print(\"appending frame: \", frame)",
        "error occured",
        "frame is line number, color, #repeats, and coord vals",
        "minus 1 because you increment i at the end",
        "get contents between parens",
        "DEFINE VAR AND VAL",
        "error occured",
        "terminated keeps track of whether you've completed",
        "the inner code of the loop",
        "this is the final iter of loop",
        "get the number between the end of repeat and before the colon",
        "print(k)",
        "never entered the while loop",
        "data.to_repeat - repeated to handle for breakpoints",
        "error occured",
        "terminated keeps track of whether you've completed the inner loop or not",
        "len(\"def \")",
        "potential safety concern",
        "set i to skip code for body",
        "int, tuple, str",
        "here is where you run the function",
        "0, color, 0, x0, y0, x1, y1",
        "replace any variable names with args with stuff",
        "replace variables in body with values",
        "ok what you need to do is you need to make the dict with the general variables",
        "info, an arg so this is one of the things that can't be packed into data...",
        "print some exception",
        "negating y to account for conversion to graphical coordinates",
        "to cartesian coordinates",
        "x axis",
        "divide into chunks of 10 rounded down to the nearest even",
        "draw y axis",
        "data.variables = dict()",
        "data.variables['x'] = 0",
        "data.variables['y'] = 0",
        "data.variables['color'] = None",
        "each string in this list should be separated by new line",
        "use event.x and event.y",
        "use event.char and event.keysym",
        "display axes",
        "save code written",
        "load previous code written",
        "help",
        "continue after break point",
        "transfer results from recursive call for next iteration",
        "variables = frame[-1]",
        "frame = frame[:-1]",
        "an error occured",
        "pause, then call timerFired again",
        "Set up data and call init",
        "milliseconds",
        "create the root and the canvas",
        "set up events",
        "and launch the app",
        "blocks until window is closed"
    ],
    "docstrings": [
        "\"\"\"\nAnanya Rajgarhia\n1/20/17\nNOTE: numericStringParser requires pyparsing (currently not using numericStringParser though)\nAsk Sarah:\n  - what do you think syntax for function should be\n  - how git (like if I wanna pull/merge the UI changes)\nCurrent features:\n  - addition, subtraction, mod, division, multiplication, int division\n  - repeat loops\n  - break points\n  - print statements work too\n  - eval expr using eval and checking for valid syms only\n  - saving and loading of up to 10 diff files (by using keyboard lel)\n  - if/else statements\n  - debug mode (using breaks)\n  - general variables\n  - while loops\n  - TODO:\n   - convert everything to data\n   - self-check on drawing game\n   - super clear error handling\n   - functions -> return values, confirm recursion works\n   - range\n   - confirm that debug-mode works correctly with fns\n   - error handling <- uncomment all the excepts\n\"\"\"",
        "\"\"\"\ncode: a multi-line string of \"code\"\nvariables: a dict mapping var name (str) to value\ni: line number\ncolor: string indicating color for line\nrepeated: number of iterations of for loop completed\nx0, y0, x1, y1: coordinates for line\n\"\"\"",
        "\"\"\"x <- -25\ny <- 25\ncolor <- none\ndraw\ny <- -25\ncolor <- black\ndraw\nx<--25\ny<-0\ndraw\nx<--5\ndraw\ny<-25\ncolor<-none\ndraw\ny<--25\ncolor<-black\ndraw\nx<-5\ny<-25\ncolor<-none\ndraw\ny<--25\ncolor<-blue\ndraw\n\"\"\""
    ],
    "functions": [
        "readFile",
        "writeFile",
        "in_bounds",
        "add_text",
        "move_index",
        "backspace",
        "draw",
        "get_text",
        "save",
        "load",
        "replace_vars_with_values",
        "test_replace_vars_with_vals",
        "eval_expr",
        "test_eval_expr",
        "strip_end",
        "test_strip_end",
        "get_indent_body",
        "test_get_indent_body",
        "filter_space",
        "test_filter_space",
        "replace_functions_with_values",
        "interpret",
        "draw_code",
        "draw_axes",
        "init_GUI",
        "init_compile_data",
        "init",
        "mousePressed",
        "keyPressed",
        "timerFired",
        "draw_screens",
        "redrawAll",
        "run",
        "redrawAllWrapper",
        "mousePressedWrapper",
        "keyPressedWrapper",
        "timerFiredWrapper",
        "test_all"
    ],
    "classes": [
        "Textbox",
        "Struct",
        "Struct",
        "Struct",
        "Struct"
    ]
}