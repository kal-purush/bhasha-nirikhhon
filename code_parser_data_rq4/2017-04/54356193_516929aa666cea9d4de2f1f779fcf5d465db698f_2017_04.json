{
    "identifiers": [
        "random",
        "re",
        "sys",
        "time",
        "cassandra",
        "cluster",
        "Cluster",
        "paramiko",
        "sys",
        "argv",
        "host",
        "username",
        "password",
        "paramiko",
        "SSHClient",
        "ssh",
        "set_missing_host_key_policy",
        "paramiko",
        "AutoAddPolicy",
        "ssh",
        "connect",
        "host",
        "username",
        "username",
        "password",
        "password",
        "ssh",
        "exec_command",
        "KEYSPACE",
        "join",
        "stdout",
        "readlines",
        "ssh",
        "close",
        "m",
        "end",
        "m",
        "re",
        "finditer",
        "ring",
        "m",
        "start",
        "m",
        "re",
        "finditer",
        "ring",
        "start_token_head",
        "start_token_tail",
        "start_token_head_list",
        "start_token_tail_list",
        "start_token_list",
        "append",
        "ring",
        "start_token_head",
        "start_token_tail",
        "m",
        "end",
        "m",
        "re",
        "finditer",
        "ring",
        "m",
        "start",
        "m",
        "re",
        "finditer",
        "ring",
        "end_token_head",
        "end_token_tail",
        "end_token_head_list",
        "end_token_tail_list",
        "end_token_list",
        "append",
        "ring",
        "end_token_head",
        "end_token_tail",
        "m",
        "end",
        "m",
        "re",
        "finditer",
        "ring",
        "m",
        "start",
        "m",
        "re",
        "finditer",
        "ring",
        "endpoints_head",
        "endpoints_tail",
        "endpoints_head_list",
        "endpoints_tail_list",
        "endpoints_list",
        "append",
        "ring",
        "endpoints_head",
        "endpoints_tail",
        "start_token_list",
        "end_token_list",
        "endpoints_list",
        "host",
        "username",
        "password",
        "paramiko",
        "SSHClient",
        "ssh",
        "set_missing_host_key_policy",
        "paramiko",
        "AutoAddPolicy",
        "ssh",
        "connect",
        "host",
        "username",
        "username",
        "password",
        "password",
        "ssh",
        "exec_command",
        "ssh",
        "close",
        "host",
        "username",
        "password",
        "paramiko",
        "SSHClient",
        "ssh",
        "set_missing_host_key_policy",
        "paramiko",
        "AutoAddPolicy",
        "ssh",
        "connect",
        "host",
        "username",
        "username",
        "password",
        "password",
        "ssh",
        "exec_command",
        "time",
        "sleep",
        "ssh",
        "exec_command",
        "join",
        "stdout",
        "readlines",
        "ssh",
        "close",
        "isCassandraStopped",
        "Cluster",
        "CLUSTER_ADDRESSES",
        "cluster",
        "connect",
        "exit",
        "script",
        "SCHEMA_SCRIPT",
        "split",
        "script",
        "session",
        "execute",
        "script",
        "time",
        "sleep",
        "e",
        "e",
        "exit",
        "host",
        "CLUSTER_ADDRESSES",
        "get_ring_distribute",
        "host",
        "host",
        "REPLICATION_FACTOR",
        "SEED_NODES",
        "node",
        "node",
        "CLUSTER_ADDRESSES",
        "node",
        "SEED_NODES",
        "idx",
        "INSERT_AMOUNT",
        "session",
        "execute",
        "TABLE",
        "idx",
        "time",
        "time",
        "time",
        "sleep",
        "session",
        "execute",
        "TABLE",
        "idx",
        "token_obj",
        "_current_rows",
        "system_token_boy_id",
        "head",
        "tail",
        "endpoints",
        "ring_distribute",
        "tail",
        "token",
        "head",
        "idx",
        "endpoints",
        "ep",
        "endpoints",
        "split",
        "ep",
        "ring_collect",
        "ring_collect",
        "ep",
        "down_nodes_number",
        "INSERT_AMOUNT",
        "idx",
        "INSERT_AMOUNT",
        "down_nodes_number",
        "stor_node_list",
        "random",
        "choice",
        "stor_node_list",
        "random",
        "choice",
        "seed_node_list",
        "down_node",
        "stop_cassandra_service",
        "down_node",
        "isCassandraStopped",
        "down_nodes",
        "append",
        "down_node",
        "down_node",
        "stor_node_list",
        "stor_node_list",
        "remove",
        "down_node",
        "seed_node_list",
        "remove",
        "down_node",
        "down_nodes_number",
        "down_node",
        "down_nodes",
        "stor_node_list",
        "seed_node_list",
        "time",
        "sleep",
        "globals",
        "time",
        "sleep",
        "INSERT_INTERVAL",
        "node",
        "down_nodes",
        "start_cassandra_service",
        "node",
        "INSERT_AMOUNT",
        "endpoint",
        "ring_collect",
        "endpoint",
        "ring_collect",
        "endpoint",
        "main"
    ],
    "literals": [
        "\"192.168.122.122\"",
        "\"192.168.122.123\"",
        "\"192.168.122.124\"",
        "\"192.168.122.126\"",
        "\"192.168.122.122\"",
        "\"192.168.122.123\"",
        "\"drop table if exists bigboy.info;\"",
        "\"drop schema if exists bigboy;\"",
        "\"create schema bigboy\"",
        "\"    with replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 3 };\"",
        "\"use bigboy;\"",
        "\"create table bigboy.info(\"",
        "\"    boy_id text,\"",
        "\"    time_stamp timestamp,\"",
        "\"    primary key (boy_id, time_stamp)\"",
        "\");\"",
        "\"bigboy\"",
        "\"bigboy.info\"",
        "\"root\"",
        "\"password\"",
        "\"nodetool describering %s\"",
        "\"\"",
        "\"start_token:\"",
        "', end_token'",
        "'end_token:'",
        "', endpoints'",
        "' endpoints:\\['",
        "'\\], rpc_endpoints'",
        "\"root\"",
        "\"password\"",
        "\"service cassandra start\"",
        "\"root\"",
        "\"password\"",
        "\"service cassandra stop\"",
        "\"service cassandra status\"",
        "'Active: inactive'",
        "''",
        "\"Error to connect to Cassandra server.\"",
        "';'",
        "\"Error occurs during creating schema for test.\"",
        "\"Error connecting to %s to get ring info.\"",
        "\"INSERT INTO %s (boy_id, time_stamp) VALUES ('%s', %s)\"",
        "\"SELECT token(boy_id) from %s where boy_id='%s'\"",
        "\" Write data %s to %s ...\"",
        "', '",
        "\"#####################################################################\"",
        "\" Plan to stop Cassandra service on node: %s ...\"",
        "\"#####################################################################\"",
        "\" Cassandra service is stopped on node: %s\"",
        "\" Cassandra service DOWN: %s\"",
        "\" Cassandra service UP: %s\"",
        "\"#####################################################################\\n\"",
        "\"INSERT_INTERVAL\"",
        "\"******************************************************************\"",
        "\" Amount of queries: %s. Count of data on each node: \\n\"",
        "\"     %s: %s \\n\"",
        "\"__main__\""
    ],
    "variables": [
        "CLUSTER_ADDRESSES",
        "SEED_NODES",
        "SCHEMA_SCRIPT",
        "KEYSPACE",
        "TABLE",
        "REPLICATION_FACTOR",
        "INSERT_INTERVAL",
        "INSERT_AMOUNT",
        "ssh",
        "stdin",
        "stdout",
        "stderr",
        "ring",
        "start_token_head_list",
        "start_token_tail_list",
        "start_token_list",
        "end_token_head_list",
        "end_token_tail_list",
        "end_token_list",
        "endpoints_head_list",
        "endpoints_tail_list",
        "endpoints_list",
        "ssh",
        "isCassandraStopped",
        "ssh",
        "_",
        "stdout",
        "_",
        "isCassandraStopped",
        "cluster",
        "session",
        "ring_distribute",
        "ring_collect",
        "down_nodes_number",
        "seed_node_list",
        "stor_node_list",
        "down_nodes",
        "token_obj",
        "token",
        "ring_collect",
        "ep",
        "down_node",
        "down_node",
        "isCassandraStopped"
    ],
    "comments": [
        "!/usr/bin/python",
        "",
        "Here are your configurations. #",
        "",
        "\"192.168.122.125\",",
        "",
        "",
        "Assemble start tokens:",
        "Assemble end tokens:",
        "Assemble endpoints:",
        "Step1: Connect to Cassandra server.",
        "Step2: Create schema for test.",
        "Step3: Get ring partition details for schema above..",
        "Step4: Start to insert data.",
        "TODO: Enhance to asynchrounous style such as using threadpool.",
        "4-1: Write data into database.",
        "4-2: To know which node data is written to.",
        "endpoints might be \"123.123.123.123\" or \"123.123.123.123, 123.123.123.124\"",
        "or \"123.123.123.123, 123.123.123.124, 123.123.123.125\"",
        "4-3: Stop Cassandra on some nodes but lower priority for stopping onseed nodes.",
        "Step5: Restart Cassandra service..",
        "Print result."
    ],
    "docstrings": [
        "\"\"\"\nTo run this script, execute:\n$ python test_cassandra_ha.py <data_amount>\n\nParameter <data_amount> is the number of data that you want to write to Cassandra.\nSet to greater than 100 will trigger node-down job, to test HA.\n\"\"\"",
        "\"\"\"\n    cmd ` nodetool describering <keyspace> ` will output:\n    TokenRange(start_token:5940577727476728623, end_token:5943584674441571405, endpoints:[192.168.122.111], rpc_endpoints:[192.168.122.111], endpoint_details:[EndpointDetails(host:192.168.122.111, datacenter:datacenter1, rack:rack1)])\\n'\n\n    we want to convert it to a list of (start_token, end_token, endpoints) pairs, such as:\n    [(-78030903380813158, -74533601447532126, \"192.168.122.113\"),\n     (4218276711791353687, 4219841154467858666, \"192.168.122.111\"),\n     ...\n    ]\n    \"\"\""
    ],
    "functions": [
        "get_ring_distribute",
        "start_cassandra_service",
        "stop_cassandra_service",
        "main"
    ],
    "classes": []
}