{
    "identifiers": [
        "angular",
        "riaAirportSearchInput",
        "reduxStore",
        "describe",
        "beforeEach",
        "angular",
        "riaAirportSearchInput",
        "angular",
        "reduxStore",
        "it",
        "angular",
        "$rootScope",
        "$componentController",
        "$ngRedux",
        "riaAirportActions",
        "riaFlightDetailsActions",
        "$rootScope",
        "$componentController",
        "scope",
        "controller",
        "expect",
        "controller",
        "it",
        "angular",
        "$rootScope",
        "$componentController",
        "$ngRedux",
        "riaAirportActions",
        "riaFlightDetailsActions",
        "$rootScope",
        "$componentController",
        "scope",
        "controller",
        "controller",
        "controller",
        "data",
        "expect",
        "controller",
        "controller",
        "data",
        "controller",
        "data",
        "expect",
        "controller",
        "it",
        "angular",
        "$rootScope",
        "$componentController",
        "$ngRedux",
        "riaAirportActions",
        "riaFlightDetailsActions",
        "$rootScope",
        "$componentController",
        "scope",
        "controller",
        "expect",
        "controller",
        "it",
        "angular",
        "$rootScope",
        "$componentController",
        "$ngRedux",
        "riaAirportActions",
        "riaFlightDetailsActions",
        "$rootScope",
        "$componentController",
        "scope",
        "expect",
        "controller",
        "it",
        "angular",
        "$rootScope",
        "$componentController",
        "$ngRedux",
        "riaAirportActions",
        "$rootScope",
        "$componentController",
        "scope",
        "spyOn",
        "controller",
        "spyOn",
        "controller",
        "controller",
        "expect",
        "spyFilterDestinationAirport",
        "expect",
        "spyFilterOriginAirport",
        "it",
        "angular",
        "$rootScope",
        "$componentController",
        "$ngRedux",
        "riaAirportActions",
        "$rootScope",
        "$componentController",
        "scope",
        "spyOn",
        "controller",
        "spyOn",
        "controller",
        "controller",
        "expect",
        "spyFilterDestinationAirport",
        "expect",
        "spyFilterOriginAirport",
        "it",
        "angular",
        "$rootScope",
        "$componentController",
        "$ngRedux",
        "riaAirportActions",
        "$rootScope",
        "$componentController",
        "scope",
        "spyOn",
        "controller",
        "spyOn",
        "controller",
        "controller",
        "expect",
        "spySetOriginAirport",
        "expect",
        "spySetDestinationAirport",
        "it",
        "angular",
        "$rootScope",
        "$componentController",
        "$ngRedux",
        "riaAirportActions",
        "$rootScope",
        "$componentController",
        "scope",
        "spyOn",
        "controller",
        "spyOn",
        "controller",
        "controller",
        "expect",
        "spySetOriginAirport",
        "expect",
        "spySetDestinationAirport"
    ],
    "literals": [
        "'angular'",
        "'angular-mocks'",
        "'./airport-search-input.component'",
        "'../../_redux-store'",
        "'airport search input component'",
        "'should compile as origin input'",
        "'riaAirportSearchInput'",
        "'origin'",
        "'test placeholder'",
        "'not found test'",
        "'origin'",
        "'should set the correct notFoundMessage when it is destination input'",
        "'riaAirportSearchInput'",
        "'destination'",
        "'test placeholder'",
        "'test'",
        "'No such airport was found in our database'",
        "'Sorry, no connected airports were found for this origin'",
        "'should compile as destination input'",
        "'riaAirportSearchInput'",
        "'destination'",
        "'test placeholder'",
        "'not found test'",
        "'destination'",
        "'should throw error if type is not \"origin\" or \"destination\"'",
        "'riaAirportSearchInput'",
        "'something else'",
        "'test placeholder'",
        "'not found test'",
        "'Airport search input supports only \"origin\" and \"destination\" as type'",
        "'should search as destination input'",
        "'riaAirportSearchInput'",
        "'destination'",
        "'test placeholder'",
        "'not found test'",
        "'filterDestinationAirport'",
        "'filterOriginAirport'",
        "'test'",
        "'should search as origin input'",
        "'riaAirportSearchInput'",
        "'origin'",
        "'test placeholder'",
        "'not found test'",
        "'filterDestinationAirport'",
        "'filterOriginAirport'",
        "'test'",
        "'should set origin airport if type is origin and fire get connected airports'",
        "'riaAirportSearchInput'",
        "'origin'",
        "'test placeholder'",
        "'not found test'",
        "'setOriginAirport'",
        "'setDestinationAirport'",
        "'airport'",
        "'should set destination airport if type is destination'",
        "'riaAirportSearchInput'",
        "'destination'",
        "'test placeholder'",
        "'not found test'",
        "'setOriginAirport'",
        "'setDestinationAirport'",
        "'airport'"
    ],
    "variables": [
        "model",
        "scope",
        "controller",
        "model",
        "scope",
        "controller",
        "data",
        "model",
        "scope",
        "controller",
        "model",
        "scope",
        "controller",
        "model",
        "scope",
        "controller",
        "spyFilterDestinationAirport",
        "spyFilterOriginAirport",
        "model",
        "scope",
        "controller",
        "spyFilterDestinationAirport",
        "spyFilterOriginAirport",
        "model",
        "scope",
        "controller",
        "spySetOriginAirport",
        "spySetDestinationAirport",
        "model",
        "scope",
        "controller",
        "spySetOriginAirport",
        "spySetDestinationAirport"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}