{
    "identifiers": [
        "com",
        "candao",
        "dms",
        "uid",
        "org",
        "apache",
        "commons",
        "lang",
        "builder",
        "ToStringBuilder",
        "org",
        "apache",
        "commons",
        "lang",
        "builder",
        "ToStringStyle",
        "org",
        "springframework",
        "util",
        "Assert",
        "TOTAL_BITS",
        "signBits",
        "timestampBits",
        "workerIdBits",
        "sequenceBits",
        "maxDeltaSeconds",
        "maxWorkerId",
        "maxSequence",
        "timestampShift",
        "workerIdShift",
        "timestampBits",
        "workerIdBits",
        "sequenceBits",
        "allocateTotalBits",
        "signBits",
        "timestampBits",
        "workerIdBits",
        "sequenceBits",
        "Assert",
        "isTrue",
        "allocateTotalBits",
        "TOTAL_BITS",
        "timestampBits",
        "timestampBits",
        "workerIdBits",
        "workerIdBits",
        "sequenceBits",
        "sequenceBits",
        "maxDeltaSeconds",
        "timestampBits",
        "maxWorkerId",
        "workerIdBits",
        "maxSequence",
        "sequenceBits",
        "timestampShift",
        "workerIdBits",
        "sequenceBits",
        "workerIdShift",
        "sequenceBits",
        "deltaSeconds",
        "workerId",
        "sequence",
        "deltaSeconds",
        "timestampShift",
        "workerId",
        "workerIdShift",
        "sequence",
        "signBits",
        "timestampBits",
        "workerIdBits",
        "sequenceBits",
        "maxDeltaSeconds",
        "maxWorkerId",
        "maxSequence",
        "timestampShift",
        "workerIdShift",
        "Override",
        "ToStringBuilder",
        "reflectionToString",
        "ToStringStyle",
        "SHORT_PREFIX_STYLE"
    ],
    "literals": [
        "\"allocate not enough 64 bits\""
    ],
    "variables": [
        "timestampBits",
        "workerIdBits",
        "sequenceBits",
        "maxDeltaSeconds",
        "maxWorkerId",
        "maxSequence",
        "timestampShift",
        "workerIdShift"
    ],
    "comments": [
        "make sure allocated 64 bits",
        "initialize bits",
        "initialize max value",
        "initialize shift"
    ],
    "docstrings": [
        "* Copyright (c) 2017 Baidu, Inc. All Rights Reserve.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Allocate 64 bits for the UID(long)<br>\n * sign (fixed 1bit) -> deltaSecond -> workerId -> sequence(within the same second)\n * \n * @author yutianbao",
        "* Total 64 bits",
        "* Bits for [sign-> second-> workId-> sequence]",
        "* Max value for workId & sequence",
        "* Shift for timestamp & workerId",
        "* Constructor with timestampBits, workerIdBits, sequenceBits<br>\n     * The highest bit used for sign, so <code>63</code> bits for timestampBits, workerIdBits, sequenceBits",
        "* Allocate bits for UID according to delta seconds & workerId & sequence<br>\n     * <b>Note that: </b>The highest bit will always be 0 for sign\n     * \n     * @param deltaSeconds\n     * @param workerId\n     * @param sequence\n     * @return",
        "* Getters"
    ],
    "functions": [
        "BitsAllocator",
        "allocate",
        "getSignBits",
        "getTimestampBits",
        "getWorkerIdBits",
        "getSequenceBits",
        "getMaxDeltaSeconds",
        "getMaxWorkerId",
        "getMaxSequence",
        "getTimestampShift",
        "getWorkerIdShift",
        "toString"
    ],
    "classes": [
        "BitsAllocator"
    ]
}