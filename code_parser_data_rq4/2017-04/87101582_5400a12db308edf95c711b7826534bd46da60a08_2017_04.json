{
    "identifiers": [
        "genex",
        "utils",
        "java",
        "io",
        "Serializable",
        "java",
        "util",
        "AbstractSequentialList",
        "java",
        "util",
        "Collection",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "NoSuchElementException",
        "size",
        "first",
        "last",
        "bufferSize",
        "fSize",
        "lSize",
        "serialVersionUID",
        "bufferSize",
        "bufferSize",
        "bufferSize",
        "paramCollection",
        "addAll",
        "paramCollection",
        "bufferSize",
        "paramCollection",
        "bufferSize",
        "addAll",
        "paramCollection",
        "size",
        "bufferSize",
        "bufferSize",
        "bufferSize",
        "bufferSize",
        "paramE",
        "first",
        "node",
        "bufferSize",
        "first",
        "last",
        "node",
        "fSize",
        "node",
        "data",
        "fSize",
        "paramE",
        "size",
        "first",
        "data",
        "first",
        "data",
        "bufferSize",
        "fSize",
        "first",
        "data",
        "fSize",
        "paramE",
        "size",
        "first",
        "data",
        "length",
        "fSize",
        "node",
        "bufferSize",
        "first",
        "fSize",
        "node",
        "data",
        "fSize",
        "paramE",
        "size",
        "first",
        "data",
        "fSize",
        "paramE",
        "size",
        "paramE",
        "last",
        "node",
        "bufferSize",
        "first",
        "last",
        "node",
        "lSize",
        "node",
        "data",
        "lSize",
        "paramE",
        "size",
        "last",
        "data",
        "last",
        "data",
        "bufferSize",
        "lSize",
        "last",
        "data",
        "lSize",
        "paramE",
        "size",
        "last",
        "data",
        "length",
        "lSize",
        "node",
        "last",
        "bufferSize",
        "lSize",
        "node",
        "data",
        "lSize",
        "paramE",
        "size",
        "last",
        "data",
        "lSize",
        "paramE",
        "size",
        "paramE",
        "paramNode",
        "getClass",
        "getName",
        "paramNode",
        "size",
        "first",
        "first",
        "data",
        "fSize",
        "first",
        "next",
        "first",
        "data",
        "first",
        "first",
        "next",
        "prev",
        "localNode",
        "first",
        "first",
        "first",
        "next",
        "localNode",
        "data",
        "localNode",
        "next",
        "localNode",
        "unlinkFirst",
        "first",
        "SuppressWarnings",
        "data",
        "next",
        "prev",
        "prev",
        "length",
        "next",
        "next",
        "next",
        "prev",
        "prev",
        "next",
        "next",
        "prev",
        "prev",
        "prev",
        "next",
        "data",
        "length",
        "prev",
        "data",
        "next",
        "data",
        "data",
        "next",
        "next",
        "prev",
        "prev",
        "next",
        "next",
        "prev",
        "prev",
        "prev",
        "next"
    ],
    "literals": [
        "\"Linking in between is not supported in \"",
        "\"unchecked\"",
        "\"unused\"",
        "\"hiding\""
    ],
    "variables": [
        "data",
        "next",
        "prev"
    ],
    "comments": [
        "FIXME",
        "FIXME",
        "Reset if wrongly set",
        "It will never exists, only when, if",
        "somehow user set data with null",
        "reset size",
        "first node is full, then we",
        "need a new one",
        "reset size for new node",
        "Reset if wrongly set",
        "It will never exists, only when, if",
        "somehow user set data with null",
        "reset size",
        "Last node is full, then we",
        "need a new one",
        "reset size for new node",
        "TODO FIXME",
        "that was the last node with no element,",
        "raise exception after deleting it",
        "this condition should never happens",
        "delete current reference to first",
        "node",
        "move to next Node",
        "free the storage",
        "delete reference to current list also",
        "delete node",
        "doit recursive until we don't find any",
        "element",
        "TODO"
    ],
    "docstrings": [
        "* \n * Lists are time and space consuming and has lot of cache miss ratio If Lists\n * are very big then it is difficult to utilize RAM and parallism <br>\n * Arrays are good solution but require continuous memory <br>\n * If Arrays are very large then continous mem is a problem dynamic size growing\n * is also a problem <br>\n * \n * So, combining arrays with lists is good solution <br>\n * It will be a List of Arrays, User specify size of array in each node <br>\n * Each Node of list will contain a single Array, so memory wasting in pointer\n * managing will reduce significantly <br>\n * \n * Class Itself will manage all the arrays in all the nodes, So on higher level\n * All arrays will be accessed as a single array but only storing way will\n * change.. <br>\n * +-----------------------+-+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+-------------\n * ---------<br>\n * |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n * &nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\n * <br>\n * | Array ref of size [n]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\n * -+----+---> nxt node<br>\n * |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n * &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n * &nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|\n * <br>\n * +------------------------+-+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+------------------\n * ----<br>"
    ],
    "functions": [
        "LinkedArrayList",
        "LinkedArrayList",
        "LinkedArrayList",
        "LinkedArrayList",
        "size",
        "getBufferSize",
        "setBufferSize",
        "linkFirst",
        "linkLast",
        "linkBefore",
        "E",
        "unlinkFirst",
        "Node",
        "Node",
        "Node"
    ],
    "classes": [
        "LinkedArrayList",
        "Node"
    ]
}