{
    "identifiers": [
        "pexpect",
        "textfsm",
        "yaml",
        "sys",
        "os",
        "path",
        "multiprocessing",
        "sys",
        "argv",
        "len",
        "argv",
        "format",
        "argv",
        "sys",
        "exit",
        "yaml",
        "load",
        "open",
        "argv",
        "template",
        "os",
        "path",
        "isfile",
        "template",
        "format",
        "template",
        "sys",
        "exit",
        "yaml",
        "load",
        "open",
        "dev_dict",
        "input",
        "template",
        "textfsm",
        "TextFSM",
        "open",
        "template",
        "tmpl",
        "ParseText",
        "input",
        "device",
        "command",
        "queue",
        "template",
        "pexpect",
        "spawn",
        "format",
        "device",
        "t",
        "expect",
        "t",
        "sendline",
        "req",
        "t",
        "expect",
        "t",
        "sendline",
        "req",
        "t",
        "expect",
        "t",
        "sendline",
        "t",
        "expect",
        "t",
        "sendline",
        "command",
        "t",
        "expect",
        "template",
        "queue",
        "put",
        "device",
        "search",
        "t",
        "before",
        "template",
        "queue",
        "put",
        "device",
        "t",
        "before",
        "pexpect",
        "TIMEOUT",
        "queue",
        "put",
        "items",
        "command",
        "template",
        "multiprocessing",
        "i",
        "it",
        "items",
        "multiprocessing",
        "Process",
        "target",
        "args",
        "it",
        "command",
        "queue",
        "template",
        "p",
        "start",
        "processes",
        "append",
        "p",
        "p",
        "processes",
        "p",
        "join",
        "p",
        "processes",
        "results",
        "append",
        "queue",
        "get",
        "results",
        "open",
        "output",
        "v",
        "v",
        "write",
        "yaml",
        "dump",
        "do_proccesses",
        "conn",
        "dic",
        "command",
        "template"
    ],
    "literals": [
        "\"req.yaml\"",
        "\"None\"",
        "\"Template file {} does not exists!\"",
        "'telnet {}'",
        "'User Name:'",
        "'user'",
        "'Password:'",
        "'password'",
        "'#'",
        "'terminal datadump'",
        "'#'",
        "'#'",
        "\"w\"",
        "'switches'"
    ],
    "variables": [
        "req",
        "dev_dict",
        "command",
        "template",
        "output",
        "template",
        "dic",
        "tmpl",
        "t",
        "results",
        "processes",
        "queue",
        "p"
    ],
    "comments": [
        "!/usr/bin/env python",
        "File with login and pass to telnet connect to devices",
        "if i == 10: break",
        "dic must contain the key 'switches'",
        "if not, change it below"
    ],
    "docstrings": [
        "\"\"\"\n    Usage: {} device_dictionary.yaml command template output.yaml\n        - device_dictionary - dict file in yaml format\n        - command - e.q 'show vlan'\n        - template - file or None\n        - output - file to result in yaml format\n    \"\"\"",
        "\"\"\"\n    Connect to host by telnet.\n    Connection timeout 5 seconds\n    \"\"\"",
        "\"\"\" Func for use multiproces \"\"\""
    ],
    "functions": [
        "search",
        "conn",
        "do_proccesses"
    ],
    "classes": []
}