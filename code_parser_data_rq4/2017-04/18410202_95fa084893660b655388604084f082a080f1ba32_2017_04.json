{
    "identifiers": [
        "pytest",
        "wee_slack",
        "EventRouter",
        "ProcessNotImplemented",
        "SlackRequest",
        "mock_weechat",
        "EventRouter",
        "e",
        "receive_json",
        "len",
        "e",
        "queue",
        "EventRouter",
        "e",
        "proc",
        "x",
        "y",
        "x",
        "e",
        "receive_json",
        "e",
        "handle_next",
        "len",
        "e",
        "queue",
        "EventRouter",
        "e",
        "proc",
        "x",
        "y",
        "x",
        "e",
        "receive_json",
        "e",
        "handle_next",
        "len",
        "e",
        "queue",
        "EventRouter",
        "e",
        "receive_json",
        "pytest",
        "raises",
        "ProcessNotImplemented",
        "e",
        "handle_next",
        "mock_weechat",
        "EventRouter",
        "e",
        "store_context",
        "SlackRequest",
        "context",
        "e",
        "receive_httprequest_callback",
        "context",
        "e",
        "store_context",
        "SlackRequest",
        "context",
        "e",
        "receive_httprequest_callback",
        "context",
        "e",
        "store_context",
        "SlackRequest",
        "context",
        "e",
        "receive_httprequest_callback",
        "context",
        "e",
        "handle_next",
        "e",
        "handle_next",
        "e",
        "handle_next",
        "e",
        "handle_next",
        "e",
        "context",
        "e",
        "store_context",
        "SlackRequest",
        "open",
        "read",
        "e",
        "receive_httprequest_callback",
        "context",
        "rtmstartdata",
        "e",
        "receive_httprequest_callback",
        "context",
        "rtmstartdata",
        "e",
        "handle_next",
        "t",
        "e",
        "teams",
        "c",
        "e",
        "teams",
        "t",
        "channels",
        "u",
        "e",
        "teams",
        "t",
        "users"
    ],
    "literals": [
        "'{}'",
        "'testfunc'",
        "'{\"type\": \"testfunc\"}'",
        "'local_testfunc'",
        "'{\"type\": \"local_testfunc\"}'",
        "'{\"type\": \"testfunc\"}'",
        "'xoxoxoxox'",
        "\"rtm.startold\"",
        "\"meh\"",
        "\"blah\"",
        "' {\"JSON\": \"MEH\", '",
        "'xoxoxoxox'",
        "\"rtm.startold\"",
        "\"meh\"",
        "\"blah\"",
        "' \"JSON2\": \"MEH\", '",
        "'xoxoxoxox'",
        "\"rtm.startold\"",
        "\"meh\"",
        "\"blah\"",
        "' \"JSON3\": \"MEH\"}'",
        "'xoxoxoxox'",
        "\"rtm.start\"",
        "\"meh\"",
        "\"blah\"",
        "'_pytest/data/http/rtm.start.json'",
        "'r'"
    ],
    "variables": [
        "e",
        "e",
        "e",
        "e",
        "e",
        "context",
        "context",
        "context",
        "context",
        "rtmstartdata"
    ],
    "comments": [
        "Sending valid json adds to the queue.",
        "Handling an event removes from the queue.",
        "Create a function to test we are called",
        "Handling a local event removes from the queue.",
        "Create a function to test we are called",
        "Handling an event without an associated processor",
        "raises an exception.",
        "Create a function to test we are called",
        "print len(e.reply_buffer)",
        "print len(e.reply_buffer)",
        "print len(e.reply_buffer)",
        "assert False",
        "print len(e.reply_buffer)",
        "print e.teams",
        "print vars(e.teams[t])",
        "print c",
        "print vars(u)",
        "e = EventRouter()",
        "# Create a function to test we are called",
        "e.receive_json('{\"type\": \"message\"}')",
        "e.handle_next()",
        "assert False",
        "assert False"
    ],
    "docstrings": [],
    "functions": [
        "test_EventRouter",
        "test_EventRouterReceivedata"
    ],
    "classes": []
}