{
    "identifiers": [
        "org",
        "snf4j",
        "core",
        "future",
        "org",
        "snf4j",
        "core",
        "session",
        "ISession",
        "session",
        "session",
        "setState",
        "FutureState",
        "SUCCESSFUL",
        "notifyWaiters",
        "cause",
        "cause",
        "setState",
        "FutureState",
        "FAILED",
        "cause",
        "cause",
        "notifyWaiters",
        "setState",
        "FutureState",
        "CANCELLED",
        "notifyWaiters"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* -------------------------------- MIT License --------------------------------\n * \n * Copyright (c) 2017 SNF4J contributors\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * -----------------------------------------------------------------------------",
        "* A future that represents the result of the asynchronous register methods of selector loops.\n * \n * @author <a href=\"http://snf4j.org\">SNF4J.ORG</a>",
        "* Constructs a register future associated with a session.\n\t * \n\t * @param session\n\t *            the session this future is associated with, or\n\t *            <code>null</code> if this future is not associated with any\n\t *            session",
        "* Marks this future as successful and notifies all threads waiting for this\n\t * future to be completed.",
        "* Aborts this future and notifies all threads waiting for this future to be\n\t * completed.\n\t * \n\t * @param cause\n\t *            the cause of the failure, or <code>null</code> if this future\n\t *            should be cancelled\n\t *"
    ],
    "functions": [
        "RegisterFuture",
        "success",
        "abort"
    ],
    "classes": [
        "RegisterFuture"
    ]
}