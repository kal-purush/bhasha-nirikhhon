{
    "identifiers": [
        "com",
        "apidocs",
        "test",
        "java",
        "lang",
        "reflect",
        "Field",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "regex",
        "Matcher",
        "java",
        "util",
        "regex",
        "Pattern",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "org",
        "springframework",
        "util",
        "MimeTypeUtils",
        "org",
        "springframework",
        "util",
        "StringUtils",
        "com",
        "alibaba",
        "fastjson",
        "JSONArray",
        "com",
        "alibaba",
        "fastjson",
        "JSONObject",
        "com",
        "lifeix",
        "football",
        "common",
        "util",
        "FileUtil",
        "com",
        "lifeix",
        "football",
        "common",
        "util",
        "HttpUtil",
        "com",
        "lifeix",
        "football",
        "common",
        "util",
        "StringUtil",
        "jcifs",
        "smb",
        "NtlmPasswordAuthentication",
        "logger",
        "LoggerFactory",
        "getLogger",
        "API_PREFIX",
        "reg_response",
        "reg_list",
        "reg_object",
        "p_response",
        "Pattern",
        "compile",
        "reg_response",
        "p_list",
        "Pattern",
        "compile",
        "reg_list",
        "p_object",
        "Pattern",
        "compile",
        "reg_object",
        "SYSTEMS",
        "temp_$ref_replacer",
        "TypeMappers",
        "Arrays",
        "asList",
        "key",
        "value",
        "clazz",
        "field",
        "clazz",
        "getDeclaredField",
        "key",
        "typeMapper",
        "TypeMappers",
        "field",
        "setAccessible",
        "value2",
        "field",
        "get",
        "typeMapper",
        "value",
        "equals",
        "value2",
        "typeMapper",
        "jsontype",
        "jsonformat",
        "typeMapper",
        "TypeMappers",
        "typeMapper",
        "getJsontype",
        "equals",
        "jsontype",
        "typeMapper",
        "getJsonformat",
        "equals",
        "jsonformat",
        "typeMapper",
        "args",
        "originalJsons",
        "getOriginalJsons",
        "newJsons",
        "parseOriginalJsons",
        "originalJsons",
        "putApiJsonFiles",
        "newJsons",
        "newJsons",
        "SMBDIR",
        "clientFilePath",
        "SMBDIR",
        "serviceFilePath",
        "SMBDIR",
        "reg_inner_path",
        "reg_outer_path",
        "p_inner",
        "Pattern",
        "compile",
        "reg_inner_path",
        "p_outer",
        "Pattern",
        "compile",
        "reg_outer_path",
        "i",
        "size",
        "newJsons",
        "size",
        "i",
        "size",
        "i",
        "newJsons",
        "get",
        "i",
        "json",
        "basePath",
        "json",
        "getString",
        "pattern",
        "i",
        "p_inner",
        "p_outer",
        "matcher",
        "pattern",
        "matcher",
        "basePath",
        "jsonName",
        "matcher",
        "find",
        "jsonName",
        "matcher",
        "group",
        "filePath",
        "i",
        "serviceFilePath",
        "clientFilePath",
        "StringUtil",
        "firstUpcase",
        "jsonName",
        "text",
        "json",
        "toJSONString",
        "replaceAll",
        "temp_$ref_replacer",
        "SmbUtil",
        "writeFile",
        "filePath",
        "text",
        "originalJsons",
        "listInner",
        "listOuter",
        "originalJson",
        "originalJsons",
        "jsonObject1",
        "JSONObject",
        "parseObject",
        "originalJson",
        "jsonObject2",
        "JSONObject",
        "parseObject",
        "originalJson",
        "StringUtils",
        "isEmpty",
        "jsonObject1",
        "originalJson",
        "StringUtils",
        "isEmpty",
        "jsonObject2",
        "originalJson",
        "parseInnerJsons",
        "jsonObject1",
        "parseOuterJsons",
        "jsonObject2",
        "jsonObject1",
        "put",
        "jsonObject1",
        "getString",
        "replaceAll",
        "jsonObject2",
        "put",
        "jsonObject2",
        "getString",
        "listInner",
        "add",
        "jsonObject1",
        "listOuter",
        "add",
        "jsonObject2",
        "Arrays",
        "asList",
        "listInner",
        "listOuter",
        "responsesJsonObject",
        "responsesJsonObject",
        "remove",
        "responsesJsonObject",
        "remove",
        "responsesJsonObject",
        "put",
        "JSONObject",
        "parse",
        "responsesJsonObject",
        "put",
        "JSONObject",
        "parse",
        "methodJsonObject",
        "responses200SchemaJsonObject",
        "producesJsonArray",
        "methodJsonObject",
        "getJSONArray",
        "responseType",
        "responses200SchemaJsonObject",
        "getString",
        "responseFormat",
        "responses200SchemaJsonObject",
        "getString",
        "producesJsonArray",
        "size",
        "producesJsonArray",
        "remove",
        "equals",
        "responseType",
        "StringUtils",
        "isEmpty",
        "responseFormat",
        "producesJsonArray",
        "add",
        "MimeTypeUtils",
        "TEXT_PLAIN_VALUE",
        "producesJsonArray",
        "add",
        "MimeTypeUtils",
        "APPLICATION_JSON_VALUE",
        "jsonObject1",
        "pathsJson",
        "jsonObject1",
        "getJSONObject",
        "path",
        "pathsJson",
        "keySet",
        "methodsJson",
        "pathsJson",
        "getJSONObject",
        "path",
        "methodKey",
        "methodsJson",
        "keySet",
        "methodJsonObject",
        "methodsJson",
        "getJSONObject",
        "methodKey",
        "responsesJsonObject",
        "methodJsonObject",
        "getJSONObject",
        "responses200JsonObject",
        "responsesJsonObject",
        "getJSONObject",
        "responses200SchemaJsonObject",
        "responses200JsonObject",
        "getJSONObject",
        "$refValue",
        "responses200SchemaJsonObject",
        "getString",
        "temp_$ref_replacer",
        "StringUtils",
        "isEmpty",
        "$refValue",
        "m",
        "p_response",
        "matcher",
        "$refValue",
        "flag",
        "m",
        "find",
        "flag",
        "typeMapper",
        "findTypeMapper",
        "$refValue",
        "typeMapper",
        "responses200SchemaJsonObject",
        "put",
        "temp_$ref_replacer",
        "StringUtil",
        "firstUpcase",
        "m",
        "group",
        "responses200SchemaJsonObject",
        "remove",
        "temp_$ref_replacer",
        "responses200SchemaJsonObject",
        "put",
        "typeMapper",
        "getJsontype",
        "StringUtils",
        "isEmpty",
        "typeMapper",
        "getJsonformat",
        "responses200SchemaJsonObject",
        "put",
        "typeMapper",
        "getJsonformat",
        "flag",
        "m2",
        "p_list",
        "matcher",
        "$refValue",
        "m2",
        "find",
        "dataType",
        "m2",
        "group",
        "typeMapper",
        "findTypeMapper",
        "dataType",
        "responses200SchemaJsonObject",
        "remove",
        "temp_$ref_replacer",
        "responses200SchemaJsonObject",
        "put",
        "itemsJsonObject",
        "typeMapper",
        "itemsJsonObject",
        "put",
        "typeMapper",
        "getJsontype",
        "StringUtils",
        "isEmpty",
        "typeMapper",
        "getJsonformat",
        "itemsJsonObject",
        "put",
        "typeMapper",
        "getJsonformat",
        "itemsJsonObject",
        "put",
        "temp_$ref_replacer",
        "StringUtil",
        "firstUpcase",
        "dataType",
        "responses200SchemaJsonObject",
        "put",
        "itemsJsonObject",
        "handleOtherResponseCode",
        "responsesJsonObject",
        "handleProduces",
        "methodJsonObject",
        "responses200SchemaJsonObject",
        "jsonObject2",
        "pathsJson",
        "jsonObject2",
        "getJSONObject",
        "path",
        "pathsJson",
        "keySet",
        "methodsJson",
        "pathsJson",
        "getJSONObject",
        "path",
        "methodKey",
        "methodsJson",
        "keySet",
        "methodJsonObject",
        "methodsJson",
        "getJSONObject",
        "methodKey",
        "responsesJsonObject",
        "methodJsonObject",
        "getJSONObject",
        "responses200JsonObject",
        "responsesJsonObject",
        "getJSONObject",
        "responses200SchemaJsonObject",
        "responses200JsonObject",
        "getJSONObject",
        "$refValue",
        "responses200SchemaJsonObject",
        "getString",
        "temp_$ref_replacer",
        "StringUtils",
        "isEmpty",
        "$refValue",
        "m",
        "p_object",
        "matcher",
        "$refValue",
        "m",
        "find",
        "dataType",
        "m",
        "group",
        "responses200SchemaJsonObject",
        "put",
        "temp_$ref_replacer",
        "StringUtil",
        "firstUpcase",
        "dataType",
        "responseType",
        "responses200SchemaJsonObject",
        "getString",
        "equals",
        "responseType",
        "responseFormat",
        "responses200SchemaJsonObject",
        "getString",
        "typeMapper",
        "findTypeMapperByTypeAndFormat",
        "responseType",
        "responseType",
        "responseFormat",
        "responseFormat",
        "typeMapper",
        "responses200SchemaJsonObject",
        "remove",
        "responses200SchemaJsonObject",
        "remove",
        "responses200SchemaJsonObject",
        "put",
        "temp_$ref_replacer",
        "typeMapper",
        "getResponse",
        "itemsJsonObject",
        "responses200SchemaJsonObject",
        "getJSONObject",
        "itemsResponseType",
        "itemsJsonObject",
        "getString",
        "itemsResponseFormat",
        "itemsJsonObject",
        "getString",
        "typeMapper2",
        "findTypeMapperByTypeAndFormat",
        "itemsResponseType",
        "itemsResponseType",
        "itemsResponseFormat",
        "itemsResponseFormat",
        "typeMapper2",
        "responses200SchemaJsonObject",
        "put",
        "temp_$ref_replacer",
        "typeMapper2",
        "getBasetype",
        "items$ref",
        "itemsJsonObject",
        "getString",
        "temp_$ref_replacer",
        "StringUtils",
        "isEmpty",
        "items$ref",
        "m",
        "p_object",
        "matcher",
        "items$ref",
        "flag",
        "m",
        "find",
        "flag",
        "responses200SchemaJsonObject",
        "put",
        "temp_$ref_replacer",
        "m",
        "group",
        "flag",
        "path",
        "methodKey",
        "responses200SchemaJsonObject",
        "remove",
        "responses200SchemaJsonObject",
        "remove",
        "handleOtherResponseCode",
        "responsesJsonObject",
        "handleProduces",
        "methodJsonObject",
        "responses200SchemaJsonObject",
        "addInexistentRefObjs",
        "jsonObject2",
        "jsonObject",
        "reg_refObj",
        "p_refObj",
        "Pattern",
        "compile",
        "reg_refObj",
        "jsonString",
        "jsonObject",
        "toJSONString",
        "matcher",
        "p_refObj",
        "matcher",
        "jsonString",
        "matcher",
        "find",
        "innerObj",
        "matcher",
        "group",
        "add",
        "innerObj",
        "definitionsJsonObject",
        "jsonObject",
        "getJSONObject",
        "definitionsKeySet",
        "definitionsJsonObject",
        "keySet",
        "innerObj",
        "newRefObjName",
        "innerObj",
        "definitionsKeySet",
        "contains",
        "newRefObjName",
        "refObj",
        "createInexistentRefObj",
        "innerObj",
        "definitionsJsonObject",
        "put",
        "newRefObjName",
        "refObj",
        "innerObj",
        "objName",
        "innerObj",
        "baseResponseObjJsonString",
        "baseResponseJsonObject",
        "JSONObject",
        "parseObject",
        "baseResponseObjJsonString",
        "typeMapper",
        "findTypeMapper",
        "objName",
        "dataJsonObject",
        "typeMapper",
        "dataJsonObject",
        "put",
        "typeMapper",
        "getJsontype",
        "StringUtils",
        "isEmpty",
        "typeMapper",
        "getJsonformat",
        "dataJsonObject",
        "put",
        "typeMapper",
        "getJsonformat",
        "reg_list",
        "p_list",
        "Pattern",
        "compile",
        "reg_list",
        "matcher",
        "p_list",
        "matcher",
        "innerObj",
        "flag",
        "matcher",
        "find",
        "flag",
        "dataJsonObject",
        "put",
        "listInnerObj",
        "matcher",
        "group",
        "typeMapper2",
        "findTypeMapper",
        "listInnerObj",
        "itemsJsonObject",
        "typeMapper2",
        "itemsJsonObject",
        "put",
        "typeMapper2",
        "getJsontype",
        "StringUtils",
        "isEmpty",
        "typeMapper2",
        "getJsonformat",
        "itemsJsonObject",
        "put",
        "typeMapper2",
        "getJsonformat",
        "itemsJsonObject",
        "put",
        "listInnerObj",
        "dataJsonObject",
        "put",
        "itemsJsonObject",
        "flag",
        "dataJsonObject",
        "put",
        "innerObj",
        "baseResponsePropertiesJsonObject",
        "baseResponseJsonObject",
        "getJSONObject",
        "baseResponsePropertiesJsonObject",
        "put",
        "dataJsonObject",
        "baseResponseJsonObject",
        "i",
        "len",
        "SYSTEMS",
        "length",
        "i",
        "len",
        "i",
        "system",
        "SYSTEMS",
        "i",
        "url",
        "API_PREFIX",
        "system",
        "result",
        "HttpUtil",
        "sendGet",
        "url",
        "StringUtils",
        "isEmpty",
        "result",
        "url",
        "result",
        "result",
        "replaceAll",
        "temp_$ref_replacer",
        "add",
        "result",
        "e",
        "e",
        "getMessage"
    ],
    "literals": [
        "\"http://127.0.0.1:8080/football/\"",
        "\"#/definitions/Response«([^\\\\s'\\\"«»]*)»\"",
        "\"#/definitions/Response«List«([^\\\\s'\\\"«»]*)»»\"",
        "\"#/definitions/(?!Response)([^\\\\s'\\\"«»]*)\"",
        "\"user\"",
        "\"￥ref\"",
        "\"Byte\"",
        "\"byte\"",
        "\"string\"",
        "\"byte\"",
        "\"#/definitions/Response«byte»\"",
        "\"Character\"",
        "\"char\"",
        "\"string\"",
        "\"\"",
        "\"#/definitions/Response«Character»\"",
        "\"Boolean\"",
        "\"boolean\"",
        "\"boolean\"",
        "\"\"",
        "\"#/definitions/Response«boolean»\"",
        "\"Integer\"",
        "\"int\"",
        "\"integer\"",
        "\"int32\"",
        "\"#/definitions/Response«int»\"",
        "\"Short\"",
        "\"short\"",
        "\"integer\"",
        "\"int32\"",
        "\"#/definitions/Response«int»\"",
        "\"Long\"",
        "\"long\"",
        "\"integer\"",
        "\"int64\"",
        "\"#/definitions/Response«long»\"",
        "\"Double\"",
        "\"double\"",
        "\"number\"",
        "\"double\"",
        "\"#/definitions/Response«double»\"",
        "\"Float\"",
        "\"float\"",
        "\"number\"",
        "\"float\"",
        "\"#/definitions/Response«float»\"",
        "\"\"",
        "\"string\"",
        "\"string\"",
        "\"\"",
        "\"#/definitions/Response«string»\"",
        "\"smb://192.168.1.17/fb/temp/api_docs/\"",
        "\"outer/\"",
        "\"inner/\"",
        "\"/([^/]*)\"",
        "\"/v2/football/([^/]*)\"",
        "\"basePath\"",
        "\".json\"",
        "\"\\\\$ref\"",
        "\"parseOriginalJsons error, innerJson is empty. originalJson=\"",
        "\"parseOriginalJsons error, outerJson is empty. originalJson=\"",
        "\"basePath\"",
        "\"basePath\"",
        "\"/football\"",
        "\"\"",
        "\"basePath\"",
        "\"/v2\"",
        "\"basePath\"",
        "\"201\"",
        "\"404\"",
        "\"401\"",
        "\"{\\\"description\\\":\\\"未登录\\\"}\"",
        "\"403\"",
        "\"{\\\"description\\\":\\\"无权访问\\\"}\"",
        "\"produces\"",
        "\"type\"",
        "\"format\"",
        "\"string\"",
        "\"paths\"",
        "\"responses\"",
        "\"200\"",
        "\"schema\"",
        "\"response\"",
        "\"#/definitions/\"",
        "\"type\"",
        "\"format\"",
        "\"basetype\"",
        "\"type\"",
        "\"array\"",
        "\"type\"",
        "\"format\"",
        "\"#/definitions/\"",
        "\"items\"",
        "\"paths\"",
        "\"responses\"",
        "\"200\"",
        "\"schema\"",
        "\"#/definitions/Response«\"",
        "\"»\"",
        "\"type\"",
        "\"array\"",
        "\"format\"",
        "\"\"",
        "\"\"",
        "\"type\"",
        "\"format\"",
        "\"items\"",
        "\"type\"",
        "\"format\"",
        "\"\"",
        "\"\"",
        "\"#/definitions/Response«List«\"",
        "\"»»\"",
        "\"#/definitions/Response«List«\"",
        "\"»»\"",
        "\"p_object匹配失败，path=\"",
        "\",method=\"",
        "\"type\"",
        "\"items\"",
        "\"#/definitions/Response«([^\\\\s'\\\"]*)»\"",
        "\"definitions\"",
        "\"Response«\"",
        "\"»\"",
        "\"Response«\"",
        "\"»\"",
        "\"{description: \\\"通用的接口返回结构\\\",\"",
        "\"type: \\\"object\\\",\"",
        "\"properties: {\"",
        "\"code: {type: \\\"string\\\"},\"",
        "\"message: {type: \\\"string\\\"}}}\"",
        "\"response\"",
        "\"#/definitions/\"",
        "\"type\"",
        "\"format\"",
        "\"List«([^\\\\s'\\\"]*)»\"",
        "\"type\"",
        "\"array\"",
        "\"basetype\"",
        "\"type\"",
        "\"format\"",
        "\"$ref\"",
        "\"#/definitions/\"",
        "\"items\"",
        "\"$ref\"",
        "\"#/definitions/\"",
        "\"properties\"",
        "\"data\"",
        "\"/v2/api-docs?key=visitor\"",
        "\"HttpUtil.sendGet error, no response. url:\"",
        "\"\\\\$ref\"",
        "\"getOriginalJsons error, message:\""
    ],
    "variables": [],
    "comments": [
        "private static final String API_PREFIX = \"http://54.223.127.33:8000/football/\";",
        "接口返回类型为String",
        "\"text/plain\"",
        "\"application/json\"",
        "匹配成功",
        "\"xxx\"为引用类型",
        "修改返回类型",
        "\"xxx\"为基本数据类型或string类型",
        "移除$ref，改为基本数据类型的书写格式",
        "修改返回类型",
        "\"#/definitions/Response《xxx》\"不会匹配成功，只有\"#/definitions/Response《List《xxx》》\"才会匹配成功",
        "匹配成功",
        "获得数组元素类型",
        "移除$ref，改为基本数据类型的书写格式",
        "修改返回类型",
        "#/definitions/Response《List《xxx》》中的xxx是基本数据类型或string类型",
        "#/definitions/Response《List《xxx》》中的xxx是引用类型",
        "获得返回数据类型",
        "修改返回类型",
        "返回类型是基本数据类型或string类型",
        "返回类型是数组",
        "数组元素为基本数据类型或string类型",
        "数组元素是引用类型",
        "匹配引用类型的数组元素成功",
        "\"Response«\"+innerObj+\"»\"",
        "引用对象已经存在",
        "innerObj数组元素为基本数据类型或string类型",
        "innerObj数组元素为引用类型"
    ],
    "docstrings": [
        "* @author xule\n * @version 2017年4月25日 下午1:30:40",
        "* 获得原始json",
        "* 解析json",
        "* 将json生成文件，并写入指定目录的文件夹中",
        "* 将json生成文件，并写入指定目录的文件夹中\n     * @author xule\n     * @version 2017年4月27日 下午5:21:04\n     * @param \n     * @return void\n     * @throws Exception",
        "* json写入文件",
        "* 解析原始json\n     * @author xule\n     * @version 2017年4月27日 下午5:18:48\n     * @param \n     * @return List<List<JSONObject>>",
        "* 处理responses除200以外的其他code\n     * @author xule\n     * @version 2017年4月27日 下午4:04:59\n     * @param \n     * @return void",
        "* 处理produces\n     * @author xule\n     * @version 2017年4月27日 下午4:07:25\n     * @param \n     * @return void",
        "* 将json解析成服务端内部使用的形式\n     * \n     * @author xule\n     * @version 2017年4月25日 下午2:01:52\n     * @param\n     * @return String\n     * @throws Exception",
        "************************************************** 处理responses *******************************************************",
        "* 处理responses.200",
        "* $ref存在，可能使用了Response进行了包装，也可能是其他对象的引用",
        "* 匹配\"#/definitions/Response《xxx》\"",
        "* 匹配\"#/definitions/Response《xxx》\"失败，尝试匹配\"#/definitions/Response《List《xxx》》\"",
        "* 处理responses其他code",
        "* 处理produces",
        "* 将json解析成客户端使用的形式\n     * \n     * @author xule\n     * @version 2017年4月25日 下午2:01:54\n     * @param\n     * @return String\n     * @throws Exception",
        "************************************************** 处理responses *******************************************************",
        "* 处理responses.200",
        "* $ref存在，可能使用了Response进行了包装(#/definitions/Response\n                 * <Obj>)，也可能是对象的引用(#/definitions/Obj)",
        "* 匹配#/definitions/Obj",
        "* 匹配成功，说明返回类型为$ref=\"#/definitions/Obj\"形式，对其进行包装。如果匹配失败，则返回类型已经使用了Response进行了包装(\n                     * #/definitions/Response<Obj>)，不需要做任何处理",
        "* $ref不存在，则需要使用Response进行包装",
        "* 返回类型是基本数据类型或string类型，对其进行包装",
        "* 处理responses其他code",
        "* 处理produces",
        "* 添加各方法中所引用的不存在的对象，只处理\"#/definitions/Response<xxx>\"形式的引用",
        "* 添加各方法中所引用的不存在的对象，只处理\"#/definitions/Response<xxx>\"形式的引用\n     * @author xule\n     * @version 2017年4月27日 下午3:09:35\n     * @param \n     * @return void\n     * @throws Exception",
        "* 匹配所有Response对象引用，并获取包装对象",
        "* 获得已经存在的引用对象",
        "* 获得不存在的引用对象，并将不存在的引用对象添加到jsonObject中",
        "* 引用对象不存在，则创建引用对象",
        "* 将新创建的引用对象添加到jsonObject中",
        "* 创建经Response包装的引用对象\n     * @author xule\n     * @version 2017年4月27日 下午4:12:53\n     * @param \n     * @return JSONObject\n     * @throws Exception",
        "* 获得基本的Response对象",
        "* 判断innerObj是否为基本数据类型或string类型",
        "* innerObj是基本数据类型或string类型",
        "* innerObj是引用类型或数组",
        "* innerObj是数组",
        "* innerObj是引用类型",
        "* 给Response设置data属性",
        "* 发送http请求，获得原始json数据\n     * @author xule\n     * @version 2017年4月25日 下午2:02:46\n     * @param\n     * @return List<String>",
        "* 使用￥ref临时替换$ref，防止出现循环引用"
    ],
    "functions": [
        "TypeMapper",
        "findTypeMapper",
        "TypeMapper",
        "findTypeMapperByTypeAndFormat",
        "main",
        "putApiJsonFiles",
        "parseOriginalJsons",
        "handleOtherResponseCode",
        "handleProduces",
        "parseInnerJsons",
        "parseOuterJsons",
        "addInexistentRefObjs",
        "JSONObject",
        "createInexistentRefObj",
        "getOriginalJsons"
    ],
    "classes": [
        "CreateJsons"
    ]
}