{
    "identifiers": [
        "accepted",
        "Q531_Q540",
        "util",
        "TreeNode",
        "root",
        "helper",
        "root",
        "root",
        "node",
        "sum",
        "node",
        "sum",
        "node",
        "val",
        "helper",
        "node",
        "right",
        "sum",
        "helper",
        "node",
        "left",
        "node",
        "val"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Given a Binary Search Tree (BST), convert it to a Greater Tree such that\n * every key of the original BST is changed to the original key plus sum of\n * all keys greater than the original key in BST.\n * <p>\n * Example:\n * <p>\n * Input: The root of a Binary Search Tree like this:\n * 5\n * /   \\\n * 2     13\n * <p>\n * Output: The root of a Greater Tree like this:\n * 18\n * /   \\\n * 20     13"
    ],
    "functions": [
        "TreeNode",
        "convertBST",
        "helper"
    ],
    "classes": [
        "Q538"
    ]
}