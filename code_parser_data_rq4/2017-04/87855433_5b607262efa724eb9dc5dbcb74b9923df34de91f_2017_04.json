{
    "identifiers": [
        "e",
        "t",
        "n",
        "r",
        "o",
        "u",
        "n",
        "o",
        "t",
        "o",
        "require",
        "require",
        "u",
        "a",
        "a",
        "o",
        "i",
        "i",
        "o",
        "o",
        "f",
        "f",
        "n",
        "o",
        "t",
        "o",
        "l",
        "e",
        "t",
        "o",
        "e",
        "s",
        "n",
        "n",
        "e",
        "l",
        "l",
        "e",
        "t",
        "n",
        "r",
        "n",
        "o",
        "require",
        "require",
        "o",
        "r",
        "o",
        "s",
        "r",
        "o",
        "s",
        "require",
        "exports",
        "require",
        "Stats",
        "val",
        "val",
        "val",
        "img",
        "img",
        "img",
        "val",
        "parseInt",
        "val",
        "val",
        "parseInt",
        "val",
        "val",
        "parseInt",
        "val",
        "val",
        "parseInt",
        "val",
        "requestAnimationFrame",
        "cell",
        "ctx",
        "ctx",
        "ctx",
        "cell",
        "cell",
        "cell",
        "path",
        "ctx",
        "path",
        "path",
        "ctx",
        "ctx",
        "ctx",
        "cell",
        "cell",
        "ctx",
        "parseInt",
        "parseInt",
        "_",
        "cellsX",
        "cellsY",
        "i",
        "i",
        "cellsX",
        "i",
        "cellsX",
        "cellsX",
        "cellsY",
        "cellWidth",
        "x",
        "cellHeight",
        "y",
        "cellsX",
        "cellsY",
        "centerCellX",
        "x",
        "cellsX",
        "centerCellY",
        "y",
        "cellsY",
        "cellWidth",
        "cellHeight",
        "y",
        "posX",
        "xOffset",
        "halfCellWidth",
        "posY",
        "yOffset",
        "halfCellHeight",
        "Vector2",
        "posX",
        "posY",
        "halfCellHeight",
        "Vector2",
        "posX",
        "halfCellWidth",
        "posY",
        "halfCellHeight",
        "Vector2",
        "posX",
        "cellWidth",
        "posY",
        "halfCellHeight",
        "Vector2",
        "posX",
        "halfCellWidth",
        "posY",
        "cellHeight",
        "halfCellHeight",
        "Vector2",
        "Vector2",
        "maxOffsetX",
        "maxOffsetY",
        "cell",
        "sizer",
        "size",
        "size",
        "$",
        "$canvas",
        "$canvas",
        "cell",
        "i",
        "cell",
        "cell",
        "Vector2",
        "x",
        "y",
        "x",
        "y",
        "Vector2",
        "xtag",
        "componentName",
        "require",
        "exports",
        "srcWidth",
        "srcHeight",
        "destWidth",
        "destHeight",
        "srcWidth",
        "srcHeight",
        "imageRatio",
        "imageWidth",
        "destWidth",
        "imageHeight",
        "imageWidth",
        "imageRatio",
        "imageHeight",
        "destHeight",
        "imageHeight",
        "destHeight",
        "imageWidth",
        "destHeight",
        "imageRatio",
        "imageHeight",
        "destHeight",
        "imageWidth",
        "imageHeight",
        "imageRatio",
        "imageWidth",
        "destWidth",
        "imageWidth",
        "destWidth",
        "imageHeight",
        "destWidth",
        "imageRatio",
        "imageWidth",
        "imageHeight",
        "destWidth",
        "srcWidth",
        "destHeight",
        "srcHeight",
        "sizer",
        "sizer"
    ],
    "literals": [
        "\"function\"",
        "\"Cannot find module '\"",
        "\"'\"",
        "\"MODULE_NOT_FOUND\"",
        "\"function\"",
        "'poly-refractor'",
        "'./sizer'",
        "'img'",
        "''",
        "'<canvas/>'",
        "'inline-block'",
        "'absolute'",
        "'50%'",
        "'50%'",
        "'translate(-50%, -50%)'",
        "'2d'",
        "','",
        "\"./sizer\""
    ],
    "variables": [
        "a",
        "f",
        "l",
        "n",
        "i",
        "o",
        "componentName",
        "sizer",
        "lifecycle",
        "cellGeneratorPresets",
        "accessors",
        "img",
        "methods",
        "ctx",
        "cellsX",
        "cellsY",
        "x",
        "y",
        "cellWidth",
        "cellHeight",
        "posX",
        "posY",
        "centerCellX",
        "centerCellY",
        "maxOffsetX",
        "maxOffsetY",
        "halfCellWidth",
        "halfCellHeight",
        "xOffset",
        "yOffset",
        "cell",
        "size",
        "$canvas",
        "prototype",
        "sizer",
        "imageRatio",
        "imageWidth",
        "imageHeight"
    ],
    "comments": [
        "method to use for creating cells\n\t\tfunction(){...}",
        "nothing to draw",
        "render the cells!",
        "console.log('createCells', this.cellsX, this.cellsY, (this.cellsX + 2) * (this.cellsY + 2))",
        "track path coords and current offset",
        "console.log(x, y, i)",
        "console.log(maxOffsetX, maxOffsetY)",
        "diamond path",
        "left",
        "top",
        "right",
        "bottom",
        "box path",
        "new Vector2(posX, posY),",
        "new Vector2(posX + cellWidth, posY),",
        "new Vector2(posX + cellWidth, posY + cellHeight),",
        "new Vector2(posX, posY + cellHeight)",
        "show (){ return new Promise(resolve => {",
        "this.cells.forEach(cell => {",
        "var max = cell.maxOffset.clone()",
        "TweenMax.fromTo(cell.offset, this.duration, {",
        "x: max.x, y: max.y,",
        "}, {",
        "x: 0, y: 0,",
        "ease: Power3.easeInOut",
        "})",
        "})",
        "TweenMax.to(this, this.duration, {opacity: 1})",
        "this.hidden\t= false",
        "setTimeout(() => {",
        "resolve()",
        "}, this.duration * 1000)",
        "})},",
        "hide (){ return new Promise(resolve => {",
        "this.cells.forEach((cell, i) => {",
        "var max = cell.maxOffset.clone()",
        "TweenMax.to(cell.offset, this.duration, {",
        "x: max.x, y: max.y,",
        "ease: Power3.easeOut",
        "})",
        "})",
        "TweenMax.to(this, this.duration, {opacity: 0})",
        "setTimeout(() => {",
        "this.hidden\t= true",
        "resolve()",
        "}, this.duration * 1000)",
        "})},",
        "var getDistance = function(x1, x2, y1, y2){",
        "return Math.sqrt( (x1-x2)*(x1-x2) + (y1-y2)*(y1-y2) )",
        "}",
        "console.log('sizer.contain', srcWidth, srcHeight, destWidth, destHeight)",
        "landscape",
        "portrait"
    ],
    "docstrings": [],
    "functions": [
        "s",
        "created",
        "inserted",
        "removed",
        "get",
        "get",
        "get",
        "get",
        "get",
        "draw",
        "createCells",
        "invalidateSize",
        "render",
        "reset",
        "toString",
        "clone",
        "contain"
    ],
    "classes": [
        "Cell",
        "Vector2"
    ]
}