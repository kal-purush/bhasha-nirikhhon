{
    "identifiers": [
        "burp",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "javax",
        "swing",
        "JMenuItem",
        "java",
        "awt",
        "ActionEvent",
        "java",
        "awt",
        "ActionListener",
        "java",
        "util",
        "MENU_NAME",
        "mycallbacks",
        "helpers",
        "DIRECTORIES",
        "callbacks",
        "mycallbacks",
        "callbacks",
        "helpers",
        "mycallbacks",
        "getHelpers",
        "mycallbacks",
        "setExtensionName",
        "mycallbacks",
        "registerContextMenuFactory",
        "mycallbacks",
        "registerIntruderPayloadGeneratorFactory",
        "Override",
        "invocation",
        "invocation",
        "getInvocationContext",
        "invocation",
        "getInvocationContext",
        "ret",
        "menuItem",
        "MENU_NAME",
        "menuItem",
        "addActionListener",
        "action",
        "action",
        "getActionCommand",
        "equals",
        "MENU_NAME",
        "item",
        "invocation",
        "getSelectedMessages",
        "first",
        "item",
        "is_secure",
        "first",
        "getProtocol",
        "toString",
        "payload_positions",
        "getPayloadPos",
        "first",
        "mycallbacks",
        "sendToIntruder",
        "first",
        "getHost",
        "first",
        "getPort",
        "is_secure",
        "first",
        "getRequest",
        "payload_positions",
        "ret",
        "add",
        "menuItem",
        "ret",
        "first",
        "method_pos",
        "getHttpMethod",
        "first",
        "start_dir",
        "method_pos",
        "end_dir",
        "start_dir",
        "first",
        "getUrl",
        "getPath",
        "length",
        "dir_pos",
        "start_dir",
        "end_dir",
        "payload_positions",
        "payload_positions",
        "add",
        "method_pos",
        "payload_positions",
        "add",
        "dir_pos",
        "payload_positions",
        "url",
        "mytree",
        "mycallbacks",
        "getSiteMap",
        "url",
        "dirs",
        "req",
        "mytree",
        "temp",
        "req",
        "getUrl",
        "getPath",
        "temp",
        "contains",
        "temp",
        "temp",
        "substring",
        "temp",
        "lastIndexOf",
        "temp",
        "endsWith",
        "temp",
        "dirs",
        "add",
        "temp",
        "dirs",
        "req",
        "req_string",
        "helpers",
        "bytesToString",
        "req",
        "getRequest",
        "method_pos",
        "req_string",
        "indexOf",
        "method_pos",
        "Override",
        "attack",
        "dirs",
        "getDirs",
        "attack",
        "getHttpService",
        "getProtocol",
        "attack",
        "getHttpService",
        "getHost",
        "myPayloads",
        "DIRECTORIES",
        "clear",
        "directory",
        "dirs",
        "DIRECTORIES",
        "add",
        "directory",
        "getBytes",
        "myPayloads",
        "Override",
        "payloadIndex",
        "Override",
        "payloadIndex",
        "DIRECTORIES",
        "size",
        "Override",
        "baseValue",
        "payload",
        "DIRECTORIES",
        "get",
        "payloadIndex",
        "payloadIndex",
        "payload",
        "Override",
        "payloadIndex"
    ],
    "literals": [
        "\"Send to Meth0dMan\"",
        "\"Meth0dMan\"",
        "\"http\"",
        "\".\"",
        "\"/\"",
        "\"/\"",
        "\" \"",
        "\"://\"",
        "\"Meth0dMan Payloads\""
    ],
    "variables": [
        "mycallbacks",
        "helpers",
        "payloadIndex"
    ],
    "comments": [
        "global variables",
        "setup the callbacks",
        "register menu item for only menus [0,2,4,6]",
        "new 'Send To Meth0dman' button",
        "if clicked on button",
        "grab request",
        "ternary operator return false is http, else return true",
        "set payload positions as method and root node",
        "create a new intruder with selected",
        "No new menu on other",
        "get all relevant positions",
        "push all to final List",
        "get whole URL tree (spider/discover content first!)",
        "remove any files/extensions",
        "add folder extension",
        "up to the first space - the method",
        "grab all directories as hashset",
        "generate the payload list",
        "return each directory"
    ],
    "docstrings": [
        "* Meth0dMan\n * \n * Generate custom intruder payload of all crawled directories;\n * - Useful for checking methods on all directories.\n * - Easy mode enabled: right click to send to intruder.\n * \n * Author: Alexis Vanden Eijnde\n * Date: 10/03/2016\n * Version: 1.1.03"
    ],
    "functions": [
        "registerExtenderCallbacks",
        "createMenuItems",
        "actionPerformed",
        "getPayloadPos",
        "getDirs",
        "getHttpMethod",
        "IIntruderPayloadGenerator",
        "createNewInstance",
        "getGeneratorName",
        "hasMorePayloads",
        "getNextPayload",
        "reset"
    ],
    "classes": [
        "BurpExtender",
        "IntruderPayloadGenerator"
    ]
}