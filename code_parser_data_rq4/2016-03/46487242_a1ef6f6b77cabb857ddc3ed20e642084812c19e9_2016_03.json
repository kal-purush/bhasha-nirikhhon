{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Threading",
        "Tasks",
        "Affecto",
        "Patterns",
        "Domain",
        "UnitOfWork",
        "TUnitOfWork",
        "TAggregate",
        "AsyncDomainRepositoryBase",
        "TAggregate",
        "TUnitOfWork",
        "IUnitOfWork",
        "TAggregate",
        "AggregateRoot",
        "IDomainEventHandlerResolver",
        "eventHandlerResolver",
        "IUnitOfWorkDomainEventHandlerResolver",
        "unitOfWorkEventHandlerResolver",
        "TUnitOfWork",
        "unitOfWork",
        "UnitOfWorkDomainEventBroker",
        "TUnitOfWork",
        "unitOfWorkEventHandlerResolver",
        "unitOfWork",
        "unitOfWork",
        "ArgumentNullException",
        "unitOfWork",
        "unitOfWork",
        "immediateEventBroker",
        "DomainEventBroker",
        "eventHandlerResolver",
        "TAggregate",
        "aggregateRoot",
        "ApplyChangesAsync",
        "aggregateRoot",
        "unitOfWork",
        "SaveChanges",
        "ExecuteAppliedEventsAsync",
        "aggregateRoot",
        "immediateEventBroker",
        "TAggregate",
        "aggregateRoots",
        "IList",
        "TAggregate",
        "aggregateRoots",
        "IList",
        "TAggregate",
        "aggregateRoots",
        "ToList",
        "ApplyChangesAsync",
        "aggregates",
        "unitOfWork",
        "SaveChanges",
        "TAggregate",
        "aggregateRoot",
        "aggregates",
        "ExecuteAppliedEventsAsync",
        "aggregateRoot",
        "immediateEventBroker"
    ],
    "literals": [
        "\"unitOfWork\""
    ],
    "variables": [
        "TUnitOfWork",
        "unitOfWork",
        "DomainEventBroker",
        "immediateEventBroker",
        "aggregates"
    ],
    "comments": [
        "Base class for implementing domain repositories using the Unit of Work pattern for aggregate root types.",
        "</summary>",
        "<typeparam name=\"TAggregate\">The type of the aggregate root.</typeparam>",
        "<typeparam name=\"TUnitOfWork\">The type of the Unit of Work context.</typeparam>",
        "Initializes a new instance of the <see cref=\"UnitOfWorkDomainRepository{TUnitOfWork, TAggregate}\"/> class.",
        "</summary>",
        "<param name=\"eventHandlerResolver\">Event handler resolver for finding domain event handlers.</param>",
        "<param name=\"unitOfWorkEventHandlerResolver\">Event handler resolver for finding unit-of-work domain event handlers.</param>",
        "<param name=\"unitOfWork\">The Unit of Work context instance.</param>",
        "Asynchronously executes all unit-of-work events that have been applied to the given aggregate root instance, then commits the unit of work.",
        "After a succesfull commit all other domain events are executed.",
        "</summary>",
        "<param name=\"aggregateRoot\">The changed aggregate root instance.</param>",
        "Asynchronously executes all unit-of-work events that have been applied to the given set of aggregate root instances, then commits the unit of work.",
        "After a succesfull commit all other domain events are executed.",
        "</summary>",
        "<param name=\"aggregateRoots\">The changed aggregate root instances.</param>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "AsyncUnitOfWorkDomainRepository",
        "ApplyChangesAsync",
        "ApplyChangesAsync"
    ],
    "classes": [
        "AsyncUnitOfWorkDomainRepository"
    ]
}