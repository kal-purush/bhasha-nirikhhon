{
    "identifiers": [
        "with_statement",
        "optparse",
        "OptionParser",
        "OptionParser",
        "usage",
        "_cmd_parser",
        "add_option",
        "_opt",
        "action",
        "help",
        "_opt",
        "metavar",
        "help",
        "_opt",
        "help",
        "_opt",
        "action",
        "help",
        "_opt",
        "action",
        "help",
        "_opt",
        "action",
        "help",
        "_cmd_parser",
        "parse_args",
        "_cmd_options",
        "server",
        "_cmd_options",
        "server",
        "startswith",
        "gevent",
        "monkey",
        "gevent",
        "monkey",
        "patch_all",
        "base64",
        "cgi",
        "email",
        "utils",
        "functools",
        "hmac",
        "imp",
        "itertools",
        "mimetypes",
        "os",
        "re",
        "subprocess",
        "sys",
        "tempfile",
        "threading",
        "time",
        "warnings",
        "datetime",
        "date",
        "datedate",
        "datetime",
        "timedelta",
        "tempfile",
        "TemporaryFile",
        "traceback",
        "format_exc",
        "print_exc",
        "inspect",
        "getargspec",
        "unicodedata",
        "normalize",
        "simplejson",
        "dumps",
        "json_dumps",
        "loads",
        "json_lds",
        "ImportError",
        "json",
        "dumps",
        "json_dumps",
        "loads",
        "json_lds",
        "ImportError",
        "django",
        "utils",
        "simplejson",
        "dumps",
        "json_dumps",
        "loads",
        "json_lds",
        "ImportError",
        "data",
        "ImportError",
        "json_dumps",
        "sys",
        "version_info",
        "py",
        "py",
        "py",
        "sys",
        "exc_info",
        "sys",
        "stdout",
        "write",
        "sys",
        "stderr",
        "write",
        "IOError",
        "x",
        "sys",
        "stdout",
        "write",
        "x",
        "x",
        "sys",
        "stderr",
        "write",
        "x",
        "py3k",
        "http",
        "client",
        "httplib",
        "_thread",
        "thread",
        "urllib",
        "parse",
        "urljoin",
        "SplitResult",
        "UrlSplitResult",
        "urllib",
        "parse",
        "urlencode",
        "quote",
        "urlquote",
        "unquote",
        "urlunquote",
        "functools",
        "partial",
        "urlunquote",
        "encoding",
        "http",
        "cookies",
        "SimpleCookie",
        "collections",
        "MutableMapping",
        "DictMixin",
        "pickle",
        "io",
        "BytesIO",
        "configparser",
        "ConfigParser",
        "s",
        "json_lds",
        "touni",
        "s",
        "x",
        "hasattr",
        "x",
        "a",
        "a",
        "a",
        "with_traceback",
        "a",
        "httplib",
        "thread",
        "urlparse",
        "urljoin",
        "SplitResult",
        "UrlSplitResult",
        "urllib",
        "urlencode",
        "quote",
        "urlquote",
        "unquote",
        "urlunquote",
        "Cookie",
        "SimpleCookie",
        "itertools",
        "imap",
        "cPickle",
        "pickle",
        "StringIO",
        "StringIO",
        "BytesIO",
        "ConfigParser",
        "SafeConfigParser",
        "ConfigParser",
        "py25",
        "warnings",
        "warn",
        "msg",
        "DeprecationWarning",
        "UserDict",
        "DictMixin",
        "it",
        "it",
        "next",
        "collections",
        "MutableMapping",
        "DictMixin",
        "unicode",
        "json_lds",
        "eval",
        "compile",
        "s",
        "enc",
        "s",
        "encode",
        "enc",
        "isinstance",
        "s",
        "unicode",
        "s",
        "s",
        "enc",
        "err",
        "s",
        "decode",
        "enc",
        "err",
        "isinstance",
        "s",
        "unicode",
        "s",
        "touni",
        "py3k",
        "tob",
        "py31",
        "io",
        "TextIOWrapper",
        "TextIOWrapper",
        "wrapper",
        "wrapped",
        "a",
        "ka",
        "functools",
        "update_wrapper",
        "wrapper",
        "wrapped",
        "a",
        "ka",
        "AttributeError",
        "message",
        "hard",
        "warnings",
        "warn",
        "message",
        "DeprecationWarning",
        "stacklevel",
        "data",
        "isinstance",
        "data",
        "data",
        "data",
        "data",
        "attr",
        "key",
        "read_only",
        "attr",
        "key",
        "read_only",
        "attr",
        "key",
        "read_only",
        "func",
        "functools",
        "update_wrapper",
        "func",
        "updated",
        "getter",
        "key",
        "func",
        "key",
        "func",
        "obj",
        "cls",
        "obj",
        "key",
        "getattr",
        "obj",
        "attr",
        "key",
        "storage",
        "getter",
        "obj",
        "storage",
        "key",
        "obj",
        "value",
        "read_only",
        "AttributeError",
        "getattr",
        "obj",
        "attr",
        "key",
        "value",
        "obj",
        "read_only",
        "AttributeError",
        "getattr",
        "obj",
        "attr",
        "key",
        "func",
        "getattr",
        "func",
        "func",
        "obj",
        "cls",
        "obj",
        "obj",
        "__dict__",
        "func",
        "func",
        "obj",
        "value",
        "func",
        "functools",
        "update_wrapper",
        "func",
        "updated",
        "func",
        "obj",
        "cls",
        "getter",
        "cls",
        "setattr",
        "cls",
        "value",
        "value",
        "BottleException",
        "BottleException",
        "RouteError",
        "RouteError",
        "RouteError",
        "p",
        "p",
        "p",
        "re",
        "sub",
        "m",
        "m",
        "group",
        "len",
        "m",
        "group",
        "m",
        "group",
        "p",
        "strict",
        "strict",
        "conf",
        "_re_flatten",
        "conf",
        "default_pattern",
        "conf",
        "x",
        "x",
        "conf",
        "x",
        "x",
        "conf",
        "name",
        "func",
        "filters",
        "func",
        "re",
        "compile",
        "rule",
        "match",
        "rule_syntax",
        "finditer",
        "rule",
        "prefix",
        "rule",
        "offset",
        "match",
        "start",
        "match",
        "groups",
        "len",
        "g",
        "prefix",
        "match",
        "group",
        "len",
        "g",
        "match",
        "end",
        "prefix",
        "prefix",
        "g",
        "g",
        "g",
        "name",
        "filtr",
        "conf",
        "match",
        "end",
        "offset",
        "len",
        "rule",
        "prefix",
        "prefix",
        "rule",
        "offset",
        "rule",
        "method",
        "target",
        "name",
        "key",
        "mode",
        "conf",
        "_itertokens",
        "rule",
        "mode",
        "mode",
        "default_filter",
        "filters",
        "mode",
        "conf",
        "key",
        "pattern",
        "mask",
        "anons",
        "anons",
        "pattern",
        "key",
        "mask",
        "keys",
        "append",
        "key",
        "in_filter",
        "filters",
        "append",
        "key",
        "in_filter",
        "builder",
        "append",
        "key",
        "out_filter",
        "key",
        "pattern",
        "re",
        "escape",
        "key",
        "builder",
        "append",
        "key",
        "builder",
        "builder",
        "name",
        "builder",
        "builder",
        "is_static",
        "strict_order",
        "setdefault",
        "method",
        "method",
        "build",
        "rule",
        "target",
        "re",
        "compile",
        "pattern",
        "re_pattern",
        "match",
        "re",
        "error",
        "RouteSyntaxError",
        "rule",
        "_e",
        "filters",
        "path",
        "re_match",
        "path",
        "groupdict",
        "name",
        "wildcard_filter",
        "filters",
        "wildcard_filter",
        "url_args",
        "name",
        "ValueError",
        "HTTPError",
        "url_args",
        "re_pattern",
        "groupindex",
        "path",
        "re_match",
        "path",
        "groupdict",
        "_re_flatten",
        "pattern",
        "rule",
        "flatpat",
        "target",
        "getargs",
        "flatpat",
        "method",
        "_groups",
        "DEBUG",
        "warnings",
        "warn",
        "msg",
        "method",
        "rule",
        "RuntimeWarning",
        "dyna_routes",
        "method",
        "_groups",
        "flatpat",
        "method",
        "whole_rule",
        "dyna_routes",
        "setdefault",
        "method",
        "append",
        "whole_rule",
        "_groups",
        "len",
        "dyna_routes",
        "method",
        "_compile",
        "method",
        "method",
        "dyna_routes",
        "method",
        "dyna_regexes",
        "_MAX_GROUPS_PER_PATTERN",
        "x",
        "len",
        "all_rules",
        "maxgroups",
        "all_rules",
        "x",
        "x",
        "maxgroups",
        "flatpat",
        "_",
        "flatpat",
        "_",
        "_",
        "some",
        "join",
        "flatpat",
        "flatpat",
        "combined",
        "re",
        "compile",
        "combined",
        "match",
        "target",
        "getargs",
        "_",
        "_",
        "target",
        "getargs",
        "some",
        "comborules",
        "append",
        "combined",
        "rules",
        "_name",
        "anons",
        "query",
        "builder",
        "get",
        "_name",
        "builder",
        "RouteBuildError",
        "_name",
        "i",
        "value",
        "anons",
        "i",
        "value",
        "join",
        "f",
        "query",
        "pop",
        "n",
        "n",
        "f",
        "n",
        "f",
        "builder",
        "url",
        "query",
        "url",
        "urlencode",
        "query",
        "KeyError",
        "RouteBuildError",
        "_e",
        "args",
        "environ",
        "environ",
        "upper",
        "environ",
        "verb",
        "verb",
        "verb",
        "method",
        "methods",
        "method",
        "path",
        "method",
        "method",
        "path",
        "target",
        "getargs",
        "path",
        "getargs",
        "method",
        "dyna_regexes",
        "combined",
        "rules",
        "dyna_regexes",
        "method",
        "combined",
        "path",
        "match",
        "rules",
        "match",
        "lastindex",
        "target",
        "getargs",
        "path",
        "getargs",
        "methods",
        "method",
        "nocheck",
        "path",
        "method",
        "allowed",
        "add",
        "verb",
        "method",
        "dyna_regexes",
        "allowed",
        "nocheck",
        "combined",
        "rules",
        "dyna_regexes",
        "method",
        "combined",
        "path",
        "match",
        "allowed",
        "add",
        "method",
        "allowed",
        "join",
        "sorted",
        "allowed",
        "HTTPError",
        "Allow",
        "allow_header",
        "HTTPError",
        "repr",
        "path",
        "app",
        "rule",
        "method",
        "callback",
        "name",
        "plugins",
        "skiplist",
        "config",
        "app",
        "rule",
        "method",
        "callback",
        "name",
        "plugins",
        "skiplist",
        "ConfigDict",
        "load_dict",
        "config",
        "make_namespaces",
        "a",
        "ka",
        "depr",
        "call",
        "a",
        "ka",
        "cached_property",
        "_make_callback",
        "__dict__",
        "pop",
        "call",
        "property",
        "depr",
        "rule",
        "rule",
        "method",
        "method",
        "callback",
        "callback",
        "name",
        "name",
        "app",
        "app",
        "config",
        "config",
        "apply",
        "plugins",
        "skip",
        "skiplist",
        "p",
        "reversed",
        "app",
        "plugins",
        "plugins",
        "skiplist",
        "getattr",
        "p",
        "name",
        "name",
        "skiplist",
        "name",
        "unique",
        "p",
        "skiplist",
        "p",
        "skiplist",
        "name",
        "unique",
        "add",
        "name",
        "p",
        "callback",
        "plugin",
        "all_plugins",
        "hasattr",
        "plugin",
        "getattr",
        "plugin",
        "api",
        "_context",
        "plugin",
        "apply",
        "callback",
        "context",
        "plugin",
        "callback",
        "RouteReset",
        "_make_callback",
        "callback",
        "callback",
        "update_wrapper",
        "callback",
        "callback",
        "callback",
        "callback",
        "getattr",
        "func",
        "py3k",
        "func",
        "py3k",
        "hasattr",
        "func",
        "closure_attr",
        "getattr",
        "func",
        "closure_attr",
        "getattr",
        "func",
        "closure_attr",
        "cell_contents",
        "func",
        "getargspec",
        "get_undecorated_callback",
        "key",
        "conf",
        "config",
        "app",
        "conifg",
        "key",
        "conf",
        "conf",
        "key",
        "get_undecorated_callback",
        "method",
        "rule",
        "cb",
        "catchall",
        "autojson",
        "ConfigDict",
        "config",
        "functools",
        "partial",
        "trigger_hook",
        "config",
        "meta_set",
        "config",
        "meta_set",
        "config",
        "catchall",
        "config",
        "autojson",
        "ResourceManager",
        "Router",
        "config",
        "install",
        "JSONPlugin",
        "install",
        "TemplatePlugin",
        "DictProperty",
        "cached_property",
        "name",
        "name",
        "__hook_names",
        "name",
        "func",
        "name",
        "__hook_reversed",
        "_hooks",
        "name",
        "insert",
        "func",
        "_hooks",
        "name",
        "append",
        "func",
        "name",
        "func",
        "name",
        "_hooks",
        "func",
        "_hooks",
        "name",
        "_hooks",
        "name",
        "remove",
        "func",
        "__name",
        "args",
        "kwargs",
        "hook",
        "args",
        "kwargs",
        "hook",
        "_hooks",
        "__name",
        "name",
        "func",
        "add_hook",
        "name",
        "func",
        "func",
        "decorator",
        "prefix",
        "app",
        "options",
        "isinstance",
        "app",
        "basestring",
        "depr",
        "p",
        "p",
        "prefix",
        "split",
        "p",
        "segments",
        "ValueError",
        "len",
        "segments",
        "request",
        "path_shift",
        "path_depth",
        "HTTPResponse",
        "status",
        "headerlist",
        "exc_info",
        "exc_info",
        "_raise",
        "exc_info",
        "status",
        "name",
        "value",
        "headerlist",
        "rs",
        "add_header",
        "name",
        "value",
        "rs",
        "body",
        "append",
        "app",
        "request",
        "environ",
        "start_response",
        "body",
        "rs",
        "body",
        "itertools",
        "chain",
        "rs",
        "body",
        "body",
        "body",
        "rs",
        "body",
        "rs",
        "request",
        "path_shift",
        "path_depth",
        "options",
        "setdefault",
        "options",
        "setdefault",
        "options",
        "setdefault",
        "prefix",
        "app",
        "mountpoint_wrapper",
        "route",
        "join",
        "segments",
        "options",
        "prefix",
        "endswith",
        "route",
        "join",
        "segments",
        "options",
        "routes",
        "isinstance",
        "routes",
        "Bottle",
        "routes",
        "routes",
        "route",
        "routes",
        "add_route",
        "route",
        "plugin",
        "hasattr",
        "plugin",
        "plugin",
        "setup",
        "callable",
        "plugin",
        "hasattr",
        "plugin",
        "plugins",
        "append",
        "plugin",
        "reset",
        "plugin",
        "plugin",
        "plugin",
        "i",
        "plugin",
        "plugins",
        "remove",
        "remove",
        "plugin",
        "remove",
        "plugin",
        "getattr",
        "plugin",
        "remove",
        "removed",
        "append",
        "plugin",
        "plugins",
        "i",
        "hasattr",
        "plugin",
        "plugin",
        "close",
        "removed",
        "reset",
        "removed",
        "route",
        "route",
        "routes",
        "isinstance",
        "route",
        "Route",
        "route",
        "routes",
        "route",
        "route",
        "routes",
        "route",
        "reset",
        "DEBUG",
        "route",
        "routes",
        "route",
        "prepare",
        "trigger_hook",
        "plugin",
        "plugins",
        "hasattr",
        "plugin",
        "plugin",
        "close",
        "kwargs",
        "run",
        "kwargs",
        "environ",
        "router",
        "match",
        "environ",
        "routename",
        "kargs",
        "request",
        "environ",
        "get",
        "strip",
        "router",
        "build",
        "routename",
        "kargs",
        "lstrip",
        "urljoin",
        "urljoin",
        "scriptname",
        "location",
        "route",
        "routes",
        "append",
        "route",
        "router",
        "add",
        "route",
        "rule",
        "route",
        "method",
        "route",
        "name",
        "route",
        "name",
        "DEBUG",
        "route",
        "prepare",
        "path",
        "method",
        "callback",
        "name",
        "apply",
        "skip",
        "config",
        "callable",
        "path",
        "path",
        "makelist",
        "apply",
        "makelist",
        "skip",
        "callback",
        "isinstance",
        "callback",
        "basestring",
        "load",
        "callback",
        "rule",
        "makelist",
        "path",
        "yieldroutes",
        "callback",
        "verb",
        "makelist",
        "method",
        "verb",
        "upper",
        "Route",
        "rule",
        "verb",
        "callback",
        "name",
        "name",
        "plugins",
        "plugins",
        "skiplist",
        "skiplist",
        "config",
        "add_route",
        "route",
        "callback",
        "decorator",
        "callback",
        "callback",
        "decorator",
        "path",
        "method",
        "options",
        "route",
        "path",
        "method",
        "options",
        "path",
        "method",
        "options",
        "route",
        "path",
        "method",
        "options",
        "path",
        "method",
        "options",
        "route",
        "path",
        "method",
        "options",
        "path",
        "method",
        "options",
        "route",
        "path",
        "method",
        "options",
        "code",
        "handler",
        "error_handler",
        "code",
        "handler",
        "handler",
        "wrapper",
        "res",
        "tob",
        "template",
        "ERROR_PAGE_TEMPLATE",
        "e",
        "res",
        "environ",
        "environ",
        "py3k",
        "path",
        "encode",
        "decode",
        "UnicodeError",
        "HTTPError",
        "request",
        "bind",
        "environ",
        "response",
        "bind",
        "trigger_hook",
        "router",
        "match",
        "environ",
        "route",
        "route",
        "args",
        "route",
        "call",
        "args",
        "trigger_hook",
        "HTTPResponse",
        "_e",
        "RouteReset",
        "route",
        "reset",
        "_handle",
        "environ",
        "KeyboardInterrupt",
        "SystemExit",
        "MemoryError",
        "catchall",
        "format_exc",
        "environ",
        "write",
        "stacktrace",
        "HTTPError",
        "_e",
        "stacktrace",
        "peek",
        "response",
        "isinstance",
        "isinstance",
        "unicode",
        "join",
        "isinstance",
        "unicode",
        "encode",
        "response",
        "charset",
        "isinstance",
        "response",
        "len",
        "isinstance",
        "HTTPError",
        "apply",
        "response",
        "error_handler",
        "get",
        "status_code",
        "default_error_handler",
        "_cast",
        "isinstance",
        "HTTPResponse",
        "apply",
        "response",
        "_cast",
        "body",
        "hasattr",
        "request",
        "environ",
        "request",
        "environ",
        "hasattr",
        "hasattr",
        "WSGIFileWrapper",
        "iter",
        "next",
        "iout",
        "first",
        "next",
        "iout",
        "StopIteration",
        "_cast",
        "HTTPResponse",
        "_e",
        "KeyboardInterrupt",
        "SystemExit",
        "MemoryError",
        "catchall",
        "HTTPError",
        "_e",
        "format_exc",
        "isinstance",
        "first",
        "HTTPResponse",
        "_cast",
        "first",
        "isinstance",
        "first",
        "itertools",
        "chain",
        "first",
        "iout",
        "isinstance",
        "first",
        "unicode",
        "x",
        "x",
        "encode",
        "response",
        "charset",
        "imap",
        "encoder",
        "itertools",
        "chain",
        "first",
        "iout",
        "first",
        "_cast",
        "HTTPError",
        "msg",
        "hasattr",
        "_closeiter",
        "new_iter",
        "close",
        "new_iter",
        "environ",
        "start_response",
        "_cast",
        "_handle",
        "environ",
        "response",
        "_status_code",
        "environ",
        "hasattr",
        "close",
        "start_response",
        "response",
        "_status_line",
        "response",
        "headerlist",
        "KeyboardInterrupt",
        "SystemExit",
        "MemoryError",
        "catchall",
        "html_escape",
        "environ",
        "get",
        "DEBUG",
        "err",
        "html_escape",
        "repr",
        "_e",
        "html_escape",
        "format_exc",
        "environ",
        "write",
        "err",
        "start_response",
        "headers",
        "sys",
        "exc_info",
        "tob",
        "err",
        "environ",
        "start_response",
        "wsgi",
        "environ",
        "start_response",
        "environ",
        "environ",
        "environ",
        "environ",
        "DictProperty",
        "read_only",
        "RuntimeError",
        "DictProperty",
        "read_only",
        "RuntimeError",
        "DictProperty",
        "read_only",
        "RuntimeError",
        "property",
        "environ",
        "get",
        "lstrip",
        "property",
        "environ",
        "get",
        "upper",
        "DictProperty",
        "read_only",
        "WSGIHeaderDict",
        "environ",
        "name",
        "headers",
        "get",
        "name",
        "DictProperty",
        "read_only",
        "SimpleCookie",
        "environ",
        "get",
        "values",
        "FormsDict",
        "c",
        "key",
        "c",
        "value",
        "c",
        "cookies",
        "key",
        "secret",
        "cookies",
        "get",
        "key",
        "secret",
        "value",
        "cookie_decode",
        "value",
        "secret",
        "dec",
        "dec",
        "dec",
        "key",
        "value",
        "DictProperty",
        "read_only",
        "environ",
        "FormsDict",
        "_parse_qsl",
        "environ",
        "get",
        "key",
        "value",
        "pairs",
        "value",
        "get",
        "DictProperty",
        "read_only",
        "FormsDict",
        "name",
        "item",
        "POST",
        "allitems",
        "isinstance",
        "item",
        "FileUpload",
        "item",
        "forms",
        "DictProperty",
        "read_only",
        "FormsDict",
        "key",
        "value",
        "query",
        "allitems",
        "value",
        "key",
        "value",
        "forms",
        "allitems",
        "value",
        "DictProperty",
        "read_only",
        "FormsDict",
        "name",
        "item",
        "POST",
        "allitems",
        "isinstance",
        "item",
        "FileUpload",
        "item",
        "files",
        "DictProperty",
        "read_only",
        "environ",
        "get",
        "lower",
        "split",
        "ctype",
        "_get_body_string",
        "b",
        "json_loads",
        "b",
        "read",
        "bufsize",
        "max",
        "content_length",
        "maxread",
        "read",
        "min",
        "maxread",
        "bufsize",
        "part",
        "part",
        "maxread",
        "len",
        "part",
        "read",
        "bufsize",
        "HTTPError",
        "tob",
        "tob",
        "tob",
        "read",
        "header",
        "rn",
        "read",
        "header",
        "c",
        "c",
        "err",
        "len",
        "header",
        "bufsize",
        "err",
        "header",
        "partition",
        "sem",
        "tonat",
        "size",
        "strip",
        "ValueError",
        "err",
        "maxread",
        "bs",
        "maxread",
        "buff",
        "read",
        "min",
        "maxread",
        "bufsize",
        "buff",
        "maxread",
        "buff",
        "maxread",
        "part",
        "err",
        "part",
        "maxread",
        "len",
        "part",
        "read",
        "rn",
        "err",
        "DictProperty",
        "read_only",
        "_iter_chunked",
        "chunked",
        "_iter_body",
        "environ",
        "read",
        "BytesIO",
        "part",
        "body_iter",
        "read_func",
        "MEMFILE_MAX",
        "body",
        "write",
        "part",
        "body_size",
        "len",
        "part",
        "is_temp_file",
        "body_size",
        "MEMFILE_MAX",
        "TemporaryFile",
        "mode",
        "body",
        "body",
        "write",
        "tmp",
        "getvalue",
        "tmp",
        "environ",
        "body",
        "body",
        "seek",
        "body",
        "content_length",
        "clen",
        "MEMFILE_MAX",
        "HTTPError",
        "clen",
        "MEMFILE_MAX",
        "body",
        "read",
        "clen",
        "len",
        "data",
        "MEMFILE_MAX",
        "HTTPError",
        "data",
        "property",
        "_body",
        "seek",
        "_body",
        "property",
        "environ",
        "get",
        "lower",
        "query",
        "DictProperty",
        "read_only",
        "FormsDict",
        "content_type",
        "startswith",
        "_parse_qsl",
        "tonat",
        "_get_body_string",
        "key",
        "value",
        "pairs",
        "value",
        "post",
        "key",
        "key",
        "environ",
        "environ",
        "key",
        "fp",
        "body",
        "environ",
        "safe_env",
        "keep_blank_values",
        "py31",
        "NCTextIOWrapper",
        "args",
        "encoding",
        "newline",
        "py3k",
        "cgi",
        "FieldStorage",
        "args",
        "data",
        "data",
        "item",
        "data",
        "item",
        "filename",
        "item",
        "name",
        "FileUpload",
        "item",
        "file",
        "item",
        "name",
        "item",
        "filename",
        "item",
        "headers",
        "item",
        "name",
        "item",
        "value",
        "post",
        "property",
        "urlparts",
        "geturl",
        "DictProperty",
        "read_only",
        "environ",
        "env",
        "get",
        "env",
        "get",
        "env",
        "get",
        "env",
        "get",
        "host",
        "env",
        "get",
        "env",
        "get",
        "port",
        "port",
        "http",
        "host",
        "port",
        "urlquote",
        "fullpath",
        "UrlSplitResult",
        "http",
        "host",
        "path",
        "env",
        "get",
        "property",
        "urljoin",
        "script_name",
        "path",
        "lstrip",
        "property",
        "environ",
        "get",
        "property",
        "environ",
        "get",
        "strip",
        "script_name",
        "script_name",
        "shift",
        "environ",
        "get",
        "path_shift",
        "script",
        "path",
        "shift",
        "property",
        "environ",
        "get",
        "property",
        "environ",
        "get",
        "lower",
        "property",
        "environ",
        "get",
        "requested_with",
        "lower",
        "property",
        "is_xhr",
        "property",
        "parse_auth",
        "environ",
        "get",
        "basic",
        "basic",
        "environ",
        "get",
        "ruser",
        "ruser",
        "property",
        "environ",
        "get",
        "proxy",
        "ip",
        "strip",
        "ip",
        "proxy",
        "split",
        "environ",
        "get",
        "remote",
        "remote",
        "property",
        "remote_route",
        "route",
        "route",
        "Request",
        "environ",
        "copy",
        "value",
        "environ",
        "get",
        "value",
        "key",
        "environ",
        "key",
        "key",
        "environ",
        "key",
        "iter",
        "environ",
        "len",
        "environ",
        "environ",
        "keys",
        "key",
        "value",
        "environ",
        "get",
        "KeyError",
        "environ",
        "value",
        "key",
        "key",
        "key",
        "startswith",
        "key",
        "todelete",
        "environ",
        "pop",
        "key",
        "__class__",
        "method",
        "url",
        "name",
        "environ",
        "name",
        "__get__",
        "hasattr",
        "KeyError",
        "AttributeError",
        "name",
        "name",
        "value",
        "name",
        "__setattr__",
        "name",
        "value",
        "environ",
        "name",
        "value",
        "s",
        "s",
        "title",
        "replace",
        "name",
        "reader",
        "writer",
        "name",
        "name",
        "reader",
        "writer",
        "reader",
        "writer",
        "name",
        "title",
        "obj",
        "cls",
        "obj",
        "obj",
        "headers",
        "get",
        "name",
        "reader",
        "value",
        "reader",
        "value",
        "obj",
        "value",
        "obj",
        "headers",
        "name",
        "writer",
        "value",
        "obj",
        "obj",
        "headers",
        "name",
        "body",
        "status",
        "headers",
        "more_headers",
        "body",
        "status",
        "default_status",
        "headers",
        "isinstance",
        "headers",
        "headers",
        "items",
        "name",
        "value",
        "headers",
        "add_header",
        "name",
        "value",
        "more_headers",
        "name",
        "value",
        "more_headers",
        "items",
        "add_header",
        "name",
        "value",
        "cls",
        "cls",
        "BaseResponse",
        "issubclass",
        "cls",
        "BaseResponse",
        "cls",
        "status",
        "k",
        "v",
        "k",
        "v",
        "_headers",
        "items",
        "_cookies",
        "SimpleCookie",
        "copy",
        "_cookies",
        "load",
        "_cookies",
        "output",
        "header",
        "copy",
        "iter",
        "body",
        "hasattr",
        "body",
        "body",
        "close",
        "property",
        "_status_line",
        "property",
        "_status_code",
        "status",
        "isinstance",
        "status",
        "status",
        "_HTTP_STATUS_LINES",
        "get",
        "status",
        "status",
        "status",
        "strip",
        "status",
        "split",
        "ValueError",
        "code",
        "ValueError",
        "code",
        "status",
        "code",
        "_status_line",
        "property",
        "_get_status",
        "_set_status",
        "_get_status",
        "_set_status",
        "property",
        "HeaderDict",
        "_headers",
        "hdict",
        "name",
        "_hkey",
        "name",
        "_headers",
        "name",
        "_headers",
        "_hkey",
        "name",
        "name",
        "_headers",
        "_hkey",
        "name",
        "name",
        "value",
        "_headers",
        "_hkey",
        "name",
        "value",
        "name",
        "_headers",
        "get",
        "_hkey",
        "name",
        "name",
        "value",
        "_headers",
        "_hkey",
        "name",
        "value",
        "name",
        "value",
        "_headers",
        "setdefault",
        "_hkey",
        "name",
        "append",
        "value",
        "headerlist",
        "property",
        "_headers",
        "items",
        "_headers",
        "headers",
        "append",
        "default_content_type",
        "_status_code",
        "bad_headers",
        "bad_headers",
        "_status_code",
        "h",
        "h",
        "headers",
        "h",
        "bad_headers",
        "name",
        "val",
        "name",
        "vals",
        "headers",
        "val",
        "vals",
        "_cookies",
        "c",
        "_cookies",
        "values",
        "append",
        "c",
        "OutputString",
        "HeaderProperty",
        "HeaderProperty",
        "reader",
        "HeaderProperty",
        "reader",
        "x",
        "datetime",
        "utcfromtimestamp",
        "parse_date",
        "x",
        "writer",
        "x",
        "http_date",
        "x",
        "property",
        "content_type",
        "content_type",
        "split",
        "split",
        "strip",
        "name",
        "value",
        "secret",
        "options",
        "_cookies",
        "SimpleCookie",
        "secret",
        "touni",
        "cookie_encode",
        "name",
        "value",
        "secret",
        "isinstance",
        "value",
        "basestring",
        "len",
        "value",
        "ValueError",
        "_cookies",
        "value",
        "key",
        "value",
        "options",
        "items",
        "key",
        "isinstance",
        "value",
        "timedelta",
        "value",
        "seconds",
        "value",
        "days",
        "key",
        "isinstance",
        "value",
        "datedate",
        "datetime",
        "value",
        "timetuple",
        "isinstance",
        "value",
        "time",
        "gmtime",
        "value",
        "time",
        "strftime",
        "value",
        "_cookies",
        "name",
        "key",
        "replace",
        "value",
        "key",
        "kwargs",
        "set_cookie",
        "key",
        "kwargs",
        "name",
        "value",
        "headerlist",
        "name",
        "title",
        "value",
        "strip",
        "name",
        "name",
        "depr",
        "threading",
        "local",
        "ls",
        "AttributeError",
        "RuntimeError",
        "value",
        "value",
        "ls",
        "property",
        "fget",
        "fset",
        "fdel",
        "BaseRequest",
        "BaseRequest",
        "local_property",
        "BaseResponse",
        "BaseResponse",
        "local_property",
        "local_property",
        "local_property",
        "local_property",
        "local_property",
        "BaseRequest",
        "BaseResponse",
        "Response",
        "BottleException",
        "body",
        "status",
        "headers",
        "more_headers",
        "HTTPResponse",
        "body",
        "status",
        "headers",
        "more_headers",
        "response",
        "_status_code",
        "_status_line",
        "_headers",
        "_cookies",
        "body",
        "HTTPResponse",
        "status",
        "body",
        "exception",
        "traceback",
        "options",
        "exception",
        "traceback",
        "HTTPError",
        "body",
        "status",
        "options",
        "BottleException",
        "json_dumps",
        "json_dumps",
        "json_dumps",
        "callback",
        "route",
        "json_dumps",
        "dumps",
        "callback",
        "a",
        "ka",
        "callback",
        "a",
        "ka",
        "HTTPError",
        "_e",
        "isinstance",
        "rv",
        "dumps",
        "rv",
        "json_response",
        "isinstance",
        "rv",
        "HTTPResponse",
        "isinstance",
        "rv",
        "body",
        "dumps",
        "rv",
        "body",
        "rv",
        "wrapper",
        "callback",
        "route",
        "route",
        "config",
        "get",
        "isinstance",
        "conf",
        "len",
        "conf",
        "view",
        "conf",
        "conf",
        "callback",
        "isinstance",
        "conf",
        "view",
        "conf",
        "callback",
        "callback",
        "name",
        "impmask",
        "name",
        "impmask",
        "sys",
        "modules",
        "setdefault",
        "name",
        "imp",
        "new_module",
        "name",
        "__dict__",
        "update",
        "sys",
        "meta_path",
        "append",
        "fullname",
        "path",
        "fullname",
        "fullname",
        "rsplit",
        "packname",
        "name",
        "fullname",
        "fullname",
        "sys",
        "modules",
        "sys",
        "modules",
        "fullname",
        "fullname",
        "rsplit",
        "impmask",
        "modname",
        "__import__",
        "realname",
        "sys",
        "modules",
        "sys",
        "modules",
        "realname",
        "setattr",
        "modname",
        "DictMixin",
        "a",
        "k",
        "k",
        "v",
        "k",
        "v",
        "a",
        "k",
        "items",
        "len",
        "iter",
        "key",
        "key",
        "key",
        "key",
        "key",
        "key",
        "key",
        "value",
        "append",
        "key",
        "value",
        "keys",
        "py3k",
        "v",
        "v",
        "values",
        "k",
        "v",
        "k",
        "v",
        "items",
        "k",
        "v",
        "k",
        "vl",
        "items",
        "v",
        "vl",
        "keys",
        "values",
        "items",
        "allitems",
        "v",
        "v",
        "values",
        "k",
        "v",
        "k",
        "v",
        "items",
        "iterkeys",
        "v",
        "v",
        "itervalues",
        "k",
        "v",
        "k",
        "v",
        "iteritems",
        "k",
        "v",
        "k",
        "vl",
        "iteritems",
        "v",
        "vl",
        "k",
        "v",
        "k",
        "vl",
        "iteritems",
        "v",
        "vl",
        "key",
        "index",
        "key",
        "index",
        "val",
        "val",
        "key",
        "value",
        "setdefault",
        "key",
        "append",
        "value",
        "key",
        "value",
        "value",
        "key",
        "get",
        "key",
        "get",
        "getall",
        "MultiDict",
        "s",
        "encoding",
        "isinstance",
        "s",
        "unicode",
        "recode_unicode",
        "s",
        "encode",
        "decode",
        "encoding",
        "input_encoding",
        "isinstance",
        "s",
        "s",
        "decode",
        "encoding",
        "input_encoding",
        "s",
        "encoding",
        "FormsDict",
        "encoding",
        "input_encoding",
        "key",
        "value",
        "allitems",
        "copy",
        "append",
        "_fix",
        "key",
        "enc",
        "_fix",
        "value",
        "enc",
        "copy",
        "name",
        "encoding",
        "_fix",
        "name",
        "encoding",
        "UnicodeError",
        "KeyError",
        "name",
        "unicode",
        "name",
        "startswith",
        "name",
        "endswith",
        "FormsDict",
        "__getattr__",
        "name",
        "getunicode",
        "name",
        "MultiDict",
        "a",
        "ka",
        "a",
        "ka",
        "update",
        "a",
        "ka",
        "key",
        "_hkey",
        "key",
        "key",
        "_hkey",
        "key",
        "key",
        "_hkey",
        "key",
        "key",
        "value",
        "_hkey",
        "key",
        "value",
        "key",
        "value",
        "setdefault",
        "_hkey",
        "key",
        "append",
        "value",
        "key",
        "value",
        "_hkey",
        "key",
        "value",
        "key",
        "get",
        "_hkey",
        "key",
        "key",
        "index",
        "MultiDict",
        "get",
        "_hkey",
        "key",
        "index",
        "names",
        "name",
        "_hkey",
        "n",
        "n",
        "names",
        "name",
        "name",
        "DictMixin",
        "environ",
        "environ",
        "key",
        "key",
        "replace",
        "upper",
        "key",
        "cgikeys",
        "key",
        "key",
        "key",
        "environ",
        "get",
        "_ekey",
        "key",
        "key",
        "tonat",
        "environ",
        "_ekey",
        "key",
        "key",
        "value",
        "__class__",
        "key",
        "__class__",
        "key",
        "environ",
        "key",
        "key",
        "replace",
        "title",
        "key",
        "cgikeys",
        "key",
        "replace",
        "title",
        "x",
        "x",
        "len",
        "keys",
        "key",
        "_ekey",
        "key",
        "environ",
        "DictMixin",
        "config",
        "config",
        "key",
        "depr",
        "_config",
        "_prefix",
        "key",
        "key",
        "value",
        "_config",
        "_prefix",
        "key",
        "value",
        "key",
        "_config",
        "_prefix",
        "key",
        "_prefix",
        "key",
        "_config",
        "key",
        "rpartition",
        "ns",
        "_prefix",
        "name",
        "name",
        "x",
        "x",
        "len",
        "keys",
        "key",
        "_prefix",
        "key",
        "_config",
        "_prefix",
        "_prefix",
        "key",
        "depr",
        "key",
        "key",
        "isupper",
        "ConfigDict",
        "Namespace",
        "_config",
        "_prefix",
        "key",
        "key",
        "key",
        "startswith",
        "AttributeError",
        "key",
        "get",
        "key",
        "key",
        "value",
        "key",
        "__dict__",
        "value",
        "depr",
        "hasattr",
        "DictMixin",
        "key",
        "AttributeError",
        "key",
        "key",
        "isinstance",
        "key",
        "__class__",
        "AttributeError",
        "value",
        "key",
        "key",
        "pop",
        "key",
        "isinstance",
        "val",
        "__class__",
        "key",
        "key",
        "key",
        "startswith",
        "prefix",
        "prefix",
        "key",
        "a",
        "ka",
        "depr",
        "update",
        "a",
        "ka",
        "a",
        "ka",
        "name",
        "value",
        "a",
        "ka",
        "depr",
        "update",
        "a",
        "ka",
        "filename",
        "ConfigParser",
        "conf",
        "read",
        "filename",
        "section",
        "conf",
        "sections",
        "key",
        "value",
        "conf",
        "items",
        "section",
        "section",
        "section",
        "key",
        "value",
        "source",
        "make_namespaces",
        "source",
        "stack",
        "stack",
        "pop",
        "isinstance",
        "source",
        "key",
        "key",
        "value",
        "source",
        "items",
        "isinstance",
        "key",
        "basestring",
        "key",
        "prefix",
        "key",
        "prefix",
        "key",
        "isinstance",
        "value",
        "stack",
        "append",
        "full_key",
        "value",
        "make_namespaces",
        "Namespace",
        "full_key",
        "value",
        "a",
        "ka",
        "a",
        "isinstance",
        "a",
        "basestring",
        "a",
        "strip",
        "a",
        "key",
        "value",
        "a",
        "ka",
        "items",
        "prefix",
        "key",
        "value",
        "key",
        "value",
        "key",
        "value",
        "key",
        "key",
        "value",
        "isinstance",
        "key",
        "basestring",
        "key",
        "meta_get",
        "key",
        "x",
        "x",
        "value",
        "key",
        "key",
        "value",
        "_on_change",
        "key",
        "value",
        "__setitem__",
        "key",
        "value",
        "key",
        "__delitem__",
        "key",
        "key",
        "key",
        "key",
        "metafield",
        "_meta",
        "get",
        "key",
        "get",
        "metafield",
        "key",
        "metafield",
        "value",
        "_meta",
        "setdefault",
        "key",
        "value",
        "key",
        "key",
        "key",
        "_meta",
        "get",
        "key",
        "keys",
        "key",
        "depr",
        "key",
        "key",
        "isupper",
        "Namespace",
        "key",
        "key",
        "key",
        "startswith",
        "AttributeError",
        "key",
        "get",
        "key",
        "key",
        "value",
        "key",
        "__slots__",
        "__setattr__",
        "key",
        "value",
        "depr",
        "hasattr",
        "key",
        "AttributeError",
        "key",
        "key",
        "isinstance",
        "key",
        "Namespace",
        "AttributeError",
        "value",
        "key",
        "key",
        "pop",
        "key",
        "isinstance",
        "val",
        "Namespace",
        "key",
        "key",
        "key",
        "startswith",
        "prefix",
        "prefix",
        "key",
        "a",
        "ka",
        "depr",
        "update",
        "a",
        "ka",
        "value",
        "isinstance",
        "value",
        "Bottle",
        "Bottle",
        "append",
        "value",
        "value",
        "fp",
        "buffer_size",
        "fp",
        "buffer_size",
        "fp",
        "buffer_size",
        "attr",
        "hasattr",
        "fp",
        "attr",
        "setattr",
        "attr",
        "getattr",
        "fp",
        "attr",
        "buffer_size",
        "read",
        "read",
        "buff",
        "part",
        "part",
        "iterator",
        "close",
        "iterator",
        "makelist",
        "close",
        "iter",
        "iterator",
        "func",
        "close_callbacks",
        "func",
        "opener",
        "open",
        "cachemode",
        "open",
        "cachemode",
        "path",
        "index",
        "create",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "path",
        "path",
        "os",
        "sep",
        "path",
        "path",
        "path",
        "remove",
        "path",
        "create",
        "os",
        "path",
        "isdir",
        "path",
        "os",
        "makedirs",
        "path",
        "index",
        "path",
        "append",
        "path",
        "path",
        "insert",
        "index",
        "path",
        "cache",
        "clear",
        "os",
        "path",
        "exists",
        "path",
        "path",
        "search",
        "search",
        "pop",
        "os",
        "path",
        "isdir",
        "path",
        "name",
        "os",
        "listdir",
        "path",
        "os",
        "path",
        "join",
        "path",
        "name",
        "os",
        "path",
        "isdir",
        "full",
        "search",
        "append",
        "full",
        "full",
        "name",
        "name",
        "cache",
        "DEBUG",
        "path",
        "path",
        "os",
        "path",
        "join",
        "path",
        "name",
        "os",
        "path",
        "isfile",
        "fpath",
        "cachemode",
        "cache",
        "fpath",
        "fpath",
        "cachemode",
        "cache",
        "cache",
        "name",
        "name",
        "mode",
        "args",
        "kwargs",
        "lookup",
        "name",
        "fname",
        "IOError",
        "name",
        "opener",
        "fname",
        "mode",
        "mode",
        "args",
        "kwargs",
        "fileobj",
        "name",
        "filename",
        "headers",
        "fileobj",
        "name",
        "filename",
        "HeaderDict",
        "headers",
        "headers",
        "HeaderDict",
        "HeaderProperty",
        "HeaderProperty",
        "reader",
        "cached_property",
        "raw_filename",
        "isinstance",
        "fname",
        "unicode",
        "fname",
        "decode",
        "normalize",
        "fname",
        "encode",
        "decode",
        "os",
        "path",
        "basename",
        "fname",
        "replace",
        "os",
        "path",
        "sep",
        "re",
        "sub",
        "fname",
        "strip",
        "re",
        "sub",
        "fname",
        "strip",
        "fname",
        "fp",
        "chunk_size",
        "file",
        "read",
        "fp",
        "write",
        "file",
        "tell",
        "read",
        "chunk_size",
        "buf",
        "write",
        "buf",
        "file",
        "seek",
        "offset",
        "destination",
        "overwrite",
        "chunk_size",
        "isinstance",
        "destination",
        "basestring",
        "os",
        "path",
        "isdir",
        "destination",
        "os",
        "path",
        "join",
        "destination",
        "filename",
        "overwrite",
        "os",
        "path",
        "exists",
        "destination",
        "IOError",
        "open",
        "destination",
        "fp",
        "_copy_file",
        "fp",
        "chunk_size",
        "_copy_file",
        "destination",
        "chunk_size",
        "code",
        "text",
        "HTTPError",
        "code",
        "text",
        "url",
        "code",
        "code",
        "request",
        "get",
        "response",
        "copy",
        "cls",
        "HTTPResponse",
        "code",
        "res",
        "set_header",
        "urljoin",
        "request",
        "url",
        "url",
        "res",
        "fp",
        "offset",
        "maxread",
        "fp",
        "seek",
        "offset",
        "fp",
        "read",
        "min",
        "maxread",
        "part",
        "len",
        "part",
        "part",
        "filename",
        "root",
        "mimetype",
        "download",
        "charset",
        "os",
        "path",
        "abspath",
        "root",
        "os",
        "sep",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "root",
        "filename",
        "strip",
        "filename",
        "startswith",
        "root",
        "HTTPError",
        "os",
        "path",
        "exists",
        "filename",
        "os",
        "path",
        "isfile",
        "filename",
        "HTTPError",
        "os",
        "access",
        "filename",
        "os",
        "R_OK",
        "HTTPError",
        "mimetype",
        "mimetypes",
        "guess_type",
        "filename",
        "encoding",
        "encoding",
        "mimetype",
        "mimetype",
        "charset",
        "mimetype",
        "mimetype",
        "charset",
        "mimetype",
        "download",
        "os",
        "path",
        "basename",
        "filename",
        "download",
        "download",
        "download",
        "os",
        "stat",
        "filename",
        "stats",
        "st_size",
        "time",
        "strftime",
        "time",
        "gmtime",
        "stats",
        "st_mtime",
        "lm",
        "request",
        "environ",
        "get",
        "ims",
        "parse_date",
        "ims",
        "split",
        "strip",
        "ims",
        "ims",
        "stats",
        "st_mtime",
        "time",
        "strftime",
        "time",
        "gmtime",
        "HTTPResponse",
        "status",
        "headers",
        "request",
        "method",
        "open",
        "filename",
        "request",
        "environ",
        "get",
        "request",
        "environ",
        "parse_range_header",
        "request",
        "environ",
        "clen",
        "ranges",
        "HTTPError",
        "ranges",
        "offset",
        "end",
        "clen",
        "end",
        "offset",
        "body",
        "_file_iter_range",
        "body",
        "offset",
        "end",
        "offset",
        "HTTPResponse",
        "body",
        "status",
        "headers",
        "HTTPResponse",
        "body",
        "headers",
        "mode",
        "DEBUG",
        "mode",
        "warnings",
        "simplefilter",
        "mode",
        "value",
        "isinstance",
        "value",
        "datedate",
        "datetime",
        "value",
        "utctimetuple",
        "isinstance",
        "value",
        "time",
        "gmtime",
        "value",
        "isinstance",
        "value",
        "basestring",
        "time",
        "strftime",
        "value",
        "value",
        "ims",
        "email",
        "utils",
        "parsedate_tz",
        "ims",
        "time",
        "mktime",
        "ts",
        "ts",
        "time",
        "timezone",
        "ValueError",
        "IndexError",
        "OverflowError",
        "header",
        "header",
        "split",
        "method",
        "lower",
        "touni",
        "base64",
        "b64decode",
        "tob",
        "data",
        "split",
        "user",
        "pwd",
        "KeyError",
        "ValueError",
        "header",
        "maxlen",
        "header",
        "header",
        "r",
        "split",
        "r",
        "header",
        "split",
        "r",
        "start",
        "end",
        "ranges",
        "start",
        "max",
        "maxlen",
        "end",
        "maxlen",
        "end",
        "start",
        "maxlen",
        "start",
        "min",
        "end",
        "maxlen",
        "start",
        "end",
        "maxlen",
        "start",
        "end",
        "ValueError",
        "qs",
        "pair",
        "qs",
        "replace",
        "split",
        "pair",
        "pair",
        "split",
        "len",
        "nv",
        "nv",
        "append",
        "urlunquote",
        "nv",
        "replace",
        "urlunquote",
        "nv",
        "replace",
        "r",
        "append",
        "key",
        "value",
        "r",
        "a",
        "b",
        "sum",
        "x",
        "y",
        "x",
        "y",
        "a",
        "b",
        "len",
        "a",
        "len",
        "b",
        "data",
        "key",
        "base64",
        "b64encode",
        "pickle",
        "dumps",
        "data",
        "base64",
        "b64encode",
        "hmac",
        "tob",
        "key",
        "msg",
        "digest",
        "tob",
        "sig",
        "tob",
        "msg",
        "data",
        "key",
        "tob",
        "data",
        "cookie_is_encoded",
        "data",
        "data",
        "split",
        "tob",
        "_lscmp",
        "sig",
        "base64",
        "b64encode",
        "hmac",
        "tob",
        "key",
        "msg",
        "digest",
        "pickle",
        "loads",
        "base64",
        "b64decode",
        "msg",
        "data",
        "data",
        "startswith",
        "tob",
        "tob",
        "data",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "html_escape",
        "replace",
        "replace",
        "replace",
        "func",
        "func",
        "replace",
        "lstrip",
        "getargspec",
        "func",
        "len",
        "spec",
        "len",
        "spec",
        "path",
        "argc",
        "spec",
        "argc",
        "path",
        "arg",
        "spec",
        "argc",
        "path",
        "arg",
        "path",
        "script_name",
        "path_info",
        "shift",
        "shift",
        "script_name",
        "path_info",
        "path_info",
        "strip",
        "split",
        "script_name",
        "strip",
        "split",
        "pathlist",
        "pathlist",
        "scriptlist",
        "scriptlist",
        "shift",
        "shift",
        "len",
        "pathlist",
        "pathlist",
        "shift",
        "scriptlist",
        "moved",
        "pathlist",
        "shift",
        "shift",
        "shift",
        "len",
        "scriptlist",
        "scriptlist",
        "shift",
        "moved",
        "pathlist",
        "scriptlist",
        "shift",
        "shift",
        "AssertionError",
        "empty",
        "join",
        "scriptlist",
        "join",
        "pathlist",
        "path_info",
        "endswith",
        "pathlist",
        "new_path_info",
        "new_script_name",
        "new_path_info",
        "check",
        "realm",
        "text",
        "func",
        "a",
        "ka",
        "request",
        "auth",
        "user",
        "check",
        "user",
        "password",
        "HTTPError",
        "text",
        "err",
        "add_header",
        "realm",
        "err",
        "func",
        "a",
        "ka",
        "wrapper",
        "decorator",
        "name",
        "functools",
        "wraps",
        "getattr",
        "Bottle",
        "name",
        "a",
        "ka",
        "getattr",
        "app",
        "name",
        "a",
        "ka",
        "wrapper",
        "make_default_app_wrapper",
        "make_default_app_wrapper",
        "make_default_app_wrapper",
        "make_default_app_wrapper",
        "make_default_app_wrapper",
        "make_default_app_wrapper",
        "make_default_app_wrapper",
        "make_default_app_wrapper",
        "make_default_app_wrapper",
        "make_default_app_wrapper",
        "make_default_app_wrapper",
        "host",
        "port",
        "options",
        "options",
        "host",
        "port",
        "handler",
        "join",
        "k",
        "repr",
        "v",
        "k",
        "v",
        "options",
        "items",
        "__class__",
        "args",
        "ServerAdapter",
        "handler",
        "wsgiref",
        "handlers",
        "CGIHandler",
        "environ",
        "start_response",
        "environ",
        "setdefault",
        "handler",
        "environ",
        "start_response",
        "CGIHandler",
        "run",
        "fixed_environ",
        "ServerAdapter",
        "handler",
        "flup",
        "server",
        "fcgi",
        "options",
        "setdefault",
        "host",
        "port",
        "flup",
        "server",
        "fcgi",
        "WSGIServer",
        "handler",
        "options",
        "run",
        "ServerAdapter",
        "app",
        "wsgiref",
        "simple_server",
        "WSGIRequestHandler",
        "WSGIServer",
        "wsgiref",
        "simple_server",
        "make_server",
        "socket",
        "WSGIRequestHandler",
        "client_address",
        "args",
        "kw",
        "quiet",
        "WSGIRequestHandler",
        "log_request",
        "args",
        "kw",
        "options",
        "get",
        "FixedHandler",
        "options",
        "get",
        "WSGIServer",
        "host",
        "getattr",
        "server_cls",
        "socket",
        "AF_INET",
        "server_cls",
        "socket",
        "AF_INET6",
        "make_server",
        "host",
        "port",
        "app",
        "server_cls",
        "handler_cls",
        "srv",
        "serve_forever",
        "ServerAdapter",
        "handler",
        "cherrypy",
        "wsgiserver",
        "options",
        "host",
        "port",
        "options",
        "handler",
        "options",
        "get",
        "certfile",
        "options",
        "options",
        "get",
        "keyfile",
        "options",
        "wsgiserver",
        "CherryPyWSGIServer",
        "options",
        "certfile",
        "certfile",
        "keyfile",
        "keyfile",
        "server",
        "start",
        "server",
        "stop",
        "ServerAdapter",
        "handler",
        "waitress",
        "serve",
        "serve",
        "handler",
        "host",
        "host",
        "port",
        "port",
        "ServerAdapter",
        "handler",
        "paste",
        "httpserver",
        "paste",
        "translogger",
        "TransLogger",
        "TransLogger",
        "handler",
        "setup_console_handler",
        "quiet",
        "httpserver",
        "serve",
        "handler",
        "host",
        "host",
        "port",
        "port",
        "options",
        "ServerAdapter",
        "handler",
        "meinheld",
        "server",
        "server",
        "listen",
        "host",
        "port",
        "server",
        "run",
        "handler",
        "ServerAdapter",
        "handler",
        "fapws",
        "_evwsgi",
        "evwsgi",
        "fapws",
        "config",
        "port",
        "config",
        "SERVER_IDENT",
        "port",
        "evwsgi",
        "start",
        "host",
        "port",
        "os",
        "environ",
        "quiet",
        "_stderr",
        "_stderr",
        "evwsgi",
        "set_base_module",
        "environ",
        "start_response",
        "handler",
        "environ",
        "start_response",
        "evwsgi",
        "wsgi_cb",
        "app",
        "evwsgi",
        "run",
        "ServerAdapter",
        "handler",
        "tornado",
        "wsgi",
        "tornado",
        "httpserver",
        "tornado",
        "ioloop",
        "tornado",
        "wsgi",
        "WSGIContainer",
        "handler",
        "tornado",
        "httpserver",
        "HTTPServer",
        "container",
        "server",
        "listen",
        "port",
        "port",
        "address",
        "host",
        "tornado",
        "ioloop",
        "IOLoop",
        "instance",
        "start",
        "ServerAdapter",
        "handler",
        "google",
        "appengine",
        "ext",
        "webapp",
        "util",
        "sys",
        "modules",
        "get",
        "hasattr",
        "util",
        "run_wsgi_app",
        "handler",
        "util",
        "run_wsgi_app",
        "handler",
        "ServerAdapter",
        "handler",
        "twisted",
        "web",
        "server",
        "wsgi",
        "twisted",
        "python",
        "threadpool",
        "ThreadPool",
        "twisted",
        "internet",
        "reactor",
        "ThreadPool",
        "thread_pool",
        "start",
        "reactor",
        "addSystemEventTrigger",
        "thread_pool",
        "stop",
        "server",
        "Site",
        "wsgi",
        "WSGIResource",
        "reactor",
        "thread_pool",
        "handler",
        "reactor",
        "listenTCP",
        "port",
        "factory",
        "host",
        "reactor",
        "run",
        "ServerAdapter",
        "handler",
        "diesel",
        "protocols",
        "wsgi",
        "WSGIApplication",
        "WSGIApplication",
        "handler",
        "port",
        "port",
        "app",
        "run",
        "ServerAdapter",
        "handler",
        "gevent",
        "wsgi",
        "pywsgi",
        "local",
        "isinstance",
        "threading",
        "local",
        "local",
        "local",
        "RuntimeError",
        "msg",
        "options",
        "pop",
        "pywsgi",
        "options",
        "quiet",
        "host",
        "port",
        "wsgi",
        "WSGIServer",
        "address",
        "handler",
        "options",
        "os",
        "environ",
        "signal",
        "signal",
        "signal",
        "signal",
        "SIGINT",
        "s",
        "f",
        "server",
        "stop",
        "server",
        "serve_forever",
        "ServerAdapter",
        "handler",
        "socketio",
        "server",
        "host",
        "port",
        "server",
        "SocketIOServer",
        "address",
        "handler",
        "options",
        "serve_forever",
        "ServerAdapter",
        "handler",
        "gunicorn",
        "app",
        "Application",
        "host",
        "port",
        "config",
        "update",
        "options",
        "Application",
        "parser",
        "opts",
        "args",
        "config",
        "handler",
        "GunicornApplication",
        "run",
        "ServerAdapter",
        "handler",
        "eventlet",
        "wsgi",
        "listen",
        "wsgi",
        "server",
        "listen",
        "host",
        "port",
        "handler",
        "log_output",
        "quiet",
        "wsgi",
        "server",
        "listen",
        "host",
        "port",
        "handler",
        "ServerAdapter",
        "handler",
        "rocket",
        "Rocket",
        "Rocket",
        "host",
        "port",
        "handler",
        "server",
        "start",
        "ServerAdapter",
        "handler",
        "bjoern",
        "run",
        "run",
        "handler",
        "host",
        "port",
        "ServerAdapter",
        "WaitressServer",
        "PasteServer",
        "TwistedServer",
        "CherryPyServer",
        "WSGIRefServer",
        "handler",
        "sa",
        "adapters",
        "sa",
        "host",
        "port",
        "options",
        "run",
        "handler",
        "ImportError",
        "CGIServer",
        "FlupFCGIServer",
        "WSGIRefServer",
        "WaitressServer",
        "CherryPyServer",
        "PasteServer",
        "FapwsServer",
        "TornadoServer",
        "AppEngineServer",
        "TwistedServer",
        "DieselServer",
        "MeinheldServer",
        "GunicornServer",
        "EventletServer",
        "GeventServer",
        "GeventSocketIOServer",
        "RocketServer",
        "BjoernServer",
        "AutoServer",
        "target",
        "target",
        "split",
        "target",
        "target",
        "sys",
        "modules",
        "__import__",
        "target",
        "sys",
        "modules",
        "target",
        "isalnum",
        "getattr",
        "sys",
        "modules",
        "target",
        "split",
        "sys",
        "modules",
        "package_name",
        "eval",
        "target",
        "target",
        "NORUN",
        "NORUN",
        "default_app",
        "push",
        "load",
        "target",
        "rv",
        "callable",
        "rv",
        "tmp",
        "default_app",
        "remove",
        "tmp",
        "nr_old",
        "debug",
        "app",
        "server",
        "host",
        "port",
        "interval",
        "reloader",
        "quiet",
        "plugins",
        "debug",
        "kargs",
        "NORUN",
        "reloader",
        "os",
        "environ",
        "get",
        "tempfile",
        "mkstemp",
        "prefix",
        "suffix",
        "os",
        "close",
        "fd",
        "os",
        "path",
        "exists",
        "lockfile",
        "sys",
        "executable",
        "sys",
        "argv",
        "os",
        "environ",
        "copy",
        "lockfile",
        "subprocess",
        "Popen",
        "args",
        "env",
        "environ",
        "p",
        "poll",
        "os",
        "utime",
        "lockfile",
        "time",
        "sleep",
        "interval",
        "p",
        "poll",
        "os",
        "path",
        "exists",
        "lockfile",
        "os",
        "unlink",
        "lockfile",
        "sys",
        "exit",
        "p",
        "poll",
        "KeyboardInterrupt",
        "os",
        "path",
        "exists",
        "lockfile",
        "os",
        "unlink",
        "lockfile",
        "debug",
        "_debug",
        "debug",
        "app",
        "default_app",
        "isinstance",
        "app",
        "basestring",
        "load_app",
        "app",
        "callable",
        "app",
        "ValueError",
        "app",
        "plugin",
        "plugins",
        "app",
        "install",
        "plugin",
        "server",
        "server_names",
        "server_names",
        "get",
        "server",
        "isinstance",
        "server",
        "basestring",
        "load",
        "server",
        "isinstance",
        "server",
        "server",
        "host",
        "host",
        "port",
        "port",
        "kargs",
        "isinstance",
        "server",
        "ServerAdapter",
        "ValueError",
        "server",
        "server",
        "quiet",
        "quiet",
        "server",
        "quiet",
        "_stderr",
        "__version__",
        "repr",
        "server",
        "_stderr",
        "server",
        "host",
        "server",
        "port",
        "_stderr",
        "reloader",
        "os",
        "environ",
        "get",
        "FileCheckerThread",
        "lockfile",
        "interval",
        "bgcheck",
        "server",
        "run",
        "app",
        "bgcheck",
        "status",
        "sys",
        "exit",
        "server",
        "run",
        "app",
        "KeyboardInterrupt",
        "SystemExit",
        "MemoryError",
        "reloader",
        "getattr",
        "server",
        "quiet",
        "print_exc",
        "time",
        "sleep",
        "interval",
        "sys",
        "exit",
        "threading",
        "lockfile",
        "interval",
        "threading",
        "lockfile",
        "interval",
        "lockfile",
        "interval",
        "os",
        "path",
        "exists",
        "path",
        "os",
        "stat",
        "path",
        "st_mtime",
        "sys",
        "modules",
        "values",
        "getattr",
        "path",
        "path",
        "path",
        "exists",
        "path",
        "mtime",
        "path",
        "status",
        "exists",
        "lockfile",
        "mtime",
        "lockfile",
        "time",
        "time",
        "interval",
        "thread",
        "interrupt_main",
        "path",
        "lmtime",
        "files",
        "items",
        "exists",
        "path",
        "mtime",
        "path",
        "lmtime",
        "thread",
        "interrupt_main",
        "time",
        "sleep",
        "interval",
        "start",
        "exc_type",
        "exc_val",
        "exc_tb",
        "status",
        "join",
        "exc_type",
        "issubclass",
        "exc_type",
        "KeyboardInterrupt",
        "HTTPError",
        "message",
        "HTTPError",
        "message",
        "source",
        "name",
        "lookup",
        "encoding",
        "settings",
        "name",
        "source",
        "read",
        "hasattr",
        "source",
        "source",
        "source",
        "filename",
        "hasattr",
        "source",
        "os",
        "path",
        "abspath",
        "x",
        "x",
        "lookup",
        "encoding",
        "settings",
        "copy",
        "settings",
        "update",
        "settings",
        "source",
        "name",
        "search",
        "name",
        "lookup",
        "filename",
        "TemplateError",
        "repr",
        "name",
        "source",
        "filename",
        "TemplateError",
        "prepare",
        "settings",
        "classmethod",
        "cls",
        "name",
        "lookup",
        "lookup",
        "depr",
        "os",
        "path",
        "isabs",
        "name",
        "os",
        "path",
        "isfile",
        "name",
        "depr",
        "os",
        "path",
        "abspath",
        "name",
        "spath",
        "lookup",
        "os",
        "path",
        "abspath",
        "spath",
        "os",
        "sep",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "spath",
        "name",
        "fname",
        "startswith",
        "spath",
        "os",
        "path",
        "isfile",
        "fname",
        "fname",
        "ext",
        "cls",
        "extensions",
        "os",
        "path",
        "isfile",
        "fname",
        "ext",
        "fname",
        "ext",
        "classmethod",
        "cls",
        "key",
        "args",
        "args",
        "cls",
        "settings",
        "copy",
        "cls",
        "settings",
        "args",
        "cls",
        "settings",
        "key",
        "options",
        "NotImplementedError",
        "args",
        "kwargs",
        "NotImplementedError",
        "BaseTemplate",
        "options",
        "mako",
        "template",
        "Template",
        "mako",
        "lookup",
        "TemplateLookup",
        "options",
        "update",
        "encoding",
        "options",
        "setdefault",
        "DEBUG",
        "TemplateLookup",
        "directories",
        "lookup",
        "options",
        "source",
        "Template",
        "source",
        "lookup",
        "lookup",
        "options",
        "Template",
        "uri",
        "name",
        "filename",
        "filename",
        "lookup",
        "lookup",
        "options",
        "args",
        "kwargs",
        "dictarg",
        "args",
        "kwargs",
        "update",
        "dictarg",
        "defaults",
        "copy",
        "_defaults",
        "update",
        "kwargs",
        "tpl",
        "render",
        "_defaults",
        "BaseTemplate",
        "options",
        "Cheetah",
        "Template",
        "Template",
        "threading",
        "local",
        "context",
        "context",
        "vars",
        "source",
        "Template",
        "source",
        "source",
        "options",
        "Template",
        "file",
        "filename",
        "options",
        "args",
        "kwargs",
        "dictarg",
        "args",
        "kwargs",
        "update",
        "dictarg",
        "context",
        "vars",
        "update",
        "defaults",
        "context",
        "vars",
        "update",
        "kwargs",
        "tpl",
        "context",
        "vars",
        "clear",
        "BaseTemplate",
        "filters",
        "tests",
        "globals",
        "kwargs",
        "jinja2",
        "Environment",
        "FunctionLoader",
        "kwargs",
        "RuntimeError",
        "Environment",
        "loader",
        "FunctionLoader",
        "loader",
        "kwargs",
        "filters",
        "env",
        "filters",
        "update",
        "filters",
        "tests",
        "env",
        "tests",
        "update",
        "tests",
        "globals",
        "env",
        "globals",
        "update",
        "globals",
        "source",
        "env",
        "from_string",
        "source",
        "env",
        "get_template",
        "filename",
        "args",
        "kwargs",
        "dictarg",
        "args",
        "kwargs",
        "update",
        "dictarg",
        "defaults",
        "copy",
        "_defaults",
        "update",
        "kwargs",
        "tpl",
        "render",
        "_defaults",
        "name",
        "search",
        "name",
        "lookup",
        "fname",
        "open",
        "fname",
        "f",
        "f",
        "read",
        "decode",
        "encoding",
        "BaseTemplate",
        "escape_func",
        "html_escape",
        "noescape",
        "syntax",
        "ka",
        "encoding",
        "x",
        "touni",
        "x",
        "enc",
        "x",
        "escape_func",
        "touni",
        "x",
        "enc",
        "syntax",
        "noescape",
        "_str",
        "_escape",
        "_escape",
        "_str",
        "cached_property",
        "compile",
        "code",
        "filename",
        "cached_property",
        "source",
        "source",
        "open",
        "filename",
        "f",
        "f",
        "read",
        "touni",
        "source",
        "UnicodeError",
        "depr",
        "touni",
        "source",
        "StplParser",
        "source",
        "encoding",
        "encoding",
        "syntax",
        "syntax",
        "parser",
        "translate",
        "parser",
        "encoding",
        "code",
        "_env",
        "_name",
        "kwargs",
        "_name",
        "depr",
        "_name",
        "kwargs",
        "_env",
        "_name",
        "kwargs",
        "_name",
        "depr",
        "_env",
        "copy",
        "env",
        "update",
        "kwargs",
        "_name",
        "cache",
        "cache",
        "__class__",
        "name",
        "_name",
        "lookup",
        "lookup",
        "cache",
        "_name",
        "execute",
        "env",
        "env",
        "_stdout",
        "kwargs",
        "defaults",
        "copy",
        "env",
        "update",
        "kwargs",
        "env",
        "update",
        "_stdout",
        "_stdout",
        "extend",
        "functools",
        "partial",
        "_include",
        "env",
        "functools",
        "partial",
        "_rebase",
        "env",
        "_str",
        "_escape",
        "env",
        "get",
        "env",
        "setdefault",
        "env",
        "__contains__",
        "eval",
        "co",
        "env",
        "env",
        "get",
        "env",
        "pop",
        "join",
        "_stdout",
        "_stdout",
        "_include",
        "env",
        "subtpl",
        "rargs",
        "env",
        "args",
        "kwargs",
        "dictarg",
        "args",
        "env",
        "update",
        "dictarg",
        "env",
        "update",
        "kwargs",
        "execute",
        "stdout",
        "env",
        "join",
        "stdout",
        "TemplateError",
        "_re_tok",
        "replace",
        "_re_tok",
        "_re_tok",
        "_re_tok",
        "_re_tok",
        "_re_tok",
        "_re_inl",
        "source",
        "syntax",
        "encoding",
        "source",
        "encoding",
        "touni",
        "source",
        "encoding",
        "encoding",
        "set_syntax",
        "syntax",
        "default_syntax",
        "code_buffer",
        "text_buffer",
        "lineno",
        "offset",
        "indent",
        "indent_mod",
        "_syntax",
        "syntax",
        "syntax",
        "syntax",
        "split",
        "syntax",
        "_re_cache",
        "re",
        "escape",
        "_tokens",
        "names",
        "split",
        "etokens",
        "_re_split",
        "_re_tok",
        "_re_inl",
        "re",
        "compile",
        "p",
        "pattern_vars",
        "p",
        "patterns",
        "_re_cache",
        "patterns",
        "re_split",
        "re_tok",
        "re_inl",
        "_re_cache",
        "syntax",
        "property",
        "get_syntax",
        "set_syntax",
        "offset",
        "RuntimeError",
        "re_split",
        "search",
        "source",
        "offset",
        "m",
        "source",
        "offset",
        "offset",
        "m",
        "start",
        "text_buffer",
        "append",
        "text",
        "offset",
        "m",
        "end",
        "m",
        "group",
        "source",
        "offset",
        "partition",
        "text_buffer",
        "append",
        "m",
        "group",
        "m",
        "group",
        "line",
        "sep",
        "offset",
        "len",
        "line",
        "sep",
        "m",
        "group",
        "depr",
        "source",
        "offset",
        "partition",
        "text_buffer",
        "append",
        "m",
        "group",
        "line",
        "sep",
        "offset",
        "len",
        "line",
        "sep",
        "flush_text",
        "read_code",
        "multiline",
        "m",
        "group",
        "text_buffer",
        "append",
        "source",
        "offset",
        "flush_text",
        "join",
        "code_buffer",
        "multiline",
        "re_tok",
        "search",
        "source",
        "offset",
        "m",
        "code_line",
        "source",
        "offset",
        "len",
        "source",
        "write_code",
        "code_line",
        "strip",
        "comment",
        "code_line",
        "source",
        "offset",
        "offset",
        "m",
        "start",
        "offset",
        "m",
        "end",
        "m",
        "groups",
        "code_line",
        "_blk1",
        "_blk2",
        "code_line",
        "_blk1",
        "_blk2",
        "_str",
        "code_line",
        "_str",
        "_com",
        "_com",
        "multiline",
        "_com",
        "strip",
        "endswith",
        "_tokens",
        "_blk1",
        "indent_mod",
        "_blk1",
        "indent",
        "_blk2",
        "indent_mod",
        "_blk2",
        "_end",
        "indent",
        "_cend",
        "multiline",
        "code_line",
        "_cend",
        "write_code",
        "code_line",
        "strip",
        "comment",
        "lineno",
        "indent_mod",
        "multiline",
        "join",
        "text_buffer",
        "text_buffer",
        "text",
        "indent",
        "m",
        "re_inl",
        "finditer",
        "text",
        "text",
        "pos",
        "m",
        "start",
        "m",
        "end",
        "prefix",
        "parts",
        "append",
        "nl",
        "join",
        "repr",
        "prefix",
        "splitlines",
        "prefix",
        "endswith",
        "parts",
        "nl",
        "parts",
        "append",
        "process_inline",
        "m",
        "group",
        "strip",
        "pos",
        "len",
        "text",
        "text",
        "pos",
        "prefix",
        "splitlines",
        "lines",
        "endswith",
        "lines",
        "lines",
        "endswith",
        "lines",
        "parts",
        "append",
        "nl",
        "join",
        "repr",
        "lines",
        "join",
        "parts",
        "lineno",
        "code",
        "count",
        "write_code",
        "code",
        "chunk",
        "chunk",
        "chunk",
        "chunk",
        "line",
        "comment",
        "fix_backward_compatibility",
        "line",
        "comment",
        "indent",
        "indent_mod",
        "code",
        "line",
        "lstrip",
        "comment",
        "code_buffer",
        "append",
        "code",
        "line",
        "comment",
        "line",
        "strip",
        "split",
        "parts",
        "parts",
        "depr",
        "len",
        "parts",
        "comment",
        "len",
        "parts",
        "parts",
        "comment",
        "parts",
        "comment",
        "lineno",
        "line",
        "strip",
        "comment",
        "re",
        "match",
        "comment",
        "m",
        "depr",
        "m",
        "group",
        "source",
        "encode",
        "encoding",
        "decode",
        "enc",
        "enc",
        "line",
        "comment",
        "replace",
        "line",
        "comment",
        "args",
        "kwargs",
        "args",
        "args",
        "kwargs",
        "pop",
        "SimpleTemplate",
        "kwargs",
        "pop",
        "TEMPLATE_PATH",
        "id",
        "lookup",
        "tpl",
        "tplid",
        "TEMPLATES",
        "DEBUG",
        "kwargs",
        "pop",
        "isinstance",
        "tpl",
        "adapter",
        "tpl",
        "settings",
        "TEMPLATES",
        "tplid",
        "prepare",
        "settings",
        "tpl",
        "tpl",
        "tpl",
        "tpl",
        "adapter",
        "source",
        "tpl",
        "lookup",
        "lookup",
        "settings",
        "adapter",
        "name",
        "tpl",
        "lookup",
        "lookup",
        "settings",
        "TEMPLATES",
        "tplid",
        "abort",
        "tpl",
        "dictarg",
        "args",
        "kwargs",
        "update",
        "dictarg",
        "TEMPLATES",
        "tplid",
        "render",
        "kwargs",
        "functools",
        "partial",
        "template",
        "template_adapter",
        "MakoTemplate",
        "functools",
        "partial",
        "template",
        "template_adapter",
        "CheetahTemplate",
        "functools",
        "partial",
        "template",
        "template_adapter",
        "Jinja2Template",
        "tpl_name",
        "defaults",
        "func",
        "functools",
        "wraps",
        "func",
        "args",
        "kwargs",
        "func",
        "args",
        "kwargs",
        "isinstance",
        "result",
        "DictMixin",
        "defaults",
        "copy",
        "tplvars",
        "update",
        "result",
        "template",
        "tpl_name",
        "tplvars",
        "result",
        "template",
        "tpl_name",
        "defaults",
        "result",
        "wrapper",
        "decorator",
        "functools",
        "partial",
        "view",
        "template_adapter",
        "MakoTemplate",
        "functools",
        "partial",
        "view",
        "template_adapter",
        "CheetahTemplate",
        "functools",
        "partial",
        "view",
        "template_adapter",
        "Jinja2Template",
        "httplib",
        "responses",
        "k",
        "k",
        "v",
        "k",
        "v",
        "HTTP_CODES",
        "items",
        "LocalRequest",
        "LocalResponse",
        "threading",
        "local",
        "AppStack",
        "app",
        "push",
        "_ImportRedirect",
        "_cmd_options",
        "_cmd_args",
        "_cmd_parser",
        "opt",
        "version",
        "_stdout",
        "__version__",
        "sys",
        "exit",
        "args",
        "parser",
        "print_help",
        "_stderr",
        "sys",
        "exit",
        "sys",
        "path",
        "insert",
        "sys",
        "modules",
        "setdefault",
        "sys",
        "modules",
        "opt",
        "bind",
        "host",
        "host",
        "rfind",
        "host",
        "rfind",
        "host",
        "rsplit",
        "host",
        "strip",
        "run",
        "args",
        "host",
        "host",
        "port",
        "port",
        "server",
        "opt",
        "server",
        "reloader",
        "opt",
        "reload",
        "plugins",
        "opt",
        "plugin",
        "debug",
        "opt",
        "debug"
    ],
    "literals": [
        "'Marcel Hellkamp'",
        "'0.12.8'",
        "'MIT'",
        "'__main__'",
        "\"usage: %prog [options] package.module:app\"",
        "\"--version\"",
        "\"store_true\"",
        "\"show version number.\"",
        "\"-b\"",
        "\"--bind\"",
        "\"ADDRESS\"",
        "\"bind socket to ADDRESS.\"",
        "\"-s\"",
        "\"--server\"",
        "'wsgiref'",
        "\"use SERVER as backend.\"",
        "\"-p\"",
        "\"--plugin\"",
        "\"append\"",
        "\"install additional plugin/s.\"",
        "\"--debug\"",
        "\"store_true\"",
        "\"start server in debug mode.\"",
        "\"--reload\"",
        "\"store_true\"",
        "\"auto-reload on file changes.\"",
        "'gevent'",
        "\"JSON support requires Python 2.6 or simplejson.\"",
        "'latin1'",
        "'__call__'",
        "\"Python 2.5 support may be dropped in future versions of Bottle.\"",
        "'def _raise(*a): raise a[0], a[1], a[2]'",
        "'<py3fix>'",
        "'exec'",
        "'utf8'",
        "'utf8'",
        "'strict'",
        "\"Read-Only property.\"",
        "\"Read-Only property.\"",
        "'__doc__'",
        "'('",
        "r'(\\\\*)(\\(\\?P<[^>]+>|\\((?!\\?))'",
        "'(?:'",
        "'[^/]+'",
        "'re'",
        "'re'",
        "'int'",
        "r'-?\\d+'",
        "'float'",
        "r'-?[\\d.]+'",
        "'path'",
        "r'.+?'",
        "'(\\\\\\\\*)'",
        "'(?:(?::([a-zA-Z_][a-zA-Z_0-9]*)?()(?:#(.*?)#)?)'",
        "'|(?:<([a-zA-Z_][a-zA-Z_0-9]*)?(?::([a-zA-Z_]*)'",
        "'(?::((?:\\\\\\\\.|[^\\\\\\\\>]+)+)?)?)?>))'",
        "''",
        "'default'",
        "''",
        "''",
        "'default'",
        "'(?:%s)'",
        "'anon%d'",
        "'(?P<%s>%s)'",
        "'^(%s)$'",
        "\"Could not add Route: %s (%s)\"",
        "'Path has wrong format.'",
        "'Route <%s %s> overwrites a previously defined route'",
        "'|'",
        "'(^%s$)'",
        "\"No route with that name.\"",
        "'anon%d'",
        "''",
        "'?'",
        "'Missing URL argument: %r'",
        "'REQUEST_METHOD'",
        "'PATH_INFO'",
        "'/'",
        "'HEAD'",
        "'PROXY'",
        "'GET'",
        "'ANY'",
        "'PROXY'",
        "'ANY'",
        "\",\"",
        "\"Method not allowed.\"",
        "\"Not found: \"",
        "\"Some APIs changed to return Route() instances instead of\"",
        "\" callables. Make sure to use the Route.call method and not to\"",
        "\" call Route instances directly.\"",
        "'call'",
        "'Switch to Plugin API v2 and access the Route object directly.'",
        "'name'",
        "'apply'",
        "'api'",
        "'__func__'",
        "'im_func'",
        "'__closure__'",
        "'func_closure'",
        "'<%s %r %r>'",
        "'config'",
        "'autojson'",
        "'validate'",
        "'catchall'",
        "'validate'",
        "'catchall'",
        "'autojson'",
        "'autojson'",
        "'config'",
        "'catchall'",
        "'before_request'",
        "'after_request'",
        "'app_reset'",
        "'config'",
        "'after_request'",
        "'Parameter order of Bottle.mount() changed.'",
        "'/'",
        "'Empty path prefix.'",
        "'skip'",
        "'method'",
        "'PROXY'",
        "'mountpoint'",
        "'prefix'",
        "'target'",
        "'callback'",
        "'/%s/<:re:.*>'",
        "'/'",
        "'/'",
        "'/'",
        "'/'",
        "'setup'",
        "'apply'",
        "\"Plugins must be callable or implement .apply()\"",
        "'name'",
        "'close'",
        "'app_reset'",
        "'close'",
        "'SCRIPT_NAME'",
        "''",
        "'/'",
        "'/'",
        "'/'",
        "'/'",
        "'GET'",
        "'GET'",
        "'POST'",
        "'PUT'",
        "'DELETE'",
        "'bottle.raw_path'",
        "'PATH_INFO'",
        "'PATH_INFO'",
        "'latin1'",
        "'utf8'",
        "'Invalid path string. Expected UTF-8'",
        "'bottle.app'",
        "'before_request'",
        "'route.handle'",
        "'bottle.route'",
        "'route.url_args'",
        "'after_request'",
        "'wsgi.errors'",
        "\"Internal Server Error\"",
        "'Content-Length'",
        "'Content-Length'",
        "'Content-Length'",
        "'Content-Length'",
        "'read'",
        "'wsgi.file_wrapper'",
        "'wsgi.file_wrapper'",
        "'close'",
        "'__iter__'",
        "''",
        "'Unhandled exception'",
        "'Unsupported response type: %s'",
        "'close'",
        "'REQUEST_METHOD'",
        "'HEAD'",
        "'close'",
        "'<h1>Critical error while processing request: %s</h1>'",
        "'PATH_INFO'",
        "'/'",
        "'<h2>Error:</h2>\\n<pre>\\n%s\\n</pre>\\n'",
        "'<h2>Traceback:</h2>\\n<pre>\\n%s\\n</pre>\\n'",
        "'wsgi.errors'",
        "'Content-Type'",
        "'text/html; charset=UTF-8'",
        "'500 INTERNAL SERVER ERROR'",
        "'environ'",
        "'bottle.request'",
        "'environ'",
        "'bottle.app'",
        "'This request is not connected to an application.'",
        "'environ'",
        "'bottle.route'",
        "'This request is not connected to a route.'",
        "'environ'",
        "'route.url_args'",
        "'This request is not connected to a route.'",
        "'/'",
        "'PATH_INFO'",
        "''",
        "'/'",
        "'REQUEST_METHOD'",
        "'GET'",
        "'environ'",
        "'bottle.request.headers'",
        "'environ'",
        "'bottle.request.cookies'",
        "'HTTP_COOKIE'",
        "''",
        "'environ'",
        "'bottle.request.query'",
        "'bottle.get'",
        "'QUERY_STRING'",
        "''",
        "'environ'",
        "'bottle.request.forms'",
        "'environ'",
        "'bottle.request.params'",
        "'environ'",
        "'bottle.request.files'",
        "'environ'",
        "'bottle.request.json'",
        "'CONTENT_TYPE'",
        "''",
        "';'",
        "'application/json'",
        "'Error while parsing chunked transfer body.'",
        "'\\r\\n'",
        "';'",
        "''",
        "'environ'",
        "'bottle.request.body'",
        "'wsgi.input'",
        "'w+b'",
        "'wsgi.input'",
        "'Request to large'",
        "'Request to large'",
        "'chunked'",
        "'HTTP_TRANSFER_ENCODING'",
        "''",
        "'environ'",
        "'bottle.request.post'",
        "'multipart/'",
        "'latin1'",
        "'QUERY_STRING'",
        "''",
        "'REQUEST_METHOD'",
        "'CONTENT_TYPE'",
        "'CONTENT_LENGTH'",
        "'fp'",
        "'fp'",
        "'utf8'",
        "'\\n'",
        "'encoding'",
        "'utf8'",
        "'_cgi.FieldStorage'",
        "'environ'",
        "'bottle.request.urlparts'",
        "'HTTP_X_FORWARDED_PROTO'",
        "'wsgi.url_scheme'",
        "'http'",
        "'HTTP_X_FORWARDED_HOST'",
        "'HTTP_HOST'",
        "'SERVER_NAME'",
        "'127.0.0.1'",
        "'SERVER_PORT'",
        "'80'",
        "'http'",
        "'443'",
        "':'",
        "'QUERY_STRING'",
        "''",
        "'/'",
        "'QUERY_STRING'",
        "''",
        "'SCRIPT_NAME'",
        "''",
        "'/'",
        "'/'",
        "'/'",
        "'/'",
        "'SCRIPT_NAME'",
        "'/'",
        "'SCRIPT_NAME'",
        "'PATH_INFO'",
        "'CONTENT_LENGTH'",
        "'CONTENT_TYPE'",
        "''",
        "'HTTP_X_REQUESTED_WITH'",
        "''",
        "'xmlhttprequest'",
        "'HTTP_AUTHORIZATION'",
        "''",
        "'REMOTE_USER'",
        "'HTTP_X_FORWARDED_FOR'",
        "','",
        "'REMOTE_ADDR'",
        "\"\"",
        "'bottle.request.readonly'",
        "'The environ dictionary is read-only.'",
        "'wsgi.input'",
        "'body'",
        "'forms'",
        "'files'",
        "'params'",
        "'post'",
        "'json'",
        "'QUERY_STRING'",
        "'query'",
        "'params'",
        "'HTTP_'",
        "'headers'",
        "'cookies'",
        "'bottle.request.'",
        "'<%s: %s %s>'",
        "'bottle.request.ext.%s'",
        "'__get__'",
        "'Attribute %r not defined.'",
        "'environ'",
        "'bottle.request.ext.%s'",
        "'_'",
        "'-'",
        "''",
        "'Current value of the %r header.'",
        "'text/html; charset=UTF-8'",
        "'Content-Type'",
        "'Allow'",
        "'Content-Encoding'",
        "'Content-Language'",
        "'Content-Length'",
        "'Content-Range'",
        "'Content-Type'",
        "'Content-Md5'",
        "'Last-Modified'",
        "''",
        "''",
        "'close'",
        "' '",
        "'String status line without a reason phrase.'",
        "'Status code out of range.'",
        "'%d Unknown'",
        "'Content-Type'",
        "'Content-Type'",
        "'Set-Cookie'",
        "'Content-Type'",
        "'Content-Length'",
        "'Expires'",
        "'UTF-8'",
        "'charset='",
        "'charset='",
        "';'",
        "'Secret key missing for non-string Cookie.'",
        "'Cookie value to long.'",
        "'max_age'",
        "'expires'",
        "\"%a, %d %b %Y %H:%M:%S GMT\"",
        "'_'",
        "'-'",
        "'max_age'",
        "'expires'",
        "''",
        "''",
        "'%s: %s\\n'",
        "'local_property() is deprecated and will be removed.'",
        "\"Request context not initialized.\"",
        "'Thread-local property'",
        "''",
        "'json'",
        "'application/json'",
        "'application/json'",
        "'template'",
        "'template'",
        "'__file__'",
        "'__path__'",
        "'__all__'",
        "'__loader__'",
        "'.'",
        "'.'",
        "'.'",
        "'utf8'",
        "'latin1'",
        "'__'",
        "'__'",
        "'CONTENT_TYPE'",
        "'CONTENT_LENGTH'",
        "'-'",
        "'_'",
        "'HTTP_'",
        "'latin1'",
        "\"%s is read-only.\"",
        "\"%s is read-only.\"",
        "'HTTP_'",
        "'_'",
        "'-'",
        "'_'",
        "'-'",
        "'_meta'",
        "'_on_change'",
        "'Accessing namespaces as dicts is discouraged. '",
        "'Only use flat item access: '",
        "'cfg[\"names\"][\"pace\"][\"key\"] -> cfg[\"name.space.key\"]'",
        "'.'",
        "'.'",
        "'.'",
        "'.'",
        "'.'",
        "'.'",
        "'<Config.Namespace %s.*>'",
        "'<Config.Namespace %s.*>'",
        "'Attribute access is deprecated.'",
        "'.'",
        "'__'",
        "'_config'",
        "'_prefix'",
        "'Attribute assignment is deprecated.'",
        "'Read-only attribute.'",
        "'Non-empty namespace attribute.'",
        "'.'",
        "'Calling ConfDict is deprecated. Use the update() method.'",
        "'Constructor does no longer accept parameters.'",
        "'DEFAULT'",
        "'bottle'",
        "'.'",
        "''",
        "'Source is not a dict (r)'",
        "'Key is not a string (%r)'",
        "'.'",
        "''",
        "'.'",
        "'.'",
        "'Key has type %r (not a string)'",
        "'filter'",
        "'Attribute access is deprecated.'",
        "'__'",
        "'Attribute assignment is deprecated.'",
        "'Read-only attribute.'",
        "'Non-empty namespace attribute.'",
        "'.'",
        "'Calling ConfDict is deprecated. Use the update() method.'",
        "'fileno'",
        "'close'",
        "'read'",
        "'readlines'",
        "'tell'",
        "'seek'",
        "'./'",
        "'all'",
        "'all'",
        "'found'",
        "'all'",
        "'r'",
        "\"Resource %r not found.\"",
        "'Content-Type'",
        "'Content-Length'",
        "'utf8'",
        "'ignore'",
        "'NFKD'",
        "'ASCII'",
        "'ignore'",
        "'ASCII'",
        "'\\\\'",
        "r'[^a-zA-Z0-9-_.\\s]'",
        "''",
        "r'[-\\s]+'",
        "'-'",
        "'.-'",
        "'empty'",
        "'File exists.'",
        "'wb'",
        "'Unknown Error.'",
        "'SERVER_PROTOCOL'",
        "\"HTTP/1.1\"",
        "\"\"",
        "'Location'",
        "'auto'",
        "'UTF-8'",
        "'/\\\\'",
        "\"Access denied.\"",
        "\"File does not exist.\"",
        "\"You do not have permission to access this file.\"",
        "'auto'",
        "'Content-Encoding'",
        "'text/'",
        "'charset'",
        "'; charset=%s'",
        "'Content-Type'",
        "'Content-Disposition'",
        "'attachment; filename=\"%s\"'",
        "'Content-Length'",
        "\"%a, %d %b %Y %H:%M:%S GMT\"",
        "'Last-Modified'",
        "'HTTP_IF_MODIFIED_SINCE'",
        "\";\"",
        "'Date'",
        "\"%a, %d %b %Y %H:%M:%S GMT\"",
        "''",
        "'HEAD'",
        "'rb'",
        "\"Accept-Ranges\"",
        "\"bytes\"",
        "'HTTP_RANGE'",
        "'HTTP_RANGE'",
        "'HTTP_RANGE'",
        "\"Requested Range Not Satisfiable\"",
        "\"Content-Range\"",
        "\"bytes %d-%d/%d\"",
        "\"Content-Length\"",
        "'default'",
        "\"%a, %d %b %Y %H:%M:%S GMT\"",
        "'basic'",
        "':'",
        "'bytes='",
        "'-'",
        "','",
        "'-'",
        "';'",
        "'&'",
        "'&'",
        "'='",
        "''",
        "'+'",
        "' '",
        "'+'",
        "' '",
        "'!'",
        "'?'",
        "'?'",
        "'!'",
        "'?'",
        "'&'",
        "'&amp;'",
        "'<'",
        "'&lt;'",
        "'>'",
        "'&gt;'",
        "'\"'",
        "'&quot;'",
        "\"'\"",
        "'&#039;'",
        "'\"%s\"'",
        "'\\n'",
        "'&#10;'",
        "'\\r'",
        "'&#13;'",
        "'\\t'",
        "'&#9;'",
        "'/'",
        "'__'",
        "'/'",
        "'/'",
        "'/<%s>'",
        "'/<%s>'",
        "'/'",
        "'/'",
        "'/'",
        "'/'",
        "''",
        "''",
        "'SCRIPT_NAME'",
        "'PATH_INFO'",
        "\"Cannot shift. Nothing left from %s\"",
        "'/'",
        "'/'",
        "'/'",
        "'/'",
        "'/'",
        "'/'",
        "\"private\"",
        "\"Access denied\"",
        "'WWW-Authenticate'",
        "'Basic realm=\"%s\"'",
        "'route'",
        "'get'",
        "'post'",
        "'put'",
        "'delete'",
        "'error'",
        "'mount'",
        "'hook'",
        "'install'",
        "'uninstall'",
        "'get_url'",
        "'127.0.0.1'",
        "', '",
        "'%s=%s'",
        "\"%s(%s)\"",
        "'PATH_INFO'",
        "''",
        "'bindAddress'",
        "'handler_class'",
        "'server_class'",
        "':'",
        "'address_family'",
        "'bind_addr'",
        "'wsgi_app'",
        "'certfile'",
        "'certfile'",
        "'keyfile'",
        "'keyfile'",
        "'BOTTLE_CHILD'",
        "\"WARNING: Auto-reloading does not work with Fapws3.\\n\"",
        "\"         (Fapws3 breaks python thread support)\\n\"",
        "'wsgi.multiprocess'",
        "''",
        "'__main__'",
        "'main'",
        "'after'",
        "'shutdown'",
        "\"Bottle requires gevent.monkey.patch_all() (before import)\"",
        "'fast'",
        "'log'",
        "'default'",
        "'BOTTLE_CHILD'",
        "'bind'",
        "\"%s:%d\"",
        "'wsgi'",
        "'wsgi_app'",
        "'cgi'",
        "'flup'",
        "'wsgiref'",
        "'waitress'",
        "'cherrypy'",
        "'paste'",
        "'fapws3'",
        "'tornado'",
        "'gae'",
        "'twisted'",
        "'diesel'",
        "'meinheld'",
        "'gunicorn'",
        "'eventlet'",
        "'gevent'",
        "'geventSocketIO'",
        "'rocket'",
        "'bjoern'",
        "'auto'",
        "\":\"",
        "':'",
        "'.'",
        "'%s.%s'",
        "'wsgiref'",
        "'127.0.0.1'",
        "'BOTTLE_CHILD'",
        "'bottle.'",
        "'.lock'",
        "'BOTTLE_CHILD'",
        "'true'",
        "'BOTTLE_LOCKFILE'",
        "\"Application is not callable: %r\"",
        "\"Unknown or unsupported server: %r\"",
        "\"Bottle v%s server starting up (using %s)...\\n\"",
        "\"Listening on http://%s:%d/\\n\"",
        "\"Hit Ctrl-C to quit.\\n\\n\"",
        "'BOTTLE_LOCKFILE'",
        "'reload'",
        "'quiet'",
        "'__file__'",
        "''",
        "'.pyo'",
        "'.pyc'",
        "'error'",
        "'reload'",
        "'exit'",
        "'tpl'",
        "'html'",
        "'thtml'",
        "'stpl'",
        "'utf8'",
        "'read'",
        "'filename'",
        "'Template %s not found.'",
        "'No template specified.'",
        "'The template lookup path list should not be empty.'",
        "'.'",
        "'Absolute template path names are deprecated.'",
        "'%s.%s'",
        "'%s.%s'",
        "'input_encoding'",
        "'format_exceptions'",
        "'searchList'",
        "'prefix'",
        "'The keyword argument `prefix` has been removed. '",
        "'Use the full jinja2 environment name line_statement_prefix instead.'",
        "\"rb\"",
        "'<string>'",
        "'exec'",
        "'rb'",
        "'utf8'",
        "'Template encodings other than utf8 are no longer supported.'",
        "'latin1'",
        "'latin1'",
        "'Rebase function called without arguments.'",
        "' You were probably looking for {{base}}?'",
        "'_rebase'",
        "'Rebase function called without arguments.'",
        "' You were probably looking for {{base}}?'",
        "'_stdout'",
        "'_stdout'",
        "'_printlist'",
        "'include'",
        "'rebase'",
        "'_rebase'",
        "'_str'",
        "'_escape'",
        "'get'",
        "'setdefault'",
        "'defined'",
        "'_rebase'",
        "'_rebase'",
        "'base'",
        "''",
        "''",
        "'((?m)[urbURB]?(?:\\'\\'(?!\\')|\"\"(?!\")|\\'{6}|\"{6}'",
        "'|\\'(?:[^\\\\\\\\\\']|\\\\\\\\.)+?\\'|\"(?:[^\\\\\\\\\"]|\\\\\\\\.)+?\"'",
        "'|\\'{3}(?:[^\\\\\\\\]|\\\\\\\\.|\\\\n)+?\\'{3}'",
        "'|\"{3}(?:[^\\\\\\\\]|\\\\\\\\.|\\\\n)+?\"{3}))'",
        "'|\\\\n'",
        "''",
        "'|(#.*)'",
        "'|^([ \\\\t]*(?:if|for|while|with|try|def|class)\\\\b)'",
        "'|^([ \\\\t]*(?:elif|else|except|finally)\\\\b)'",
        "'|((?:^|;)[ \\\\t]*end[ \\\\t]*(?=(?:%(block_close)s[ \\\\t]*)?\\\\r?$|;|#))'",
        "'|(%(block_close)s[ \\\\t]*(?=$))'",
        "'|(\\\\r?\\\\n)'",
        "'(?m)^[ \\t]*(\\\\\\\\?)((%(line_start)s)|(%(block_start)s))(%%?)'",
        "'%%(inline_start)s((?:%s|[^\\'\"\\n]*?)+)%%(inline_end)s'",
        "'<% %> % {{ }}'",
        "'utf8'",
        "'block_start block_close line_start inline_start inline_end'",
        "'Parser is a one time instance.'",
        "'\\n'",
        "'Escape code lines with a backslash.'",
        "'\\n'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'\\\\\\n'",
        "'  '",
        "'\\n'",
        "'\\\\\\\\\\n'",
        "'\\\\\\\\\\r\\n'",
        "'_printlist((%s,))'",
        "', '",
        "'\\n'",
        "'!'",
        "'_str(%s)'",
        "'_escape(%s)'",
        "''",
        "'  '",
        "'\\n'",
        "'include'",
        "'rebase'",
        "'The include and rebase keywords are functions now.'",
        "\"_printlist([base])\"",
        "\"_=%s(%r)\"",
        "\"_=%s(%r, %s)\"",
        "'coding'",
        "r\"#.*coding[:=]\\s*([-\\w.]+)\"",
        "'PEP263 encoding strings in templates are deprecated.'",
        "'coding'",
        "'coding*'",
        "'template_adapter'",
        "'template_lookup'",
        "'template_settings'",
        "\"\\n\"",
        "\"{\"",
        "\"%\"",
        "'$'",
        "'Template (%s) not found'",
        "'./'",
        "'./views/'",
        "\"I'm a teapot\"",
        "\"Unprocessable Entity\"",
        "\"Precondition Required\"",
        "\"Too Many Requests\"",
        "\"Request Header Fields Too Large\"",
        "\"Network Authentication Required\"",
        "'%d %s'",
        "'bottle.ext'",
        "'__main__'",
        "\".ext\"",
        "'bottle_%s'",
        "'__main__'",
        "'Bottle %s\\n'",
        "'\\nError: No application specified.\\n'",
        "'.'",
        "'bottle'",
        "'__main__'",
        "'localhost'",
        "':'",
        "']'",
        "':'",
        "':'",
        "'[]'"
    ],
    "variables": [
        "__author__",
        "__version__",
        "__license__",
        "_cmd_parser",
        "_opt",
        "_cmd_options",
        "_cmd_args",
        "json_lds",
        "py",
        "py3k",
        "py25",
        "py31",
        "_stdout",
        "_stderr",
        "_stdout",
        "_stderr",
        "urlunquote",
        "basestring",
        "unicode",
        "json_loads",
        "callable",
        "imap",
        "msg",
        "unicode",
        "json_loads",
        "tonat",
        "key",
        "storage",
        "storage",
        "key",
        "__doc__",
        "func",
        "value",
        "getter",
        "value",
        "default_pattern",
        "default_filter",
        "_MAX_GROUPS_PER_PATTERN",
        "rules",
        "_groups",
        "builder",
        "dyna_routes",
        "dyna_regexes",
        "strict_order",
        "filters",
        "name",
        "rule_syntax",
        "offset",
        "prefix",
        "g",
        "offset",
        "name",
        "filtr",
        "conf",
        "offset",
        "prefix",
        "anons",
        "keys",
        "pattern",
        "filters",
        "builder",
        "is_static",
        "is_static",
        "mode",
        "mask",
        "in_filter",
        "out_filter",
        "key",
        "rule",
        "name",
        "re_pattern",
        "re_match",
        "url_args",
        "url_args",
        "name",
        "getargs",
        "flatpat",
        "whole_rule",
        "msg",
        "flatpat",
        "method",
        "all_rules",
        "comborules",
        "method",
        "maxgroups",
        "some",
        "combined",
        "combined",
        "combined",
        "rules",
        "builder",
        "query",
        "url",
        "verb",
        "path",
        "target",
        "methods",
        "methods",
        "target",
        "getargs",
        "match",
        "target",
        "getargs",
        "allowed",
        "nocheck",
        "match",
        "allow_header",
        "app",
        "rule",
        "method",
        "callback",
        "name",
        "plugins",
        "skiplist",
        "config",
        "unique",
        "name",
        "callback",
        "api",
        "context",
        "callback",
        "callback",
        "func",
        "func",
        "closure_attr",
        "func",
        "cb",
        "config",
        "_on_change",
        "resources",
        "routes",
        "router",
        "error_handler",
        "plugins",
        "catchall",
        "__hook_names",
        "__hook_reversed",
        "segments",
        "path_depth",
        "rs",
        "exc_info",
        "rs",
        "status",
        "body",
        "body",
        "rs",
        "body",
        "options",
        "routes",
        "removed",
        "remove",
        "routes",
        "routes",
        "routes",
        "stopped",
        "scriptname",
        "location",
        "path",
        "callback",
        "plugins",
        "skiplist",
        "callback",
        "verb",
        "route",
        "path",
        "environ",
        "environ",
        "environ",
        "route",
        "args",
        "environ",
        "environ",
        "environ",
        "stacktrace",
        "response",
        "response",
        "iout",
        "first",
        "first",
        "first",
        "first",
        "new_iter",
        "encoder",
        "new_iter",
        "msg",
        "new_iter",
        "err",
        "headers",
        "__slots__",
        "MEMFILE_MAX",
        "environ",
        "cookies",
        "value",
        "dec",
        "get",
        "pairs",
        "get",
        "key",
        "forms",
        "forms",
        "name",
        "key",
        "key",
        "files",
        "files",
        "name",
        "ctype",
        "b",
        "maxread",
        "part",
        "err",
        "rn",
        "sem",
        "bs",
        "header",
        "c",
        "size",
        "_",
        "_",
        "maxread",
        "buff",
        "buff",
        "part",
        "buff",
        "body_iter",
        "read_func",
        "body",
        "body_size",
        "is_temp_file",
        "body",
        "tmp",
        "is_temp_file",
        "clen",
        "clen",
        "data",
        "GET",
        "post",
        "pairs",
        "post",
        "key",
        "safe_env",
        "safe_env",
        "key",
        "args",
        "args",
        "args",
        "data",
        "data",
        "post",
        "post",
        "env",
        "http",
        "host",
        "host",
        "port",
        "path",
        "script_name",
        "script",
        "requested_with",
        "basic",
        "ruser",
        "proxy",
        "remote",
        "route",
        "key",
        "key",
        "todelete",
        "todelete",
        "todelete",
        "todelete",
        "__doc__",
        "value",
        "default_status",
        "default_content_type",
        "bad_headers",
        "_cookies",
        "_headers",
        "body",
        "status",
        "headers",
        "cls",
        "copy",
        "copy",
        "status",
        "copy",
        "_headers",
        "copy",
        "_cookies",
        "code",
        "status",
        "status",
        "code",
        "_status_code",
        "_status_line",
        "status",
        "hdict",
        "hdict",
        "headers",
        "bad_headers",
        "headers",
        "content_type",
        "content_length",
        "expires",
        "_cookies",
        "value",
        "name",
        "value",
        "value",
        "value",
        "value",
        "kwargs",
        "kwargs",
        "ls",
        "ls",
        "bind",
        "environ",
        "bind",
        "_status_line",
        "_status_code",
        "_cookies",
        "_headers",
        "body",
        "Request",
        "Response",
        "response",
        "_status_code",
        "response",
        "_status_line",
        "response",
        "_headers",
        "response",
        "_cookies",
        "response",
        "body",
        "default_status",
        "exception",
        "traceback",
        "name",
        "api",
        "json_dumps",
        "dumps",
        "rv",
        "rv",
        "json_response",
        "response",
        "content_type",
        "rv",
        "body",
        "rv",
        "content_type",
        "name",
        "api",
        "conf",
        "name",
        "impmask",
        "packname",
        "modname",
        "realname",
        "fullname",
        "__loader__",
        "iterkeys",
        "itervalues",
        "iteritems",
        "iterallitems",
        "val",
        "key",
        "getone",
        "getlist",
        "input_encoding",
        "recode_unicode",
        "copy",
        "enc",
        "copy",
        "input_encoding",
        "copy",
        "recode_unicode",
        "cgikeys",
        "environ",
        "key",
        "__slots__",
        "_config",
        "_prefix",
        "ns_prefix",
        "ns",
        "dot",
        "name",
        "key",
        "key",
        "key",
        "val",
        "prefix",
        "_meta",
        "_on_change",
        "conf",
        "key",
        "key",
        "stack",
        "prefix",
        "source",
        "full_key",
        "full_key",
        "full_key",
        "prefix",
        "prefix",
        "a",
        "key",
        "value",
        "metafield",
        "key",
        "key",
        "key",
        "val",
        "prefix",
        "value",
        "buff",
        "read",
        "part",
        "iterator",
        "close_callbacks",
        "opener",
        "cachemode",
        "path",
        "cache",
        "path",
        "search",
        "path",
        "full",
        "fpath",
        "name",
        "name",
        "fname",
        "file",
        "name",
        "raw_filename",
        "headers",
        "content_type",
        "content_length",
        "fname",
        "fname",
        "fname",
        "fname",
        "fname",
        "fname",
        "read",
        "write",
        "offset",
        "buf",
        "destination",
        "code",
        "res",
        "res",
        "status",
        "res",
        "body",
        "part",
        "root",
        "filename",
        "headers",
        "mimetype",
        "encoding",
        "headers",
        "headers",
        "download",
        "headers",
        "stats",
        "headers",
        "clen",
        "lm",
        "headers",
        "ims",
        "ims",
        "headers",
        "body",
        "headers",
        "ranges",
        "ranges",
        "offset",
        "end",
        "headers",
        "headers",
        "body",
        "DEBUG",
        "value",
        "value",
        "value",
        "ts",
        "method",
        "data",
        "user",
        "pwd",
        "ranges",
        "start",
        "end",
        "start",
        "end",
        "start",
        "end",
        "r",
        "nv",
        "key",
        "value",
        "msg",
        "sig",
        "data",
        "sig",
        "msg",
        "path",
        "spec",
        "argc",
        "pathlist",
        "scriptlist",
        "pathlist",
        "scriptlist",
        "moved",
        "scriptlist",
        "pathlist",
        "moved",
        "pathlist",
        "scriptlist",
        "empty",
        "new_script_name",
        "new_path_info",
        "user",
        "password",
        "err",
        "route",
        "get",
        "post",
        "put",
        "error",
        "mount",
        "hook",
        "install",
        "uninstall",
        "url",
        "quiet",
        "options",
        "host",
        "port",
        "args",
        "quiet",
        "handler_cls",
        "server_cls",
        "address_family",
        "srv",
        "certfile",
        "keyfile",
        "server",
        "server",
        "ssl_certificate",
        "server",
        "ssl_private_key",
        "handler",
        "port",
        "port",
        "environ",
        "container",
        "server",
        "quiet",
        "main",
        "thread_pool",
        "factory",
        "app",
        "msg",
        "wsgi",
        "address",
        "server",
        "address",
        "config",
        "server",
        "adapters",
        "server_names",
        "target",
        "package_name",
        "package_name",
        "NORUN",
        "nr_old",
        "tmp",
        "rv",
        "NORUN",
        "_debug",
        "lockfile",
        "fd",
        "lockfile",
        "args",
        "environ",
        "environ",
        "environ",
        "p",
        "app",
        "app",
        "server",
        "server",
        "server",
        "server",
        "quiet",
        "lockfile",
        "bgcheck",
        "status",
        "exists",
        "mtime",
        "files",
        "path",
        "path",
        "files",
        "path",
        "status",
        "status",
        "status",
        "extensions",
        "settings",
        "defaults",
        "name",
        "source",
        "filename",
        "lookup",
        "encoding",
        "settings",
        "filename",
        "lookup",
        "spath",
        "fname",
        "cls",
        "settings",
        "key",
        "lookup",
        "tpl",
        "tpl",
        "_defaults",
        "context",
        "vars",
        "options",
        "tpl",
        "tpl",
        "env",
        "tpl",
        "tpl",
        "_defaults",
        "fname",
        "cache",
        "enc",
        "_str",
        "_escape",
        "syntax",
        "source",
        "source",
        "source",
        "encoding",
        "source",
        "encoding",
        "parser",
        "code",
        "encoding",
        "_env",
        "env",
        "_name",
        "env",
        "subtpl",
        "rargs",
        "rargs",
        "env",
        "stdout",
        "_re_cache",
        "_re_tok",
        "_re_inl",
        "_re_split",
        "_re_inl",
        "default_syntax",
        "_syntax",
        "_tokens",
        "names",
        "etokens",
        "pattern_vars",
        "patterns",
        "patterns",
        "syntax",
        "syntax",
        "m",
        "text",
        "line",
        "sep",
        "_",
        "line",
        "sep",
        "_",
        "code_line",
        "comment",
        "m",
        "offset",
        "_str",
        "_com",
        "_blk1",
        "_blk2",
        "_end",
        "_cend",
        "_nl",
        "comment",
        "multiline",
        "code_line",
        "code_line",
        "multiline",
        "code_line",
        "comment",
        "text",
        "parts",
        "pos",
        "nl",
        "prefix",
        "pos",
        "prefix",
        "lines",
        "lines",
        "lines",
        "code",
        "line",
        "comment",
        "code",
        "parts",
        "m",
        "enc",
        "source",
        "encoding",
        "tpl",
        "adapter",
        "lookup",
        "tplid",
        "settings",
        "TEMPLATES",
        "tplid",
        "TEMPLATES",
        "tplid",
        "TEMPLATES",
        "tplid",
        "mako_template",
        "cheetah_template",
        "jinja2_template",
        "result",
        "tplvars",
        "mako_view",
        "cheetah_view",
        "jinja2_view",
        "TEMPLATE_PATH",
        "TEMPLATES",
        "DEBUG",
        "NORUN",
        "HTTP_CODES",
        "HTTP_CODES",
        "HTTP_CODES",
        "HTTP_CODES",
        "HTTP_CODES",
        "HTTP_CODES",
        "HTTP_CODES",
        "_HTTP_STATUS_LINES",
        "ERROR_PAGE_TEMPLATE",
        "request",
        "response",
        "local",
        "app",
        "default_app",
        "ext",
        "opt",
        "args",
        "parser",
        "host",
        "port",
        "host",
        "port",
        "host"
    ],
    "comments": [
        "!/usr/bin/env python",
        "-*- coding: utf-8 -*-",
        "The gevent server adapter needs to patch some modules before they are imported",
        "This is why we parse the commandline parameters here but handle them later",
        "pragma: no cover",
        "We now try to fix 2.5/2.6/3.1/3.2 incompatibilities.",
        "It ain't pretty but it works... Sorry for the mess.",
        "Workaround for the missing \"as\" keyword in py3k.",
        "Workaround for the \"print is a keyword/function\" Python 2/3 dilemma",
        "and a fallback for mod_wsgi (resticts stdout/err attribute access)",
        "Lots of stdlib and builtin differences.",
        "2.x",
        "2.6, 2.7",
        "Some helpers for string/byte handling",
        "3.2 fixes cgi.FieldStorage to accept bytes (which makes a lot of sense).",
        "3.1 needs a workaround.",
        "Keep wrapped buffer open.",
        "A bug in functools causes it to break if the wrapper is an instance method",
        "These helpers are used at module level and need to be defined first.",
        "And yes, I know PEP-8, but sometimes a lower-case classname makes more sense.",
        "This is just to handy",
        "",
        "Exceptions and Events ########################################################",
        "",
        "",
        "Routing ######################################################################",
        "",
        ": The current CPython regexp implementation does not allow more",
        ": than 99 matching groups per regular expression.",
        "All rules in order",
        "index of regexes to find them in dyna_routes",
        "Data structure for the url builder",
        "Search structure for static routes",
        "Search structure for dynamic routes",
        ": If true, static routes are no longer checked first.",
        "Escaped wildcard",
        "Number of anonymous wildcards found",
        "Names of keys",
        "Regular expression pattern with named groups",
        "Lists of wildcard input filters",
        "Data structure for the URL builder",
        "No matching route found. Collect alternative methods for 405 response",
        "No matching route and no alternative method found. We give up",
        ": The application this route is installed to.",
        ": The path-rule string (e.g. ``/wiki/:page``).",
        ": The HTTP method as a string (e.g. ``GET``).",
        ": The original callback with no plugins applied. Useful for introspection.",
        ": The name of the route (if specified) or ``None``.",
        ": A list of route-specific plugins (see :meth:`Bottle.route`).",
        ": A list of plugins to not apply to this route (see :meth:`Bottle.route`).",
        ": Additional keyword arguments passed to the :meth:`Bottle.route`",
        ": decorator are stored in this dictionary. Used for route-specific",
        ": plugin configuration and meta-data.",
        "0.12",
        "0.12",
        "Try again with changed configuration.",
        "",
        "Application Object ###########################################################",
        "",
        ": A :class:`ConfigDict` for app specific configuration.",
        ": A :class:`ResourceManager` for application files",
        "List of installed :class:`Route` instances.",
        "Maps requests to :class:`Route` instances.",
        "Core plugins",
        "List of installed plugins.",
        ": If true, most exceptions are caught and returned as :exc:`HTTPError`",
        "0.10",
        "TODO: Documentation and tests",
        "Empty output is done here",
        "Join lists of byte or unicode strings. Mixed lists are NOT supported",
        "b'abc'[0:0] -> b''",
        "Encode unicode strings",
        "Byte Strings are just returned",
        "HTTPError or HTTPException (recursive, because they may wrap anything)",
        "TODO: Handle these explicitly in handle() or make them iterable.",
        "File-like objects.",
        "Handle Iterables. We peek into them to detect their inner type.",
        "These are the inner types allowed in iterator or generator objects.",
        "rfc2616 section 4.3",
        "",
        "HTTP and WSGI Tools ##########################################################",
        "",
        ": Maximum size of memory buffer for :attr:`body` in bytes.",
        ": The wrapped WSGI environ dictionary. This is the only real attribute.",
        ": All other attributes actually are read-only properties.",
        "(key, value) tuple or None",
        "Fail fast",
        ": An alias for :attr:`query`.",
        "We default to application/x-www-form-urlencoded for everything that",
        "is not multipart and take the fast path (also: 3.1 workaround)",
        "Build a safe environment for cgi",
        "http://bugs.python.org/issue18394#msg207958",
        "HTTP 1.1 requires a Host-header. This is for HTTP/1.0 clients.",
        "Header blacklist for specific response codes",
        "(rfc2616 section 10.2.3 and 10.3.5)",
        "0.12",
        "",
        "Plugins ######################################################################",
        "",
        "Attempt to serialize, raises exception on failure",
        "Set content type only if serialization succesful",
        ": Not a plugin, but part of the plugin API. TODO: Find a better place.",
        "",
        "Common Utilities #############################################################",
        "",
        ": Aliases for WTForms to mimic other multi-dict APIs (Django)",
        ": Encoding used for attribute values.",
        ": If true (default), unicode strings are first encoded with `latin1`",
        ": and then decoded to match :attr:`input_encoding`.",
        "Python 3 WSGI",
        "Python 2 WSGI",
        "Without this guard, pickle generates a cryptic TypeError:",
        ": List of keys that do not have a ``HTTP_`` prefix.",
        "0.12",
        "Deprecated ConfigDict features",
        "0.12",
        "0.12",
        "0.12",
        "0.12",
        "Deprecated ConfigDict features",
        "0.12",
        "0.12",
        "0.12",
        ": A list of search paths. See :meth:`add_path` for details.",
        ": A cache for resolved paths. ``res.cache.clear()`` clears the cache.",
        ": Open file(-like) object (BytesIO buffer or temporary file)",
        ": Name of the upload form field",
        ": Raw filename as sent by the client (may contain unsafe characters)",
        ": A :class:`HeaderDict` with additional headers (e.g. content-type)",
        "Except file-likes here",
        "",
        "Application Helper ###########################################################",
        "",
        "",
        "HTTP Utilities and MISC (TODO) ###############################################",
        "",
        "bytes=-100    -> last 100 bytes",
        "bytes=100-    -> all but the first 99 bytes",
        "bytes=100-200 -> bytes 100-200 (inclusive)",
        "Shortcuts for common Bottle methods.",
        "They all refer to the current default application.",
        "",
        "Server Adapter ###############################################################",
        "",
        "pragma: no cover",
        "pragma: no cover",
        "pragma: no cover",
        "pragma: no cover",
        "Prevent reverse DNS lookups please.",
        "Fix wsgiref for IPv6 addresses.",
        "pragma: no cover",
        "pragma: no cover",
        "pragma: no cover",
        "fapws3 silently changed its API in 0.5",
        "fapws3 never releases the GIL. Complain upstream. I tried. No luck.",
        "pragma: no cover",
        "A main() function in the handler script enables 'App Caching'.",
        "Lets makes sure it is there. This _really_ improves performance.",
        "Fallback, if we have old version of eventlet",
        "",
        "Application Control ##########################################################",
        "",
        "Create a new \"default application\"",
        "Import the target module",
        "Remove the temporary added default application",
        "We only need this file to exist. We never write to it",
        "Busy wait...",
        "I am alive!",
        ": Is one of 'reload', 'error' or 'exit'",
        "silent exit",
        "",
        "Template Adapters ############################################################",
        "",
        "used in prepare()",
        "used in render()",
        "Copy from class variable",
        "Apply",
        "0.12",
        "0.12",
        "Make settings local to class",
        "TODO: to be removed after a while",
        "0.11",
        "0.12",
        "0.12",
        "copy stdout",
        "clear stdout",
        ": Cache for compiled re patterns",
        "This huge pile of voodoo magic splits python code into 8 different tokens.",
        "1: All kinds of python strings (trust me, it works)",
        "We re-use this string pattern later",
        "2: Comments (until end of line, but not the newline itself)",
        "3,4: Keywords that start or continue a python block (only start of line)",
        "5: Our special 'end' keyword (but only if it stands alone)",
        "6: A customizable end-of-code-block template token (only end of line)",
        "7: And finally, a single newline. The 8th token is 'everything else'",
        "Match the start tokens of code areas in a template",
        "Match inline statements (may contain python strings)",
        "New escape syntax",
        "Old escape syntax",
        "0.12",
        "a if b else c",
        "Python string",
        "Python comment (up to EOL)",
        "Allow end-of-block in comments",
        "Start-block keyword (if/for/while/def/try/...)",
        "Continue-block keyword (else/elif/except/...)",
        "The non-standard 'end'-keyword (ends a block)",
        "The end-code-block template token (usually '%>')",
        "\\n",
        "0.12",
        "0.12",
        "",
        "Constants and Globals ########################################################",
        "",
        "If set, run() does nothing. Used by load_app()",
        ": A dict to map HTTP status codes (e.g. 404) to phrases (e.g. 'Not Found')",
        "RFC 2324",
        "RFC 4918",
        ": The default template used for error pages. Override with @error()",
        ": A thread-safe instance of :class:`LocalRequest`. If accessed from within a",
        ": request callback, this instance always refers to the *current* request",
        ": (even on a multithreaded server).",
        ": A thread-safe instance of :class:`LocalResponse`. It is used to change the",
        ": HTTP response for the *current* request.",
        ": A thread-safe namespace. Not used by Bottle.",
        "Initialize app stack (create first empty Bottle app)",
        "BC: 0.6.4 and needed for run()",
        ": A virtual package that redirects import statements.",
        ": Example: ``import bottle.ext.sqlite`` actually imports `bottle_sqlite`.",
        "THE END"
    ],
    "docstrings": [
        "\"\"\"\nBottle is a fast and simple micro-framework for small web applications. It\noffers request dispatching (Routes) with url parameter support, templates,\na built-in HTTP Server and adapters for many third party WSGI/HTTP-server and\ntemplate engines - all in a single file and with no dependencies other than the\nPython Standard Library.\n\nHomepage and documentation: http://bottlepy.org/\n\nCopyright (c) 2013, Marcel Hellkamp.\nLicense: MIT (see LICENSE for details)\n\"\"\"",
        "''' Property that maps to a key in a local dict-like attribute. '''",
        "''' A property that is only computed once per instance and then replaces\n        itself with an ordinary attribute. Deleting the attribute resets the\n        property. '''",
        "''' A property that caches itself to the class object. '''",
        "\"\"\" A base class for exceptions used by bottle. \"\"\"",
        "\"\"\" This is a base class for all routing related exceptions \"\"\"",
        "\"\"\" If raised by a plugin or request handler, the route is reset and all\n        plugins are re-applied. \"\"\"",
        "\"\"\" The route parser found something not supported by this router. \"\"\"",
        "\"\"\" The route could not be built. \"\"\"",
        "''' Turn all capturing groups in a regular expression pattern into\n        non-capturing groups. '''",
        "''' A Router is an ordered collection of route->target pairs. It is used to\n        efficiently match WSGI requests against a number of routes and return\n        the first target that satisfies the request. The target may be anything,\n        usually a string, ID or callable object. A route consists of a path-rule\n        and a HTTP method.\n\n        The path-rule is either a static path (e.g. `/contact`) or a dynamic\n        path that contains wildcards (e.g. `/wiki/<page>`). The wildcard syntax\n        and details on the matching order are described in docs:`routing`.\n    '''",
        "''' Add a filter. The provided function is called with the configuration\n        string as parameter and must return a (regexp, to_python, to_url) tuple.\n        The first element is a string, the last two are callables or None. '''",
        "''' Add a new rule or replace the target for an existing rule. '''",
        "''' Build an URL by filling the wildcards in a rule. '''",
        "''' Return a (target, url_agrs) tuple or raise HTTPError(400/404/405). '''",
        "''' This class wraps a route callback along with route specific metadata and\n        configuration and applies Plugins on demand. It is also responsible for\n        turing an URL path rule into a regular expression usable by the Router.\n    '''",
        "''' The route callback with all plugins applied. This property is\n            created on demand and then cached to speed up subsequent requests.'''",
        "''' Forget any cached values. The next time :attr:`call` is accessed,\n            all plugins are re-applied. '''",
        "''' Do all on-demand work immediately (useful for debugging).'''",
        "''' Yield all Plugins affecting this route. '''",
        "''' Return the callback. If the callback is a decorated function, try to\n            recover the original function. '''",
        "''' Return a list of argument names the callback (most likely) accepts\n            as keyword arguments. If the callback is a decorated function, try\n            to recover the original function before inspection. '''",
        "''' Lookup a config field and return its value, first checking the\n            route.config, then route.app.config.'''",
        "\"\"\" Each Bottle object represents a single, distinct web application and\n        consists of routes, callbacks, plugins, resources and configuration.\n        Instances are callable WSGI applications.\n\n        :param catchall: If true (default), handle all exceptions. Turn off to\n                         let debugging middleware handle exceptions.\n    \"\"\"",
        "''' Attach a callback to a hook. Three hooks are currently implemented:\n\n            before_request\n                Executed once before each request. The request context is\n                available, but no routing has happened yet.\n            after_request\n                Executed once after each request regardless of its outcome.\n            app_reset\n                Called whenever :meth:`Bottle.reset` is called.\n        '''",
        "''' Remove a callback from a hook. '''",
        "''' Trigger a hook and return a list of results. '''",
        "\"\"\" Return a decorator that attaches a callback to a hook. See\n            :meth:`add_hook` for details.\"\"\"",
        "''' Mount an application (:class:`Bottle` or plain WSGI) to a specific\n            URL prefix. Example::\n\n                root_app.mount('/admin/', admin_app)\n\n            :param prefix: path prefix or `mount-point`. If it ends in a slash,\n                that slash is mandatory.\n            :param app: an instance of :class:`Bottle` or a WSGI application.\n\n            All other parameters are passed to the underlying :meth:`route` call.\n        '''",
        "''' Merge the routes of another :class:`Bottle` application or a list of\n            :class:`Route` objects into this application. The routes keep their\n            'owner', meaning that the :data:`Route.app` attribute is not\n            changed. '''",
        "''' Add a plugin to the list of plugins and prepare it for being\n            applied to all routes of this application. A plugin may be a simple\n            decorator or an object that implements the :class:`Plugin` API.\n        '''",
        "''' Uninstall plugins. Pass an instance to remove a specific plugin, a type\n            object to remove all plugins that match that type, a string to remove\n            all plugins with a matching ``name`` attribute or ``True`` to remove all\n            plugins. Return the list of removed plugins. '''",
        "''' Reset all routes (force plugins to be re-applied) and clear all\n            caches. If an ID or route object is given, only that specific route\n            is affected. '''",
        "''' Close the application and all installed plugins. '''",
        "''' Calls :func:`run` with the same parameters. '''",
        "\"\"\" Search for a matching route and return a (:class:`Route` , urlargs)\n            tuple. The second value is a dictionary with parameters extracted\n            from the URL. Raise :exc:`HTTPError` (404/405) on a non-match.\"\"\"",
        "\"\"\" Return a string that matches a named route \"\"\"",
        "''' Add a route object, but do not change the :data:`Route.app`\n            attribute.'''",
        "\"\"\" A decorator to bind a function to a request URL. Example::\n\n                @app.route('/hello/:name')\n                def hello(name):\n                    return 'Hello %s' % name\n\n            The ``:name`` part is a wildcard. See :class:`Router` for syntax\n            details.\n\n            :param path: Request path or a list of paths to listen to. If no\n              path is specified, it is automatically generated from the\n              signature of the function.\n            :param method: HTTP method (`GET`, `POST`, `PUT`, ...) or a list of\n              methods to listen to. (default: `GET`)\n            :param callback: An optional shortcut to avoid the decorator\n              syntax. ``route(..., callback=func)`` equals ``route(...)(func)``\n            :param name: The name for this route. (default: None)\n            :param apply: A decorator or plugin or a list of plugins. These are\n              applied to the route callback in addition to installed plugins.\n            :param skip: A list of plugins, plugin classes or names. Matching\n              plugins are not installed to this route. ``True`` skips all.\n\n            Any additional keyword arguments are stored as route-specific\n            configuration and passed to plugins (see :meth:`Plugin.apply`).\n        \"\"\"",
        "\"\"\" Equals :meth:`route`. \"\"\"",
        "\"\"\" Equals :meth:`route` with a ``POST`` method parameter. \"\"\"",
        "\"\"\" Equals :meth:`route` with a ``PUT`` method parameter. \"\"\"",
        "\"\"\" Equals :meth:`route` with a ``DELETE`` method parameter. \"\"\"",
        "\"\"\" Decorator: Register an output handler for a HTTP error code\"\"\"",
        "\"\"\" Try to convert the parameter into something WSGI compatible and set\n        correct HTTP headers when possible.\n        Support: False, str, unicode, dict, HTTPResponse, HTTPError, file-like,\n        iterable of strings and iterable of unicodes\n        \"\"\"",
        "\"\"\" The bottle WSGI-interface. \"\"\"",
        "''' Each instance of :class:'Bottle' is a WSGI application. '''",
        "\"\"\" A wrapper for WSGI environment dictionaries that adds a lot of\n        convenient access methods and properties. Most of them are read-only.\n\n        Adding new attributes to a request actually adds them to the environ\n        dictionary (as 'bottle.request.ext.<name>'). This is the recommended\n        way to store and access request-specific data.\n    \"\"\"",
        "\"\"\" Wrap a WSGI environ dictionary. \"\"\"",
        "''' Bottle application handling this request. '''",
        "\"\"\" The bottle :class:`Route` object that matches this request. \"\"\"",
        "\"\"\" The arguments extracted from the URL. \"\"\"",
        "''' The value of ``PATH_INFO`` with exactly one prefixed slash (to fix\n            broken clients and avoid the \"empty path\" edge case). '''",
        "''' The ``REQUEST_METHOD`` value as an uppercase string. '''",
        "''' A :class:`WSGIHeaderDict` that provides case-insensitive access to\n            HTTP request headers. '''",
        "''' Return the value of a request header, or a given default value. '''",
        "\"\"\" Cookies parsed into a :class:`FormsDict`. Signed cookies are NOT\n            decoded. Use :meth:`get_cookie` if you expect signed cookies. \"\"\"",
        "\"\"\" Return the content of a cookie. To read a `Signed Cookie`, the\n            `secret` must match the one used to create the cookie (see\n            :meth:`BaseResponse.set_cookie`). If anything goes wrong (missing\n            cookie or wrong signature), return a default value. \"\"\"",
        "''' The :attr:`query_string` parsed into a :class:`FormsDict`. These\n            values are sometimes called \"URL arguments\" or \"GET parameters\", but\n            not to be confused with \"URL wildcards\" as they are provided by the\n            :class:`Router`. '''",
        "\"\"\" Form values parsed from an `url-encoded` or `multipart/form-data`\n            encoded POST or PUT request body. The result is returned as a\n            :class:`FormsDict`. All keys and values are strings. File uploads\n            are stored separately in :attr:`files`. \"\"\"",
        "\"\"\" A :class:`FormsDict` with the combined values of :attr:`query` and\n            :attr:`forms`. File uploads are stored in :attr:`files`. \"\"\"",
        "\"\"\" File uploads parsed from `multipart/form-data` encoded POST or PUT\n            request body. The values are instances of :class:`FileUpload`.\n\n        \"\"\"",
        "''' If the ``Content-Type`` header is ``application/json``, this\n            property holds the parsed content of the request body. Only requests\n            smaller than :attr:`MEMFILE_MAX` are processed to avoid memory\n            exhaustion. '''",
        "''' read body until content-length or MEMFILE_MAX into a string. Raise\n            HTTPError(413) on requests that are to large. '''",
        "\"\"\" The HTTP request body as a seek-able file-like object. Depending on\n            :attr:`MEMFILE_MAX`, this is either a temporary file or a\n            :class:`io.BytesIO` instance. Accessing this property for the first\n            time reads and replaces the ``wsgi.input`` environ variable.\n            Subsequent accesses just do a `seek(0)` on the file object. \"\"\"",
        "''' True if Chunked transfer encoding was. '''",
        "\"\"\" The values of :attr:`forms` and :attr:`files` combined into a single\n            :class:`FormsDict`. Values are either strings (form values) or\n            instances of :class:`cgi.FieldStorage` (file uploads).\n        \"\"\"",
        "\"\"\" The full request URI including hostname and scheme. If your app\n            lives behind a reverse proxy or load balancer and you get confusing\n            results, make sure that the ``X-Forwarded-Host`` header is set\n            correctly. \"\"\"",
        "''' The :attr:`url` string as an :class:`urlparse.SplitResult` tuple.\n            The tuple contains (scheme, host, path, query_string and fragment),\n            but the fragment is always empty because it is not visible to the\n            server. '''",
        "\"\"\" Request path including :attr:`script_name` (if present). \"\"\"",
        "\"\"\" The raw :attr:`query` part of the URL (everything in between ``?``\n            and ``#``) as a string. \"\"\"",
        "''' The initial portion of the URL's `path` that was removed by a higher\n            level (server or routing middleware) before the application was\n            called. This script path is returned with leading and tailing\n            slashes. '''",
        "''' Shift path segments from :attr:`path` to :attr:`script_name` and\n            vice versa.\n\n           :param shift: The number of path segments to shift. May be negative\n                         to change the shift direction. (default: 1)\n        '''",
        "''' The request body length as an integer. The client is responsible to\n            set this header. Otherwise, the real length of the body is unknown\n            and -1 is returned. In this case, :attr:`body` will be empty. '''",
        "''' The Content-Type header as a lowercase-string (default: empty). '''",
        "''' True if the request was triggered by a XMLHttpRequest. This only\n            works with JavaScript libraries that support the `X-Requested-With`\n            header (most of the popular libraries do). '''",
        "''' Alias for :attr:`is_xhr`. \"Ajax\" is not the right term. '''",
        "\"\"\" HTTP authentication data as a (user, password) tuple. This\n            implementation currently supports basic (not digest) authentication\n            only. If the authentication happened at a higher level (e.g. in the\n            front web-server or a middleware), the password field is None, but\n            the user field is looked up from the ``REMOTE_USER`` environ\n            variable. On any errors, None is returned. \"\"\"",
        "\"\"\" A list of all IPs that were involved in this request, starting with\n            the client IP and followed by zero or more proxies. This does only\n            work if all proxies support the ```X-Forwarded-For`` header. Note\n            that this information can be forged by malicious clients. \"\"\"",
        "\"\"\" The client IP as a string. Note that this information can be forged\n            by malicious clients. \"\"\"",
        "\"\"\" Return a new :class:`Request` with a shallow :attr:`environ` copy. \"\"\"",
        "\"\"\" Change an environ value and clear all caches that depend on it. \"\"\"",
        "''' Search in self.environ for additional user defined attributes. '''",
        "\"\"\" Storage class for a response body as well as headers and cookies.\n\n        This class does support dict-like case-insensitive item-access to\n        headers, but is NOT a dict. Most notably, iterating over a response\n        yields parts of the body and not the headers.\n\n        :param body: The response body as one of the supported types.\n        :param status: Either an HTTP status code (e.g. 200) or a status line\n                       including the reason phrase (e.g. '200 OK').\n        :param headers: A dictionary or a list of name-value pairs.\n\n        Additional keyword arguments are added to the list of headers.\n        Underscores in the header name are replaced with dashes.\n    \"\"\"",
        "''' Returns a copy of self. '''",
        "''' The HTTP status line as a string (e.g. ``404 Not Found``).'''",
        "''' The HTTP status code as an integer (e.g. 404).'''",
        "''' A writeable property to change the HTTP response status. It accepts\n            either a numeric code (100-999) or a string with a custom reason\n            phrase (e.g. \"404 Brain not found\"). Both :data:`status_line` and\n            :data:`status_code` are updated accordingly. The return value is\n            always a status string. '''",
        "''' An instance of :class:`HeaderDict`, a case-insensitive dict-like\n            view on the response headers. '''",
        "''' Return the value of a previously defined header. If there is no\n            header with that name, return a default value. '''",
        "''' Create a new response header, replacing any previously defined\n            headers with the same name. '''",
        "''' Add an additional response header, not removing duplicates. '''",
        "''' Yield (header, value) tuples, skipping headers that are not\n            allowed with the current response status code. '''",
        "''' WSGI conform list of (header, value) tuples. '''",
        "\"\"\" Return the charset specified in the content-type header (default: utf8). \"\"\"",
        "''' Create a new cookie or replace an old one. If the `secret` parameter is\n            set, create a `Signed Cookie` (described below).\n\n            :param name: the name of the cookie.\n            :param value: the value of the cookie.\n            :param secret: a signature key required for signed cookies.\n\n            Additionally, this method accepts all RFC 2109 attributes that are\n            supported by :class:`cookie.Morsel`, including:\n\n            :param max_age: maximum age in seconds. (default: None)\n            :param expires: a datetime object or UNIX timestamp. (default: None)\n            :param domain: the domain that is allowed to read the cookie.\n              (default: current domain)\n            :param path: limits the cookie to a given path (default: current path)\n            :param secure: limit the cookie to HTTPS connections (default: off).\n            :param httponly: prevents client-side javascript to read this cookie\n              (default: off, requires Python 2.6 or newer).\n\n            If neither `expires` nor `max_age` is set (default), the cookie will\n            expire at the end of the browser session (as soon as the browser\n            window is closed).\n\n            Signed cookies may store any pickle-able object and are\n            cryptographically signed to prevent manipulation. Keep in mind that\n            cookies are limited to 4kb in most browsers.\n\n            Warning: Signed cookies are not encrypted (the client can still see\n            the content) and not copy-protected (the client can restore an old\n            cookie). The main intention is to make pickling and unpickling\n            save, not to store secret information at client side.\n        '''",
        "''' Delete a cookie. Be sure to use the same `domain` and `path`\n            settings as used to create the cookie. '''",
        "''' A thread-local subclass of :class:`BaseRequest` with a different\n        set of attributes for each thread. There is usually only one global\n        instance of this class (:data:`request`). If accessed during a\n        request/response cycle, this instance always refers to the *current*\n        request (even on a multithreaded server). '''",
        "''' A thread-local subclass of :class:`BaseResponse` with a different\n        set of attributes for each thread. There is usually only one global\n        instance of this class (:data:`response`). Its attributes are used\n        to build the HTTP response at the end of the request/response cycle.\n    '''",
        "''' This plugin applies the :func:`view` decorator to all routes with a\n        `template` config parameter. If the parameter is a tuple, the second\n        element must be a dict with additional options (e.g. `template_engine`)\n        or default variables for the template. '''",
        "''' Create a virtual package that redirects imports (see PEP 302). '''",
        "\"\"\" This dict stores multiple values per key, but behaves exactly like a\n        normal dict in that it returns only the newest value for any given key.\n        There are special methods available to access the full list of values.\n    \"\"\"",
        "''' Return the most recent value for a key.\n\n            :param default: The default value to be returned if the key is not\n                   present or the type conversion fails.\n            :param index: An index for the list of available values.\n            :param type: If defined, this callable is used to cast the value\n                    into a specific type. Exception are suppressed and result in\n                    the default value to be returned.\n        '''",
        "''' Add a new value to the list of values for this key. '''",
        "''' Replace the list of values with a single value. '''",
        "''' Return a (possibly empty) list of values for a key. '''",
        "''' This :class:`MultiDict` subclass is used to store request form data.\n        Additionally to the normal dict-like item access methods (which return\n        unmodified data as native strings), this container also supports\n        attribute-like access to its values. Attributes are automatically de-\n        or recoded to match :attr:`input_encoding` (default: 'utf8'). Missing\n        attributes default to an empty string. '''",
        "''' Returns a copy with all keys and values de- or recoded to match\n            :attr:`input_encoding`. Some libraries (e.g. WTForms) want a\n            unicode dictionary. '''",
        "''' Return the value as a unicode string, or the default. '''",
        "\"\"\" A case-insensitive version of :class:`MultiDict` that defaults to\n        replace the old value instead of appending it. \"\"\"",
        "''' This dict-like class wraps a WSGI environ dict and provides convenient\n        access to HTTP_* fields. Keys and values are native strings\n        (2.x bytes or 3.x unicode) and keys are case-insensitive. If the WSGI\n        environment contains non-native string values, these are de- or encoded\n        using a lossless 'latin1' character set.\n\n        The API will remain stable even on changes to the relevant PEPs.\n        Currently PEP 333, 444 and 3333 are supported. (PEP 444 is the only one\n        that uses non-native strings.)\n    '''",
        "''' Translate header field name to CGI/WSGI environ key. '''",
        "''' Return the header value as is (may be bytes or unicode). '''",
        "''' A dict-like configuration storage with additional support for\n        namespaces, validators, meta-data, on_change listeners and more.\n\n        This storage is optimized for fast read access. Retrieving a key\n        or using non-altering dict methods (e.g. `dict.get()`) has no overhead\n        compared to a native dict.\n    '''",
        "''' Load values from an *.ini style config file.\n\n            If the config file contains sections, their names are used as\n            namespaces for the values within. The two special sections\n            ``DEFAULT`` and ``bottle`` refer to the root namespace (no prefix).\n        '''",
        "''' Import values from a dictionary structure. Nesting can be used to\n            represent namespaces.\n\n            >>> ConfigDict().load_dict({'name': {'space': {'key': 'value'}}})\n            {'name.space.key': 'value'}\n        '''",
        "''' If the first parameter is a string, all keys are prefixed with this\n            namespace. Apart from that it works just as the usual dict.update().\n            Example: ``update('some.namespace', key='value')`` '''",
        "''' Return the value of a meta field for a key. '''",
        "''' Set the meta field for a key to a new value. This triggers the\n            on-change handler for existing keys. '''",
        "''' Return an iterable of meta field names defined for a key. '''",
        "\"\"\" A stack-like list. Calling it returns the head of the stack. \"\"\"",
        "\"\"\" Return the current default application. \"\"\"",
        "\"\"\" Add a new :class:`Bottle` instance to the stack \"\"\"",
        "''' This only exists to be able to attach a .close method to iterators that\n        do not support attribute assignment (most of itertools). '''",
        "''' This class manages a list of search paths and helps to find and open\n        application-bound resources (files).\n\n        :param base: default value for :meth:`add_path` calls.\n        :param opener: callable used to open resources.\n        :param cachemode: controls which lookups are cached. One of 'all',\n                         'found' or 'none'.\n    '''",
        "''' Add a new path to the list of search paths. Return False if the\n            path does not exist.\n\n            :param path: The new search path. Relative paths are turned into\n                an absolute and normalized form. If the path looks like a file\n                (not ending in `/`), the filename is stripped off.\n            :param base: Path used to absolutize relative search paths.\n                Defaults to :attr:`base` which defaults to ``os.getcwd()``.\n            :param index: Position within the list of search paths. Defaults\n                to last index (appends to the list).\n\n            The `base` parameter makes it easy to reference files installed\n            along with a python module or package::\n\n                res.add_path('./resources/', __file__)\n        '''",
        "''' Iterate over all existing files in all registered paths. '''",
        "''' Search for a resource and return an absolute file path, or `None`.\n\n            The :attr:`path` list is searched in order. The first match is\n            returend. Symlinks are followed. The result is cached to speed up\n            future lookups. '''",
        "''' Find a resource and return a file object, or raise IOError. '''",
        "''' Wrapper for file uploads. '''",
        "''' Name of the file on the client file system, but normalized to ensure\n            file system compatibility. An empty filename is returned as 'empty'.\n\n            Only ASCII letters, digits, dashes, underscores and dots are\n            allowed in the final filename. Accents are removed, if possible.\n            Whitespace is replaced by a single dash. Leading or tailing dots\n            or dashes are removed. The filename is limited to 255 characters.\n        '''",
        "''' Save file to disk or copy its content to an open file(-like) object.\n            If *destination* is a directory, :attr:`filename` is added to the\n            path. Existing files are not overwritten by default (IOError).\n\n            :param destination: File path, directory or file(-like) object.\n            :param overwrite: If True, replace existing files. (default: False)\n            :param chunk_size: Bytes to read at a time. (default: 64kb)\n        '''",
        "\"\"\" Aborts execution and causes a HTTP error. \"\"\"",
        "\"\"\" Aborts execution and causes a 303 or 302 redirect, depending on\n        the HTTP protocol version. \"\"\"",
        "''' Yield chunks from a range in a file. No chunk is bigger than maxread.'''",
        "\"\"\" Open a file in a safe way and return :exc:`HTTPResponse` with status\n        code 200, 305, 403 or 404. The ``Content-Type``, ``Content-Encoding``,\n        ``Content-Length`` and ``Last-Modified`` headers are set if possible.\n        Special support for ``If-Modified-Since``, ``Range`` and ``HEAD``\n        requests.\n\n        :param filename: Name or path of the file to send.\n        :param root: Root path for file lookups. Should be an absolute directory\n            path.\n        :param mimetype: Defines the content-type header (default: guess from\n            file extension)\n        :param download: If True, ask the browser to open a `Save as...` dialog\n            instead of opening the file with the associated program. You can\n            specify a custom filename as a string. If not specified, the\n            original filename is used (default: False).\n        :param charset: The charset to use for files with a ``text/*``\n            mime-type. (default: UTF-8)\n    \"\"\"",
        "\"\"\" Change the debug level.\n    There is only one debug level supported at the moment.\"\"\"",
        "\"\"\" Parse rfc1123, rfc850 and asctime timestamps and return UTC epoch. \"\"\"",
        "\"\"\" Parse rfc2617 HTTP authentication header string (basic) and return (user,pass) tuple or None\"\"\"",
        "''' Yield (start, end) ranges parsed from a HTTP Range header. Skip\n        unsatisfiable ranges. The end index is non-inclusive.'''",
        "''' Compares two strings in a cryptographically safe way:\n        Runtime is not affected by length of common prefix. '''",
        "''' Encode and sign a pickle-able object. Return a (byte) string '''",
        "''' Verify and decode an encoded string. Return an object or None.'''",
        "''' Return True if the argument looks like a encoded cookie.'''",
        "''' Escape HTML special characters ``&<>`` and quotes ``'\"``. '''",
        "''' Escape and quote a string to be used as an HTTP attribute.'''",
        "\"\"\" Return a generator for routes that match the signature (name, args)\n    of the func parameter. This may yield more than one route if the function\n    takes optional keyword arguments. The output is best described by example::\n\n        a()         -> '/a'\n        b(x, y)     -> '/b/<x>/<y>'\n        c(x, y=5)   -> '/c/<x>' and '/c/<x>/<y>'\n        d(x=5, y=6) -> '/d' and '/d/<x>' and '/d/<x>/<y>'\n    \"\"\"",
        "''' Shift path fragments from PATH_INFO to SCRIPT_NAME and vice versa.\n\n        :return: The modified paths.\n        :param script_name: The SCRIPT_NAME path.\n        :param script_name: The PATH_INFO path.\n        :param shift: The number of path fragments to shift. May be negative to\n          change the shift direction. (default: 1)\n    '''",
        "''' Callback decorator to require HTTP auth (basic).\n        TODO: Add route(check_auth=...) parameter. '''",
        "''' Return a callable that relays calls to the current default app. '''",
        "\"\"\" Extremely fast webserver using libev. See http://www.fapws.org/ \"\"\"",
        "\"\"\" The super hyped asynchronous server by facebook. Untested. \"\"\"",
        "\"\"\" Adapter for Google App Engine. \"\"\"",
        "\"\"\" Untested. \"\"\"",
        "\"\"\" Untested. \"\"\"",
        "\"\"\" Untested. Options:\n\n        * `fast` (default: False) uses libevent's http server, but has some\n          issues: No streaming, no pipelining, no SSL.\n        * See gevent.wsgi.WSGIServer() documentation for more options.\n    \"\"\"",
        "\"\"\" Untested. See http://gunicorn.org/configure.html for options. \"\"\"",
        "\"\"\" Untested \"\"\"",
        "\"\"\" Untested. \"\"\"",
        "\"\"\" Fast server written in C: https://github.com/jonashaag/bjoern \"\"\"",
        "\"\"\" Untested. \"\"\"",
        "\"\"\" Import a module or fetch an object from a module.\n\n        * ``package.module`` returns `module` as a module object.\n        * ``pack.mod:name`` returns the module variable `name` from `pack.mod`.\n        * ``pack.mod:func()`` calls `pack.mod.func()` and returns the result.\n\n        The last form accepts not only function calls, but any type of\n        expression. Keyword arguments passed to this function are available as\n        local variables. Example: ``import_string('re:compile(x)', x='[a-z]')``\n    \"\"\"",
        "\"\"\" Load a bottle application from a module and make sure that the import\n        does not affect the current default application, but returns a separate\n        application object. See :func:`load` for the target parameter. \"\"\"",
        "\"\"\" Start a server instance. This method blocks until the server terminates.\n\n        :param app: WSGI application or target string supported by\n               :func:`load_app`. (default: :func:`default_app`)\n        :param server: Server adapter to use. See :data:`server_names` keys\n               for valid names or pass a :class:`ServerAdapter` subclass.\n               (default: `wsgiref`)\n        :param host: Server address to bind to. Pass ``0.0.0.0`` to listens on\n               all interfaces including the external one. (default: 127.0.0.1)\n        :param port: Server port to bind to. Values below 1024 require root\n               privileges. (default: 8080)\n        :param reloader: Start auto-reloading server? (default: False)\n        :param interval: Auto-reloader interval in seconds (default: 1)\n        :param quiet: Suppress output to stdout and stderr? (default: False)\n        :param options: Options passed to the server adapter.\n     \"\"\"",
        "''' Interrupt main-thread as soon as a changed module file is detected,\n        the lockfile gets deleted or gets to old. '''",
        "\"\"\" Base class and minimal API for template adapters \"\"\"",
        "\"\"\" Create a new template.\n        If the source parameter (str or buffer) is missing, the name argument\n        is used to guess a template filename. Subclasses can assume that\n        self.source and/or self.filename are set. Both are strings.\n        The lookup, encoding and settings parameters are stored as instance\n        variables.\n        The lookup parameter stores a list containing directory paths.\n        The encoding parameter should be used to decode byte strings or files.\n        The settings parameter contains a dict for engine-specific settings.\n        \"\"\"",
        "\"\"\" Search name in all directories specified in lookup.\n        First without, then with common extensions. Return first hit. \"\"\"",
        "''' This reads or sets the global settings stored in class.settings. '''",
        "\"\"\" Run preparations (parsing, caching, ...).\n        It should be possible to call this again to refresh a template or to\n        update settings.\n        \"\"\"",
        "\"\"\" Render the template with the specified local variables and return\n        a single byte or unicode string. If it is a byte string, the encoding\n        must match self.encoding. This method must be thread-safe!\n        Local variables may be provided in dictionaries (args)\n        or directly, as keywords (kwargs).\n        \"\"\"",
        "\"\"\" Render the template using keyword arguments as local variables. \"\"\"",
        "''' Parser for stpl templates. '''",
        "''' Tokens as a space separated string (default: <% %> % {{ }}) '''",
        "'''\n    Get a rendered template as a string iterator.\n    You can use a name, a filename or a template string as first parameter.\n    Template rendering arguments can be passed as dictionaries\n    or directly (as keyword arguments).\n    '''",
        "''' Decorator: renders a template for a handler.\n        The handler can control its behavior like that:\n\n          - return a dict of template vars to fill out the template\n          - return something other than a dict and the view decorator will not\n            process the template, but return the handler result as is.\n            This includes returning a HTTPResponse(dict) to get,\n            for instance, JSON with autojson or other castfilters.\n    '''",
        "\"\"\"\n%%try:\n    %%from %s import DEBUG, HTTP_CODES, request, touni\n    <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n    <html>\n        <head>\n            <title>Error: {{e.status}}</title>\n            <style type=\"text/css\">\n              html {background-color: #eee; font-family: sans;}\n              body {background-color: #fff; border: 1px solid #ddd;\n                    padding: 15px; margin: 15px;}\n              pre {background-color: #eee; border: 1px solid #ddd; padding: 5px;}\n            </style>\n        </head>\n        <body>\n            <h1>Error: {{e.status}}</h1>\n            <p>Sorry, the requested URL <tt>{{repr(request.url)}}</tt>\n               caused an error:</p>\n            <pre>{{e.body}}</pre>\n            %%if DEBUG and e.exception:\n              <h2>Exception:</h2>\n              <pre>{{repr(e.exception)}}</pre>\n            %%end\n            %%if DEBUG and e.traceback:\n              <h2>Traceback:</h2>\n              <pre>{{e.traceback}}</pre>\n            %%end\n        </body>\n    </html>\n%%except ImportError:\n    <b>ImportError:</b> Could not generate the error page. Please add bottle to\n    the import path.\n%%end\n\"\"\""
    ],
    "functions": [
        "json_dumps",
        "_e",
        "_raise",
        "next",
        "tob",
        "touni",
        "close",
        "update_wrapper",
        "depr",
        "makelist",
        "__call__",
        "__get__",
        "__set__",
        "__delete__",
        "__get__",
        "__get__",
        "_re_flatten",
        "add_filter",
        "_itertokens",
        "add",
        "getargs",
        "getargs",
        "_compile",
        "build",
        "match",
        "__call__",
        "call",
        "reset",
        "prepare",
        "_context",
        "all_plugins",
        "_make_callback",
        "get_undecorated_callback",
        "get_callback_args",
        "get_config",
        "__repr__",
        "_hooks",
        "add_hook",
        "remove_hook",
        "trigger_hook",
        "hook",
        "decorator",
        "mount",
        "mountpoint_wrapper",
        "start_response",
        "merge",
        "install",
        "uninstall",
        "reset",
        "close",
        "run",
        "match",
        "get_url",
        "add_route",
        "route",
        "decorator",
        "get",
        "post",
        "put",
        "error",
        "wrapper",
        "default_error_handler",
        "_handle",
        "_cast",
        "wsgi",
        "__call__",
        "app",
        "route",
        "url_args",
        "path",
        "method",
        "headers",
        "get_header",
        "cookies",
        "get_cookie",
        "query",
        "forms",
        "files",
        "json",
        "_iter_body",
        "_iter_chunked",
        "_body",
        "_get_body_string",
        "body",
        "chunked",
        "POST",
        "url",
        "urlparts",
        "fullpath",
        "query_string",
        "script_name",
        "path_shift",
        "content_length",
        "content_type",
        "is_xhr",
        "is_ajax",
        "auth",
        "remote_route",
        "remote_addr",
        "copy",
        "get",
        "__getitem__",
        "__delitem__",
        "__iter__",
        "__len__",
        "keys",
        "__setitem__",
        "__repr__",
        "__getattr__",
        "__setattr__",
        "_hkey",
        "__get__",
        "__set__",
        "__delete__",
        "copy",
        "__iter__",
        "close",
        "status_line",
        "status_code",
        "_set_status",
        "_get_status",
        "headers",
        "__contains__",
        "__delitem__",
        "__getitem__",
        "__setitem__",
        "get_header",
        "set_header",
        "add_header",
        "iter_headers",
        "headerlist",
        "charset",
        "set_cookie",
        "delete_cookie",
        "__repr__",
        "local_property",
        "fget",
        "fset",
        "fdel",
        "apply",
        "apply",
        "wrapper",
        "apply",
        "find_module",
        "load_module",
        "__len__",
        "__iter__",
        "__contains__",
        "__delitem__",
        "__getitem__",
        "__setitem__",
        "keys",
        "values",
        "items",
        "allitems",
        "values",
        "items",
        "iterkeys",
        "itervalues",
        "iteritems",
        "iterallitems",
        "allitems",
        "get",
        "append",
        "replace",
        "getall",
        "_fix",
        "decode",
        "getunicode",
        "__getattr__",
        "__contains__",
        "__delitem__",
        "__getitem__",
        "__setitem__",
        "append",
        "replace",
        "getall",
        "get",
        "_ekey",
        "raw",
        "__getitem__",
        "__setitem__",
        "__delitem__",
        "__iter__",
        "keys",
        "__len__",
        "__contains__",
        "__getitem__",
        "__setitem__",
        "__delitem__",
        "__iter__",
        "keys",
        "__len__",
        "__contains__",
        "__repr__",
        "__str__",
        "__getattr__",
        "__setattr__",
        "__delattr__",
        "__call__",
        "load_config",
        "load_dict",
        "update",
        "setdefault",
        "__setitem__",
        "__delitem__",
        "clear",
        "meta_get",
        "meta_set",
        "meta_list",
        "__getattr__",
        "__setattr__",
        "__delattr__",
        "__call__",
        "__call__",
        "push",
        "__iter__",
        "__iter__",
        "close",
        "add_path",
        "__iter__",
        "lookup",
        "open",
        "filename",
        "_copy_file",
        "save",
        "abort",
        "redirect",
        "_file_iter_range",
        "static_file",
        "debug",
        "http_date",
        "parse_date",
        "parse_auth",
        "parse_range_header",
        "_parse_qsl",
        "_lscmp",
        "cookie_encode",
        "cookie_decode",
        "cookie_is_encoded",
        "html_escape",
        "html_quote",
        "yieldroutes",
        "path_shift",
        "auth_basic",
        "decorator",
        "wrapper",
        "make_default_app_wrapper",
        "wrapper",
        "run",
        "__repr__",
        "run",
        "fixed_environ",
        "run",
        "run",
        "address_string",
        "log_request",
        "run",
        "run",
        "run",
        "run",
        "run",
        "app",
        "run",
        "run",
        "run",
        "run",
        "run",
        "run",
        "run",
        "init",
        "load",
        "run",
        "run",
        "run",
        "run",
        "load",
        "load_app",
        "run",
        "run",
        "__enter__",
        "__exit__",
        "search",
        "global_config",
        "prepare",
        "render",
        "prepare",
        "render",
        "prepare",
        "render",
        "prepare",
        "render",
        "loader",
        "prepare",
        "co",
        "code",
        "_rebase",
        "_include",
        "execute",
        "render",
        "get_syntax",
        "set_syntax",
        "translate",
        "read_code",
        "flush_text",
        "process_inline",
        "write_code",
        "fix_backward_compatibility",
        "template",
        "view",
        "decorator",
        "wrapper"
    ],
    "classes": [
        "NCTextIOWrapper",
        "DictProperty",
        "cached_property",
        "lazy_attribute",
        "BottleException",
        "RouteError",
        "RouteReset",
        "RouterUnknownModeError",
        "RouteSyntaxError",
        "RouteBuildError",
        "Router",
        "Route",
        "Bottle",
        "BaseRequest",
        "HeaderProperty",
        "BaseResponse",
        "LocalRequest",
        "LocalResponse",
        "HTTPResponse",
        "HTTPError",
        "PluginError",
        "JSONPlugin",
        "TemplatePlugin",
        "_ImportRedirect",
        "MultiDict",
        "FormsDict",
        "HeaderDict",
        "WSGIHeaderDict",
        "ConfigDict",
        "Namespace",
        "AppStack",
        "WSGIFileWrapper",
        "_closeiter",
        "ResourceManager",
        "FileUpload",
        "ServerAdapter",
        "CGIServer",
        "FlupFCGIServer",
        "WSGIRefServer",
        "FixedHandler",
        "server_cls",
        "CherryPyServer",
        "WaitressServer",
        "PasteServer",
        "MeinheldServer",
        "FapwsServer",
        "TornadoServer",
        "AppEngineServer",
        "TwistedServer",
        "DieselServer",
        "GeventServer",
        "GeventSocketIOServer",
        "GunicornServer",
        "GunicornApplication",
        "EventletServer",
        "RocketServer",
        "BjoernServer",
        "AutoServer",
        "FileCheckerThread",
        "TemplateError",
        "BaseTemplate",
        "MakoTemplate",
        "CheetahTemplate",
        "Jinja2Template",
        "SimpleTemplate",
        "StplSyntaxError",
        "StplParser"
    ]
}