{
    "identifiers": [
        "os",
        "sys",
        "branca",
        "utilities",
        "sys",
        "version_info",
        "nbconvert",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "dirname",
        "filename",
        "filename",
        "exporter",
        "filename",
        "nbconvert",
        "exporters",
        "Exporter",
        "from_filename",
        "filename",
        "raw_nb",
        "metadata",
        "setdefault",
        "nbconvert",
        "preprocessors",
        "ExecutePreprocessor",
        "preprocess",
        "raw_nb",
        "exporter",
        "nbconvert",
        "exporters",
        "MarkdownExporter",
        "from_notebook_node",
        "exec_nb",
        "filename",
        "filename",
        "endswith",
        "filename",
        "exporter",
        "file_extension",
        "open",
        "filename",
        "write",
        "out_nb",
        "encode",
        "rootpath",
        "rstrip",
        "x",
        "x",
        "os",
        "listdir",
        "_filepath",
        "x",
        "endswith",
        "fn",
        "TestNotebooks",
        "_nblist",
        "setattr",
        "TestNotebooks",
        "branca",
        "utilities",
        "_camelify",
        "fn",
        "NotebookTester",
        "TestNotebooks",
        "_filepath",
        "fn",
        "__call__"
    ],
    "literals": [
        "'kernelspec'",
        "'name'",
        "'python'",
        "'.ipynb'",
        "'w'",
        "'utf-8'",
        "'/'",
        "'/../examples/'",
        "'.ipynb'",
        "'test_'"
    ],
    "variables": [
        "rootpath",
        "filename",
        "raw_nb",
        "exec_nb",
        "out_nb",
        "filename",
        "_filepath",
        "_nblist"
    ],
    "comments": [
        "-*- coding: utf-8 -*-"
    ],
    "docstrings": [
        "\"\"\"\nBranca Notebooks Tests\n----------------------\n\nHere we try to execute all notebooks that are in `branca/examples`.\n\"\"\""
    ],
    "functions": [
        "__call__"
    ],
    "classes": [
        "NotebookTester",
        "TestNotebooks"
    ]
}