{
    "identifiers": [
        "org",
        "apache",
        "cloudstack",
        "secondarystorage",
        "java",
        "util",
        "Collections",
        "org",
        "junit",
        "Assert",
        "org",
        "junit",
        "Before",
        "org",
        "junit",
        "Test",
        "org",
        "mockito",
        "InjectMocks",
        "org",
        "mockito",
        "Mock",
        "org",
        "mockito",
        "Mockito",
        "org",
        "mockito",
        "MockitoAnnotations",
        "com",
        "cloud",
        "dc",
        "DataCenterVO",
        "com",
        "cloud",
        "dc",
        "DataCenter",
        "NetworkType",
        "com",
        "cloud",
        "dc",
        "dao",
        "DataCenterDao",
        "com",
        "cloud",
        "network",
        "Networks",
        "TrafficType",
        "com",
        "cloud",
        "network",
        "dao",
        "NetworkDao",
        "com",
        "cloud",
        "network",
        "dao",
        "NetworkVO",
        "com",
        "cloud",
        "utils",
        "exception",
        "CloudRuntimeException",
        "org",
        "mockito",
        "Mockito",
        "mock",
        "org",
        "mockito",
        "Mockito",
        "org",
        "mockito",
        "Mockito",
        "anyLong",
        "org",
        "mockito",
        "Mockito",
        "when",
        "org",
        "mockito",
        "AdditionalMatchers",
        "org",
        "mockito",
        "Mockito",
        "eq",
        "Mock",
        "_dcDao",
        "Mock",
        "_networkDao",
        "InjectMocks",
        "_ssMgr",
        "Before",
        "MockitoAnnotations",
        "initMocks",
        "Test",
        "dc",
        "mock",
        "when",
        "dc",
        "getNetworkType",
        "thenReturn",
        "NetworkType",
        "Advanced",
        "when",
        "dc",
        "isSecurityGroupEnabled",
        "thenReturn",
        "when",
        "_dcDao",
        "findById",
        "Mockito",
        "anyLong",
        "thenReturn",
        "dc",
        "network",
        "Mockito",
        "mock",
        "badNetwork",
        "Mockito",
        "mock",
        "when",
        "_networkDao",
        "listByZoneAndTrafficType",
        "anyLong",
        "eq",
        "TrafficType",
        "Public",
        "thenReturn",
        "Collections",
        "singletonList",
        "network",
        "when",
        "_networkDao",
        "listByZoneAndTrafficType",
        "anyLong",
        "eq",
        "TrafficType",
        "Public",
        "thenReturn",
        "Collections",
        "singletonList",
        "badNetwork",
        "when",
        "_networkDao",
        "listByZoneSecurityGroup",
        "anyLong",
        "thenReturn",
        "Collections",
        "singletonList",
        "badNetwork",
        "returnedNetwork",
        "_ssMgr",
        "getDefaultNetworkForAdvancedZone",
        "dc",
        "Assert",
        "assertNotNull",
        "returnedNetwork",
        "Assert",
        "assertEquals",
        "network",
        "returnedNetwork",
        "Assert",
        "assertNotEquals",
        "badNetwork",
        "returnedNetwork",
        "Test",
        "dc",
        "Mockito",
        "mock",
        "when",
        "dc",
        "getNetworkType",
        "thenReturn",
        "NetworkType",
        "Advanced",
        "when",
        "dc",
        "isSecurityGroupEnabled",
        "thenReturn",
        "when",
        "_dcDao",
        "findById",
        "Mockito",
        "anyLong",
        "thenReturn",
        "dc",
        "network",
        "Mockito",
        "mock",
        "badNetwork",
        "Mockito",
        "mock",
        "when",
        "_networkDao",
        "listByZoneAndTrafficType",
        "anyLong",
        "thenReturn",
        "Collections",
        "singletonList",
        "badNetwork",
        "when",
        "_networkDao",
        "listByZoneSecurityGroup",
        "anyLong",
        "thenReturn",
        "Collections",
        "singletonList",
        "network",
        "returnedNetwork",
        "_ssMgr",
        "getDefaultNetworkForAdvancedZone",
        "dc",
        "Assert",
        "assertEquals",
        "network",
        "returnedNetwork",
        "Assert",
        "assertNotEquals",
        "badNetwork",
        "returnedNetwork",
        "Test",
        "dc",
        "Mockito",
        "mock",
        "when",
        "dc",
        "getNetworkType",
        "thenReturn",
        "NetworkType",
        "Basic",
        "when",
        "dc",
        "isSecurityGroupEnabled",
        "thenReturn",
        "when",
        "_dcDao",
        "findById",
        "Mockito",
        "anyLong",
        "thenReturn",
        "dc",
        "network",
        "Mockito",
        "mock",
        "badNetwork",
        "Mockito",
        "mock",
        "when",
        "_networkDao",
        "listByZoneAndTrafficType",
        "anyLong",
        "eq",
        "TrafficType",
        "Guest",
        "thenReturn",
        "Collections",
        "singletonList",
        "network",
        "when",
        "_networkDao",
        "listByZoneAndTrafficType",
        "anyLong",
        "eq",
        "TrafficType",
        "Guest",
        "thenReturn",
        "Collections",
        "singletonList",
        "badNetwork",
        "returnedNetwork",
        "_ssMgr",
        "getDefaultNetworkForBasicZone",
        "dc",
        "Assert",
        "assertNotNull",
        "returnedNetwork",
        "Assert",
        "assertEquals",
        "network",
        "returnedNetwork",
        "Assert",
        "assertNotEquals",
        "badNetwork",
        "returnedNetwork",
        "Test",
        "dc",
        "Mockito",
        "mock",
        "when",
        "dc",
        "getNetworkType",
        "thenReturn",
        "NetworkType",
        "Basic",
        "when",
        "dc",
        "isSecurityGroupEnabled",
        "thenReturn",
        "when",
        "_dcDao",
        "findById",
        "Mockito",
        "anyLong",
        "thenReturn",
        "dc",
        "network",
        "Mockito",
        "mock",
        "badNetwork",
        "Mockito",
        "mock",
        "when",
        "_networkDao",
        "listByZoneAndTrafficType",
        "anyLong",
        "eq",
        "TrafficType",
        "Guest",
        "thenReturn",
        "Collections",
        "singletonList",
        "network",
        "when",
        "_networkDao",
        "listByZoneAndTrafficType",
        "anyLong",
        "eq",
        "TrafficType",
        "Guest",
        "thenReturn",
        "Collections",
        "singletonList",
        "badNetwork",
        "returnedNetwork",
        "_ssMgr",
        "getDefaultNetworkForBasicZone",
        "dc",
        "Assert",
        "assertNotNull",
        "returnedNetwork",
        "Assert",
        "assertEquals",
        "network",
        "returnedNetwork",
        "Assert",
        "assertNotEquals",
        "badNetwork",
        "returnedNetwork",
        "Test",
        "expected",
        "dc",
        "Mockito",
        "mock",
        "when",
        "dc",
        "getNetworkType",
        "thenReturn",
        "NetworkType",
        "Advanced",
        "when",
        "dc",
        "isSecurityGroupEnabled",
        "thenReturn",
        "when",
        "_dcDao",
        "findById",
        "Mockito",
        "anyLong",
        "thenReturn",
        "dc",
        "network",
        "Mockito",
        "mock",
        "badNetwork",
        "Mockito",
        "mock",
        "when",
        "_networkDao",
        "listByZoneAndTrafficType",
        "anyLong",
        "eq",
        "TrafficType",
        "Guest",
        "thenReturn",
        "Collections",
        "singletonList",
        "network",
        "when",
        "_networkDao",
        "listByZoneAndTrafficType",
        "anyLong",
        "eq",
        "TrafficType",
        "Guest",
        "thenReturn",
        "Collections",
        "singletonList",
        "badNetwork",
        "_ssMgr",
        "getDefaultNetworkForBasicZone",
        "dc",
        "Test",
        "expected",
        "dc",
        "Mockito",
        "mock",
        "when",
        "dc",
        "getNetworkType",
        "thenReturn",
        "NetworkType",
        "Basic",
        "when",
        "dc",
        "isSecurityGroupEnabled",
        "thenReturn",
        "when",
        "_dcDao",
        "findById",
        "Mockito",
        "anyLong",
        "thenReturn",
        "dc",
        "network",
        "Mockito",
        "mock",
        "badNetwork",
        "Mockito",
        "mock",
        "when",
        "_networkDao",
        "listByZoneAndTrafficType",
        "anyLong",
        "thenReturn",
        "Collections",
        "singletonList",
        "badNetwork",
        "when",
        "_networkDao",
        "listByZoneSecurityGroup",
        "anyLong",
        "thenReturn",
        "Collections",
        "singletonList",
        "network",
        "_ssMgr",
        "getDefaultNetworkForAdvancedZone",
        "dc"
    ],
    "literals": [],
    "variables": [
        "_dcDao",
        "_networkDao"
    ],
    "comments": [
        "Licensed to the Apache Software Foundation (ASF) under one",
        "or more contributor license agreements.  See the NOTICE file",
        "distributed with this work for additional information",
        "regarding copyright ownership.  The ASF licenses this file",
        "to you under the Apache License, Version 2.0 (the",
        "\"License\"); you may not use this file except in compliance",
        "with the License.  You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing,",
        "software distributed under the License is distributed on an",
        "\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
        "KIND, either express or implied.  See the License for the",
        "specific language governing permissions and limitations",
        "under the License.",
        "also test invalid input"
    ],
    "docstrings": [],
    "functions": [
        "initMocks",
        "getDefaultNetworkForAdvancedNonSG",
        "getDefaultNetworkForAdvancedSG",
        "getDefaultNetworkForBasicNonSG",
        "getDefaultNetworkForBasicSG",
        "getDefaultNetworkForBasicSGWrongZoneType",
        "getDefaultNetworkForAdvancedWrongZoneType"
    ],
    "classes": [
        "SecondaryStorageManagerTest"
    ]
}