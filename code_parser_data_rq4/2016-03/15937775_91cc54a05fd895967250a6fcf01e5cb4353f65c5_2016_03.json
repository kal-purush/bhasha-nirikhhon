{
    "identifiers": [
        "com",
        "github",
        "mjdev",
        "libaums",
        "storageprovider",
        "android",
        "annotation",
        "TargetApi",
        "android",
        "app",
        "PendingIntent",
        "android",
        "content",
        "BroadcastReceiver",
        "android",
        "content",
        "Context",
        "android",
        "content",
        "Intent",
        "android",
        "content",
        "IntentFilter",
        "android",
        "database",
        "Cursor",
        "android",
        "database",
        "MatrixCursor",
        "android",
        "hardware",
        "usb",
        "UsbDevice",
        "android",
        "hardware",
        "usb",
        "UsbManager",
        "android",
        "os",
        "Build",
        "android",
        "os",
        "CancellationSignal",
        "android",
        "os",
        "ParcelFileDescriptor",
        "android",
        "provider",
        "DocumentsContract",
        "android",
        "provider",
        "DocumentsProvider",
        "android",
        "util",
        "Log",
        "android",
        "util",
        "LruCache",
        "android",
        "webkit",
        "MimeTypeMap",
        "com",
        "github",
        "mjdev",
        "libaums",
        "UsbMassStorageDevice",
        "com",
        "github",
        "mjdev",
        "libaums",
        "fs",
        "FileSystem",
        "com",
        "github",
        "mjdev",
        "libaums",
        "fs",
        "UsbFile",
        "com",
        "github",
        "mjdev",
        "libaums",
        "fs",
        "UsbFileInputStream",
        "com",
        "github",
        "mjdev",
        "libaums",
        "fs",
        "UsbFileOutputStream",
        "com",
        "github",
        "mjdev",
        "libaums",
        "partition",
        "Partition",
        "com",
        "github",
        "mjdev",
        "libaums",
        "storageprovider",
        "util",
        "ParcelFileDescriptorUtil",
        "java",
        "io",
        "FileNotFoundException",
        "java",
        "io",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Objects",
        "TargetApi",
        "Build",
        "VERSION_CODES",
        "KITKAT",
        "TAG",
        "getSimpleName",
        "DOCUMENTS_AUTHORITY",
        "ACTION_USB_PERMISSION",
        "DIRECTORY_SEPERATOR",
        "ROOT_SEPERATOR",
        "DEFAULT_ROOT_PROJECTION",
        "DocumentsContract",
        "Root",
        "COLUMN_ROOT_ID",
        "DocumentsContract",
        "Root",
        "COLUMN_SUMMARY",
        "DocumentsContract",
        "Root",
        "COLUMN_FLAGS",
        "DocumentsContract",
        "Root",
        "COLUMN_TITLE",
        "DocumentsContract",
        "Root",
        "COLUMN_DOCUMENT_ID",
        "DocumentsContract",
        "Root",
        "COLUMN_ICON",
        "DocumentsContract",
        "Root",
        "COLUMN_AVAILABLE_BYTES",
        "DEFAULT_DOCUMENT_PROJECTION",
        "DocumentsContract",
        "Document",
        "COLUMN_DOCUMENT_ID",
        "DocumentsContract",
        "Document",
        "COLUMN_DISPLAY_NAME",
        "DocumentsContract",
        "Document",
        "COLUMN_FLAGS",
        "DocumentsContract",
        "Document",
        "COLUMN_MIME_TYPE",
        "DocumentsContract",
        "Document",
        "COLUMN_SIZE",
        "DocumentsContract",
        "Document",
        "COLUMN_LAST_MODIFIED",
        "device",
        "fileSystem",
        "mRoots",
        "mFileCache",
        "projection",
        "projection",
        "projection",
        "DEFAULT_ROOT_PROJECTION",
        "projection",
        "projection",
        "projection",
        "DEFAULT_DOCUMENT_PROJECTION",
        "Override",
        "projection",
        "Log",
        "d",
        "TAG",
        "result",
        "resolveRootProjection",
        "projection",
        "root",
        "mRoots",
        "entrySet",
        "usbPartition",
        "root",
        "getValue",
        "fileSystem",
        "usbPartition",
        "fileSystem",
        "rootDirectory",
        "fileSystem",
        "getRootDirectory",
        "volumeLabel",
        "fileSystem",
        "getVolumeLabel",
        "title",
        "Build",
        "VERSION",
        "SDK_INT",
        "Build",
        "VERSION_CODES",
        "LOLLIPOP",
        "usbDevice",
        "usbPartition",
        "device",
        "title",
        "usbDevice",
        "getManufacturerName",
        "usbDevice",
        "getProductName",
        "title",
        "getContext",
        "getString",
        "R",
        "storage_root",
        "documentId",
        "getDocIdForFile",
        "rootDirectory",
        "Log",
        "d",
        "TAG",
        "documentId",
        "row",
        "result",
        "newRow",
        "row",
        "add",
        "DocumentsContract",
        "Root",
        "COLUMN_ROOT_ID",
        "root",
        "getKey",
        "row",
        "add",
        "DocumentsContract",
        "Root",
        "COLUMN_DOCUMENT_ID",
        "documentId",
        "row",
        "add",
        "DocumentsContract",
        "Root",
        "COLUMN_TITLE",
        "title",
        "row",
        "add",
        "DocumentsContract",
        "Root",
        "COLUMN_FLAGS",
        "DocumentsContract",
        "Root",
        "FLAG_LOCAL_ONLY",
        "DocumentsContract",
        "Root",
        "FLAG_SUPPORTS_CREATE",
        "DocumentsContract",
        "Root",
        "FLAG_SUPPORTS_IS_CHILD",
        "row",
        "add",
        "DocumentsContract",
        "Root",
        "COLUMN_ICON",
        "R",
        "drawable",
        "ic_usb_black_24dp",
        "row",
        "add",
        "DocumentsContract",
        "Root",
        "COLUMN_SUMMARY",
        "volumeLabel",
        "row",
        "add",
        "DocumentsContract",
        "Root",
        "COLUMN_AVAILABLE_BYTES",
        "fileSystem",
        "getFreeSpace",
        "result",
        "Override",
        "documentId",
        "projection",
        "Log",
        "d",
        "TAG",
        "documentId",
        "result",
        "resolveDocumentProjection",
        "projection",
        "includeFile",
        "result",
        "getFileForDocId",
        "documentId",
        "result",
        "e",
        "e",
        "getMessage",
        "Override",
        "parentDocumentId",
        "projection",
        "sortOrder",
        "Log",
        "d",
        "TAG",
        "parentDocumentId",
        "result",
        "resolveDocumentProjection",
        "projection",
        "parent",
        "getFileForDocId",
        "parentDocumentId",
        "child",
        "parent",
        "listFiles",
        "includeFile",
        "result",
        "child",
        "result",
        "e",
        "e",
        "getMessage",
        "Override",
        "documentId",
        "mode",
        "signal",
        "Log",
        "d",
        "TAG",
        "documentId",
        "file",
        "getFileForDocId",
        "documentId",
        "accessMode",
        "ParcelFileDescriptor",
        "parseMode",
        "mode",
        "accessMode",
        "ParcelFileDescriptor",
        "MODE_READ_ONLY",
        "ParcelFileDescriptor",
        "MODE_READ_ONLY",
        "ParcelFileDescriptorUtil",
        "pipeFrom",
        "file",
        "accessMode",
        "ParcelFileDescriptor",
        "MODE_WRITE_ONLY",
        "ParcelFileDescriptor",
        "MODE_WRITE_ONLY",
        "ParcelFileDescriptorUtil",
        "pipeTo",
        "file",
        "e",
        "e",
        "getMessage",
        "Override",
        "parentDocumentId",
        "documentId",
        "documentId",
        "startsWith",
        "parentDocumentId",
        "Override",
        "parentDocumentId",
        "mimeType",
        "displayName",
        "Log",
        "d",
        "TAG",
        "parentDocumentId",
        "parent",
        "getFileForDocId",
        "parentDocumentId",
        "child",
        "DocumentsContract",
        "Document",
        "MIME_TYPE_DIR",
        "equals",
        "mimeType",
        "child",
        "parent",
        "createDirectory",
        "displayName",
        "child",
        "parent",
        "createFile",
        "getFileName",
        "mimeType",
        "displayName",
        "getDocIdForFile",
        "child",
        "e",
        "e",
        "getMessage",
        "Override",
        "documentId",
        "displayName",
        "Log",
        "d",
        "TAG",
        "documentId",
        "file",
        "getFileForDocId",
        "documentId",
        "file",
        "setName",
        "getFileName",
        "getMimeType",
        "file",
        "displayName",
        "mFileCache",
        "remove",
        "documentId",
        "getDocIdForFile",
        "file",
        "e",
        "e",
        "getMessage",
        "Override",
        "documentId",
        "Log",
        "d",
        "TAG",
        "documentId",
        "file",
        "getFileForDocId",
        "documentId",
        "file",
        "mFileCache",
        "remove",
        "documentId",
        "e",
        "e",
        "getMessage",
        "Override",
        "documentId",
        "Log",
        "d",
        "TAG",
        "documentId",
        "getMimeType",
        "getFileForDocId",
        "documentId",
        "e",
        "Log",
        "e",
        "TAG",
        "e",
        "getMessage",
        "Override",
        "Log",
        "d",
        "TAG",
        "context",
        "getContext",
        "context",
        "context",
        "registerReceiver",
        "context",
        "intent",
        "device",
        "intent",
        "getParcelableExtra",
        "UsbManager",
        "EXTRA_DEVICE",
        "intent",
        "getBooleanExtra",
        "UsbManager",
        "EXTRA_PERMISSION_GRANTED",
        "discoverDevice",
        "device",
        "ACTION_USB_PERMISSION",
        "context",
        "registerReceiver",
        "Override",
        "context",
        "intent",
        "device",
        "intent",
        "getParcelableExtra",
        "UsbManager",
        "EXTRA_DEVICE",
        "discoverDevice",
        "device",
        "UsbManager",
        "ACTION_USB_DEVICE_ATTACHED",
        "context",
        "registerReceiver",
        "Override",
        "context",
        "intent",
        "device",
        "intent",
        "getParcelableExtra",
        "UsbManager",
        "EXTRA_DEVICE",
        "detachDevice",
        "device",
        "UsbManager",
        "ACTION_USB_DEVICE_DETACHED",
        "usbManager",
        "context",
        "getSystemService",
        "Context",
        "USB_SERVICE",
        "device",
        "usbManager",
        "getDeviceList",
        "values",
        "discoverDevice",
        "device",
        "file",
        "file",
        "isDirectory",
        "DocumentsContract",
        "Document",
        "MIME_TYPE_DIR",
        "extension",
        "MimeTypeMap",
        "getFileExtensionFromUrl",
        "file",
        "getName",
        "toLowerCase",
        "extension",
        "MimeTypeMap",
        "getSingleton",
        "getMimeTypeFromExtension",
        "extension",
        "mimeType",
        "displayName",
        "extension",
        "MimeTypeMap",
        "getFileExtensionFromUrl",
        "displayName",
        "toLowerCase",
        "extension",
        "Objects",
        "equals",
        "mimeType",
        "MimeTypeMap",
        "getSingleton",
        "getMimeTypeFromExtension",
        "extension",
        "extension",
        "MimeTypeMap",
        "getSingleton",
        "getExtensionFromMimeType",
        "mimeType",
        "extension",
        "displayName",
        "displayName",
        "extension",
        "displayName",
        "result",
        "file",
        "row",
        "result",
        "newRow",
        "row",
        "add",
        "DocumentsContract",
        "Document",
        "COLUMN_DOCUMENT_ID",
        "getDocIdForFile",
        "file",
        "row",
        "add",
        "DocumentsContract",
        "Document",
        "COLUMN_DISPLAY_NAME",
        "file",
        "isRoot",
        "file",
        "getName",
        "row",
        "add",
        "DocumentsContract",
        "Document",
        "COLUMN_MIME_TYPE",
        "getMimeType",
        "file",
        "flags",
        "DocumentsContract",
        "Document",
        "FLAG_SUPPORTS_DELETE",
        "DocumentsContract",
        "Document",
        "FLAG_SUPPORTS_WRITE",
        "DocumentsContract",
        "Document",
        "FLAG_SUPPORTS_RENAME",
        "file",
        "isDirectory",
        "flags",
        "DocumentsContract",
        "Document",
        "FLAG_DIR_SUPPORTS_CREATE",
        "row",
        "add",
        "DocumentsContract",
        "Document",
        "COLUMN_FLAGS",
        "flags",
        "row",
        "add",
        "DocumentsContract",
        "Document",
        "COLUMN_SIZE",
        "file",
        "isDirectory",
        "file",
        "getLength",
        "row",
        "add",
        "DocumentsContract",
        "Document",
        "COLUMN_LAST_MODIFIED",
        "file",
        "isRoot",
        "file",
        "lastModified",
        "device",
        "Log",
        "d",
        "TAG",
        "device",
        "toString",
        "context",
        "getContext",
        "context",
        "usbManager",
        "context",
        "getSystemService",
        "Context",
        "USB_SERVICE",
        "massStorageDevice",
        "UsbMassStorageDevice",
        "getMassStorageDevices",
        "getContext",
        "device",
        "equals",
        "massStorageDevice",
        "getUsbDevice",
        "usbManager",
        "hasPermission",
        "device",
        "addRoot",
        "massStorageDevice",
        "permissionIntent",
        "PendingIntent",
        "getBroadcast",
        "context",
        "ACTION_USB_PERMISSION",
        "usbManager",
        "requestPermission",
        "device",
        "permissionIntent",
        "usbDevice",
        "Log",
        "d",
        "TAG",
        "usbDevice",
        "toString",
        "root",
        "mRoots",
        "entrySet",
        "root",
        "getValue",
        "device",
        "equals",
        "usbDevice",
        "Log",
        "d",
        "TAG",
        "root",
        "getKey",
        "mRoots",
        "remove",
        "root",
        "getKey",
        "mFileCache",
        "evictAll",
        "notifyRootsChanged",
        "device",
        "Log",
        "d",
        "TAG",
        "device",
        "toString",
        "device",
        "init",
        "partition",
        "device",
        "getPartitions",
        "usbPartition",
        "usbPartition",
        "device",
        "device",
        "getUsbDevice",
        "usbPartition",
        "fileSystem",
        "partition",
        "getFileSystem",
        "mRoots",
        "put",
        "toString",
        "partition",
        "hashCode",
        "usbPartition",
        "Log",
        "d",
        "TAG",
        "partition",
        "hashCode",
        "e",
        "Log",
        "e",
        "TAG",
        "e",
        "notifyRootsChanged",
        "getContext",
        "getContentResolver",
        "notifyChange",
        "DocumentsContract",
        "buildRootsUri",
        "DOCUMENTS_AUTHORITY",
        "file",
        "file",
        "isRoot",
        "root",
        "mRoots",
        "entrySet",
        "file",
        "equals",
        "root",
        "getValue",
        "fileSystem",
        "getRootDirectory",
        "documentId",
        "root",
        "getKey",
        "ROOT_SEPERATOR",
        "mFileCache",
        "put",
        "documentId",
        "file",
        "documentId",
        "documentId",
        "getDocIdForFile",
        "file",
        "getParent",
        "DIRECTORY_SEPERATOR",
        "file",
        "getName",
        "mFileCache",
        "put",
        "documentId",
        "file",
        "documentId",
        "documentId",
        "Log",
        "d",
        "TAG",
        "documentId",
        "file",
        "mFileCache",
        "get",
        "documentId",
        "file",
        "file",
        "Log",
        "d",
        "TAG",
        "documentId",
        "splitIndex",
        "documentId",
        "lastIndexOf",
        "DIRECTORY_SEPERATOR",
        "splitIndex",
        "rootId",
        "documentId",
        "substring",
        "documentId",
        "length",
        "usbPartition",
        "mRoots",
        "get",
        "rootId",
        "usbPartition",
        "rootId",
        "file",
        "usbPartition",
        "fileSystem",
        "getRootDirectory",
        "mFileCache",
        "put",
        "documentId",
        "file",
        "file",
        "parent",
        "getFileForDocId",
        "documentId",
        "substring",
        "splitIndex",
        "parent",
        "documentId",
        "name",
        "documentId",
        "substring",
        "splitIndex",
        "child",
        "parent",
        "listFiles",
        "name",
        "equals",
        "child",
        "getName",
        "mFileCache",
        "put",
        "documentId",
        "child",
        "child",
        "documentId"
    ],
    "literals": [
        "\"com.github.mjdev.libaums.storageprovider.documents\"",
        "\"com.github.mjdev.libaums.storageprovider.USB_PERMISSION\"",
        "\"/\"",
        "\":\"",
        "\"queryRoots()\"",
        "\" \"",
        "\"add root \"",
        "\"queryDocument() \"",
        "\"queryChildDocuments() \"",
        "\"openDocument() \"",
        "\"createDocument() \"",
        "\"renameDocument() \"",
        "\"deleteDocument() \"",
        "\"getDocumentType() \"",
        "\"application/octet-stream\"",
        "\"onCreate()\"",
        "\"application/octet-stream\"",
        "\".\"",
        "\"\"",
        "\"discoverDevice() \"",
        "\"detachDevice() \"",
        "\"remove rootId \"",
        "\"addRoot() \"",
        "\"found root \"",
        "\"error setting up device\"",
        "\"Missing root entry\"",
        "\"getFileForDocId() \"",
        "\"No cache entry for \"",
        "\"Missing root for \"",
        "\"Missing parent for \"",
        "\"File not found \""
    ],
    "variables": [
        "device",
        "fileSystem",
        "title",
        "child"
    ],
    "comments": [
        "Create a cursor with either the requested fields, or the default projection if \"projection\" is null.",
        "These columns are required",
        "These columns are optional",
        "Root.COLUMN_MIME_TYPE is another optional column and useful if you have multiple roots with different",
        "types of mime types (roots that don't match the requested mime type are automatically hidden)",
        "These columns are required",
        "COLUMN_SIZE is required, but can be null",
        "These columns are optional",
        "Document.COLUMN_ICON can be a resource id identifying a custom icon. The system provides default icons",
        "based on mime type",
        "Document.COLUMN_SUMMARY is optional additional information about the file"
    ],
    "docstrings": [
        "* (C) Copyright 2016 mjahnen <jahnen@in.tum.de>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *",
        "* Action string to request the permission to communicate with an UsbDevice.",
        "* Default root projection: everything but Root.COLUMN_MIME_TYPES",
        "* Default document projection: everything but Document.COLUMN_ICON and Document.COLUMN_SUMMARY",
        "// We only show thumbnails for image files - expect a call to openDocumentThumbnail for each file that has\n        // this flag set\n        if (mimeType.startsWith(\"image/\"))\n            flags |= DocumentsContract.Document.FLAG_SUPPORTS_THUMBNAIL;"
    ],
    "functions": [
        "resolveRootProjection",
        "resolveDocumentProjection",
        "Cursor",
        "queryRoots",
        "Cursor",
        "queryDocument",
        "Cursor",
        "queryChildDocuments",
        "ParcelFileDescriptor",
        "openDocument",
        "isChildDocument",
        "createDocument",
        "renameDocument",
        "deleteDocument",
        "getDocumentType",
        "onCreate",
        "onReceive",
        "onReceive",
        "onReceive",
        "getMimeType",
        "getFileName",
        "includeFile",
        "discoverDevice",
        "detachDevice",
        "addRoot",
        "notifyRootsChanged",
        "getDocIdForFile",
        "UsbFile",
        "getFileForDocId"
    ],
    "classes": [
        "UsbDocumentProvider",
        "UsbPartition"
    ]
}