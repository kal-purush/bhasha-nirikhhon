{
    "identifiers": [
        "logging",
        "logging",
        "getLogger",
        "action_key",
        "func",
        "logger",
        "info",
        "action_key",
        "func",
        "args",
        "kwargs",
        "func",
        "args",
        "kwargs",
        "inner",
        "outer",
        "session",
        "action_key",
        "logger",
        "debug",
        "action_key",
        "action_key",
        "session",
        "session",
        "KeyError",
        "session",
        "logger",
        "debug",
        "action_key",
        "_actions",
        "action_key"
    ],
    "literals": [
        "'Registering acs action '",
        "'Scheduling acs action '",
        "'post-authn-action'",
        "'post-authn-action'",
        "'login-action'",
        "'post-authn-action'",
        "'Consuming acs action '"
    ],
    "variables": [
        "logger",
        "_actions",
        "_actions",
        "action_key",
        "session",
        "action_key",
        "action_key"
    ],
    "comments": [
        "",
        "Copyright (c) 2016 NORDUnet A/S",
        "All rights reserved.",
        "",
        "Redistribution and use in source and binary forms, with or",
        "without modification, are permitted provided that the following",
        "conditions are met:",
        "",
        "1. Redistributions of source code must retain the above copyright",
        "notice, this list of conditions and the following disclaimer.",
        "2. Redistributions in binary form must reproduce the above",
        "copyright notice, this list of conditions and the following",
        "disclaimer in the documentation and/or other materials provided",
        "with the distribution.",
        "3. Neither the name of the NORDUnet nor the names of its",
        "contributors may be used to endorse or promote products derived",
        "from this software without specific prior written permission.",
        "",
        "THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS",
        "\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT",
        "LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS",
        "FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE",
        "COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,",
        "INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,",
        "BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;",
        "LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER",
        "CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT",
        "LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN",
        "ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE",
        "POSSIBILITY OF SUCH DAMAGE.",
        ""
    ],
    "docstrings": [
        "'''\nRegistry for actions to be performed after an IdP sends a POST\nrequest in response to a SAML request initiated by the service\n\nThe actions are defined in the acs_actions module,\nant they are performed in the assertion consumer service view,\nand are called with two positional parameters:\n\n * the HTTP request\n * the session_info given in the SAML response (a dict)\n'''",
        "'''\n    Decorator to register a new assertion consumer service action.\n\n    :param action_key: the key for the given action\n    :type action_key: str\n    '''",
        "'''\n    Schedule an action to be executed after an IdP responds to a SAML request.\n    This is called just before the SAML request is sent.\n\n    :param session: the session\n    :type session: Session\n    :param action_key: the key for the given action\n    :type action_key: str\n    '''",
        "'''\n    retrieve an action from the registry based on the key\n    stored in the session.\n\n    :param sesison: the session\n    :type session: Session\n    :return: the action\n    :rtype: function\n    '''"
    ],
    "functions": [
        "acs_action",
        "outer",
        "inner",
        "schedule_action",
        "get_action"
    ],
    "classes": []
}