{
    "identifiers": [
        "Configuration",
        "Net",
        "Security",
        "Cryptography",
        "X509Certificates",
        "Microsoft",
        "VisualStudio",
        "TestTools",
        "UnitTesting",
        "Scrumfish",
        "WebApi",
        "v2",
        "ApiSite",
        "Tests",
        "TestClass",
        "Ignore",
        "TestInitialize",
        "_target",
        "WebRequest",
        "CreateHttp",
        "ConfigurationManager",
        "AppSettings",
        "_target",
        "Method",
        "_target",
        "Accept",
        "TestMethod",
        "TestCategory",
        "ExpectedException",
        "Net",
        "WebException",
        "_target",
        "GetResponse",
        "HttpWebResponse",
        "Assert",
        "Fail",
        "TestMethod",
        "TestCategory",
        "_target",
        "ClientCertificates",
        "Add",
        "X509Certificate2",
        "_target",
        "GetResponse",
        "HttpWebResponse",
        "Assert",
        "AreEqual",
        "HttpStatusCode",
        "OK",
        "response",
        "StatusCode",
        "TestMethod",
        "TestCategory",
        "_target",
        "ClientCertificates",
        "Add",
        "X509Certificate2",
        "_target",
        "GetResponse",
        "HttpWebResponse",
        "Assert",
        "AreEqual",
        "HttpStatusCode",
        "OK",
        "response",
        "StatusCode",
        "TestMethod",
        "TestCategory",
        "_target",
        "ClientCertificates",
        "Add",
        "X509Certificate2",
        "_target",
        "GetResponse",
        "HttpWebResponse",
        "Assert",
        "AreEqual",
        "HttpStatusCode",
        "OK",
        "response",
        "StatusCode",
        "WebException",
        "exception",
        "exception",
        "Response",
        "HttpWebResponse",
        "Assert",
        "AreEqual",
        "HttpStatusCode",
        "Unauthorized",
        "caughtResponse",
        "StatusCode",
        "TestMethod",
        "TestCategory",
        "_target",
        "ClientCertificates",
        "Add",
        "X509Certificate2",
        "_target",
        "GetResponse",
        "HttpWebResponse",
        "Assert",
        "AreEqual",
        "HttpStatusCode",
        "OK",
        "response",
        "StatusCode",
        "WebException",
        "exception",
        "exception",
        "Response",
        "HttpWebResponse",
        "Assert",
        "AreEqual",
        "HttpStatusCode",
        "Unauthorized",
        "caughtResponse",
        "StatusCode"
    ],
    "literals": [
        "\"uri\"",
        "\"GET\"",
        "\"application/json\"",
        "\"Integration\"",
        "\"Should have gotten an exception.\"",
        "\"Integration\"",
        "\"valid.example.com.pfx\"",
        "\"password\"",
        "\"Integration\"",
        "\"thumbprint.example.com.pfx\"",
        "\"password\"",
        "\"Integration\"",
        "\"expired.example.com.pfx\"",
        "\"password\"",
        "\"Integration\"",
        "\"unused.example.com.pfx\"",
        "\"password\""
    ],
    "variables": [
        "HttpWebRequest",
        "_target",
        "response",
        "response",
        "response",
        "response",
        "caughtResponse",
        "response",
        "caughtResponse"
    ],
    "comments": [
        "If you are testing against a self-signed cert, use this.",
        "ServicePointManager.ServerCertificateValidationCallback =",
        "(object o, X509Certificate c, X509Chain ch, SslPolicyErrors e) => true;"
    ],
    "docstrings": [],
    "functions": [
        "Setup",
        "Get_FailsWithNoCert_Test",
        "Get_ReceivesOkWithValidCert_Test",
        "Get_ReceivesOkWithValidCertThumbprint_Test",
        "Get_ReceivesUnauthorizedWithExpiredCert_Test",
        "Get_ReceivesUnauthorizedWithUnusedCert_Test"
    ],
    "classes": [
        "ApiSite_Integration_Tests"
    ]
}