{
    "identifiers": [
        "json",
        "unittest",
        "mock",
        "TestCase",
        "mock",
        "commissaire",
        "containermgr",
        "kubernetes",
        "commissaire",
        "util",
        "config",
        "ConfigurationError",
        "TestCase",
        "kubernetes",
        "KubeContainerManager",
        "CONTAINER_MGR_CONFIG",
        "assertEquals",
        "instance",
        "base_uri",
        "assertTrue",
        "instance",
        "con",
        "config",
        "assertRaises",
        "ConfigurationError",
        "kubernetes",
        "KubeContainerManager",
        "config",
        "instance",
        "mock",
        "MagicMock",
        "instance",
        "_get",
        "instance",
        "con",
        "get",
        "assert_called_once_with",
        "CONTAINER_MGR_CONFIG",
        "code",
        "result",
        "instance",
        "mock",
        "MagicMock",
        "instance",
        "con",
        "get",
        "mock",
        "MagicMock",
        "status_code",
        "code",
        "assertEquals",
        "result",
        "instance",
        "node_registered",
        "instance",
        "con",
        "get",
        "assert_called_once_with",
        "CONTAINER_MGR_CONFIG",
        "raw",
        "result",
        "data",
        "instance",
        "mock",
        "MagicMock",
        "mock",
        "MagicMock",
        "json",
        "mock",
        "MagicMock",
        "return_value",
        "data",
        "instance",
        "con",
        "get",
        "resp",
        "instance",
        "con",
        "get",
        "assertEquals",
        "result",
        "instance",
        "get_host_status",
        "raw",
        "instance",
        "con",
        "get",
        "assert_called_with",
        "CONTAINER_MGR_CONFIG"
    ],
    "literals": [
        "'server_url'",
        "'http://127.0.0.1:8080/'",
        "'http://127.0.0.1:8080/api/v1'",
        "'server_url'",
        "'http://127.0.0.1:8080/'",
        "'certificate_path'",
        "'/tmp/'",
        "'server_url'",
        "'http://127.0.0.1:8080/'",
        "'certificate_path'",
        "'/tmp/'",
        "'certificate_key_path'",
        "'/tmp/'",
        "'test'",
        "'server_url'",
        "'api/v1/test'",
        "'test'",
        "'server_url'",
        "'api/v1/nodes/test'",
        "'data'",
        "'data'",
        "'status'",
        "'status'",
        "'status'",
        "'test'",
        "'server_url'",
        "'api/v1/nodes/test'"
    ],
    "variables": [
        "CONTAINER_MGR_CONFIG",
        "instance",
        "con",
        "con",
        "return_value",
        "data",
        "con",
        "resp",
        "return_value",
        "status_code"
    ],
    "comments": [
        "Copyright (C) 2016  Red Hat, Inc",
        "",
        "This program is free software: you can redistribute it and/or modify",
        "it under the terms of the GNU General Public License as published by",
        "the Free Software Foundation, either version 3 of the License, or",
        "(at your option) any later version.",
        "",
        "This program is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "GNU General Public License for more details.",
        "",
        "You should have received a copy of the GNU General Public License",
        "along with this program.  If not, see <http://www.gnu.org/licenses/>."
    ],
    "docstrings": [
        "\"\"\"\nTests for the commissaire.containermgr.kubernetes module.\n\"\"\"",
        "\"\"\"\n    Tests for the commissaire.containermgr.kubernetes module.\n    \"\"\"",
        "\"\"\"\n        Set up an instance for every test.\n        \"\"\"",
        "\"\"\"\n        Verify using new on a model creates a default instance.\n        \"\"\"",
        "\"\"\"\n        Verify using new on a model creates a default instance.\n        \"\"\"",
        "\"\"\"\n        Verify _get makes proper HTTP requests.\n        \"\"\"",
        "\"\"\"\n        Verify node_registered makes the proper remote call and returns the proper result.\n        \"\"\"",
        "\"\"\"\n        Verify get_host_status makes the proper remote call.\n        \"\"\""
    ],
    "functions": [
        "setUp",
        "test_initialization",
        "test_initialization_with_bad_config",
        "test__get",
        "test_node_registered",
        "test_get_host_status"
    ],
    "classes": [
        "TestKubeContainerManager"
    ]
}