{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "Entity",
        "x",
        "y",
        "s",
        "x",
        "y",
        "Graphics",
        "s",
        "s",
        "s",
        "Collider",
        "s",
        "s",
        "s",
        "s",
        "Groups",
        "Groups",
        "Groups",
        "Game",
        "SystemPhysics",
        "AABBSolver",
        "SystemGfx",
        "MyEntity",
        "MyEntity",
        "SampleEntity"
    ],
    "literals": [
        "'engine/core'",
        "'engine/Game'",
        "'engine/Entity'",
        "'engine/gfx'",
        "'engine/gfx/Graphics'",
        "'engine/physics'",
        "'engine/physics/AABBSolver'",
        "'engine/physics/Collider'",
        "'game/data'",
        "'Box'",
        "'Box'",
        "'my_boxes'",
        "'my_boxes'",
        "'my_boxes'"
    ],
    "variables": [
        "core",
        "Game",
        "Entity",
        "SystemGfx",
        "Graphics",
        "SystemPhysics",
        "AABBSolver",
        "Collider",
        "box1",
        "box2"
    ],
    "comments": [
        "Extend to create a custom Entity",
        "Entity is just a container for components like",
        "gfx node or collider.",
        "x and y is the position, s is a settings object",
        "which might be undefined sometimes",
        "Settings object will be merged into this object,",
        "and you might not want that happen. Simple pass",
        "a null can be a good choice",
        "",
        "You can also override the `setup` method, which",
        "is used to handle setting object.",
        "Create a Graphics as our `gfx`",
        "Physics always requires a collision solver",
        "Give it a gravity towards the bottom",
        "Create a layer for our entities",
        "Spawn an Entity",
        "Spawn an Entity with some settigns"
    ],
    "docstrings": [],
    "functions": [],
    "classes": [
        "MyEntity",
        "SampleEntity"
    ]
}