{
    "identifiers": [
        "com",
        "datamelt",
        "hadoop",
        "data",
        "java",
        "io",
        "File",
        "org",
        "apache",
        "log4j",
        "Logger",
        "java",
        "io",
        "java",
        "net",
        "URI",
        "java",
        "util",
        "ZipFile",
        "org",
        "apache",
        "hadoop",
        "conf",
        "Configuration",
        "org",
        "apache",
        "hadoop",
        "fs",
        "Path",
        "org",
        "apache",
        "hadoop",
        "io",
        "DoubleWritable",
        "org",
        "apache",
        "hadoop",
        "io",
        "LongWritable",
        "org",
        "apache",
        "hadoop",
        "io",
        "Text",
        "org",
        "apache",
        "hadoop",
        "mapreduce",
        "lib",
        "input",
        "FileInputFormat",
        "org",
        "apache",
        "hadoop",
        "mapreduce",
        "lib",
        "input",
        "TextInputFormat",
        "org",
        "apache",
        "hadoop",
        "mapreduce",
        "lib",
        "output",
        "FileOutputFormat",
        "org",
        "apache",
        "hadoop",
        "mapreduce",
        "lib",
        "output",
        "TextOutputFormat",
        "com",
        "datamelt",
        "rules",
        "engine",
        "BusinessRulesEngine",
        "com",
        "datamelt",
        "util",
        "RowField",
        "com",
        "datamelt",
        "util",
        "RowFieldCollection",
        "com",
        "datamelt",
        "util",
        "Splitter",
        "org",
        "apache",
        "hadoop",
        "mapreduce",
        "Job",
        "org",
        "apache",
        "hadoop",
        "mapreduce",
        "Mapper",
        "org",
        "apache",
        "hadoop",
        "mapreduce",
        "Reducer",
        "logger",
        "Logger",
        "getLogger",
        "DISTCACHE_RULES_PROJECTFILE",
        "RULEENGINE_LIBRARY",
        "bre",
        "headerFields",
        "headerFieldTypes",
        "Override",
        "context",
        "headerFields",
        "DataRecord",
        "getProperty",
        "DataRecord",
        "PROPERTY_HEADERFIELDS",
        "split",
        "logger",
        "info",
        "headerFields",
        "length",
        "headerFieldTypes",
        "headerFields",
        "length",
        "i",
        "i",
        "headerFields",
        "length",
        "i",
        "headerFieldTypes",
        "i",
        "DataRecord",
        "getPropertyFieldType",
        "headerFields",
        "i",
        "headerFieldTypes",
        "i",
        "equals",
        "DataRecord",
        "TYPE_UNDEFINED",
        "logger",
        "error",
        "headerFields",
        "i",
        "headerFieldTypes",
        "i",
        "Splitter",
        "FIELDTYPE_STRING",
        "logger",
        "info",
        "headerFields",
        "i",
        "Splitter",
        "FIELDTYPE_STRING",
        "files",
        "context",
        "getCacheFiles",
        "distributedCacheFilename",
        "context",
        "getConfiguration",
        "get",
        "DISTCACHE_RULES_PROJECTFILE",
        "uri",
        "files",
        "file",
        "uri",
        "getPath",
        "logger",
        "info",
        "file",
        "getName",
        "file",
        "getName",
        "equals",
        "distributedCacheFilename",
        "initializeRuleEngine",
        "file",
        "getPath",
        "file",
        "logger",
        "info",
        "BusinessRulesEngine",
        "getVersion",
        "file",
        "getName",
        "bre",
        "file",
        "ex",
        "logger",
        "error",
        "ex",
        "getMessage",
        "key",
        "value",
        "context",
        "splitter",
        "Splitter",
        "TYPE_COMMA_SEPERATED",
        "Splitter",
        "SEPERATOR_TAB",
        "collection",
        "headerFields",
        "splitter",
        "getFields",
        "value",
        "toString",
        "headerFieldTypes",
        "bre",
        "run",
        "key",
        "toString",
        "collection",
        "bre",
        "getNumberOfGroupsFailed",
        "valueField",
        "collection",
        "getField",
        "DataRecord",
        "getProperty",
        "DataRecord",
        "PROPERTY_CALCULATIONFIELD",
        "rowKey",
        "DataRecord",
        "getKey",
        "collection",
        "rowKey",
        "equals",
        "rowKey",
        "key",
        "toString",
        "context",
        "write",
        "rowKey",
        "valueField",
        "getValue",
        "bre",
        "getRuleExecutionCollection",
        "clear",
        "ex",
        "logger",
        "error",
        "ex",
        "getMessage",
        "key",
        "values",
        "context",
        "sum",
        "value",
        "values",
        "sum",
        "value",
        "get",
        "context",
        "write",
        "key",
        "sum",
        "args",
        "conf",
        "conf",
        "job",
        "Job",
        "getInstance",
        "conf",
        "job",
        "setJarByClass",
        "job",
        "setMapperClass",
        "job",
        "setReducerClass",
        "job",
        "setCombinerClass",
        "job",
        "setOutputKeyClass",
        "job",
        "setOutputValueClass",
        "job",
        "setInputFormatClass",
        "job",
        "setOutputFormatClass",
        "job",
        "addArchiveToClassPath",
        "RULEENGINE_LIBRARY",
        "rulesFile",
        "args",
        "job",
        "addCacheFile",
        "rulesFile",
        "toUri",
        "job",
        "getConfiguration",
        "DISTCACHE_RULES_PROJECTFILE",
        "rulesFile",
        "getName",
        "FileInputFormat",
        "addInputPath",
        "job",
        "args",
        "FileOutputFormat",
        "setOutputPath",
        "job",
        "args",
        "job",
        "waitForCompletion"
    ],
    "literals": [
        "\"rulesprojectfile\"",
        "\"jare0.79.jar\"",
        "\",\"",
        "\"property file defines [\"",
        "\"] header fields\"",
        "\"undefined field type for field [\"",
        "\"] in propertiesfile\"",
        "\"changed undefined field type for field [\"",
        "\"] to default type [\"",
        "\"]\"",
        "\"found file in distributed cache [\"",
        "\"]\"",
        "\"Initializing JaRE Business Rule Engine v\"",
        "\" with file [\"",
        "\"]\"",
        "\"\"",
        "\"mapreduce.output.textoutputformat.separator\"",
        "\";\"",
        "\"data processor\""
    ],
    "variables": [
        "bre",
        "headerFields",
        "headerFieldTypes"
    ],
    "comments": [
        "get the definition of the header fields",
        "get the definition of types for each header field",
        "we have as many types as we have fields",
        "loop over header fields and get the corresponding types",
        "get the field type",
        "if the property was not found we log the error and set the",
        "type to \"string\" as a default",
        "change type to default",
        "bre.setPreserveRuleExcecutionResults(false);",
        "split data record",
        "create a collection of the fields taking into account the header fields and the field types",
        "run the Rule Engine on the collection we just created for the data record",
        "if the run of the rule engine has no groups which failed, write key and value to the context",
        "get the field that contains the value for calculations",
        "if no keyfields have been defined, use the key defined by the map process",
        "get the constructed key and value for the current row of data",
        "clear the results of the ruleengine execution before the next data arrives",
        "sum up values",
        "write to the context as key and double",
        "we use the JaRE business rule engine for evaluating the data",
        "the ruleengine project file - put it in the distributed cache",
        "input and output path of the job"
    ],
    "docstrings": [
        "* used to process data using mapreduce. contains classes for mapping\n * and reducing.\n * \n * for filtering data records, the business rule engine JaRE is used. Rules\n * are stored externally in a zip file, so nothing is hardcoded here. Rules\n * and (complex) logic can be designed in a web application.\n * \n * @author\tuwe geercken, last update: 2016-11-29\n *",
        "* mapper part to prepare data fro the reduce phase by assigning\n\t * key and value pairs.\n\t * \n\t * @author uwe geercken, last update: 2016-11-29\n\t *",
        "* get the project zip file for the ruleengine\n\t\t * from the distributed cache",
        "* initialize the static rule engine instance with a\n\t\t * a zip file, created with the business rules maintenance tool\n\t\t * \n\t\t * @param file\ta zip file for the rule engine",
        "* Split the data record in its individual fields, get the definition of the\n\t\t * header fields and create a RowFieldCollection from it. This will then be\n\t\t * passed to the rule engine and when the rule engine runs it evaluates the\n\t\t * rules against the data.",
        "* reduce class. sum up values for the defined key\n\t * \n\t * @author uwe geercken, last update: 2016-11-29\n\t *",
        "* reduce the keys and values from the mapping phase\n    \t * \n    \t * values will be summed in the reduce phase"
    ],
    "functions": [
        "setup",
        "initializeRuleEngine",
        "reduce",
        "main"
    ],
    "classes": [
        "DataProcessor",
        "DataMapper",
        "DataReducer"
    ]
}