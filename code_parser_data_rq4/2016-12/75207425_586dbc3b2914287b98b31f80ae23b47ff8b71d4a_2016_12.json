{
    "identifiers": [
        "hu",
        "skawa",
        "migrator_maven_plugin",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileWriter",
        "java",
        "io",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "org",
        "apache",
        "maven",
        "artifact",
        "Artifact",
        "org",
        "apache",
        "maven",
        "plugin",
        "AbstractMojo",
        "org",
        "apache",
        "maven",
        "plugin",
        "MojoExecutionException",
        "org",
        "apache",
        "maven",
        "plugins",
        "annotations",
        "LifecyclePhase",
        "org",
        "apache",
        "maven",
        "plugins",
        "annotations",
        "Mojo",
        "org",
        "apache",
        "maven",
        "plugins",
        "annotations",
        "Parameter",
        "org",
        "apache",
        "maven",
        "plugins",
        "annotations",
        "ResolutionScope",
        "org",
        "apache",
        "maven",
        "project",
        "MavenProject",
        "hu",
        "skawa",
        "migrator_maven_plugin",
        "model",
        "InternalDependency",
        "Mojo",
        "name",
        "defaultPhase",
        "LifecyclePhase",
        "PROCESS_SOURCES",
        "requiresDependencyResolution",
        "ResolutionScope",
        "TEST",
        "Parameter",
        "required",
        "defaultValue",
        "project",
        "Parameter",
        "property",
        "outputFilePrefix",
        "Parameter",
        "property",
        "outputDirectives",
        "Parameter",
        "property",
        "outputReferences",
        "allDependencies",
        "getLog",
        "info",
        "outputFilePrefix",
        "artifacts",
        "project",
        "getArtifacts",
        "arti",
        "artifacts",
        "id",
        "arti",
        "getGroupId",
        "arti",
        "getArtifactId",
        "arti",
        "getVersion",
        "allDependencies",
        "add",
        "id",
        "outputFilePrefix",
        "outputDirectives",
        "directives",
        "outputFilePrefix",
        "writer",
        "directives",
        "dep",
        "allDependencies",
        "writer",
        "write",
        "dep",
        "toBazelDirective",
        "writer",
        "write",
        "writer",
        "close",
        "outputReferences",
        "references",
        "outputFilePrefix",
        "writer",
        "references",
        "dep",
        "allDependencies",
        "writer",
        "write",
        "dep",
        "getArtifactId",
        "dep",
        "getBazelName",
        "writer",
        "write",
        "writer",
        "close",
        "dep",
        "allDependencies",
        "getLog",
        "info",
        "dep",
        "toBazelDirective",
        "e",
        "getLog",
        "error",
        "e"
    ],
    "literals": [
        "\"transform\"",
        "\"${project}\"",
        "\"outputFilePrefix\"",
        "\"outputDirectives\"",
        "\"outputReferences\"",
        "\"-directives\"",
        "\"\\n\"",
        "\"-references\"",
        "\": @\"",
        "\"//jar\"",
        "\"\\n\""
    ],
    "variables": [
        "project",
        "outputFilePrefix",
        "outputDirectives",
        "outputReferences"
    ],
    "comments": [],
    "docstrings": [
        "* Copyright 2001-2005 The Apache Software Foundation. Licensed under the Apache License, Version\n * 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by\n * applicable law or agreed to in writing, software distributed under the License is distributed on\n * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See\n * the License for the specific language governing permissions and limitations under the License.",
        "* Transform all dependencies for Bazel."
    ],
    "functions": [
        "execute"
    ],
    "classes": [
        "Migrator"
    ]
}