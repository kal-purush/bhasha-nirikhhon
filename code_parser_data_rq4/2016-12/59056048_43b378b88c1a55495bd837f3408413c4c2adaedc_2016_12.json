{
    "identifiers": [
        "val1",
        "val2",
        "val1",
        "val2",
        "node1",
        "node1",
        "Node",
        "val1",
        "val1",
        "node1",
        "node2",
        "node2",
        "Node",
        "val2",
        "val2",
        "node2",
        "node1",
        "val2",
        "value",
        "value",
        "value",
        "val1",
        "val2",
        "val1",
        "val2",
        "val1",
        "val2",
        "val1",
        "node",
        "val2",
        "val1",
        "key",
        "node",
        "key",
        "key",
        "val2",
        "result",
        "val1",
        "val2",
        "val1",
        "val2",
        "val1",
        "val2",
        "val1",
        "node",
        "val2",
        "key",
        "node",
        "key",
        "key",
        "key",
        "nextNodeToCheck",
        "val2",
        "val1",
        "val2",
        "sum",
        "array",
        "sum",
        "val1",
        "val2",
        "sum",
        "array",
        "val1",
        "node",
        "val2",
        "array",
        "sum",
        "val1",
        "key",
        "node",
        "node",
        "key",
        "key",
        "key",
        "val2",
        "sum",
        "array",
        "smallest",
        "array",
        "array",
        "array",
        "i",
        "array",
        "i",
        "min",
        "array",
        "i",
        "min",
        "array",
        "i",
        "min",
        "value",
        "value",
        "Graph",
        "graph",
        "graph",
        "graph",
        "graph",
        "graph",
        "graph",
        "graph",
        "graph"
    ],
    "literals": [
        "'connections'",
        "'here'",
        "'value'",
        "'connections'",
        "'here'",
        "'value'",
        "'connections'",
        "'value'",
        "'connections'",
        "'value'",
        "\"p\"",
        "\"e\"",
        "\"p\"",
        "\"c\"",
        "\"c\"",
        "\"k\"",
        "\"k\"",
        "\"z\"",
        "\"e\"",
        "\"z\"",
        "\"p\"",
        "\"j\"",
        "\"i\"",
        "\"z\"",
        "\"p\"",
        "\"z\""
    ],
    "variables": [
        "node1",
        "node2",
        "node",
        "result",
        "node",
        "nextNodeToCheck",
        "node",
        "min",
        "i",
        "graph"
    ],
    "comments": [
        "used an array for simplicity",
        "Depth First Search",
        "make sure both nodes are in the map",
        "break case",
        "make sure node is visited",
        "return false;",
        "none of the children had a path to the destination",
        "Breadth First Search",
        "make sure both nodes are in the map",
        "break case",
        "dequeues the first node from the queue so that we can check it",
        "break case",
        "make sure node is visited",
        "private",
        "console.log(graph.queue)",
        "console.log(graph['map']['z']['connections']);"
    ],
    "docstrings": [],
    "functions": [
        "Graph",
        "smallest",
        "Node"
    ],
    "classes": []
}