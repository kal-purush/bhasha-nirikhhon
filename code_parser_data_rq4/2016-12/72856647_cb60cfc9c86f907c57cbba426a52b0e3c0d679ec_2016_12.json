{
    "identifiers": [
        "org",
        "usfirst",
        "frc",
        "team3238",
        "robot",
        "error",
        "cumulativeError",
        "adjustedRotationValue",
        "oldX",
        "oldY",
        "time",
        "oldTime",
        "timeDifference",
        "x",
        "y",
        "rotation",
        "pConstant",
        "iConstant",
        "spinThreshold",
        "gyroValue",
        "error",
        "abs",
        "gyroValue",
        "time",
        "currentTimeMillis",
        "oldTime",
        "timeDifference",
        "timeDifference",
        "time",
        "oldTime",
        "abs",
        "oldX",
        "x",
        "abs",
        "oldY",
        "y",
        "cumulativeError",
        "cumulativeError",
        "error",
        "error",
        "spinThreshold",
        "rotation",
        "rotation",
        "adjustedRotationValue",
        "rotation",
        "gyroValue",
        "adjustedRotationValue",
        "error",
        "pConstant",
        "cumulativeError",
        "iConstant",
        "timeDifference",
        "gyroValue",
        "adjustedRotationValue",
        "error",
        "pConstant",
        "cumulativeError",
        "iConstant",
        "timeDifference",
        "adjustedRotationValue",
        "oldX",
        "x",
        "oldY",
        "y",
        "oldTime",
        "time",
        "adjustedRotationValue",
        "cumulativeError",
        "oldTime"
    ],
    "literals": [],
    "variables": [
        "error",
        "adjustedRotationValue",
        "time",
        "timeDifference"
    ],
    "comments": [
        "Reads the system's time",
        "If this is the first loop, set timeDifference to 0",
        "If the joystick input has changed, reset cumulativeError",
        "Set up the \"old\" values for the next loop"
    ],
    "docstrings": [
        "* Reduces unwanted rotation of mecanum chassis by using a gyro sensor and a PI\n * loop\n *\n * @author Nick Papadakis",
        "* Takes the current movement commands for the chassis, PI constants, and\n     * current gyroValue\n     *\n     * @param x\n     *            The current x power for the robot's movement\n     * @param y\n     *            The current y power for the robot's movement\n     * @param rotation\n     *            The current rotation power for the robot's movement\n     * @param pConstant\n     *            The P constant for the PI loop\n     * @param iConstant\n     *            The I constant for the PI loop\n     * @param spinThreshold\n     *            The gyro value at which the PI loop will stop trying to\n     *            correct the robot's spin\n     * @param gyroValue\n     *            The current value of the gyro sensor\n     * @return The adjusted rotation value for correcting the robot's rotation",
        "* Check to see if the robot's spinning really fast due to a driver\n         * induced spin or if the driver is trying to rotate, and if so, don't\n         * change the current rotation value",
        "* Check the direction of the gyroValue to know which way the chassis\n         * needs to rotate in to compensate",
        "* Resets the cumulativeError and oldTime variables"
    ],
    "functions": [
        "getAdjustedRotationValue",
        "reinit"
    ],
    "classes": [
        "GyroDrive"
    ]
}