{
    "identifiers": [
        "ParticleDiameter",
        "PartsPerParcel",
        "EleCount",
        "ParticleDiameter",
        "ParticleDiameter",
        "PartsPerParcel",
        "PartsPerParcel",
        "EleCount",
        "Diameter",
        "ParticleNumber",
        "ParticleDiameters",
        "append",
        "Diameter",
        "ParticlesPerParcel",
        "append",
        "ParticleNumber",
        "NumElements",
        "NumElements",
        "len",
        "ParticlesPerParcel",
        "i",
        "NumElements",
        "ParticleDiameters",
        "i",
        "ParticlesPerParcel",
        "i",
        "NumElements",
        "len",
        "ParticleDiameters",
        "len",
        "ParticleDiameters",
        "NumElements",
        "len",
        "ParticleDiameters",
        "NumElements",
        "itemgetter",
        "NumElements",
        "i",
        "NumElements",
        "CheckSum1",
        "ParticlesPerParcel",
        "i",
        "i",
        "NumElements",
        "alist",
        "append",
        "alist",
        "i",
        "append",
        "ParticleDiameters",
        "i",
        "alist",
        "i",
        "append",
        "ParticlesPerParcel",
        "i",
        "alist",
        "i",
        "append",
        "ParticleDiameters",
        "i",
        "alist",
        "sort",
        "key",
        "itemgetter",
        "i",
        "NumElements",
        "ParticleDiameters",
        "alist",
        "i",
        "ParticlesPerParcel",
        "alist",
        "i",
        "i",
        "NumElements",
        "CheckSum2",
        "ParticlesPerParcel",
        "i",
        "abs",
        "CheckSum1",
        "CheckSum2",
        "itemgetter",
        "NumElements",
        "i",
        "NumElements",
        "CheckSum1",
        "ParticlesPerParcel",
        "i",
        "i",
        "NumElements",
        "alist",
        "append",
        "alist",
        "i",
        "append",
        "ParticleDiameters",
        "i",
        "alist",
        "i",
        "append",
        "ParticlesPerParcel",
        "i",
        "alist",
        "i",
        "append",
        "ParticlesPerParcel",
        "i",
        "alist",
        "sort",
        "key",
        "itemgetter",
        "i",
        "NumElements",
        "ParticleDiameters",
        "alist",
        "i",
        "ParticlesPerParcel",
        "alist",
        "i",
        "i",
        "NumElements",
        "CheckSum2",
        "ParticlesPerParcel",
        "i",
        "abs",
        "CheckSum1",
        "CheckSum2",
        "time",
        "NumElements",
        "i",
        "NumElements",
        "CheckSum1",
        "ParticlesPerParcel",
        "i",
        "time",
        "clock",
        "i",
        "NumElements",
        "i",
        "NumElements",
        "NewDiameterList",
        "append",
        "ParticleDiameters",
        "i",
        "NewParcelList",
        "append",
        "ParticlesPerParcel",
        "i",
        "j",
        "i",
        "NewCount",
        "ParticleDiameters",
        "i",
        "ParticleDiameters",
        "i",
        "NewDiameterList",
        "append",
        "ParticleDiameters",
        "i",
        "NewParcelList",
        "append",
        "ParticlesPerParcel",
        "i",
        "j",
        "i",
        "NewCount",
        "NewCount",
        "NewDiameterList",
        "append",
        "ParticleDiameters",
        "i",
        "NewParcelList",
        "append",
        "ParticlesPerParcel",
        "i",
        "end",
        "i",
        "count",
        "NumElements",
        "ParticleDiameters",
        "i",
        "count",
        "ParticleDiameters",
        "i",
        "NewParcelList",
        "j",
        "ParticlesPerParcel",
        "i",
        "count",
        "count",
        "j",
        "i",
        "count",
        "time",
        "clock",
        "NewDiameterList",
        "NewParcelList",
        "NewCount",
        "i",
        "NumElements",
        "CheckSum2",
        "ParticlesPerParcel",
        "i",
        "abs",
        "CheckSum1",
        "CheckSum2",
        "UserDiameterBins",
        "i",
        "NumElements",
        "CheckSum1",
        "ParticlesPerParcel",
        "i",
        "len",
        "UserDiameterBins",
        "i",
        "NumBins",
        "UserDiameters",
        "append",
        "UserDiameterBins",
        "i",
        "UserDiameterBins",
        "i",
        "i",
        "NumBins",
        "NewParcelCount",
        "append",
        "i",
        "NumElements",
        "j",
        "NumBins",
        "ParticleDiameters",
        "i",
        "UserDiameterBins",
        "j",
        "ParticleDiameters",
        "i",
        "UserDiameterBins",
        "j",
        "NewParcelCount",
        "j",
        "NewParcelCount",
        "j",
        "ParticlesPerParcel",
        "i",
        "Found",
        "ParticleDiameters",
        "i",
        "UserDiameters",
        "NewParcelCount",
        "NumBins",
        "i",
        "NumElements",
        "CheckSum2",
        "ParticlesPerParcel",
        "i",
        "abs",
        "CheckSum1",
        "CheckSum2",
        "abs",
        "CheckSum1",
        "CheckSum2",
        "other",
        "time",
        "other",
        "NumElements",
        "i",
        "NumElements",
        "CheckSum1",
        "ParticlesPerParcel",
        "i",
        "i",
        "other",
        "NumElements",
        "CheckSum1",
        "other",
        "ParticlesPerParcel",
        "i",
        "ParticleDiameters",
        "other",
        "ParticleDiameters",
        "ParticlesPerParcel",
        "other",
        "ParticlesPerParcel",
        "NumElements",
        "other",
        "NumElements",
        "ParticleBinData",
        "NewDiameterList",
        "NewParcelList",
        "NewCount",
        "i",
        "CombinedData",
        "NumElements",
        "CheckSum2",
        "CombinedData",
        "ParticlesPerParcel",
        "i",
        "abs",
        "CheckSum1",
        "CheckSum2",
        "abs",
        "CheckSum1",
        "CheckSum2",
        "ParticleDiameters",
        "ParticlesPerParcel",
        "NumElements",
        "ParticleBinData",
        "NewDiameterList",
        "NewParcelList",
        "NewCount",
        "ParticleBinData",
        "CombinedData",
        "ParticleDiameters",
        "CombinedData",
        "ParticlesPerParcel",
        "CombinedData",
        "NumElements"
    ],
    "literals": [
        "\"Data set has %d elements. Output below is Nx2 array: Diameter and Particles Per Parcel\"",
        "\"Number of elements in ParticlesPerParcel list: %d\"",
        "\"%10.6E\\t%10.6E\"",
        "\"ERROR: Mis-match between actual amount of data & expected amount of data contained in object\"",
        "\"Object contains %d elements, but thinks it contains %d elements\"",
        "\"Data Check Passed. Object has %d elements and thinks it contains %d elements\"",
        "\"ERROR - Sorting process has lost data!\"",
        "\"ERROR - Sorting of Parcel Data process has lost data!\"",
        "\"ERROR - Compression process has lost data!\"",
        "\"Timely Warning: The value: %10.6E  in the original data set was unable to be placed into the user defined bins\"",
        "\"Warning - Customizing Bins process has lost data, which may be due to existing data being outside of user-defined bin values\"",
        "\"Magnitude of Error: %10.6E\"",
        "\"ERROR - Addition process has lost data! Discrepancy is: %10.6E\""
    ],
    "variables": [
        "ParticleDiameters",
        "ParticlesPerParcel",
        "NumElements",
        "NumElements",
        "CheckSum1",
        "CheckSum1",
        "alist",
        "i",
        "i",
        "CheckSum2",
        "CheckSum2",
        "CheckSum1",
        "CheckSum1",
        "alist",
        "i",
        "i",
        "CheckSum2",
        "CheckSum2",
        "CheckSum1",
        "CheckSum1",
        "TimeStart",
        "NewDiameterList",
        "NewParcelList",
        "j",
        "i",
        "NewCount",
        "j",
        "i",
        "NewCount",
        "j",
        "i",
        "NewCount",
        "end",
        "NewCount",
        "count",
        "NewParcelList",
        "j",
        "count",
        "end",
        "end",
        "j",
        "i",
        "TimeEnd",
        "ParticleDiameters",
        "ParticlesPerParcel",
        "NumElements",
        "CheckSum2",
        "CheckSum2",
        "CheckSum1",
        "CheckSum1",
        "UserDiameters",
        "NumBins",
        "NewParcelCount",
        "Found",
        "tmpValue",
        "NewParcelCount",
        "j",
        "Found",
        "ParticleDiameters",
        "ParticlesPerParcel",
        "NumElements",
        "CheckSum2",
        "CheckSum2",
        "CheckSum1",
        "CheckSum1",
        "CheckSum1",
        "NewDiameterList",
        "NewParcelList",
        "NewCount",
        "CombinedData",
        "CheckSum2",
        "CheckSum2",
        "NewDiameterList",
        "NewParcelList",
        "NewCount",
        "CombinedData"
    ],
    "comments": [
        "",
        "The purpose of this module is to define a class definition for a data structure that",
        "contains information about the particles that are present in a particular spatial bin.",
        "The purpose of the class is to simplify the handling and combination of these data",
        "sets over time.",
        "",
        "Author: Christopher Neal",
        "",
        "Date: 02-23-2016",
        "Updated: 02-23-2016",
        "",
        "",
        "User wants to add a single piece of information about a parcel found in a bin",
        "Only sort if there are actually any elements to sort",
        "CheckSum for error checking",
        "Combine the two object data lists into a 2D list of dimension NumElements x 2",
        "CheckSum for error checking",
        "Sorts the particlesPerParcel list in order of low to high - good for summing up values",
        "Only sort if there are actually any elements to sort",
        "CheckSum for error checking",
        "Combine the two object data lists into a 2D list of dimension NumElements x 2",
        "print(\"Pre-sort list\")",
        "for i in range(self.NumElements):",
        "print(\"%s\\t%s\"%(alist[i][0],alist[i][1]))",
        "Sorts from low to high based on the ParticlesPerParcel list",
        "print(\"Post-sort list\")",
        "for i in range(self.NumElements):",
        "print(\"%s\\t%s\"%(alist[i][0],alist[i][1]))",
        "Re-distribute the data from the 2D sorted list back into the individual list data sets",
        "CheckSum for error checking",
        "combine repeated entries of diameters in the list to shorten the list length",
        "Compress data only if there is data present in the dataset",
        "CheckSum for error checking",
        "Timing",
        "Index for new list",
        "For counting number of entries after the merge",
        "At end of data set, there is nothing after this, so no more repeats. Add to data set.",
        "Increment counters before exiting else statement",
        "Push index of array to position after the section that had repeated entries",
        "CheckSum for error checking",
        "The user wants to re-sort the data into bins of their choosing. The diameter data must be sorted into the bins given. No checks to make sure data will",
        "sort nicely into the user defined bins.",
        "Input is a 2D list, 2xN with the first and second rows holding the left and right coordinates of the edges of a bin, respectively.",
        "if(self.NumElements>0):",
        "CheckSum for error checking",
        "Create new lists for holding data",
        "Get number of columns",
        "Store the center values of the bins",
        "Initialize the parcel counts in the new bins to be zero",
        "Loop throught all entries in the local data set and sort into the new bins",
        "Find out which bin the ith diameter belongs in",
        "Flag for marking if the particular value falls into one of the provided bins",
        "print(\"L: %10.6E \\t R: %10.6E \\t %s \\t %s\\n\"%(float(UserDiameterBins[0][j]),float(UserDiameterBins[1][j]),self.ParticleDiameters[i],NewParcelCount[j]))",
        "Value has been placed into the new bin structure",
        "A value in the original data set was not able to be placed into the bins",
        "CheckSum for error checking",
        "User wants to combine the data contained in the two instances of the class into a new class",
        "Only add the new data if it actually exists",
        "CheckSum for error checking",
        "Create object to hold the combined data and initialize to the second argument",
        "print(\"Number of elements in self:%d\"%self.NumElements)",
        "print(\"Number of elements in other:%d\"%other.NumElements)",
        "CombinedData = ParticleBinData(self.ParticleDiameters,self.ParticlesPerParcel,self.NumElements)",
        "print(self.ParticlesPerParcel)",
        "print(other.ParticlesPerParcel)",
        "The method now needs to add entries to the ParticleDiameters list if they are NOT already in the list. If",
        "they are already in the list, then just add the values of the ParticlesPerParcel together",
        "Put the two data sets together by concatenating the internal lists",
        "Debuggin output",
        "print(\"Total Input Elements: %d\"%(self.NumElements + other.NumElements))",
        "print(\"Number of output elements: %d\"%CombinedData.NumElements)",
        "CheckSum for error checking"
    ],
    "docstrings": [
        "\"\"\"A class to combine methods to adding to and combining data sets that contain information about particles in a bin\"\"\""
    ],
    "functions": [
        "add_data",
        "print_data",
        "check_data_length",
        "sort_diameters",
        "sort_particlesPerParcel",
        "compress_data",
        "custom_bins",
        "__add__"
    ],
    "classes": [
        "ParticleBinData"
    ]
}