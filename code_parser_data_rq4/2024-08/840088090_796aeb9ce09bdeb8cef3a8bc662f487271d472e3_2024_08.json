{
    "identifiers": [
        "got",
        "WebSocket",
        "Intents",
        "common",
        "logger",
        "LoggerLevel",
        "AccountCfgType",
        "IdType",
        "SeqType",
        "FileType",
        "PathType",
        "V2ApiType",
        "EventType",
        "MessageType",
        "UploadMediaOptions",
        "SendMessageOptions",
        "UploadMediaResponse",
        "SubEvent",
        "Opcode",
        "key",
        "config",
        "config",
        "level",
        "args",
        "logger",
        "level",
        "args",
        "url",
        "options",
        "got",
        "url",
        "options",
        "error",
        "logger",
        "error",
        "isRefresh",
        "isRefresh",
        "got",
        "url",
        "access_token",
        "data",
        "expires_in",
        "setTimeout",
        "time",
        "data",
        "isAuth",
        "isAuth",
        "Opcode",
        "data",
        "Intents",
        "intents",
        "Opcode",
        "data",
        "got",
        "url",
        "data",
        "isAuth",
        "WebSocket",
        "isAuth",
        "data",
        "data",
        "payload",
        "payload",
        "data",
        "data",
        "data",
        "data",
        "Opcode",
        "data",
        "Opcode",
        "data",
        "Opcode",
        "data",
        "Opcode",
        "data",
        "Opcode",
        "data",
        "Opcode",
        "data",
        "data",
        "Opcode",
        "data",
        "Opcode",
        "data",
        "data",
        "data",
        "EventType",
        "data",
        "data",
        "setInterval",
        "data",
        "EventType",
        "data",
        "EventType",
        "data",
        "EventType",
        "data",
        "EventType",
        "data",
        "data",
        "openid",
        "options",
        "openid",
        "V2ApiType",
        "url",
        "options",
        "result",
        "content",
        "id",
        "seq",
        "MessageType",
        "id",
        "id",
        "options",
        "key",
        "value",
        "options",
        "SeqType",
        "seq",
        "options",
        "openid",
        "file",
        "file_type",
        "file",
        "file_type",
        "openid",
        "V2ApiType",
        "got",
        "url",
        "options",
        "openid",
        "apiType",
        "openid",
        "apiType",
        "id",
        "id",
        "IdType",
        "id",
        "IdType",
        "id",
        "file_info",
        "id",
        "seq",
        "MessageType",
        "id",
        "id",
        "options",
        "key",
        "value",
        "options",
        "SeqType",
        "seq",
        "options",
        "custom_template_id",
        "keyboard",
        "id",
        "seq",
        "MessageType",
        "id",
        "id",
        "options",
        "key",
        "value",
        "options",
        "SeqType",
        "seq",
        "options",
        "content",
        "keyboard",
        "id",
        "seq",
        "MessageType",
        "id",
        "id",
        "options",
        "key",
        "value",
        "options",
        "SeqType",
        "seq",
        "options",
        "file",
        "file_type",
        "key",
        "file",
        "file",
        "common",
        "file",
        "file",
        "file"
    ],
    "literals": [
        "'got'",
        "'ws'",
        "'./intents'",
        "'node-karin'",
        "'@/utils'",
        "'@/types'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "''",
        "''",
        "''",
        "''",
        "string",
        "[got] 请求错误: ${JSON.stringify(error.response.body)}",
        "'debug'",
        "'凭证即将过期，开始刷新凭证'",
        "'Content-Type'",
        "'application/json'",
        "string",
        "string",
        "QQBot ${this.#access_token}",
        "'X-Union-Appid'",
        "BOT_${this.appId}",
        "'debug'",
        "凭证获取成功: ${JSON.stringify(data)}",
        "QQBot ${this.#access_token}",
        "'GROUP_AT_MESSAGE_CREATE'",
        "'intents 无效，请检查传入的事件名称是否正确'",
        "QQBot ${this.#access_token}",
        "'Linux'",
        "'karin-plugin-adapter-qqbot'",
        "'karin'",
        "${this.host}/gateway",
        "string",
        "'open'",
        "'message'",
        "string",
        "'close'",
        "'error'",
        "'ws连接关闭，正在重连'",
        "string",
        "'debug'",
        "收到事件推送: ${JSON.stringify(data, null, 2)}",
        "'debug'",
        "'事件推送'",
        "'debug'",
        "'心跳'",
        "'info'",
        "'鉴权成功'",
        "'info'",
        "'客户端恢复连接'",
        "'info'",
        "'服务端要求重新连接'",
        "'error'",
        "'参数错误'",
        "'debug'",
        "'心跳生命周期更新'",
        "'debug'",
        "'心跳回包'",
        "'debug'",
        "'回包'",
        "'start'",
        "Unhandled event: ${JSON.stringify(data)}",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "${this.host}/v2/${type}/${openid}/${apiType}",
        "string",
        "':'",
        "string",
        "string",
        "''",
        "string",
        "'keyboard'",
        "string",
        "''",
        "string",
        "'keyboard'",
        "string",
        "''",
        "string",
        "string",
        "string",
        "'http'"
    ],
    "variables": [
        "url",
        "data",
        "data",
        "time",
        "data",
        "intents",
        "data",
        "url",
        "data",
        "data",
        "url",
        "result",
        "options",
        "options",
        "url",
        "options",
        "options",
        "options"
    ],
    "comments": [
        "消息唯一ID",
        "发送时间",
        "后续处理 重启后重新建立历史会话",
        "刷新凭证",
        "重新鉴权",
        "断连后不需要重新ws鉴权 需要恢复登录态 Session",
        "建立连接成功之后 需要鉴权",
        "监听事件",
        "监听ws关闭",
        "回收监听器",
        "在指定时间进行回包",
        "断开已有ws",
        "当 identify 或 resume 的时候，如果参数有错，服务端会返回该消息",
        "更新生命周期 对声明周期减少3秒 防止过时",
        "仅用于 http 回调模式的回包，代表机器人收到了平台推送的数据",
        "发送第一次心跳",
        "更新心跳唯一值",
        "记录session_id 用于重新连接",
        "心跳",
        "case 'GUILD_CREATE':",
        "case 'GUILD_UPDATE':",
        "case 'GUILD_DELETE':",
        "case 'CHANNEL_CREATE':",
        "case 'CHANNEL_UPDATE':",
        "case 'CHANNEL_DELETE':",
        "case 'GUILD_MEMBER_ADD':",
        "case 'GUILD_MEMBER_UPDATE':",
        "case 'GUILD_MEMBER_REMOVE':",
        "case 'MESSAGE_CREATE':",
        "case 'MESSAGE_DELETE':",
        "case 'MESSAGE_REACTION_ADD':",
        "case 'MESSAGE_REACTION_REMOVE':",
        "case 'DIRECT_MESSAGE_CREATE':",
        "case 'DIRECT_MESSAGE_DELETE':",
        "case 'FRIEND_ADD':",
        "case 'FRIEND_DEL':",
        "case 'C2C_MSG_REJECT':",
        "case 'C2C_MSG_RECEIVE':",
        "case 'GROUP_ADD_ROBOT':",
        "case 'GROUP_DEL_ROBOT':",
        "case 'GROUP_MSG_REJECT':",
        "case 'GROUP_MSG_RECEIVE':",
        "case 'INTERACTION_CREATE':",
        "case 'MESSAGE_AUDIT_PASS':",
        "case 'MESSAGE_AUDIT_REJECT':",
        "case 'FORUM_THREAD_CREATE':",
        "case 'FORUM_THREAD_UPDATE':",
        "case 'FORUM_THREAD_DELETE':",
        "case 'FORUM_POST_CREATE':",
        "case 'FORUM_POST_DELETE':",
        "case 'FORUM_REPLY_CREATE':",
        "case 'FORUM_REPLY_DELETE':",
        "case 'FORUM_PUBLISH_AUDIT_RESULT':",
        "case 'AUDIO_START':",
        "case 'AUDIO_FINISH':",
        "case 'AUDIO_ON_MIC':",
        "case 'AUDIO_OFF_MIC':",
        "case 'AT_MESSAGE_CREATE':",
        "case 'PUBLIC_MESSAGE_DELETE':",
        "case 'RESUMED:  {\"op\":0,\"s\":53,\"t\":\"RESUMED\",\"d\":\"\"} 在客户端恢复连接时收到",
        "id存在",
        "id存在",
        "id存在",
        "id存在",
        "非http转base64",
        "发base64，无前缀",
        "http"
    ],
    "docstrings": [
        "* {key: xxx, values: xxx}，模版内变量与填充值的kv映射",
        "* 开发者的appId",
        "* Bot的昵称",
        "* 调用凭证",
        "* wss地址",
        "* 开发者的Secret 仅在内部使用 防止泄露",
        "* wss连接",
        "* 心跳内容",
        "* 心跳生命周期 单位：毫秒",
        "* 请求头 用于鉴权",
        "* 基本请求接口",
        "* post请求\n   * @param url 请求地址\n   * @param options 请求参数",
        "* 获取调用凭证\n   * @param clientSecret 开发者的Secret\n   * @param isRefresh 是否是刷新凭证",
        "* 凭证有效时间，单位：秒 需要在倒计时50秒内刷新凭证",
        "* 调用凭证",
        "* wss鉴权\n   * @param isAuth 是否鉴权",
        "* 获取wss地址",
        "* 创建wss连接",
        "* 事件处理",
        "* 发送消息\n   * @param openid 用户、群openid\n   * @param type 请求路径类型\n   * @param options 请求参数",
        "* 构建发送文本消息请求参数",
        "* 上传富媒体文件\n   * @param openid 用户、群openid\n   * @param type 请求类型\n   * @param file 文件内容 http、base64、file://\n   * @param file_type 文件类型",
        "* 构建v2接口请求地址\n   * @param openid 用户、群openid\n   * @param type 请求类型\n   * @param apiType v2接口类型",
        "* 传入一个msg_id或者event_id 返回其对应的key和value\n   * @param id 消息id或者事件id",
        "* 构建发送富媒体请求参数\n   * 富媒体消息只能单独发送 并且必须进行上传\n   * @param file_info 富媒体接口返回的file_info\n   * @param id 消息id或者事件id",
        "* 构建发送Markdown模板请求参数\n   * @param custom_template_id 模板id\n   * @param params 模板参数\n   * @param id 消息id或者事件id\n   * @param seq 消息序号",
        "* 构建发送原生Markdown请求参数\n   * @param content markdown文本\n   * @param id 消息id或者事件id\n   * @param seq 消息序号",
        "* 构建上传富媒体请求参数\n   * @param file 文件内容 http、base64、file://\n   * @param file_type 文件类型"
    ],
    "functions": [
        "logger",
        "post",
        "getAccessToken",
        "wssAuth",
        "getWssUrl",
        "createWss",
        "payload",
        "intents",
        "sendMessage",
        "buildText",
        "uploadMedia",
        "buildUrl",
        "buildId",
        "buildMedia",
        "buildTplMarkdown",
        "buildRawMarkdown",
        "buildUploadMedia"
    ],
    "classes": [
        "QQBotApi"
    ]
}