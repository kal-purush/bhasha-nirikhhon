{
    "identifiers": [
        "com",
        "github",
        "xuse",
        "querydsl",
        "sql",
        "dbmeta",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "Comparator",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "stream",
        "Collectors",
        "com",
        "github",
        "xuse",
        "querydsl",
        "sql",
        "ddl",
        "ConnectionWrapper",
        "com",
        "github",
        "xuse",
        "querydsl",
        "sql",
        "ddl",
        "ConstraintType",
        "com",
        "github",
        "xuse",
        "querydsl",
        "sql",
        "ddl",
        "DDLExpressions",
        "com",
        "github",
        "xuse",
        "querydsl",
        "sql",
        "ddl",
        "DDLOps",
        "PartitionMethod",
        "com",
        "github",
        "xuse",
        "querydsl",
        "util",
        "StringUtils",
        "com",
        "github",
        "xuse",
        "querydsl",
        "util",
        "collection",
        "CollectionUtils",
        "com",
        "querydsl",
        "sql",
        "SQLBindings",
        "HAS_CHECK_CONSTRAINTS",
        "FILTER_NOT_NULL_CHECK",
        "REMOVE_BUCKET_FOR_CHECK",
        "DEFAULT",
        "features",
        "features",
        "features",
        "features",
        "Override",
        "catalog",
        "schema",
        "tableName",
        "conn",
        "detail",
        "schema",
        "mergeSchema",
        "catalog",
        "schema",
        "StringUtils",
        "isEmpty",
        "schema",
        "schema",
        "sqlStr",
        "hasCheck",
        "has",
        "HAS_CHECK_CONSTRAINTS",
        "filterNotNull",
        "has",
        "FILTER_NOT_NULL_CHECK",
        "hasCheck",
        "sqlStr",
        "sqlStr",
        "sql",
        "sqlStr",
        "Arrays",
        "asList",
        "tableName",
        "schema",
        "constraints",
        "conn",
        "query",
        "sql",
        "rs",
        "c",
        "c",
        "setName",
        "rs",
        "getString",
        "c",
        "setTableName",
        "rs",
        "getString",
        "c",
        "setTableSchema",
        "rs",
        "getString",
        "ConstraintType",
        "valueOf",
        "rs",
        "getString",
        "replace",
        "c",
        "setConstraintType",
        "hasCheck",
        "check",
        "rs",
        "getString",
        "check",
        "filterNotNull",
        "check",
        "endsWith",
        "check",
        "removeBucket",
        "check",
        "has",
        "REMOVE_BUCKET_FOR_CHECK",
        "check",
        "removeBucket",
        "check",
        "c",
        "setCheckClause",
        "DDLExpressions",
        "wrapCheckExpression",
        "check",
        "c",
        "detail",
        "constraints",
        "sql",
        "Arrays",
        "asList",
        "tableName",
        "schema",
        "keyColumns",
        "conn",
        "query",
        "sql",
        "rs",
        "c",
        "c",
        "setKeyName",
        "rs",
        "getString",
        "c",
        "setTableCat",
        "rs",
        "getString",
        "c",
        "setTableSchema",
        "rs",
        "getString",
        "c",
        "setTableName",
        "rs",
        "getString",
        "c",
        "setColumnName",
        "rs",
        "getString",
        "c",
        "setSeq",
        "rs",
        "getInt",
        "c",
        "CollectionUtils",
        "bucket",
        "keyColumns",
        "KeyColumn",
        "getKeyName",
        "e",
        "e",
        "c",
        "constraints",
        "name",
        "c",
        "getName",
        "columns",
        "get",
        "name",
        "columns",
        "columns",
        "sort",
        "Comparator",
        "comparingInt",
        "a",
        "a",
        "seq",
        "c",
        "setColumnNames",
        "columns",
        "stream",
        "KeyColumn",
        "getColumnName",
        "collect",
        "Collectors",
        "toList",
        "constraints",
        "catalog",
        "schema",
        "StringUtils",
        "isNotEmpty",
        "catalog",
        "catalog",
        "schema",
        "check",
        "StringUtils",
        "isEmpty",
        "check",
        "check",
        "f",
        "check",
        "charAt",
        "l",
        "check",
        "charAt",
        "check",
        "length",
        "f",
        "l",
        "check",
        "substring",
        "check",
        "length",
        "check",
        "check",
        "features",
        "check",
        "check",
        "check",
        "features",
        "check",
        "check",
        "check",
        "features",
        "check",
        "Override",
        "catalog",
        "schema",
        "tableName",
        "conn",
        "schema",
        "mergeSchema",
        "catalog",
        "schema",
        "StringUtils",
        "isEmpty",
        "schema",
        "schema",
        "sql",
        "Arrays",
        "asList",
        "tableName",
        "schema",
        "partitions",
        "conn",
        "query",
        "sql",
        "rs",
        "c",
        "c",
        "setTableCat",
        "rs",
        "getString",
        "c",
        "setTableSchema",
        "rs",
        "getString",
        "c",
        "setTableName",
        "rs",
        "getString",
        "c",
        "setName",
        "rs",
        "getString",
        "c",
        "setMethod",
        "PartitionMethod",
        "parse",
        "rs",
        "getString",
        "c",
        "setCreateTime",
        "rs",
        "getTimestamp",
        "c",
        "setPartitionExpression",
        "rs",
        "getString",
        "c",
        "setPartitionOrdinal",
        "rs",
        "getInt",
        "c",
        "setPartitionDescription",
        "rs",
        "getString",
        "c",
        "partitions"
    ],
    "literals": [
        "\"%\"",
        "\"SELECT a.*,b.check_clause FROM information_schema.table_constraints a \"",
        "\"left join information_schema.check_constraints b on a.constraint_catalog =b.constraint_catalog and a.constraint_schema =b.constraint_schema and a.constraint_name =b.constraint_name \"",
        "\"WHERE table_name LIKE ? AND table_schema LIKE ?\"",
        "\"SELECT * FROM information_schema.table_constraints WHERE table_name=? AND table_schema LIKE ?\"",
        "\"CONSTRAINT_NAME\"",
        "\"TABLE_NAME\"",
        "\"TABLE_SCHEMA\"",
        "\"CONSTRAINT_TYPE\"",
        "\"check_clause\"",
        "\"IS NOT NULL\"",
        "\"SELECT * FROM information_schema.key_column_usage WHERE table_name=? AND constraint_schema LIKE ?\"",
        "\"CONSTRAINT_NAME\"",
        "\"TABLE_CATALOG\"",
        "\"TABLE_SCHEMA\"",
        "\"TABLE_NAME\"",
        "\"COLUMN_NAME\"",
        "\"ORDINAL_POSITION\"",
        "\"%\"",
        "\"SELECT * FROM information_schema.partitions WHERE table_name=? AND TABLE_SCHEMA LIKE ? ORDER BY PARTITION_ORDINAL_POSITION ASC\"",
        "\"TABLE_CATALOG\"",
        "\"TABLE_SCHEMA\"",
        "\"TABLE_NAME\"",
        "\"PARTITION_NAME\"",
        "\"PARTITION_METHOD\"",
        "\"CREATE_TIME\"",
        "\"PARTITION_EXPRESSION\"",
        "\"PARTITION_ORDINAL_POSITION\"",
        "\"PARTITION_DESCRIPTION\""
    ],
    "variables": [
        "features",
        "sqlStr"
    ],
    "comments": [
        "只会得到UNIQUE，普通的KEY不会在这个表返回（纯索引）",
        "尝试获取字段填入"
    ],
    "docstrings": [
        "* MySQL和PG等逐步遵循infomation_schema的规范视图，提供表结构数据查询。此类为该种实现\n *\n * 常用SQL语句包括 -- 寻找合适的系统视图 select * from information_schema.\"tables\" where\n * table_schema ='information_schema' and table_name like '%column%'\n * \n * -- 这个仅列出约束的字段 select * from information_schema.\"key_column_usage\" where\n * table_schema ='public' and table_name like 'aaa'\n * \n * -- 这个会列出约束(含check）中用到的字段，关注check表达式即可。 select * from\n * information_schema.\"constraint_column_usage\" where table_schema ='public' and\n * table_name like 'aaa'\n * \n * -- 列出约束 SELECT a.*,b.check_clause FROM information_schema.table_constraints a\n * left join information_schema.check_constraints b on a.constraint_catalog\n * =b.constraint_catalog and a.constraint_schema =b.constraint_schema and\n * a.constraint_name =b.constraint_name WHERE table_name='aaa' AND table_schema\n * = 'public'\n * \n * @author Joey\n *"
    ],
    "functions": [
        "InfomationSchemaReader",
        "getConstraints",
        "mergeSchema",
        "removeBucket",
        "has",
        "hasAll",
        "hasAny",
        "getPartitions"
    ],
    "classes": [
        "InfomationSchemaReader"
    ]
}