{
    "identifiers": [
        "dev",
        "forkingaround",
        "zootopia",
        "controllers",
        "dev",
        "forkingaround",
        "zootopia",
        "models",
        "Type",
        "dev",
        "forkingaround",
        "zootopia",
        "repositories",
        "TypeRepository",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeEach",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "mockito",
        "InjectMocks",
        "org",
        "mockito",
        "Mock",
        "org",
        "mockito",
        "MockitoAnnotations",
        "org",
        "springframework",
        "http",
        "HttpStatus",
        "org",
        "springframework",
        "http",
        "ResponseEntity",
        "java",
        "util",
        "java",
        "util",
        "Optional",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "org",
        "mockito",
        "Mockito",
        "Mock",
        "typeRepository",
        "InjectMocks",
        "typeController",
        "BeforeEach",
        "MockitoAnnotations",
        "openMocks",
        "Test",
        "type1",
        "Type",
        "builder",
        "id",
        "name",
        "build",
        "type2",
        "Type",
        "builder",
        "id",
        "name",
        "build",
        "types",
        "of",
        "type1",
        "type2",
        "when",
        "typeRepository",
        "findAll",
        "thenReturn",
        "types",
        "response",
        "typeController",
        "getAllTypes",
        "assertEquals",
        "HttpStatus",
        "OK",
        "response",
        "getStatusCode",
        "assertEquals",
        "types",
        "response",
        "getBody",
        "verify",
        "typeRepository",
        "times",
        "findAll",
        "Test",
        "Type",
        "builder",
        "id",
        "name",
        "build",
        "when",
        "typeRepository",
        "findById",
        "thenReturn",
        "Optional",
        "of",
        "response",
        "typeController",
        "getTypeById",
        "assertEquals",
        "HttpStatus",
        "OK",
        "response",
        "getStatusCode",
        "assertEquals",
        "response",
        "getBody",
        "verify",
        "typeRepository",
        "times",
        "findById",
        "Test",
        "when",
        "typeRepository",
        "findById",
        "thenReturn",
        "Optional",
        "empty",
        "exception",
        "assertThrows",
        "typeController",
        "getTypeById",
        "assertEquals",
        "exception",
        "getMessage",
        "verify",
        "typeRepository",
        "times",
        "findById",
        "Test",
        "newType",
        "Type",
        "builder",
        "name",
        "build",
        "createdType",
        "Type",
        "builder",
        "id",
        "name",
        "build",
        "when",
        "typeRepository",
        "save",
        "newType",
        "thenReturn",
        "createdType",
        "response",
        "typeController",
        "createType",
        "newType",
        "assertEquals",
        "HttpStatus",
        "CREATED",
        "response",
        "getStatusCode",
        "assertEquals",
        "createdType",
        "response",
        "getBody",
        "verify",
        "typeRepository",
        "times",
        "save",
        "newType",
        "Test",
        "updatedType",
        "Type",
        "builder",
        "id",
        "name",
        "build",
        "when",
        "typeRepository",
        "existsById",
        "thenReturn",
        "when",
        "typeRepository",
        "save",
        "updatedType",
        "thenReturn",
        "updatedType",
        "response",
        "typeController",
        "updateType",
        "updatedType",
        "assertEquals",
        "HttpStatus",
        "OK",
        "response",
        "getStatusCode",
        "assertEquals",
        "updatedType",
        "response",
        "getBody",
        "verify",
        "typeRepository",
        "times",
        "existsById",
        "verify",
        "typeRepository",
        "times",
        "save",
        "updatedType",
        "Test",
        "updatedType",
        "Type",
        "builder",
        "id",
        "name",
        "build",
        "when",
        "typeRepository",
        "existsById",
        "thenReturn",
        "exception",
        "assertThrows",
        "typeController",
        "updateType",
        "updatedType",
        "assertEquals",
        "exception",
        "getMessage",
        "verify",
        "typeRepository",
        "times",
        "existsById",
        "verify",
        "typeRepository",
        "times",
        "save",
        "updatedType",
        "Test",
        "when",
        "typeRepository",
        "existsById",
        "thenReturn",
        "response",
        "typeController",
        "deleteType",
        "assertEquals",
        "HttpStatus",
        "NO_CONTENT",
        "response",
        "getStatusCode",
        "verify",
        "typeRepository",
        "times",
        "existsById",
        "verify",
        "typeRepository",
        "times",
        "deleteById",
        "Test",
        "when",
        "typeRepository",
        "existsById",
        "thenReturn",
        "exception",
        "assertThrows",
        "typeController",
        "deleteType",
        "assertEquals",
        "exception",
        "getMessage",
        "verify",
        "typeRepository",
        "times",
        "existsById",
        "verify",
        "typeRepository",
        "times",
        "deleteById"
    ],
    "literals": [
        "\"Type1\"",
        "\"Type2\"",
        "\"Type1\"",
        "\"Type not found with ID 1\"",
        "\"NewType\"",
        "\"NewType\"",
        "\"UpdatedType\"",
        "\"UpdatedType\"",
        "\"Type not found with ID 1\"",
        "\"Type not found with ID 1\""
    ],
    "variables": [
        "typeRepository",
        "typeController"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "setUp",
        "testGetAllTypes",
        "testGetTypeById_Found",
        "testGetTypeById_NotFound",
        "testCreateType",
        "testUpdateType_Found",
        "testUpdateType_NotFound",
        "testDeleteType_Found",
        "testDeleteType_NotFound"
    ],
    "classes": [
        "TypeControllerTest"
    ]
}