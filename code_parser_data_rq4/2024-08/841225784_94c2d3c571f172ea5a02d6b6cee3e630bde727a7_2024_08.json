{
    "identifiers": [
        "neeh",
        "java",
        "util",
        "Arrays",
        "NEEHvalues",
        "eachNEEH",
        "aboveNEEH",
        "NEEHvalues",
        "NEEHvalues",
        "NEEHvalues",
        "eachNEEH",
        "aboveNEEH",
        "NEEHvalues",
        "eachNEEH",
        "aboveNEEH",
        "NEEHvalues",
        "NEEHvalues",
        "eachNEEH",
        "eachNEEH",
        "aboveNEEH",
        "aboveNEEH",
        "NEEHvalues",
        "eachNEEH",
        "aboveNEEH",
        "NEEHvalues",
        "NEEHvalues",
        "NEEHvalues",
        "eachNEEH",
        "eachNEEH",
        "i",
        "i",
        "NEEHvalues",
        "length",
        "i",
        "value",
        "NEEHvalues",
        "i",
        "value",
        "value",
        "eachNEEH",
        "value",
        "eachNEEH",
        "aboveNEEH",
        "count",
        "value",
        "NEEHvalues",
        "value",
        "aboveNEEH",
        "count",
        "count",
        "Override",
        "Arrays",
        "toString",
        "NEEHvalues",
        "Arrays",
        "toString",
        "eachNEEH",
        "aboveNEEH",
        "otherObj",
        "Arrays",
        "equals",
        "NEEHvalues",
        "otherObj",
        "NEEHvalues",
        "Arrays",
        "equals",
        "eachNEEH",
        "otherObj",
        "eachNEEH",
        "eachNEEH",
        "setEachNEEH",
        "i",
        "i",
        "eachNEEH",
        "length",
        "i",
        "i",
        "eachNEEH",
        "i",
        "i",
        "i",
        "eachNEEH",
        "length",
        "eachNEEH",
        "setEachNEEH",
        "i",
        "i",
        "eachNEEH",
        "length",
        "i",
        "i",
        "j",
        "j",
        "eachNEEH",
        "i",
        "j",
        "eachNEEH",
        "setEachNEEH",
        "maxNum",
        "i",
        "i",
        "eachNEEH",
        "length",
        "i",
        "eachNEEH",
        "i",
        "eachNEEH",
        "maxNum",
        "maxNum",
        "i",
        "maxNum"
    ],
    "literals": [
        "\"NEEH:\"",
        "\"\\nEachNEEH: \"",
        "\"\\nabove\"",
        "\"NEEH \"",
        "\" is \"",
        "\"           \"",
        "\"NEEH Value: Number of Athetes\"",
        "\"         \"",
        "\": \"",
        "\"*\""
    ],
    "variables": [
        "NEEHvalues",
        "eachNEEH",
        "aboveNEEH"
    ],
    "comments": [
        "instance variables",
        "methods:",
        "default constructor",
        "this is for a default value",
        "parameterized constructor to create instances of objects with user defined",
        "states",
        "mutators to control changes to the private variables:",
        "this mutator is for the number of effective hours possible in array",
        "this mutator is for displaying the number of athletes with the same NEEH",
        "like mentionned above NEEH values are between 3 and 11",
        "the current index i stored in the variable value",
        "mutator to display for the number of athletes above the NEEH",
        "to count the values in NEEHvalues",
        "to got through each element value in the array NEEHvalues",
        "increment by 1",
        "toString to display in one string all variables",
        "equals for comparing the different format objects",
        "a method to display all the instance variables in column format",
        "if i is not the last element of the array and i is a multiple of 3 to create column",
        "to add space",
        "a method to display all the instance variables in histogram format",
        "a mehod to display the NEEH recorded by the maximum number of athletes",
        "Adding 3 to get the actual NEEH value"
    ],
    "docstrings": [
        "* Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license\n * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template",
        "This program outputs the number of effective exercises per hour (NEEH) in a day\nof 15 athletes. The number of hours is between integers 3 and 11 inclusive.\nIt generates also statistical information in two different formats, \ncolumn format and histogram, based on the userâ€™s choice.\nThe program can also display both formats together. \nNear each NEEH value, there is a number of athletes from the total who have\nthe same NEEH value in the output. There is a descending display \nof the greatest number of athletes to the least number of athletes from the total \nwho have the same NEEH value. Also, the program has the NEEH recorded by \nthe maximum number of athletes.",
        "accessors (getters) this is to get accessed of the private variables for\nother classes and return its values",
        "f i is inferior to the length of the array of NEEH i is initially 0\n  but increments by 1 after going through each iteration of the array"
    ],
    "functions": [
        "NEEH",
        "NEEH",
        "getNEEHValues",
        "getEachNEEH",
        "getAboveNEEH",
        "setNEEHValues",
        "setEachNEEH",
        "setAboveNEEH",
        "toString",
        "equals",
        "DisplayColumnformat",
        "DisplayHistogramformat",
        "NEEHbyMaxAthletes"
    ],
    "classes": [
        "NEEH"
    ]
}