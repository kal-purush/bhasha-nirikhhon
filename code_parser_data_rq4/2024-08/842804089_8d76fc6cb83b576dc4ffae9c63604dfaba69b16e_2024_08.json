{
    "identifiers": [
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "skimage",
        "morphology",
        "closing",
        "skimage",
        "morphology",
        "cellpose",
        "models",
        "PIL",
        "Image",
        "scipy",
        "ndimage",
        "skimage",
        "segmentation",
        "clear_border",
        "copy",
        "matplotlib",
        "colors",
        "ListedColormap",
        "combined_layer_full",
        "len",
        "np",
        "unique",
        "combined_layer_full",
        "plt",
        "cm",
        "tab20",
        "np",
        "linspace",
        "num_labels",
        "ListedColormap",
        "colors_rgba",
        "plt",
        "figure",
        "plt",
        "imshow",
        "combined_layer_full",
        "cmap",
        "plt",
        "imshow",
        "combined_layer_full",
        "cmap",
        "cmap_with_transparent_bg",
        "alpha",
        "interpolation",
        "plt",
        "grid",
        "plt",
        "xticks",
        "plt",
        "yticks",
        "layers",
        "isinstance",
        "layers",
        "np",
        "array",
        "layers",
        "len",
        "layers",
        "shape",
        "layers",
        "layers",
        "layer",
        "layers",
        "np",
        "unique",
        "layer",
        "combined_layer_full",
        "np",
        "max",
        "combined_layer_full",
        "label_id",
        "np",
        "unique",
        "layer",
        "label_id",
        "label_id_to_remove",
        "layer",
        "label_id",
        "layer",
        "layer",
        "label_id",
        "last_label",
        "combined_layer_full",
        "layer",
        "combined_layer_full",
        "img",
        "keep_continuous",
        "np",
        "zeros",
        "img",
        "shape",
        "np",
        "unique",
        "img",
        "cur_lab",
        "i",
        "len",
        "all_unique_labels",
        "all_unique_labels",
        "i",
        "scipy",
        "ndimage",
        "label",
        "img",
        "i",
        "astype",
        "np",
        "uint16",
        "structure",
        "np",
        "ones",
        "num_labels",
        "np",
        "unique",
        "labels_out",
        "return_counts",
        "lab_list",
        "lab_list",
        "lab_count",
        "np",
        "argmax",
        "lab_count",
        "lab_list",
        "largest_ind",
        "keep_continuous",
        "res",
        "cur_lab",
        "labels_out",
        "lab",
        "astype",
        "np",
        "uint16",
        "res",
        "i",
        "labels_out",
        "lab",
        "astype",
        "np",
        "uint16",
        "res",
        "astype",
        "np",
        "uint16",
        "res",
        "np",
        "array",
        "Image",
        "open",
        "img_file_path",
        "channel_greyscale",
        "channel_red",
        "channel_green",
        "channel_blue",
        "models",
        "CellposeModel",
        "pretrained_model",
        "model_file",
        "gpu",
        "models",
        "Cellpose",
        "model_type",
        "gpu",
        "img_to_seg",
        "amount_of_steps",
        "np",
        "linspace",
        "smallest",
        "largest",
        "total_steps",
        "dtype",
        "i",
        "even_dist_nums",
        "count",
        "total_steps",
        "flush",
        "count",
        "channels_to_segment",
        "model",
        "eval",
        "local_img",
        "diameter",
        "i",
        "channels",
        "flow_threshold",
        "non_pickyness",
        "layers",
        "append",
        "output",
        "channels_to_segment",
        "model",
        "eval",
        "local_img",
        "diameter",
        "i",
        "channels",
        "flow_threshold",
        "non_pickyness",
        "layers",
        "append",
        "output",
        "channels_to_segment",
        "model",
        "eval",
        "local_img",
        "diameter",
        "i",
        "channels",
        "flow_threshold",
        "non_pickyness",
        "layers",
        "append",
        "output",
        "channels_to_segment",
        "model",
        "eval",
        "local_img",
        "diameter",
        "i",
        "channels",
        "flow_threshold",
        "non_pickyness",
        "layers",
        "append",
        "output",
        "flush",
        "np",
        "array",
        "layers",
        "np",
        "save",
        "layers",
        "plottings_structures",
        "np",
        "sum",
        "layers",
        "axis",
        "plt",
        "title",
        "plt",
        "show",
        "merge_labels",
        "layers",
        "plottings_structures",
        "combined_layer_full",
        "plt",
        "title",
        "plt",
        "show",
        "closing",
        "combined_layer_full",
        "delete_border_labels",
        "clear_border",
        "combined_layer_full",
        "plt",
        "imshow",
        "local_img",
        "cmap",
        "plt",
        "imshow",
        "combined_layer_full",
        "alpha",
        "plt",
        "show",
        "plottings_structures",
        "combined_layer_full",
        "plt",
        "imshow",
        "local_img",
        "cmap",
        "plt",
        "show",
        "plt",
        "savefig",
        "format",
        "flush",
        "skimage",
        "morphology",
        "remove_small_objects",
        "combined_layer_full",
        "min_size",
        "min_size",
        "connectivity",
        "ccd_largest_part",
        "combined_layer_full",
        "keep_continuous",
        "plottings_structures",
        "combined_layer_full",
        "plt",
        "title",
        "plt",
        "show",
        "np",
        "save",
        "combined_layer_full"
    ],
    "literals": [
        "'gray'",
        "'nearest'",
        "'__main__'",
        "\"/Users/px/Downloads/SDU x KU - Droplet & foam quantification/Images/Light microscopy/Emulsion droplets (light microscopy)/BF-Droplet (1).tiff\"",
        "\"/Users/px/Downloads/SDU x KU - Droplet & foam quantification/Napari-plugin code for droplet quantification/S-Seg/S_seg/food_model_cyto_2_II\"",
        "'Greyscale'",
        "'Red'",
        "'Green'",
        "'Blue'",
        "\"Failed to load pretrained model, please place verify that the provided path is correct\"",
        "\"Using default cyto3 model instead\"",
        "'cyto3'",
        "f\"Running cellpose ({count}/{total_steps})\"",
        "'Greyscale'",
        "'Red'",
        "'Green'",
        "'Blue'",
        "\"Segmentation done\\n\"",
        "'layers_before_combine.npy'",
        "'combined_raw'",
        "'combined_remove_dups'",
        "\"Closing operation...\"",
        "\"Deleting border labels...\"",
        "'gray'",
        "'gray'",
        "'img_ontop.svg'",
        "'svg'",
        "\"\\n\\n\\n\"",
        "'combined_keep_largest'",
        "'combined_layer_full.npy'"
    ],
    "variables": [
        "num_labels",
        "colors_rgba",
        "colors_rgba",
        "cmap_with_transparent_bg",
        "layers",
        "layers",
        "combined_layer_full",
        "label_id_to_remove",
        "last_label",
        "layer",
        "res",
        "all_unique_labels",
        "labels_out",
        "num_labels",
        "lab",
        "lab_list",
        "lab_count",
        "lab_list",
        "lab_count",
        "largest_ind",
        "lab",
        "res",
        "img_file_path",
        "img_to_seg",
        "model_file",
        "smallest",
        "largest",
        "amount_of_steps",
        "non_pickyness",
        "channel_greyscale",
        "channel_red",
        "channel_green",
        "channel_blue",
        "channels_to_segment",
        "delete_border_labels",
        "model",
        "model",
        "local_img",
        "layers",
        "count",
        "total_steps",
        "even_dist_nums",
        "output",
        "output",
        "output",
        "output",
        "layers",
        "combined_layer_full",
        "combined_layer_full",
        "combined_layer_full",
        "min_size",
        "combined_layer_full",
        "combined_layer_full"
    ],
    "comments": [
        "from IPython.display import Markdown",
        "from google.colab import files",
        "Using Viridis colormap for better color differentiation",
        "Set alpha channel of the background color to 0 (transparent)",
        "Create a colormap with transparent background",
        "Plot the image",
        "Plot the overlay with different colors for each label and transparent background",
        "Note that plt.show() is not called inside the function, since it will often be plotted with others on top.",
        "Convert layers to a NumPy array if it is a list",
        "Ensure layers is a 3D array (number of layers, height, width)",
        "Remove the channel dimension if it exists",
        "Initialize combined_layer_full with the first layer",
        "Find label ids to remove from current layer",
        "Get last labels",
        "Remove labels from layer and reassign current labels",
        "Merge current layer into the combined_layer_full",
        "Press the green button in the gutter to run the script.",
        "@param {type:\"string\"}",
        "@param {type:\"string\"}",
        "@markdown ###Item size range to detect: (px):",
        "@param {type:\"number\"}",
        "@param {type:\"number\"}",
        "@markdown ###Segmentation steps:",
        "@param {type:\"number\"}",
        "@markdown ###Non-pickyness (flow threshold):",
        "@param {type:\"number\"}",
        "@markdown ###Color channels to segment:",
        "@param {type:\"boolean\"}",
        "@param {type:\"boolean\"}",
        "@param {type:\"boolean\"}",
        "@param {type:\"boolean\"}",
        "@markdown ###Delete border labels:",
        "@param {type:\"boolean\"}",
        "model = models.CellposeModel(model_type=\"cyto3\", gpu=True) for cyto3 or 2.",
        "this is unnecessary, but just kept here for further check",
        "to numpy array for fast process",
        "layers = np.load('layers_before_combine.npy')",
        "Closing operation",
        "Delete border",
        "each label should be a single connected component ###########################",
        "small cells are also a bit concerning ###########################",
        "import PIL.Image as Image",
        "",
        "im = Image.fromarray(np.moveaxis(np.array(layers), 0, -1))",
        "im.save('test.tif')",
        "",
        "im = Image.fromarray(layers[0])",
        "im.save('test0.tif')",
        "",
        "np.unique(layers[2])"
    ],
    "docstrings": [],
    "functions": [
        "plottings_structures",
        "merge_labels",
        "ccd_largest_part"
    ],
    "classes": []
}