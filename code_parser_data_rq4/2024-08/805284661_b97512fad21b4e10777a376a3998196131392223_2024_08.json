{
    "identifiers": [
        "typing",
        "Dict",
        "collections",
        "defaultdict",
        "dataclasses",
        "dataclass",
        "numpy",
        "np",
        "pandas",
        "pd",
        "moleculib",
        "protein",
        "datum",
        "ProteinDatum",
        "dataclass",
        "np",
        "ndarray",
        "ProteinDatum",
        "np",
        "ndarray",
        "ProteinDatum",
        "representation",
        "Representation",
        "ids",
        "append",
        "_new_pk",
        "pdb_ids",
        "append",
        "representation",
        "pdb_id",
        "levels",
        "append",
        "representation",
        "level",
        "level_idxs",
        "append",
        "representation",
        "level_idx",
        "scalars",
        "append",
        "representation",
        "scalar_rep",
        "datums",
        "append",
        "representation",
        "datum",
        "_pk_counter",
        "_pk_counter",
        "len",
        "ids",
        "len",
        "ids",
        "len",
        "pdb_ids",
        "len",
        "levels",
        "len",
        "level_idxs",
        "len",
        "scalars",
        "len",
        "datums",
        "len",
        "ids",
        "encoded_dataset",
        "Dict",
        "Dict",
        "np",
        "ndarray",
        "sliced_dataset",
        "Representations",
        "defaultdict",
        "idcode",
        "encoded_dataset",
        "encoded_dataset",
        "idcode",
        "level",
        "levels",
        "encoded_dataset",
        "idcode",
        "level",
        "sliced_dataset",
        "idcode",
        "level",
        "embeddings",
        "shape",
        "len",
        "protein_data",
        "n_embeddings",
        "n_protein_datums",
        "n_embeddings",
        "n_protein_datums",
        "mismatches",
        "idcode",
        "n_embeddings",
        "n_protein_datums",
        "protein_data",
        "extend",
        "difference",
        "level_idx",
        "n_embeddings",
        "embeddings",
        "level_idx",
        "protein_data",
        "level_idx",
        "reps",
        "add_representation",
        "Representation",
        "pdb_id",
        "idcode",
        "level",
        "level",
        "level_idx",
        "level_idx",
        "scalar_rep",
        "scalar_representation",
        "datum",
        "protein_datum",
        "pd",
        "DataFrame",
        "reps",
        "ids",
        "reps",
        "pdb_ids",
        "reps",
        "levels",
        "reps",
        "level_idxs",
        "reps",
        "scalars",
        "reps",
        "datums",
        "reps",
        "df",
        "mismatches",
        "df",
        "pk",
        "pdb_id",
        "level",
        "level_idx",
        "column",
        "pk",
        "isinstance",
        "pk",
        "pk",
        "condition",
        "df",
        "isin",
        "pk",
        "pdb_id",
        "isinstance",
        "pdb_id",
        "pdb_id",
        "condition",
        "df",
        "isin",
        "pdb_id",
        "level",
        "isinstance",
        "level",
        "level",
        "condition",
        "df",
        "isin",
        "level",
        "level_idx",
        "isinstance",
        "level_idx",
        "level_idx",
        "condition",
        "df",
        "isin",
        "level_idx",
        "condition",
        "df",
        "index",
        "column",
        "df",
        "loc",
        "condition",
        "df",
        "loc",
        "condition",
        "column",
        "values",
        "df",
        "pk",
        "pdb_id",
        "level",
        "level_idx",
        "get_column",
        "df",
        "pk",
        "pdb_id",
        "level",
        "level_idx"
    ],
    "literals": [
        "f\"Representations object with {len(self.ids)} representations\"",
        "\"pk\"",
        "\"PDBid\"",
        "\"levels\"",
        "\"level_idxs\"",
        "\"scalars\"",
        "\"datum\"",
        "\"pk\"",
        "\"PDBid\"",
        "\"level\"",
        "\"level_idx\"",
        "\"scalars\""
    ],
    "variables": [
        "pdb_id",
        "level",
        "level_idx",
        "scalar_rep",
        "datum",
        "ids",
        "pdb_ids",
        "levels",
        "level_idxs",
        "scalars",
        "datums",
        "_pk_counter",
        "reps",
        "mismatches",
        "levels",
        "embeddings",
        "protein_data",
        "n_embeddings",
        "n_protein_datums",
        "difference",
        "level",
        "scalar_representation",
        "protein_datum",
        "df",
        "condition",
        "pk",
        "condition",
        "pdb_id",
        "condition",
        "level",
        "condition",
        "level_idx",
        "condition",
        "condition"
    ],
    "comments": [
        "Standard",
        "Third-party",
        "Local",
        "This is the primary key (i.e. should not be manually adjusted)",
        "hierarchy level",
        "id within a hierarchy level",
        "scalar representation",
        "protein datum",
        "increment the primary key counter",
        "Make it a DataFrame",
        "Build out the indexing condition manually",
        "return all rows"
    ],
    "docstrings": [
        "\"\"\"Helper functions for the protein representation database\"\"\"",
        "\"\"\"Representation object for a protein (sub)-structure. Corresponds to a row in the database.\"\"\"",
        "\"\"\"Database of representation objects\n    Distinguishes across different hierarchy levels\n    \"\"\"",
        "\"\"\"Add a `row` to the database\"\"\"",
        "\"\"\"Populate the representations object with the encoded dataset\"\"\"",
        "\"\"\"Get a column in a DataFrame given certain conditions.\n    If no column is specified, return a view of the indexed\n    DataFrame.\n    \"\"\"",
        "\"\"\"Return the scalars given a selection. If `level_idx` is None\n    then return the whole column (all the representation vectors\n    for a specific PDBid given a hierarchy level)\n    \"\"\""
    ],
    "functions": [
        "add_representation",
        "_new_pk",
        "__repr__",
        "__len__",
        "populate_representations",
        "get_column",
        "get_scalars"
    ],
    "classes": [
        "Representation",
        "Representations"
    ]
}