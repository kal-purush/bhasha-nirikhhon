{
    "identifiers": [
        "com",
        "java",
        "io",
        "java",
        "sql",
        "Connection",
        "java",
        "util",
        "java",
        "util",
        "javax",
        "servlet",
        "ServletException",
        "javax",
        "servlet",
        "annotation",
        "WebServlet",
        "javax",
        "servlet",
        "http",
        "HttpServlet",
        "javax",
        "servlet",
        "http",
        "HttpServletRequest",
        "javax",
        "servlet",
        "http",
        "HttpServletResponse",
        "models",
        "WebServlet",
        "urlPatterns",
        "serialVersionUID",
        "Override",
        "request",
        "response",
        "request",
        "getParameter",
        "doDelete",
        "request",
        "response",
        "article",
        "request",
        "getAttribute",
        "DB",
        "conn",
        "DB",
        "connectToDB",
        "comments",
        "DB",
        "getComments",
        "conn",
        "article",
        "getId",
        "request",
        "setAttribute",
        "comments",
        "commentators",
        "comment",
        "comments",
        "user",
        "DB",
        "getUser",
        "conn",
        "comment",
        "getAuthor",
        "commentators",
        "put",
        "comment",
        "getId",
        "user",
        "request",
        "setAttribute",
        "commentators",
        "request",
        "getServletContext",
        "getRequestDispatcher",
        "forward",
        "request",
        "response",
        "Override",
        "request",
        "response",
        "articleId",
        "valueOf",
        "request",
        "getParameter",
        "author",
        "request",
        "getParameter",
        "comment",
        "request",
        "getParameter",
        "DB",
        "conn",
        "DB",
        "connectToDB",
        "DB",
        "createComment",
        "conn",
        "author",
        "articleId",
        "comment",
        "response",
        "sendRedirect",
        "request",
        "getContextPath",
        "articleId",
        "Override",
        "request",
        "response",
        "user",
        "request",
        "getSession",
        "getAttribute",
        "commId",
        "valueOf",
        "request",
        "getParameter",
        "DB",
        "conn",
        "DB",
        "connectToDB",
        "comment",
        "DB",
        "getComment",
        "conn",
        "commId",
        "commentAuthor",
        "comment",
        "getAuthor",
        "user",
        "getUsername",
        "equalsIgnoreCase",
        "commentAuthor",
        "DB",
        "deleteComment",
        "conn",
        "commId",
        "response",
        "sendRedirect",
        "request",
        "getContextPath",
        "comment",
        "getArticleId"
    ],
    "literals": [
        "\"/comments\"",
        "\"/comment\"",
        "\"Метод doGet сервлета Comments\"",
        "\"delete\"",
        "\"article\"",
        "\"comments\"",
        "\"commentators\"",
        "\"/article.jsp\"",
        "\"Метод doPost сервлета Comments\"",
        "\"articleId\"",
        "\"author\"",
        "\"comment\"",
        "\"/feed/\"",
        "\"Метод doDelete сервлета Comments\"",
        "\"user\"",
        "\"delete\"",
        "\"/feed/\""
    ],
    "variables": [],
    "comments": [
        "DEBUG",
        "DEBUG",
        "DEBUG"
    ],
    "docstrings": [
        "* Класс Comments наследует от абстрактного класса HttpServlet, переопределяя его методы doGet, doPost и doDelete.<br>\n * Сервлет Comments отвечает за просмотр, добавление и удаление комментариев к статье.",
        "* Метод doGet сервлета Comments. Отбражает страницу с комментариями к статье.<br>\n\t* Если Get-запрос пришел по адресу /comments?delete={comIdx}&id={articleId}, вызывает метод doDelete.<br>\n\t* В обратном случае, передает запрос на страницу /article.jsp.<br>\n\t* <b>Получает атрибуты запроса: \"articleId\".</b>\n\t* <b>Устанавливает атрибуты запроса: \"comments\", \"commentators\".</b>\n\t* @param request - HTTP запрос\n\t* @param response - HTTP ответ",
        "* Метод doPost сервлета Comments. Получает параметры формы комментирования и создает новый комментарий.<br>\n\t* Перенаправляет пользователя на страницу комментируемой статьи.<br>\n\t* <b>Получает параметры запроса: \"articleId\", \"author\", \"authorAvatar\", \"comment\".</b><br>\n\t* @param request - HTTP запрос\n\t* @param response - HTTP ответ",
        "* Метод doDelete сервлета Comments. Если пользователь является автором комментария, удаляет комментарий.<br>\n\t* Перенаправляет пользователя на страницу просматриваемой статьи.<br>\n\t* <b>Получает параметр запроса \"delete\".</b><br>\n\t* <b>Получает атрибут сессии \"user\".</b>\n\t* @param request - HTTP запрос\n\t* @param response - HTTP ответ"
    ],
    "functions": [
        "doGet",
        "doPost",
        "doDelete"
    ],
    "classes": [
        "Comments"
    ]
}