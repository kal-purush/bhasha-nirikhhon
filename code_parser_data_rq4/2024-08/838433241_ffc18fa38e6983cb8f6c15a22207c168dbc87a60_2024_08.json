{
    "identifiers": [
        "i",
        "buttons",
        "i",
        "buttons",
        "i",
        "printXorZero",
        "resetButton",
        "reset",
        "gameOver",
        "currentButton",
        "currentButton",
        "flag",
        "flag",
        "flag",
        "count",
        "count",
        "draw",
        "checkWinLose",
        "currentButton",
        "currentButton",
        "i",
        "winningConditions",
        "i",
        "winningConditions",
        "i",
        "winningConditions",
        "i",
        "winningConditions",
        "i",
        "winningConditions",
        "i",
        "winningConditions",
        "i",
        "displayResult",
        "currentButton",
        "gameOver",
        "startCountdown",
        "clearInterval",
        "countdownInterval",
        "i",
        "buttons",
        "i",
        "buttons",
        "i",
        "displayResult",
        "displayResult",
        "resetButton",
        "gameOver",
        "flag",
        "count",
        "displayResult",
        "count",
        "startCountdown",
        "clearInterval",
        "countdownInterval",
        "displayResult",
        "second",
        "countdownInterval",
        "setInterval",
        "countdown",
        "second",
        "second",
        "displayResult",
        "second",
        "clearInterval",
        "countdownInterval",
        "second",
        "reset"
    ],
    "literals": [
        "\"X\"",
        "\"O\"",
        "'button'",
        "'p'",
        "'click'",
        "'reset'",
        "'click'",
        "\"cell-0\"",
        "\"cell-3\"",
        "\"cell-6\"",
        "\"cell-6\"",
        "\"cell-7\"",
        "\"cell-8\"",
        "\"cell-2\"",
        "\"cell-5\"",
        "\"cell-8\"",
        "\"cell-0\"",
        "\"cell-1\"",
        "\"cell-2\"",
        "\"cell-0\"",
        "\"cell-4\"",
        "\"cell-8\"",
        "\"cell-2\"",
        "\"cell-4\"",
        "\"cell-6\"",
        "\"cell-3\"",
        "\"cell-4\"",
        "\"cell-5\"",
        "\"cell-1\"",
        "\"cell-4\"",
        "\"cell-7\"",
        "'printXorZero calls'",
        "\"X\"",
        "\"O\"",
        "\" Wins\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"Reset\"",
        "\"Draw\"",
        "\"Reset in \"",
        "\"Reset in \""
    ],
    "variables": [
        "currentActive",
        "notActive",
        "buttons",
        "displayResult",
        "i",
        "resetButton",
        "winningConditions",
        "flag",
        "count",
        "countdownInterval",
        "gameOver",
        "currentButton",
        "i",
        "i",
        "second"
    ],
    "comments": [
        "think\n1. Button click - Attach Event on Button\nEvent (click, keypress, drag/drop)\nListener\nAction\nGhar ki bell baji, hamne suni hamesha sunte hain, fir ham action karte hain\n2. Print X or 0\nWe have 9 buttons, we need to attach event on all 9 buttons, need to listen the events and then take the action\n\nhow i find out which button is clicked out of the 9 buttons, becasue every button is calling the same function\n\nAdd - Find out the Win and Lose - 8 condition\nFind out the Draw Condition - all cell filled/no more can be filled\nBuild the reset function\nOnce game is over reset after 5 sec, it show countdown then reset",
        "this - keyword (current calling object reference)",
        "The checking of Win or Loseif ()",
        "// https://dontpad.com/mern-bpit-code\n/*\nThink\n1. Button click - Attach Event on Button\nEvent (click , keypress, drag/drop)\nListener\nAction \n2. Print X or 0 \nWe have 9 buttons , we need to attach event on all 9 buttons , need\nto listen the events and then take the action\n\nhow i find out which button is click out of 9 buttons, because every button\nis calling the same function\n\nAdd - FInd out the Win and Lose \nFind out the Draw Condition\nBuild the reset feature\nonce game over reset after 5 sec, it show countdown then reset\n\nconst buttons = document.getElementsByTagName('button');\nconsole.log('All Buttons ', buttons.length);\nfor(var i = 0; i<buttons.length; i++){\n    buttons[i].addEventListener('click', printXorZero);\n}\nvar turnCount = 0;\nvar flag = true;\n// Arrow - Short Hand Function\n// When function is of one line code - then use arrow function\n// function isNotBlank(button){\n//     return button.innerText.trim().length>0\n// }\nconst isNotBlank = button =>button.innerText.trim().length>0;\nconst isThreeSame=(first, second, third)=>\nfirst.innerText == second.innerText && first.innerText ==third.innerText && isNotBlank(first)\n    \n\nfunction isDraw(){\n    if(turnCount==9){\n        document.getElementById('result').innerText  = 'Game Draw';   \n   }\n}\nfunction isGameOver(){\n    const r= isThreeSame(buttons[0], buttons[3], buttons[6]) \n    || isThreeSame(buttons[0], buttons[1], buttons[2]) \n    || isThreeSame(buttons[3], buttons[4], buttons[5]) \n    || isThreeSame(buttons[6], buttons[7], buttons[8]) ||\n     isThreeSame(buttons[3], buttons[4], buttons[5]) ||\n      isThreeSame(buttons[6], buttons[7], buttons[8]) || \n        isThreeSame(buttons[0], buttons[4], buttons[8]) || \n        isThreeSame(buttons[2], buttons[4], buttons[6]);\n    const winner= !flag;\n    console.log(r);\n    if(r){\n        document.getElementById('result').innerText = winner?\"X Wins\":\"0 Wins\";\n    }\n    return r;\n}\nfunction printXorZero(){\n    // this - keyword (current calling object reference )\n    console.log('printXorZero calls', this);\n    const currentButton = this;\n    \n    if(currentButton.innerText.length==0){\n    currentButton.innerText = flag?\"X\":\"0\";\n    flag = !flag;\n    turnCount++;\n    if(turnCount>=5){\n        isGameOver() || isDraw();\n        //isGameOver runs if not true then isDraw runs\n        \n    }\n    \n    }\n}"
    ],
    "docstrings": [],
    "functions": [
        "printXorZero",
        "checkWinLose",
        "reset",
        "draw",
        "startCountdown",
        "countdown"
    ],
    "classes": []
}