{
    "identifiers": [
        "time",
        "torch",
        "datetime",
        "datetime",
        "devid",
        "datetime",
        "now",
        "strftime",
        "torch",
        "cuda",
        "device",
        "devid",
        "torch",
        "cuda",
        "current_device",
        "_id",
        "devid",
        "torch",
        "device",
        "devid",
        "torch",
        "cuda",
        "get_device_properties",
        "device",
        "device",
        "torch",
        "cuda",
        "mem_get_info",
        "device",
        "device",
        "mem_info",
        "props",
        "total_memory",
        "mem_info",
        "mem_info",
        "mem_total",
        "mem_free",
        "s_time",
        "devid",
        "props",
        "name",
        "props",
        "gcnArchName",
        "mem_total",
        "mem_used",
        "mem_free",
        "flush",
        "torch",
        "cuda",
        "device_count",
        "i",
        "ndev",
        "deviceQuery",
        "i",
        "time",
        "sleep"
    ],
    "literals": [
        "\"%Y%m%d-%H%M%S\"",
        "\"cuda:%d\"",
        "f\"{s_time}: [{devid} {props.name} {props.gcnArchName}] {mem_total:5.1f} {mem_used: 5.1f} {mem_free: 5.1f}\"",
        "\"__main__\""
    ],
    "variables": [
        "s_time",
        "_id",
        "device",
        "props",
        "mem_info",
        "mem_total",
        "mem_free",
        "mem_used",
        "ndev"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "mem_used = torch.cuda.memory_reserved(device=device) / (1024 * 1024.) # I found a bug in pytorch",
        "print (f\"ndev={ndev}\")"
    ],
    "docstrings": [],
    "functions": [
        "deviceQuery"
    ],
    "classes": []
}