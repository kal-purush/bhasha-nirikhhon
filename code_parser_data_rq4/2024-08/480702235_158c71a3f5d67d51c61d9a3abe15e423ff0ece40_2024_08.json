{
    "identifiers": [
        "org",
        "eclipse",
        "jface",
        "text",
        "tests",
        "codemining",
        "java",
        "io",
        "ByteArrayInputStream",
        "java",
        "text",
        "SimpleDateFormat",
        "java",
        "util",
        "java",
        "util",
        "concurrent",
        "Callable",
        "org",
        "junit",
        "After",
        "org",
        "junit",
        "AfterClass",
        "org",
        "junit",
        "Assert",
        "org",
        "junit",
        "BeforeClass",
        "org",
        "junit",
        "Test",
        "org",
        "eclipse",
        "swt",
        "custom",
        "StyledText",
        "org",
        "eclipse",
        "swt",
        "graphics",
        "GC",
        "org",
        "eclipse",
        "swt",
        "graphics",
        "Image",
        "org",
        "eclipse",
        "swt",
        "graphics",
        "ImageData",
        "org",
        "eclipse",
        "swt",
        "graphics",
        "Point",
        "org",
        "eclipse",
        "swt",
        "graphics",
        "Rectangle",
        "org",
        "eclipse",
        "swt",
        "widgets",
        "Display",
        "org",
        "eclipse",
        "core",
        "runtime",
        "CoreException",
        "org",
        "eclipse",
        "core",
        "runtime",
        "IProgressMonitor",
        "org",
        "eclipse",
        "core",
        "runtime",
        "NullProgressMonitor",
        "org",
        "eclipse",
        "core",
        "resources",
        "IFile",
        "org",
        "eclipse",
        "core",
        "resources",
        "IProject",
        "org",
        "eclipse",
        "core",
        "resources",
        "IWorkspaceRunnable",
        "org",
        "eclipse",
        "core",
        "resources",
        "ResourcesPlugin",
        "org",
        "eclipse",
        "jface",
        "text",
        "BadLocationException",
        "org",
        "eclipse",
        "jface",
        "text",
        "IDocument",
        "org",
        "eclipse",
        "jface",
        "text",
        "ITextViewer",
        "org",
        "eclipse",
        "jface",
        "text",
        "source",
        "ISourceViewer",
        "org",
        "eclipse",
        "jface",
        "text",
        "source",
        "ISourceViewerExtension5",
        "org",
        "eclipse",
        "ui",
        "IEditorPart",
        "org",
        "eclipse",
        "ui",
        "IWorkbenchPage",
        "org",
        "eclipse",
        "ui",
        "IWorkbenchWindow",
        "org",
        "eclipse",
        "ui",
        "PlatformUI",
        "org",
        "eclipse",
        "ui",
        "ide",
        "IDE",
        "PROJECT_NAME",
        "format",
        "project",
        "BeforeClass",
        "hideWelcomePage",
        "createProject",
        "PROJECT_NAME",
        "AfterClass",
        "project",
        "project",
        "After",
        "closeAllEditors",
        "drainEventQueue",
        "CodeMiningTestProvider",
        "provideContentMiningAtOffset",
        "CodeMiningTestProvider",
        "provideHeaderMiningAtLine",
        "windows",
        "PlatformUI",
        "getWorkbench",
        "getWorkbenchWindows",
        "windows",
        "page",
        "getPages",
        "page",
        "closeAllEditors",
        "projectName",
        "project",
        "ResourcesPlugin",
        "getWorkspace",
        "getRoot",
        "getProject",
        "projectName",
        "project",
        "exists",
        "project",
        "ResourcesPlugin",
        "getWorkspace",
        "run",
        "Override",
        "monitor",
        "project",
        "create",
        "monitor",
        "project",
        "open",
        "monitor",
        "Test",
        "file",
        "project",
        "getFile",
        "file",
        "exists",
        "file",
        "source",
        "file",
        "create",
        "source",
        "getBytes",
        "editor",
        "IDE",
        "openEditor",
        "PlatformUI",
        "getWorkbench",
        "getActiveWorkbenchWindow",
        "getActivePage",
        "file",
        "drainEventQueue",
        "viewer",
        "editor",
        "getAdapter",
        "widget",
        "viewer",
        "getTextWidget",
        "Assert",
        "assertTrue",
        "waitForCondition",
        "widget",
        "getDisplay",
        "Override",
        "widget",
        "getStyleRangeAtOffset",
        "widget",
        "getStyleRangeAtOffset",
        "metrics",
        "drainEventQueue",
        "CodeMiningTestProvider",
        "provideHeaderMiningAtLine",
        "viewer",
        "updateCodeMinings",
        "Assert",
        "assertTrue",
        "waitForCondition",
        "widget",
        "getDisplay",
        "Override",
        "existsPixelWithNonBackgroundColorAtLine",
        "viewer",
        "e",
        "e",
        "printStackTrace",
        "Test",
        "file",
        "project",
        "getFile",
        "file",
        "exists",
        "file",
        "firstPart",
        "secondPart",
        "source",
        "firstPart",
        "secondPart",
        "file",
        "create",
        "source",
        "getBytes",
        "editor",
        "IDE",
        "openEditor",
        "PlatformUI",
        "getWorkbench",
        "getActiveWorkbenchWindow",
        "getActivePage",
        "file",
        "drainEventQueue",
        "viewer",
        "editor",
        "getAdapter",
        "widget",
        "viewer",
        "getTextWidget",
        "Assert",
        "assertTrue",
        "waitForCondition",
        "widget",
        "getDisplay",
        "Override",
        "widget",
        "getStyleRangeAtOffset",
        "widget",
        "getStyleRangeAtOffset",
        "metrics",
        "drainEventQueue",
        "CodeMiningTestProvider",
        "provideContentMiningAtOffset",
        "firstPart",
        "length",
        "viewer",
        "updateCodeMinings",
        "Assert",
        "assertTrue",
        "waitForCondition",
        "widget",
        "getDisplay",
        "Override",
        "existsPixelWithNonBackgroundColorAtEndOfLine",
        "viewer",
        "e",
        "e",
        "printStackTrace",
        "Display",
        "getDefault",
        "readAndDispatch",
        "ap",
        "PlatformUI",
        "getWorkbench",
        "getActiveWorkbenchWindow",
        "getActivePage",
        "ap",
        "hideView",
        "ap",
        "findViewReference",
        "viewer",
        "line",
        "widget",
        "viewer",
        "getTextWidget",
        "viewer",
        "getDocument",
        "delim",
        "getLineDelimiter",
        "line",
        "delimLen",
        "delim",
        "delimLen",
        "delim",
        "length",
        "lineLength",
        "getLineLength",
        "line",
        "delimLen",
        "lineLength",
        "lineLength",
        "verticalScroolBarWidth",
        "viewer",
        "getTextWidget",
        "getVerticalBar",
        "getThumbBounds",
        "width",
        "lineBounds",
        "widget",
        "getTextBounds",
        "getLineOffset",
        "line",
        "getLineOffset",
        "line",
        "lineLength",
        "image",
        "widget",
        "getDisplay",
        "widget",
        "getSize",
        "x",
        "widget",
        "getSize",
        "y",
        "gc",
        "widget",
        "gc",
        "copyArea",
        "image",
        "gc",
        "dispose",
        "imageData",
        "image",
        "getImageData",
        "x",
        "lineBounds",
        "x",
        "x",
        "image",
        "getBounds",
        "width",
        "verticalScroolBarWidth",
        "x",
        "imageData",
        "width",
        "verticalScroolBarWidth",
        "x",
        "y",
        "lineBounds",
        "y",
        "y",
        "lineBounds",
        "y",
        "lineBounds",
        "height",
        "y",
        "imageData",
        "palette",
        "getRGB",
        "imageData",
        "getPixel",
        "x",
        "y",
        "equals",
        "widget",
        "getBackground",
        "getRGB",
        "image",
        "dispose",
        "viewer",
        "line",
        "widget",
        "viewer",
        "getTextWidget",
        "viewer",
        "getDocument",
        "verticalScroolBarWidth",
        "viewer",
        "getTextWidget",
        "getVerticalBar",
        "getThumbBounds",
        "width",
        "lineOffset",
        "getLineOffset",
        "line",
        "lineStr",
        "get",
        "lineOffset",
        "getLineLength",
        "line",
        "getLineDelimiter",
        "line",
        "length",
        "lineBounds",
        "widget",
        "getTextBounds",
        "lineOffset",
        "lineOffset",
        "image",
        "widget",
        "getDisplay",
        "widget",
        "getSize",
        "x",
        "widget",
        "getSize",
        "y",
        "gc",
        "widget",
        "gc",
        "copyArea",
        "image",
        "textExtent",
        "gc",
        "textExtent",
        "lineStr",
        "lineBounds",
        "x",
        "textExtent",
        "x",
        "gc",
        "dispose",
        "imageData",
        "image",
        "getImageData",
        "x",
        "lineBounds",
        "x",
        "x",
        "image",
        "getBounds",
        "width",
        "verticalScroolBarWidth",
        "x",
        "imageData",
        "width",
        "verticalScroolBarWidth",
        "x",
        "y",
        "lineBounds",
        "y",
        "y",
        "lineBounds",
        "y",
        "lineBounds",
        "height",
        "y",
        "imageData",
        "palette",
        "getRGB",
        "imageData",
        "getPixel",
        "x",
        "y",
        "equals",
        "widget",
        "getBackground",
        "getRGB",
        "image",
        "dispose",
        "display",
        "timeout",
        "condition",
        "condition",
        "call",
        "timeout",
        "drainEventQueue",
        "condition",
        "call",
        "timeout",
        "start",
        "currentTimeMillis",
        "diff",
        "timeout",
        "cond",
        "display",
        "sleep",
        "drainEventQueue",
        "cond",
        "condition",
        "call",
        "diff",
        "currentTimeMillis",
        "start",
        "cond",
        "diff",
        "timeout",
        "cond"
    ],
    "literals": [
        "\"test_\"",
        "\"yyyyMMdd_HHmmss\"",
        "\"test.txt\"",
        "\"first line\\n\"",
        "\"\\n\"",
        "\"third line\\n\"",
        "\"UTF-8\"",
        "\"line content mining not available\"",
        "\"Code mining not drawn at empty line after calling updateCodeMinings\"",
        "\"test.txt\"",
        "\"first line\\n\"",
        "\"second line\"",
        "\"\\n\"",
        "\"third line\\n\"",
        "\"UTF-8\"",
        "\"line content mining not available\"",
        "\"Code mining not drawn at the end of second line after calling updateCodeMinings\"",
        "\"org.eclipse.ui.internal.introview\""
    ],
    "variables": [
        "project"
    ],
    "comments": [
        "",
        "",
        "",
        "",
        "if the condition already holds, succeed",
        "repeatedly sleep until condition becomes true or timeout elapses"
    ],
    "docstrings": [
        "*****************************************************************************\n * Copyright (c) 2024 SAP\n *\n * This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License 2.0\n * which accompanies this distribution, and is available at\n * https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n ******************************************************************************"
    ],
    "functions": [
        "beforeClass",
        "afterClass",
        "after",
        "closeAllEditors",
        "createProject",
        "run",
        "testCodeMiningOnEmptyLine",
        "call",
        "call",
        "testCodeMiningAtEndOfLine",
        "call",
        "call",
        "drainEventQueue",
        "hideWelcomePage",
        "existsPixelWithNonBackgroundColorAtLine",
        "existsPixelWithNonBackgroundColorAtEndOfLine",
        "waitForCondition"
    ],
    "classes": [
        "CodeMiningTest"
    ]
}