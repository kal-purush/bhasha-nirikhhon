{
    "identifiers": [
        "Microsoft",
        "Extensions",
        "Logging",
        "Microsoft",
        "Identity",
        "Web",
        "ILogger",
        "logger",
        "logger",
        "logger",
        "IsEnabled",
        "LogLevel",
        "Information",
        "__SignedAssertionFileDiskPathNotProvidedCallback",
        "logger",
        "ILogger",
        "logger",
        "environmentVariableName",
        "logger",
        "logger",
        "IsEnabled",
        "LogLevel",
        "Information",
        "__SignedAssertionEnvironmentVariableNotProvidedCallback",
        "logger",
        "environmentVariableName",
        "ILogger",
        "logger",
        "logger",
        "logger",
        "IsEnabled",
        "LogLevel",
        "__NoSignedAssertionParameterProvidedCallback",
        "logger",
        "ILogger",
        "logger",
        "filePath",
        "logger",
        "logger",
        "IsEnabled",
        "LogLevel",
        "__FileAssertionPathNotFoundCallback",
        "logger",
        "filePath",
        "ILogger",
        "logger",
        "filePath",
        "expiry",
        "logger",
        "logger",
        "IsEnabled",
        "LogLevel",
        "Information",
        "__SuccessFullyReadSignedAssertionCallback",
        "logger",
        "filePath",
        "expiry",
        "ILogger",
        "logger",
        "filePath",
        "message",
        "logger",
        "logger",
        "IsEnabled",
        "LogLevel",
        "__FileDoesNotContainValidAssertionCallback",
        "logger",
        "filePath",
        "message",
        "Action",
        "ILogger",
        "LoggerMessage",
        "Define",
        "LogLevel",
        "Information",
        "EventId",
        "nameof",
        "SignedAssertionFileDiskPathNotProvided",
        "Action",
        "ILogger",
        "LoggerMessage",
        "Define",
        "LogLevel",
        "Information",
        "EventId",
        "nameof",
        "SignedAssertionEnvironmentVariableNotProvided",
        "Action",
        "ILogger",
        "LoggerMessage",
        "Define",
        "LogLevel",
        "EventId",
        "nameof",
        "NoSignedAssertionParameterProvided",
        "Action",
        "ILogger",
        "LoggerMessage",
        "Define",
        "LogLevel",
        "EventId",
        "nameof",
        "FileAssertionPathNotFound",
        "Action",
        "ILogger",
        "LoggerMessage",
        "Define",
        "LogLevel",
        "Information",
        "EventId",
        "nameof",
        "SuccessFullyReadSignedAssertion",
        "Action",
        "ILogger",
        "LoggerMessage",
        "Define",
        "LogLevel",
        "EventId",
        "nameof",
        "FileDoesNotContainValidAssertion"
    ],
    "literals": [
        "\"SignedAssertionFileDiskPath not provided. Falling back to the content of the AZURE_FEDERATED_TOKEN_FILE environment variable. \"",
        "\"The `{environmentVariableName}` environment variable not provided. \"",
        "\"The environment variable AZURE_FEDERATED_TOKEN_FILE or AZURE_ACCESS_TOKEN_FILE or the 'SignedAssertionFileDiskPath' must be set to the path of the file containing the signed assertion. \"",
        "\"The file `{filePath}` containing the signed assertion was not found. \"",
        "\"Successfully read the signed assertion for `{filePath}`. Expires at {expiry}. \"",
        "\"The file `{filePath} does not contain a valid signed assertion. {message}. \""
    ],
    "variables": [
        "__SignedAssertionFileDiskPathNotProvidedCallback",
        "__SignedAssertionEnvironmentVariableNotProvidedCallback",
        "__NoSignedAssertionParameterProvidedCallback",
        "__FileAssertionPathNotFoundCallback",
        "__SuccessFullyReadSignedAssertionCallback",
        "__FileDoesNotContainValidAssertionCallback"
    ],
    "comments": [
        "Copyright (c) Microsoft Corporation. All rights reserved.",
        "Licensed under the MIT License.",
        "// High performance logger messages (before generation).\n    #pragma warning disable SYSLIB1009 // Logging methods must be static\n            [LoggerMessage(EventId = 1, Level = LogLevel.Information, Message = \"SignedAssertionFileDiskPath not provided. Falling back to the content of the AZURE_FEDERATED_TOKEN_FILE environment variable. \")]\n            partial void SignedAssertionFileDiskPathNotProvided(ILogger logger);\n\n            [LoggerMessage(EventId = 2, Level = LogLevel.Information, Message = \"The `{environmentVariableName}` environment variable not provided. \")]\n            partial void SignedAssertionEnvironmentVariableNotProvided(ILogger logger, string environmentVariableName);\n\n            [LoggerMessage(EventId = 3, Level = LogLevel.Error, Message = \"The environment variable AZURE_FEDERATED_TOKEN_FILE or AZURE_ACCESS_TOKEN_FILE or the 'SignedAssertionFileDiskPath' must be set to the path of the file containing the signed assertion. \")]\n            partial void NoSignedAssertionParameterProvided(ILogger logger);\n\n            [LoggerMessage(EventId = 4, Level = LogLevel.Error, Message = \"The file `{filePath}` containing the signed assertion was not found. \")]\n            partial void FileAssertionPathNotFound(ILogger logger, string filePath);\n\n            [LoggerMessage(EventId = 5, Level = LogLevel.Information, Message = \"Successfully read the signed assertion for `{filePath}`. Expires at {expiry}. \")]\n            partial void SuccessFullyReadSignedAssertion(ILogger logger, string filePath, DateTime expiry);\n\n            [LoggerMessage(EventId = 6, Level = LogLevel.Error, Message = \"The file `{filePath} does not contain a valid signed assertion. {message}. \")]\n            partial void FileDoesNotContainValidAssertion(ILogger logger, string filePath, string message);\n    #pragma warning restore SYSLIB1009 // Logging methods must be static",
        "Performant logging messages.",
        "</summary>"
    ],
    "docstrings": [
        "<summary>"
    ],
    "functions": [
        "SignedAssertionFileDiskPathNotProvided",
        "SignedAssertionEnvironmentVariableNotProvided",
        "NoSignedAssertionParameterProvided",
        "FileAssertionPathNotFound",
        "SuccessFullyReadSignedAssertion",
        "FileDoesNotContainValidAssertion"
    ],
    "classes": [
        "AzureIdentityForKubernetesClientAssertion",
        "Logger"
    ]
}