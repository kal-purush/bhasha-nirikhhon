{
    "identifiers": [
        "com",
        "jugovicm",
        "registrationlogin",
        "config",
        "com",
        "jugovicm",
        "registrationlogin",
        "service",
        "UserService",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "boot",
        "autoconfigure",
        "web",
        "servlet",
        "WebMvcAutoConfiguration",
        "org",
        "springframework",
        "context",
        "annotation",
        "Bean",
        "org",
        "springframework",
        "context",
        "annotation",
        "Configuration",
        "org",
        "springframework",
        "http",
        "HttpMethod",
        "org",
        "springframework",
        "security",
        "authentication",
        "dao",
        "DaoAuthenticationProvider",
        "org",
        "springframework",
        "security",
        "config",
        "annotation",
        "authentication",
        "builders",
        "AuthenticationManagerBuilder",
        "org",
        "springframework",
        "security",
        "config",
        "annotation",
        "web",
        "builders",
        "HttpSecurity",
        "org",
        "springframework",
        "security",
        "config",
        "annotation",
        "web",
        "configuration",
        "EnableWebSecurity",
        "org",
        "springframework",
        "security",
        "config",
        "annotation",
        "web",
        "configuration",
        "WebSecurityCustomizer",
        "org",
        "springframework",
        "security",
        "config",
        "annotation",
        "web",
        "configurers",
        "DefaultLoginPageConfigurer",
        "org",
        "springframework",
        "security",
        "crypto",
        "bcrypt",
        "BCryptPasswordEncoder",
        "Configuration",
        "EnableWebSecurity",
        "Autowired",
        "userService",
        "Bean",
        "Autowired",
        "authProvider",
        "authProvider",
        "setUserDetailsService",
        "userService",
        "authProvider",
        "setPasswordEncoder",
        "passwordEncoder",
        "authProvider",
        "Autowired",
        "auth",
        "auth",
        "authenticationProvider",
        "authenticationProvider",
        "Autowired",
        "http",
        "http",
        "csrf",
        "disable",
        "authorizeRequests",
        "requestMatchers",
        "HttpMethod",
        "OPTIONS",
        "permitAll",
        "requestMatchers",
        "HttpMethod",
        "GET",
        "permitAll",
        "http",
        "removeConfigurer",
        "http",
        "authorizeRequests",
        "requestMatchers",
        "permitAll",
        "requestMatchers",
        "hasAuthority",
        "formLogin",
        "loginPage",
        "permitAll",
        "defaultSuccessUrl",
        "failureUrl",
        "logout",
        "permitAll",
        "Bean",
        "web",
        "web",
        "ignoring",
        "requestMatchers"
    ],
    "literals": [
        "\"*/\"",
        "\"/login\"",
        "\"/resources/**\"",
        "\"/login\"",
        "\"/home\"",
        "\"/user/**\"",
        "\"USER\"",
        "\"/login\"",
        "\"/user/dashboard\"",
        "\"/login-error\"",
        "\"/registration**\"",
        "\"/img/**\"",
        "\"/js/**\"",
        "\"/css/**\""
    ],
    "variables": [
        "userService"
    ],
    "comments": [],
    "docstrings": [
        "ttp.authorizeRequests().requestMatchers (\n                        \"/registration**\",\n                        \"/js/**\",\n                        \"/css/**\",\n                        \"/img/**\").permitAll()\n                .anyRequest().authenticated()\n                .and()\n                .formLogin()\n                .loginPage(\"/login\")\n                .permitAll()\n                .and()\n                .logout()\n                .invalidateHttpSession(true)\n                .clearAuthentication(true)\n                .logoutRequestMatcher(new AntPathRequestMatcher(\"/logout\"))\n                .logoutSuccessUrl(\"/login?logout\")\n                .permitAll();"
    ],
    "functions": [
        "BCryptPasswordEncoder",
        "passwordEncoder",
        "DaoAuthenticationProvider",
        "authenticationProvider",
        "configureGlobal",
        "configure",
        "WebSecurityCustomizer",
        "webSecurityCustomizer"
    ],
    "classes": [
        "SecurityConfiguration"
    ]
}