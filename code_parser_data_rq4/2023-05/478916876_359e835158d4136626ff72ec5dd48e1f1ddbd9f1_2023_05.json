{
    "identifiers": [
        "NServiceBus",
        "TransactionalSession",
        "AcceptanceTests",
        "Collections",
        "Generic",
        "Linq",
        "Threading",
        "Threading",
        "Tasks",
        "Microsoft",
        "Extensions",
        "DependencyInjection",
        "AcceptanceTesting",
        "Logging",
        "NUnit",
        "Framework",
        "Pipeline",
        "NServiceBusAcceptanceTest",
        "Test",
        "Scenario",
        "Define",
        "Context",
        "WithEndpoint",
        "AnEndpoint",
        "s",
        "When",
        "_",
        "ctx",
        "ctx",
        "ServiceProvider",
        "CreateScope",
        "scope",
        "ServiceProvider",
        "GetRequiredService",
        "ITransactionalSession",
        "transactionalSession",
        "Open",
        "CustomTestingPersistenceOpenSessionOptions",
        "Metadata",
        "CustomTestingPersistenceOpenSessionOptions",
        "LoggerContextName",
        "transactionalSession",
        "SendLocal",
        "SomeMessage",
        "CancellationToken",
        "transactionalSession",
        "Commit",
        "CancellationToken",
        "ConfigureAwait",
        "Done",
        "c",
        "MessageReceived",
        "Run",
        "Scenario",
        "Define",
        "Context",
        "WithEndpoint",
        "AnEndpoint",
        "s",
        "When",
        "session",
        "ctx",
        "session",
        "SendLocal",
        "SomeMessage",
        "CancellationToken",
        "Done",
        "c",
        "MessageReceived",
        "Run",
        "Join",
        "Environment",
        "NewLine",
        "FilterLogs",
        "transactionalContext",
        "Join",
        "Environment",
        "NewLine",
        "FilterLogs",
        "pipelineContext",
        "Assert",
        "AreEqual",
        "pipelineOrder",
        "transactionalSessionOrder",
        "IReadOnlyCollection",
        "ScenarioContext",
        "scenarioContext",
        "scenarioContext",
        "Logs",
        "Where",
        "l",
        "Level",
        "LogLevel",
        "Info",
        "l",
        "LoggerName",
        "Contains",
        "Where",
        "l",
        "Message",
        "StartsWith",
        "Where",
        "l",
        "Message",
        "Contains",
        "OrderBy",
        "l",
        "Timestamp",
        "Ticks",
        "Select",
        "l",
        "Message",
        "Replace",
        "Empty",
        "ToArray",
        "ScenarioContext",
        "IInjectServiceProvider",
        "EndpointConfigurationBuilder",
        "EndpointSetup",
        "TransactionSessionWithOutboxEndpoint",
        "b",
        "Pipeline",
        "Register",
        "LoggerContextBehavior",
        "Behavior",
        "ITransportReceiveContext",
        "ITransportReceiveContext",
        "context",
        "Func",
        "next",
        "context",
        "Message",
        "Headers",
        "TryGetValue",
        "CustomTestingPersistenceOpenSessionOptions",
        "LoggerContextName",
        "loggerContext",
        "context",
        "Extensions",
        "CustomTestingPersistenceOpenSessionOptions",
        "LoggerContextName",
        "loggerContext",
        "next",
        "IHandleMessages",
        "SomeMessage",
        "Context",
        "context",
        "testContext",
        "context",
        "SomeMessage",
        "message",
        "IMessageHandlerContext",
        "context",
        "testContext",
        "MessageReceived",
        "CompletedTask",
        "ICommand"
    ],
    "literals": [
        "\"TransactionalSession\"",
        "\"TransactionalSession - \"",
        "\"Pipeline - \"",
        "\"The transactional session order of operation is different from the core order\"",
        "\"CustomTesting\"",
        "\"Outbox.Get\"",
        "\"Extracts the logger context header\""
    ],
    "variables": [
        "transactionalContext",
        "scope",
        "transactionalSession",
        "pipelineContext",
        "transactionalSessionOrder",
        "pipelineOrder",
        "MessageReceived",
        "IServiceProvider",
        "ServiceProvider",
        "Context",
        "testContext"
    ],
    "comments": [
        "due to transactional session control messages also going through the incoming pipeline we run the same scenario again",
        "without the transactional session",
        "Filtering out the Get since tx session doesn't do a Get in the pipeline and potentially multiple times"
    ],
    "docstrings": [],
    "functions": [
        "Should_follow_interaction_order_of_core",
        "FilterLogs",
        "AnEndpoint",
        "Invoke",
        "MessageHandler",
        "Handle"
    ],
    "classes": [
        "When_using_transactional_session",
        "Context",
        "AnEndpoint",
        "LoggerContextBehavior",
        "MessageHandler",
        "SomeMessage"
    ]
}