{
    "identifiers": [
        "time",
        "selenium",
        "webdriver",
        "chrome",
        "service",
        "selenium",
        "webdriver",
        "support",
        "ui",
        "WebDriverWait",
        "selenium",
        "webdriver",
        "support",
        "expected_conditions",
        "EC",
        "selenium",
        "webdriver",
        "common",
        "by",
        "By",
        "selenium",
        "webdriver",
        "opera",
        "options",
        "Options",
        "seleniumwire",
        "webdriver",
        "webdriver",
        "myWebdriver",
        "json",
        "pprint",
        "pyvirtualdisplay",
        "Display",
        "Options",
        "chrome_options",
        "add_extension",
        "chrome_options",
        "add_argument",
        "webdriver",
        "DesiredCapabilities",
        "CHROME",
        "myWebdriver",
        "Opera",
        "executable_path",
        "desired_capabilities",
        "capabilities",
        "options",
        "chrome_options",
        "driver",
        "get",
        "time",
        "sleep",
        "driver",
        "get",
        "WebDriverWait",
        "driver",
        "until",
        "EC",
        "visibility_of_element_located",
        "By",
        "CSS_SELECTOR",
        "input_password",
        "send_keys",
        "driver",
        "find_element_by_css_selector",
        "btn_login",
        "click",
        "WebDriverWait",
        "driver",
        "until",
        "EC",
        "visibility_of_element_located",
        "By",
        "XPATH",
        "tool",
        "click",
        "WebDriverWait",
        "driver",
        "until",
        "EC",
        "visibility_of_element_located",
        "By",
        "XPATH",
        "btn_tool_tiktok",
        "click",
        "time",
        "sleep",
        "driver",
        "switch_to",
        "driver",
        "window_handles",
        "driver",
        "get",
        "time",
        "sleep",
        "logs",
        "entry",
        "logs",
        "json",
        "loads",
        "entry",
        "log",
        "log",
        "log",
        "log",
        "driver",
        "get_log",
        "process_browser_logs_for_network_events",
        "logs",
        "open",
        "events",
        "pprint",
        "pprint",
        "stream"
    ],
    "literals": [
        "'./TranNamPhong234.crx'",
        "'user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'",
        "\"goog:loggingPrefs\"",
        "\"performance\"",
        "\"ALL\"",
        "r'./operadriver.exe'",
        "'opera://extensions'",
        "'https://trannamphong.top/Vitaminforsale38b5m9'",
        "\"input[type=password]\"",
        "'truong193'",
        "'button.passster-submit'",
        "\"//div[contains(text(), 'Tool tìm quảng cáo Facebook/Google/TikTok')]\"",
        "\"//button[contains(text(), 'Click để sử dụng Tool Spy Tiktok Ads')]\"",
        "'https://www.shoplus.net/discovery/ads'",
        "\"message\"",
        "\"message\"",
        "\"Network.response\"",
        "\"method\"",
        "\"Network.request\"",
        "\"method\"",
        "\"Network.webSocket\"",
        "\"method\"",
        "\"performance\"",
        "\"log_entries.txt\"",
        "\"wt\""
    ],
    "variables": [
        "chrome_options",
        "capabilities",
        "capabilities",
        "driver",
        "input_password",
        "btn_login",
        "tool",
        "btn_tool_tiktok",
        "log",
        "logs",
        "events"
    ],
    "comments": [
        "from selenium import webdriver",
        "webdriver_service = service.Service('./operadriver.exe')",
        "webdriver_service.start()",
        "capabilities[\"loggingPrefs\"] = {\"performance\": \"ALL\"}  # chromedriver < ~75",
        "chromedriver 75+",
        "seleniumwire_options = {\"addr\": \"127.0.0.1\", \"port\": 9867}",
        "driver = webdriver.Remote(webdriver_service.service_url, webdriver.DesiredCapabilities.OPERA, options=chrome_options, seleniumwire_options=seleniumwire_options)",
        "time.sleep(10)",
        "driver.get('https://www.shoplus.net/api/v1/tikmeta/portal/ads/search?cursor=0&region=VN&keyword_type=ALL&sort=1&play_count_start=100000')",
        "header = driver.execute_script(\"return JSON.stringify(performance.getEntries()[0].request.headers);\")",
        "https://gist.github.com/rengler33/f8b9d3f26a518c08a414f6f86109863c",
        "print(driver.current_url)",
        "print(driver.get_cookies())",
        "print()",
        "print(driver.requests)",
        "for request in driver.requests:",
        "#   print(request)",
        "print(\"request.url\\n\", request.url) # <--------------- Request url",
        "print(\"request.headers\\n\", request.headers) # <----------- Request headers",
        "print(\"request.headers.headers\\n\", request.response.headers) # <-- Response headers",
        "print()",
        "headers = driver.execute_script(\"var req = new XMLHttpRequest();req.open('GET', document.location, false);req.send(null);return req\")",
        "print(headers)",
        "headers = headers.splitlines()",
        "print(headers)",
        "entries = driver.execute_script(\"\"\"",
        "var performance = window.performance || window.webkitPerformance || window.msPerformance || window.mozPerformance;",
        "var network = performance.getEntries() || [];",
        "return network;",
        "\"\"\")",
        "print(entries)",
        "print(\"------------------\")",
        "# In ra danh sách các yêu cầu hiện tại",
        "for entry in entries:",
        "# print(entry)",
        "if \"product_rising_rank\" in entry[\"name\"]:",
        "print(entry)"
    ],
    "docstrings": [
        "\"\"\"\n    Return only logs which have a method that start with \"Network.response\", \"Network.request\", or \"Network.webSocket\"\n    since we're interested in the network events specifically.\n    \"\"\""
    ],
    "functions": [
        "process_browser_logs_for_network_events"
    ],
    "classes": []
}