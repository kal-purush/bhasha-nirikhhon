{
    "identifiers": [
        "sys",
        "pandas",
        "pd",
        "scipy",
        "sparse",
        "io",
        "numpy",
        "np",
        "c",
        "c",
        "c",
        "c",
        "classes",
        "names",
        "names",
        "c",
        "classes",
        "t",
        "types",
        "N",
        "sizes",
        "c",
        "t",
        "N",
        "t",
        "names",
        "t",
        "c",
        "filename_p1",
        "N",
        "pd",
        "read_csv",
        "filename",
        "delimiter",
        "names",
        "fields",
        "data",
        "columns",
        "tolist",
        "data",
        "fields",
        "to_numpy",
        "data",
        "fields",
        "to_numpy",
        "data",
        "fields",
        "to_numpy",
        "filename",
        "filename",
        "filename",
        "filename",
        "sparse",
        "coo_matrix",
        "V1",
        "I1",
        "J1",
        "shape",
        "N",
        "N",
        "A",
        "A",
        "transpose",
        "np",
        "squeeze",
        "np",
        "sqrt",
        "np",
        "array",
        "np",
        "sum",
        "A",
        "axis",
        "np",
        "zeros",
        "N",
        "i",
        "N",
        "abs",
        "D",
        "i",
        "D",
        "i",
        "np",
        "array",
        "i",
        "i",
        "N",
        "np",
        "array",
        "i",
        "i",
        "N",
        "sparse",
        "coo_matrix",
        "D2",
        "I2",
        "J2",
        "shape",
        "N",
        "N",
        "sparse",
        "coo_matrix",
        "D",
        "D2",
        "I2",
        "J2",
        "shape",
        "N",
        "N",
        "Identity",
        "D2inv",
        "dot",
        "A",
        "dot",
        "D2inv",
        "L",
        "L",
        "transpose",
        "L",
        "nonzero",
        "L",
        "data",
        "np",
        "save",
        "tosave1",
        "I3",
        "tosave1",
        "np",
        "save",
        "tosave2",
        "J3",
        "tosave2",
        "np",
        "save",
        "tosave3",
        "V3",
        "tosave3",
        "N",
        "L",
        "io",
        "savemat",
        "tosave",
        "M",
        "do_compression",
        "tosave",
        "sys",
        "stdout",
        "flush"
    ],
    "literals": [
        "\"LBOLBSV\"",
        "\"LBOHBSV\"",
        "\"HBOLBSV\"",
        "\"HBOHBSV\"",
        "\"static\"",
        "\"static\"",
        "\"static\"",
        "\"low\"",
        "\"L\"",
        "\"high\"",
        "\"Overlap_\"",
        "\"low\"",
        "\"L\"",
        "\"high\"",
        "\"BlockSizeVar\"",
        "\"MAWI\"",
        "\"static\"",
        "\"MAWI\"",
        "\"mawi\"",
        "\"static\"",
        "\"GRAPH500\"",
        "\"graph500-scale24-ef16\"",
        "\"./\"",
        "\"/\"",
        "\"/\"",
        "\"/\"",
        "\"_\"",
        "\"_\"",
        "\"_nodes.tsv\"",
        "\"row\"",
        "\"col\"",
        "\"val\"",
        "\"\\t\"",
        "\"_L.mat\"",
        "\"_I.npy\"",
        "\"_J.npy\"",
        "\"_V.npy\"",
        "\" saved!!\"",
        "\" saved!!\"",
        "\" saved!!\"",
        "\"data\"",
        "\" saved!!\""
    ],
    "variables": [
        "sizes",
        "classes",
        "types",
        "names",
        "names",
        "classes",
        "filename_p1",
        "filename",
        "fields",
        "data",
        "fields",
        "I1",
        "J1",
        "V1",
        "tosave",
        "tosave1",
        "tosave2",
        "tosave3",
        "A",
        "A",
        "D",
        "D2",
        "D2",
        "i",
        "I2",
        "J2",
        "D2inv",
        "Identity",
        "L",
        "L",
        "I3",
        "J3",
        "V3",
        "M"
    ],
    "comments": [
        "print(\"N = \", N, \" sparsity = \", len(I1)*1.0/N/N)",
        "filename_truth = filename_p1+str(N)+\"_nodes_truePartition.tsv\"",
        "fields = [\"row\", \"cluster\"]",
        "data = pd.read_csv(filename_truth, delimiter=\"\\t\", names=fields)",
        "I2 = data[fields[0]].to_numpy() - 1",
        "J2 = np.array([0 for _ in range(N)])",
        "V2 = data[fields[1]].to_numpy()",
        "tosave = filename_truth[:-4] + \".mat\"",
        "target = sparse.coo_matrix((V2, (I2, J2)), shape=(N, 1))",
        "M = {\"data\": target}",
        "io.savemat(tosave, M, do_compression=True)",
        "print(filename_truth, \" saved!!\")"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}