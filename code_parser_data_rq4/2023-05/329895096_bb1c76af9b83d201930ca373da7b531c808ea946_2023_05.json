{
    "identifiers": [
        "fi",
        "evident",
        "raudikko",
        "org",
        "jetbrains",
        "annotations",
        "NotNull",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "EnumSet",
        "java",
        "util",
        "java",
        "util",
        "NotNull",
        "word",
        "NotNull",
        "baseForms",
        "NotNull",
        "attributes",
        "NotNull",
        "word",
        "NotNull",
        "baseForms",
        "NotNull",
        "attributes",
        "word",
        "word",
        "baseForms",
        "Collections",
        "unmodifiableList",
        "baseForms",
        "attributes",
        "Collections",
        "unmodifiableSet",
        "attributes",
        "Override",
        "NotNull",
        "baseForms",
        "hasAttribute",
        "WordAttribute",
        "Sn",
        "hasAttribute",
        "WordAttribute",
        "Ny",
        "hasAnyAttribute",
        "WordAttribute",
        "Fko",
        "WordAttribute",
        "Fkin",
        "WordAttribute",
        "Fkaan",
        "hasAnyAttribute",
        "WordAttribute",
        "O3",
        "WordAttribute",
        "O2y",
        "WordAttribute",
        "O2m",
        "WordAttribute",
        "O1y",
        "WordAttribute",
        "O1m",
        "hasAnyAttribute",
        "WordAttribute",
        "Cc",
        "WordAttribute",
        "Cs",
        "Override",
        "hasAnyAttribute",
        "WordAttribute",
        "Lee",
        "WordAttribute",
        "Les",
        "WordAttribute",
        "Lep",
        "WordAttribute",
        "Lem",
        "NotNull",
        "attribute",
        "attributes",
        "contains",
        "attribute",
        "NotNull",
        "attributes",
        "flag",
        "attributes",
        "hasAttribute",
        "flag",
        "Override",
        "isNominative",
        "isSingular",
        "isClitic",
        "isPossessiveSuffix",
        "isComparative",
        "Override",
        "word"
    ],
    "literals": [],
    "variables": [
        "word",
        "baseForms",
        "attributes",
        "attributes"
    ],
    "comments": [],
    "docstrings": [
        "* The contents of this file are subject to the Mozilla Public License Version\n * 2.0 (the \"License\"); you may not use this file except in compliance with\n * the License. You may obtain a copy of the License at\n * https://www.mozilla.org/en-US/MPL/2.0/\n *\n * Software distributed under the License is distributed on an \"AS IS\" basis,\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n * for the specific language governing rights and limitations under the\n * License.\n *\n * The Original Code is Libvoikko: Library of natural language processing tools.\n * The Initial Developer of the Original Code is Harri Pitk√§nen <hatapitk@iki.fi>.\n * Portions created by the Initial Developer are Copyright (C) 2012\n * the Initial Developer. All Rights Reserved.\n *\n * Raudikko, the Java port of the Initial Code is Copyright (C) 2020 by\n * Evident Solutions Oy. All Rights Reserved.\n *\n * Alternatively, the contents of this file may be used under the terms of\n * either the GNU General Public License Version 2 or later (the \"GPL\"), or\n * the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n * in which case the provisions of the GPL or the LGPL are applicable instead\n * of those above. If you wish to allow use of your version of this file only\n * under the terms of either the GPL or the LGPL, and not to allow others to\n * use your version of this file under the terms of the MPL, indicate your\n * decision by deleting the provisions above and replace them with the notice\n * and other provisions required by the GPL or the LGPL. If you do not delete\n * the provisions above, a recipient may use your version of this file under\n * the terms of any one of the MPL, the GPL or the LGPL."
    ],
    "functions": [
        "SingleWordPart",
        "getBaseForms",
        "isNominative",
        "isSingular",
        "isClitic",
        "isPossessiveSuffix",
        "isComparative",
        "isProperNoun",
        "hasAttribute",
        "hasAnyAttribute",
        "isInBaseForm",
        "toString"
    ],
    "classes": [
        "SingleWordPart"
    ]
}