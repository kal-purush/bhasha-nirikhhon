{
    "identifiers": [
        "sys",
        "textual",
        "work",
        "textual",
        "app",
        "App",
        "ComposeResult",
        "textual",
        "widgets",
        "Input",
        "Markdown",
        "Button",
        "Footer",
        "Header",
        "Static",
        "textual",
        "containers",
        "Horizontal",
        "VerticalScroll",
        "os",
        "json",
        "openai",
        "pyperclip",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "open",
        "secrets_file",
        "fp",
        "json",
        "load",
        "fp",
        "secrets",
        "get",
        "OPENAI_API_KEY",
        "OPENAI_API_KEY",
        "Static",
        "ComposeResult",
        "Input",
        "id",
        "placeholder",
        "Button",
        "id",
        "Markdown",
        "args",
        "kwargs",
        "args",
        "kwargs",
        "new_text",
        "_text",
        "new_text",
        "update",
        "_text",
        "update",
        "_text",
        "App",
        "ComposeResult",
        "Prompt",
        "VerticalScroll",
        "id",
        "MarkdownMem",
        "id",
        "query_one",
        "Input",
        "focus",
        "Input",
        "Submitted",
        "input",
        "id",
        "query_one",
        "Input",
        "value",
        "query_str",
        "issue_query",
        "query_str",
        "query_one",
        "Markdown",
        "update",
        "Button",
        "Pressed",
        "query_one",
        "Markdown",
        "pyperclip",
        "copy",
        "markdown_mem",
        "_text",
        "work",
        "exclusive",
        "query_str",
        "query_one",
        "Markdown",
        "markdown_mem",
        "clear_text",
        "chunk",
        "openai",
        "ChatCompletion",
        "acreate",
        "model",
        "messages",
        "query_str",
        "stream",
        "chunk",
        "get",
        "get",
        "content",
        "markdown_mem",
        "append_text",
        "content",
        "results",
        "results",
        "set_key",
        "ChatApp",
        "app",
        "run"
    ],
    "literals": [
        "\"secrets.json\"",
        "\"OPENAI_API_KEY\"",
        "\"OPENAI_API_KEY in secrets.json is required\"",
        "\"input\"",
        "\"return to submit query; ctrl-c to detach\"",
        "\"copy text\"",
        "\"copy\"",
        "\"\"",
        "\"\"",
        "\"chat.css\"",
        "\"markdown\"",
        "\"results\"",
        "\"input\"",
        "\"#input\"",
        "\"#results\"",
        "\"(prompt is empty)\"",
        "\"#results\"",
        "\"#results\"",
        "\"gpt-3.5-turbo\"",
        "\"role\"",
        "\"system\"",
        "\"content\"",
        "\"You are ChatGPT, a large language model trained by OpenAI. Answer as concisely as possible. If you are not sure, just say 'I don't know'.\"",
        "\"role\"",
        "\"user\"",
        "\"content\"",
        "\"choices\"",
        "\"delta\"",
        "\"content\"",
        "\"__main__\""
    ],
    "variables": [
        "secrets_file",
        "secrets",
        "OPENAI_API_KEY",
        "openai",
        "api_key",
        "_text",
        "_text",
        "CSS_PATH",
        "query_str",
        "markdown_mem",
        "markdown_mem",
        "content",
        "app"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "Give the input focus, so we can start typing straight away"
    ],
    "docstrings": [
        "\"\"\"Prompt input + submit button.\"\"\"",
        "\"\"\"Markdown widget that stores text content.\"\"\"",
        "\"\"\"llm chat.\"\"\"",
        "\"\"\"Called when app starts.\"\"\"",
        "\"\"\"A coroutine to handle a text changed prompt.\"\"\"",
        "\"\"\"Query chat gpt.\"\"\"",
        "\"\"\"Convert the results in to markdown.\"\"\""
    ],
    "functions": [
        "set_key",
        "compose",
        "append_text",
        "clear_text",
        "compose",
        "on_mount",
        "on_input_submitted",
        "on_button_pressed",
        "issue_query",
        "make_word_markdown"
    ],
    "classes": [
        "Prompt",
        "MarkdownMem",
        "ChatApp"
    ]
}