{
    "identifiers": [
        "renderHook",
        "useRouter",
        "useFSRoute",
        "Mock",
        "describe",
        "expect",
        "it",
        "vi",
        "vi",
        "vi",
        "useRouter",
        "renderHook",
        "useFSRoute",
        "result",
        "describe",
        "it",
        "mockAndRenderHook",
        "expect",
        "withLocale",
        "it",
        "mockAndRenderHook",
        "expect",
        "withIndex",
        "it",
        "mockAndRenderHook",
        "expect",
        "withQuery",
        "mockAndRenderHook",
        "expect",
        "withQueryLocale",
        "mockAndRenderHook",
        "expect",
        "withIndexLocaleQuery",
        "it",
        "mockAndRenderHook",
        "expect",
        "value",
        "it",
        "mockAndRenderHook",
        "expect",
        "value",
        "it",
        "mockAndRenderHook",
        "expect",
        "value"
    ],
    "literals": [
        "\"@testing-library/react\"",
        "\"next/router\"",
        "\"nextra/hooks\"",
        "\"vitest\"",
        "\"vitest\"",
        "\"next/router\"",
        "string",
        "string",
        "string",
        "\"getFSRoute\"",
        "\"replace locale\"",
        "\"/foo.en-US\"",
        "\"en-US\"",
        "\"/foo\"",
        "\"replace index\"",
        "\"/bar/index\"",
        "\"/bar\"",
        "\"ignore query\"",
        "\"/baz?query=1\"",
        "\"/baz\"",
        "\"/quz.en-US?query=1\"",
        "\"en-US\"",
        "\"/quz\"",
        "\"/asd/index.en-US?query=1\"",
        "\"en-US\"",
        "\"/asd\"",
        "\"should return /404\"",
        "\"/not-found\"",
        "\"/404\"",
        "\"/404\"",
        "\"should return /500\"",
        "\"/error\"",
        "\"/500\"",
        "\"/500\"",
        "\"remove trailing slash\"",
        "\"/foo/\"",
        "\"/foo\""
    ],
    "variables": [
        "withLocale",
        "withIndex",
        "withQuery",
        "withQueryLocale",
        "withIndexLocaleQuery",
        "value",
        "value",
        "value"
    ],
    "comments": [
        "eslint-disable-next-line @typescript-eslint/no-unsafe-argument"
    ],
    "docstrings": [],
    "functions": [
        "mockAndRenderHook"
    ],
    "classes": []
}