{
    "identifiers": [
        "com",
        "dat3m",
        "dartagnan",
        "encoding",
        "com",
        "dat3m",
        "dartagnan",
        "expression",
        "com",
        "dat3m",
        "dartagnan",
        "expression",
        "op",
        "COpBin",
        "com",
        "dat3m",
        "dartagnan",
        "expression",
        "processing",
        "ExpressionVisitor",
        "com",
        "dat3m",
        "dartagnan",
        "program",
        "Register",
        "com",
        "dat3m",
        "dartagnan",
        "program",
        "core",
        "Event",
        "com",
        "dat3m",
        "dartagnan",
        "program",
        "memory",
        "Location",
        "com",
        "dat3m",
        "dartagnan",
        "program",
        "memory",
        "MemoryObject",
        "org",
        "sosy_lab",
        "java_smt",
        "api",
        "org",
        "sosy_lab",
        "java_smt",
        "api",
        "NumeralFormula",
        "IntegerFormula",
        "com",
        "dat3m",
        "dartagnan",
        "GlobalSettings",
        "getArchPrecision",
        "com",
        "google",
        "common",
        "Preconditions",
        "checkArgument",
        "com",
        "google",
        "common",
        "Preconditions",
        "checkState",
        "java",
        "util",
        "Arrays",
        "asList",
        "formulaManager",
        "booleanFormulaManager",
        "formulaManager",
        "formulaManager",
        "formulaManager",
        "booleanFormulaManager",
        "formulaManager",
        "getBooleanFormulaManager",
        "formulaManager",
        "getIntegerFormulaManager",
        "formulaManager",
        "getBitvectorFormulaManager",
        "expression",
        "formula",
        "expression",
        "visit",
        "formula",
        "formula",
        "formula",
        "bitvectorFormulaManager",
        "bitvectorFormulaManager",
        "length",
        "bitvectorFormulaManager",
        "getLength",
        "formula",
        "zero",
        "bitvectorFormulaManager",
        "makeBitvector",
        "length",
        "bitvectorFormulaManager",
        "greaterThan",
        "formula",
        "zero",
        "formula",
        "integerFormulaManager",
        "integerFormulaManager",
        "zero",
        "integerFormulaManager",
        "makeNumber",
        "integerFormulaManager",
        "greaterThan",
        "formula",
        "zero",
        "expression",
        "formula",
        "expression",
        "visit",
        "formula",
        "formula",
        "formula",
        "precision",
        "getArchPrecision",
        "one",
        "zero",
        "precision",
        "bitvectorFormulaManager",
        "bitvectorFormulaManager",
        "one",
        "bitvectorFormulaManager",
        "makeBitvector",
        "precision",
        "zero",
        "bitvectorFormulaManager",
        "makeBitvector",
        "precision",
        "integerFormulaManager",
        "integerFormulaManager",
        "one",
        "integerFormulaManager",
        "makeNumber",
        "zero",
        "integerFormulaManager",
        "makeNumber",
        "booleanFormulaManager",
        "ifThenElse",
        "formula",
        "one",
        "zero",
        "op",
        "lhs",
        "rhs",
        "fmgr",
        "bmgr",
        "fmgr",
        "getBooleanFormulaManager",
        "lhs",
        "rhs",
        "b1",
        "lhs",
        "b2",
        "rhs",
        "op",
        "EQ",
        "bmgr",
        "equivalence",
        "b1",
        "b2",
        "NEQ",
        "bmgr",
        "bmgr",
        "equivalence",
        "b1",
        "b2",
        "op",
        "lhs",
        "rhs",
        "imgr",
        "fmgr",
        "getIntegerFormulaManager",
        "i1",
        "lhs",
        "i2",
        "rhs",
        "op",
        "EQ",
        "imgr",
        "equal",
        "i1",
        "i2",
        "NEQ",
        "bmgr",
        "imgr",
        "equal",
        "i1",
        "i2",
        "LT",
        "ULT",
        "imgr",
        "lessThan",
        "i1",
        "i2",
        "LTE",
        "ULTE",
        "imgr",
        "lessOrEquals",
        "i1",
        "i2",
        "GT",
        "UGT",
        "imgr",
        "greaterThan",
        "i1",
        "i2",
        "GTE",
        "UGTE",
        "imgr",
        "greaterOrEquals",
        "i1",
        "i2",
        "lhs",
        "rhs",
        "bvmgr",
        "fmgr",
        "getBitvectorFormulaManager",
        "bv1",
        "lhs",
        "bv2",
        "rhs",
        "op",
        "EQ",
        "bvmgr",
        "equal",
        "bv1",
        "bv2",
        "NEQ",
        "bmgr",
        "bvmgr",
        "equal",
        "bv1",
        "bv2",
        "LT",
        "ULT",
        "bvmgr",
        "lessThan",
        "bv1",
        "bv2",
        "op",
        "equals",
        "COpBin",
        "LT",
        "LTE",
        "ULTE",
        "bvmgr",
        "lessOrEquals",
        "bv1",
        "bv2",
        "op",
        "equals",
        "COpBin",
        "LTE",
        "GT",
        "UGT",
        "bvmgr",
        "greaterThan",
        "bv1",
        "bv2",
        "op",
        "equals",
        "COpBin",
        "GT",
        "GTE",
        "UGTE",
        "bvmgr",
        "greaterOrEquals",
        "bv1",
        "bv2",
        "op",
        "equals",
        "COpBin",
        "GTE",
        "lhs",
        "op",
        "rhs",
        "offset",
        "formulaManager",
        "checkArgument",
        "offset",
        "offset",
        "size",
        "name",
        "format",
        "offset",
        "getArchPrecision",
        "formulaManager",
        "getBitvectorFormulaManager",
        "makeVariable",
        "getArchPrecision",
        "name",
        "formulaManager",
        "getIntegerFormulaManager",
        "makeVariable",
        "name",
        "Override",
        "atom",
        "lhs",
        "encodeAsInteger",
        "atom",
        "getLHS",
        "rhs",
        "encodeAsInteger",
        "atom",
        "getRHS",
        "encodeComparison",
        "atom",
        "getOp",
        "lhs",
        "rhs",
        "formulaManager",
        "Override",
        "bConst",
        "booleanFormulaManager",
        "makeBoolean",
        "bConst",
        "getValue",
        "Override",
        "bBin",
        "lhs",
        "encodeAsBoolean",
        "bBin",
        "getLHS",
        "rhs",
        "encodeAsBoolean",
        "bBin",
        "getRHS",
        "bBin",
        "getOp",
        "AND",
        "booleanFormulaManager",
        "lhs",
        "rhs",
        "OR",
        "booleanFormulaManager",
        "lhs",
        "rhs",
        "bBin",
        "getOp",
        "Override",
        "bUn",
        "inner",
        "encodeAsBoolean",
        "bUn",
        "getInner",
        "booleanFormulaManager",
        "inner",
        "Override",
        "bNonDet",
        "booleanFormulaManager",
        "makeVariable",
        "toString",
        "bNonDet",
        "hashCode",
        "Override",
        "iValue",
        "iValue",
        "getPrecision",
        "bitvectorFormulaManager",
        "makeBitvector",
        "iValue",
        "getPrecision",
        "iValue",
        "getValue",
        "integerFormulaManager",
        "makeNumber",
        "iValue",
        "getValue",
        "Override",
        "iBin",
        "lhs",
        "encodeAsInteger",
        "iBin",
        "getLHS",
        "rhs",
        "encodeAsInteger",
        "iBin",
        "getRHS",
        "lhs",
        "rhs",
        "i1",
        "lhs",
        "i2",
        "rhs",
        "bitvectorFormulaManager",
        "integerFormulaManager",
        "integerFormulaManager",
        "iBin",
        "getOp",
        "PLUS",
        "integerFormulaManager",
        "add",
        "i1",
        "i2",
        "MINUS",
        "integerFormulaManager",
        "subtract",
        "i1",
        "i2",
        "MULT",
        "integerFormulaManager",
        "multiply",
        "i1",
        "i2",
        "DIV",
        "UDIV",
        "integerFormulaManager",
        "divide",
        "i1",
        "i2",
        "MOD",
        "integerFormulaManager",
        "modulo",
        "i1",
        "i2",
        "AND",
        "bitvectorFormulaManager",
        "bitvectorFormulaManager",
        "bitvectorFormulaManager",
        "toIntegerFormula",
        "bitvectorFormulaManager",
        "bitvectorFormulaManager",
        "makeBitvector",
        "i1",
        "bitvectorFormulaManager",
        "makeBitvector",
        "i2",
        "OR",
        "bitvectorFormulaManager",
        "bitvectorFormulaManager",
        "bitvectorFormulaManager",
        "toIntegerFormula",
        "bitvectorFormulaManager",
        "bitvectorFormulaManager",
        "makeBitvector",
        "i1",
        "bitvectorFormulaManager",
        "makeBitvector",
        "i2",
        "XOR",
        "bitvectorFormulaManager",
        "bitvectorFormulaManager",
        "bitvectorFormulaManager",
        "toIntegerFormula",
        "bitvectorFormulaManager",
        "xor",
        "bitvectorFormulaManager",
        "makeBitvector",
        "i1",
        "bitvectorFormulaManager",
        "makeBitvector",
        "i2",
        "L_SHIFT",
        "bitvectorFormulaManager",
        "bitvectorFormulaManager",
        "bitvectorFormulaManager",
        "toIntegerFormula",
        "bitvectorFormulaManager",
        "shiftLeft",
        "bitvectorFormulaManager",
        "makeBitvector",
        "i1",
        "bitvectorFormulaManager",
        "makeBitvector",
        "i2",
        "R_SHIFT",
        "bitvectorFormulaManager",
        "bitvectorFormulaManager",
        "bitvectorFormulaManager",
        "toIntegerFormula",
        "bitvectorFormulaManager",
        "shiftRight",
        "bitvectorFormulaManager",
        "makeBitvector",
        "i1",
        "bitvectorFormulaManager",
        "makeBitvector",
        "i2",
        "AR_SHIFT",
        "bitvectorFormulaManager",
        "bitvectorFormulaManager",
        "bitvectorFormulaManager",
        "toIntegerFormula",
        "bitvectorFormulaManager",
        "shiftRight",
        "bitvectorFormulaManager",
        "makeBitvector",
        "i1",
        "bitvectorFormulaManager",
        "makeBitvector",
        "i2",
        "SREM",
        "UREM",
        "zero",
        "integerFormulaManager",
        "makeNumber",
        "modulo",
        "integerFormulaManager",
        "modulo",
        "i1",
        "i2",
        "cond",
        "booleanFormulaManager",
        "integerFormulaManager",
        "distinct",
        "asList",
        "modulo",
        "zero",
        "integerFormulaManager",
        "lessThan",
        "i1",
        "zero",
        "booleanFormulaManager",
        "ifThenElse",
        "cond",
        "integerFormulaManager",
        "subtract",
        "modulo",
        "i2",
        "modulo",
        "iBin",
        "getOp",
        "lhs",
        "rhs",
        "bv1",
        "lhs",
        "bv2",
        "rhs",
        "bitvectorFormulaManager",
        "bitvectorFormulaManager",
        "iBin",
        "getOp",
        "PLUS",
        "bitvectorFormulaManager",
        "add",
        "bv1",
        "bv2",
        "MINUS",
        "bitvectorFormulaManager",
        "subtract",
        "bv1",
        "bv2",
        "MULT",
        "bitvectorFormulaManager",
        "multiply",
        "bv1",
        "bv2",
        "DIV",
        "bitvectorFormulaManager",
        "divide",
        "bv1",
        "bv2",
        "UDIV",
        "bitvectorFormulaManager",
        "divide",
        "bv1",
        "bv2",
        "MOD",
        "rem",
        "bitvectorFormulaManager",
        "modulo",
        "bv1",
        "bv2",
        "rem_length",
        "bitvectorFormulaManager",
        "getLength",
        "rem",
        "bv2_length",
        "bitvectorFormulaManager",
        "getLength",
        "bv2",
        "srem",
        "bitvectorFormulaManager",
        "extract",
        "rem",
        "rem_length",
        "rem_length",
        "sbv2",
        "bitvectorFormulaManager",
        "extract",
        "bv2",
        "bv2_length",
        "bv2_length",
        "cond",
        "bitvectorFormulaManager",
        "equal",
        "srem",
        "sbv2",
        "booleanFormulaManager",
        "ifThenElse",
        "cond",
        "rem",
        "bitvectorFormulaManager",
        "negate",
        "rem",
        "SREM",
        "bitvectorFormulaManager",
        "modulo",
        "bv1",
        "bv2",
        "UREM",
        "bitvectorFormulaManager",
        "modulo",
        "bv1",
        "bv2",
        "AND",
        "bitvectorFormulaManager",
        "bv1",
        "bv2",
        "OR",
        "bitvectorFormulaManager",
        "bv1",
        "bv2",
        "XOR",
        "bitvectorFormulaManager",
        "xor",
        "bv1",
        "bv2",
        "L_SHIFT",
        "bitvectorFormulaManager",
        "shiftLeft",
        "bv1",
        "bv2",
        "R_SHIFT",
        "bitvectorFormulaManager",
        "shiftRight",
        "bv1",
        "bv2",
        "AR_SHIFT",
        "bitvectorFormulaManager",
        "shiftRight",
        "bv1",
        "bv2",
        "iBin",
        "getOp",
        "iBin",
        "getOp",
        "Override",
        "iUn",
        "inner",
        "encodeAsInteger",
        "iUn",
        "getInner",
        "inner",
        "i",
        "inner",
        "iUn",
        "getOp",
        "MINUS",
        "integerFormulaManager",
        "subtract",
        "integerFormulaManager",
        "makeNumber",
        "i",
        "BV2UINT",
        "BV2INT",
        "inner",
        "INT2BV1",
        "bitvectorFormulaManager",
        "makeBitvector",
        "i",
        "INT2BV8",
        "bitvectorFormulaManager",
        "makeBitvector",
        "i",
        "INT2BV16",
        "bitvectorFormulaManager",
        "makeBitvector",
        "i",
        "INT2BV32",
        "bitvectorFormulaManager",
        "makeBitvector",
        "i",
        "INT2BV64",
        "bitvectorFormulaManager",
        "makeBitvector",
        "i",
        "TRUNC6432",
        "TRUNC6416",
        "TRUNC3216",
        "TRUNC648",
        "TRUNC328",
        "TRUNC168",
        "TRUNC641",
        "TRUNC321",
        "TRUNC161",
        "TRUNC81",
        "ZEXT18",
        "ZEXT116",
        "ZEXT132",
        "ZEXT164",
        "ZEXT816",
        "ZEXT832",
        "ZEXT864",
        "ZEXT1632",
        "ZEXT1664",
        "ZEXT3264",
        "SEXT18",
        "SEXT116",
        "SEXT132",
        "SEXT164",
        "SEXT816",
        "SEXT832",
        "SEXT864",
        "SEXT1632",
        "SEXT1664",
        "SEXT3264",
        "inner",
        "iUn",
        "getOp",
        "bv",
        "inner",
        "bitvectorFormulaManager",
        "bitvectorFormulaManager",
        "iUn",
        "getOp",
        "MINUS",
        "bitvectorFormulaManager",
        "negate",
        "bv",
        "BV2UINT",
        "getArchPrecision",
        "bitvectorFormulaManager",
        "toIntegerFormula",
        "bv",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "getArchPrecision",
        "bitvectorFormulaManager",
        "getLength",
        "bv",
        "BV2INT",
        "getArchPrecision",
        "bitvectorFormulaManager",
        "toIntegerFormula",
        "bv",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "getArchPrecision",
        "bitvectorFormulaManager",
        "getLength",
        "bv",
        "INT2BV1",
        "INT2BV8",
        "INT2BV16",
        "INT2BV32",
        "INT2BV64",
        "inner",
        "TRUNC6432",
        "bitvectorFormulaManager",
        "extract",
        "bv",
        "TRUNC6416",
        "TRUNC3216",
        "bitvectorFormulaManager",
        "extract",
        "bv",
        "TRUNC648",
        "TRUNC328",
        "TRUNC168",
        "bitvectorFormulaManager",
        "extract",
        "bv",
        "TRUNC641",
        "TRUNC321",
        "TRUNC161",
        "TRUNC81",
        "bitvectorFormulaManager",
        "extract",
        "bv",
        "ZEXT18",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "ZEXT116",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "ZEXT132",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "ZEXT164",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "ZEXT816",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "ZEXT832",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "ZEXT864",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "ZEXT1632",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "ZEXT1664",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "ZEXT3264",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "SEXT18",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "SEXT116",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "SEXT132",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "SEXT164",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "SEXT816",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "SEXT832",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "SEXT864",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "SEXT1632",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "SEXT1664",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "SEXT3264",
        "bitvectorFormulaManager",
        "extend",
        "bv",
        "CTLZ",
        "bvLength",
        "bitvectorFormulaManager",
        "getLength",
        "bv",
        "bv1",
        "bitvectorFormulaManager",
        "makeBitvector",
        "enc",
        "bitvectorFormulaManager",
        "makeBitvector",
        "bvLength",
        "bvLength",
        "i",
        "bitvectorFormulaManager",
        "getLength",
        "bv",
        "i",
        "i",
        "bvi",
        "bitvectorFormulaManager",
        "makeBitvector",
        "bvLength",
        "i",
        "bvbit",
        "bitvectorFormulaManager",
        "extract",
        "bv",
        "bvLength",
        "i",
        "bvLength",
        "i",
        "enc",
        "booleanFormulaManager",
        "ifThenElse",
        "bitvectorFormulaManager",
        "equal",
        "bvbit",
        "bv1",
        "bvi",
        "enc",
        "enc",
        "iUn",
        "getOp",
        "Override",
        "ifExpr",
        "guard",
        "encodeAsBoolean",
        "ifExpr",
        "getGuard",
        "tBranch",
        "encodeAsInteger",
        "ifExpr",
        "getTrueBranch",
        "fBranch",
        "encodeAsInteger",
        "ifExpr",
        "getFalseBranch",
        "booleanFormulaManager",
        "ifThenElse",
        "guard",
        "tBranch",
        "fBranch",
        "Override",
        "iNonDet",
        "name",
        "toString",
        "iNonDet",
        "hashCode",
        "iNonDet",
        "getPrecision",
        "integerFormulaManager",
        "makeVariable",
        "name",
        "bitvectorFormulaManager",
        "makeVariable",
        "iNonDet",
        "getPrecision",
        "name",
        "Override",
        "reg",
        "name",
        "reg",
        "getName",
        "reg",
        "getThreadId",
        "reg",
        "getName",
        "getGlobalId",
        "reg",
        "getPrecision",
        "integerFormulaManager",
        "makeVariable",
        "name",
        "bitvectorFormulaManager",
        "makeVariable",
        "reg",
        "getPrecision",
        "name",
        "Override",
        "address",
        "address",
        "getPrecision",
        "bitvectorFormulaManager",
        "makeBitvector",
        "address",
        "getPrecision",
        "address",
        "getValue",
        "integerFormulaManager",
        "makeNumber",
        "address",
        "getValue",
        "Override",
        "location",
        "checkState",
        "location",
        "getLastMemValueExpr",
        "location",
        "getMemoryObject",
        "location",
        "getOffset",
        "formulaManager"
    ],
    "literals": [
        "\"Encoding of COpBin operation\"",
        "\" not supported on boolean formulas.\"",
        "\"Encoding not supported for COpBin: \"",
        "\" \"",
        "\" \"",
        "\"array index out of bounds\"",
        "\"last_val_at_%s_%d\"",
        "\"Encoding not supported for BOpBin \"",
        "\"Encoding of IOpBin operation \"",
        "\" not supported on integer formulas.\"",
        "\"Encoding of IOpBin operation \"",
        "\" not supported on bitvector formulas.\"",
        "\"Encoding of IOpBin operation \"",
        "\" not supported on formulas of mismatching type.\"",
        "\"Encoding of IOpUn operation \"",
        "\" not supported on integer formulas.\"",
        "\"Encoding of IOpUn operation \"",
        "\" not supported on bitvector formulas.\"",
        "\"_\"",
        "\"_final\"",
        "\"(\"",
        "\")\"",
        "\"Cannot evaluate %s at event %s.\""
    ],
    "variables": [
        "formulaManager",
        "booleanFormulaManager",
        "event",
        "one",
        "zero",
        "bitvectorFormulaManager"
    ],
    "comments": [
        "Check if rem and bv2 have the same sign",
        "If they have the same sign, return the reminder, otherwise invert it",
        "============ INT2BV ============",
        "============ TRUNC ============",
        "============ ZEXT ============",
        "============ SEXT ============",
        "TODO CTLZ. Right now we assume constant propagation got rid of such instructions",
        "============ INT2BV ============",
        "============ TRUNC ============",
        "============ ZEXT ============",
        "============ SEXT ============",
        "enc = extract(bv, 63, 63) == 1 ? 0 : (extract(bv, 62, 62) == 1 ? 1 : extract ... extract(bv, 0, 0) ? 63 : 64)"
    ],
    "docstrings": [],
    "functions": [
        "ExpressionEncoder",
        "IntegerFormulaManager",
        "integerFormulaManager",
        "BitvectorFormulaManager",
        "bitvectorFormulaManager",
        "BooleanFormula",
        "encodeAsBoolean",
        "Formula",
        "encodeAsInteger",
        "BooleanFormula",
        "encodeComparison",
        "Formula",
        "getLastMemValueExpr",
        "Formula",
        "visit",
        "Formula",
        "visit",
        "Formula",
        "visit",
        "Formula",
        "visit",
        "Formula",
        "visit",
        "Formula",
        "visit",
        "Formula",
        "visit",
        "Formula",
        "visit",
        "Formula",
        "visit",
        "Formula",
        "visit",
        "Formula",
        "visit",
        "Formula",
        "visit",
        "Formula",
        "visit"
    ],
    "classes": [
        "ExpressionEncoder"
    ]
}