{
    "identifiers": [
        "Collections",
        "Generic",
        "Diagnostics",
        "CodeAnalysis",
        "Globalization",
        "Management",
        "Automation",
        "Management",
        "Automation",
        "Runspaces",
        "Numerics",
        "Reflection",
        "Security",
        "Cryptography",
        "Threading",
        "Debug",
        "Management",
        "Automation",
        "Diagnostics",
        "Microsoft",
        "PowerShell",
        "Commands",
        "PSCmdlet",
        "MyParameterSet",
        "Unknown",
        "RandomNumber",
        "RandomListItem",
        "_effectiveParameterSet",
        "MyParameterSet",
        "Unknown",
        "MyInvocation",
        "ExpectingInput",
        "Maximum",
        "Minimum",
        "_effectiveParameterSet",
        "MyParameterSet",
        "RandomListItem",
        "ParameterSetName",
        "GetRandomCommandBase",
        "RandomListItemParameterSet",
        "ParameterSetName",
        "GetRandomCommandBase",
        "ShuffleParameterSet",
        "_effectiveParameterSet",
        "MyParameterSet",
        "RandomListItem",
        "ParameterSetName",
        "Equals",
        "GetRandomCommandBase",
        "RandomNumberParameterSet",
        "StringComparison",
        "OrdinalIgnoreCase",
        "Maximum",
        "Maximum",
        "GetType",
        "IsArray",
        "InputObject",
        "Maximum",
        "_effectiveParameterSet",
        "MyParameterSet",
        "RandomListItem",
        "_effectiveParameterSet",
        "MyParameterSet",
        "RandomNumber",
        "Debug",
        "Assert",
        "_effectiveParameterSet",
        "minValue",
        "maxValue",
        "minValue",
        "PSTraceSource",
        "NewArgumentNullException",
        "maxValue",
        "PSTraceSource",
        "NewArgumentNullException",
        "ArgumentException",
        "Format",
        "CultureInfo",
        "InvariantCulture",
        "GetRandomCommandStrings",
        "MinGreaterThanOrEqualMax",
        "minValue",
        "maxValue",
        "ErrorCategory",
        "InvalidArgument",
        "ThrowTerminatingError",
        "errorRecord",
        "PolymorphicRandomNumberGenerator",
        "sender",
        "RunspaceStateEventArgs",
        "e",
        "e",
        "RunspaceStateInfo",
        "State",
        "RunspaceState",
        "Broken",
        "RunspaceState",
        "Closed",
        "GetRandomCommandBase",
        "s_runspaceGeneratorMapLock",
        "EnterWriteLock",
        "GetRandomCommandBase",
        "s_runspaceGeneratorMap",
        "Remove",
        "MethodBase",
        "GetCurrentMethod",
        "DeclaringType",
        "Name",
        "Runspace",
        "sender",
        "InstanceId",
        "ToString",
        "GetRandomCommandBase",
        "s_runspaceGeneratorMapLock",
        "ExitWriteLock",
        "_generator",
        "Context",
        "CurrentRunspace",
        "InstanceId",
        "ToString",
        "GetRandomCommandBase",
        "s_runspaceGeneratorMapLock",
        "EnterReadLock",
        "needToInitialize",
        "GetRandomCommandBase",
        "s_runspaceGeneratorMap",
        "TryGetValue",
        "GetType",
        "Name",
        "runspaceId",
        "_generator",
        "GetRandomCommandBase",
        "s_runspaceGeneratorMapLock",
        "ExitReadLock",
        "needToInitialize",
        "Generator",
        "PolymorphicRandomNumberGenerator",
        "_generator",
        "_generator",
        "value",
        "Context",
        "CurrentRunspace",
        "GetRandomCommandBase",
        "s_runspaceGeneratorMapLock",
        "EnterWriteLock",
        "GetRandomCommandBase",
        "s_runspaceGeneratorMap",
        "ContainsKey",
        "GetType",
        "Name",
        "myRunspace",
        "InstanceId",
        "ToString",
        "myRunspace",
        "StateChanged",
        "CurrentRunspace_StateChanged",
        "GetRandomCommandBase",
        "s_runspaceGeneratorMap",
        "GetType",
        "Name",
        "myRunspace",
        "InstanceId",
        "ToString",
        "_generator",
        "GetRandomCommandBase",
        "s_runspaceGeneratorMapLock",
        "ExitWriteLock",
        "Parameter",
        "ParameterSetName",
        "RandomNumberParameterSet",
        "Position",
        "Parameter",
        "ParameterSetName",
        "RandomNumberParameterSet",
        "o",
        "o",
        "o",
        "o",
        "o",
        "o",
        "o",
        "o",
        "PSObject",
        "AsPSObject",
        "o",
        "pso",
        "BaseObject",
        "baseObject",
        "baseObject",
        "Management",
        "Automation",
        "Language",
        "Parser",
        "ScanNumber",
        "baseObject",
        "baseObject",
        "o",
        "defaultIfNull",
        "o",
        "defaultIfNull",
        "LanguagePrimitives",
        "ConvertTo",
        "o",
        "CultureInfo",
        "InvariantCulture",
        "result",
        "Parameter",
        "ParameterSetName",
        "RandomListItemParameterSet",
        "ValueFromPipeline",
        "Position",
        "Mandatory",
        "Parameter",
        "ParameterSetName",
        "ShuffleParameterSet",
        "ValueFromPipeline",
        "Position",
        "Mandatory",
        "Management",
        "Automation",
        "AllowNull",
        "SuppressMessage",
        "Parameter",
        "ParameterSetName",
        "RandomNumberParameterSet",
        "Parameter",
        "ParameterSetName",
        "RandomListItemParameterSet",
        "ValidateRange",
        "MaxValue",
        "Parameter",
        "ParameterSetName",
        "ShuffleParameterSet",
        "Mandatory",
        "minValue",
        "maxValue",
        "maxValue",
        "minValue",
        "IsInfinity",
        "diff",
        "Generator",
        "NextDouble",
        "randomNumber",
        "minValue",
        "r",
        "maxValue",
        "r",
        "minValue",
        "randomNumber",
        "maxValue",
        "Generator",
        "NextDouble",
        "randomNumber",
        "minValue",
        "r",
        "diff",
        "diff",
        "r",
        "randomNumber",
        "maxValue",
        "randomNumber",
        "minValue",
        "maxValue",
        "BigInteger",
        "maxValue",
        "BigInteger",
        "minValue",
        "bigIntegerDiff",
        "MaxValue",
        "Generator",
        "Next",
        "maxValue",
        "minValue",
        "minValue",
        "randomDiff",
        "bigIntegerDiff",
        "diffCopy",
        "bitsToRepresentDiff",
        "diffCopy",
        "bitsToRepresentDiff",
        "Generator",
        "NextBytes",
        "buffer",
        "randomUint64",
        "BitConverter",
        "ToUInt64",
        "buffer",
        "randomUint64",
        "mask",
        "uint64Diff",
        "randomUint64",
        "minValue",
        "randomUint64",
        "randomNumber",
        "EffectiveParameterSet",
        "MyParameterSet",
        "RandomNumber",
        "ProcessOperand",
        "Maximum",
        "ProcessOperand",
        "Minimum",
        "IsInt",
        "maxOperand",
        "IsInt",
        "minOperand",
        "minOperand",
        "minOperand",
        "maxOperand",
        "maxOperand",
        "MaxValue",
        "minValue",
        "maxValue",
        "ThrowMinGreaterThanOrEqualMax",
        "minValue",
        "maxValue",
        "i",
        "Count",
        "i",
        "Generator",
        "Next",
        "minValue",
        "maxValue",
        "Debug",
        "Assert",
        "minValue",
        "randomNumber",
        "Debug",
        "Assert",
        "randomNumber",
        "maxValue",
        "WriteObject",
        "randomNumber",
        "IsInt64",
        "maxOperand",
        "IsInt",
        "maxOperand",
        "IsInt64",
        "minOperand",
        "IsInt",
        "minOperand",
        "minOperand",
        "minOperand",
        "minOperand",
        "minOperand",
        "maxOperand",
        "maxOperand",
        "maxOperand",
        "maxOperand",
        "MaxValue",
        "minValue",
        "maxValue",
        "ThrowMinGreaterThanOrEqualMax",
        "minValue",
        "maxValue",
        "i",
        "Count",
        "i",
        "GetRandomInt64",
        "minValue",
        "maxValue",
        "Debug",
        "Assert",
        "minValue",
        "randomNumber",
        "Debug",
        "Assert",
        "randomNumber",
        "maxValue",
        "WriteObject",
        "randomNumber",
        "minOperand",
        "minOperand",
        "ConvertToDouble",
        "Minimum",
        "maxOperand",
        "maxOperand",
        "ConvertToDouble",
        "Maximum",
        "MaxValue",
        "minValue",
        "maxValue",
        "ThrowMinGreaterThanOrEqualMax",
        "minValue",
        "maxValue",
        "i",
        "Count",
        "i",
        "GetRandomDouble",
        "minValue",
        "maxValue",
        "Debug",
        "Assert",
        "minValue",
        "randomNumber",
        "Debug",
        "Assert",
        "randomNumber",
        "maxValue",
        "WriteObject",
        "randomNumber",
        "EffectiveParameterSet",
        "MyParameterSet",
        "RandomListItem",
        "_chosenListItems",
        "_numberOfProcessedListItems",
        "EffectiveParameterSet",
        "MyParameterSet",
        "RandomListItem",
        "ParameterSetName",
        "ShuffleParameterSet",
        "item",
        "InputObject",
        "_nullInArray",
        "_chosenListItems",
        "Add",
        "item",
        "item",
        "InputObject",
        "_nullInArray",
        "_numberOfProcessedListItems",
        "Count",
        "Debug",
        "Assert",
        "_chosenListItems",
        "Count",
        "_numberOfProcessedListItems",
        "_chosenListItems",
        "Add",
        "item",
        "Debug",
        "Assert",
        "_chosenListItems",
        "Count",
        "Count",
        "Generator",
        "Next",
        "_numberOfProcessedListItems",
        "Count",
        "Generator",
        "Next",
        "_chosenListItems",
        "Count",
        "_chosenListItems",
        "indexToReplace",
        "item",
        "_numberOfProcessedListItems",
        "EffectiveParameterSet",
        "MyParameterSet",
        "RandomListItem",
        "_chosenListItems",
        "Count",
        "i",
        "n",
        "i",
        "Generator",
        "Next",
        "i",
        "n",
        "WriteObject",
        "_chosenListItems",
        "j",
        "i",
        "j",
        "_chosenListItems",
        "j",
        "_chosenListItems",
        "i",
        "_cryptographicGenerator",
        "RandomNumberGenerator",
        "Create",
        "_pseudoGenerator",
        "seed",
        "_cryptographicGenerator",
        "_pseudoGenerator",
        "Random",
        "seed",
        "Next",
        "MaxValue",
        "randomNumber",
        "InternalSample",
        "randomNumber",
        "MaxValue",
        "randomNumber",
        "randomNumber",
        "MaxValue",
        "randomNumber",
        "maxValue",
        "maxValue",
        "ArgumentOutOfRangeException",
        "nameof",
        "maxValue",
        "GetRandomCommandStrings",
        "MaxMustBeGreaterThanZeroApi",
        "Next",
        "maxValue",
        "minValue",
        "maxValue",
        "minValue",
        "maxValue",
        "ArgumentOutOfRangeException",
        "nameof",
        "minValue",
        "GetRandomCommandStrings",
        "MinGreaterThanOrEqualMaxApi",
        "maxValue",
        "minValue",
        "MaxValue",
        "randomNumber",
        "NextDouble",
        "minValue",
        "InternalSampleLargeRange",
        "MaxValue",
        "randomNumber",
        "largeSample",
        "minValue",
        "randomNumber",
        "buffer",
        "_cryptographicGenerator",
        "_cryptographicGenerator",
        "GetBytes",
        "buffer",
        "_pseudoGenerator",
        "NextBytes",
        "buffer",
        "NextBytes",
        "data",
        "randomNumber",
        "BitConverter",
        "ToInt32",
        "data",
        "randomNumber",
        "randomNumber",
        "InternalSample",
        "randomNumber",
        "MaxValue",
        "randomNumber",
        "MaxValue",
        "randomNumber"
    ],
    "literals": [
        "\"RandomNumberParameterSet\"",
        "\"RandomListItemParameterSet\"",
        "\"ShuffleParameterSet\"",
        "\"Unrecognized parameter set\"",
        "\"min\"",
        "\"max\"",
        "\"MinGreaterThanOrEqualMax\"",
        "\"Microsoft.Performance\"",
        "\"CA1819:PropertiesShouldNotReturnArrays\"",
        "\"lower bound <= random number\"",
        "\"random number < upper bound\"",
        "\"lower bound <= random number\"",
        "\"random number < upper bound\"",
        "\"lower bound <= random number\"",
        "\"random number < upper bound\"",
        "\"Initial K elements should all be included in chosenListItems\"",
        "\"After processing K initial elements, the length of chosenItems should stay equal to K\""
    ],
    "variables": [
        "RandomNumberParameterSet",
        "RandomListItemParameterSet",
        "ShuffleParameterSet",
        "_nullInArray",
        "MyParameterSet",
        "_effectiveParameterSet",
        "MyParameterSet",
        "EffectiveParameterSet",
        "ErrorRecord",
        "errorRecord",
        "ReaderWriterLockSlim",
        "s_runspaceGeneratorMapLock",
        "s_runspaceGeneratorMap",
        "PolymorphicRandomNumberGenerator",
        "_generator",
        "PolymorphicRandomNumberGenerator",
        "Generator",
        "runspaceId",
        "needToInitialize",
        "Runspace",
        "myRunspace",
        "Maximum",
        "Minimum",
        "PSObject",
        "pso",
        "baseObject",
        "result",
        "_chosenListItems",
        "_numberOfProcessedListItems",
        "InputObject",
        "Count",
        "SwitchParameter",
        "Shuffle",
        "randomNumber",
        "diff",
        "r",
        "r",
        "buffer",
        "randomUint64",
        "BigInteger",
        "bigIntegerDiff",
        "randomDiff",
        "uint64Diff",
        "bitsToRepresentDiff",
        "diffCopy",
        "uint64Diff",
        "mask",
        "randomNumber",
        "maxOperand",
        "minOperand",
        "minValue",
        "maxValue",
        "i",
        "randomNumber",
        "minValue",
        "maxValue",
        "i",
        "randomNumber",
        "minValue",
        "maxValue",
        "i",
        "randomNumber",
        "indexToReplace",
        "n",
        "i",
        "j",
        "Random",
        "_pseudoGenerator",
        "RandomNumberGenerator",
        "_cryptographicGenerator",
        "randomNumber",
        "randomNumber",
        "largeSample",
        "randomNumber",
        "data",
        "randomNumber"
    ],
    "comments": [
        "Copyright (c) Microsoft Corporation.",
        "Licensed under the MIT License.",
        "This class implements base class for `Get-Random` and `Get-SecureRandom` cmdlets.",
        "</summary>",
        "cache MyParameterSet enum instead of doing string comparison every time",
        "1-to-1 mapping of cmdlet + runspacesId and random number generators",
        "Gets and sets generator associated with the current cmdlet and runspace.",
        "</summary>",
        "make sure we won't leave the generator around after runspace exits",
        "Gets or sets the maximum number to generate.",
        "</summary>",
        "Gets or sets the minimum number to generate.",
        "</summary>",
        "The type argument passed in does not decide the number type we want to convert to. ScanNumber will return",
        "int/long/double based on the string form number passed in.",
        "Gets or sets the list from which random elements are chosen.",
        "</summary>",
        "Gets or sets the number of items to output (number of list items or of numbers).",
        "</summary>",
        "Gets or sets whether the command should return all input objects in randomized order.",
        "</summary>",
        "I couldn't find a better fix for bug #216893 then",
        "to test and retry if a random number falls outside the bounds",
        "because of floating-point-arithmetic inaccuracies.",
        "",
        "Performance in the normal case is not impacted much.",
        "In low-precision situations we should converge to a solution quickly",
        "(diff gets smaller at a quick pace).",
        "Get a random Int64 type number.",
        "</summary>",
        "<param name=\"minValue\">Minimum value.</param>",
        "<param name=\"maxValue\">Maximum value.</param>",
        "<returns>Rnadom long.</returns>",
        "Randomly generate eight bytes and convert the byte array to UInt64",
        "When the difference is less than int.MaxValue, use Random.Next(int, int)",
        "The difference of two Int64 numbers would not exceed UInt64.MaxValue, so it can be represented by a UInt64 number.",
        "Calculate the number of bits to represent the diff in type UInt64",
        "Get the mask for the number of bits",
        "Randomly fill the buffer",
        "Get the last 'bitsToRepresentDiff' number of random bits",
        "This method implements the BeginProcessing method for derived cmdlets.",
        "</summary>",
        "rough proof that when choosing random K items out of N items",
        "each item has got K/N probability of being included in the final list",
        "",
        "probability that a particular item in chosenListItems is NOT going to be replaced",
        "when processing I-th input item [assumes I > K]:",
        "P_one_step(I) = 1 - ((K / I) * ((K - 1) / K) + ((I - K) / I) = (I - 1) / I",
        "<--A-->   <-----B----->   <-----C----->",
        "A - probability that I-th element is going to be replacing an element from chosenListItems",
        "(see (1) in the code below)",
        "B - probability that a particular element from chosenListItems is NOT going to be replaced",
        "(see (2) in the code below)",
        "C - probability that I-th element is NOT going to be replacing an element from chosenListItems",
        "(see (1) in the code below)",
        "",
        "probability that a particular item in chosenListItems is NOT going to be replaced",
        "when processing input items J through N [assumes J > K]",
        "P_removal(J) = Multiply(for I = J to N) P(I) =",
        "= ((J - 1) / J) * (J / (J + 1)) * ... * ((N - 2) / (N - 1)) * ((N - 1) / N) =",
        "= (J - 1) / N",
        "",
        "probability that when processing an element it is going to be put into chosenListItems",
        "P_insertion(I) = 1.0 when I <= K - see (3) in the code below",
        "P_insertion(I) = K/N otherwise - see (1) in the code below",
        "",
        "probability that a given element is going to be a part of the final list",
        "P_final(I)   = P_insertion(I) * P_removal(max(I + 1, K + 1))",
        "[for I <= K] = 1.0 * ((K + 1) - 1) / N = K / N",
        "[otherwise]  = (K / I) * ((I + 1) - 1) / N = K / N",
        "",
        "which proves that P_final(I) = K / N for all values of I.  QED.",
        "This method implements the ProcessRecord method for derived cmdlets.",
        "</summary>",
        "this allows for $null to be in an array passed to InputObject",
        "(3)",
        "(1)",
        "(2)",
        "This method implements the EndProcessing method for derived cmdlets.",
        "</summary>",
        "make sure the order is truly random",
        "(all permutations with the same probability)",
        "O(n) time",
        "randomly choose j from [i...n)",
        "remove the output object from consideration in the next iteration.",
        "Provides an adapter API for random numbers that may be either cryptographically random, or",
        "generated with the regular pseudo-random number generator. Re-implementations of",
        "methods using the NextBytes() primitive based on the CLR implementation:",
        "https://referencesource.microsoft.com/#mscorlib/system/random.cs.",
        "</summary>",
        "Initializes a new instance of the <see cref=\"PolymorphicRandomNumberGenerator\"/> class.",
        "</summary>",
        "Initializes a new instance of the <see cref=\"PolymorphicRandomNumberGenerator\"/> using pseudorandom generator instead of the cryptographic one.",
        "</summary>",
        "<param name=\"seed\">The seed value.</param>",
        "Generates a random floating-point number that is greater than or equal to 0.0, and less than 1.0.",
        "</summary>",
        "<returns>A random floating-point number that is greater than or equal to 0.0, and less than 1.0.</returns>",
        "According to the CLR source:",
        "\"Including this division at the end gives us significantly improved random number distribution.\"",
        "Generates a non-negative random integer.",
        "</summary>",
        "<returns>A non-negative random integer.</returns>",
        "The CLR implementation just fudges",
        "Int32.MaxValue down to (Int32.MaxValue - 1). This implementation",
        "errs on the side of correctness.",
        "Returns a random integer that is within a specified range.",
        "</summary>",
        "<param name=\"maxValue\">The exclusive upper bound of the random number returned.</param>",
        "<returns>Next random integer.</returns>",
        "Returns a random integer that is within a specified range.",
        "</summary>",
        "<param name=\"minValue\">The inclusive lower bound of the random number returned.</param>",
        "<param name=\"maxValue\">The exclusive upper bound of the random number returned. maxValue must be greater than or equal to minValue.</param>",
        "<returns>Next random integer.</returns>",
        "Fills the elements of a specified array of bytes with random numbers.",
        "</summary>",
        "<param name=\"buffer\">The array to be filled.</param>",
        "Samples a random integer.",
        "</summary>",
        "<returns>A random integer, using the full range of Int32.</returns>",
        "Samples a random int when the range is large. This does",
        "not need to be in the range of -Double.MaxValue .. Double.MaxValue,",
        "just 0.. (2 * Int32.MaxValue) - 1 .",
        "</summary>",
        "<returns>A random double.</returns>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "ThrowMinGreaterThanOrEqualMax",
        "CurrentRunspace_StateChanged",
        "IsInt",
        "IsInt64",
        "ProcessOperand",
        "ConvertToDouble",
        "GetRandomDouble",
        "GetRandomInt64",
        "BeginProcessing",
        "ProcessRecord",
        "EndProcessing",
        "PolymorphicRandomNumberGenerator",
        "PolymorphicRandomNumberGenerator",
        "NextDouble",
        "Next",
        "Next",
        "Next",
        "NextBytes",
        "InternalSample",
        "InternalSampleLargeRange"
    ],
    "classes": [
        "GetRandomCommandBase",
        "PolymorphicRandomNumberGenerator"
    ]
}