{
    "identifiers": [
        "com",
        "SkillBox",
        "users",
        "UsersApplication",
        "com",
        "SkillBox",
        "users",
        "entity",
        "Gender",
        "com",
        "SkillBox",
        "users",
        "entity",
        "Subscription",
        "com",
        "SkillBox",
        "users",
        "entity",
        "User",
        "com",
        "SkillBox",
        "users",
        "repository",
        "GenderRepository",
        "com",
        "SkillBox",
        "users",
        "repository",
        "SubscriptionRepository",
        "com",
        "SkillBox",
        "users",
        "repository",
        "UserRepository",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeEach",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "boot",
        "test",
        "autoconfigure",
        "jdbc",
        "AutoConfigureTestDatabase",
        "org",
        "springframework",
        "boot",
        "test",
        "autoconfigure",
        "web",
        "servlet",
        "AutoConfigureMockMvc",
        "org",
        "springframework",
        "boot",
        "test",
        "context",
        "SpringBootTest",
        "org",
        "springframework",
        "http",
        "MediaType",
        "org",
        "springframework",
        "test",
        "context",
        "ContextConfiguration",
        "org",
        "springframework",
        "test",
        "context",
        "DynamicPropertyRegistry",
        "org",
        "springframework",
        "test",
        "context",
        "DynamicPropertySource",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "MockMvc",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "request",
        "MockMvcRequestBuilders",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "result",
        "MockMvcResultMatchers",
        "org",
        "testcontainers",
        "containers",
        "PostgreSQLContainer",
        "org",
        "testcontainers",
        "junit",
        "jupiter",
        "Container",
        "org",
        "testcontainers",
        "junit",
        "jupiter",
        "Testcontainers",
        "java",
        "util",
        "Testcontainers",
        "disabledWithoutDocker",
        "AutoConfigureTestDatabase",
        "replace",
        "AutoConfigureTestDatabase",
        "Replace",
        "NONE",
        "AutoConfigureMockMvc",
        "SpringBootTest",
        "webEnvironment",
        "SpringBootTest",
        "WebEnvironment",
        "RANDOM_PORT",
        "ContextConfiguration",
        "classes",
        "MALE_GENDER_DESCRIPTION",
        "MALE_GENDER",
        "MALE_GENDER_DESCRIPTION",
        "Autowired",
        "mockMvc",
        "Autowired",
        "userRepository",
        "Autowired",
        "subscriptionRepository",
        "Autowired",
        "genderRepository",
        "BeforeEach",
        "userRepository",
        "deleteAll",
        "subscriptionRepository",
        "deleteAll",
        "Container",
        "postgresContainer",
        "DynamicPropertySource",
        "registry",
        "registry",
        "add",
        "postgresContainer",
        "getJdbcUrl",
        "registry",
        "add",
        "postgresContainer",
        "getUsername",
        "registry",
        "add",
        "postgresContainer",
        "getPassword",
        "Test",
        "user1",
        "getCommonUser",
        "user1",
        "setId",
        "user1",
        "setUserNickname",
        "user1",
        "setEmail",
        "user2",
        "getCommonUser",
        "user2",
        "setId",
        "user2",
        "setUserNickname",
        "user2",
        "setEmail",
        "users",
        "of",
        "user1",
        "user2",
        "subscription",
        "subscription",
        "setUserId1",
        "subscription",
        "setUserId2",
        "genderRepository",
        "save",
        "MALE_GENDER",
        "userRepository",
        "saveAll",
        "users",
        "subscriptionRepository",
        "save",
        "subscription",
        "mockMvc",
        "perform",
        "MockMvcRequestBuilders",
        "get",
        "andExpect",
        "MockMvcResultMatchers",
        "status",
        "isOk",
        "andExpect",
        "MockMvcResultMatchers",
        "content",
        "contentType",
        "MediaType",
        "APPLICATION_JSON_VALUE",
        "andExpect",
        "MockMvcResultMatchers",
        "jsonPath",
        "isArray",
        "andExpect",
        "MockMvcResultMatchers",
        "jsonPath",
        "value",
        "Test",
        "user1",
        "getCommonUser",
        "user1",
        "setId",
        "user1",
        "setUserNickname",
        "user1",
        "setEmail",
        "user2",
        "getCommonUser",
        "user2",
        "setId",
        "user2",
        "setUserNickname",
        "user2",
        "setEmail",
        "users",
        "of",
        "user1",
        "user2",
        "genderRepository",
        "save",
        "MALE_GENDER",
        "userRepository",
        "saveAll",
        "users",
        "mockMvc",
        "perform",
        "MockMvcRequestBuilders",
        "post",
        "andExpect",
        "MockMvcResultMatchers",
        "status",
        "isOk",
        "andExpect",
        "MockMvcResultMatchers",
        "content",
        "contentType",
        "MediaType",
        "APPLICATION_JSON_VALUE",
        "andExpect",
        "MockMvcResultMatchers",
        "jsonPath",
        "value",
        "andExpect",
        "MockMvcResultMatchers",
        "jsonPath",
        "value",
        "Test",
        "user1",
        "getCommonUser",
        "user1",
        "setId",
        "user1",
        "setUserNickname",
        "user1",
        "setEmail",
        "user2",
        "getCommonUser",
        "user2",
        "setId",
        "user2",
        "setUserNickname",
        "user2",
        "setEmail",
        "users",
        "of",
        "user1",
        "user2",
        "subscription",
        "subscription",
        "setUserId1",
        "subscription",
        "setUserId2",
        "genderRepository",
        "save",
        "MALE_GENDER",
        "userRepository",
        "saveAll",
        "users",
        "subscriptionRepository",
        "save",
        "subscription",
        "mockMvc",
        "perform",
        "MockMvcRequestBuilders",
        "andExpect",
        "MockMvcResultMatchers",
        "status",
        "isNoContent",
        "user",
        "user",
        "setFirstName",
        "user",
        "setLastName",
        "user",
        "setGender",
        "MALE_GENDER_DESCRIPTION",
        "user",
        "setUserNickname",
        "user",
        "setEmail",
        "user"
    ],
    "literals": [
        "\"Male\"",
        "\"spring.datasource.url\"",
        "\"spring.datasource.username\"",
        "\"spring.datasource.password\"",
        "\"some\"",
        "\"some\"",
        "\"some1\"",
        "\"some1\"",
        "\"/subscription/{userId}\"",
        "\"$\"",
        "\"$.length()\"",
        "\"some\"",
        "\"some\"",
        "\"some1\"",
        "\"some1\"",
        "\"/subscription/{userId1}/{userId2}\"",
        "\"$.userId1\"",
        "\"$.userId2\"",
        "\"some\"",
        "\"some\"",
        "\"some1\"",
        "\"some1\"",
        "\"/subscription/{userId1}/{userId2}\"",
        "\"Ivan\"",
        "\"Ivanov\"",
        "\"Ivan\"",
        "\"Ivan@.com\""
    ],
    "variables": [
        "mockMvc",
        "userRepository",
        "subscriptionRepository",
        "genderRepository"
    ],
    "comments": [
        "given",
        "when/then",
        "given",
        "when/then",
        "given",
        "when/then"
    ],
    "docstrings": [],
    "functions": [
        "cleanDB",
        "initSystemParams",
        "get_user_subscription_success",
        "create_user_subscription_success",
        "delete_user_subscription_success",
        "User",
        "getCommonUser"
    ],
    "classes": [
        "SubscriptionModuleTest"
    ]
}