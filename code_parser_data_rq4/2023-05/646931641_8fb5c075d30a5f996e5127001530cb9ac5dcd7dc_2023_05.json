{
    "identifiers": [
        "numpy",
        "np",
        "cv2",
        "dlib",
        "math",
        "sys",
        "pickle",
        "argparse",
        "os",
        "skvideo",
        "io",
        "argparse",
        "ArgumentParser",
        "ap",
        "add_argument",
        "required",
        "help",
        "ap",
        "add_argument",
        "required",
        "help",
        "ap",
        "add_argument",
        "help",
        "ap",
        "add_argument",
        "help",
        "vars",
        "ap",
        "parse_args",
        "dlib",
        "get_frontal_face_detector",
        "dlib",
        "shape_predictor",
        "predictor_path",
        "os",
        "path",
        "exists",
        "mouth_destination_path",
        "os",
        "makedirs",
        "mouth_destination_path",
        "skvideo",
        "io",
        "FFmpegReader",
        "args",
        "inputdict",
        "inputparameters",
        "outputdict",
        "outputparameters",
        "reader",
        "getShape",
        "video_shape",
        "num_frames",
        "h",
        "w",
        "c",
        "video_shape",
        "min",
        "total_num_frames",
        "max_counter",
        "cv2",
        "FONT_HERSHEY_SIMPLEX",
        "skvideo",
        "io",
        "FFmpegWriter",
        "args",
        "frame",
        "reader",
        "nextFrame",
        "frame",
        "shape",
        "counter",
        "num_frames",
        "detector",
        "frame",
        "np",
        "zeros",
        "np",
        "zeros",
        "len",
        "detections",
        "len",
        "detections",
        "k",
        "d",
        "detections",
        "predictor",
        "frame",
        "d",
        "ii",
        "shape",
        "part",
        "ii",
        "X",
        "x",
        "X",
        "y",
        "X",
        "x",
        "X",
        "y",
        "co",
        "np",
        "amin",
        "marks",
        "axis",
        "np",
        "amin",
        "marks",
        "axis",
        "np",
        "amax",
        "marks",
        "axis",
        "np",
        "amax",
        "marks",
        "axis",
        "X_left",
        "X_right",
        "Y_left",
        "Y_right",
        "X_left",
        "border",
        "Y_left",
        "border",
        "X_right",
        "border",
        "Y_right",
        "border",
        "X_right_new",
        "X_left_new",
        "Y_right_new",
        "Y_left_new",
        "X_right",
        "X_left",
        "Y_right",
        "Y_left",
        "width_crop_max",
        "height_crop_max",
        "width_new",
        "height_new",
        "width_crop_max",
        "np",
        "maximum",
        "width_current",
        "width_crop_max",
        "height_crop_max",
        "np",
        "maximum",
        "height_current",
        "height_crop_max",
        "X_center",
        "width_crop_max",
        "X_center",
        "width_crop_max",
        "Y_center",
        "height_crop_max",
        "Y_center",
        "height_crop_max",
        "X_left_crop",
        "Y_left_crop",
        "X_right_crop",
        "w",
        "Y_right_crop",
        "h",
        "frame",
        "Y_left_crop",
        "Y_right_crop",
        "X_left_crop",
        "X_right_crop",
        "cv2",
        "cvtColor",
        "mouth",
        "cv2",
        "COLOR_RGB2GRAY",
        "cv2",
        "imwrite",
        "mouth_destination_path",
        "counter",
        "mouth_gray",
        "activation",
        "append",
        "cv2",
        "putText",
        "frame",
        "font",
        "activation",
        "append",
        "cv2",
        "putText",
        "frame",
        "font",
        "activation",
        "append",
        "activation",
        "counter",
        "cv2",
        "rectangle",
        "frame",
        "X_left_crop",
        "Y_left_crop",
        "X_right_crop",
        "Y_right_crop",
        "counter",
        "num_frames",
        "counter",
        "activation",
        "counter",
        "writer",
        "writeFrame",
        "frame",
        "counter",
        "writer",
        "close",
        "os",
        "path",
        "dirname",
        "args",
        "activation",
        "open",
        "the_filename",
        "f",
        "pickle",
        "dump",
        "my_list",
        "f"
    ],
    "literals": [
        "\"-i\"",
        "\"--input\"",
        "\"path to input video file\"",
        "\"-o\"",
        "\"--output\"",
        "\"path to output video file\"",
        "\"-f\"",
        "\"--fps\"",
        "\"FPS of output video\"",
        "\"-c\"",
        "\"--codec\"",
        "\"MJPG\"",
        "\"codec of output video\"",
        "'dlib/shape_predictor_68_face_landmarks.dat'",
        "'mouth'",
        "\"input\"",
        "\"output\"",
        "'frame_shape:'",
        "'/'",
        "'frame'",
        "'_'",
        "'.png'",
        "\"The cropped mouth is detected ...\"",
        "'The full mouth is not detectable. '",
        "\"The full mouth is not detectable. ...\"",
        "'Mouth is not detectable. '",
        "\"Mouth is not detectable. ...\"",
        "'frame number %d of %d'",
        "\"writing frame %d with activation %d\"",
        "\"output\"",
        "'/'",
        "'activation'",
        "'wb'"
    ],
    "variables": [
        "ap",
        "args",
        "predictor_path",
        "detector",
        "predictor",
        "mouth_destination_path",
        "inputparameters",
        "outputparameters",
        "reader",
        "video_shape",
        "num_frames",
        "h",
        "w",
        "c",
        "activation",
        "max_counter",
        "total_num_frames",
        "num_frames",
        "counter",
        "font",
        "writer",
        "width_crop_max",
        "height_crop_max",
        "detections",
        "marks",
        "Features_Abnormal",
        "shape",
        "co",
        "X",
        "A",
        "marks",
        "co",
        "marks",
        "co",
        "X_left",
        "Y_left",
        "X_right",
        "Y_right",
        "X_center",
        "Y_center",
        "border",
        "X_left_new",
        "Y_left_new",
        "X_right_new",
        "Y_right_new",
        "width_new",
        "height_new",
        "width_current",
        "height_current",
        "width_crop_max",
        "height_crop_max",
        "X_left_crop",
        "X_right_crop",
        "Y_left_crop",
        "Y_right_crop",
        "mouth",
        "mouth_gray",
        "the_filename",
        "my_list"
    ],
    "comments": [
        "Dlib requirements.",
        "The required parameters",
        "Define the writer",
        "Required parameters for mouth extraction.",
        "Loop over all frames.",
        "Process the video and extract the frames up to a certain number and then stop processing.",
        "Detection of the frame",
        "20 mark for mouth",
        "All unnormalized face features.",
        "If the face is detected.",
        "Shape of the face.",
        "Specific for the mouth.",
        "Get the extreme points(top-left & bottom-right)",
        "Find the center of the mouth.",
        "Make a boarder for cropping.",
        "Width and height for cropping(before and after considering the border).",
        "Determine the cropping rectangle dimensions(the main purpose is to have a fixed area).",
        "# # Uncomment if the lip area is desired to be rectangular # # # #",
        "",
        "Find the cropping points(top-left and bottom-right).",
        "",
        "# # # # Uncomment if the lip area is desired to be rectangular # # # #",
        "#######################################",
        "# Use this part if the cropped area should look like a square.",
        "crop_length_max = max(width_crop_max, height_crop_max) / 2",
        "",
        "# Find the cropping points(top-left and bottom-right).",
        "X_left_crop = int(X_center - crop_length_max)",
        "X_right_crop = int(X_center + crop_length_max)",
        "Y_left_crop = int(Y_center - crop_length_max)",
        "Y_right_crop = int(Y_center + crop_length_max)",
        "",
        "Save the mouth area.",
        "Demonstration of face.",
        "cv2.imshow('frame', frame)",
        "write the output frame to file"
    ],
    "docstrings": [
        "\"\"\"\nPART1: Construct the argument parse and parse the arguments\n\"\"\"",
        "\"\"\"\nPART2: Calling and defining required parameters for:\n\n       1 - Processing video for extracting each frame.\n       2 - Lip extraction from frames.\n\"\"\"",
        "'''\nProcessing parameters.\n\n    activation: set to one if the full mouth can be extracted and set to zero otherwise.\n    max_counter: How many frames will be processed.\n    total_num_frames: Total number of frames for the video.\n    num_frames: The number of frames which are subjected to be processed.\n    counter: The frame counter.\n'''",
        "\"\"\"\nPART3: Processing the video.\n\nProcedure:\n     1 - Extracting each frame.\n     2 - Detect the mouth in the frame.\n     3 - Define a boarder around the mouth.\n     4 - Crop and save the mouth.\n\nTechnical considerations:\n     * - For the first frame the mouth is detected and by using a boarder the mouth is extracted and cropped.\n     * - After the first frame the size of the cropped windows remains fixed unless for the subsequent frames\n          a bigger windows is required. In such a case the windows size will be increased and it will be held\n          fixed again unless increasing the size becoming necessary again too.\n\"\"\"",
        "\"\"\"\n                This for loop is going over all mouth-related features.\n                X and Y coordinates are extracted and stored separately.\n                \"\"\"",
        "\"\"\"\nPART4: Save the activation vector as a list.\n\nThe python script for loading a list:\n    with open(the_filename, 'rb') as f:\n        my_list = pickle.load(f)\n\"\"\""
    ],
    "functions": [],
    "classes": []
}