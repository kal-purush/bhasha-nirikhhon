{
    "identifiers": [
        "os",
        "json",
        "flask",
        "Flask",
        "request",
        "jsonify",
        "render_template_string",
        "flask_socketio",
        "SocketIO",
        "emit",
        "dotenv",
        "load_dotenv",
        "pymongo",
        "MongoClient",
        "Flask",
        "SocketIO",
        "app",
        "load_dotenv",
        "os",
        "getenv",
        "MongoClient",
        "MONGO",
        "client",
        "get_database",
        "db",
        "os",
        "path",
        "exists",
        "DATA_FILE",
        "open",
        "DATA_FILE",
        "file",
        "json",
        "load",
        "file",
        "log",
        "open",
        "DATA_FILE",
        "file",
        "json",
        "dump",
        "log",
        "file",
        "load_user_log",
        "app",
        "route",
        "app",
        "send_static_file",
        "user_id",
        "collection",
        "find_one",
        "user_id",
        "user",
        "user",
        "e",
        "e",
        "app",
        "route",
        "methods",
        "request",
        "json",
        "data",
        "data",
        "jsonify",
        "data",
        "resolve_name",
        "user_id",
        "name",
        "user_id",
        "jsonify",
        "entry",
        "user_id",
        "entry",
        "user_log",
        "user_log",
        "insert",
        "user_id",
        "name",
        "save_user_log",
        "user_log",
        "socketio",
        "emit",
        "user_log",
        "len",
        "user_log",
        "name",
        "jsonify",
        "e",
        "jsonify",
        "e",
        "app",
        "route",
        "methods",
        "render_template_string",
        "html",
        "socketio",
        "on",
        "emit",
        "user_log",
        "len",
        "user_log",
        "socketio",
        "run",
        "app",
        "host",
        "port"
    ],
    "literals": [
        "'user_log.json'",
        "'MONGODB_URI'",
        "'test'",
        "'cfg2025'",
        "'r'",
        "'w'",
        "'/'",
        "'index.html'",
        "'userId'",
        "'name'",
        "f\"Error resolving name: {e}\"",
        "'/log_user'",
        "'POST'",
        "'qrCode'",
        "'error'",
        "'Invalid request'",
        "'qrCode'",
        "\"User not found in DB\"",
        "'error'",
        "'Could not resolve name for user ID'",
        "'user_id'",
        "'user_id'",
        "'name'",
        "'update_log'",
        "'log'",
        "'total_users'",
        "\"logged user\"",
        "'message'",
        "'User logged successfully'",
        "'error'",
        "'/log'",
        "'GET'",
        "'request_initial_log'",
        "'update_log'",
        "'log'",
        "'total_users'",
        "'__main__'",
        "'0.0.0.0'"
    ],
    "variables": [
        "app",
        "socketio",
        "DATA_FILE",
        "MONGO",
        "client",
        "db",
        "collection",
        "user_log",
        "user",
        "data",
        "user_id",
        "name",
        "html"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\n    <!DOCTYPE html>\n    <html>\n    <head>\n        <title>User Log</title>\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.6.1/socket.io.min.js\"></script>\n        <script>\n            document.addEventListener('DOMContentLoaded', () => {\n                const socket = io();\n\n                // Request initial log data on connection\n                socket.on('connect', () => {\n                    socket.emit('request_initial_log');\n                });\n\n                socket.on('update_log', (data) => {\n                    document.getElementById('total-users').textContent = data.total_users;\n                    const logDiv = document.getElementById('log');\n                    logDiv.innerHTML = '';\n                    data.log.forEach(entry => {\n                        const p = document.createElement('p');\n                        p.textContent = `${entry.name}`;\n                        logDiv.appendChild(p);\n                    });\n                });\n            });\n        </script>\n    </head>\n    <body>\n        <h1>Checked-In Users</h1>\n        <p><strong>Total Users:</strong> <span id=\"total-users\">0</span></p>\n        <p><strong>Log (Most Recent to Oldest):</strong></p>\n        <div id=\"log\">No users checked in yet.</div>\n    </body>\n    </html>\n    \"\"\""
    ],
    "functions": [
        "load_user_log",
        "save_user_log",
        "index",
        "resolve_name",
        "log_user",
        "display_log",
        "handle_initial_log_request"
    ],
    "classes": []
}