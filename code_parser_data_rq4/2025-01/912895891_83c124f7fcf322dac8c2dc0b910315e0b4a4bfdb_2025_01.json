{
    "identifiers": [
        "org",
        "photonvision",
        "jni",
        "edu",
        "wpi",
        "first",
        "util",
        "RawFrame",
        "edu",
        "wpi",
        "first",
        "util",
        "TimestampSource",
        "sink",
        "framePtr",
        "timeout",
        "lastFrameTime",
        "rawFramePtr",
        "rawFramePtr",
        "frame",
        "TimestampSource",
        "getFromInt",
        "getTimestampSourceNative",
        "frame",
        "getNativeObj"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Copyright (C) Photon Vision.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.",
        "* Fill {@param framePtr} with the latest image from the source this sink is connected to.\n     *\n     * <p>If lastFrameTime is provided and non-zero, the sink will fill image with the first frame\n     * from the source that is not equal to lastFrameTime. If lastFrameTime is zero, the time of the\n     * current frame owned by the CvSource is used, and this function will block until the connected\n     * CvSource provides a new frame.\n     *\n     * @param sink Sink handle.\n     * @param framePtr Pointer to a wpi::RawFrame.\n     * @param timeout Timeout in seconds.\n     * @param lastFrameTime Timestamp of the last frame - used to compare new frames against.\n     * @return Frame time, in uS, of the incoming frame.",
        "* Wrap the data owned by a RawFrame in a cv::Mat\n     *\n     * @param rawFramePtr\n     * @return pointer to a cv::Mat"
    ],
    "functions": [
        "grabRawSinkFrameTimeoutLastTime",
        "wrapRawFrame",
        "getTimestampSourceNative",
        "TimestampSource",
        "getTimestampSource"
    ],
    "classes": [
        "CscoreExtras"
    ]
}