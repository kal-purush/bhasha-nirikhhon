{
    "identifiers": [
        "numCourses",
        "prerequisites",
        "adj",
        "i",
        "i",
        "numCourses",
        "i",
        "adj",
        "add",
        "indegree",
        "numCourses",
        "p",
        "prerequisites",
        "u",
        "p",
        "v",
        "p",
        "adj",
        "get",
        "u",
        "add",
        "v",
        "indegree",
        "v",
        "queue",
        "i",
        "i",
        "numCourses",
        "i",
        "indegree",
        "i",
        "queue",
        "add",
        "i",
        "topo",
        "queue",
        "isEmpty",
        "c",
        "queue",
        "poll",
        "topo",
        "add",
        "c",
        "nei",
        "adj",
        "get",
        "c",
        "indegree",
        "nei",
        "indegree",
        "nei",
        "queue",
        "add",
        "nei",
        "topo",
        "size",
        "numCourses"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "Basically implementing the topological sort on this, if there is a topological order then it's a true else false",
        "Algorithm:",
        "1. Form a graph",
        "2. Calculate the indegree of nodes",
        "3. Initialize the queue with the nodes with indegreee asa 0"
    ],
    "docstrings": [
        "Process the queue"
    ],
    "functions": [
        "canFinish"
    ],
    "classes": [
        "Solution"
    ]
}