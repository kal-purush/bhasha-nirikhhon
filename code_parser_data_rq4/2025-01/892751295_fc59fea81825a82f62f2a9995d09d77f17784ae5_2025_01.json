{
    "identifiers": [
        "get",
        "post",
        "put",
        "JmmApiResponse",
        "toast",
        "InvalidateQueryFilters",
        "useMutation",
        "UseMutationResult",
        "useQueryClient",
        "filterPayload",
        "payload",
        "payload",
        "value",
        "value",
        "fetchIndividualTasklist",
        "payload",
        "filterPayload",
        "payload",
        "get",
        "filteredPayload",
        "res",
        "res",
        "res",
        "res",
        "error",
        "error",
        "error",
        "fetchSingleIndividualTasklist",
        "id",
        "get",
        "res",
        "res",
        "res",
        "error",
        "error",
        "error",
        "action",
        "createIndividualTasklist",
        "payload",
        "onSuccess",
        "action",
        "post",
        "payload",
        "res",
        "toast",
        "onSuccess",
        "e",
        "e",
        "useCreateIndividualTasklist",
        "useQueryClient",
        "useMutation",
        "createIndividualTasklist",
        "payload",
        "onSuccess",
        "queryClient",
        "error",
        "toast",
        "error",
        "updateIndividualTasklist",
        "payload",
        "onSuccess",
        "action",
        "put",
        "payload",
        "res",
        "onSuccess",
        "e",
        "e",
        "useUpdateIndividualTasklist",
        "useQueryClient",
        "useMutation",
        "updateIndividualTasklist",
        "payload",
        "onSuccess",
        "queryClient",
        "toast",
        "error",
        "toast",
        "error"
    ],
    "literals": [
        "'sr/utils/axios/index'",
        "'./contant'",
        "'react-toastify'",
        "'@tanstack/react-query'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "/individual/tasklist",
        "'No results found'",
        "Failed to fetch : ${error instanceof Error ? error.message : 'Unknown error'}",
        "'Unknown error'",
        "string",
        "/individual/tasklist",
        "'No results found'",
        "Failed to fetch : ${error instanceof Error ? error.message : 'Unknown error'}",
        "'Unknown error'",
        "string",
        "string",
        "string",
        "string",
        "/individual/tasklist",
        "'Individual Tasklist Created Successfully'",
        "'create'",
        "'Create failed'",
        "'individualTasklist'",
        "string",
        "string",
        "/individual/tasklist",
        "'update'",
        "'Update failed'",
        "'individualTasklist'",
        "'Individual Tasklist Updated Successfully'"
    ],
    "variables": [
        "filterPayload",
        "_",
        "value",
        "fetchIndividualTasklist",
        "filteredPayload",
        "res",
        "fetchSingleIndividualTasklist",
        "res",
        "createIndividualTasklist",
        "res",
        "useCreateIndividualTasklist",
        "queryClient",
        "updateIndividualTasklist",
        "res",
        "useUpdateIndividualTasklist",
        "queryClient"
    ],
    "comments": [
        "Return the fetched data",
        "Handle the case where results are not present",
        "Throw the error to be handled by the caller",
        "Return the fetched data",
        "Handle the case where results are not present",
        "Throw the error to be handled by the caller",
        "The useMutation hook with correct typing",
        "The type of the data returned on success",
        "The type of the error that could be thrown",
        "The type of the variables passed to the mutation",
        "Define the function with correct typing",
        "The useMutation hook with correct typing",
        "The type of the data returned on success",
        "The type of the error that could be thrown",
        "The type of the variables passed to the mutation"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}