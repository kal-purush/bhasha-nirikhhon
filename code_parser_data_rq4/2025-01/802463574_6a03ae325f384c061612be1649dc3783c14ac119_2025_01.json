{
    "identifiers": [
        "annotations",
        "dataclasses",
        "dataclass",
        "PyQt5",
        "QtCore",
        "QRectF",
        "Qt",
        "pyqtProperty",
        "PyQt5",
        "QtGui",
        "QColor",
        "QFont",
        "QFontMetrics",
        "QPainter",
        "QPainterPath",
        "QPalette",
        "PyQt5",
        "QtWidgets",
        "QLineEdit",
        "siui",
        "core",
        "createPainter",
        "siui",
        "core",
        "animation",
        "SiExpAnimationRefactor",
        "siui",
        "gui",
        "SiFont",
        "siui",
        "typing",
        "T_WidgetParent",
        "dataclass",
        "QColor",
        "QColor",
        "QColor",
        "QColor",
        "QColor",
        "QColor",
        "QColor",
        "QColor",
        "QColor",
        "QColor",
        "QColor",
        "QColor",
        "QColor",
        "QColor",
        "QColor",
        "QColor",
        "QColor",
        "QColor",
        "QLineEdit",
        "parent",
        "T_WidgetParent",
        "title",
        "parent",
        "LineEditStyleData",
        "SiFont",
        "getFont",
        "size",
        "title",
        "style_data",
        "title_color_idle",
        "style_data",
        "text_indicator_color_idle",
        "SiExpAnimationRefactor",
        "Property",
        "TitleColor",
        "title_color_ani",
        "init",
        "_title_color",
        "_title_color",
        "SiExpAnimationRefactor",
        "Property",
        "TextIndicatorColor",
        "text_indicator_color_ani",
        "init",
        "_text_indi_color",
        "_text_indi_color",
        "SiExpAnimationRefactor",
        "Property",
        "TextIndicatorWidth",
        "text_indicator_color_ani",
        "init",
        "setFont",
        "SiFont",
        "getFont",
        "size",
        "_initStyleSheet",
        "textChanged",
        "connect",
        "_onTextEdited",
        "returnPressed",
        "connect",
        "_onReturnPressed",
        "setStyleSheet",
        "style_data",
        "text_color",
        "name",
        "_title_width",
        "pyqtProperty",
        "QColor",
        "_title_color",
        "titleColor",
        "setter",
        "value",
        "QColor",
        "value",
        "update",
        "pyqtProperty",
        "_text_bg_width_progress",
        "textBackgroundWidthProgress",
        "setter",
        "value",
        "value",
        "update",
        "pyqtProperty",
        "QColor",
        "_text_indi_color",
        "textIndicatorColor",
        "setter",
        "value",
        "QColor",
        "value",
        "update",
        "pyqtProperty",
        "_text_indi_width",
        "textIndicatorWidth",
        "setter",
        "value",
        "value",
        "update",
        "_title",
        "title",
        "title",
        "update",
        "_title_width",
        "width",
        "width",
        "_initStyleSheet",
        "update",
        "text_indicator_color_ani",
        "setEndValue",
        "style_data",
        "text_indicator_color_error",
        "text_indicator_color_ani",
        "start",
        "title_color_ani",
        "setEndValue",
        "style_data",
        "title_color_error",
        "title_color_ani",
        "start",
        "text_indicator_width_ani",
        "setEndValue",
        "width",
        "_title_width",
        "text_indicator_width_ani",
        "start",
        "text",
        "QFontMetrics",
        "font",
        "QRectF",
        "_title_width",
        "width",
        "_title_width",
        "height",
        "min",
        "metric",
        "boundingRect",
        "text",
        "width",
        "text_rect",
        "width",
        "text_indicator_width_ani",
        "setEndValue",
        "width",
        "text_indicator_width_ani",
        "start",
        "widget",
        "parent",
        "findChildren",
        "QLineEdit",
        "widget",
        "x",
        "x",
        "widget",
        "y",
        "y",
        "target",
        "widget",
        "widget",
        "x",
        "target",
        "x",
        "widget",
        "y",
        "target",
        "y",
        "widget",
        "target",
        "target",
        "setFocus",
        "clearFocus",
        "rect",
        "QRectF",
        "QPainterPath",
        "QPainterPath",
        "path",
        "addRoundedRect",
        "rect",
        "path",
        "painter",
        "QPainter",
        "rect",
        "QRectF",
        "style_data",
        "QRectF",
        "rect",
        "x",
        "rect",
        "y",
        "rect",
        "width",
        "rect",
        "height",
        "painter",
        "setBrush",
        "sd",
        "title_background_color",
        "painter",
        "drawPath",
        "_drawTitleBackgroundPath",
        "rect",
        "painter",
        "setPen",
        "_title_color",
        "painter",
        "setFont",
        "_title_font",
        "painter",
        "drawText",
        "painter",
        "boundingRect",
        "text_rect",
        "Qt",
        "AlignVCenter",
        "Qt",
        "AlignLeft",
        "_title",
        "_title",
        "painter",
        "setPen",
        "Qt",
        "NoPen",
        "rect",
        "QRectF",
        "QPainterPath",
        "QPainterPath",
        "path",
        "addRoundedRect",
        "rect",
        "path",
        "rect",
        "QRectF",
        "QPainterPath",
        "QRectF",
        "rect",
        "x",
        "rect",
        "y",
        "_text_indi_width",
        "QPainterPath",
        "path",
        "addRoundedRect",
        "indi_rect",
        "path",
        "painter",
        "QPainter",
        "rect",
        "QRectF",
        "style_data",
        "painter",
        "setBrush",
        "sd",
        "text_background_color",
        "painter",
        "drawPath",
        "_drawTextBackgroundPath",
        "rect",
        "painter",
        "setBrush",
        "_text_indi_color",
        "painter",
        "drawPath",
        "_drawTextIndicatorPath",
        "rect",
        "a0",
        "QRectF",
        "width",
        "height",
        "QRectF",
        "_title_width",
        "width",
        "_title_width",
        "height",
        "QPainter",
        "RenderHint",
        "SmoothPixmapTransform",
        "QPainter",
        "RenderHint",
        "TextAntialiasing",
        "QPainter",
        "RenderHint",
        "Antialiasing",
        "createPainter",
        "renderHints",
        "painter",
        "_drawTitleRect",
        "painter",
        "title_rect",
        "_drawTextRect",
        "painter",
        "text_rect",
        "paintEvent",
        "a0",
        "a0",
        "focusInEvent",
        "a0",
        "text_indicator_color_ani",
        "setEndValue",
        "style_data",
        "text_indicator_color_editing",
        "text_indicator_color_ani",
        "start",
        "title_color_ani",
        "setEndValue",
        "style_data",
        "title_color_focused",
        "title_color_ani",
        "start",
        "_onTextEdited",
        "text",
        "a0",
        "focusOutEvent",
        "a0",
        "text_indicator_color_ani",
        "setEndValue",
        "style_data",
        "text_indicator_color_idle",
        "text_indicator_color_ani",
        "start",
        "title_color_ani",
        "setEndValue",
        "style_data",
        "title_color_idle",
        "title_color_ani",
        "start",
        "_onTextEdited"
    ],
    "literals": [
        "\"Slider\"",
        "\"#28252d\"",
        "\"#918497\"",
        "\"#D1CBD4\"",
        "\"#b27b84\"",
        "\"#201d23\"",
        "\"#D1CBD4\"",
        "\"#00A681BF\"",
        "\"#A681BF\"",
        "\"#d36764\"",
        "\"titleColor\"",
        "\"textIndicatorColor\"",
        "\"textIndicatorWidth\"",
        "\"Untitled Edit Box\"",
        "\"QLineEdit {\"",
        "\"     selection-background-color: #493F4E;\"",
        "\"     background-color: transparent;\"",
        "f\"    color: {self.style_data.text_color.name()};\"",
        "\"     border: 0px;\"",
        "f\"    padding-left: {self._title_width + 18}px;\"",
        "\"     padding-right: 18px;\"",
        "\"     padding-bottom: 1px;\"",
        "\"}\"",
        "\"\""
    ],
    "variables": [
        "STYLE_TYPES",
        "title_background_color",
        "title_color_idle",
        "title_color_focused",
        "title_color_error",
        "text_background_color",
        "text_color",
        "text_indicator_color_idle",
        "text_indicator_color_editing",
        "text_indicator_color_error",
        "TitleColor",
        "TextIndicatorColor",
        "TextIndicatorWidth",
        "style_data",
        "_title_font",
        "_title",
        "_title_width",
        "_title_color",
        "_text_indi_color",
        "_text_indi_width",
        "_text_bg_width_progress",
        "title_color_ani",
        "text_indicator_color_ani",
        "text_indicator_width_ani",
        "_title_color",
        "_text_bg_width_progress",
        "_text_indi_color",
        "_text_indi_width",
        "_title",
        "_title_width",
        "metric",
        "text_rect",
        "width",
        "target",
        "target",
        "target",
        "path",
        "sd",
        "text_rect",
        "path",
        "indi_rect",
        "path",
        "sd",
        "title_rect",
        "text_rect",
        "renderHints"
    ],
    "comments": [
        "find the nearest edit box and give focus to it."
    ],
    "docstrings": [],
    "functions": [
        "_initStyleSheet",
        "titleColor",
        "titleColor",
        "textBackgroundWidthProgress",
        "textBackgroundWidthProgress",
        "textIndicatorColor",
        "textIndicatorColor",
        "textIndicatorWidth",
        "textIndicatorWidth",
        "title",
        "setTitle",
        "titleWidth",
        "setTitleWidth",
        "notifyInvalidInput",
        "_onTextEdited",
        "_onReturnPressed",
        "_drawTitleBackgroundPath",
        "_drawTitleRect",
        "_drawTextBackgroundPath",
        "_drawTextIndicatorPath",
        "_drawTextRect",
        "paintEvent",
        "focusInEvent",
        "focusOutEvent"
    ],
    "classes": [
        "LineEditStyleData",
        "SiLineEdit",
        "Property"
    ]
}