{
    "identifiers": [
        "isNativeError",
        "httpErrors",
        "LoggingError",
        "toLoggingError",
        "FastifyBaseLogger",
        "isHttpError",
        "Pool",
        "PoolClient",
        "EmailTransport",
        "ServiceError",
        "utils",
        "getProfileSdk",
        "ProfileSdkFacade",
        "getUserProfiles",
        "MessagingEventLogger",
        "MessagingEventType",
        "newMessagingEventLogger",
        "JobTypes",
        "getPrimaryProvider",
        "EmailProvider",
        "SmsProvider",
        "SmsTransport",
        "executeJob",
        "newMessagingEventLogger",
        "setJobAsRunning",
        "job",
        "JobTypes",
        "processMessageJob",
        "job",
        "pool",
        "client",
        "client",
        "job",
        "statusDelivered",
        "job",
        "jobStatusResult",
        "jobResult",
        "eventLogger",
        "MessagingEventType",
        "httpErrors",
        "eventLogger",
        "MessagingEventType",
        "jobResult",
        "jobResult",
        "statusWorking",
        "httpErrors",
        "client",
        "statusWorking",
        "job",
        "runningJob",
        "updateResult",
        "runningJob",
        "httpErrors",
        "client",
        "err",
        "client",
        "eventLogger",
        "MessagingEventType",
        "isHttpError",
        "err",
        "err",
        "httpErrors",
        "err",
        "client",
        "runningJob",
        "runningJob",
        "eventLogger",
        "MessagingEventType",
        "runningJob",
        "httpErrors",
        "runningJob",
        "runningJob",
        "deliverMessage",
        "job",
        "job",
        "job",
        "job",
        "updateJobStatus",
        "pool",
        "getMessageToDeliver",
        "sendMessageToTransports",
        "err",
        "transportErrors",
        "logger",
        "err",
        "err",
        "transportErrors",
        "err",
        "err",
        "firstError",
        "loggingError",
        "toLoggingError",
        "httpErrors",
        "firstError",
        "loggingError",
        "eventLogger",
        "MessagingEventType",
        "jobId",
        "loggingError",
        "err",
        "toLoggingError",
        "httpErrors",
        "err",
        "client",
        "client",
        "messageId",
        "row",
        "messageUpdateQueryResult",
        "row",
        "attachmentIds",
        "row",
        "messageData",
        "messageData",
        "row",
        "row",
        "row",
        "row",
        "row",
        "messageData",
        "httpErrors",
        "messageId",
        "messageData",
        "attachmentIds",
        "attachmentIds",
        "messageData",
        "pool",
        "client",
        "deliveryError",
        "client",
        "statusFailed",
        "job",
        "job",
        "setMessageAsDelivered",
        "job",
        "job",
        "client",
        "err",
        "client",
        "err",
        "client",
        "messageId",
        "messageUpdateQueryResult",
        "httpErrors",
        "messageId",
        "client",
        "statusDelivered",
        "messageId",
        "messageData",
        "getProfileSdk",
        "logger",
        "organizationId",
        "ids",
        "getUserProfiles",
        "ids",
        "client",
        "ProfileSdkFacade",
        "profileSdk",
        "messageSdk",
        "profileService",
        "recipientUserId",
        "data",
        "user",
        "httpErrors",
        "transport",
        "messageData",
        "transport",
        "user",
        "eventLogger",
        "MessagingEventType",
        "partialSuccessCount",
        "messageData",
        "eventLogger",
        "MessagingEventType",
        "partialSuccessCount",
        "provider",
        "getPrimaryProvider",
        "organizationId",
        "provider",
        "eventLogger",
        "MessagingEventType",
        "partialSuccessCount",
        "_e",
        "eventLogger",
        "MessagingEventType",
        "partialSuccessCount",
        "EmailTransport",
        "provider",
        "mailTransport",
        "user",
        "messageData",
        "fullSuccessCount",
        "err",
        "eventLogger",
        "MessagingEventType",
        "err",
        "errors",
        "recipientUserId",
        "messageData",
        "messageData",
        "transport",
        "user",
        "eventLogger",
        "MessagingEventType",
        "partialSuccessCount",
        "messageData",
        "messageData",
        "eventLogger",
        "MessagingEventType",
        "partialSuccessCount",
        "provider",
        "getPrimaryProvider",
        "organizationId",
        "provider",
        "eventLogger",
        "MessagingEventType",
        "partialSuccessCount",
        "_e",
        "eventLogger",
        "MessagingEventType",
        "partialSuccessCount",
        "SmsTransport",
        "provider",
        "smsTranport",
        "messageData",
        "user",
        "fullSuccessCount",
        "err",
        "eventLogger",
        "MessagingEventType",
        "utils",
        "err",
        "err",
        "errors",
        "recipientUserId",
        "messageData",
        "messageData",
        "err",
        "errors",
        "isNativeError",
        "err",
        "err",
        "fullSuccessCount",
        "partialSuccessCount",
        "messageData",
        "errors",
        "errors",
        "httpErrors",
        "errors"
    ],
    "literals": [
        "\"node:util/types\"",
        "\"@fastify/sensible\"",
        "\"@ogcio/fastify-logging-wrapper\"",
        "\"fastify\"",
        "\"http-errors\"",
        "\"pg\"",
        "\"../providers/email/email-transport.js\"",
        "\"../../utils.js\"",
        "\"../../utils/authentication-factory.js\"",
        "\"../users/shared-users.js\"",
        "\"../messages/event-logger.js\"",
        "\"../../types/jobs.js\"",
        "\"../providers/provider-service.js\"",
        "\"../../types/providers.js\"",
        "\"../providers/sms/sms-transport.js\"",
        "\"pending\"",
        "\"working\"",
        "\"failed\"",
        "\"delivered\"",
        "\"working\"",
        "\"delivered\"",
        "\"failed\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"Job has unrecognized type\"",
        "string",
        "string",
        "\"BEGIN\"",
        "string",
        "string",
        "SELECT\n          coalesce(delivery_status, 'pending') as \"status\",\n          job_id as \"entityId\",\n          organisation_id as \"organizationId\"\n        FROM jobs WHERE id = $1\n        AND case when delivery_status is not null then delivery_status != $2 else true end\n        AND job_token = $3",
        "\"\"",
        "\"job doesn't exist\"",
        "\"job is already in progress\"",
        "UPDATE jobs SET delivery_status = $1\n        WHERE id = $2\n        returning \n        user_id as \"userId\",\n        job_type as \"type\",\n        job_id as \"jobId\",\n        organisation_id as \"organizationId\"",
        "\"Not able to find job to update\"",
        "\"COMMIT\"",
        "\"ROLLBACK\"",
        "\"\"",
        "\"Failed fetching/updating job\"",
        "\"\"",
        "job row with id ${runningJob.jobId} missing critical fields",
        "string",
        "string",
        "string",
        "string",
        "\"Error sending message\"",
        "string",
        "string",
        "string",
        "SELECT \n    m.preferred_transports AS \"transports\",\n    m.excerpt,\n    m.subject,\n    CASE \n        WHEN m.rich_text <> '' THEN m.rich_text \n        ELSE m.plain_text \n    END AS \"body\",\n    aid.attachment_id AS \"attachmentId\"\n    FROM messages m\n    LEFT JOIN (\n        SELECT attachment_id, message_id \n        FROM attachments_messages\n    ) aid\n    ON m.id = aid.message_id\n    WHERE m.id = $1;",
        "failed to find message for id ${messageId}",
        "string",
        "string",
        "\"BEGIN\"",
        "UPDATE jobs SET delivery_status = $1\n          WHERE job_id = $2 AND user_id = $3",
        "\"COMMIT\"",
        "\"ROLLBACK\"",
        "string",
        "string",
        "string",
        "UPDATE messages m set \n      is_delivered = true,\n      updated_at = now()\n    WHERE m.id = $1",
        "failed to find message for id ${messageId}",
        "UPDATE jobs SET delivery_status = $1\n      WHERE job_id = $2 AND user_id = $3",
        "string",
        "string",
        "string",
        "string",
        "\"no user profile found\"",
        "\"email\"",
        "\"noEmail\"",
        "\"noSubject\"",
        "string",
        "\"email\"",
        "\"noProvider\"",
        "\"noProvider\"",
        "\"failedToSend\"",
        "\"failed to send email\"",
        "\"sms\"",
        "\"noPhone\"",
        "\"missingContent\"",
        "\"sms\"",
        "\"noProvider\"",
        "\"noProvider\"",
        "\"failed to send sms\"",
        "\"failed to externally transport message\"",
        "\"Not been able to send to any transport\"",
        "\"Message has not been sent anywhere\""
    ],
    "variables": [
        "statusWorking",
        "statusDelivered",
        "statusFailed",
        "executeJob",
        "eventLogger",
        "job",
        "client",
        "runningJob",
        "jobStatusResult",
        "jobResult",
        "updateResult",
        "deliveryError",
        "client",
        "messageData",
        "transportErrors",
        "firstError",
        "loggingError",
        "messageUpdateQueryResult",
        "messageData",
        "attachmentIds",
        "client",
        "messageUpdateQueryResult",
        "errors",
        "partialSuccessCount",
        "fullSuccessCount",
        "profileSdk",
        "messageSdk",
        "profileService",
        "user",
        "providerId",
        "provider",
        "mailTransport",
        "provider",
        "smsTranport",
        "msg"
    ],
    "comments": [
        "job id error field?",
        "job id error field?",
        "The update won't be applied until the COMMIT query is run"
    ],
    "docstrings": [],
    "functions": [
        "setJobAsRunning",
        "processMessageJob",
        "deliverMessage",
        "getMessageToDeliver",
        "updateJobStatus",
        "setMessageAsDelivered",
        "sendMessageToTransports",
        "selectUsers"
    ],
    "classes": []
}