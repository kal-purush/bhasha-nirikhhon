{
    "identifiers": [
        "hexToRgb",
        "isValidHexString",
        "rgbComponentsToString",
        "DesignTokens",
        "generateContrastColors",
        "backgroundColor",
        "odysseyDesignTokens",
        "isValidHexString",
        "backgroundColor",
        "hexToRgb",
        "backgroundColor",
        "hexToRgb",
        "odysseyDesignTokens",
        "red",
        "green",
        "blue",
        "luminance",
        "LUMINANCE_EDGE_MIN",
        "luminance",
        "LUMINANCE_EDGE_MAX",
        "luminance",
        "LUMINANCE_THRESHOLD",
        "luminanceValueInEdgeRange",
        "BLACK_FONT_COLOR",
        "isLight",
        "odysseyDesignTokens",
        "WHITE_FONT_COLOR",
        "hexToRgb",
        "fontColor",
        "hexToRgb",
        "WHITE_FONT_COLOR",
        "hexToRgb",
        "luminanceValueInEdgeRange",
        "BLACK_FONT_COLOR",
        "odysseyDesignTokens",
        "rgbComponentsToString",
        "calculatedFontColorInRgb",
        "calculatedFontColorInRgb",
        "calculatedFontColorInRgb",
        "rgbComponentsToString",
        "lightFontColorInRgb",
        "lightFontColorInRgb",
        "lightFontColorInRgb",
        "rgbComponentsToString",
        "darkFontColorInRgb",
        "darkFontColorInRgb",
        "darkFontColorInRgb",
        "luminanceValueInEdgeRange",
        "isLight",
        "getHighlightColor",
        "luminanceValueInEdgeRange",
        "isLight",
        "luminanceValueInEdgeRange",
        "isLight",
        "darkFontRgbComponentsString",
        "lightFontRgbComponentsString",
        "calculatedFontRgbComponentsString",
        "calculatedFontRgbComponentsString",
        "calculatedFontRgbComponentsString",
        "getHighlightColor",
        "luminanceValueInEdgeRange",
        "isLight",
        "getHighlightColor",
        "luminanceValueInEdgeRange",
        "isLight"
    ],
    "literals": [
        "\"./hexToRgb\"",
        "\"./OdysseyDesignTokensContext\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"#000000\"",
        "\"#FFFFFF\"",
        "string",
        "string",
        "rgba(${calculatedFontRgbComponentsString}, .8)",
        "rgba(${calculatedFontRgbComponentsString}, .4)",
        "rgba(${getHighlightColor(luminanceValueInEdgeRange, isLight)}, .1)",
        "rgba(${getHighlightColor(luminanceValueInEdgeRange, isLight)}, .15)"
    ],
    "variables": [
        "LUMINANCE_THRESHOLD",
        "LUMINANCE_EDGE_MIN",
        "LUMINANCE_EDGE_MAX",
        "BLACK_FONT_COLOR",
        "WHITE_FONT_COLOR",
        "generateContrastColors",
        "rgbFromHex",
        "rgbFromHex",
        "luminance",
        "luminanceValueInEdgeRange",
        "isLight",
        "fontColor",
        "calculatedFontColorInRgb",
        "lightFontColorInRgb",
        "darkFontColorInRgb",
        "calculatedFontRgbComponentsString",
        "lightFontRgbComponentsString",
        "darkFontRgbComponentsString",
        "getHighlightColor"
    ],
    "comments": [
        "!\n * Copyright (c) 2022-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.",
        "128 is a magic number. This feels like roughly where we should switch from dark to light.",
        "Convert hex to RGB",
        "Calculate relative luminance",
        "@see https://contrastchecker.online/color-relative-luminance-calculator#:~:text=For%20the%20sRGB%20colorspace%2C%20the,%2B0.055)%2F1.055)%20%5E%202.4",
        "returns a number between 0(black) and 255(white)",
        "Luminance values between LUMINANCE_EDGE_MIN-LUMINANCE_EDGE_MAX can cause contrast ration issues",
        "Using #000000 helps in these cases",
        "Determine if the color is light or dark."
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}