{
    "identifiers": [
        "networkx",
        "nx",
        "json",
        "networkx",
        "readwrite",
        "json_graph",
        "tqdm",
        "tqdm",
        "data",
        "nx",
        "DiGraph",
        "key",
        "value",
        "tqdm",
        "data",
        "items",
        "value",
        "value",
        "G",
        "add_edge",
        "citing_id",
        "refid",
        "G",
        "open",
        "encoding",
        "f",
        "json",
        "load",
        "f",
        "len",
        "context_data",
        "build_citation_network",
        "context_data",
        "json_graph",
        "node_link_data",
        "citation_network",
        "citation_network",
        "number_of_nodes",
        "open",
        "outfile",
        "json",
        "dump",
        "network_data",
        "outfile"
    ],
    "literals": [
        "\"citing_id\"",
        "\"refid\"",
        "'refseer/contexts.json'",
        "'r'",
        "'utf-8'",
        "'refseer/citation_network.json'",
        "'w'"
    ],
    "variables": [
        "G",
        "citing_id",
        "refid",
        "context_data",
        "citation_network",
        "network_data"
    ],
    "comments": [
        "def build_citation_network(citations):",
        "G = nx.DiGraph()",
        "for citation in tqdm(citations):",
        "citing_paper = citation[\"context_id\"].split('_')[0]",
        "cited_paper = citation[\"positive_ids\"][0]",
        "G.add_edge(citing_paper, cited_paper)",
        "return G",
        "with open('arxiv/train.json', 'r', encoding='utf-8') as f:",
        "train_data = json.load(f)",
        "print(len(train_data))",
        "with open('arxiv/val.json', 'r', encoding='utf-8') as f:",
        "val_data = json.load(f)",
        "print(len(val_data))",
        "with open('arxiv/test.json', 'r', encoding='utf-8') as f:",
        "test_data = json.load(f)",
        "print(len(test_data))",
        "data = train_data + val_data + test_data"
    ],
    "docstrings": [],
    "functions": [
        "build_citation_network"
    ],
    "classes": []
}