{
    "identifiers": [
        "describe",
        "it",
        "expect",
        "vi",
        "afterEach",
        "createSentryInstance",
        "setTelemetryDataOnScope",
        "safeFlushTelemetry",
        "telemetryPlugin",
        "Client",
        "Scope",
        "NormalizedOptions",
        "vi",
        "vi",
        "vi",
        "mocks",
        "afterEach",
        "vi",
        "describe",
        "describe",
        "it",
        "createSentryInstance",
        "expect",
        "sentryClient",
        "expect",
        "sentryScope",
        "it",
        "createSentryInstance",
        "expect",
        "sentryClient",
        "expect",
        "sentryScope",
        "describe",
        "it",
        "vi",
        "setTelemetryDataOnScope",
        "options",
        "pluginInfo",
        "scope",
        "expect",
        "scope",
        "expect",
        "scope",
        "expect",
        "scope",
        "expect",
        "scope",
        "expect",
        "scope",
        "expect",
        "scope",
        "it",
        "vi",
        "setTelemetryDataOnScope",
        "options",
        "pluginInfo",
        "scope",
        "expect",
        "scope",
        "describe",
        "it",
        "vi",
        "safeFlushTelemetry",
        "client",
        "expect",
        "client",
        "it",
        "vi",
        "expect",
        "safeFlushTelemetry",
        "client",
        "describe",
        "it",
        "vi",
        "vi",
        "vi",
        "client",
        "telemetryPlugin",
        "client",
        "scope",
        "plugin",
        "expect",
        "mocks",
        "expect",
        "client",
        "it",
        "vi",
        "telemetryPlugin",
        "client",
        "scope",
        "plugin",
        "expect",
        "mocks",
        "expect",
        "client"
    ],
    "literals": [
        "\"vitest\"",
        "\"../telemetry\"",
        "\"@sentry/core\"",
        "\"../../utils/normalizeOptions\"",
        "\"../../utils/logging\"",
        "\"telemetry\"",
        "\"createSentryInstance\"",
        "\"creates instance with telemetry enabled\"",
        "\"test-plugin\"",
        "\"1.0.0\"",
        "\"test-bundler\"",
        "\"creates instance with telemetry disabled\"",
        "\"test-plugin\"",
        "\"1.0.0\"",
        "\"test-bundler\"",
        "\"setTelemetryDataOnScope\"",
        "\"sets correct tags for token auth\"",
        "\"some-token\"",
        "\"github\"",
        "\"test-plugin\"",
        "\"1.0.0\"",
        "\"test-bundler\"",
        "\"none\"",
        "\"auth_mode\"",
        "\"token\"",
        "\"git_service\"",
        "\"github\"",
        "\"plugin.name\"",
        "\"test-plugin\"",
        "\"plugin.version\"",
        "\"1.0.0\"",
        "\"bundler\"",
        "\"test-bundler\"",
        "\"meta_framework\"",
        "\"none\"",
        "\"sets correct tags for github OIDC auth\"",
        "\"test-plugin\"",
        "\"1.0.0\"",
        "\"test-bundler\"",
        "\"none\"",
        "\"auth_mode\"",
        "\"github-oidc\"",
        "\"safeFlushTelemetry\"",
        "\"handles successful flush\"",
        "\"handles failed flush without throwing\"",
        "\"Flush failed\"",
        "\"telemetryPlugin\"",
        "\"logs message and starts span when telemetry enabled\"",
        "\"Sending telemetry data on issues and performance to Codecov. To disable telemetry, set `options.telemetry` to `false`.\"",
        "\"does not log message or start span when telemetry disabled\""
    ],
    "variables": [
        "mocks",
        "scope",
        "options",
        "pluginInfo",
        "scope",
        "options",
        "pluginInfo",
        "client",
        "client",
        "client",
        "scope",
        "plugin",
        "client",
        "scope",
        "plugin"
    ],
    "comments": [
        "eslint-disable-next-line @typescript-eslint/unbound-method",
        "eslint-disable-next-line @typescript-eslint/unbound-method",
        "eslint-disable-next-line @typescript-eslint/unbound-method",
        "eslint-disable-next-line @typescript-eslint/unbound-method",
        "eslint-disable-next-line @typescript-eslint/unbound-method",
        "eslint-disable-next-line @typescript-eslint/unbound-method",
        "eslint-disable-next-line @typescript-eslint/unbound-method",
        "eslint-disable-next-line @typescript-eslint/unbound-method",
        "@ts-expect-error: buildStart is not defined in the type",
        "eslint-disable-next-line @typescript-eslint/unbound-method",
        "@ts-expect-error: buildStart is not defined in the type",
        "eslint-disable-next-line @typescript-eslint/unbound-method"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}