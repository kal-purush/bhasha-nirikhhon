{
    "identifiers": [
        "require",
        "require",
        "require",
        "express",
        "process",
        "app",
        "express",
        "app",
        "req",
        "res",
        "req",
        "bcrypt",
        "password",
        "users",
        "hashedPassword",
        "res",
        "app",
        "req",
        "res",
        "req",
        "users",
        "u",
        "u",
        "username",
        "user",
        "bcrypt",
        "password",
        "user",
        "res",
        "jwt",
        "SECRET_KEY",
        "res",
        "authMiddleware",
        "req",
        "res",
        "next",
        "req",
        "token",
        "res",
        "jwt",
        "token",
        "SECRET_KEY",
        "req",
        "decoded",
        "next",
        "err",
        "res",
        "app",
        "authMiddleware",
        "req",
        "res",
        "res",
        "req",
        "app",
        "PORT",
        "PORT"
    ],
    "literals": [
        "'express'",
        "'jsonwebtoken'",
        "'bcryptjs'",
        "'my_secret_key'",
        "'/register'",
        "'User registered successfully'",
        "'/login'",
        "'Invalid credentials'",
        "'1h'",
        "' '",
        "'Unauthorized'",
        "'token not valid or expired'",
        "'/profile'",
        "Welcome on your profile, ${req.user.username}",
        "Server running on port ${PORT}"
    ],
    "variables": [
        "express",
        "jwt",
        "bcrypt",
        "app",
        "PORT",
        "SECRET_KEY",
        "users",
        "hashedPassword",
        "user",
        "token",
        "authMiddleware",
        "token",
        "decoded"
    ],
    "comments": [
        "Esempio: Sistema di Autenticazione con Token JWT (json web token)",
        "register",
        "Login",
        "Genera token JWT",
        "middleware protect private routs",
        "private protected route",
        "start server"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}