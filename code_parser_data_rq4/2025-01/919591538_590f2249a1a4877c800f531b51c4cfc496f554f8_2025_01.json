{
    "identifiers": [
        "asyncio",
        "fastapi",
        "FastAPI",
        "File",
        "UploadFile",
        "HTTPException",
        "BackgroundTasks",
        "Header",
        "Depends",
        "Query",
        "fastapi",
        "responses",
        "FileResponse",
        "fastapi",
        "middleware",
        "cors",
        "CORSMiddleware",
        "logging",
        "os",
        "shutil",
        "time",
        "models",
        "TaskResponse",
        "StatusResponse",
        "transcriber",
        "Transcriber",
        "config",
        "SOURCE_FOLDER",
        "RESULT_FOLDER",
        "auth",
        "check_token",
        "FastAPI",
        "app",
        "add_middleware",
        "CORSMiddleware",
        "allow_origins",
        "allow_credentials",
        "allow_methods",
        "allow_headers",
        "Transcriber",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "INFO",
        "format",
        "logging",
        "getLogger",
        "app",
        "post",
        "response_model",
        "TaskResponse",
        "background_tasks",
        "BackgroundTasks",
        "file",
        "UploadFile",
        "File",
        "diarize",
        "Query",
        "description",
        "authenticated",
        "Depends",
        "check_token",
        "TaskResponse",
        "time",
        "time",
        "logger",
        "info",
        "file",
        "filename",
        "diarize",
        "transcriber",
        "create_task",
        "os",
        "path",
        "join",
        "SOURCE_FOLDER",
        "task_id",
        "file",
        "filename",
        "open",
        "file_path",
        "buffer",
        "shutil",
        "copyfileobj",
        "file",
        "file",
        "buffer",
        "logger",
        "info",
        "file_path",
        "transcriber",
        "set_task_data",
        "task_id",
        "status",
        "upload_progress",
        "background_tasks",
        "add_task",
        "transcriber",
        "process_file",
        "task_id",
        "file_path",
        "diarize",
        "time",
        "time",
        "logger",
        "info",
        "task_id",
        "end_time",
        "start_time",
        "TaskResponse",
        "task_id",
        "task_id",
        "message",
        "e",
        "logger",
        "error",
        "task_id",
        "e",
        "exc_info",
        "transcriber",
        "set_task_data",
        "task_id",
        "status",
        "error",
        "e",
        "HTTPException",
        "status_code",
        "detail",
        "e",
        "app",
        "get",
        "response_model",
        "StatusResponse",
        "task_id",
        "authenticated",
        "Depends",
        "check_token",
        "StatusResponse",
        "logger",
        "info",
        "task_id",
        "transcriber",
        "get_task_status",
        "task_id",
        "status",
        "logger",
        "warning",
        "task_id",
        "HTTPException",
        "status_code",
        "detail",
        "logger",
        "info",
        "task_id",
        "status",
        "status",
        "app",
        "get",
        "task_id",
        "authenticated",
        "Depends",
        "check_token",
        "logger",
        "info",
        "task_id",
        "transcriber",
        "get_task_status",
        "task_id",
        "status",
        "logger",
        "warning",
        "task_id",
        "HTTPException",
        "status_code",
        "detail",
        "status",
        "status",
        "logger",
        "warning",
        "task_id",
        "status",
        "status",
        "HTTPException",
        "status_code",
        "detail",
        "task_id",
        "task_id",
        "os",
        "path",
        "join",
        "RESULT_FOLDER",
        "file_name",
        "os",
        "path",
        "exists",
        "file_path",
        "logger",
        "error",
        "task_id",
        "HTTPException",
        "status_code",
        "detail",
        "logger",
        "info",
        "task_id",
        "file_path",
        "FileResponse",
        "path",
        "file_path",
        "filename",
        "file_name",
        "media_type",
        "uvicorn",
        "logger",
        "info",
        "uvicorn",
        "run",
        "app",
        "host",
        "port"
    ],
    "literals": [
        "\"*\"",
        "\"*\"",
        "\"*\"",
        "'%(asctime)s - %(levelname)s - [%(filename)s:%(lineno)d] - %(message)s'",
        "\"/start_transcribing\"",
        "\"Enable diarization\"",
        "f\"Starting transcription for file: {file.filename}, diarization: {diarize}\"",
        "f\"{task_id}_{file.filename}\"",
        "\"wb\"",
        "f\"File saved: {file_path}\"",
        "'UPLOADING'",
        "f\"Task {task_id} created and started processing in {end_time - start_time:.2f} seconds\"",
        "\"Task processing started\"",
        "f\"Error in start_transcribing for task {task_id}: {str(e)}\"",
        "'ERROR'",
        "\"/get_status\"",
        "f\"Getting status for task: {task_id}\"",
        "f\"Task not found: {task_id}\"",
        "\"Task not found\"",
        "f\"Status for task {task_id}: {status}\"",
        "\"/get_file\"",
        "f\"Getting file for task: {task_id}\"",
        "f\"Task not found: {task_id}\"",
        "\"Task not found\"",
        "'READY'",
        "f\"Task {task_id} is not ready. Current status: {status.status}\"",
        "f'Transcribing by task \"{task_id}\" is not ready'",
        "f\"{task_id}_result.txt\"",
        "f\"Result file not found for task {task_id}\"",
        "\"Result file not found\"",
        "f\"Returning file for task {task_id}: {file_path}\"",
        "'text/plain'",
        "\"__main__\"",
        "\"Starting the application\"",
        "\"0.0.0.0\""
    ],
    "variables": [
        "app",
        "transcriber",
        "logger",
        "start_time",
        "task_id",
        "file_path",
        "end_time",
        "status",
        "status",
        "file_name",
        "file_path"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "start_transcribing",
        "get_status",
        "get_file"
    ],
    "classes": []
}