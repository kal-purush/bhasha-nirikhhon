{
    "identifiers": [
        "os",
        "aiohttp",
        "web",
        "logging",
        "unittest",
        "mock",
        "MagicMock",
        "patch",
        "asyncio",
        "random",
        "cbpi",
        "api",
        "aiohttp",
        "web",
        "cbpi",
        "api",
        "re",
        "time",
        "json",
        "cbpi",
        "api",
        "config",
        "ConfigType",
        "cbpi",
        "api",
        "dataclasses",
        "DataType",
        "mysql",
        "connector",
        "datetime",
        "json",
        "JSONEncoder",
        "pandas",
        "DataFrame",
        "logging",
        "getLogger",
        "JSONEncoder",
        "obj",
        "isinstance",
        "obj",
        "datetime",
        "date",
        "datetime",
        "datetime",
        "obj",
        "isoformat",
        "CBPiExtension",
        "cbpi",
        "cbpi",
        "asyncio",
        "create_task",
        "init_config",
        "parametercheck",
        "sql_connection",
        "cbpi",
        "plugin",
        "load_plugin_list",
        "plugin",
        "get",
        "plugin",
        "get",
        "cbpi",
        "config",
        "get",
        "name",
        "iSpindle_config",
        "parametercheck",
        "asyncio",
        "sleep",
        "spindle_SQL",
        "mysql",
        "connector",
        "connect",
        "user",
        "spindle_SQL_USER",
        "port",
        "spindle_SQL_PORT",
        "password",
        "spindle_SQL_PASSWORD",
        "host",
        "spindle_SQL_HOST",
        "database",
        "spindle_SQL_DB",
        "cnx",
        "cursor",
        "cur",
        "execute",
        "sqlselect",
        "cur",
        "fetchone",
        "results",
        "logger",
        "warning",
        "ver",
        "ver",
        "logger",
        "error",
        "spindledata",
        "spindle_SQL",
        "spindle_SQL_HOST",
        "spindle_SQL_DB",
        "spindle_SQL_TABLE",
        "spindle_SQL_USER",
        "spindle_SQL_PASSWORD",
        "spindle_SQL_PORT",
        "parametercheck",
        "cbpi",
        "config",
        "get",
        "spindledata",
        "logger",
        "warning",
        "cbpi",
        "config",
        "add",
        "ConfigType",
        "SELECT",
        "description",
        "source",
        "name",
        "options",
        "cbpi",
        "config",
        "get",
        "logger",
        "warning",
        "iSpindle_update",
        "iSpindle_update",
        "version",
        "cbpi",
        "config",
        "add",
        "spindledata",
        "ConfigType",
        "SELECT",
        "description",
        "source",
        "name",
        "options",
        "logger",
        "warning",
        "cbpi",
        "config",
        "get",
        "spindle_SQL",
        "logger",
        "warning",
        "cbpi",
        "config",
        "add",
        "ConfigType",
        "SELECT",
        "description",
        "source",
        "name",
        "options",
        "cbpi",
        "config",
        "get",
        "logger",
        "warning",
        "iSpindle_update",
        "iSpindle_update",
        "version",
        "cbpi",
        "config",
        "add",
        "spindle_SQL",
        "ConfigType",
        "SELECT",
        "description",
        "source",
        "name",
        "options",
        "logger",
        "warning",
        "cbpi",
        "config",
        "get",
        "spindle_SQL_HOST",
        "logger",
        "warning",
        "cbpi",
        "config",
        "add",
        "ConfigType",
        "STRING",
        "description",
        "source",
        "name",
        "cbpi",
        "config",
        "get",
        "logger",
        "warning",
        "iSpindle_update",
        "iSpindle_update",
        "version",
        "cbpi",
        "config",
        "add",
        "spindle_SQL_HOST",
        "ConfigType",
        "STRING",
        "description",
        "source",
        "name",
        "logger",
        "warning",
        "cbpi",
        "config",
        "get",
        "spindle_SQL_DB",
        "logger",
        "warning",
        "cbpi",
        "config",
        "add",
        "ConfigType",
        "STRING",
        "description",
        "source",
        "name",
        "cbpi",
        "config",
        "get",
        "logger",
        "warning",
        "iSpindle_update",
        "iSpindle_update",
        "version",
        "cbpi",
        "config",
        "add",
        "spindle_SQL_DB",
        "ConfigType",
        "STRING",
        "description",
        "source",
        "name",
        "logger",
        "warning",
        "cbpi",
        "config",
        "get",
        "spindle_SQL_TABLE",
        "logger",
        "warning",
        "cbpi",
        "config",
        "add",
        "ConfigType",
        "STRING",
        "description",
        "source",
        "name",
        "cbpi",
        "config",
        "get",
        "logger",
        "warning",
        "iSpindle_update",
        "iSpindle_update",
        "version",
        "cbpi",
        "config",
        "add",
        "spindle_SQL_TABLE",
        "ConfigType",
        "STRING",
        "description",
        "source",
        "name",
        "logger",
        "warning",
        "cbpi",
        "config",
        "get",
        "spindle_SQL_USER",
        "logger",
        "warning",
        "cbpi",
        "config",
        "add",
        "ConfigType",
        "STRING",
        "description",
        "source",
        "name",
        "cbpi",
        "config",
        "get",
        "logger",
        "warning",
        "iSpindle_update",
        "iSpindle_update",
        "version",
        "cbpi",
        "config",
        "add",
        "spindle_SQL_USER",
        "ConfigType",
        "STRING",
        "description",
        "source",
        "name",
        "logger",
        "warning",
        "cbpi",
        "config",
        "get",
        "spindle_SQL_PASSWORD",
        "logger",
        "warning",
        "cbpi",
        "config",
        "add",
        "ConfigType",
        "STRING",
        "description",
        "source",
        "name",
        "cbpi",
        "config",
        "get",
        "logger",
        "warning",
        "iSpindle_update",
        "iSpindle_update",
        "version",
        "cbpi",
        "config",
        "add",
        "spindle_SQL_PASSWORD",
        "ConfigType",
        "STRING",
        "description",
        "source",
        "name",
        "logger",
        "warning",
        "cbpi",
        "config",
        "get",
        "spindle_SQL_PORT",
        "logger",
        "warning",
        "cbpi",
        "config",
        "add",
        "ConfigType",
        "NUMBER",
        "description",
        "source",
        "name",
        "cbpi",
        "config",
        "get",
        "logger",
        "warning",
        "iSpindle_update",
        "iSpindle_update",
        "version",
        "cbpi",
        "config",
        "add",
        "spindle_SQL_PORT",
        "ConfigType",
        "NUMBER",
        "description",
        "source",
        "name",
        "logger",
        "warning",
        "iSpindle_update",
        "iSpindle_update",
        "version",
        "cbpi",
        "config",
        "add",
        "name",
        "version",
        "ConfigType",
        "STRING",
        "description",
        "source",
        "e",
        "logger",
        "warning",
        "logger",
        "warning",
        "e",
        "polynom",
        "tilt",
        "unitsGravity",
        "unitsGravity",
        "tilt",
        "eval",
        "polynom",
        "round",
        "result",
        "rounddec",
        "result",
        "parameters",
        "Property",
        "Text",
        "label",
        "configurable",
        "description",
        "Property",
        "Select",
        "options",
        "description",
        "Property",
        "Text",
        "label",
        "configurable",
        "description",
        "Property",
        "Select",
        "options",
        "description",
        "Property",
        "Sensor",
        "description",
        "CBPiSensor",
        "cbpi",
        "id",
        "props",
        "iSpindle",
        "cbpi",
        "id",
        "props",
        "props",
        "get",
        "props",
        "get",
        "props",
        "get",
        "DataType",
        "DATETIME",
        "props",
        "get",
        "DataType",
        "VALUE",
        "props",
        "get",
        "get_config_value",
        "props",
        "get",
        "props",
        "Units",
        "props",
        "get",
        "props",
        "get",
        "cache",
        "fermenter_temp",
        "props",
        "get",
        "running",
        "cache",
        "key",
        "time_old",
        "cache",
        "key",
        "props",
        "get",
        "calcGravity",
        "Polynomial",
        "cache",
        "key",
        "props",
        "get",
        "props",
        "get",
        "cache",
        "key",
        "cache",
        "key",
        "props",
        "Type",
        "log_data",
        "value",
        "push_update",
        "value",
        "push_update",
        "value",
        "e",
        "asyncio",
        "sleep",
        "value",
        "value",
        "CBPiExtension",
        "cbpi",
        "re",
        "compile",
        "cbpi",
        "SensorController",
        "cbpi",
        "sensor",
        "cbpi",
        "register",
        "get_spindle_sensor",
        "request_mapping",
        "path",
        "method",
        "auth_required",
        "request",
        "time",
        "cache",
        "request",
        "json",
        "e",
        "e",
        "logging",
        "info",
        "data",
        "time",
        "time",
        "data",
        "round",
        "data",
        "data",
        "data",
        "data",
        "time",
        "temp",
        "angle",
        "battery",
        "rssi",
        "request_mapping",
        "path",
        "method",
        "auth_required",
        "request",
        "request",
        "match_info",
        "get_spindle_sensor",
        "SpindleID",
        "sensor_value",
        "web",
        "json_response",
        "data",
        "data",
        "iSpindleID",
        "sensor_controller",
        "get_state",
        "id",
        "sensor",
        "id",
        "id",
        "name",
        "iSpindleID",
        "id",
        "sensor",
        "sensor",
        "cbpi",
        "sensor",
        "get_sensor_value",
        "sensor",
        "get",
        "sensor_value",
        "request_mapping",
        "path",
        "method",
        "auth_required",
        "request",
        "get_archive_list",
        "web",
        "json_response",
        "data",
        "data",
        "format",
        "ORDER",
        "mysql",
        "connector",
        "connect",
        "user",
        "spindle_SQL_USER",
        "port",
        "spindle_SQL_PORT",
        "password",
        "spindle_SQL_PASSWORD",
        "host",
        "spindle_SQL_HOST",
        "database",
        "spindle_SQL_DB",
        "cnx",
        "cursor",
        "cur",
        "execute",
        "archive_sql",
        "column",
        "column",
        "cur",
        "description",
        "columns",
        "row",
        "row",
        "cur",
        "fetchall",
        "results",
        "request_mapping",
        "path",
        "method",
        "auth_required",
        "request",
        "get_diagram_list",
        "web",
        "json_response",
        "data",
        "data",
        "results",
        "request_mapping",
        "path",
        "method",
        "auth_required",
        "request",
        "request",
        "match_info",
        "get_archive_header_data",
        "ArchiveID",
        "web",
        "json_response",
        "data",
        "header_data",
        "ArchiveID",
        "mysql",
        "connector",
        "connect",
        "user",
        "spindle_SQL_USER",
        "port",
        "spindle_SQL_PORT",
        "password",
        "spindle_SQL_PASSWORD",
        "host",
        "spindle_SQL_HOST",
        "database",
        "spindle_SQL_DB",
        "cnx",
        "cursor",
        "format",
        "ArchiveID",
        "cur",
        "execute",
        "archive_sql",
        "column",
        "column",
        "cur",
        "description",
        "columns",
        "row",
        "row",
        "cur",
        "fetchall",
        "result_archive",
        "result_archive",
        "result_archive",
        "result_archive",
        "result_archive",
        "result_archive",
        "result_archive",
        "result_archive",
        "result_archive",
        "const0",
        "format",
        "const1",
        "const2",
        "const3",
        "format",
        "const0",
        "const1",
        "const2",
        "const3",
        "End_date",
        "format",
        "ArchiveID",
        "cur",
        "execute",
        "get_end_date_sql",
        "column",
        "column",
        "cur",
        "description",
        "columns",
        "row",
        "row",
        "cur",
        "fetchall",
        "result_end_date",
        "format",
        "ArchiveID",
        "cur",
        "execute",
        "check_RID_END",
        "column",
        "column",
        "cur",
        "description",
        "columns",
        "row",
        "row",
        "cur",
        "fetchall",
        "len",
        "result_RID_END",
        "result_RID_END",
        "format",
        "ArchiveID",
        "ArchiveID",
        "ArchiveID",
        "format",
        "where_sql",
        "cur",
        "execute",
        "sql_select",
        "column",
        "column",
        "cur",
        "description",
        "columns",
        "row",
        "row",
        "cur",
        "fetchall",
        "len",
        "result_angle",
        "result_angle",
        "round",
        "const0",
        "initial_angle",
        "const1",
        "initial_angle",
        "const2",
        "initial_angle",
        "const3",
        "format",
        "ArchiveID",
        "End_date",
        "ArchiveID",
        "End_date",
        "format",
        "where_sql",
        "cur",
        "execute",
        "sql_select",
        "column",
        "column",
        "cur",
        "description",
        "columns",
        "row",
        "row",
        "cur",
        "fetchall",
        "len",
        "result_angle",
        "result_angle",
        "round",
        "const0",
        "final_angle",
        "const1",
        "final_angle",
        "const2",
        "final_angle",
        "const3",
        "round",
        "initial_gravity",
        "final_gravity",
        "initial_gravity",
        "initial_gravity",
        "final_gravity",
        "real_gravity",
        "initial_gravity",
        "initial_gravity",
        "round",
        "alcohol_by_weight",
        "fromkeys",
        "Spindle_Name",
        "Batch",
        "Recipe",
        "Start_date",
        "strftime",
        "End_date",
        "strftime",
        "RID_END",
        "const0",
        "const1",
        "const2",
        "const3",
        "forumla",
        "initial_gravity",
        "final_gravity",
        "attenuation",
        "alcohol_by_volume",
        "ArchiveID",
        "archive_header",
        "request_mapping",
        "path",
        "method",
        "auth_required",
        "request",
        "request",
        "json",
        "get_all_archive_values",
        "data",
        "web",
        "json_response",
        "data",
        "result",
        "data",
        "data",
        "get",
        "data",
        "get",
        "data",
        "get",
        "data",
        "get",
        "data",
        "get",
        "data",
        "get",
        "data",
        "get",
        "data",
        "get",
        "data",
        "get",
        "RID_END",
        "format",
        "ArchiveID",
        "Const0",
        "Const1",
        "Const2",
        "Const3",
        "Initial_Gravity",
        "Const0",
        "Const1",
        "Const2",
        "Const3",
        "Initial_Gravity",
        "Initial_Gravity",
        "Const0",
        "Const1",
        "Const2",
        "Const3",
        "Initial_Gravity",
        "Initial_Gravity",
        "ArchiveID",
        "AND_SQL",
        "mysql",
        "connector",
        "connect",
        "user",
        "spindle_SQL_USER",
        "port",
        "spindle_SQL_PORT",
        "password",
        "spindle_SQL_PASSWORD",
        "host",
        "spindle_SQL_HOST",
        "database",
        "spindle_SQL_DB",
        "cnx",
        "cursor",
        "cur",
        "execute",
        "sql_select",
        "DataFrame",
        "cur",
        "fetchall",
        "column",
        "column",
        "cur",
        "description",
        "columns",
        "df",
        "set_index",
        "inplace",
        "df",
        "index",
        "tolist",
        "col",
        "df",
        "columns",
        "df",
        "col",
        "tolist",
        "data",
        "request_mapping",
        "path",
        "method",
        "auth_required",
        "request",
        "request",
        "match_info",
        "removearchiveflag",
        "ArchiveID",
        "web",
        "json_response",
        "status",
        "ArchiveID",
        "mysql",
        "connector",
        "connect",
        "user",
        "spindle_SQL_USER",
        "port",
        "spindle_SQL_PORT",
        "password",
        "spindle_SQL_PASSWORD",
        "host",
        "spindle_SQL_HOST",
        "database",
        "spindle_SQL_DB",
        "cnx",
        "cursor",
        "format",
        "ArchiveID",
        "cur",
        "execute",
        "sql_update",
        "cnx",
        "commit",
        "request_mapping",
        "path",
        "method",
        "auth_required",
        "request",
        "request",
        "match_info",
        "round",
        "request",
        "match_info",
        "addarchiveflag",
        "ArchiveID",
        "Timestamp",
        "web",
        "json_response",
        "status",
        "ArchiveID",
        "Timestamp",
        "mysql",
        "connector",
        "connect",
        "user",
        "spindle_SQL_USER",
        "port",
        "spindle_SQL_PORT",
        "password",
        "spindle_SQL_PASSWORD",
        "host",
        "spindle_SQL_HOST",
        "database",
        "spindle_SQL_DB",
        "cnx",
        "cursor",
        "format",
        "ArchiveID",
        "Timestamp",
        "cur",
        "execute",
        "sql_update",
        "cnx",
        "commit",
        "request_mapping",
        "path",
        "method",
        "auth_required",
        "request",
        "request",
        "match_info",
        "deletearchivefromdatabase",
        "ArchiveID",
        "web",
        "json_response",
        "status",
        "ArchiveID",
        "mysql",
        "connector",
        "connect",
        "user",
        "spindle_SQL_USER",
        "port",
        "spindle_SQL_PORT",
        "password",
        "spindle_SQL_PASSWORD",
        "host",
        "spindle_SQL_HOST",
        "database",
        "spindle_SQL_DB",
        "cnx",
        "cursor",
        "format",
        "ArchiveID",
        "format",
        "ArchiveID",
        "cur",
        "execute",
        "sql_delete1",
        "cur",
        "execute",
        "sql_delete2",
        "cnx",
        "commit",
        "cbpi",
        "cbpi",
        "plugin",
        "register",
        "iSpindle",
        "cbpi",
        "plugin",
        "register",
        "iSpindleEndpoint",
        "cbpi",
        "plugin",
        "register",
        "iSpindleConfig"
    ],
    "literals": [
        "\"cbpi4-iSpindle\"",
        "\"Version\"",
        "\"0.0.0\"",
        "\"Name\"",
        "\"cbpi4-iSPindle\"",
        "\"0.0.0\"",
        "\"craftbeerpi\"",
        "\"_update\"",
        "\"Yes\"",
        "\"SELECT VERSION()\"",
        "\"MySQL connection available. MySQL version: %s\"",
        "\"MySQL connection failed\"",
        "\"spindledata\"",
        "\"INIT Spindledata extra page in UI\"",
        "\"spindledata\"",
        "\"No\"",
        "\"Enable extra page for spindledata in ui\"",
        "\"label\"",
        "\"No\"",
        "\"value\"",
        "\"No\"",
        "\"label\"",
        "\"Yes\"",
        "\"value\"",
        "\"Yes\"",
        "\"spindledata\"",
        "\"No\"",
        "'Unable to update database'",
        "\"spindledata\"",
        "\"Enable extra page for spindledata in ui\"",
        "\"label\"",
        "\"No\"",
        "\"value\"",
        "\"No\"",
        "\"label\"",
        "\"Yes\"",
        "\"value\"",
        "\"Yes\"",
        "'Unable to update database'",
        "\"spindle_SQL\"",
        "\"INIT Spindle database select for transfer\"",
        "\"spindle_SQL\"",
        "\"No\"",
        "\"Enable transfer of Spindle data to SQL database\"",
        "\"label\"",
        "\"No\"",
        "\"value\"",
        "\"No\"",
        "\"label\"",
        "\"Yes\"",
        "\"value\"",
        "\"Yes\"",
        "\"spindle_SQL\"",
        "\"No\"",
        "'Unable to update database'",
        "\"spindle_SQL\"",
        "\"Enable transfer of Spindle data to SQL database\"",
        "\"label\"",
        "\"No\"",
        "\"value\"",
        "\"No\"",
        "\"label\"",
        "\"Yes\"",
        "\"value\"",
        "\"Yes\"",
        "'Unable to update database'",
        "\"spindle_SQL_HOST\"",
        "\"INIT Spindle database host name\"",
        "\"spindle_SQL_HOST\"",
        "\"\"",
        "\"SQL database host. e.g: localhost or IP address\"",
        "\"spindle_SQL_HOST\"",
        "\"\"",
        "'Unable to update database'",
        "\"spindle_SQL_HOST\"",
        "\"SQL database host. e.g: localhost or IP address\"",
        "'Unable to update database'",
        "\"spindle_SQL_DB\"",
        "\"INIT Spindle Database Name\"",
        "\"spindle_SQL_DB\"",
        "\"\"",
        "\"SQL database name\"",
        "\"spindle_SQL_DB\"",
        "\"\"",
        "'Unable to update database'",
        "\"spindle_SQL_DB\"",
        "\"SQL database name\"",
        "'Unable to update database'",
        "\"spindle_SQL_TABLE\"",
        "\"INIT Spindle Database table Name\"",
        "\"spindle_SQL_TABLE\"",
        "\"\"",
        "\"SQL database table name\"",
        "\"spindle_SQL_TABLE\"",
        "\"\"",
        "'Unable to update database'",
        "\"spindle_SQL_TABLE\"",
        "\"SQL database table name\"",
        "'Unable to update database'",
        "\"spindle_SQL_USER\"",
        "\"INIT Spindle Database user name\"",
        "\"spindle_SQL_USER\"",
        "\"\"",
        "\"SQL database user name\"",
        "\"spindle_SQL_USER\"",
        "\"\"",
        "'Unable to update database'",
        "\"spindle_SQL_USER\"",
        "\"SQL database user name\"",
        "'Unable to update database'",
        "\"spindle_SQL_PASSWORD\"",
        "\"INIT Spindle Database password\"",
        "\"spindle_SQL_PASSWORD\"",
        "\"\"",
        "\"SQL database password\"",
        "\"spindle_SQL_PASSWORD\"",
        "\"\"",
        "'Unable to update database'",
        "\"spindle_SQL_PASSWORD\"",
        "\"SQL database password\"",
        "'Unable to update database'",
        "\"spindle_SQL_PORT\"",
        "\"INIT Spindle Database port number\"",
        "\"spindle_SQL_PORT\"",
        "\"\"",
        "\"SQL database port number\"",
        "\"spindle_SQL_PORT\"",
        "\"\"",
        "'Unable to update database'",
        "\"spindle_SQL_PORT\"",
        "\"SQL database port number\"",
        "'Unable to update database'",
        "\"_update\"",
        "'iSpindle Version Update'",
        "'hidden'",
        "'Unable to update database'",
        "\"SG\"",
        "\"iSpindle\"",
        "\"Enter the name of your iSpindel\"",
        "\"Type\"",
        "\"Temperature\"",
        "\"Gravity/Angle\"",
        "\"Battery\"",
        "\"RSSI\"",
        "\"DateTime\"",
        "\"Select which type of data to register for this sensor. For Angle, Polynomial has to be left empty\"",
        "\"Polynomial\"",
        "\"Enter your iSpindel polynomial. Use the variable tilt for the angle reading from iSpindel. Does not support ^ character.\"",
        "\"Units\"",
        "\"SG\"",
        "\"Brix\"",
        "\"°P\"",
        "\"Displays gravity reading with this unit if the Data Type is set to Gravity. Does not convert between units, to do that modify your polynomial.\"",
        "\"FermenterTemp\"",
        "\"Select Fermenter Temp Sensor that you want to provide to TCP Server\"",
        "\"iSpindle\"",
        "\"Polynomial\"",
        "\"tilt\"",
        "\"FermenterTemp\"",
        "\"Type\"",
        "\"DateTime\"",
        "\"Type\"",
        "\"Temperature\"",
        "\"°C\"",
        "\"TEMP_UNIT\"",
        "\"C\"",
        "\"C\"",
        "\"°F\"",
        "\"Type\"",
        "\"Gravity/Angle\"",
        "\"Type\"",
        "\"Battery\"",
        "\"V\"",
        "\"Type\"",
        "\"RSSI\"",
        "\"dB\"",
        "\" \"",
        "\"iSpindle\"",
        "'Time'",
        "'Time'",
        "\"Type\"",
        "\"Gravity/Angle\"",
        "'Angle'",
        "\"Units\"",
        "\"Type\"",
        "\"DateTime\"",
        "'Time'",
        "\"^[a-zA-Z0-9,.]{0,10}$\"",
        "\"/api/hydrometer/v1/data\"",
        "''",
        "\"POST\"",
        "'name'",
        "'temperature'",
        "'angle'",
        "'battery'",
        "'RSSI'",
        "'Time'",
        "'Temperature'",
        "'Angle'",
        "'Battery'",
        "'RSSI'",
        "'/gettemp/{SpindleID}'",
        "\"POST\"",
        "'SpindleID'",
        "'Temp'",
        "'data'",
        "'type'",
        "'iSpindle'",
        "'props'",
        "'iSpindle'",
        "'props'",
        "'FermenterTemp'",
        "\"\"",
        "'value'",
        "'/getarchive'",
        "\"GET\"",
        "\"DESC\"",
        "\"SELECT Recipe_ID as value, CONCAT(Batch, ' | ', Name, ' | ',DATE_FORMAT(Start_date, '%Y-%m-%d'),' | ', Recipe, ' (', Recipe_ID,')' ) as 'label' FROM Archive ORDER BY Recipe_ID {}\"",
        "'/getdiagrams'",
        "\"GET\"",
        "'value'",
        "'0'",
        "'label'",
        "'Gravity and Temperature (RasPySpindle)'",
        "'value'",
        "'1'",
        "'label'",
        "'Gravity and Temperature (iSpindle Polynom)'",
        "'value'",
        "'2'",
        "'label'",
        "'Tilt and Temperature'",
        "'value'",
        "'3'",
        "'label'",
        "'Attenuation'",
        "'value'",
        "'4'",
        "'label'",
        "'Battery and Wifi Signal'",
        "'/getarchiveheader/{ArchiveID}/'",
        "\"POST\"",
        "'ArchiveID'",
        "\"Select * FROM Archive WHERE Recipe_ID = {}\"",
        "'Name'",
        "'Batch'",
        "'Recipe'",
        "'Start_date'",
        "'End_date'",
        "'const0'",
        "'const1'",
        "'const2'",
        "'const3'",
        "\"{:+.5f} * tilt^2 {:+.5f} * tilt {:+.5f}\"",
        "\"{:+.5f} * tilt^3 {:+.5f} * tilt^2 {:+.5f} * tilt {:+.5f}\"",
        "\"SELECT max(Timestamp) FROM Data WHERE Recipe_ID = {}\"",
        "'max(Timestamp)'",
        "\"SELECT * FROM Data WHERE Recipe_ID = {} AND Internal = 'RID_END'\"",
        "'Timestamp'",
        "\"WHERE Recipe_ID = {} AND Timestamp > (Select MAX(Data.Timestamp) FROM Data WHERE Data.ResetFlag = true AND Recipe_id = {}) AND Timestamp < DATE_ADD((SELECT MAX(Data.Timestamp) FROM Data WHERE Recipe_ID = {} AND Data.ResetFlag = true), INTERVAL 1 HOUR)\"",
        "\"SELECT AVG(Data.Angle) as angle FROM Data {}\"",
        "'angle'",
        "\"WHERE Recipe_id = {} and Timestamp < '{}' and Recipe_id = {} AND Timestamp > DATE_SUB('{}', INTERVAL 1 HOUR)\"",
        "\"SELECT AVG(Data.Angle) as angle FROM Data {}\"",
        "'angle'",
        "'ArchiveID'",
        "'Spindle_Name'",
        "'Batch'",
        "'Recipe'",
        "'Start_date'",
        "'End_date'",
        "'Const0'",
        "'Const1'",
        "'Const2'",
        "'Const3'",
        "'Formula'",
        "'Initial_Gravity'",
        "'Final_Gravity'",
        "'Attenuation'",
        "'Alcohol_by_volume'",
        "'Spindle_Name'",
        "'Batch'",
        "'Recipe'",
        "'Start_date'",
        "'%Y-%m-%d'",
        "'End_date'",
        "'%Y-%m-%d'",
        "'RID_END'",
        "'Const0'",
        "'Const1'",
        "'Const2'",
        "'Const3'",
        "'Formula'",
        "'Initial_Gravity'",
        "'Final_Gravity'",
        "'Attenuation'",
        "'Alcohol_by_volume'",
        "'ArchiveID'",
        "'/getarchivevalues'",
        "\"POST\"",
        "'ArchiveID'",
        "'Const0'",
        "'Const1'",
        "'Const2'",
        "'Const3'",
        "'Initial_Gravity'",
        "'Start_date'",
        "'End_date'",
        "'RID_END'",
        "\" AND Timestamp <= (Select max(Timestamp) FROM Data WHERE Recipe_ID='{}' AND Internal = 'RID_END')\"",
        "\"\"",
        "f\"SELECT DATE_FORMAT(Timestamp, '%Y-%m-%d %H:%i:%s') as Timestamp, temperature, angle, \\\n                      ({Const0}*angle*angle*angle+ {Const1}*angle*angle +{Const2}*angle + {Const3}) as Servergravity, gravity, battery, rssi, \\\n                      (({Initial_Gravity} - ({Const0}*angle*angle*angle+ {Const1}*angle*angle +{Const2}*angle + {Const3}))* 100 / {Initial_Gravity}) as attenuation, \\\n                      ((100 * (0.1808 * {Initial_Gravity} + 0.8192 * ({Const0}*angle*angle*angle+ {Const1}*angle*angle +{Const2}*angle + {Const3})- {Initial_Gravity}) / (1.0665 * {Initial_Gravity} - 206.65)) / 0.795) as alcohol \\\n                        FROM Data WHERE Recipe_ID = '{ArchiveID}'{AND_SQL} ORDER BY Timestamp ASC\"",
        "'Timestamp'",
        "\"time\"",
        "'/removeridflag/{ArchiveID}/'",
        "\"POST\"",
        "'ArchiveID'",
        "\"UPDATE Data SET Internal = NULL WHERE Recipe_ID = '{}' AND Internal = 'RID_END'\"",
        "'/addridflag/{ArchiveID}/{Timestamp}/'",
        "\"POST\"",
        "'ArchiveID'",
        "'Timestamp'",
        "\"UPDATE Data SET Internal = 'RID_END' WHERE Recipe_ID = '{}' AND UNIX_TIMESTAMP(Timestamp) = {}\"",
        "'/deletearchive/{ArchiveID}/'",
        "\"POST\"",
        "'ArchiveID'",
        "\"DELETE FROM Archive WHERE Recipe_ID = '{}'\"",
        "\"DELETE FROM Data WHERE Recipe_ID = '{}'\"",
        "\"iSpindle\"",
        "\"iSpindleEndpoint\"",
        "\"iSpindleConfig\""
    ],
    "variables": [
        "logger",
        "cache",
        "cbpi",
        "_task",
        "parametercheck",
        "sql_connection",
        "plugin",
        "version",
        "name",
        "version",
        "name",
        "iSpindle_update",
        "cnx",
        "cur",
        "sqlselect",
        "results",
        "ver",
        "sql_connection",
        "parametercheck",
        "spindledata",
        "spindledata",
        "spindle_SQL",
        "spindle_SQL",
        "spindle_SQL_HOST",
        "spindle_SQL",
        "spindle_SQL_DB",
        "spindle_SQL",
        "spindle_SQL_TABLE",
        "spindle_SQL",
        "spindle_SQL_USER",
        "spindle_SQL",
        "spindle_SQL_PASSWORD",
        "spindle_SQL",
        "spindle_SQL_PORT",
        "spindle_SQL",
        "parametercheck",
        "rounddec",
        "rounddec",
        "tilt",
        "result",
        "result",
        "value",
        "key",
        "Polynomial",
        "temp_sensor_id",
        "datatype",
        "time_old",
        "Spindle_name",
        "time_old",
        "value",
        "value",
        "value",
        "pattern_check",
        "cbpi",
        "sensor_controller",
        "data",
        "time",
        "key",
        "temp",
        "angle",
        "battery",
        "rssi",
        "rssi",
        "cache",
        "key",
        "SpindleID",
        "sensor_value",
        "data",
        "sensor",
        "name",
        "sensor",
        "sensor",
        "sensor_value",
        "sensor_value",
        "data",
        "ORDER",
        "archive_sql",
        "cnx",
        "cur",
        "columns",
        "results",
        "data",
        "results",
        "ArchiveID",
        "header_data",
        "result_angle",
        "cnx",
        "cur",
        "archive_sql",
        "columns",
        "result_archive",
        "Spindle_Name",
        "Batch",
        "Recipe",
        "Start_date",
        "End_date",
        "const0",
        "const1",
        "const2",
        "const3",
        "forumla",
        "forumla",
        "get_end_date_sql",
        "columns",
        "result_end_date",
        "End_date",
        "RID_END",
        "check_RID_END",
        "columns",
        "result_RID_END",
        "End_date",
        "RID_END",
        "where_sql",
        "sql_select",
        "columns",
        "result_angle",
        "initial_angle",
        "initial_gravity",
        "where_sql",
        "sql_select",
        "columns",
        "result_angle",
        "final_angle",
        "final_gravity",
        "attenuation",
        "real_gravity",
        "alcohol_by_weight",
        "alcohol_by_volume",
        "archive_header",
        "archive_header",
        "archive_header",
        "archive_header",
        "archive_header",
        "archive_header",
        "archive_header",
        "archive_header",
        "archive_header",
        "archive_header",
        "archive_header",
        "archive_header",
        "archive_header",
        "archive_header",
        "archive_header",
        "archive_header",
        "archive_header",
        "data",
        "result",
        "ArchiveID",
        "Const0",
        "Const1",
        "Const2",
        "Const3",
        "Initial_Gravity",
        "Start",
        "End",
        "RID_END",
        "AND_SQL",
        "AND_SQL",
        "sql_select",
        "cnx",
        "cur",
        "df",
        "columns",
        "df",
        "columns",
        "data",
        "data",
        "col",
        "ArchiveID",
        "cnx",
        "cur",
        "sql_update",
        "ArchiveID",
        "Timestamp",
        "cnx",
        "cur",
        "sql_update",
        "ArchiveID",
        "cnx",
        "cur",
        "sql_delete1",
        "sql_delete2"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "subclass JSONEncoder",
        "Override the default method",
        "1 to enable output to MySQL database",
        "Database host name (default: localhost - 127.0.0.1 loopback interface)",
        "Database name",
        "Table name",
        "DB user",
        "DB user's password (change this)",
        "Calculate gravity from polynomial",
        "self.cbpi.ws.send(dict(topic=\"sensorstate\", id=self.id, value=self.value))",
        "register component for http, events",
        "In addtion the sub folder static is exposed to access static content via http",
        "logger.error(header_data)",
        "get other archive data",
        "if no entry for end date in archive table, get last timestamp of last dataset for selected recipe from data table",
        "check if end flag is set for the archive",
        "Get Angle data for the first hour after reset",
        "Get Angle data for the last hour before end date -> Final Gravity caculation",
        "header_data = await self.get_archive_header_data(ArchiveID)",
        "logger.error(header_data)",
        "return  web.json_response(data=header_data)",
        "Get all data for the selected recipe",
        "logger.error(header_data)",
        "logger.error(header_data)",
        "logger.error(header_data)"
    ],
    "docstrings": [
        "'''\n        Initializer\n        :param cbpi:\n        '''",
        "\"\"\"\n        ---\n        description: Get iSpindle Value\n        tags:\n        - iSpindle \n        parameters:\n        - name: \"data\"\n          in: \"body\"\n          description: \"Data\"\n          required: \"name\"\n          type: \"object\"\n          type: string\n        responses:\n            \"204\":\n                description: successful operation\n        \"\"\"",
        "\"\"\"\n        ---\n        description: Get all stored fermentations from database archive\n        tags:\n        - iSpindle\n        responses:\n            \"200\":\n                description: successful operation\n        \"\"\"",
        "\"\"\"\n        ---\n        description: Get available diagrams\n        tags:\n        - iSpindle\n        responses:\n            \"200\":\n                description: successful operation\n        \"\"\"",
        "\"\"\"\n        ---\n        description: Get Archive header data for specified archive id\n        tags:\n        - iSpindle\n        parameters:\n        - name: \"ArchiveID\"\n          in: \"path\"\n          description: \"ArchiveID\"\n          required: true\n          type: \"integer\"\n          format: \"int64\"\n        responses:\n            \"200\":\n                description: successful operation\n        \"\"\"",
        "\"\"\"\n        ---\n        description: get archive values for specified archive id\n        tags:\n        - iSpindle\n        parameters:\n        - in: body\n          name: body\n          description: get archive values for specified archive id\n          required: true\n          \n          schema:\n            type: object\n            \n            properties:\n              name:\n                type: string\n              sensor:\n                type: \"integer\"\n                format: \"int64\"\n              heater:\n                type: \"integer\"\n                format: \"int64\"\n              agitator:\n                type: \"integer\"\n                format: \"int64\"\n              target_temp:\n                type: \"integer\"\n                format: \"int64\"\n              type:\n                type: string\n            example: \n              name: \"Kettle 1\"\n              type: \"CustomKettleLogic\"\n\n              \n        responses:\n            \"204\":\n                description: successful operation\n        \"\"\"",
        "\"\"\"\n        ---\n        description: Remove end of archive flag for specified archive id\n        tags:\n        - iSpindle\n        parameters:\n        - name: \"ArchiveID\"\n          in: \"path\"\n          description: \"ArchiveID\"\n          required: true\n          type: \"integer\"\n          format: \"int64\"\n        responses:\n            \"200\":\n                description: successful operation\n        \"\"\"",
        "\"\"\"\n        ---\n        description: Remove end of archive flag for specified archive id\n        tags:\n        - iSpindle\n        parameters:\n        - name: \"ArchiveID\"\n          in: \"path\"\n          description: \"ArchiveID\"\n          required: true\n          type: \"integer\"\n          format: \"int64\"\n        - name: \"Timestamp\"\n          in: \"path\"\n          description: \"Timestamp\"\n          required: true\n          type: \"Timestamp\"\n          format: \"YYYY-MM-DD HH:MM:SS\"\n        responses:\n            \"200\":\n                description: successful operation\n        \"\"\"",
        "\"\"\"\n        ---\n        description: Delete data from  database for specified archive id\n        tags:\n        - iSpindle\n        parameters:\n        - name: \"ArchiveID\"\n          in: \"path\"\n          description: \"ArchiveID\"\n          required: true\n          type: \"integer\"\n          format: \"int64\"\n        responses:\n            \"200\":\n                description: successful operation\n        \"\"\""
    ],
    "functions": [
        "init_config",
        "iSpindle_config",
        "calcGravity",
        "get_unit",
        "run",
        "get_state",
        "run",
        "http_new_value3",
        "get_fermenter_temp",
        "get_spindle_sensor",
        "get_archive_headers",
        "get_archive_list",
        "get_diagrams",
        "get_diagram_list",
        "get_archive_header",
        "get_archive_header_data",
        "get_archive_values",
        "get_all_archive_values",
        "removeridflag",
        "removearchiveflag",
        "addridflag",
        "addarchiveflag",
        "deletearchive",
        "deletearchivefromdatabase",
        "setup"
    ],
    "classes": [
        "DateTimeEncoder",
        "iSpindleConfig",
        "iSpindle",
        "iSpindleEndpoint"
    ]
}