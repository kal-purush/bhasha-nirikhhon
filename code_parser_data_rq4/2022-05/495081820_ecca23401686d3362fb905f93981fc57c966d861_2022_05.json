{
    "identifiers": [
        "explode",
        "ValueError",
        "describe",
        "it",
        "expect",
        "explode",
        "expect",
        "explode",
        "it",
        "expect",
        "explode",
        "it",
        "expect",
        "explode",
        "expect",
        "explode",
        "expect",
        "explode",
        "it",
        "expect",
        "explode",
        "expect",
        "explode",
        "expect",
        "explode",
        "expect",
        "explode",
        "expect",
        "explode",
        "it",
        "expect",
        "explode",
        "ValueError",
        "it",
        "expect",
        "explode",
        "it",
        "expect",
        "explode",
        "expect",
        "explode",
        "expect",
        "explode"
    ],
    "literals": [
        "'.'",
        "'index.ts'",
        "'works'",
        "','",
        "'1,2'",
        "'1'",
        "'2'",
        "' '",
        "'1,2'",
        "'1,2'",
        "'returns only one element when limit is 0'",
        "','",
        "'1,2'",
        "'1,2'",
        "'limits the output array'",
        "','",
        "'1,2'",
        "'1,2'",
        "','",
        "'1,2'",
        "'1'",
        "'2'",
        "','",
        "'1,2'",
        "'1'",
        "'2'",
        "'returns all elements except the last -limit when a negative limit is used'",
        "','",
        "'1,2,3,4'",
        "'1'",
        "'2'",
        "'3'",
        "','",
        "'1,2,3,4'",
        "'1'",
        "'2'",
        "','",
        "'1,2,3,4'",
        "'1'",
        "','",
        "'1,2,3,4'",
        "','",
        "'1,2,3,4'",
        "'throws a ValueError when separator is an empty string (\"\")'",
        "''",
        "'empty separator'",
        "'returns an empty array when separator contains a value that is not contained in string and a negative limit is used'",
        "' '",
        "'1,2,3,4'",
        "'adds empty string (\"\") to the first or last element if separator appears at the start or end of string'",
        "','",
        "','",
        "''",
        "''",
        "','",
        "'1,'",
        "'1'",
        "''",
        "','",
        "',1'",
        "''",
        "'1'"
    ],
    "variables": [],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}