{
    "identifiers": [
        "sys",
        "numpy",
        "np",
        "map_reduce",
        "map_reduce",
        "data_parser",
        "data_parser",
        "mappers_and_reducers",
        "bigram_emitter",
        "bigram_reducer",
        "reduce_to_matrix",
        "no_reduce",
        "no_map",
        "lang1",
        "lang2",
        "filename",
        "lang1",
        "lang2",
        "name_string",
        "np",
        "load",
        "name_string",
        "FileNotFoundError",
        "sys",
        "exit",
        "data_parser",
        "filename",
        "bigram_split",
        "line_split",
        "map_reduce",
        "bigram_emitter",
        "bigram_reducer",
        "i",
        "i",
        "data_parsed",
        "line",
        "reduced_lines",
        "line",
        "map_reduce",
        "no_map",
        "reduce_to_matrix",
        "frequency",
        "items",
        "np",
        "sum",
        "matrices",
        "axis",
        "np",
        "sum",
        "np",
        "multiply",
        "identification_matrix",
        "combined_matrices",
        "line_score",
        "classified_lines",
        "append",
        "lang1",
        "line_score",
        "classified_lines",
        "append",
        "lang2",
        "classified_lines",
        "append",
        "map_reduce",
        "bigram_emitter",
        "bigram_reducer",
        "classified_lines",
        "results",
        "results",
        "results",
        "results"
    ],
    "literals": [
        "f'identification_matrix_{lang1}_{lang2}'",
        "f'Loading {name_string}...'",
        "'.npy'",
        "'No file found. Please run this program by executing main.py.'",
        "'Parsing data...'",
        "'Classifying...'",
        "'unknown'",
        "'Done!'",
        "'---- Results ----'",
        "f'{results[0][0]}: {results[0][1]} lines'",
        "f'{results[1][0]}: {results[1][1]} lines'"
    ],
    "variables": [
        "name_string",
        "identification_matrix",
        "data_parsed",
        "reduced_lines",
        "classified_lines",
        "frequency",
        "matrices",
        "combined_matrices",
        "line_score",
        "results"
    ],
    "comments": [
        "load the data",
        "parse the data",
        "map reduce into bigram frequency counts",
        "reduce to bigrams",
        "classify the lines",
        "for each line",
        "make a dictionary of bigram frequencies per line",
        "make a list of matrices",
        "sum the matrices",
        "multiply the occurences of bigrams in the text with the \"score\" of the bigram, and sum the results",
        "if the score is positive, the text is in the positive language",
        "if the score is negative, the text is in the negative language"
    ],
    "docstrings": [
        "\"\"\"\n    Classifies the language of the lines in the given file.\n    :param lang1:\n    :param lang2:\n    :param filename:\n    :return: List of tuples of the form (lang1, count), (lang2, count)\n    \"\"\""
    ],
    "functions": [
        "classifier"
    ],
    "classes": []
}