{
    "identifiers": [
        "de",
        "cyface",
        "api",
        "v2",
        "de",
        "cyface",
        "api",
        "Authenticator",
        "JWT_HASH_ALGORITHM",
        "java",
        "io",
        "FileNotFoundException",
        "java",
        "io",
        "java",
        "nio",
        "charset",
        "StandardCharsets",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "nio",
        "file",
        "Path",
        "java",
        "util",
        "Objects",
        "io",
        "vertx",
        "core",
        "Future",
        "io",
        "vertx",
        "core",
        "io",
        "vertx",
        "core",
        "Vertx",
        "io",
        "vertx",
        "core",
        "json",
        "JsonObject",
        "io",
        "vertx",
        "ext",
        "auth",
        "PubSecKeyOptions",
        "io",
        "vertx",
        "ext",
        "auth",
        "jwt",
        "JWTAuth",
        "io",
        "vertx",
        "ext",
        "auth",
        "jwt",
        "JWTAuthOptions",
        "io",
        "vertx",
        "ext",
        "auth",
        "mongo",
        "MongoAuthentication",
        "io",
        "vertx",
        "ext",
        "auth",
        "mongo",
        "MongoAuthenticationOptions",
        "io",
        "vertx",
        "ext",
        "mongo",
        "MongoClient",
        "AuthenticatedEndpointConfig",
        "DEFAULT_TOKEN_VALIDATION_TIME",
        "DEFAULT_CYFACE_SALT",
        "DEFAULT_MONGO_DATA_SOURCE_NAME",
        "vertx",
        "publicKey",
        "privateKey",
        "JWTAuth",
        "create",
        "vertx",
        "addPubSecKey",
        "setAlgorithm",
        "JWT_HASH_ALGORITHM",
        "setBuffer",
        "publicKey",
        "addPubSecKey",
        "setAlgorithm",
        "JWT_HASH_ALGORITHM",
        "setBuffer",
        "privateKey",
        "host",
        "endpoint",
        "format",
        "host",
        "endpoint",
        "host",
        "endpoint",
        "format",
        "host",
        "endpoint",
        "vertx",
        "keyParameter",
        "keyFilePath",
        "keyParameter",
        "stringValue",
        "vertx",
        "keyFilePath",
        "Files",
        "readString",
        "Path",
        "of",
        "keyFilePath",
        "vertx",
        "result",
        "promise",
        "salt",
        "Parameter",
        "SALT",
        "stringValue",
        "vertx",
        "saltPath",
        "Parameter",
        "SALT_PATH",
        "stringValue",
        "vertx",
        "salt",
        "saltPath",
        "result",
        "complete",
        "DEFAULT_CYFACE_SALT",
        "salt",
        "saltPath",
        "result",
        "fail",
        "salt",
        "result",
        "complete",
        "salt",
        "fileSystem",
        "vertx",
        "fileSystem",
        "fileSystem",
        "readFile",
        "saltPath",
        "readFileResult",
        "readFileResult",
        "failed",
        "result",
        "fail",
        "readFileResult",
        "cause",
        "loadedSalt",
        "readFileResult",
        "result",
        "toString",
        "StandardCharsets",
        "UTF_8",
        "result",
        "complete",
        "loadedSalt",
        "result",
        "future",
        "client",
        "authProperties",
        "MongoAuthentication",
        "create",
        "client",
        "authProperties",
        "vertx",
        "config",
        "Objects",
        "requireNonNull",
        "config",
        "format",
        "Parameter",
        "MONGO_USER_DB",
        "key",
        "dataSourceName",
        "config",
        "getString",
        "DEFAULT_MONGO_DATA_SOURCE_NAME",
        "MongoClient",
        "createShared",
        "vertx",
        "config",
        "dataSourceName"
    ],
    "literals": [
        "\"cyface-salt\"",
        "\"cyface\"",
        "\"%s%s\"",
        "\"%s%s\"",
        "\"Please provide either a salt value or a path to a salt file. \"",
        "\"Encountered both and can not decide which to use. Aborting!\"",
        "\"Unable to load Mongo user database configuration. \"",
        "\"Please provide a valid configuration using the %s parameter and at least as \\\"db_name\\\", \"",
        "\"a \\\"connection_string\\\" and a \\\"data_source_name\\\"! Also check if your database is running \"",
        "\"and accessible!\"",
        "\"data_source_name\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Copyright 2020-2022 Cyface GmbH\n *\n * This file is part of the Cyface Data Collector.\n *\n * The Cyface Data Collector is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * The Cyface Data Collector is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with the Cyface Data Collector. If not, see <http://www.gnu.org/licenses/>.",
        "* Configuration parameters required to start the HTTP server which also handles routing.\n *\n * @author Armin Schnabel\n * @version 2.0.0\n * @since 6.0.0",
        "* The default number of seconds the JWT authentication token is valid after login.\n     * <p>\n     * Using 10 minutes as preparing a 15-hour measurement for upload took 2.5 minutes on a sample phone [CY-5699].",
        "* If no salt value was provided this default value is used.",
        "* The default data source name to use for user and data database if none is provided via configuration.",
        "* Creates a JWT auth provider.\n     *\n     * @param vertx The Vertx instance to get the parameters from\n     * @param publicKey The public key to be used for authentication\n     * @param privateKey The private key to be used for authentication\n     * @return The auth provider",
        "* Provides the value for the JWT audience information.\n     *\n     * @param host The host this service runs under\n     * @param endpoint The endpoint path this service runs under\n     * @return The JWT audience as a <code>String</code>",
        "* Provides the value for the JWT issuer information.\n     *\n     * @param host The host this service runs under\n     * @param endpoint The endpoint path this service runs under\n     * @return The JWT issuer as a <code>String</code>",
        "* Extracts a key from a PEM key-file.\n     *\n     * @param vertx The Vertx instance to get the parameters from\n     * @param keyParameter The Vertx configuration parameter specifying the location of the file containing the key\n     * @return The extracted key, including the lines starting with `-----`, as required when using {@code RS256}.\n     * @throws FileNotFoundException If the key file was not found\n     * @throws IOException If the key file was not accessible",
        "* Loads the external encryption salt from the Vertx configuration. If no value was provided the default value\n     * {@code #DEFAULT_CYFACE_SALT} is used.\n     * <p>\n     * The salt is only needed to generate a hash, not to check a password against a hash as the salt is stored at the\n     * beginning of the hash. This way the salt can be changed without invalidating all previous hashes.\n     * <p>\n     * Asynchronous implementation as in Vert.X you can only access files asynchronously.\n     *\n     * @param vertx The current <code>Vertx</code> instance\n     * @return The {@code Future} which resolves to a value to be used as encryption salt if successful",
        "* Creates a {@code MongoAuthentication} for a specific {@code MongoClient}.\n     *\n     * @param client A Mongo client to access the user Mongo database.\n     * @return The Authentication provider used to check for valid user accounts used to generate new JWT token.",
        "* Creates a shared Mongo database client for the provided configuration.\n     *\n     * @param vertx The <code>Vertx</code> instance to create the client from.\n     * @param config Configuration of the newly created client. For further information refer to\n     *            {@link Parameter#MONGO_DATA_DB} and {@link Parameter#MONGO_USER_DB}.\n     * @return A <code>MongoClient</code> ready for usage."
    ],
    "functions": [
        "JWTAuth",
        "createAuthProvider",
        "jwtAudience",
        "jwtIssuer",
        "extractKey",
        "loadSalt",
        "MongoAuthentication",
        "buildMongoAuthProvider",
        "MongoClient",
        "createSharedMongoClient",
        "MongoClient",
        "getUserDatabase",
        "MongoAuthentication",
        "getAuthProvider",
        "getPublicKey",
        "getPrivateKey",
        "JWTAuth",
        "getJwtAuthProvider",
        "getIssuer",
        "getAudience",
        "getTokenExpirationTime"
    ],
    "classes": []
}