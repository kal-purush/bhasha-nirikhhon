{
    "identifiers": [
        "br",
        "com",
        "dio",
        "Collections",
        "java",
        "util",
        "Collection",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "java",
        "util",
        "Iterator",
        "java",
        "util",
        "LinkedHashMap",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "TreeMap",
        "carrosPopulares",
        "put",
        "put",
        "put",
        "put",
        "put",
        "carrosPopulares",
        "toString",
        "carrosPopulares",
        "put",
        "carrosPopulares",
        "carrosPopulares",
        "containsKey",
        "carrosPopulares",
        "get",
        "modelos",
        "carrosPopulares",
        "keySet",
        "modelos",
        "consumos",
        "carrosPopulares",
        "values",
        "consumos",
        "consumoMaisEficiente",
        "Collections",
        "max",
        "carrosPopulares",
        "values",
        "entries",
        "carrosPopulares",
        "entrySet",
        "modeloMaisEficiente",
        "entry",
        "entries",
        "entry",
        "getValue",
        "equals",
        "consumoMaisEficiente",
        "modeloMaisEficiente",
        "entry",
        "getKey",
        "modeloMaisEficiente",
        "consumoMaisEficiente",
        "consumoMenosEficiente",
        "Collections",
        "min",
        "carrosPopulares",
        "values",
        "modeloMenosEficiente",
        "entry",
        "carrosPopulares",
        "entrySet",
        "entry",
        "getValue",
        "equals",
        "consumoMenosEficiente",
        "modeloMenosEficiente",
        "entry",
        "getKey",
        "modeloMenosEficiente",
        "consumoMenosEficiente",
        "iterator",
        "carrosPopulares",
        "values",
        "iterator",
        "soma",
        "iterator",
        "hasNext",
        "soma",
        "iterator",
        "next",
        "soma",
        "soma",
        "carrosPopulares",
        "size",
        "carrosPopulares",
        "iterator1",
        "carrosPopulares",
        "values",
        "iterator",
        "iterator1",
        "hasNext",
        "iterator1",
        "next",
        "equals",
        "iterator1",
        "remove",
        "carrosPopulares",
        "carrosPopulares1",
        "put",
        "put",
        "put",
        "put",
        "put",
        "carrosPopulares1",
        "toString",
        "carrosPopulares2",
        "carrosPopulares1",
        "carrosPopulares2",
        "toString",
        "carrosPopulares",
        "clear",
        "carrosPopulares",
        "isEmpty"
    ],
    "literals": [
        "\"Crie um dicionário que relacione os modelos e seus respectivos consumos: \"",
        "\"gol\"",
        "\"uno\"",
        "\"mobi\"",
        "\"hb20\"",
        "\"kwid\"",
        "\"Substitua o consumo do gol por 15,2 km/l: \"",
        "\"gol\"",
        "\"Confira se o modelo tucson está no dicionário: \"",
        "\"tucson\"",
        "\"Exiba o consumo do uno: \"",
        "\"uno\"",
        "\"Exiba os modelos: \"",
        "\"Exiba os consumos dos carros: \"",
        "\"Exiba o modelo mais econômico e seu consumo: \"",
        "\"\"",
        "\"Modelo mais eficiente: \"",
        "\" - \"",
        "\"Exiba o modelo menos econômico e seu consumo: \"",
        "\"\"",
        "\"Modelo menos eficiente: \"",
        "\" - \"",
        "\"Exiba a soma dos consumos: \"",
        "\"Exiba a média dos consumos deste dicionário de carros: \"",
        "\"Remova os modelos com o consumo igual a 15,6 km/l: \"",
        "\"Exiba todos os carros na ordem em que foram informados: \"",
        "\"gol\"",
        "\"uno\"",
        "\"mobi\"",
        "\"hb20\"",
        "\"kwid\"",
        "\"Exiba o dicionário ordenado pelo modelo: \"",
        "\"Apague o dicionario de carros: \"",
        "\"Confira se o dicionário está vazio: \""
    ],
    "variables": [],
    "comments": [
        "Map carrosPopulares2020 = new HashMap(); //antes do java 5",
        "Map<String, Double> carrosPopulares = new HashMap<>(); //Generics(jdk 5) - Diamont Operator(jdk 7)",
        "HashMap<String, Double> carrosPopulares = new HashMap<>();",
        "Map<String, Double> carrosPopulares2020 = Map.of(\"gol\", 14.4, \"uno\", 15.6, \"mobi\", 16.1, \"hb20\", 14.5, \"kwid\", 15.6)",
        "System.out.println(\"Exiba o terceiro modelo adicionado: \");"
    ],
    "docstrings": [
        "Dada os modelos dos carros e seus respectivos consumos na estrada, faça:\n modelo = gol - consumo = 14,4km/l\n modelo = uno - consumo = 15,6 km/l\n modelo = mobi - consumo = 16,1 km/l\n modelo = hb20 - consumo = 14,5 km/l\n modelo = kwid - consumo = 15,6 km/l"
    ],
    "functions": [
        "printaEstudoMap"
    ],
    "classes": [
        "EstudoMap"
    ]
}