{
    "identifiers": [
        "time",
        "time",
        "qiskit",
        "utils",
        "optionals",
        "_optionals",
        "_optionals",
        "HAS_CONSTRAINT",
        "constraint",
        "RecursiveBacktrackingSolver",
        "RecursiveBacktrackingSolver",
        "call_limit",
        "time_limit",
        "call_limit",
        "time_limit",
        "call_current",
        "call_current",
        "call_current",
        "call_limit",
        "time_start",
        "time",
        "time_start",
        "time_current",
        "time_limit",
        "domains",
        "constraints",
        "vconstraints",
        "call_limit",
        "time_limit",
        "time",
        "getSolution",
        "domains",
        "constraints",
        "vconstraints",
        "solutions",
        "domains",
        "vconstraints",
        "assignments",
        "single",
        "limit_reached",
        "recursiveBacktracking",
        "solutions",
        "domains",
        "vconstraints",
        "assignments",
        "single"
    ],
    "literals": [],
    "variables": [
        "call_limit",
        "time_limit",
        "call_current",
        "time_start",
        "time_current",
        "time_current",
        "call_current",
        "time_start"
    ],
    "comments": [
        "This code is part of Qiskit.",
        "",
        "(C) Copyright IBM 2022.",
        "",
        "This code is licensed under the Apache License, Version 2.0. You may",
        "obtain a copy of this license in the LICENSE.txt file in the root directory",
        "of this source tree or at http://www.apache.org/licenses/LICENSE-2.0.",
        "",
        "Any modifications or derivative works of this code must retain this",
        "copyright notice, and modified files need to carry a notice indicating",
        "that they have been altered from the originals.",
        "This isn't ideal usage because we will import constraint at import time",
        "but to ensure the CustomSolver class is defined we need to do this.",
        "If constraint is not installed this will not raise a missing library",
        "exception until CSPLayout is initialized"
    ],
    "docstrings": [
        "\"\"\"A custom python-constraint solver used by the :class:`~.CSPLayout` pass\"\"\"",
        "\"\"\"A wrap to RecursiveBacktrackingSolver to support ``call_limit``\"\"\"",
        "\"\"\"Checks if a limit is reached.\"\"\"",
        "\"\"\"Wrap RecursiveBacktrackingSolver.getSolution to add the limits.\"\"\"",
        "\"\"\"Like ``constraint.RecursiveBacktrackingSolver.recursiveBacktracking`` but\n            limited in the amount of calls by ``self.call_limit``\"\"\""
    ],
    "functions": [
        "limit_reached",
        "getSolution",
        "recursiveBacktracking"
    ],
    "classes": [
        "CustomSolver"
    ]
}