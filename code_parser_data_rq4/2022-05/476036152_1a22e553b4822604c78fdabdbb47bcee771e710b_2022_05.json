{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Text",
        "Threading",
        "Tasks",
        "PriorityQueue",
        "Core",
        "IQueryable",
        "Invoice",
        "IQueryable",
        "Invoice",
        "invoices",
        "_invoices",
        "invoices",
        "ArgumentNullException",
        "nameof",
        "invoices",
        "invoiceId",
        "_invoices",
        "FirstOrDefault",
        "invoice",
        "Id",
        "invoiceId",
        "invoice",
        "invoice",
        "InvoiceItems",
        "Sum",
        "invoiceItem",
        "Price",
        "invoiceItem",
        "Count",
        "_invoices",
        "Where",
        "invoice",
        "AcceptanceDate",
        "SelectMany",
        "invoice",
        "InvoiceItems",
        "Sum",
        "invoiceItem",
        "Price",
        "invoiceItem",
        "Count",
        "IReadOnlyDictionary",
        "to",
        "Invoice",
        "AsQueryable",
        "HasValue",
        "to",
        "HasValue",
        "invoicesWithinRange",
        "_invoices",
        "Where",
        "invoice",
        "CreationDate",
        "to",
        "Value",
        "invoice",
        "CreationDate",
        "Value",
        "HasValue",
        "to",
        "invoicesWithinRange",
        "_invoices",
        "Where",
        "invoice",
        "CreationDate",
        "Value",
        "to",
        "HasValue",
        "invoicesWithinRange",
        "_invoices",
        "Where",
        "invoice",
        "CreationDate",
        "to",
        "Value",
        "invoicesWithinRange",
        "_invoices",
        "invoice",
        "invoicesWithinRange",
        "invoiceItem",
        "invoice",
        "InvoiceItems",
        "itemsReport",
        "ContainsKey",
        "invoiceItem",
        "Name",
        "itemsReport",
        "invoiceItem",
        "Name",
        "invoiceItem",
        "Count",
        "itemsReport",
        "Add",
        "invoiceItem",
        "Name",
        "invoiceItem",
        "Count",
        "itemsReport",
        "IList",
        "InvoiceItem",
        "InvoiceItems",
        "InvoiceItem"
    ],
    "literals": [],
    "variables": [
        "_invoices",
        "invoice",
        "itemsReport",
        "invoicesWithinRange",
        "Id",
        "Description",
        "Seller",
        "Buyer",
        "CreationDate",
        "AcceptanceDate",
        "InvoiceItems",
        "Name",
        "Count",
        "Price"
    ],
    "comments": [
        "Console.WriteLine(\"Sample debug output\");",
        "Should return a total value of an invoice with a given id. If an invoice does not exist null should be returned.",
        "</summary>",
        "<param name=\"invoiceId\"></param>",
        "<returns></returns>",
        "Should return a total value of all unpaid invoices.",
        "</summary>",
        "<returns></returns>",
        "Should return a dictionary where the name of an invoice item is a key and the number of bought items is a value.",
        "The number of bought items should be summed within a given period of time (from, to). Both the from date and the end date can be null.",
        "</summary>",
        "<param name=\"from\"></param>",
        "<param name=\"to\"></param>",
        "<returns></returns>",
        "Get the invoices that match the from and to criteria",
        "Iterate through the invoices and add the invoice item's name and count",
        "A unique numerical identifier of an invoice (mandatory)",
        "A short description of an invoice (optional).",
        "A number of an invoice e.g. 134/10/2018 (mandatory).",
        "An issuer of an invoice e.g. Metz-Anderson, 600  Hickman Street,Illinois (mandatory).",
        "A buyer of a service or a product e.g. John Smith, 4285  Deercove Drive, Dallas (mandatory).",
        "A date when an invoice was issued (mandatory).",
        "A date when an invoice was paid (optional).",
        "A collection of invoice items for a given invoice (can be empty but is never null).",
        "A name of an item e.g. eggs.",
        "A number of bought items e.g. 10.",
        "A price of an item e.g. 20.5."
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "InvoiceRepository",
        "GetTotal",
        "GetTotalOfUnpaid",
        "GetItemsReport",
        "Invoice"
    ],
    "classes": [
        "InvoiceRepository",
        "Invoice",
        "InvoiceItem"
    ]
}