{
    "identifiers": [
        "Amazon",
        "Lambda",
        "Core",
        "Amazon",
        "Lambda",
        "S3Events",
        "Amazon",
        "S3",
        "Amazon",
        "S3",
        "Util",
        "LambdaSerializer",
        "Amazon",
        "Lambda",
        "Serialization",
        "SystemTextJson",
        "DefaultLambdaJsonSerializer",
        "aws_api_simple",
        "S3Client",
        "AmazonS3Client",
        "IAmazonS3",
        "s3Client",
        "S3Client",
        "s3Client",
        "S3Event",
        "evnt",
        "ILambdaContext",
        "context",
        "evnt",
        "Records",
        "S3",
        "s3Event",
        "S3Client",
        "GetObjectMetadataAsync",
        "s3Event",
        "Bucket",
        "Name",
        "s3Event",
        "Key",
        "response",
        "Headers",
        "ContentType",
        "e",
        "context",
        "Logger",
        "LogInformation",
        "s3Event",
        "Key",
        "s3Event",
        "Bucket",
        "Name",
        "context",
        "Logger",
        "LogInformation",
        "e",
        "Message",
        "context",
        "Logger",
        "LogInformation",
        "e",
        "StackTrace"
    ],
    "literals": [],
    "variables": [
        "IAmazonS3",
        "S3Client",
        "s3Event",
        "response"
    ],
    "comments": [
        "Assembly attribute to enable the Lambda function's JSON input to be converted into a .NET class.",
        "Default constructor. This constructor is used by Lambda to construct the instance. When invoked in a Lambda environment",
        "the AWS credentials will come from the IAM role associated with the function and the AWS region will be set to the",
        "region the Lambda function is executed in.",
        "</summary>",
        "Constructs an instance with a preconfigured S3 client. This can be used for testing the outside of the Lambda environment.",
        "</summary>",
        "<param name=\"s3Client\"></param>",
        "This method is called for every Lambda invocation. This method takes in an S3 event object and can be used",
        "to respond to S3 notifications.",
        "</summary>",
        "<param name=\"evnt\"></param>",
        "<param name=\"context\"></param>",
        "<returns></returns>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "FunctionHandler"
    ],
    "classes": []
}