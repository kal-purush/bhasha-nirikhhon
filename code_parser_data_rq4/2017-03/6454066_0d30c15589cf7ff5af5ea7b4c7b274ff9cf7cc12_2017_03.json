{
    "identifiers": [
        "org",
        "jboss",
        "tools",
        "test",
        "core",
        "parametized",
        "server",
        "publishing",
        "defect",
        "java",
        "io",
        "File",
        "java",
        "util",
        "java",
        "util",
        "Collection",
        "java",
        "util",
        "Iterator",
        "java",
        "util",
        "org",
        "eclipse",
        "core",
        "runtime",
        "CoreException",
        "org",
        "eclipse",
        "core",
        "runtime",
        "IPath",
        "org",
        "eclipse",
        "core",
        "runtime",
        "NullProgressMonitor",
        "org",
        "eclipse",
        "core",
        "runtime",
        "Path",
        "org",
        "eclipse",
        "wst",
        "server",
        "core",
        "IModule",
        "org",
        "eclipse",
        "wst",
        "server",
        "core",
        "IServer",
        "org",
        "eclipse",
        "wst",
        "server",
        "core",
        "Server",
        "org",
        "eclipse",
        "wst",
        "server",
        "core",
        "model",
        "IModuleResource",
        "org",
        "eclipse",
        "wst",
        "server",
        "core",
        "model",
        "ServerBehaviourDelegate",
        "org",
        "jboss",
        "ide",
        "eclipse",
        "core",
        "util",
        "IJBossToolingConstants",
        "org",
        "jboss",
        "tools",
        "core",
        "server",
        "controllable",
        "subsystems",
        "StandardFileSystemPublishController",
        "org",
        "jboss",
        "tools",
        "test",
        "core",
        "ASMatrixTests",
        "org",
        "jboss",
        "tools",
        "test",
        "core",
        "utils",
        "IOUtil",
        "org",
        "jboss",
        "tools",
        "test",
        "core",
        "utils",
        "MatrixUtils",
        "org",
        "jboss",
        "tools",
        "test",
        "core",
        "utils",
        "MockModule",
        "org",
        "jboss",
        "tools",
        "test",
        "core",
        "utils",
        "MockModuleUtil",
        "org",
        "jboss",
        "tools",
        "test",
        "core",
        "utils",
        "ServerParameterUtils",
        "org",
        "jboss",
        "tools",
        "test",
        "core",
        "parametized",
        "server",
        "publishing",
        "AbstractPublishingTest",
        "org",
        "jboss",
        "tools",
        "test",
        "core",
        "subsystems",
        "impl",
        "CustomPublishController",
        "org",
        "junit",
        "After",
        "org",
        "junit",
        "Before",
        "org",
        "junit",
        "Test",
        "org",
        "junit",
        "runner",
        "RunWith",
        "org",
        "junit",
        "runners",
        "Parameterized",
        "org",
        "junit",
        "runners",
        "Parameterized",
        "Parameters",
        "RunWith",
        "value",
        "Parameters",
        "servers",
        "IJBossToolingConstants",
        "SERVER_AS_71",
        "IJBossToolingConstants",
        "DEPLOY_ONLY_SERVER",
        "allOptions",
        "servers",
        "MatrixUtils",
        "toMatrix",
        "allOptions",
        "serverType",
        "serverType",
        "ServerParameterUtils",
        "UNZIPPED",
        "ServerParameterUtils",
        "DEPLOY_META",
        "ServerParameterUtils",
        "DEPLOY_PERMOD_DEFAULT",
        "Before",
        "Override",
        "setUp",
        "After",
        "Override",
        "tearDown",
        "Override",
        "createUtilInWebInEarModule",
        "addModuleToServer",
        "Test",
        "controller",
        "controller",
        "initialize",
        "server",
        "ear",
        "webInEar",
        "utilInWebInEar",
        "fullPublishAll",
        "controller",
        "ear",
        "webInEar",
        "utilInWebInEar",
        "depPath",
        "controller",
        "getDeployPathController",
        "getDeployDirectory",
        "ear",
        "totalAfterFull",
        "countChildrenRecurse",
        "depPath",
        "toFile",
        "server",
        "setModulePublishState",
        "ear",
        "IServer",
        "PUBLISH_STATE_FULL",
        "server",
        "setModulePublishState",
        "webInEar",
        "IServer",
        "PUBLISH_INCREMENTAL",
        "server",
        "setModulePublishState",
        "utilInWebInEar",
        "IServer",
        "PUBLISH_INCREMENTAL",
        "publishIncremental",
        "controller",
        "ear",
        "webInEar",
        "utilInWebInEar",
        "depPath",
        "controller",
        "getDeployPathController",
        "getDeployDirectory",
        "ear",
        "totalAfterIncr",
        "countChildrenRecurse",
        "depPath",
        "toFile",
        "assertEquals",
        "totalAfterFull",
        "totalAfterIncr",
        "f",
        "count",
        "f",
        "isDirectory",
        "children",
        "f",
        "listFiles",
        "i",
        "i",
        "children",
        "length",
        "i",
        "count",
        "countChildrenRecurse",
        "children",
        "i",
        "count",
        "controller",
        "ear",
        "webInEar",
        "utilInWebInEar",
        "controller",
        "publishStart",
        "controller",
        "publishServer",
        "IServer",
        "PUBLISH_INCREMENTAL",
        "resultEar",
        "controller",
        "publishModule",
        "IServer",
        "PUBLISH_FULL",
        "ServerBehaviourDelegate",
        "ADDED",
        "ear",
        "resultWeb",
        "controller",
        "publishModule",
        "IServer",
        "PUBLISH_FULL",
        "ServerBehaviourDelegate",
        "ADDED",
        "webInEar",
        "resultUtil",
        "controller",
        "publishModule",
        "IServer",
        "PUBLISH_FULL",
        "ServerBehaviourDelegate",
        "ADDED",
        "utilInWebInEar",
        "controller",
        "publishFinish",
        "assertEquals",
        "resultEar",
        "IServer",
        "PUBLISH_STATE_NONE",
        "assertEquals",
        "resultWeb",
        "IServer",
        "PUBLISH_STATE_NONE",
        "assertEquals",
        "resultUtil",
        "IServer",
        "PUBLISH_STATE_NONE",
        "controller",
        "ear",
        "webInEar",
        "utilInWebInEar",
        "controller",
        "publishStart",
        "controller",
        "publishServer",
        "IServer",
        "PUBLISH_INCREMENTAL",
        "resultEar",
        "controller",
        "publishModule",
        "IServer",
        "PUBLISH_INCREMENTAL",
        "ServerBehaviourDelegate",
        "CHANGED",
        "ear",
        "resultWeb",
        "controller",
        "publishModule",
        "IServer",
        "PUBLISH_INCREMENTAL",
        "ServerBehaviourDelegate",
        "CHANGED",
        "webInEar",
        "resultUtil",
        "controller",
        "publishModule",
        "IServer",
        "PUBLISH_INCREMENTAL",
        "ServerBehaviourDelegate",
        "CHANGED",
        "utilInWebInEar",
        "controller",
        "publishFinish",
        "assertEquals",
        "resultEar",
        "IServer",
        "PUBLISH_STATE_NONE",
        "assertEquals",
        "resultWeb",
        "IServer",
        "PUBLISH_STATE_NONE",
        "assertEquals",
        "resultUtil",
        "IServer",
        "PUBLISH_STATE_NONE",
        "underlying",
        "ASMatrixTests",
        "getDefault",
        "getStateLocation",
        "append",
        "underlying",
        "v",
        "underlying",
        "getUnderlying",
        "underlying",
        "toFile",
        "getParentFile",
        "mkdirs",
        "IOUtil",
        "setContents",
        "underlying",
        "toFile",
        "v",
        "underlying",
        "leafs",
        "leafs",
        "underlying",
        "setUnderlyingVersion",
        "ear",
        "MockModuleUtil",
        "createMockEarModule",
        "web",
        "MockModuleUtil",
        "createMockWebModule",
        "util",
        "MockModuleUtil",
        "createMockUtilModule",
        "ear",
        "addChildModule",
        "web",
        "web",
        "addChildModule",
        "util",
        "earLeafs",
        "getEarLeafPaths",
        "earR",
        "MockModuleUtil",
        "createMockResources",
        "earLeafs",
        "underlying",
        "toFile",
        "ear",
        "setMembers",
        "earR",
        "ear",
        "setExists",
        "ear",
        "setExternal",
        "webLeafs",
        "getWebLeafPaths",
        "webR",
        "MockModuleUtil",
        "createMockResources",
        "webLeafs",
        "underlying",
        "toFile",
        "web",
        "setMembers",
        "webR",
        "web",
        "setExists",
        "web",
        "setExternal",
        "utilLeafs",
        "getUtilLeafPaths",
        "utilR",
        "MockModuleUtil",
        "createMockResources",
        "utilLeafs",
        "underlying",
        "toFile",
        "util",
        "setMembers",
        "utilR",
        "util",
        "setExists",
        "util",
        "setExternal",
        "ear",
        "web",
        "util",
        "root",
        "exists",
        "list2",
        "i",
        "iterator",
        "i",
        "hasNext",
        "list2",
        "add",
        "root",
        "append",
        "i",
        "next",
        "verifyList",
        "root",
        "list2",
        "exists"
    ],
    "literals": [
        "\"underlying.txt\"",
        "\"version\"",
        "\"META-INF/application.xml\"",
        "\"Clazz1.class\"",
        "\"Clazz2.class\"",
        "\"Clazz3.class\"",
        "\"w\"",
        "\"x\"",
        "\"y\"",
        "\"z\"",
        "\"a/a1\"",
        "\"a/a2\"",
        "\"a/q1\"",
        "\"a/q2\"",
        "\"b/b1\"",
        "\"b/b2\"",
        "\"b/b3\"",
        "\"b/b4\"",
        "\"c/y1\"",
        "\"c/y2.png\"",
        "\"c/y3.jpg\"",
        "\"c/y4.pdf\"",
        "\"d/F/f1.jar\"",
        "\"d/F/f2.txt\"",
        "\"d/F/f3.txt\"",
        "\"d/F/f4.txt\"",
        "\"web.war\"",
        "\"WEB-INF/lib/util.jar\""
    ],
    "variables": [
        "module"
    ],
    "comments": [
        "Create a publish controller",
        "Verify the .dodeploy marker is created",
        "Count all files recursively",
        "Mark the root module as requiring a full publish, and it's children as needing incremental only",
        "Issue an incremental publish on the root (thus triggering a full publish), and check that our file counts match expected",
        "Verify all were published without fs errors",
        "Verify all were published without fs errors"
    ],
    "docstrings": [
        "***************************************************************************** \n * Copyright (c) 2014 Red Hat, Inc. \n * Distributed under license by Red Hat, Inc. All rights reserved. \n * This program is made available under the terms of the \n * Eclipse Public License v1.0 which accompanies this distribution, \n * and is available at http://www.eclipse.org/legal/epl-v10.html \n * \n * Contributors: \n * Red Hat, Inc. - initial API and implementation \n *****************************************************************************",
        "* This class tests the defect behavior of the {@link StandardFileSystemPublishController}\n * when a root module (with module state requiring full publish) and a child module \n * (with module state requiring incremental publish) are published incrementally.",
        "* Publish all 3 (ear, ear/web,  ear/web/lib) with full publishes",
        "* Publish all 3 (ear, ear/web,  ear/web/lib) with full publishes",
        "* Utility methods for this test class are below"
    ],
    "functions": [
        "IncrementalAfterFullPublishDefectTest",
        "setUp",
        "tearDown",
        "createProjects",
        "testPublish",
        "countChildrenRecurse",
        "fullPublishAll",
        "publishIncremental",
        "IPath",
        "getUnderlying",
        "IPath",
        "setUnderlyingVersion",
        "getEarLeafPaths",
        "getUtilLeafPaths",
        "getWebLeafPaths",
        "createUtilInWebInEarModule",
        "verifyListRelativePath"
    ],
    "classes": [
        "IncrementalAfterFullPublishDefectTest"
    ]
}