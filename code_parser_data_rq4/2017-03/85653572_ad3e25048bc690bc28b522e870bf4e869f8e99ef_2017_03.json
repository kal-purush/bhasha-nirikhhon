{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "gulp",
        "gulp",
        "paths",
        "gulp",
        "gulp",
        "gulp",
        "paths",
        "htmlmin",
        "gulp",
        "gulp",
        "gulp",
        "paths",
        "gulp",
        "gulp",
        "gulp",
        "clean",
        "gulp",
        "gulp",
        "paths",
        "minify",
        "gulp",
        "gulp",
        "gulp",
        "paths",
        "concat",
        "uglify",
        "gulp",
        "gulp",
        "gulp",
        "paths",
        "uglify",
        "gulp",
        "gulp",
        "gulp",
        "concat",
        "minifyCss",
        "rename",
        "path",
        "paths",
        "paths",
        "rev",
        "gulp",
        "rev",
        "gulp",
        "gulp",
        "gulp",
        "revCollector",
        "gulp",
        "gulp",
        "gulp",
        "useref",
        "gulp",
        "opt",
        "sass",
        "opt",
        "sass",
        "sourcemaps",
        "sourcemaps",
        "gulp",
        "opt",
        "gulp",
        "i",
        "sassPath",
        "doCompileSass",
        "sassPath",
        "i",
        "gulp",
        "gulp",
        "gulp",
        "browserSync",
        "files",
        "gulp",
        "gulp",
        "gulp",
        "gulp",
        "connect",
        "gulp",
        "gulp",
        "gulp",
        "gulp"
    ],
    "literals": [
        "'gulp'",
        "'gulp-ruby-sass'",
        "'gulp-sourcemaps'",
        "'gulp-minify-css'",
        "'gulp-rename'",
        "'gulp-concat'",
        "'gulp-uglify'",
        "'gulp-imagemin'",
        "'gulp-clean'",
        "'browser-sync'",
        "'gulp-watch'",
        "'gulp-html-minifier'",
        "'gulp-rev'",
        "'gulp-rev-collector'",
        "'gulp-useref'",
        "'gulp-clean-css'",
        "'dev'",
        "'src/**/*.*'",
        "'pub'",
        "'dist'",
        "'image'",
        "'./**/*.+(jpg|png|gif|svg)'",
        "'./*.+(jpg|png|gif|svg)'",
        "'html'",
        "'*.html'",
        "'src/data/**/*.*'",
        "'css'",
        "'**/**/*.css'",
        "'src/**/*.css'",
        "'js'",
        "'scripts/*.js'",
        "'uglifyJs'",
        "'src/**/**/*.js'",
        "'index'",
        "'dist/'",
        "'htmlmin'",
        "'text/html'",
        "'dist'",
        "'imagemin'",
        "'dist'",
        "'clean'",
        "'dist'",
        "'minifycss'",
        "'dist'",
        "'concatJs'",
        "'app.js'",
        "'app.js'",
        "'dist/scripts'",
        "'uglify'",
        "'dist'",
        "'cssConcat'",
        "'./src/css/pass.css'",
        "'./src/css/abc.css'",
        "'abc.css'",
        "\".min\"",
        "\".css\"",
        "'./dist/css'",
        "'dist'",
        "'rev'",
        "'cssConcat'",
        "'dist/rev-manifest.json'",
        "'./src/pass.html'",
        "'dist'",
        "'useref'",
        "'./src/pass.html'",
        "'dist'",
        "'styles/scss/index.scss'",
        "'styles/css/'",
        "'error'",
        "'maps'",
        "'source'",
        "'sass'",
        "'watch'",
        "'./styles/scss/*.scss'",
        "'sass'",
        "'browsersync'",
        "'./**/*.*'",
        "'./**/*.html'",
        "'./**/*.scss'",
        "'./**/*.css'",
        "'./**/*.+(jpg|png|gif)'",
        "'./**/*.js'",
        "'./'",
        "'dev'",
        "'watch'",
        "'sass'",
        "'browsersync'",
        "'webserver'",
        "'default'",
        "'index'",
        "'imagemin'",
        "'minifycss'"
    ],
    "variables": [
        "gulp",
        "sass",
        "sourcemaps",
        "minify",
        "rename",
        "concat",
        "uglify",
        "imagemin",
        "clean",
        "browserSync",
        "watch",
        "htmlmin",
        "rev",
        "revCollector",
        "useref",
        "minifyCss",
        "paths",
        "sassPath",
        "files"
    ],
    "comments": [
        "gulpif = require('gulp-if'),",
        "domSrc = require('gulp-dom-src'),",
        "cheerio = require('gulp-cheerio'),",
        "['src/**/*.css','src/**/*.min.css'],",
        "压缩页面JS",
        "图片压缩",
        ".pipe(imagemin({optimizationLevel: 5}))",
        "var minifycssPath = {",
        "pass:{",
        "src:['src/styles/css/pass.css'],",
        "// name:'pass.min.css',",
        "dest:'dist/styles/css/'",
        "}",
        "// index:{",
        "//     src:'src/styles/css/index.css',",
        "//     name:'index.css',",
        "//     dest:'styles/css/'",
        "// }",
        "};",
        "function doMonifyCss(opt){",
        "return gulp.src(opt.src)",
        ".pipe(minify())",
        "// .pipe(rename({suffix:'.min'}))",
        ".pipe(gulp.dest('dist'))",
        "}",
        "// gulp.task('minifycss',function(){",
        "//     for(var i in minifycssPath ){",
        "//         doMonifyCss(minifycssPath[i]);",
        "//     }",
        "// });",
        ".pipe(rename({suffix:'.min'}))",
        "- 创建一个名为 concat 的 task",
        "- 需要处理的css文件，放到一个字符串数组里",
        "- 合并后的文件名",
        "- 压缩处理成一行",
        "- 文件名加MD5后缀",
        "- 文件名加MD5后缀",
        "- 输出文件本地",
        "- 生成一个rev-manifest.json",
        "- 将 rev-manifest.json 保存到 rev 目录内",
        "- 读取 rev-manifest.json 文件以及需要进行css名替换的文件",
        "- 执行文件内css名的替换",
        "- 替换后的文件输出的目录",
        "gulp.task('indexHtml', function() {",
        "return gulp.src('./src/pass.html')",
        ".pipe(cheerio(function ($) {",
        "$('script').remove();",
        "$('link').remove();",
        "$('body').append('<script src=\"app.full.min.js\"></script>');",
        "$('head').append('<link rel=\"stylesheet\" href=\"app.full.min.css\">');",
        "}))",
        ".pipe(gulp.dest('dist/'));",
        "});",
        "gulp.task('domSrc', function () {",
        "domSrc({ file: './src/pass.html', selector: 'script', attribute: 'src' })",
        ".pipe(concat('app.full.min.js'))",
        ".pipe(uglify())",
        ".pipe(gulp.dest('dist/'));",
        "});",
        "gulp.task('domCss', function() {",
        "return domSrc({file:'./src/pass.html',selector:'link',attribute:'href'})",
        ".pipe(concat('app.full.min.css'))",
        ".pipe(minify())",
        ".pipe(gulp.dest('dist/'));",
        "});",
        "gulp.task('cssConcat', function() {                                //- 创建一个名为 concat 的 task",
        "gulp.src(['./src/css/pass.css', './src/css/abc.css'])    //- 需要处理的css文件，放到一个字符串数组里",
        ".pipe(concat('abc.css'))                            //- 合并后的文件名",
        "// .pipe(minifyCss())                                      //- 压缩处理成一行",
        ".pipe(rev())                                            //- 文件名加MD5后缀",
        ".pipe(gulp.dest('./dist/css'))                               //- 输出文件本地",
        ".pipe(rev.manifest())                                   //- 生成一个rev-manifest.json",
        ".pipe(gulp.dest('dist'));                              //- 将 rev-manifest.json 保存到 rev 目录内",
        "});",
        "gulp.task('rev', ['cssConcat'], function() {",
        "gulp.src(['dist/rev-manifest.json', './src/pass.html'])   //- 读取 rev-manifest.json 文件以及需要进行css名替换的文件",
        ".pipe(revCollector({",
        "replaceReved: true,",
        "dirReplacements: {",
        "'css': '/dist/style.min.css',",
        "// '/js/': '/dist/js/',",
        "// 'cdn/': function(manifest_value) {",
        "//     return '//cdn' + (Math.floor(Math.random() * 9) + 1) + '.' + 'exsample.dot' + '/img/' + manifest_value;",
        "// }",
        "}",
        "}))                                   //- 执行文件内css名的替换",
        ".pipe(gulp.dest('./dist/'));                     //- 替换后的文件输出的目录",
        "});",
        "gulp.task('usemin', function () {",
        "return gulp.src('./src/pass.html')",
        ".pipe(usemin({",
        "js: [ uglify, rev ]",
        "// in this case css will be only concatenated (like css: ['concat']).",
        "}))",
        ".pipe(gulp.dest('dist/'));",
        "});",
        "gulp.task('useref', function () {",
        "return gulp.src('./src/pass.html')",
        ".pipe(useref())",
        "// .pipe(gulpif('*.js', uglify()))",
        ".pipe(gulpif('*.css', minifyCss()))",
        ".pipe(gulp.dest('dist'));",
        "});",
        ".pipe(sourcemaps.init())",
        ".pipe(postcss([autoprefixer({remove:false})]))",
        "gulp.start('htmlmin');"
    ],
    "docstrings": [],
    "functions": [
        "doCompileSass"
    ],
    "classes": []
}