{
    "identifiers": [
        "ch",
        "epfl",
        "alpano",
        "ch",
        "epfl",
        "alpano",
        "Preconditions",
        "checkArgument",
        "Azimuth",
        "azimuth",
        "azimuth",
        "azimuth",
        "Math2",
        "PI2",
        "azimuth",
        "isCanonical",
        "azimuth",
        "azimuth",
        "azimuth",
        "Math2",
        "PI2",
        "azimuth",
        "Math2",
        "PI2",
        "azimuth",
        "Math2",
        "PI2",
        "azimuth",
        "azimuth",
        "fromMath",
        "azimuth",
        "angle",
        "isCanonical",
        "angle",
        "angle",
        "Math2",
        "PI2",
        "angle",
        "azimuth",
        "n",
        "e",
        "s",
        "w",
        "checkArgument",
        "isCanonical",
        "azimuth",
        "azimuth",
        "PI",
        "n",
        "azimuth",
        "PI",
        "n",
        "e",
        "azimuth",
        "PI",
        "e",
        "azimuth",
        "PI",
        "s",
        "e",
        "azimuth",
        "PI",
        "s",
        "azimuth",
        "PI",
        "s",
        "w",
        "azimuth",
        "PI",
        "w",
        "azimuth",
        "PI",
        "n",
        "w",
        "n"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Contains methods used to handle azimuths in radians\n * \n * @author Deniz Ira (269728) & Nicolas d'Argenlieu (276507)\n *",
        "* Checks if given azimuth is canonical, meaning it's contained in [0;2PI[\n     * \n     * @param azimuth azimuth in radians\n     * @return the result of the verification as a boolean value",
        "* Computes a given azimuth in his canonical form\n     * \n     * @param azimuth azimuth in radians\n     * @return the canonical form of given azimuth",
        "* Computes an azimuth into a mathematical angle\n     * \n     * @param azimuth azimuth in radians\n     * @return the angle in radians",
        "* Computes a mathematical angle into an azimuth\n     * \n     * @param angle angle in radians\n     * @return the azimuth in radians",
        "* Returns the cardinal direction associated to the given azimuth, \n     * by concatenating given String values associated to North, South, West & East\n     * \n     * @param azimuth azimuth in radians\n     * @param n String value for North\n     * @param e String value for East\n     * @param s String value for South\n     * @param w String value for West\n     * @return Concatenated String of cardinal direction"
    ],
    "functions": [
        "isCanonical",
        "canonicalize",
        "toMath",
        "fromMath",
        "toOctantString"
    ],
    "classes": []
}