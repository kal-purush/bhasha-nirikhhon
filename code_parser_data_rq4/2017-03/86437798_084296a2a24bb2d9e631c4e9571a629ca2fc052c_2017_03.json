{
    "identifiers": [
        "numpy",
        "np",
        "cv2",
        "win32api",
        "imutils",
        "video",
        "WebcamVideoStream",
        "win32api",
        "win32con",
        "x",
        "y",
        "win32api",
        "SetCursorPos",
        "x",
        "y",
        "win32api",
        "mouse_event",
        "win32con",
        "MOUSEEVENTF_LEFTDOWN",
        "x",
        "y",
        "win32api",
        "mouse_event",
        "win32con",
        "MOUSEEVENTF_LEFTUP",
        "x",
        "y",
        "x",
        "y",
        "win32api",
        "SetCursorPos",
        "x",
        "y",
        "win32api",
        "mouse_event",
        "win32con",
        "MOUSEEVENTF_RIGHTDOWN",
        "x",
        "y",
        "win32api",
        "mouse_event",
        "win32con",
        "MOUSEEVENTF_RIGHTUP",
        "x",
        "y",
        "cv2",
        "CascadeClassifier",
        "cv2",
        "CascadeClassifier",
        "cv2",
        "CascadeClassifier",
        "cv2",
        "CascadeClassifier",
        "WebcamVideoStream",
        "src",
        "start",
        "cap",
        "read",
        "cv2",
        "flip",
        "img",
        "cv2",
        "normalize",
        "img",
        "img",
        "cv2",
        "NORM_MINMAX",
        "cv2",
        "cvtColor",
        "img",
        "cv2",
        "COLOR_BGR2YUV",
        "cv2",
        "equalizeHist",
        "img_yuv",
        "cv2",
        "cvtColor",
        "img_yuv",
        "cv2",
        "COLOR_YUV2BGR",
        "cv2",
        "cvtColor",
        "img",
        "cv2",
        "COLOR_BGR2GRAY",
        "cv2",
        "createCLAHE",
        "clipLimit",
        "tileGridSize",
        "clahe",
        "apply",
        "gray",
        "eye_cascade1",
        "detectMultiScale",
        "gray",
        "len",
        "eyes",
        "eye_cascade2",
        "detectMultiScale",
        "gray",
        "ex",
        "ey",
        "ew",
        "eh",
        "eyes",
        "ew",
        "eh",
        "area",
        "ex",
        "ey",
        "eh",
        "ew",
        "w",
        "h",
        "area",
        "cv2",
        "rectangle",
        "img",
        "x",
        "y",
        "x",
        "w",
        "y",
        "h",
        "cv2",
        "rectangle",
        "img",
        "x",
        "w",
        "y",
        "h",
        "x",
        "w",
        "y",
        "h",
        "x",
        "w",
        "y",
        "h",
        "gray",
        "y",
        "y",
        "h",
        "x",
        "x",
        "w",
        "img",
        "y",
        "y",
        "h",
        "x",
        "x",
        "w",
        "start_flag",
        "mx",
        "mx",
        "my",
        "my",
        "np",
        "interp",
        "mx",
        "lower_mx",
        "upper_mx",
        "np",
        "interp",
        "my",
        "lower_my",
        "upper_my",
        "windowX",
        "append",
        "mx",
        "windowY",
        "append",
        "my",
        "len",
        "windowX",
        "window_size",
        "windowX",
        "len",
        "windowY",
        "window_size",
        "windowY",
        "np",
        "mean",
        "windowX",
        "np",
        "mean",
        "windowY",
        "win32api",
        "SetCursorPos",
        "mx",
        "my",
        "cv2",
        "resize",
        "img",
        "fx",
        "fy",
        "cv2",
        "imshow",
        "img",
        "mx",
        "my",
        "cv2",
        "waitKey",
        "ord",
        "cap",
        "stop",
        "cv2",
        "destroyAllWindows"
    ],
    "literals": [
        "'xml/haarcascade_mcs_eyepair_big.xml'",
        "'xml/haarcascade_mcs_eyepair_small.xml'",
        "'xml/haarcascade_eye_tree_eyeglasses.xml'",
        "'xml/haarcascade_eye.xml'",
        "'img'",
        "\"mx: \"",
        "\" ! my: \"",
        "'q'"
    ],
    "variables": [
        "eye_cascade1",
        "eye_cascade2",
        "eye_cascade3",
        "eye_cascade4",
        "window_size",
        "windowX",
        "windowY",
        "cap",
        "mx",
        "my",
        "upper_mx",
        "lower_mx",
        "upper_my",
        "lower_my",
        "start_flag",
        "img",
        "img",
        "img_yuv",
        "img_yuv",
        "img",
        "gray",
        "clahe",
        "gray",
        "eyes",
        "eyes",
        "area",
        "x",
        "y",
        "w",
        "h",
        "x",
        "y",
        "h",
        "w",
        "area",
        "mx",
        "my",
        "roi_gray",
        "roi_color",
        "upper_mx",
        "lower_mx",
        "upper_my",
        "lower_my",
        "start_flag",
        "mx",
        "my",
        "mx",
        "my",
        "img"
    ],
    "comments": [
        "equalize the histogram of the Y channel",
        "convert the YUV image back to RGB format"
    ],
    "docstrings": [
        "'''\n        eyesLR = eye_cascade3.detectMultiScale(roi_gray)\n        if len(eyesLR) == 0:\n            eyesLR = eye_cascade4.detectMultiScale(roi_gray)\n        \n        for (ex,ey,ew,eh) in eyesLR:\n            cv2.rectangle(roi_color,(ex,ey),(ex+ew,ey+eh),(0,0,255),2)\n        '''"
    ],
    "functions": [
        "left_click",
        "right_click"
    ],
    "classes": []
}