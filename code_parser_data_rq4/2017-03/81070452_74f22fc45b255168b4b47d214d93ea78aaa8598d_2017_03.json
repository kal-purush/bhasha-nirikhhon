{
    "identifiers": [
        "d3",
        "randomId",
        "IFormElement",
        "IFormElementDesc",
        "create",
        "d3",
        "randomId",
        "$parent",
        "d3",
        "$parent",
        "elements",
        "elements",
        "el",
        "el",
        "elementDesc",
        "elementDesc",
        "elementDesc",
        "elementDesc",
        "elementDesc",
        "uid",
        "elementDesc",
        "elementDesc",
        "elementDesc",
        "elementDesc",
        "create",
        "elementDesc",
        "id",
        "id",
        "key",
        "key",
        "el",
        "key",
        "r",
        "key",
        "el",
        "el",
        "el",
        "el",
        "r",
        "key",
        "key",
        "el",
        "key",
        "r",
        "key",
        "el",
        "el",
        "r"
    ],
    "literals": [
        "'select2'",
        "'d3'",
        "'phovea_core/src/index'",
        "'./interfaces'",
        "'./internal'",
        "string",
        "'form'",
        "'_'",
        "''",
        "' form-control'",
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [
        "uid",
        "r",
        "r"
    ],
    "comments": [
        "inject formId into form element id",
        "add id as attribute"
    ],
    "docstrings": [
        "* Created by Samuel Gratzl on 08.03.2017.",
        "* Builds a form from a given collection of form elements",
        "* DOM node for the form itself",
        "* Unique id for every form and all the form elements\n   * @type {string}",
        "* Map of all appended form elements with the element id as key\n   * @type {d3.Map<IFormElement>}",
        "* Constructor\n   * @param $parent Node that the form should be attached to",
        "* Builds a form from a list of given form element descriptions\n   * @param elements",
        "* Creates a form element instance from a form element description and\n   * appends it to the form\n   * @param elementDesc",
        "* Returns the form element instance, if exists. Otherwise returns `null`.\n   * @param id\n   * @returns {IFormElement}",
        "* Returns an object with the form element id as key and the current data as value\n   * @returns {{}}",
        "* Returns an object with the form element id as key and the current form element value\n   * @returns {{}}"
    ],
    "functions": [
        "build",
        "appendElement",
        "getElementById",
        "getElementData",
        "getElementValues"
    ],
    "classes": [
        "FormBuilder"
    ]
}