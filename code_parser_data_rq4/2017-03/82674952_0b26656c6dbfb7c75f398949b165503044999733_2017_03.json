{
    "identifiers": [
        "ru",
        "inovus",
        "egisz",
        "medorg",
        "service",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "ru",
        "inovus",
        "egisz",
        "medorg",
        "callback",
        "ResponseCommand",
        "ru",
        "inovus",
        "egisz",
        "medorg",
        "exceptions",
        "ConsumerHttpBadGatewayException",
        "ru",
        "inovus",
        "egisz",
        "medorg",
        "exceptions",
        "NotDeliveredException",
        "ru",
        "inovus",
        "egisz",
        "medorg",
        "rest",
        "RestCallbackCommand",
        "ru",
        "inovus",
        "egisz",
        "medorg",
        "rest",
        "XmlResultContent",
        "ru",
        "inovus",
        "egisz",
        "medorg",
        "util",
        "HttpRequester",
        "ru",
        "inovus",
        "egisz",
        "medorg",
        "util",
        "XmlHelper",
        "javax",
        "annotation",
        "Resource",
        "javax",
        "ejb",
        "javax",
        "jms",
        "JMSException",
        "javax",
        "jms",
        "Message",
        "javax",
        "jms",
        "MessageListener",
        "java",
        "io",
        "java",
        "net",
        "HttpURLConnection",
        "MessageDriven",
        "activationConfig",
        "ActivationConfigProperty",
        "propertyName",
        "propertyValue",
        "ActivationConfigProperty",
        "propertyName",
        "propertyValue",
        "logger",
        "LoggerFactory",
        "getLogger",
        "EJB",
        "messageInfoService",
        "Resource",
        "messageDrivenContext",
        "Override",
        "message",
        "response",
        "response",
        "message",
        "getBody",
        "e",
        "logger",
        "error",
        "e",
        "response",
        "id",
        "response",
        "getMessageId",
        "command",
        "messageInfoService",
        "getConsumerByMessageId",
        "id",
        "command",
        "restCallbackUrl",
        "command",
        "getCallbackUrl",
        "authorizedUserName",
        "command",
        "getAuthorizedUserName",
        "logger",
        "debug",
        "restCallbackUrl",
        "id",
        "authorizedUserName",
        "data",
        "getResultData",
        "id",
        "response",
        "getOid",
        "response",
        "getResponse",
        "logger",
        "debug",
        "restCallbackUrl",
        "authorizedUserName",
        "data",
        "data",
        "responseDelivering",
        "restCallbackUrl",
        "authorizedUserName",
        "data",
        "id",
        "logger",
        "debug",
        "restCallbackUrl",
        "authorizedUserName",
        "data",
        "messageInfoService",
        "deleteMessage",
        "id",
        "logger",
        "debug",
        "restCallbackUrl",
        "id",
        "e",
        "logger",
        "warn",
        "id",
        "messageDrivenContext",
        "setRollbackOnly",
        "logger",
        "warn",
        "id",
        "messageDrivenContext",
        "setRollbackOnly",
        "restCallbackUrl",
        "authorizedUserName",
        "data",
        "id",
        "responseCode",
        "responseCode",
        "HttpRequester",
        "post",
        "restCallbackUrl",
        "data",
        "ex",
        "ex",
        "responseCode",
        "HttpURLConnection",
        "HTTP_BAD_GATEWAY",
        "restCallbackUrl",
        "authorizedUserName",
        "data",
        "responseCode",
        "HttpURLConnection",
        "HTTP_OK",
        "responseCode",
        "HttpURLConnection",
        "HTTP_ACCEPTED",
        "responseCode",
        "egiszRespMessageId",
        "oid",
        "response",
        "result",
        "content",
        "egiszRespMessageId",
        "oid",
        "response",
        "result",
        "XmlHelper",
        "instanceToString",
        "content",
        "ex",
        "logger",
        "error",
        "egiszRespMessageId",
        "oid",
        "response",
        "ex",
        "result"
    ],
    "literals": [
        "\"destinationType\"",
        "\"javax.jms.Queue\"",
        "\"destination\"",
        "\"java:jboss/exported/jms/queue/RestCallbackQueue\"",
        "\"MEDORG. Не удается разобрать ответ из JMS-очереди\"",
        "\"MEDORG. Извлечена привязка restCallbackUrl {} к id принятого сообщения {} для потребителя {}\"",
        "\"MEDORG. Подготовлено к отправке на сервис {} потребителя {} результирующее сообщение: {}\"",
        "\"MEDORG. Доставлено на сервис {} потребителя {} результирующее сообщение: {}.\"",
        "\"MEDORG. Удалена привязка restCallbackUrl {} к id принятого сообщения {}\"",
        "\"MEDORG. Не удалось отправить клиенту сообщение с id {}. Будет предпринята попытка обработать его позднее\"",
        "\"MEDORG. Не найдена информация по сообщению с id {}. Будет предпринята попытка обработать его позднее\"",
        "\"MEDORG. В связи с проблемой работы сервиса \"",
        "\" (HTTP-статус 502 Bad Gateway) потребителя \"",
        "\", не удалось доставить результирующее сообщение ЕГИСЗ ИПС: \"",
        "\"HTTP-статус полученного сообщения от потребителя: \"",
        "\"MEDORG. Не удалось преобразовать строку response в объект XmlResultContent для id принятого сообщения ЕГИСЗ ИПС {}: oid={}, response={}\""
    ],
    "variables": [
        "messageInfoService",
        "messageDrivenContext",
        "responseCode"
    ],
    "comments": [],
    "docstrings": [
        "* Доставка результирующего сообщения ЕГИСЗ ИПС на сервис потребителя\n     *\n     * @param restCallbackUrl    url - для отправки результата обработки\n     * @param authorizedUserName логин авторизированного пользователя\n     * @param data               строка результирующего сообщения подготовленного к отправке на сервис потребителя\n     * @param id\n     * @throws ConsumerHttpBadGatewayException",
        "* Возвращает тело запроса потребителю результирующего сообщения ЕГИСЗ\n     *\n     * @param egiszRespMessageId id принятого сообщения ЕГИСЗ\n     * @param oid                идентификатор базового объекта\n     * @param response           документ, кодированный в base64, который содержит результат обработки сообщения\n     * @return"
    ],
    "functions": [
        "onMessage",
        "responseDelivering",
        "getResultData"
    ],
    "classes": [
        "ConsumerSender"
    ]
}