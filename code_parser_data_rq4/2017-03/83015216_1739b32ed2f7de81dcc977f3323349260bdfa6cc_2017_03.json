{
    "identifiers": [
        "unittest",
        "tests",
        "basetest",
        "BaseTestCase",
        "app",
        "Model",
        "Base",
        "Allocations",
        "People",
        "Rooms",
        "os",
        "sqlalchemy",
        "create_engine",
        "MetaData",
        "BaseTestCase",
        "TestAmityDatabaseFunctions",
        "setUp",
        "create_engine",
        "Base",
        "metadata",
        "create_all",
        "engine",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "realpath",
        "os",
        "path",
        "join",
        "db_path",
        "os",
        "remove",
        "complete_db_path",
        "amity",
        "reset_db",
        "engine",
        "dialect",
        "has_table",
        "engine",
        "amity",
        "check_db_exists",
        "amity",
        "connect_to_db",
        "People",
        "person_name",
        "person_type",
        "session",
        "add",
        "person",
        "session",
        "commit",
        "session",
        "query",
        "People",
        "person_name",
        "first",
        "assertTupleEqual",
        "person",
        "unittest",
        "main"
    ],
    "literals": [
        "\"sqlite:///test_database.db\"",
        "\"/../\"",
        "\"test_database.db\"",
        "\"test_database.db\"",
        "\"rooms\"",
        "\"test_database.db\"",
        "\"test_database.db\"",
        "\"Joe\"",
        "\"Fellows\"",
        "\"Joe\"",
        "\"__main__\""
    ],
    "variables": [
        "engine",
        "db_path",
        "complete_db_path",
        "session",
        "person",
        "person"
    ],
    "comments": [
        "Check was added",
        "Test saves state to database",
        "Test loads state from database",
        "Test does not create a database with a reserved name"
    ],
    "docstrings": [],
    "functions": [
        "setUp",
        "tearDown",
        "test_resets_database",
        "test_checks_for_existing_database",
        "test_connects_to_database"
    ],
    "classes": [
        "TestAmityDatabaseFunctions"
    ]
}