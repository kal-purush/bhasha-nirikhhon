{
    "identifiers": [
        "org",
        "cs4g",
        "org",
        "hamcrest",
        "CoreMatchers",
        "org",
        "hamcrest",
        "collection",
        "IsCollectionWithSize",
        "hasSize",
        "org",
        "mockito",
        "Mockito",
        "doNothing",
        "org",
        "mockito",
        "Mockito",
        "times",
        "org",
        "mockito",
        "Mockito",
        "verify",
        "org",
        "mockito",
        "Mockito",
        "verifyNoMoreInteractions",
        "org",
        "mockito",
        "Mockito",
        "when",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "request",
        "MockMvcRequestBuilders",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "request",
        "MockMvcRequestBuilders",
        "get",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "request",
        "MockMvcRequestBuilders",
        "post",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "request",
        "MockMvcRequestBuilders",
        "put",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "result",
        "MockMvcResultMatchers",
        "content",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "result",
        "MockMvcResultMatchers",
        "jsonPath",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "result",
        "MockMvcResultMatchers",
        "status",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "org",
        "c4sg",
        "C4SgApplication",
        "org",
        "c4sg",
        "controller",
        "UserController",
        "org",
        "c4sg",
        "dao",
        "UserDAO",
        "org",
        "c4sg",
        "dto",
        "UserDTO",
        "org",
        "c4sg",
        "service",
        "UserService",
        "org",
        "junit",
        "Before",
        "org",
        "junit",
        "Ignore",
        "org",
        "junit",
        "Test",
        "org",
        "junit",
        "runner",
        "RunWith",
        "org",
        "mockito",
        "InjectMocks",
        "org",
        "mockito",
        "Mock",
        "org",
        "mockito",
        "MockitoAnnotations",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "boot",
        "test",
        "context",
        "SpringBootTest",
        "org",
        "springframework",
        "http",
        "MediaType",
        "org",
        "springframework",
        "test",
        "context",
        "junit4",
        "SpringJUnit4ClassRunner",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "MockMvc",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "setup",
        "MockMvcBuilders",
        "com",
        "fasterxml",
        "jackson",
        "databind",
        "ObjectMapper",
        "RunWith",
        "SpringBootTest",
        "classes",
        "webEnvironment",
        "SpringBootTest",
        "WebEnvironment",
        "RANDOM_PORT",
        "mockMvc",
        "Mock",
        "userServiceMock",
        "InjectMocks",
        "userController",
        "Before",
        "mockMvc",
        "MockMvcBuilders",
        "standaloneSetup",
        "userController",
        "build",
        "Test",
        "mockUsers",
        "getMockUsers",
        "when",
        "userServiceMock",
        "findAll",
        "thenReturn",
        "mockUsers",
        "mockMvc",
        "perform",
        "get",
        "accept",
        "MediaType",
        "parseMediaType",
        "andExpect",
        "status",
        "isOk",
        "andExpect",
        "content",
        "contentType",
        "MediaType",
        "APPLICATION_JSON_UTF8",
        "andExpect",
        "jsonPath",
        "hasSize",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "verify",
        "userServiceMock",
        "times",
        "findAll",
        "verifyNoMoreInteractions",
        "userServiceMock",
        "Test",
        "activeUsers",
        "getMockUsers",
        "when",
        "userServiceMock",
        "findActiveUsers",
        "thenReturn",
        "activeUsers",
        "mockMvc",
        "perform",
        "get",
        "accept",
        "MediaType",
        "parseMediaType",
        "andExpect",
        "status",
        "isOk",
        "andExpect",
        "content",
        "contentType",
        "MediaType",
        "APPLICATION_JSON_UTF8",
        "andExpect",
        "jsonPath",
        "hasSize",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "verify",
        "userServiceMock",
        "times",
        "findActiveUsers",
        "verifyNoMoreInteractions",
        "userServiceMock",
        "Test",
        "userById",
        "getMockUsers",
        "get",
        "when",
        "userServiceMock",
        "findById",
        "thenReturn",
        "userById",
        "mockMvc",
        "perform",
        "get",
        "accept",
        "MediaType",
        "parseMediaType",
        "andExpect",
        "status",
        "isOk",
        "andExpect",
        "content",
        "contentType",
        "MediaType",
        "APPLICATION_JSON_UTF8",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "verify",
        "userServiceMock",
        "times",
        "findById",
        "verifyNoMoreInteractions",
        "userServiceMock",
        "Test",
        "Test",
        "user",
        "getMockUsers",
        "get",
        "when",
        "userServiceMock",
        "saveUser",
        "user",
        "thenReturn",
        "user",
        "mockMvc",
        "perform",
        "post",
        "contentType",
        "MediaType",
        "APPLICATION_JSON",
        "content",
        "asJsonString",
        "user",
        "andExpect",
        "status",
        "isCreated",
        "andExpect",
        "content",
        "contentType",
        "MediaType",
        "APPLICATION_JSON_UTF8",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "verify",
        "userServiceMock",
        "times",
        "saveUser",
        "user",
        "verifyNoMoreInteractions",
        "userServiceMock",
        "Test",
        "user",
        "getMockUsers",
        "get",
        "when",
        "userServiceMock",
        "saveUser",
        "user",
        "thenReturn",
        "user",
        "mockMvc",
        "perform",
        "put",
        "contentType",
        "MediaType",
        "APPLICATION_JSON",
        "content",
        "asJsonString",
        "user",
        "andExpect",
        "status",
        "isOk",
        "andExpect",
        "content",
        "contentType",
        "MediaType",
        "APPLICATION_JSON_UTF8",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "verify",
        "userServiceMock",
        "times",
        "saveUser",
        "user",
        "verifyNoMoreInteractions",
        "userServiceMock",
        "Test",
        "user",
        "getMockUsers",
        "get",
        "doNothing",
        "when",
        "userServiceMock",
        "deleteUser",
        "user",
        "getId",
        "mockMvc",
        "perform",
        "user",
        "getId",
        "accept",
        "MediaType",
        "parseMediaType",
        "andExpect",
        "status",
        "isOk",
        "verify",
        "userServiceMock",
        "times",
        "deleteUser",
        "user",
        "getId",
        "verifyNoMoreInteractions",
        "userServiceMock",
        "condition",
        "userDto",
        "userDto",
        "setCountry",
        "userDto",
        "setDisplayFlag",
        "userDto",
        "setEmail",
        "userDto",
        "setFirstName",
        "userDto",
        "setGithub",
        "userDto",
        "setId",
        "userDto",
        "setIntroduction",
        "userDto",
        "setLastName",
        "userDto",
        "setLatitude",
        "userDto",
        "setLinked_inurl",
        "userDto",
        "setLongitude",
        "userDto",
        "setPersonal_web_site",
        "userDto",
        "setPhone",
        "userDto",
        "setResume",
        "userDto",
        "setRole",
        "userDto",
        "setSkill1",
        "userDto",
        "setSkill2",
        "userDto",
        "setSkill3",
        "userDto",
        "setSkill4",
        "userDto",
        "setSkill5",
        "userDto",
        "setState",
        "userDto",
        "setStatus",
        "userDto",
        "setUserName",
        "userDto",
        "setZip",
        "userDto2",
        "userDto2",
        "setCountry",
        "userDto2",
        "setDisplayFlag",
        "userDto2",
        "setEmail",
        "userDto2",
        "setFirstName",
        "userDto2",
        "setGithub",
        "userDto2",
        "setId",
        "userDto2",
        "setIntroduction",
        "userDto2",
        "setLastName",
        "userDto2",
        "setLatitude",
        "userDto2",
        "setLinked_inurl",
        "userDto2",
        "setLongitude",
        "userDto2",
        "setPersonal_web_site",
        "userDto2",
        "setPhone",
        "userDto2",
        "setResume",
        "userDto2",
        "setRole",
        "userDto2",
        "setSkill1",
        "userDto2",
        "setSkill2",
        "userDto2",
        "setSkill3",
        "userDto2",
        "setSkill4",
        "userDto2",
        "setSkill5",
        "userDto2",
        "setState",
        "userDto2",
        "setStatus",
        "userDto2",
        "setUserName",
        "userDto2",
        "setZip",
        "userDto3",
        "userDto3",
        "setCountry",
        "userDto3",
        "setDisplayFlag",
        "userDto3",
        "setEmail",
        "userDto3",
        "setFirstName",
        "userDto3",
        "setGithub",
        "userDto3",
        "setId",
        "userDto3",
        "setIntroduction",
        "userDto3",
        "setLastName",
        "userDto3",
        "setLatitude",
        "userDto3",
        "setLinked_inurl",
        "userDto3",
        "setLongitude",
        "userDto3",
        "setPersonal_web_site",
        "userDto3",
        "setPhone",
        "userDto3",
        "setResume",
        "userDto3",
        "setRole",
        "userDto3",
        "setSkill1",
        "userDto3",
        "setSkill2",
        "userDto3",
        "setSkill3",
        "userDto3",
        "setSkill4",
        "userDto3",
        "setSkill5",
        "userDto3",
        "setState",
        "userDto3",
        "setStatus",
        "userDto3",
        "setUserName",
        "userDto3",
        "setZip",
        "userDto4",
        "userDto4",
        "setCountry",
        "userDto4",
        "setDisplayFlag",
        "userDto4",
        "setEmail",
        "userDto4",
        "setFirstName",
        "userDto4",
        "setGithub",
        "userDto4",
        "setId",
        "userDto4",
        "setIntroduction",
        "userDto4",
        "setLastName",
        "userDto4",
        "setLatitude",
        "userDto4",
        "setLinked_inurl",
        "userDto4",
        "setLongitude",
        "userDto4",
        "setPersonal_web_site",
        "userDto4",
        "setPhone",
        "userDto4",
        "setResume",
        "userDto4",
        "setRole",
        "userDto4",
        "setSkill1",
        "userDto4",
        "setSkill2",
        "userDto4",
        "setSkill3",
        "userDto4",
        "setSkill4",
        "userDto4",
        "setSkill5",
        "userDto4",
        "setState",
        "userDto4",
        "setStatus",
        "userDto4",
        "setUserName",
        "userDto4",
        "setZip",
        "condition",
        "Arrays",
        "asList",
        "userDto",
        "userDto3",
        "condition",
        "Arrays",
        "asList",
        "userDto3",
        "condition",
        "Arrays",
        "asList",
        "userDto",
        "condition",
        "Arrays",
        "asList",
        "userDto",
        "condition",
        "Arrays",
        "asList",
        "userDto",
        "condition",
        "Arrays",
        "asList",
        "userDto",
        "Arrays",
        "asList",
        "userDto",
        "userDto2",
        "userDto3",
        "userDto4",
        "obj",
        "writeValueAsString",
        "obj",
        "e",
        "e"
    ],
    "literals": [
        "\"All\"",
        "\"/api/users\"",
        "\"application/json;charset=UTF-8\"",
        "\"$\"",
        "\"$[0].id\"",
        "\"$[0].github\"",
        "\"$[0].userName\"",
        "\"test1UserName\"",
        "\"$[0].firstName\"",
        "\"test1FirstName\"",
        "\"$[0].lastName\"",
        "\"test1LastName\"",
        "\"$[0].email\"",
        "\"test1Email@gmail.com\"",
        "\"$[0].phone\"",
        "\"9542234567\"",
        "\"$[0].status\"",
        "\"A\"",
        "\"$[0].role\"",
        "\"V\"",
        "\"$[0].state\"",
        "\"CA\"",
        "\"$[0].country\"",
        "\"USA\"",
        "\"$[1].id\"",
        "\"$[1].github\"",
        "\"$[1].userName\"",
        "\"test2UserName\"",
        "\"$[1].firstName\"",
        "\"test2FirstName\"",
        "\"$[1].lastName\"",
        "\"test2LastName\"",
        "\"$[1].email\"",
        "\"test2Email@gmail.com\"",
        "\"$[1].phone\"",
        "\"9542234567\"",
        "\"$[1].status\"",
        "\"P\"",
        "\"$[1].role\"",
        "\"V\"",
        "\"$[1].state\"",
        "\"CA\"",
        "\"$[1].country\"",
        "\"USA\"",
        "\"$[2].id\"",
        "\"$[2].github\"",
        "\"$[2].userName\"",
        "\"dev3UserName\"",
        "\"$[2].firstName\"",
        "\"dev3FirstName\"",
        "\"$[2].lastName\"",
        "\"dev3LastName\"",
        "\"$[2].email\"",
        "\"dev3Email@gmail.com\"",
        "\"$[2].phone\"",
        "\"9542234567\"",
        "\"$[2].status\"",
        "\"A\"",
        "\"$[2].role\"",
        "\"D\"",
        "\"$[2].state\"",
        "\"CA\"",
        "\"$[2].country\"",
        "\"USA\"",
        "\"$[3].id\"",
        "\"$[3].github\"",
        "\"$[3].userName\"",
        "\"vol4UserName\"",
        "\"$[3].firstName\"",
        "\"vol4FirstName\"",
        "\"$[3].lastName\"",
        "\"vol4LastName\"",
        "\"$[3].email\"",
        "\"vol4Email@gmail.com\"",
        "\"$[3].phone\"",
        "\"9542234567\"",
        "\"$[3].status\"",
        "\"D\"",
        "\"$[3].role\"",
        "\"V\"",
        "\"$[3].state\"",
        "\"CA\"",
        "\"$[3].country\"",
        "\"USA\"",
        "\"Active\"",
        "\"/api/users/active\"",
        "\"application/json;charset=UTF-8\"",
        "\"$\"",
        "\"$[0].id\"",
        "\"$[0].github\"",
        "\"$[0].userName\"",
        "\"test1UserName\"",
        "\"$[0].firstName\"",
        "\"test1FirstName\"",
        "\"$[0].lastName\"",
        "\"test1LastName\"",
        "\"$[0].email\"",
        "\"test1Email@gmail.com\"",
        "\"$[0].phone\"",
        "\"9542234567\"",
        "\"$[0].status\"",
        "\"A\"",
        "\"$[0].role\"",
        "\"V\"",
        "\"$[0].state\"",
        "\"CA\"",
        "\"$[0].country\"",
        "\"USA\"",
        "\"$[1].id\"",
        "\"$[1].github\"",
        "\"$[1].userName\"",
        "\"dev3UserName\"",
        "\"$[1].firstName\"",
        "\"dev3FirstName\"",
        "\"$[1].lastName\"",
        "\"dev3LastName\"",
        "\"$[1].email\"",
        "\"dev3Email@gmail.com\"",
        "\"$[1].phone\"",
        "\"9542234567\"",
        "\"$[1].status\"",
        "\"A\"",
        "\"$[1].role\"",
        "\"D\"",
        "\"$[1].state\"",
        "\"CA\"",
        "\"$[1].country\"",
        "\"USA\"",
        "\"ById\"",
        "\"/api/users/{id}\"",
        "\"application/json;charset=UTF-8\"",
        "\"$.id\"",
        "\"$.github\"",
        "\"$.userName\"",
        "\"test1UserName\"",
        "\"$.firstName\"",
        "\"test1FirstName\"",
        "\"$.lastName\"",
        "\"test1LastName\"",
        "\"$.email\"",
        "\"test1Email@gmail.com\"",
        "\"$.phone\"",
        "\"9542234567\"",
        "\"$.status\"",
        "\"A\"",
        "\"$.role\"",
        "\"V\"",
        "\"$.state\"",
        "\"CA\"",
        "\"$.country\"",
        "\"USA\"",
        "\"Create\"",
        "\"/api/users\"",
        "\"$.id\"",
        "\"$.github\"",
        "\"$.userName\"",
        "\"test1UserName\"",
        "\"$.firstName\"",
        "\"test1FirstName\"",
        "\"$.lastName\"",
        "\"test1LastName\"",
        "\"$.email\"",
        "\"test1Email@gmail.com\"",
        "\"$.phone\"",
        "\"9542234567\"",
        "\"$.status\"",
        "\"A\"",
        "\"$.role\"",
        "\"V\"",
        "\"$.state\"",
        "\"CA\"",
        "\"$.country\"",
        "\"USA\"",
        "\"Update\"",
        "\"/api/users\"",
        "\"$.id\"",
        "\"$.github\"",
        "\"$.userName\"",
        "\"test1UserName\"",
        "\"$.firstName\"",
        "\"test1FirstName\"",
        "\"$.lastName\"",
        "\"test1LastName\"",
        "\"$.email\"",
        "\"test1Email@gmail.com\"",
        "\"$.phone\"",
        "\"9542234567\"",
        "\"$.status\"",
        "\"A\"",
        "\"$.role\"",
        "\"V\"",
        "\"$.state\"",
        "\"CA\"",
        "\"$.country\"",
        "\"USA\"",
        "\"Delete\"",
        "\"/api/users/{id}\"",
        "\"application/json;charset=UTF-8\"",
        "\"USA\"",
        "\"\"",
        "\"test1Email@gmail.com\"",
        "\"test1FirstName\"",
        "\"Full stack developer with 3 years of industry experience\"",
        "\"test1LastName\"",
        "\"40.366633\"",
        "\"https://www.linkedin.com/feed/\"",
        "\"74.640832\"",
        "\"www.mtest.blogspot.com\"",
        "\"9542234567\"",
        "\"Thi$ is a s@mple resume with sPecial ch@r@cters!\"",
        "\"V\"",
        "\"java\"",
        "\"ruby\"",
        "\"perl\"",
        "\"spring\"",
        "\"struts\"",
        "\"CA\"",
        "\"A\"",
        "\"test1UserName\"",
        "\"70701\"",
        "\"USA\"",
        "\"\"",
        "\"test2Email@gmail.com\"",
        "\"test2FirstName\"",
        "\"Full stack developer with 3 years of industry experience\"",
        "\"test2LastName\"",
        "\"40.366633\"",
        "\"https://www.linkedin.com/feed/\"",
        "\"74.640832\"",
        "\"www.mtest.blogspot.com\"",
        "\"9542234567\"",
        "\"Thi$ is a s@mple resume with sPecial ch@r@cters!\"",
        "\"V\"",
        "\"java\"",
        "\"spring\"",
        "\"REST\"",
        "\"MySql\"",
        "\"Git\"",
        "\"CA\"",
        "\"P\"",
        "\"test2UserName\"",
        "\"70701\"",
        "\"USA\"",
        "\"\"",
        "\"dev3Email@gmail.com\"",
        "\"dev3FirstName\"",
        "\"Full stack developer with 3 years of industry experience\"",
        "\"dev3LastName\"",
        "\"40.366633\"",
        "\"https://www.linkedin.com/feed/\"",
        "\"74.640832\"",
        "\"www.mtest.blogspot.com\"",
        "\"9542234567\"",
        "\"Thi$ is a s@mple resume with sPecial ch@r@cters!\"",
        "\"D\"",
        "\"java\"",
        "\"spring\"",
        "\"REST\"",
        "\"MySql\"",
        "\"Git\"",
        "\"CA\"",
        "\"A\"",
        "\"dev3UserName\"",
        "\"70701\"",
        "\"USA\"",
        "\"\"",
        "\"vol4Email@gmail.com\"",
        "\"vol4FirstName\"",
        "\"Full stack developer with 3 years of industry experience\"",
        "\"vol4LastName\"",
        "\"40.366633\"",
        "\"https://www.linkedin.com/feed/\"",
        "\"74.640832\"",
        "\"www.mtest.blogspot.com\"",
        "\"9542234567\"",
        "\"Thi$ is a s@mple resume with sPecial ch@r@cters!\"",
        "\"V\"",
        "\"java\"",
        "\"spring\"",
        "\"REST\"",
        "\"MySql\"",
        "\"Git\"",
        "\"CA\"",
        "\"D\"",
        "\"vol4UserName\"",
        "\"70701\"",
        "\"Active\"",
        "\"Developers\"",
        "\"ById\"",
        "\"Create\"",
        "\"Update\"",
        "\"Delete\""
    ],
    "variables": [
        "mockMvc",
        "userServiceMock",
        "userController"
    ],
    "comments": [
        "private UserDAO userDao;",
        "Testing GET",
        "Mock user data",
        "Mock user data - user with id = 1",
        "code is commented because findDevelopers() method in UserService returns User instead of UserDTO",
        "get mock users",
        "Testing POST",
        "create mock data",
        "Testing PUT",
        "get mock data",
        "Testing DELETE",
        "get mock data",
        "Private methods",
        "creating mock data",
        "Role - Volunteer and Status - Active",
        "Role - Volunteer and Status - pending",
        "Role - Developer and Status - Active",
        "Role - Volunteer and Status - Deleted",
        "returns all users"
    ],
    "docstrings": [
        "ist<UserDTO> developers = getMockUsers(\"Developers\");\n\t\t \n\t\t when(userServiceMock.findDevelopers()).thenReturn(developers);\n\t\t \n\t\t this.mockMvc.perform(get(\"/api/users/developers\")\n\t\t\t\t .accept(MediaType.parseMediaType(\"application/json;charset=UTF-8\")))\t\n\t\t .andExpect(status().isOk())\n\t\t .andExpect(content().contentType(MediaType.APPLICATION_JSON_UTF8))\n\t\t .andExpect(jsonPath(\"$\",hasSize(1)))\n\t\t .andExpect(jsonPath(\"$[0].github\",is(3)))\n\t\t .andExpect(jsonPath(\"$[0].userName\",is(\"dev3UserName\")))\n\t\t .andExpect(jsonPath(\"$[0].firstName\",is(\"dev3FirstName\")))\n\t\t .andExpect(jsonPath(\"$[0].lastName\",is(\"dev3LastName\")))\n\t\t .andExpect(jsonPath(\"$[0].email\",is(\"dev3Email@gmail.com\")))\n\t\t .andExpect(jsonPath(\"$[0].phone\",is(\"9542234567\")))\t\t \n\t\t .andExpect(jsonPath(\"$[0].status\",is(\"A\")))\n\t\t .andExpect(jsonPath(\"$[0].role\",is(\"D\")))\n\t\t .andExpect(jsonPath(\"$[0].state\",is(\"CA\")))\n\t\t .andExpect(jsonPath(\"$[0].country\",is(\"USA\")));\n\t\t \n\t\t verify(userServiceMock, times(1)).findDevelopers();\n\t     verifyNoMoreInteractions(userServiceMock);"
    ],
    "functions": [
        "setup",
        "testGetUsers",
        "testGetActiveUsers",
        "testGetUserById",
        "testGetDevelopers",
        "testCreateUser",
        "testUpdateUser",
        "testDeleteUser",
        "getMockUsers",
        "asJsonString"
    ],
    "classes": [
        "UserControllerTest"
    ]
}