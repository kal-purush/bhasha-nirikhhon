{
    "identifiers": [
        "ArrayExt",
        "each",
        "CommandRegistry",
        "DisposableDelegate",
        "Selector",
        "Menu",
        "options",
        "ContextMenu",
        "Menu",
        "options",
        "options",
        "ContextMenu",
        "Private",
        "options",
        "item",
        "DisposableDelegate",
        "ArrayExt",
        "item",
        "Private",
        "items",
        "each",
        "items",
        "item",
        "item",
        "Private",
        "ContextMenu",
        "Menu",
        "Menu",
        "Private",
        "Menu",
        "options",
        "ContextMenu",
        "validateSelector",
        "options",
        "options",
        "options",
        "Infinity",
        "options",
        "items",
        "items",
        "target",
        "temp",
        "i",
        "n",
        "i",
        "temp",
        "i",
        "item",
        "Selector",
        "target",
        "item",
        "matches",
        "item",
        "temp",
        "i",
        "matches",
        "matches",
        "itemCmp",
        "result",
        "matches",
        "target",
        "current",
        "target",
        "target",
        "result",
        "selector",
        "selector",
        "selector",
        "Selector",
        "selector",
        "selector",
        "selector",
        "a",
        "b",
        "Selector",
        "a",
        "Selector",
        "b",
        "s1",
        "s2",
        "s1",
        "s2",
        "a",
        "b",
        "r1",
        "r2",
        "r1",
        "r2"
    ],
    "literals": [
        "'@phosphor/algorithm'",
        "'@phosphor/commands'",
        "'@phosphor/disposable'",
        "'@phosphor/domutils'",
        "'./menu'",
        "string",
        "string",
        "string",
        "string",
        "','",
        "Selector cannot contain commas: ${selector}",
        "Invalid selector: ${selector}"
    ],
    "variables": [
        "item",
        "items",
        "selector",
        "rank",
        "result",
        "temp",
        "target",
        "current",
        "matches",
        "i",
        "n",
        "item",
        "s1",
        "s2",
        "r1",
        "r2"
    ],
    "comments": [
        "-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------",
        "Create an item from the given options.",
        "Add the item to the internal array.",
        "Return a disposable which will remove the item.",
        "Clear the current contents of the context menu.",
        "Bail early if there are no items to match.",
        "Find the matching items for the event.",
        "Bail if there are no matching items.",
        "Add the filtered items to the menu.",
        "Open the context menu at the current mouse position.",
        "Indicate success.",
        "Set up the result array.",
        "Copy the items array to allow in-place modification.",
        "Set up the limits of the DOM search.",
        "Walk up the DOM hierarchy searching for matches.",
        "Set up the match array for this DOM level.",
        "Search the remaining items for matches.",
        "Fetch the item.",
        "Skip items which are already consumed.",
        "Skip items which do not match the element.",
        "Add the matched item to the result for this DOM level.",
        "Mark the item as consumed.",
        "Sort the matches for this level and add them to the results.",
        "Stop searching at the limits of the DOM range.",
        "Step to the parent DOM level.",
        "Return the matched and sorted results.",
        "Sort first based on selector specificity.",
        "If specificities are equal, sort based on rank.",
        "Infinity-safe"
    ],
    "docstrings": [
        "* An object which implements a universal context menu.\n *\n * #### Notes\n * The items shown in the context menu are determined by CSS selector\n * matching against the DOM hierarchy at the site of the mouse click.\n * This is similar in concept to how keyboard shortcuts are matched\n * in the command registry.",
        "* Construct a new context menu.\n   *\n   * @param options - The options for initializing the menu.",
        "* The menu widget which displays the matched context items.",
        "* Add an item to the context menu.\n   *\n   * @param options - The options for creating the item.\n   *\n   * @returns A disposable which will remove the item from the menu.",
        "* Open the context menu in response to a `'contextmenu'` event.\n   *\n   * @param event - The `'contextmenu'` event of interest.\n   *\n   * @returns `true` if the menu was opened, or `false` if no items\n   *   matched the event and the menu was not opened.\n   *\n   * #### Notes\n   * This method will populate the context menu with items which match\n   * the propagation path of the event, then open the menu at the mouse\n   * position indicated by the event.",
        "* The namespace for the `ContextMenu` class statics.",
        "* An options object for initializing a context menu.",
        "* The command registry to use with the context menu.",
        "* A custom renderer for use with the context menu.",
        "* An options object for creating a context menu item.",
        "* The CSS selector for the context menu item.\n     *\n     * The context menu item will only be displayed in the context menu\n     * when the selector matches a node on the propagation path of the\n     * contextmenu event. This allows the menu item to be restricted to\n     * user-defined contexts.\n     *\n     * The selector must not contain commas.",
        "* The rank for the item.\n     *\n     * The rank is used as a tie-breaker when ordering context menu\n     * items for display. Items are sorted in the following order:\n     *   1. Depth in the DOM tree (deeper is better)\n     *   2. Selector specificity (higher is better)\n     *   3. Rank (lower is better)\n     *\n     * The default rank is `Infinity`.",
        "* The namespace for the module implementation details.",
        "* A normalized item for a context menu.",
        "* The selector for the item.",
        "* The rank for the item.",
        "* Create a normalized context menu item from an options object.",
        "* Find the items which match a context menu event.\n   *\n   * The results are sorted by DOM level, specificity, and rank.",
        "* Validate the selector for a menu item.\n   *\n   * This returns the validated selector, or throws if the selector is\n   * invalid or contains commas.",
        "* A sort comparison function for a context menu item."
    ],
    "functions": [
        "addItem",
        "open",
        "createItem",
        "matchItems",
        "validateSelector",
        "itemCmp"
    ],
    "classes": [
        "ContextMenu"
    ]
}