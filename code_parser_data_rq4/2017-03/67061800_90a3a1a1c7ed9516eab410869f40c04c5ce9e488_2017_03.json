{
    "identifiers": [
        "ProfileServer",
        "Kernel",
        "Collections",
        "Generic",
        "Threading",
        "Threading",
        "Tasks",
        "IopProtocol",
        "IopCommon",
        "IopServerCore",
        "Kernel",
        "IopServerCore",
        "Network",
        "LOC",
        "ProfileServer",
        "Network",
        "Component",
        "Logger",
        "ComponentName",
        "ManualResetEvent",
        "locServerInitialized",
        "ComponentName",
        "log",
        "Info",
        "client",
        "LocClient",
        "Config",
        "Configuration",
        "LocEndPoint",
        "LocMessageProcessor",
        "ShutdownSignaling",
        "locConnectionThread",
        "ThreadStart",
        "LocConnectionThread",
        "locConnectionThread",
        "Start",
        "RegisterCronJobs",
        "res",
        "Initialized",
        "e",
        "log",
        "e",
        "ToString",
        "res",
        "ShutdownSignaling",
        "SignalShutdown",
        "locConnectionThread",
        "locConnectionThreadFinished",
        "WaitOne",
        "log",
        "log",
        "Info",
        "res",
        "res",
        "log",
        "Info",
        "ShutdownSignaling",
        "SignalShutdown",
        "client",
        "client",
        "Dispose",
        "locConnectionThread",
        "locConnectionThreadFinished",
        "WaitOne",
        "log",
        "log",
        "Info",
        "log",
        "Trace",
        "CronJob",
        "CronJob",
        "CronJob",
        "Name",
        "StartDelay",
        "Interval",
        "HandlerAsync",
        "CronJobHandlerRefreshLocDataAsync",
        "Cron",
        "Base",
        "ComponentDictionary",
        "Cron",
        "ComponentName",
        "cron",
        "AddJobs",
        "cronJobDefinitions",
        "log",
        "Trace",
        "log",
        "Trace",
        "ShutdownSignaling",
        "IsShutdown",
        "log",
        "Trace",
        "RefreshLocAsync",
        "log",
        "Trace",
        "LogDiagnosticContext",
        "Start",
        "log",
        "Info",
        "locConnectionThreadFinished",
        "Reset",
        "ShutdownSignaling",
        "IsShutdown",
        "client",
        "ConnectAsync",
        "client",
        "RegisterPrimaryServerRoleAsync",
        "Config",
        "Configuration",
        "ServerRoles",
        "GetRolePort",
        "ServerRole",
        "Primary",
        "GetNeighborhoodInformationAsync",
        "client",
        "ReceiveMessageLoopAsync",
        "client",
        "DeregisterPrimaryServerRoleAsync",
        "e",
        "log",
        "e",
        "ToString",
        "Delay",
        "e",
        "client",
        "client",
        "Dispose",
        "locConnectionThreadFinished",
        "log",
        "Info",
        "LogDiagnosticContext",
        "Stop",
        "log",
        "Info",
        "client",
        "GetNeighborhoodInformationAsync",
        "response",
        "LocMessageProcessor",
        "client",
        "MessageProcessor",
        "res",
        "locMessageProcessor",
        "ProcessMessageGetNeighbourNodesByDistanceResponseAsync",
        "response",
        "log",
        "Info",
        "res",
        "res",
        "Value",
        "locServerInitializedLock",
        "locServerInitialized",
        "log",
        "Trace",
        "locServerInitialized",
        "client",
        "MessageBuilder",
        "CreateGetNeighbourNodesByDistanceLocalRequest",
        "client",
        "SendMessageAsync",
        "request",
        "log",
        "Trace",
        "log",
        "Warn",
        "e",
        "log",
        "Warn",
        "e",
        "ToString",
        "log",
        "Debug",
        "log",
        "Trace"
    ],
    "literals": [
        "\"Network.LocationBasedNetwork\"",
        "\"ProfileServer.\"",
        "\"()\"",
        "\"Exception occurred: {0}\"",
        "\"LOC connection thread did not terminated in 10 seconds.\"",
        "\"(-):{0}\"",
        "\"()\"",
        "\"LOC connection thread did not terminated in 10 seconds.\"",
        "\"(-)\"",
        "\"()\"",
        "\"refreshLocData\"",
        "\"(-)\"",
        "\"()\"",
        "\"(-):[SHUTDOWN]\"",
        "\"(-)\"",
        "\"()\"",
        "\"Exception occurred (and rethrowing): {0}\"",
        "\"(-)\"",
        "\"()\"",
        "\"(-):{0}\"",
        "\"()\"",
        "\"GetNeighbourNodesByDistanceLocalRequest sent to LOC server to get fresh neighborhood data.\"",
        "\"Unable to send message to LOC server.\"",
        "\"Exception occurred: {0}\"",
        "\"LOC server not initialized yet, can not refresh.\"",
        "\"(-)\""
    ],
    "variables": [
        "ComponentName",
        "Logger",
        "log",
        "ManualResetEvent",
        "locConnectionThreadFinished",
        "locConnectionThread",
        "LocClient",
        "client",
        "locServerInitialized",
        "LocServerInitialized",
        "locServerInitializedLock",
        "res",
        "cronJobDefinitions",
        "Cron",
        "cron",
        "res",
        "LocProtocolMessage",
        "response",
        "LocMessageProcessor",
        "locMessageProcessor",
        "LocProtocolMessage",
        "request"
    ],
    "comments": [
        "Location based network (LOC) is a part of IoP that the profile server relies on.",
        "When the profile server starts, this component connects to LOC and obtains information about the server's neighborhood.",
        "Then it keeps receiving updates from LOC about changes in the neighborhood structure.",
        "The profile server needs to share its database of hosted identities with its neighbors and it also accepts",
        "requests to share foreign profiles and consider them during its own search queries.",
        "</summary>",
        "Initializes the component.",
        "</summary>",
        "Registers component's cron jobs.",
        "</summary>",
        "Obtains fresh data from LOC server.",
        "Handler for \"refreshLocData\" cron job.",
        "</summary>",
        "Thread that is responsible for connection to LOC and processing LOC updates.",
        "If the LOC is not reachable, the thread will wait until it is reachable.",
        "If connection to LOC is established and closed for any reason, the thread will try to reconnect.",
        "</summary>",
        "Connect to LOC server.",
        "Announce our primary server interface to LOC.",
        "Ask LOC server about initial set of neighborhood nodes.",
        "Receive and process updates.",
        "Sends a request to the LOC server to obtain an initial neighborhood information and then reads the response and processes it.",
        "</summary>",
        "<returns>true if the function succeeds, false otherwise.</returns>",
        "Safely changes value of locServerInitialized.",
        "</summary>",
        "<param name=\"Value\">New value for locServerInitialized.</param>",
        "If the component is connected to LOC server, it sends a new GetNeighbourNodesByDistanceLocalRequest request",
        "to get fresh information about the profile server's neighborhood.",
        "</summary>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>Name of the component.</summary>",
        "<summary>Class logger.</summary>",
        "<summary>Event that is set when LocConnectionThread is not running.</summary>",
        "<summary>Thread that is responsible for communication with LOC.</summary>",
        "<summary>TCP client to connect with LOC server.</summary>",
        "<summary>true if the component received current information about the server's neighborhood from the LOC server.</summary>",
        "<summary>true if the component received current information about the server's neighborhood from the LOC server.</summary>",
        "<summary>Lock object to protect write access to locServerInitialized.</summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "LocationBasedNetwork",
        "Init",
        "Shutdown",
        "RegisterCronJobs",
        "CronJobHandlerRefreshLocDataAsync",
        "LocConnectionThread",
        "GetNeighborhoodInformationAsync",
        "SetLocServerInitialized",
        "RefreshLocAsync"
    ],
    "classes": [
        "LocationBasedNetwork"
    ]
}