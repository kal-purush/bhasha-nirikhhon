{
    "identifiers": [
        "angular",
        "url",
        "$q",
        "angular",
        "$timeout",
        "angular",
        "callback",
        "IHeatBlock",
        "$scope",
        "angular",
        "HeatSubscriberTopic",
        "callback",
        "$scope",
        "callback",
        "IHeatBlock",
        "$scope",
        "angular",
        "HeatSubscriberTopic",
        "callback",
        "$scope",
        "callback",
        "IHeatSubscriberBalanceChangedResponse",
        "$scope",
        "angular",
        "HeatSubscriberTopic",
        "callback",
        "$scope",
        "callback",
        "IHeatOrder",
        "$scope",
        "angular",
        "HeatSubscriberTopic",
        "callback",
        "$scope",
        "callback",
        "IHeatTrade",
        "$scope",
        "angular",
        "HeatSubscriberTopic",
        "callback",
        "$scope",
        "callback",
        "IHeatMessage",
        "$scope",
        "angular",
        "HeatSubscriberTopic",
        "callback",
        "$scope",
        "newTopic",
        "callback",
        "$scope",
        "angular",
        "newTopic",
        "topic",
        "callback",
        "topic",
        "callback",
        "angular",
        "$scope",
        "$scope",
        "unsubscribe",
        "unsubscribe",
        "topic",
        "i",
        "i",
        "i",
        "topic",
        "i",
        "topic",
        "topic",
        "topic",
        "callback",
        "topic",
        "callback",
        "topic",
        "topic",
        "topic",
        "t",
        "t",
        "topic",
        "topic",
        "websocket",
        "topic",
        "topic",
        "websocket",
        "topic",
        "topic",
        "topic",
        "topic",
        "topic",
        "websocket",
        "topic",
        "topic",
        "topic",
        "angular",
        "WebSocket",
        "websocket",
        "deferred",
        "deferred",
        "websocket",
        "deferred",
        "angular",
        "onclose",
        "deferred",
        "websocket",
        "websocket",
        "websocket",
        "websocket",
        "topic",
        "topic",
        "onopen",
        "deferred",
        "websocket",
        "onmessage",
        "e",
        "e",
        "websocket",
        "onclose",
        "websocket",
        "onopen",
        "websocket",
        "onerror",
        "websocket",
        "onmessage",
        "websocket",
        "topic",
        "websocket",
        "websocket",
        "topic",
        "topic",
        "topic",
        "websocket",
        "topic",
        "websocket",
        "websocket",
        "topic",
        "topic",
        "topic",
        "messageJson",
        "angular",
        "messageJson",
        "messageJson",
        "messageJson",
        "messageJson",
        "messageJson",
        "messageJson",
        "angular",
        "topicAsStr",
        "angular",
        "details",
        "messageJson",
        "topic",
        "topic",
        "topicAsStr",
        "topic",
        "details",
        "topic",
        "contents",
        "topic",
        "details",
        "topic",
        "filterKeys",
        "i",
        "i",
        "filterKeys",
        "i",
        "topic",
        "key",
        "details",
        "key",
        "topic",
        "contents",
        "topic",
        "listener",
        "listener",
        "contents",
        "e",
        "e"
    ],
    "literals": [
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"1\"",
        "\"2\"",
        "\"3\"",
        "\"4\"",
        "\"5\"",
        "\"6\"",
        "string",
        "'$destroy'",
        "\"Websocket parse error\"",
        "\"unsubscribe\"",
        "\"subscribe\"",
        "\"Websocket invalid message\"",
        "\"Websocket invalid field\""
    ],
    "variables": [
        "topic",
        "unsubscribe",
        "i",
        "deferred",
        "websocket",
        "onclose",
        "onerror",
        "onclose",
        "onopen",
        "onmessage",
        "topicAsStr",
        "details",
        "contents",
        "filterKeys",
        "i",
        "key"
    ],
    "comments": [
        "true or false",
        "ask or bid",
        "2.5 seconds in milliseconds",
        "websocket subscription topics - these match the topics in the java com.heatledger.websocket package",
        "Put all subscriber options here",
        "End subscriber options, start of general implementation code",
        "if there is a topic which is not subscribed we need to sync again",
        "on failure call syncTopicSubscriptions again after 5 seconds."
    ],
    "docstrings": [
        "* The MIT License (MIT)\n * Copyright (c) 2016 Heat Ledger Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *"
    ],
    "functions": [
        "blockPushed",
        "blockPopped",
        "balanceChanged",
        "order",
        "trade",
        "message",
        "subscribe",
        "findExistingOrAddNewTopic",
        "createUnsubscribeFunction",
        "unsubscribeTopic",
        "syncTopicSubscriptions",
        "getConnectedSocket",
        "hookupWebsocketEventListeners",
        "sendUnsubscribe",
        "sendSubscribe",
        "onMessageReceived",
        "topicMatchesDetails",
        "invokeListeners"
    ],
    "classes": [
        "HeatSubscriber"
    ]
}