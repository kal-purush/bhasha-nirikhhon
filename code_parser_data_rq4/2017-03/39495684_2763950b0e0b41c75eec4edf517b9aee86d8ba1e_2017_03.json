{
    "identifiers": [
        "sentry",
        "conf",
        "server",
        "sentry",
        "utils",
        "types",
        "Bool",
        "os",
        "os",
        "path",
        "os",
        "path",
        "dirname",
        "os",
        "environ",
        "get",
        "env",
        "env",
        "postgres",
        "env",
        "env",
        "env",
        "env",
        "env",
        "env",
        "postgres",
        "env",
        "Bool",
        "env",
        "env",
        "env",
        "redis",
        "env",
        "env",
        "env",
        "SENTRY_OPTIONS",
        "update",
        "redis",
        "redis_password",
        "redis_port",
        "redis_db",
        "env",
        "env",
        "memcached",
        "env",
        "memcached",
        "memcached_port",
        "env",
        "env",
        "rabbitmq",
        "env",
        "env",
        "env",
        "env",
        "rabbitmq",
        "env",
        "env",
        "redis_password",
        "redis",
        "redis_port",
        "redis_db",
        "env",
        "Bool",
        "env",
        "env",
        "env",
        "email",
        "email",
        "env",
        "env",
        "env",
        "Bool",
        "env",
        "env",
        "env",
        "SENTRY_OPTIONS",
        "Bool",
        "env",
        "SENTRY_OPTIONS",
        "env",
        "env",
        "secret_key",
        "os",
        "environ",
        "len",
        "secret_key",
        "secret_key",
        "os",
        "environ",
        "env",
        "env",
        "os",
        "environ",
        "env",
        "env"
    ],
    "literals": [
        "'SENTRY_POSTGRES_HOST'",
        "'POSTGRES_PORT_5432_TCP_ADDR'",
        "'postgres'",
        "'default'",
        "'ENGINE'",
        "'sentry.db.postgres'",
        "'NAME'",
        "'SENTRY_DB_NAME'",
        "'POSTGRES_ENV_POSTGRES_USER'",
        "'postgres'",
        "'USER'",
        "'SENTRY_DB_USER'",
        "'POSTGRES_ENV_POSTGRES_USER'",
        "'postgres'",
        "'PASSWORD'",
        "'SENTRY_DB_PASSWORD'",
        "'POSTGRES_ENV_POSTGRES_PASSWORD'",
        "''",
        "'HOST'",
        "'PORT'",
        "'SENTRY_POSTGRES_PORT'",
        "''",
        "'OPTIONS'",
        "'autocommit'",
        "'SENTRY_SINGLE_ORGANIZATION'",
        "'SENTRY_REDIS_HOST'",
        "'REDIS_PORT_6379_TCP_ADDR'",
        "'redis'",
        "'Error: REDIS_PORT_6379_TCP_ADDR (or SENTRY_REDIS_HOST) is undefined, did you forget to `--link` a redis container?'",
        "'SENTRY_REDIS_PASSWORD'",
        "''",
        "'SENTRY_REDIS_PORT'",
        "'6379'",
        "'SENTRY_REDIS_DB'",
        "'0'",
        "'redis.clusters'",
        "'default'",
        "'hosts'",
        "'host'",
        "'password'",
        "'port'",
        "'db'",
        "'SENTRY_MEMCACHED_HOST'",
        "'MEMCACHED_PORT_11211_TCP_ADDR'",
        "'memcached'",
        "'SENTRY_MEMCACHED_PORT'",
        "'11211'",
        "'default'",
        "'BACKEND'",
        "'django.core.cache.backends.memcached.MemcachedCache'",
        "'LOCATION'",
        "':'",
        "'TIMEOUT'",
        "'sentry.cache.redis.RedisCache'",
        "'SENTRY_RABBITMQ_HOST'",
        "'RABBITMQ_PORT_5672_TCP_ADDR'",
        "'rabbitmq'",
        "'amqp://'",
        "'SENTRY_RABBITMQ_USERNAME'",
        "'RABBITMQ_ENV_RABBITMQ_DEFAULT_USER'",
        "'guest'",
        "':'",
        "'SENTRY_RABBITMQ_PASSWORD'",
        "'RABBITMQ_ENV_RABBITMQ_DEFAULT_PASS'",
        "'guest'",
        "'@'",
        "'/'",
        "'SENTRY_RABBITMQ_VHOST'",
        "'RABBITMQ_ENV_RABBITMQ_DEFAULT_VHOST'",
        "'/'",
        "'redis://:'",
        "'@'",
        "':'",
        "'/'",
        "'sentry.ratelimits.redis.RedisRateLimiter'",
        "'sentry.buffer.redis.RedisBuffer'",
        "'sentry.quotas.redis.RedisQuota'",
        "'sentry.tsdb.redis.RedisTSDB'",
        "'sentry.digests.backends.redis.RedisBackend'",
        "'filestore.backend'",
        "'filesystem'",
        "'filestore.options'",
        "'location'",
        "'SENTRY_FILESTORE_DIR'",
        "'SENTRY_USE_SSL'",
        "'HTTP_X_FORWARDED_PROTO'",
        "'https'",
        "'0.0.0.0'",
        "'SENTRY_EMAIL_HOST'",
        "'SMTP_PORT_25_TCP_ADDR'",
        "'smtp'",
        "'mail.backend'",
        "'smtp'",
        "'mail.host'",
        "'mail.password'",
        "'SENTRY_EMAIL_PASSWORD'",
        "''",
        "'mail.username'",
        "'SENTRY_EMAIL_USER'",
        "''",
        "'mail.port'",
        "'SENTRY_EMAIL_PORT'",
        "'mail.use-tls'",
        "'SENTRY_EMAIL_USE_TLS'",
        "'mail.backend'",
        "'dummy'",
        "'mail.from'",
        "'SENTRY_SERVER_EMAIL'",
        "'root@localhost'",
        "'mail.mailgun-api-key'",
        "'SENTRY_MAILGUN_API_KEY'",
        "''",
        "'mail.mailgun-api-key'",
        "'mail.enable-replies'",
        "'mail.enable-replies'",
        "'SENTRY_ENABLE_EMAIL_REPLIES'",
        "'mail.enable-replies'",
        "'mail.reply-hostname'",
        "'SENTRY_SMTP_HOSTNAME'",
        "''",
        "'SENTRY_SECRET_KEY'",
        "'Error: SENTRY_SECRET_KEY is undefined, run `generate-secret-key` and set to -e SENTRY_SECRET_KEY'",
        "'SENTRY_RUNNING_UWSGI'",
        "'!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!'",
        "'!!                    CAUTION                       !!'",
        "'!! Your SENTRY_SECRET_KEY is potentially insecure.  !!'",
        "'!!    We recommend at least 32 characters long.     !!'",
        "'!!     Regenerate with `generate-secret-key`.       !!'",
        "'!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!'",
        "'system.secret-key'",
        "'GITHUB_APP_ID'",
        "'repo'",
        "'GITHUB_APP_ID'",
        "'GITHUB_API_SECRET'",
        "'BITBUCKET_CONSUMER_KEY'",
        "'BITBUCKET_CONSUMER_KEY'",
        "'BITBUCKET_CONSUMER_SECRET'",
        "'auth:register'"
    ],
    "variables": [
        "CONF_ROOT",
        "env",
        "postgres",
        "DATABASES",
        "SENTRY_USE_BIG_INTS",
        "SENTRY_SINGLE_ORGANIZATION",
        "redis",
        "redis_password",
        "redis_port",
        "redis_db",
        "memcached",
        "memcached_port",
        "CACHES",
        "SENTRY_CACHE",
        "rabbitmq",
        "BROKER_URL",
        "BROKER_URL",
        "SENTRY_RATELIMITER",
        "SENTRY_BUFFER",
        "SENTRY_QUOTAS",
        "SENTRY_TSDB",
        "SENTRY_DIGESTS",
        "SENTRY_OPTIONS",
        "SENTRY_OPTIONS",
        "SECURE_PROXY_SSL_HEADER",
        "SESSION_COOKIE_SECURE",
        "CSRF_COOKIE_SECURE",
        "SOCIAL_AUTH_REDIRECT_IS_HTTPS",
        "SENTRY_WEB_HOST",
        "SENTRY_WEB_PORT",
        "SENTRY_WEB_OPTIONS",
        "email",
        "SENTRY_OPTIONS",
        "SENTRY_OPTIONS",
        "SENTRY_OPTIONS",
        "SENTRY_OPTIONS",
        "SENTRY_OPTIONS",
        "SENTRY_OPTIONS",
        "SENTRY_OPTIONS",
        "SENTRY_OPTIONS",
        "SENTRY_OPTIONS",
        "SENTRY_OPTIONS",
        "SENTRY_OPTIONS",
        "SENTRY_OPTIONS",
        "secret_key",
        "SENTRY_OPTIONS",
        "GITHUB_EXTENDED_PERMISSIONS",
        "GITHUB_APP_ID",
        "GITHUB_API_SECRET",
        "BITBUCKET_CONSUMER_KEY",
        "BITBUCKET_CONSUMER_SECRET",
        "SENTRY_FEATURES"
    ],
    "comments": [
        "This file is just Python, with a touch of Django which means",
        "you can inherit and tweak settings to your hearts content.",
        "For Docker, the following environment variables are supported:",
        "SENTRY_POSTGRES_HOST",
        "SENTRY_POSTGRES_PORT",
        "SENTRY_DB_NAME",
        "SENTRY_DB_USER",
        "SENTRY_DB_PASSWORD",
        "SENTRY_RABBITMQ_HOST",
        "SENTRY_RABBITMQ_USERNAME",
        "SENTRY_RABBITMQ_PASSWORD",
        "SENTRY_RABBITMQ_VHOST",
        "SENTRY_REDIS_HOST",
        "SENTRY_REDIS_PASSWORD",
        "SENTRY_REDIS_PORT",
        "SENTRY_REDIS_DB",
        "SENTRY_MEMCACHED_HOST",
        "SENTRY_MEMCACHED_PORT",
        "SENTRY_FILESTORE_DIR",
        "SENTRY_SERVER_EMAIL",
        "SENTRY_EMAIL_HOST",
        "SENTRY_EMAIL_PORT",
        "SENTRY_EMAIL_USER",
        "SENTRY_EMAIL_PASSWORD",
        "SENTRY_EMAIL_USE_TLS",
        "SENTRY_ENABLE_EMAIL_REPLIES",
        "SENTRY_SMTP_HOSTNAME",
        "SENTRY_MAILGUN_API_KEY",
        "SENTRY_SINGLE_ORGANIZATION",
        "SENTRY_SECRET_KEY",
        "GITHUB_APP_ID",
        "GITHUB_API_SECRET",
        "BITBUCKET_CONSUMER_KEY",
        "BITBUCKET_CONSUMER_SECRET",
        "NOQA",
        "You should not change this setting after your database has been created",
        "unless you have altered all schemas first",
        "If you're expecting any kind of real traffic on Sentry, we highly recommend",
        "configuring the CACHES and Redis settings",
        "",
        "General #",
        "",
        "Instruct Sentry that this install intends to be run by a single organization",
        "and thus various UI optimizations should be enabled.",
        "",
        "Redis #",
        "",
        "Generic Redis configuration used as defaults for various things including:",
        "Buffers, Quotas, TSDB",
        "",
        "Cache #",
        "",
        "Sentry currently utilizes two separate mechanisms. While CACHES is not a",
        "requirement, it will optimize several high throughput patterns.",
        "A primary cache is required for things such as processing events",
        "",
        "Queue #",
        "",
        "See https://docs.getsentry.com/on-premise/server/queue/ for more",
        "information on configuring your queue broker and workers. Sentry relies",
        "on a Python framework called Celery to manage queues.",
        "",
        "Rate Limits #",
        "",
        "Rate limits apply to notification handlers and are enforced per-project",
        "automatically.",
        "",
        "Update Buffers #",
        "",
        "Buffers (combined with queueing) act as an intermediate layer between the",
        "database and the storage API. They will greatly improve efficiency on large",
        "numbers of the same events being sent to the API in a short amount of time.",
        "(read: if you send any kind of real data to Sentry, you should enable buffers)",
        "",
        "Quotas #",
        "",
        "Quotas allow you to rate limit individual projects or the Sentry install as",
        "a whole.",
        "",
        "TSDB #",
        "",
        "The TSDB is used for building charts as well as making things like per-rate",
        "alerts possible.",
        "",
        "Digests #",
        "",
        "The digest backend powers notification summaries.",
        "",
        "File storage #",
        "",
        "Uploaded media uses these `filestore` settings. The available",
        "backends are either `filesystem` or `s3`.",
        "",
        "Web Server #",
        "",
        "If you're using a reverse SSL proxy, you should enable the X-Forwarded-Proto",
        "header and set `SENTRY_USE_SSL=1`",
        "'workers': 3,  # the number of web workers",
        "",
        "Mail Server #",
        "",
        "The email address to send on behalf of",
        "If you're using mailgun for inbound mail, set your API key and configure a",
        "route to forward to /api/hooks/mailgun/inbound/",
        "If you specify a MAILGUN_API_KEY, you definitely want EMAIL_REPLIES",
        "If this value ever becomes compromised, it's important to regenerate your",
        "SENTRY_SECRET_KEY. Changing this value will result in all current sessions",
        "being invalidated.",
        "Disable user registration. Users can see other usernames.",
        "This can be misused for brute forcing."
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}