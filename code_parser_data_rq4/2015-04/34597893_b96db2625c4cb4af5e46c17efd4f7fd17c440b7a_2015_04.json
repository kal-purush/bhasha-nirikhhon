{
    "identifiers": [
        "Tkinter",
        "serial",
        "math",
        "fileinput",
        "select",
        "sys",
        "time",
        "socket",
        "Tk",
        "autoOn",
        "startAngle",
        "endAngle",
        "dropThreshhold",
        "data",
        "angle",
        "startAngle",
        "endAngle",
        "data",
        "angle",
        "dropThreshhold",
        "result",
        "data",
        "angle",
        "dropThreshhold",
        "result",
        "dropThreshold",
        "data",
        "angle",
        "angle",
        "angle",
        "endAngle",
        "endAngle",
        "startAngle",
        "endAngle",
        "getMarksBetweenAngles",
        "startAngle",
        "endAngle",
        "dropThreshold",
        "data",
        "angleData",
        "append",
        "angle",
        "totalMarks",
        "angleData",
        "sorted",
        "angleData",
        "key",
        "angle",
        "totalMarks",
        "totalMarks",
        "tupleData",
        "tupleData",
        "tupleData",
        "distance",
        "dropThreshold",
        "data",
        "i",
        "dir",
        "i",
        "dir",
        "startAngle",
        "dir",
        "startAngle",
        "endAngle",
        "getMarksBetweenAngles",
        "startAngle",
        "endAngle",
        "dropThreshold",
        "data",
        "angleList",
        "append",
        "startAngle",
        "dir",
        "totalMarks",
        "angleList",
        "sorted",
        "angleList",
        "key",
        "angle",
        "totalMarks",
        "totalMarks",
        "C",
        "create_line",
        "math",
        "floor",
        "HEIGHT",
        "WIDTH",
        "math",
        "floor",
        "HEIGHT",
        "fill",
        "C",
        "create_line",
        "math",
        "floor",
        "WIDTH",
        "math",
        "floor",
        "WIDTH",
        "HEIGHT",
        "fill",
        "i",
        "math",
        "floor",
        "WIDTH",
        "i",
        "PIXELS_PER_CM",
        "math",
        "floor",
        "HEIGHT",
        "C",
        "create_line",
        "x",
        "yAxis",
        "x",
        "yAxis",
        "fill",
        "math",
        "floor",
        "WIDTH",
        "i",
        "PIXELS_PER_CM",
        "C",
        "create_line",
        "x",
        "yAxis",
        "x",
        "yAxis",
        "fill",
        "math",
        "floor",
        "HEIGHT",
        "i",
        "PIXELS_PER_CM",
        "math",
        "floor",
        "WIDTH",
        "C",
        "create_line",
        "xAxis",
        "y",
        "xAxis",
        "y",
        "fill",
        "math",
        "floor",
        "HEIGHT",
        "i",
        "PIXELS_PER_CM",
        "math",
        "floor",
        "WIDTH",
        "C",
        "create_line",
        "xAxis",
        "y",
        "xAxis",
        "y",
        "fill",
        "x",
        "y",
        "WIDTH",
        "x",
        "HEIGHT",
        "y",
        "C",
        "create_oval",
        "xLoc",
        "yLoc",
        "xLoc",
        "yLoc",
        "angle",
        "distance",
        "angle",
        "WIDTH",
        "HEIGHT",
        "distance",
        "math",
        "cos",
        "math",
        "radians",
        "angle",
        "PIXELS_PER_CM",
        "distance",
        "math",
        "sin",
        "math",
        "radians",
        "angle",
        "PIXELS_PER_CM",
        "C",
        "create_line",
        "origin",
        "origin",
        "origin",
        "destination",
        "origin",
        "destination",
        "fill",
        "data",
        "autoOn",
        "C",
        "drawAxes",
        "angle",
        "distance",
        "data",
        "drawPoint",
        "math",
        "floor",
        "distance",
        "math",
        "cos",
        "math",
        "radians",
        "angle",
        "PIXELS_PER_CM",
        "math",
        "floor",
        "distance",
        "math",
        "sin",
        "math",
        "radians",
        "angle",
        "PIXELS_PER_CM",
        "autoOn",
        "bestAngleToTurn",
        "data",
        "myTuple",
        "myTuple",
        "drawLineFromOrigin",
        "angle",
        "angle",
        "distance",
        "angle",
        "sendCommand",
        "sendCommand",
        "angle",
        "sendCommand",
        "sendCommand",
        "sendCommand",
        "angle",
        "sendCommand",
        "sendCommand",
        "sendCommand",
        "distance",
        "sendCommand",
        "sendCommand",
        "command",
        "command",
        "sock",
        "method",
        "usb",
        "write",
        "command",
        "method",
        "command",
        "sock",
        "send",
        "command",
        "usb",
        "usb",
        "inWaiting",
        "usb",
        "readline",
        "rstrip",
        "command",
        "tcpBuffer",
        "tcpBuffer",
        "find",
        "find",
        "tcpBuffer",
        "find",
        "tcpBuffer",
        "find",
        "len",
        "tcpBuffer",
        "find",
        "command",
        "sock",
        "tcpBuffer",
        "client",
        "sock",
        "recv",
        "tcpBuffer",
        "msg",
        "socket",
        "timeout",
        "getNextCommandFromBuffer",
        "method",
        "method",
        "getCommandOverUSB",
        "method",
        "getCommandOverTCP",
        "autoOn",
        "tcpBuffer",
        "select",
        "select",
        "sys",
        "stdin",
        "sys",
        "stdin",
        "readline",
        "rstrip",
        "userCommand",
        "sendCommand",
        "userCommand",
        "sendCommand",
        "userCommand",
        "userCommand",
        "sendCommand",
        "userCommand",
        "startswith",
        "sendCommand",
        "userCommand",
        "userCommand",
        "startswith",
        "sendCommand",
        "userCommand",
        "userCommand",
        "startswith",
        "tcpBuffer",
        "getCommand",
        "command",
        "startswith",
        "command",
        "len",
        "command",
        "command",
        "replace",
        "x",
        "x",
        "command",
        "split",
        "onRecieveScan",
        "convertedData",
        "command",
        "startswith",
        "command",
        "after",
        "task",
        "sys",
        "stdin",
        "readline",
        "rstrip",
        "method",
        "serial",
        "Serial",
        "serial",
        "SerialException",
        "sys",
        "exit",
        "method",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_STREAM",
        "sock",
        "connect",
        "server_address",
        "sock",
        "settimeout",
        "socket",
        "error",
        "msg",
        "sys",
        "exit",
        "Canvas",
        "bg",
        "height",
        "HEIGHT",
        "width",
        "WIDTH",
        "C",
        "pack",
        "title",
        "after",
        "task",
        "mainloop"
    ],
    "literals": [
        "\"\"",
        "\"\"",
        "\"Start: \"",
        "\" | End: \"",
        "\"Angle Data:\"",
        "\"green\"",
        "\"green\"",
        "\"green\"",
        "\"green\"",
        "\"green\"",
        "\"green\"",
        "\"red\"",
        "\"all\"",
        "\"Autonomous mode: Turning to angle \"",
        "\" then going \"",
        "\"cm forward\"",
        "\"turn left \"",
        "\"\\n\"",
        "\"turn right \"",
        "\"\\n\"",
        "\"go forward \"",
        "\"\\n\"",
        "\"scan\\n\"",
        "\"usb\"",
        "\"tcp\"",
        "\"sending \"",
        "\"\"",
        "\"\\n\"",
        "\"\"",
        "\"\"",
        "\"usb\"",
        "\"tcp\"",
        "\"auto on\"",
        "\"Autonomous Mode On\"",
        "\"scan\\n\"",
        "\"scan\"",
        "\"scan\\n\"",
        "\"auto off\"",
        "\"Autonomous Mode Off\"",
        "\"calibrate\"",
        "\"calibrate\\n\"",
        "\"turn \"",
        "\"\\n\"",
        "\"go \"",
        "\"\\n\"",
        "\"buffer\"",
        "\"Unknown Command\"",
        "\"scan \"",
        "\"Received Environment Scan from Arduino. Processing . . .\"",
        "\"scan \"",
        "\"\"",
        "\",\"",
        "\"#\"",
        "\"Running AGER Debugger\"",
        "\"Do you want to connect over USB or TCP? (enter 'usb' or 'tcp')\"",
        "\"usb\"",
        "'/dev/tty.usbmodem1411'",
        "\"Connected over USB\"",
        "\"Cannot connect over USB. Exiting.\"",
        "\"tcp\"",
        "'pi'",
        "\"Connected over TCP\"",
        "\"Cannot connect over TCP. Exiting.\"",
        "\"blue\"",
        "\"AGER Python Debugger\""
    ],
    "variables": [
        "PIXELS_PER_CM",
        "HEIGHT",
        "WIDTH",
        "autoOn",
        "method",
        "tcpBuffer",
        "result",
        "angleData",
        "startAngle",
        "endAngle",
        "endAngle",
        "totalMarks",
        "tupleData",
        "distance",
        "distance",
        "distance",
        "angleList",
        "startAngle",
        "endAngle",
        "startAngle",
        "endAngle",
        "totalMarks",
        "x",
        "yAxis",
        "x",
        "y",
        "xAxis",
        "y",
        "xAxis",
        "xLoc",
        "yLoc",
        "angle",
        "origin",
        "destination",
        "myTuple",
        "angle",
        "distance",
        "command",
        "command",
        "find",
        "command",
        "tcpBuffer",
        "input",
        "msg",
        "userCommand",
        "autoOn",
        "autoOn",
        "command",
        "command",
        "command",
        "convertedData",
        "method",
        "usb",
        "sock",
        "server_address",
        "C"
    ],
    "comments": [
        "default",
        "tcp or usb",
        "Sweep between an startAngle and endAngle, adding up all of the points that corrospond to an encountered object",
        "Do not include any value >= dropThreshold",
        "Readjust",
        "Readjust",
        "print sorted(angleList, key=lambda (angle, totalMarks): totalMarks)",
        "Draw simple lines to represent the X and Y axes",
        "X Axis",
        "Y Axis",
        "X Axis Markings",
        "Y Axis Markings",
        "If the middle of the window was coordinate (x, y), draw the following point on the window",
        "When we recieve scan debug data from the Arduino robot",
        "'data' is expected to be a list containing 360 integers representing the distance at angle (where the index is the angle)",
        "print \".\"",
        "Process input from STDIN",
        "Initiate the back-and-forth communication",
        "Initiate the back-and-forth communication",
        "Send calibration command",
        "",
        "reschedule event in 2 seconds"
    ],
    "docstrings": [
        "\"\"\"\n    for i in range(0, 4):\n      if(angleList[i][1] < 4):\n        if(angleList[i][0] > 180):\n          return (angleList[i][0] - 180) * -1\n        else:\n          return angleList[i][0]\n    \"\"\"",
        "\"\"\"\ndef getCommandOverTCP():\n    input = \"\"\n    global sock\n    global tcpBuffer\n    global client\n    ready = select.select([sock], [], [], 0.001)\n    if ready:\n        input = sock.recv(1)\n        tcpBuffer = tcpBuffer + input\n        return getNextCommandFromBuffer()\n    else:\n        return \"\"\n\"\"\""
    ],
    "functions": [
        "getMarksBetweenAngles",
        "bestAngleToTurn",
        "bestAngleToTurn2",
        "drawAxes",
        "drawPoint",
        "drawLineFromOrigin",
        "onRecieveScan",
        "processRemoteCommand",
        "sendCommand",
        "getCommandOverUSB",
        "getNextCommandFromBuffer",
        "getCommandOverTCP",
        "getCommand",
        "task"
    ],
    "classes": []
}