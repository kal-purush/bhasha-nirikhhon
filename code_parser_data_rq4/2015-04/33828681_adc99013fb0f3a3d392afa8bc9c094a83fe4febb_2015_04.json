{
    "identifiers": [
        "sys",
        "random",
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "np",
        "sqrt",
        "E_a",
        "E_s",
        "r_a",
        "r_s",
        "np",
        "sqrt",
        "W",
        "r_s",
        "Hs",
        "r_s",
        "sqrt3",
        "Ha",
        "r_s",
        "Dmax",
        "Dmin",
        "r_s",
        "L",
        "bin_size",
        "D",
        "bin_size",
        "w",
        "h",
        "r_s",
        "np",
        "array",
        "r_s",
        "i",
        "h",
        "i",
        "r_s",
        "sqrt3",
        "x",
        "w",
        "np",
        "array",
        "x",
        "r_s",
        "y",
        "i",
        "Ri",
        "roffset",
        "R",
        "append",
        "PutInBox",
        "Ri",
        "np",
        "array",
        "R",
        "Ri",
        "Ri",
        "L",
        "abs",
        "x",
        "L",
        "x",
        "L",
        "L",
        "L",
        "x",
        "Ri",
        "Ri",
        "Rj",
        "PutInBox",
        "Rj",
        "Ri",
        "Ri",
        "Rj",
        "Displacement",
        "Ri",
        "Rj",
        "np",
        "sqrt",
        "np",
        "dot",
        "d",
        "d",
        "Ri",
        "Ri",
        "L",
        "bin_size",
        "Ri",
        "Dmin",
        "bin_size",
        "nx",
        "ny",
        "R",
        "Ri",
        "R",
        "BinIndex",
        "Ri",
        "len",
        "bins",
        "nx",
        "bins",
        "append",
        "len",
        "bins",
        "nx",
        "ny",
        "bins",
        "nx",
        "append",
        "bins",
        "nx",
        "ny",
        "append",
        "Ri",
        "bins",
        "Ri",
        "BinIndex",
        "Ri",
        "nx",
        "nx",
        "nx",
        "ny",
        "ny",
        "ny",
        "i",
        "nearby_x",
        "i",
        "nearby_x",
        "i",
        "nbins_x",
        "nearby_x",
        "i",
        "nbins_x",
        "nearby_x",
        "i",
        "nbins_x",
        "nearby_y",
        "i",
        "nearby_y",
        "i",
        "nbins_y",
        "nearby_y",
        "i",
        "nbins_y",
        "nearby_y",
        "i",
        "nbins_y",
        "nearby_x",
        "nearby_y",
        "Ri",
        "Rj",
        "E_ij",
        "r_ij",
        "Distance",
        "Ri",
        "Rj",
        "r",
        "E_ij",
        "r_ij",
        "r",
        "r_ij",
        "r",
        "adatom",
        "substrate_bins",
        "E_as",
        "r_as",
        "NearbyBins",
        "adatom",
        "x",
        "nearby_x",
        "y",
        "nearby_y",
        "nearby_substrate",
        "substrate_bins",
        "x",
        "y",
        "IndexError",
        "sum",
        "PairwisePotential",
        "adatom",
        "Rs",
        "E_as",
        "r_as",
        "Rs",
        "nearby_substrate",
        "i",
        "adatoms",
        "E_a",
        "r_a",
        "adatoms",
        "i",
        "len",
        "adatoms",
        "sum",
        "PairwisePotential",
        "Ri",
        "Rj",
        "E_as",
        "r_as",
        "Rj",
        "adatoms",
        "NearbyBins",
        "Ri",
        "PutInBins",
        "adatoms",
        "x",
        "nearby_x",
        "y",
        "nearby_y",
        "nearby_adatoms",
        "adatom_bins",
        "x",
        "y",
        "IndexError",
        "sum",
        "PairwisePotential",
        "Ri",
        "Rj",
        "E_as",
        "r_as",
        "Rj",
        "nearby_adatoms",
        "substrate",
        "a",
        "substrate",
        "plt",
        "scatter",
        "a",
        "a",
        "color",
        "x",
        "nbins_x",
        "plt",
        "plot",
        "x",
        "bin_size",
        "L",
        "x",
        "bin_size",
        "L",
        "Dmin",
        "nbins_y",
        "bin_size",
        "Dmin",
        "color",
        "y",
        "nbins_y",
        "plt",
        "plot",
        "L",
        "nbins_x",
        "bin_size",
        "L",
        "y",
        "bin_size",
        "Dmin",
        "y",
        "bin_size",
        "Dmin",
        "color",
        "plt",
        "show",
        "InitSubstrate",
        "W",
        "Hs",
        "r_s",
        "PutInBins",
        "substrate"
    ],
    "literals": [
        "'blue'",
        "'red'",
        "'red'"
    ],
    "variables": [
        "E_a",
        "E_s",
        "r_a",
        "r_s",
        "E_as",
        "r_as",
        "sqrt3",
        "W",
        "Hs",
        "Ha",
        "L",
        "Dmin",
        "Dmax",
        "D",
        "bin_size",
        "nbins_x",
        "nbins_y",
        "R",
        "roffset",
        "y",
        "Ri",
        "x",
        "d",
        "nx",
        "ny",
        "bins",
        "nx",
        "ny",
        "nx",
        "ny",
        "nearby_x",
        "nearby_y",
        "r",
        "nearby_x",
        "nearby_y",
        "nearby_substrate",
        "Ri",
        "nearby_x",
        "nearby_y",
        "adatom_bins",
        "nearby_adatoms",
        "substrate",
        "substrate_bins"
    ],
    "comments": [
        "!/usr/bin/env python",
        "-*- coding: utf-8 -*-",
        "Constants",
        "Box Parameters",
        "Bins with no atoms are not returned from PutInBins()",
        "faster for small systems, slower for big systems",
        "Bins with no atoms are not returned from PutInBins()",
        "minimum energy position",
        "xs = np.linspace(0, L, 500)",
        "Es = [AdatomSurfaceEnergy(np.array([x, r_as]), substrate_bins, E_as, r_as) for x in xs]",
        "xmin = xs[Es.index(min(Es))]",
        "xs = np.linspace(xmin-0.1, xmin+0.1, 500)",
        "Es = [AdatomSurfaceEnergy(np.array([x, r_as]), substrate_bins, E_as, r_as) for x in xs]",
        "xmin = xs[Es.index(min(Es))]",
        "ys = np.linspace(r_as/2, r_as*2, 500)",
        "Es = [AdatomSurfaceEnergy(np.array([xmin, y]), substrate_bins, E_as, r_as) for y in ys]",
        "ymin = ys[Es.index(min(Es))]",
        "ys = np.linspace(ymin-0.1, ymin+0.1, 500)",
        "Es = [AdatomSurfaceEnergy(np.array([xmin, y]), substrate_bins, E_as, r_as) for y in ys]",
        "ymin = ys[Es.index(min(Es))]",
        "print xmin/r_as, ymin/r_as",
        "print AdatomSurfaceEnergy(np.array([xmin, ymin]), substrate_bins, E_as, r_as)",
        "plt.plot(ys, Es)",
        "plt.show()"
    ],
    "docstrings": [
        "'''\n\tInitialize substrate atom positions in a hexagonal grid below y = 0\n\t\n\tw:   Int   - number of atoms in a horizontal row\n\th:   Int   - number of rows\n\tr_s: Float - spacing between atoms\n\t\n\treturns: np.array(np.array[x, y]) - list of substrate atom positions\n\t'''",
        "'''\n\tImplement periodic boundary conditions along the x-axis.\n\t\n\tRi: np.array[x, y] - position of a single atom\n\tL:  Float          - global variable indicating the width of the periodic cell\n\t\n\treturns: np.array[x, y] - correct position using PBC\n\t'''",
        "'''\n\tLeast-distance spacial displacement between two atoms.\n\t\n\tRi: np.array[x, y] - position of first atom\n\tRj: np.array[x, y] - position of second atom\n\t\n\treturns: np.array[x, y] - vector pointing from Ri to Rj\n\t'''",
        "'''\n\tLeast-distance between two atoms.\n\t\n\tRi: np.array[x, y] - position of first atom\n\tRj: np.array[x, y] - position of second atom\n\t\n\treturns: Float - distance between Ri and Rj\n\t'''",
        "'''\n\tPosition of an atom in 'bin-space'.\n\t\n\tRi:       np.array[x, y] - position of atom\n\tL:        Float          - global variable indicating width of the periodic cell\n\tbin_size: Float          - global variable indicating width of a bin\n\tDmin:     Float          - global variable indicating the lowest substrate atom y-position\n\t\n\treturns: (Int, Int) - indices of the atom in 'bin-space'\n\t'''",
        "'''\n\tWhich atoms go in which bins?\n\t\n\tR: np.array(np.array[x, y]) - list of atom positions\n\t\n\treturns: [[[np.array[x, y]]]] - bins of atom positions ordered column-first ([x][y])\n\t'''",
        "'''\n\tWhich bins are adjacent to this atom?\n\t\n\tRi:      np.array[x, y] - position of atom\n\tnbins_x: Int            - global variable indicating number of bins along x-axis\n\tnbins_y: Int            - global variable indicating number of bins along y-axis\n\t\n\treturns: ([Int], [Int]) - indices of nearby bins separated by coordinate ([all-xs], [all-ys])\n\t'''",
        "'''\n\tLennard-Jones potential between two atoms.\n\t\n\tRi:   np.array[x, y] - position of first atom\n\tRj:   np.array[x, y] - position of second atom\n\tE_ij: Float          - binding energy between Ri and Rj\n\tr_ij: Float          - equilibrium bond length between Ri and Rj\n\t\n\treturns: Float - potential energy of Ri due to Rj (will return 0 if Ri == Rj)\n\t'''",
        "'''\n\tLennard-Jones potential between an adatom and the substrate atoms.\n\t\n\tadatom:         np.array[x, y]       - position of adatom\n\tsubstrate_bins: [[[np.array[x, y]]]] - binned substrate positions\n\tE_as:           Float                - binding energy between adatoms and substrate atoms\n\tr_as:           Float                - equilibrium bond length between adatoms and substrate atoms\n\t\n\treturns: Float - potential energy of adatom due to substrate atoms\n\t'''",
        "'''\n\tLennard-Jones potential between an adatom and other adatoms.\n\t\n\ti:       Int                      - index of adatom\n\tadatoms: np.array(np.array[x, y]) - position of adatom\n\tE_a:     Float                    - binding energy between adatoms and substrate atoms\n\tr_a:     Float                    - equilibrium bond length between adatoms and substrate atoms\n\t\n\treturns: Float - potential energy of an adatom due to other adatoms\n\t'''"
    ],
    "functions": [
        "InitSubstrate",
        "PutInBox",
        "Displacement",
        "Distance",
        "BinIndex",
        "PutInBins",
        "NearbyBins",
        "PairwisePotential",
        "AdatomSurfaceEnergy",
        "AdatomAdatomEnergy",
        "PlotSubstrate"
    ],
    "classes": []
}