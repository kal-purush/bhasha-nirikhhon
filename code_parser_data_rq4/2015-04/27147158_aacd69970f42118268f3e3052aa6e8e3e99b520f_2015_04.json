{
    "identifiers": [
        "troposphere",
        "Parameter",
        "Tags",
        "Ref",
        "Base64",
        "ec2",
        "template_utils",
        "utils",
        "troposphere",
        "autoscaling",
        "asg",
        "majorkirby",
        "StackNode",
        "utils",
        "GTStackNode",
        "get_input",
        "add_parameter",
        "Parameter",
        "Type",
        "Description",
        "source",
        "add_parameter",
        "Parameter",
        "Type",
        "Default",
        "Description",
        "source",
        "get_input",
        "add_parameter",
        "Parameter",
        "Type",
        "Default",
        "ip_access",
        "Description",
        "source",
        "add_parameter",
        "Parameter",
        "Type",
        "Description",
        "source",
        "add_parameter",
        "Parameter",
        "Type",
        "Default",
        "Description",
        "source",
        "add_parameter",
        "Parameter",
        "Type",
        "Default",
        "Description",
        "AllowedValues",
        "utils",
        "EC2_INSTANCE_TYPES",
        "ConstraintDescription",
        "source",
        "add_parameter",
        "Parameter",
        "Type",
        "Description",
        "source",
        "add_resource",
        "ec2",
        "SecurityGroup",
        "GroupDescription",
        "VpcId",
        "Ref",
        "vpc_param",
        "SecurityGroupIngress",
        "ec2",
        "SecurityGroupRule",
        "IpProtocol",
        "CidrIp",
        "Ref",
        "office_cidr_param",
        "FromPort",
        "p",
        "ToPort",
        "p",
        "p",
        "ec2",
        "SecurityGroupRule",
        "IpProtocol",
        "CidrIp",
        "utils",
        "VPC_CIDR",
        "FromPort",
        "ToPort",
        "SecurityGroupEgress",
        "ec2",
        "SecurityGroupRule",
        "IpProtocol",
        "CidrIp",
        "utils",
        "VPC_CIDR",
        "FromPort",
        "ToPort",
        "ec2",
        "SecurityGroupRule",
        "IpProtocol",
        "CidrIp",
        "utils",
        "ALLOW_ALL_CIDR",
        "FromPort",
        "p",
        "ToPort",
        "p",
        "p",
        "Tags",
        "Tags",
        "Name",
        "AssociatePublicIpAddress",
        "ImageId",
        "ami",
        "IamInstanceProfile",
        "Ref",
        "mesos_follower_instance_profile_param",
        "InstanceType",
        "Ref",
        "mesos_follower_instance_type_param",
        "KeyName",
        "Ref",
        "keyname_param",
        "SecurityGroups",
        "Ref",
        "mesos_follower_security_group",
        "UserData",
        "Base64",
        "utils",
        "read_file",
        "get_input",
        "mesos_follower_spot_price",
        "mesos_follower_spot_price",
        "add_resource",
        "asg",
        "LaunchConfiguration",
        "BlockDeviceMappings",
        "extra_launch_config_args",
        "get_input",
        "get_input",
        "add_resource",
        "asg",
        "AutoScalingGroup",
        "AvailabilityZones",
        "availability_zone",
        "Cooldown",
        "DesiredCapacity",
        "num_followers",
        "HealthCheckGracePeriod",
        "HealthCheckType",
        "LaunchConfigurationName",
        "Ref",
        "mesos_follower_launch_config",
        "MaxSize",
        "num_followers",
        "MinSize",
        "num_followers",
        "VPCZoneIdentifier",
        "Ref",
        "mesos_follower_subnet_param",
        "Tags",
        "asg",
        "Tag"
    ],
    "literals": [
        "'AvailabilityZone'",
        "'VPC:AvailabilityZone'",
        "'Tags'",
        "'global:Tags'",
        "'Region'",
        "'global:Region'",
        "'StackType'",
        "'global:StackType'",
        "'KeyName'",
        "'global:KeyName'",
        "'IPAccess'",
        "'global:IPAccess'",
        "'PrivateHostedZoneId'",
        "'VPC:PrivateHostedZoneId'",
        "'MesosFollowerAMI'",
        "'global:MesosFollowerAMI'",
        "'NumFollowers'",
        "'global:NumFollowers'",
        "'GlobalNotificationsARN'",
        "'global:MesosNotificationARN'",
        "'MesosFollowerInstanceProfile'",
        "'global:MesosFollowerInstanceProfile'",
        "'MesosFollowerSpotPrice'",
        "'global:MesosFollowerSpotPrice'",
        "'MesosSubnet'",
        "'VPC:MesosSubnet'",
        "'MesosFollowerInstanceType'",
        "'global:MesosFollowerInstanceType'",
        "'VpcId'",
        "'global:VpcId'",
        "'VPC:VpcId'",
        "'Tags'",
        "'MesosFollowerSpotPrice'",
        "'NumFollowers'",
        "'2'",
        "'MesosFollowerAMI'",
        "'mesos-follower'",
        "'MesosFollowerAMI'",
        "'Region'",
        "'VpcId'",
        "'String'",
        "'Name of an existing VPC'",
        "'VpcId'",
        "'KeyName'",
        "'String'",
        "'geotrellis-spark-test'",
        "'Name of an existing EC2 key pair'",
        "'KeyName'",
        "'IPAccess'",
        "'OfficeCIDR'",
        "'String'",
        "'CIDR notation of office IP addresses'",
        "'IPAccess'",
        "'MesosFollowerAMI'",
        "'String'",
        "'Mesos follower AMI'",
        "'MesosFollowerAMI'",
        "'MesosFollowerInstanceProfile'",
        "'String'",
        "'MesosFollowerInstanceProfile'",
        "'Physical resource ID of an AWS::IAM::Role for the followers'",
        "'MesosFollowerInstanceProfile'",
        "'MesosFollowerInstanceType'",
        "'String'",
        "'i2.2xlarge'",
        "'Follower EC2 instance type'",
        "'must be a valid EC2 instance type.'",
        "'MesosFollowerInstanceType'",
        "'MesosSubnet'",
        "'CommaDelimitedList'",
        "'A list of subnets to associate with the Mesos leaders'",
        "'MesosSubnet'",
        "'sgMesosFollower'",
        "'Enables access to the MesosFollower'",
        "'tcp'",
        "'tcp'",
        "'tcp'",
        "'tcp'",
        "'sgMesosFollower'",
        "'cloud-config/follower.yml'",
        "'MesosFollowerSpotPrice'",
        "'SpotPrice'",
        "'lcMesosFollower'",
        "\"DeviceName\"",
        "\"/dev/sdb\"",
        "\"VirtualName\"",
        "\"ephemeral0\"",
        "\"DeviceName\"",
        "\"/dev/sdc\"",
        "\"VirtualName\"",
        "\"ephemeral1\"",
        "\"DeviceName\"",
        "\"/dev/sdd\"",
        "\"VirtualName\"",
        "\"ephemeral2\"",
        "\"DeviceName\"",
        "\"/dev/sde\"",
        "\"VirtualName\"",
        "\"ephemeral3\"",
        "\"DeviceName\"",
        "\"/dev/sdf\"",
        "\"VirtualName\"",
        "\"ephemeral4\"",
        "\"DeviceName\"",
        "\"/dev/sdg\"",
        "\"VirtualName\"",
        "\"ephemeral5\"",
        "\"DeviceName\"",
        "\"/dev/sdh\"",
        "\"VirtualName\"",
        "\"ephemeral6\"",
        "\"DeviceName\"",
        "\"/dev/sdi\"",
        "\"VirtualName\"",
        "\"ephemeral7\"",
        "'AvailabilityZone'",
        "'NumFollowers'",
        "'asgMesosFollower'",
        "'EC2'",
        "'Name'",
        "'MesosFollower'"
    ],
    "variables": [
        "INPUTS",
        "DEFAULTS",
        "MACHINE_TYPE",
        "AMI_INPUT",
        "region",
        "vpc_param",
        "keyname_param",
        "ip_access",
        "office_cidr_param",
        "mesos_follower_ami_param",
        "mesos_follower_instance_profile_param",
        "mesos_follower_instance_type_param",
        "mesos_follower_subnet_param",
        "mesos_follower_security_group",
        "extra_launch_config_args",
        "mesos_follower_spot_price",
        "extra_launch_config_args",
        "mesos_follower_launch_config",
        "availability_zone",
        "num_followers"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"Mesos Follower Node\"\"\"",
        "\"\"\"Stack node for mesos follower machines\n\n    This sets up a CloudFormation stack for mesos follower\n    machines.\n\n    Most of the configuration comes from the `geotrellis-cluster.config`\n    file; however, it does depend on a few outputs from the VPC stack\n    \"\"\""
    ],
    "functions": [
        "set_up_stack"
    ],
    "classes": [
        "MesosFollower"
    ]
}