{
    "identifiers": [
        "functools",
        "partial",
        "reduce",
        "copy",
        "collections",
        "namedtuple",
        "functools",
        "partial",
        "sys",
        "sys",
        "setrecursionlimit",
        "f",
        "f",
        "func_code",
        "co_argcount",
        "args",
        "partial",
        "f",
        "args",
        "hasattr",
        "f",
        "f",
        "t",
        "len",
        "_f",
        "args",
        "arg_num",
        "_f",
        "_f",
        "wrap",
        "other",
        "Infix",
        "x",
        "other",
        "other",
        "other",
        "x",
        "other",
        "other",
        "other",
        "Infix",
        "x",
        "other",
        "other",
        "other",
        "x",
        "other",
        "other",
        "value1",
        "value2",
        "value1",
        "value2",
        "Maybe",
        "value",
        "value",
        "Maybe",
        "n",
        "isinstance",
        "n",
        "Maybe",
        "isinstance",
        "n",
        "Nothing",
        "n",
        "isJust",
        "n",
        "d",
        "x",
        "isinstance",
        "x",
        "Maybe",
        "isJust",
        "x",
        "x",
        "value",
        "d",
        "j",
        "isinstance",
        "j",
        "Maybe",
        "isJust",
        "j",
        "j",
        "value",
        "n",
        "f",
        "m",
        "isinstance",
        "m",
        "Maybe",
        "isNothing",
        "m",
        "n",
        "f",
        "m",
        "value",
        "_type",
        "f",
        "_type",
        "f",
        "inner",
        "t",
        "i",
        "i",
        "_type",
        "t",
        "_type",
        "i",
        "i",
        "sid",
        "f",
        "z",
        "x",
        "reduce",
        "f",
        "x",
        "z",
        "x",
        "y",
        "x",
        "y",
        "curry",
        "f",
        "x",
        "f",
        "gmapT",
        "everywhere",
        "f",
        "x",
        "everywhere",
        "curry",
        "f",
        "x",
        "gmapT",
        "everywhereTD",
        "f",
        "f",
        "x",
        "q",
        "f",
        "x",
        "q",
        "x",
        "x",
        "f",
        "gmapT",
        "everywhereBut",
        "q",
        "f",
        "x",
        "everywhereBut",
        "curry",
        "q",
        "f",
        "x",
        "q",
        "x",
        "x",
        "gmapT",
        "everywhereButTD",
        "q",
        "f",
        "f",
        "x",
        "curry",
        "q",
        "f",
        "x",
        "q",
        "xi",
        "x",
        "x",
        "x",
        "f",
        "gmapT",
        "everywhereBut",
        "q",
        "f",
        "x",
        "everywhereButAny",
        "curry",
        "q",
        "f",
        "x",
        "q",
        "x",
        "x",
        "gmapT",
        "everywhereBut",
        "q",
        "f",
        "f",
        "x",
        "curry",
        "k",
        "f",
        "x",
        "foldl",
        "k",
        "f",
        "x",
        "gmapQ",
        "everything",
        "k",
        "f",
        "x",
        "curry",
        "f",
        "value",
        "cast",
        "value",
        "f",
        "isJust",
        "m",
        "f",
        "m",
        "value",
        "value",
        "Infix",
        "curry",
        "f",
        "q",
        "a",
        "f",
        "a",
        "fail",
        "q",
        "a",
        "Infix",
        "curry",
        "r",
        "q",
        "a",
        "cast",
        "a",
        "q",
        "isJust",
        "m",
        "q",
        "m",
        "value",
        "r",
        "Infix",
        "curry",
        "f",
        "g",
        "a",
        "maybe",
        "f",
        "a",
        "g",
        "cast",
        "a",
        "g",
        "val",
        "t",
        "isinstance",
        "val",
        "t",
        "t",
        "Just",
        "val",
        "Nothing",
        "f",
        "val",
        "val",
        "unicode",
        "val",
        "val",
        "len",
        "val",
        "f",
        "val",
        "f",
        "val",
        "val",
        "key",
        "f",
        "value",
        "key",
        "value",
        "val",
        "items",
        "callable",
        "val",
        "val",
        "val",
        "f",
        "val",
        "copy",
        "deepcopy",
        "val",
        "dir",
        "val",
        "keys",
        "dir",
        "key",
        "key",
        "keys",
        "key",
        "startswith",
        "getattr",
        "val",
        "key",
        "key",
        "keys",
        "f",
        "items",
        "key",
        "value",
        "keys",
        "items",
        "setattr",
        "val",
        "key",
        "value",
        "val",
        "f",
        "val",
        "val",
        "val",
        "len",
        "val",
        "f",
        "val",
        "f",
        "val",
        "copy",
        "deepcopy",
        "val",
        "dir",
        "val",
        "key",
        "key",
        "keys",
        "dir",
        "key",
        "startswith",
        "getattr",
        "val",
        "key",
        "key",
        "keys",
        "f",
        "items",
        "t",
        "t",
        "sum",
        "gmapQ",
        "gsize",
        "t"
    ],
    "literals": [
        "'t'",
        "'Maybe.fromJust: Nothing'",
        "'_'",
        "'_'"
    ],
    "variables": [
        "arg_num",
        "_f",
        "_f",
        "t",
        "value",
        "isNothing",
        "f",
        "t",
        "foldl",
        "orElse",
        "everywhereBU",
        "everywhereButBU",
        "everywhereButAnyBU",
        "m",
        "m",
        "val",
        "keys",
        "keys",
        "keys",
        "items",
        "items",
        "val",
        "keys",
        "keys",
        "items"
    ],
    "comments": [
        "helpers",
        "taken from http://code.activestate.com/recipes/384122-infix-operators/",
        "end of helpers"
    ],
    "docstrings": [
        "'''\n    Generic traversal combinator for every node in the tree bottom up.\n\n    '''",
        "'''\n    Generic traversal combinator for every node in the tree top down.\n\n    '''",
        "'''\n    everywhereButTD :: (object -> bool) -> (object -> object) -> object\n    '''",
        "'''\n    everywhereButAny :: [(object -> bool)] -> (object -> object) -> object\n    '''",
        "'''\n    everywhereButAny :: [(object -> bool)] -> (object -> object) -> object\n    '''",
        "'''\n    apply transformation f to value.\n    '''",
        "'''\n    Return Just(val) if the type of value equals the type of the function parameter.\n    \n    '''"
    ],
    "functions": [
        "curry",
        "wrap",
        "__ror__",
        "__or__",
        "__rlshift__",
        "__rshift__",
        "__call__",
        "isJust",
        "fromMaybe",
        "fromJust",
        "maybe",
        "t",
        "inner",
        "id_",
        "special_id",
        "sid",
        "everywhere",
        "everywhereTD",
        "everywhereBut",
        "everywhereButTD",
        "everywhereButAny",
        "everywhereButAnyTD",
        "everything",
        "mkT",
        "choice",
        "mkQ",
        "extQ",
        "cast",
        "gmapT",
        "gmapQ",
        "gsize"
    ],
    "classes": [
        "Infix",
        "Maybe",
        "Just",
        "Nothing"
    ]
}