{
    "identifiers": [
        "UnityEngine",
        "Collections",
        "Collections",
        "Generic",
        "Serializable",
        "MonoBehaviour",
        "TileTex",
        "Tile",
        "S",
        "GameObject",
        "tileAnchor",
        "tAnc",
        "transform",
        "roomsXMLR",
        "PT_XMLReader",
        "roomsXMLR",
        "Parse",
        "roomsText",
        "text",
        "roomsXML",
        "roomsXMLR",
        "xml",
        "BuildRoom",
        "roomNumber",
        "rNumStr",
        "i",
        "roomsXML",
        "Count",
        "i",
        "roomsXML",
        "i",
        "ht",
        "att",
        "rNumStr",
        "roomHT",
        "ht",
        "roomHT",
        "Utils",
        "tr",
        "rNumStr",
        "BuildRoom",
        "roomHT",
        "tStr",
        "TileTex",
        "tTex",
        "tileTextures",
        "tTex",
        "tStr",
        "tTex",
        "tex",
        "PT_XMLHashtable",
        "room",
        "room",
        "att",
        "room",
        "att",
        "room",
        "text",
        "Split",
        "i",
        "roomRows",
        "Length",
        "i",
        "roomRows",
        "i",
        "roomRows",
        "i",
        "Trim",
        "tiles",
        "Tile",
        "roomRows",
        "Length",
        "y",
        "roomRows",
        "Length",
        "y",
        "x",
        "roomRows",
        "y",
        "Length",
        "x",
        "height",
        "tileTexStr",
        "floorTexStr",
        "rawType",
        "roomRows",
        "y",
        "x",
        "ToString",
        "rawType",
        "height",
        "tileTexStr",
        "floorTexStr",
        "tileTexStr",
        "wallTexStr",
        "go",
        "Instantiate",
        "tilePrefab",
        "GameObject",
        "ti",
        "go",
        "GetComponent",
        "Tile",
        "ti",
        "transform",
        "parent",
        "tileAnchor",
        "ti",
        "pos",
        "Vector3",
        "x",
        "maxY",
        "y",
        "tiles",
        "x",
        "y",
        "ti",
        "ti",
        "ti",
        "height",
        "height",
        "ti",
        "tex",
        "tileTexStr",
        "rawType",
        "rawType",
        "Mage",
        "S",
        "pos",
        "ti",
        "pos"
    ],
    "literals": [
        "\"0\"",
        "\"TileAnchor\"",
        "\"xml\"",
        "\"room\"",
        "\"num\"",
        "\"ERROR\"",
        "\"LayoutTiles.BuildRoom()\"",
        "\"Room not found: \"",
        "\"floor\"",
        "\"wall\"",
        "\" \"",
        "\"_\"",
        "\".\"",
        "\"|\"",
        "\".\"",
        "\".\"",
        "\"|\"",
        "\"X\""
    ],
    "variables": [
        "Texture2D",
        "tex",
        "LayoutTiles",
        "S",
        "TextAsset",
        "roomsText",
        "roomNumber",
        "GameObject",
        "tilePrefab",
        "tileTextures",
        "___________________",
        "PT_XMLReader",
        "roomsXMLR",
        "PT_XMLHashList",
        "roomsXML",
        "tiles",
        "Transform",
        "tileAnchor",
        "GameObject",
        "tAnc",
        "PT_XMLHashtable",
        "roomHT",
        "i",
        "PT_XMLHashtable",
        "ht",
        "floorTexStr",
        "wallTexStr",
        "roomRows",
        "i",
        "Tile",
        "ti",
        "rawType",
        "tileTexStr",
        "GameObject",
        "go",
        "height",
        "maxY",
        "y",
        "x"
    ],
    "comments": [
        "This class enables us to define various textures for tiles.",
        "The rooms.xml file",
        "Current room # as a string",
        "^ roomNumber as string allows encoding in the XML & rooms 0-F",
        "Prefab for all tiles",
        "A list of named textures for Tiles",
        "Set the singleton for LayouTiles",
        "Make a new GameObject to be the TileAnchor (the parent transform of all tiles).",
        "This keeps Tiles tidy in the heiarchy pane.",
        "Read the XML",
        "Create a PT_XMLRReader",
        "Parse the Rooms.xml file",
        "This next line in the book says it's just roomsXML, but that throws errors so made it roomsXMLR.",
        "Pull all the <room>s",
        "Build the 0th room",
        "Build a room based on room number. This is an alternative version of",
        "BuildRoom that grabs roomXML based on  num.",
        "This is the GetTileTex() method that Tile uses",
        "Search through all the tileTextures for the proper string",
        "Return null if nothing was found",
        "Build a room from an XML <room> entry",
        "Get the texture names for the floors and walls from <room> attributes",
        "Split the room into rows of tiles based on carriage returns in the Rooms.XML file",
        "Trim tabs from the beginings of lines. However, we're leaving spaces",
        "and underscores to allow for non-rectangular rooms.",
        "Clear the tiles Array",
        "Arbitrary max room size is 100x100",
        "Declare a number of local fields that we'll use later",
        "These loops scan through each tile of each row of the room",
        "Set Defaults",
        "Get the character representing the tile",
        "empty space",
        "empty space",
        "just skip over empty space",
        "default wall",
        "Keep type=\".\"",
        "default wall",
        "anything else will be interperteted as floor",
        "Set the texture for floor or wall based on <room> attributes",
        "Instiantiate a new TilePrefab",
        "Set the parent Transform to tileAnchor",
        "Set the position of the tile",
        "Add ti to the tiles 2D Array",
        "Set the type, height, and texture of the Tile",
        "If the type is still rawType, continue to the next iteration",
        "check for specific entities in the room",
        "Starting position for the mage",
        "Uses the mage Singelton",
        "More to come here..."
    ],
    "docstrings": [],
    "functions": [
        "Awake",
        "BuildRoom",
        "Texture2D",
        "GetTileTex",
        "BuildRoom"
    ],
    "classes": [
        "TileTex",
        "LayoutTiles"
    ]
}