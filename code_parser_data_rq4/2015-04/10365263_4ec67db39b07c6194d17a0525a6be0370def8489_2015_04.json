{
    "identifiers": [
        "org",
        "pentaho",
        "hadoop",
        "shim",
        "emr32",
        "java",
        "util",
        "concurrent",
        "Callable",
        "org",
        "apache",
        "sqoop",
        "Sqoop",
        "org",
        "pentaho",
        "hadoop",
        "shim",
        "HadoopConfigurationClassLoader",
        "org",
        "pentaho",
        "hadoop",
        "shim",
        "api",
        "Configuration",
        "org",
        "pentaho",
        "hadoop",
        "shim",
        "common",
        "CommonSqoopShim",
        "org",
        "pentaho",
        "hadoop",
        "shim",
        "common",
        "ShimUtils",
        "PROPERTY_JAVA_CLASS_PATH",
        "callable",
        "newClassPath",
        "getClassPathString",
        "originalClassPath",
        "getProperty",
        "PROPERTY_JAVA_CLASS_PATH",
        "newClassPath",
        "setProperty",
        "PROPERTY_JAVA_CLASS_PATH",
        "newClassPath",
        "returnVal",
        "callable",
        "call",
        "returnVal",
        "MIN_VALUE",
        "returnVal",
        "intValue",
        "ex",
        "ex",
        "originalClassPath",
        "setProperty",
        "PROPERTY_JAVA_CLASS_PATH",
        "originalClassPath",
        "Override",
        "args",
        "c",
        "runWithModifiedClassPathProperty",
        "Override",
        "cl",
        "currentThread",
        "getContextClassLoader",
        "currentThread",
        "setContextClassLoader",
        "getClass",
        "getClassLoader",
        "Sqoop",
        "runTool",
        "args",
        "ShimUtils",
        "asConfiguration",
        "c",
        "currentThread",
        "setContextClassLoader",
        "cl",
        "cl",
        "getClass",
        "getClassLoader",
        "isAssignableFrom",
        "cl",
        "getClass",
        "hccl",
        "cl",
        "hccl",
        "generateClassPathString"
    ],
    "literals": [
        "\"java.class.path\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "*****************************************************************************\n *\n * Pentaho Big Data\n *\n * Copyright (C) 2002-2013 by Pentaho : http://www.pentaho.com\n *\n *******************************************************************************\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with\n * the License. You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *****************************************************************************",
        "* Sqoop shim to handle working around Sqoop's ConfigurationManager and how it builds up the class path when compiling\n * temporary files.\n * <p/>\n * <p> This applies to any version of Hadoop that bundles classes in separate jars instead of the conglomerate \"core\"\n * jar. </p>",
        "* Run a given {@link Callable} within a code block that sets the {@code \"java.class.path\"} property to the path\n   * defined for the {@link HadoopConfigurationClassLoader} used to load this class, if it was used. If not, this is the\n   * same as calling {@code callable.call()}.\n   *\n   * @param callable Callable to execute with a modified class path set.\n   * @return",
        "* WARNING: This is non-thread safe. This is only to work around the\n     * deficiencies of the Sqoop CompilationManager (as of 1.4.1) as it will\n     * only look for the Hadoop \"core\" jar. For CDH4 the necessary classes are contained within a\n     * \"common\" jar.",
        "* @return the class path to set for each run of {@link #runWithModifiedClassPathProperty(Callable)}."
    ],
    "functions": [
        "runWithModifiedClassPathProperty",
        "runTool",
        "call",
        "getClassPathString"
    ],
    "classes": [
        "ClassPathModifyingSqoopShim"
    ]
}