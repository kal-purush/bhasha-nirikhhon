{
    "identifiers": [
        "settings",
        "EightBittr",
        "constants",
        "settings",
        "constants",
        "i",
        "i",
        "constants",
        "i",
        "EightBitter",
        "constants",
        "i",
        "EightBitter",
        "constants",
        "i",
        "requirements",
        "settings",
        "requirements",
        "requirements",
        "EightBitter",
        "requirements",
        "requirements",
        "EightBitter",
        "EightBitter",
        "requirements",
        "requirements",
        "name",
        "requirement",
        "requirements",
        "requirements",
        "requirement",
        "requirement",
        "fails",
        "requirement",
        "fails",
        "fails",
        "name",
        "fails",
        "requirement",
        "i",
        "i",
        "requirement",
        "requirements",
        "requirement",
        "EightBitter",
        "resets",
        "customs",
        "i",
        "i",
        "resets",
        "i",
        "EightBitter",
        "resets",
        "i",
        "EightBitter",
        "customs",
        "EightBitter",
        "customs",
        "EightBitter",
        "resets",
        "customs",
        "performance",
        "i",
        "i",
        "resets",
        "i",
        "timeEach",
        "performance",
        "EightBitter",
        "resets",
        "i",
        "EightBitter",
        "customs",
        "times",
        "resets",
        "i",
        "performance",
        "timeEach",
        "times",
        "performance",
        "timeStart",
        "times",
        "name",
        "EightBittr",
        "name",
        "func",
        "EightBitter",
        "EightBitter",
        "name",
        "name",
        "func",
        "EightBitter",
        "EightBitter",
        "name",
        "func",
        "name",
        "func",
        "name",
        "func",
        "EightBitter",
        "width",
        "height",
        "scaling",
        "canvas",
        "canvas",
        "width",
        "canvas",
        "height",
        "scaling",
        "scaling",
        "canvas",
        "width",
        "scaling",
        "canvas",
        "height",
        "scaling",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "canvas",
        "thing",
        "dy",
        "thing",
        "dy",
        "thing",
        "dy",
        "thing",
        "dx",
        "thing",
        "dx",
        "thing",
        "dx",
        "thing",
        "top",
        "thing",
        "top",
        "thing",
        "thing",
        "thing",
        "thing",
        "thing",
        "right",
        "thing",
        "right",
        "thing",
        "thing",
        "thing",
        "thing",
        "thing",
        "bottom",
        "thing",
        "bottom",
        "thing",
        "thing",
        "thing",
        "thing",
        "thing",
        "left",
        "thing",
        "left",
        "thing",
        "thing",
        "thing",
        "thing",
        "thing",
        "x",
        "y",
        "thing",
        "thing",
        "x",
        "thing",
        "thing",
        "y",
        "thing",
        "x",
        "thing",
        "thing",
        "x",
        "thing",
        "thing",
        "thing",
        "y",
        "thing",
        "thing",
        "y",
        "thing",
        "thing",
        "thing",
        "thing",
        "thing",
        "thing",
        "thing",
        "thing",
        "thing",
        "thing",
        "thing",
        "other",
        "thing",
        "thing",
        "other",
        "thing",
        "thing",
        "other",
        "thing",
        "other",
        "thing",
        "thing",
        "thing",
        "other",
        "thing",
        "thing",
        "thing",
        "other",
        "thing",
        "thing",
        "thing",
        "other",
        "thing",
        "thing",
        "thing",
        "other",
        "thing",
        "thing",
        "thing",
        "other",
        "thing",
        "dy",
        "thing",
        "dy",
        "thing",
        "thing",
        "thing",
        "thing",
        "thing",
        "dx",
        "thing",
        "dx",
        "thing",
        "thing",
        "thing",
        "thing",
        "thing",
        "dy",
        "thing",
        "dy",
        "thing",
        "thing",
        "thing",
        "thing",
        "thing",
        "dx",
        "thing",
        "dx",
        "thing",
        "thing",
        "thing",
        "thing",
        "thing",
        "x",
        "maxSpeed",
        "thing",
        "thing",
        "maxSpeed",
        "maxSpeed",
        "Infinity",
        "midx",
        "x",
        "thing",
        "thing",
        "maxSpeed",
        "x",
        "midx",
        "thing",
        "thing",
        "maxSpeed",
        "x",
        "midx",
        "thing",
        "y",
        "maxSpeed",
        "thing",
        "thing",
        "maxSpeed",
        "maxSpeed",
        "Infinity",
        "midy",
        "y",
        "thing",
        "thing",
        "maxSpeed",
        "y",
        "midy",
        "thing",
        "thing",
        "maxSpeed",
        "y",
        "midy",
        "current",
        "current",
        "EightBittr",
        "current",
        "recipient",
        "donor",
        "noOverride",
        "i",
        "donor",
        "donor",
        "i",
        "noOverride",
        "recipient",
        "i",
        "setting",
        "donor",
        "i",
        "setting",
        "recipient",
        "i",
        "recipient",
        "i",
        "setting",
        "recipient",
        "i",
        "setting",
        "noOverride",
        "recipient",
        "i",
        "setting",
        "recipient",
        "recipient",
        "donor",
        "noOverride",
        "i",
        "donor",
        "donor",
        "i",
        "noOverride",
        "recipient",
        "i",
        "setting",
        "donor",
        "i",
        "setting",
        "recipient",
        "i",
        "recipient",
        "i",
        "setting",
        "recipient",
        "i",
        "setting",
        "noOverride",
        "recipient",
        "i",
        "setting",
        "recipient",
        "recipient",
        "donor",
        "noOverride",
        "i",
        "donor",
        "donor",
        "i",
        "noOverride",
        "recipient",
        "i",
        "setting",
        "donor",
        "i",
        "i",
        "setting",
        "j",
        "j",
        "setting",
        "j",
        "recipient",
        "setting",
        "j",
        "setting",
        "recipient",
        "i",
        "recipient",
        "i",
        "setting",
        "recipient",
        "i",
        "setting",
        "noOverride",
        "recipient",
        "i",
        "setting",
        "recipient",
        "args",
        "EightBittr",
        "i",
        "i",
        "arguments",
        "i",
        "EightBitter",
        "element",
        "arguments",
        "i",
        "element",
        "path",
        "num",
        "num",
        "i",
        "path",
        "i",
        "path",
        "i",
        "path",
        "i",
        "thing",
        "arrayOld",
        "arrayNew",
        "arrayOld",
        "arrayOld",
        "thing",
        "arrayNew",
        "thing",
        "thing",
        "array",
        "array",
        "array",
        "thing",
        "array",
        "thing",
        "thing",
        "array",
        "array",
        "array",
        "thing",
        "array",
        "thing"
    ],
    "literals": [
        "string",
        "string",
        "string",
        "\"global\"",
        "\"self\"",
        "string",
        "string",
        "\"Missing \"",
        "\" requirement(s) \"",
        "\"in \"",
        "\".\\n\"",
        "string",
        "string",
        "\". \"",
        "\": is the '\"",
        "\"' file included?\"",
        "\"\\n\"",
        "string",
        "string",
        "\"name\"",
        "\"time\"",
        "\"name\"",
        "\"resetTimed\"",
        "\"time\"",
        "\".\"",
        "\"function\"",
        "\" is not defined in this EightBitter.\"",
        "\"canvas\"",
        "\"2d\"",
        "\"px\"",
        "\"px\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"A function requires the caller ('this') to be the \"",
        "\"manipulated EightBittr object. Unfortunately, 'this' is a \"",
        "\".\"",
        "string",
        "\"object\"",
        "string",
        "\"object\"",
        "string",
        "\"children\"",
        "\"undefined\"",
        "\"object\"",
        "string",
        "\"div\"",
        "string",
        "\"undefined\""
    ],
    "variables": [
        "EightBitter",
        "constants",
        "requirements",
        "i",
        "fails",
        "requirement",
        "i",
        "timeStart",
        "times",
        "timeEach",
        "i",
        "EightBitter",
        "func",
        "canvas",
        "context",
        "midx",
        "midy",
        "setting",
        "i",
        "setting",
        "i",
        "setting",
        "i",
        "j",
        "EightBitter",
        "element",
        "i",
        "i"
    ],
    "comments": [
        "EightBitter.constructor = settings.constructor || EightBittr,",
        "Constants, such as unitsize and scale, are always copied first",
        "Resets",
        "For each requirement in the given object, if it isn't visible as a",
        "member of self (evaluates to falsy), complain",
        "If there was at least one failure added to the fails array, throw",
        "an error with each fail split by endlines",
        "If name is a string, turn it into a function path, and follow it",
        "If it's already a path (array), follow it",
        "Otherwise func is just name",
        "Don't allow func to be undefined or some non-function object",
        "Bind the function to this",
        "HTML Functions",
        "context: CanvasRenderingContext2D = canvas.getContext(\"2d\");",
        "Scaling 1 by default, but may be different (e.g. unitsize)",
        "For speed's sake, disable image smoothing in all browsers",
        "Physics functions",
        "If a dy is provided, move the thing's top that much",
        "Make the thing's bottom dependent on the top",
        "If a dx is provided, move the thing's right that much",
        "Make the thing's left dependent on the right",
        "If a dy is provided, move the thing's bottom that much",
        "Make the thing's top dependent on the top",
        "If a dx is provided, move the thing's left that much",
        "Make the thing's right dependent on the left",
        "If no maxSpeed is provided, assume Infinity (so it doesn't matter)",
        "Thing to the left? Slide to the right.",
        "Thing to the right? Slide to the left.",
        "If no maxSpeed is provided, assume Infinity (so it doesn't matter)",
        "Thing above? slide down.",
        "Thing below? Slide up.",
        "EightBittr utilities",
        "General utilities",
        "For each attribute of the donor:",
        "If noOverride, don't override already existing properties",
        "If it's an object, recurse on a new version of it",
        "Regular primitives are easy to copy otherwise",
        "For each attribute of the donor:",
        "If noOverride, don't override already existing properties",
        "If it's an object, recurse on a new version of it",
        "Regular primitives are easy to copy otherwise",
        "For each attribute of the donor:",
        "If noOverride, don't override already existing properties",
        "Special cases for HTML elements",
        "Children: just append all of them directly",
        "By default, use the normal proliferate logic",
        "If it's an object, recurse on a new version of it",
        "Regular primitives are easy to copy otherwise",
        "For each provided object, add those settings to the element"
    ],
    "docstrings": [
        "* EightBittr.js\n * \n * An abstract class used exclusively as the parent of GameStartr. EightBittr\n * contains useful functions for manipulating Things that are independent of\n * the required GameStartr modules.\n * \n * @author \"Josh Goldberg\" <josh@fullscreenmario.com>",
        "* EightBittr constructor. Settings arguments are used to initialize \n     * \"constant\" values and check for requirements.\n     * \n     * @constructor\n     * @param {Object} [settings]   An Object containing all other arguments.\n     * @param {String[]} [constants]   The names of attributes that should exist \n     *                                 in both the EightBittr constructor and \n     *                                 child instances.\n     * @param {Object} [requirements]   A mapping of required settings that must\n     *                                  exist globally and/or locally.",
        "* Given an associate array of requirement names to the files that should\n     * include them, this makes sure each of those requirements is a property of\n     * the given Object. \n     * \n     * @param {Mixed} self    Generally either the window (for global checks,\n     *                         such as utility classes) or an EightBitter.    \n     * @param {Object} requirements   An associative array of properties to \n     *                                check for under self.\n     * @param {String} name   The name referring to self, printed out in an\n     *                        Error if needed.",
        "* Resets the EightBittr by calling all of the named reset member Functions\n     * on itself.\n     * \n     * @param {EightBittr} EightBitter\n     * @param {String[]} resets   The ordered Array of reset Functions to be \n     *                            called.\n     * @param {Object} [customs]   Additional arguments to pass to all reset\n     *                             Functions.",
        "* Resets the EightBittr in a timed manner by calling all the named reset\n     * member Functions on itself and adding the time (in milliseconds) along \n     * along with the total process time to an Array, which is then returned.\n     * \n     * @param {EightBittr} EightBitter\n     * @param {String[]} resets   The ordered Array of reset Functions to be \n     *                            called.\n     * @param {Object} [customs]   Additional arguments to pass to all reset\n     *                             Functions.\n     * @return {String[]}",
        "* EightBittr.get is provided as a shortcut function to make binding member\n     * functions, particularily those using \"this.unitsize\" (where this needs to\n     * be an EightBitter, not an external calling object). At the very simplest,\n     * this.get(func) acts as a shortcut to this.bind(this, func).\n     * In addition, if the name is given as \"a.b\", EightBitter.followPath will\n     * be used on \"a.b\".split('.') (so EightBitter.prototype[a][b] is returned).\n     * \n     * @this {EightBittr}\n     * @param {Mixed} name   Either the function itself, or a string of the path\n     *                       to the function (after \".prototype.\").\n     * @return {Function}   A function, bound to set \"this\" to the calling\n     *                      EightBitter",
        "* Creates and returns a new HTML <canvas> element, with an optional scaling\n     * multiplier. Image smoothing is disabled.\n     * \n     * @param {Number} width   How wide the canvas should be.\n     * @param {Number} height   How tall the canvas should be.\n     * @param {Number} [scaling]   How much to scale the style of the canvas (by\n     *                             default, 1 for not at all).\n     * @return {HTMLCanvasElement}\n     * @remarks TypeScript does not recognize imageSmoothingEnabled unless\n     *          prefixed by \"ms\", so context is cast to any.",
        "* Shifts a Thing vertically by changing its top and bottom attributes.\n     * \n     * @param {Thing} thing\n     * @param {Number} dy",
        "* Shifts a Thing horizontally by changing its top and bottom attributes.\n     * \n     * @param {Thing} thing\n     * @param {Number} dy",
        "* Sets the top of a Thing to a set number, changing the bottom based on its\n     * height and the EightBittr's unisize.\n     * \n     * @param {Thing} thing\n     * @param {Number} top",
        "* Sets the right of a Thing to a set number, changing the left based on its\n     * width and the EightBittr's unisize.\n     * \n     * @param {Thing} thing\n     * @param {Number} right",
        "* Sets the bottom of a Thing to a set number, changing the top based on its\n     * height and the EightBittr's unisize.\n     * \n     * @param {Thing} thing\n     * @param {Number} bottom",
        "* Sets the left of a Thing to a set number, changing the right based on its\n     * width and the EightBittr's unisize.\n     * \n     * @param {Thing} thing\n     * @param {Number} left",
        "* Shifts a Thing so that it is centered on the given x and y.\n     * \n     * @param {Thing} thing\n     * @param {Number} x\n     * @param {Number} y",
        "* Shifts a Thing so that it is horizontally centered on the given x.\n     * \n     * @param {Thing} thing\n     * @param {Number} x",
        "* Shifts a Thing so that it is vertically centered on the given y.\n     * \n     * @param {Thing} thing\n     * @param {Number} y",
        "* @param {Thing} thing\n     * @return {Number} The horizontal midpoint of the Thing.",
        "* @param {Thing} thing\n     * @return {Number} The vertical midpoint of the Thing.",
        "* Shifts a Thing so that its midpoint is centered on the midpoint of the\n     * other Thing.\n     * \n     * @param {Thing} thing   The Thing to be shifted.\n     * @param {Thing} other   The Thing whose midpoint is referenced.",
        "* Shifts a Thing so that its horizontal midpoint is centered on the \n     * midpoint of the other Thing.\n     * \n     * @param {Thing} thing   The Thing to be shifted.\n     * @param {Thing} other   The Thing whose midpoint is referenced.",
        "* Shifts a Thing so that its vertical midpoint is centered on the \n     * midpoint of the other Thing.\n     * \n     * @param {Thing} thing   The Thing to be shifted.\n     * @param {Thing} other   The Thing whose midpoint is referenced.",
        "* @param {Thing} thing\n     * @param {Thing} other\n     * @return {Boolean} Whether the first Thing's midpoing is to the left of\n     *                   the other's.",
        "* Shifts a Thing's top up, then sets the bottom (similar to a shiftVert and\n     * a setTop combined).\n     * \n     * @param {Thing} thing\n     * @param {Number} dy",
        "* Shifts a Thing's right, then sets the left (similar to a shiftHoriz and a\n     * setRight combined).\n     * \n     * @param {Thing} thing\n     * @param {Number} dx",
        "* Shifts a Thing's bottom down, then sets the bottom (similar to a \n     * shiftVert and a setBottom combined).\n     * \n     * @param {Thing} thing\n     * @param {Number} dy",
        "* Shifts a Thing's left, then sets the right (similar to a shiftHoriz and a\n     * setLeft combined).\n     * \n     * @param {Thing} thing\n     * @param {Number} dy",
        "* Shifts a Thing toward a target x, but limits the total distance allowed.\n     * Distance is computed as from the Thing's horizontal midpoint.\n     * \n     * @param {Thing} thing\n     * @param {Number} x\n     * @param {Number} maxSpeed",
        "* Shifts a Thing toward a target y, but limits the total distance allowed.\n     * Distance is computed as from the Thing's vertical midpoint.\n     * \n     * @param {Thing} thing\n     * @param {Number} y\n     * @param {Number} maxSpeed",
        "* Ensures the current object is an EightBittr by throwing an error if it \n     * is not. This should be used for functions in any EightBittr descendants\n     * that have to call 'this' to ensure their caller is what the programmer\n     * expected it to be.\n     * \n     * @param {Mixed} current",
        "* \"Proliferates\" all properties of a donor onto a recipient by copying each\n     * of them and recursing onto child Objects. This is a deep copy.\n     * \n     * @param {Mixed} recipient\n     * @param {Mixed} donor\n     * @param {Boolean} [noOverride]   Whether pre-existing properties of the\n     *                                 recipient should be skipped (defaults to\n     *                                 false).\n     * @return {Mixed} recipient",
        "* Identical to proliferate, but instead of checking whether the recipient\n     * hasOwnProperty on properties, it just checks if they're truthy\n     * \n     * @param {Mixed} recipient\n     * @param {Mixed} donor\n     * @param {Boolean} [noOverride]   Whether pre-existing properties of the\n     *                                 recipient should be skipped (defaults to\n     *                                 false).\n     * @return {Mixed} recipient\n     * @remarks This may not be good with JSLint, but it works for prototypal\n     *          inheritance, since hasOwnProperty only is for the current class",
        "* Identical to proliferate, but tailored for HTML elements because many\n     * element attributes don't play nicely with JavaScript Array standards. \n     * Looking at you, HTMLCollection!\n     * \n     * @param {HTMLElement} recipient\n     * @param {Any} donor\n     * @param {Boolean} [noOverride]\n     * @return {HTMLElement}",
        "* Creates and returns an HTMLElement of the specified type. Any additional\n     * settings Objects may be given to be proliferated onto the Element via\n     * proliferateElement.\n     * \n     * @param {String} type   The tag of the Element to be created.\n     * @param {Object} [settings]   Additional settings for the Element, such as\n     *                              className or style.\n     * @return {HTMLElement}",
        "* Follows a path inside an Object recursively, based on a given path.\n     * \n     * @param {Mixed} object\n     * @param {String[]} path   The ordered names of attributes to descend into.\n     * @param {Number} [num]   The starting index in path (by default, 0).\n     * @return {Mixed}\n     * @remarks This may not be good with JSLint, but it works for prototypal\n     *          inheritance, since hasOwnProperty only is for the current class",
        "* Switches a Thing from one Array to Another using splice and push.\n     * \n     * @param {Thing} thing\n     * @param {Array} arrayOld\n     * @param {Array} arrayNew",
        "* Sets a Thing's position within an Array to the front by splicing and then\n     * unshifting it.\n     * \n     * @param {Thing} thing\n     * @param {Array} array",
        "* Sets a Thing's position within an Array to the front by splicing and then\n     * pushing it.\n     * \n     * @param {Thing} thing\n     * @param {Array} array"
    ],
    "functions": [
        "checkRequirements",
        "reset",
        "resetTimed",
        "get",
        "createCanvas",
        "shiftVert",
        "shiftHoriz",
        "setTop",
        "setRight",
        "setBottom",
        "setLeft",
        "setMid",
        "setMidX",
        "setMidY",
        "getMidX",
        "getMidY",
        "setMidObj",
        "setMidXObj",
        "setMidYObj",
        "objectToLeft",
        "updateTop",
        "updateRight",
        "updateBottom",
        "updateLeft",
        "slideToX",
        "slideToY",
        "ensureCorrectCaller",
        "proliferate",
        "proliferateHard",
        "proliferateElement",
        "createElement",
        "followPathHard",
        "arraySwitch",
        "arrayToBeginning",
        "arrayToEnd"
    ],
    "classes": [
        "EightBittr"
    ]
}