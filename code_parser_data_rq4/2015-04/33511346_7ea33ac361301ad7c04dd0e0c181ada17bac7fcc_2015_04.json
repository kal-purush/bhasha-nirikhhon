{
    "identifiers": [
        "Common",
        "ContentControl",
        "e",
        "e",
        "templateId",
        "e",
        "e",
        "e",
        "e",
        "EventSource",
        "templateId",
        "Common",
        "Button",
        "Button",
        "obj",
        "oldValue",
        "newValue",
        "obj",
        "oldValue",
        "newValue",
        "Common",
        "e",
        "e",
        "oldValue",
        "newValue",
        "newValue",
        "Button",
        "Button",
        "e",
        "e",
        "e",
        "stopPropagation",
        "F12",
        "stopPropagation",
        "e",
        "e",
        "e",
        "e",
        "Common",
        "e",
        "Common",
        "e",
        "e",
        "F12",
        "Button"
    ],
    "literals": [
        "\"use strict\"",
        "\"pressed\"",
        "\"isPressed\"",
        "string",
        "\"Common.defaultButtonTemplate\"",
        "\"role\"",
        "\"role\"",
        "\"button\"",
        "\"click\"",
        "\"mousedown\"",
        "\"mouseup\"",
        "\"mouseleave\"",
        "\"keydown\"",
        "\"keyup\"",
        "\"click\"",
        "\"mousedown\"",
        "\"mouseup\"",
        "\"mouseleave\"",
        "\"keydown\"",
        "\"keyup\"",
        "\"data-plugin-vs-tooltip\"",
        "\"aria-label\"",
        "\"data-plugin-vs-tooltip\"",
        "\"aria-label\"",
        "\"click\"",
        "\"mousedown\"",
        "\"mouseup\"",
        "\"mouseleave\"",
        "\"Unexpected\"",
        "\"keydown\"",
        "\"keyup\"",
        "\"Unexpected\""
    ],
    "variables": [
        "stopPropagation"
    ],
    "comments": [
        "",
        "Copyright (C) Microsoft. All rights reserved.",
        "",
        "<reference path=\"ContentControl.ts\" />",
        "<reference path=\"../assert.ts\" />",
        "<reference path=\"../KeyCodes.ts\" />",
        "<reference path=\"../Framework/binding/CommonConverters.ts\" />",
        "<disable code=\"SA1201\" rule=\"ElementsMustAppearInTheCorrectOrder\" justification=\"egregious TSSC rule\"/>",
        "CSS class to apply to the button's root element when it's pressed",
        "The mouse handler for the root element",
        "The key handler function for the root element",
        "The root html element to attach events to and assign roles to",
        "Consumers of this control are free to override this",
        "ie. A \"link\" is technically a button, but would override",
        "this attribute for accessibility reasons.",
        "Ensure the control is in the correct state",
        "Narrator bypasses normal keydown/up events and clicks",
        "directly.  Make sure we only perform a click here when",
        "the button has really been pressed.  (ie. via regular",
        "keyboard interaction)"
    ],
    "docstrings": [
        "* A Button class which is templatable and provides basic button functionality",
        "* [ObservableProperty] Gets or sets a value indicating whether the button is currently pressed.",
        "* The event which is fired when the button is clicked.\n         * NOTE: A click can occur via keyboard, or mouse interaction",
        "* Constructor\n         * @param templateId The id of the template to apply to the control",
        "* Static constructor used to initialize observable properties",
        "* Updates the control when the template has changed",
        "* Updates the control when the template is about to change. Removes event handlers from previous root element.",
        "* Protected override. Handles a change to the tooltip property",
        "* Dispatches a click event only if the button is enabled\n         * @param e An optional event object.",
        "* Handles a change to the isPressed property\n         * @param oldValue The old value for the property\n         * @param newValue The new value for the property",
        "* Handles mouse events to allow the button to be interacted with via the mouse\n         * @param e The mouse event",
        "* Handles keyboard events to allow the button to be interacted with via the keyboard\n         * @param e The keyboard event"
    ],
    "functions": [
        "initialize",
        "onApplyTemplate",
        "onTemplateChanging",
        "onTooltipChangedOverride",
        "press",
        "onIsPressedChanged",
        "onMouseEvent",
        "onKeyboardEvent"
    ],
    "classes": [
        "Button"
    ]
}