{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Text",
        "NUnit",
        "Framework",
        "Google",
        "Maps",
        "Google",
        "Maps",
        "Test",
        "TestFixture",
        "Test",
        "ViaLatLng",
        "ViaLatLng",
        "ToString",
        "Assert",
        "AreEqual",
        "expected",
        "actual",
        "Test",
        "TestCase",
        "TestCase",
        "lat",
        "lng",
        "expected",
        "ViaLatLng",
        "lat",
        "lng",
        "ViaLatLng",
        "GetAsUrlParameter",
        "Assert",
        "AreEqual",
        "expected",
        "actual",
        "Test",
        "ViaLatLng",
        "ViaLatLng",
        "Parse",
        "value",
        "Assert",
        "AreEqual",
        "expected",
        "Latitude",
        "actual",
        "Latitude",
        "Assert",
        "AreEqual",
        "expected",
        "Longitude",
        "actual",
        "Longitude",
        "Test",
        "ViaLatLng",
        "Globalization",
        "CultureInfo",
        "Threading",
        "CurrentThread",
        "CurrentCulture",
        "Threading",
        "CurrentThread",
        "CurrentCulture",
        "Globalization",
        "CultureInfo",
        "GetCultureInfo",
        "test",
        "ToString",
        "Assert",
        "AreEqual",
        "expected",
        "actual",
        "Threading",
        "CurrentThread",
        "CurrentCulture",
        "savedCulture",
        "Test",
        "TestCase",
        "lat",
        "lng",
        "ViaLatLng",
        "lat",
        "lng",
        "ViaLatLng",
        "lat",
        "lng",
        "Assert",
        "IsTrue",
        "ViaLatLng1",
        "Equals",
        "ViaLatLng2",
        "Test",
        "TestCase",
        "lat",
        "lng",
        "ViaLatLng",
        "lat",
        "lng",
        "ViaLatLng",
        "lng",
        "Assert",
        "IsFalse",
        "ViaLatLng1",
        "Equals",
        "ViaLatLng2",
        "ViaLatLng",
        "lat",
        "Assert",
        "IsFalse",
        "ViaLatLng1",
        "Equals",
        "ViaLatLng3",
        "ViaLatLng",
        "Assert",
        "IsFalse",
        "ViaLatLng1",
        "Equals",
        "ViaLatLng4"
    ],
    "literals": [
        "\"via:-35.335300,95.445400\"",
        "\"via:-35.3353,95.4454\"",
        "\"via:40.714233,-73.961291\"",
        "\"40.714224,-73.961452\"",
        "\"nl-BE\"",
        "\"via:40.714224,-73.961452\"",
        "\"Equals fails.\""
    ],
    "variables": [
        "ViaLatLng",
        "ViaLatLng",
        "expected",
        "actual",
        "ViaLatLng",
        "ViaLatLng",
        "actual",
        "value",
        "ViaLatLng",
        "expected",
        "ViaLatLng",
        "actual",
        "ViaLatLng",
        "test",
        "savedCulture",
        "expected",
        "actual",
        "ViaLatLng",
        "ViaLatLng1",
        "ViaLatLng",
        "ViaLatLng2",
        "ViaLatLng",
        "ViaLatLng1",
        "ViaLatLng",
        "ViaLatLng2",
        "ViaLatLng",
        "ViaLatLng3",
        "ViaLatLng",
        "ViaLatLng4"
    ],
    "comments": [
        "string expected = \"via:-35.335300,95.445400\";",
        "note, if this test starts failing, it may be because the 'comma' is being (in some circles' opinion) \"properly\" url encoded to %2c",
        "change the thread culture",
        "belgium uses different numbering"
    ],
    "docstrings": [],
    "functions": [
        "ToString_default_format",
        "GetAsUrlEncoded",
        "Parse_test",
        "ToString_using_invariant_culture_settings",
        "Equals",
        "NotEquals"
    ],
    "classes": [
        "ViaLatLngTests"
    ]
}