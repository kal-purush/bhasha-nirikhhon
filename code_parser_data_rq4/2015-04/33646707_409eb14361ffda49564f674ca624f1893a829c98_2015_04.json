{
    "identifiers": [
        "java",
        "io",
        "BufferedReader",
        "java",
        "io",
        "DataOutputStream",
        "java",
        "io",
        "FileOutputStream",
        "java",
        "io",
        "java",
        "io",
        "InputStreamReader",
        "java",
        "net",
        "InetAddress",
        "java",
        "net",
        "Socket",
        "args",
        "CRLF",
        "SP",
        "serverHost",
        "serverPort",
        "filePath",
        "args",
        "length",
        "serverHost",
        "args",
        "args",
        "length",
        "serverHost",
        "args",
        "serverPort",
        "parseInt",
        "args",
        "nfe",
        "err",
        "filePath",
        "args",
        "args",
        "length",
        "serverHost",
        "args",
        "serverPort",
        "parseInt",
        "args",
        "nfe",
        "err",
        "filePath",
        "args",
        "err",
        "exit",
        "serverPort",
        "filePath",
        "socket",
        "socketInStream",
        "socketOutStream",
        "fos",
        "serverInet",
        "InetAddress",
        "getByName",
        "serverHost",
        "socket",
        "serverInet",
        "serverPort",
        "serverHost",
        "serverPort",
        "socketInStream",
        "socket",
        "getInputStream",
        "socketOutStream",
        "socket",
        "getOutputStream",
        "requestLine",
        "SP",
        "filePath",
        "SP",
        "CRLF",
        "requestLine",
        "socketOutStream",
        "writeBytes",
        "requestLine",
        "socketOutStream",
        "writeBytes",
        "CRLF",
        "socketOutStream",
        "flush",
        "responseLine",
        "socketInStream",
        "readLine",
        "responseLine",
        "contentType",
        "socketInStream",
        "readLine",
        "contentType",
        "socketInStream",
        "readLine",
        "content",
        "res",
        "res",
        "socketInStream",
        "readLine",
        "content",
        "append",
        "res",
        "res",
        "fileName",
        "getFileName",
        "content",
        "toString",
        "fos",
        "fileName",
        "fos",
        "write",
        "content",
        "toString",
        "getBytes",
        "fos",
        "flush",
        "fileName",
        "iae",
        "err",
        "iae",
        "getMessage",
        "e",
        "err",
        "e",
        "socketInStream",
        "socketInStream",
        "close",
        "socketOutStream",
        "socketOutStream",
        "close",
        "fos",
        "fos",
        "close",
        "socket",
        "socket",
        "close",
        "e",
        "err",
        "e",
        "content",
        "filename",
        "filename",
        "content",
        "substring",
        "content",
        "indexOf",
        "length",
        "content",
        "indexOf",
        "filename",
        "equals",
        "filename",
        "filename",
        "filename",
        "filename"
    ],
    "literals": [
        "\"\\r\\n\"",
        "\" \"",
        "\"/\"",
        "\"[CLIENT]> Integer Port is not provided. Default Server port will be used.\"",
        "\"[CLIENT]> Integer Port is not provided. Default Server port will be used.\"",
        "\"[CLIENT]> Not enough parameters provided. At least serverHost is required.\"",
        "\"[CLIENT]> Using Server Port: \"",
        "\"[CLIENT]> Using FilePath: \"",
        "\"[CLIENT]> Connected to the server at \"",
        "\":\"",
        "\"GET\"",
        "\"HTTP/1.0\"",
        "\"[CLIENT]> Sending HTTP GET request: \"",
        "\"[CLIENT]> Waiting for a response from the server\"",
        "\"[CLIENT]> Received HTTP Response with status line: \"",
        "\"[CLIENT]> Received \"",
        "\"[CLIENT]> Received Response Body:\"",
        "\"\\n\"",
        "\"[CLIENT]> HTTP Response received. File Created: \"",
        "\"[CLIENT]> EXCEPTION in connecting to the SERVER: \"",
        "\"[CLIENT]> ERROR \"",
        "\"[CLIENT]> Closing the Connection.\"",
        "\"[CLIENT]> EXCEPTION in closing resource.\"",
        "\"\"",
        "\"<title>\"",
        "\"<title>\"",
        "\"</title>\"",
        "\"\"",
        "\"index\"",
        "\".htm\""
    ],
    "variables": [
        "res"
    ],
    "comments": [
        "WebClient represents single web client",
        "Reference: Socket Communications from http://www.oracle.com/technetwork/java/socket-140484.html",
        "carriage return line feed",
        "status line parts separator",
        "initialize serverPort with default port value",
        "initialize filePath with default file /",
        "check command line arguments for serverhost, port, and filePath",
        "at least serverHost is required",
        "first argument is serverHost",
        "first argument is serverHost",
        "second can be either serverPort or filePath",
        "check if port is an integer",
        "then assume this string is filePath",
        "first argument is serverHost",
        "second argument is serverPort",
        "check if port is an integer",
        "third argument is fileName",
        "define a socket",
        "define input and output streams",
        "reads data received over the socket's inputStream",
        "writes data over the socket's outputStream",
        "writes content of the responded file in a file",
        "get inet address of the serverHost",
        "try to connect to the server",
        "get a reference to socket's inputStream",
        "get a reference to socket's outputStream",
        "now send a HTTP GET request",
        "send the requestLine",
        "send an empty line",
        "flush out output stream",
        "extract response Code",
        "extract content-type of the response",
        "read a blank line i.e. CRLF",
        "start reading content body",
        "save content to a buffer",
        "print it as well",
        "get a name of the file from the response",
        "open a outputstream to the fileName",
        "file will be created if it does not exist",
        "close all resources",
        "default filename if <title> tag is empty"
    ],
    "docstrings": [
        "* CSE 5344 ï¿½ Project 1\n * @author JYOTI SALITRA\n * Spring 2014",
        "* Returns a file name from the html content.\n\t * Generally it is the value of the <title> tag\n\t * @param content\n\t * @return fileName"
    ],
    "functions": [
        "main",
        "getFileName"
    ],
    "classes": [
        "WebClient"
    ]
}