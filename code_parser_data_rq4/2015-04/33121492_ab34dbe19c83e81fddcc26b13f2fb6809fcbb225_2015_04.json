{
    "identifiers": [
        "factory",
        "define",
        "define",
        "define",
        "factory",
        "exports",
        "factory",
        "factory",
        "el",
        "el",
        "el",
        "el",
        "Tap",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "Tap",
        "e",
        "e",
        "e",
        "Tap",
        "e",
        "evt",
        "evt",
        "evt",
        "e",
        "e",
        "evt",
        "e",
        "Tap",
        "Tap",
        "Tap",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "Tap"
    ],
    "literals": [
        "'use strict'",
        "'function'",
        "'object'",
        "'undefined'",
        "'use strict'",
        "'object'",
        "'touchstart'",
        "'mousedown'",
        "'touchstart'",
        "'touchmove'",
        "'touchend'",
        "'touchcancel'",
        "'mousedown'",
        "'mouseup'",
        "'touchstart'",
        "'touchstart'",
        "'touchmove'",
        "'touchend'",
        "'touchcancel'",
        "'mouseup'",
        "'tap'",
        "'Event'",
        "'tap'",
        "'touchstart'",
        "'touchmove'",
        "'touchend'",
        "'touchcancel'",
        "'mousedown'",
        "'mouseup'",
        "'touchstart'",
        "'touchmove'",
        "'touchend'",
        "'touchcancel'",
        "'mousedown'",
        "'mouseup'"
    ],
    "variables": [
        "evt"
    ],
    "comments": [
        "!\n * tap.js\n * Copyright (c) 2013 Alex Gibson, http://alxgbsn.co.uk/\n * Released under MIT license",
        "global define, module",
        "flags if the finger has moved",
        "starting x coordinate",
        "starting y coordinate",
        "flag touch event",
        "if finger moves more than 10px flag to cancel",
        "create custom event",
        "prevent touchend from propagating to any parent",
        "nodes that may have a tap.js listener attached",
        "dispatchEvent returns false if any handler calls preventDefault,",
        "in which case we want to prevent clicks from firing."
    ],
    "docstrings": [],
    "functions": [
        "Tap"
    ],
    "classes": []
}