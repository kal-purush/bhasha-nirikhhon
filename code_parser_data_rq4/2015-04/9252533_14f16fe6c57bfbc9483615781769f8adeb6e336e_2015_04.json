{
    "identifiers": [
        "numpy",
        "nupic",
        "algorithms",
        "anomaly",
        "nupic",
        "regions",
        "PyRegion",
        "PyRegion",
        "PyRegion",
        "classmethod",
        "cls",
        "args",
        "kwargs",
        "numpy",
        "zeros",
        "dtype",
        "inputs",
        "outputs",
        "inputs",
        "outputs",
        "inputs",
        "nonzero",
        "anomaly",
        "computeRawAnomalyScore",
        "activeColumns",
        "prevPredictedColumns",
        "inputs",
        "nonzero",
        "outputs",
        "rawAnomalyScore"
    ],
    "literals": [
        "\"description\"",
        "\"Region that computes anomaly scores from temporal \"",
        "\"memory.\"",
        "\"singleNodeOnly\"",
        "\"inputs\"",
        "\"activeColumns\"",
        "\"description\"",
        "\"The currently active columns.\"",
        "\"regionLevel\"",
        "\"dataType\"",
        "\"Real32\"",
        "\"count\"",
        "\"required\"",
        "\"isDefaultInput\"",
        "\"requireSplitterMap\"",
        "\"predictedColumns\"",
        "\"description\"",
        "\"The currently predicted columns.\"",
        "\"regionLevel\"",
        "\"dataType\"",
        "\"Real32\"",
        "\"count\"",
        "\"required\"",
        "\"isDefaultInput\"",
        "\"requireSplitterMap\"",
        "\"outputs\"",
        "\"rawAnomalyScore\"",
        "\"description\"",
        "\"The raw anomaly score.\"",
        "\"dataType\"",
        "\"Real32\"",
        "\"count\"",
        "\"regionLevel\"",
        "\"isDefaultOutput\"",
        "\"parameters\"",
        "\"commands\"",
        "\"float32\"",
        "\"activeColumns\"",
        "\"predictedColumns\"",
        "\"rawAnomalyScore\""
    ],
    "variables": [
        "prevPredictedColumns",
        "activeColumns",
        "rawAnomalyScore",
        "prevPredictedColumns"
    ],
    "comments": [
        "----------------------------------------------------------------------",
        "Numenta Platform for Intelligent Computing (NuPIC)",
        "Copyright (C) 2015, Numenta, Inc.  Unless you have purchased from",
        "Numenta, Inc. a separate commercial license for this software code, the",
        "following terms and conditions apply:",
        "",
        "This program is free software: you can redistribute it and/or modify",
        "it under the terms of the GNU General Public License version 3 as",
        "published by the Free Software Foundation.",
        "",
        "This program is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.",
        "See the GNU General Public License for more details.",
        "",
        "You should have received a copy of the GNU General Public License",
        "along with this program.  If not, see http://www.gnu.org/licenses.",
        "",
        "http://numenta.org/licenses/",
        "----------------------------------------------------------------------",
        "\"categoriesOut\": None,"
    ],
    "docstrings": [
        "\"\"\"Region for computing the anomaly score.\"\"\"",
        "\"\"\"Region for computing the anomaly score.\"\"\""
    ],
    "functions": [
        "getSpec",
        "initialize",
        "compute"
    ],
    "classes": [
        "AnomalyRegion"
    ]
}