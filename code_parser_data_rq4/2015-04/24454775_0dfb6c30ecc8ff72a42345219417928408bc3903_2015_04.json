{
    "identifiers": [
        "mistune",
        "cwltool",
        "process",
        "shutil",
        "json",
        "yaml",
        "os",
        "subprocess",
        "copy",
        "pprint",
        "re",
        "sys",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "abspath",
        "sys",
        "argv",
        "items",
        "isinstance",
        "items",
        "n",
        "n",
        "items",
        "r",
        "extend",
        "has_types",
        "items",
        "n",
        "r",
        "isinstance",
        "items",
        "i",
        "items",
        "r",
        "extend",
        "has_types",
        "i",
        "r",
        "isinstance",
        "items",
        "basestring",
        "items",
        "open",
        "outdoc",
        "write",
        "open",
        "sys",
        "argv",
        "md",
        "md",
        "read",
        "text",
        "text",
        "text",
        "text",
        "text",
        "index",
        "ValueError",
        "textid",
        "lower",
        "replace",
        "textid",
        "line",
        "maindoc",
        "splitlines",
        "line",
        "strip",
        "start_numbering",
        "re",
        "match",
        "line",
        "m",
        "m",
        "group",
        "n2",
        "toc",
        "n2",
        "toc",
        "to_id",
        "m",
        "group",
        "n1",
        "n2",
        "m",
        "group",
        "n1",
        "n2",
        "m",
        "group",
        "n2",
        "toc",
        "n1",
        "toc",
        "n1",
        "toc",
        "to_id",
        "m",
        "group",
        "n1",
        "m",
        "group",
        "n1",
        "m",
        "group",
        "len",
        "line",
        "line",
        "toc",
        "to_id",
        "line",
        "line",
        "re",
        "sub",
        "line",
        "mdlines",
        "append",
        "line",
        "toc",
        "toc",
        "join",
        "mdlines",
        "outdoc",
        "write",
        "outdoc",
        "write",
        "toc",
        "outdoc",
        "write",
        "mistune",
        "Renderer",
        "text",
        "level",
        "raw",
        "to_id",
        "text",
        "text",
        "outdoc",
        "write",
        "outdoc",
        "write",
        "mistune",
        "markdown",
        "maindoc",
        "renderer",
        "MyRenderer",
        "outdoc",
        "write",
        "outdoc",
        "write",
        "outdoc",
        "close"
    ],
    "literals": [
        "\"type\"",
        "\"items\"",
        "\"values\"",
        "\"index.html\"",
        "\"w\"",
        "''",
        "\"0\"",
        "\"1\"",
        "\"2\"",
        "\"3\"",
        "\"4\"",
        "\"5\"",
        "\"6\"",
        "\"7\"",
        "\"8\"",
        "\"9\"",
        "\" \"",
        "\" \"",
        "\"_\"",
        "\"# Introduction\"",
        "r'^#(#?) (.*)'",
        "\"## %i.%i %s\"",
        "\"</ol>\"",
        "\"</li>\"",
        "\"# %i. %s\"",
        "\"#\"",
        "r'^(https?://\\S+)'",
        "r'[\\1](\\1)'",
        "\"</li>\"",
        "'\\n'"
    ],
    "variables": [
        "module_dir",
        "cwl_avsc",
        "r",
        "outdoc",
        "maindoc",
        "n1",
        "n2",
        "toc",
        "mdlines",
        "n",
        "textid",
        "textid",
        "textid",
        "start_numbering",
        "start_numbering",
        "m",
        "line",
        "n2",
        "line",
        "line",
        "maindoc"
    ],
    "comments": [
        "!/usr/bin/env python",
        "os.path.join(module_dir, '../../schemas/draft-2/cwl-avro.yml')",
        "with open(cwl_avsc) as f:",
        "j = yaml.load(f)",
        "subs = {}",
        "for t in j:",
        "if \"extends\" in t:",
        "if t[\"extends\"] not in subs:",
        "subs[t[\"extends\"]] = []",
        "subs[t[\"extends\"]].append(t[\"name\"])",
        "out[\"fields\"] = cwltool.process.extend_avro(j)",
        "uses = {}",
        "for t in out[\"fields\"]:",
        "if t[\"type\"] == \"record\":",
        "for f in t[\"fields\"]:",
        "p = has_types(f)",
        "for tp in p:",
        "if tp not in uses:",
        "uses[tp] = []",
        "if (t[\"name\"], f[\"name\"]) not in uses[tp]:",
        "uses[tp].append((t[\"name\"], f[\"name\"]))",
        "for f in out[\"fields\"]:",
        "if \"doc\" not in f:",
        "f[\"doc\"] = \"\"",
        "f[\"type\"] = copy.deepcopy(f)",
        "f[\"doc\"] = \"\"",
        "f = f[\"type\"]",
        "if \"doc\" not in f:",
        "f[\"doc\"] = \"\"",
        "if f[\"type\"] == \"record\":",
        "for field in f[\"fields\"]:",
        "if \"doc\" not in field:",
        "field[\"doc\"] = \"\"",
        "doc = \"\"",
        "if \"extends\" in f:",
        "doc += \"\\n\\nExtends [%s](#/schema/%s)\" % (f[\"extends\"], f[\"extends\"])",
        "if f[\"name\"] in subs:",
        "doc += \"\\n\\nExtended by\"",
        "doc += \", \".join([\" [%s](#/schema/%s)\" % (s, s) for s in subs[f[\"name\"]]])",
        "if f[\"name\"] in uses:",
        "doc += \"\\n\\nReferenced by\"",
        "doc += \", \".join([\" [%s.%s](#/schema/%s)\" % (s[0], s[1], s[0]) for s in uses[f[\"name\"]]])",
        "f[\"doc\"] = doc + \"\\n\\n\" + f[\"doc\"]"
    ],
    "docstrings": [
        "\"\"\"\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<script src=\"http://code.jquery.com/jquery-1.11.2.min.js\"></script>\n<script src=\"http://code.jquery.com/jquery-migrate-1.2.1.min.js\"></script>\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css\">\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js\"></script>\n<style>\nbody {\n  position: relative;\n  background-color: aliceblue;\n}\n\n#main {\n background-color: white;\n}\n\n.nav > li > a {\n  padding-top: 2px;\n  padding-bottom: 2px;\n}\n\nol > li > ol {\n  list-style-type: none;\n}\nol > li > ol > li {\n  padding-left: 1em;\n}\n\n</style>\n</head>\n<body data-spy=\"scroll\" data-target=\"#toc\">\n<div class=\"container-fluid\">\n\"\"\"",
        "\"\"\"<ol class=\"nav nav-pills nav-stacked\">\"\"\"",
        "\"\"\"<li><a href=\"#%s\">%i.%i %s</a></li>\\n\"\"\"",
        "\"\"\"<li><a href=\"#%s\">%i. %s</a>\\n\"\"\"",
        "\"\"\"<li><a href=\"#%s\">%s</a></li>\\n\"\"\"",
        "\"\"\"\n<div class=\"row\">\n<div class=\"col-md-3 affix\" role=\"complementary\">\n<nav id=\"toc\">\n<ol class=\"nav nav-pills nav-stacked\">\n\"\"\"",
        "\"\"\"</ol>\n</nav>\n</div>\n</div>\n\"\"\"",
        "\"\"\"<h1 id=\"%s\">%s</h1>\"\"\"",
        "\"\"\"\n<div class=\"col-md-9 col-md-offset-3\" role=\"main\" id=\"main\">\"\"\"",
        "\"\"\"</div>\"\"\"",
        "\"\"\"\n</div>\n</html>\"\"\""
    ],
    "functions": [
        "has_types",
        "to_id",
        "header"
    ],
    "classes": [
        "MyRenderer"
    ]
}