{
    "identifiers": [
        "controller",
        "dao",
        "UserDAO",
        "dao",
        "UserDAOImpl",
        "java",
        "util",
        "Properties",
        "javax",
        "faces",
        "bean",
        "ManagedBean",
        "javax",
        "faces",
        "bean",
        "SessionScoped",
        "javax",
        "mail",
        "Message",
        "javax",
        "mail",
        "MessagingException",
        "javax",
        "mail",
        "Session",
        "javax",
        "mail",
        "Transport",
        "javax",
        "mail",
        "internet",
        "InternetAddress",
        "javax",
        "mail",
        "internet",
        "MimeMessage",
        "model",
        "UserBean",
        "ManagedBean",
        "SessionScoped",
        "response",
        "loginValidaton",
        "theModel",
        "attemptCount",
        "theModel",
        "attemptCount",
        "response",
        "response",
        "response",
        "response",
        "loginValidaton",
        "loginValidaton",
        "loginValidaton",
        "loginValidaton",
        "theModel",
        "theModel",
        "theModel",
        "theModel",
        "validationMessage",
        "uid",
        "theModel",
        "getUserName",
        "pwd",
        "theModel",
        "getPassword",
        "uid",
        "pwd",
        "uid",
        "length",
        "loginValidaton",
        "loginValidaton",
        "pwd",
        "length",
        "loginValidaton",
        "loginValidaton",
        "loginValidaton",
        "loginValidaton",
        "validationMessage",
        "findAccount",
        "validationMessage",
        "aLoginDAO",
        "attemptCount",
        "rowCount",
        "aLoginDAO",
        "findAccount",
        "theModel",
        "rowCount",
        "theModel",
        "setIsLoggedIn",
        "attemptCount",
        "accountType",
        "aLoginDAO",
        "findUserAccountType",
        "theModel",
        "accountType",
        "accountType",
        "equals",
        "theModel",
        "setIsLoggedIn",
        "pendingRowCount",
        "aLoginDAO",
        "findPendingAccount",
        "theModel",
        "deniedRowCount",
        "aLoginDAO",
        "findDeniedAccount",
        "theModel",
        "pendingRowCount",
        "loginValidaton",
        "deniedRowCount",
        "loginValidaton",
        "attemptCount",
        "loginValidaton",
        "loginValidaton",
        "logout",
        "theModel",
        "setIsLoggedIn",
        "theModel",
        "setUserName",
        "theModel",
        "setPassword",
        "ulid",
        "theModel",
        "getUserName",
        "aRecovery",
        "rowCount",
        "aRecovery",
        "checkUserName",
        "ulid",
        "rowCount",
        "loginValidaton",
        "loginValidaton",
        "recoveredPassword",
        "aRecovery",
        "retrievePassword",
        "ulid",
        "sendPasswordRecoveryEmail",
        "ulid",
        "recoveredPassword",
        "uid",
        "pwd",
        "to",
        "theModel",
        "getEmail",
        "host",
        "properties",
        "getProperties",
        "properties",
        "setProperty",
        "host",
        "properties",
        "setProperty",
        "properties",
        "setProperty",
        "session",
        "Session",
        "getDefaultInstance",
        "properties",
        "message",
        "session",
        "message",
        "setFrom",
        "message",
        "addRecipient",
        "Message",
        "RecipientType",
        "TO",
        "to",
        "message",
        "setSubject",
        "messageBody",
        "uid",
        "pwd",
        "message",
        "setContent",
        "messageBody",
        "Transport",
        "send",
        "message",
        "mex",
        "mex",
        "printStackTrace"
    ],
    "literals": [
        "\"in authenticateUser()\"",
        "\"uid=\"",
        "\"pwd=\"",
        "\"Please enter your ULID to login\"",
        "\"in authenticateUser()1: loginValidaton=\"",
        "\"Please enter your password.\"",
        "\"in authenticateUser()2: loginValidaton=\"",
        "\"\"",
        "\"in authenticateUser()3: loginValidaton=\"",
        "\"LoggedIn\"",
        "\"Account type returned =\"",
        "\"admin\"",
        "\"adminLandingPage.xhtml\"",
        "\"studentLandingPage.xhtml\"",
        "\"NotLoggedIn\"",
        "\"Your account request is not yet approved. Please wait or contact the admin.\"",
        "\"Your account request has been denied. Please contact the  admin.\"",
        "\"The username and/or password entered is incorrect. Please try again.\"",
        "\"\"",
        "\"You have exceeded your limit of 3 unsuccessful login attempts. \"",
        "\"Your account has been temporarily locked.\"",
        "\"NotLoggedIn\"",
        "\"\"",
        "\"\"",
        "\"login.xhtml\"",
        "\"This ULID is not yet registered in our system. \\nPlease sign-up for an account.\"",
        "\"\"",
        "\"A password recovery email has been sent to your ISU email address. \"",
        "\"Please follow the instructions provided\"",
        "\"login.xhtml\"",
        "\"msabu@ilstu.edu\"",
        "\"smtp.ilstu.edu\"",
        "\"mail.smtp.host\"",
        "\"mail.user\"",
        "\"yourID\"",
        "\"mail.password\"",
        "\"yourPassword\"",
        "\"Password Recovery\"",
        "\"Hi,<br><br>We have received your password recovery request. \"",
        "\"This email contains the information that you need to log back into your account<br><br>\"",
        "\"User Name: \"",
        "\"<br>\"",
        "\"Password: \"",
        "\"<br><br>\"",
        "\"Please go back to the login page and try to login with the above credentials. <br>\"",
        "\"If you are still unable to access your account, please call 309-309-3099 or email us at xxxx@something.com <br>\"",
        "\"<br><br>Best Regards,<br>Tech Support Team<br>\"",
        "\"text/html\"",
        "\"Sent message successfully....\""
    ],
    "variables": [
        "response",
        "loginValidaton",
        "theModel",
        "attemptCount"
    ],
    "comments": [
        "loginValidaton = \"\";",
        "to be implemented based on what is required to display after logging in",
        "Doing anything with the object after this?",
        "a user with approved account found",
        "the user is an admin",
        "user is a student",
        "a user may be either in pending status or gave incorrect username/pwd",
        "the user account in pending status",
        "the user account in denied status",
        "incorrect ulid/pwd",
        "user exceeded unsuccessful login attempts",
        "loggedIn = false;",
        "Recipient's email ID needs to be mentioned.",
        "Sender's email ID needs to be mentioned",
        "Assuming you are sending email from this host",
        "Get system properties",
        "Setup mail server",
        "if needed",
        "if needed",
        "Get the default Session object.",
        "Create a default MimeMessage object.",
        "Set From: header field of the header.",
        "Set To: header field of the header.",
        "Set Subject: header field",
        "Send the actual HTML message, as big as you like",
        "Send message"
    ],
    "docstrings": [
        "* To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.",
        "*\n * @author it3530219",
        "* @return the response",
        "* @param response the response to set",
        "* @return the loginValidaton",
        "* @param loginValidaton the loginValidaton to set",
        "* @return the theModel",
        "* @param theModel the theModel to set"
    ],
    "functions": [
        "LoginController",
        "getResponse",
        "setResponse",
        "getLoginValidaton",
        "setLoginValidaton",
        "UserBean",
        "getTheModel",
        "setTheModel",
        "authenticateUser",
        "findAccount",
        "logout",
        "recoverPassword",
        "sendPasswordRecoveryEmail"
    ],
    "classes": [
        "LoginController"
    ]
}