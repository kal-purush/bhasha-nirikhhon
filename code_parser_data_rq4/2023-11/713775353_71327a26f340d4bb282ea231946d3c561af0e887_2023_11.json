{
    "identifiers": [
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "nums",
        "n",
        "nums",
        "length",
        "Arrays",
        "sort",
        "nums",
        "ans",
        "first",
        "first",
        "n",
        "first",
        "first",
        "nums",
        "first",
        "nums",
        "first",
        "third",
        "n",
        "target",
        "nums",
        "first",
        "second",
        "first",
        "second",
        "n",
        "second",
        "second",
        "first",
        "nums",
        "second",
        "nums",
        "second",
        "second",
        "third",
        "nums",
        "second",
        "nums",
        "third",
        "target",
        "third",
        "second",
        "third",
        "nums",
        "second",
        "nums",
        "third",
        "target",
        "add",
        "nums",
        "first",
        "add",
        "nums",
        "second",
        "add",
        "nums",
        "third",
        "ans",
        "add",
        "ans"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "枚举 a",
        "需要和上一次枚举的数不相同",
        "c 对应的指针初始指向数组的最右端",
        "枚举 b",
        "需要和上一次枚举的数不相同",
        "需要保证 b 的指针在 c 的指针的左侧",
        "如果指针重合，随着 b 后续的增加",
        "就不会有满足 a+b+c=0 并且 b<c 的 c 了，可以退出循环"
    ],
    "docstrings": [
        "* @Description\n * 三数之和\n * 给你一个整数数组 nums ，判断是否存在三元组 [nums[i], nums[j], nums[k]] 满足 i != j、i != k 且 j != k ，同时还满足 nums[i] + nums[j] + nums[k] == 0 。\n * 请你返回所有和为 0 且不重复的三元组。注意：答案中不可以包含重复的三元组。\n *\n * 示例 1：\n * 输入：nums = [-1,0,1,2,-1,-4]\n * 输出：[[-1,-1,2],[-1,0,1]]\n * 解释：\n * nums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0 。\n * nums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0 。\n * nums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0 。\n * 不同的三元组是 [-1,0,1] 和 [-1,-1,2] 。\n * 注意，输出的顺序和三元组的顺序并不重要。\n *\n * 示例 2：\n * 输入：nums=[0,1,1]\n * 输出：[]\n * 解释：唯一可能的三元组和不为 0。\n *\n * 示例 3：\n * 输入：nums = [0,0,0]\n * 输出：[[0,0,0]]\n * 解释：唯一可能的三元组和为 0 。"
    ],
    "functions": [
        "threeSum"
    ],
    "classes": [
        "Solution"
    ]
}