{
    "identifiers": [
        "org",
        "apache",
        "beam",
        "it",
        "gcp",
        "spanner",
        "org",
        "apache",
        "beam",
        "vendor",
        "guava",
        "v32_1_2_jre",
        "com",
        "google",
        "common",
        "Preconditions",
        "checkArgument",
        "org",
        "junit",
        "Assert",
        "assertEquals",
        "org",
        "junit",
        "Assert",
        "assertNotEquals",
        "com",
        "fasterxml",
        "jackson",
        "annotation",
        "JsonProperty",
        "com",
        "google",
        "cloud",
        "ByteArray",
        "com",
        "google",
        "cloud",
        "spanner",
        "Mutation",
        "java",
        "io",
        "java",
        "io",
        "Serializable",
        "java",
        "text",
        "ParseException",
        "java",
        "time",
        "Duration",
        "java",
        "time",
        "ZoneId",
        "java",
        "time",
        "format",
        "DateTimeFormatter",
        "java",
        "util",
        "java",
        "util",
        "Objects",
        "java",
        "util",
        "Random",
        "java",
        "util",
        "UUID",
        "org",
        "apache",
        "beam",
        "it",
        "common",
        "PipelineLauncher",
        "org",
        "apache",
        "beam",
        "it",
        "common",
        "PipelineOperator",
        "org",
        "apache",
        "beam",
        "it",
        "common",
        "TestProperties",
        "org",
        "apache",
        "beam",
        "it",
        "common",
        "utils",
        "ResourceManagerUtils",
        "org",
        "apache",
        "beam",
        "it",
        "gcp",
        "IOLoadTestBase",
        "org",
        "apache",
        "beam",
        "sdk",
        "io",
        "GenerateSequence",
        "org",
        "apache",
        "beam",
        "sdk",
        "io",
        "gcp",
        "spanner",
        "SpannerIO",
        "org",
        "apache",
        "beam",
        "sdk",
        "io",
        "synthetic",
        "SyntheticSourceOptions",
        "org",
        "apache",
        "beam",
        "sdk",
        "testing",
        "TestPipeline",
        "org",
        "apache",
        "beam",
        "sdk",
        "transforms",
        "DoFn",
        "org",
        "apache",
        "beam",
        "sdk",
        "transforms",
        "ParDo",
        "org",
        "apache",
        "beam",
        "vendor",
        "guava",
        "v32_1_2_jre",
        "com",
        "google",
        "common",
        "collect",
        "ImmutableMap",
        "org",
        "junit",
        "After",
        "org",
        "junit",
        "Before",
        "org",
        "junit",
        "Rule",
        "org",
        "junit",
        "Test",
        "Rule",
        "writePipeline",
        "TestPipeline",
        "create",
        "Rule",
        "readPipeline",
        "TestPipeline",
        "create",
        "tableName",
        "resourceManager",
        "configuration",
        "READ_ELEMENT_METRIC_NAME",
        "Before",
        "tableName",
        "DateTimeFormatter",
        "ofPattern",
        "withZone",
        "ZoneId",
        "of",
        "format",
        "java",
        "time",
        "Instant",
        "now",
        "UUID",
        "randomUUID",
        "toString",
        "replace",
        "substring",
        "resourceManager",
        "SpannerResourceManager",
        "builder",
        "testName",
        "project",
        "region",
        "build",
        "testConfig",
        "TestProperties",
        "getProperty",
        "TestProperties",
        "Type",
        "PROPERTY",
        "configuration",
        "TEST_CONFIGS_PRESET",
        "get",
        "testConfig",
        "configuration",
        "configuration",
        "Configuration",
        "fromJsonString",
        "testConfig",
        "e",
        "format",
        "testConfig",
        "TEST_CONFIGS_PRESET",
        "keySet",
        "createTable",
        "createTableStatement",
        "tableName",
        "configuration",
        "numColumns",
        "configuration",
        "valueSizeBytes",
        "resourceManager",
        "executeDdlStatement",
        "createTable",
        "After",
        "ResourceManagerUtils",
        "cleanResources",
        "resourceManager",
        "TEST_CONFIGS_PRESET",
        "TEST_CONFIGS_PRESET",
        "ImmutableMap",
        "of",
        "Configuration",
        "fromJsonString",
        "Configuration",
        "fromJsonString",
        "Configuration",
        "fromJsonString",
        "e",
        "e",
        "Test",
        "writeInfo",
        "testWrite",
        "writeResult",
        "pipelineOperator",
        "waitUntilDone",
        "createConfig",
        "writeInfo",
        "Duration",
        "ofMinutes",
        "configuration",
        "pipelineTimeout",
        "assertNotEquals",
        "PipelineOperator",
        "Result",
        "LAUNCH_FAILED",
        "writeResult",
        "readInfo",
        "testRead",
        "result",
        "pipelineOperator",
        "waitUntilDone",
        "createConfig",
        "readInfo",
        "Duration",
        "ofMinutes",
        "configuration",
        "pipelineTimeout",
        "assertNotEquals",
        "PipelineOperator",
        "Result",
        "LAUNCH_FAILED",
        "result",
        "assertEquals",
        "PipelineLauncher",
        "JobState",
        "DONE",
        "pipelineLauncher",
        "getJobStatus",
        "project",
        "region",
        "readInfo",
        "jobId",
        "numRecords",
        "pipelineLauncher",
        "getMetric",
        "project",
        "region",
        "readInfo",
        "jobId",
        "getBeamMetricsName",
        "PipelineMetricsType",
        "COUNTER",
        "READ_ELEMENT_METRIC_NAME",
        "assertEquals",
        "configuration",
        "numRecords",
        "numRecords",
        "metricsConfig",
        "MetricsConfiguration",
        "builder",
        "setInputPCollection",
        "setInputPCollectionV2",
        "setOutputPCollection",
        "setOutputPCollectionV2",
        "build",
        "exportMetricsToBigQuery",
        "writeInfo",
        "getMetrics",
        "writeInfo",
        "metricsConfig",
        "exportMetricsToBigQuery",
        "readInfo",
        "getMetrics",
        "readInfo",
        "metricsConfig",
        "e",
        "e",
        "writeTransform",
        "SpannerIO",
        "write",
        "withProjectId",
        "project",
        "withInstanceId",
        "resourceManager",
        "getInstanceId",
        "withDatabaseId",
        "resourceManager",
        "getDatabaseId",
        "writePipeline",
        "apply",
        "GenerateSequence",
        "to",
        "configuration",
        "numRecords",
        "apply",
        "ParDo",
        "of",
        "tableName",
        "configuration",
        "numColumns",
        "configuration",
        "valueSizeBytes",
        "apply",
        "writeTransform",
        "options",
        "PipelineLauncher",
        "LaunchConfig",
        "builder",
        "setSdk",
        "PipelineLauncher",
        "Sdk",
        "JAVA",
        "setPipeline",
        "writePipeline",
        "addParameter",
        "configuration",
        "runner",
        "build",
        "pipelineLauncher",
        "launch",
        "project",
        "region",
        "options",
        "readTrabsfirn",
        "SpannerIO",
        "read",
        "withProjectId",
        "project",
        "withInstanceId",
        "resourceManager",
        "getInstanceId",
        "withDatabaseId",
        "resourceManager",
        "getDatabaseId",
        "withQuery",
        "format",
        "tableName",
        "readPipeline",
        "apply",
        "readTrabsfirn",
        "apply",
        "ParDo",
        "of",
        "READ_ELEMENT_METRIC_NAME",
        "options",
        "PipelineLauncher",
        "LaunchConfig",
        "builder",
        "setSdk",
        "PipelineLauncher",
        "Sdk",
        "JAVA",
        "setPipeline",
        "readPipeline",
        "addParameter",
        "configuration",
        "runner",
        "build",
        "pipelineLauncher",
        "launch",
        "project",
        "region",
        "options",
        "JsonProperty",
        "numColumns",
        "JsonProperty",
        "pipelineTimeout",
        "JsonProperty",
        "runner",
        "tableId",
        "numBytesCol",
        "valueSizeBytes",
        "sizePerCol",
        "valueSizeBytes",
        "numBytesCol",
        "statement",
        "statement",
        "append",
        "format",
        "tableId",
        "col",
        "col",
        "numBytesCol",
        "col",
        "statement",
        "append",
        "format",
        "col",
        "sizePerCol",
        "statement",
        "append",
        "statement",
        "toString",
        "table",
        "numBytesCol",
        "sizePerCol",
        "tableId",
        "numBytesCol",
        "valueSizeBytes",
        "checkArgument",
        "valueSizeBytes",
        "numBytesCol",
        "table",
        "tableId",
        "numBytesCol",
        "numBytesCol",
        "sizePerCol",
        "valueSizeBytes",
        "numBytesCol",
        "ProcessElement",
        "c",
        "builder",
        "Mutation",
        "newInsertOrUpdateBuilder",
        "table",
        "key",
        "Objects",
        "requireNonNull",
        "c",
        "element",
        "builder",
        "to",
        "key",
        "random",
        "key",
        "value",
        "sizePerCol",
        "col",
        "col",
        "numBytesCol",
        "col",
        "name",
        "format",
        "col",
        "random",
        "nextBytes",
        "value",
        "builder",
        "name",
        "to",
        "ByteArray",
        "copyFrom",
        "value",
        "mutation",
        "builder",
        "build",
        "c",
        "output",
        "mutation"
    ],
    "literals": [
        "\"read_count\"",
        "\"io_spanner_\"",
        "\"MMddHHmmssSSS\"",
        "\"UTC\"",
        "\"-\"",
        "\"\"",
        "\"configuration\"",
        "\"local\"",
        "\"Unknown test configuration: [%s]. Pass to a valid configuration json, or use\"",
        "\" config presets: %s\"",
        "\"local\"",
        "\"{\\\"numRecords\\\":1000,\\\"valueSizeBytes\\\":1000,\\\"pipelineTimeout\\\":2,\\\"runner\\\":\\\"DirectRunner\\\"}\"",
        "\"medium\"",
        "\"{\\\"numRecords\\\":10000000,\\\"valueSizeBytes\\\":1000,\\\"pipelineTimeout\\\":20,\\\"runner\\\":\\\"DataflowRunner\\\"}\"",
        "\"large\"",
        "\"{\\\"numRecords\\\":100000000,\\\"valueSizeBytes\\\":1000,\\\"pipelineTimeout\\\":80,\\\"runner\\\":\\\"DataflowRunner\\\"}\"",
        "\"Map records.out0\"",
        "\"Map records/ParMultiDo(GenerateMutations).out0\"",
        "\"Counting element.out0\"",
        "\"Counting element/ParMultiDo(Counting).out0\"",
        "\"Map records\"",
        "\"Write to Spanner\"",
        "\"write-spanner\"",
        "\"runner\"",
        "\"SELECT * FROM %s\"",
        "\"Read from Spanner\"",
        "\"Counting element\"",
        "\"read-spanner\"",
        "\"runner\"",
        "\"DirectRunner\"",
        "\"CREATE TABLE %s (Id INT64\"",
        "\",\\n COL%d BYTES(%d)\"",
        "\") PRIMARY KEY(Id)\"",
        "\"Id\"",
        "\"COL%d\""
    ],
    "variables": [
        "tableName",
        "resourceManager",
        "configuration",
        "TEST_CONFIGS_PRESET",
        "table",
        "numBytesCol",
        "sizePerCol"
    ],
    "comments": [
        "generate a random table name",
        "parse configuration",
        "prepare schema",
        "Create table",
        "1 MB",
        "10 GB",
        "100 GB",
        "export metrics"
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* SpannerIO performance tests.\n *\n * <p>Example trigger command for all tests: \"mvn test -pl it/google-cloud-platform -am\n * -Dtest=SpannerIOLT \\ -Dproject=[gcpProject] -DartifactBucket=[temp bucket]\n * -DfailIfNoTests=false\".\n *\n * <p>Example trigger command for specific test: \"mvn test -pl it/google-cloud-platform -am \\\n * -Dtest=\"SpannerIOLT#testSpannerWriteAndRead\" -Dconfiguration=local -Dproject=[gcpProject] \\\n * -DartifactBucket=[temp bucket] -DfailIfNoTests=false\".",
        "Options for SpannerIO load test.",
        "* Number of columns (besides the primary key) of each record. The column size is equally\n     * distributed as valueSizeBytes/numColumns.",
        "Pipeline timeout in minutes. Must be a positive value.",
        "Runner specified to run the pipeline.",
        "* Generate a create table sql statement with 1 integer column (Id) and additional numBytesCol\n   * columns.",
        "Maps long number to the Spanner format record."
    ],
    "functions": [
        "setup",
        "teardown",
        "testSpannerWriteAndRead",
        "testWrite",
        "testRead",
        "createTableStatement",
        "GenerateMutations",
        "processElement"
    ],
    "classes": [
        "SpannerIOLT",
        "Configuration",
        "GenerateMutations"
    ]
}