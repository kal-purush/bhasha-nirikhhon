{
    "identifiers": [
        "absolute_import",
        "division",
        "print_function",
        "traceback",
        "ansible",
        "module_utils",
        "basic",
        "AnsibleModule",
        "ansible",
        "module_utils",
        "_text",
        "to_native",
        "ansible_collections",
        "netapp",
        "ontap",
        "plugins",
        "module_utils",
        "netapp",
        "netapp_utils",
        "ansible_collections",
        "netapp",
        "ontap",
        "plugins",
        "module_utils",
        "netapp_module",
        "NetAppModule",
        "ansible_collections",
        "netapp",
        "ontap",
        "plugins",
        "module_utils",
        "rest_generic",
        "netapp_utils",
        "na_ontap_host_argument_spec",
        "argument_spec",
        "update",
        "state",
        "required",
        "choices",
        "enabled",
        "required",
        "auth_traps_enabled",
        "required",
        "traps_enabled",
        "required",
        "AnsibleModule",
        "argument_spec",
        "argument_spec",
        "supports_check_mode",
        "NetAppModule",
        "na_helper",
        "check_and_set_parameters",
        "netapp_utils",
        "OntapRestAPI",
        "rest_api",
        "fail_if_not_rest_minimum_version",
        "rest_api",
        "is_rest_supported_properties",
        "parameters",
        "parameters",
        "get",
        "fields",
        "parameters",
        "rest_api",
        "meets_rest_minimum_version",
        "use_rest",
        "fields",
        "rest_generic",
        "get_one_record",
        "rest_api",
        "fields",
        "error",
        "fail_json",
        "msg",
        "to_native",
        "error",
        "exception",
        "traceback",
        "format_exc",
        "record",
        "record",
        "get",
        "record",
        "get",
        "record",
        "get",
        "modify",
        "rest_generic",
        "patch_async",
        "rest_api",
        "modify",
        "error",
        "fail_json",
        "msg",
        "to_native",
        "error",
        "exception",
        "traceback",
        "format_exc",
        "get_snmp_config_rest",
        "na_helper",
        "get_modified_attributes",
        "current",
        "parameters",
        "na_helper",
        "changed",
        "check_mode",
        "modify_snmp_config_rest",
        "modify",
        "netapp_utils",
        "generate_result",
        "changed",
        "na_helper",
        "changed",
        "modify",
        "modify",
        "exit_json",
        "result",
        "NetAppOntapSNMPConfig",
        "snmp_config",
        "apply",
        "main"
    ],
    "literals": [
        "'str'",
        "'present'",
        "'present'",
        "'bool'",
        "'bool'",
        "'bool'",
        "'na_ontap_snmp_config:'",
        "'traps_enabled'",
        "'enabled'",
        "'auth_traps_enabled'",
        "',auth_traps_enabled'",
        "'traps_enabled'",
        "',traps_enabled'",
        "'support/snmp'",
        "\"Error fetching SNMP configuration: %s\"",
        "'enabled'",
        "'enabled'",
        "'auth_traps_enabled'",
        "'auth_traps_enabled'",
        "'traps_enabled'",
        "'traps_enabled'",
        "'support/snmp'",
        "'Error modifying SNMP configuration: %s.'",
        "'__main__'"
    ],
    "variables": [
        "__metaclass__",
        "DOCUMENTATION",
        "EXAMPLES",
        "RETURN",
        "argument_spec",
        "uuid",
        "na_helper",
        "parameters",
        "rest_api",
        "use_rest",
        "fields",
        "record",
        "error",
        "dummy",
        "error",
        "current",
        "modify",
        "result",
        "snmp_config"
    ],
    "comments": [
        "!/usr/bin/python",
        "-*- coding: utf-8 -*-",
        "Copyright: NetApp, Inc",
        "GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)"
    ],
    "docstrings": [
        "\"\"\"\nmodule: na_ontap_snmp_config\nshort_description: NetApp ONTAP module to modify SNMP configuration.\nextends_documentation_fragment:\n    - netapp.ontap.netapp.na_ontap\nversion_added: '22.9.0'\nauthor: NetApp Ansible Team (@carchi8py) <ng-ansibleteam@netapp.com>\ndescription:\n  - Modify cluster wide SNMP configuration.\n  - Enable or disable SNMP on a cluster.\noptions:\n  state:\n    description:\n      - Modify SNMP configuration, only present is supported.\n    choices: ['present']\n    type: str\n    default: present\n  enabled:\n    description:\n      - Specifies whether to enable or disable SNMP.\n    type: bool\n    required: false\n  auth_traps_enabled:\n    description:\n      - Specifies whether to enable or disable SNMP authentication traps.\n    type: bool\n    required: false\n  traps_enabled:\n    description:\n      - Specifies whether to enable or disable SNMP traps.\n      - Requires ONTAP 9.10.1 or later.\n    type: bool\n    required: false\n\nnotes:\n  - Only supported with REST and requires ONTAP 9.7 or later.\n\"\"\"",
        "\"\"\"\n  - name: Disable SNMP on cluster\n    netapp.ontap.na_ontap_snmp_config:\n      state: present\n      enabled: false\n      hostname: \"{{ netapp_hostname }}\"\n      username: \"{{ netapp_username }}\"\n      password: \"{{ netapp_password }}\"\n      https: true\n      validate_certs: \"{{ validate_certs }}\"\n\n  - name: Modify SNMP configuration\n    netapp.ontap.na_ontap_snmp_config:\n      state: present\n      auth_traps_enabled: true\n      traps_enabled: true\n      hostname: \"{{ netapp_hostname }}\"\n      username: \"{{ netapp_username }}\"\n      password: \"{{ netapp_password }}\"\n      https: true\n      validate_certs: \"{{ validate_certs }}\"\n\"\"\"",
        "\"\"\"\n\"\"\"",
        "\"\"\"Retrieve cluster wide SNMP configuration\"\"\"",
        "\"\"\"Update cluster wide SNMP configuration\"\"\""
    ],
    "functions": [
        "get_snmp_config_rest",
        "modify_snmp_config_rest",
        "apply",
        "main"
    ],
    "classes": [
        "NetAppOntapSNMPConfig"
    ]
}