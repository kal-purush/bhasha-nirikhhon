{
    "identifiers": [
        "better_profanity",
        "profanity",
        "pymongo",
        "CSBotCommon",
        "PalmApi",
        "CSBotCommon",
        "Bot",
        "time",
        "datetime",
        "os",
        "pandas",
        "pd",
        "dotenv",
        "load_dotenv",
        "load_dotenv",
        "document_data",
        "document_data",
        "pymongo",
        "MongoClient",
        "os",
        "getenv",
        "db_client",
        "get_database",
        "database",
        "get_collection",
        "user_id",
        "collection",
        "find_one",
        "user_id",
        "user_document",
        "user_document",
        "collection",
        "find_one",
        "document_data",
        "result",
        "update_record",
        "collection",
        "insert_one",
        "document_data",
        "insert_result",
        "inserted_id",
        "document_data",
        "document_data",
        "new_offense",
        "collection",
        "update_one",
        "user_filter",
        "updated_document",
        "result",
        "modified_count",
        "discord_user_id",
        "message_content",
        "discord_user_id",
        "message_content",
        "datetime",
        "datetime",
        "utcnow",
        "current_time",
        "strftime",
        "current_time",
        "pd",
        "read_csv",
        "search_word",
        "profanity_words",
        "df",
        "df",
        "contains",
        "search_word",
        "na",
        "filtered_df",
        "empty",
        "max",
        "max_severity",
        "filtered_df",
        "max",
        "max_severity",
        "max_severity",
        "pd",
        "read_csv",
        "df",
        "tolist",
        "profanity",
        "load_censor_words",
        "custom_badwords",
        "profanity",
        "contains_profanity",
        "message_content",
        "descision",
        "word",
        "message_content",
        "split",
        "profanity",
        "contains_profanity",
        "word",
        "profanity_words",
        "append",
        "word",
        "determine_severity_level",
        "profanity_words",
        "discord_user_id",
        "message_content",
        "profanity_words",
        "descision_onj",
        "date",
        "check_action_rule",
        "descision_onj",
        "ProfanityDB",
        "document_data",
        "record_event_to_db",
        "descision",
        "warning_message_obj",
        "Bot",
        "os",
        "getenv",
        "bot",
        "create_private_thread",
        "discord_user_id",
        "os",
        "getenv",
        "warning_message_obj",
        "bot",
        "run",
        "descision_onj",
        "discord_user_id",
        "descision_onj",
        "severity",
        "coach_user",
        "warning_message",
        "warn_user",
        "warning_message_obj",
        "severity",
        "ban_user",
        "warning_message",
        "warn_user",
        "warning_message_obj",
        "severity",
        "kick_user",
        "warning_message",
        "warn_user",
        "warning_message_obj",
        "warn_user",
        "warn_user"
    ],
    "literals": [
        "'mongo_string'",
        "\"CodingChallengeBot\"",
        "\"Users\"",
        "\"_id\"",
        "\"_id\"",
        "'_id'",
        "\"adding new record\"",
        "\"_id\"",
        "'_id'",
        "'profanity_warnings'",
        "\"$push\"",
        "\"profanity_warnings\"",
        "\"updating record\"",
        "\"\"",
        "\"%Y-%m-%dT%H:%M:%S.%fZ\"",
        "'profanityen.csv'",
        "'-inf'",
        "'text'",
        "'severity_rating'",
        "'-inf'",
        "'profanityen.csv'",
        "'text'",
        "\"severity_level\"",
        "\"profanity_words\"",
        "\"_id\"",
        "\"profanity_warnings\"",
        "\"message_content\"",
        "\"profanity_words\"",
        "\"severity_level\"",
        "\"severity_level\"",
        "\"date\"",
        "'bot_key'",
        "'challenge_channel_id'",
        "\"Failed to warn user\"",
        "f\"\"\"\nHello @{self.discord_user_id},\n\nYou are receiving this message because one of your recent messages on the server contained profanity. We want to maintain a positive and respectful environment for all members.\nPlease be mindful of our community guidelines and refrain from using inappropriate language. Continued violations may result in further action.\nIf you have any questions or concerns, feel free to reach out to the moderation team.\n\nThank you for your cooperation.\n\nBest regards,\n### Moderation Team\n                        \"\"\"",
        "'severity_level'",
        "\"warning_type\"",
        "\"COACH\"",
        "\"warning_message\"",
        "\"warning_type\"",
        "\"BAN\"",
        "\"warning_message\"",
        "\"warning_type\"",
        "\"KICK\"",
        "\"warning_message\"",
        "\"Watchout ... buddy\"",
        "\"Kicking you out because of ....\""
    ],
    "variables": [
        "document_data",
        "db_client",
        "database",
        "collection",
        "user_document",
        "result",
        "insert_result",
        "user_filter",
        "new_offense",
        "updated_document",
        "result",
        "decision",
        "discord_user_id",
        "severity_level",
        "profanity_words",
        "message_content",
        "current_time",
        "current_time",
        "date",
        "df",
        "max_severity",
        "filtered_df",
        "max_severity",
        "df",
        "custom_badwords",
        "descision",
        "descision_onj",
        "document_data",
        "bot",
        "warning_message",
        "severity",
        "coach_user",
        "ban_user",
        "kick_user",
        "warning_message_obj",
        "warning_message_obj",
        "warning_message_obj"
    ],
    "comments": [
        "set up DB connection",
        "Check if user exist in DB if so update record else add record",
        "Specify the new \"profanity_warnings\" entry",
        "Update the document with a new \"profanity_warnings\" entry",
        "Start with negative infinity to ensure any value encountered will be greater",
        "The provided list will replace the default wordlist.",
        "check rules",
        "Add record to DB",
        "warn user",
        "warn user",
        "db = ProfanityDB(document1)",
        "user_collection = db.get_collection_by_user(\"gigi_gio\")",
        "profanity_warnings =user_collection['profanity_warnings']",
        "handle =Hand_profanity(\"900420056947785739\", \"boobs 69 dickhead\")",
        "",
        "print(handle.is_it_bad_word())"
    ],
    "docstrings": [],
    "functions": [
        "get_collection_by_user",
        "record_event_to_db",
        "update_record",
        "determine_severity_level",
        "is_it_bad_word",
        "warn_user",
        "check_action_rule",
        "add_to_probation",
        "kick_user"
    ],
    "classes": [
        "ProfanityDB",
        "Hand_profanity"
    ]
}