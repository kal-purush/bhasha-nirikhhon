{
    "identifiers": [
        "sys",
        "sys",
        "path",
        "append",
        "numpy",
        "np",
        "fh_comm",
        "SplittingMethod",
        "spl",
        "fh_comm",
        "SplittingMethod",
        "fh_comm",
        "WeightedNestedCommutator",
        "spl",
        "suzuki",
        "splitting",
        "SplittingMethod",
        "s",
        "np",
        "zeros",
        "splitting",
        "order",
        "splitting",
        "num_terms",
        "repr",
        "weights",
        "shape",
        "j",
        "splitting",
        "num_layers",
        "j",
        "np",
        "zeros",
        "splitting",
        "num_terms",
        "bcoeff",
        "i",
        "c",
        "splitting",
        "indices",
        "j",
        "splitting",
        "coeffs",
        "j",
        "bcoeff",
        "i",
        "c",
        "bcoeff",
        "q",
        "integer_sum_tuples",
        "splitting",
        "order",
        "s",
        "j",
        "j",
        "s",
        "j",
        "s",
        "q",
        "multinomial",
        "q",
        "q",
        "k",
        "splitting",
        "num_terms",
        "bcoeff",
        "k",
        "k",
        "commidx",
        "bcoeff",
        "k",
        "w",
        "i",
        "len",
        "q",
        "j",
        "i",
        "j",
        "s",
        "j",
        "i",
        "commidx",
        "q",
        "i",
        "splitting",
        "indices",
        "l",
        "commidx",
        "w",
        "abs",
        "splitting",
        "coeffs",
        "l",
        "q",
        "i",
        "w",
        "len",
        "commidx",
        "splitting",
        "order",
        "commidx",
        "commidx",
        "commidx",
        "commidx",
        "commidx",
        "commidx",
        "commidx",
        "commidx",
        "weights",
        "commidx",
        "mq",
        "w",
        "weights",
        "weights",
        "math",
        "factorial",
        "splitting",
        "order",
        "weights",
        "idx",
        "w",
        "np",
        "ndenumerate",
        "weights",
        "w",
        "idx",
        "w",
        "res",
        "append",
        "WeightedNestedCommutator",
        "idx",
        "w",
        "res",
        "res"
    ],
    "literals": [
        "'e:/Projects/fermi_hubbard_commutators/'",
        "\"weights.shape=\"",
        "\"j in [1,4), j=\"",
        "\"construct bcoeff = \"",
        "\"now, bcoeff = \"",
        "\"Here, compute multinomial with q=\"",
        "\"commidx=\"",
        "\"start with w=\"",
        "\"the new commidx=\"",
        "\"the new w=\"",
        "\"for [A,B]=-[B,A], commidx=\"",
        "\"how weights chage for this j: \"",
        "\"final weights=\"",
        "f\"to compute WNC, idx={idx}, w={w}\"",
        "\"the new value apped to res is \""
    ],
    "variables": [
        "suzuki_testcase",
        "weights",
        "bcoeff",
        "mq",
        "commidx",
        "w",
        "l",
        "commidx",
        "res"
    ],
    "comments": [
        "[A, A] = 0",
        "[A, B] = -[B, A], and absolute values agree",
        "assemble return value"
    ],
    "docstrings": [
        "\"\"\"\n    Coefficients for commutator bounds on a splitting method (product rule).\n    \"\"\""
    ],
    "functions": [
        "commutator_bound_test"
    ],
    "classes": []
}