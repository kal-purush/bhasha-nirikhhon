{
    "identifiers": [
        "org",
        "hyperledger",
        "besu",
        "ethereum",
        "trie",
        "verkle",
        "exporter",
        "java",
        "io",
        "BufferedWriter",
        "java",
        "io",
        "FileWriter",
        "java",
        "io",
        "java",
        "nio",
        "charset",
        "StandardCharsets",
        "java",
        "nio",
        "file",
        "AccessDeniedException",
        "java",
        "nio",
        "file",
        "FileSystemException",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "nio",
        "file",
        "Path",
        "java",
        "nio",
        "file",
        "Paths",
        "java",
        "util",
        "regex",
        "Matcher",
        "java",
        "util",
        "regex",
        "Pattern",
        "org",
        "apache",
        "logging",
        "log4j",
        "LogManager",
        "org",
        "apache",
        "logging",
        "log4j",
        "Logger",
        "LOG",
        "LogManager",
        "getLogger",
        "FILE_EXTENSION_PATTERN",
        "Pattern",
        "compile",
        "DEFAULT_FILE_NAME",
        "verkleTrieDotString",
        "exportToDotFile",
        "verkleTrieDotString",
        "DEFAULT_FILE_NAME",
        "verkleTrieDotString",
        "filePath",
        "filePath",
        "filePath",
        "isEmpty",
        "filePath",
        "DEFAULT_FILE_NAME",
        "matcher",
        "FILE_EXTENSION_PATTERN",
        "matcher",
        "filePath",
        "matcher",
        "find",
        "path",
        "Paths",
        "get",
        "filePath",
        "Files",
        "createDirectories",
        "path",
        "getParent",
        "writer",
        "path",
        "toString",
        "StandardCharsets",
        "UTF_8",
        "writer",
        "write",
        "verkleTrieDotString",
        "e",
        "LOG",
        "error",
        "e",
        "getMessage",
        "e",
        "e",
        "e",
        "LOG",
        "error",
        "e",
        "getMessage",
        "e",
        "e",
        "e",
        "LOG",
        "error",
        "e",
        "getMessage",
        "e",
        "e"
    ],
    "literals": [
        "\"\\\\.(dot|gv)$\"",
        "\"./VerkleTrie.gv\"",
        "\"Invalid file extension. Use .dot or .gv extension.\"",
        "\"Access denied. Check write permissions for the file. Details: {}\"",
        "\"File system issue. Check disk space and file system restrictions. Details: {}\"",
        "\"Error writing DOT file: {}. Details: {}\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Copyright Besu Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n * the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n *",
        "Utility class for exporting Verkle Trie representations to DOT files.",
        "* Exports the Verkle Trie DOT representation to a '.gv' file located in the current directory.\n   * The default file name is \"VerkleTrie.gv\".\n   *\n   * @param verkleTrieDotString The DOT representation of the Verkle Trie.\n   * @throws IOException If an I/O error occurs during the export process.",
        "* Exports the Verkle Trie DOT representation to a '.gv' file located at the specified path.\n   *\n   * @param verkleTrieDotString The DOT representation of the Verkle Trie.\n   * @param filePath The location where the DOT file will be saved.\n   * @throws IOException If an I/O error occurs during the export process."
    ],
    "functions": [
        "exportToDotFile",
        "exportToDotFile"
    ],
    "classes": [
        "DotExporter"
    ]
}