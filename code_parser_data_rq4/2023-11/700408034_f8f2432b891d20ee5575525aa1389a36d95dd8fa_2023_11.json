{
    "identifiers": [
        "io",
        "quarkus",
        "search",
        "app",
        "hibernate",
        "java",
        "net",
        "URI",
        "org",
        "hibernate",
        "SqlTypes",
        "org",
        "hibernate",
        "descriptor",
        "WrapperOptions",
        "org",
        "hibernate",
        "descriptor",
        "java",
        "AbstractClassJavaType",
        "org",
        "hibernate",
        "descriptor",
        "jdbc",
        "JdbcType",
        "org",
        "hibernate",
        "descriptor",
        "jdbc",
        "JdbcTypeIndicators",
        "io",
        "quarkus",
        "runtime",
        "annotations",
        "RegisterForReflection",
        "RegisterForReflection",
        "targets",
        "Override",
        "context",
        "context",
        "getJdbcType",
        "SqlTypes",
        "VARCHAR",
        "Override",
        "value",
        "value",
        "toString",
        "Override",
        "URI",
        "create",
        "toString",
        "Override",
        "SuppressWarnings",
        "value",
        "options",
        "value",
        "isAssignableFrom",
        "value",
        "isAssignableFrom",
        "toString",
        "value",
        "unknownUnwrap",
        "Override",
        "value",
        "options",
        "value",
        "value",
        "value",
        "value",
        "fromString",
        "value",
        "unknownWrap",
        "value",
        "getClass"
    ],
    "literals": [
        "\"unchecked\""
    ],
    "variables": [],
    "comments": [
        "Workaround for a problem similar to https://github.com/quarkusio/quarkus/issues/34071"
    ],
    "docstrings": [
        "* A Hibernate ORM {@link org.hibernate.type.descriptor.java.JavaType} for {@link URI}.\n * <p>\n * Weirdly, Hibernate ORM supports URL attributes but not URI attributes,\n * so by default it will handle them as serialized byte[], leading to strange errors.\n * <p>\n * To avoid that, we'll just do the conversion to String ourselves.\n * As we can't use {@link jakarta.persistence.AttributeConverter} on identifiers,\n * we have to implement the conversion as a {@link org.hibernate.type.descriptor.java.JavaType}."
    ],
    "functions": [
        "URIType",
        "JdbcType",
        "getRecommendedJdbcType",
        "toString",
        "URI",
        "fromString",
        "X",
        "unwrap",
        "URI",
        "wrap"
    ],
    "classes": [
        "URIType"
    ]
}