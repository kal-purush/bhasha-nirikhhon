{
    "identifiers": [
        "numpy",
        "np",
        "pandas",
        "pd",
        "matplotlib",
        "pyplot",
        "plt",
        "seaborn",
        "sb",
        "sklearn",
        "model_selection",
        "train_test_split",
        "sklearn",
        "preprocessing",
        "StandardScaler",
        "sklearn",
        "linear_model",
        "LogisticRegression",
        "sklearn",
        "svm",
        "SVC",
        "xgboost",
        "XGBClassifier",
        "sklearn",
        "metrics",
        "warnings",
        "warnings",
        "filterwarnings",
        "pd",
        "read_csv",
        "df",
        "head",
        "df",
        "shape",
        "df",
        "describe",
        "df",
        "info",
        "plt",
        "figure",
        "figsize",
        "plt",
        "plot",
        "df",
        "plt",
        "title",
        "fontsize",
        "plt",
        "ylabel",
        "plt",
        "show",
        "df",
        "head",
        "df",
        "df",
        "df",
        "shape",
        "df",
        "drop",
        "axis",
        "df",
        "isnull",
        "sum",
        "plt",
        "subplots",
        "figsize",
        "i",
        "col",
        "features",
        "plt",
        "subplot",
        "i",
        "sb",
        "distplot",
        "df",
        "col",
        "plt",
        "show",
        "plt",
        "subplots",
        "figsize",
        "i",
        "col",
        "features",
        "plt",
        "subplot",
        "i",
        "sb",
        "boxplot",
        "df",
        "col",
        "plt",
        "show",
        "df",
        "split",
        "expand",
        "splitted",
        "astype",
        "splitted",
        "astype",
        "splitted",
        "astype",
        "df",
        "head",
        "np",
        "where",
        "df",
        "df",
        "head",
        "df",
        "groupby",
        "mean",
        "plt",
        "subplots",
        "figsize",
        "i",
        "col",
        "plt",
        "subplot",
        "i",
        "data_grouped",
        "col",
        "plot",
        "bar",
        "plt",
        "show",
        "df",
        "groupby",
        "mean",
        "df",
        "df",
        "df",
        "df",
        "np",
        "where",
        "df",
        "shift",
        "df",
        "plt",
        "pie",
        "df",
        "value_counts",
        "values",
        "labels",
        "autopct",
        "plt",
        "show",
        "plt",
        "figure",
        "figsize",
        "sb",
        "heatmap",
        "df",
        "corr",
        "annot",
        "cbar",
        "plt",
        "show",
        "df",
        "df",
        "StandardScaler",
        "scaler",
        "fit_transform",
        "features",
        "train_test_split",
        "features",
        "target",
        "test_size",
        "random_state",
        "X_train",
        "shape",
        "X_valid",
        "shape",
        "LogisticRegression",
        "SVC",
        "kernel",
        "probability",
        "XGBClassifier",
        "i",
        "models",
        "i",
        "fit",
        "X_train",
        "Y_train",
        "models",
        "i",
        "metrics",
        "roc_auc_score",
        "Y_train",
        "models",
        "i",
        "predict_proba",
        "X_train",
        "metrics",
        "roc_auc_score",
        "Y_valid",
        "models",
        "i",
        "predict_proba",
        "X_valid",
        "metrics",
        "plot_confusion_matrix",
        "models",
        "X_valid",
        "Y_valid",
        "plt",
        "show",
        "numpy",
        "np",
        "pandas",
        "pd",
        "matplotlib",
        "pyplot",
        "plt",
        "seaborn",
        "sns",
        "sklearn",
        "model_selection",
        "train_test_split",
        "sklearn",
        "preprocessing",
        "StandardScaler",
        "xgboost",
        "XGBClassifier",
        "sklearn",
        "metrics",
        "pd",
        "read_csv",
        "StandardScaler",
        "scaler",
        "fit_transform",
        "features",
        "train_test_split",
        "features",
        "target",
        "test_size",
        "random_state",
        "XGBClassifier",
        "n_estimators",
        "max_depth",
        "learning_rate",
        "model",
        "fit",
        "X_train",
        "Y_train",
        "metrics",
        "roc_auc_score",
        "Y_train",
        "model",
        "predict_proba",
        "X_train",
        "metrics",
        "roc_auc_score",
        "Y_valid",
        "model",
        "predict_proba",
        "X_valid",
        "train_accuracy",
        "valid_accuracy",
        "df",
        "head",
        "numpy",
        "np",
        "pandas",
        "pd",
        "sklearn",
        "model_selection",
        "train_test_split",
        "sklearn",
        "preprocessing",
        "StandardScaler",
        "xgboost",
        "XGBClassifier",
        "sklearn",
        "metrics",
        "sklearn",
        "ensemble",
        "RandomForestClassifier",
        "GradientBoostingClassifier",
        "sklearn",
        "model_selection",
        "GridSearchCV",
        "pd",
        "read_csv",
        "df",
        "drop",
        "axis",
        "df",
        "df",
        "df",
        "df",
        "np",
        "where",
        "df",
        "shift",
        "df",
        "df",
        "df",
        "StandardScaler",
        "scaler",
        "fit_transform",
        "features",
        "train_test_split",
        "features",
        "target",
        "test_size",
        "random_state",
        "XGBClassifier",
        "GridSearchCV",
        "xgb",
        "param_grid",
        "cv",
        "grid_search",
        "fit",
        "X_train",
        "Y_train",
        "grid_search",
        "best_estimator_",
        "best_xgb",
        "RandomForestClassifier",
        "GradientBoostingClassifier",
        "model",
        "models",
        "model",
        "fit",
        "X_train",
        "Y_train",
        "model",
        "metrics",
        "roc_auc_score",
        "Y_train",
        "model",
        "predict_proba",
        "X_train",
        "metrics",
        "roc_auc_score",
        "Y_valid",
        "model",
        "predict_proba",
        "X_valid",
        "train_accuracy",
        "valid_accuracy",
        "sklearn",
        "metrics",
        "plot_confusion_matrix",
        "matplotlib",
        "pyplot",
        "plt",
        "plot_confusion_matrix",
        "best_xgb",
        "X_valid",
        "Y_valid",
        "plt",
        "show",
        "pip",
        "install",
        "U",
        "scikit",
        "learn",
        "matplotlib",
        "pyplot",
        "plt",
        "seaborn",
        "sns",
        "sklearn",
        "metrics",
        "confusion_matrix",
        "best_xgb",
        "predict",
        "X_valid",
        "confusion_matrix",
        "Y_valid",
        "y_pred",
        "plt",
        "figure",
        "figsize",
        "sns",
        "heatmap",
        "cm",
        "annot",
        "fmt",
        "cmap",
        "xticklabels",
        "yticklabels",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "title",
        "plt",
        "show"
    ],
    "literals": [
        "'ignore'",
        "'/content/TSLA.csv'",
        "'Close'",
        "'Tesla Close price.'",
        "'Price in dollars.'",
        "'Close'",
        "'Adj Close'",
        "'Adj Close'",
        "'Open'",
        "'High'",
        "'Low'",
        "'Close'",
        "'Volume'",
        "'Date'",
        "'-'",
        "'day'",
        "'int'",
        "'month'",
        "'int'",
        "'year'",
        "'int'",
        "'is_quarter_end'",
        "'month'",
        "'year'",
        "'Open'",
        "'High'",
        "'Low'",
        "'Close'",
        "'is_quarter_end'",
        "'open-close'",
        "'Open'",
        "'Close'",
        "'low-high'",
        "'Low'",
        "'High'",
        "'target'",
        "'Close'",
        "'Close'",
        "'target'",
        "'%1.1f%%'",
        "'open-close'",
        "'low-high'",
        "'is_quarter_end'",
        "'target'",
        "'poly'",
        "f'{models[i]} : '",
        "'Training Accuracy : '",
        "'Validation Accuracy : '",
        "'/content/TSLA.csv'",
        "f'Training Accuracy: {train_accuracy}'",
        "f'Validation Accuracy: {valid_accuracy}'",
        "'/content/TSLA.csv'",
        "'Adj Close'",
        "'open-close'",
        "'Open'",
        "'Close'",
        "'low-high'",
        "'Low'",
        "'High'",
        "'target'",
        "'Close'",
        "'Close'",
        "'open-close'",
        "'low-high'",
        "'target'",
        "'max_depth'",
        "'n_estimators'",
        "'learning_rate'",
        "f'{model} : '",
        "f'Training Accuracy: {train_accuracy}'",
        "f'Validation Accuracy: {valid_accuracy}'",
        "\"d\"",
        "\"Blues\"",
        "\"Predicted 0\"",
        "\"Predicted 1\"",
        "\"Actual 0\"",
        "\"Actual 1\"",
        "\"Predicted\"",
        "\"Actual\"",
        "\"Confusion Matrix\""
    ],
    "variables": [
        "df",
        "df",
        "features",
        "splitted",
        "df",
        "df",
        "df",
        "df",
        "data_grouped",
        "df",
        "df",
        "df",
        "features",
        "target",
        "scaler",
        "features",
        "X_train",
        "X_valid",
        "Y_train",
        "Y_valid",
        "models",
        "df",
        "scaler",
        "features",
        "X_train",
        "X_valid",
        "Y_train",
        "Y_valid",
        "model",
        "train_accuracy",
        "valid_accuracy",
        "df",
        "df",
        "df",
        "df",
        "df",
        "features",
        "target",
        "scaler",
        "features",
        "X_train",
        "X_valid",
        "Y_train",
        "Y_valid",
        "param_grid",
        "xgb",
        "grid_search",
        "best_xgb",
        "models",
        "train_accuracy",
        "valid_accuracy",
        "y_pred",
        "cm"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "As our concern is with the highly",
        "correlated features only so, we will visualize",
        "our heatmap as per that criteria only.",
        "Load your dataset",
        "Data Preprocessing",
        "... (You can include feature engineering, data cleaning, etc.)",
        "Feature Scaling",
        "Data Splitting",
        "Model Development",
        "Evaluation",
        "Load your dataset, perform initial data preprocessing, and feature engineering",
        "Replace this with your data loading and preprocessing steps",
        "Feature engineering",
        "Split the data into features and target",
        "Normalize the features",
        "Split the data into training and validation sets",
        "Hyperparameter tuning using GridSearchCV",
        "Ensemble multiple models",
        "Combine predictions from multiple models using majority voting or averaging",
        "Evaluate the ensemble model",
        "Continue optimizing and experimenting with different techniques to improve accuracy",
        "Replace 'best_xgb' with your chosen model",
        "Replace 'best_xgb' with your chosen model"
    ],
    "docstrings": [
        "\"\"\"Stock Price Prediction.ipynb\n\nAutomatically generated by Colaboratory.\n\nOriginal file is located at\n    https://colab.research.google.com/drive/1lfPN9nFxQsLLELF0b287j_tPfM7cDfFu\n\"\"\"",
        "\"\"\"AttributeError: module 'sklearn.metrics' has no attribute 'plot_confusion_matrix'\nit is been deprecated from sklearn\n\nConclusion:\nWe can observe that the accuracy achieved by the state-of-the-art ML model is no better than simply guessing with a probability of 50%. Possible reasons for this may be the lack of data or using a very simple model to perform such a complex task as Stock Market prediction.\n\nI have tried to make it more better\n\"\"\""
    ],
    "functions": [],
    "classes": []
}