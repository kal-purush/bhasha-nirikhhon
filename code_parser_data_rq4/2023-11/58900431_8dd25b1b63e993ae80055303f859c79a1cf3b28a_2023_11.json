{
    "identifiers": [
        "bambi",
        "bmb",
        "numpy",
        "np",
        "pandas",
        "pd",
        "pytest",
        "pytest",
        "fixture",
        "scope",
        "np",
        "random",
        "default_rng",
        "pd",
        "DataFrame",
        "rng",
        "binomial",
        "n",
        "p",
        "size",
        "size",
        "rng",
        "poisson",
        "lam",
        "size",
        "size",
        "rng",
        "poisson",
        "lam",
        "size",
        "size",
        "rng",
        "normal",
        "size",
        "size",
        "rng",
        "normal",
        "size",
        "size",
        "rng",
        "normal",
        "size",
        "size",
        "rng",
        "choice",
        "size",
        "size",
        "rng",
        "choice",
        "size",
        "size",
        "rng",
        "choice",
        "size",
        "size",
        "data",
        "pd",
        "DataFrame",
        "np",
        "repeat",
        "columns",
        "bmb",
        "Prior",
        "lower",
        "upper",
        "bmb",
        "Model",
        "data",
        "data",
        "family",
        "priors",
        "priors",
        "link",
        "model",
        "fit",
        "inference_method",
        "results",
        "posterior",
        "mean",
        "item",
        "results",
        "posterior",
        "std",
        "item",
        "data",
        "mean",
        "data",
        "std",
        "len",
        "data",
        "np",
        "testing",
        "assert_array_almost_equal",
        "mode_n",
        "std_n",
        "mode_a",
        "item",
        "std_a",
        "item",
        "pd",
        "DataFrame",
        "np",
        "repeat",
        "columns",
        "bmb",
        "Prior",
        "lower",
        "upper",
        "bmb",
        "Model",
        "data",
        "data",
        "family",
        "priors",
        "priors",
        "link",
        "model",
        "fit",
        "inference_method",
        "method",
        "results",
        "sample",
        "posterior",
        "samples",
        "mean",
        "samples",
        "std",
        "data",
        "mean",
        "data",
        "std",
        "len",
        "data",
        "np",
        "testing",
        "assert_array_almost_equal",
        "mode_n",
        "item",
        "std_n",
        "item",
        "mode_a",
        "item",
        "std_a",
        "item",
        "pytest",
        "mark",
        "parametrize",
        "data_n100",
        "args",
        "bmb",
        "Model",
        "data_n100",
        "family",
        "model",
        "fit",
        "tune",
        "draws",
        "inference_method",
        "args",
        "args",
        "pytest",
        "mark",
        "parametrize",
        "data_n100",
        "args",
        "bmb",
        "Model",
        "data_n100",
        "model",
        "fit",
        "tune",
        "draws",
        "inference_method",
        "args",
        "args"
    ],
    "literals": [
        "\"module\"",
        "\"b1\"",
        "\"n1\"",
        "\"n2\"",
        "\"y1\"",
        "\"y2\"",
        "\"y3\"",
        "\"cat2\"",
        "\"a\"",
        "\"b\"",
        "\"cat4\"",
        "\"MNOP\"",
        "\"cat5\"",
        "\"FGHIJK\"",
        "\"w\"",
        "\"Intercept\"",
        "\"Uniform\"",
        "\"w ~ 1\"",
        "\"bernoulli\"",
        "\"identity\"",
        "\"laplace\"",
        "\"Intercept\"",
        "\"Intercept\"",
        "\"w\"",
        "\"Intercept\"",
        "\"Uniform\"",
        "\"w ~ 1\"",
        "\"bernoulli\"",
        "\"identity\"",
        "\"vi\"",
        "\"advi\"",
        "\"Intercept\"",
        "\"args\"",
        "\"mcmc\"",
        "\"nuts_numpyro\"",
        "\"chain_method\"",
        "\"vectorized\"",
        "\"nuts_blackjax\"",
        "\"chain_method\"",
        "\"vectorized\"",
        "\"b1 ~ n1\"",
        "\"bernoulli\"",
        "\"args\"",
        "\"mcmc\"",
        "\"nuts_numpyro\"",
        "\"chain_method\"",
        "\"vectorized\"",
        "\"nuts_blackjax\"",
        "\"chain_method\"",
        "\"vectorized\"",
        "\"n1 ~ n2\""
    ],
    "variables": [
        "size",
        "rng",
        "data",
        "data",
        "priors",
        "model",
        "results",
        "mode_n",
        "std_n",
        "mode_a",
        "std_a",
        "data",
        "priors",
        "model",
        "results",
        "samples",
        "mode_n",
        "std_n",
        "mode_a",
        "std_a",
        "model",
        "model"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "data_n100",
        "test_laplace",
        "test_vi",
        "test_logistic_regression_categoric_alternative_samplers",
        "test_regression_alternative_samplers"
    ],
    "classes": []
}