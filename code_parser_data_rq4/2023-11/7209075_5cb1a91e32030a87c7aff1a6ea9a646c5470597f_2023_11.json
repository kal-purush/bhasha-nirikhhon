{
    "identifiers": [
        "dataclasses",
        "dataclass",
        "typing",
        "ClassVar",
        "Mapping",
        "pants",
        "core",
        "goals",
        "fix",
        "Fix",
        "FixFilesRequest",
        "FixResult",
        "pants",
        "core",
        "goals",
        "fmt",
        "Fmt",
        "FmtFilesRequest",
        "FmtResult",
        "pants",
        "core",
        "goals",
        "lint",
        "Lint",
        "LintFilesRequest",
        "LintResult",
        "pants",
        "core",
        "goals",
        "run",
        "RunFieldSet",
        "RunInSandboxRequest",
        "pants",
        "core",
        "util_rules",
        "adhoc_process_support",
        "ExtraSandboxContents",
        "MergeExtraSandboxContents",
        "ResolvedExecutionDependencies",
        "ResolveExecutionDependenciesRequest",
        "pants",
        "core",
        "util_rules",
        "adhoc_process_support",
        "rules",
        "adhoc_process_support_rules",
        "pants",
        "core",
        "util_rules",
        "environments",
        "EnvironmentNameRequest",
        "pants",
        "core",
        "util_rules",
        "partitions",
        "Partitions",
        "pants",
        "engine",
        "addresses",
        "Addresses",
        "pants",
        "engine",
        "environment",
        "EnvironmentName",
        "pants",
        "engine",
        "fs",
        "PathGlobs",
        "pants",
        "engine",
        "goal",
        "Goal",
        "pants",
        "engine",
        "internals",
        "native_engine",
        "EMPTY_DIGEST",
        "Address",
        "AddressInput",
        "Digest",
        "FilespecMatcher",
        "MergeDigests",
        "Snapshot",
        "pants",
        "engine",
        "internals",
        "selectors",
        "Get",
        "MultiGet",
        "pants",
        "engine",
        "process",
        "FallibleProcessResult",
        "Process",
        "pants",
        "engine",
        "rules",
        "Rule",
        "collect_rules",
        "rule",
        "pants",
        "engine",
        "target",
        "COMMON_TARGET_FIELDS",
        "FieldSetsPerTarget",
        "FieldSetsPerTargetRequest",
        "SpecialCasedDependencies",
        "StringField",
        "StringSequenceField",
        "Target",
        "Targets",
        "pants",
        "option",
        "option_types",
        "SkipOption",
        "pants",
        "option",
        "subsystem",
        "Subsystem",
        "pants",
        "util",
        "frozendict",
        "FrozenDict",
        "pants",
        "util",
        "strutil",
        "Simplifier",
        "help_text",
        "StringSequenceField",
        "ClassVar",
        "help_text",
        "StringSequenceField",
        "ClassVar",
        "help_text",
        "StringField",
        "ClassVar",
        "help_text",
        "CodeQualityToolArgumentsField",
        "alias",
        "CodeQualityToolExecutionDependenciesField",
        "alias",
        "StringSequenceField",
        "ClassVar",
        "help_text",
        "CodeQualityToolRunnableField",
        "alias",
        "SpecialCasedDependencies",
        "ClassVar",
        "help_text",
        "SpecialCasedDependencies",
        "ClassVar",
        "help_text",
        "CodeQualityToolExecutionDependenciesField",
        "alias",
        "Target",
        "ClassVar",
        "COMMON_TARGET_FIELDS",
        "CodeQualityToolRunnableField",
        "CodeQualityToolArgumentsField",
        "CodeQualityToolExecutionDependenciesField",
        "CodeQualityToolRunnableDependenciesField",
        "CodeQualityToolFileGlobIncludeField",
        "CodeQualityToolFileGlobExcludeField",
        "help_text",
        "CodeQualityToolTarget",
        "alias",
        "CodeQualityToolRunnableField",
        "alias",
        "CodeQualityToolExecutionDependenciesField",
        "alias",
        "CodeQualityToolFileGlobIncludeField",
        "alias",
        "dataclass",
        "frozen",
        "dataclass",
        "frozen",
        "Target",
        "rule",
        "request",
        "CodeQualityToolAddressString",
        "CodeQualityTool",
        "Get",
        "Address",
        "AddressInput",
        "AddressInput",
        "parse",
        "request",
        "address",
        "description_of_origin",
        "Addresses",
        "tool_address",
        "addresses",
        "expect_single",
        "Get",
        "Targets",
        "Addresses",
        "addresses",
        "tool_targets",
        "target",
        "CodeQualityToolRunnableField",
        "value",
        "runnable_address_str",
        "request",
        "address",
        "CodeQualityTool",
        "runnable_address_str",
        "runnable_address_str",
        "execution_dependencies",
        "target",
        "CodeQualityToolExecutionDependenciesField",
        "value",
        "runnable_dependencies",
        "target",
        "CodeQualityToolRunnableDependenciesField",
        "value",
        "args",
        "target",
        "CodeQualityToolArgumentsField",
        "value",
        "file_glob_include",
        "target",
        "CodeQualityToolFileGlobIncludeField",
        "value",
        "file_glob_exclude",
        "target",
        "CodeQualityToolFileGlobExcludeField",
        "value",
        "target",
        "target",
        "dataclass",
        "frozen",
        "Digest",
        "Mapping",
        "Mapping",
        "Mapping",
        "Digest",
        "dataclass",
        "frozen",
        "CodeQualityToolBatchRunner",
        "Snapshot",
        "rule",
        "batch",
        "CodeQualityToolBatch",
        "FallibleProcessResult",
        "batch",
        "runner",
        "Get",
        "Digest",
        "MergeDigests",
        "runner",
        "digest",
        "batch",
        "sources_snapshot",
        "digest",
        "Get",
        "FallibleProcessResult",
        "Process",
        "argv",
        "runner",
        "args",
        "batch",
        "sources_snapshot",
        "files",
        "description",
        "input_digest",
        "input_digest",
        "append_only_caches",
        "runner",
        "append_only_caches",
        "immutable_input_digests",
        "FrozenDict",
        "frozen",
        "runner",
        "immutable_input_digests",
        "env",
        "FrozenDict",
        "runner",
        "extra_env",
        "output_files",
        "batch",
        "output_files",
        "result",
        "rule",
        "request",
        "CodeQualityToolAddressString",
        "CodeQualityToolBatchRunner",
        "Get",
        "CodeQualityTool",
        "CodeQualityToolAddressString",
        "request",
        "Get",
        "Address",
        "AddressInput",
        "AddressInput",
        "parse",
        "cqt",
        "runnable_address_str",
        "relative_to",
        "cqt",
        "target",
        "address",
        "spec_path",
        "description_of_origin",
        "cqt",
        "target",
        "address",
        "spec_path",
        "Addresses",
        "runnable_address",
        "addresses",
        "expect_single",
        "Get",
        "Targets",
        "Addresses",
        "addresses",
        "runnable_targets",
        "MultiGet",
        "Get",
        "FieldSetsPerTarget",
        "FieldSetsPerTargetRequest",
        "RunFieldSet",
        "runnable_targets",
        "Get",
        "EnvironmentName",
        "EnvironmentNameRequest",
        "EnvironmentNameRequest",
        "from_target",
        "target",
        "Get",
        "ResolvedExecutionDependencies",
        "ResolveExecutionDependenciesRequest",
        "address",
        "runnable_address",
        "execution_dependencies",
        "cqt",
        "execution_dependencies",
        "runnable_dependencies",
        "cqt",
        "runnable_dependencies",
        "RunFieldSet",
        "run_field_sets",
        "field_sets",
        "Get",
        "RunInSandboxRequest",
        "environment_name",
        "EnvironmentName",
        "run_field_set",
        "RunFieldSet",
        "execution_environment",
        "digest",
        "execution_environment",
        "runnable_dependencies",
        "run_request",
        "extra_env",
        "extra_env",
        "pop",
        "extra_sandbox_contents",
        "append",
        "ExtraSandboxContents",
        "EMPTY_DIGEST",
        "extra_path",
        "run_request",
        "immutable_input_digests",
        "FrozenDict",
        "run_request",
        "append_only_caches",
        "FrozenDict",
        "run_request",
        "extra_env",
        "FrozenDict",
        "runnable_dependencies",
        "extra_sandbox_contents",
        "append",
        "ExtraSandboxContents",
        "EMPTY_DIGEST",
        "runnable_dependencies",
        "path_component",
        "runnable_dependencies",
        "immutable_input_digests",
        "runnable_dependencies",
        "append_only_caches",
        "runnable_dependencies",
        "extra_env",
        "MultiGet",
        "Get",
        "ExtraSandboxContents",
        "MergeExtraSandboxContents",
        "extra_sandbox_contents",
        "Get",
        "Digest",
        "MergeDigests",
        "dependencies_digest",
        "run_request",
        "digest",
        "merged_extras",
        "extra_env",
        "merged_extras",
        "path",
        "merged_extras",
        "path",
        "CodeQualityToolBatchRunner",
        "digest",
        "main_digest",
        "args",
        "run_request",
        "args",
        "cqt",
        "args",
        "extra_env",
        "FrozenDict",
        "extra_env",
        "append_only_caches",
        "merged_extras",
        "append_only_caches",
        "immutable_input_digests",
        "merged_extras",
        "immutable_input_digests",
        "g",
        "name",
        "g",
        "g",
        "Lint",
        "Fmt",
        "Fix",
        "dataclass",
        "property",
        "Goal",
        "_name_to_supported_goal",
        "goal",
        "goal",
        "_name_to_supported_goal",
        "CodeQualityToolUnsupportedGoalError",
        "sorted",
        "_name_to_supported_goal",
        "Rule",
        "goal_type",
        "Fmt",
        "_build_fmt_rules",
        "goal_type",
        "Fix",
        "_build_fix_rules",
        "goal_type",
        "Lint",
        "_build_lint_rules",
        "ValueError",
        "goal",
        "Rule",
        "Subsystem",
        "scope",
        "name",
        "goal",
        "capitalize",
        "name",
        "target",
        "SkipOption",
        "LintFilesRequest",
        "CodeQualityToolInstance",
        "rule",
        "canonical_name_suffix",
        "scope",
        "request",
        "CodeQualityProcessingRequest",
        "PartitionRequest",
        "subsystem",
        "CodeQualityToolInstance",
        "Partitions",
        "subsystem",
        "skip",
        "Partitions",
        "Get",
        "CodeQualityTool",
        "CodeQualityToolAddressString",
        "address",
        "target",
        "FilespecMatcher",
        "includes",
        "cqt",
        "file_glob_include",
        "excludes",
        "cqt",
        "file_glob_exclude",
        "matches",
        "request",
        "files",
        "Partitions",
        "single_partition",
        "sorted",
        "matching_filepaths",
        "rule",
        "canonical_name_suffix",
        "scope",
        "request",
        "CodeQualityProcessingRequest",
        "Batch",
        "LintResult",
        "MultiGet",
        "Get",
        "Snapshot",
        "PathGlobs",
        "request",
        "elements",
        "Get",
        "CodeQualityToolBatchRunner",
        "CodeQualityToolAddressString",
        "address",
        "target",
        "Get",
        "FallibleProcessResult",
        "CodeQualityToolBatch",
        "runner",
        "code_quality_tool_runner",
        "sources_snapshot",
        "sources_snapshot",
        "output_files",
        "LintResult",
        "create",
        "request",
        "process_result",
        "proc_result",
        "locals",
        "collect_rules",
        "CodeQualityProcessingRequest",
        "rules",
        "Rule",
        "Subsystem",
        "scope",
        "name",
        "goal",
        "capitalize",
        "name",
        "target",
        "SkipOption",
        "FmtFilesRequest",
        "CodeQualityToolInstance",
        "rule",
        "canonical_name_suffix",
        "scope",
        "request",
        "CodeQualityProcessingRequest",
        "PartitionRequest",
        "subsystem",
        "CodeQualityToolInstance",
        "Partitions",
        "subsystem",
        "skip",
        "Partitions",
        "Get",
        "CodeQualityTool",
        "CodeQualityToolAddressString",
        "address",
        "target",
        "FilespecMatcher",
        "includes",
        "cqt",
        "file_glob_include",
        "excludes",
        "cqt",
        "file_glob_exclude",
        "matches",
        "request",
        "files",
        "Partitions",
        "single_partition",
        "sorted",
        "matching_filepaths",
        "rule",
        "canonical_name_suffix",
        "scope",
        "request",
        "CodeQualityProcessingRequest",
        "Batch",
        "FmtResult",
        "request",
        "snapshot",
        "Get",
        "CodeQualityToolBatchRunner",
        "CodeQualityToolAddressString",
        "address",
        "target",
        "Get",
        "FallibleProcessResult",
        "CodeQualityToolBatch",
        "runner",
        "code_quality_tool_runner",
        "sources_snapshot",
        "sources_snapshot",
        "output_files",
        "request",
        "files",
        "Get",
        "Snapshot",
        "Digest",
        "proc_result",
        "output_digest",
        "FmtResult",
        "input",
        "request",
        "snapshot",
        "output",
        "output",
        "stdout",
        "Simplifier",
        "simplify",
        "proc_result",
        "stdout",
        "stderr",
        "Simplifier",
        "simplify",
        "proc_result",
        "stderr",
        "tool_name",
        "request",
        "tool_name",
        "locals",
        "collect_rules",
        "CodeQualityProcessingRequest",
        "rules",
        "Rule",
        "Subsystem",
        "scope",
        "name",
        "goal",
        "capitalize",
        "name",
        "target",
        "SkipOption",
        "FixFilesRequest",
        "CodeQualityToolInstance",
        "rule",
        "canonical_name_suffix",
        "scope",
        "request",
        "CodeQualityProcessingRequest",
        "PartitionRequest",
        "subsystem",
        "CodeQualityToolInstance",
        "Partitions",
        "subsystem",
        "skip",
        "Partitions",
        "Get",
        "CodeQualityTool",
        "CodeQualityToolAddressString",
        "address",
        "target",
        "FilespecMatcher",
        "includes",
        "cqt",
        "file_glob_include",
        "excludes",
        "cqt",
        "file_glob_exclude",
        "matches",
        "request",
        "files",
        "Partitions",
        "single_partition",
        "sorted",
        "matching_filepaths",
        "rule",
        "canonical_name_suffix",
        "scope",
        "request",
        "CodeQualityProcessingRequest",
        "Batch",
        "FixResult",
        "request",
        "snapshot",
        "Get",
        "CodeQualityToolBatchRunner",
        "CodeQualityToolAddressString",
        "address",
        "target",
        "Get",
        "FallibleProcessResult",
        "CodeQualityToolBatch",
        "runner",
        "code_quality_tool_runner",
        "sources_snapshot",
        "sources_snapshot",
        "output_files",
        "request",
        "files",
        "Get",
        "Snapshot",
        "Digest",
        "proc_result",
        "output_digest",
        "FixResult",
        "input",
        "request",
        "snapshot",
        "output",
        "output",
        "stdout",
        "Simplifier",
        "simplify",
        "proc_result",
        "stdout",
        "stderr",
        "Simplifier",
        "simplify",
        "proc_result",
        "stderr",
        "tool_name",
        "request",
        "tool_name",
        "locals",
        "collect_rules",
        "CodeQualityProcessingRequest",
        "rules",
        "collect_rules",
        "adhoc_process_support_rules"
    ],
    "literals": [
        "\"file_glob_include\"",
        "\"file_glob_exclude\"",
        "\"runnable\"",
        "f\"\"\"\n        Address to a target that can be invoked by the `run` goal (and does not set\n        `run_in_sandbox_behavior=NOT_SUPPORTED`). This will be executed along with any arguments\n        specified by `{CodeQualityToolArgumentsField.alias}`, in a sandbox with that target's transitive\n        dependencies, along with the transitive dependencies specified by\n        `{CodeQualityToolExecutionDependenciesField.alias}`.\n        \"\"\"",
        "\"args\"",
        "f\"\"\"\n        Extra arguments to pass into the `{CodeQualityToolRunnableField.alias}` field\n        before the list of source files\n        \"\"\"",
        "\"execution_dependencies\"",
        "\"runnable_dependencies\"",
        "f\"\"\"\n        The runnable dependencies for this command.\n\n        Dependencies specified here are those required to exist on the `PATH` to make the command\n        complete successfully (interpreters specified in a `#!` command, etc). Note that these\n        dependencies will be made available on the `PATH` with the name of the target.\n\n        See also `{CodeQualityToolExecutionDependenciesField.alias}`.\n        \"\"\"",
        "\"code_quality_tool\"",
        "f\"\"\"\n        Configure a runnable to use as a linter, fixer or formatter\n\n        Example BUILD file:\n\n            {CodeQualityToolTarget.alias}(\n                {CodeQualityToolRunnableField.alias}=\":flake8_req\",\n                {CodeQualityToolExecutionDependenciesField.alias}=[\":config_file\"],\n                {CodeQualityToolFileGlobIncludeField.alias}=[\"**/*.py\"],\n            )\n        \"\"\"",
        "\"code quality tool target\"",
        "f\"Must supply a value for `runnable` for {request.address}.\"",
        "\"Running code quality tool\"",
        "f\"Runnable target for code quality tool {cqt.target.address.spec_path}\"",
        "\"PATH\"",
        "f\"{{chroot}}/{runnable_dependencies.path_component}\"",
        "\"PATH\"",
        "f\"\"\"goal must be one of {sorted(_name_to_supported_goal)}\"\"\"",
        "f\"Unsupported goal for code quality tool: {self.goal}\"",
        "f\"{self.goal.capitalize()} with {self.name}. Tool defined in {self.target}\"",
        "\"lint\"",
        "f\"{self.goal.capitalize()} with {self.name}. Tool defined in {self.target}\"",
        "\"lint\"",
        "\"fmt\"",
        "f\"{self.goal.capitalize()} with {self.name}. Tool defined in {self.target}\"",
        "\"lint\"",
        "\"fmt\"",
        "\"fix\""
    ],
    "variables": [
        "alias",
        "required",
        "help",
        "alias",
        "required",
        "help",
        "alias",
        "required",
        "help",
        "alias",
        "help",
        "alias",
        "required",
        "help",
        "alias",
        "required",
        "help",
        "alias",
        "core_fields",
        "help",
        "address",
        "runnable_address_str",
        "args",
        "execution_dependencies",
        "runnable_dependencies",
        "file_glob_include",
        "file_glob_exclude",
        "target",
        "tool_address",
        "addresses",
        "tool_targets",
        "target",
        "runnable_address_str",
        "digest",
        "args",
        "extra_env",
        "append_only_caches",
        "immutable_input_digests",
        "runner",
        "sources_snapshot",
        "output_files",
        "runner",
        "input_digest",
        "result",
        "cqt",
        "runnable_address",
        "addresses",
        "runnable_targets",
        "target",
        "run_field_sets",
        "environment_name",
        "execution_environment",
        "run_field_set",
        "run_request",
        "dependencies_digest",
        "runnable_dependencies",
        "extra_env",
        "extra_path",
        "extra_sandbox_contents",
        "merged_extras",
        "main_digest",
        "extra_env",
        "extra_env",
        "_name_to_supported_goal",
        "goal",
        "target",
        "name",
        "scope",
        "options_scope",
        "name",
        "help",
        "skip",
        "tool_subsystem",
        "cqt",
        "matching_filepaths",
        "sources_snapshot",
        "code_quality_tool_runner",
        "proc_result",
        "options_scope",
        "name",
        "help",
        "skip",
        "tool_subsystem",
        "cqt",
        "matching_filepaths",
        "sources_snapshot",
        "code_quality_tool_runner",
        "proc_result",
        "output",
        "options_scope",
        "name",
        "help",
        "skip",
        "tool_subsystem",
        "cqt",
        "matching_filepaths",
        "sources_snapshot",
        "code_quality_tool_runner",
        "proc_result",
        "output"
    ],
    "comments": [
        "Copyright 2023 Pants project contributors (see CONTRIBUTORS.md).",
        "Licensed under the Apache License, Version 2.0 (see LICENSE)."
    ],
    "docstrings": [
        "\"\"\"\n        Globs that identify files that can be processed by this tool\n\n        A file matching any of the supplied globs is eligible for processing.\n        Example: [\"**/*.py\"]\n        \"\"\"",
        "\"\"\"\n        Globs matching files that should not be processed by this tool\n        \"\"\"",
        "\"\"\"\n        Additional dependencies that need to be available when running the tool.\n        Typically used to point to config files.\n        \"\"\"",
        "\"\"\"Raised when a rule builder is instantiated for an unrecognized or unsupported goal.\"\"\""
    ],
    "functions": [
        "find_code_quality_tool",
        "process_files",
        "hydrate_code_quality_tool",
        "goal_type",
        "__post_init__",
        "rules",
        "_build_lint_rules",
        "partition_inputs",
        "run_code_quality",
        "_build_fmt_rules",
        "partition_inputs",
        "run_code_quality",
        "_build_fix_rules",
        "partition_inputs",
        "run_code_quality",
        "base_rules"
    ],
    "classes": [
        "CodeQualityToolFileGlobIncludeField",
        "CodeQualityToolFileGlobExcludeField",
        "CodeQualityToolRunnableField",
        "CodeQualityToolArgumentsField",
        "CodeQualityToolExecutionDependenciesField",
        "CodeQualityToolRunnableDependenciesField",
        "CodeQualityToolTarget",
        "CodeQualityToolAddressString",
        "CodeQualityTool",
        "CodeQualityToolBatchRunner",
        "CodeQualityToolBatch",
        "CodeQualityToolUnsupportedGoalError",
        "CodeQualityToolRuleBuilder",
        "CodeQualityToolInstance",
        "CodeQualityProcessingRequest",
        "CodeQualityToolInstance",
        "CodeQualityProcessingRequest",
        "CodeQualityToolInstance",
        "CodeQualityProcessingRequest"
    ]
}