{
    "identifiers": [
        "IO",
        "Text",
        "Threading",
        "Tasks",
        "StandardAnchorTags",
        "GrammarHeaders",
        "LexicalHeader",
        "SyntacticHeader",
        "UnsafeExtensionsHeader",
        "GrammarFooter",
        "GrammarHeaders",
        "pathToStandard",
        "grammarFile",
        "GrammarHeaders",
        "StringBuilder",
        "StreamReader",
        "Path",
        "Combine",
        "pathToStandard",
        "grammarFile",
        "reader",
        "ReadLineAsync",
        "inputLine",
        "headerBuffer",
        "AppendLine",
        "inputLine",
        "inputLine",
        "StartsWith",
        "IsNullOrWhiteSpace",
        "headers",
        "LexicalHeader",
        "headers",
        "headers",
        "LexicalHeader",
        "headerBuffer",
        "ToString",
        "IsNullOrWhiteSpace",
        "headers",
        "SyntacticHeader",
        "headers",
        "headers",
        "SyntacticHeader",
        "headerBuffer",
        "ToString",
        "IsNullOrWhiteSpace",
        "headers",
        "UnsafeExtensionsHeader",
        "headers",
        "headers",
        "UnsafeExtensionsHeader",
        "headerBuffer",
        "ToString",
        "inputLine",
        "StartsWith",
        "headerBuffer",
        "Clear",
        "headerBuffer",
        "AppendLine",
        "inputLine",
        "headers",
        "headers",
        "GrammarFooter",
        "headerBuffer",
        "ToString",
        "reader",
        "Close",
        "headers",
        "grammarPath",
        "pathToStandardFiles",
        "GrammarHeaders",
        "headers",
        "grammarStream",
        "StreamWriter",
        "Path",
        "Combine",
        "pathToStandardFiles",
        "grammarPath",
        "pathToStandardFiles",
        "pathToStandardFiles",
        "informativeTextBlocks",
        "headers",
        "grammarStream",
        "WriteAsync",
        "informativeTextBlocks",
        "LexicalHeader",
        "grammarStream",
        "WriteAsync",
        "informativeTextBlocks",
        "SyntacticHeader",
        "grammarStream",
        "WriteAsync",
        "informativeTextBlocks",
        "UnsafeExtensionsHeader",
        "grammarStream",
        "WriteAsync",
        "informativeTextBlocks",
        "GrammarFooter",
        "grammarStream",
        "FlushAsync",
        "grammarStream",
        "Close",
        "inputFileName",
        "pathToStandardFiles",
        "inputFileName",
        "StreamReader",
        "inputFilePath",
        "OutputEncoding",
        "Encoding",
        "UTF8",
        "inputFile",
        "ReadLineAsync",
        "inputLine",
        "inProduction",
        "inputLine",
        "StartsWith",
        "inProduction",
        "grammarStream",
        "WriteLineAsync",
        "inputLine",
        "inputLine",
        "StartsWith",
        "section",
        "inputLine",
        "Trim",
        "inputLine",
        "StartsWith",
        "StringComparison",
        "InvariantCultureIgnoreCase",
        "grammarStream",
        "WriteLineAsync",
        "grammarStream",
        "WriteLineAsync",
        "section",
        "inProduction",
        "grammarStream",
        "Dispose"
    ],
    "literals": [
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"```ANTLR\"",
        "\"```\"",
        "\"\"",
        "\"```\"",
        "\"#\"",
        "\"```ANTLR\""
    ],
    "variables": [
        "GrammarHeaders",
        "headers",
        "StringBuilder",
        "headerBuffer",
        "reader",
        "GrammarHeaders",
        "informativeTextBlocks",
        "pathToStandardFiles",
        "StreamWriter",
        "grammarStream",
        "inputFilePath",
        "inputFile",
        "section",
        "inProduction"
    ],
    "comments": [
        "Put the closing tag back:",
        "write out blank line before each new production"
    ],
    "docstrings": [],
    "functions": [
        "ReadExistingHeaders",
        "GenerateGrammar",
        "WriteHeader",
        "WriteSyntaxHeader",
        "WriteUnsafeExtensionHeader",
        "WriteGrammarFooter",
        "ExtractGrammarFrom",
        "Dispose"
    ],
    "classes": [
        "GenerateGrammar"
    ]
}