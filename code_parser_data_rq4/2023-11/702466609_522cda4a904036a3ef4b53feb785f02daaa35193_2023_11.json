{
    "identifiers": [
        "numpy",
        "np",
        "pandas",
        "pd",
        "neuralprophet",
        "NeuralProphet",
        "pd",
        "read_csv",
        "iea_data",
        "iea_data",
        "isin",
        "iea_data",
        "solar_filter",
        "country_filter",
        "pd",
        "to_datetime",
        "data",
        "format",
        "data",
        "sort_values",
        "by",
        "ascending",
        "data",
        "loc",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "NLdata",
        "rename",
        "columns",
        "BEdata",
        "rename",
        "columns",
        "LUXdata",
        "rename",
        "columns",
        "pd",
        "concat",
        "NLdatamin",
        "BEdatamin",
        "groupby",
        "sum",
        "numeric_only",
        "reset_index",
        "pd",
        "concat",
        "BENE",
        "LUXdatamin",
        "groupby",
        "sum",
        "numeric_only",
        "reset_index",
        "NeuralProphet",
        "mBENELUX",
        "fit",
        "BENELUXdatamin",
        "freq",
        "mBENELUX",
        "make_future_dataframe",
        "BENELUXdatamin",
        "n_historic_predictions",
        "periods",
        "mBENELUX",
        "predict",
        "df_futureBENELUX",
        "BENELUXforecast",
        "drop",
        "columns",
        "inplace",
        "errors",
        "BENELUXforecast",
        "rename",
        "columns",
        "inplace",
        "BENELUXdatamin",
        "reset_index",
        "drop",
        "inplace",
        "BENELUXforecast",
        "reset_index",
        "drop",
        "inplace",
        "pd",
        "concat",
        "BENELUXdatamin",
        "BENELUXforecast",
        "ignore_index",
        "BeneluxPred",
        "predictions",
        "predictions_df",
        "to_csv",
        "index"
    ],
    "literals": [
        "\"DSS_Datasets_GHG_Solar_iea_data.csv\"",
        "\"Product\"",
        "\"Solar\"",
        "\"Country\"",
        "\"Netherlands\"",
        "\"Belgium\"",
        "\"Luxembourg\"",
        "\"Time\"",
        "\"Time\"",
        "\"%B %Y\"",
        "\"Time\"",
        "\"Time\"",
        "\"2017-01-01\"",
        "\"Country\"",
        "\"Netherlands\"",
        "\"Country\"",
        "\"Belgium\"",
        "\"Country\"",
        "\"Luxembourg\"",
        "\"Time\"",
        "\"ds\"",
        "\"Value\"",
        "\"y\"",
        "\"Time\"",
        "\"ds\"",
        "\"Value\"",
        "\"y\"",
        "\"Time\"",
        "\"ds\"",
        "\"Value\"",
        "\"y\"",
        "\"ds\"",
        "\"ds\"",
        "\"D\"",
        "\"y\"",
        "\"ignore\"",
        "\"yhat1\"",
        "\"y\"",
        "\"/usr/src/app/output/predictions.csv\""
    ],
    "variables": [
        "iea_data",
        "solar_filter",
        "country_filter",
        "data",
        "data",
        "data",
        "data",
        "NLdata",
        "BEdata",
        "LUXdata",
        "NLdatamin",
        "BEdatamin",
        "LUXdatamin",
        "BENE",
        "BENELUXdatamin",
        "mBENELUX",
        "df_futureBENELUX",
        "BENELUXforecast",
        "BeneluxPred",
        "predictions_df"
    ],
    "comments": [
        "Read in the initial dataset",
        "Filter data for solar product in selected countries",
        "Convert Time to datetime and sort",
        "Separate data by country",
        "Rename columns",
        "Combine and sum data",
        "Model fitting",
        "Predict future data",
        "Drop the redundant 'y' column and rename 'yhat1'",
        "Reset indices",
        "Concatenate the original data with the forecast",
        "Call the function and print the result"
    ],
    "docstrings": [],
    "functions": [
        "predictions"
    ],
    "classes": []
}