{
    "identifiers": [
        "time",
        "numpy",
        "np",
        "optimum",
        "neuron",
        "NeuronStableDiffusionXLPipeline",
        "os",
        "PIL",
        "Image",
        "boto3",
        "json",
        "requests",
        "random",
        "requests",
        "get",
        "content",
        "decode",
        "boto3",
        "client",
        "region_name",
        "REGION",
        "ssm",
        "get_parameter",
        "Name",
        "boto3",
        "client",
        "region_name",
        "REGION",
        "queue_url",
        "time_wait",
        "SQS",
        "receive_message",
        "QueueUrl",
        "queue_url",
        "AttributeNames",
        "MaxNumberOfMessages",
        "MessageAttributeNames",
        "WaitTimeSeconds",
        "time_wait",
        "response",
        "KeyError",
        "message",
        "message",
        "receipt_handle",
        "queue_url",
        "receipt_handle",
        "prompt",
        "SQS",
        "delete_message",
        "QueueUrl",
        "queue_url",
        "ReceiptHandle",
        "receipt_handle",
        "prompt",
        "message",
        "json",
        "loads",
        "message",
        "item",
        "body",
        "body",
        "item",
        "cleaned_message",
        "r",
        "r",
        "ok",
        "r",
        "text",
        "application_id",
        "interaction_token",
        "file_path",
        "application_id",
        "interaction_token",
        "open",
        "file_path",
        "requests",
        "patch",
        "url",
        "files",
        "files",
        "validateRequest",
        "r",
        "file_path",
        "message_dict",
        "message_response",
        "message_dict",
        "message_dict",
        "message_response",
        "requests",
        "patch",
        "url",
        "json",
        "json_payload",
        "validateRequest",
        "r",
        "open",
        "file_path",
        "requests",
        "patch",
        "url",
        "json",
        "json_payload",
        "files",
        "files",
        "validateRequest",
        "r",
        "r",
        "ok",
        "customer_data",
        "internal_var",
        "readable",
        "readable_dict",
        "items",
        "internal_var",
        "customer_data",
        "message_response",
        "readable",
        "customer_data",
        "internal_var",
        "message_response",
        "application_id",
        "interaction_token",
        "message_response",
        "application_id",
        "interaction_token",
        "message_response",
        "requests",
        "patch",
        "url",
        "json",
        "json_payload",
        "validateRequest",
        "r",
        "r",
        "ok",
        "path_to_file",
        "os",
        "remove",
        "path_to_file",
        "imgs",
        "rows",
        "cols",
        "len",
        "imgs",
        "rows",
        "cols",
        "imgs",
        "size",
        "Image",
        "size",
        "cols",
        "w",
        "rows",
        "h",
        "i",
        "img",
        "imgs",
        "grid",
        "paste",
        "img",
        "box",
        "i",
        "cols",
        "w",
        "i",
        "cols",
        "h",
        "grid",
        "pipe",
        "user_inputs",
        "user_inputs",
        "i",
        "time",
        "time",
        "pipe",
        "prompt",
        "user_prompts",
        "num_inference_steps",
        "user_inputs",
        "guidance_scale",
        "negative_prompt",
        "user_inputs",
        "images",
        "time",
        "time",
        "start_time",
        "np",
        "round",
        "inf_time",
        "len",
        "dev_images",
        "image_num",
        "len",
        "dev_images",
        "image_list",
        "append",
        "dev_images",
        "image_num",
        "image_list",
        "image_list",
        "image_grid",
        "image_list",
        "my_grid",
        "save",
        "format",
        "user_dict",
        "random",
        "randint",
        "internal_var",
        "default_dict",
        "items",
        "internal_var",
        "user_dict",
        "user_dict",
        "TEST",
        "WAIT_TIME_SECONDS",
        "NeuronStableDiffusionXLPipeline",
        "from_pretrained",
        "repo_id",
        "getSQSMessage",
        "QUEUE_URL",
        "WAIT_TIME_SECONDS",
        "message",
        "message",
        "getSQSMessage",
        "QUEUE_URL",
        "queue_long_poll",
        "message",
        "convertMessageToDict",
        "message",
        "decideInputs",
        "message_dict",
        "messageResponse",
        "message_dict",
        "message_response",
        "submitInitialResponse",
        "message_dict",
        "message_dict",
        "message_response",
        "successful_init_response",
        "runStableDiffusion",
        "pipe",
        "message_dict",
        "saveImage",
        "image_list",
        "picturesToDiscord",
        "file_path",
        "message_dict",
        "message_response",
        "cleanupPictures",
        "file_path",
        "successful_upload",
        "deleteSQSMessage",
        "QUEUE_URL",
        "receipt_handle",
        "message_dict",
        "runMain"
    ],
    "literals": [
        "'http://169.254.169.254/latest/meta-data/placement/region'",
        "\"utf-8\"",
        "'ssm'",
        "'/discord_diffusion/SQS_QUEUE'",
        "'Parameter'",
        "'Value'",
        "'sqs'",
        "'SentTimestamp'",
        "'All'",
        "'Messages'",
        "'ReceiptHandle'",
        "f'Received and deleted message: \"{prompt}\"'",
        "'Body'",
        "'StringValue'",
        "\"Failure\"",
        "\"Success\"",
        "f'https://discord.com/api/v10/webhooks/{application_id}/{interaction_token}/messages/@original'",
        "'stable-diffusion.png'",
        "'rb'",
        "f\"https://discord.com/api/v10/webhooks/{message_dict['applicationId']}/{message_dict['interactionToken']}/messages/@original\"",
        "'applicationId'",
        "'interactionToken'",
        "\"content\"",
        "f\"*Completed your Sparkle!*```{message_response}```\"",
        "\"embeds\"",
        "\"attachments\"",
        "\"allowed_mentions\"",
        "\"parse\"",
        "'stable-diffusion.png'",
        "'rb'",
        "''",
        "'prompt'",
        "'Prompt'",
        "'negative_prompt'",
        "'Negative Prompt'",
        "'seed'",
        "'Seed'",
        "'steps'",
        "'Steps'",
        "'model'",
        "'Model'",
        "f\"{readable}: {customer_data[internal_var]}\\n\"",
        "f'https://discord.com/api/v10/webhooks/{application_id}/{interaction_token}/messages/@original'",
        "\"content\"",
        "f\"Processing your Sparkle```{message_response}```\"",
        "\"embeds\"",
        "\"attachments\"",
        "\"allowed_mentions\"",
        "\"parse\"",
        "'RGB'",
        "'prompt'",
        "'steps'",
        "'negative_prompt'",
        "f\"[Inference Time per image] {np.round(inf_time, 2) / len(dev_images)} seconds.\"",
        "'tmp.png'",
        "\"Png\"",
        "'tmp.png'",
        "'seed'",
        "'steps'",
        "'negative_prompt'",
        "\"\"",
        "'model'",
        "\"Jingya/lcm-sdxl-neuronx\"",
        "'seed'",
        "\"20\"",
        "'prompt'",
        "'an oil painting of a chocolate cake, amazing photography, creative, marble table'",
        "'steps'",
        "'4'",
        "\"Jingya/lcm-sdxl-neuronx\"",
        "\"Waiting for next message from Queue...\"",
        "\"Found a message! Running Stable Diffusion\"",
        "'applicationId'",
        "'interactionToken'",
        "'prompt'",
        "\"__main__\""
    ],
    "variables": [
        "TEST",
        "REGION",
        "ssm",
        "QUEUE_URL",
        "SQS",
        "WAIT_TIME_SECONDS",
        "response",
        "message",
        "receipt_handle",
        "cleaned_message",
        "body",
        "cleaned_message",
        "item",
        "url",
        "files",
        "r",
        "url",
        "json_payload",
        "r",
        "files",
        "r",
        "message_response",
        "readable_dict",
        "url",
        "json_payload",
        "r",
        "w",
        "h",
        "grid",
        "image_list",
        "user_prompts",
        "start_time",
        "dev_images",
        "inf_time",
        "my_grid",
        "default_dict",
        "user_dict",
        "internal_var",
        "message_dict",
        "queue_long_poll",
        "repo_id",
        "pipe",
        "message",
        "receipt_handle",
        "message",
        "receipt_handle",
        "message_dict",
        "message_dict",
        "message_response",
        "successful_init_response",
        "image_list",
        "file_path",
        "successful_upload"
    ],
    "comments": [
        "Image Manipulation",
        "Cloud Requirements",
        "Create SQS client",
        "SQS Functions ###",
        "Receive message from SQS queue",
        "Delete received message from queue",
        "print(item)",
        "raise Exception(r.text)",
        "Discord required functions ###",
        "Posts a follow up picture back to user on Discord",
        "Initial Response is words.",
        "Upload a picture",
        "Make the customer request readable",
        "'sampler': 'Sampler',",
        "Posts a follow up picture back to user on Discord",
        "Clean up file(s) created during creation.",
        "Stable Diffusion functions ###",
        "Run Stable Diffusion and create images in a grid.",
        "Load SDXL into memory",
        "Get Message from Queue",
        "Wait for new message or timeout and exit",
        "Run stable Diffusion",
        "Delete Message"
    ],
    "docstrings": [],
    "functions": [
        "getSQSMessage",
        "deleteSQSMessage",
        "convertMessageToDict",
        "validateRequest",
        "updateDiscordPicture",
        "picturesToDiscord",
        "messageResponse",
        "submitInitialResponse",
        "cleanupPictures",
        "image_grid",
        "runStableDiffusion",
        "saveImage",
        "decideInputs",
        "runMain"
    ],
    "classes": []
}