{
    "identifiers": [
        "org",
        "lab4",
        "org",
        "neo4j",
        "driver",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Random",
        "driver",
        "random",
        "uri",
        "user",
        "password",
        "driver",
        "GraphDatabase",
        "driver",
        "uri",
        "AuthTokens",
        "basic",
        "user",
        "password",
        "driver",
        "close",
        "session",
        "driver",
        "session",
        "session",
        "writeTransaction",
        "tx",
        "tx",
        "run",
        "numberOfCustomers",
        "numberOfItems",
        "numberOfOrders",
        "session",
        "driver",
        "session",
        "i",
        "i",
        "numberOfItems",
        "i",
        "cost",
        "random",
        "nextInt",
        "itemName",
        "i",
        "session",
        "writeTransaction",
        "tx",
        "tx",
        "run",
        "java",
        "util",
        "of",
        "itemName",
        "cost",
        "i",
        "i",
        "numberOfCustomers",
        "i",
        "customerName",
        "i",
        "session",
        "writeTransaction",
        "tx",
        "tx",
        "run",
        "java",
        "util",
        "of",
        "customerName",
        "j",
        "j",
        "numberOfOrders",
        "j",
        "orderName",
        "i",
        "j",
        "session",
        "writeTransaction",
        "tx",
        "tx",
        "run",
        "java",
        "util",
        "of",
        "customerName",
        "orderName",
        "itemsPerOrder",
        "random",
        "nextInt",
        "k",
        "k",
        "itemsPerOrder",
        "k",
        "session",
        "writeTransaction",
        "tx",
        "tx",
        "run",
        "java",
        "util",
        "of",
        "orderName",
        "i",
        "i",
        "numberOfCustomers",
        "i",
        "session",
        "writeTransaction",
        "tx",
        "tx",
        "run",
        "customerId",
        "session",
        "driver",
        "session",
        "session",
        "readTransaction",
        "tx",
        "result",
        "tx",
        "run",
        "java",
        "util",
        "of",
        "customerId",
        "result",
        "record",
        "record",
        "get",
        "asMap",
        "orderId",
        "session",
        "driver",
        "session",
        "session",
        "readTransaction",
        "tx",
        "result",
        "tx",
        "run",
        "java",
        "util",
        "of",
        "orderId",
        "result",
        "record",
        "record",
        "get",
        "asMap",
        "orderId",
        "session",
        "driver",
        "session",
        "session",
        "readTransaction",
        "tx",
        "result",
        "tx",
        "run",
        "java",
        "util",
        "of",
        "orderId",
        "result",
        "single",
        "get",
        "asInt",
        "customerId",
        "session",
        "driver",
        "session",
        "session",
        "readTransaction",
        "tx",
        "result",
        "tx",
        "run",
        "java",
        "util",
        "of",
        "customerId",
        "result",
        "record",
        "record",
        "get",
        "asMap",
        "customerId",
        "session",
        "driver",
        "session",
        "session",
        "readTransaction",
        "tx",
        "result",
        "tx",
        "run",
        "java",
        "util",
        "of",
        "customerId",
        "result",
        "single",
        "get",
        "asInt",
        "customerId",
        "session",
        "driver",
        "session",
        "session",
        "readTransaction",
        "tx",
        "result",
        "tx",
        "run",
        "java",
        "util",
        "of",
        "customerId",
        "result",
        "single",
        "get",
        "asInt",
        "session",
        "driver",
        "session",
        "session",
        "readTransaction",
        "tx",
        "result",
        "tx",
        "run",
        "result",
        "record",
        "itemAndCount",
        "itemAndCount",
        "put",
        "record",
        "get",
        "asMap",
        "itemAndCount",
        "put",
        "record",
        "get",
        "asInt",
        "itemAndCount",
        "customerId",
        "session",
        "driver",
        "session",
        "session",
        "readTransaction",
        "tx",
        "result",
        "tx",
        "run",
        "java",
        "util",
        "of",
        "customerId",
        "result",
        "record",
        "record",
        "get",
        "asMap",
        "itemId",
        "session",
        "driver",
        "session",
        "session",
        "readTransaction",
        "tx",
        "result",
        "tx",
        "run",
        "java",
        "util",
        "of",
        "itemId",
        "result",
        "record",
        "record",
        "get",
        "asMap",
        "itemId",
        "session",
        "driver",
        "session",
        "session",
        "readTransaction",
        "tx",
        "result",
        "tx",
        "run",
        "java",
        "util",
        "of",
        "itemId",
        "result",
        "record",
        "record",
        "get",
        "asMap",
        "customerId",
        "session",
        "driver",
        "session",
        "session",
        "readTransaction",
        "tx",
        "result",
        "tx",
        "run",
        "java",
        "util",
        "of",
        "customerId",
        "result",
        "record",
        "record",
        "get",
        "asMap",
        "args",
        "app",
        "exampleOrderId",
        "itemsInOrder",
        "app",
        "findItemsInOrder",
        "exampleOrderId",
        "printLimitedList",
        "itemsInOrder",
        "exampleOrderId",
        "orderCost",
        "app",
        "calculateOrderCost",
        "exampleOrderId",
        "exampleOrderId",
        "orderCost",
        "exampleCustomerId",
        "allOrdersByCustomer",
        "app",
        "findAllOrdersByCustomer",
        "exampleCustomerId",
        "printLimitedList",
        "allOrdersByCustomer",
        "exampleCustomerId",
        "itemsBoughtByCustomer",
        "app",
        "findItemsBoughtByCustomer",
        "exampleCustomerId",
        "printLimitedList",
        "itemsBoughtByCustomer",
        "exampleCustomerId",
        "itemCount",
        "app",
        "countItemsBoughtByCustomer",
        "exampleCustomerId",
        "exampleCustomerId",
        "itemCount",
        "totalSpent",
        "app",
        "findTotalCostForCustomer",
        "exampleCustomerId",
        "exampleCustomerId",
        "totalSpent",
        "itemCountAndSort",
        "app",
        "findItemCountAndSort",
        "printLimitedList",
        "itemCountAndSort",
        "itemsViewedByCustomer",
        "app",
        "findItemsViewedByCustomer",
        "exampleCustomerId",
        "printLimitedList",
        "itemsViewedByCustomer",
        "exampleCustomerId",
        "exampleItemId",
        "itemsBoughtWithItem",
        "app",
        "findItemsBoughtWithItem",
        "exampleItemId",
        "printLimitedList",
        "itemsBoughtWithItem",
        "exampleItemId",
        "customersWhoBoughtItem",
        "app",
        "findCustomersWhoBoughtItem",
        "exampleItemId",
        "printLimitedList",
        "customersWhoBoughtItem",
        "exampleItemId",
        "viewedButNotBoughtItems",
        "app",
        "findViewedButNotBoughtItems",
        "exampleCustomerId",
        "printLimitedList",
        "viewedButNotBoughtItems",
        "exampleCustomerId",
        "app",
        "close",
        "title",
        "title",
        "size",
        "size",
        "limit",
        "i",
        "i",
        "min",
        "limit",
        "size",
        "i",
        "get",
        "i",
        "size",
        "limit",
        "i",
        "max",
        "size",
        "limit",
        "limit",
        "i",
        "size",
        "i",
        "get",
        "i"
    ],
    "literals": [
        "\"MATCH (n) DETACH DELETE n\"",
        "\"Product\"",
        "\"CREATE (:Item {name: $name, cost: $cost})\"",
        "\"name\"",
        "\"cost\"",
        "\"Customer\"",
        "\"CREATE (:Customer {name: $name})\"",
        "\"name\"",
        "\"Order\"",
        "\"_\"",
        "\"MATCH (c:Customer {name: $customerName}) \"",
        "\"CREATE (c)-[:MADE]->(:Order {name: $orderName})\"",
        "\"customerName\"",
        "\"orderName\"",
        "\"MATCH (o:Order {name: $orderName}), (i:Item) \"",
        "\"WITH o, i, rand() AS r ORDER BY r LIMIT 1 \"",
        "\"CREATE (o)-[:INCLUDES]->(i)\"",
        "\"orderName\"",
        "\"MATCH (c:Customer), (i:Item) \"",
        "\"WITH c, i, rand() AS r WHERE r < 0.5 \"",
        "\"CREATE (c)-[:VIEWED]->(i)\"",
        "\"MATCH (c:Customer)-[:MADE]->(o:Order) WHERE id(c) = $customerId \"",
        "\"RETURN o\"",
        "\"customerId\"",
        "\"o\"",
        "\"MATCH (o:Order)-[:INCLUDES]->(i:Item) WHERE id(o) = $orderId \"",
        "\"RETURN i\"",
        "\"orderId\"",
        "\"i\"",
        "\"MATCH (o:Order)-[:INCLUDES]->(i:Item) WHERE id(o) = $orderId \"",
        "\"RETURN sum(i.cost) AS totalCost\"",
        "\"orderId\"",
        "\"totalCost\"",
        "\"MATCH (c:Customer)-[:MADE]->(:Order)-[:INCLUDES]->(i:Item) WHERE id(c) = $customerId \"",
        "\"RETURN i\"",
        "\"customerId\"",
        "\"i\"",
        "\"MATCH (c:Customer)-[:MADE]->(:Order)-[:INCLUDES]->(i:Item) WHERE id(c) = $customerId \"",
        "\"RETURN count(i) AS itemCount\"",
        "\"customerId\"",
        "\"itemCount\"",
        "\"MATCH (c:Customer)-[:MADE]->(:Order)-[:INCLUDES]->(i:Item) WHERE id(c) = $customerId \"",
        "\"RETURN sum(i.cost) AS totalSpent\"",
        "\"customerId\"",
        "\"totalSpent\"",
        "\"MATCH (:Order)-[:INCLUDES]->(i:Item) \"",
        "\"RETURN i, count(i) AS purchases ORDER BY purchases DESC\"",
        "\"item\"",
        "\"i\"",
        "\"purchases\"",
        "\"purchases\"",
        "\"MATCH (c:Customer)-[:VIEWED]->(i:Item) WHERE id(c) = $customerId \"",
        "\"RETURN i\"",
        "\"customerId\"",
        "\"i\"",
        "\"MATCH (:Order)-[:INCLUDES]->(i:Item) WHERE id(i) = $itemId \"",
        "\"WITH i MATCH (i)<-[:INCLUDES]-(o:Order)-[:INCLUDES]->(other:Item) \"",
        "\"RETURN DISTINCT other\"",
        "\"itemId\"",
        "\"other\"",
        "\"MATCH (c:Customer)-[:MADE]->(:Order)-[:INCLUDES]->(i:Item) WHERE id(i) = $itemId \"",
        "\"RETURN c\"",
        "\"itemId\"",
        "\"c\"",
        "\"MATCH (c:Customer)-[:VIEWED]->(i:Item) WHERE id(c) = $customerId \"",
        "\"AND NOT (c)-[:MADE]->(:Order)-[:INCLUDES]->(i) \"",
        "\"RETURN i\"",
        "\"customerId\"",
        "\"i\"",
        "\"bolt://localhost:7687\"",
        "\"neo4j\"",
        "\"password\"",
        "\"Finding items in order with ID \"",
        "\"\\nCalculating total cost for order ID \"",
        "\":\\nTotal Cost: \"",
        "\"Finding all orders made by customer with ID \"",
        "\"Finding items bought by customer with ID \"",
        "\"\\nCounting items bought by customer with ID \"",
        "\":\\nItem Count: \"",
        "\"\\nCalculating total cost for customer with ID \"",
        "\":\\nTotal Spent: \"",
        "\"Finding items by purchase count and sorting them\"",
        "\"Finding items viewed by customer with ID \"",
        "\"Finding items bought with item ID \"",
        "\"Finding customers who bought item with ID \"",
        "\"Finding items that were viewed but not bought by customer with ID \"",
        "\"\\n\"",
        "\":\"",
        "\"...\""
    ],
    "variables": [
        "driver"
    ],
    "comments": [
        "deleteAllDataFromDb",
        "generateRandomDatabase",
        "Generate Items",
        "Items cost between 100 and 1100",
        "Generate Customers and Orders",
        "Create Customer",
        "Generate Views",
        "findAllOrdersByCustomer",
        "findItemsInOrder",
        "calculateOrderCost",
        "findItemsBoughtByCustomer",
        "countItemsBoughtByCustomer",
        "findTotalCostForCustomer",
        "findItemCountAndSort",
        "findItemsViewedByCustomer",
        "findItemsBoughtWithItem",
        "findViewedButNotBoughtItems",
        "System.out.println(\"Deleting all data from the database...\");",
        "app.deleteAllDataFromDb();",
        "",
        "System.out.println(\"Generating random database with customers, orders, and items...\");",
        "app.generateRandomDatabase(10, 50, 5);"
    ],
    "docstrings": [],
    "functions": [
        "Neo4jApplication",
        "close",
        "deleteAllDataFromDb",
        "generateRandomDatabase",
        "findAllOrdersByCustomer",
        "findItemsInOrder",
        "calculateOrderCost",
        "findItemsBoughtByCustomer",
        "countItemsBoughtByCustomer",
        "findTotalCostForCustomer",
        "findItemCountAndSort",
        "findItemsViewedByCustomer",
        "findItemsBoughtWithItem",
        "findCustomersWhoBoughtItem",
        "findViewedButNotBoughtItems",
        "main",
        "printLimitedList"
    ],
    "classes": [
        "Neo4jApplication"
    ]
}