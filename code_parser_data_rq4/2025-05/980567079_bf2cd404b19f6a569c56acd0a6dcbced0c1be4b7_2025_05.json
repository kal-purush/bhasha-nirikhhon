{
    "identifiers": [
        "modules",
        "entry",
        "mainEntry",
        "parcelRequireName",
        "externals",
        "distDir",
        "publicUrl",
        "devServer",
        "globalThis",
        "globalThis",
        "globalObject",
        "parcelRequireName",
        "globalObject",
        "parcelRequireName",
        "previousRequire",
        "previousRequire",
        "name",
        "jumped",
        "cache",
        "name",
        "modules",
        "name",
        "externals",
        "name",
        "externals",
        "name",
        "globalObject",
        "parcelRequireName",
        "globalObject",
        "parcelRequireName",
        "jumped",
        "currentRequire",
        "currentRequire",
        "name",
        "previousRequire",
        "previousRequire",
        "name",
        "nodeRequire",
        "name",
        "nodeRequire",
        "name",
        "name",
        "err",
        "err",
        "localRequire",
        "resolve",
        "localRequire",
        "cache",
        "name",
        "newRequire",
        "name",
        "modules",
        "name",
        "localRequire",
        "globalObject",
        "cache",
        "name",
        "x",
        "localRequire",
        "x",
        "res",
        "newRequire",
        "res",
        "x",
        "modules",
        "name",
        "x",
        "id",
        "id",
        "x",
        "moduleName",
        "moduleName",
        "newRequire",
        "nodeRequire",
        "newRequire",
        "newRequire",
        "Module",
        "newRequire",
        "modules",
        "newRequire",
        "cache",
        "newRequire",
        "previousRequire",
        "newRequire",
        "distDir",
        "newRequire",
        "publicUrl",
        "newRequire",
        "devServer",
        "newRequire",
        "importMap",
        "newRequire",
        "id",
        "exports",
        "modules",
        "id",
        "require",
        "exports",
        "newRequire",
        "globalObject",
        "parcelRequireName",
        "globalObject",
        "parcelRequireName",
        "newRequire",
        "i",
        "entry",
        "i",
        "newRequire",
        "entry",
        "i",
        "mainEntry",
        "newRequire",
        "mainEntry",
        "exports",
        "mainExports",
        "define",
        "define",
        "define",
        "mainExports",
        "require",
        "exports",
        "__globalThis",
        "arguments",
        "moduleName",
        "OldModule",
        "moduleName",
        "moduleName",
        "fn",
        "fn",
        "fn",
        "fn",
        "moduleName",
        "Module",
        "HMR_HOST",
        "location",
        "location",
        "location",
        "HMR_PORT",
        "location",
        "location",
        "HMR_SERVER_PORT",
        "globalThis",
        "WebSocket",
        "WebSocket",
        "getHostname",
        "getPort",
        "HMR_SECURE",
        "location",
        "location",
        "hostname",
        "parent",
        "parent",
        "browser",
        "chrome",
        "chrome",
        "browser",
        "eval",
        "err",
        "supportsSourceURL",
        "err",
        "HMR_USE_SSE",
        "ws",
        "EventSource",
        "workerData",
        "workerData",
        "workerData",
        "parentPort",
        "message",
        "handleMessage",
        "message",
        "parentPort",
        "parentPort",
        "queueMicrotask",
        "parentPort",
        "WebSocket",
        "ws",
        "WebSocket",
        "protocol",
        "hostname",
        "port",
        "port",
        "err",
        "err",
        "err",
        "err",
        "ws",
        "ws",
        "handleMessage",
        "data",
        "ws",
        "WebSocket",
        "ws",
        "e",
        "e",
        "e",
        "ws",
        "data",
        "checkedAssets",
        "disposedAssets",
        "assetsToAccept",
        "assetsToDispose",
        "bundleNotFound",
        "data",
        "fullReload",
        "data",
        "removeErrorOverlay",
        "data",
        "assets",
        "asset",
        "asset",
        "asset",
        "hmrAcceptCheck",
        "asset",
        "asset",
        "handled",
        "bundleNotFound",
        "assets",
        "a",
        "a",
        "HMR_ENV_HASH",
        "CustomEvent",
        "handled",
        "CustomEvent",
        "handled",
        "CustomEvent",
        "CustomEvent",
        "hmrApplyUpdates",
        "assets",
        "hmrDisposeQueue",
        "i",
        "assetsToAccept",
        "i",
        "assetsToAccept",
        "i",
        "processedAssets",
        "id",
        "hmrAccept",
        "assetsToAccept",
        "i",
        "id",
        "processedAssets",
        "id",
        "fullReload",
        "data",
        "ansiDiagnostic",
        "data",
        "ansiDiagnostic",
        "ansiDiagnostic",
        "ansiDiagnostic",
        "ansiDiagnostic",
        "stack",
        "ansiDiagnostic",
        "removeErrorOverlay",
        "createErrorOverlay",
        "data",
        "overlay",
        "OVERLAY_ID",
        "overlay",
        "overlay",
        "diagnostics",
        "overlay",
        "OVERLAY_ID",
        "diagnostic",
        "diagnostics",
        "diagnostic",
        "diagnostic",
        "p",
        "frame",
        "p",
        "protocol",
        "hostname",
        "port",
        "encodeURIComponent",
        "frame",
        "frame",
        "frame",
        "diagnostic",
        "errorHTML",
        "diagnostic",
        "stack",
        "diagnostic",
        "hint",
        "hint",
        "diagnostic",
        "diagnostic",
        "errorHTML",
        "overlay",
        "errorHTML",
        "overlay",
        "location",
        "location",
        "location",
        "extCtx",
        "extCtx",
        "extCtx",
        "extCtx",
        "extCtx",
        "workerData",
        "workerData",
        "workerData",
        "parentPort",
        "err",
        "bundle",
        "id",
        "bundle",
        "modules",
        "k",
        "modules",
        "d",
        "modules",
        "k",
        "dep",
        "modules",
        "k",
        "d",
        "dep",
        "id",
        "dep",
        "dep",
        "dep",
        "id",
        "parents",
        "bundle",
        "k",
        "bundle",
        "parents",
        "parents",
        "getParents",
        "bundle",
        "id",
        "parents",
        "link",
        "link",
        "href",
        "link",
        "newLink",
        "link",
        "link",
        "link",
        "newLink",
        "href",
        "link",
        "newLink",
        "link",
        "cssTimeout",
        "cssTimeout",
        "setTimeout",
        "i",
        "links",
        "i",
        "links",
        "i",
        "getHostname",
        "hostname",
        "getPort",
        "href",
        "href",
        "hostname",
        "getPort",
        "href",
        "href",
        "location",
        "servedFromHMRServer",
        "absolute",
        "updateLink",
        "links",
        "i",
        "cssTimeout",
        "asset",
        "asset",
        "script",
        "asset",
        "asset",
        "script",
        "resolve",
        "reject",
        "script",
        "resolve",
        "script",
        "script",
        "reject",
        "_document$head",
        "_document$head",
        "_document$head",
        "script",
        "importScripts",
        "asset",
        "asset",
        "resolve",
        "reject",
        "importScripts",
        "asset",
        "resolve",
        "err",
        "reject",
        "err",
        "assets",
        "supportsSourceURL",
        "assets",
        "asset",
        "_hmrDownload",
        "hmrDownload",
        "asset",
        "_hmrDownload",
        "_hmrDownload",
        "err",
        "extCtx",
        "extCtx",
        "extCtx",
        "ServiceWorkerGlobalScope",
        "ServiceWorkerGlobalScope",
        "extCtx",
        "err",
        "scriptsToRemove",
        "promises",
        "assets",
        "asset",
        "hmrApply",
        "asset",
        "scriptsToRemove",
        "scriptsToRemove",
        "script",
        "script",
        "_document$head2",
        "_document$head2",
        "_document$head2",
        "script",
        "bundle",
        "asset",
        "bundle",
        "modules",
        "asset",
        "reloadCSS",
        "asset",
        "asset",
        "bundle",
        "deps",
        "modules",
        "asset",
        "modules",
        "asset",
        "dep",
        "oldDeps",
        "deps",
        "dep",
        "deps",
        "dep",
        "oldDeps",
        "dep",
        "oldDeps",
        "dep",
        "getParents",
        "id",
        "parents",
        "hmrDelete",
        "id",
        "supportsSourceURL",
        "eval",
        "asset",
        "asset",
        "modules",
        "asset",
        "fn",
        "deps",
        "bundle",
        "hmrApply",
        "bundle",
        "asset",
        "bundle",
        "id",
        "bundle",
        "modules",
        "modules",
        "id",
        "modules",
        "id",
        "dep",
        "deps",
        "getParents",
        "deps",
        "dep",
        "parents",
        "orphans",
        "deps",
        "dep",
        "modules",
        "id",
        "bundle",
        "id",
        "orphans",
        "id",
        "hmrDelete",
        "id",
        "bundle",
        "hmrDelete",
        "bundle",
        "id",
        "bundle",
        "id",
        "depsByBundle",
        "checkedAssets",
        "hmrAcceptCheckOne",
        "bundle",
        "id",
        "depsByBundle",
        "getParents",
        "id",
        "parents",
        "parents",
        "hmrAcceptCheckOne",
        "v",
        "v",
        "a",
        "accepted",
        "a",
        "getParents",
        "v",
        "p",
        "accepted",
        "parents",
        "p",
        "accepted",
        "bundle",
        "id",
        "depsByBundle",
        "bundle",
        "modules",
        "depsByBundle",
        "depsByBundle",
        "bundle",
        "bundle",
        "bundleNotFound",
        "hmrAcceptCheckOne",
        "bundle",
        "id",
        "depsByBundle",
        "checkedAssets",
        "id",
        "checkedAssets",
        "id",
        "bundle",
        "id",
        "cached",
        "assetsToDispose",
        "bundle",
        "id",
        "cached",
        "cached",
        "cached",
        "assetsToAccept",
        "bundle",
        "id",
        "i",
        "assetsToDispose",
        "i",
        "assetsToDispose",
        "i",
        "disposedAssets",
        "id",
        "hmrDispose",
        "assetsToDispose",
        "i",
        "id",
        "disposedAssets",
        "id",
        "assetsToDispose",
        "bundle",
        "id",
        "bundle",
        "id",
        "bundle",
        "id",
        "cached",
        "cached",
        "cached",
        "bundle",
        "id",
        "cached",
        "cached",
        "cached",
        "cached",
        "cb",
        "cb",
        "bundle",
        "id",
        "bundle",
        "id",
        "bundle",
        "id",
        "bundle",
        "id",
        "bundle",
        "id",
        "cached",
        "cached",
        "cached",
        "cached",
        "cb",
        "cb",
        "getParents",
        "id",
        "additionalAssets",
        "additionalAssets",
        "assetsToAlsoAccept",
        "additionalAssets",
        "assetsToAlsoAccept",
        "assetsToAlsoAccept",
        "a",
        "hmrAcceptCheck",
        "a",
        "a",
        "handled",
        "fullReload",
        "hmrDisposeQueue",
        "require",
        "exports",
        "__globalThis",
        "require",
        "require",
        "parcelHelpers",
        "_productsHbs",
        "require",
        "_productsHbsDefault",
        "_dataJs",
        "body",
        "productListHTML",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "a",
        "a",
        "a",
        "a",
        "a",
        "exports",
        "a",
        "a",
        "exports",
        "source",
        "dest",
        "source",
        "key",
        "key",
        "key",
        "dest",
        "key",
        "dest",
        "key",
        "source",
        "key",
        "dest",
        "exports",
        "dest",
        "destName",
        "get",
        "dest",
        "destName",
        "get",
        "require",
        "exports",
        "__globalThis",
        "require",
        "parcelHelpers",
        "exports",
        "parcelHelpers",
        "exports",
        "products",
        "require",
        "exports",
        "__globalThis",
        "require",
        "parcelHelpers",
        "exports",
        "require",
        "parcelHelpers",
        "_handlebars",
        "_handlebarsDefault",
        "container",
        "depth0",
        "helpers",
        "partials",
        "data",
        "depth0",
        "depth0",
        "container",
        "container",
        "container",
        "container",
        "parent",
        "propertyName",
        "parent",
        "propertyName",
        "parent",
        "propertyName",
        "alias4",
        "helper",
        "helper",
        "lookupProperty",
        "helpers",
        "depth0",
        "lookupProperty",
        "depth0",
        "depth0",
        "helper",
        "alias2",
        "helper",
        "alias3",
        "helper",
        "alias1",
        "data",
        "helper",
        "alias4",
        "helper",
        "helper",
        "lookupProperty",
        "helpers",
        "depth0",
        "lookupProperty",
        "depth0",
        "depth0",
        "helper",
        "alias2",
        "helper",
        "alias3",
        "helper",
        "alias1",
        "data",
        "helper",
        "alias4",
        "helper",
        "helper",
        "lookupProperty",
        "helpers",
        "depth0",
        "lookupProperty",
        "depth0",
        "depth0",
        "helper",
        "alias2",
        "helper",
        "alias3",
        "helper",
        "alias1",
        "data",
        "helper",
        "alias4",
        "helper",
        "helper",
        "lookupProperty",
        "helpers",
        "depth0",
        "lookupProperty",
        "depth0",
        "depth0",
        "helper",
        "alias2",
        "helper",
        "alias3",
        "helper",
        "alias1",
        "data",
        "helper",
        "alias4",
        "helper",
        "helper",
        "lookupProperty",
        "helpers",
        "depth0",
        "lookupProperty",
        "depth0",
        "depth0",
        "helper",
        "alias2",
        "helper",
        "alias3",
        "helper",
        "alias1",
        "data",
        "helper",
        "alias4",
        "helper",
        "helper",
        "lookupProperty",
        "helpers",
        "depth0",
        "lookupProperty",
        "depth0",
        "depth0",
        "helper",
        "alias2",
        "helper",
        "alias3",
        "helper",
        "alias1",
        "data",
        "helper",
        "container",
        "depth0",
        "helpers",
        "partials",
        "data",
        "container",
        "parent",
        "propertyName",
        "parent",
        "propertyName",
        "parent",
        "propertyName",
        "stack1",
        "lookupProperty",
        "helpers",
        "depth0",
        "depth0",
        "container",
        "depth0",
        "lookupProperty",
        "depth0",
        "depth0",
        "container",
        "data",
        "container",
        "data",
        "stack1",
        "exports",
        "templateFunction",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "require",
        "_interopRequireDefault",
        "_handlebarsRuntime",
        "require",
        "_interopRequireDefault",
        "_handlebarsCompilerAst",
        "require",
        "require",
        "require",
        "_interopRequireDefault",
        "_handlebarsCompilerJavascriptCompiler",
        "require",
        "_interopRequireDefault",
        "_handlebarsCompilerVisitor",
        "require",
        "_interopRequireDefault",
        "_handlebarsNoConflict",
        "_handlebarsRuntime2",
        "_create",
        "hb",
        "input",
        "options",
        "_handlebarsCompilerCompiler",
        "input",
        "options",
        "hb",
        "hb",
        "input",
        "options",
        "_handlebarsCompilerCompiler",
        "input",
        "options",
        "hb",
        "hb",
        "_handlebarsCompilerAst2",
        "hb",
        "_handlebarsCompilerCompiler",
        "hb",
        "_handlebarsCompilerJavascriptCompiler2",
        "hb",
        "_handlebarsCompilerBase",
        "hb",
        "_handlebarsCompilerBase",
        "hb",
        "_handlebarsCompilerBase",
        "hb",
        "create",
        "inst",
        "create",
        "_handlebarsNoConflict2",
        "inst",
        "inst",
        "_handlebarsCompilerVisitor2",
        "inst",
        "inst",
        "exports",
        "inst",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "key",
        "obj",
        "obj",
        "key",
        "newObj",
        "key",
        "obj",
        "key",
        "newObj",
        "obj",
        "newObj",
        "require",
        "_interopRequireWildcard",
        "_handlebarsBase",
        "require",
        "_interopRequireDefault",
        "_handlebarsSafeString",
        "require",
        "_interopRequireDefault",
        "_handlebarsException",
        "require",
        "_interopRequireWildcard",
        "_handlebarsUtils",
        "require",
        "_interopRequireWildcard",
        "_handlebarsRuntime",
        "require",
        "_interopRequireDefault",
        "_handlebarsNoConflict",
        "Utils",
        "hb",
        "hb",
        "_handlebarsSafeString2",
        "hb",
        "_handlebarsException2",
        "hb",
        "Utils",
        "hb",
        "Utils",
        "hb",
        "runtime",
        "hb",
        "spec",
        "runtime",
        "spec",
        "hb",
        "hb",
        "create",
        "inst",
        "create",
        "_handlebarsNoConflict2",
        "inst",
        "inst",
        "inst",
        "exports",
        "inst",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "exports",
        "HandlebarsEnvironment",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "require",
        "require",
        "_interopRequireDefault",
        "_exception",
        "require",
        "require",
        "require",
        "_interopRequireDefault",
        "_logger",
        "require",
        "exports",
        "VERSION",
        "exports",
        "COMPILER_REVISION",
        "exports",
        "LAST_COMPATIBLE_COMPILER_REVISION",
        "exports",
        "REVISION_CHANGES",
        "helpers",
        "partials",
        "decorators",
        "helpers",
        "partials",
        "decorators",
        "_helpers",
        "_decorators",
        "HandlebarsEnvironment",
        "HandlebarsEnvironment",
        "_logger2",
        "_logger2",
        "registerHelper",
        "name",
        "fn",
        "_utils",
        "name",
        "objectType",
        "fn",
        "_exception2",
        "_utils",
        "name",
        "name",
        "fn",
        "unregisterHelper",
        "name",
        "name",
        "registerPartial",
        "name",
        "partial",
        "_utils",
        "name",
        "objectType",
        "_utils",
        "name",
        "partial",
        "_exception2",
        "name",
        "name",
        "partial",
        "unregisterPartial",
        "name",
        "name",
        "registerDecorator",
        "name",
        "fn",
        "_utils",
        "name",
        "objectType",
        "fn",
        "_exception2",
        "_utils",
        "name",
        "name",
        "fn",
        "unregisterDecorator",
        "name",
        "name",
        "resetLoggedPropertyAccesses",
        "_internalProtoAccess",
        "_logger2",
        "exports",
        "log",
        "exports",
        "_utils",
        "exports",
        "_logger2",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "exports",
        "extend",
        "exports",
        "indexOf",
        "exports",
        "escapeExpression",
        "exports",
        "isEmpty",
        "exports",
        "createFrame",
        "exports",
        "blockParams",
        "exports",
        "appendContextPath",
        "chr",
        "escape",
        "chr",
        "obj",
        "i",
        "arguments",
        "i",
        "key",
        "arguments",
        "i",
        "arguments",
        "i",
        "key",
        "obj",
        "key",
        "arguments",
        "i",
        "key",
        "obj",
        "exports",
        "toString",
        "isFunction",
        "value",
        "value",
        "isFunction",
        "exports",
        "isFunction",
        "value",
        "value",
        "toString",
        "value",
        "exports",
        "isFunction",
        "value",
        "value",
        "value",
        "toString",
        "value",
        "exports",
        "isArray",
        "array",
        "value",
        "array",
        "i",
        "len",
        "i",
        "array",
        "i",
        "value",
        "i",
        "possible",
        "badChars",
        "escapeChar",
        "value",
        "value",
        "value",
        "isArray",
        "value",
        "value",
        "extend",
        "frame",
        "frame",
        "ids",
        "ids",
        "contextPath",
        "id",
        "contextPath",
        "contextPath",
        "id",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "message",
        "node",
        "node",
        "node",
        "loc",
        "line",
        "loc",
        "endLineNumber",
        "loc",
        "column",
        "loc",
        "endColumn",
        "loc",
        "message",
        "line",
        "column",
        "message",
        "idx",
        "errorProps",
        "idx",
        "errorProps",
        "idx",
        "tmp",
        "errorProps",
        "idx",
        "loc",
        "line",
        "endLineNumber",
        "column",
        "endColumn",
        "column",
        "endColumn",
        "nop",
        "exports",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "exports",
        "registerDefaultHelpers",
        "exports",
        "moveHelperToHooks",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "require",
        "_interopRequireDefault",
        "_helpersBlockHelperMissing",
        "require",
        "_interopRequireDefault",
        "_helpersEach",
        "require",
        "_interopRequireDefault",
        "_helpersHelperMissing",
        "require",
        "_interopRequireDefault",
        "_helpersIf",
        "require",
        "_interopRequireDefault",
        "_helpersLog",
        "require",
        "_interopRequireDefault",
        "_helpersLookup",
        "require",
        "_interopRequireDefault",
        "_helpersWith",
        "instance",
        "_helpersBlockHelperMissing2",
        "instance",
        "_helpersEach2",
        "instance",
        "_helpersHelperMissing2",
        "instance",
        "_helpersIf2",
        "instance",
        "_helpersLog2",
        "instance",
        "_helpersLookup2",
        "instance",
        "_helpersWith2",
        "instance",
        "instance",
        "helperName",
        "keepHelper",
        "instance",
        "helperName",
        "instance",
        "helperName",
        "instance",
        "helperName",
        "keepHelper",
        "instance",
        "helperName",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "require",
        "exports",
        "instance",
        "instance",
        "context",
        "options",
        "options",
        "options",
        "context",
        "fn",
        "context",
        "context",
        "inverse",
        "_utils",
        "context",
        "context",
        "options",
        "options",
        "options",
        "instance",
        "context",
        "options",
        "inverse",
        "options",
        "options",
        "_utils",
        "options",
        "data",
        "_utils",
        "options",
        "options",
        "options",
        "data",
        "fn",
        "context",
        "options",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "require",
        "require",
        "_interopRequireDefault",
        "_exception",
        "exports",
        "instance",
        "instance",
        "context",
        "options",
        "options",
        "_exception2",
        "options",
        "options",
        "options",
        "options",
        "contextPath",
        "_utils",
        "options",
        "options",
        "_utils",
        "context",
        "context",
        "context",
        "options",
        "data",
        "_utils",
        "options",
        "field",
        "index",
        "last",
        "data",
        "data",
        "field",
        "data",
        "index",
        "data",
        "index",
        "data",
        "last",
        "contextPath",
        "data",
        "contextPath",
        "field",
        "ret",
        "ret",
        "fn",
        "context",
        "field",
        "data",
        "_utils",
        "context",
        "field",
        "field",
        "contextPath",
        "field",
        "context",
        "context",
        "_utils",
        "context",
        "context",
        "i",
        "j",
        "i",
        "i",
        "context",
        "execIteration",
        "i",
        "i",
        "i",
        "context",
        "context",
        "context",
        "iterator",
        "it",
        "it",
        "iterator",
        "newContext",
        "it",
        "context",
        "newContext",
        "context",
        "i",
        "j",
        "i",
        "execIteration",
        "i",
        "i",
        "i",
        "context",
        "context",
        "key",
        "priorKey",
        "execIteration",
        "priorKey",
        "i",
        "priorKey",
        "key",
        "i",
        "priorKey",
        "execIteration",
        "priorKey",
        "i",
        "i",
        "ret",
        "inverse",
        "ret",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "require",
        "_interopRequireDefault",
        "_exception",
        "exports",
        "instance",
        "instance",
        "arguments",
        "_exception2",
        "arguments",
        "arguments",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "require",
        "require",
        "_interopRequireDefault",
        "_exception",
        "exports",
        "instance",
        "instance",
        "conditional",
        "options",
        "arguments",
        "_exception2",
        "_utils",
        "conditional",
        "conditional",
        "conditional",
        "options",
        "conditional",
        "_utils",
        "conditional",
        "options",
        "options",
        "instance",
        "conditional",
        "options",
        "arguments",
        "_exception2",
        "instance",
        "conditional",
        "options",
        "options",
        "options",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "exports",
        "instance",
        "instance",
        "arguments",
        "arguments",
        "i",
        "arguments",
        "i",
        "args",
        "arguments",
        "i",
        "options",
        "level",
        "options",
        "options",
        "options",
        "level",
        "options",
        "args",
        "level",
        "instance",
        "instance",
        "args",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "exports",
        "instance",
        "instance",
        "obj",
        "field",
        "options",
        "obj",
        "obj",
        "options",
        "obj",
        "field",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "require",
        "require",
        "_interopRequireDefault",
        "_exception",
        "exports",
        "instance",
        "instance",
        "context",
        "options",
        "arguments",
        "_exception2",
        "_utils",
        "context",
        "context",
        "context",
        "options",
        "_utils",
        "context",
        "options",
        "options",
        "options",
        "data",
        "_utils",
        "options",
        "data",
        "_utils",
        "options",
        "options",
        "fn",
        "context",
        "data",
        "_utils",
        "context",
        "data",
        "data",
        "options",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "exports",
        "registerDefaultDecorators",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "require",
        "_interopRequireDefault",
        "_decoratorsInline",
        "instance",
        "_decoratorsInline2",
        "instance",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "require",
        "exports",
        "instance",
        "instance",
        "fn",
        "props",
        "container",
        "options",
        "props",
        "props",
        "ret",
        "context",
        "options",
        "container",
        "container",
        "_utils",
        "original",
        "props",
        "fn",
        "context",
        "options",
        "container",
        "original",
        "ret",
        "props",
        "options",
        "options",
        "ret",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "require",
        "lookupLevel",
        "level",
        "level",
        "_utils",
        "logger",
        "level",
        "levelMap",
        "level",
        "levelMap",
        "level",
        "parseInt",
        "level",
        "level",
        "log",
        "level",
        "level",
        "logger",
        "level",
        "logger",
        "logger",
        "level",
        "logger",
        "level",
        "method",
        "method",
        "arguments",
        "_len",
        "_len",
        "_key",
        "_len",
        "_key",
        "message",
        "_key",
        "arguments",
        "_key",
        "method",
        "message",
        "exports",
        "logger",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "exports",
        "createProtoAccessControl",
        "exports",
        "resultIsAllowed",
        "exports",
        "resetLoggedProperties",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "require",
        "require",
        "_interopRequireDefault",
        "_logger",
        "runtimeOptions",
        "defaultMethodWhiteList",
        "defaultMethodWhiteList",
        "defaultMethodWhiteList",
        "defaultMethodWhiteList",
        "defaultPropertyWhiteList",
        "_createNewLookupObject",
        "defaultPropertyWhiteList",
        "runtimeOptions",
        "runtimeOptions",
        "_createNewLookupObject",
        "defaultMethodWhiteList",
        "runtimeOptions",
        "runtimeOptions",
        "result",
        "protoAccessControl",
        "propertyName",
        "result",
        "checkWhiteList",
        "protoAccessControl",
        "propertyName",
        "checkWhiteList",
        "protoAccessControl",
        "propertyName",
        "protoAccessControlForType",
        "propertyName",
        "protoAccessControlForType",
        "propertyName",
        "protoAccessControlForType",
        "propertyName",
        "protoAccessControlForType",
        "protoAccessControlForType",
        "logUnexpecedPropertyAccessOnce",
        "propertyName",
        "propertyName",
        "loggedProperties",
        "propertyName",
        "loggedProperties",
        "propertyName",
        "_logger2",
        "propertyName",
        "loggedProperties",
        "propertyName",
        "loggedProperties",
        "propertyName",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "exports",
        "createNewLookupObject",
        "require",
        "arguments",
        "_len",
        "_key",
        "_len",
        "_key",
        "sources",
        "_key",
        "arguments",
        "_key",
        "_utils",
        "sources",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "SafeString",
        "SafeString",
        "exports",
        "SafeString",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "exports",
        "checkRevision",
        "exports",
        "template",
        "exports",
        "wrapProgram",
        "exports",
        "resolvePartial",
        "exports",
        "invokePartial",
        "exports",
        "noop",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "key",
        "obj",
        "obj",
        "key",
        "newObj",
        "key",
        "obj",
        "key",
        "newObj",
        "obj",
        "newObj",
        "require",
        "_interopRequireWildcard",
        "_utils",
        "require",
        "_interopRequireDefault",
        "_exception",
        "require",
        "require",
        "require",
        "require",
        "compilerInfo",
        "compilerInfo",
        "compilerInfo",
        "_base",
        "compilerRevision",
        "_base",
        "compilerRevision",
        "_base",
        "compilerRevision",
        "_base",
        "_base",
        "currentRevision",
        "_base",
        "compilerRevision",
        "_exception2",
        "runtimeVersions",
        "compilerVersions",
        "_exception2",
        "compilerInfo",
        "templateSpec",
        "env",
        "env",
        "_exception2",
        "templateSpec",
        "templateSpec",
        "_exception2",
        "templateSpec",
        "templateSpec",
        "templateSpec",
        "env",
        "templateSpec",
        "templateSpec",
        "templateSpec",
        "partial",
        "context",
        "options",
        "options",
        "context",
        "Utils",
        "context",
        "options",
        "options",
        "options",
        "partial",
        "env",
        "partial",
        "context",
        "options",
        "Utils",
        "options",
        "env",
        "partial",
        "context",
        "extendedOptions",
        "result",
        "env",
        "options",
        "options",
        "env",
        "partial",
        "templateSpec",
        "env",
        "result",
        "options",
        "options",
        "context",
        "extendedOptions",
        "result",
        "options",
        "result",
        "lines",
        "i",
        "l",
        "i",
        "lines",
        "i",
        "i",
        "l",
        "lines",
        "i",
        "options",
        "lines",
        "i",
        "result",
        "lines",
        "result",
        "_exception2",
        "options",
        "strict",
        "obj",
        "name",
        "loc",
        "obj",
        "name",
        "obj",
        "_exception2",
        "name",
        "obj",
        "loc",
        "container",
        "obj",
        "name",
        "lookupProperty",
        "parent",
        "propertyName",
        "parent",
        "propertyName",
        "result",
        "result",
        "parent",
        "propertyName",
        "result",
        "_internalProtoAccess",
        "result",
        "container",
        "propertyName",
        "result",
        "lookup",
        "depths",
        "name",
        "depths",
        "i",
        "len",
        "i",
        "depths",
        "i",
        "container",
        "depths",
        "i",
        "name",
        "result",
        "depths",
        "i",
        "name",
        "current",
        "context",
        "current",
        "current",
        "context",
        "current",
        "Utils",
        "invokePartialWrapper",
        "fn",
        "i",
        "templateSpec",
        "i",
        "ret",
        "templateSpec",
        "i",
        "ret",
        "program",
        "i",
        "data",
        "declaredBlockParams",
        "blockParams",
        "depths",
        "i",
        "i",
        "data",
        "depths",
        "blockParams",
        "declaredBlockParams",
        "programWrapper",
        "wrapProgram",
        "i",
        "fn",
        "data",
        "declaredBlockParams",
        "blockParams",
        "depths",
        "programWrapper",
        "programWrapper",
        "i",
        "wrapProgram",
        "i",
        "fn",
        "programWrapper",
        "data",
        "value",
        "depth",
        "value",
        "depth",
        "value",
        "value",
        "value",
        "mergeIfNeeded",
        "param",
        "common",
        "param",
        "common",
        "param",
        "common",
        "param",
        "common",
        "obj",
        "Utils",
        "common",
        "param",
        "obj",
        "env",
        "templateSpec",
        "context",
        "arguments",
        "arguments",
        "arguments",
        "options",
        "ret",
        "options",
        "options",
        "templateSpec",
        "data",
        "initData",
        "context",
        "data",
        "templateSpec",
        "templateSpec",
        "options",
        "depths",
        "context",
        "options",
        "context",
        "options",
        "options",
        "depths",
        "context",
        "context",
        "templateSpec",
        "container",
        "context",
        "container",
        "container",
        "data",
        "blockParams",
        "depths",
        "main",
        "executeDecorators",
        "templateSpec",
        "main",
        "container",
        "options",
        "data",
        "blockParams",
        "main",
        "context",
        "options",
        "ret",
        "ret",
        "options",
        "options",
        "Utils",
        "env",
        "options",
        "wrapHelpersToPassLookupProperty",
        "mergedHelpers",
        "container",
        "container",
        "mergedHelpers",
        "templateSpec",
        "container",
        "container",
        "options",
        "env",
        "templateSpec",
        "templateSpec",
        "container",
        "Utils",
        "env",
        "options",
        "container",
        "container",
        "_internalProtoAccess",
        "options",
        "options",
        "templateWasPrecompiledWithCompilerV7",
        "_helpers",
        "container",
        "keepHelperInHelpers",
        "_helpers",
        "container",
        "keepHelperInHelpers",
        "container",
        "options",
        "container",
        "options",
        "container",
        "options",
        "container",
        "options",
        "container",
        "options",
        "ret",
        "i",
        "data",
        "blockParams",
        "depths",
        "templateSpec",
        "blockParams",
        "_exception2",
        "templateSpec",
        "depths",
        "_exception2",
        "wrapProgram",
        "container",
        "i",
        "templateSpec",
        "i",
        "data",
        "blockParams",
        "depths",
        "ret",
        "container",
        "i",
        "fn",
        "data",
        "declaredBlockParams",
        "blockParams",
        "depths",
        "context",
        "arguments",
        "arguments",
        "arguments",
        "depths",
        "context",
        "depths",
        "context",
        "container",
        "depths",
        "currentDepths",
        "context",
        "depths",
        "fn",
        "container",
        "context",
        "container",
        "container",
        "options",
        "data",
        "blockParams",
        "options",
        "blockParams",
        "currentDepths",
        "prog",
        "executeDecorators",
        "fn",
        "prog",
        "container",
        "depths",
        "data",
        "blockParams",
        "prog",
        "i",
        "prog",
        "depths",
        "depths",
        "prog",
        "declaredBlockParams",
        "prog",
        "partial",
        "context",
        "options",
        "partial",
        "options",
        "partial",
        "options",
        "partial",
        "options",
        "options",
        "partial",
        "options",
        "options",
        "partial",
        "partial",
        "options",
        "partial",
        "partial",
        "partial",
        "context",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "noop",
        "options",
        "_base",
        "options",
        "options",
        "partialBlock",
        "options",
        "partialBlockWrapper",
        "context",
        "arguments",
        "arguments",
        "arguments",
        "options",
        "_base",
        "options",
        "options",
        "currentPartialBlock",
        "fn",
        "context",
        "options",
        "fn",
        "options",
        "Utils",
        "options",
        "fn",
        "partial",
        "partialBlock",
        "partial",
        "partialBlock",
        "partial",
        "_exception2",
        "options",
        "partial",
        "partial",
        "context",
        "options",
        "context",
        "data",
        "data",
        "data",
        "data",
        "data",
        "_base",
        "data",
        "data",
        "context",
        "data",
        "fn",
        "prog",
        "container",
        "depths",
        "data",
        "blockParams",
        "fn",
        "prog",
        "fn",
        "prog",
        "props",
        "container",
        "depths",
        "depths",
        "data",
        "blockParams",
        "depths",
        "Utils",
        "prog",
        "props",
        "prog",
        "mergedHelpers",
        "container",
        "mergedHelpers",
        "helperName",
        "mergedHelpers",
        "helperName",
        "mergedHelpers",
        "helperName",
        "passLookupPropertyOption",
        "helper",
        "container",
        "helper",
        "container",
        "container",
        "_internalWrapHelper",
        "helper",
        "options",
        "Utils",
        "lookupProperty",
        "options",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "exports",
        "wrapHelper",
        "helper",
        "transformOptionsFn",
        "helper",
        "helper",
        "wrapper",
        "arguments",
        "arguments",
        "arguments",
        "arguments",
        "transformOptionsFn",
        "options",
        "helper",
        "arguments",
        "wrapper",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "exports",
        "Handlebars",
        "globalThis",
        "__magic__",
        "__magic__",
        "globalThis",
        "Handlebars",
        "globalThis",
        "Handlebars",
        "globalThis",
        "$Handlebars",
        "Handlebars",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "helperExpression",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "scopedId",
        "path",
        "path",
        "simpleId",
        "path",
        "path",
        "AST",
        "path",
        "path",
        "exports",
        "AST",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "exports",
        "parseWithoutProcessing",
        "exports",
        "parse",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "key",
        "obj",
        "obj",
        "key",
        "newObj",
        "key",
        "obj",
        "key",
        "newObj",
        "obj",
        "newObj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "require",
        "_interopRequireDefault",
        "_parser",
        "require",
        "_interopRequireDefault",
        "_whitespaceControl",
        "require",
        "_interopRequireWildcard",
        "_helpers",
        "require",
        "exports",
        "_parser2",
        "_utils",
        "yy",
        "Helpers",
        "input",
        "options",
        "input",
        "input",
        "_parser2",
        "yy",
        "yy",
        "locInfo",
        "yy",
        "options",
        "options",
        "locInfo",
        "_parser2",
        "input",
        "ast",
        "input",
        "options",
        "parseWithoutProcessing",
        "input",
        "options",
        "_whitespaceControl2",
        "options",
        "strip",
        "ast",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "trace",
        "anonymous",
        "yytext",
        "yyleng",
        "yylineno",
        "yy",
        "yystate",
        "$$",
        "_$",
        "$$",
        "yystate",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "inverse",
        "$$",
        "$0",
        "program",
        "$$",
        "$0",
        "program",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "yy",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "yy",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "yy",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "$$",
        "$0",
        "parseError",
        "hash",
        "parse",
        "input",
        "input",
        "lstack",
        "yyloc",
        "n",
        "stack",
        "stack",
        "n",
        "vstack",
        "vstack",
        "n",
        "lstack",
        "lstack",
        "n",
        "token",
        "token",
        "token",
        "token",
        "token",
        "token",
        "state",
        "stack",
        "stack",
        "state",
        "action",
        "state",
        "symbol",
        "symbol",
        "symbol",
        "lex",
        "action",
        "table",
        "state",
        "table",
        "state",
        "symbol",
        "action",
        "action",
        "action",
        "recovering",
        "expected",
        "p",
        "table",
        "state",
        "p",
        "p",
        "expected",
        "p",
        "errStr",
        "yylineno",
        "expected",
        "symbol",
        "symbol",
        "errStr",
        "yylineno",
        "symbol",
        "symbol",
        "symbol",
        "errStr",
        "symbol",
        "symbol",
        "yyloc",
        "expected",
        "action",
        "action",
        "state",
        "symbol",
        "action",
        "stack",
        "symbol",
        "vstack",
        "lstack",
        "stack",
        "action",
        "symbol",
        "preErrorSymbol",
        "yyleng",
        "yytext",
        "yylineno",
        "yyloc",
        "recovering",
        "recovering",
        "symbol",
        "preErrorSymbol",
        "preErrorSymbol",
        "len",
        "action",
        "yyval",
        "vstack",
        "vstack",
        "len",
        "yyval",
        "lstack",
        "lstack",
        "len",
        "lstack",
        "lstack",
        "lstack",
        "lstack",
        "len",
        "lstack",
        "lstack",
        "ranges",
        "yyval",
        "lstack",
        "lstack",
        "len",
        "lstack",
        "lstack",
        "r",
        "yyval",
        "yytext",
        "yyleng",
        "yylineno",
        "action",
        "vstack",
        "lstack",
        "r",
        "r",
        "len",
        "stack",
        "stack",
        "len",
        "vstack",
        "vstack",
        "len",
        "lstack",
        "lstack",
        "len",
        "stack",
        "action",
        "vstack",
        "yyval",
        "lstack",
        "yyval",
        "newState",
        "table",
        "stack",
        "stack",
        "stack",
        "stack",
        "stack",
        "newState",
        "parseError",
        "hash",
        "hash",
        "setInput",
        "input",
        "input",
        "input",
        "ch",
        "ch",
        "ch",
        "ch",
        "lines",
        "ch",
        "unput",
        "ch",
        "ch",
        "ch",
        "ch",
        "len",
        "len",
        "lines",
        "lines",
        "lines",
        "lines",
        "oldLines",
        "oldLines",
        "oldLines",
        "lines",
        "lines",
        "len",
        "r",
        "r",
        "len",
        "more",
        "less",
        "n",
        "n",
        "pastInput",
        "past",
        "past",
        "upcomingInput",
        "next",
        "next",
        "next",
        "next",
        "next",
        "showPosition",
        "pre",
        "pre",
        "c",
        "next",
        "i",
        "rules",
        "i",
        "tempMatch",
        "rules",
        "i",
        "tempMatch",
        "match",
        "tempMatch",
        "match",
        "match",
        "tempMatch",
        "index",
        "i",
        "match",
        "lines",
        "match",
        "lines",
        "lines",
        "lines",
        "lines",
        "lines",
        "lines",
        "lines",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "token",
        "rules",
        "index",
        "token",
        "token",
        "lex",
        "r",
        "r",
        "begin",
        "condition",
        "condition",
        "popState",
        "_currentRules",
        "topState",
        "begin",
        "condition",
        "condition",
        "lexer",
        "lexer",
        "anonymous",
        "yy",
        "yy_",
        "$avoiding_name_collisions",
        "YY_START",
        "start",
        "end",
        "yy_",
        "yy_",
        "start",
        "yy_",
        "end",
        "start",
        "$avoiding_name_collisions",
        "yy_",
        "strip",
        "yy_",
        "strip",
        "yy_",
        "strip",
        "yy_",
        "yy_",
        "strip",
        "yy_",
        "strip",
        "yy_",
        "yy_",
        "lexer",
        "lexer",
        "lexer",
        "parser",
        "lexer",
        "Parser",
        "parser",
        "parser",
        "Parser",
        "Parser",
        "exports",
        "handlebars",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "require",
        "_interopRequireDefault",
        "_visitor",
        "arguments",
        "arguments",
        "arguments",
        "options",
        "WhitespaceControl",
        "_visitor2",
        "WhitespaceControl",
        "program",
        "program",
        "body",
        "i",
        "l",
        "i",
        "body",
        "i",
        "current",
        "strip",
        "isPrevWhitespace",
        "body",
        "i",
        "isRoot",
        "isNextWhitespace",
        "body",
        "i",
        "isRoot",
        "strip",
        "_isPrevWhitespace",
        "strip",
        "_isNextWhitespace",
        "strip",
        "_isPrevWhitespace",
        "_isNextWhitespace",
        "strip",
        "omitRight",
        "body",
        "i",
        "strip",
        "omitLeft",
        "body",
        "i",
        "doStandalone",
        "inlineStandalone",
        "omitRight",
        "body",
        "i",
        "omitLeft",
        "body",
        "i",
        "current",
        "current",
        "body",
        "i",
        "doStandalone",
        "openStandalone",
        "omitRight",
        "current",
        "current",
        "omitLeft",
        "body",
        "i",
        "doStandalone",
        "closeStandalone",
        "omitRight",
        "body",
        "i",
        "omitLeft",
        "current",
        "current",
        "program",
        "WhitespaceControl",
        "WhitespaceControl",
        "WhitespaceControl",
        "block",
        "block",
        "block",
        "block",
        "block",
        "block",
        "block",
        "inverse",
        "inverse",
        "firstInverse",
        "inverse",
        "lastInverse",
        "lastInverse",
        "lastInverse",
        "lastInverse",
        "block",
        "block",
        "isNextWhitespace",
        "program",
        "isPrevWhitespace",
        "firstInverse",
        "program",
        "block",
        "omitRight",
        "program",
        "inverse",
        "block",
        "inverseStrip",
        "omitLeft",
        "program",
        "inverseStrip",
        "omitRight",
        "firstInverse",
        "block",
        "omitLeft",
        "lastInverse",
        "isPrevWhitespace",
        "program",
        "isNextWhitespace",
        "firstInverse",
        "omitLeft",
        "program",
        "omitRight",
        "firstInverse",
        "block",
        "omitLeft",
        "program",
        "strip",
        "WhitespaceControl",
        "WhitespaceControl",
        "mustache",
        "mustache",
        "WhitespaceControl",
        "WhitespaceControl",
        "node",
        "node",
        "strip",
        "strip",
        "body",
        "i",
        "isRoot",
        "i",
        "i",
        "body",
        "body",
        "i",
        "body",
        "i",
        "prev",
        "isRoot",
        "prev",
        "sibling",
        "isRoot",
        "prev",
        "body",
        "i",
        "isRoot",
        "i",
        "i",
        "body",
        "i",
        "body",
        "i",
        "next",
        "isRoot",
        "next",
        "sibling",
        "isRoot",
        "next",
        "body",
        "i",
        "multiple",
        "body",
        "i",
        "i",
        "current",
        "current",
        "multiple",
        "current",
        "current",
        "current",
        "current",
        "multiple",
        "current",
        "current",
        "original",
        "body",
        "i",
        "multiple",
        "body",
        "i",
        "body",
        "i",
        "current",
        "current",
        "multiple",
        "current",
        "current",
        "current",
        "current",
        "multiple",
        "current",
        "current",
        "original",
        "current",
        "exports",
        "WhitespaceControl",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "require",
        "_interopRequireDefault",
        "_exception",
        "Visitor",
        "Visitor",
        "acceptKey",
        "node",
        "name",
        "node",
        "name",
        "value",
        "Visitor",
        "value",
        "_exception2",
        "value",
        "name",
        "node",
        "node",
        "name",
        "value",
        "acceptRequired",
        "node",
        "name",
        "node",
        "name",
        "node",
        "name",
        "_exception2",
        "node",
        "name",
        "acceptArray",
        "array",
        "array",
        "i",
        "l",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "i",
        "l",
        "accept",
        "_exception2",
        "ret",
        "ret",
        "ret",
        "Program",
        "program",
        "program",
        "visitSubExpression",
        "visitSubExpression",
        "visitBlock",
        "visitBlock",
        "visitPartial",
        "PartialBlockStatement",
        "partial",
        "visitPartial",
        "partial",
        "partial",
        "ContentStatement",
        "CommentStatement",
        "visitSubExpression",
        "PathExpression",
        "StringLiteral",
        "NumberLiteral",
        "BooleanLiteral",
        "UndefinedLiteral",
        "NullLiteral",
        "Hash",
        "hash",
        "hash",
        "HashPair",
        "pair",
        "pair",
        "mustache",
        "mustache",
        "mustache",
        "mustache",
        "block",
        "visitSubExpression",
        "block",
        "block",
        "block",
        "partial",
        "partial",
        "partial",
        "partial",
        "exports",
        "Visitor",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "exports",
        "SourceLocation",
        "exports",
        "id",
        "exports",
        "stripFlags",
        "exports",
        "stripComment",
        "exports",
        "preparePath",
        "exports",
        "prepareMustache",
        "exports",
        "prepareRawBlock",
        "exports",
        "prepareBlock",
        "exports",
        "prepareProgram",
        "exports",
        "preparePartialBlock",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "require",
        "_interopRequireDefault",
        "_exception",
        "open",
        "close",
        "close",
        "close",
        "close",
        "close",
        "open",
        "close",
        "open",
        "_exception2",
        "open",
        "close",
        "errorNode",
        "source",
        "locInfo",
        "source",
        "locInfo",
        "locInfo",
        "locInfo",
        "locInfo",
        "token",
        "token",
        "token",
        "token",
        "token",
        "open",
        "close",
        "open",
        "close",
        "close",
        "comment",
        "comment",
        "data",
        "parts",
        "loc",
        "loc",
        "loc",
        "data",
        "parts",
        "i",
        "l",
        "i",
        "parts",
        "i",
        "parts",
        "i",
        "part",
        "original",
        "parts",
        "i",
        "part",
        "isLiteral",
        "part",
        "part",
        "part",
        "dig",
        "_exception2",
        "original",
        "loc",
        "part",
        "depth",
        "dig",
        "part",
        "data",
        "depth",
        "dig",
        "original",
        "loc",
        "path",
        "hash",
        "open",
        "strip",
        "locInfo",
        "open",
        "open",
        "escapeFlag",
        "escapeFlag",
        "open",
        "decorator",
        "path",
        "hash",
        "escaped",
        "strip",
        "locInfo",
        "openRawBlock",
        "contents",
        "close",
        "locInfo",
        "validateClose",
        "openRawBlock",
        "close",
        "locInfo",
        "locInfo",
        "contents",
        "locInfo",
        "openRawBlock",
        "openRawBlock",
        "openRawBlock",
        "program",
        "locInfo",
        "openBlock",
        "program",
        "inverseAndProgram",
        "close",
        "inverted",
        "locInfo",
        "close",
        "close",
        "validateClose",
        "openBlock",
        "close",
        "openBlock",
        "program",
        "openBlock",
        "inverseAndProgram",
        "decorator",
        "_exception2",
        "inverseAndProgram",
        "inverseAndProgram",
        "inverseAndProgram",
        "close",
        "inverseStrip",
        "inverseAndProgram",
        "inverse",
        "inverseAndProgram",
        "inverted",
        "inverted",
        "inverse",
        "inverse",
        "program",
        "program",
        "inverted",
        "decorator",
        "openBlock",
        "openBlock",
        "openBlock",
        "program",
        "inverse",
        "openBlock",
        "inverseStrip",
        "close",
        "close",
        "locInfo",
        "statements",
        "loc",
        "loc",
        "statements",
        "statements",
        "statements",
        "statements",
        "firstLoc",
        "lastLoc",
        "loc",
        "firstLoc",
        "firstLoc",
        "firstLoc",
        "lastLoc",
        "lastLoc",
        "statements",
        "loc",
        "open",
        "program",
        "close",
        "locInfo",
        "validateClose",
        "open",
        "close",
        "open",
        "open",
        "open",
        "program",
        "open",
        "close",
        "close",
        "locInfo",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "exports",
        "Compiler",
        "exports",
        "precompile",
        "exports",
        "compile",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "require",
        "_interopRequireDefault",
        "_exception",
        "require",
        "require",
        "_interopRequireDefault",
        "_ast",
        "Compiler",
        "Compiler",
        "equals",
        "other",
        "other",
        "len",
        "i",
        "len",
        "i",
        "i",
        "other",
        "i",
        "opcode",
        "otherOpcode",
        "argEquals",
        "opcode",
        "otherOpcode",
        "len",
        "i",
        "len",
        "i",
        "i",
        "other",
        "i",
        "compile",
        "program",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "_utils",
        "options",
        "program",
        "compileProgram",
        "program",
        "childCompiler",
        "program",
        "result",
        "guid",
        "result",
        "result",
        "guid",
        "accept",
        "node",
        "node",
        "_exception2",
        "node",
        "node",
        "node",
        "node",
        "node",
        "ret",
        "Program",
        "program",
        "program",
        "program",
        "body",
        "i",
        "bodyLength",
        "i",
        "body",
        "i",
        "bodyLength",
        "program",
        "program",
        "BlockStatement",
        "block",
        "transformLiteralToPath",
        "block",
        "block",
        "block",
        "program",
        "program",
        "program",
        "inverse",
        "inverse",
        "inverse",
        "block",
        "block",
        "program",
        "inverse",
        "block",
        "program",
        "inverse",
        "block",
        "block",
        "program",
        "inverse",
        "program",
        "inverse",
        "DecoratorBlock",
        "decorator",
        "decorator",
        "decorator",
        "decorator",
        "program",
        "decorator",
        "path",
        "PartialStatement",
        "partial",
        "partial",
        "program",
        "program",
        "partial",
        "partial",
        "_exception2",
        "partial",
        "partial",
        "partial",
        "isDynamic",
        "partial",
        "partial",
        "program",
        "partial",
        "indent",
        "indent",
        "indent",
        "isDynamic",
        "partialName",
        "indent",
        "PartialBlockStatement",
        "partialBlock",
        "partialBlock",
        "MustacheStatement",
        "mustache",
        "mustache",
        "mustache",
        "Decorator",
        "decorator",
        "decorator",
        "ContentStatement",
        "content",
        "content",
        "content",
        "CommentStatement",
        "SubExpression",
        "sexpr",
        "transformLiteralToPath",
        "sexpr",
        "sexpr",
        "sexpr",
        "sexpr",
        "sexpr",
        "ambiguousSexpr",
        "sexpr",
        "program",
        "inverse",
        "sexpr",
        "path",
        "program",
        "inverse",
        "path",
        "program",
        "inverse",
        "path",
        "path",
        "name",
        "isBlock",
        "simpleSexpr",
        "sexpr",
        "sexpr",
        "path",
        "path",
        "helperSexpr",
        "sexpr",
        "program",
        "inverse",
        "sexpr",
        "program",
        "inverse",
        "sexpr",
        "path",
        "name",
        "name",
        "_exception2",
        "name",
        "sexpr",
        "path",
        "path",
        "path",
        "path",
        "_ast2",
        "path",
        "PathExpression",
        "path",
        "path",
        "path",
        "path",
        "_ast2",
        "path",
        "path",
        "scoped",
        "name",
        "blockParamId",
        "blockParamId",
        "path",
        "name",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "path",
        "scoped",
        "StringLiteral",
        "NumberLiteral",
        "number",
        "number",
        "BooleanLiteral",
        "UndefinedLiteral",
        "NullLiteral",
        "Hash",
        "hash",
        "hash",
        "pairs",
        "i",
        "l",
        "i",
        "pairs",
        "i",
        "i",
        "pairs",
        "i",
        "opcode",
        "name",
        "name",
        "arguments",
        "addDepth",
        "depth",
        "depth",
        "classifySexpr",
        "sexpr",
        "_ast2",
        "sexpr",
        "isSimple",
        "sexpr",
        "isBlockParam",
        "_ast2",
        "sexpr",
        "isBlockParam",
        "isHelper",
        "isSimple",
        "isEligible",
        "isHelper",
        "sexpr",
        "options",
        "_name",
        "isHelper",
        "options",
        "isEligible",
        "isHelper",
        "isEligible",
        "pushParams",
        "i",
        "l",
        "i",
        "i",
        "pushParam",
        "val",
        "val",
        "val",
        "val",
        "value",
        "value",
        "value",
        "val",
        "val",
        "val",
        "value",
        "val",
        "val",
        "val",
        "val",
        "_ast2",
        "val",
        "val",
        "blockParamIndex",
        "val",
        "blockParamIndex",
        "val",
        "blockParamIndex",
        "blockParamChild",
        "value",
        "val",
        "value",
        "value",
        "value",
        "value",
        "val",
        "value",
        "val",
        "setupFullMustacheParams",
        "sexpr",
        "program",
        "inverse",
        "omitEmpty",
        "sexpr",
        "program",
        "inverse",
        "sexpr",
        "sexpr",
        "omitEmpty",
        "blockParamIndex",
        "name",
        "depth",
        "len",
        "depth",
        "depth",
        "blockParams",
        "_utils",
        "blockParams",
        "name",
        "blockParams",
        "param",
        "depth",
        "param",
        "input",
        "options",
        "env",
        "input",
        "input",
        "input",
        "_exception2",
        "input",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "env",
        "input",
        "options",
        "env",
        "ast",
        "options",
        "env",
        "environment",
        "options",
        "input",
        "options",
        "env",
        "options",
        "options",
        "input",
        "input",
        "input",
        "_exception2",
        "input",
        "options",
        "_utils",
        "options",
        "options",
        "options",
        "options",
        "options",
        "env",
        "input",
        "options",
        "env",
        "ast",
        "options",
        "env",
        "environment",
        "options",
        "env",
        "templateSpec",
        "context",
        "execOptions",
        "compiled",
        "compiled",
        "compileInput",
        "compiled",
        "context",
        "execOptions",
        "ret",
        "setupOptions",
        "compiled",
        "compiled",
        "compileInput",
        "compiled",
        "setupOptions",
        "ret",
        "i",
        "data",
        "blockParams",
        "depths",
        "compiled",
        "compiled",
        "compileInput",
        "compiled",
        "i",
        "data",
        "blockParams",
        "depths",
        "ret",
        "a",
        "b",
        "a",
        "b",
        "_utils",
        "a",
        "_utils",
        "b",
        "a",
        "b",
        "i",
        "a",
        "i",
        "argEquals",
        "a",
        "i",
        "b",
        "i",
        "sexpr",
        "sexpr",
        "sexpr",
        "sexpr",
        "literal",
        "literal",
        "literal",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "require",
        "require",
        "_interopRequireDefault",
        "_exception",
        "require",
        "require",
        "_interopRequireDefault",
        "_codeGen",
        "value",
        "value",
        "JavaScriptCompiler",
        "nameLookup",
        "parent",
        "name",
        "parent",
        "name",
        "depthedLookup",
        "name",
        "name",
        "compilerInfo",
        "_base",
        "_base",
        "revision",
        "revision",
        "versions",
        "appendToBuffer",
        "source",
        "location",
        "_utils",
        "source",
        "source",
        "source",
        "source",
        "source",
        "location",
        "source",
        "source",
        "source",
        "source",
        "initializeBuffer",
        "internalNameLookup",
        "parent",
        "name",
        "parent",
        "name",
        "compile",
        "environment",
        "options",
        "context",
        "asObject",
        "environment",
        "options",
        "asObject",
        "context",
        "context",
        "environment",
        "options",
        "environment",
        "environment",
        "environment",
        "environment",
        "i",
        "l",
        "opcodes",
        "i",
        "l",
        "i",
        "opcode",
        "opcodes",
        "i",
        "opcode",
        "firstLoc",
        "firstLoc",
        "opcode",
        "opcode",
        "opcode",
        "firstLoc",
        "_exception2",
        "asObject",
        "asObject",
        "fn",
        "ret",
        "ret",
        "_context",
        "_context",
        "i",
        "l",
        "programs",
        "i",
        "l",
        "i",
        "programs",
        "i",
        "ret",
        "i",
        "programs",
        "i",
        "decorators",
        "i",
        "ret",
        "i",
        "decorators",
        "i",
        "ret",
        "ret",
        "ret",
        "ret",
        "ret",
        "ret",
        "asObject",
        "ret",
        "ret",
        "ret",
        "ret",
        "options",
        "ret",
        "ret",
        "options",
        "ret",
        "ret",
        "ret",
        "ret",
        "ret",
        "ret",
        "ret",
        "fn",
        "preamble",
        "_codeGen2",
        "_codeGen2",
        "createFunctionContext",
        "asObject",
        "locals",
        "varDeclarations",
        "locals",
        "alias",
        "_this",
        "alias",
        "node",
        "node",
        "varDeclarations",
        "aliasCount",
        "alias",
        "node",
        "aliasCount",
        "varDeclarations",
        "varDeclarations",
        "asObject",
        "source",
        "source",
        "mergeSource",
        "varDeclarations",
        "line",
        "line",
        "bufferStart",
        "line",
        "bufferStart",
        "line",
        "bufferEnd",
        "line",
        "bufferStart",
        "sourceSeen",
        "appendFirst",
        "bufferStart",
        "bufferEnd",
        "bufferStart",
        "bufferEnd",
        "sourceSeen",
        "isSimple",
        "appendOnly",
        "appendOnly",
        "bufferStart",
        "bufferStart",
        "bufferEnd",
        "sourceSeen",
        "varDeclarations",
        "appendFirst",
        "bufferStart",
        "bufferStart",
        "bufferEnd",
        "varDeclarations",
        "varDeclarations",
        "appendFirst",
        "lookupPropertyFunctionVarDeclaration",
        "blockValue",
        "name",
        "name",
        "blockName",
        "blockHelperMissing",
        "ambiguousBlockValue",
        "current",
        "current",
        "blockHelperMissing",
        "appendContent",
        "content",
        "content",
        "content",
        "content",
        "append",
        "current",
        "current",
        "local",
        "local",
        "appendEscaped",
        "getContext",
        "depth",
        "depth",
        "pushContext",
        "lookupOnContext",
        "parts",
        "falsy",
        "strict",
        "scoped",
        "scoped",
        "parts",
        "i",
        "parts",
        "i",
        "falsy",
        "strict",
        "lookupBlockParam",
        "blockParamId",
        "parts",
        "blockParamId",
        "blockParamId",
        "parts",
        "lookupData",
        "depth",
        "parts",
        "strict",
        "depth",
        "depth",
        "parts",
        "strict",
        "resolvePath",
        "parts",
        "i",
        "falsy",
        "strict",
        "strictLookup",
        "strict",
        "parts",
        "i",
        "parts",
        "i",
        "len",
        "i",
        "current",
        "_this2",
        "current",
        "parts",
        "i",
        "falsy",
        "lookup",
        "current",
        "lookup",
        "resolvePossibleLambda",
        "pushStringParam",
        "emptyHash",
        "omitEmpty",
        "omitEmpty",
        "pushHash",
        "popHash",
        "hash",
        "hash",
        "hash",
        "hash",
        "pushString",
        "pushLiteral",
        "value",
        "value",
        "pushProgram",
        "guid",
        "guid",
        "guid",
        "registerDecorator",
        "paramSize",
        "name",
        "name",
        "name",
        "paramSize",
        "foundDecorator",
        "options",
        "invokeHelper",
        "paramSize",
        "name",
        "isSimple",
        "paramSize",
        "name",
        "isSimple",
        "possibleFunctionCalls",
        "helper",
        "possibleFunctionCalls",
        "nonHelper",
        "possibleFunctionCalls",
        "possibleFunctionCalls",
        "functionLookupCode",
        "helper",
        "functionCall",
        "itemsSeparatedBy",
        "items",
        "separator",
        "result",
        "items",
        "i",
        "items",
        "i",
        "result",
        "separator",
        "items",
        "i",
        "result",
        "invokeKnownHelper",
        "paramSize",
        "name",
        "paramSize",
        "name",
        "helper",
        "helper",
        "invokeAmbiguous",
        "name",
        "helperCall",
        "name",
        "helperCall",
        "name",
        "helperName",
        "nonHelper",
        "lookup",
        "lookup",
        "lookup",
        "helper",
        "helper",
        "helper",
        "invokePartial",
        "isDynamic",
        "name",
        "indent",
        "name",
        "isDynamic",
        "name",
        "options",
        "indent",
        "options",
        "indent",
        "options",
        "options",
        "options",
        "isDynamic",
        "name",
        "name",
        "options",
        "options",
        "options",
        "options",
        "assignToHash",
        "key",
        "id",
        "context",
        "context",
        "hash",
        "key",
        "context",
        "hash",
        "key",
        "id",
        "hash",
        "key",
        "id",
        "hash",
        "key",
        "value",
        "pushId",
        "name",
        "child",
        "name",
        "name",
        "child",
        "child",
        "name",
        "JavaScriptCompiler",
        "compileChildren",
        "environment",
        "options",
        "environment",
        "children",
        "i",
        "l",
        "i",
        "child",
        "children",
        "i",
        "compiler",
        "child",
        "existing",
        "child",
        "index",
        "child",
        "index",
        "index",
        "compiler",
        "child",
        "options",
        "index",
        "compiler",
        "index",
        "child",
        "compiler",
        "compiler",
        "child",
        "child",
        "child",
        "existing",
        "child",
        "existing",
        "existing",
        "existing",
        "matchExistingProgram",
        "child",
        "i",
        "len",
        "i",
        "i",
        "environment",
        "environment",
        "child",
        "environment",
        "programExpression",
        "guid",
        "guid",
        "child",
        "child",
        "programParams",
        "programParams",
        "programParams",
        "useRegister",
        "name",
        "name",
        "name",
        "name",
        "push",
        "expr",
        "expr",
        "Literal",
        "expr",
        "expr",
        "expr",
        "expr",
        "pushStackLiteral",
        "item",
        "Literal",
        "item",
        "pushSource",
        "source",
        "source",
        "source",
        "replaceStack",
        "callback",
        "_exception2",
        "top",
        "Literal",
        "stack",
        "top",
        "prefix",
        "stack",
        "usedLiteral",
        "createdStack",
        "prefix",
        "_name",
        "top",
        "stack",
        "callback",
        "stack",
        "usedLiteral",
        "createdStack",
        "prefix",
        "item",
        "incrStack",
        "topStackName",
        "flushInline",
        "inlineStack",
        "i",
        "len",
        "i",
        "inlineStack",
        "i",
        "entry",
        "Literal",
        "entry",
        "stack",
        "entry",
        "stack",
        "isInline",
        "popStack",
        "wrapped",
        "inline",
        "wrapped",
        "item",
        "Literal",
        "item",
        "inline",
        "_exception2",
        "item",
        "topStack",
        "stack",
        "stack",
        "item",
        "Literal",
        "item",
        "item",
        "contextName",
        "context",
        "context",
        "context",
        "context",
        "quotedString",
        "objectLiteral",
        "obj",
        "obj",
        "aliasable",
        "name",
        "name",
        "ret",
        "ret",
        "ret",
        "ret",
        "name",
        "name",
        "ret",
        "ret",
        "ret",
        "setupHelper",
        "paramSize",
        "name",
        "blockHelper",
        "name",
        "paramSize",
        "blockHelper",
        "name",
        "paramsInit",
        "foundHelper",
        "callContext",
        "setupParams",
        "helper",
        "paramSize",
        "objectArgs",
        "options",
        "helper",
        "options",
        "options",
        "options",
        "options",
        "program",
        "inverse",
        "options",
        "program",
        "options",
        "inverse",
        "i",
        "param",
        "i",
        "param",
        "ids",
        "i",
        "types",
        "i",
        "contexts",
        "i",
        "objectArgs",
        "options",
        "options",
        "ids",
        "options",
        "types",
        "options",
        "contexts",
        "options",
        "options",
        "options",
        "setupHelperArgs",
        "helper",
        "paramSize",
        "useRegister",
        "helper",
        "paramSize",
        "options",
        "options",
        "options",
        "useRegister",
        "options",
        "options",
        "options",
        "JavaScriptCompiler",
        "reservedWords",
        "i",
        "l",
        "i",
        "compilerWords",
        "reservedWords",
        "i",
        "JavaScriptCompiler",
        "name",
        "JavaScriptCompiler",
        "name",
        "name",
        "requireTerminal",
        "compiler",
        "parts",
        "i",
        "compiler",
        "parts",
        "requireTerminal",
        "len",
        "i",
        "len",
        "i",
        "stack",
        "compiler",
        "stack",
        "parts",
        "i",
        "requireTerminal",
        "compiler",
        "stack",
        "compiler",
        "parts",
        "i",
        "compiler",
        "stack",
        "exports",
        "JavaScriptCompiler",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "require",
        "define",
        "define",
        "require",
        "SourceNode",
        "SourceMap",
        "err",
        "SourceNode",
        "SourceNode",
        "line",
        "column",
        "srcFile",
        "chunks",
        "chunks",
        "chunks",
        "SourceNode",
        "add",
        "chunks",
        "_utils",
        "chunks",
        "chunks",
        "chunks",
        "chunks",
        "prepend",
        "chunks",
        "_utils",
        "chunks",
        "chunks",
        "chunks",
        "chunks",
        "toStringWithSourceMap",
        "toString",
        "chunk",
        "codeGen",
        "loc",
        "_utils",
        "chunk",
        "chunk",
        "i",
        "len",
        "i",
        "ret",
        "codeGen",
        "chunk",
        "i",
        "loc",
        "ret",
        "chunk",
        "chunk",
        "chunk",
        "chunk",
        "srcFile",
        "srcFile",
        "CodeGen",
        "isEmpty",
        "prepend",
        "source",
        "loc",
        "source",
        "loc",
        "push",
        "source",
        "loc",
        "source",
        "loc",
        "merge",
        "line",
        "source",
        "line",
        "source",
        "each",
        "iter",
        "i",
        "len",
        "i",
        "iter",
        "i",
        "empty",
        "SourceNode",
        "loc",
        "loc",
        "wrap",
        "chunk",
        "arguments",
        "arguments",
        "arguments",
        "chunk",
        "SourceNode",
        "chunk",
        "chunk",
        "castChunk",
        "chunk",
        "loc",
        "SourceNode",
        "loc",
        "loc",
        "chunk",
        "functionCall",
        "fn",
        "fn",
        "quotedString",
        "objectLiteral",
        "obj",
        "obj",
        "key",
        "castChunk",
        "obj",
        "key",
        "_this",
        "value",
        "pairs",
        "_this",
        "key",
        "value",
        "pairs",
        "ret",
        "ret",
        "ret",
        "generateList",
        "entries",
        "entries",
        "i",
        "len",
        "i",
        "i",
        "ret",
        "ret",
        "castChunk",
        "entries",
        "i",
        "ret",
        "generateArray",
        "entries",
        "entries",
        "ret",
        "ret",
        "ret",
        "exports",
        "CodeGen",
        "exports",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "require",
        "exports",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "__globalThis",
        "require",
        "require",
        "require",
        "require",
        "aArgs",
        "aArgs",
        "aArgs",
        "util",
        "aArgs",
        "util",
        "aArgs",
        "util",
        "aArgs",
        "ArraySet",
        "ArraySet",
        "MappingList",
        "SourceMapGenerator",
        "SourceMapGenerator",
        "SourceMapGenerator_fromSourceMap",
        "aSourceMapConsumer",
        "aSourceMapConsumer",
        "SourceMapGenerator",
        "aSourceMapConsumer",
        "sourceRoot",
        "aSourceMapConsumer",
        "mapping",
        "mapping",
        "mapping",
        "mapping",
        "newMapping",
        "mapping",
        "sourceRoot",
        "newMapping",
        "util",
        "sourceRoot",
        "newMapping",
        "newMapping",
        "mapping",
        "mapping",
        "mapping",
        "newMapping",
        "mapping",
        "generator",
        "newMapping",
        "aSourceMapConsumer",
        "sourceFile",
        "sourceRoot",
        "sourceRelative",
        "util",
        "sourceRoot",
        "sourceFile",
        "generator",
        "sourceRelative",
        "generator",
        "sourceRelative",
        "aSourceMapConsumer",
        "sourceFile",
        "content",
        "generator",
        "sourceFile",
        "content",
        "generator",
        "SourceMapGenerator",
        "SourceMapGenerator_addMapping",
        "aArgs",
        "util",
        "aArgs",
        "util",
        "aArgs",
        "util",
        "aArgs",
        "util",
        "aArgs",
        "generated",
        "original",
        "source",
        "name",
        "source",
        "source",
        "source",
        "source",
        "source",
        "name",
        "name",
        "name",
        "name",
        "name",
        "generated",
        "generated",
        "original",
        "original",
        "original",
        "original",
        "source",
        "name",
        "SourceMapGenerator",
        "SourceMapGenerator_setSourceContent",
        "aSourceFile",
        "aSourceContent",
        "source",
        "util",
        "source",
        "aSourceContent",
        "util",
        "source",
        "aSourceContent",
        "util",
        "source",
        "SourceMapGenerator",
        "SourceMapGenerator_applySourceMap",
        "aSourceMapConsumer",
        "aSourceFile",
        "aSourceMapPath",
        "aSourceFile",
        "aSourceMapConsumer",
        "sourceFile",
        "aSourceMapConsumer",
        "sourceRoot",
        "sourceFile",
        "util",
        "sourceRoot",
        "sourceFile",
        "ArraySet",
        "ArraySet",
        "mapping",
        "mapping",
        "sourceFile",
        "mapping",
        "aSourceMapConsumer",
        "mapping",
        "mapping",
        "original",
        "mapping",
        "original",
        "aSourceMapPath",
        "mapping",
        "util",
        "aSourceMapPath",
        "mapping",
        "sourceRoot",
        "mapping",
        "util",
        "sourceRoot",
        "mapping",
        "mapping",
        "original",
        "mapping",
        "original",
        "original",
        "mapping",
        "original",
        "mapping",
        "source",
        "newSources",
        "source",
        "newSources",
        "source",
        "mapping",
        "name",
        "newNames",
        "name",
        "newNames",
        "name",
        "newSources",
        "newNames",
        "aSourceMapConsumer",
        "sourceFile",
        "aSourceMapConsumer",
        "sourceFile",
        "content",
        "aSourceMapPath",
        "sourceFile",
        "util",
        "aSourceMapPath",
        "sourceFile",
        "sourceRoot",
        "sourceFile",
        "util",
        "sourceRoot",
        "sourceFile",
        "sourceFile",
        "content",
        "SourceMapGenerator",
        "SourceMapGenerator_validateMapping",
        "aGenerated",
        "aOriginal",
        "aSource",
        "aName",
        "aOriginal",
        "aOriginal",
        "aOriginal",
        "aGenerated",
        "aGenerated",
        "aGenerated",
        "aGenerated",
        "aGenerated",
        "aOriginal",
        "aSource",
        "aName",
        "aGenerated",
        "aGenerated",
        "aGenerated",
        "aOriginal",
        "aOriginal",
        "aOriginal",
        "aGenerated",
        "aGenerated",
        "aOriginal",
        "aOriginal",
        "aSource",
        "aGenerated",
        "aSource",
        "aOriginal",
        "aName",
        "SourceMapGenerator",
        "SourceMapGenerator_serializeMappings",
        "mappings",
        "i",
        "len",
        "i",
        "mapping",
        "mappings",
        "i",
        "next",
        "mapping",
        "previousGeneratedLine",
        "previousGeneratedColumn",
        "mapping",
        "previousGeneratedLine",
        "next",
        "previousGeneratedLine",
        "i",
        "util",
        "mapping",
        "mappings",
        "i",
        "next",
        "next",
        "base64VLQ",
        "mapping",
        "previousGeneratedColumn",
        "previousGeneratedColumn",
        "mapping",
        "mapping",
        "sourceIdx",
        "mapping",
        "next",
        "base64VLQ",
        "sourceIdx",
        "previousSource",
        "previousSource",
        "sourceIdx",
        "next",
        "base64VLQ",
        "mapping",
        "previousOriginalLine",
        "previousOriginalLine",
        "mapping",
        "next",
        "base64VLQ",
        "mapping",
        "previousOriginalColumn",
        "previousOriginalColumn",
        "mapping",
        "mapping",
        "nameIdx",
        "mapping",
        "next",
        "base64VLQ",
        "nameIdx",
        "previousName",
        "previousName",
        "nameIdx",
        "result",
        "next",
        "result",
        "SourceMapGenerator",
        "SourceMapGenerator_generateSourcesContent",
        "aSources",
        "aSourceRoot",
        "aSources",
        "source",
        "aSourceRoot",
        "source",
        "util",
        "aSourceRoot",
        "source",
        "util",
        "source",
        "key",
        "key",
        "SourceMapGenerator",
        "SourceMapGenerator_toJSON",
        "SourceMapGenerator",
        "SourceMapGenerator_toString",
        "exports",
        "SourceMapGenerator",
        "require",
        "exports",
        "__globalThis",
        "require",
        "VLQ_BASE_SHIFT",
        "VLQ_BASE",
        "aValue",
        "aValue",
        "aValue",
        "aValue",
        "aValue",
        "aValue",
        "aValue",
        "isNegative",
        "shifted",
        "shifted",
        "exports",
        "base64VLQ_encode",
        "aValue",
        "toVLQSigned",
        "aValue",
        "digit",
        "vlq",
        "VLQ_BASE_MASK",
        "vlq",
        "VLQ_BASE_SHIFT",
        "vlq",
        "digit",
        "VLQ_CONTINUATION_BIT",
        "encoded",
        "base64",
        "digit",
        "vlq",
        "encoded",
        "exports",
        "base64VLQ_decode",
        "aStr",
        "aIndex",
        "aOutParam",
        "aStr",
        "aIndex",
        "strLen",
        "digit",
        "base64",
        "aStr",
        "aIndex",
        "digit",
        "aStr",
        "aIndex",
        "continuation",
        "digit",
        "VLQ_CONTINUATION_BIT",
        "digit",
        "VLQ_BASE_MASK",
        "result",
        "result",
        "digit",
        "shift",
        "shift",
        "VLQ_BASE_SHIFT",
        "continuation",
        "aOutParam",
        "fromVLQSigned",
        "result",
        "aOutParam",
        "aIndex",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "number",
        "number",
        "number",
        "intToCharMap",
        "intToCharMap",
        "number",
        "number",
        "exports",
        "charCode",
        "bigA",
        "charCode",
        "charCode",
        "bigZ",
        "charCode",
        "bigA",
        "littleA",
        "charCode",
        "charCode",
        "littleZ",
        "charCode",
        "littleA",
        "littleOffset",
        "zero",
        "charCode",
        "charCode",
        "nine",
        "charCode",
        "zero",
        "numberOffset",
        "charCode",
        "plus",
        "charCode",
        "slash",
        "require",
        "exports",
        "__globalThis",
        "aArgs",
        "aName",
        "aDefaultValue",
        "aName",
        "aArgs",
        "aArgs",
        "aName",
        "arguments",
        "aDefaultValue",
        "aName",
        "exports",
        "getArg",
        "aUrl",
        "aUrl",
        "urlRegexp",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "exports",
        "urlParse",
        "aParsedUrl",
        "aParsedUrl",
        "url",
        "aParsedUrl",
        "url",
        "aParsedUrl",
        "url",
        "aParsedUrl",
        "aParsedUrl",
        "url",
        "aParsedUrl",
        "aParsedUrl",
        "url",
        "aParsedUrl",
        "aParsedUrl",
        "url",
        "aParsedUrl",
        "url",
        "exports",
        "urlGenerate",
        "aPath",
        "urlParse",
        "aPath",
        "url",
        "url",
        "aPath",
        "path",
        "url",
        "exports",
        "path",
        "path",
        "parts",
        "i",
        "i",
        "part",
        "parts",
        "i",
        "part",
        "parts",
        "i",
        "part",
        "up",
        "up",
        "part",
        "parts",
        "i",
        "up",
        "up",
        "parts",
        "i",
        "up",
        "path",
        "parts",
        "path",
        "path",
        "isAbsolute",
        "url",
        "url",
        "path",
        "urlGenerate",
        "url",
        "path",
        "exports",
        "normalize",
        "aRoot",
        "aPath",
        "aRoot",
        "aRoot",
        "aPath",
        "aPath",
        "urlParse",
        "aPath",
        "urlParse",
        "aRoot",
        "aRootUrl",
        "aRoot",
        "aRootUrl",
        "aPathUrl",
        "aPathUrl",
        "aRootUrl",
        "aPathUrl",
        "aRootUrl",
        "urlGenerate",
        "aPathUrl",
        "aPathUrl",
        "aPath",
        "dataUrlRegexp",
        "aPath",
        "aRootUrl",
        "aRootUrl",
        "aRootUrl",
        "aRootUrl",
        "aPath",
        "urlGenerate",
        "aRootUrl",
        "aPath",
        "aPath",
        "normalize",
        "aRoot",
        "aPath",
        "aRootUrl",
        "aRootUrl",
        "joined",
        "urlGenerate",
        "aRootUrl",
        "joined",
        "exports",
        "join",
        "exports",
        "aPath",
        "aPath",
        "urlRegexp",
        "aPath",
        "aRoot",
        "aPath",
        "aRoot",
        "aRoot",
        "aRoot",
        "aRoot",
        "aPath",
        "aRoot",
        "aRoot",
        "index",
        "aPath",
        "aRoot",
        "aRoot",
        "index",
        "aRoot",
        "aPath",
        "level",
        "level",
        "aPath",
        "aRoot",
        "exports",
        "relative",
        "obj",
        "s",
        "s",
        "aStr",
        "isProtoString",
        "aStr",
        "aStr",
        "aStr",
        "exports",
        "supportsNullProto",
        "identity",
        "toSetString",
        "aStr",
        "isProtoString",
        "aStr",
        "aStr",
        "aStr",
        "exports",
        "supportsNullProto",
        "identity",
        "fromSetString",
        "s",
        "s",
        "s",
        "length",
        "s",
        "length",
        "s",
        "length",
        "s",
        "length",
        "s",
        "length",
        "s",
        "length",
        "s",
        "length",
        "s",
        "length",
        "s",
        "length",
        "s",
        "length",
        "length",
        "i",
        "i",
        "s",
        "i",
        "mappingA",
        "mappingB",
        "onlyCompareOriginal",
        "strcmp",
        "mappingA",
        "mappingB",
        "cmp",
        "cmp",
        "cmp",
        "mappingA",
        "mappingB",
        "cmp",
        "cmp",
        "cmp",
        "mappingA",
        "mappingB",
        "cmp",
        "onlyCompareOriginal",
        "cmp",
        "cmp",
        "mappingA",
        "mappingB",
        "cmp",
        "cmp",
        "cmp",
        "mappingA",
        "mappingB",
        "cmp",
        "cmp",
        "strcmp",
        "mappingA",
        "mappingB",
        "exports",
        "compareByOriginalPositions",
        "mappingA",
        "mappingB",
        "onlyCompareGenerated",
        "mappingA",
        "mappingB",
        "cmp",
        "cmp",
        "cmp",
        "mappingA",
        "mappingB",
        "cmp",
        "onlyCompareGenerated",
        "cmp",
        "cmp",
        "strcmp",
        "mappingA",
        "mappingB",
        "cmp",
        "cmp",
        "cmp",
        "mappingA",
        "mappingB",
        "cmp",
        "cmp",
        "cmp",
        "mappingA",
        "mappingB",
        "cmp",
        "cmp",
        "strcmp",
        "mappingA",
        "mappingB",
        "exports",
        "compareByGeneratedPositionsDeflated",
        "aStr1",
        "aStr2",
        "aStr1",
        "aStr2",
        "aStr1",
        "aStr2",
        "aStr1",
        "aStr2",
        "mappingA",
        "mappingB",
        "mappingA",
        "mappingB",
        "cmp",
        "cmp",
        "cmp",
        "mappingA",
        "mappingB",
        "cmp",
        "cmp",
        "cmp",
        "strcmp",
        "mappingA",
        "mappingB",
        "cmp",
        "cmp",
        "cmp",
        "mappingA",
        "mappingB",
        "cmp",
        "cmp",
        "cmp",
        "mappingA",
        "mappingB",
        "cmp",
        "cmp",
        "strcmp",
        "mappingA",
        "mappingB",
        "exports",
        "compareByGeneratedPositionsInflated",
        "exports",
        "parseSourceMapInput",
        "sourceRoot",
        "sourceURL",
        "sourceMapURL",
        "sourceURL",
        "sourceURL",
        "sourceRoot",
        "sourceRoot",
        "sourceRoot",
        "sourceURL",
        "sourceRoot",
        "sourceURL",
        "sourceRoot",
        "sourceURL",
        "sourceMapURL",
        "urlParse",
        "sourceMapURL",
        "parsed",
        "parsed",
        "parsed",
        "index",
        "parsed",
        "parsed",
        "index",
        "sourceURL",
        "join",
        "urlGenerate",
        "parsed",
        "sourceURL",
        "normalize",
        "sourceURL",
        "exports",
        "computeSourceURL",
        "require",
        "exports",
        "__globalThis",
        "require",
        "hasNativeMap",
        "ArraySet",
        "ArraySet_fromArray",
        "aArray",
        "aAllowDuplicates",
        "ArraySet",
        "aArray",
        "i",
        "len",
        "i",
        "aArray",
        "i",
        "aAllowDuplicates",
        "ArraySet",
        "ArraySet_size",
        "hasNativeMap",
        "ArraySet",
        "ArraySet_add",
        "aStr",
        "aAllowDuplicates",
        "hasNativeMap",
        "aStr",
        "util",
        "aStr",
        "hasNativeMap",
        "aStr",
        "has",
        "sStr",
        "isDuplicate",
        "aAllowDuplicates",
        "aStr",
        "isDuplicate",
        "hasNativeMap",
        "aStr",
        "idx",
        "sStr",
        "idx",
        "ArraySet",
        "ArraySet_has",
        "aStr",
        "hasNativeMap",
        "aStr",
        "util",
        "aStr",
        "has",
        "sStr",
        "ArraySet",
        "ArraySet_indexOf",
        "aStr",
        "hasNativeMap",
        "aStr",
        "idx",
        "idx",
        "util",
        "aStr",
        "has",
        "sStr",
        "sStr",
        "aStr",
        "ArraySet",
        "ArraySet_at",
        "aIdx",
        "aIdx",
        "aIdx",
        "aIdx",
        "aIdx",
        "ArraySet",
        "ArraySet_toArray",
        "exports",
        "ArraySet",
        "require",
        "exports",
        "__globalThis",
        "require",
        "mappingA",
        "mappingB",
        "mappingA",
        "mappingB",
        "mappingA",
        "mappingB",
        "lineB",
        "lineA",
        "lineB",
        "lineA",
        "columnB",
        "columnA",
        "util",
        "mappingA",
        "mappingB",
        "MappingList",
        "MappingList_forEach",
        "aCallback",
        "aThisArg",
        "aCallback",
        "aThisArg",
        "MappingList",
        "MappingList_add",
        "aMapping",
        "generatedPositionAfter",
        "aMapping",
        "aMapping",
        "aMapping",
        "aMapping",
        "MappingList",
        "MappingList_toArray",
        "util",
        "exports",
        "MappingList",
        "require",
        "exports",
        "__globalThis",
        "require",
        "require",
        "require",
        "require",
        "require",
        "aSourceMap",
        "aSourceMapURL",
        "aSourceMap",
        "sourceMap",
        "util",
        "aSourceMap",
        "sourceMap",
        "IndexedSourceMapConsumer",
        "sourceMap",
        "aSourceMapURL",
        "BasicSourceMapConsumer",
        "sourceMap",
        "aSourceMapURL",
        "SourceMapConsumer",
        "aSourceMap",
        "aSourceMapURL",
        "BasicSourceMapConsumer",
        "aSourceMap",
        "aSourceMapURL",
        "SourceMapConsumer",
        "SourceMapConsumer",
        "SourceMapConsumer",
        "SourceMapConsumer",
        "SourceMapConsumer",
        "SourceMapConsumer",
        "SourceMapConsumer_charIsMappingSeparator",
        "aStr",
        "index",
        "aStr",
        "index",
        "c",
        "c",
        "SourceMapConsumer",
        "SourceMapConsumer_parseMappings",
        "aStr",
        "aSourceRoot",
        "SourceMapConsumer",
        "SourceMapConsumer",
        "SourceMapConsumer",
        "SourceMapConsumer",
        "SourceMapConsumer",
        "SourceMapConsumer_eachMapping",
        "aCallback",
        "aContext",
        "aOrder",
        "aContext",
        "aOrder",
        "SourceMapConsumer",
        "order",
        "SourceMapConsumer",
        "mappings",
        "SourceMapConsumer",
        "mappings",
        "mappings",
        "mapping",
        "mapping",
        "mapping",
        "source",
        "util",
        "sourceRoot",
        "source",
        "source",
        "mapping",
        "mapping",
        "mapping",
        "mapping",
        "mapping",
        "mapping",
        "aCallback",
        "context",
        "SourceMapConsumer",
        "SourceMapConsumer_allGeneratedPositionsFor",
        "aArgs",
        "util",
        "aArgs",
        "util",
        "aArgs",
        "line",
        "util",
        "aArgs",
        "needle",
        "needle",
        "needle",
        "needle",
        "util",
        "binarySearch",
        "index",
        "index",
        "aArgs",
        "mapping",
        "mapping",
        "mapping",
        "originalLine",
        "mappings",
        "util",
        "mapping",
        "util",
        "mapping",
        "util",
        "mapping",
        "mapping",
        "index",
        "mapping",
        "mapping",
        "mapping",
        "line",
        "mapping",
        "originalColumn",
        "mappings",
        "util",
        "mapping",
        "util",
        "mapping",
        "util",
        "mapping",
        "mapping",
        "index",
        "mappings",
        "exports",
        "SourceMapConsumer",
        "aSourceMap",
        "aSourceMapURL",
        "aSourceMap",
        "sourceMap",
        "util",
        "aSourceMap",
        "util",
        "sourceMap",
        "util",
        "sourceMap",
        "util",
        "sourceMap",
        "util",
        "sourceMap",
        "util",
        "sourceMap",
        "util",
        "sourceMap",
        "util",
        "sourceMap",
        "version",
        "version",
        "sourceRoot",
        "sourceRoot",
        "util",
        "sourceRoot",
        "sources",
        "sources",
        "util",
        "source",
        "sourceRoot",
        "util",
        "sourceRoot",
        "util",
        "source",
        "util",
        "sourceRoot",
        "source",
        "source",
        "ArraySet",
        "names",
        "ArraySet",
        "sources",
        "s",
        "util",
        "sourceRoot",
        "s",
        "aSourceMapURL",
        "sourceRoot",
        "sourcesContent",
        "mappings",
        "aSourceMapURL",
        "file",
        "BasicSourceMapConsumer",
        "SourceMapConsumer",
        "BasicSourceMapConsumer",
        "SourceMapConsumer",
        "BasicSourceMapConsumer",
        "aSource",
        "relativeSource",
        "util",
        "relativeSource",
        "relativeSource",
        "relativeSource",
        "i",
        "i",
        "i",
        "i",
        "aSource",
        "i",
        "BasicSourceMapConsumer",
        "SourceMapConsumer_fromSourceMap",
        "aSourceMap",
        "aSourceMapURL",
        "BasicSourceMapConsumer",
        "smc",
        "ArraySet",
        "aSourceMap",
        "smc",
        "ArraySet",
        "aSourceMap",
        "smc",
        "aSourceMap",
        "smc",
        "aSourceMap",
        "smc",
        "smc",
        "smc",
        "aSourceMap",
        "smc",
        "aSourceMapURL",
        "smc",
        "smc",
        "s",
        "util",
        "smc",
        "s",
        "aSourceMapURL",
        "aSourceMap",
        "smc",
        "smc",
        "generatedMappings",
        "i",
        "length",
        "i",
        "generatedMappings",
        "i",
        "Mapping",
        "destMapping",
        "srcMapping",
        "destMapping",
        "srcMapping",
        "srcMapping",
        "destMapping",
        "sources",
        "srcMapping",
        "destMapping",
        "srcMapping",
        "destMapping",
        "srcMapping",
        "srcMapping",
        "destMapping",
        "names",
        "srcMapping",
        "destOriginalMappings",
        "destMapping",
        "destGeneratedMappings",
        "destMapping",
        "quickSort",
        "smc",
        "util",
        "smc",
        "BasicSourceMapConsumer",
        "BasicSourceMapConsumer",
        "BasicSourceMapConsumer",
        "SourceMapConsumer_parseMappings",
        "aStr",
        "aSourceRoot",
        "aStr",
        "index",
        "length",
        "aStr",
        "index",
        "generatedLine",
        "index",
        "previousGeneratedColumn",
        "aStr",
        "index",
        "index",
        "mapping",
        "Mapping",
        "mapping",
        "generatedLine",
        "end",
        "index",
        "end",
        "length",
        "end",
        "aStr",
        "end",
        "aStr",
        "index",
        "end",
        "segment",
        "cachedSegments",
        "segment",
        "index",
        "segment",
        "index",
        "end",
        "base64VLQ",
        "aStr",
        "index",
        "temp",
        "value",
        "temp",
        "index",
        "temp",
        "segment",
        "value",
        "segment",
        "segment",
        "cachedSegments",
        "segment",
        "mapping",
        "previousGeneratedColumn",
        "segment",
        "previousGeneratedColumn",
        "mapping",
        "segment",
        "mapping",
        "previousSource",
        "segment",
        "previousSource",
        "segment",
        "mapping",
        "previousOriginalLine",
        "segment",
        "previousOriginalLine",
        "mapping",
        "mapping",
        "mapping",
        "previousOriginalColumn",
        "segment",
        "previousOriginalColumn",
        "mapping",
        "segment",
        "mapping",
        "previousName",
        "segment",
        "previousName",
        "segment",
        "generatedMappings",
        "mapping",
        "mapping",
        "originalMappings",
        "mapping",
        "quickSort",
        "generatedMappings",
        "util",
        "generatedMappings",
        "quickSort",
        "originalMappings",
        "util",
        "originalMappings",
        "BasicSourceMapConsumer",
        "SourceMapConsumer_findMapping",
        "aNeedle",
        "aMappings",
        "aLineName",
        "aColumnName",
        "aComparator",
        "aBias",
        "aNeedle",
        "aLineName",
        "aNeedle",
        "aLineName",
        "aNeedle",
        "aColumnName",
        "aNeedle",
        "aColumnName",
        "binarySearch",
        "aNeedle",
        "aMappings",
        "aComparator",
        "aBias",
        "BasicSourceMapConsumer",
        "SourceMapConsumer_computeColumnSpans",
        "index",
        "index",
        "index",
        "index",
        "index",
        "mapping",
        "nextMapping",
        "mapping",
        "nextMapping",
        "mapping",
        "Infinity",
        "BasicSourceMapConsumer",
        "SourceMapConsumer_originalPositionFor",
        "aArgs",
        "util",
        "aArgs",
        "util",
        "aArgs",
        "needle",
        "util",
        "util",
        "aArgs",
        "SourceMapConsumer",
        "index",
        "index",
        "mapping",
        "needle",
        "util",
        "mapping",
        "source",
        "source",
        "source",
        "source",
        "util",
        "source",
        "util",
        "mapping",
        "name",
        "name",
        "name",
        "source",
        "util",
        "mapping",
        "util",
        "mapping",
        "name",
        "BasicSourceMapConsumer",
        "BasicSourceMapConsumer_hasContentsOfAllSources",
        "sc",
        "sc",
        "BasicSourceMapConsumer",
        "SourceMapConsumer_sourceContentFor",
        "aSource",
        "nullOnMissing",
        "aSource",
        "index",
        "index",
        "relativeSource",
        "util",
        "relativeSource",
        "url",
        "util",
        "relativeSource",
        "url",
        "fileUriAbsPath",
        "fileUriAbsPath",
        "url",
        "url",
        "relativeSource",
        "relativeSource",
        "nullOnMissing",
        "relativeSource",
        "BasicSourceMapConsumer",
        "SourceMapConsumer_generatedPositionFor",
        "aArgs",
        "util",
        "aArgs",
        "source",
        "source",
        "source",
        "source",
        "util",
        "aArgs",
        "util",
        "aArgs",
        "needle",
        "util",
        "util",
        "aArgs",
        "SourceMapConsumer",
        "index",
        "index",
        "mapping",
        "needle",
        "util",
        "mapping",
        "util",
        "mapping",
        "util",
        "mapping",
        "exports",
        "BasicSourceMapConsumer",
        "aSourceMap",
        "aSourceMapURL",
        "aSourceMap",
        "sourceMap",
        "util",
        "aSourceMap",
        "util",
        "sourceMap",
        "util",
        "sourceMap",
        "version",
        "version",
        "ArraySet",
        "ArraySet",
        "sections",
        "s",
        "s",
        "util",
        "s",
        "util",
        "offset",
        "util",
        "offset",
        "offsetLine",
        "lastOffset",
        "offsetLine",
        "lastOffset",
        "offsetColumn",
        "lastOffset",
        "lastOffset",
        "offset",
        "offsetLine",
        "offsetColumn",
        "SourceMapConsumer",
        "util",
        "s",
        "aSourceMapURL",
        "IndexedSourceMapConsumer",
        "SourceMapConsumer",
        "IndexedSourceMapConsumer",
        "SourceMapConsumer",
        "IndexedSourceMapConsumer",
        "IndexedSourceMapConsumer",
        "i",
        "i",
        "j",
        "i",
        "j",
        "sources",
        "i",
        "j",
        "sources",
        "IndexedSourceMapConsumer",
        "IndexedSourceMapConsumer_originalPositionFor",
        "aArgs",
        "util",
        "aArgs",
        "util",
        "aArgs",
        "binarySearch",
        "needle",
        "needle",
        "section",
        "needle",
        "section",
        "cmp",
        "cmp",
        "needle",
        "section",
        "sectionIndex",
        "section",
        "section",
        "needle",
        "section",
        "needle",
        "section",
        "needle",
        "section",
        "aArgs",
        "IndexedSourceMapConsumer",
        "IndexedSourceMapConsumer_hasContentsOfAllSources",
        "s",
        "s",
        "IndexedSourceMapConsumer",
        "IndexedSourceMapConsumer_sourceContentFor",
        "aSource",
        "nullOnMissing",
        "i",
        "i",
        "i",
        "section",
        "aSource",
        "content",
        "content",
        "nullOnMissing",
        "aSource",
        "IndexedSourceMapConsumer",
        "IndexedSourceMapConsumer_generatedPositionFor",
        "aArgs",
        "i",
        "i",
        "i",
        "section",
        "util",
        "aArgs",
        "section",
        "aArgs",
        "generatedPosition",
        "generatedPosition",
        "section",
        "generatedPosition",
        "section",
        "generatedPosition",
        "section",
        "ret",
        "IndexedSourceMapConsumer",
        "IndexedSourceMapConsumer_parseMappings",
        "aStr",
        "aSourceRoot",
        "i",
        "i",
        "i",
        "section",
        "j",
        "sectionMappings",
        "j",
        "sectionMappings",
        "j",
        "section",
        "mapping",
        "source",
        "util",
        "section",
        "source",
        "source",
        "source",
        "source",
        "mapping",
        "name",
        "section",
        "mapping",
        "name",
        "name",
        "name",
        "source",
        "mapping",
        "section",
        "mapping",
        "section",
        "mapping",
        "section",
        "mapping",
        "mapping",
        "name",
        "adjustedMapping",
        "adjustedMapping",
        "adjustedMapping",
        "quickSort",
        "util",
        "quickSort",
        "util",
        "exports",
        "IndexedSourceMapConsumer",
        "require",
        "exports",
        "__globalThis",
        "exports",
        "exports",
        "aLow",
        "aHigh",
        "aNeedle",
        "aHaystack",
        "aCompare",
        "aBias",
        "aHigh",
        "aLow",
        "aLow",
        "aCompare",
        "aNeedle",
        "aHaystack",
        "mid",
        "cmp",
        "mid",
        "cmp",
        "aHigh",
        "mid",
        "recursiveSearch",
        "mid",
        "aHigh",
        "aNeedle",
        "aHaystack",
        "aCompare",
        "aBias",
        "aBias",
        "exports",
        "aHigh",
        "aHaystack",
        "aHigh",
        "mid",
        "mid",
        "aLow",
        "recursiveSearch",
        "aLow",
        "mid",
        "aNeedle",
        "aHaystack",
        "aCompare",
        "aBias",
        "aBias",
        "exports",
        "mid",
        "aLow",
        "aLow",
        "exports",
        "search",
        "aNeedle",
        "aHaystack",
        "aCompare",
        "aBias",
        "aHaystack",
        "recursiveSearch",
        "aHaystack",
        "aNeedle",
        "aHaystack",
        "aCompare",
        "aBias",
        "exports",
        "index",
        "index",
        "aCompare",
        "aHaystack",
        "index",
        "aHaystack",
        "index",
        "index",
        "index",
        "require",
        "exports",
        "__globalThis",
        "ary",
        "x",
        "y",
        "ary",
        "x",
        "ary",
        "x",
        "ary",
        "y",
        "ary",
        "y",
        "temp",
        "low",
        "high",
        "low",
        "high",
        "low",
        "ary",
        "comparator",
        "p",
        "r",
        "p",
        "r",
        "randomIntInRange",
        "p",
        "r",
        "p",
        "swap",
        "ary",
        "pivotIndex",
        "r",
        "ary",
        "r",
        "j",
        "r",
        "j",
        "comparator",
        "ary",
        "j",
        "pivot",
        "i",
        "swap",
        "ary",
        "i",
        "j",
        "swap",
        "ary",
        "i",
        "j",
        "i",
        "doQuickSort",
        "ary",
        "comparator",
        "p",
        "q",
        "doQuickSort",
        "ary",
        "comparator",
        "q",
        "r",
        "exports",
        "ary",
        "comparator",
        "doQuickSort",
        "ary",
        "comparator",
        "ary",
        "require",
        "exports",
        "__globalThis",
        "require",
        "require",
        "aLine",
        "aColumn",
        "aSource",
        "aChunks",
        "aName",
        "aLine",
        "aLine",
        "aColumn",
        "aColumn",
        "aSource",
        "aSource",
        "aName",
        "aName",
        "isSourceNode",
        "aChunks",
        "aChunks",
        "SourceNode",
        "SourceNode_fromStringWithSourceMap",
        "aGeneratedCode",
        "aSourceMapConsumer",
        "aRelativePath",
        "SourceNode",
        "aGeneratedCode",
        "REGEX_NEWLINE",
        "getNextLine",
        "getNextLine",
        "lineContents",
        "newLine",
        "remainingLinesIndex",
        "remainingLines",
        "remainingLines",
        "remainingLinesIndex",
        "aSourceMapConsumer",
        "mapping",
        "lastMapping",
        "lastGeneratedLine",
        "mapping",
        "addMappingWithCode",
        "lastMapping",
        "shiftNextLine",
        "lastGeneratedLine",
        "lastGeneratedColumn",
        "remainingLines",
        "remainingLinesIndex",
        "nextLine",
        "mapping",
        "lastGeneratedColumn",
        "remainingLines",
        "remainingLinesIndex",
        "nextLine",
        "mapping",
        "lastGeneratedColumn",
        "lastGeneratedColumn",
        "mapping",
        "addMappingWithCode",
        "lastMapping",
        "code",
        "lastMapping",
        "mapping",
        "lastGeneratedLine",
        "mapping",
        "node",
        "shiftNextLine",
        "lastGeneratedLine",
        "lastGeneratedColumn",
        "mapping",
        "remainingLines",
        "remainingLinesIndex",
        "node",
        "nextLine",
        "mapping",
        "remainingLines",
        "remainingLinesIndex",
        "nextLine",
        "mapping",
        "lastGeneratedColumn",
        "mapping",
        "lastMapping",
        "mapping",
        "remainingLinesIndex",
        "remainingLines",
        "lastMapping",
        "addMappingWithCode",
        "lastMapping",
        "shiftNextLine",
        "node",
        "remainingLines",
        "remainingLinesIndex",
        "aSourceMapConsumer",
        "sourceFile",
        "aSourceMapConsumer",
        "sourceFile",
        "content",
        "aRelativePath",
        "sourceFile",
        "util",
        "aRelativePath",
        "sourceFile",
        "node",
        "sourceFile",
        "content",
        "node",
        "mapping",
        "code",
        "mapping",
        "mapping",
        "node",
        "code",
        "aRelativePath",
        "util",
        "aRelativePath",
        "mapping",
        "mapping",
        "node",
        "SourceNode",
        "mapping",
        "mapping",
        "source",
        "code",
        "mapping",
        "SourceNode",
        "SourceNode_add",
        "aChunk",
        "aChunk",
        "aChunk",
        "chunk",
        "chunk",
        "aChunk",
        "isSourceNode",
        "aChunk",
        "aChunk",
        "aChunk",
        "aChunk",
        "SourceNode",
        "SourceNode_prepend",
        "aChunk",
        "aChunk",
        "aChunk",
        "i",
        "i",
        "aChunk",
        "i",
        "aChunk",
        "isSourceNode",
        "aChunk",
        "aChunk",
        "aChunk",
        "SourceNode",
        "SourceNode_walk",
        "aFn",
        "i",
        "len",
        "i",
        "chunk",
        "i",
        "chunk",
        "isSourceNode",
        "chunk",
        "aFn",
        "chunk",
        "aFn",
        "chunk",
        "SourceNode",
        "SourceNode_join",
        "aSep",
        "len",
        "newChildren",
        "i",
        "i",
        "len",
        "i",
        "newChildren",
        "i",
        "newChildren",
        "aSep",
        "newChildren",
        "i",
        "newChildren",
        "SourceNode",
        "SourceNode_replaceRight",
        "aPattern",
        "aReplacement",
        "lastChild",
        "isSourceNode",
        "lastChild",
        "aPattern",
        "aReplacement",
        "lastChild",
        "lastChild",
        "aPattern",
        "aReplacement",
        "aPattern",
        "aReplacement",
        "SourceNode",
        "SourceNode_setSourceContent",
        "aSourceFile",
        "aSourceContent",
        "util",
        "aSourceFile",
        "aSourceContent",
        "SourceNode",
        "SourceNode_walkSourceContents",
        "aFn",
        "i",
        "len",
        "i",
        "i",
        "isSourceNode",
        "i",
        "aFn",
        "sources",
        "i",
        "len",
        "i",
        "aFn",
        "util",
        "sources",
        "i",
        "sources",
        "i",
        "SourceNode",
        "SourceNode_toString",
        "chunk",
        "chunk",
        "SourceNode",
        "SourceNode_toStringWithSourceMap",
        "aArgs",
        "SourceMapGenerator",
        "aArgs",
        "chunk",
        "original",
        "generated",
        "chunk",
        "original",
        "original",
        "original",
        "lastOriginalSource",
        "original",
        "lastOriginalLine",
        "original",
        "lastOriginalColumn",
        "original",
        "lastOriginalName",
        "original",
        "original",
        "original",
        "original",
        "generated",
        "generated",
        "original",
        "lastOriginalSource",
        "original",
        "lastOriginalLine",
        "original",
        "lastOriginalColumn",
        "original",
        "lastOriginalName",
        "original",
        "sourceMappingActive",
        "sourceMappingActive",
        "generated",
        "generated",
        "lastOriginalSource",
        "sourceMappingActive",
        "chunk",
        "idx",
        "length",
        "idx",
        "chunk",
        "idx",
        "NEWLINE_CODE",
        "generated",
        "generated",
        "idx",
        "length",
        "lastOriginalSource",
        "sourceMappingActive",
        "sourceMappingActive",
        "original",
        "original",
        "original",
        "generated",
        "generated",
        "original",
        "generated",
        "sourceFile",
        "sourceContent",
        "sourceFile",
        "sourceContent",
        "generated",
        "exports",
        "SourceNode"
    ],
    "literals": [
        "'undefined'",
        "'undefined'",
        "'undefined'",
        "'undefined'",
        "'function'",
        "'undefined'",
        "'function'",
        "'function'",
        "'string'",
        "\"Cannot find module '\"",
        "\"'\"",
        "'MODULE_NOT_FOUND'",
        "'root'",
        "'object'",
        "'undefined'",
        "'function'",
        "\"5j6Kf\"",
        "\"439701173a9199ea\"",
        "\"d68ad56631b563d9\"",
        "\"use strict\"",
        "'__parcel__error__overlay__'",
        "'undefined'",
        "'http'",
        "'localhost'",
        "'undefined'",
        "'function'",
        "'ws'",
        "'undefined'",
        "'https:'",
        "'localhost'",
        "'127.0.0.1'",
        "'0.0.0.0'",
        "'wss'",
        "'ws'",
        "'undefined'",
        "'undefined'",
        "'throw new Error(\"test\"); //# sourceURL=test.js'",
        "'test.js'",
        "'/__parcel_hmr'",
        "'node:worker_threads'",
        "'message'",
        "'updated'",
        "'restart'",
        "'ready'",
        "'undefined'",
        "'://'",
        "':'",
        "''",
        "'/'",
        "'Disallowed operation called within global scope'",
        "\"[parcel] \\uD83D\\uDEA8 Connection to the HMR server was lost\"",
        "'reload'",
        "'update'",
        "'undefined'",
        "'css'",
        "'js'",
        "'undefined'",
        "'undefined'",
        "'parcelhmrreload'",
        "'undefined'",
        "'undefined'",
        "'parcelhmraccept'",
        "'error'",
        "\"\\uD83D\\uDEA8 [parcel]: \"",
        "'\\n'",
        "'\\n\\n'",
        "'\\n'",
        "'undefined'",
        "\"[parcel] \\u2728 Error resolved\"",
        "'div'",
        "'<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">'",
        "${p}\n<a href=\"${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}",
        "'wss'",
        "'https'",
        "'http'",
        "''",
        "<div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          \\u{1F6A8} ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map((hint)=>\"<div>\\uD83D\\uDCA1 \" + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>\\u{1F4DD} <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>",
        "\"<div>\\uD83D\\uDCA1 \"",
        "'</div>'",
        "''",
        "<div>\\u{1F4DD} <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>",
        "''",
        "'</div>'",
        "'undefined'",
        "'reload'",
        "'undefined'",
        "'node:worker_threads'",
        "'restart'",
        "\"[parcel] \\u26A0\\uFE0F An HMR update was not accepted. Please restart the process.\"",
        "'href'",
        "'href'",
        "'?'",
        "'?'",
        "'undefined'",
        "'link[rel=\"stylesheet\"]'",
        "'href'",
        "'localhost'",
        "'^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):'",
        "':'",
        "'js'",
        "'undefined'",
        "'script'",
        "'?t='",
        "'esmodule'",
        "'module'",
        "'function'",
        "'esmodule'",
        "'?t='",
        "'?t='",
        "'undefined'",
        "'css'",
        "'js'",
        "\"a0t4e\"",
        "\"@parcel/transformer-js/src/esmodule-helpers.js\"",
        "\"./products/products.hbs\"",
        "\"./data.js\"",
        "\"body\"",
        "\"@parcel/transformer-js/src/esmodule-helpers.js\"",
        "\"jnFvT\"",
        "\"./data.js\"",
        "\"5s9fq\"",
        "\"./products/products.hbs\"",
        "\"7WRuX\"",
        "\"jnFvT\"",
        "'__esModule'",
        "'default'",
        "'__esModule'",
        "\"5s9fq\"",
        "\"@parcel/transformer-js/src/esmodule-helpers.js\"",
        "\"products\"",
        "'Laptop'",
        "'A high-performance laptop for all your needs.'",
        "\"Electronics\"",
        "'Smartphone'",
        "'A modern smartphone with an excellent camera.'",
        "\"Electronics\"",
        "'Headphones'",
        "'Noise-cancelling headphones for better focus.'",
        "\"Electronics\"",
        "\"@parcel/transformer-js/src/esmodule-helpers.js\"",
        "\"jnFvT\"",
        "\"7WRuX\"",
        "\"@parcel/transformer-js/src/esmodule-helpers.js\"",
        "\"handlebars\"",
        "\"1\"",
        "\"function\"",
        "\"    <li class=\\\"products_item\\\">\\r\\n        <p class=\\\"products_id\\\">Id: \"",
        "\"id\"",
        "\"id\"",
        "\"name\"",
        "\"id\"",
        "\"hash\"",
        "\"data\"",
        "\"loc\"",
        "\"start\"",
        "\"line\"",
        "\"column\"",
        "\"end\"",
        "\"line\"",
        "\"column\"",
        "\"</p>\\r\\n        <h2 class=\\\"products_name\\\">\"",
        "\"name\"",
        "\"name\"",
        "\"name\"",
        "\"name\"",
        "\"hash\"",
        "\"data\"",
        "\"loc\"",
        "\"start\"",
        "\"line\"",
        "\"column\"",
        "\"end\"",
        "\"line\"",
        "\"column\"",
        "\"</h2>\\r\\n        <p class=\\\"products_price\\\">\"",
        "\"price\"",
        "\"price\"",
        "\"name\"",
        "\"price\"",
        "\"hash\"",
        "\"data\"",
        "\"loc\"",
        "\"start\"",
        "\"line\"",
        "\"column\"",
        "\"end\"",
        "\"line\"",
        "\"column\"",
        "\" UAH</p>\\r\\n        <p class=\\\"products_description\\\">\"",
        "\"description\"",
        "\"description\"",
        "\"name\"",
        "\"description\"",
        "\"hash\"",
        "\"data\"",
        "\"loc\"",
        "\"start\"",
        "\"line\"",
        "\"column\"",
        "\"end\"",
        "\"line\"",
        "\"column\"",
        "\"</p>\\r\\n        <p class=\\\"products_category\\\">Category: \"",
        "\"category\"",
        "\"category\"",
        "\"name\"",
        "\"category\"",
        "\"hash\"",
        "\"data\"",
        "\"loc\"",
        "\"start\"",
        "\"line\"",
        "\"column\"",
        "\"end\"",
        "\"line\"",
        "\"column\"",
        "\"</p>\\r\\n        <p class=\\\"products_rating\\\">Rating: \"",
        "\"rating\"",
        "\"rating\"",
        "\"name\"",
        "\"rating\"",
        "\"hash\"",
        "\"data\"",
        "\"loc\"",
        "\"start\"",
        "\"line\"",
        "\"column\"",
        "\"end\"",
        "\"line\"",
        "\"column\"",
        "\"</p>\\r\\n    </li>\\r\\n\"",
        "\"compiler\"",
        "\">= 4.3.0\"",
        "\"main\"",
        "\"<ul class=\\\"products_list\\\">\\r\\n\"",
        "\"each\"",
        "\"products\"",
        "\"name\"",
        "\"each\"",
        "\"hash\"",
        "\"fn\"",
        "\"inverse\"",
        "\"data\"",
        "\"loc\"",
        "\"start\"",
        "\"line\"",
        "\"column\"",
        "\"end\"",
        "\"line\"",
        "\"column\"",
        "\"\"",
        "\"</ul>\"",
        "\"useData\"",
        "\"handlebars\"",
        "\"9pFby\"",
        "\"@parcel/transformer-js/src/esmodule-helpers.js\"",
        "\"jnFvT\"",
        "\"9pFby\"",
        "'use strict'",
        "'default'",
        "\"dace82ca4fa82d09\"",
        "\"55d6571b0684487f\"",
        "\"d2401330935e41f4\"",
        "\"300c50185aceb8ce\"",
        "\"4c8208884d4d255f\"",
        "\"a22ebe793edc8181\"",
        "\"d367057010f3400e\"",
        "'default'",
        "'default'",
        "'default'",
        "'default'",
        "'default'",
        "'default'",
        "'default'",
        "'default'",
        "\"dace82ca4fa82d09\"",
        "\"15xNZ\"",
        "\"55d6571b0684487f\"",
        "\"25y7Q\"",
        "\"d2401330935e41f4\"",
        "\"cVKZz\"",
        "\"300c50185aceb8ce\"",
        "\"aLtLf\"",
        "\"4c8208884d4d255f\"",
        "\"4KA3d\"",
        "\"a22ebe793edc8181\"",
        "\"1HI7q\"",
        "\"d367057010f3400e\"",
        "\"6o2Fs\"",
        "\"15xNZ\"",
        "'use strict'",
        "'default'",
        "'default'",
        "\"5189b13b1bf4f35d\"",
        "\"29e779a04116da4\"",
        "\"c6e11e8d1a79afbb\"",
        "\"4e1f243f38a8b2d0\"",
        "\"8a480915b8bcb3c8\"",
        "\"261057eb44c1e90c\"",
        "'default'",
        "'default'",
        "'default'",
        "'default'",
        "'default'",
        "'default'",
        "\"5189b13b1bf4f35d\"",
        "\"lbZDS\"",
        "\"29e779a04116da4\"",
        "\"dSoPK\"",
        "\"c6e11e8d1a79afbb\"",
        "\"fzp9G\"",
        "\"4e1f243f38a8b2d0\"",
        "\"5nZBG\"",
        "\"8a480915b8bcb3c8\"",
        "\"aGtvU\"",
        "\"261057eb44c1e90c\"",
        "\"6o2Fs\"",
        "\"lbZDS\"",
        "'use strict'",
        "'default'",
        "\"4991264a6ecb5c6b\"",
        "\"e4673ac149ffa7c\"",
        "\"981170f7187ce468\"",
        "\"ae06834a8db4d94c\"",
        "\"35fef4b90bf7743\"",
        "\"2adbdb537ec9595f\"",
        "'4.7.8'",
        "'<= 1.0.rc.2'",
        "'== 1.0.0-rc.3'",
        "'== 1.0.0-rc.4'",
        "'== 1.x.x'",
        "'== 2.0.0-alpha.x'",
        "'>= 2.0.0-beta.1'",
        "'>= 4.0.0 <4.3.0'",
        "'>= 4.3.0'",
        "'[object Object]'",
        "'default'",
        "'default'",
        "'default'",
        "'Arg not supported with multiple helpers'",
        "'undefined'",
        "'default'",
        "'Attempting to register a partial called \"'",
        "'\" as undefined'",
        "'default'",
        "'Arg not supported with multiple decorators'",
        "'default'",
        "'default'",
        "\"4991264a6ecb5c6b\"",
        "\"5nZBG\"",
        "\"e4673ac149ffa7c\"",
        "\"fzp9G\"",
        "\"981170f7187ce468\"",
        "\"5Zcqj\"",
        "\"ae06834a8db4d94c\"",
        "\"kna3c\"",
        "\"35fef4b90bf7743\"",
        "\"aa6Iv\"",
        "\"2adbdb537ec9595f\"",
        "\"kp2Nf\"",
        "\"5nZBG\"",
        "'use strict'",
        "'&'",
        "'&amp;'",
        "'<'",
        "'&lt;'",
        "'>'",
        "'&gt;'",
        "'\"'",
        "'&quot;'",
        "\"'\"",
        "'&#x27;'",
        "'`'",
        "'&#x60;'",
        "'='",
        "'&#x3D;'",
        "'function'",
        "'function'",
        "'[object Function]'",
        "'object'",
        "'[object Array]'",
        "'string'",
        "''",
        "''",
        "''",
        "'.'",
        "''",
        "\"fzp9G\"",
        "'use strict'",
        "'description'",
        "'fileName'",
        "'lineNumber'",
        "'endLineNumber'",
        "'message'",
        "'name'",
        "'number'",
        "'stack'",
        "' - '",
        "':'",
        "'column'",
        "'endColumn'",
        "'default'",
        "'default'",
        "\"5Zcqj\"",
        "'use strict'",
        "'default'",
        "\"817b5223939b0f70\"",
        "\"8268a3aef10dd64d\"",
        "\"b726f4668cdedb66\"",
        "\"8cd91e8af9210478\"",
        "\"565cabdafd6dcf40\"",
        "\"7892b3b4b00506a9\"",
        "\"c976d072e7e0289\"",
        "'default'",
        "'default'",
        "'default'",
        "'default'",
        "'default'",
        "'default'",
        "'default'",
        "\"817b5223939b0f70\"",
        "\"h11PG\"",
        "\"8268a3aef10dd64d\"",
        "\"RBJMO\"",
        "\"b726f4668cdedb66\"",
        "\"8XB4W\"",
        "\"8cd91e8af9210478\"",
        "\"4YOxw\"",
        "\"565cabdafd6dcf40\"",
        "\"7e154\"",
        "\"7892b3b4b00506a9\"",
        "\"hIKdb\"",
        "\"c976d072e7e0289\"",
        "\"4Gfx6\"",
        "\"h11PG\"",
        "'use strict'",
        "\"2e9f7b43a3f3ed64\"",
        "'default'",
        "'blockHelperMissing'",
        "'default'",
        "\"2e9f7b43a3f3ed64\"",
        "\"5nZBG\"",
        "\"RBJMO\"",
        "'use strict'",
        "'default'",
        "\"8733c54d8e9aa93c\"",
        "\"2c934d2484a6224c\"",
        "'default'",
        "'each'",
        "'default'",
        "'Must pass iterator to #each'",
        "''",
        "'.'",
        "'object'",
        "'function'",
        "'default'",
        "\"8733c54d8e9aa93c\"",
        "\"5nZBG\"",
        "\"2c934d2484a6224c\"",
        "\"fzp9G\"",
        "\"8XB4W\"",
        "'use strict'",
        "'default'",
        "\"892d5fcb527c9723\"",
        "'default'",
        "'helperMissing'",
        "'default'",
        "'Missing helper: \"'",
        "'\"'",
        "'default'",
        "\"892d5fcb527c9723\"",
        "\"fzp9G\"",
        "\"4YOxw\"",
        "'use strict'",
        "'default'",
        "\"9d4ef5ba9185cc77\"",
        "\"dae1cebe64ff2466\"",
        "'default'",
        "'if'",
        "'default'",
        "'#if requires exactly one argument'",
        "'unless'",
        "'default'",
        "'#unless requires exactly one argument'",
        "'if'",
        "'default'",
        "\"9d4ef5ba9185cc77\"",
        "\"5nZBG\"",
        "\"dae1cebe64ff2466\"",
        "\"fzp9G\"",
        "\"7e154\"",
        "'use strict'",
        "'default'",
        "'log'",
        "'default'",
        "\"hIKdb\"",
        "'use strict'",
        "'default'",
        "'lookup'",
        "'default'",
        "\"4Gfx6\"",
        "'use strict'",
        "'default'",
        "\"4cf8b7b9d21f65fd\"",
        "\"3fe725e9a0c860cc\"",
        "'default'",
        "'with'",
        "'default'",
        "'#with requires exactly one argument'",
        "'default'",
        "\"4cf8b7b9d21f65fd\"",
        "\"5nZBG\"",
        "\"3fe725e9a0c860cc\"",
        "\"fzp9G\"",
        "\"kna3c\"",
        "'use strict'",
        "'default'",
        "\"1b226d84ad64b747\"",
        "'default'",
        "\"1b226d84ad64b747\"",
        "\"cTea7\"",
        "\"cTea7\"",
        "'use strict'",
        "\"15f855348e482cd8\"",
        "'default'",
        "'inline'",
        "'default'",
        "\"15f855348e482cd8\"",
        "\"5nZBG\"",
        "\"aa6Iv\"",
        "'use strict'",
        "\"58f53b6c24134408\"",
        "'debug'",
        "'info'",
        "'warn'",
        "'error'",
        "'info'",
        "'string'",
        "'undefined'",
        "'log'",
        "'default'",
        "'default'",
        "\"58f53b6c24134408\"",
        "\"5nZBG\"",
        "\"kp2Nf\"",
        "'use strict'",
        "'default'",
        "\"68f49ceb6bf11b32\"",
        "\"d501e14593152748\"",
        "'constructor'",
        "'__defineGetter__'",
        "'__defineSetter__'",
        "'__lookupGetter__'",
        "'__proto__'",
        "'function'",
        "'default'",
        "'error'",
        "'Handlebars: Access has been denied to resolve the property \"'",
        "'\" because it is not an \"own property\" of its parent.\\n'",
        "'You can add a runtime option to disable the check or this warning:\\n'",
        "'See https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details'",
        "\"68f49ceb6bf11b32\"",
        "\"5nG1g\"",
        "\"d501e14593152748\"",
        "\"aa6Iv\"",
        "\"5nG1g\"",
        "'use strict'",
        "\"9364f912605bf53f\"",
        "\"9364f912605bf53f\"",
        "\"5nZBG\"",
        "\"dSoPK\"",
        "'use strict'",
        "''",
        "'default'",
        "'default'",
        "\"aGtvU\"",
        "'use strict'",
        "'default'",
        "'default'",
        "\"e0cd7490a4a8815b\"",
        "\"3cdd666125a00268\"",
        "\"61483b81fde4c3fd\"",
        "\"1784f0b71cba0d71\"",
        "\"8ec17d2237199ec0\"",
        "\"6c7d31140c725cfe\"",
        "'default'",
        "\"Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version (\"",
        "') or downgrade your runtime to an older version ('",
        "').'",
        "'default'",
        "\"Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version (\"",
        "').'",
        "'default'",
        "'No environment passed to template'",
        "'default'",
        "'Unknown template object: '",
        "'\\n'",
        "'\\n'",
        "'default'",
        "'The partial '",
        "' could not be compiled when running in runtime-only mode'",
        "'default'",
        "'\"'",
        "'\" not defined in '",
        "'function'",
        "'_d'",
        "''",
        "'helperMissing'",
        "'blockHelperMissing'",
        "'default'",
        "'must pass block params'",
        "'default'",
        "'must pass parent depths'",
        "'@partial-block'",
        "'partial-block'",
        "'partial-block'",
        "'partial-block'",
        "'partial-block'",
        "'default'",
        "'The partial '",
        "' could not be found'",
        "''",
        "'root'",
        "\"e0cd7490a4a8815b\"",
        "\"5nZBG\"",
        "\"3cdd666125a00268\"",
        "\"fzp9G\"",
        "\"61483b81fde4c3fd\"",
        "\"lbZDS\"",
        "\"1784f0b71cba0d71\"",
        "\"5Zcqj\"",
        "\"8ec17d2237199ec0\"",
        "\"iyCpc\"",
        "\"6c7d31140c725cfe\"",
        "\"kp2Nf\"",
        "\"iyCpc\"",
        "'use strict'",
        "'function'",
        "\"6o2Fs\"",
        "'use strict'",
        "'default'",
        "'object'",
        "'__magic__'",
        "'default'",
        "\"25y7Q\"",
        "'use strict'",
        "'SubExpression'",
        "'MustacheStatement'",
        "'BlockStatement'",
        "'default'",
        "'default'",
        "\"cVKZz\"",
        "'use strict'",
        "'default'",
        "'default'",
        "\"541314b1b882bb40\"",
        "\"bad178b173809688\"",
        "\"eae10f32d37a7735\"",
        "\"d76332258c7b1d5c\"",
        "'default'",
        "'Program'",
        "'default'",
        "'default'",
        "'default'",
        "\"541314b1b882bb40\"",
        "\"1kkeF\"",
        "\"bad178b173809688\"",
        "\"73lNo\"",
        "\"eae10f32d37a7735\"",
        "\"1gpwa\"",
        "\"d76332258c7b1d5c\"",
        "\"5nZBG\"",
        "\"1kkeF\"",
        "\"use strict\"",
        "\"error\"",
        "\"root\"",
        "\"program\"",
        "\"EOF\"",
        "\"program_repetition0\"",
        "\"statement\"",
        "\"mustache\"",
        "\"block\"",
        "\"rawBlock\"",
        "\"partial\"",
        "\"partialBlock\"",
        "\"content\"",
        "\"COMMENT\"",
        "\"CONTENT\"",
        "\"openRawBlock\"",
        "\"rawBlock_repetition0\"",
        "\"END_RAW_BLOCK\"",
        "\"OPEN_RAW_BLOCK\"",
        "\"helperName\"",
        "\"openRawBlock_repetition0\"",
        "\"openRawBlock_option0\"",
        "\"CLOSE_RAW_BLOCK\"",
        "\"openBlock\"",
        "\"block_option0\"",
        "\"closeBlock\"",
        "\"openInverse\"",
        "\"block_option1\"",
        "\"OPEN_BLOCK\"",
        "\"openBlock_repetition0\"",
        "\"openBlock_option0\"",
        "\"openBlock_option1\"",
        "\"CLOSE\"",
        "\"OPEN_INVERSE\"",
        "\"openInverse_repetition0\"",
        "\"openInverse_option0\"",
        "\"openInverse_option1\"",
        "\"openInverseChain\"",
        "\"OPEN_INVERSE_CHAIN\"",
        "\"openInverseChain_repetition0\"",
        "\"openInverseChain_option0\"",
        "\"openInverseChain_option1\"",
        "\"inverseAndProgram\"",
        "\"INVERSE\"",
        "\"inverseChain\"",
        "\"inverseChain_option0\"",
        "\"OPEN_ENDBLOCK\"",
        "\"OPEN\"",
        "\"mustache_repetition0\"",
        "\"mustache_option0\"",
        "\"OPEN_UNESCAPED\"",
        "\"mustache_repetition1\"",
        "\"mustache_option1\"",
        "\"CLOSE_UNESCAPED\"",
        "\"OPEN_PARTIAL\"",
        "\"partialName\"",
        "\"partial_repetition0\"",
        "\"partial_option0\"",
        "\"openPartialBlock\"",
        "\"OPEN_PARTIAL_BLOCK\"",
        "\"openPartialBlock_repetition0\"",
        "\"openPartialBlock_option0\"",
        "\"param\"",
        "\"sexpr\"",
        "\"OPEN_SEXPR\"",
        "\"sexpr_repetition0\"",
        "\"sexpr_option0\"",
        "\"CLOSE_SEXPR\"",
        "\"hash\"",
        "\"hash_repetition_plus0\"",
        "\"hashSegment\"",
        "\"ID\"",
        "\"EQUALS\"",
        "\"blockParams\"",
        "\"OPEN_BLOCK_PARAMS\"",
        "\"blockParams_repetition_plus0\"",
        "\"CLOSE_BLOCK_PARAMS\"",
        "\"path\"",
        "\"dataName\"",
        "\"STRING\"",
        "\"NUMBER\"",
        "\"BOOLEAN\"",
        "\"UNDEFINED\"",
        "\"NULL\"",
        "\"DATA\"",
        "\"pathSegments\"",
        "\"SEP\"",
        "\"$accept\"",
        "\"$end\"",
        "\"error\"",
        "\"EOF\"",
        "\"COMMENT\"",
        "\"CONTENT\"",
        "\"END_RAW_BLOCK\"",
        "\"OPEN_RAW_BLOCK\"",
        "\"CLOSE_RAW_BLOCK\"",
        "\"OPEN_BLOCK\"",
        "\"CLOSE\"",
        "\"OPEN_INVERSE\"",
        "\"OPEN_INVERSE_CHAIN\"",
        "\"INVERSE\"",
        "\"OPEN_ENDBLOCK\"",
        "\"OPEN\"",
        "\"OPEN_UNESCAPED\"",
        "\"CLOSE_UNESCAPED\"",
        "\"OPEN_PARTIAL\"",
        "\"OPEN_PARTIAL_BLOCK\"",
        "\"OPEN_SEXPR\"",
        "\"CLOSE_SEXPR\"",
        "\"ID\"",
        "\"EQUALS\"",
        "\"OPEN_BLOCK_PARAMS\"",
        "\"CLOSE_BLOCK_PARAMS\"",
        "\"STRING\"",
        "\"NUMBER\"",
        "\"BOOLEAN\"",
        "\"UNDEFINED\"",
        "\"NULL\"",
        "\"DATA\"",
        "\"SEP\"",
        "'CommentStatement'",
        "'ContentStatement'",
        "'PartialStatement'",
        "''",
        "'SubExpression'",
        "'Hash'",
        "'HashPair'",
        "'StringLiteral'",
        "'NumberLiteral'",
        "'BooleanLiteral'",
        "'true'",
        "'true'",
        "'UndefinedLiteral'",
        "'NullLiteral'",
        "\"\"",
        "\"undefined\"",
        "\"function\"",
        "\"number\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"\"",
        "\"'\"",
        "\"'\"",
        "\"Parse error on line \"",
        "\":\\n\"",
        "\"\\nExpecting \"",
        "\", \"",
        "\", got '\"",
        "\"'\"",
        "\"Parse error on line \"",
        "\": Unexpected \"",
        "\"end of input\"",
        "\"'\"",
        "\"'\"",
        "\"Parse Error: multiple actions possible at state: \"",
        "\", token: \"",
        "\"undefined\"",
        "''",
        "'INITIAL'",
        "'...'",
        "''",
        "\"\"",
        "'...'",
        "''",
        "\"\"",
        "\"-\"",
        "\"\\n\"",
        "\"^\"",
        "''",
        "''",
        "\"\"",
        "'Lexical error on line '",
        "'. Unrecognized text.\\n'",
        "\"\"",
        "'undefined'",
        "\"\\\\\\\\\"",
        "\"mu\"",
        "\"\\\\\"",
        "\"emu\"",
        "\"mu\"",
        "'raw'",
        "'raw'",
        "'END_RAW_BLOCK'",
        "'raw'",
        "'com'",
        "'\"'",
        "\"'\"",
        "'$1'",
        "'INVALID'",
        "\"mu\"",
        "\"rules\"",
        "\"inclusive\"",
        "\"emu\"",
        "\"rules\"",
        "\"inclusive\"",
        "\"com\"",
        "\"rules\"",
        "\"inclusive\"",
        "\"raw\"",
        "\"rules\"",
        "\"inclusive\"",
        "\"INITIAL\"",
        "\"rules\"",
        "\"inclusive\"",
        "\"default\"",
        "\"default\"",
        "\"73lNo\"",
        "'use strict'",
        "'default'",
        "\"b78876b053176903\"",
        "'default'",
        "'PartialStatement'",
        "'ContentStatement'",
        "'ContentStatement'",
        "'ContentStatement'",
        "''",
        "'ContentStatement'",
        "''",
        "'default'",
        "'default'",
        "\"b78876b053176903\"",
        "\"1HI7q\"",
        "\"1HI7q\"",
        "'use strict'",
        "'default'",
        "\"76ca3a022ba69006\"",
        "'default'",
        "'Unexpected node type \"'",
        "'\" found when accepting '",
        "' on '",
        "'default'",
        "' requires '",
        "'default'",
        "'Unknown type: '",
        "'program'",
        "'value'",
        "'path'",
        "'hash'",
        "'program'",
        "'inverse'",
        "'name'",
        "'hash'",
        "'default'",
        "'default'",
        "\"76ca3a022ba69006\"",
        "\"fzp9G\"",
        "\"1gpwa\"",
        "'use strict'",
        "'default'",
        "\"490e821ab297818f\"",
        "'default'",
        "\" doesn't match \"",
        "'~'",
        "'~'",
        "''",
        "''",
        "'@'",
        "''",
        "''",
        "'..'",
        "'.'",
        "'this'",
        "'default'",
        "'Invalid path: '",
        "'..'",
        "'PathExpression'",
        "'{'",
        "'&'",
        "'Decorator'",
        "'MustacheStatement'",
        "'Program'",
        "'BlockStatement'",
        "'default'",
        "'Unexpected inverse block on decorator'",
        "'DecoratorBlock'",
        "'BlockStatement'",
        "'Program'",
        "'PartialBlockStatement'",
        "\"490e821ab297818f\"",
        "\"fzp9G\"",
        "\"aLtLf\"",
        "'use strict'",
        "'default'",
        "\"16d5909d44d4f16f\"",
        "\"959490b0f7c68258\"",
        "\"88466b3bf9ae2d15\"",
        "'if'",
        "'with'",
        "'default'",
        "'Unknown type: '",
        "'helper'",
        "'simple'",
        "'pushProgram'",
        "'pushProgram'",
        "'emptyHash'",
        "'blockValue'",
        "'pushProgram'",
        "'pushProgram'",
        "'emptyHash'",
        "'ambiguousBlockValue'",
        "'append'",
        "'registerDecorator'",
        "'default'",
        "'Unsupported number of partial arguments: '",
        "'pushLiteral'",
        "'undefined'",
        "'PathExpression'",
        "'SubExpression'",
        "''",
        "'appendContent'",
        "''",
        "'invokePartial'",
        "'append'",
        "'appendEscaped'",
        "'append'",
        "'appendContent'",
        "'simple'",
        "'helper'",
        "'getContext'",
        "'pushProgram'",
        "'pushProgram'",
        "'invokeAmbiguous'",
        "'resolvePossibleLambda'",
        "'invokeKnownHelper'",
        "'default'",
        "'You specified knownHelpersOnly, but used the unknown helper '",
        "'invokeHelper'",
        "'default'",
        "'getContext'",
        "'default'",
        "'lookupBlockParam'",
        "'pushContext'",
        "'lookupData'",
        "'lookupOnContext'",
        "'pushString'",
        "'pushLiteral'",
        "'pushLiteral'",
        "'pushLiteral'",
        "'undefined'",
        "'pushLiteral'",
        "'null'",
        "'pushHash'",
        "'assignToHash'",
        "'popHash'",
        "'default'",
        "'default'",
        "'helper'",
        "'ambiguous'",
        "'simple'",
        "''",
        "''",
        "'.'",
        "'getContext'",
        "'pushStringParam'",
        "'SubExpression'",
        "'default'",
        "'.'",
        "'pushId'",
        "'BlockParam'",
        "''",
        "''",
        "''",
        "'pushId'",
        "'pushProgram'",
        "'pushProgram'",
        "'emptyHash'",
        "'string'",
        "'Program'",
        "'default'",
        "'You must pass a string or Handlebars AST to Handlebars.precompile. You passed '",
        "'data'",
        "'string'",
        "'Program'",
        "'default'",
        "'You must pass a string or Handlebars AST to Handlebars.compile. You passed '",
        "'data'",
        "'PathExpression'",
        "''",
        "''",
        "\"16d5909d44d4f16f\"",
        "\"fzp9G\"",
        "\"959490b0f7c68258\"",
        "\"5nZBG\"",
        "\"88466b3bf9ae2d15\"",
        "\"25y7Q\"",
        "\"4KA3d\"",
        "'use strict'",
        "'default'",
        "\"a0a16efc5d27e7a7\"",
        "\"d25f115c9a9762da\"",
        "\"930fe40140fd5914\"",
        "\"5a4632a3990a4ddf\"",
        "'container.lookup'",
        "'(depths, '",
        "')'",
        "'return '",
        "';'",
        "'buffer += '",
        "';'",
        "''",
        "'lookupProperty('",
        "','",
        "')'",
        "''",
        "'default'",
        "'Compile completed with content left on stack'",
        "'var decorators = container.decorators, '",
        "';\\n'",
        "'return fn;'",
        "'fn'",
        "'props'",
        "'container'",
        "'depth0'",
        "'data'",
        "'blockParams'",
        "'depths'",
        "'function(fn, props, container, depth0, data, blockParams, depths) {\\n'",
        "'}\\n'",
        "'_d'",
        "'default'",
        "'default'",
        "''",
        "', '",
        "', '",
        "', alias'",
        "'='",
        "'alias'",
        "', '",
        "'container'",
        "'depth0'",
        "'helpers'",
        "'partials'",
        "'data'",
        "'blockParams'",
        "'depths'",
        "'function('",
        "','",
        "') {\\n  '",
        "'}'",
        "'  + '",
        "'buffer += '",
        "';'",
        "'return '",
        "';'",
        "'return \"\";'",
        "', buffer = '",
        "''",
        "'return buffer + '",
        "';'",
        "'return buffer;'",
        "'var '",
        "''",
        "';\\n'",
        "'\\n      lookupProperty = container.lookupProperty || function(parent, propertyName) {\\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\\n          return parent[propertyName];\\n        }\\n        return undefined\\n    }\\n    '",
        "'container.hooks.blockHelperMissing'",
        "'call'",
        "'container.hooks.blockHelperMissing'",
        "''",
        "'if (!'",
        "') { '",
        "' = '",
        "'call'",
        "'}'",
        "' != null ? '",
        "' : \"\"'",
        "'if ('",
        "' != null) { '",
        "' }'",
        "'else { '",
        "\"''\"",
        "' }'",
        "'container.escapeExpression'",
        "'('",
        "')'",
        "'context'",
        "'blockParams['",
        "']['",
        "']'",
        "'context'",
        "'data'",
        "'container.data(data, '",
        "')'",
        "'data'",
        "' != null ? '",
        "' : '",
        "' && '",
        "'container.lambda'",
        "'('",
        "', '",
        "')'",
        "'SubExpression'",
        "'string'",
        "'{}'",
        "'{}'",
        "'{}'",
        "'undefined'",
        "'{}'",
        "'decorators'",
        "'decorator'",
        "'fn = '",
        "''",
        "'fn'",
        "'props'",
        "'container'",
        "' || fn;'",
        "'container.hooks.helperMissing'",
        "'('",
        "'||'",
        "')'",
        "'call'",
        "'call'",
        "'helper'",
        "'helpers'",
        "'helper'",
        "'('",
        "'(helper = '",
        "' || '",
        "')'",
        "'(helper = '",
        "' != null ? helper : '",
        "'container.hooks.helperMissing'",
        "'('",
        "'),('",
        "'),'",
        "'(typeof helper === '",
        "'\"function\"'",
        "' ? '",
        "'helper'",
        "'call'",
        "' : helper))'",
        "'helpers'",
        "'partials'",
        "'container.decorators'",
        "'partials'",
        "'partial'",
        "'depths'",
        "'container.invokePartial'",
        "''",
        "'BlockParam'",
        "'blockParams['",
        "'].path['",
        "']'",
        "' + '",
        "'.'",
        "''",
        "'PathExpression'",
        "'SubExpression'",
        "'true'",
        "'null'",
        "''",
        "'program'",
        "'program'",
        "'data'",
        "'blockParams'",
        "'depths'",
        "'container.program('",
        "', '",
        "')'",
        "'('",
        "'default'",
        "'replaceStack on non-inline'",
        "'('",
        "'(('",
        "' = '",
        "')'",
        "')'",
        "'stack'",
        "'stack'",
        "' = '",
        "';'",
        "'default'",
        "'Invalid stack pop'",
        "'depths['",
        "']'",
        "'depth'",
        "'helpers'",
        "'helper'",
        "' != null ? '",
        "' : (container.nullContext || {})'",
        "'container.noop'",
        "'container.noop'",
        "'data'",
        "'blockParams'",
        "'options'",
        "'options'",
        "'options='",
        "''",
        "\"break else new var case finally return void catch for switch while continue function this with default if throw delete in try do instanceof typeof abstract enum int short boolean export interface static byte extends long super char final native synchronized class float package throws const goto private transient debugger implements protected volatile double import public let yield await null true false\"",
        "' '",
        "'container.strict'",
        "'('",
        "', '",
        "', '",
        "' )'",
        "'default'",
        "'default'",
        "\"a0a16efc5d27e7a7\"",
        "\"lbZDS\"",
        "\"d25f115c9a9762da\"",
        "\"fzp9G\"",
        "\"930fe40140fd5914\"",
        "\"5nZBG\"",
        "\"5a4632a3990a4ddf\"",
        "\"wNsNe\"",
        "\"wNsNe\"",
        "'use strict'",
        "\"21db19743b10c9d0\"",
        "'function'",
        "\"f318d3d11bf97e0a\"",
        "''",
        "''",
        "''",
        "'boolean'",
        "'number'",
        "''",
        "'  '",
        "'\\n'",
        "'.'",
        "'('",
        "'('",
        "')'",
        "'\"'",
        "''",
        "'\\\\\\\\'",
        "'\\\\\"'",
        "'\\\\n'",
        "'\\\\r'",
        "'\\\\u2028'",
        "'\\\\u2029'",
        "'\"'",
        "'undefined'",
        "':'",
        "'{'",
        "'}'",
        "','",
        "'['",
        "']'",
        "'default'",
        "'default'",
        "\"21db19743b10c9d0\"",
        "\"5nZBG\"",
        "\"f318d3d11bf97e0a\"",
        "\"CeNjn\"",
        "\"CeNjn\"",
        "\"4f3489f7a4aa86a\"",
        "\"74f5da57ddba8e\"",
        "\"24e5bc41542c0363\"",
        "\"4f3489f7a4aa86a\"",
        "\"fWPsq\"",
        "\"74f5da57ddba8e\"",
        "\"aJzFI\"",
        "\"24e5bc41542c0363\"",
        "\"bArmc\"",
        "\"fWPsq\"",
        "\"c40e1500640cbc22\"",
        "\"c65fbfec2259bb0f\"",
        "\"fce2ada3f2269665\"",
        "\"2ae94379d5b0c785\"",
        "'file'",
        "'sourceRoot'",
        "'skipValidation'",
        "'generated'",
        "'original'",
        "'source'",
        "'name'",
        "'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\\'s \"file\" property. Both were omitted.'",
        "'number'",
        "'number'",
        "\"original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.\"",
        "'line'",
        "'column'",
        "'line'",
        "'column'",
        "'line'",
        "'column'",
        "'Invalid mapping: '",
        "''",
        "''",
        "';'",
        "','",
        "\"c40e1500640cbc22\"",
        "\"V97wI\"",
        "\"c65fbfec2259bb0f\"",
        "\"5Iq0C\"",
        "\"fce2ada3f2269665\"",
        "\"98l1a\"",
        "\"2ae94379d5b0c785\"",
        "\"cSG9g\"",
        "\"V97wI\"",
        "\"9fcf0c64c293678d\"",
        "\"\"",
        "\"Expected more digits in base 64 VLQ value.\"",
        "\"Invalid base64 digit: \"",
        "\"9fcf0c64c293678d\"",
        "\"kYww2\"",
        "\"kYww2\"",
        "'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'",
        "''",
        "\"Must be between 0 and 63: \"",
        "\"5Iq0C\"",
        "'\"'",
        "'\" is a required argument.'",
        "''",
        "':'",
        "'//'",
        "'@'",
        "\":\"",
        "'.'",
        "'..'",
        "''",
        "'/'",
        "''",
        "'/'",
        "'.'",
        "\"\"",
        "\".\"",
        "\"\"",
        "\".\"",
        "'/'",
        "'/'",
        "''",
        "'/'",
        "'/'",
        "\"\"",
        "\".\"",
        "''",
        "'/'",
        "\"/\"",
        "\"../\"",
        "'__proto__'",
        "'$'",
        "''",
        "''",
        "'/'",
        "'/'",
        "'/'",
        "\"sourceMapURL could not be parsed\"",
        "'/'",
        "\"98l1a\"",
        "\"f4001388f67ef757\"",
        "\"undefined\"",
        "'\"'",
        "'\" is not in the set.'",
        "'No element indexed by '",
        "\"f4001388f67ef757\"",
        "\"5Iq0C\"",
        "\"cSG9g\"",
        "\"a70191b97ba376d4\"",
        "\"a70191b97ba376d4\"",
        "\"5Iq0C\"",
        "\"aJzFI\"",
        "\"b22324b13f72201b\"",
        "\"129ba2b16e81db9e\"",
        "\"832bf56bf6a231e4\"",
        "\"95d11d359ee56491\"",
        "\"7076e0beb1aa0cfd\"",
        "'string'",
        "'_generatedMappings'",
        "'_originalMappings'",
        "\";\"",
        "\",\"",
        "\"Subclasses must implement _parseMappings\"",
        "\"Unknown order of iteration.\"",
        "'line'",
        "'source'",
        "'column'",
        "\"originalLine\"",
        "\"originalColumn\"",
        "'generatedLine'",
        "'generatedColumn'",
        "'lastGeneratedColumn'",
        "'generatedLine'",
        "'generatedColumn'",
        "'lastGeneratedColumn'",
        "'string'",
        "'version'",
        "'sources'",
        "'names'",
        "'sourceRoot'",
        "'sourcesContent'",
        "'mappings'",
        "'file'",
        "'Unsupported version: '",
        "'sources'",
        "';'",
        "','",
        "'Found a source, but no line and column'",
        "'Found a source and line, but no column'",
        "'number'",
        "'Line must be greater than or equal to 1, got '",
        "'Column must be greater than or equal to 0, got '",
        "'line'",
        "'column'",
        "\"generatedLine\"",
        "\"generatedColumn\"",
        "'bias'",
        "'source'",
        "'name'",
        "'originalLine'",
        "'originalColumn'",
        "\"\"",
        "\"file\"",
        "\"/\"",
        "\"/\"",
        "\"/\"",
        "'\"'",
        "'\" is not in the SourceMap.'",
        "'source'",
        "'line'",
        "'column'",
        "\"originalLine\"",
        "\"originalColumn\"",
        "'bias'",
        "'generatedLine'",
        "'generatedColumn'",
        "'lastGeneratedColumn'",
        "'string'",
        "'version'",
        "'sections'",
        "'Unsupported version: '",
        "'Support for url field in sections not implemented.'",
        "'offset'",
        "'line'",
        "'column'",
        "'Section offsets must be ordered and non-overlapping.'",
        "'map'",
        "'sources'",
        "'line'",
        "'column'",
        "'\"'",
        "'\" is not in the SourceMap.'",
        "'source'",
        "'number'",
        "\"b22324b13f72201b\"",
        "\"5Iq0C\"",
        "\"129ba2b16e81db9e\"",
        "\"3EdLs\"",
        "\"832bf56bf6a231e4\"",
        "\"98l1a\"",
        "\"95d11d359ee56491\"",
        "\"V97wI\"",
        "\"7076e0beb1aa0cfd\"",
        "\"2bRqr\"",
        "\"3EdLs\"",
        "\"2bRqr\"",
        "\"bArmc\"",
        "\"a07d2c2c4b11c39f\"",
        "\"18d5ff036a08fa06\"",
        "\"$$$isSourceNode$$$\"",
        "\"\"",
        "''",
        "''",
        "\"\"",
        "\"string\"",
        "\"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \"",
        "\"string\"",
        "\"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \"",
        "''",
        "'string'",
        "''",
        "\"\"",
        "\"\"",
        "\"a07d2c2c4b11c39f\"",
        "\"fWPsq\"",
        "\"18d5ff036a08fa06\"",
        "\"5Iq0C\"",
        "\"5j6Kf\"",
        "\"a0t4e\"",
        "\"a0t4e\"",
        "\"parcelRequire3e98\""
    ],
    "variables": [
        "globalObject",
        "previousRequire",
        "importMap",
        "cache",
        "nodeRequire",
        "currentRequire",
        "err",
        "res",
        "id",
        "i",
        "mainExports",
        "HMR_HOST",
        "HMR_PORT",
        "HMR_SERVER_PORT",
        "HMR_SECURE",
        "HMR_ENV_HASH",
        "HMR_USE_SSE",
        "OVERLAY_ID",
        "OldModule",
        "checkedAssets",
        "disposedAssets",
        "assetsToDispose",
        "assetsToAccept",
        "bundleNotFound",
        "WebSocket",
        "hostname",
        "port",
        "protocol",
        "parent",
        "extCtx",
        "supportsSourceURL",
        "ws",
        "data",
        "assets",
        "handled",
        "processedAssets",
        "i",
        "id",
        "stack",
        "overlay",
        "overlay",
        "overlay",
        "errorHTML",
        "stack",
        "modules",
        "parents",
        "k",
        "d",
        "dep",
        "href",
        "newLink",
        "cssTimeout",
        "links",
        "i",
        "href",
        "hostname",
        "servedFromHMRServer",
        "absolute",
        "script",
        "_document$head",
        "scriptsToRemove",
        "promises",
        "_hmrDownload",
        "_document$head2",
        "modules",
        "deps",
        "oldDeps",
        "id",
        "parents",
        "fn",
        "modules",
        "deps",
        "orphans",
        "parents",
        "parents",
        "accepted",
        "v",
        "a",
        "p",
        "modules",
        "cached",
        "i",
        "id",
        "cached",
        "cached",
        "assetsToAlsoAccept",
        "additionalAssets",
        "handled",
        "parcelHelpers",
        "_productsHbs",
        "_productsHbsDefault",
        "_dataJs",
        "body",
        "productListHTML",
        "parcelHelpers",
        "products",
        "parcelHelpers",
        "_handlebars",
        "_handlebarsDefault",
        "templateFunction",
        "helper",
        "alias1",
        "alias2",
        "alias3",
        "alias4",
        "lookupProperty",
        "stack1",
        "lookupProperty",
        "_handlebarsRuntime",
        "_handlebarsRuntime2",
        "_handlebarsCompilerAst",
        "_handlebarsCompilerAst2",
        "_handlebarsCompilerBase",
        "_handlebarsCompilerCompiler",
        "_handlebarsCompilerJavascriptCompiler",
        "_handlebarsCompilerJavascriptCompiler2",
        "_handlebarsCompilerVisitor",
        "_handlebarsCompilerVisitor2",
        "_handlebarsNoConflict",
        "_handlebarsNoConflict2",
        "_create",
        "hb",
        "inst",
        "newObj",
        "_handlebarsBase",
        "_handlebarsSafeString",
        "_handlebarsSafeString2",
        "_handlebarsException",
        "_handlebarsException2",
        "_handlebarsUtils",
        "Utils",
        "_handlebarsRuntime",
        "runtime",
        "_handlebarsNoConflict",
        "_handlebarsNoConflict2",
        "hb",
        "inst",
        "_utils",
        "_exception",
        "_exception2",
        "_helpers",
        "_decorators",
        "_logger",
        "_logger2",
        "_internalProtoAccess",
        "VERSION",
        "COMPILER_REVISION",
        "LAST_COMPATIBLE_COMPILER_REVISION",
        "REVISION_CHANGES",
        "objectType",
        "log",
        "escape",
        "badChars",
        "possible",
        "i",
        "toString",
        "isFunction",
        "isArray",
        "i",
        "len",
        "frame",
        "errorProps",
        "loc",
        "line",
        "endLineNumber",
        "column",
        "endColumn",
        "tmp",
        "idx",
        "_helpersBlockHelperMissing",
        "_helpersBlockHelperMissing2",
        "_helpersEach",
        "_helpersEach2",
        "_helpersHelperMissing",
        "_helpersHelperMissing2",
        "_helpersIf",
        "_helpersIf2",
        "_helpersLog",
        "_helpersLog2",
        "_helpersLookup",
        "_helpersLookup2",
        "_helpersWith",
        "_helpersWith2",
        "_utils",
        "inverse",
        "fn",
        "data",
        "_utils",
        "_exception",
        "_exception2",
        "fn",
        "inverse",
        "i",
        "ret",
        "data",
        "contextPath",
        "j",
        "newContext",
        "iterator",
        "it",
        "j",
        "priorKey",
        "_exception",
        "_exception2",
        "_utils",
        "_exception",
        "_exception2",
        "args",
        "options",
        "i",
        "level",
        "_utils",
        "_exception",
        "_exception2",
        "fn",
        "data",
        "_decoratorsInline",
        "_decoratorsInline2",
        "_utils",
        "ret",
        "fn",
        "original",
        "ret",
        "_utils",
        "logger",
        "levelMap",
        "method",
        "_len",
        "message",
        "_key",
        "_createNewLookupObject",
        "_logger",
        "_logger2",
        "loggedProperties",
        "defaultMethodWhiteList",
        "defaultPropertyWhiteList",
        "_utils",
        "_len",
        "sources",
        "_key",
        "newObj",
        "_utils",
        "Utils",
        "_exception",
        "_exception2",
        "_base",
        "_helpers",
        "_internalWrapHelper",
        "_internalProtoAccess",
        "compilerRevision",
        "currentRevision",
        "runtimeVersions",
        "compilerVersions",
        "templateWasPrecompiledWithCompilerV7",
        "extendedOptions",
        "result",
        "lines",
        "i",
        "l",
        "container",
        "result",
        "len",
        "i",
        "result",
        "ret",
        "programWrapper",
        "fn",
        "obj",
        "options",
        "data",
        "depths",
        "blockParams",
        "mergedHelpers",
        "keepHelperInHelpers",
        "options",
        "currentDepths",
        "depths",
        "currentPartialBlock",
        "partialBlock",
        "fn",
        "options",
        "props",
        "helper",
        "lookupProperty",
        "wrapper",
        "options",
        "$Handlebars",
        "AST",
        "newObj",
        "_parser",
        "_parser2",
        "_whitespaceControl",
        "_whitespaceControl2",
        "_helpers",
        "Helpers",
        "_utils",
        "yy",
        "ast",
        "ast",
        "strip",
        "handlebars",
        "parser",
        "$0",
        "inverse",
        "program",
        "stack",
        "vstack",
        "lstack",
        "table",
        "yytext",
        "yylineno",
        "yyleng",
        "recovering",
        "TERROR",
        "EOF",
        "yyloc",
        "ranges",
        "token",
        "symbol",
        "preErrorSymbol",
        "state",
        "action",
        "a",
        "r",
        "yyval",
        "p",
        "len",
        "newState",
        "expected",
        "errStr",
        "lexer",
        "lexer",
        "ch",
        "lines",
        "len",
        "lines",
        "oldLines",
        "r",
        "past",
        "next",
        "pre",
        "c",
        "token",
        "match",
        "tempMatch",
        "index",
        "col",
        "lines",
        "rules",
        "i",
        "r",
        "YYSTATE",
        "YY_START",
        "_visitor",
        "_visitor2",
        "options",
        "doStandalone",
        "isRoot",
        "body",
        "i",
        "l",
        "current",
        "strip",
        "_isPrevWhitespace",
        "_isNextWhitespace",
        "openStandalone",
        "closeStandalone",
        "inlineStandalone",
        "program",
        "inverse",
        "firstInverse",
        "inverse",
        "lastInverse",
        "inverse",
        "strip",
        "inverseStrip",
        "strip",
        "prev",
        "sibling",
        "next",
        "sibling",
        "current",
        "original",
        "current",
        "original",
        "_exception",
        "_exception2",
        "value",
        "i",
        "l",
        "ret",
        "_exception",
        "_exception2",
        "errorNode",
        "original",
        "dig",
        "depth",
        "i",
        "l",
        "part",
        "isLiteral",
        "escapeFlag",
        "escaped",
        "decorator",
        "program",
        "decorator",
        "inverse",
        "inverseStrip",
        "firstLoc",
        "lastLoc",
        "_exception",
        "_exception2",
        "_utils",
        "_ast",
        "_ast2",
        "len",
        "i",
        "opcode",
        "otherOpcode",
        "i",
        "childCompiler",
        "result",
        "guid",
        "ret",
        "body",
        "bodyLength",
        "i",
        "program",
        "inverse",
        "program",
        "path",
        "program",
        "partialName",
        "isDynamic",
        "indent",
        "path",
        "name",
        "isBlock",
        "path",
        "path",
        "name",
        "name",
        "scoped",
        "blockParamId",
        "pairs",
        "i",
        "l",
        "isSimple",
        "isBlockParam",
        "isHelper",
        "isEligible",
        "_name",
        "options",
        "i",
        "l",
        "value",
        "blockParamIndex",
        "blockParamChild",
        "depth",
        "len",
        "blockParams",
        "param",
        "ast",
        "environment",
        "compiled",
        "ast",
        "environment",
        "templateSpec",
        "i",
        "literal",
        "_base",
        "_exception",
        "_exception2",
        "_utils",
        "_codeGen",
        "_codeGen2",
        "revision",
        "versions",
        "opcodes",
        "opcode",
        "firstLoc",
        "i",
        "l",
        "fn",
        "ret",
        "_context",
        "programs",
        "decorators",
        "_this",
        "varDeclarations",
        "locals",
        "aliasCount",
        "node",
        "source",
        "isSimple",
        "appendOnly",
        "appendFirst",
        "sourceSeen",
        "bufferStart",
        "bufferEnd",
        "blockHelperMissing",
        "blockName",
        "blockHelperMissing",
        "current",
        "local",
        "i",
        "_this2",
        "len",
        "lookup",
        "hash",
        "foundDecorator",
        "options",
        "nonHelper",
        "helper",
        "possibleFunctionCalls",
        "functionLookupCode",
        "functionCall",
        "result",
        "i",
        "helper",
        "nonHelper",
        "helper",
        "helperName",
        "lookup",
        "options",
        "value",
        "context",
        "id",
        "hash",
        "children",
        "child",
        "compiler",
        "i",
        "l",
        "existing",
        "index",
        "i",
        "len",
        "environment",
        "child",
        "programParams",
        "prefix",
        "stack",
        "createdStack",
        "usedLiteral",
        "top",
        "_name",
        "item",
        "inlineStack",
        "i",
        "len",
        "entry",
        "stack",
        "inline",
        "item",
        "stack",
        "item",
        "ret",
        "paramsInit",
        "foundHelper",
        "callContext",
        "options",
        "contexts",
        "types",
        "ids",
        "objectArgs",
        "param",
        "inverse",
        "program",
        "i",
        "paramSize",
        "options",
        "reservedWords",
        "compilerWords",
        "i",
        "l",
        "stack",
        "len",
        "_utils",
        "SourceNode",
        "SourceMap",
        "ret",
        "i",
        "len",
        "source",
        "i",
        "len",
        "loc",
        "loc",
        "_this",
        "pairs",
        "value",
        "ret",
        "ret",
        "i",
        "len",
        "ret",
        "base64VLQ",
        "util",
        "ArraySet",
        "MappingList",
        "sourceRoot",
        "generator",
        "newMapping",
        "sourceRelative",
        "sourceFile",
        "content",
        "generated",
        "original",
        "source",
        "name",
        "source",
        "aSourceFile",
        "sourceFile",
        "aSourceFile",
        "sourceRoot",
        "newSources",
        "newNames",
        "original",
        "source",
        "name",
        "content",
        "previousGeneratedColumn",
        "previousGeneratedLine",
        "previousOriginalColumn",
        "previousOriginalLine",
        "previousName",
        "previousSource",
        "result",
        "next",
        "mapping",
        "nameIdx",
        "sourceIdx",
        "mappings",
        "i",
        "len",
        "key",
        "base64",
        "VLQ_BASE_SHIFT",
        "VLQ_BASE",
        "VLQ_BASE_MASK",
        "VLQ_CONTINUATION_BIT",
        "VLQ_BASE",
        "isNegative",
        "shifted",
        "encoded",
        "digit",
        "vlq",
        "strLen",
        "result",
        "shift",
        "continuation",
        "digit",
        "intToCharMap",
        "bigA",
        "bigZ",
        "littleA",
        "littleZ",
        "zero",
        "nine",
        "plus",
        "slash",
        "littleOffset",
        "numberOffset",
        "urlRegexp",
        "dataUrlRegexp",
        "match",
        "url",
        "path",
        "aPath",
        "url",
        "isAbsolute",
        "parts",
        "part",
        "up",
        "i",
        "aPathUrl",
        "aRootUrl",
        "joined",
        "level",
        "index",
        "supportsNullProto",
        "obj",
        "length",
        "i",
        "cmp",
        "cmp",
        "cmp",
        "parsed",
        "index",
        "util",
        "has",
        "hasNativeMap",
        "i",
        "len",
        "sStr",
        "isDuplicate",
        "idx",
        "sStr",
        "idx",
        "sStr",
        "util",
        "lineA",
        "lineB",
        "columnA",
        "columnB",
        "util",
        "binarySearch",
        "ArraySet",
        "base64VLQ",
        "quickSort",
        "sourceMap",
        "aSourceMap",
        "c",
        "context",
        "order",
        "mappings",
        "sourceRoot",
        "source",
        "line",
        "needle",
        "mappings",
        "index",
        "mapping",
        "originalLine",
        "originalColumn",
        "sourceMap",
        "aSourceMap",
        "version",
        "sources",
        "names",
        "sourceRoot",
        "sourcesContent",
        "mappings",
        "file",
        "relativeSource",
        "aSource",
        "i",
        "smc",
        "names",
        "sources",
        "generatedMappings",
        "destGeneratedMappings",
        "destOriginalMappings",
        "i",
        "length",
        "srcMapping",
        "destMapping",
        "generatedLine",
        "previousGeneratedColumn",
        "previousOriginalLine",
        "previousOriginalColumn",
        "previousSource",
        "previousName",
        "length",
        "index",
        "cachedSegments",
        "temp",
        "originalMappings",
        "generatedMappings",
        "mapping",
        "segment",
        "end",
        "value",
        "index",
        "mapping",
        "nextMapping",
        "needle",
        "index",
        "mapping",
        "source",
        "name",
        "index",
        "relativeSource",
        "aSource",
        "url",
        "fileUriAbsPath",
        "source",
        "needle",
        "index",
        "mapping",
        "sourceMap",
        "aSourceMap",
        "version",
        "sections",
        "lastOffset",
        "offset",
        "offsetLine",
        "offsetColumn",
        "sources",
        "i",
        "j",
        "needle",
        "sectionIndex",
        "cmp",
        "section",
        "i",
        "section",
        "content",
        "i",
        "section",
        "generatedPosition",
        "ret",
        "i",
        "section",
        "sectionMappings",
        "j",
        "mapping",
        "source",
        "name",
        "adjustedMapping",
        "mid",
        "cmp",
        "index",
        "temp",
        "pivotIndex",
        "i",
        "pivot",
        "j",
        "p",
        "q",
        "SourceMapGenerator",
        "util",
        "REGEX_NEWLINE",
        "NEWLINE_CODE",
        "isSourceNode",
        "node",
        "remainingLines",
        "remainingLinesIndex",
        "shiftNextLine",
        "lineContents",
        "newLine",
        "lastGeneratedLine",
        "lastGeneratedColumn",
        "lastMapping",
        "nextLine",
        "code",
        "nextLine",
        "content",
        "source",
        "i",
        "chunk",
        "i",
        "len",
        "newChildren",
        "i",
        "len",
        "lastChild",
        "i",
        "len",
        "sources",
        "i",
        "len",
        "generated",
        "sourceMappingActive",
        "lastOriginalSource",
        "lastOriginalLine",
        "lastOriginalColumn",
        "lastOriginalName",
        "idx",
        "length"
    ],
    "comments": [
        "modules are defined as an array",
        "[ module function, map of requires ]",
        "",
        "map of requires is short require name -> numeric require",
        "",
        "anything defined in a previous bundle is accessed via the",
        "orig method which is the require for previous bundles",
        "eslint-disable no-undef",
        "eslint-enable no-undef",
        "Save the require from previous bundle to this closure if any",
        "Do not use `require` to prevent Webpack from trying to bundle this call",
        "if we cannot find the module within our internal map or",
        "cache jump to the current global require ie. the last bundle",
        "that was added to the page.",
        "If there are other bundles on this page the require from the",
        "previous one is saved to 'previousRequire'. Repeat this as",
        "many times as there are bundles until the module is found or",
        "we exhaust the require chain.",
        "Try the node require function if it exists.",
        "Only insert newRequire.load when it is actually used.",
        "The code in this file is linted against ES5, so dynamic import is not allowed.",
        "INSERT_LOAD_HERE",
        "Expose entry point to Node, AMD or browser globals",
        "Based on https://github.com/ForbesLindesay/umd/blob/master/template.js",
        "CommonJS",
        "RequireJS",
        "global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope",
        "::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_SERVER_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;",
        ": {|[string]: boolean|}",
        ": {|[string]: boolean|}",
        ": Array<[ParcelRequire, string]>",
        ": Array<[ParcelRequire, string]>",
        "eslint-disable-next-line no-redeclare",
        "eslint-disable-next-line no-global-assign",
        "ignore.",
        "eslint-disable-next-line no-redeclare",
        "Web extension context",
        "Safari doesn't support sourceURL in error stacks.",
        "eval may also be disabled via CSP, so do a quick check.",
        "If we're running in the dev server's node runner, listen for messages on the parent port.",
        ": any",
        "After the bundle has finished running, notify the dev server that the HMR update is complete.",
        "Ignore cloudflare workers error.",
        "$FlowFixMe",
        ": {data: string, ...}",
        ": HMRMessage",
        ": HMRMessage",
        ": {|[string]: boolean|}",
        ": {|[string]: boolean|}",
        "Remove error overlay if there is one",
        "Handle HMR Update",
        "Dispatch a custom event in case a bundle was not found. This might mean",
        "an asset on the server changed and we should reload the page. This event",
        "gives the client an opportunity to refresh without losing state",
        "(e.g. via React Server Components). If e.preventDefault() is not called,",
        "we will trigger a full page reload.",
        "Dispatch custom event so other runtimes (e.g React Refresh) are aware.",
        "Run accept callbacks. This will also re-execute other disposed assets in topological order.",
        "Log parcel errors to console",
        "Render the fancy html overlay",
        "$FlowFixMe",
        ": any",
        ": Array<[ParcelRequire, string]>",
        "$FlowFixMe",
        "$FlowFixMe",
        "$FlowFixMe",
        "$FlowFixMe[incompatible-type]",
        ": string",
        "Worker scripts",
        "If sourceURL comments aren't supported in eval, we need to load",
        "the update from the dev server over HTTP so that stack traces",
        "are correct in errors/logs. This is much slower than eval, so",
        "we only do it if needed (currently just Safari).",
        "https://bugs.webkit.org/show_bug.cgi?id=137297",
        "This path is also taken if a CSP disallows eval.",
        "Web extension fix",
        ": ParcelRequire",
        ":  HMRAsset",
        "Remove dependencies that are removed and will become orphaned.",
        "This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.",
        "Global eval. We would use `new Function` here but browser",
        "support for source maps is better with eval.",
        "$FlowFixMe",
        "Always traverse to the parent bundle, even if we already replaced the asset in this bundle.",
        "This is required in case modules are duplicated. We need to ensure all instances have the updated code.",
        "Collect dependencies that will become orphaned when this module is deleted.",
        "Delete the module. This must be done before deleting dependencies in case of circular dependencies.",
        "Now delete the orphans.",
        ": ParcelRequire",
        ": string",
        ": ?{ [string]: { [string]: string } }",
        "Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.",
        "If this parent accepts, stop traversing upward, but still consider siblings.",
        "Otherwise, queue the parents in the next level upward.",
        "If there are no parents, then we've reached an entry without accepting. Reload.",
        ": ParcelRequire",
        ": string",
        ": ?{ [string]: { [string]: string } }",
        "If we reached the root bundle without finding where the asset should go,",
        "there's nothing to do. Mark as \"accepted\" so we don't reload the page.",
        "Dispose all old assets.",
        ": ParcelRequire",
        ": string",
        ": ParcelRequire",
        ": string",
        "Execute the module.",
        "Run the accept callbacks in the new version of the module.",
        "istanbul ignore next",
        "Compiler imports",
        "istanbul ignore next",
        "istanbul ignore next",
        "Each of these augment the Handlebars object. No need to setup here.",
        "(This is done to easily share code between commonjs and browse envs)",
        "For compatibility and usage outside of module systems, make the Handlebars object a namespace",
        "istanbul ignore next",
        ", ...source",
        "Sourced from lodash",
        "https://github.com/bestiejs/lodash/blob/master/LICENSE.txt",
        "eslint-disable func-style",
        "fallback for older versions of Chrome and Safari",
        "istanbul ignore next",
        "eslint-enable func-style",
        "istanbul ignore next",
        "Older IE versions do not directly support indexOf so we must implement our own, sadly.",
        "don't escape SafeStrings, since they're already safe",
        "Force a string conversion as this will be done by the append regardless and",
        "the regex test will do this transparently behind the scenes, causing issues if",
        "an object's to string has escaped characters in it.",
        "Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.",
        "istanbul ignore else",
        "Work around issue under safari where we can't directly set the column value",
        "istanbul ignore next",
        "Ignore if the browser is very particular",
        "istanbul ignore next",
        "istanbul ignore next",
        "We're running the iterations one step out of sync so we can detect",
        "the last iteration without have to scan the object twice and create",
        "an itermediate keys array.",
        "istanbul ignore next",
        "[args, ]options",
        "A missing field in a {{foo}} construct.",
        "Someone is actually trying to call something, blow up.",
        "istanbul ignore next",
        "Default behavior is to render the positive path if the value is truthy and not empty.",
        "The `includeZero` option may be set to treat the condtional as purely not empty based on the",
        "behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.",
        "message, options",
        "Note for 5.0: Change to \"obj == null\" in 5.0",
        "istanbul ignore next",
        "istanbul ignore next",
        "Create a new partials stack frame prior to exec.",
        "Maps a given level value to the `methodMap` indexes above.",
        "Can be overridden in the host environment",
        "eslint-disable-next-line no-console",
        "eslint-disable-line no-console",
        "istanbul ignore next",
        "eslint-disable-next-line no-proto",
        "Build out our basic SafeString type",
        "istanbul ignore next",
        "istanbul ignore next",
        "Use the embedded version info since the runtime doesn't know about this revision yet",
        "istanbul ignore next",
        "Note: Using env.VM references rather than local var references throughout this section to allow",
        "for external users to override these as pseudo-supported APIs.",
        "backwards compatibility for precompiled templates with compiler-version 7 (<4.3.0)",
        "Just add water",
        "An empty object to use as replacement for null-contexts",
        ", options",
        "Use mergeIfNeeded here to prevent compiling global partials multiple times",
        "internal option",
        "This is a dynamic partial that returned a string",
        "Use the current closure context to save the partial-block if this partial",
        "Wrapper function to get access to currentPartialBlock from the closure",
        "Restore the partial-block from the closure for the execution of the block",
        "i.e. the part inside the block of the partial call.",
        "This should not happen, but apparently it does in https://github.com/wycats/handlebars.js/issues/1639",
        "We try to make the wrapper least-invasive by not wrapping it, if the helper is not a function.",
        "dynamic arguments",
        "global globalThis",
        "istanbul ignore next",
        "https://mathiasbynens.be/notes/globalthis",
        "eslint-disable-line no-undef",
        "istanbul ignore next",
        "Public API used to evaluate derived attributes regarding AST nodes",
        "a mustache is definitely a helper if:",
        "an ID is simple if it only has one part, and that part is not",
        "`..` or `this`.",
        "Must be exported as an object rather than the root of the module as the jison lexer",
        "must modify the object to operate properly.",
        "istanbul ignore next",
        "istanbul ignore next",
        "Just return if an already-compiled AST was passed in.",
        "Altering the shared object here, but this is ok as parser is a sync operation",
        "File ignored in coverage tests via setting in .istanbul.yml",
        "Jison generated parser",
        "Jison generated lexer",
        "this.yyleng -= len;",
        "Should be using `this.topState()` below, but it currently",
        "returns the second top instead of the first top. Opened an",
        "issue about it at https://github.com/zaach/jison/issues/291",
        "istanbul ignore next",
        "If we are on a standalone node, save the indent info for partials",
        "Pull out the whitespace from the final line",
        "Strip out the previous content node if it's whitespace only",
        "Always strip the next node",
        "Find the inverse program that is involed with whitespace stripping.",
        "Walk the inverse chain to find the last inverse that is actually in the chain.",
        "Determine the standalone candiacy. Basically flag our content as being possibly standalone",
        "so our parent can determine if we actually are standalone",
        "Find standalone else statments",
        "istanbul ignore next",
        "Nodes that end with newlines are considered whitespace (but are special",
        "cased for strip operations)",
        "Marks the node to the right of the position as omitted.",
        "I.e. {{foo}}' ' will mark the ' ' node as omitted.",
        "",
        "If i is undefined, then the first child will be marked as such.",
        "",
        "If mulitple is truthy then all whitespace will be stripped out until non-whitespace",
        "content is met.",
        "Marks the node to the left of the position as omitted.",
        "I.e. ' '{{foo}} will mark the ' ' node as omitted.",
        "",
        "If i is undefined then the last child will be marked as such.",
        "",
        "If mulitple is truthy then all whitespace will be stripped out until non-whitespace",
        "content is met.",
        "We omit the last node if it's whitespace only and not preceded by a non-content node.",
        "istanbul ignore next",
        "Visits a given value. If mutating, will replace the value if necessary.",
        "Hacky sanity check: This may have a few false positives for type for the helper",
        "methods but will generally do the right thing without a lot of overhead.",
        "Performs an accept operation with added sanity check to ensure",
        "required keys are not removed.",
        "Traverses a given array. If mutating, empty respnses will be removed",
        "for child elements.",
        "istanbul ignore next: Sanity code",
        "content",
        "comment",
        "path",
        "string",
        "number",
        "bool",
        "literal",
        "literal",
        "istanbul ignore next",
        "If we have [] syntax then we do not treat path references as operators,",
        "i.e. foo.[this] resolves to approximately context.foo['this']",
        "Must use charAt to support IE pre-10",
        "istanbul ignore else",
        "eslint-disable new-cap",
        "istanbul ignore next",
        "the foundHelper register will disambiguate helper lookup from finding a",
        "function in a context. This is necessary for mustache compatibility, which",
        "requires that context functions in blocks are evaluated by blockHelperMissing,",
        "and then proceed as if the resulting value was provided to blockHelperMissing.",
        "We know that length is the same between the two arrays because they are directly tied",
        "to the opcode behavior above.",
        "eslint-disable-line new-cap",
        "istanbul ignore next: Sanity code",
        "now that the simple mustache is resolved, we need to",
        "evaluate it by executing `blockHelperMissing`",
        "now that the simple mustache is resolved, we need to",
        "evaluate it by executing `blockHelperMissing`",
        "Context reference, i.e. `{{foo .}}` or `{{foo ..}}`",
        "HELPERS",
        "a mustache is an eligible helper if:",
        "if a mustache is an eligible helper but not a definite",
        "helper, it is ambiguous, and will be resolved in a later",
        "pass or at runtime.",
        "if ambiguous, we can possibly resolve the ambiguity now",
        "An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.",
        "SubExpressions get evaluated and passed in",
        "in string params mode.",
        "Template is only compiled on first use and cached after that point.",
        "Casting to string here to make false and 0 literal values play nicely with the rest",
        "of the system.",
        "istanbul ignore next",
        "PUBLIC API: You can override these methods in a subclass to provide",
        "alternative compiled forms for name lookup and buffering semantics",
        ",  type",
        "Force a source as this simplifies the merge logic.",
        "This is a case where the buffer operation occurs as a child of another",
        "construct, generally braces. We have to explicitly output these buffer",
        "operations to ensure that the emitted code goes in the correct location.",
        "END PUBLIC API",
        "Flush any trailing content that might be pending.",
        "istanbul ignore next",
        "eslint-disable-line camelcase",
        "track the last context pushed into place to allow skipping the",
        "getContext opcode when it would be a noop",
        "istanbul ignore next",
        "Generate minimizer alias mappings",
        "",
        "When using true SourceNodes, this will update all references to the given alias",
        "as the source nodes are reused in situ. For the non-source node compilation mode,",
        "aliases will not be used, but this case is already being run on the client and",
        "we aren't concern about minimizing the template size.",
        "Perform a second pass over the output to merge content when possible",
        "[blockValue]",
        "",
        "On stack, before: hash, inverse, program, value",
        "On stack, after: return value of blockHelperMissing",
        "",
        "The purpose of this opcode is to take a block of the form",
        "`{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and",
        "replace it on the stack with the result of properly",
        "invoking blockHelperMissing.",
        "[ambiguousBlockValue]",
        "",
        "On stack, before: hash, inverse, program, value",
        "Compiler value, before: lastHelper=value of last found helper, if any",
        "On stack, after, if no lastHelper: same as [blockValue]",
        "On stack, after, if lastHelper: value",
        "We're being a bit cheeky and reusing the options value from the prior exec",
        "[appendContent]",
        "",
        "On stack, before: ...",
        "On stack, after: ...",
        "",
        "Appends the string value of `content` to the current buffer",
        "[append]",
        "",
        "On stack, before: value, ...",
        "On stack, after: ...",
        "",
        "Coerces `value` to a String and appends it to the current buffer.",
        "",
        "If `value` is truthy, or 0, it is coerced into a string and appended",
        "Otherwise, the empty string is appended",
        "[appendEscaped]",
        "",
        "On stack, before: value, ...",
        "On stack, after: ...",
        "",
        "Escape `value` and append it to the buffer",
        "[getContext]",
        "",
        "On stack, before: ...",
        "On stack, after: ...",
        "Compiler value, after: lastContext=depth",
        "",
        "Set the value of the `lastContext` compiler value to the depth",
        "[pushContext]",
        "",
        "On stack, before: ...",
        "On stack, after: currentContext, ...",
        "",
        "Pushes the value of the current context onto the stack.",
        "[lookupOnContext]",
        "",
        "On stack, before: ...",
        "On stack, after: currentContext[name], ...",
        "",
        "Looks up the value of `name` on the current context and pushes",
        "it onto the stack.",
        "The depthed query is expected to handle the undefined logic for the root level that",
        "is implemented below, so we evaluate that directly in compat mode",
        "[lookupBlockParam]",
        "",
        "On stack, before: ...",
        "On stack, after: blockParam[name], ...",
        "",
        "Looks up the value of `parts` on the given block param and pushes",
        "it onto the stack.",
        "[lookupData]",
        "",
        "On stack, before: ...",
        "On stack, after: data, ...",
        "",
        "Push the data lookup operator",
        "istanbul ignore next",
        "eslint-disable no-loop-func",
        "We want to ensure that zero and false are handled properly if the context (falsy flag)",
        "needs to have the special handling for these values.",
        "Otherwise we can use generic falsy handling",
        "[resolvePossibleLambda]",
        "",
        "On stack, before: value, ...",
        "On stack, after: resolved value, ...",
        "",
        "If the `value` is a lambda, replace it on the stack by",
        "the return value of the lambda",
        "[pushStringParam]",
        "",
        "On stack, before: ...",
        "On stack, after: string, currentContext, ...",
        "",
        "This opcode is designed for use in string mode, which",
        "provides the string value of a parameter along with its",
        "depth rather than resolving it immediately.",
        "If it's a subexpression, the string result",
        "will be pushed after this opcode.",
        "hashIds",
        "hashContexts",
        "hashTypes",
        "[pushString]",
        "",
        "On stack, before: ...",
        "On stack, after: quotedString(string), ...",
        "",
        "Push a quoted version of `string` onto the stack",
        "[pushLiteral]",
        "",
        "On stack, before: ...",
        "On stack, after: value, ...",
        "",
        "Pushes a value onto the stack. This operation prevents",
        "the compiler from creating a temporary variable to hold",
        "it.",
        "[pushProgram]",
        "",
        "On stack, before: ...",
        "On stack, after: program(guid), ...",
        "",
        "Push a program expression onto the stack. This takes",
        "a compile-time guid and converts it into a runtime-accessible",
        "expression.",
        "[registerDecorator]",
        "",
        "On stack, before: hash, program, params..., ...",
        "On stack, after: ...",
        "",
        "Pops off the decorator's parameters, invokes the decorator,",
        "and inserts the decorator into the decorators list.",
        "[invokeHelper]",
        "",
        "On stack, before: hash, inverse, program, params..., ...",
        "On stack, after: result of helper invocation",
        "",
        "Pops off the helper's parameters, invokes the helper,",
        "and pushes the helper's return value onto the stack.",
        "",
        "If the helper is not found, `helperMissing` is called.",
        "direct call to helper",
        "call a function from the input object",
        "[invokeKnownHelper]",
        "",
        "On stack, before: hash, inverse, program, params..., ...",
        "On stack, after: result of helper invocation",
        "",
        "This operation is used when the helper is known to exist,",
        "so a `helperMissing` fallback is not required.",
        "[invokeAmbiguous]",
        "",
        "On stack, before: hash, inverse, program, params..., ...",
        "On stack, after: result of disambiguation",
        "",
        "This operation is used when an expression like `{{foo}}`",
        "is provided, but we don't know at compile-time whether it",
        "is a helper or a path.",
        "",
        "This operation emits more code than the other options,",
        "and can be avoided by passing the `knownHelpers` and",
        "`knownHelpersOnly` flags at compile-time.",
        "[invokePartial]",
        "",
        "On stack, before: context, ...",
        "On stack after: result of partial invocation",
        "",
        "This operation pops off a context, invokes a partial with that context,",
        "and pushes the result of the invocation back.",
        "[assignToHash]",
        "",
        "On stack, before: value, ..., hash, ...",
        "On stack, after: ..., hash, ...",
        "",
        "Pops a value off the stack and assigns it to the current hash",
        "HELPERS",
        "eslint-disable-line new-cap",
        "Placeholder to prevent name conflicts for nested children",
        "istanbul ignore next",
        "We want to merge the inline statement into the replacement statement via ','",
        "Literals do not need to be inlined",
        "Get or create the current stack name for use by the inline",
        "istanbul ignore if",
        "istanbul ignore next",
        "istanbul ignore if",
        "Avoid setting fn and inverse if neither are set. This allows",
        "helpers to do a check for `if (options.fn)`",
        "The parameters go on to the stack in order (making sure that they are evaluated in order)",
        "so we need to pop them off the stack in reverse order",
        "global define, require",
        "istanbul ignore next",
        "We don't support this in AMD environments. For these environments, we assume that",
        "they are running on the browser and thus have no need for the source-map library.",
        "NOP",
        "istanbul ignore if: tested but not covered in istanbul due to dist build",
        "istanbul ignore next",
        "Handle primitives that the SourceNode will throw up on",
        "Per Ecma-262 7.3 + 7.8.4",
        "istanbul ignore next",
        "-*- Mode: js; js-indent-level: 2; -*-",
        "Add the source content to the _sourcesContents map.",
        "Create a new _sourcesContents map if the property is null.",
        "Remove the source file from the _sourcesContents map.",
        "If the _sourcesContents map is empty, set the property to null.",
        "If aSourceFile is omitted, we will use the file property of the SourceMap",
        "Make \"sourceFile\" relative if an absolute Url is passed.",
        "Applying the SourceMap can add and remove items from the sources and",
        "the names array.",
        "Find mappings for the \"sourceFile\"",
        "Check if it can be mapped by the source map, then update the mapping.",
        "Copy mapping",
        "Copy sourcesContents of applied map.",
        "When aOriginal is truthy but has empty values for .line and .column,",
        "it is most likely a programmer error. In this case we throw a very",
        "specific error message to try to guide them the right way.",
        "For example: https://github.com/Polymer/polymer-bundler/pull/519",
        "Case 1.",
        "Cases 2 and 3.",
        "lines are stored 0-based in SourceMap spec version 3",
        "-*- Mode: js; js-indent-level: 2; -*-",
        "A single base 64 digit can contain 6 bits of data. For the base 64 variable",
        "length quantities we use in the source map spec, the first bit is the sign,",
        "the next four bits are the actual value, and the 6th bit is the",
        "continuation bit. The continuation bit tells us whether there are more",
        "digits in this value following this digit.",
        "",
        "Continuation",
        "|    Sign",
        "|    |",
        "V    V",
        "101011",
        "binary: 100000",
        "binary: 011111",
        "binary: 100000",
        "There are still more digits in this value, so we must make sure the",
        "continuation bit is marked.",
        "-*- Mode: js; js-indent-level: 2; -*-",
        "'A'",
        "'Z'",
        "'a'",
        "'z'",
        "'0'",
        "'9'",
        "'+'",
        "'/'",
        "0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ",
        "26 - 51: abcdefghijklmnopqrstuvwxyz",
        "52 - 61: 0123456789",
        "62: +",
        "63: /",
        "Invalid base64 digit.",
        "-*- Mode: js; js-indent-level: 2; -*-",
        "The first part is blank if the path is absolute. Trying to go",
        "above the root is a no-op. Therefore we can remove all '..' parts",
        "directly after the root.",
        "`join(foo, '//www.example.org')`",
        "`join('http://', 'www.example.com')`",
        "It is possible for the path to be above the root. In this case, simply",
        "checking whether the root is a prefix of the path won't work. Instead, we",
        "need to remove components from the root one by one, until either we find",
        "a prefix that fits, or we run out of components to remove.",
        "If the only part of the root that is left is the scheme (i.e. http://,",
        "file:///, etc.), one or more slashes (/), or simply nothing at all, we",
        "have exhausted all components, so the path is not relative to the root.",
        "Make sure we add a \"../\" for each component we removed from the root.",
        "\"__proto__\".length",
        "'_'",
        "'_'",
        "'o'",
        "'t'",
        "'o'",
        "'r'",
        "'p'",
        "'_'",
        "'_'",
        "'$'",
        "aStr2 !== null",
        "aStr1 !== null",
        "This follows what Chrome does.",
        "The spec says:",
        "Line 4: An optional source root, useful for relocating source",
        "files on a server or removing repeated values in the",
        "“sources” entry.  This value is prepended to the individual",
        "entries in the “source” field.",
        "Historically, SourceMapConsumer did not take the sourceMapURL as",
        "a parameter.  This mode is still somewhat supported, which is why",
        "this code block is conditional.  However, it's preferable to pass",
        "the source map URL to SourceMapConsumer, so that this function",
        "can implement the source URL resolution algorithm as outlined in",
        "the spec.  This block is basically the equivalent of:",
        "new URL(sourceURL, sourceMapURL).toString()",
        "... except it avoids using URL, which wasn't available in the",
        "older releases of node still supported by this library.",
        "",
        "The spec says:",
        "If the sources are not absolute URLs after prepending of the",
        "“sourceRoot”, the sources are resolved relative to the",
        "SourceMap (like resolving script src in a html document).",
        "Strip the last path component, but keep the \"/\".",
        "-*- Mode: js; js-indent-level: 2; -*-",
        "-*- Mode: js; js-indent-level: 2; -*-",
        "Optimized for most common case",
        "Serves as infimum",
        "-*- Mode: js; js-indent-level: 2; -*-",
        "`__generatedMappings` and `__originalMappings` are arrays that hold the",
        "parsed mapping coordinates from the source map's \"mappings\" attribute. They",
        "are lazily instantiated, accessed via the `_generatedMappings` and",
        "`_originalMappings` getters respectively, and we only parse the mappings",
        "and create these arrays once queried for a source location. We jump through",
        "these hoops because there can be many thousands of mappings, and parsing",
        "them is expensive, so we only want to do it if we must.",
        "",
        "Each object in the arrays is of the form:",
        "",
        "{",
        "generatedLine: The line number in the generated code,",
        "generatedColumn: The column number in the generated code,",
        "source: The path to the original source file that generated this",
        "chunk of code,",
        "originalLine: The line number in the original source that",
        "corresponds to this chunk of generated code,",
        "originalColumn: The column number in the original source that",
        "corresponds to this chunk of generated code,",
        "name: The name of the original symbol which generated this chunk of",
        "code.",
        "}",
        "",
        "All properties except for `generatedLine` and `generatedColumn` can be",
        "`null`.",
        "",
        "`_generatedMappings` is ordered by the generated positions.",
        "",
        "`_originalMappings` is ordered by the original positions.",
        "When there is no exact match, BasicSourceMapConsumer.prototype._findMapping",
        "returns the index of the closest mapping less than the needle. By",
        "setting needle.originalColumn to 0, we thus find the last mapping for",
        "the given line, provided such a mapping exists.",
        "Iterate until either we run out of mappings, or we run into",
        "a mapping for a different line than the one we found. Since",
        "mappings are sorted, this is guaranteed to find all mappings for",
        "the line we found.",
        "Iterate until either we run out of mappings, or we run into",
        "a mapping for a different line than the one we were searching for.",
        "Since mappings are sorted, this is guaranteed to find all mappings for",
        "the line we are searching for.",
        "Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which",
        "requires the array) to play nice here.",
        "Once again, Sass deviates from the spec and supplies the version as a",
        "string rather than a number, so we use loose equality checking here.",
        "Some source maps produce relative source paths like \"./foo.js\" instead of",
        "\"foo.js\".  Normalize these first so that future comparisons will succeed.",
        "See bugzil.la/1090768.",
        "Always ensure that absolute sources are internally stored relative to",
        "the source root, if the source root is absolute. Not doing this would",
        "be particularly problematic when the source root is a prefix of the",
        "source (valid, but why??). See github issue #199 and bugzil.la/1188982.",
        "Pass `true` below to allow duplicate names and sources. While source maps",
        "are intended to be compressed and deduplicated, the TypeScript compiler",
        "sometimes generates source maps with duplicates in them. See Github issue",
        "#72 and bugzil.la/889492.",
        "Maybe aSource is an absolute URL as returned by |sources|.  In",
        "this case we can't simply undo the transform.",
        "Because we are modifying the entries (by converting string sources and",
        "names to indices into the sources and names ArraySets), we have to make",
        "a copy of the entry or else bad things happen. Shared mutable state",
        "strikes again! See github issue #191.",
        "Because each offset is encoded relative to the previous one,",
        "many segments often have the same encoding. We can exploit this",
        "fact by caching the parsed variable length fields of each segment,",
        "allowing us to avoid a second parse if we encounter the same",
        "segment again.",
        "Generated column.",
        "Original source.",
        "Original line.",
        "Lines are stored 0-based",
        "Original column.",
        "Original name.",
        "To return the position we are searching for, we must first find the",
        "mapping for the given position and then return the opposite position it",
        "points to. Because the mappings are sorted, we can use binary search to",
        "find the best mapping.",
        "Mappings do not contain a field for the last generated columnt. We",
        "can come up with an optimistic estimate, however, by assuming that",
        "mappings are contiguous (i.e. given two consecutive mappings, the",
        "first mapping ends where the second one starts).",
        "The last mapping for each line spans the entire line.",
        "XXX: file:// URIs and absolute paths lead to unexpected behavior for",
        "many users. We can help them out when they expect file:// URIs to",
        "behave like it would if they were running a local HTTP server. See",
        "https://bugzilla.mozilla.org/show_bug.cgi?id=885597.",
        "This function is used recursively from",
        "IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we",
        "don't want to throw if we can't find the source - we just want to",
        "return null, so we provide a flag to exit gracefully.",
        "The url field will require support for asynchronicity.",
        "See https://github.com/mozilla/source-map/issues/16",
        "The offset fields are 0-based, but we use 1-based indices when",
        "encoding/decoding from VLQ.",
        "Find the section containing the generated position we're trying to map",
        "to an original position.",
        "Only consider this section if the requested source is in the list of",
        "sources of the consumer.",
        "The mappings coming from the consumer for the section have",
        "generated positions relative to the start of the section, so we",
        "need to offset them to be relative to the start of the concatenated",
        "generated file.",
        "-*- Mode: js; js-indent-level: 2; -*-",
        "This function terminates when one of the following is true:",
        "",
        "1. We find the exact element we are looking for.",
        "",
        "2. We did not find the exact element, but we can return the index of",
        "the next-closest element.",
        "",
        "3. We did not find the exact element, and there is no next-closest",
        "element than the one we are searching for, so we return -1.",
        "Found the element we are looking for.",
        "Our needle is greater than aHaystack[mid].",
        "The element is in the upper half.",
        "The exact needle element was not found in this haystack. Determine if",
        "we are in termination case (3) or (2) and return the appropriate thing.",
        "Our needle is less than aHaystack[mid].",
        "The element is in the lower half.",
        "we are in termination case (3) or (2) and return the appropriate thing.",
        "We have found either the exact element, or the next-closest element than",
        "the one we are searching for. However, there may be more than one such",
        "element. Make sure we always return the smallest of these.",
        "-*- Mode: js; js-indent-level: 2; -*-",
        "It turns out that some (most?) JavaScript engines don't self-host",
        "`Array.prototype.sort`. This makes sense because C++ will likely remain",
        "faster than JS when doing raw CPU-intensive sorting. However, when using a",
        "custom comparator function, calling back and forth between the VM's C++ and",
        "JIT'd JS is rather slow *and* loses JIT type information, resulting in",
        "worse generated code for the comparator function than would be optimal. In",
        "fact, when sorting with a comparator, these costs outweigh the benefits of",
        "sorting in C++. By using our own JS-implemented Quick Sort (below), we get",
        "a ~3500ms mean speed-up in `bench/bench.html`.",
        "If our lower bound is less than our upper bound, we (1) partition the",
        "array into two pieces and (2) recurse on each half. If it is not, this is",
        "the empty array and our base case.",
        "(1) Partitioning.",
        "",
        "The partitioning chooses a pivot between `p` and `r` and moves all",
        "elements that are less than or equal to the pivot to the before it, and",
        "all the elements that are greater than it after it. The effect is that",
        "once partition is done, the pivot is in the exact place it will be when",
        "the array is put in sorted order, and it will not need to be moved",
        "again. This runs in O(n) time.",
        "Always choose a random pivot so that an input array which is reverse",
        "sorted does not cause O(n^2) running time.",
        "Immediately after `j` is incremented in this loop, the following hold",
        "true:",
        "",
        "",
        "(2) Recurse on each half.",
        "-*- Mode: js; js-indent-level: 2; -*-",
        "Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other",
        "operating systems these days (capturing the result).",
        "Newline character code for charCodeAt() comparisons",
        "Private symbol for identifying `SourceNode`s when multiple versions of",
        "the source-map library are loaded. This MUST NOT CHANGE across",
        "versions!",
        "The SourceNode we want to fill with the generated code",
        "and the SourceMap",
        "All even indices of this array are one line of the generated code,",
        "while all odd indices are the newlines between two adjacent lines",
        "(since `REGEX_NEWLINE` captures its match).",
        "Processed fragments are accessed by calling `shiftNextLine`.",
        "The last line of a file might not have a newline.",
        "We need to remember the position of \"remainingLines\"",
        "The generate SourceNodes we need a code range.",
        "To extract it current and last mapping is used.",
        "Here we store the last mapping.",
        "We add the code from \"lastMapping\" to \"mapping\":",
        "First check if there is a new line in between.",
        "Associate first line with \"lastMapping\"",
        "The remaining code is added without mapping",
        "There is no new line in between.",
        "Associate the code between \"lastGeneratedColumn\" and",
        "\"mapping.generatedColumn\" with \"lastMapping\"",
        "No more remaining code, continue",
        "We add the generated code until the first mapping",
        "to the SourceNode without any mapping.",
        "Each line is added as separate string.",
        "We have processed all mappings.",
        "Associate the remaining code in the current line with \"lastMapping\"",
        "and add the remaining lines without any mapping",
        "Copy sourcesContent into SourceNode",
        "Mappings end at eol",
        "# sourceMappingURL=HM-7.31b563d9.js.map"
    ],
    "docstrings": [
        "* Reset the memory of illegal property accesses that have already been logged.\n   * @deprecated should only be used in handlebars test-cases",
        "* Create a new object with \"null\"-prototype to avoid truthy results on prototype properties.\n * The resulting object can be used with \"object[property]\" to check if a property exists\n * @param {...object} sources a varargs parameter of source objects that will be merged\n * @returns {object}",
        "* This is currently part of the official API, therefore implementation details should not be changed.",
        "* it is an eligible helper, and",
        "* it has at least one parameter or hash segment",
        "* its id is simple (a single part, not `this` or `..`)",
        "* @deprecated May be removed in the next major version",
        "* Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause",
        "* Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause",
        "* An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.",
        "* Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.",
        "* Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.",
        "* Set the source content for a source file.",
        "* Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.",
        "* A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.",
        "* Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.",
        "* Externalize the source map.",
        "* Render the source map being generated to a string.",
        "* Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
        "* Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)",
        "* Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2",
        "* Returns the base 64 VLQ encoded value.",
        "* Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.",
        "* Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause",
        "* Encode an integer in the range of 0 to 63 to a single base 64 digit.",
        "* Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.",
        "* Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause",
        "* This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.",
        "* Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.",
        "* Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.",
        "* Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.",
        "* Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr",
        "* Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.",
        "* Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.",
        "* Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.",
        "* Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.",
        "* Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.",
        "* Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause",
        "* A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.",
        "* Static method for creating ArraySet instances from an existing array.",
        "* Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number",
        "* Add the given string to this set.\n *\n * @param String aStr",
        "* Is the given string a member of this set?\n *\n * @param String aStr",
        "* What is the index of the given string in the array?\n *\n * @param String aStr",
        "* What is the element at the given index?\n *\n * @param Number aIdx",
        "* Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.",
        "* Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause",
        "* Determine whether mappingB is after mappingA with respect to generated\n * position.",
        "* A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.",
        "* Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.",
        "* Add the given source mapping.\n *\n * @param Object aMapping",
        "* Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.",
        "* Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause",
        "* The version of the source mapping spec that we are consuming.",
        "* Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).",
        "* Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.",
        "* Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.",
        "* A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#",
        "* Utility function to find the index of a source.  Returns -1 if not\n * found.",
        "* Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer",
        "* The version of the source mapping spec that we are consuming.",
        "* The list of original sources.",
        "* Provide the JIT with a nice shape / hidden class.",
        "* Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).",
        "* Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.",
        "* Compute the last column for each generated mapping. The last column is\n * inclusive.",
        "* Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.",
        "* Return true if we have the source content for every source in the source\n * map, false otherwise.",
        "* Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.",
        "* Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.",
        "* An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt",
        "* The version of the source mapping spec that we are consuming.",
        "* The list of original sources.",
        "* Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.",
        "* Return true if we have the source content for every source in the source\n * map, false otherwise.",
        "* Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.",
        "* Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.",
        "* Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).",
        "* Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause",
        "* Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.",
        "* This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.",
        "* Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause",
        "* Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.",
        "* Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.",
        "* The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array",
        "* Every element in `ary[p .. i]` is less than or equal to the pivot.",
        "* Every element in `ary[i+1 .. j-1]` is greater than the pivot.",
        "* Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.",
        "* Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause",
        "* SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.",
        "* Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.",
        "* Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.",
        "* Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.",
        "* Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.",
        "* Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.",
        "* Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.",
        "* Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file",
        "* Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.",
        "* Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.",
        "* Returns the string representation of this source node along with a source\n * map."
    ],
    "functions": [
        "newRequire",
        "localRequire",
        "resolve",
        "Module",
        "Module",
        "getHostname",
        "getPort",
        "handleMessage",
        "removeErrorOverlay",
        "createErrorOverlay",
        "fullReload",
        "getParents",
        "updateLink",
        "reloadCSS",
        "hmrDownload",
        "hmrApplyUpdates",
        "hmrApply",
        "hmrDelete",
        "hmrAcceptCheck",
        "hmrAcceptCheckOne",
        "hmrDisposeQueue",
        "hmrDispose",
        "hmrAccept",
        "_interopRequireDefault",
        "create",
        "_interopRequireDefault",
        "_interopRequireWildcard",
        "create",
        "_interopRequireDefault",
        "HandlebarsEnvironment",
        "escapeChar",
        "extend",
        "indexOf",
        "escapeExpression",
        "isEmpty",
        "createFrame",
        "blockParams",
        "appendContextPath",
        "_interopRequireDefault",
        "registerDefaultHelpers",
        "moveHelperToHooks",
        "_interopRequireDefault",
        "execIteration",
        "_interopRequireDefault",
        "_interopRequireDefault",
        "_interopRequireDefault",
        "_interopRequireDefault",
        "registerDefaultDecorators",
        "_interopRequireDefault",
        "createProtoAccessControl",
        "resultIsAllowed",
        "checkWhiteList",
        "logUnexpecedPropertyAccessOnce",
        "resetLoggedProperties",
        "createNewLookupObject",
        "SafeString",
        "_interopRequireDefault",
        "_interopRequireWildcard",
        "checkRevision",
        "template",
        "invokePartialWrapper",
        "ret",
        "main",
        "wrapProgram",
        "prog",
        "resolvePartial",
        "invokePartial",
        "noop",
        "initData",
        "executeDecorators",
        "wrapHelpersToPassLookupProperty",
        "passLookupPropertyOption",
        "wrapHelper",
        "_interopRequireWildcard",
        "_interopRequireDefault",
        "parseWithoutProcessing",
        "parse",
        "popStack",
        "lex",
        "strip",
        "Parser",
        "_interopRequireDefault",
        "WhitespaceControl",
        "isPrevWhitespace",
        "isNextWhitespace",
        "omitRight",
        "omitLeft",
        "_interopRequireDefault",
        "Visitor",
        "visitSubExpression",
        "visitBlock",
        "visitPartial",
        "_interopRequireDefault",
        "validateClose",
        "SourceLocation",
        "id",
        "stripFlags",
        "stripComment",
        "preparePath",
        "prepareMustache",
        "prepareRawBlock",
        "prepareBlock",
        "prepareProgram",
        "preparePartialBlock",
        "_interopRequireDefault",
        "Compiler",
        "precompile",
        "compile",
        "compileInput",
        "ret",
        "argEquals",
        "transformLiteralToPath",
        "_interopRequireDefault",
        "Literal",
        "JavaScriptCompiler",
        "strictLookup",
        "castChunk",
        "CodeGen",
        "SourceMapGenerator",
        "toVLQSigned",
        "fromVLQSigned",
        "getArg",
        "urlParse",
        "urlGenerate",
        "normalize",
        "join",
        "relative",
        "identity",
        "toSetString",
        "fromSetString",
        "isProtoString",
        "compareByOriginalPositions",
        "compareByGeneratedPositionsDeflated",
        "strcmp",
        "compareByGeneratedPositionsInflated",
        "parseSourceMapInput",
        "computeSourceURL",
        "ArraySet",
        "generatedPositionAfter",
        "MappingList",
        "SourceMapConsumer",
        "BasicSourceMapConsumer",
        "Mapping",
        "IndexedSourceMapConsumer",
        "recursiveSearch",
        "swap",
        "randomIntInRange",
        "doQuickSort",
        "SourceNode",
        "getNextLine",
        "addMappingWithCode"
    ],
    "classes": []
}