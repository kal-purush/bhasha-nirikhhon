{
    "identifiers": [
        "flask",
        "Flask",
        "request",
        "jsonify",
        "flask_cors",
        "CORS",
        "sqlite3",
        "csv",
        "io",
        "os",
        "json",
        "pickle",
        "numpy",
        "np",
        "datetime",
        "datetime",
        "sklearn",
        "feature_extraction",
        "text",
        "TfidfVectorizer",
        "sklearn",
        "naive_bayes",
        "MultinomialNB",
        "sklearn",
        "pipeline",
        "Pipeline",
        "Flask",
        "CORS",
        "app",
        "sqlite3",
        "connect",
        "conn",
        "cursor",
        "cursor",
        "execute",
        "conn",
        "commit",
        "conn",
        "close",
        "os",
        "path",
        "exists",
        "model_path",
        "os",
        "path",
        "exists",
        "vectorizer_path",
        "open",
        "model_path",
        "f",
        "pickle",
        "load",
        "f",
        "open",
        "vectorizer_path",
        "f",
        "pickle",
        "load",
        "f",
        "vectorizer",
        "model",
        "TfidfVectorizer",
        "max_features",
        "stop_words",
        "MultinomialNB",
        "vectorizer",
        "fit_transform",
        "training_data",
        "model",
        "fit",
        "X",
        "labels",
        "open",
        "model_path",
        "f",
        "pickle",
        "dump",
        "model",
        "f",
        "open",
        "vectorizer_path",
        "f",
        "pickle",
        "dump",
        "vectorizer",
        "f",
        "vectorizer",
        "model",
        "get_sentiment_model",
        "comment",
        "comment",
        "comment",
        "isspace",
        "vectorizer",
        "transform",
        "comment",
        "model",
        "predict",
        "X",
        "model",
        "predict_proba",
        "X",
        "sentiment_class",
        "proba",
        "np",
        "where",
        "model",
        "classes_",
        "sentiment_class",
        "proba",
        "np",
        "where",
        "model",
        "classes_",
        "sentiment",
        "score",
        "app",
        "route",
        "methods",
        "request",
        "json",
        "data",
        "get",
        "data",
        "get",
        "analyze_sentiment",
        "comment",
        "sqlite3",
        "connect",
        "conn",
        "cursor",
        "cursor",
        "execute",
        "comment",
        "department",
        "result",
        "result",
        "conn",
        "commit",
        "cursor",
        "lastrowid",
        "conn",
        "close",
        "jsonify",
        "feedback_id",
        "comment",
        "department",
        "result",
        "result",
        "app",
        "route",
        "methods",
        "request",
        "files",
        "jsonify",
        "request",
        "files",
        "file",
        "filename",
        "jsonify",
        "file",
        "file",
        "save",
        "file_path",
        "sqlite3",
        "connect",
        "conn",
        "cursor",
        "open",
        "file_path",
        "encoding",
        "csv_file",
        "csv",
        "DictReader",
        "csv_file",
        "csv_reader",
        "fieldnames",
        "jsonify",
        "row",
        "csv_reader",
        "row",
        "get",
        "strip",
        "row",
        "get",
        "strip",
        "csv_reader",
        "fieldnames",
        "comment",
        "analyze_sentiment",
        "comment",
        "cursor",
        "execute",
        "comment",
        "department",
        "result",
        "result",
        "cursor",
        "lastrowid",
        "results",
        "append",
        "feedback_id",
        "comment",
        "department",
        "result",
        "result",
        "conn",
        "commit",
        "conn",
        "close",
        "os",
        "remove",
        "file_path",
        "jsonify",
        "results",
        "e",
        "jsonify",
        "e",
        "jsonify",
        "app",
        "route",
        "methods",
        "sqlite3",
        "connect",
        "sqlite3",
        "Row",
        "conn",
        "cursor",
        "cursor",
        "execute",
        "cursor",
        "fetchall",
        "conn",
        "close",
        "row",
        "rows",
        "feedback",
        "append",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "jsonify",
        "feedback",
        "app",
        "route",
        "methods",
        "sqlite3",
        "connect",
        "sqlite3",
        "Row",
        "conn",
        "cursor",
        "cursor",
        "execute",
        "cursor",
        "fetchall",
        "conn",
        "close",
        "io",
        "StringIO",
        "csv",
        "writer",
        "output",
        "csv_writer",
        "writerow",
        "row",
        "rows",
        "csv_writer",
        "writerow",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "output",
        "getvalue",
        "jsonify",
        "csv_data",
        "init_db",
        "app",
        "run",
        "debug",
        "host",
        "port"
    ],
    "literals": [
        "'feedback.db'",
        "'sentiment_model.pkl'",
        "'vectorizer.pkl'",
        "'rb'",
        "'rb'",
        "\"The professor was very helpful and engaging.\"",
        "\"I really enjoyed the class today.\"",
        "\"The course materials were excellent and well-organized.\"",
        "\"The instructor explained the concepts clearly.\"",
        "\"The feedback from the teacher was constructive and useful.\"",
        "\"I appreciate how responsive the department is to student concerns.\"",
        "\"The new facilities are a great improvement.\"",
        "\"The online resources provided were very helpful for studying.\"",
        "\"The lecture was boring and hard to follow.\"",
        "\"The assignment instructions were unclear.\"",
        "\"The classroom was too crowded and noisy.\"",
        "\"The professor didn't answer my questions properly.\"",
        "\"The course materials were outdated.\"",
        "\"The grading system is unfair.\"",
        "\"The department is disorganized.\"",
        "\"The feedback was not helpful at all.\"",
        "\"The class starts at 9 AM.\"",
        "\"The textbook has 12 chapters.\"",
        "\"The exam will cover all material from the semester.\"",
        "\"The assignment is due next Friday.\"",
        "\"The department office is located in building B.\"",
        "\"The course has three sections.\"",
        "\"The lecture slides are available online.\"",
        "\"The professor's office hours are on Tuesdays.\"",
        "'english'",
        "'wb'",
        "'wb'",
        "\"sentiment\"",
        "\"neutral\"",
        "\"score\"",
        "\"positive\"",
        "\"negative\"",
        "\"neutral\"",
        "\"sentiment\"",
        "\"score\"",
        "'/api/analyze'",
        "'POST'",
        "'comment'",
        "''",
        "'department'",
        "''",
        "'feedback.db'",
        "'INSERT INTO feedback (comment, department, sentiment, score) VALUES (?, ?, ?, ?)'",
        "'sentiment'",
        "'score'",
        "\"id\"",
        "\"comment\"",
        "\"department\"",
        "\"sentiment\"",
        "'sentiment'",
        "\"score\"",
        "'score'",
        "'/api/analyze-csv'",
        "'POST'",
        "'file'",
        "\"error\"",
        "\"No file part\"",
        "'file'",
        "''",
        "\"error\"",
        "\"No selected file\"",
        "'temp_csv.csv'",
        "'feedback.db'",
        "'r'",
        "'utf-8'",
        "'comment'",
        "\"error\"",
        "\"CSV must contain a 'comment' column\"",
        "'comment'",
        "''",
        "'department'",
        "''",
        "'department'",
        "''",
        "'INSERT INTO feedback (comment, department, sentiment, score) VALUES (?, ?, ?, ?)'",
        "'sentiment'",
        "'score'",
        "\"id\"",
        "\"comment\"",
        "\"department\"",
        "\"sentiment\"",
        "'sentiment'",
        "\"score\"",
        "'score'",
        "\"results\"",
        "\"error\"",
        "\"error\"",
        "\"Failed to process file\"",
        "'/api/feedback'",
        "'GET'",
        "'feedback.db'",
        "'SELECT * FROM feedback ORDER BY timestamp DESC'",
        "\"id\"",
        "'id'",
        "\"comment\"",
        "'comment'",
        "\"department\"",
        "'department'",
        "\"sentiment\"",
        "'sentiment'",
        "\"score\"",
        "'score'",
        "\"timestamp\"",
        "'timestamp'",
        "\"feedback\"",
        "'/api/export-csv'",
        "'GET'",
        "'feedback.db'",
        "'SELECT * FROM feedback ORDER BY timestamp DESC'",
        "'id'",
        "'comment'",
        "'department'",
        "'sentiment'",
        "'score'",
        "'timestamp'",
        "'id'",
        "'comment'",
        "'department'",
        "'sentiment'",
        "'score'",
        "'timestamp'",
        "\"csv\"",
        "'__main__'",
        "'0.0.0.0'"
    ],
    "variables": [
        "app",
        "conn",
        "cursor",
        "model_path",
        "vectorizer_path",
        "model",
        "vectorizer",
        "training_data",
        "labels",
        "vectorizer",
        "model",
        "X",
        "vectorizer",
        "model",
        "X",
        "sentiment_class",
        "proba",
        "sentiment",
        "score",
        "sentiment",
        "score",
        "sentiment",
        "score",
        "data",
        "comment",
        "department",
        "result",
        "conn",
        "cursor",
        "feedback_id",
        "file",
        "file_path",
        "results",
        "conn",
        "cursor",
        "csv_reader",
        "comment",
        "department",
        "result",
        "feedback_id",
        "conn",
        "conn",
        "row_factory",
        "cursor",
        "rows",
        "feedback",
        "conn",
        "conn",
        "row_factory",
        "cursor",
        "rows",
        "output",
        "csv_writer",
        "csv_data"
    ],
    "comments": [
        "Enable CORS for all routes",
        "Initialize the database",
        "Train or load the sentiment analysis model",
        "If model already exists, load it",
        "Otherwise, train a simple model with some example data",
        "This is a very basic dataset - in a real application, you'd use more data",
        "Positive examples",
        "Negative examples",
        "Neutral examples",
        "Labels: 1 for positive, 0 for neutral, -1 for negative",
        "Create and train the model",
        "Save the model for future use",
        "Get the sentiment model",
        "Analyze sentiment of a comment using ML model",
        "Transform the comment using the vectorizer",
        "Predict the sentiment class (-1, 0, 1)",
        "Get probability scores",
        "Map the class to sentiment label",
        "Use the probability of the positive class as the score",
        "Use the negative of the probability of the negative class as the score",
        "Route to analyze a single comment",
        "Store in database",
        "Get the ID of the inserted row",
        "Route to analyze multiple comments from CSV",
        "Save the file temporarily",
        "Read the CSV file using built-in csv module",
        "Check if required columns exist",
        "Process each row",
        "Store in database",
        "Get the ID of the inserted row",
        "Remove temporary file",
        "Route to get all feedback",
        "Route to export feedback as CSV",
        "Create CSV in memory using StringIO and csv module",
        "Write header",
        "Write data rows",
        "Initialize database when the app starts"
    ],
    "docstrings": [
        "'''\n    CREATE TABLE IF NOT EXISTS feedback (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        comment TEXT NOT NULL,\n        department TEXT,\n        sentiment TEXT NOT NULL,\n        score REAL NOT NULL,\n        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP\n    )\n    '''"
    ],
    "functions": [
        "init_db",
        "get_sentiment_model",
        "analyze_sentiment",
        "analyze_comment",
        "analyze_csv",
        "get_feedback",
        "export_csv"
    ],
    "classes": []
}