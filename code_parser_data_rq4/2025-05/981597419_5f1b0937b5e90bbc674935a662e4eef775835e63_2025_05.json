{
    "identifiers": [
        "ru",
        "maxima",
        "booklibrary",
        "config",
        "org",
        "springframework",
        "context",
        "annotation",
        "Bean",
        "org",
        "springframework",
        "context",
        "annotation",
        "Configuration",
        "org",
        "springframework",
        "security",
        "authentication",
        "AuthenticationManager",
        "org",
        "springframework",
        "security",
        "authentication",
        "ProviderManager",
        "org",
        "springframework",
        "security",
        "authentication",
        "dao",
        "DaoAuthenticationProvider",
        "org",
        "springframework",
        "security",
        "config",
        "Customizer",
        "org",
        "springframework",
        "security",
        "config",
        "annotation",
        "method",
        "configuration",
        "EnableMethodSecurity",
        "org",
        "springframework",
        "security",
        "config",
        "annotation",
        "web",
        "builders",
        "HttpSecurity",
        "org",
        "springframework",
        "security",
        "config",
        "annotation",
        "web",
        "configuration",
        "EnableWebSecurity",
        "org",
        "springframework",
        "security",
        "config",
        "annotation",
        "web",
        "configurers",
        "AbstractAuthenticationFilterConfigurer",
        "org",
        "springframework",
        "security",
        "core",
        "userdetails",
        "UserDetailsService",
        "org",
        "springframework",
        "security",
        "crypto",
        "bcrypt",
        "BCryptPasswordEncoder",
        "org",
        "springframework",
        "security",
        "crypto",
        "password",
        "NoOpPasswordEncoder",
        "org",
        "springframework",
        "security",
        "crypto",
        "password",
        "PasswordEncoder",
        "org",
        "springframework",
        "security",
        "web",
        "SecurityFilterChain",
        "ru",
        "maxima",
        "booklibrary",
        "security",
        "MyUserDetailsService",
        "Configuration",
        "EnableWebSecurity",
        "EnableMethodSecurity",
        "Bean",
        "Bean",
        "http",
        "http",
        "authorizeHttpRequests",
        "auth",
        "auth",
        "anyRequest",
        "authenticated",
        "oauth2ResourceServer",
        "oAuth2",
        "oAuth2",
        "jwt",
        "Customizer",
        "withDefaults",
        "http",
        "build",
        "Bean"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "@Bean",
        "public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {",
        "return http",
        ".authorizeHttpRequests(auth -> auth",
        ".anyRequest().permitAll()",
        ".requestMatchers(\"/login\").permitAll()",
        ".requestMatchers(\"/register/**\").permitAll()",
        ".anyRequest().authenticated()",
        ")",
        ".formLogin(AbstractAuthenticationFilterConfigurer::permitAll)",
        ".build();",
        "",
        "}",
        "@Bean",
        "public PasswordEncoder passwordEncoder() {",
        "return NoOpPasswordEncoder.getInstance();",
        "}",
        "@Bean",
        "public AuthenticationManager authenticationManager(UserDetailsService userDetailsService, PasswordEncoder passwordEncoder) {",
        "DaoAuthenticationProvider authProvider = new DaoAuthenticationProvider();",
        "authProvider.setUserDetailsService(userDetailsService);",
        "authProvider.setPasswordEncoder(passwordEncoder);",
        "return new ProviderManager(authProvider);",
        "}"
    ],
    "docstrings": [
        "* Конфигурация безопасности\n *\n * @author Sindicat"
    ],
    "functions": [
        "UserDetailsService",
        "userDetailsService",
        "SecurityFilterChain",
        "securityFilterChain",
        "PasswordEncoder",
        "passwordEncoder"
    ],
    "classes": [
        "SecurityConfig"
    ]
}