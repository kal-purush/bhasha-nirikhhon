{
    "identifiers": [
        "com",
        "example",
        "docconneting",
        "domain",
        "alarm",
        "controller",
        "com",
        "example",
        "docconneting",
        "common",
        "config",
        "JwtUtil",
        "com",
        "example",
        "docconneting",
        "common",
        "JwtFilter",
        "com",
        "example",
        "docconneting",
        "common",
        "resolver",
        "AuthUserArgumentResolver",
        "com",
        "example",
        "docconneting",
        "common",
        "response",
        "PageInfo",
        "com",
        "example",
        "docconneting",
        "common",
        "response",
        "PageResult",
        "com",
        "example",
        "docconneting",
        "domain",
        "alarm",
        "dto",
        "AlarmResponse",
        "com",
        "example",
        "docconneting",
        "domain",
        "alarm",
        "entity",
        "AlarmHistories",
        "com",
        "example",
        "docconneting",
        "domain",
        "alarm",
        "enums",
        "AlarmType",
        "com",
        "example",
        "docconneting",
        "domain",
        "alarm",
        "service",
        "AlarmService",
        "com",
        "example",
        "docconneting",
        "domain",
        "auth",
        "entity",
        "AuthUser",
        "com",
        "example",
        "docconneting",
        "domain",
        "user",
        "enums",
        "UserRole",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeEach",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "boot",
        "test",
        "autoconfigure",
        "web",
        "servlet",
        "WebMvcTest",
        "org",
        "springframework",
        "context",
        "annotation",
        "Import",
        "org",
        "springframework",
        "data",
        "domain",
        "PageRequest",
        "org",
        "springframework",
        "data",
        "domain",
        "Pageable",
        "org",
        "springframework",
        "data",
        "jpa",
        "mapping",
        "JpaMetamodelMappingContext",
        "org",
        "springframework",
        "test",
        "context",
        "TestPropertySource",
        "org",
        "springframework",
        "test",
        "context",
        "bean",
        "mockito",
        "MockitoBean",
        "org",
        "springframework",
        "test",
        "util",
        "ReflectionTestUtils",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "MockMvc",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "result",
        "MockMvcResultMatchers",
        "java",
        "time",
        "LocalDateTime",
        "java",
        "util",
        "java",
        "util",
        "org",
        "mockito",
        "ArgumentMatchers",
        "argThat",
        "org",
        "mockito",
        "ArgumentMatchers",
        "refEq",
        "org",
        "mockito",
        "BDDMockito",
        "given",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "request",
        "MockMvcRequestBuilders",
        "get",
        "WebMvcTest",
        "TestPropertySource",
        "properties",
        "Import",
        "Autowired",
        "mockMvc",
        "MockitoBean",
        "jpaMetamodelMappingContext",
        "MockitoBean",
        "alarmService",
        "Autowired",
        "jwtUtil",
        "histories1",
        "histories2",
        "BeforeEach",
        "histories1",
        "AlarmHistories",
        "of",
        "AlarmType",
        "COMMENT",
        "ReflectionTestUtils",
        "setField",
        "histories1",
        "ReflectionTestUtils",
        "setField",
        "histories1",
        "LocalDateTime",
        "now",
        "histories2",
        "AlarmHistories",
        "of",
        "AlarmType",
        "COMMENT",
        "ReflectionTestUtils",
        "setField",
        "histories2",
        "ReflectionTestUtils",
        "setField",
        "histories2",
        "LocalDateTime",
        "now",
        "Test",
        "page",
        "size",
        "totalElement",
        "totalPages",
        "pageable",
        "PageRequest",
        "of",
        "page",
        "size",
        "userId",
        "userRole",
        "UserRole",
        "PATIENT",
        "authUser",
        "AuthUser",
        "of",
        "userId",
        "userRole",
        "accessToken",
        "jwtUtil",
        "createToken",
        "userId",
        "userRole",
        "alarmHistories",
        "alarmHistories",
        "add",
        "histories1",
        "alarmHistories",
        "add",
        "histories2",
        "alarmResponses",
        "AlarmResponse",
        "toAlarmResponse",
        "alarmHistories",
        "pageInfo",
        "PageInfo",
        "builder",
        "pageNum",
        "page",
        "pageSize",
        "size",
        "totalElement",
        "totalElement",
        "totalPage",
        "totalPages",
        "build",
        "pageResult",
        "alarmResponses",
        "pageInfo",
        "given",
        "alarmService",
        "findAlarms",
        "refEq",
        "authUser",
        "argThat",
        "p",
        "p",
        "getPageNumber",
        "pageable",
        "getPageNumber",
        "p",
        "getPageSize",
        "pageable",
        "getPageSize",
        "willReturn",
        "pageResult",
        "mockMvc",
        "perform",
        "get",
        "param",
        "param",
        "header",
        "accessToken",
        "andExpect",
        "MockMvcResultMatchers",
        "status",
        "isOk",
        "andExpect",
        "MockMvcResultMatchers",
        "jsonPath",
        "value",
        "histories1",
        "getId",
        "andExpect",
        "MockMvcResultMatchers",
        "jsonPath",
        "value",
        "histories1",
        "getContent",
        "andExpect",
        "MockMvcResultMatchers",
        "jsonPath",
        "value",
        "histories1",
        "getAlarmType",
        "name",
        "andExpect",
        "MockMvcResultMatchers",
        "jsonPath",
        "value",
        "histories2",
        "getId",
        "andExpect",
        "MockMvcResultMatchers",
        "jsonPath",
        "value",
        "histories2",
        "getContent",
        "andExpect",
        "MockMvcResultMatchers",
        "jsonPath",
        "value",
        "histories2",
        "getAlarmType",
        "name",
        "andExpect",
        "MockMvcResultMatchers",
        "jsonPath",
        "value",
        "page",
        "andExpect",
        "MockMvcResultMatchers",
        "jsonPath",
        "value",
        "size",
        "andExpect",
        "MockMvcResultMatchers",
        "jsonPath",
        "value",
        "totalElement",
        "andExpect",
        "MockMvcResultMatchers",
        "jsonPath",
        "value",
        "totalPages"
    ],
    "literals": [
        "\"jwt.secret.key=5Gk6hibHDtKLFVk4NdBX039rvehSLNjfKsdXpm/pHsU=\"",
        "\"회원님의 글에 댓글이 달렸습니다\"",
        "\"id\"",
        "\"createdAt\"",
        "\"회원님의 글에 댓글이 달렸습니다\"",
        "\"id\"",
        "\"createdAt\"",
        "\"/api/v1/notifications\"",
        "\"page\"",
        "\"0\"",
        "\"size\"",
        "\"10\"",
        "\"Authorization\"",
        "\"$.data[0].id\"",
        "\"$.data[0].content\"",
        "\"$.data[0].alarmType\"",
        "\"$.data[1].id\"",
        "\"$.data[1].content\"",
        "\"$.data[1].alarmType\"",
        "\"$.page.pageNum\"",
        "\"$.page.pageSize\"",
        "\"$.page.totalElement\"",
        "\"$.page.totalPage\""
    ],
    "variables": [
        "mockMvc",
        "jpaMetamodelMappingContext",
        "alarmService",
        "jwtUtil",
        "histories1",
        "histories2"
    ],
    "comments": [
        "given",
        "when & then"
    ],
    "docstrings": [],
    "functions": [
        "setUp",
        "알람_내역을_페이징을_이용하여_조회한다"
    ],
    "classes": [
        "AlarmControllerTest"
    ]
}