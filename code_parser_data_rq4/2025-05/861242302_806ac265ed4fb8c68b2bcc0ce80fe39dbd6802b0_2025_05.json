{
    "identifiers": [
        "logging",
        "sys",
        "re",
        "logging",
        "DEBUG",
        "logging",
        "INFO",
        "logging",
        "WARNING",
        "logging",
        "ERROR",
        "logging",
        "CRITICAL",
        "text",
        "re",
        "compile",
        "ansi_escape",
        "sub",
        "text",
        "logging",
        "Formatter",
        "record",
        "COLOR_CODES",
        "get",
        "record",
        "levelno",
        "format",
        "record",
        "color",
        "message",
        "RESET",
        "logging",
        "Formatter",
        "record",
        "strip_ansi_codes",
        "record",
        "getMessage",
        "logging",
        "LogRecord",
        "name",
        "record",
        "name",
        "level",
        "record",
        "levelno",
        "pathname",
        "record",
        "pathname",
        "lineno",
        "record",
        "lineno",
        "msg",
        "clean_msg",
        "args",
        "exc_info",
        "record",
        "exc_info",
        "func",
        "record",
        "funcName",
        "sinfo",
        "record",
        "stack_info",
        "format",
        "record_copy",
        "logfile",
        "debug_log",
        "logging",
        "getLogger",
        "logger",
        "setLevel",
        "logging",
        "DEBUG",
        "logger",
        "handlers",
        "clear",
        "logging",
        "DEBUG",
        "debug_log",
        "logging",
        "INFO",
        "logging",
        "StreamHandler",
        "sys",
        "stdout",
        "console_handler",
        "setLevel",
        "min_level",
        "ConsoleFormatter",
        "console_handler",
        "setFormatter",
        "console_formatter",
        "logger",
        "addHandler",
        "console_handler",
        "logging",
        "FileHandler",
        "logfile",
        "encoding",
        "file_handler",
        "setLevel",
        "min_level",
        "FileFormatter",
        "file_handler",
        "setFormatter",
        "file_formatter",
        "logger",
        "addHandler",
        "file_handler",
        "logger"
    ],
    "literals": [
        "\"\\033[94m\"",
        "\"\\033[92m\"",
        "\"\\033[93m\"",
        "\"\\033[91m\"",
        "\"\\033[1;91m\"",
        "\"\\033[0m\"",
        "r'\\x1B(?:[@-Z\\\\-_]|\\[[0-?]*[ -/]*[@-~])'",
        "''",
        "\"\"",
        "f\"{color}{message}{RESET}\"",
        "\"app.log\"",
        "\"Logger\"",
        "\"%(levelname)s: %(message)s\"",
        "\"utf-8\"",
        "\"%(asctime)s - %(levelname)s - %(message)s\""
    ],
    "variables": [
        "COLOR_CODES",
        "RESET",
        "ansi_escape",
        "color",
        "message",
        "clean_msg",
        "record_copy",
        "logger",
        "min_level",
        "console_handler",
        "console_formatter",
        "file_handler",
        "file_formatter"
    ],
    "comments": [
        "Couleurs ANSI par niveau de log",
        "Bleu",
        "Vert",
        "Jaune",
        "Rouge",
        "Rouge vif",
        "Supprime les codes ANSI (pour l'écriture dans les fichiers)",
        "Formatter pour la console avec couleurs",
        "Formatter pour le fichier sans les couleurs",
        "Fonction de configuration du logger",
        "Toujours logger tout (filtrage par handler)",
        "Détermine le niveau de log selon la variable",
        "Console handler",
        "File handler"
    ],
    "docstrings": [],
    "functions": [
        "strip_ansi_codes",
        "format",
        "format",
        "setup_logger"
    ],
    "classes": [
        "ConsoleFormatter",
        "FileFormatter"
    ]
}