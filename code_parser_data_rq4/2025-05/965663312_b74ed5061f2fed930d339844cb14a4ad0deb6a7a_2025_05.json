{
    "identifiers": [
        "flask",
        "Flask",
        "jsonify",
        "request",
        "make_response",
        "flask_expects_json",
        "expects_json",
        "argparse",
        "json",
        "logging",
        "os",
        "requests",
        "sqlite3",
        "threading",
        "Flask",
        "app",
        "logger",
        "setLevel",
        "logging",
        "INFO",
        "app",
        "route",
        "app",
        "route",
        "methods",
        "expects_json",
        "QUEUE_ADD_DEL_ITEM",
        "request",
        "get_json",
        "reqData",
        "requests",
        "post",
        "url",
        "url",
        "data",
        "json",
        "dumps",
        "postData",
        "headers",
        "JSON_HEADER_DATATYPE",
        "resp",
        "status_code",
        "make_response",
        "resp",
        "text",
        "resp",
        "status_code",
        "reqData",
        "reqData",
        "reqData",
        "requests",
        "post",
        "url",
        "url",
        "data",
        "json",
        "dumps",
        "postData",
        "headers",
        "JSON_HEADER_DATATYPE",
        "resp",
        "status_code",
        "make_response",
        "resp",
        "text",
        "app",
        "route",
        "methods",
        "expects_json",
        "GET_PURCHASE_QUEUED_ITEMS",
        "request",
        "get_json",
        "reqData",
        "requests",
        "get",
        "url",
        "url",
        "data",
        "json",
        "dumps",
        "getData",
        "headers",
        "JSON_HEADER_DATATYPE",
        "resp",
        "status_code",
        "resp",
        "text",
        "jsonify",
        "make_response",
        "resp",
        "json",
        "requests",
        "exceptions",
        "JSONDecodeError",
        "make_response",
        "jsonify",
        "respJson",
        "app",
        "route",
        "methods",
        "expects_json",
        "GET_PURCHASE_QUEUED_ITEMS",
        "request",
        "get_json",
        "reqData",
        "requests",
        "post",
        "url",
        "url",
        "data",
        "json",
        "dumps",
        "postData",
        "headers",
        "JSON_HEADER_DATATYPE",
        "resp",
        "status_code",
        "make_response",
        "resp",
        "text",
        "resp",
        "json",
        "requests",
        "exceptions",
        "JSONDecodeError",
        "make_response",
        "jsonify",
        "respJson",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "dest",
        "required",
        "parser",
        "parse_args",
        "app",
        "run",
        "debug"
    ],
    "literals": [
        "'Content-type'",
        "'application/json'",
        "\"type\"",
        "\"object\"",
        "\"properties\"",
        "\"user_id\"",
        "\"type\"",
        "\"integer\"",
        "\"item_id\"",
        "\"type\"",
        "\"integer\"",
        "\"quantity\"",
        "\"type\"",
        "\"integer\"",
        "\"required\"",
        "\"user_id\"",
        "\"item_id\"",
        "\"quantity\"",
        "\"type\"",
        "\"object\"",
        "\"properties\"",
        "\"user_id\"",
        "\"type\"",
        "\"integer\"",
        "\"required\"",
        "\"user_id\"",
        "'/'",
        "\"hello, world\"",
        "'/queue_item'",
        "'POST'",
        "'http://127.0.0.1:2000/get_or_create_cart'",
        "'user_id'",
        "'user_id'",
        "'http://127.0.0.1:2000/add_item_to_cart'",
        "'user_id'",
        "'user_id'",
        "'item_id'",
        "'item_id'",
        "'quantity'",
        "'quantity'",
        "'success'",
        "'/get_queued_items'",
        "'GET'",
        "'http://127.0.0.1:2000/get_cart_items'",
        "'user_id'",
        "'user_id'",
        "'no_cart'",
        "'items'",
        "'error getting items in cart'",
        "'failed to decode json getting cart items'",
        "'/purchase_queue'",
        "'POST'",
        "'http://127.0.0.1:2000/purchase_cart'",
        "'user_id'",
        "'user_id'",
        "'failed to decode json purchasing cart items'",
        "'__main__'",
        "'--db-directory'",
        "'db_directory'"
    ],
    "variables": [
        "app",
        "JSON_HEADER_DATATYPE",
        "QUEUE_ADD_DEL_ITEM",
        "GET_PURCHASE_QUEUED_ITEMS",
        "reqData",
        "url",
        "postData",
        "resp",
        "url",
        "postData",
        "resp",
        "reqData",
        "url",
        "getData",
        "resp",
        "respJson",
        "reqData",
        "url",
        "postData",
        "resp",
        "respJson",
        "parser",
        "args"
    ],
    "comments": [
        "\"constants\"",
        "json schemas",
        "@todo swelter: change this to user email and query for user id in call",
        "@todo swelter: change this to item name and make shopping cart service query for item id",
        "@todo swelter: change this to user email and query for user id in call",
        "",
        "",
        "Queues the specific item",
        "",
        "",
        "global ordersDbConn",
        "global dbCursor",
        "Simply ensure a cart exists",
        "@todo swelter: change this to something more permanent later",
        "if something failed here, it's quite bad, just return error",
        "try:",
        "respJson = resp.json()",
        "except requests.exceptions.JSONDecodeError:",
        "return make_response('failed to decode json getting cart id', 500)",
        "",
        "",
        "Gets current item queue",
        "",
        "",
        "if no cart found, return empty item list",
        "",
        "",
        "Purchase current queue of items",
        "",
        "",
        "if there was an error purchasing cart, return it",
        "return purchased items"
    ],
    "docstrings": [],
    "functions": [
        "HelloWorld",
        "QueueAddItem",
        "GetQueuedItems",
        "PurchaseQueuedItems"
    ],
    "classes": []
}