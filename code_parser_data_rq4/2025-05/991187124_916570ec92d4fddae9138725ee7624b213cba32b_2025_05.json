{
    "identifiers": [
        "copy",
        "pytest",
        "numpy",
        "np",
        "dace",
        "dace",
        "transformation",
        "experimental",
        "layout_transformations",
        "PermuteArrayDimensions",
        "PermuteArrayDims",
        "dace",
        "transformation",
        "experimental",
        "layout_transformations",
        "PermuteMapDimensions",
        "PermuteMapDims",
        "dace",
        "Config",
        "value",
        "dace",
        "symbol",
        "dtype",
        "dace",
        "int64",
        "dace",
        "program",
        "TSTEPS",
        "dace",
        "int64",
        "vals_A",
        "dace",
        "float64",
        "N",
        "N",
        "N",
        "vals_B",
        "dace",
        "float64",
        "N",
        "N",
        "N",
        "neighbors",
        "dace",
        "int64",
        "N",
        "N",
        "_",
        "TSTEPS",
        "i",
        "j",
        "k",
        "dace",
        "N",
        "N",
        "N",
        "i",
        "j",
        "k",
        "vals_A",
        "i",
        "j",
        "k",
        "vals_A",
        "i",
        "j",
        "k",
        "vals_A",
        "i",
        "j",
        "k",
        "vals_A",
        "neighbors",
        "i",
        "k",
        "j",
        "neighbors",
        "i",
        "k",
        "vals_A",
        "neighbors",
        "i",
        "k",
        "j",
        "neighbors",
        "i",
        "k",
        "vals_A",
        "neighbors",
        "i",
        "k",
        "j",
        "neighbors",
        "i",
        "k",
        "vals_A",
        "neighbors",
        "i",
        "k",
        "j",
        "neighbors",
        "i",
        "k",
        "i",
        "j",
        "k",
        "dace",
        "N",
        "N",
        "N",
        "i",
        "j",
        "k",
        "vals_B",
        "i",
        "j",
        "k",
        "vals_B",
        "i",
        "j",
        "k",
        "vals_B",
        "i",
        "j",
        "k",
        "vals_B",
        "neighbors",
        "i",
        "k",
        "j",
        "neighbors",
        "i",
        "k",
        "vals_B",
        "neighbors",
        "i",
        "k",
        "j",
        "neighbors",
        "i",
        "k",
        "vals_B",
        "neighbors",
        "i",
        "k",
        "j",
        "neighbors",
        "i",
        "k",
        "vals_B",
        "neighbors",
        "i",
        "k",
        "j",
        "neighbors",
        "i",
        "k",
        "kernel",
        "to_sdfg",
        "use_cache",
        "simplify",
        "original_sdfg",
        "simplify",
        "skip",
        "copy",
        "deepcopy",
        "original_sdfg",
        "original_sdfg",
        "name",
        "PermuteArrayDims",
        "PermuteArrayDimensions",
        "permute_map",
        "add_permute_maps",
        "apply_pass",
        "sdfg",
        "transformed_sdfg",
        "pipeline_results",
        "state",
        "transformed_sdfg",
        "states",
        "node",
        "state",
        "nodes",
        "isinstance",
        "node",
        "dace",
        "nodes",
        "MapEntry",
        "node",
        "label",
        "map_labels",
        "PermuteMapDims",
        "PermuteMapDimensions",
        "permute_map",
        "map_labels",
        "use_labels",
        "apply_pass",
        "sdfg",
        "transformed_sdfg",
        "pipeline_results",
        "original_sdfg",
        "validate",
        "transformed_sdfg",
        "validate",
        "np",
        "random",
        "seed",
        "np",
        "fromfunction",
        "i",
        "j",
        "k",
        "i",
        "k",
        "j",
        "N_val",
        "N_val",
        "N_val",
        "N_val",
        "dtype",
        "np",
        "float64",
        "np",
        "fromfunction",
        "i",
        "j",
        "k",
        "i",
        "k",
        "j",
        "N_val",
        "N_val",
        "N_val",
        "N_val",
        "dtype",
        "np",
        "float64",
        "np",
        "random",
        "randint",
        "N_val",
        "size",
        "N_val",
        "N_val",
        "dtype",
        "np",
        "int64",
        "vals_A_orig",
        "copy",
        "vals_B_orig",
        "copy",
        "original_sdfg",
        "vals_A",
        "vals_A_orig",
        "vals_B",
        "vals_B_orig",
        "neighbors",
        "neighbors",
        "N",
        "N_val",
        "TSTEPS",
        "TSTEPS_val",
        "transformed_sdfg",
        "vals_A",
        "vals_A_trans",
        "vals_B",
        "vals_B_trans",
        "neighbors",
        "neighbors",
        "N",
        "N_val",
        "TSTEPS",
        "TSTEPS_val",
        "np",
        "allclose",
        "vals_A_orig",
        "vals_A_trans",
        "rtol",
        "atol",
        "np",
        "allclose",
        "vals_B_orig",
        "vals_B_trans",
        "rtol",
        "atol",
        "vals_A_close",
        "vals_B_close",
        "vals_A_close",
        "vals_B_close",
        "vals_A_close",
        "np",
        "max",
        "np",
        "abs",
        "vals_A_orig",
        "vals_A_trans",
        "np",
        "abs",
        "vals_A_orig",
        "vals_A_trans",
        "vals_B_close",
        "np",
        "max",
        "np",
        "abs",
        "vals_B_orig",
        "vals_B_trans",
        "np",
        "abs",
        "vals_B_orig",
        "vals_B_trans",
        "vals_A_close",
        "vals_B_close",
        "test_standalone_execution",
        "exit",
        "success"
    ],
    "literals": [
        "\"Running standalone permute transformations test...\"",
        "'cache'",
        "'unique'",
        "\"N\"",
        "\"ArrayElimination\"",
        "\"DeadDataflowElimination\"",
        "\"_transposed\"",
        "\"vals_A\"",
        "\"vals_B\"",
        "f\"vals_A results match: {vals_A_close}\"",
        "f\"vals_B results match: {vals_B_close}\"",
        "\"✅ All tests passed! Permute transformations preserve correctness.\"",
        "\"❌ Test failed! Results differ between original and transformed SDFGs.\"",
        "f\"vals_A max difference: {np.max(np.abs(vals_A_orig - vals_A_trans))}\"",
        "f\"vals_A difference: {np.abs(vals_A_orig - vals_A_trans)}\"",
        "f\"vals_B max difference: {np.max(np.abs(vals_B_orig - vals_B_trans))}\"",
        "f\"vals_B difference: {np.abs(vals_B_orig - vals_B_trans)}\"",
        "\"__main__\""
    ],
    "variables": [
        "N_val",
        "TSTEPS_val",
        "N",
        "vals_B",
        "vals_A",
        "original_sdfg",
        "transformed_sdfg",
        "transformed_sdfg",
        "name",
        "map_labels",
        "map_labels",
        "vals_A_orig",
        "vals_B_orig",
        "neighbors",
        "vals_A_trans",
        "vals_B_trans",
        "vals_A_close",
        "vals_B_close",
        "success"
    ],
    "comments": [
        "Setup",
        "Create kernel",
        "Create original SDFG",
        "Create transformed SDFG",
        "Apply transformations",
        "Find and apply map transformations",
        "Validate SDFGs",
        "Initialize data",
        "Execute SDFGs",
        "Check results",
        "Run standalone test"
    ],
    "docstrings": [
        "\"\"\"Standalone test function that can be run without pytest.\"\"\""
    ],
    "functions": [
        "test_standalone_execution",
        "kernel"
    ],
    "classes": []
}