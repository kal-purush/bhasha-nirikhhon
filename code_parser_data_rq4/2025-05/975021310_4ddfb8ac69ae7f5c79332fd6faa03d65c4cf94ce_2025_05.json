{
    "identifiers": [
        "pytest",
        "flask",
        "Flask",
        "app",
        "app",
        "check_winner",
        "is_board_full",
        "pytest",
        "fixture",
        "app",
        "config",
        "app",
        "test_client",
        "client",
        "client",
        "client",
        "check_winner",
        "board",
        "client",
        "check_winner",
        "board",
        "client",
        "check_winner",
        "board",
        "client",
        "check_winner",
        "board",
        "client",
        "is_board_full",
        "board",
        "client",
        "is_board_full",
        "board",
        "client",
        "client",
        "get",
        "response",
        "status_code",
        "response",
        "data",
        "client",
        "client",
        "post",
        "data",
        "query_string",
        "response",
        "status_code",
        "client",
        "get",
        "response",
        "location",
        "response",
        "data",
        "client",
        "client",
        "post",
        "data",
        "query_string",
        "client",
        "get",
        "response",
        "location",
        "response",
        "data",
        "client",
        "client",
        "post",
        "data",
        "query_string",
        "response",
        "status_code",
        "response",
        "data",
        "response",
        "data",
        "client",
        "client",
        "get",
        "response",
        "status_code",
        "response",
        "location"
    ],
    "literals": [
        "'TESTING'",
        "'X'",
        "'X'",
        "'X'",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "'X'",
        "'X'",
        "' '",
        "' '",
        "'X'",
        "' '",
        "' '",
        "'X'",
        "' '",
        "' '",
        "'X'",
        "'X'",
        "' '",
        "' '",
        "' '",
        "'X'",
        "' '",
        "' '",
        "' '",
        "'X'",
        "'X'",
        "'X'",
        "'O'",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "'X'",
        "'O'",
        "'X'",
        "'O'",
        "'X'",
        "'O'",
        "'X'",
        "'O'",
        "'X'",
        "'X'",
        "'O'",
        "'X'",
        "'O'",
        "'X'",
        "'O'",
        "'X'",
        "'O'",
        "' '",
        "'/play'",
        "b'Tic-Tac-Toe'",
        "'/play'",
        "'position'",
        "'0'",
        "'board'",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "'player'",
        "'X'",
        "'game_over'",
        "'false'",
        "b'X'",
        "'/play'",
        "'position'",
        "'0'",
        "'board'",
        "'X'",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "'player'",
        "'O'",
        "'game_over'",
        "'false'",
        "b'X'",
        "'/play'",
        "'position'",
        "'0'",
        "'board'",
        "'X'",
        "'O'",
        "'X'",
        "'O'",
        "'X'",
        "'O'",
        "'X'",
        "'O'",
        "'X'",
        "'player'",
        "'X'",
        "'game_over'",
        "'true'",
        "b'Draw'",
        "b'wins'",
        "'/reset'",
        "'/play'"
    ],
    "variables": [
        "board",
        "board",
        "board",
        "board",
        "board",
        "board",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response"
    ],
    "comments": [
        "Assuming your Flask app is in app.py",
        "Redirect",
        "Follow the redirect to check the new board state (optional)"
    ],
    "docstrings": [],
    "functions": [
        "client",
        "test_check_winner_row",
        "test_check_winner_col",
        "test_check_winner_diag",
        "test_check_winner_no_winner",
        "test_is_board_full_full",
        "test_is_board_full_not_full",
        "test_play_route_get",
        "test_play_route_post_valid_move",
        "test_play_route_post_invalid_move",
        "test_play_route_post_game_over",
        "test_reset_route"
    ],
    "classes": []
}