{
    "identifiers": [
        "copy",
        "traceback",
        "time",
        "random",
        "timeit",
        "time",
        "strftime",
        "time",
        "localtime",
        "board",
        "movestr",
        "board",
        "movestr",
        "genControlMap",
        "Board",
        "copy",
        "copy",
        "Board",
        "INITBOARD_LST",
        "copy",
        "copy",
        "Board",
        "INITMOVED",
        "b",
        "i",
        "board",
        "i",
        "kloc",
        "i",
        "board",
        "i",
        "kloc",
        "i",
        "p",
        "n",
        "p",
        "n",
        "m",
        "max",
        "n",
        "m",
        "p",
        "s",
        "end",
        "msg",
        "l",
        "end",
        "l",
        "traceback",
        "extract_stack",
        "Board",
        "LOGLEVEL",
        "l",
        "l",
        "now_str",
        "st",
        "name",
        "st",
        "lineno",
        "lstr",
        "msg",
        "end",
        "now_str",
        "st",
        "name",
        "st",
        "lineno",
        "lstr",
        "msg",
        "traceback",
        "format_exc",
        "limit",
        "end",
        "tempstr",
        "end",
        "l",
        "open",
        "f",
        "f",
        "write",
        "tempstr",
        "s",
        "append",
        "next",
        "movestr",
        "hasattr",
        "next",
        "len",
        "next",
        "decs",
        "next",
        "decs",
        "join",
        "s",
        "hasattr",
        "scoreMyself",
        "score",
        "hasattr",
        "s",
        "minmax_score",
        "s",
        "s",
        "turn",
        "s",
        "get_best_moves",
        "s",
        "moved",
        "s",
        "join",
        "i",
        "movestr",
        "i",
        "breed",
        "log",
        "s",
        "Board",
        "copy",
        "copy",
        "TSTBOARD",
        "b",
        "log",
        "b",
        "b",
        "genControlMap",
        "b",
        "log",
        "b",
        "str_CM",
        "b",
        "log",
        "b",
        "ControlNum",
        "row",
        "s",
        "s",
        "row",
        "col",
        "ControlMap",
        "row",
        "col",
        "s",
        "s",
        "s",
        "row",
        "s",
        "s",
        "row",
        "col",
        "ControlMap",
        "row",
        "col",
        "s",
        "s",
        "s",
        "s",
        "s",
        "row",
        "col",
        "Board",
        "iter8x8",
        "board",
        "row",
        "col",
        "p",
        "p",
        "controlAsR",
        "row",
        "col",
        "p",
        "controlAsR",
        "row",
        "col",
        "p",
        "controlAsB",
        "row",
        "col",
        "p",
        "controlAsB",
        "row",
        "col",
        "p",
        "controlAsR",
        "row",
        "col",
        "controlAsB",
        "row",
        "col",
        "p",
        "controlAsR",
        "row",
        "col",
        "controlAsB",
        "row",
        "col",
        "p",
        "controlAsUpperP",
        "row",
        "col",
        "p",
        "controlAsLowerP",
        "row",
        "col",
        "p",
        "i",
        "j",
        "Board",
        "NMOVES",
        "row",
        "i",
        "col",
        "j",
        "board",
        "row",
        "i",
        "col",
        "j",
        "board",
        "row",
        "i",
        "col",
        "j",
        "islower",
        "ControlMap",
        "row",
        "i",
        "col",
        "j",
        "p",
        "i",
        "j",
        "Board",
        "NMOVES",
        "row",
        "i",
        "col",
        "j",
        "board",
        "row",
        "i",
        "col",
        "j",
        "board",
        "row",
        "i",
        "col",
        "j",
        "islower",
        "ControlMap",
        "row",
        "i",
        "col",
        "j",
        "p",
        "i",
        "j",
        "Board",
        "KMOVES",
        "row",
        "i",
        "col",
        "j",
        "board",
        "row",
        "i",
        "col",
        "j",
        "board",
        "row",
        "i",
        "col",
        "j",
        "islower",
        "ControlMap",
        "row",
        "i",
        "col",
        "j",
        "p",
        "i",
        "j",
        "Board",
        "KMOVES",
        "row",
        "i",
        "col",
        "j",
        "board",
        "row",
        "i",
        "col",
        "j",
        "board",
        "row",
        "i",
        "col",
        "j",
        "islower",
        "ControlMap",
        "row",
        "i",
        "col",
        "j",
        "log",
        "l",
        "sum",
        "j",
        "j",
        "i",
        "i",
        "ControlMap",
        "Board",
        "copy",
        "copy",
        "Board",
        "INITBOARD_STR",
        "b",
        "scoreMyself",
        "b",
        "log",
        "b",
        "i",
        "board",
        "score",
        "Board",
        "POINTS",
        "i",
        "Board",
        "getInitBoard",
        "time",
        "time",
        "b",
        "alpha_beta_puning",
        "deepth",
        "deepth",
        "time",
        "time",
        "b",
        "log",
        "ax",
        "tok",
        "tik",
        "deepth",
        "b",
        "log",
        "b",
        "b",
        "decs",
        "b",
        "log",
        "next",
        "movestr",
        "hasattr",
        "next",
        "len",
        "next",
        "decs",
        "next",
        "decs",
        "deep",
        "alpha",
        "beta",
        "thedeep",
        "thedeep",
        "deep",
        "thedeep",
        "deep",
        "scoreMyself",
        "score",
        "turn",
        "d",
        "breed",
        "thedeep",
        "deep",
        "process_bar",
        "ax",
        "ntol",
        "ax",
        "ax",
        "d",
        "alpha_beta_puning",
        "deep",
        "alpha",
        "beta",
        "thedeep",
        "d",
        "minmax_score",
        "decs",
        "append",
        "d",
        "max",
        "alpha",
        "eval",
        "beta",
        "alpha",
        "len",
        "decs",
        "decs",
        "sort",
        "key",
        "d",
        "d",
        "minmax_score",
        "reverse",
        "turn",
        "decs",
        "minmax_score",
        "ControlMap",
        "kloc",
        "scoreMyself",
        "score",
        "Board",
        "POINTS",
        "decs",
        "append",
        "Board",
        "d",
        "breed",
        "thedeep",
        "deep",
        "process_bar",
        "ax",
        "ntol",
        "ax",
        "ax",
        "d",
        "alpha_beta_puning",
        "deep",
        "alpha",
        "beta",
        "thedeep",
        "d",
        "minmax_score",
        "decs",
        "append",
        "d",
        "min",
        "beta",
        "eval",
        "beta",
        "alpha",
        "len",
        "decs",
        "decs",
        "sort",
        "key",
        "d",
        "d",
        "minmax_score",
        "reverse",
        "turn",
        "decs",
        "minmax_score",
        "ControlMap",
        "kloc",
        "scoreMyself",
        "score",
        "Board",
        "POINTS",
        "decs",
        "append",
        "Board",
        "ax",
        "mv",
        "i",
        "i",
        "board",
        "breed",
        "log",
        "end",
        "input",
        "mv",
        "startswith",
        "log",
        "l",
        "board",
        "father",
        "father",
        "board",
        "log",
        "board",
        "mv",
        "startswith",
        "dump",
        "d",
        "legalops",
        "d",
        "movestr",
        "mv",
        "board",
        "hasattr",
        "d",
        "father",
        "len",
        "d",
        "father",
        "decs",
        "d2",
        "d",
        "father",
        "decs",
        "d2",
        "d",
        "d2",
        "d",
        "mv",
        "log",
        "log",
        "l",
        "deepth",
        "Board",
        "getInitBoard",
        "b",
        "log",
        "input",
        "l",
        "b",
        "log",
        "b",
        "b",
        "getMove",
        "time",
        "time",
        "b",
        "alpha_beta_puning",
        "deepth",
        "deepth",
        "time",
        "time",
        "hasattr",
        "b",
        "len",
        "b",
        "decs",
        "b",
        "decs",
        "b",
        "d",
        "b",
        "decs",
        "d",
        "b",
        "decs",
        "b",
        "log",
        "movestr",
        "b",
        "movestr",
        "ax",
        "tok",
        "tik",
        "deepth",
        "l",
        "b",
        "minmax_score",
        "b",
        "log",
        "b",
        "b",
        "log",
        "b",
        "get_best_moves",
        "l",
        "b",
        "ControlMap",
        "b",
        "kloc",
        "b",
        "log",
        "l",
        "b",
        "log",
        "l",
        "b",
        "log",
        "end",
        "input",
        "Board",
        "copy",
        "copy",
        "TSTBOARD",
        "Board",
        "ALLMOVED",
        "b",
        "calckloc",
        "dec",
        "b",
        "breed",
        "b",
        "log",
        "dec",
        "movestr",
        "dec",
        "scoreMyself",
        "ax",
        "b",
        "log",
        "ax",
        "Board",
        "TS2BOARD",
        "b",
        "breed",
        "timeit",
        "Board",
        "TS2BOARD",
        "Board",
        "INITMOVED",
        "b",
        "breed",
        "timeit",
        "turn",
        "turn",
        "row",
        "col",
        "Board",
        "iter8x8",
        "board",
        "row",
        "col",
        "p",
        "p",
        "islower",
        "turn",
        "p",
        "p",
        "dec",
        "moveAsR",
        "row",
        "col",
        "dec",
        "ControlMap",
        "oppo",
        "dec",
        "kloc",
        "me",
        "dec",
        "p",
        "upper",
        "dec",
        "moveAsB",
        "row",
        "col",
        "dec",
        "ControlMap",
        "oppo",
        "dec",
        "kloc",
        "me",
        "dec",
        "p",
        "upper",
        "dec",
        "moveAsR",
        "row",
        "col",
        "dec",
        "ControlMap",
        "oppo",
        "dec",
        "kloc",
        "me",
        "dec",
        "dec",
        "moveAsB",
        "row",
        "col",
        "dec",
        "ControlMap",
        "oppo",
        "dec",
        "kloc",
        "me",
        "dec",
        "p",
        "upper",
        "i",
        "j",
        "Board",
        "NMOVES",
        "row",
        "i",
        "col",
        "j",
        "board",
        "row",
        "i",
        "col",
        "j",
        "board",
        "row",
        "i",
        "col",
        "j",
        "islower",
        "turn",
        "move",
        "row",
        "col",
        "row",
        "i",
        "col",
        "j",
        "dec",
        "ControlMap",
        "oppo",
        "dec",
        "kloc",
        "me",
        "dec",
        "p",
        "dec",
        "moveAsUpperK",
        "row",
        "col",
        "dec",
        "ControlMap",
        "oppo",
        "dec",
        "kloc",
        "me",
        "dec",
        "p",
        "dec",
        "moveAsLowerK",
        "row",
        "col",
        "dec",
        "ControlMap",
        "oppo",
        "dec",
        "kloc",
        "me",
        "dec",
        "p",
        "dec",
        "moveAsUpperP",
        "row",
        "col",
        "dec",
        "ControlMap",
        "oppo",
        "dec",
        "kloc",
        "me",
        "dec",
        "p",
        "dec",
        "moveAsLowerP",
        "row",
        "col",
        "dec",
        "ControlMap",
        "oppo",
        "dec",
        "kloc",
        "me",
        "dec",
        "log",
        "l",
        "row",
        "col",
        "moved",
        "moved",
        "board",
        "board",
        "ControlMap",
        "oppo",
        "ControlMap",
        "oppo",
        "ControlMap",
        "oppo",
        "ControlMap",
        "oppo",
        "moveCastling",
        "dec",
        "moved",
        "dec",
        "moved",
        "dec",
        "kloc",
        "dec",
        "moved",
        "moved",
        "board",
        "board",
        "board",
        "ControlMap",
        "oppo",
        "ControlMap",
        "oppo",
        "ControlMap",
        "ControlMap",
        "oppo",
        "ControlMap",
        "oppo",
        "moveCastling",
        "dec",
        "moved",
        "dec",
        "moved",
        "dec",
        "kloc",
        "dec",
        "i",
        "j",
        "Board",
        "KMOVES",
        "row",
        "i",
        "col",
        "j",
        "board",
        "row",
        "i",
        "col",
        "j",
        "board",
        "row",
        "i",
        "col",
        "j",
        "islower",
        "turn",
        "move",
        "row",
        "col",
        "row",
        "i",
        "col",
        "j",
        "dec",
        "ControlMap",
        "oppo",
        "row",
        "i",
        "col",
        "j",
        "dec",
        "moved",
        "dec",
        "kloc",
        "row",
        "i",
        "col",
        "j",
        "dec",
        "row",
        "col",
        "moved",
        "moved",
        "board",
        "board",
        "ControlMap",
        "oppo",
        "ControlMap",
        "oppo",
        "ControlMap",
        "oppo",
        "ControlMap",
        "oppo",
        "moveCastling",
        "dec",
        "moved",
        "dec",
        "moved",
        "dec",
        "kloc",
        "dec",
        "moved",
        "moved",
        "board",
        "board",
        "board",
        "ControlMap",
        "oppo",
        "ControlMap",
        "oppo",
        "ControlMap",
        "oppo",
        "ControlMap",
        "oppo",
        "ControlMap",
        "oppo",
        "moveCastling",
        "dec",
        "moved",
        "dec",
        "moved",
        "dec",
        "kloc",
        "dec",
        "i",
        "j",
        "Board",
        "KMOVES",
        "row",
        "i",
        "col",
        "j",
        "board",
        "row",
        "i",
        "col",
        "j",
        "board",
        "row",
        "i",
        "col",
        "j",
        "islower",
        "turn",
        "move",
        "row",
        "col",
        "row",
        "i",
        "col",
        "j",
        "dec",
        "ControlMap",
        "oppo",
        "row",
        "i",
        "col",
        "j",
        "dec",
        "moved",
        "dec",
        "kloc",
        "row",
        "i",
        "col",
        "j",
        "dec",
        "row1",
        "col1",
        "row2",
        "col2",
        "copy",
        "copy",
        "board",
        "row1",
        "row1",
        "col2",
        "board",
        "row1",
        "col2",
        "col1",
        "row1",
        "row1",
        "board",
        "row1",
        "row1",
        "row1",
        "board",
        "row1",
        "produce",
        "neoboard",
        "movestr",
        "row",
        "col",
        "board",
        "row",
        "col",
        "row",
        "move",
        "row",
        "col",
        "row",
        "col",
        "d",
        "movePromotion",
        "row",
        "col",
        "col",
        "d",
        "row",
        "board",
        "col",
        "move",
        "row",
        "col",
        "col",
        "col",
        "board",
        "row",
        "col",
        "board",
        "row",
        "col",
        "islower",
        "turn",
        "row",
        "move",
        "row",
        "col",
        "row",
        "col",
        "d",
        "movePromotion",
        "row",
        "col",
        "col",
        "d",
        "col",
        "board",
        "row",
        "col",
        "board",
        "row",
        "col",
        "islower",
        "turn",
        "row",
        "move",
        "row",
        "col",
        "row",
        "col",
        "d",
        "movePromotion",
        "row",
        "col",
        "col",
        "d",
        "row",
        "col",
        "col",
        "ControlMap",
        "row",
        "col",
        "col",
        "ControlMap",
        "row",
        "col",
        "row",
        "col",
        "board",
        "row",
        "col",
        "row",
        "move",
        "row",
        "col",
        "row",
        "col",
        "d",
        "movePromotion",
        "row",
        "col",
        "col",
        "d",
        "row",
        "board",
        "col",
        "move",
        "row",
        "col",
        "col",
        "col",
        "board",
        "row",
        "col",
        "board",
        "row",
        "col",
        "islower",
        "turn",
        "row",
        "move",
        "row",
        "col",
        "row",
        "col",
        "d",
        "movePromotion",
        "row",
        "col",
        "col",
        "d",
        "col",
        "board",
        "row",
        "col",
        "board",
        "row",
        "col",
        "islower",
        "turn",
        "row",
        "move",
        "row",
        "col",
        "row",
        "col",
        "d",
        "movePromotion",
        "row",
        "col",
        "col",
        "d",
        "row",
        "col",
        "col",
        "ControlMap",
        "row",
        "col",
        "col",
        "ControlMap",
        "row",
        "col",
        "row",
        "col",
        "row2",
        "col2",
        "dash",
        "turn",
        "p2",
        "copy",
        "copy",
        "board",
        "row",
        "col",
        "row2",
        "col2",
        "p2",
        "Board",
        "DICTCOL",
        "col",
        "Board",
        "DICTROW",
        "row",
        "dash",
        "Board",
        "DICTCOL",
        "col2",
        "Board",
        "DICTROW",
        "row2",
        "p2",
        "produce",
        "neoboard",
        "movestr",
        "p2",
        "copy",
        "copy",
        "board",
        "row",
        "col",
        "row2",
        "col2",
        "p2",
        "Board",
        "DICTCOL",
        "col",
        "Board",
        "DICTROW",
        "row",
        "dash",
        "Board",
        "DICTCOL",
        "col2",
        "Board",
        "DICTROW",
        "row2",
        "p2",
        "produce",
        "neoboard",
        "movestr",
        "row1",
        "col1",
        "row2",
        "col2",
        "copy",
        "copy",
        "board",
        "row1",
        "col2",
        "row1",
        "col1",
        "row2",
        "col2",
        "board",
        "row1",
        "col1",
        "board",
        "row1",
        "col1",
        "Board",
        "DICTCOL",
        "col1",
        "Board",
        "DICTROW",
        "row1",
        "Board",
        "DICTCOL",
        "col2",
        "Board",
        "DICTROW",
        "row2",
        "produce",
        "neoboard",
        "movestr",
        "row",
        "col",
        "i",
        "row",
        "i",
        "col",
        "i",
        "col2",
        "row2",
        "board",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "isupper",
        "turn",
        "move",
        "row",
        "col",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "i",
        "row",
        "i",
        "col",
        "i",
        "col2",
        "row2",
        "board",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "isupper",
        "turn",
        "move",
        "row",
        "col",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "i",
        "row",
        "i",
        "col",
        "i",
        "col2",
        "row2",
        "board",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "isupper",
        "turn",
        "move",
        "row",
        "col",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "i",
        "row",
        "i",
        "col",
        "i",
        "col2",
        "row2",
        "board",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "isupper",
        "turn",
        "move",
        "row",
        "col",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "row",
        "col",
        "turn",
        "ControlMap",
        "turn",
        "i",
        "row",
        "i",
        "col",
        "i",
        "col2",
        "row2",
        "board",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "isupper",
        "turn",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "islower",
        "turn",
        "i",
        "row",
        "i",
        "col",
        "i",
        "col2",
        "row2",
        "board",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "isupper",
        "turn",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "islower",
        "turn",
        "i",
        "row",
        "i",
        "col",
        "i",
        "col2",
        "row2",
        "board",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "isupper",
        "turn",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "islower",
        "turn",
        "i",
        "row",
        "i",
        "col",
        "i",
        "col2",
        "row2",
        "board",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "isupper",
        "turn",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "board",
        "row2",
        "col2",
        "islower",
        "turn",
        "row",
        "col",
        "i",
        "col",
        "i",
        "col2",
        "board",
        "row",
        "col2",
        "board",
        "row",
        "col2",
        "isupper",
        "turn",
        "move",
        "row",
        "col",
        "row",
        "col2",
        "row",
        "col",
        "board",
        "moved",
        "dec",
        "moved",
        "col",
        "board",
        "moved",
        "dec",
        "moved",
        "row",
        "col",
        "board",
        "moved",
        "dec",
        "moved",
        "col",
        "board",
        "moved",
        "dec",
        "moved",
        "dec",
        "board",
        "row",
        "col2",
        "board",
        "row",
        "col2",
        "islower",
        "turn",
        "i",
        "col",
        "i",
        "col2",
        "board",
        "row",
        "col2",
        "board",
        "row",
        "col2",
        "isupper",
        "turn",
        "move",
        "row",
        "col",
        "row",
        "col2",
        "row",
        "col",
        "board",
        "moved",
        "dec",
        "moved",
        "col",
        "board",
        "moved",
        "dec",
        "moved",
        "row",
        "col",
        "board",
        "moved",
        "dec",
        "moved",
        "col",
        "board",
        "moved",
        "dec",
        "moved",
        "dec",
        "board",
        "row",
        "col2",
        "board",
        "row",
        "col2",
        "islower",
        "turn",
        "i",
        "row",
        "i",
        "row2",
        "board",
        "row2",
        "col",
        "board",
        "row2",
        "col",
        "isupper",
        "turn",
        "move",
        "row",
        "col",
        "row2",
        "col",
        "row",
        "col",
        "board",
        "moved",
        "dec",
        "moved",
        "col",
        "board",
        "moved",
        "dec",
        "moved",
        "row",
        "col",
        "board",
        "moved",
        "dec",
        "moved",
        "col",
        "board",
        "moved",
        "dec",
        "moved",
        "dec",
        "board",
        "row2",
        "col",
        "board",
        "row2",
        "col",
        "islower",
        "turn",
        "i",
        "row",
        "i",
        "row2",
        "board",
        "row2",
        "col",
        "board",
        "row2",
        "col",
        "isupper",
        "turn",
        "move",
        "row",
        "col",
        "row2",
        "col",
        "row",
        "col",
        "board",
        "moved",
        "dec",
        "moved",
        "col",
        "board",
        "moved",
        "dec",
        "moved",
        "row",
        "col",
        "board",
        "moved",
        "dec",
        "moved",
        "col",
        "board",
        "moved",
        "dec",
        "moved",
        "dec",
        "board",
        "row2",
        "col",
        "board",
        "row2",
        "col",
        "islower",
        "turn",
        "row",
        "col",
        "turn",
        "ControlMap",
        "turn",
        "i",
        "col",
        "i",
        "col2",
        "board",
        "row",
        "col2",
        "board",
        "row",
        "col2",
        "isupper",
        "turn",
        "row",
        "col2",
        "board",
        "row",
        "col2",
        "board",
        "row",
        "col2",
        "islower",
        "turn",
        "i",
        "col",
        "i",
        "col2",
        "board",
        "row",
        "col2",
        "board",
        "row",
        "col2",
        "isupper",
        "turn",
        "row",
        "col2",
        "board",
        "row",
        "col2",
        "board",
        "row",
        "col2",
        "islower",
        "turn",
        "i",
        "row",
        "i",
        "row2",
        "board",
        "row2",
        "col",
        "board",
        "row2",
        "col",
        "isupper",
        "turn",
        "row2",
        "col",
        "board",
        "row2",
        "col",
        "board",
        "row2",
        "col",
        "islower",
        "turn",
        "i",
        "row",
        "i",
        "row2",
        "board",
        "row2",
        "col",
        "board",
        "row2",
        "col",
        "isupper",
        "turn",
        "row2",
        "col",
        "board",
        "row2",
        "col",
        "board",
        "row2",
        "col",
        "islower",
        "turn",
        "neoboard",
        "movestr",
        "Board",
        "neoboard",
        "movestr",
        "turn",
        "copy",
        "copy",
        "moved",
        "copy",
        "copy",
        "kloc",
        "dec",
        "row1",
        "col1",
        "row2",
        "col2",
        "copy",
        "copy",
        "board",
        "row1",
        "col1",
        "row2",
        "col2",
        "board",
        "row1",
        "col1",
        "board",
        "row2",
        "col2",
        "board",
        "row1",
        "col1",
        "Board",
        "DICTCOL",
        "col1",
        "Board",
        "DICTROW",
        "row1",
        "dash",
        "Board",
        "DICTCOL",
        "col2",
        "Board",
        "DICTROW",
        "row2",
        "produce",
        "neoboard",
        "movestr",
        "row",
        "col",
        "row",
        "col",
        "movestr",
        "row",
        "s",
        "s",
        "row",
        "s",
        "join",
        "board",
        "row",
        "row",
        "s",
        "s",
        "s",
        "Board",
        "test_puning"
    ],
    "literals": [
        "\"%H:%M:%S\"",
        "'R'",
        "'N'",
        "'B'",
        "'Q'",
        "'K'",
        "'B'",
        "'N'",
        "'R'",
        "'P'",
        "'P'",
        "'P'",
        "'P'",
        "'P'",
        "'P'",
        "'P'",
        "'P'",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "'p'",
        "'p'",
        "'p'",
        "'p'",
        "'p'",
        "'p'",
        "'p'",
        "'p'",
        "'r'",
        "'n'",
        "'b'",
        "'q'",
        "'k'",
        "'b'",
        "'n'",
        "'r'",
        "\"R\"",
        "\"N\"",
        "\"B\"",
        "\"Q\"",
        "\"P\"",
        "\"K\"",
        "\" \"",
        "\"r\"",
        "\"n\"",
        "\"b\"",
        "\"q\"",
        "\"p\"",
        "\"k\"",
        "\"a\"",
        "\"b\"",
        "\"c\"",
        "\"d\"",
        "\"e\"",
        "\"f\"",
        "\"g\"",
        "\"h\"",
        "\"a\"",
        "\"b\"",
        "\"c\"",
        "\"d\"",
        "\"e\"",
        "\"f\"",
        "\"g\"",
        "\"h\"",
        "\"8\"",
        "\"7\"",
        "\"6\"",
        "\"5\"",
        "\"4\"",
        "\"3\"",
        "\"2\"",
        "\"1\"",
        "\"k\"",
        "\"K\"",
        "\"ar\"",
        "\"hr\"",
        "\"aR\"",
        "\"hR\"",
        "\"k\"",
        "\"K\"",
        "\"ar\"",
        "\"hr\"",
        "\"aR\"",
        "\"hR\"",
        "\"DEBUG\"",
        "\"INFO\"",
        "\"WARN\"",
        "\"ERR\"",
        "\"FATAL\"",
        "\"init\"",
        "\"k\"",
        "\"K\"",
        "'[%s>%s]%.1f%%\\r'",
        "'='",
        "'-'",
        "\"\"",
        "\"\\n\"",
        "\"%s<%s:%d,%s> %s%s\"",
        "\"%s<%s:%d,%s> %s:\\n%s%s\"",
        "\"\"",
        "\"chess_record.txt\"",
        "\"a\"",
        "\"decs\"",
        "\",\"",
        "\"score\"",
        "\"\\nscore: %.2f, \"",
        "\"minmax_score\"",
        "\"minmax_score: %.2f\"",
        "\"minmax_score: None\"",
        "\"\\nturn: %s\"",
        "\"\\nbest moves: %s\"",
        "\"\\nmoved: %s\"",
        "\"\\nlegalops: %s\"",
        "\",\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"Q\"",
        "\"K\"",
        "\"B\"",
        "\"N\"",
        "\"R\"",
        "\"P\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"P\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"P\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"p\"",
        "\"r\"",
        "\"n\"",
        "\"b\"",
        "\"q\"",
        "\"k\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"test_genCM\"",
        "\"\"",
        "\"\\n   ------------------------\\n\"",
        "\" %s \"",
        "\" x \"",
        "\"   \"",
        "\"\\n   ------------------------\"",
        "\"\\n   ------------------------\\n\"",
        "\" %s \"",
        "\" x \"",
        "\"   \"",
        "\"\\n   ------------------------\"",
        "\"\\n    a  b  c  d  e  f  g  h \"",
        "\" \"",
        "\"R\"",
        "\"r\"",
        "\"B\"",
        "\"b\"",
        "\"Q\"",
        "\"q\"",
        "\"P\"",
        "\"p\"",
        "\"N\"",
        "\" \"",
        "\"n\"",
        "\" \"",
        "\"K\"",
        "\" \"",
        "\"k\"",
        "\" \"",
        "\"sth wired happens\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"Q\"",
        "\"K\"",
        "\"B\"",
        "\"N\"",
        "\"R\"",
        "\"P\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"P\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"P\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"p\"",
        "\"r\"",
        "\"n\"",
        "\"b\"",
        "\"q\"",
        "\"k\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"test_score\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"K\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"R\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"R\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"k\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"k\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"r\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"r\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"K\"",
        "\" \"",
        "\" \"",
        "\"r\"",
        "\" \"",
        "\"R\"",
        "\" \"",
        "\" \"",
        "\"K\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"B\"",
        "\"P\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"P\"",
        "\" \"",
        "\"b\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"Q\"",
        "\"p\"",
        "\"P\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"p\"",
        "\" \"",
        "\"R\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"k\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"q\"",
        "\" \"",
        "\" \"",
        "\"R\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"R\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"P\"",
        "\"P\"",
        "\"K\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"B\"",
        "\" \"",
        "\"P\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"p\"",
        "\" \"",
        "\"p\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"Q\"",
        "\"p\"",
        "\"P\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"p\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"r\"",
        "\" \"",
        "\"k\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"q\"",
        "\" \"",
        "\"r\"",
        "\"r\"",
        "\" \"",
        "\" \"",
        "\"n\"",
        "\"k\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"N\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"r\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"N\"",
        "\"K\"",
        "\"finish %d cases in %.2fms at deepth=%d\"",
        "\"decs\"",
        "\"K\"",
        "\" \"",
        "\"draw\"",
        "\"k\"",
        "\" \"",
        "\"draw\"",
        "\"\"",
        "\"Your move: \"",
        "\"\"",
        "\"back\"",
        "\"you son of a bitch\"",
        "\"dump\"",
        "\"decs\"",
        "\"wrong move: illigel\"",
        "\"wrong move\"",
        "\"begin a new game with %s\"",
        "\"please tell me your name: \"",
        "\"decs\"",
        "\"%s %s considered %d cases in %.2fms at deepth=%d\"",
        "\"I win: %s\"",
        "\"you win\"",
        "\"draw: no piece can move\"",
        "\"press any key to quit\"",
        "\"\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"K\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"r\"",
        "\" \"",
        "\"n\"",
        "\"b\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"P\"",
        "\" \"",
        "\"P\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"p\"",
        "\" \"",
        "\"p\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"p\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"p\"",
        "\"p\"",
        "\"p\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"k\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"K\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"p\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"p\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"P\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"P\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"k\"",
        "\"test_breed\"",
        "\"ax=%d\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"p\"",
        "\"P\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"init\"",
        "\"R\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"K\"",
        "\" \"",
        "\" \"",
        "\"R\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"r\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"init\"",
        "\" \"",
        "\"R\"",
        "\"r\"",
        "\"B\"",
        "\"Q\"",
        "\"N\"",
        "\" \"",
        "\"K\"",
        "\"k\"",
        "\"P\"",
        "\"p\"",
        "\"sth wired happens\"",
        "\"K\"",
        "\"hR\"",
        "\" \"",
        "\" \"",
        "\"K\"",
        "\"hR\"",
        "\"K\"",
        "\"aR\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"K\"",
        "\"aR\"",
        "\" \"",
        "\"K\"",
        "\"k\"",
        "\"hr\"",
        "\" \"",
        "\" \"",
        "\"k\"",
        "\"hr\"",
        "\"k\"",
        "\"ar\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"k\"",
        "\"ar\"",
        "\" \"",
        "\"k\"",
        "\" \"",
        "\"O-O\"",
        "\" \"",
        "\"O-O-O\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"x\"",
        "\" \"",
        "\"x\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"x\"",
        "\" \"",
        "\"x\"",
        "\"-\"",
        "\"RNBQ\"",
        "\" \"",
        "\"P%s%s%s%s%s=%s\"",
        "\"rnbq\"",
        "\" \"",
        "\"p%s%s%s%s%s=%s\"",
        "\" \"",
        "\" \"",
        "\"%s%s%sx%s%s\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"R\"",
        "\"aR\"",
        "\"aR\"",
        "\"R\"",
        "\"hR\"",
        "\"hR\"",
        "\"r\"",
        "\"ar\"",
        "\"ar\"",
        "\"r\"",
        "\"hr\"",
        "\"hr\"",
        "\" \"",
        "\" \"",
        "\"R\"",
        "\"aR\"",
        "\"aR\"",
        "\"R\"",
        "\"hR\"",
        "\"hR\"",
        "\"r\"",
        "\"ar\"",
        "\"ar\"",
        "\"r\"",
        "\"hr\"",
        "\"hr\"",
        "\" \"",
        "\" \"",
        "\"R\"",
        "\"aR\"",
        "\"aR\"",
        "\"R\"",
        "\"hR\"",
        "\"hR\"",
        "\"r\"",
        "\"ar\"",
        "\"ar\"",
        "\"r\"",
        "\"hr\"",
        "\"hr\"",
        "\" \"",
        "\" \"",
        "\"R\"",
        "\"aR\"",
        "\"aR\"",
        "\"R\"",
        "\"hR\"",
        "\"hR\"",
        "\"r\"",
        "\"ar\"",
        "\"ar\"",
        "\"r\"",
        "\"hr\"",
        "\"hr\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"-\"",
        "\"x\"",
        "\"%s%s%s%s%s%s\"",
        "\"move: %s\"",
        "\"\\n   ------------------------\\n\"",
        "\" %s  \"",
        "\"  \"",
        "\"\\n   ------------------------\"",
        "\"\\n    a  b  c  d  e  f  g  h \"",
        "\"__main__\""
    ],
    "variables": [
        "now_str",
        "INITBOARD_LST",
        "POINTS",
        "DICTCOL",
        "DICTCOL2",
        "DICTROW",
        "NMOVES",
        "KMOVES",
        "INITMOVED",
        "ALLMOVED",
        "LOGLEVEL",
        "board",
        "movestr",
        "b",
        "b",
        "turn",
        "b",
        "moved",
        "b",
        "kloc",
        "kloc",
        "m",
        "s",
        "st",
        "lstr",
        "tempstr",
        "tempstr",
        "s",
        "next",
        "next",
        "s",
        "TSTBOARD",
        "b",
        "s",
        "ControlMap",
        "p",
        "ControlNum",
        "TSTBOARD",
        "b",
        "score",
        "TSTBOARD",
        "TS2BOARD",
        "TS3BOARD",
        "TS4BOARD",
        "TS5BOARD",
        "deepth",
        "b",
        "tik",
        "ax",
        "tok",
        "next",
        "next",
        "ax",
        "ntol",
        "minmax_score",
        "decs",
        "eval",
        "alpha",
        "minmax_score",
        "minmax_score",
        "minmax_score",
        "eval",
        "beta",
        "minmax_score",
        "minmax_score",
        "minmax_score",
        "board",
        "legalops",
        "mv",
        "board",
        "d",
        "father",
        "b",
        "b",
        "movestr",
        "tik",
        "ax",
        "tok",
        "father",
        "b",
        "TSTBOARD",
        "TS2BOARD",
        "b",
        "b",
        "turn",
        "b",
        "moved",
        "ax",
        "TS2BOARD",
        "b",
        "TS2BOARD",
        "b",
        "b",
        "turn",
        "b",
        "moved",
        "oppo",
        "me",
        "p",
        "dec",
        "oppo",
        "me",
        "dec",
        "me",
        "dec",
        "me",
        "dec",
        "oppo",
        "me",
        "dec",
        "me",
        "dec",
        "me",
        "dec",
        "me",
        "neoboard",
        "neoboard",
        "neoboard",
        "movestr",
        "neoboard",
        "neoboard",
        "movestr",
        "neoboard",
        "neoboard",
        "neoboard",
        "neoboard",
        "neoboard",
        "movestr",
        "neoboard",
        "neoboard",
        "neoboard",
        "movestr",
        "neoboard",
        "neoboard",
        "neoboard",
        "neoboard",
        "movestr",
        "row2",
        "col2",
        "row2",
        "col2",
        "row2",
        "col2",
        "row2",
        "col2",
        "cMap",
        "row2",
        "col2",
        "cMap",
        "row2",
        "col2",
        "cMap",
        "row2",
        "col2",
        "cMap",
        "row2",
        "col2",
        "cMap",
        "col2",
        "dec",
        "col2",
        "dec",
        "row2",
        "dec",
        "row2",
        "dec",
        "cMap",
        "col2",
        "cMap",
        "col2",
        "cMap",
        "row2",
        "cMap",
        "row2",
        "cMap",
        "dec",
        "dec",
        "turn",
        "dec",
        "moved",
        "dec",
        "kloc",
        "neoboard",
        "neoboard",
        "neoboard",
        "dash",
        "dash",
        "movestr",
        "s"
    ],
    "comments": [
        "!/usr/bin/python3",
        "-*- coding: UTF-8 -*-",
        "self.log(self)",
        "b=Board(TSTBOARD,True,\"test_score\")",
        "self.score+=(self.ControlNum[1]-self.ControlNum[0])/10.0",
        "white2,674",
        "white3,687",
        "做对了，会躲",
        "b=Board(copy.copy(TS4BOARD),\"test_puning\")",
        "b.turn=False",
        "b.moved=Board.ALLMOVED",
        "b.calckloc()",
        "b.turn=True;",
        "b.log(next)",
        "break",
        "self.log(\"lower's turn at deep=%d\"%(deep))",
        "break",
        "self.log(\"Upper win\")",
        "TSTBOARD=[\" \",\" \",\" \",\" \",\" \",\" \",\"K\",\" \",",
        "\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",",
        "\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",",
        "\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",",
        "\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",",
        "\" \",\" \",\" \",\" \",\" \",\" \",\" \",\"R\",",
        "\" \",\" \",\" \",\" \",\" \",\" \",\"R\",\" \",",
        "\" \",\" \",\"k\",\" \",\" \",\" \",\" \",\" \"]",
        "b=Board(TSTBOARD,\"test\")",
        "b.turn=False",
        "b.moved=Board.ALLMOVED",
        "b.calckloc()",
        "b.moved={\"k\":True,\"K\":False,\"ar\":True,\"hr\":True,\"aR\":False,\"hR\":False}",
        "b.moved={\"k\":False,\"K\":False,\"ar\":False,\"hr\":False,\"aR\":True,\"hR\":True}",
        "if True:",
        "if True:",
        "if True:",
        "if True:",
        "if True:",
        "if True:",
        "if True:",
        "if True:",
        "if True:",
        "if row==4:",
        "if col!=7 and self.board[row*8+col+1]==\"p\":",
        "colplus=Board.DICTCOL[col+1]",
        "if self.movestr==\"p%s2-%s4\"%(colplus,colplus):",
        "yield self.moveEnPassant(row,col,row+1,col+1)",
        "if col!=0 and self.board[row*8+col-1]==\"p\":",
        "colminus=Board.DICTCOL[col-1]",
        "if self.movestr==\"p%s2-%s4\"%(colminus,colminus):",
        "yield self.moveEnPassant(row,col,row+1,col-1)",
        "jump & En passant",
        "if row==3:",
        "if col!=7 and self.board[row*8+col+1]==\"P\":",
        "colplus=Board.DICTCOL[col+1]",
        "if self.movestr==\"P%s7-%s5\"%(colplus,colplus):",
        "yield self.moveEnPassant(row,col,row-1,col+1)",
        "if col!=0 and self.board[row*8+col-1]==\"P\":",
        "colminus=Board.DICTCOL[col-1]",
        "if self.movestr==\"P%s7-%s5\"%(colminus,colminus):",
        "yield self.moveEnPassant(row,col,row-1,col-1)",
        "if (self.board[row2*8+col2]!=\" \" and self.board[row2*8+col2].islower()==self.turn):",
        "if (self.board[row2*8+col2]!=\" \" and self.board[row2*8+col2].islower()==self.turn):",
        "if (self.board[row2*8+col2]!=\" \" and self.board[row2*8+col2].islower()==self.turn):",
        "if (self.board[row2*8+col2]!=\" \" and self.board[row2*8+col2].islower()==self.turn):",
        "Board.test_breed()",
        "Board.test_En_passant()",
        "Board.test_Castling()",
        "Board.test_genCM()",
        "Board.test_score()",
        "Board.play()"
    ],
    "docstrings": [
        "\"\"\"turn: True for upper and vice versa\"\"\"",
        "\"\"\"turn: True for upper, False for lower\"\"\""
    ],
    "functions": [
        "getInitBoard",
        "calckloc",
        "process_bar",
        "log",
        "get_best_moves",
        "dump",
        "test_genCM",
        "str_CM",
        "genControlMap",
        "test_score",
        "scoreMyself",
        "test_puning",
        "alpha_beta_puning",
        "getMove",
        "play",
        "test_breed",
        "test_En_passant",
        "test_Castling",
        "breed",
        "moveAsUpperK",
        "moveAsLowerK",
        "moveCastling",
        "moveAsUpperP",
        "controlAsUpperP",
        "moveAsLowerP",
        "controlAsLowerP",
        "movePromotion",
        "moveEnPassant",
        "moveAsB",
        "controlAsB",
        "moveAsR",
        "controlAsR",
        "produce",
        "move",
        "iter8x8",
        "__str__"
    ],
    "classes": [
        "Board"
    ]
}