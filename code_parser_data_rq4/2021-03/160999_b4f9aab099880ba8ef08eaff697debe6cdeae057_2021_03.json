{
    "identifiers": [
        "org",
        "apache",
        "zookeeper",
        "server",
        "quorum",
        "flexible",
        "java",
        "io",
        "FileReader",
        "java",
        "io",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Properties",
        "java",
        "util",
        "java",
        "util",
        "concurrent",
        "atomic",
        "AtomicBoolean",
        "org",
        "apache",
        "commons",
        "io",
        "FilenameUtils",
        "org",
        "apache",
        "zookeeper",
        "server",
        "quorum",
        "Leader",
        "org",
        "apache",
        "zookeeper",
        "server",
        "quorum",
        "LearnerHandler",
        "org",
        "apache",
        "zookeeper",
        "server",
        "quorum",
        "QuorumPeer",
        "org",
        "apache",
        "zookeeper",
        "server",
        "quorum",
        "QuorumPeerConfig",
        "org",
        "apache",
        "zookeeper",
        "server",
        "quorum",
        "SyncedLearnerTracker",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "LOG",
        "LoggerFactory",
        "getLogger",
        "oracle",
        "needOracle",
        "allMembers",
        "oraclePath",
        "allMembers",
        "setOracle",
        "oraclePath",
        "props",
        "oraclePath",
        "props",
        "setOracle",
        "oraclePath",
        "path",
        "oracle",
        "oracle",
        "path",
        "LOG",
        "info",
        "path",
        "LOG",
        "warn",
        "path",
        "Override",
        "forwardingFollowers",
        "needOracle",
        "forwardingFollowers",
        "isEmpty",
        "getVotingMembers",
        "size",
        "needOracle",
        "get",
        "Override",
        "fr",
        "read",
        "fr",
        "FilenameUtils",
        "getFullPath",
        "oracle",
        "FilenameUtils",
        "getName",
        "oracle",
        "read",
        "fr",
        "read",
        "LOG",
        "debug",
        "read",
        "fr",
        "close",
        "read",
        "e",
        "e",
        "printStackTrace",
        "oracle",
        "LOG",
        "error",
        "fr",
        "fr",
        "close",
        "e",
        "e",
        "printStackTrace",
        "Override",
        "needOracle",
        "get",
        "Override",
        "oracle",
        "Override",
        "forwardingFollowers",
        "updateNeedOracle",
        "forwardingFollowers",
        "askOracle",
        "Override",
        "outstandingProposal",
        "lastCommitted",
        "LOG",
        "debug",
        "outstandingProposal",
        "size",
        "outstandingProposal",
        "sort",
        "o1",
        "o2",
        "o1",
        "packet",
        "getZxid",
        "o2",
        "packet",
        "getZxid",
        "p",
        "i",
        "i",
        "outstandingProposal",
        "size",
        "p",
        "outstandingProposal",
        "get",
        "i",
        "p",
        "request",
        "zxid",
        "lastCommitted",
        "LOG",
        "debug",
        "toHexString",
        "p",
        "request",
        "zxid",
        "outstandingProposal",
        "size",
        "toHexString",
        "lastCommitted",
        "tryToCommit",
        "p",
        "p",
        "request",
        "zxid",
        "lastCommitted",
        "p",
        "request",
        "zxid",
        "outstandingProposal",
        "remove",
        "p",
        "e",
        "e",
        "printStackTrace",
        "LOG",
        "debug",
        "Override",
        "voteSet",
        "timeout",
        "voteSet",
        "voteSet",
        "hasAllQuorums",
        "timeout",
        "Override",
        "ackSet",
        "oracle",
        "getVotingMembers",
        "size",
        "containsQuorum",
        "ackSet",
        "containsQuorum",
        "ackSet",
        "getNeedOracle",
        "LOG",
        "debug",
        "askOracle",
        "askOracle",
        "Override",
        "o",
        "o",
        "getClass",
        "o",
        "getClass",
        "qm",
        "o",
        "qm",
        "getVersion",
        "getVersion",
        "getAllMembers",
        "size",
        "qm",
        "getAllMembers",
        "size",
        "qs",
        "getAllMembers",
        "values",
        "qso",
        "qm",
        "getAllMembers",
        "get",
        "qs",
        "id",
        "qso",
        "qs",
        "equals",
        "qso",
        "Override"
    ],
    "literals": [
        "\"Oracle is set to {}\"",
        "\"Oracle is already set. Ignore:{}\"",
        "\"Oracle says:{}\"",
        "\"Oracle is not set, return false\"",
        "\"Start Revalidation outstandingProposals\"",
        "\"Re-validate outstanding proposal: 0x{} size:{} lastCommitted:{}\"",
        "\"Finish Revalidation outstandingProposals\"",
        "\"We lose the quorum, but we do not have any valid followers Oracle:{}\"",
        "\"hashCode not designed\""
    ],
    "variables": [
        "read",
        "p"
    ],
    "comments": [
        "Do we have the quorum",
        "any arbitrary constant will do"
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "*\n * QuorumOracleMaj is a subclass of QuorumMaj.\n *\n * QuorumOracleMaj is designed to be functional in a 2-nodes configuration. The only method that this class overrides super\n * class' method is containsQuorum(). Besides the check of oracle, it also checks the number of voting member. Whenever the\n * number of voting members is greater than 2. QuorumOracleMaj shall function as hook to its super class.\n *"
    ],
    "functions": [
        "QuorumOracleMaj",
        "QuorumOracleMaj",
        "setOracle",
        "updateNeedOracle",
        "askOracle",
        "getNeedOracle",
        "getOraclePath",
        "overrideQuorumDecision",
        "revalidateOutstandingProp",
        "revalidateVoteset",
        "containsQuorum",
        "equals",
        "hashCode"
    ],
    "classes": [
        "QuorumOracleMaj"
    ]
}