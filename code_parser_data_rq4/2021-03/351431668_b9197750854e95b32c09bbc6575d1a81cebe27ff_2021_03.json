{
    "identifiers": [
        "flask",
        "Flask",
        "redirect",
        "url_for",
        "flask",
        "request",
        "flask",
        "render_template",
        "flask",
        "send_file",
        "Cryptodome",
        "PublicKey",
        "RSA",
        "os",
        "sys",
        "zipfile",
        "Cryptodome",
        "Random",
        "Cryptodome",
        "Cipher",
        "AES",
        "PKCS1_OAEP",
        "Cryptodome",
        "Hash",
        "SHA256",
        "Cryptodome",
        "PublicKey",
        "RSA",
        "Cryptodome",
        "Random",
        "random",
        "Cryptodome",
        "Signature",
        "PKCS1_v1_5",
        "werkzeug",
        "utils",
        "secure_filename",
        "webbrowser",
        "Flask",
        "static_folder",
        "static_url_path",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "request",
        "args",
        "get",
        "RSA",
        "generate",
        "open",
        "f",
        "write",
        "keyPair",
        "exportKey",
        "password",
        "f",
        "close",
        "open",
        "f",
        "write",
        "keyPair",
        "publickey",
        "exportKey",
        "f",
        "close",
        "redirect",
        "app",
        "route",
        "request",
        "args",
        "get",
        "RSA",
        "generate",
        "open",
        "f",
        "write",
        "keyPair",
        "exportKey",
        "password",
        "f",
        "close",
        "open",
        "f",
        "write",
        "keyPair",
        "publickey",
        "exportKey",
        "f",
        "close",
        "redirect",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "send_file",
        "as_attachment",
        "app",
        "route",
        "send_file",
        "as_attachment",
        "app",
        "route",
        "send_file",
        "as_attachment",
        "app",
        "route",
        "send_file",
        "as_attachment",
        "app",
        "route",
        "send_file",
        "as_attachment",
        "app",
        "route",
        "send_file",
        "as_attachment",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "render_template",
        "app",
        "config",
        "UPLOAD_FOLDER",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "methods",
        "request",
        "method",
        "request",
        "files",
        "file",
        "file",
        "save",
        "os",
        "path",
        "join",
        "app",
        "config",
        "filename",
        "redirect",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "request",
        "args",
        "get",
        "request",
        "args",
        "get",
        "sys",
        "exit",
        "priKey_fname",
        "file",
        "password",
        "open",
        "file",
        "f",
        "read",
        "f",
        "close",
        "SHA256",
        "buffer",
        "RSA",
        "importKey",
        "open",
        "priKey_fname",
        "read",
        "passphrase",
        "password",
        "PKCS1_v1_5",
        "keyPair",
        "open",
        "file",
        "split",
        "f",
        "write",
        "keySigner",
        "sign",
        "h",
        "f",
        "close",
        "pubKey_fname",
        "file",
        "iv",
        "SHA256",
        "random",
        "getrandbits",
        "RSA",
        "importKey",
        "open",
        "pubKey_fname",
        "read",
        "PKCS1_OAEP",
        "keyPair",
        "publickey",
        "open",
        "file",
        "split",
        "f",
        "write",
        "iv",
        "keyCipher",
        "encrypt",
        "h",
        "digest",
        "f",
        "close",
        "h",
        "digest",
        "keyA_fname",
        "keyB_fname",
        "file",
        "password",
        "open",
        "file",
        "f",
        "read",
        "f",
        "close",
        "sigGenerator",
        "keyA_fname",
        "file",
        "password",
        "Random",
        "read",
        "AES",
        "block_size",
        "keyGenerator",
        "keyB_fname",
        "file",
        "iv",
        "AES",
        "k",
        "AES",
        "MODE_CFB",
        "iv",
        "open",
        "file",
        "split",
        "f",
        "write",
        "keyCipher",
        "encrypt",
        "buffer",
        "f",
        "close",
        "sig",
        "key",
        "bin",
        "zipfile",
        "ZipFile",
        "bin",
        "split",
        "f",
        "write",
        "sig",
        "f",
        "write",
        "key",
        "f",
        "write",
        "bin",
        "f",
        "close",
        "cleanUp",
        "sig",
        "key",
        "bin",
        "sig",
        "key",
        "bin",
        "os",
        "remove",
        "sig",
        "os",
        "remove",
        "key",
        "os",
        "remove",
        "bin",
        "file",
        "pubKey",
        "priKey",
        "os",
        "path",
        "isfile",
        "file",
        "os",
        "access",
        "file",
        "os",
        "R_OK",
        "sys",
        "exit",
        "file",
        "split",
        "os",
        "path",
        "isfile",
        "s",
        "os",
        "access",
        "s",
        "os",
        "W_OK",
        "redirect",
        "os",
        "path",
        "isfile",
        "s",
        "os",
        "access",
        "s",
        "os",
        "W_OK",
        "redirect",
        "os",
        "path",
        "isfile",
        "s",
        "os",
        "access",
        "s",
        "os",
        "W_OK",
        "redirect",
        "os",
        "path",
        "isfile",
        "s",
        "os",
        "access",
        "s",
        "os",
        "W_OK",
        "redirect",
        "os",
        "path",
        "isfile",
        "pubKey",
        "os",
        "access",
        "pubKey",
        "os",
        "R_OK",
        "redirect",
        "os",
        "path",
        "isfile",
        "priKey",
        "os",
        "access",
        "priKey",
        "os",
        "R_OK",
        "redirect",
        "len",
        "sys",
        "argv",
        "usage",
        "len",
        "sys",
        "argv",
        "file",
        "sys",
        "argv",
        "priKey",
        "raw_input",
        "pubKey",
        "raw_input",
        "checkFiles",
        "file",
        "pubKey",
        "priKey",
        "encipher",
        "priKey",
        "pubKey",
        "file",
        "password",
        "auxFilesZip",
        "file",
        "split",
        "file",
        "split",
        "file",
        "split",
        "redirect",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "request",
        "args",
        "get",
        "request",
        "args",
        "get",
        "sys",
        "exit",
        "pubKey_fname",
        "file",
        "signHex",
        "SHA256",
        "h",
        "update",
        "open",
        "file",
        "read",
        "RSA",
        "importKey",
        "open",
        "pubKey_fname",
        "read",
        "PKCS1_v1_5",
        "keyPair",
        "publickey",
        "keyVerifier",
        "verify",
        "h",
        "open",
        "file",
        "split",
        "read",
        "h",
        "hexdigest",
        "redirect",
        "privKey_fname",
        "file",
        "password",
        "RSA",
        "importKey",
        "open",
        "privKey_fname",
        "read",
        "passphrase",
        "password",
        "PKCS1_OAEP",
        "keyPair",
        "open",
        "file",
        "split",
        "f",
        "read",
        "keyDecipher",
        "decrypt",
        "f",
        "read",
        "k",
        "iv",
        "keyA_fname",
        "keyB_fname",
        "file",
        "password",
        "keyReader",
        "keyB_fname",
        "file",
        "password",
        "AES",
        "k",
        "AES",
        "MODE_CFB",
        "iv",
        "open",
        "read",
        "open",
        "f",
        "write",
        "keyDecipher",
        "decrypt",
        "bin",
        "f",
        "close",
        "sigVerification",
        "keyA_fname",
        "file",
        "split",
        "all",
        "zipfile",
        "ZipFile",
        "all",
        "f",
        "extractall",
        "sig",
        "key",
        "bin",
        "all",
        "os",
        "remove",
        "sig",
        "os",
        "remove",
        "key",
        "os",
        "remove",
        "bin",
        "os",
        "remove",
        "all",
        "file",
        "pubKey",
        "priKey",
        "first_run",
        "first_run",
        "os",
        "path",
        "isfile",
        "file",
        "os",
        "access",
        "file",
        "os",
        "R_OK",
        "redirect",
        "os",
        "path",
        "isfile",
        "pubKey",
        "os",
        "access",
        "pubKey",
        "os",
        "R_OK",
        "redirect",
        "os",
        "path",
        "isfile",
        "priKey",
        "os",
        "access",
        "priKey",
        "os",
        "R_OK",
        "redirect",
        "first_run",
        "os",
        "path",
        "isfile",
        "file",
        "os",
        "access",
        "file",
        "os",
        "R_OK",
        "redirect",
        "os",
        "path",
        "isfile",
        "file",
        "os",
        "access",
        "file",
        "os",
        "R_OK",
        "redirect",
        "os",
        "path",
        "isfile",
        "file",
        "os",
        "access",
        "file",
        "os",
        "R_OK",
        "redirect",
        "os",
        "path",
        "isfile",
        "file",
        "os",
        "access",
        "file",
        "os",
        "W_OK",
        "redirect",
        "len",
        "sys",
        "argv",
        "usage",
        "len",
        "sys",
        "argv",
        "file",
        "sys",
        "argv",
        "pubKey",
        "raw_input",
        "priKey",
        "raw_input",
        "file",
        "split",
        "checkFiles",
        "file",
        "pubKey",
        "priKey",
        "auxFilesUnzip",
        "file",
        "checkFiles",
        "file",
        "pubKey",
        "priKey",
        "decipher",
        "pubKey",
        "priKey",
        "file",
        "password",
        "cleanUp",
        "file",
        "file",
        "file",
        "file",
        "redirect",
        "app",
        "route",
        "signHex",
        "signHex",
        "render_template",
        "signature",
        "signHex",
        "app",
        "run",
        "host",
        "os",
        "getenv",
        "port",
        "os",
        "getenv"
    ],
    "literals": [
        "'static'",
        "''",
        "''",
        "'/senderkeygenerate'",
        "\"sender-key.html\"",
        "'/receiverkeygenerate'",
        "\"receiver-key.html\"",
        "'/keygen/sender'",
        "'password'",
        "\"./static/sender/A_PrivateKey.pem\"",
        "\"w\"",
        "\"PEM\"",
        "\"./static/sender/A_PublicKey.pem\"",
        "\"w\"",
        "'/sengenerated'",
        "'/keygen/receiver'",
        "'password'",
        "\"./static/receiver/B_PrivateKey.pem\"",
        "\"w\"",
        "\"PEM\"",
        "\"./static/receiver/B_PublicKey.pem\"",
        "\"w\"",
        "'/recgenerated'",
        "'/sengenerated'",
        "\"generated-sender.html\"",
        "'/recgenerated'",
        "\"generated-receiver.html\"",
        "'/dspub'",
        "'./static/sender/A_PublicKey.pem'",
        "'/dspri'",
        "'./static/sender/A_PrivateKey.pem'",
        "'/drpub'",
        "'./static/receiver/B_PublicKey.pem'",
        "'/drpri'",
        "'./static/receiver/B_PrivateKey.pem'",
        "'/downenc'",
        "'./encrypted.all'",
        "'/downdec'",
        "'./decrypted.txt'",
        "'/error'",
        "'error.html'",
        "'/signauth'",
        "'signauth.html'",
        "\"\"",
        "'UPLOAD_FOLDER'",
        "'/'",
        "\"home.html\"",
        "'/key'",
        "\"input.html\"",
        "'/upload/'",
        "'GET'",
        "'POST'",
        "'POST'",
        "'file[]'",
        "\"encrypted.txt\"",
        "'UPLOAD_FOLDER'",
        "'/key1'",
        "'/key1'",
        "\"input1.html\"",
        "'/encrypt'",
        "'password'",
        "'file'",
        "\"./static/sender/A_PrivateKey.pem\"",
        "\"./static/receiver/B_PublicKey.pem\"",
        "\"python encipher.py ./static/<file_name>\"",
        "\"r\"",
        "\"r\"",
        "'.'",
        "\".sig\"",
        "\"w\"",
        "\"r\"",
        "'.'",
        "\".key\"",
        "\"w\"",
        "\"rb\"",
        "'.'",
        "\".bin\"",
        "\"wb\"",
        "'.'",
        "\".all\"",
        "\"w\"",
        "\"Invalid file to encrypt. Aborting...\"",
        "'.'",
        "\".sig\"",
        "\".sig\"",
        "\"/error\"",
        "\".key\"",
        "\".key\"",
        "\"/error\"",
        "\".bin\"",
        "\".bin\"",
        "\"/error\"",
        "\".all\"",
        "\".all\"",
        "\"/error\"",
        "\"/error\"",
        "\"/error\"",
        "\"\"",
        "\"Sender's private key file name:\"",
        "\">>> \"",
        "\"\"",
        "\"Receiver's public key file name:\"",
        "\">>> \"",
        "'.'",
        "\".sig\"",
        "'.'",
        "\".key\"",
        "'.'",
        "\".bin\"",
        "\"/generated1\"",
        "'/generated1'",
        "\"encrypted.html\"",
        "'/key2'",
        "\"input2.html\"",
        "'/decrypt'",
        "'password'",
        "'file'",
        "\"./static/sender/A_PublicKey.pem\"",
        "\"./static/receiver/B_PrivateKey.pem\"",
        "\"python decipher.py <file>\"",
        "\"r\"",
        "\"r\"",
        "'.'",
        "\".sig\"",
        "\"r\"",
        "\"/error\"",
        "\"r\"",
        "'.'",
        "\".key\"",
        "\"r\"",
        "\"./encrypted.bin\"",
        "\"rb\"",
        "\"./decrypted.txt\"",
        "\"wb\"",
        "'.'",
        "\".txt\"",
        "\".all\"",
        "\"r\"",
        "\".all\"",
        "\".all\"",
        "\"/error\"",
        "\"/error\"",
        "\"/error\"",
        "\".sig\"",
        "\".sig\"",
        "\"/error\"",
        "\".key\"",
        "\".key\"",
        "\"/error\"",
        "\".bin\"",
        "\".bin\"",
        "\"/error\"",
        "\"/error\"",
        "\"\"",
        "\"Sender's public key file name:\"",
        "\">>> \"",
        "\"\"",
        "\"Receiver's private key file name:\"",
        "\">>> \"",
        "'.'",
        "\"Here 1\"",
        "\"Here 2\"",
        "\"Here 3\"",
        "\".sig\"",
        "\".key\"",
        "\".bin\"",
        "\".all\"",
        "\"/generated2\"",
        "'/generated2'",
        "\"done.html\"",
        "'__main__'",
        "'IP'",
        "'127.0.0.1'",
        "'PORT'"
    ],
    "variables": [
        "app",
        "signHex",
        "password",
        "keyPair",
        "f",
        "f",
        "password",
        "keyPair",
        "f",
        "f",
        "UPLOAD_FOLDER",
        "file",
        "filename",
        "password",
        "file",
        "priKey",
        "pubKey",
        "f",
        "buffer",
        "h",
        "keyPair",
        "keySigner",
        "f",
        "h",
        "keyPair",
        "keyCipher",
        "f",
        "f",
        "buffer",
        "iv",
        "k",
        "keyCipher",
        "f",
        "f",
        "s",
        "file",
        "file",
        "priKey",
        "pubKey",
        "password",
        "file",
        "pubKey",
        "priKey",
        "h",
        "keyPair",
        "keyVerifier",
        "signHex",
        "keyPair",
        "keyDecipher",
        "f",
        "iv",
        "k",
        "k",
        "iv",
        "keyDecipher",
        "bin",
        "f",
        "f",
        "file",
        "file",
        "pubKey",
        "priKey",
        "file"
    ],
    "comments": [
        "download sender public key",
        "download sender private key",
        "download receiver public key",
        "download receiver private key",
        "download encrypted file",
        "download decrypted file",
        "@app.route('/keys')",
        "def inp():",
        "password = request.args.get('password', 'test')",
        "keyPair = RSA.generate(1024)",
        "f = open(\"./static/priKey.pem\", \"w\")",
        "f.write(keyPair.exportKey(\"PEM\",password))",
        "f.close()",
        "f = open(\"./static/pubKey.pem\", \"w\")",
        "f.write(str(keyPair.publickey().exportKey()))",
        "f.close()",
        "return redirect('/generated')",
        "@app.route('/generated')",
        "def inp1():",
        "return render_template(\"generated.html\")",
        "",
        "import os",
        "import sys",
        "import zipfile",
        "from Cryptodome import Random",
        "from Cryptodome.Cipher import AES, PKCS1_OAEP",
        "from Cryptodome.Hash import SHA256",
        "from Cryptodome.PublicKey import RSA",
        "from Cryptodome.Random import random",
        "from Cryptodome.Signature import PKCS1_v1_5",
        "Define public and private key names for faster usage",
        "Sender's private key:",
        "Receiver's public key:",
        "Opening and reading file to encrypt",
        "Creating hash of the file. Using SHA-256 (SHA-512 rose problems)",
        "Reading private key to sign file with",
        "Saving signature to *.sig file",
        "Generating 1024 random bits, and creating SHA-256 (for 32 bits compatibility with AES)",
        "Reading public key to encrypt AES key with",
        "Saving encrypted key to *.key file",
        "Returning generated key to encrypt file with",
        "Opening file to encrypt in binary reading mode",
        "Generating file's signature (and saving it)",
        "Generating initializing vector for AES Encryption",
        "Generating symmetric key for use (and saving it)",
        "Encrypting and saving result to *.bin file. Using CFB mode",
        "Opening file to contain all bin, sig and key files",
        "Writing each of the arguments to the created file",
        "Closing the file",
        "Running clean up to the bin, sig and key files",
        "Deleting each of the files generated during ciphering",
        "Checking for encrypting file's existence and access",
        "Checking for each of the files to create existence and, in case they exist, if they are writable",
        "print \"Can't create temporary file: *.bin. Aborting...\"",
        "sys.exit(2)",
        "print \"Can't create temporary file: *.key. Aborting...\"",
        "sys.exit(3)",
        "print \"Can't create temporary file: *.bin. Aborting...\"",
        "sys.exit(4)",
        "print \"Can't create output file. Aborting...\"",
        "sys.exit(5)",
        "Checking for public key's existence and access",
        "print \"Invalid public key file. Aborting...\"",
        "sys.exit(6)",
        "Checking for private key's existence and access",
        "print \"Invalid private key file. Aborting...\"",
        "sys.exit(7)",
        "Gathering encrypting file name",
        "Gathering names of keys",
        "Running checks to files",
        "Reading password if not assigned:",
        "Ciphering file (and generating all auxiliary files)",
        "Generating output file and clean up",
        "",
        "Define public and private key names for faster usage",
        "Sender's public key:",
        "Receiver's private key:",
        "Generating decrypted file's SHA-256",
        "Reading public key to check signature with",
        "If signature is right, prints SHA-256. Otherwise states that the file is not authentic",
        "print \"The signature is authentic.\"",
        "print \"SHA-256 -> %s\" % h.hexdigest()",
        "webbrowser.open_new('http://localhost:5000/signauth')",
        "print \"The signature is not authentic.\"",
        "webbrowser.open_new('http://localhost:5000/error')",
        "Reading private key to decipher symmetric key used",
        "Reading iv and symmetric key used during encryption",
        "Getting symmetric key used and iv value generated at encryption process",
        "Deciphering the initial information and saving it to file with no extension",
        "Running a Signature verification",
        "Opening the input file",
        "Extracting all of its files",
        "Removing all of the files created, except for the final deciphered file",
        "Checking for decrypting file's existence and access, keys, aux and output files",
        "Checking for decrypting file's existence and access",
        "print \"Invalid file to decrypt. Aborting...\"",
        "sys.exit(1)",
        "Checking for public key's existence and access",
        "print \"Invalid public key file. Aborting...\"",
        "sys.exit(6)",
        "Checking for private key's existence and access",
        "print \"Invalid private key file. Aborting...\"",
        "sys.exit(7)",
        "Checking if all of the necessary files exist and are accessible",
        "print \"Invalid *.sig file. Aborting...\"",
        "sys.exit(2)",
        "print \"Invalid *.key file. Aborting...\"",
        "sys.exit(3)",
        "print \"Invalid *.bin file. Aborting...\"",
        "sys.exit(4)",
        "Checking if in case of output file's existence, it is writable",
        "print \"Can't create output file. Aborting...\"",
        "sys.exit(5)",
        "Gathering encrypting file name",
        "Gathering names of keys",
        "Checking for *.all file and keys' files",
        "Unzipping all files",
        "Checking for *.sig, *.key, *.bin files",
        "Reading password if not assigne",
        "Deciphering file",
        "Cleaning all files but the deciphered file"
    ],
    "docstrings": [],
    "functions": [
        "sender_generate",
        "receive_generate",
        "sengen",
        "recgen",
        "sengend",
        "recgend",
        "dspub",
        "dspri",
        "drpub",
        "drpri",
        "downenc",
        "downdec",
        "error",
        "signauth",
        "homepage",
        "banana",
        "upload_file",
        "banana1",
        "encrypt",
        "usage",
        "sigGenerator",
        "keyGenerator",
        "encipher",
        "auxFilesZip",
        "cleanUp",
        "checkFiles",
        "inp2",
        "banana2",
        "decrypt",
        "usage",
        "sigVerification",
        "keyReader",
        "decipher",
        "auxFilesUnzip",
        "cleanUp",
        "checkFiles",
        "inp3"
    ],
    "classes": []
}