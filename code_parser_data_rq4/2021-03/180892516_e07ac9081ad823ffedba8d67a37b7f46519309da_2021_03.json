{
    "identifiers": [
        "eth_typing",
        "Address",
        "eth_utils",
        "toolz",
        "curry",
        "eth",
        "constants",
        "eth",
        "_utils",
        "address",
        "force_bytes_to_address",
        "eth",
        "abc",
        "ComputationAPI",
        "eth",
        "vm",
        "mnemonics",
        "eth",
        "vm",
        "forks",
        "istanbul",
        "storage",
        "GAS_SCHEDULE_EIP2200",
        "sstore_eip2200_generic",
        "eth",
        "vm",
        "logic",
        "call",
        "CallByzantium",
        "StaticCall",
        "eth",
        "vm",
        "logic",
        "context",
        "consume_extcodecopy_word_cost",
        "push_balance_of_address",
        "extcodecopy_execute",
        "eth",
        "vm",
        "logic",
        "storage",
        "NetSStoreGasSchedule",
        "constants",
        "berlin_constants",
        "computation",
        "ComputationAPI",
        "address",
        "Address",
        "computation",
        "state",
        "is_address_warm",
        "address",
        "berlin_constants",
        "WARM_STORAGE_READ_COST",
        "computation",
        "state",
        "mark_address_warm",
        "address",
        "berlin_constants",
        "COLD_ACCOUNT_ACCESS_COST",
        "computation",
        "ComputationAPI",
        "address",
        "Address",
        "reason",
        "_mark_address_warm",
        "computation",
        "address",
        "computation",
        "consume_gas",
        "gas_cost",
        "reason",
        "reason",
        "computation",
        "ComputationAPI",
        "slot",
        "computation",
        "msg",
        "storage_address",
        "computation",
        "state",
        "is_storage_warm",
        "storage_address",
        "slot",
        "computation",
        "state",
        "mark_storage_warm",
        "storage_address",
        "slot",
        "computation",
        "ComputationAPI",
        "force_bytes_to_address",
        "computation",
        "stack_pop1_bytes",
        "_consume_gas_for_account_load",
        "computation",
        "address",
        "mnemonics",
        "BALANCE",
        "push_balance_of_address",
        "address",
        "computation",
        "computation",
        "ComputationAPI",
        "force_bytes_to_address",
        "computation",
        "stack_pop1_bytes",
        "_consume_gas_for_account_load",
        "computation",
        "address",
        "mnemonics",
        "EXTCODEHASH",
        "len",
        "computation",
        "state",
        "get_code",
        "address",
        "computation",
        "stack_push_int",
        "code_size",
        "computation",
        "ComputationAPI",
        "extcodecopy_execute",
        "computation",
        "consume_extcodecopy_word_cost",
        "computation",
        "size",
        "_consume_gas_for_account_load",
        "computation",
        "address",
        "mnemonics",
        "EXTCODECOPY",
        "computation",
        "ComputationAPI",
        "force_bytes_to_address",
        "computation",
        "stack_pop1_bytes",
        "computation",
        "state",
        "_consume_gas_for_account_load",
        "computation",
        "address",
        "mnemonics",
        "EXTCODEHASH",
        "state",
        "account_is_empty",
        "address",
        "computation",
        "stack_push_bytes",
        "constants",
        "NULL_BYTE",
        "computation",
        "stack_push_bytes",
        "state",
        "get_code_hash",
        "address",
        "computation",
        "ComputationAPI",
        "computation",
        "stack_pop1_int",
        "_mark_storage_warm",
        "computation",
        "slot",
        "berlin_constants",
        "COLD_SLOAD_COST",
        "berlin_constants",
        "WARM_STORAGE_READ_COST",
        "computation",
        "consume_gas",
        "gas_cost",
        "reason",
        "mnemonics",
        "SLOAD",
        "computation",
        "state",
        "get_storage",
        "address",
        "computation",
        "msg",
        "storage_address",
        "slot",
        "slot",
        "computation",
        "stack_push_int",
        "value",
        "GAS_SCHEDULE_EIP2200",
        "_replace",
        "sload_gas",
        "berlin_constants",
        "WARM_STORAGE_READ_COST",
        "sstore_reset_gas",
        "berlin_constants",
        "COLD_SLOAD_COST",
        "curry",
        "gas_schedule",
        "NetSStoreGasSchedule",
        "computation",
        "ComputationAPI",
        "sstore_eip2200_generic",
        "gas_schedule",
        "computation",
        "_mark_storage_warm",
        "computation",
        "slot",
        "berlin_constants",
        "COLD_SLOAD_COST",
        "computation",
        "consume_gas",
        "gas_cost",
        "reason",
        "mnemonics",
        "SSTORE",
        "slot",
        "sstore_eip2929_generic",
        "GAS_SCHEDULE_EIP2929",
        "CallByzantium",
        "computation",
        "ComputationAPI",
        "gas",
        "to",
        "Address",
        "value",
        "compute_msg_extra_gas",
        "computation",
        "gas",
        "to",
        "value",
        "_mark_address_warm",
        "computation",
        "to",
        "legacy_extra_gas",
        "account_load_cost",
        "StaticCall",
        "computation",
        "ComputationAPI",
        "gas",
        "to",
        "Address",
        "value",
        "compute_msg_extra_gas",
        "computation",
        "gas",
        "to",
        "value",
        "_mark_address_warm",
        "computation",
        "to",
        "legacy_extra_gas",
        "account_load_cost"
    ],
    "literals": [
        "f\"Implicit SLOAD during {mnemonics.SSTORE}\""
    ],
    "variables": [
        "gas_cost",
        "storage_address",
        "address",
        "address",
        "code_size",
        "address",
        "size",
        "address",
        "state",
        "slot",
        "gas_cost",
        "gas_cost",
        "value",
        "GAS_SCHEDULE_EIP2929",
        "slot",
        "gas_cost",
        "sstore_eip2929",
        "legacy_extra_gas",
        "account_load_cost",
        "legacy_extra_gas",
        "account_load_cost"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\n    Mark the given address as warm if it was not previously.\n\n    :return gas_cost: cold cost if account was not previously accessed during\n        this transaction, warm cost otherwise\n    \"\"\"",
        "\"\"\"\n    :return was_cold: True if the storage slot was not previously accessed\n        during this transaction\n    \"\"\"",
        "\"\"\"\n    Return the code hash for a given address.\n    EIP: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1052.md\n    \"\"\""
    ],
    "functions": [
        "_mark_address_warm",
        "_consume_gas_for_account_load",
        "_mark_storage_warm",
        "balance_eip2929",
        "extcodesize_eip2929",
        "extcodecopy_eip2929",
        "extcodehash_eip2929",
        "sload_eip2929",
        "sstore_eip2929_generic",
        "compute_msg_extra_gas",
        "compute_msg_extra_gas"
    ],
    "classes": [
        "CallEIP2929",
        "StaticCallEIP2929"
    ]
}