{
    "identifiers": [
        "IO",
        "Linq",
        "FluentAssertions",
        "Moq",
        "NanoByte",
        "Common",
        "Net",
        "NanoByte",
        "Common",
        "Storage",
        "NanoByte",
        "Common",
        "Streams",
        "Xunit",
        "ZeroInstall",
        "FileSystem",
        "ZeroInstall",
        "Model",
        "ZeroInstall",
        "Services",
        "Native",
        "ZeroInstall",
        "Store",
        "ZeroInstall",
        "Store",
        "Implementations",
        "ZeroInstall",
        "Store",
        "Implementations",
        "Archives",
        "ZeroInstall",
        "Services",
        "Fetchers",
        "Collection",
        "TestWithMocks",
        "FetcherTestBase",
        "GetEmbeddedStream",
        "DateTimeKind",
        "Utc",
        "Mock",
        "IImplementationStore",
        "StoreMock",
        "CreateMock",
        "IImplementationStore",
        "Fact",
        "StoreMock",
        "Setup",
        "x",
        "Flush",
        "MicroServer",
        "ZipArchiveStream",
        "TestDownloadArchives",
        "Archive",
        "Href",
        "server",
        "FileUri",
        "MimeType",
        "Archive",
        "MimeTypeZip",
        "Size",
        "ZipArchiveStream",
        "Length",
        "Extract",
        "Destination",
        "Fact",
        "StoreMock",
        "Setup",
        "x",
        "Flush",
        "TemporaryFile",
        "ZipArchiveStream",
        "CopyToFile",
        "tempFile",
        "TestDownloadArchives",
        "Archive",
        "Href",
        "tempFile",
        "MimeType",
        "Archive",
        "MimeTypeZip",
        "Size",
        "ZipArchiveStream",
        "Length",
        "Extract",
        "Destination",
        "Fact",
        "StoreMock",
        "Setup",
        "x",
        "Flush",
        "MicroServer",
        "ZipArchiveStream",
        "MicroServer",
        "ZipArchiveStream",
        "TestDownloadArchives",
        "Archive",
        "Href",
        "server1",
        "FileUri",
        "MimeType",
        "Archive",
        "MimeTypeZip",
        "Size",
        "ZipArchiveStream",
        "Length",
        "Extract",
        "Destination",
        "Archive",
        "Href",
        "server2",
        "FileUri",
        "MimeType",
        "Archive",
        "MimeTypeZip",
        "Size",
        "ZipArchiveStream",
        "Length",
        "Extract",
        "Destination",
        "Fact",
        "StoreMock",
        "Setup",
        "x",
        "Flush",
        "MicroServer",
        "TestFile",
        "DefaultContents",
        "ToStream",
        "TestDownload",
        "TestRoot",
        "TestFile",
        "LastWrite",
        "UnixEpoch",
        "SingleFile",
        "Href",
        "server",
        "FileUri",
        "Size",
        "TestFile",
        "DefaultContents",
        "Length",
        "Destination",
        "Fact",
        "StoreMock",
        "Setup",
        "x",
        "Flush",
        "MicroServer",
        "ZipArchiveStream",
        "MicroServer",
        "TestFile",
        "DefaultContents",
        "ToStream",
        "TestDownload",
        "TestRoot",
        "TestFile",
        "LastWrite",
        "DateTimeKind",
        "Utc",
        "TestFile",
        "LastWrite",
        "UnixEpoch",
        "TestFile",
        "IsExecutable",
        "LastWrite",
        "DateTimeKind",
        "Utc",
        "Recipe",
        "Steps",
        "Archive",
        "Href",
        "serverArchive",
        "FileUri",
        "MimeType",
        "Archive",
        "MimeTypeZip",
        "Size",
        "ZipArchiveStream",
        "Length",
        "RenameStep",
        "Source",
        "Destination",
        "SingleFile",
        "Href",
        "serverSingleFile",
        "FileUri",
        "Size",
        "TestFile",
        "DefaultContents",
        "Length",
        "Destination",
        "Fact",
        "StoreMock",
        "Setup",
        "x",
        "Flush",
        "MicroServer",
        "ZipArchiveStream",
        "MicroServer",
        "TestFile",
        "DefaultContents",
        "ToStream",
        "TestDownload",
        "TestRoot",
        "TestFile",
        "LastWrite",
        "UnixEpoch",
        "Archive",
        "Href",
        "serverArchive",
        "FileUri",
        "MimeType",
        "Archive",
        "MimeTypeZip",
        "Size",
        "Archive",
        "Href",
        "serverArchive",
        "FileUri",
        "MimeType",
        "Size",
        "ZipArchiveStream",
        "Length",
        "Recipe",
        "Steps",
        "SingleFile",
        "Href",
        "serverSingleFile",
        "FileUri",
        "Size",
        "TestFile",
        "DefaultContents",
        "Length",
        "Destination",
        "Archive",
        "archives",
        "ManifestDigest",
        "sha256New",
        "archives",
        "Select",
        "ArchiveFileInfo",
        "archive",
        "MimeType",
        "Extract",
        "archive",
        "Extract",
        "Destination",
        "archive",
        "Destination",
        "StartOffset",
        "archive",
        "StartOffset",
        "OriginalSource",
        "archive",
        "Href",
        "ToList",
        "Implementation",
        "ID",
        "ManifestDigest",
        "digest",
        "RetrievalMethods",
        "GetRetrievalMethod",
        "archives",
        "StoreMock",
        "Setup",
        "x",
        "GetPath",
        "digest",
        "Returns",
        "StoreMock",
        "Setup",
        "x",
        "AddArchives",
        "It",
        "Is",
        "ArchiveFileInfo",
        "files",
        "Select",
        "WithDummyPath",
        "SequenceEqual",
        "archiveInfos",
        "digest",
        "Handler",
        "Returns",
        "BuildFetcher",
        "Fetch",
        "testImplementation",
        "ArchiveFileInfo",
        "file",
        "file",
        "Path",
        "Archive",
        "archives",
        "archives",
        "Length",
        "archives",
        "Recipe",
        "recipe",
        "Steps",
        "AddRange",
        "archives",
        "recipe",
        "TestRoot",
        "expected",
        "RetrievalMethod",
        "retrievalMethod",
        "ManifestDigest",
        "sha256New",
        "Implementation",
        "ID",
        "ManifestDigest",
        "digest",
        "testImplementation",
        "RetrievalMethods",
        "AddRange",
        "retrievalMethod",
        "StoreMock",
        "Setup",
        "x",
        "GetPath",
        "digest",
        "Returns",
        "StoreMock",
        "Setup",
        "x",
        "AddDirectory",
        "It",
        "Is",
        "expected",
        "Verify",
        "path",
        "digest",
        "Handler",
        "Returns",
        "BuildFetcher",
        "Fetch",
        "testImplementation",
        "Fact",
        "Handler",
        "AnswerQuestionWith",
        "BuildFetcher",
        "Fetch",
        "Implementation",
        "ID",
        "ExternalImplementation",
        "PackagePrefix",
        "RetrievalMethods",
        "ExternalRetrievalMethod",
        "ConfirmationQuestion",
        "Install",
        "installInvoked",
        "installInvoked",
        "Should",
        "BeTrue",
        "Fact",
        "Handler",
        "AnswerQuestionWith",
        "Assert",
        "Throws",
        "OperationCanceledException",
        "BuildFetcher",
        "Fetch",
        "Implementation",
        "ID",
        "ExternalImplementation",
        "PackagePrefix",
        "RetrievalMethods",
        "ExternalRetrievalMethod",
        "ConfirmationQuestion",
        "Install",
        "installInvoked",
        "installInvoked",
        "Should",
        "BeFalse",
        "Fact",
        "ManifestDigest",
        "sha256New",
        "Implementation",
        "ID",
        "ManifestDigest",
        "digest",
        "RetrievalMethods",
        "Recipe",
        "StoreMock",
        "Setup",
        "x",
        "Flush",
        "StoreMock",
        "Setup",
        "x",
        "GetPath",
        "digest",
        "Returns",
        "BuildFetcher",
        "Fetch",
        "testImplementation",
        "Fact",
        "Implementation",
        "ID",
        "ManifestDigest",
        "ManifestDigest",
        "sha256New",
        "StoreMock",
        "Setup",
        "x",
        "Flush",
        "StoreMock",
        "Setup",
        "x",
        "GetPath",
        "implementation",
        "ManifestDigest",
        "Returns",
        "Assert",
        "Throws",
        "NotSupportedException",
        "BuildFetcher",
        "Fetch",
        "implementation",
        "Fact",
        "Implementation",
        "ID",
        "ManifestDigest",
        "ManifestDigest",
        "sha256New",
        "RetrievalMethods",
        "Archive",
        "MimeType",
        "StoreMock",
        "Setup",
        "x",
        "Flush",
        "StoreMock",
        "Setup",
        "x",
        "GetPath",
        "implementation",
        "ManifestDigest",
        "Returns",
        "Assert",
        "Throws",
        "NotSupportedException",
        "BuildFetcher",
        "Fetch",
        "implementation",
        "Fact",
        "Implementation",
        "ID",
        "ManifestDigest",
        "ManifestDigest",
        "sha256New",
        "RetrievalMethods",
        "Recipe",
        "Steps",
        "Archive",
        "MimeType",
        "Archive",
        "MimeTypeZip",
        "Archive",
        "MimeType",
        "StoreMock",
        "Setup",
        "x",
        "Flush",
        "StoreMock",
        "Setup",
        "x",
        "GetPath",
        "implementation",
        "ManifestDigest",
        "Returns",
        "Assert",
        "Throws",
        "NotSupportedException",
        "BuildFetcher",
        "Fetch",
        "implementation"
    ],
    "literals": [
        "\"Static state\"",
        "\"testArchive.zip\"",
        "\"archive.zip\"",
        "\"extract\"",
        "\"destination\"",
        "\"0install-unit-tests\"",
        "\"extract\"",
        "\"destination\"",
        "\"archive.zip\"",
        "\"archive.zip\"",
        "\"extract1\"",
        "\"destination1\"",
        "\"extract2\"",
        "\"destination2\"",
        "\"regular\"",
        "\"regular\"",
        "\"regular\"",
        "\"archive.zip\"",
        "\"regular\"",
        "\"regular\"",
        "\"regular2\"",
        "\"executable2\"",
        "\"executable\"",
        "\"executable2\"",
        "\"regular2\"",
        "\"archive.zip\"",
        "\"regular\"",
        "\"regular\"",
        "\"test/format\"",
        "\"regular\"",
        "\"test123\"",
        "\"dummy\"",
        "\"test\"",
        "\"\"",
        "\"dummy\"",
        "\"test123\"",
        "\"test\"",
        "\"\"",
        "\"123\"",
        "\"Install?\"",
        "\"123\"",
        "\"Install?\"",
        "\"test123\"",
        "\"test\"",
        "\"dummy\"",
        "\"test\"",
        "\"test123\"",
        "\"test\"",
        "\"test123\"",
        "\"test/format\"",
        "\"test\"",
        "\"test123\"",
        "\"test/format\""
    ],
    "variables": [
        "Stream",
        "ZipArchiveStream",
        "UnixEpoch",
        "Config",
        "Config",
        "StoreMock",
        "MockTaskHandler",
        "Handler",
        "server",
        "tempFile",
        "server1",
        "server2",
        "server",
        "serverArchive",
        "serverSingleFile",
        "serverArchive",
        "serverSingleFile",
        "digest",
        "archiveInfos",
        "testImplementation",
        "recipe",
        "digest",
        "testImplementation",
        "installInvoked",
        "installInvoked",
        "digest",
        "testImplementation",
        "implementation",
        "implementation",
        "implementation"
    ],
    "comments": [
        "Copyright Bastian Eicher et al.",
        "Licensed under the GNU Lesser Public License",
        "Contains test methods for <see cref=\"IFetcher\"/> implementations.",
        "</summary>",
        "broken: wrong size",
        "broken: unknown archive format",
        "works",
        "Exclude Path from comparison to allow easy testing with randomized TemporaryFiles"
    ],
    "docstrings": [
        "<summary>"
    ],
    "functions": [
        "FetcherTestBase",
        "IFetcher",
        "BuildFetcher",
        "DownloadSingleArchive",
        "DownloadLocalArchive",
        "DownloadMultipleArchives",
        "DownloadSingleFile",
        "DownloadRecipe",
        "SkipBroken",
        "TestDownloadArchives",
        "ArchiveFileInfo",
        "WithDummyPath",
        "RetrievalMethod",
        "GetRetrievalMethod",
        "TestDownload",
        "RunExternalConfirm",
        "RunExternalDeny",
        "SkipExisting",
        "NoSuitableMethod",
        "UnsupportedArchiveFormat",
        "UnsupportedArchiveFormatInRecipe"
    ],
    "classes": [
        "FetcherTestBase"
    ]
}