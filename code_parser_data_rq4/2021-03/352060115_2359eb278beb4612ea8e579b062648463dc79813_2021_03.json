{
    "identifiers": [
        "require",
        "require",
        "options",
        "options",
        "interchangableOptions",
        "opt",
        "opt",
        "requestOptions",
        "gotOptions",
        "opt",
        "requestOptions",
        "opt",
        "requestOptions",
        "opt",
        "requestOptions",
        "gotOptions",
        "requestOptions",
        "requestOptions",
        "requestOptions",
        "gotOptions",
        "requestOptions",
        "requestOptions",
        "requestOptions",
        "gotOptions",
        "requestOptions",
        "requestOptions",
        "requestOptions",
        "gotOptions",
        "requestOptions",
        "gotOptions",
        "requestOptions",
        "requestOptions",
        "requestOptions",
        "requestOptions",
        "gotOptions",
        "gotWrapper",
        "url",
        "options",
        "requestOptions2GotOptions",
        "options",
        "gotOptions",
        "gotOptions",
        "gotWrapper",
        "url",
        "gotOptions",
        "resp",
        "resp",
        "err",
        "err",
        "got",
        "InvalidResponse",
        "Inaccessible",
        "err",
        "fetchLimitBytes",
        "got",
        "options",
        "next",
        "next",
        "options",
        "promiseOrStream",
        "progress",
        "progress",
        "fetchLimitBytes",
        "progress",
        "promiseOrStream",
        "promiseOrStream",
        "sendRequest",
        "sendRequest",
        "gotWithLimit"
    ],
    "literals": [
        "'use strict'",
        "'got'",
        "'./errors'",
        "'body'",
        "'form'",
        "'headers'",
        "'method'",
        "'url'",
        "'qs'",
        "'gzip'",
        "'strictSSL'",
        "'auth'",
        "Found unrecognised options ${Object.keys(requestOptions)}",
        "'Maximum response size exceeded'",
        "'downloadProgress'",
        "'Maximum response size exceeded'"
    ],
    "variables": [
        "got",
        "requestOptions",
        "gotOptions",
        "interchangableOptions",
        "gotOptions",
        "resp",
        "gotWithLimit",
        "promiseOrStream"
    ],
    "comments": [
        "just accept the file if we've already finished downloading",
        "the entire file before we went over the limit",
        "TODO: we should be able to pass cancel() a message\n            https://github.com/sindresorhus/got/blob/main/documentation/advanced-creation.md#examples\n            but by the time we catch it, err.message is just \"Promise was canceled\""
    ],
    "docstrings": [],
    "functions": [
        "requestOptions2GotOptions",
        "sendRequest",
        "fetchFactory"
    ],
    "classes": []
}