{
    "identifiers": [
        "fr",
        "insee",
        "rmes",
        "webservice",
        "java",
        "io",
        "File",
        "java",
        "io",
        "java",
        "nio",
        "file",
        "Files",
        "javax",
        "ws",
        "rs",
        "GET",
        "javax",
        "ws",
        "rs",
        "Path",
        "javax",
        "ws",
        "rs",
        "Produces",
        "javax",
        "ws",
        "rs",
        "core",
        "MediaType",
        "javax",
        "ws",
        "rs",
        "core",
        "Response",
        "org",
        "apache",
        "commons",
        "lang3",
        "StringUtils",
        "org",
        "apache",
        "logging",
        "log4j",
        "LogManager",
        "org",
        "apache",
        "logging",
        "log4j",
        "Logger",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "fr",
        "insee",
        "rmes",
        "bauhaus_services",
        "rdf_utils",
        "RepositoryGestion",
        "fr",
        "insee",
        "rmes",
        "bauhaus_services",
        "rdf_utils",
        "RepositoryPublication",
        "fr",
        "insee",
        "rmes",
        "config",
        "Config",
        "fr",
        "insee",
        "rmes",
        "exceptions",
        "RmesException",
        "io",
        "swagger",
        "v3",
        "oas",
        "annotations",
        "responses",
        "ApiResponse",
        "io",
        "swagger",
        "v3",
        "oas",
        "annotations",
        "responses",
        "ApiResponses",
        "ApiResponses",
        "value",
        "ApiResponse",
        "responseCode",
        "description",
        "ApiResponse",
        "responseCode",
        "description",
        "ApiResponse",
        "responseCode",
        "description",
        "ApiResponse",
        "responseCode",
        "description",
        "ApiResponse",
        "responseCode",
        "description",
        "ApiResponse",
        "responseCode",
        "description",
        "Path",
        "sparlQuery",
        "Autowired",
        "repoGestion",
        "logger",
        "LogManager",
        "getLogger",
        "GET",
        "Produces",
        "MediaType",
        "TEXT_PLAIN",
        "errorMessage",
        "stateResult",
        "logger",
        "info",
        "StringUtils",
        "isEmpty",
        "RepositoryPublication",
        "getResponse",
        "sparlQuery",
        "errorMessage",
        "errorMessage",
        "concat",
        "stateResult",
        "stateResult",
        "concat",
        "stateResult",
        "stateResult",
        "concat",
        "StringUtils",
        "isEmpty",
        "repoGestion",
        "getResponse",
        "sparlQuery",
        "errorMessage",
        "errorMessage",
        "concat",
        "stateResult",
        "stateResult",
        "concat",
        "stateResult",
        "stateResult",
        "concat",
        "e",
        "errorMessage",
        "errorMessage",
        "concat",
        "e",
        "getMessage",
        "stateResult",
        "stateResult",
        "concat",
        "stateResult",
        "stateResult",
        "concat",
        "dirPath",
        "Config",
        "DOCUMENTS_STORAGE",
        "testFile",
        "dirPath",
        "testFile",
        "createNewFile",
        "errorMessage",
        "errorMessage",
        "concat",
        "stateResult",
        "stateResult",
        "concat",
        "stateResult",
        "stateResult",
        "concat",
        "Files",
        "deleteIfExists",
        "testFile",
        "toPath",
        "errorMessage",
        "errorMessage",
        "concat",
        "stateResult",
        "stateResult",
        "concat",
        "stateResult",
        "stateResult",
        "concat",
        "e",
        "errorMessage",
        "errorMessage",
        "concat",
        "Config",
        "DOCUMENTS_STORAGE",
        "e",
        "getMessage",
        "stateResult",
        "stateResult",
        "concat",
        "logger",
        "info",
        "stateResult",
        "logger",
        "info",
        "equals",
        "errorMessage",
        "logger",
        "error",
        "errorMessage",
        "Response",
        "serverError",
        "entity",
        "errorMessage",
        "build",
        "Response",
        "ok",
        "stateResult",
        "build"
    ],
    "literals": [
        "\"200\"",
        "\"Opération réussie\"",
        "\"400\"",
        "\"La syntaxe de la requête est incorrecte\"",
        "\"401\"",
        "\"Une authentification est nécessaire pour accéder à la ressource\"",
        "\"404\"",
        "\"Ressource non trouvée\"",
        "\"406\"",
        "\"L'en-tête HTTP 'Accept' contient une valeur non acceptée\"",
        "\"500\"",
        "\"Erreur interne du serveur\"",
        "\"/healthcheck\"",
        "\"SELECT * { ?s a ?t } LIMIT 1\"",
        "\"\"",
        "\"Database connexion \\n\"",
        "\"Begin healthCheck\"",
        "\"- Repository publication doesn't return statement \\n\"",
        "\" - Connexion publication : KO \\n\"",
        "\" - Connexion publication : OK \\n\"",
        "\"- Repository gestion doesn't return statement \\n\"",
        "\" - Connexion gestion : KO \\n\"",
        "\" - Connexion gestion : OK \\n\"",
        "\"- \"",
        "\" \\n\"",
        "\" - Connexion database : KO \\n\"",
        "\"Document storage \\n\"",
        "\"testHealthcheck.txt\"",
        "\"- File for healthcheck already exists \\n\"",
        "\" - File creation : KO \\n\"",
        "\" - File creation : OK \\n\"",
        "\"- Can't delete test file \\n\"",
        "\" - File deletion : KO \\n\"",
        "\" - File deletion : OK \\n\"",
        "\"- IOException to save file in  \"",
        "\" - \"",
        "\" \\n\"",
        "\" - Document storage : KO \\n\"",
        "\"End healthcheck\"",
        "\"\""
    ],
    "variables": [
        "repoGestion"
    ],
    "comments": [
        "Test database connexion",
        "Test access to storage"
    ],
    "docstrings": [],
    "functions": [
        "Response",
        "getHealthcheck"
    ],
    "classes": [
        "HealthcheckApi"
    ]
}