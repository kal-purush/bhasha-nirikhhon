{
    "identifiers": [
        "sys",
        "time",
        "sleep",
        "PodSixNet",
        "Connection",
        "connection",
        "ConnectionListener",
        "client",
        "ClientState",
        "ClientState",
        "client",
        "Controller",
        "Controller",
        "client",
        "CreateDisplay",
        "CreateDisplay",
        "client",
        "TableView",
        "TableView",
        "client",
        "HandView",
        "HandView",
        "common",
        "HandAndFoot",
        "common",
        "Liverpool",
        "common",
        "Card",
        "client",
        "Button",
        "client",
        "ClickableImage",
        "client",
        "UICardWrapper",
        "client",
        "UIConstants",
        "getattr",
        "sys",
        "os",
        "chdir",
        "sys",
        "_MEIPASS",
        "input",
        "input",
        "connection",
        "DoConnect",
        "host",
        "port",
        "input",
        "ClientState",
        "ruleset",
        "Controller",
        "clientState",
        "clientState",
        "ruleset",
        "connection",
        "Pump",
        "gameControl",
        "Pump",
        "sleep",
        "clientState",
        "importRules",
        "clientState",
        "ruleset",
        "gameControl",
        "setName",
        "gameControl",
        "getName",
        "CreateDisplay",
        "playername",
        "TableView",
        "gameboard",
        "display",
        "clientState",
        "ruleset",
        "HandView",
        "gameControl",
        "gameboard",
        "display",
        "clientState",
        "ruleset",
        "handView",
        "round_index",
        "len",
        "tableView",
        "player_names",
        "tableView",
        "player_names",
        "count",
        "gameboard",
        "refresh",
        "connection",
        "Pump",
        "gameControl",
        "Pump",
        "tableView",
        "Pump",
        "tableView",
        "playerByPlayer",
        "current_round",
        "gameboard",
        "render",
        "note",
        "sleep",
        "gameControl",
        "checkNames",
        "tableView",
        "player_names",
        "clientState",
        "rules",
        "Shared_Board",
        "clientState",
        "player_index",
        "tableView",
        "player_names",
        "index",
        "playername",
        "err",
        "format",
        "err",
        "gameboard",
        "refresh",
        "connection",
        "Pump",
        "gameControl",
        "Pump",
        "tableView",
        "Pump",
        "tableView",
        "playerByPlayer",
        "current_round",
        "gameboard",
        "render",
        "note",
        "sleep",
        "handView",
        "round_index",
        "gameboard",
        "refresh",
        "handView",
        "nextEvent",
        "connection",
        "Pump",
        "gameControl",
        "Pump",
        "tableView",
        "Pump",
        "tableView",
        "playerByPlayer",
        "this_round",
        "clientState",
        "rules",
        "Shared_Board",
        "tableView",
        "player_names",
        "index",
        "playername",
        "tableView",
        "visible_scards",
        "handView",
        "update",
        "player_index",
        "len",
        "tableView",
        "player_names",
        "visible_scards",
        "handView",
        "update",
        "gameControl",
        "note",
        "gameboard",
        "render",
        "note",
        "sleep",
        "len",
        "sys",
        "argv",
        "RunClient"
    ],
    "literals": [
        "'frozen'",
        "\"Enter the host [xxxxx.net] \"",
        "\"xxxxx.net\"",
        "\"Enter the port[8080] \"",
        "\"8080\"",
        "\"tbd\"",
        "\"Enter the game - Liverpool or HandAndFoot [HandAndFoot]\"",
        "\"HandAndFoot\"",
        "\"tbd\"",
        "'guest'",
        "\"Waiting for all current players to pick legit names. If wait seems too long, \"",
        "\"then it is possible you have the wrong server or port#...\"",
        "\"{0}   waiting for name in player_names to update...\"",
        "\"__main__\"",
        "\"This version gets host:port and ruleSet after starting.\"",
        "\"Do not include any arguments on command line\"",
        "\"RunServer should not be imported anywhere\""
    ],
    "variables": [
        "host",
        "port",
        "ruleset",
        "ruleset",
        "clientState",
        "gameControl",
        "playername",
        "gameboard",
        "tableView",
        "handView",
        "current_round",
        "note",
        "playername",
        "clientState",
        "player_index",
        "clientState",
        "player_index",
        "note",
        "this_round",
        "player_index",
        "visible_scards",
        "note"
    ],
    "comments": [
        "imports below added so that can generate executable using pyinstaller.",
        "Comment out changes that are not compatible with server currently on host (= getting game from Server)",
        "(i) Connect to server:",
        "(ii)-(iv) initialize clientState and gameControl.  Will get name of game from server",
        "ruleset will be obtained from server. If wish to run in test mode than change \"tbd\" to \"test\"",
        "oldServer - added next line and commented out gameControl.askForGame()",
        "gameControl.askForGame()    # Ask server for name of game to be played.",
        "Have rec'd ruleset name from server, so import the rules.",
        "",
        "Ask the player their name, and confirm it is acceptable.",
        "Confirm server has player name.",
        "Note that if two people join with the same name almost simultaneously, then both might be renamed.",
        "games with Shared_Board=True need player_index, first must insure that server is reporting correct name.",
        "This can take a few cycles.",
        "Primary game loop."
    ],
    "docstrings": [
        "\"\"\"This is the launch point for the client.\n    \n    It sets up the various classes and starts the game loop.\n    Steps -- \n    (i) player provides host:port info, and connection to server established.\n    (ii) clientState initialized \n    (iii) controller initialized\n    (iv) ruleset imported        << this is section that I edited for this. Labeled changes: # oldServer.\n    (v) player provides name\n    (vi) game window created\n    (vii) tableView and handView initialized\n    (viii) playername confirmed with server and player_index found.\n    (ix) main game loop\n    \"\"\""
    ],
    "functions": [
        "RunClient"
    ],
    "classes": []
}