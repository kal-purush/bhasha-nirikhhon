{
    "identifiers": [
        "torch",
        "torch",
        "nn",
        "nn",
        "nn",
        "Module",
        "num_classes",
        "Discriminator",
        "nn",
        "Sequential",
        "nn",
        "Conv2d",
        "bias",
        "nn",
        "LeakyReLU",
        "inplace",
        "nn",
        "Dropout",
        "inplace",
        "nn",
        "Sequential",
        "nn",
        "Conv2d",
        "bias",
        "nn",
        "BatchNorm2d",
        "nn",
        "LeakyReLU",
        "inplace",
        "nn",
        "Sequential",
        "nn",
        "Conv2d",
        "bias",
        "nn",
        "BatchNorm2d",
        "nn",
        "LeakyReLU",
        "inplace",
        "nn",
        "Sequential",
        "nn",
        "Conv2d",
        "bias",
        "nn",
        "BatchNorm2d",
        "nn",
        "LeakyReLU",
        "inplace",
        "nn",
        "Sequential",
        "nn",
        "Conv2d",
        "bias",
        "nn",
        "Sigmoid",
        "nn",
        "Sequential",
        "nn",
        "Conv2d",
        "num_classes",
        "bias",
        "nn",
        "Softmax",
        "dim",
        "input",
        "conv1",
        "input",
        "conv2",
        "conv1",
        "conv3",
        "conv2",
        "conv4",
        "conv3",
        "conv5",
        "conv4",
        "view",
        "conv6",
        "conv4",
        "view",
        "realfake",
        "classes"
    ],
    "literals": [],
    "variables": [
        "conv1",
        "conv2",
        "conv3",
        "conv4",
        "conv5",
        "conv6",
        "conv1",
        "conv2",
        "conv3",
        "conv4",
        "realfake",
        "classes"
    ],
    "comments": [
        "Convolution 1",
        "Convolution 2",
        "nn.Dropout(0.5, inplace=False),",
        "Convolution 3",
        "nn.Dropout(0.5, inplace=False),",
        "Convolution 4",
        "nn.Dropout(0.5, inplace=False),",
        "Convolution 5",
        "Convolution 5",
        "Convolution 6",
        "classes = self.softmax(fc_aux)",
        "realfake = self.sigmoid(fc_dis).view(-1, 1).squeeze(1)"
    ],
    "docstrings": [],
    "functions": [
        "forward"
    ],
    "classes": [
        "Discriminator"
    ]
}