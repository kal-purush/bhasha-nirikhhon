{
    "identifiers": [
        "require",
        "require",
        "require",
        "core",
        "parseInt",
        "core",
        "core",
        "core",
        "graphql",
        "token",
        "graphqlWithAuth",
        "query",
        "org",
        "project",
        "cutoff",
        "cutoff",
        "archivePeriodDays",
        "archivedItems",
        "i",
        "i",
        "archivedItems",
        "i",
        "archivedItems",
        "i",
        "card",
        "card",
        "cardDate",
        "cutoff",
        "card",
        "card",
        "card",
        "graphqlWithAuth",
        "updateCard",
        "card",
        "result",
        "card",
        "result",
        "message",
        "archivedCount",
        "core",
        "archivedCount",
        "error",
        "core",
        "error",
        "archiveItems"
    ],
    "literals": [
        "'@actions/core'",
        "'@actions/github'",
        "\"@octokit/graphql\"",
        "query GetItems($org: String!, $project: Int!)\n        {\n            organization(login: $org) {\n              project(number: $project) {\n                state\n                resourcePath\n                columns(last: 1) {\n                  edges {\n                    node {\n                      id\n                      name\n                      cards {\n                        edges {\n                          node {\n                            id\n                            updatedAt\n                            isArchived\n                            resourcePath\n                            databaseId\n                            content {\n                              ... on Issue {\n                                title\n                                state\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }",
        "mutation ArchiveProjectCard($id: ID!) {\n            updateProjectCard(input:{clientMutationId: \"archive-project-board-action\"\n              isArchived: true, projectCardId:$id}) {\n                projectCard {\n                id\n                updatedAt\n                }\n            }\n        }",
        "'organization'",
        "'project'",
        "'token'",
        "'archive-period-days'",
        "token ${token}",
        "'CLOSED'",
        "'Trying to archive card: '",
        "' Title: '",
        "Card: ${result.updateProjectCard.projectCard.id}, title: ${card.content.title}, archived at: ${result.updateProjectCard.projectCard.updatedAt}",
        "\"archived-items\""
    ],
    "variables": [
        "core",
        "github",
        "graphql",
        "query",
        "updateCard",
        "org",
        "project",
        "token",
        "archivePeriodDays",
        "archivedCount",
        "graphqlWithAuth",
        "archivedItems",
        "cutoff",
        "card",
        "cardDate",
        "result",
        "message"
    ],
    "comments": [
        "\"github\";",
        "907;"
    ],
    "docstrings": [],
    "functions": [
        "archiveItems"
    ],
    "classes": []
}