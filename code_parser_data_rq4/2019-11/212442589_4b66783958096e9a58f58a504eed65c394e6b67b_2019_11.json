{
    "identifiers": [
        "io",
        "xpring",
        "xrpl",
        "io",
        "grpc",
        "ManagedChannel",
        "io",
        "grpc",
        "ManagedChannelBuilder",
        "io",
        "xpring",
        "proto",
        "io",
        "xpring",
        "proto",
        "XRPLedgerAPIGrpc",
        "XRPLedgerAPIBlockingStub",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "java",
        "math",
        "BigInteger",
        "java",
        "util",
        "Objects",
        "XPRING_TECH_GRPC_URL",
        "LEDGER_SEQUENCE_MARGIN",
        "logger",
        "LoggerFactory",
        "getLogger",
        "getClass",
        "stub",
        "ManagedChannelBuilder",
        "forTarget",
        "XPRING_TECH_GRPC_URL",
        "usePlaintext",
        "build",
        "channel",
        "stub",
        "XRPLedgerAPIGrpc",
        "newBlockingStub",
        "channel",
        "xrplAccountAddress",
        "Utils",
        "isValidXAddress",
        "xrplAccountAddress",
        "XpringKitException",
        "xAddressRequiredException",
        "Objects",
        "requireNonNull",
        "xrplAccountAddress",
        "result",
        "stub",
        "getAccountInfo",
        "GetAccountInfoRequest",
        "newBuilder",
        "setAddress",
        "xrplAccountAddress",
        "build",
        "logger",
        "debug",
        "xrplAccountAddress",
        "result",
        "getBalance",
        "toString",
        "result",
        "getBalance",
        "getDrops",
        "amount",
        "destinationAddress",
        "sourceWallet",
        "Utils",
        "isValidXAddress",
        "destinationAddress",
        "XpringKitException",
        "xAddressRequiredException",
        "accountInfo",
        "getAccountInfo",
        "sourceWallet",
        "getAddress",
        "currentFeeInDrops",
        "getCurrentFeeInDrops",
        "lastValidatedLedgerSequence",
        "getLatestValidatedLedgerSequence",
        "transaction",
        "Transaction",
        "newBuilder",
        "setAccount",
        "sourceWallet",
        "getAddress",
        "setFee",
        "XRPAmount",
        "newBuilder",
        "setDrops",
        "currentFeeInDrops",
        "toString",
        "build",
        "setSequence",
        "accountInfo",
        "getSequence",
        "setPayment",
        "Payment",
        "newBuilder",
        "setDestination",
        "destinationAddress",
        "setXrpAmount",
        "XRPAmount",
        "newBuilder",
        "setDrops",
        "amount",
        "toString",
        "build",
        "build",
        "setSigningPublicKeyHex",
        "sourceWallet",
        "getPublicKey",
        "setLastLedgerSequence",
        "lastValidatedLedgerSequence",
        "LEDGER_SEQUENCE_MARGIN",
        "build",
        "signedTransaction",
        "Signer",
        "signTransaction",
        "transaction",
        "sourceWallet",
        "submitSignedTransactionRequest",
        "SubmitSignedTransactionRequest",
        "newBuilder",
        "setSignedTransaction",
        "signedTransaction",
        "build",
        "response",
        "stub",
        "submitSignedTransaction",
        "submitSignedTransactionRequest",
        "Utils",
        "toTransactionHash",
        "response",
        "getTransactionBlob",
        "getFeeResult",
        "stub",
        "getFee",
        "GetFeeRequest",
        "newBuilder",
        "build",
        "getFeeResult",
        "getAmount",
        "getDrops",
        "xrplAddress",
        "stub",
        "getAccountInfo",
        "GetAccountInfoRequest",
        "newBuilder",
        "setAddress",
        "xrplAddress",
        "build",
        "request",
        "GetLatestValidatedLedgerSequenceRequest",
        "newBuilder",
        "build",
        "ledgerSequence",
        "stub",
        "getLatestValidatedLedgerSequence",
        "request",
        "ledgerSequence",
        "getIndex"
    ],
    "literals": [
        "\"grpc.xpring.tech:80\"",
        "\"xrplAccountAddress must not be null\"",
        "\"Account balance successfully retrieved. accountAddress={} balance={}\""
    ],
    "variables": [
        "stub"
    ],
    "comments": [
        "TODO: Use TLS!",
        "A margin to pad the current ledger sequence with when submitting transactions.",
        "Channel is the abstraction to connect to a service endpoint",
        "Let's use plaintext communication because we don't have certs",
        "TODO: Use TLS!",
        "It is up to the client to determine whether to block the call. Here we create a blocking stub, but an async",
        "stub, or an async stub with Future are always possible."
    ],
    "docstrings": [
        "* A client that can submit transactions to the XRP Ledger.\n *\n * @see \"https://xrpl.org\"",
        "* No-args Constructor.",
        "* Required-args Constructor, currently for testing.\n     *\n     * @param channel A {@link ManagedChannel}.",
        "* Get the balance of the specified account on the XRP Ledger.\n     *\n     * @param xrplAccountAddress The X-Address to retrieve the balance for.\n     * @return A {@link BigInteger} with the number of drops in this account.\n     * @throws XpringKitException If the given inputs were invalid.",
        "* Transact XRP between two accounts on the ledger.\n     *\n     * @param amount The number of drops of XRP to send.\n     * @param destinationAddress The X-Address to send the XRP to.\n     * @param sourceWallet The {@link Wallet} which holds the XRP.\n     * @return A transaction hash for the payment.\n     * @throws XpringKitException If the given inputs were invalid.",
        "* Retrieve the current fee to submit a transaction to the XRP Ledger.\n     *\n     * @return A {@link BigInteger} representing a `fee` for submitting a transaction to the ledger.",
        "* Retrieve an `AccountInfo` for an address on the XRP Ledger.\n     *\n     * @param xrplAddress The address to retrieve information about.\n     *\n     * @return An {@link AccountInfo} containing data about the given address.",
        "* Retrieve the latest validated ledger sequence on the XRP Ledger.\n     *\n     * @return A long representing the sequence of the most recently validated ledger."
    ],
    "functions": [
        "DefaultXpringClient",
        "DefaultXpringClient",
        "BigInteger",
        "getBalance",
        "send",
        "BigInteger",
        "getCurrentFeeInDrops",
        "AccountInfo",
        "getAccountInfo",
        "getLatestValidatedLedgerSequence"
    ],
    "classes": [
        "DefaultXpringClient"
    ]
}