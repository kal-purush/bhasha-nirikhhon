{
    "identifiers": [
        "time",
        "pandas",
        "pd",
        "numpy",
        "np",
        "city",
        "month",
        "day",
        "city",
        "month",
        "day",
        "df",
        "df",
        "time",
        "time",
        "time",
        "time",
        "start_time",
        "df",
        "time",
        "time",
        "time",
        "time",
        "start_time",
        "df",
        "time",
        "time",
        "time",
        "time",
        "start_time",
        "df",
        "time",
        "time",
        "time",
        "time",
        "start_time",
        "get_filters",
        "load_data",
        "city",
        "month",
        "day",
        "time_stats",
        "df",
        "station_stats",
        "df",
        "trip_duration_stats",
        "df",
        "user_stats",
        "df",
        "input",
        "restart",
        "lower",
        "main"
    ],
    "literals": [
        "'chicago'",
        "'chicago.csv'",
        "'new york city'",
        "'new_york_city.csv'",
        "'washington'",
        "'washington.csv'",
        "'Hello! Let\\'s explore some US bikeshare data!'",
        "'-'",
        "'\\nCalculating The Most Frequent Times of Travel...\\n'",
        "\"\\nThis took %s seconds.\"",
        "'-'",
        "'\\nCalculating The Most Popular Stations and Trip...\\n'",
        "\"\\nThis took %s seconds.\"",
        "'-'",
        "'\\nCalculating Trip Duration...\\n'",
        "\"\\nThis took %s seconds.\"",
        "'-'",
        "'\\nCalculating User Stats...\\n'",
        "\"\\nThis took %s seconds.\"",
        "'-'",
        "'\\nWould you like to restart? Enter yes or no.\\n'",
        "'yes'",
        "\"__main__\""
    ],
    "variables": [
        "CITY_DATA",
        "start_time",
        "start_time",
        "start_time",
        "start_time",
        "city",
        "month",
        "day",
        "df",
        "restart"
    ],
    "comments": [
        "get user input for city (chicago, new york city, washington). HINT: Use a while loop to handle invalid inputs",
        "get user input for month (all, january, february, ... , june)",
        "get user input for day of week (all, monday, tuesday, ... sunday)",
        "display the most common month",
        "display the most common day of week",
        "display the most common start hour",
        "display most commonly used start station",
        "display most commonly used end station",
        "display most frequent combination of start station and end station trip",
        "display total travel time",
        "display mean travel time",
        "Display counts of user types",
        "Display counts of gender",
        "Display earliest, most recent, and most common year of birth"
    ],
    "docstrings": [
        "\"\"\"\n    Asks user to specify a city, month, and day to analyze.\n\n    Returns:\n        (str) city - name of the city to analyze\n        (str) month - name of the month to filter by, or \"all\" to apply no month filter\n        (str) day - name of the day of week to filter by, or \"all\" to apply no day filter\n    \"\"\"",
        "\"\"\"\n    Loads data for the specified city and filters by month and day if applicable.\n\n    Args:\n        (str) city - name of the city to analyze\n        (str) month - name of the month to filter by, or \"all\" to apply no month filter\n        (str) day - name of the day of week to filter by, or \"all\" to apply no day filter\n    Returns:\n        df - Pandas DataFrame containing city data filtered by month and day\n    \"\"\"",
        "\"\"\"Displays statistics on the most frequent times of travel.\"\"\"",
        "\"\"\"Displays statistics on the most popular stations and trip.\"\"\"",
        "\"\"\"Displays statistics on the total and average trip duration.\"\"\"",
        "\"\"\"Displays statistics on bikeshare users.\"\"\""
    ],
    "functions": [
        "get_filters",
        "load_data",
        "time_stats",
        "station_stats",
        "trip_duration_stats",
        "user_stats",
        "main"
    ],
    "classes": []
}