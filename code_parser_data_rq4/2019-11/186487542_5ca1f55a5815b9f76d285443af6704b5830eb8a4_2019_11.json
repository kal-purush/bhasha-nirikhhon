{
    "identifiers": [
        "createTrapezeApiRoute",
        "express",
        "Server",
        "difference",
        "uniq",
        "exists",
        "mkdir",
        "readFile",
        "writeFile",
        "dirname",
        "join",
        "puppeteer",
        "PORT",
        "ms",
        "timeout",
        "ms",
        "resolve",
        "setTimeout",
        "resolve",
        "ms",
        "main",
        "express",
        "readFile",
        "join",
        "process",
        "express",
        "subRoute",
        "createTrapezeApiRoute",
        "subRoute",
        "express",
        "join",
        "__dirname",
        "subRoute",
        "req",
        "res",
        "res",
        "index",
        "app",
        "subRoute",
        "resolve",
        "reject",
        "app",
        "PORT",
        "e",
        "e",
        "reject",
        "e",
        "resolve",
        "s",
        "HOST",
        "puppeteer",
        "timeout",
        "browser",
        "PAGES",
        "page",
        "HOST",
        "p",
        "page",
        "result",
        "page",
        "p",
        "file",
        "join",
        "process",
        "p",
        "file",
        "join",
        "process",
        "dirname",
        "file",
        "exists",
        "dir",
        "mkdir",
        "dir",
        "writeFile",
        "file",
        "result",
        "file",
        "RENDERED_PAGES",
        "RENDERED_PAGES",
        "p",
        "result",
        "matchedUrls",
        "matchedUrls",
        "s",
        "s",
        "match",
        "match",
        "PAGES",
        "difference",
        "uniq",
        "PAGES",
        "matchedPath",
        "RENDERED_PAGES",
        "PAGES",
        "browser",
        "server",
        "main",
        "err",
        "err",
        "process"
    ],
    "literals": [
        "\"@donmahallem/trapeze-api-express-route\"",
        "\"express\"",
        "\"http\"",
        "\"lodash\"",
        "\"mz/fs\"",
        "\"path\"",
        "\"puppeteer\"",
        "http://localhost:${PORT}",
        "string",
        "\"TrapezeClientNgDemo/stops\"",
        "string",
        "\"TrapezeClientNg\"",
        "\"dist\"",
        "\"trapeze-client-ng\"",
        "\"index.html\"",
        "\"/api\"",
        "\"https://kvg-kiel.de\"",
        "\"*.*\"",
        "\"..\"",
        "\"TrapezeClientNg\"",
        "\"dist\"",
        "\"trapeze-client-ng\"",
        "\"*\"",
        "\"/TrapezeClientNgDemo\"",
        "Started server ${HOST}!",
        "Started browser!",
        "${HOST}/${p}",
        "\"networkidle0\"",
        "\"\"",
        "\"prerender\"",
        "\"index.html\"",
        "\"prerender\"",
        "\"index.html\"",
        "Wrote ${file}",
        "string",
        "\"\"",
        "\"All right!\"",
        "\"Err\""
    ],
    "variables": [
        "PORT",
        "HOST",
        "PAGES",
        "RENDERED_PAGES",
        "timeout",
        "main",
        "app",
        "index",
        "subRoute",
        "server",
        "s",
        "browser",
        "page",
        "p",
        "result",
        "file",
        "dir",
        "matchedUrls",
        "matchedPath",
        "match"
    ],
    "comments": [
        "!\n * Source https://github.com/donmahallem/TrapezeApiTypes",
        "defining some configuration",
        "starting an Express.js server to serve the static files while puppeter prerender the pages",
        "setting the html content from the index.html file",
        "starting the express server",
        "tslint:disable-next-line:no-console",
        "launching Puppeteer",
        "tslint:disable-next-line:no-console",
        "creating a new Tap/Page",
        "requesting the first page in PAGES array",
        "getting the html content after the Chromium finish rendering.",
        "defining the html file name that will be created",
        "test if the directory exist, if not create the directory",
        "write the rendered html file",
        "tslint:disable-next-line:no-console",
        "add this page to the RENDERED PAGES array",
        "set PAGES with the pages that still need to be rendered",
        "uniq(PAGES.concat(result.match(/href=\"\\/[\\/\\w\\d\\-]*\"/g).map(s => s.match(/\\/([\\/\\w\\d\\-]*)/)[1]))),",
        "closes Chromium and finishes the express server.",
        "run the main asyn function",
        "tslint:disable-next-line:no-console",
        "tslint:disable-next-line:no-console"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}