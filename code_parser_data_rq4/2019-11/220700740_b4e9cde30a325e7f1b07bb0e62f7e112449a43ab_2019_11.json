{
    "identifiers": [
        "multiprocessing",
        "Pool",
        "functools",
        "partial",
        "numpy",
        "n",
        "itertools",
        "product",
        "cartesian_product",
        "matplotlib",
        "pyplot",
        "plt",
        "numba",
        "jit",
        "J",
        "h",
        "N",
        "q",
        "n_procs",
        "jit",
        "nogil",
        "nopython",
        "s",
        "i",
        "N",
        "j",
        "i",
        "H",
        "J",
        "i",
        "j",
        "s",
        "i",
        "s",
        "j",
        "H",
        "h",
        "i",
        "s",
        "i",
        "n",
        "exp",
        "H",
        "n",
        "array",
        "cartesian_product",
        "q",
        "N",
        "n",
        "int8",
        "n",
        "array",
        "H",
        "s",
        "s",
        "S",
        "Hs",
        "sum",
        "axis",
        "Hs",
        "Z",
        "S",
        "Ps",
        "Z",
        "P",
        "S",
        "d",
        "S",
        "n",
        "random",
        "choice",
        "S",
        "shape",
        "size",
        "d",
        "replace",
        "p",
        "P",
        "samples",
        "D",
        "N",
        "q",
        "n",
        "zeros",
        "N",
        "q",
        "n",
        "float32",
        "k",
        "q",
        "D",
        "k",
        "astype",
        "n",
        "i",
        "N",
        "D_k",
        "i",
        "sum",
        "f_i_k",
        "D",
        "shape",
        "D",
        "N",
        "q",
        "n",
        "zeros",
        "N",
        "N",
        "q",
        "q",
        "n",
        "float32",
        "k",
        "q",
        "D",
        "k",
        "astype",
        "n",
        "l",
        "q",
        "D",
        "l",
        "astype",
        "n",
        "i",
        "N",
        "j",
        "N",
        "i",
        "j",
        "n",
        "dot",
        "D_k",
        "i",
        "D_l",
        "j",
        "f_ij",
        "D",
        "shape"
    ],
    "literals": [],
    "variables": [
        "H",
        "S",
        "Hs",
        "Z",
        "Ps",
        "samples",
        "f_i_k",
        "D_k",
        "f_i_k",
        "i",
        "k",
        "f_ij",
        "D_k",
        "D_l",
        "f_ij",
        "i",
        "j",
        "k",
        "l"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"Compute the probability distribtion over all states of given network\n    Arguments:\n        J {ndarray} -- array of couplings between nodes, shape (N,N,q,q)\n        h {ndarray} -- array of local fields of shape (N,q)\n        N {int} -- number of neurons\n        q {int} -- number of states\n    Returns:\n        tuple -- a tuple containing S {ndarray}, an array of all possible states, Ps {ndarray}, normalized probability of all states, and Z {float}, the partition function\n    \"\"\"",
        "\"\"\"Calculates the hamiltonian of a given state\n        Arguments:\n            s {ndarray} -- array encoding the state of shape (N,)\n            J {ndarray} -- array of couplings of shape (N,N,q,q)\n            h {ndarray} -- array of local fields of shape (N,q)\n            N {int} -- number of neurons\n        Returns:\n            ndarray -- The value of the Hamiltonian for given state\n        \"\"\""
    ],
    "functions": [
        "compute_prob_dist",
        "H",
        "make_dataset",
        "get_f_i_k",
        "get_f_ij_kl"
    ],
    "classes": []
}