{
    "identifiers": [
        "tests",
        "test_integration",
        "IntegrationTests",
        "kpet_run_generate",
        "create_asset_files",
        "DB_YAML_WITHOUT_ORIGINS",
        "SUITE_YAML_WITHOUT_ORIGIN",
        "SUITE_YAML_WITHOUT_ORIGIN",
        "SUITE_YAML_WITHOUT_ORIGIN",
        "IntegrationTests",
        "create_asset_files",
        "test_dir",
        "DB_YAML_WITHOUT_ORIGINS",
        "SUITE_YAML_WITHOUT_ORIGIN",
        "assertKpetProduces",
        "kpet_run_generate",
        "assets_path",
        "stdout_matching",
        "create_asset_files",
        "test_dir",
        "DB_YAML_WITHOUT_ORIGINS",
        "SUITE_YAML_WITH_ORIGIN_X",
        "assertKpetProduces",
        "kpet_run_generate",
        "assets_path",
        "status",
        "stderr_matching",
        "create_asset_files",
        "test_dir",
        "DB_YAML_WITH_ORIGINS",
        "SUITE_YAML_WITHOUT_ORIGIN",
        "assertKpetProduces",
        "kpet_run_generate",
        "assets_path",
        "status",
        "stderr_matching",
        "create_asset_files",
        "test_dir",
        "DB_YAML_WITH_ORIGINS",
        "SUITE_YAML_WITH_ORIGIN_X",
        "assertKpetProduces",
        "kpet_run_generate",
        "assets_path",
        "stdout_matching",
        "create_asset_files",
        "test_dir",
        "DB_YAML_WITH_ORIGINS",
        "SUITE_YAML_WITH_ORIGIN_Y",
        "assertKpetProduces",
        "kpet_run_generate",
        "assets_path",
        "stdout_matching",
        "create_asset_files",
        "test_dir",
        "DB_YAML_WITH_ORIGINS",
        "SUITE_YAML_WITH_ORIGIN_Z",
        "assertKpetProduces",
        "kpet_run_generate",
        "assets_path",
        "status",
        "stderr_matching"
    ],
    "literals": [
        "\"index.yaml\"",
        "\"suite.yaml\"",
        "\"tree.xml\"",
        "\"\"",
        "\"--no-lint\"",
        "\"\"",
        "\"index.yaml\"",
        "\"suite.yaml\"",
        "\"tree.xml\"",
        "\"\"",
        "\"--no-lint\"",
        "r'.* Suite \"Suite\" has origin specified\\b.*'",
        "\"index.yaml\"",
        "\"suite.yaml\"",
        "\"tree.xml\"",
        "\"\"",
        "\"--no-lint\"",
        "r'.* Suite \"Suite\" has no origin specified\\b.*'",
        "\"index.yaml\"",
        "\"suite.yaml\"",
        "\"tree.xml\"",
        "\"\"",
        "\"--no-lint\"",
        "\"\"",
        "\"index.yaml\"",
        "\"suite.yaml\"",
        "\"tree.xml\"",
        "\"\"",
        "\"--no-lint\"",
        "\"\"",
        "\"index.yaml\"",
        "\"suite.yaml\"",
        "\"tree.xml\"",
        "\"\"",
        "\"--no-lint\"",
        "r'.* Suite \"Suite\" has unknown origin '",
        "r'specified\\b.*'"
    ],
    "variables": [
        "DB_YAML_WITHOUT_ORIGINS",
        "DB_YAML_WITH_ORIGINS",
        "SUITE_YAML_WITHOUT_ORIGIN",
        "SUITE_YAML_WITH_ORIGIN_X",
        "SUITE_YAML_WITH_ORIGIN_Y",
        "SUITE_YAML_WITH_ORIGIN_Z",
        "assets_path",
        "assets_path",
        "assets_path",
        "assets_path",
        "assets_path",
        "assets_path"
    ],
    "comments": [
        "Copyright (c) 2019 Red Hat, Inc. All rights reserved. This copyrighted",
        "material is made available to anyone wishing to use, modify, copy, or",
        "redistribute it subject to the terms and conditions of the GNU General Public",
        "License v.2 or later.",
        "",
        "This program is distributed in the hope that it will be useful, but WITHOUT",
        "ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS",
        "FOR A PARTICULAR PURPOSE. See the GNU General Public License for more",
        "details.",
        "",
        "You should have received a copy of the GNU General Public License along with",
        "this program; if not, write to the Free Software Foundation, Inc., 51",
        "Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.",
        "DB index.yaml without origins defined",
        "DB index.yaml with two origins (\"X\" and \"Y\") defined",
        "A suite YAML without origin specified",
        "A suite YAML with origin \"X\" specified",
        "A suite YAML with origin \"Y\" specified",
        "A suite YAML with origin \"Z\" specified"
    ],
    "docstrings": [
        "\"\"\"Suite origins integration tests\"\"\"",
        "\"\"\"\n    host_types:\n        normal: {}\n    host_type_regex: ^normal\n    recipesets:\n        rcs1:\n          - normal\n    arches:\n        - arch\n    trees:\n        tree:\n            template: tree.xml\n    suites:\n        - suite.yaml\n\"\"\"",
        "\"\"\"\n    origins:\n        X: X locations\n        Y: Y locations\n\"\"\"",
        "\"\"\"\n    description: Suite\n    maintainers:\n      - maint1\n    cases: []\n\n\"\"\"",
        "\"\"\"\n    origin: X\n\"\"\"",
        "\"\"\"\n    origin: Y\n\"\"\"",
        "\"\"\"\n    origin: Z\n\"\"\"",
        "\"\"\"Integration tests for suite origins\"\"\"",
        "\"\"\"Check no origins at all works\"\"\"",
        "\"\"\"Check using suite origins without origins defined fails\"\"\"",
        "\"\"\"Check not using suite origins with origins defined fails\"\"\"",
        "\"\"\"Check using one of two defined origins works\"\"\"",
        "\"\"\"Check using the other one of two defined origins works\"\"\"",
        "\"\"\"Check using unknown origin fails\"\"\""
    ],
    "functions": [
        "test_db_without_origins_and_suite_without_origin_works",
        "test_db_without_origins_and_suite_with_origin_fails",
        "test_db_with_origins_and_suite_without_origin_fails",
        "test_db_with_origins_and_suite_with_origin_x_works",
        "test_db_with_origins_and_suite_with_origin_y_works",
        "test_db_with_origins_and_suite_with_unknown_origin_fails"
    ],
    "classes": [
        "IntegrationOriginsTests"
    ]
}