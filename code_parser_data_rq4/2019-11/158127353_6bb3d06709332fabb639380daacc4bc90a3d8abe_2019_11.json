{
    "identifiers": [
        "bpy",
        "numpy",
        "np",
        "os",
        "json",
        "js",
        "copy",
        "deepcopy",
        "dc",
        "algorithms",
        "object_ops",
        "fileName",
        "algorithms",
        "get_data_path",
        "os",
        "path",
        "join",
        "data_dir",
        "fileName",
        "os",
        "path",
        "join",
        "hair_dir",
        "fn",
        "open",
        "fpath",
        "f",
        "js",
        "load",
        "f",
        "data",
        "faces",
        "bpy",
        "ops",
        "mode_set",
        "mode",
        "bpy",
        "ops",
        "mesh",
        "select_all",
        "action",
        "bpy",
        "ops",
        "mode_set",
        "mode",
        "i",
        "faces",
        "bpy",
        "context",
        "data",
        "polygons",
        "i",
        "faces",
        "bpy",
        "ops",
        "mode_set",
        "mode",
        "object_ops",
        "get_body_mesh",
        "gbm",
        "select_set",
        "state",
        "js_face_sel",
        "faces",
        "bpy",
        "ops",
        "mode_set",
        "mode",
        "bpy",
        "ops",
        "mode_set",
        "mode",
        "object_ops",
        "get_sel",
        "object_ops",
        "vg_idx_dict",
        "gs",
        "object_ops",
        "vidx_dict",
        "object_ops",
        "obj_new",
        "gs",
        "gs",
        "object_ops",
        "copy_wt",
        "viw",
        "vid",
        "bpy",
        "ops",
        "origin_set",
        "center",
        "bpy",
        "ops",
        "shade_smooth",
        "skeleton",
        "bpy",
        "data",
        "objects",
        "modifiers",
        "skeleton",
        "bpy",
        "data",
        "objects",
        "modifiers",
        "particle_system",
        "p_sys",
        "settings",
        "p_sys",
        "settings",
        "p_sys",
        "settings",
        "bpy",
        "context",
        "bpy",
        "ops",
        "particle",
        "connect_hair",
        "all"
    ],
    "literals": [
        "\"Particle_Hair\"",
        "'_hair.json'",
        "'r'",
        "'EDIT'",
        "'DESELECT'",
        "'OBJECT'",
        "'OBJECT'",
        "'EDIT'",
        "'OBJECT'",
        "'Hair'",
        "\"ManuelBastioni_Character\"",
        "\"Hair\"",
        "'ORIGIN_GEOMETRY'",
        "'MEDIAN'",
        "\"Hair\"",
        "\"armature_hair\"",
        "'ARMATURE'",
        "'head'",
        "\"Hair\"",
        "\"hair\"",
        "'PARTICLE_SYSTEM'",
        "'HAIR'",
        "'INTERPOLATED'"
    ],
    "variables": [
        "data_dir",
        "hair_dir",
        "fn",
        "fpath",
        "data",
        "select",
        "gbm",
        "gs",
        "viw",
        "vid",
        "a_mod",
        "a_mod",
        "a_mod",
        "vertex_group",
        "p_sys",
        "hair_length",
        "child_type",
        "show_instancer_for_viewport"
    ],
    "comments": [
        "MB-Lab",
        "MB-Lab fork website : https://github.com/animate1978/MB-Lab",
        "##### BEGIN GPL LICENSE BLOCK #####",
        "",
        "This program is free software; you can redistribute it and/or",
        "modify it under the terms of the GNU General Public License",
        "as published by the Free Software Foundation; either version 3",
        "of the License, or (at your option) any later version.",
        "",
        "This program is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "GNU General Public License for more details.",
        "",
        "You should have received a copy of the GNU General Public License",
        "along with this program; if not, write to the Free Software Foundation,",
        "Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.",
        "",
        "##### END GPL LICENSE BLOCK #####",
        "------------------------------------------------------------------------",
        "Functions",
        "------------------------------------------------------------------------",
        "------------------------------------------------------------------------",
        "Create the Copy Face Object",
        "Add particle hair",
        "p_sys.settings.use_render_emitter = False",
        "def execute():",
        "actv = bpy.context.view_layer.objects.active",
        "get_mode = bpy.ops.object.mode_get()",
        "skeleton = get_skeleton()",
        "skeleton.select_set(state=False)",
        "body = get_body_mesh()",
        "body.select_set(state=True)",
        "bpy.context.view_layer.objects.active = body",
        "faces = hairengine.get_hair_data(fileName)",
        "hairengine.sel_faces(faces)",
        "hairengine.add_scalp()",
        "hairengine.hair_armature_mod(skeleton)",
        "hairengine.add_hair()",
        "bpy.ops.object.mode_set(mode='OBJECT')",
        "bpy.context.view_layer.objects.active = actv",
        "try:",
        "bpy.ops.object.mode_set(mode='POSE')",
        "except:",
        "pass"
    ],
    "docstrings": [],
    "functions": [
        "get_hair_data",
        "js_face_sel",
        "sel_faces",
        "add_scalp",
        "hair_armature_mod",
        "add_hair"
    ],
    "classes": []
}