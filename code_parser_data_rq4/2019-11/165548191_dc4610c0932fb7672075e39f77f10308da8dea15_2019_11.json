{
    "identifiers": [
        "Collections",
        "Generic",
        "IO",
        "Linq",
        "Runtime",
        "InteropServices",
        "Text",
        "Microsoft",
        "Win32",
        "Microsoft",
        "Win32",
        "TaskScheduler",
        "winPEAS",
        "DllImport",
        "DllImport",
        "IntPtr",
        "hWnd",
        "StringBuilder",
        "text",
        "count",
        "StringBuilder",
        "nChars",
        "GetForegroundWindow",
        "GetWindowText",
        "handle",
        "Buff",
        "nChars",
        "Buff",
        "ToString",
        "Registry",
        "LocalMachine",
        "OpenSubKey",
        "subKeyName",
        "softwareKey",
        "GetSubKeyNames",
        "retList",
        "Add",
        "subKeyName",
        "ex",
        "WriteLine",
        "ex",
        "retList",
        "fpath",
        "f",
        "Directory",
        "GetFiles",
        "fpath",
        "results",
        "f",
        "f",
        "Join",
        "MyUtils",
        "GetPermissionsFile",
        "f",
        "Program",
        "interestingUsersGroups",
        "d",
        "Directory",
        "GetDirectories",
        "fpath",
        "results",
        "d",
        "MyUtils",
        "GecRecursivePrivs",
        "d",
        "ex",
        "WriteLine",
        "ex",
        "results",
        "GetInstalledAppsPermsPath",
        "@Path",
        "GetPathRoot",
        "Environment",
        "SystemDirectory",
        "GetInstalledAppsPermsPath",
        "@Path",
        "GetPathRoot",
        "Environment",
        "SystemDirectory",
        "results1",
        "Concat",
        "results2",
        "ToDictionary",
        "kvp",
        "Key",
        "kvp",
        "Value",
        "results1",
        "autorunLocations",
        "Add",
        "Environment",
        "ExpandEnvironmentVariables",
        "autorunLocations",
        "Add",
        "Environment",
        "ExpandEnvironmentVariables",
        "path",
        "autorunLocations",
        "filepath",
        "Directory",
        "GetFiles",
        "path",
        "SearchOption",
        "TopDirectoryOnly",
        "Path",
        "GetDirectoryName",
        "filepath",
        "results",
        "Add",
        "folder",
        "filepath",
        "Join",
        "MyUtils",
        "GetPermissionsFolder",
        "folder",
        "Program",
        "interestingUsersGroups",
        "Join",
        "MyUtils",
        "GetPermissionsFile",
        "filepath",
        "Program",
        "interestingUsersGroups",
        "results",
        "ServicesInfo",
        "GetRegistryAutoRuns",
        "GetAutoRunsFolder",
        "reg_autorus",
        "AddRange",
        "file_autorus",
        "reg_autorus",
        "EnumFolderTasks",
        "TaskFolder",
        "fld",
        "Microsoft",
        "Win32",
        "TaskScheduler",
        "task",
        "fld",
        "Tasks",
        "ActOnTask",
        "task",
        "TaskFolder",
        "sfld",
        "fld",
        "SubFolders",
        "EnumFolderTasks",
        "sfld",
        "ActOnTask",
        "Microsoft",
        "Win32",
        "TaskScheduler",
        "t",
        "t",
        "Enabled",
        "IsNullOrEmpty",
        "t",
        "Definition",
        "RegistrationInfo",
        "Author",
        "t",
        "Definition",
        "RegistrationInfo",
        "Author",
        "Contains",
        "Trigger",
        "trigger",
        "t",
        "Definition",
        "Triggers",
        "f_trigger",
        "Add",
        "Format",
        "trigger",
        "results",
        "Add",
        "t",
        "Name",
        "Environment",
        "ExpandEnvironmentVariables",
        "Format",
        "t",
        "Definition",
        "Actions",
        "Join",
        "f_trigger",
        "Join",
        "t",
        "Definition",
        "RegistrationInfo",
        "Author",
        "Join",
        "t",
        "Definition",
        "RegistrationInfo",
        "Description",
        "EnumFolderTasks",
        "TaskService",
        "Instance",
        "RootFolder",
        "ex",
        "WriteLine",
        "ex",
        "results"
    ],
    "literals": [
        "\"user32.dll\"",
        "\"user32.dll\"",
        "\"SOFTWARE\"",
        "\", \"",
        "\"Program Files\"",
        "\"Program Files (x86)\"",
        "\"*\"",
        "\"Reg\"",
        "\"\"",
        "\"Folder\"",
        "\"File\"",
        "\"isWritableReg\"",
        "\"\"",
        "\"interestingFolderRights\"",
        "\", \"",
        "\"interestingFileRights\"",
        "\", \"",
        "\"isUnquotedSpaced\"",
        "\"\"",
        "\"Microsoft\"",
        "\"{0}\"",
        "\"Name\"",
        "\"Action\"",
        "\"{0}\"",
        "\"Trigger\"",
        "\"\\n             \"",
        "\"Author\"",
        "\", \"",
        "\"Description\"",
        "\", \""
    ],
    "variables": [
        "nChars",
        "StringBuilder",
        "Buff",
        "IntPtr",
        "handle",
        "retList",
        "RegistryKey",
        "softwareKey",
        "results",
        "results1",
        "results2",
        "results",
        "autorunLocations",
        "folder",
        "reg_autorus",
        "file_autorus",
        "results",
        "f_trigger"
    ],
    "comments": [
        "https://stackoverflow.com/questions/115868/how-do-i-get-the-title-of-the-current-active-window-using-c",
        "results.Add(new Dictionary<string, string>() {\n                            { \"Reg\", \"\" },\n                            { \"Folder\", path },\n                            { \"File\", \"\" },\n                            { \"isWritableReg\", \"\"},\n                            { \"interestingFolderRights\", String.Join(\", \", MyUtils.GetPermissionsFolder(path, Program.interestingUsersGroups))},\n                            { \"interestingFileRights\", \"\"},\n                            { \"isUnquotedSpaced\", \"\" }\n                    });",
        "task.Name",
        "task.Enabled",
        "task.Definition.Actions",
        "task.Definition"
    ],
    "docstrings": [],
    "functions": [
        "IntPtr",
        "GetForegroundWindow",
        "GetWindowText",
        "GetActiveWindowTitle",
        "GetAppsRegistry",
        "GetInstalledAppsPermsPath",
        "GetInstalledAppsPerms",
        "GetAutoRunsFolder",
        "GetAutoRuns",
        "GetScheduledAppsNoMicrosoft"
    ],
    "classes": [
        "ApplicationInfo"
    ]
}