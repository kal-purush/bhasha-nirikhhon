{
    "identifiers": [
        "missingno",
        "masno",
        "pandas",
        "pd",
        "numpy",
        "np",
        "secretplacing",
        "ccd",
        "psycopg2",
        "sqlalchemy",
        "db",
        "os",
        "sqlalchemy",
        "create_engine",
        "Column",
        "Sequence",
        "PrimaryKeyConstraint",
        "ForeignKey",
        "sqlalchemy",
        "ext",
        "declarative",
        "declarative_base",
        "sqlalchemy",
        "orm",
        "sessionmaker",
        "relationship",
        "backref",
        "sqlalchemy",
        "sql",
        "ccd",
        "userdb",
        "ccd",
        "dpass",
        "ccd",
        "dbs",
        "ccd",
        "dbip",
        "ccd",
        "dbpt",
        "create_engine",
        "DB_USER",
        "DB_PASS",
        "DB_IP",
        "DB_PORT",
        "DB_NAME",
        "dbs",
        "connect",
        "db",
        "MetaData",
        "dbs",
        "declarative_base",
        "r",
        "d",
        "f",
        "os",
        "walk",
        "path",
        "file",
        "f",
        "file",
        "files",
        "append",
        "os",
        "path",
        "join",
        "file",
        "files",
        "path",
        "r",
        "d",
        "f",
        "os",
        "walk",
        "path",
        "file",
        "f",
        "file",
        "df_lst",
        "append",
        "os",
        "path",
        "join",
        "file",
        "split",
        "df_lst",
        "r",
        "d",
        "f",
        "os",
        "walk",
        "path",
        "file",
        "f",
        "file",
        "files",
        "append",
        "os",
        "path",
        "join",
        "file",
        "f",
        "files",
        "mod",
        "f",
        "split",
        "exec",
        "f",
        "split",
        "path",
        "f",
        "globals",
        "limitbosku",
        "connect_db",
        "list_file",
        "list_df",
        "f",
        "files",
        "exec",
        "f",
        "split",
        "path",
        "f",
        "limitbosku",
        "d",
        "df_lst",
        "exec",
        "d",
        "d",
        "limitbosku",
        "limitbosku",
        "d",
        "df_lst",
        "exec",
        "d",
        "d",
        "limitbosku",
        "limitbosku",
        "d",
        "df_lst",
        "exec",
        "d",
        "d",
        "limitbosku",
        "alch",
        "df_lst",
        "exec",
        "alch",
        "alch",
        "engine",
        "execute",
        "engine",
        "execute",
        "engine",
        "execute",
        "query",
        "connection",
        "execute",
        "query",
        "data",
        "fetchQuery",
        "fetchall",
        "data",
        "oh",
        "yes",
        "oh",
        "sample",
        "n",
        "yes",
        "random_state",
        "no",
        "replace",
        "limit"
    ],
    "literals": [
        "f'postgresql://{DB_USER}:{DB_PASS}@{DB_IP}:{DB_PORT}/{DB_NAME}'",
        "'dataset/'",
        "'.csv'",
        "'dataset/'",
        "'.csv'",
        "\".\"",
        "'dataset/'",
        "'models.'",
        "'.csv'",
        "\".\"",
        "\"%s = pd.read_csv('%s')\"",
        "\".\"",
        "\"%s = pd.read_csv('%s')\"",
        "\".\"",
        "\"%s = %s.sample(n=%s, random_state=1, replace=False)\"",
        "'unlimited'",
        "'full'",
        "'all'",
        "'kabeh'",
        "'semua'",
        "\"%s = %s.sample(n=%s, random_state=1, replace=False)\"",
        "\"%s = %s.sample(n=%s, random_state=1, replace=False)\"",
        "\"%s.to_sql('%s', engine, if_exists='replace', index=False)\"",
        "'ALTER TABLE public.application_train ADD CONSTRAINT application_train_pk PRIMARY KEY (\"SK_ID_CURR\");'",
        "'ALTER TABLE public.bureau ADD CONSTRAINT bureau_pk PRIMARY KEY (\"SK_ID_BUREAU\")'",
        "'ALTER TABLE public.previous_application ADD CONSTRAINT previous_application_pk PRIMARY KEY (\"SK_ID_PREV\")'",
        "f\"SELECT * FROM {query}\""
    ],
    "variables": [
        "DB_USER",
        "DB_PASS",
        "DB_NAME",
        "DB_IP",
        "DB_PORT",
        "dbs",
        "connection",
        "metadata",
        "Base",
        "path",
        "files",
        "path",
        "df_lst",
        "path",
        "mod",
        "files",
        "engine",
        "files",
        "path",
        "df_lst",
        "limitbosku",
        "limitbosku",
        "limitbosku",
        "fetchQuery",
        "no",
        "limit"
    ],
    "comments": [
        "load environment variables",
        "_load_db_vars()",
        "create db create_engine",
        "r=root, d=directories, f = files",
        "r=root, d=directories, f = files",
        "contructing dataset using pd.dataframe from dataset folder (its only read csv)",
        "r=root, d=directories, f = files",
        "created initied database, its return value integer to limit the database upload each database to posgresql",
        "reading the datasets",
        "limiting the datasets for uploading to postgres",
        "limitbosku = 10",
        "Engineer Alchemist GOOOOO!!!",
        "SET PK SK_ID_CURR on app_loan, SK_ID_PREV on prev_app, SK_ID_BUREAU on bureau",
        "limiting the dataset, oh is refer to dataset, yes is the limitter use number only and dont input yes > len(dataset)"
    ],
    "docstrings": [],
    "functions": [
        "connect_db",
        "list_file",
        "list_df",
        "construct_ds",
        "construct_dbs",
        "fetchByQuery",
        "limit_ds"
    ],
    "classes": []
}