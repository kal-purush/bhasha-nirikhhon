{
    "identifiers": [
        "datetime",
        "datetime",
        "timedelta",
        "airflow",
        "DAG",
        "airflow",
        "models",
        "Variable",
        "airflow",
        "hooks",
        "base_hook",
        "BaseHook",
        "airflow",
        "operators",
        "bash_operator",
        "BashOperator",
        "airflow",
        "operators",
        "python_operator",
        "PythonOperator",
        "cob_datapipeline",
        "task_slackpost",
        "task_web_content_slackpostonsuccess",
        "cob_datapipeline",
        "task_sc_get_num_docs",
        "task_solrgetnumdocs",
        "tulflow",
        "tasks",
        "Variable",
        "get",
        "Variable",
        "get",
        "Variable",
        "get",
        "BaseHook",
        "get_connection",
        "Variable",
        "get",
        "deserialize_json",
        "WEB_CONTENT_SOLR_CONFIG",
        "get",
        "CONFIGSET",
        "WEB_CONTENT_SOLR_CONFIG",
        "get",
        "Variable",
        "get",
        "Variable",
        "get",
        "Variable",
        "get",
        "Variable",
        "get",
        "datetime",
        "tasks",
        "execute_slackpostonfail",
        "timedelta",
        "minutes",
        "DAG",
        "default_args",
        "DEFAULT_ARGS",
        "catchup",
        "max_active_runs",
        "schedule_interval",
        "SCHEDULE_INTERVAL",
        "PythonOperator",
        "task_id",
        "python_callable",
        "datetime",
        "now",
        "strftime",
        "op_args",
        "dag",
        "DAG",
        "task_solrgetnumdocs",
        "DAG",
        "CONFIGSET",
        "conn_id",
        "SOLR_CONN",
        "conn_id",
        "tasks",
        "create_sc_collection",
        "DAG",
        "SOLR_CONN",
        "conn_id",
        "CONFIGSET",
        "REPLICATION_FACTOR",
        "CONFIGSET",
        "BashOperator",
        "task_id",
        "bash_command",
        "AIRFLOW_HOME",
        "env",
        "AIRFLOW_USER_HOME",
        "SOLR_CONN",
        "password",
        "SOLR_CONN",
        "login",
        "SOLR_CONN",
        "host",
        "SOLR_CONN",
        "port",
        "CONFIGSET",
        "WEB_CONTENT_BASE_URL",
        "WEB_CONTENT_BASIC_AUTH_PASSWORD",
        "WEB_CONTENT_BASIC_AUTH_USER",
        "WEB_CONTENT_BRANCH",
        "dag",
        "DAG",
        "task_solrgetnumdocs",
        "DAG",
        "CONFIGSET",
        "conn_id",
        "SOLR_CONN",
        "conn_id",
        "tasks",
        "swap_sc_alias",
        "DAG",
        "SOLR_CONN",
        "conn_id",
        "CONFIGSET",
        "ALIAS",
        "PythonOperator",
        "task_id",
        "python_callable",
        "task_web_content_slackpostonsuccess",
        "provide_context",
        "dag",
        "DAG",
        "CREATE_COLLECTION",
        "set_upstream",
        "SET_COLLECTION_NAME",
        "CREATE_COLLECTION",
        "set_upstream",
        "GET_NUM_SOLR_DOCS_PRE",
        "INDEX_WEB_CONTENT",
        "set_upstream",
        "CREATE_COLLECTION",
        "GET_NUM_SOLR_DOCS_POST",
        "set_upstream",
        "INDEX_WEB_CONTENT",
        "SOLR_ALIAS_SWAP",
        "set_upstream",
        "GET_NUM_SOLR_DOCS_POST",
        "POST_SLACK",
        "set_upstream",
        "SOLR_ALIAS_SWAP"
    ],
    "literals": [
        "\"AIRFLOW_HOME\"",
        "\"AIRFLOW_USER_HOME\"",
        "\"WEB_CONTENT_SCHEDULE_INTERVAL\"",
        "\"SOLRCLOUD\"",
        "\"WEB_CONTENT_SOLR_CONFIG\"",
        "\"configset\"",
        "\"-prod\"",
        "\"replication_factor\"",
        "\"WEB_CONTENT_BRANCH\"",
        "\"WEB_CONTENT_BASIC_AUTH_USER\"",
        "\"WEB_CONTENT_BASIC_AUTH_PASSWORD\"",
        "\"WEB_CONTENT_BASE_URL\"",
        "'owner'",
        "'airflow'",
        "'depends_on_past'",
        "'start_date'",
        "'email_on_failure'",
        "'email_on_retry'",
        "'on_failure_callback'",
        "'retries'",
        "'retry_delay'",
        "'sc_web_content_reindex'",
        "'set_collection_name'",
        "\"%Y-%m-%d_%H-%M-%S\"",
        "'get_num_solr_docs_pre'",
        "\"-{{ ti.xcom_pull(task_ids='set_collection_name') }}\"",
        "'index_web_content'",
        "\"/dags/cob_datapipeline/scripts/ingest_web_content.sh \"",
        "\"HOME\"",
        "\"SOLR_AUTH_PASSWORD\"",
        "\"SOLR_AUTH_USER\"",
        "\"SOLR_WEB_URL\"",
        "\":\"",
        "\"/solr/\"",
        "\"-{{ ti.xcom_pull(task_ids='set_collection_name') }}\"",
        "\"WEB_CONTENT_BASE_URL\"",
        "\"WEB_CONTENT_BASIC_AUTH_PASSWORD\"",
        "\"WEB_CONTENT_BASIC_AUTH_USER\"",
        "\"WEB_CONTENT_BRANCH\"",
        "\"-{{ ti.xcom_pull(task_ids='set_collection_name') }}\"",
        "'get_num_solr_docs_post'",
        "\"-{{ ti.xcom_pull(task_ids='set_collection_name') }}\"",
        "'slack_post_succ'"
    ],
    "variables": [
        "AIRFLOW_HOME",
        "AIRFLOW_USER_HOME",
        "SCHEDULE_INTERVAL",
        "SOLR_CONN",
        "WEB_CONTENT_SOLR_CONFIG",
        "CONFIGSET",
        "ALIAS",
        "REPLICATION_FACTOR",
        "WEB_CONTENT_BRANCH",
        "WEB_CONTENT_BASIC_AUTH_USER",
        "WEB_CONTENT_BASIC_AUTH_PASSWORD",
        "WEB_CONTENT_BASE_URL",
        "DEFAULT_ARGS",
        "DAG",
        "SET_COLLECTION_NAME",
        "GET_NUM_SOLR_DOCS_PRE",
        "CREATE_COLLECTION",
        "INDEX_WEB_CONTENT",
        "GET_NUM_SOLR_DOCS_POST",
        "SOLR_ALIAS_SWAP",
        "POST_SLACK"
    ],
    "comments": [
        "Airflow DAG to index Web Content into SolrCloud.",
        "Get Solr URL & Collection Name for indexing info; error out if not entered",
        "{\"configset\": \"tul_cob-web-2\", \"replication_factor\": 2}",
        "Manifold website creds",
        "CREATE DAG",
        "SET UP TASK DEPENDENCIES"
    ],
    "docstrings": [
        "\"\"\"\nINIT SYSTEMWIDE VARIABLES\n\ncheck for existence of systemwide variables shared across tasks that can be\ninitialized here if not found (i.e. if this is a new installation) & defaults exist\n\"\"\"",
        "\"\"\"\nCREATE TASKS\n\nTasks with all logic contained in a single operator can be declared here.\nTasks with custom logic are relegated to individual Python files.\n\"\"\""
    ],
    "functions": [],
    "classes": []
}