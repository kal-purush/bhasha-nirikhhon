{
    "identifiers": [
        "nock",
        "path",
        "GitHub",
        "GitCreateCommitResponse",
        "disableNetConnect",
        "testEnv",
        "getContext",
        "getApiFixture",
        "createResponse",
        "spyOnStdout",
        "stdoutCalledWith",
        "ApiHelper",
        "Logger",
        "path",
        "__dirname",
        "getContext",
        "GitHub",
        "createResponse",
        "describe",
        "disableNetConnect",
        "nock",
        "testEnv",
        "beforeEach",
        "Logger",
        "ApiHelper",
        "Logger",
        "describe",
        "it",
        "spyOnStdout",
        "nock",
        "encodeURIComponent",
        "body",
        "expect",
        "body",
        "body",
        "helper",
        "createCommitResponse",
        "octokit",
        "context",
        "stdoutCalledWith",
        "mockStdout",
        "it",
        "spyOnStdout",
        "nock",
        "encodeURIComponent",
        "body",
        "expect",
        "body",
        "body",
        "helper",
        "createCommitResponse",
        "octokit",
        "context",
        "stdoutCalledWith",
        "mockStdout",
        "it",
        "nock",
        "encodeURIComponent",
        "body",
        "expect",
        "body",
        "body",
        "expect",
        "helper",
        "createCommitResponse",
        "octokit",
        "context",
        "describe",
        "it",
        "jest",
        "jest",
        "spyOnStdout",
        "nock",
        "getApiFixture",
        "rootDir",
        "getApiFixture",
        "rootDir",
        "getApiFixture",
        "rootDir",
        "getApiFixture",
        "rootDir",
        "encodeURIComponent",
        "fn1",
        "getApiFixture",
        "rootDir",
        "encodeURIComponent",
        "fn2",
        "expect",
        "helper",
        "rootDir",
        "octokit",
        "context",
        "expect",
        "fn1",
        "expect",
        "fn2",
        "stdoutCalledWith",
        "mockStdout",
        "describe",
        "it",
        "jest",
        "jest",
        "nock",
        "fn1",
        "getApiFixture",
        "rootDir",
        "fn2",
        "getApiFixture",
        "rootDir",
        "helper",
        "octokit",
        "context",
        "expect",
        "fn1",
        "expect",
        "fn2",
        "expect",
        "user",
        "expect",
        "user",
        "expect",
        "user",
        "expect",
        "user"
    ],
    "literals": [
        "'nock'",
        "'path'",
        "'@actions/github'",
        "'@octokit/rest'",
        "'@technote-space/github-action-test-helper'",
        "'../src'",
        "'fixtures'",
        "'refs/heads/test'",
        "'hello'",
        "'world'",
        "'7638417db6d59f3c431d3e1f261cc637155684cd'",
        "'User'",
        "'octocat'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'node_id'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'ApiHelper with params'",
        "'test-branch'",
        "'test-sender'",
        "'test-ref'",
        "'updateRef'",
        "'should output warning 1'",
        "'https://api.github.com'",
        "'/repos/hello/world/git/refs/'",
        "'test-ref'",
        "'sha'",
        "'message'",
        "'Required status check \"Test\" is expected.'",
        "'test-ref'",
        "'::warning::Branch is protected.'",
        "'should output warning 2'",
        "'https://api.github.com'",
        "'/repos/hello/world/git/refs/'",
        "'test-ref'",
        "'sha'",
        "'message'",
        "'5 of 5 required status checks are expected.'",
        "'test-ref'",
        "'::warning::Branch is protected.'",
        "'should throw error'",
        "'https://api.github.com'",
        "'/repos/hello/world/git/refs/'",
        "'test-ref'",
        "'sha'",
        "'message'",
        "'Not Found'",
        "'test-ref'",
        "'Not Found'",
        "'commit'",
        "'should commit without update ref'",
        "'https://api.github.com'",
        "'/repos/hello/world/git/blobs'",
        "'repos.git.blobs'",
        "'/repos/hello/world/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd'",
        "'repos.git.commits.get'",
        "'/repos/hello/world/git/trees'",
        "'repos.git.trees'",
        "'/repos/hello/world/git/commits'",
        "'repos.git.commits'",
        "'/repos/hello/world/git/refs/'",
        "'heads/test'",
        "'repos.git.refs.update'",
        "'/repos/hello/world/git/refs/'",
        "'test-ref'",
        "'message'",
        "'Required status check \"Test\" is expected.'",
        "'test commit message'",
        "'build1.json'",
        "'build2.json'",
        "'::group::Creating blobs...'",
        "'::endgroup::'",
        "'::group::Creating tree...'",
        "'::endgroup::'",
        "'::group::Creating commit... [cd8274d15fa3ae2ab983129fb037999f264ba9a7]'",
        "'::endgroup::'",
        "'::group::Updating ref... [test-ref] [7638417db6d59f3c431d3e1f261cc637155684cd]'",
        "'::warning::Branch is protected.'",
        "'::endgroup::'",
        "'getUser'",
        "'should get user'",
        "'https://api.github.com'",
        "'/users/octocat'",
        "'users.get'",
        "'/users/test-sender'",
        "'users.get'",
        "'octocat'",
        "'octocat@github.com'",
        "'monalisa octocat'"
    ],
    "variables": [
        "rootDir",
        "context",
        "octokit",
        "createCommitResponse",
        "helper",
        "mockStdout",
        "mockStdout",
        "fn1",
        "fn2",
        "mockStdout",
        "fn1",
        "fn2",
        "user"
    ],
    "comments": [
        "eslint-disable no-magic-numbers"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}