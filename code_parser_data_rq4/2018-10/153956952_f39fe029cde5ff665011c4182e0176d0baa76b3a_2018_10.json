{
    "identifiers": [
        "pandas",
        "pd",
        "pd",
        "read_csv",
        "pd",
        "DataFrame",
        "columns",
        "cols",
        "df",
        "df",
        "framesLength",
        "df",
        "df",
        "framesLength",
        "df",
        "gameID",
        "unique",
        "gameID",
        "matches_list",
        "df",
        "df",
        "gameID",
        "gameID",
        "game_df",
        "framesLength",
        "mean",
        "bins",
        "i",
        "bins",
        "i",
        "frames_per_bin",
        "i",
        "frames_per_bin",
        "game_df",
        "iloc",
        "offset",
        "read_until",
        "drop",
        "axis",
        "bin_df",
        "groupby",
        "mean",
        "i",
        "new_df",
        "reset_index",
        "level",
        "inplace",
        "output_df",
        "append",
        "new_df",
        "output_df",
        "to_csv"
    ],
    "literals": [
        "\"../data/GoldDiffOTBMwithFrameLen.csv\"",
        "'gameID'",
        "'winnerTotal'",
        "'loserTotal'",
        "'GoldDifference'",
        "'bin'",
        "\"-- removing outliers --\"",
        "'framesLength'",
        "'timeStamp'",
        "'columns'",
        "'gameID'",
        "'bin'",
        "\"../data/GoldDiffBinned.csv\""
    ],
    "variables": [
        "bins",
        "df",
        "cols",
        "output_df",
        "df",
        "df",
        "matches_list",
        "game_df",
        "frames_per_bin",
        "offset",
        "read_until",
        "bin_df",
        "new_df",
        "new_df",
        "output_df"
    ],
    "comments": [
        "number of bins",
        "read in the other csv file",
        "the columns we want",
        "the new dataframe",
        "get rid of the outliers",
        "determined after looking at bar chart of values",
        "get each match id once",
        "go throught matches one by one",
        "get a dataframe for just that match",
        "calculate the number of frames that will go into every bin",
        "then get the data for each bin",
        "offset is the number of the frame to start from",
        "calculate the number of frames to stop at",
        "get those frames and drop the unneeded columns",
        "group by the match id and get the average for the other columns",
        "assign a bin label",
        "it thinks the match id is the index so undo that",
        "add it to our new dataframe that we'll print out",
        "write the data our to a CSV file"
    ],
    "docstrings": [
        "\"\"\"\nbins gold difference data\n\n\"\"\""
    ],
    "functions": [],
    "classes": []
}