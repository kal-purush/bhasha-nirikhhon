{
    "identifiers": [
        "os",
        "pandas",
        "pd",
        "numpy",
        "np",
        "keras",
        "models",
        "model_from_json",
        "load_model",
        "keras",
        "metrics",
        "optimizers",
        "functions",
        "utils",
        "numpy",
        "random",
        "seed",
        "seed",
        "randomState",
        "data_dir",
        "gene_id",
        "percent_low",
        "percent_high",
        "os",
        "path",
        "join",
        "data_dir",
        "os",
        "path",
        "join",
        "data_dir",
        "os",
        "path",
        "join",
        "data_dir",
        "os",
        "path",
        "join",
        "data_dir",
        "os",
        "path",
        "join",
        "data_dir",
        "pd",
        "read_table",
        "target_gene_file",
        "header",
        "index_col",
        "pd",
        "read_table",
        "non_target_gene_file",
        "header",
        "index_col",
        "target_gene_data",
        "sort_values",
        "by",
        "gene_id",
        "utils",
        "get_gene_expression_above_percent",
        "target_gene_sorted",
        "gene_id",
        "percent_low",
        "percent_high",
        "non_target_gene_data",
        "loc",
        "low_ids",
        "non_target_gene_data",
        "loc",
        "high_ids",
        "format",
        "low_exp",
        "shape",
        "format",
        "high_exp",
        "shape",
        "low_exp",
        "mean",
        "axis",
        "high_exp",
        "mean",
        "axis",
        "highest_mean",
        "lowest_mean",
        "pd",
        "Series",
        "to_frame",
        "offset_gene_space",
        "T",
        "low_exp",
        "to_csv",
        "lowest_file",
        "sep",
        "float_format",
        "high_exp",
        "to_csv",
        "highest_file",
        "sep",
        "float_format",
        "offset_gene_space_df",
        "to_csv",
        "offset_file",
        "sep",
        "float_format",
        "data_dir",
        "model_dir",
        "encoded_dir",
        "gene_id",
        "percent_low",
        "percent_high",
        "os",
        "path",
        "join",
        "data_dir",
        "os",
        "path",
        "join",
        "data_dir",
        "os",
        "path",
        "join",
        "model_dir",
        "os",
        "path",
        "join",
        "model_dir",
        "os",
        "path",
        "join",
        "encoded_dir",
        "os",
        "path",
        "join",
        "encoded_dir",
        "os",
        "path",
        "join",
        "encoded_dir",
        "pd",
        "read_table",
        "target_gene_file",
        "header",
        "index_col",
        "pd",
        "read_table",
        "non_target_gene_file",
        "header",
        "index_col",
        "load_model",
        "model_file",
        "loaded_model",
        "load_weights",
        "weights_file",
        "target_gene_data",
        "sort_values",
        "by",
        "gene_id",
        "utils",
        "get_gene_expression_above_percent",
        "target_gene_sorted",
        "gene_id",
        "percent_low",
        "percent_high",
        "non_target_gene_data",
        "loc",
        "low_ids",
        "non_target_gene_data",
        "loc",
        "high_ids",
        "format",
        "low_exp",
        "shape",
        "format",
        "high_exp",
        "shape",
        "loaded_model",
        "predict_on_batch",
        "low_exp",
        "pd",
        "DataFrame",
        "low_exp_encoded",
        "index",
        "low_exp",
        "index",
        "loaded_model",
        "predict_on_batch",
        "high_exp",
        "pd",
        "DataFrame",
        "high_exp_encoded",
        "index",
        "high_exp",
        "index",
        "low_exp_encoded_df",
        "mean",
        "axis",
        "high_exp_encoded_df",
        "mean",
        "axis",
        "highest_mean",
        "lowest_mean",
        "pd",
        "Series",
        "to_frame",
        "offset_latent_space",
        "T",
        "low_exp_encoded_df",
        "to_csv",
        "lowest_file",
        "sep",
        "float_format",
        "high_exp_encoded_df",
        "to_csv",
        "highest_file",
        "sep",
        "float_format",
        "offset_latent_space_df",
        "to_csv",
        "offset_file",
        "sep",
        "float_format"
    ],
    "literals": [
        "\"PA1673.txt\"",
        "\"train_model_input.txt.xz\"",
        "\"offset_gene_space.txt\"",
        "\"lowest.txt\"",
        "\"highest.txt\"",
        "'Number of genes in low expression group is {}'",
        "'Number of gene in high expression group is {}'",
        "'\\t'",
        "\"%.5g\"",
        "'\\t'",
        "\"%.5g\"",
        "'\\t'",
        "\"%.5g\"",
        "\"PA1673.txt\"",
        "\"train_model_input.txt.xz\"",
        "\"tybalt_2layer_10latent_encoder_model.h5\"",
        "\"tybalt_2layer_10latent_encoder_weights.h5\"",
        "\"offset_latent_space.txt\"",
        "\"lowest_encoded.txt\"",
        "\"highest_encoded.txt\"",
        "'Number of genes in low expression group is {}'",
        "'Number of gene in high expression group is {}'",
        "'\\t'",
        "\"%.5g\"",
        "'\\t'",
        "\"%.5g\"",
        "'\\t'",
        "\"%.5g\""
    ],
    "variables": [
        "randomState",
        "target_gene_file",
        "non_target_gene_file",
        "offset_file",
        "lowest_file",
        "highest_file",
        "target_gene_data",
        "non_target_gene_data",
        "target_gene_sorted",
        "low_ids",
        "high_ids",
        "low_exp",
        "high_exp",
        "lowest_mean",
        "highest_mean",
        "offset_gene_space",
        "offset_gene_space_df",
        "target_gene_file",
        "non_target_gene_file",
        "model_file",
        "weights_file",
        "offset_file",
        "lowest_file",
        "highest_file",
        "target_gene_data",
        "non_target_gene_data",
        "loaded_model",
        "target_gene_sorted",
        "low_ids",
        "high_ids",
        "low_exp",
        "high_exp",
        "low_exp_encoded",
        "low_exp_encoded_df",
        "high_exp_encoded",
        "high_exp_encoded_df",
        "lowest_mean",
        "highest_mean",
        "offset_latent_space",
        "offset_latent_space_df"
    ],
    "comments": [
        "------------------------------------------------------------------------------------------------------------------------------",
        "By Alexandra Lee",
        "(updated October 2018)",
        "",
        "Define offset vectors",
        "An offset vector represents the difference in gene expression profiles between two states (ex. two different conditions like # disease vs normal)",
        "",
        "-------------------------------------------------------------------------------------------------------------------------------",
        "Load arguments",
        "Output files",
        "Read in data",
        "Sort target gene data by expression (lowest --> highest)",
        "Collect the extreme gene expressions",
        "Average gene expression across samples in each extreme group",
        "Generate offset using average gene expression in original dataset",
        "output lowest and highest expressing samples",
        "ouput gene space offset vector",
        "Load arguments",
        "Output files",
        "Read in data",
        "read in saved models",
        "load weights into new model",
        "Sort target gene data by expression (lowest --> highest)",
        "Collect the extreme gene expressions",
        "Use trained model to encode expression data into SAME latent space",
        "Average gene expression across samples in each extreme group",
        "Generate offset using average gene expression in original dataset",
        "output lowest and highest expressing samples",
        "ouput gene space offset vector"
    ],
    "docstrings": [
        "\"\"\"\n    gene_space_offset(data_dir: string, gene_id: string):\n\n    input: \n        data_dir: directory containing the raw gene expression data for all genes including the target gene (see\n                    gene_id definition).\n        \n        gene_id: gene you are using as the \"phenotype\" to sort samples by \n        \n                 This gene is referred to as \"target_gene\" in comments below.\n                 In \"interpolate_in_gene_space.py\", after we sort samples based on the expression level of the\n                 target gene, we want to predict the expression profile of the OTHER genes at different levels\n                 of target gene expression.\n        \n        percent_low: integer between 0 and 1\n    \n        percent_high: integer between 0 and 1\n        \n    computation:\n        offset_vector = average(gene expression of samples that have the highest 5% of target gene expression) -  \n          average(gene expression of samples that have the lowest 5% of target gene expression) \n    \n    output:\n     offset vector (1 x 5548 genes)     \n     Note: offset vector does not include the target gene \n    \n    \"\"\"",
        "\"\"\"\n    latent_space_offset(data_dir: string, model_dir: string, encoded_dir: string, gene_id: string):\n\n    input: \n        data_dir: directory containing the raw gene expression data for all genes including the target gene (see\n                    gene_id definition).\n        model_dir: directory containing the learned vae models\n        \n        encoded_dir: directory to use to output offset vector to\n        \n        gene_id: gene you are using as the \"phenotype\" to sort samples by \n        \n                 This gene is referred to as \"target_gene\" in comments below.\n                 In \"interpolate_in_latent_space.py\", after we sort samples based on the expression level of the\n                 target gene, we want to predict the expression profile of the OTHER genes at different levels\n                 of target gene expression.\n        \n        percent_low: integer between 0 and 1\n    \n        percent_high: integer between 0 and 1\n    \n    computation:\n        offset_vector = average(encoded gene expression of samples that have the highest 5% of target gene expression) -  \n          average(encoded gene expression of samples that have the lowest 5% of target gene expression) \n    \n    output:\n        encoded offset vector (1 x number of latent space features)     \n        Note: offset vector does not include the target gene \n     \n    \"\"\""
    ],
    "functions": [
        "gene_space_offset",
        "latent_space_offset"
    ],
    "classes": []
}