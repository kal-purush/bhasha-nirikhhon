{
    "identifiers": [
        "warnings",
        "warnings",
        "filterwarnings",
        "category",
        "UserWarning",
        "IPython",
        "get_ipython",
        "get_ipython",
        "run_line_magic",
        "matplotlib",
        "pyplot",
        "pl",
        "numpy",
        "np",
        "sklearn",
        "learning_curve",
        "curves",
        "sklearn",
        "tree",
        "DecisionTreeRegressor",
        "sklearn",
        "cross_validation",
        "ShuffleSplit",
        "train_test_split",
        "X",
        "y",
        "ShuffleSplit",
        "X",
        "shape",
        "n_iter",
        "test_size",
        "random_state",
        "np",
        "rint",
        "np",
        "linspace",
        "X",
        "shape",
        "astype",
        "pl",
        "figure",
        "figsize",
        "k",
        "depth",
        "DecisionTreeRegressor",
        "max_depth",
        "depth",
        "curves",
        "learning_curve",
        "regressor",
        "X",
        "y",
        "cv",
        "cv",
        "train_sizes",
        "train_sizes",
        "scoring",
        "np",
        "std",
        "train_scores",
        "axis",
        "np",
        "mean",
        "train_scores",
        "axis",
        "np",
        "std",
        "test_scores",
        "axis",
        "np",
        "mean",
        "test_scores",
        "axis",
        "fig",
        "add_subplot",
        "k",
        "ax",
        "plot",
        "sizes",
        "train_mean",
        "color",
        "label",
        "ax",
        "plot",
        "sizes",
        "test_mean",
        "color",
        "label",
        "ax",
        "fill_between",
        "sizes",
        "train_mean",
        "train_std",
        "train_mean",
        "train_std",
        "alpha",
        "color",
        "ax",
        "fill_between",
        "sizes",
        "test_mean",
        "test_std",
        "test_mean",
        "test_std",
        "alpha",
        "color",
        "ax",
        "set_title",
        "depth",
        "ax",
        "set_xlabel",
        "ax",
        "set_ylabel",
        "ax",
        "set_xlim",
        "X",
        "shape",
        "ax",
        "set_ylim",
        "ax",
        "legend",
        "bbox_to_anchor",
        "loc",
        "borderaxespad",
        "fig",
        "suptitle",
        "fontsize",
        "y",
        "fig",
        "tight_layout",
        "fig",
        "show",
        "X",
        "y",
        "ShuffleSplit",
        "X",
        "shape",
        "n_iter",
        "test_size",
        "random_state",
        "np",
        "arange",
        "curves",
        "validation_curve",
        "DecisionTreeRegressor",
        "X",
        "y",
        "param_name",
        "param_range",
        "max_depth",
        "cv",
        "cv",
        "scoring",
        "np",
        "mean",
        "train_scores",
        "axis",
        "np",
        "std",
        "train_scores",
        "axis",
        "np",
        "mean",
        "test_scores",
        "axis",
        "np",
        "std",
        "test_scores",
        "axis",
        "pl",
        "figure",
        "figsize",
        "pl",
        "title",
        "pl",
        "plot",
        "max_depth",
        "train_mean",
        "color",
        "label",
        "pl",
        "plot",
        "max_depth",
        "test_mean",
        "color",
        "label",
        "pl",
        "fill_between",
        "max_depth",
        "train_mean",
        "train_std",
        "train_mean",
        "train_std",
        "alpha",
        "color",
        "pl",
        "fill_between",
        "max_depth",
        "test_mean",
        "test_std",
        "test_mean",
        "test_std",
        "alpha",
        "color",
        "pl",
        "legend",
        "loc",
        "pl",
        "xlabel",
        "pl",
        "ylabel",
        "pl",
        "ylim",
        "pl",
        "show",
        "X",
        "y",
        "fitter",
        "data",
        "k",
        "train_test_split",
        "X",
        "y",
        "test_size",
        "random_state",
        "k",
        "fitter",
        "X_train",
        "y_train",
        "reg",
        "predict",
        "data",
        "prices",
        "append",
        "pred",
        "format",
        "k",
        "pred",
        "format",
        "max",
        "prices",
        "min",
        "prices"
    ],
    "literals": [
        "\"ignore\"",
        "\"matplotlib\"",
        "'matplotlib'",
        "'inline'",
        "'r2'",
        "'o-'",
        "'r'",
        "'Training Score'",
        "'o-'",
        "'g'",
        "'Testing Score'",
        "'r'",
        "'g'",
        "'max_depth = %s'",
        "'Number of Training Points'",
        "'Score'",
        "'lower left'",
        "'Decision Tree Regressor Learning Performances'",
        "\"max_depth\"",
        "'r2'",
        "'Decision Tree Regressor Complexity Performance'",
        "'o-'",
        "'r'",
        "'Training Score'",
        "'o-'",
        "'g'",
        "'Validation Score'",
        "'r'",
        "'g'",
        "'lower right'",
        "'Maximum Depth'",
        "'Score'",
        "\"Trial {}: ${:,.2f}\"",
        "\"\\nRange in prices: ${:,.2f}\""
    ],
    "variables": [
        "cv",
        "train_sizes",
        "fig",
        "regressor",
        "sizes",
        "train_scores",
        "test_scores",
        "train_std",
        "train_mean",
        "test_std",
        "test_mean",
        "ax",
        "cv",
        "max_depth",
        "train_scores",
        "test_scores",
        "train_mean",
        "train_std",
        "test_mean",
        "test_std",
        "prices",
        "X_train",
        "X_test",
        "y_train",
        "y_test",
        "reg",
        "pred"
    ],
    "comments": [
        "",
        "Suppress matplotlib user warnings",
        "Necessary for newer version of matplotlib",
        "",
        "Display inline matplotlib plots with IPython",
        "",
        "Create 10 cross-validation sets for training and testing",
        "Generate the training set sizes increasing by 50",
        "Create the figure window",
        "Create three different models based on max_depth",
        "Create a Decision tree regressor at max_depth = depth",
        "Calculate the training and testing scores",
        "Find the mean and standard deviation for smoothing",
        "Subplot the learning curve",
        "Labels",
        "Visual aesthetics",
        "Create 10 cross-validation sets for training and testing",
        "Vary the max_depth parameter from 1 to 10",
        "Calculate the training and testing scores",
        "Find the mean and standard deviation for smoothing",
        "Plot the validation curve",
        "Visual aesthetics",
        "Store the predicted prices",
        "Split the data",
        "Fit the data",
        "Make a prediction",
        "Result",
        "Display price range"
    ],
    "docstrings": [
        "\"\"\" Calculates the performance of several models with varying sizes of training data.\n        The learning and testing scores for each model are then plotted. \"\"\"",
        "\"\"\" Calculates the performance of the model as model complexity increases.\n        The learning and testing errors rates are then plotted. \"\"\"",
        "\"\"\" Performs trials of fitting and predicting data. \"\"\""
    ],
    "functions": [
        "ModelLearning",
        "ModelComplexity",
        "PredictTrials"
    ],
    "classes": []
}