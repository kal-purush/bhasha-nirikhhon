{
    "identifiers": [
        "os",
        "template",
        "outtype",
        "annotation_classes",
        "template",
        "template",
        "ValueError",
        "template",
        "outtype",
        "annotation_classes",
        "seqinfo",
        "create_key",
        "create_key",
        "create_key",
        "create_key",
        "create_key",
        "create_key",
        "create_key",
        "t1",
        "t2",
        "rsbold",
        "loi1",
        "loi2",
        "fmap_rsbold",
        "fmap_loi",
        "idx",
        "s",
        "seqinfo",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "im_type",
        "prot_name",
        "info",
        "t1",
        "append",
        "ser_no",
        "prot_name",
        "info",
        "t2",
        "append",
        "ser_no",
        "prot_name",
        "nt",
        "info",
        "rsbold",
        "append",
        "ser_no",
        "prot_name",
        "nt",
        "info",
        "loi1",
        "append",
        "ser_no",
        "prot_name",
        "nt",
        "info",
        "loi2",
        "append",
        "ser_no",
        "prot_name",
        "mag_phs",
        "info",
        "fmap_rsbold",
        "append",
        "ser_no",
        "info",
        "fmap_rsbold",
        "append",
        "ser_no",
        "prot_name",
        "mag_phs",
        "info",
        "fmap_loi",
        "append",
        "ser_no",
        "info",
        "fmap_loi",
        "append",
        "ser_no",
        "info"
    ],
    "literals": [
        "'nii.gz'",
        "'Template must be a valid format string'",
        "'anat/sub-{subject}_run-{item:02d}_T1w'",
        "'anat/sub-{subject}_run-{item:02d}_T2w'",
        "'func/sub-{subject}_task-rest_run-{item:02d}_bold'",
        "'func/sub-{subject}_task-LOI1_bold'",
        "'func/sub-{subject}_task-LOI2_bold'",
        "'fmap/sub-{subject}_acq-rest_{purpose}'",
        "'fmap/sub-{subject}_acq-LOI_{purpose}'",
        "'T1'",
        "'item'",
        "'T2'",
        "'item'",
        "'rsBOLD'",
        "'item'",
        "'LOI_1'",
        "'LOI_2'",
        "'Fieldmap_rsBOLD'",
        "'M'",
        "'item'",
        "'purpose'",
        "'fmapmag'",
        "'item'",
        "'purpose'",
        "'fmapphs'",
        "'Fieldmap_LOI'",
        "'M'",
        "'item'",
        "'purpose'",
        "'fmapmag'",
        "'item'",
        "'purpose'",
        "'fmapphs'"
    ],
    "variables": [
        "t1",
        "t2",
        "rsbold",
        "loi1",
        "loi2",
        "fmap_rsbold",
        "fmap_loi",
        "info",
        "nx",
        "ny",
        "nz",
        "nt",
        "ser_no",
        "prot_name",
        "im_type",
        "mag_phs"
    ],
    "comments": [
        "Optional full seqinfo output",
        "print(seqinfo)",
        "Optional DICOM subdirectory creation",
        "and_dicom = ('dicom', 'nii.gz')",
        "eg t1 = create_key('{session}/anat/sub-{subject}_T1w', outtype=and_dicom)",
        "Init returned info structure",
        "Extract some common fields from the seqinfo record",
        "Structurals",
        "fMRI",
        "Fieldmaps"
    ],
    "docstrings": [
        "\"\"\"\nCaltech-specific DICOM to BIDS conversion heuristic\n\nAUTHOR: Mike Tyszka\nPLACE: Caltech\nDATES: 2017-04-05 JMT Adapted from the cmrr_bids.py heuristic provided by heudiconv package \n\"\"\"",
        "\"\"\"\n    Heuristic evaluator for determining which runs belong where\n    allowed template fields - follow python string module: \n    \n    item: index within category \n    subject: participant id \n    seqitem: run number during scanning\n    subindex: sub index within group\n    session: scan index for longitudinal acq\n    \"\"\""
    ],
    "functions": [
        "create_key",
        "infotodict"
    ],
    "classes": []
}