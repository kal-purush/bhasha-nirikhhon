{
    "identifiers": [
        "dnnlib",
        "argparse",
        "sys",
        "dnnlib",
        "submission",
        "submit",
        "submit",
        "dnnlib",
        "SubmitConfig",
        "submit_config",
        "run_dir_ignore",
        "dnnlib",
        "EasyDict",
        "dnnlib",
        "EasyDict",
        "func_name",
        "dnnlib",
        "EasyDict",
        "beta1",
        "beta2",
        "epsilon",
        "dnnlib",
        "EasyDict",
        "func_name",
        "train_stddev_rng_range",
        "validation_stddev",
        "dnnlib",
        "EasyDict",
        "func_name",
        "lam_max",
        "dnnlib",
        "EasyDict",
        "dataset_dir",
        "dnnlib",
        "EasyDict",
        "dataset_dir",
        "dnnlib",
        "EasyDict",
        "dataset_dir",
        "datasets",
        "gaussian_noise_config",
        "poisson_noise_config",
        "dnnlib",
        "EasyDict",
        "iteration_count",
        "eval_interval",
        "minibatch_size",
        "run_func_name",
        "learning_rate",
        "ramp_down_perc",
        "noise",
        "gaussian_noise_config",
        "noise2noise",
        "train_tfrecords",
        "validation_config",
        "default_validation_config",
        "dnnlib",
        "EasyDict",
        "run_func_name",
        "dataset",
        "default_validation_config",
        "network_snapshot",
        "noise",
        "gaussian_noise_config",
        "print_args",
        "print_args",
        "sys",
        "exit",
        "v",
        "v",
        "lower",
        "v",
        "lower",
        "argparse",
        "ArgumentTypeError",
        "args",
        "args",
        "args",
        "noise2noise",
        "args",
        "n2n",
        "args",
        "args",
        "long_train",
        "args",
        "args",
        "noise",
        "corruption_types",
        "error",
        "args",
        "noise",
        "args",
        "noise",
        "corruption_types",
        "noise",
        "train_config",
        "noise2noise",
        "submit_config",
        "run_desc",
        "submit_config",
        "run_desc",
        "args",
        "args",
        "train_tfrecords",
        "submit",
        "get_path_from_template",
        "args",
        "train_tfrecords",
        "train_config",
        "dnnlib",
        "submission",
        "submit",
        "submit_run",
        "submit_config",
        "train_config",
        "args",
        "submit_config",
        "submit_target",
        "dnnlib",
        "SubmitTarget",
        "LOCAL",
        "sys",
        "exit",
        "args",
        "dataset_dir",
        "error",
        "args",
        "dataset_dir",
        "args",
        "noise",
        "corruption_types",
        "error",
        "args",
        "noise",
        "corruption_types",
        "args",
        "noise",
        "args",
        "network_snapshot",
        "error",
        "args",
        "network_snapshot",
        "dnnlib",
        "submission",
        "submit",
        "submit_run",
        "submit_config",
        "validate_config",
        "argparse",
        "ArgumentParser",
        "description",
        "epilog",
        "examples",
        "formatter_class",
        "argparse",
        "RawDescriptionHelpFormatter",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_subparsers",
        "help",
        "dest",
        "subparsers",
        "add_parser",
        "help",
        "parser_train",
        "add_argument",
        "nargs",
        "str2bool",
        "help",
        "parser_train",
        "add_argument",
        "help",
        "parser_train",
        "add_argument",
        "help",
        "parser_train",
        "add_argument",
        "help",
        "parser_train",
        "set_defaults",
        "func",
        "train",
        "subparsers",
        "add_parser",
        "help",
        "parser_validate",
        "add_argument",
        "help",
        "parser_validate",
        "add_argument",
        "help",
        "parser_validate",
        "add_argument",
        "help",
        "parser_validate",
        "set_defaults",
        "func",
        "validate",
        "parser",
        "parse_args",
        "desc",
        "args",
        "desc",
        "args",
        "run_dir_root",
        "args",
        "run_dir_root",
        "args",
        "command",
        "args",
        "func",
        "args",
        "train",
        "args"
    ],
    "literals": [
        "'results'",
        "'datasets'",
        "'results'",
        "\"autoencoder\"",
        "\"graph_options.place_pruned_graph\"",
        "\"network.autoencoder\"",
        "'train.AugmentGaussian'",
        "'train.AugmentPoisson'",
        "'kodak'",
        "'datasets/kodak'",
        "'bsd300'",
        "'datasets/bsd300'",
        "'set14'",
        "'datasets/set14'",
        "'kodak'",
        "'gaussian'",
        "'poisson'",
        "\"train.train\"",
        "'datasets/imagenet_val_raw.tfrecords'",
        "\"train.validate\"",
        "'yes'",
        "'true'",
        "'t'",
        "'y'",
        "'1'",
        "'no'",
        "'false'",
        "'f'",
        "'n'",
        "'0'",
        "'Boolean value expected.'",
        "\"__main__\"",
        "'noise2noise'",
        "'long_train'",
        "'running with defaults in train_config'",
        "'gaussian'",
        "'noise'",
        "'Unknown noise type'",
        "\"-n2n\"",
        "\"-n2c\"",
        "'train_tfrecords'",
        "'Command line overrides currently supported only in local runs for the validate subcommand'",
        "'Must select dataset with --dataset-dir'",
        "'dataset_dir'",
        "'Unknown noise type'",
        "'Must specify trained network filename with --network-snapshot'",
        "'Train a network or run a set of images through a trained network.'",
        "'--desc'",
        "''",
        "'Append desc to the run descriptor string'",
        "'--run-dir-root'",
        "'Working dir for a training or a validation run. Will contain training and validation results.'",
        "'Sub-commands'",
        "'command'",
        "'train'",
        "'Train a network'",
        "'--noise2noise'",
        "'?'",
        "'Noise2noise (--noise2noise=true) or noise2clean (--noise2noise=false).  Default is noise2noise=true.'",
        "'--noise'",
        "'gaussian'",
        "'Type of noise corruption (one of: gaussian, poisson)'",
        "'--long-train'",
        "'Train for a very long time (500k iterations or 500k*minibatch image)'",
        "'--train-tfrecords'",
        "'Filename of the training set tfrecords file'",
        "'validate'",
        "'Run a set of images through the network'",
        "'--dataset-dir'",
        "'Load all images from a directory (*.png, *.jpg/jpeg, *.bmp)'",
        "'--network-snapshot'",
        "'Specify trained network filename'",
        "'--noise'",
        "'gaussian'",
        "'Type of noise corruption (one of: gaussian, poisson)'"
    ],
    "variables": [
        "submit_config",
        "submit_config",
        "run_dir_root",
        "desc",
        "tf_config",
        "tf_config",
        "net_config",
        "optimizer_config",
        "gaussian_noise_config",
        "poisson_noise_config",
        "datasets",
        "default_validation_config",
        "corruption_types",
        "train_config",
        "validate_config",
        "examples",
        "n2n",
        "train_config",
        "noise2noise",
        "train_config",
        "iteration_count",
        "train_config",
        "eval_interval",
        "train_config",
        "ramp_down_perc",
        "noise",
        "noise",
        "train_config",
        "noise",
        "train_config",
        "train_tfrecords",
        "validate_config",
        "dataset",
        "validate_config",
        "noise",
        "validate_config",
        "network_snapshot",
        "parser",
        "subparsers",
        "parser_train",
        "parser_validate",
        "args",
        "submit_config",
        "run_desc",
        "submit_config",
        "run_dir_root"
    ],
    "comments": [
        "Copyright (c) 2018, NVIDIA CORPORATION. All rights reserved.",
        "",
        "This work is licensed under the Creative Commons Attribution-NonCommercial",
        "4.0 International License. To view a copy of this license, visit",
        "http://creativecommons.org/licenses/by-nc/4.0/ or send a letter to",
        "Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.",
        "Submit config",
        "------------------------------------------------------------------------------------------",
        "Tensorflow config",
        "------------------------------------------------------------------------------------------",
        "Network config",
        "------------------------------------------------------------------------------------------",
        "Optimizer config",
        "------------------------------------------------------------------------------------------",
        "Noise augmentation config",
        "------------------------------------------------------------------------------------------",
        "Preconfigured validation sets",
        "Train config",
        "------------------------------------------------------------------------------------------",
        "noise=poisson_noise_config,",
        "Validation run config",
        "------------------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------------------",
        "jhellsten quota group",
        "------------------------------------------------------------------------------------------",
        "Train by default",
        "Train if no subcommand was given"
    ],
    "docstrings": [
        "'''examples:\n\n  # Train a network using the BSD300 dataset:\n  python %(prog)s train --train-tfrecords=datasets/bsd300.tfrecords\n\n  # Run a set of images through a pre-trained network:\n  python %(prog)s validate --network-snapshot=results/network_final.pickle --dataset-dir=datasets/kodak\n'''"
    ],
    "functions": [
        "error",
        "str2bool",
        "train",
        "validate"
    ],
    "classes": []
}