{
    "identifiers": [
        "options",
        "url",
        "options",
        "EventEmitter",
        "MarkupData",
        "tough",
        "Script",
        "url",
        "options",
        "url",
        "options",
        "html",
        "html",
        "options",
        "node",
        "MarkupData",
        "script",
        "settings",
        "script",
        "DOMException",
        "Attr",
        "Node",
        "Element",
        "DocumentFragment",
        "Document",
        "HTMLDocument",
        "XMLDocument",
        "CharacterData",
        "Text",
        "CDATASection",
        "ProcessingInstruction",
        "Comment",
        "DocumentType",
        "DOMImplementation",
        "NodeList",
        "HTMLCollection",
        "HTMLOptionsCollection",
        "DOMStringMap",
        "DOMTokenList",
        "Event",
        "CustomEvent",
        "MessageEvent",
        "ErrorEvent",
        "HashChangeEvent",
        "FocusEvent",
        "PopStateEvent",
        "UIEvent",
        "MouseEvent",
        "KeyboardEvent",
        "TouchEvent",
        "ProgressEvent",
        "CompositionEvent",
        "WheelEvent",
        "EventTarget",
        "Location",
        "History",
        "Blob",
        "File",
        "FileList",
        "DOMParser",
        "FormData",
        "XMLHttpRequestUpload",
        "NodeIterator",
        "TreeWalker",
        "NamedNodeMap",
        "URL",
        "URLSearchParams",
        "HTMLElement",
        "HTMLAnchorElement",
        "HTMLAppletElement",
        "HTMLAreaElement",
        "HTMLAudioElement",
        "HTMLBaseElement",
        "HTMLBodyElement",
        "HTMLBRElement",
        "HTMLButtonElement",
        "HTMLCanvasElement",
        "HTMLDataElement",
        "HTMLDataListElement",
        "HTMLDirectoryElement",
        "HTMLDivElement",
        "HTMLDListElement",
        "HTMLEmbedElement",
        "HTMLFieldSetElement",
        "HTMLFontElement",
        "HTMLFormElement",
        "HTMLFrameElement",
        "HTMLFrameSetElement",
        "HTMLHeadingElement",
        "HTMLHeadElement",
        "HTMLHRElement",
        "HTMLHtmlElement",
        "HTMLIFrameElement",
        "HTMLImageElement",
        "HTMLInputElement",
        "HTMLLabelElement",
        "HTMLLegendElement",
        "HTMLLIElement",
        "HTMLLinkElement",
        "HTMLMapElement",
        "HTMLMarqueeElement",
        "HTMLMediaElement",
        "HTMLMenuElement",
        "HTMLMetaElement",
        "HTMLMeterElement",
        "HTMLModElement",
        "HTMLObjectElement",
        "HTMLOListElement",
        "HTMLOptGroupElement",
        "HTMLOptionElement",
        "HTMLOutputElement",
        "HTMLParagraphElement",
        "HTMLParamElement",
        "HTMLPictureElement",
        "HTMLPreElement",
        "HTMLProgressElement",
        "HTMLQuoteElement",
        "HTMLScriptElement",
        "HTMLSelectElement",
        "HTMLSourceElement",
        "HTMLSpanElement",
        "HTMLStyleElement",
        "HTMLTableCaptionElement",
        "HTMLTableCellElement",
        "HTMLTableColElement",
        "HTMLTableElement",
        "HTMLTimeElement",
        "HTMLTitleElement",
        "HTMLTableRowElement",
        "HTMLTableSectionElement",
        "HTMLTemplateElement",
        "HTMLTextAreaElement",
        "HTMLTrackElement",
        "HTMLUListElement",
        "HTMLUnknownElement",
        "HTMLVideoElement",
        "StyleSheet",
        "MediaList",
        "CSSStyleSheet",
        "CSSRule",
        "CSSStyleRule",
        "CSSMediaRule",
        "CSSImportRule",
        "CSSStyleDeclaration",
        "StyleSheetList",
        "XPathExpression",
        "XPathResult",
        "XPathEvaluator",
        "NodeFilter",
        "EventEmitter",
        "method",
        "callback",
        "callback",
        "e",
        "options",
        "tough",
        "tough"
    ],
    "literals": [
        "'jsdom'",
        "string",
        "'events'",
        "'parse5'",
        "'tough-cookie'",
        "'vm'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'dangerously'",
        "'outside-only'",
        "'usable'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'jsdomError'",
        "string"
    ],
    "variables": [
        "toughCookie"
    ],
    "comments": [
        "eslint-disable",
        "<reference types=\"node\" />",
        "node_modules/jsdom/living/index.js",
        "node_modules/jsdom/living/register-elements.js",
        "HTMLDetailsElement: typeof HTMLDetailsElement;",
        "HTMLDialogElement: typeof HTMLDialogElement;",
        "node_modules/jsdom/level2/style.js",
        "node_modules/jsdom/level3/xpath.js",
        "XPathException: typeof XPathException;",
        "node_modules/jsdom/living/node-filter.js"
    ],
    "docstrings": [
        "* Type definitions for jsdom 11.12\n     * Project: https://github.com/tmpvar/jsdom#readme\n     * Definitions by: Leonard Thieu <https://github.com/leonard-thieu>\n     *                 Johan Palmfjord <https://github.com/palmfjord>\n     * Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n     * TypeScript Version: 2.2",
        "* The serialize() method will return the HTML serialization of the document, including the doctype.",
        "* The nodeLocation() method will find where a DOM node is within the source document, returning the parse5 location info for the node.",
        "* The built-in vm module of Node.js allows you to create Script instances,\n         * which can be compiled ahead of time and then run multiple times on a given \"VM context\".\n         * Behind the scenes, a jsdom Window is indeed a VM context.\n         * To get access to this ability, use the runVMScript() method.",
        "* referrer just affects the value read from document.referrer.\n         * It defaults to no referrer (which reflects as the empty string).",
        "* userAgent affects the value read from navigator.userAgent, as well as the User-Agent header sent while fetching subresources.\n         * It defaults to `Mozilla/5.0 (${process.platform}) AppleWebKit/537.36 (KHTML, like Gecko) jsdom/${jsdomVersion}`.",
        "* includeNodeLocations preserves the location info produced by the HTML parser,\n         * allowing you to retrieve it with the nodeLocation() method (described below).\n         * It defaults to false to give the best performance,\n         * and cannot be used with an XML content type since our XML parser does not support location info.",
        "* url sets the value returned by window.location, document.URL, and document.documentURI,\n         * and affects things like resolution of relative URLs within the document\n         * and the same-origin restrictions and referrer used while fetching subresources.\n         * It will default to a file URL corresponding to the given filename, instead of to \"about:blank\".",
        "* contentType affects the value read from document.contentType, and how the document is parsed: as HTML or as XML.\n         * Values that are not \"text/html\" or an XML mime type will throw. It will default to \"application/xhtml+xml\" if\n         * the given filename ends in .xhtml or .xml; otherwise it will continue to default to \"text/html\".",
        "* url sets the value returned by window.location, document.URL, and document.documentURI,\n         * and affects things like resolution of relative URLs within the document\n         * and the same-origin restrictions and referrer used while fetching subresources.\n         * It defaults to \"about:blank\".",
        "* contentType affects the value read from document.contentType, and how the document is parsed: as HTML or as XML.\n         * Values that are not \"text/html\" or an XML mime type will throw. It defaults to \"text/html\".",
        "* jsdom does not have the capability to render visual content, and will act like a headless browser by default.\n         * It provides hints to web pages through APIs such as document.hidden that their content is not visible.\n         *\n         * When the pretendToBeVisual option is set to true, jsdom will pretend that it is rendering and displaying\n         * content.",
        "* The maximum size in code units for the separate storage areas used by localStorage and sessionStorage.\n         * Attempts to store data larger than this limit will cause a DOMException to be thrown. By default, it is set\n         * to 5,000,000 code units per origin, as inspired by the HTML specification."
    ],
    "functions": [],
    "classes": [
        "ResourceLoader",
        "JSDOM",
        "VirtualConsole",
        "CookieJar"
    ]
}