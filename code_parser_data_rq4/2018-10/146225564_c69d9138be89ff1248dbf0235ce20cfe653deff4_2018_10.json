{
    "identifiers": [
        "shutil",
        "os",
        "format",
        "os",
        "getcwd",
        "os",
        "chdir",
        "format",
        "os",
        "getcwd",
        "os",
        "listdir",
        "os",
        "mkdir",
        "FileExistsError",
        "filename",
        "os",
        "listdir",
        "os",
        "path",
        "isdir",
        "filename",
        "get_fixed_filename",
        "filename",
        "format",
        "filename",
        "new_name",
        "filename",
        "filename",
        "replace",
        "replace",
        "new_name",
        "os",
        "chdir",
        "directory_name",
        "subdirectories",
        "filenames",
        "os",
        "walk",
        "directory_name",
        "subdirectories",
        "filenames",
        "format",
        "os",
        "getcwd",
        "filename",
        "filenames",
        "os",
        "path",
        "join",
        "directory_name",
        "filename",
        "os",
        "path",
        "join",
        "directory_name",
        "get_fixed_filename",
        "filename",
        "os",
        "rename",
        "full_name",
        "new_name",
        "demo_walk"
    ],
    "literals": [
        "\"Starting directory is: {}\"",
        "'Lyrics/Christmas'",
        "\"Files in {}:\\n{}\\n\"",
        "'.'",
        "'temp'",
        "'.'",
        "\"Renaming {} to {}\"",
        "\" \"",
        "\"_\"",
        "\".TXT\"",
        "\".txt\"",
        "'Lyrics'",
        "'.'",
        "\"Directory:\"",
        "\"\\tcontains subdirectories:\"",
        "\"\\tand files:\"",
        "\"(Current working directory is: {})\""
    ],
    "variables": [
        "new_name",
        "new_name",
        "full_name",
        "new_name"
    ],
    "comments": [
        "Change to desired directory",
        "Print a list of all files in current directory",
        "Make a new directory",
        "The next time you run this, it will crash if the directory exists",
        "TODO: Use exception handling to avoid the crash (just pass)",
        "Loop through each file in the (current) directory",
        "Ignore directories, just process files",
        "TODO: Try these options one at a time",
        "Option 1: rename file to new name - in place",
        "os.rename(filename, new_name)",
        "Option 2: move file to new place, with new name",
        "shutil.move(filename, 'temp/' + new_name)",
        "TODO: add a loop to rename the files",
        "main()"
    ],
    "docstrings": [
        "\"\"\"\nCP1404/CP5632 Practical\nCode to clean up files and create consistency.\n\"\"\"",
        "\"\"\"Demo os module functions.\"\"\"",
        "\"\"\"Return a 'fixed' version of filename.\"\"\"",
        "\"\"\"Process all subdirectories using os.walk().\"\"\""
    ],
    "functions": [
        "main",
        "get_fixed_filename",
        "demo_walk"
    ],
    "classes": []
}