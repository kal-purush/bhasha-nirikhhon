{
    "identifiers": [
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "h5py",
        "sklearn",
        "sklearn",
        "datasets",
        "x",
        "np",
        "exp",
        "x",
        "s",
        "x",
        "np",
        "maximum",
        "x",
        "s",
        "X",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "np",
        "dot",
        "W1",
        "X",
        "b1",
        "relu",
        "z1",
        "np",
        "dot",
        "W2",
        "a1",
        "b2",
        "relu",
        "z2",
        "np",
        "dot",
        "W3",
        "a2",
        "b3",
        "sigmoid",
        "z3",
        "z1",
        "a1",
        "W1",
        "b1",
        "z2",
        "a2",
        "W2",
        "b2",
        "z3",
        "a3",
        "W3",
        "b3",
        "a3",
        "cache",
        "X",
        "Y",
        "cache",
        "X",
        "shape",
        "cache",
        "m",
        "a3",
        "Y",
        "np",
        "dot",
        "dz3",
        "a2",
        "T",
        "np",
        "sum",
        "dz3",
        "axis",
        "keepdims",
        "np",
        "dot",
        "W3",
        "T",
        "dz3",
        "np",
        "multiply",
        "da2",
        "np",
        "int64",
        "a2",
        "np",
        "dot",
        "dz2",
        "a1",
        "T",
        "np",
        "sum",
        "dz2",
        "axis",
        "keepdims",
        "np",
        "dot",
        "W2",
        "T",
        "dz2",
        "np",
        "multiply",
        "da1",
        "np",
        "int64",
        "a1",
        "np",
        "dot",
        "dz1",
        "X",
        "T",
        "np",
        "sum",
        "dz1",
        "axis",
        "keepdims",
        "dz3",
        "dW3",
        "db3",
        "da2",
        "dz2",
        "dW2",
        "db2",
        "da1",
        "dz1",
        "dW1",
        "db1",
        "gradients",
        "parameters",
        "grads",
        "learning_rate",
        "len",
        "parameters",
        "k",
        "L",
        "k",
        "parameters",
        "k",
        "learning_rate",
        "grads",
        "k",
        "k",
        "parameters",
        "k",
        "learning_rate",
        "grads",
        "k",
        "parameters",
        "a3",
        "Y",
        "Y",
        "shape",
        "np",
        "multiply",
        "np",
        "log",
        "a3",
        "Y",
        "np",
        "multiply",
        "np",
        "log",
        "a3",
        "Y",
        "m",
        "np",
        "nansum",
        "logprobs",
        "loss",
        "h5py",
        "File",
        "np",
        "array",
        "train_dataset",
        "np",
        "array",
        "train_dataset",
        "h5py",
        "File",
        "np",
        "array",
        "test_dataset",
        "np",
        "array",
        "test_dataset",
        "np",
        "array",
        "test_dataset",
        "train_set_y_orig",
        "reshape",
        "train_set_y_orig",
        "shape",
        "test_set_y_orig",
        "reshape",
        "test_set_y_orig",
        "shape",
        "train_set_x_orig",
        "reshape",
        "train_set_x_orig",
        "shape",
        "T",
        "test_set_x_orig",
        "reshape",
        "test_set_x_orig",
        "shape",
        "T",
        "train_set_x_orig",
        "test_set_x_orig",
        "train_set_x",
        "train_set_y",
        "test_set_x",
        "test_set_y",
        "classes",
        "X",
        "y",
        "parameters",
        "X",
        "shape",
        "np",
        "zeros",
        "m",
        "dtype",
        "np",
        "forward_propagation",
        "X",
        "parameters",
        "i",
        "a3",
        "shape",
        "a3",
        "i",
        "np",
        "mean",
        "p",
        "y",
        "p",
        "model",
        "X",
        "y",
        "X",
        "min",
        "X",
        "max",
        "X",
        "min",
        "X",
        "max",
        "np",
        "meshgrid",
        "np",
        "arange",
        "x_min",
        "x_max",
        "h",
        "np",
        "arange",
        "y_min",
        "y_max",
        "h",
        "model",
        "np",
        "c_",
        "xx",
        "ravel",
        "yy",
        "ravel",
        "Z",
        "reshape",
        "xx",
        "shape",
        "plt",
        "contourf",
        "xx",
        "yy",
        "Z",
        "cmap",
        "plt",
        "cm",
        "Spectral",
        "plt",
        "ylabel",
        "plt",
        "xlabel",
        "plt",
        "scatter",
        "X",
        "X",
        "c",
        "y",
        "cmap",
        "plt",
        "cm",
        "Spectral",
        "plt",
        "show",
        "parameters",
        "X",
        "forward_propagation",
        "X",
        "parameters",
        "a3",
        "predictions",
        "np",
        "random",
        "seed",
        "sklearn",
        "datasets",
        "make_circles",
        "n_samples",
        "noise",
        "np",
        "random",
        "seed",
        "sklearn",
        "datasets",
        "make_circles",
        "n_samples",
        "noise",
        "plt",
        "scatter",
        "train_X",
        "train_X",
        "c",
        "train_Y",
        "s",
        "cmap",
        "plt",
        "cm",
        "Spectral",
        "train_X",
        "T",
        "train_Y",
        "reshape",
        "train_Y",
        "shape",
        "test_X",
        "T",
        "test_Y",
        "reshape",
        "test_Y",
        "shape",
        "train_X",
        "train_Y",
        "test_X",
        "test_Y"
    ],
    "literals": [
        "\"W1\"",
        "\"b1\"",
        "\"W2\"",
        "\"b2\"",
        "\"W3\"",
        "\"b3\"",
        "\"dz3\"",
        "\"dW3\"",
        "\"db3\"",
        "\"da2\"",
        "\"dz2\"",
        "\"dW2\"",
        "\"db2\"",
        "\"da1\"",
        "\"dz1\"",
        "\"dW1\"",
        "\"db1\"",
        "\"W\"",
        "\"W\"",
        "\"dW\"",
        "\"b\"",
        "\"b\"",
        "\"db\"",
        "'datasets/train_catvnoncat.h5'",
        "\"r\"",
        "\"train_set_x\"",
        "\"train_set_y\"",
        "'datasets/test_catvnoncat.h5'",
        "\"r\"",
        "\"test_set_x\"",
        "\"test_set_y\"",
        "\"list_classes\"",
        "\"Accuracy: \"",
        "'x2'",
        "'x1'"
    ],
    "variables": [
        "s",
        "s",
        "W1",
        "b1",
        "W2",
        "b2",
        "W3",
        "b3",
        "z1",
        "a1",
        "z2",
        "a2",
        "z3",
        "a3",
        "cache",
        "m",
        "z1",
        "a1",
        "W1",
        "b1",
        "z2",
        "a2",
        "W2",
        "b2",
        "z3",
        "a3",
        "W3",
        "b3",
        "dz3",
        "dW3",
        "db3",
        "da2",
        "dz2",
        "dW2",
        "db2",
        "da1",
        "dz1",
        "dW1",
        "db1",
        "gradients",
        "L",
        "parameters",
        "parameters",
        "m",
        "logprobs",
        "loss",
        "train_dataset",
        "train_set_x_orig",
        "train_set_y_orig",
        "test_dataset",
        "test_set_x_orig",
        "test_set_y_orig",
        "classes",
        "train_set_y",
        "test_set_y",
        "train_set_x_orig",
        "test_set_x_orig",
        "train_set_x",
        "test_set_x",
        "m",
        "p",
        "a3",
        "caches",
        "p",
        "i",
        "p",
        "i",
        "x_min",
        "x_max",
        "y_min",
        "y_max",
        "h",
        "xx",
        "yy",
        "Z",
        "Z",
        "a3",
        "cache",
        "predictions",
        "train_X",
        "train_Y",
        "test_X",
        "test_Y",
        "train_X",
        "train_Y",
        "test_X",
        "test_Y"
    ],
    "comments": [
        "retrieve parameters",
        "LINEAR -> RELU -> LINEAR -> RELU -> LINEAR -> SIGMOID",
        "number of layers in the neural networks",
        "Update rule for each parameter",
        "your train set features",
        "your train set labels",
        "your test set features",
        "your test set labels",
        "the list of classes",
        "Forward propagation",
        "convert probas to 0/1 predictions",
        "print results",
        "Set min and max values and give it some padding",
        "Generate a grid of points with distance h between them",
        "Predict the function value for the whole grid",
        "Plot the contour and training examples",
        "Predict using forward propagation and a classification threshold of 0.5",
        "Visualize the data"
    ],
    "docstrings": [
        "\"\"\"\n    Compute the sigmoid of x\n\n    Arguments:\n    x -- A scalar or numpy array of any size.\n\n    Return:\n    s -- sigmoid(x)\n    \"\"\"",
        "\"\"\"\n    Compute the relu of x\n\n    Arguments:\n    x -- A scalar or numpy array of any size.\n\n    Return:\n    s -- relu(x)\n    \"\"\"",
        "\"\"\"\n    Implements the forward propagation (and computes the loss) presented in Figure 2.\n    \n    Arguments:\n    X -- input dataset, of shape (input size, number of examples)\n    Y -- true \"label\" vector (containing 0 if cat, 1 if non-cat)\n    parameters -- python dictionary containing your parameters \"W1\", \"b1\", \"W2\", \"b2\", \"W3\", \"b3\":\n                    W1 -- weight matrix of shape ()\n                    b1 -- bias vector of shape ()\n                    W2 -- weight matrix of shape ()\n                    b2 -- bias vector of shape ()\n                    W3 -- weight matrix of shape ()\n                    b3 -- bias vector of shape ()\n    \n    Returns:\n    loss -- the loss function (vanilla logistic loss)\n    \"\"\"",
        "\"\"\"\n    Implement the backward propagation presented in figure 2.\n    \n    Arguments:\n    X -- input dataset, of shape (input size, number of examples)\n    Y -- true \"label\" vector (containing 0 if cat, 1 if non-cat)\n    cache -- cache output from forward_propagation()\n    \n    Returns:\n    gradients -- A dictionary with the gradients with respect to each parameter, activation and pre-activation variables\n    \"\"\"",
        "\"\"\"\n    Update parameters using gradient descent\n    \n    Arguments:\n    parameters -- python dictionary containing your parameters \n    grads -- python dictionary containing your gradients, output of n_model_backward\n    \n    Returns:\n    parameters -- python dictionary containing your updated parameters \n                  parameters['W' + str(i)] = ... \n                  parameters['b' + str(i)] = ...\n    \"\"\"",
        "\"\"\"\n    Implement the loss function\n    \n    Arguments:\n    a3 -- post-activation, output of forward propagation\n    Y -- \"true\" labels vector, same shape as a3\n    \n    Returns:\n    loss - value of the loss function\n    \"\"\"",
        "\"\"\"\n    This function is used to predict the results of a  n-layer neural network.\n    \n    Arguments:\n    X -- data set of examples you would like to label\n    parameters -- parameters of the trained model\n    \n    Returns:\n    p -- predictions for the given dataset X\n    \"\"\"",
        "\"\"\"\n    Used for plotting decision boundary.\n    \n    Arguments:\n    parameters -- python dictionary containing your parameters \n    X -- input data of size (m, K)\n    \n    Returns\n    predictions -- vector of predictions of our model (red: 0 / blue: 1)\n    \"\"\""
    ],
    "functions": [
        "sigmoid",
        "relu",
        "forward_propagation",
        "backward_propagation",
        "update_parameters",
        "compute_loss",
        "load_cat_dataset",
        "predict",
        "plot_decision_boundary",
        "predict_dec",
        "load_dataset"
    ],
    "classes": []
}