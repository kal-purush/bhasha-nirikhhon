{
    "identifiers": [
        "sys",
        "json",
        "os",
        "re",
        "traceback",
        "subprocess",
        "Popen",
        "PIPE",
        "os",
        "environ",
        "get",
        "os",
        "environ",
        "get",
        "os",
        "getcwd",
        "os",
        "environ",
        "get",
        "state_json",
        "state_json",
        "state_json",
        "flat_attrs",
        "state_json",
        "modules",
        "resource",
        "values",
        "TerraformResource",
        "resource",
        "flat_attrs",
        "state_json",
        "resource",
        "resources",
        "instance",
        "resource",
        "TerraformResource",
        "instance",
        "resource_type",
        "resource",
        "source_json",
        "flat_attrs",
        "resource_type",
        "flat_attrs",
        "resource_type",
        "source_json",
        "startswith",
        "_priority",
        "_priority",
        "read_int_attr",
        "read_int_attr",
        "TerraformResource",
        "DEFAULT_PRIORITIES",
        "TerraformResource",
        "DEFAULT_PRIORITIES",
        "priority",
        "_priority",
        "_type",
        "_type",
        "source_json",
        "key",
        "_raw_attributes",
        "flat_attrs",
        "k",
        "attrs",
        "keys",
        "re",
        "match",
        "key",
        "k",
        "match",
        "match",
        "group",
        "match",
        "group",
        "attrs",
        "k",
        "attrs",
        "get",
        "key",
        "key",
        "_raw_attributes",
        "flat_attrs",
        "key",
        "length_key",
        "attrs",
        "keys",
        "attrs",
        "length_key",
        "length",
        "i",
        "length",
        "append",
        "attrs",
        "format",
        "key",
        "i",
        "attrs",
        "get",
        "key",
        "key",
        "read_attr",
        "key",
        "val",
        "val",
        "val",
        "key",
        "_raw_attributes",
        "get",
        "key",
        "flat_attrs",
        "source_json",
        "source_json",
        "resource",
        "resource",
        "read_attr",
        "hostname",
        "hosts",
        "hosts",
        "hostname",
        "host",
        "add_source",
        "resource",
        "AnsibleHost",
        "hostname",
        "source",
        "resource",
        "hosts",
        "host",
        "resource",
        "resource",
        "read_attr",
        "groupname",
        "groups",
        "groups",
        "groupname",
        "group",
        "add_source",
        "resource",
        "AnsibleGroup",
        "groupname",
        "source",
        "resource",
        "groups",
        "group",
        "groupname",
        "children",
        "hosts",
        "group_vars",
        "groupname",
        "groups",
        "groups",
        "groupname",
        "group",
        "update",
        "children",
        "children",
        "hosts",
        "hosts",
        "group_vars",
        "group_vars",
        "AnsibleGroup",
        "groupname",
        "group",
        "update",
        "children",
        "hosts",
        "group_vars",
        "groups",
        "group",
        "resource",
        "resource",
        "startswith",
        "add_host_resource",
        "resource",
        "resource",
        "startswith",
        "add_group_resource",
        "resource",
        "hostname",
        "host",
        "hosts",
        "items",
        "host",
        "build",
        "group",
        "host",
        "groups",
        "update_groups",
        "group",
        "hosts",
        "host",
        "hostname",
        "host",
        "get_vars",
        "groupname",
        "group",
        "groups",
        "items",
        "group",
        "build",
        "group",
        "to_dict",
        "hostname",
        "source",
        "hostname",
        "source",
        "add_source",
        "source",
        "groups",
        "host_vars",
        "host_vars",
        "host_vars",
        "update",
        "host_vars",
        "groups",
        "groups",
        "update",
        "groups",
        "source",
        "sources",
        "append",
        "source",
        "sources",
        "sort",
        "key",
        "source",
        "source",
        "priority",
        "source",
        "sources",
        "source",
        "source",
        "read_list_attr",
        "source",
        "read_dict_attr",
        "update",
        "groups",
        "groups",
        "host_vars",
        "host_vars",
        "source",
        "source",
        "read_attr",
        "source",
        "read_attr",
        "update",
        "host_vars",
        "host_vars",
        "sorted",
        "groups",
        "host_vars",
        "groupname",
        "source",
        "groupname",
        "source",
        "add_source",
        "source",
        "children",
        "hosts",
        "group_vars",
        "hosts",
        "hosts",
        "update",
        "hosts",
        "children",
        "children",
        "update",
        "children",
        "group_vars",
        "group_vars",
        "update",
        "group_vars",
        "source",
        "sources",
        "append",
        "source",
        "sources",
        "sort",
        "key",
        "source",
        "source",
        "priority",
        "source",
        "sources",
        "source",
        "source",
        "read_list_attr",
        "source",
        "read_dict_attr",
        "update",
        "children",
        "children",
        "group_vars",
        "group_vars",
        "source",
        "source",
        "read_attr",
        "source",
        "read_attr",
        "update",
        "group_vars",
        "group_vars",
        "sorted",
        "hosts",
        "sorted",
        "children",
        "children",
        "hosts",
        "group_vars",
        "TERRAFORM_PATH",
        "TERRAFORM_WS_NAME",
        "Popen",
        "tf_workspace",
        "cwd",
        "TERRAFORM_DIR",
        "stdout",
        "PIPE",
        "stderr",
        "PIPE",
        "universal_newlines",
        "proc_ws",
        "communicate",
        "err_ws",
        "sys",
        "stderr",
        "write",
        "err_ws",
        "sys",
        "exit",
        "TERRAFORM_PATH",
        "Popen",
        "tf_command",
        "cwd",
        "TERRAFORM_DIR",
        "stdout",
        "PIPE",
        "stderr",
        "PIPE",
        "universal_newlines",
        "proc_tf_cmd",
        "communicate",
        "err_cmd",
        "sys",
        "stderr",
        "write",
        "err_cmd",
        "sys",
        "exit",
        "json",
        "loads",
        "out_cmd",
        "encoding",
        "encoding",
        "TerraformState",
        "_execute_shell",
        "AnsibleInventory",
        "resource",
        "tfstate",
        "resources",
        "resource",
        "is_ansible",
        "inventory",
        "add_resource",
        "resource",
        "sys",
        "stdout",
        "write",
        "json",
        "dumps",
        "inventory",
        "to_dict",
        "indent",
        "traceback",
        "print_exc",
        "file",
        "sys",
        "stderr",
        "sys",
        "exit",
        "_main"
    ],
    "literals": [
        "'ANSIBLE_TF_BIN'",
        "'terraform'",
        "'ANSIBLE_TF_DIR'",
        "'ANSIBLE_TF_WS_NAME'",
        "'default'",
        "\"modules\"",
        "\"modules\"",
        "\"resources\"",
        "\"resources\"",
        "\"instances\"",
        "\"type\"",
        "'ansible_host'",
        "'ansible_group'",
        "'ansible_host_var'",
        "'ansible_group_var'",
        "\"ansible_\"",
        "\"variable_priority\"",
        "\"variable_priority\"",
        "\"type\"",
        "r\"^\"",
        "r\"\\.(.*)\"",
        "\"%\"",
        "\".#\"",
        "\"{}.{}\"",
        "\"primary\"",
        "\"attributes\"",
        "\"attributes\"",
        "\"inventory_hostname\"",
        "\"inventory_group_name\"",
        "\"ansible_host\"",
        "\"ansible_group\"",
        "\"_meta\"",
        "\"hostvars\"",
        "\"_meta\"",
        "\"hostvars\"",
        "\"all\"",
        "\"ansible_host\"",
        "\"groups\"",
        "\"vars\"",
        "\"ansible_host_var\"",
        "\"key\"",
        "\"value\"",
        "\"ansible_group\"",
        "\"children\"",
        "\"vars\"",
        "\"ansible_group_var\"",
        "\"key\"",
        "\"value\"",
        "\"children\"",
        "\"hosts\"",
        "\"vars\"",
        "'utf-8'",
        "'workspace'",
        "'select'",
        "''",
        "'\\n'",
        "'state'",
        "'pull'",
        "''",
        "'\\n'",
        "'__main__'"
    ],
    "variables": [
        "TERRAFORM_PATH",
        "TERRAFORM_DIR",
        "TERRAFORM_WS_NAME",
        "state_json",
        "flat_attrs",
        "flat_attrs",
        "modules",
        "resources",
        "DEFAULT_PRIORITIES",
        "flat_attrs",
        "_type",
        "_priority",
        "source_json",
        "priority",
        "priority",
        "priority",
        "_priority",
        "attrs",
        "match",
        "attrs",
        "length_key",
        "length",
        "val",
        "val",
        "groups",
        "hosts",
        "inner_json",
        "hostname",
        "host",
        "host",
        "hostname",
        "groupname",
        "group",
        "group",
        "groupname",
        "group",
        "group",
        "groupname",
        "hostname",
        "groupname",
        "sources",
        "hostname",
        "groups",
        "host_vars",
        "groups",
        "host_vars",
        "host_vars",
        "groups",
        "groupname",
        "sources",
        "hosts",
        "children",
        "group_vars",
        "children",
        "group_vars",
        "group_vars",
        "hosts",
        "children",
        "encoding",
        "tf_workspace",
        "proc_ws",
        "_",
        "err_ws",
        "tf_command",
        "proc_tf_cmd",
        "out_cmd",
        "err_cmd",
        "tfstate",
        "inventory"
    ],
    "comments": [
        "!/usr/bin/env python",
        "uses pre-0.12",
        "state format for 0.12+"
    ],
    "docstrings": [
        "'''\nTerraform Inventory Script\n==========================\nThis inventory script generates dynamic inventory by reading Terraform state\ncontents. Servers and groups a defined inside the Terraform state using special\nresources defined by the Terraform Provider for Ansible.\nConfiguration\n=============\nState is fetched using the \"terraform state pull\" subcommand. The behaviour of\nthis action can be configured using some environment variables.\nEnvironment Variables:\n......................\n    ANSIBLE_TF_BIN\n        Override the path to the Terraform command executable. This is useful if\n        you have multiple copies or versions installed and need to specify a\n        specific binary. The inventory script runs the `terraform state pull`\n        command to fetch the Terraform state, so that remote state will be\n        fetched seemlessly regardless of the backend configuration.\n    ANSIBLE_TF_DIR\n        Set the working directory for the `terraform` command when the scripts\n        shells out to it. This is useful if you keep your terraform and ansible\n        configuration in separate directories. Defaults to using the current\n        working directory.\n    ANSIBLE_TF_WS_NAME\n        Sets the workspace for the `terraform` command when the scripts shells\n        out to it, defaults to `default` workspace - if you don't use workspaces\n        this is the one you'll be using.\n'''",
        "'''\n    TerraformState wraps the state content to provide some helpers for iterating\n    over resources.\n    '''",
        "'''Generator method to iterate over resources in the state file.'''",
        "'''\n    TerraformResource wraps individual resource content and provide some helper\n    methods for reading older-style dictionary and list values from attributes\n    defined as a single-level map.\n    '''",
        "'''Check if the resource is provided by the ansible provider.'''",
        "'''Get the merge priority of the resource.'''",
        "'''Returns the Terraform resource type identifier.'''",
        "'''\n        Read a dictionary attribute from the resource, handling old-style\n        Terraform state where maps are stored as multiple keys in the resource's\n        attributes.\n        '''",
        "'''\n        Read a list attribute from the resource, handling old-style Terraform\n        state where lists are stored as multiple keys in the resource's\n        attributes.\n        '''",
        "'''\n        Read an attribute from state an convert it to type Int.\n        '''",
        "'''\n        Read an attribute from the underlaying state content.\n        '''",
        "'''\n    AnsibleInventory handles conversion from Terraform resource content to\n    Ansible inventory entities, and building of the final inventory json.\n    '''",
        "'''Upsert type action for host resources.'''",
        "'''Upsert type action for group resources.'''",
        "'''Upsert type action for group resources'''",
        "'''\n        Process a Terraform resource, passing to the correct handler function\n        by type.\n        '''",
        "'''\n        Generate the file Ansible inventory structure to be serialized into JSON\n        for consumption by Ansible proper.\n        '''",
        "'''\n    AnsibleHost represents a host for the Ansible inventory.\n    '''",
        "'''Update host resource with additional groups and vars.'''",
        "'''Add a Terraform resource to the sources list.'''",
        "'''Assemble host details from registered sources.'''",
        "'''Get the host's variable dictionary.'''",
        "'''\n    AnsibleGroup represents a group for the Ansible inventory.\n    '''",
        "'''\n        Update host resource with additional children, hosts, or group variables.\n        '''",
        "'''Add a Terraform resource to the sources list.'''",
        "'''Assemble group details from registered sources.'''",
        "'''Prepare structure for final Ansible inventory JSON.'''"
    ],
    "functions": [
        "resources",
        "is_ansible",
        "priority",
        "read_dict_attr",
        "read_list_attr",
        "read_int_attr",
        "read_attr",
        "_raw_attributes",
        "add_host_resource",
        "add_group_resource",
        "update_groups",
        "add_resource",
        "to_dict",
        "update",
        "add_source",
        "build",
        "get_vars",
        "update",
        "add_source",
        "build",
        "to_dict",
        "_execute_shell",
        "_main"
    ],
    "classes": [
        "TerraformState",
        "TerraformResource",
        "AnsibleInventory",
        "AnsibleHost",
        "AnsibleGroup"
    ]
}