{
    "identifiers": [
        "typing",
        "Tuple",
        "Union",
        "qlib",
        "backtest",
        "position",
        "Position",
        "qlib",
        "backtest",
        "collect_data",
        "format_decisions",
        "qlib",
        "backtest",
        "order",
        "BaseTradeDecision",
        "TradeRangeByTime",
        "qlib",
        "qlib",
        "tests",
        "TestAutoData",
        "unittest",
        "qlib",
        "config",
        "REG_CN",
        "HIGH_FREQ_CONFIG",
        "pandas",
        "pd",
        "unittest",
        "skip",
        "TestAutoData",
        "classmethod",
        "cls",
        "setUpClass",
        "enable_1min",
        "enable_1d_type",
        "inst",
        "date",
        "pos",
        "pd",
        "DataFrame",
        "date",
        "inst",
        "pos",
        "pd",
        "DataFrame",
        "orders",
        "columns",
        "headers",
        "inst",
        "date",
        "date",
        "_gen_orders",
        "inst",
        "inst",
        "date",
        "date",
        "pos",
        "pos",
        "TradeRangeByTime",
        "orders",
        "start_time",
        "end_time",
        "inst",
        "pos",
        "freq_l2",
        "market",
        "freq_l0",
        "freq_l1",
        "freq_l2",
        "collect_data",
        "executor",
        "executor_config",
        "strategy",
        "strategy_config",
        "backtest_config",
        "return_value",
        "ret_val",
        "ret_val",
        "ret_val",
        "format_decisions",
        "decisions",
        "indicator",
        "unittest",
        "main"
    ],
    "literals": [
        "\"This test takes a lot of time due to the large size of high-frequency data\"",
        "\"full\"",
        "\"datetime\"",
        "\"instrument\"",
        "\"amount\"",
        "\"direction\"",
        "\"sell\"",
        "\"SH600519\"",
        "\"2021-01-18\"",
        "f\"{date}\"",
        "f\"{date} 15:00\"",
        "\"day\"",
        "\"30min\"",
        "\"1min\"",
        "\"class\"",
        "\"FileOrderStrategy\"",
        "\"module_path\"",
        "\"qlib.contrib.strategy.rule_strategy\"",
        "\"kwargs\"",
        "\"trade_range\"",
        "\"10:45\"",
        "\"14:44\"",
        "\"file\"",
        "\"start_time\"",
        "\"end_time\"",
        "\"account\"",
        "\"cash\"",
        "\"benchmark\"",
        "\"exchange_kwargs\"",
        "\"freq\"",
        "\"limit_threshold\"",
        "\"deal_price\"",
        "\"close\"",
        "\"open_cost\"",
        "\"close_cost\"",
        "\"min_cost\"",
        "\"codes\"",
        "\"trade_unit\"",
        "\"class\"",
        "\"NestedExecutor\"",
        "\"module_path\"",
        "\"qlib.backtest.executor\"",
        "\"kwargs\"",
        "\"time_per_step\"",
        "\"inner_executor\"",
        "\"class\"",
        "\"NestedExecutor\"",
        "\"module_path\"",
        "\"qlib.backtest.executor\"",
        "\"kwargs\"",
        "\"time_per_step\"",
        "\"inner_executor\"",
        "\"class\"",
        "\"SimulatorExecutor\"",
        "\"module_path\"",
        "\"qlib.backtest.executor\"",
        "\"kwargs\"",
        "\"time_per_step\"",
        "\"generate_report\"",
        "\"verbose\"",
        "\"indicator_config\"",
        "\"show_indicator\"",
        "\"track_data\"",
        "\"inner_strategy\"",
        "\"class\"",
        "\"TWAPStrategy\"",
        "\"module_path\"",
        "\"qlib.contrib.strategy.rule_strategy\"",
        "\"generate_report\"",
        "\"indicator_config\"",
        "\"show_indicator\"",
        "\"track_data\"",
        "\"inner_strategy\"",
        "\"class\"",
        "\"TWAPStrategy\"",
        "\"module_path\"",
        "\"qlib.contrib.strategy.rule_strategy\"",
        "\"generate_report\"",
        "\"indicator_config\"",
        "\"show_indicator\"",
        "\"track_data\"",
        "\"report\"",
        "\"indicator\"",
        "\"1day\"",
        "\"__main__\""
    ],
    "variables": [
        "headers",
        "orders",
        "pos",
        "inst",
        "date",
        "market",
        "start_time",
        "end_time",
        "freq_l0",
        "freq_l1",
        "freq_l2",
        "orders",
        "strategy_config",
        "backtest_config",
        "executor_config",
        "ret_val",
        "decisions",
        "report",
        "indicator",
        "f_dec"
    ],
    "comments": [
        "date = \"2020-02-03\"",
        "inst = \"SH600068\"",
        "pos = 2.0167",
        "include the high-freq data on the end day",
        "benchmark is not required here for trading",
        "use the most fine-grained data as the exchange",
        "\"pos_type\": \"InfPosition\"  # Position with infinitive position",
        "Level 1 Order execution",
        "Leve 2 Order Execution",
        "NOTE: please refer to the docs of format_decisions",
        "NOTE: `\"track_data\": True,`  is very NECESSARY for collecting the decision!!!!!"
    ],
    "docstrings": [],
    "functions": [
        "setUpClass",
        "_gen_orders",
        "test_trading"
    ],
    "classes": [
        "TestHFBacktest"
    ]
}