{
    "identifiers": [
        "fs",
        "request",
        "gql",
        "BigNumber",
        "ChainId",
        "chunk",
        "sub",
        "getUnixTime",
        "farmsConfig",
        "key",
        "getWeekAgoTimestamp",
        "sub",
        "getUnixTime",
        "weekAgo",
        "getBlockAtTimestamp",
        "timestamp",
        "request",
        "BLOCK_SUBGRAPH_ENDPOINT",
        "timestamp",
        "timestamp",
        "parseInt",
        "blocks",
        "error",
        "timestamp",
        "error",
        "getAprsForFarmGroup",
        "addresses",
        "blockWeekAgo",
        "request",
        "STREAMING_FAST_ENDPOINT",
        "gql",
        "farmsAtLatestBlock",
        "aprMap",
        "farm",
        "farmsOneWeekAgo",
        "oldFarm",
        "oldFarm",
        "farm",
        "BigNumber",
        "farmWeekAgo",
        "BigNumber",
        "farm",
        "BigNumber",
        "farmWeekAgo",
        "volume7d",
        "LP_HOLDERS_FEE",
        "lpFees7d",
        "WEEKS_IN_A_YEAR",
        "lpFeesInAYear",
        "BigNumber",
        "farm",
        "lpApr",
        "lpFeesInAYear",
        "liquidity",
        "aprMap",
        "farm",
        "lpApr",
        "aprs",
        "error",
        "error",
        "fetchAndUpdateLPsAPR",
        "farmsConfig",
        "farm",
        "farm",
        "farm",
        "farm",
        "ChainId",
        "lowerCaseAddresses",
        "chunk",
        "lowerCaseAddresses",
        "getWeekAgoTimestamp",
        "getBlockAtTimestamp",
        "weekAgoTimestamp",
        "groupOfAddresses",
        "addressesInGroups",
        "getAprsForFarmGroup",
        "groupOfAddresses",
        "blockWeekAgo",
        "allAprs",
        "allAprs",
        "aprs",
        "fs",
        "allAprs",
        "err",
        "err",
        "err",
        "fetchAndUpdateLPsAPR"
    ],
    "literals": [
        "'fs'",
        "'graphql-request'",
        "'bignumber.js'",
        "'@pancakeswap/sdk'",
        "'lodash/chunk'",
        "'date-fns'",
        "'../src/config/constants/farms'",
        "'https://api.thegraph.com/subgraphs/name/pancakeswap/blocks'",
        "'https://bsc.streamingfast.io/subgraphs/name/pancakeswap/exchange-v2'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "query getBlock($timestampGreater: Int!, $timestampLess: Int!) {\n        blocks(first: 1, where: { timestamp_gt: $timestampGreater, timestamp_lt: $timestampLess }) {\n          number\n        }\n      }",
        "Failed to fetch block number for ${timestamp}\\n${error}",
        "string",
        "query farmsBulk($addresses: [String]!, $blockWeekAgo: Int!) {\n          farmsAtLatestBlock: pairs(first: 30, where: { id_in: $addresses }) {\n            id\n            volumeUSD\n            reserveUSD\n          }\n          farmsOneWeekAgo: pairs(first: 30, where: { id_in: $addresses }, block: { number: $blockWeekAgo }) {\n            id\n            volumeUSD\n            reserveUSD\n          }\n        }",
        "Failed to fetch LP APR data: ${error}",
        "Fetching farm data for ${lowerCaseAddresses.length} addresses",
        "src/config/constants/lpAprs.json",
        "âœ… - lpAprs.json has been updated!"
    ],
    "variables": [
        "BLOCK_SUBGRAPH_ENDPOINT",
        "STREAMING_FAST_ENDPOINT",
        "getWeekAgoTimestamp",
        "weekAgo",
        "LP_HOLDERS_FEE",
        "WEEKS_IN_A_YEAR",
        "getBlockAtTimestamp",
        "getAprsForFarmGroup",
        "aprs",
        "farmWeekAgo",
        "lpApr",
        "volume7d",
        "lpFees7d",
        "lpFeesInAYear",
        "liquidity",
        "fetchAndUpdateLPsAPR",
        "lowerCaseAddresses",
        "addressesInGroups",
        "weekAgoTimestamp",
        "blockWeekAgo",
        "allAprs",
        "aprs"
    ],
    "comments": [
        "In case farm is too new to estimate LP APR (i.e. not returned in farmsOneWeekAgo query) - return 0",
        "Some untracked pairs like KUN-QSD will report 0 volume",
        "pids before 250 are inactive farms from v1 and failed v2 migration",
        "Split it into chunks of 30 addresses to avoid gateway timeout",
        "eslint-disable-next-line no-restricted-syntax",
        "eslint-disable-next-line no-await-in-loop"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}