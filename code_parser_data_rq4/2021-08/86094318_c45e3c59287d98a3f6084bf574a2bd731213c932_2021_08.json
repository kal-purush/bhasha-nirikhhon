{
    "identifiers": [
        "FilterParams",
        "Constants",
        "DataResult",
        "DatabaseUtils",
        "DbParams",
        "Logging",
        "Pricing",
        "Tenant",
        "Utils",
        "tenant",
        "pricing",
        "Logging",
        "tenant",
        "MODULE_NAME",
        "DatabaseUtils",
        "tenant",
        "pricing",
        "DatabaseUtils",
        "pricing",
        "pricing",
        "DatabaseUtils",
        "pricingMDB",
        "pricing",
        "tenant",
        "pricing",
        "pricingMDB",
        "Logging",
        "tenant",
        "MODULE_NAME",
        "uniqueTimerID",
        "pricingMDB",
        "tenant",
        "pricingID",
        "Logging",
        "tenant",
        "MODULE_NAME",
        "DatabaseUtils",
        "tenant",
        "tenant",
        "pricingID",
        "Logging",
        "tenant",
        "MODULE_NAME",
        "uniqueTimerID",
        "pricingID",
        "tenant",
        "id",
        "projectFields",
        "PricingStorage",
        "tenant",
        "Constants",
        "projectFields",
        "pricingMDB",
        "pricingMDB",
        "tenant",
        "dbParams",
        "projectFields",
        "Logging",
        "tenant",
        "MODULE_NAME",
        "DatabaseUtils",
        "tenant",
        "dbParams",
        "Utils",
        "dbParams",
        "dbParams",
        "Utils",
        "dbParams",
        "dbParams",
        "Utils",
        "dbParams",
        "filters",
        "dbParams",
        "aggregation",
        "Constants",
        "tenant",
        "aggregation",
        "dbParams",
        "Logging",
        "tenant",
        "MODULE_NAME",
        "uniqueTimerID",
        "pricingsCountMDB",
        "pricingsCountMDB",
        "pricingsCountMDB",
        "aggregation",
        "dbParams",
        "dbParams",
        "aggregation",
        "dbParams",
        "aggregation",
        "dbParams",
        "aggregation",
        "dbParams",
        "DatabaseUtils",
        "aggregation",
        "DatabaseUtils",
        "aggregation",
        "DatabaseUtils",
        "tenant",
        "aggregation",
        "DatabaseUtils",
        "aggregation",
        "projectFields",
        "tenant",
        "aggregation",
        "Logging",
        "tenant",
        "MODULE_NAME",
        "uniqueTimerID",
        "pricingsMDB",
        "pricingsCountMDB",
        "pricingsCountMDB",
        "Constants",
        "pricingsCountMDB",
        "pricingsMDB",
        "projectFields"
    ],
    "literals": [
        "'../../types/GlobalType'",
        "'../../utils/Constants'",
        "'../../types/DataResult'",
        "'./DatabaseUtils'",
        "'../../types/database/DbParams'",
        "'../../utils/Logging'",
        "'../../types/Pricing'",
        "'../../types/Tenant'",
        "'../../utils/Utils'",
        "'PricingStorage'",
        "'savePricing'",
        "'pricings'",
        "'_id'",
        "'after'",
        "'savePricing'",
        "string",
        "'deletePricing'",
        "'pricings'",
        "'_id'",
        "'deletePricing'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'getPricings'",
        "'$ne'",
        "'pricings'",
        "'count'",
        "'getPricings'",
        "'contextID'",
        "'pricings'",
        "'getPricings'"
    ],
    "variables": [
        "MODULE_NAME",
        "uniqueTimerID",
        "pricingMDB",
        "uniqueTimerID",
        "pricingMDB",
        "uniqueTimerID",
        "aggregation",
        "filters",
        "pricingsCountMDB",
        "pricingsMDB"
    ],
    "comments": [
        "Debug",
        "Check Tenant",
        "Check Created/Last Changed By",
        "Save",
        "Debug",
        "Debug",
        "Check Tenant",
        "Delete",
        "Debug",
        "Check Tenant",
        "Clone before updating the values",
        "Check Limit",
        "Check Skip",
        "Create Aggregation",
        "Remove deleted",
        "Limit records?",
        "Always limit the nbr of record to avoid perfs issues",
        "Count Records",
        "Check if only the total count is requested",
        "Return only the count",
        "Remove the limit",
        "Skip",
        "Limit",
        "Handle the ID",
        "Convert Object ID to string",
        "Add Created By / Last Changed By",
        "Project",
        "Read DB",
        "Debug",
        "Ok"
    ],
    "docstrings": [],
    "functions": [
        "savePricing",
        "deletePricing",
        "getPricing",
        "getPricings"
    ],
    "classes": [
        "PricingStorage"
    ]
}