{
    "identifiers": [
        "typing",
        "Union",
        "Optional",
        "networkx",
        "nx",
        "numpy",
        "np",
        "docplex",
        "mp",
        "model",
        "Model",
        "graph_optimization_application",
        "OptimizationApplication",
        "algorithms",
        "OptimizationResult",
        "problems",
        "quadratic_program",
        "QuadraticProgram",
        "translators",
        "from_docplex_mp",
        "OptimizationApplication",
        "num_sites",
        "rng_or_seed",
        "Optional",
        "Union",
        "np",
        "random",
        "Generator",
        "isinstance",
        "rng_or_seed",
        "np",
        "random",
        "Generator",
        "rng_or_seed",
        "np",
        "random",
        "default_rng",
        "rng_or_seed",
        "num_sites",
        "nx",
        "complete_graph",
        "_num_sites",
        "disorder",
        "_",
        "_",
        "edge_data",
        "_graph",
        "edges",
        "data",
        "_rng",
        "choice",
        "QuadraticProgram",
        "Model",
        "name",
        "mdl",
        "binary_var_list",
        "_graph",
        "number_of_nodes",
        "mdl",
        "sum",
        "np",
        "sqrt",
        "_num_sites",
        "_graph",
        "edges",
        "i",
        "j",
        "x",
        "i",
        "x",
        "j",
        "i",
        "j",
        "_graph",
        "edges",
        "mdl",
        "minimize",
        "objective",
        "from_docplex_mp",
        "mdl",
        "result",
        "Union",
        "OptimizationResult",
        "np",
        "ndarray",
        "x",
        "x",
        "_result_to_x",
        "result",
        "configuration",
        "property",
        "nx",
        "Graph",
        "_graph",
        "property",
        "_num_sites"
    ],
    "literals": [
        "r\"\"\"Optimization application of the \"Sherrington Kirkpatrick (SK) model\" [1].\n\n    The SK Hamiltonian over n spins is given as:\n    :math:`H(x)=-1/\\sqrt{n} \\sum_{i<j} w_{i,j}x_ix_j`,\n    where :math:`x_i\\in\\{\\pm 1\\}` is the configuration of spins and\n    :math:`w_{i,j}\\in\\{\\pm 1\\}` is a disorder chosen independently and uniformly at random.\n    Notice that there are other variants of disorders e.g., with :math:`w_{i,j}` chosen from\n    the normal distribution with mean 0 and variance 1.\n\n    References:\n        [1]: Dmitry Panchenko. \"The Sherrington-Kirkpatrick model: an overview\",\n        https://arxiv.org/abs/1211.1094\n    \"\"\"",
        "\"weight\"",
        "\"SK-model\"",
        "\"weight\""
    ],
    "variables": [
        "_rng",
        "_rng",
        "_num_sites",
        "_graph",
        "edge_data",
        "mdl",
        "x",
        "objective",
        "configuration"
    ],
    "comments": [
        "This code is part of Qiskit.",
        "",
        "(C) Copyright IBM 2021.",
        "",
        "This code is licensed under the Apache License, Version 2.0. You may",
        "obtain a copy of this license in the LICENSE.txt file in the root directory",
        "of this source tree or at http://www.apache.org/licenses/LICENSE-2.0.",
        "",
        "Any modifications or derivative works of this code must retain this",
        "copyright notice, and modified files need to carry a notice indicating",
        "that they have been altered from the originals.",
        "we converted the standard H(x)=-1/\\sqrt{n} \\sum w_{ij}x_ix_j, where x_i\\in\\pm 1 to binary."
    ],
    "docstrings": [
        "\"\"\"An application class for the Sherrington Kirkpatrick (SK) model.\"\"\"",
        "\"\"\"\n        Args:\n            num_sites: number of sites\n            rng_or_seed: NumPy pseudo-random number generator or seed for np.random.default_rng(<seed>)\n                or None. None results in usage of np.random.default_rng().\n        \"\"\"",
        "\"\"\"Generate a new disorder of the SK model.\"\"\"",
        "\"\"\"Convert an SK model problem instance into a\n        :class:`~qiskit_optimization.problems.QuadraticProgram`.\n\n        Returns:\n            The :class:`~qiskit_optimization.problems.QuadraticProgram` created\n            from the SK problem instance.\n        \"\"\"",
        "\"\"\"Interpret a result as configuration of spins.\n\n        Args:\n            result : The calculated result of the problem.\n\n        Returns:\n            configuration of spins\n        \"\"\"",
        "\"\"\"Getter of the graph representation.\n        Returns:\n            A graph for a problem.\n        \"\"\"",
        "\"\"\"Getter of the number of sites.\n        Returns:\n            Number of sites.\n        \"\"\""
    ],
    "functions": [
        "disorder",
        "to_quadratic_program",
        "interpret",
        "graph",
        "num_sites"
    ],
    "classes": [
        "SKModel"
    ]
}