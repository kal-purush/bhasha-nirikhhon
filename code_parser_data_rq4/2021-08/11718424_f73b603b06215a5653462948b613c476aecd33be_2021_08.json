{
    "identifiers": [
        "Collections",
        "Generic",
        "FluentAssertions",
        "Execution",
        "Xunit",
        "Xunit",
        "Sdk",
        "FluentAssertions",
        "Specs",
        "Collections",
        "Fact",
        "collection",
        "Should",
        "AllBeAssignableTo",
        "act",
        "Should",
        "Throw",
        "ArgumentNullException",
        "WithParameterName",
        "Fact",
        "AssertionScope",
        "collection",
        "Should",
        "AllBeAssignableTo",
        "act",
        "Should",
        "Throw",
        "XunitException",
        "WithMessage",
        "Fact",
        "collection",
        "Should",
        "AllBeAssignableTo",
        "Fact",
        "collection",
        "Should",
        "AllBeAssignableTo",
        "Which",
        "Should",
        "Equal",
        "Fact",
        "ArgumentException",
        "collection",
        "Should",
        "AllBeAssignableTo",
        "Fact",
        "collection",
        "Should",
        "AllBeAssignableTo",
        "act",
        "Should",
        "Throw",
        "XunitException",
        "WithMessage",
        "Fact",
        "collection",
        "Should",
        "AllBeAssignableTo",
        "act",
        "Should",
        "Throw",
        "XunitException",
        "WithMessage",
        "Fact",
        "Type",
        "ArgumentException",
        "collection",
        "Should",
        "AllBeAssignableTo",
        "Fact",
        "Type",
        "collection",
        "Should",
        "AllBeAssignableTo",
        "act",
        "Should",
        "Throw",
        "XunitException",
        "WithMessage",
        "Fact",
        "collection",
        "Should",
        "AllBeAssignableTo",
        "Fact",
        "ArgumentException",
        "collection",
        "Should",
        "AllBeAssignableTo",
        "Fact",
        "AssertionScope",
        "collection",
        "Should",
        "AllBeAssignableTo",
        "act",
        "Should",
        "Throw",
        "XunitException",
        "WithMessage"
    ],
    "literals": [
        "\"expectedType\"",
        "\"we want to test the failure {0}\"",
        "\"message\"",
        "\"Expected type to be \\\"*.Object\\\" *failure message*, but found collection is <null>.\"",
        "\"2\"",
        "\"because they are of different type\"",
        "\"Expected type to be \\\"System.Int32\\\" because they are of different type, but found \\\"[System.Int32, System.String, System.Int32]\\\".\"",
        "\"because they are of different type\"",
        "\"Expected type to be \\\"System.Int32\\\" because they are of different type, but found a null element.\"",
        "\"because they are of different type\"",
        "\"Expected type to be \\\"System.Int32\\\" because they are of different type, but found \\\"[System.Int32, System.String, System.Int32]\\\".\"",
        "\"we want to test the failure {0}\"",
        "\"message\"",
        "\"Expected type to be \\\"*.Object\\\" *failure message*, but found collection is <null>.\""
    ],
    "variables": [
        "collection",
        "Action",
        "act",
        "collection",
        "Action",
        "act",
        "_",
        "collection",
        "collection",
        "collection",
        "collection",
        "Action",
        "act",
        "collection",
        "Action",
        "act",
        "collection",
        "collection",
        "Action",
        "act",
        "collection",
        "collection",
        "collection",
        "Action",
        "act",
        "_"
    ],
    "comments": [
        "<content>",
        "The AllBeAssignableTo specs.",
        "</content>",
        "Arrange",
        "Act",
        "Assert",
        "Arrange",
        "Act",
        "Assert",
        "Arrange",
        "Act / Assert",
        "Arrange",
        "Act / Assert",
        "Arrange",
        "Act / Assert",
        "Arrange",
        "Act",
        "Assert",
        "Arrange",
        "Act",
        "Assert",
        "Arrange",
        "Act / Assert",
        "Arrange",
        "Act",
        "Assert",
        "Arrange",
        "Act / Assert",
        "Arrange",
        "Act / Assert",
        "Arrange",
        "Act",
        "Assert"
    ],
    "docstrings": [],
    "functions": [
        "When_the_types_in_a_collection_is_matched_against_a_null_type_it_should_throw",
        "When_collection_is_null_then_all_be_assignable_to_should_fail",
        "When_all_of_the_types_in_a_collection_match_expected_type_it_should_succeed",
        "When_matching_a_collection_against_a_type_it_should_return_the_casted_items",
        "When_all_of_the_types_in_a_collection_match_the_type_or_subtype_it_should_succeed",
        "When_one_of_the_types_does_not_match_it_should_throw_with_a_clear_explanation",
        "When_one_of_the_elements_is_null_it_should_throw_with_a_clear_explanation",
        "When_collection_is_of_matching_types_it_should_succeed",
        "When_collection_of_types_contains_one_type_that_does_not_match_it_should_throw_with_a_clear_explanation",
        "When_collection_of_types_and_objects_are_all_of_matching_types_it_should_succeed",
        "When_collection_of_different_types_and_objects_are_all_assignable_to_type_it_should_succeed",
        "When_collection_is_null_then_all_be_assignable_toOfT_should_fail"
    ],
    "classes": [
        "CollectionAssertionSpecs"
    ]
}