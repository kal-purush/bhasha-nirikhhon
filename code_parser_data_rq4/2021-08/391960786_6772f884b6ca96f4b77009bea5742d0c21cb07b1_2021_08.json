{
    "identifiers": [
        "io",
        "github",
        "pascalklassen",
        "pokefuture",
        "com",
        "google",
        "common",
        "Preconditions",
        "io",
        "github",
        "pascalklassen",
        "pokefuture",
        "utility",
        "common",
        "NamedAPIResource",
        "io",
        "github",
        "pascalklassen",
        "pokefuture",
        "utility",
        "APIResourceList",
        "io",
        "github",
        "pascalklassen",
        "pokefuture",
        "utility",
        "NamedAPIResourceList",
        "io",
        "github",
        "pascalklassen",
        "pokefuture",
        "utility",
        "TypeClassHolder",
        "io",
        "github",
        "pascalklassen",
        "pokefuture",
        "utility",
        "annotation",
        "FetchAs",
        "io",
        "github",
        "pascalklassen",
        "pokefuture",
        "utility",
        "annotation",
        "ResourceEntity",
        "io",
        "vertx",
        "core",
        "Future",
        "io",
        "vertx",
        "core",
        "io",
        "vertx",
        "core",
        "buffer",
        "Buffer",
        "io",
        "vertx",
        "ext",
        "web",
        "client",
        "HttpRequest",
        "io",
        "vertx",
        "ext",
        "web",
        "codec",
        "BodyCodec",
        "org",
        "jetbrains",
        "annotations",
        "NotNull",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "java",
        "lang",
        "reflect",
        "Field",
        "java",
        "util",
        "LOGGER",
        "LoggerFactory",
        "getLogger",
        "NotNull",
        "clazz",
        "NotNull",
        "uri",
        "fetchAs",
        "clazz",
        "uri",
        "NotNull",
        "clazz",
        "NotNull",
        "uri",
        "absolute",
        "promise",
        "promise",
        "request",
        "absolute",
        "RequestFactory",
        "newResourceRequest",
        "uri",
        "RequestFactory",
        "newRequest",
        "format",
        "uri",
        "request",
        "BodyCodec",
        "json",
        "clazz",
        "send",
        "ar",
        "ar",
        "succeeded",
        "t",
        "ar",
        "result",
        "body",
        "resolveFetchTypes",
        "clazz",
        "t",
        "promise",
        "complete",
        "t",
        "promise",
        "fail",
        "ar",
        "cause",
        "promise",
        "future",
        "NotNull",
        "clazz",
        "NotNull",
        "uri",
        "fetchResourceList",
        "clazz",
        "uri",
        "SuppressWarnings",
        "NotNull",
        "clazz",
        "NotNull",
        "uri",
        "absolute",
        "Preconditions",
        "checkNotNull",
        "clazz",
        "Preconditions",
        "checkNotNull",
        "uri",
        "promise",
        "promise",
        "request",
        "absolute",
        "RequestFactory",
        "newResourceRequest",
        "uri",
        "RequestFactory",
        "newRequest",
        "format",
        "uri",
        "request",
        "BodyCodec",
        "json",
        "send",
        "ar",
        "ar",
        "succeeded",
        "t",
        "ar",
        "result",
        "body",
        "t",
        "setTypeClass",
        "clazz",
        "resolveFetchTypes",
        "t",
        "promise",
        "complete",
        "t",
        "promise",
        "fail",
        "ar",
        "cause",
        "promise",
        "future",
        "NotNull",
        "clazz",
        "NotNull",
        "uri",
        "fetchNamedResourceList",
        "clazz",
        "uri",
        "SuppressWarnings",
        "NotNull",
        "clazz",
        "NotNull",
        "uri",
        "absolute",
        "Preconditions",
        "checkNotNull",
        "clazz",
        "Preconditions",
        "checkNotNull",
        "uri",
        "promise",
        "promise",
        "request",
        "absolute",
        "RequestFactory",
        "newResourceRequest",
        "uri",
        "RequestFactory",
        "newRequest",
        "format",
        "uri",
        "request",
        "BodyCodec",
        "json",
        "send",
        "ar",
        "ar",
        "succeeded",
        "t",
        "ar",
        "result",
        "body",
        "t",
        "setTypeClass",
        "clazz",
        "resolveFetchTypes",
        "t",
        "promise",
        "complete",
        "t",
        "promise",
        "fail",
        "ar",
        "cause",
        "promise",
        "future",
        "SuppressWarnings",
        "clazz",
        "t",
        "clazz",
        "isAnnotationPresent",
        "t",
        "field",
        "clazz",
        "getDeclaredFields",
        "field",
        "getType",
        "isPrimitive",
        "field",
        "setAccessible",
        "field",
        "get",
        "t",
        "t",
        "resourceList",
        "t",
        "field",
        "get",
        "t",
        "field",
        "get",
        "t",
        "forEach",
        "obj",
        "obj",
        "setTypeClass",
        "resourceList",
        "getTypeClass",
        "resolveFetchTypes",
        "obj",
        "t",
        "resourceList",
        "t",
        "field",
        "get",
        "t",
        "field",
        "get",
        "t",
        "forEach",
        "obj",
        "obj",
        "setTypeClass",
        "resourceList",
        "getTypeClass",
        "resolveFetchTypes",
        "obj",
        "field",
        "isAnnotationPresent",
        "fetchAs",
        "field",
        "getAnnotation",
        "o",
        "field",
        "get",
        "t",
        "o",
        "resources",
        "o",
        "resources",
        "forEach",
        "resource",
        "resource",
        "setTypeClass",
        "fetchAs",
        "value",
        "o",
        "resource",
        "o",
        "resource",
        "setTypeClass",
        "fetchAs",
        "value",
        "LOGGER",
        "error",
        "format",
        "field",
        "getName",
        "clazz",
        "getName",
        "field",
        "get",
        "t",
        "field",
        "get",
        "t",
        "forEach",
        "obj",
        "resolveFetchTypes",
        "obj",
        "getClass",
        "obj",
        "obj",
        "field",
        "get",
        "t",
        "resolveFetchTypes",
        "obj",
        "getClass",
        "obj",
        "e",
        "LOGGER",
        "error",
        "e",
        "getMessage"
    ],
    "literals": [
        "\"/api/v2%s\"",
        "\"unchecked\"",
        "\"rawtypes\"",
        "\"/api/v2%s\"",
        "\"unchecked\"",
        "\"rawtypes\"",
        "\"/api/v2%s\"",
        "\"rawtypes\"",
        "\"unchecked\"",
        "\"Field '%s' in Class '%s' was neither a List nor a TypeClassHolder.\""
    ],
    "variables": [],
    "comments": [
        "LOGGER.info(\"resolve resource list\");",
        "LOGGER.info(\"resolve resource list\");",
        "LOGGER.info(String.format(\"Resolving Fetch Types for Class '%s'\", clazz.getSimpleName()));",
        "LOGGER.info(String.format(\"Inspecting Field '%s'\", field.getName()));",
        "LOGGER.info(\"Class was NamedAPIResourceList\");",
        "LOGGER.info(String.format(\"Annotation was present on Field '%s'\", field.getName()));",
        "LOGGER.info(String.format(\"Field '%s' was type List<TypeClassHolder>\", field.getName()));",
        "LOGGER.info(String.format(\"Field '%s' was type TypeClassHolder\", field.getName()));",
        "LOGGER.info(String.format(\"Field '%s' was a generic List\", field.getName()));",
        "LOGGER.info(String.format(\"Field '%s' was a generic Object\", field.getName()));"
    ],
    "docstrings": [
        "* If you can see this. I am crazy. I need medical help. Please contact me."
    ],
    "functions": [
        "PokemonService",
        "fetchAs",
        "fetchAs",
        "fetchResourceList",
        "fetchResourceList",
        "fetchNamedResourceList",
        "fetchNamedResourceList",
        "resolveFetchTypes"
    ],
    "classes": [
        "PokemonService"
    ]
}