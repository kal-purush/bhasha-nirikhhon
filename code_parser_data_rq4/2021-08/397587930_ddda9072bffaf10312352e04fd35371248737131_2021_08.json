{
    "identifiers": [
        "SDP",
        "log2",
        "SDP",
        "dual",
        "fractions",
        "itertools",
        "product",
        "math",
        "log2",
        "pow",
        "ncpol2sdpa",
        "ncp",
        "a",
        "b",
        "x",
        "y",
        "result",
        "a",
        "b",
        "x",
        "y",
        "result",
        "fractions",
        "Fraction",
        "a",
        "b",
        "pow",
        "x",
        "y",
        "x",
        "y",
        "result",
        "WMAX",
        "WCGLMP",
        "WCGLMPs",
        "WCGLMP",
        "Ax",
        "Ax",
        "ncp",
        "generate_measurements",
        "A_config",
        "By",
        "By",
        "ncp",
        "generate_measurements",
        "B_config",
        "ncp",
        "generate_operators",
        "hermitian",
        "substitutions",
        "update",
        "ncp",
        "projective_measurement_constraints",
        "A",
        "B",
        "a",
        "b",
        "x",
        "y",
        "product",
        "a",
        "b",
        "cglmp_expr",
        "game_pred",
        "a",
        "b",
        "x",
        "y",
        "A",
        "x",
        "A",
        "x",
        "B",
        "y",
        "B",
        "y",
        "a",
        "b",
        "cglmp_expr",
        "game_pred",
        "a",
        "b",
        "x",
        "y",
        "A",
        "x",
        "A",
        "x",
        "B",
        "y",
        "b",
        "a",
        "b",
        "cglmp_expr",
        "game_pred",
        "a",
        "b",
        "x",
        "y",
        "A",
        "x",
        "a",
        "B",
        "y",
        "B",
        "y",
        "cglmp_expr",
        "game_pred",
        "a",
        "b",
        "x",
        "y",
        "A",
        "x",
        "a",
        "B",
        "y",
        "b",
        "cglmp_expr",
        "WCGLMP",
        "cglmp_expr",
        "w_exp",
        "w",
        "W",
        "Ax",
        "A",
        "a",
        "Ax",
        "substitutions",
        "update",
        "w",
        "a",
        "a",
        "w",
        "By",
        "B",
        "b",
        "By",
        "substitutions",
        "update",
        "w",
        "b",
        "b",
        "w",
        "operator_ineqs",
        "W",
        "W",
        "W",
        "operator_ineqs",
        "w",
        "w",
        "W",
        "localizing_monos",
        "moment_eqs",
        "moment_ineqs",
        "score_con",
        "operator_eqs",
        "operator_ineqs",
        "w",
        "W",
        "Ax",
        "A",
        "a",
        "Ax",
        "By",
        "B",
        "b",
        "By",
        "extra_monos",
        "a",
        "b",
        "w",
        "extra_monos",
        "a",
        "w",
        "By",
        "B",
        "b",
        "By",
        "extra_monos",
        "b",
        "w",
        "x",
        "A",
        "x",
        "W",
        "A",
        "x",
        "W",
        "A",
        "x",
        "A",
        "x",
        "W",
        "ncp",
        "flatten",
        "A",
        "B",
        "W",
        "ncp",
        "SdpRelaxation",
        "ops",
        "verbose",
        "normalized",
        "parallel",
        "sdp",
        "get_relaxation",
        "level",
        "LEVEL",
        "equalities",
        "operator_equalities",
        "inequalities",
        "operator_inequalities",
        "momentequalities",
        "moment_equalities",
        "momentinequalities",
        "moment_inequalities",
        "objective",
        "obj",
        "substitutions",
        "substitutions",
        "extramonomials",
        "extra_monos",
        "localizing_monomials",
        "localizing_monos",
        "sdp",
        "solve",
        "w_exp",
        "x",
        "sdp",
        "dual",
        "ent",
        "sdp",
        "result_sum",
        "ent",
        "sdp",
        "results",
        "WCGLMP",
        "result_sum",
        "results"
    ],
    "literals": [
        "'A'",
        "'B'",
        "'W'",
        "'mosek'",
        "f\"For a clgmp score {w_exp} and input x={x} we find an sdp dual value of {sdp.dual} \"",
        "f\"and with that an entropy of {ent(sdp)}.\""
    ],
    "variables": [
        "result",
        "LEVEL",
        "WMAX",
        "results",
        "WCGLMPs",
        "results",
        "A_config",
        "B_config",
        "A",
        "B",
        "W",
        "substitutions",
        "moment_ineqs",
        "moment_eqs",
        "operator_eqs",
        "operator_ineqs",
        "localizing_monos",
        "cglmp_expr",
        "w_exp",
        "score_con",
        "moment_equalities",
        "moment_inequalities",
        "operator_equalities",
        "operator_inequalities",
        "extra_monos",
        "result_sum",
        "obj",
        "ops",
        "sdp"
    ],
    "comments": [
        "Returns the entropy of the computed solution",
        "CGLMP game dimension 3",
        "X = Y = {0, 1}",
        "A = {0, 1, 2}",
        "B = {0, 1, 2}",
        "Probabilistic winning function",
        "w(a,b,x,y,) = [a-b = xy mod 3] + 1/2 * [a-b = (-1)^{x \\oplus y} + xy mod 3]",
        "Global level of NPA relaxation",
        "Maximum CGLMP score, calculated by myself using ncpol2sdpa_cglmp_3_winprob.py",
        "Measurement operators",
        "op_eqs are processed last so need to add three Nones to end",
        "Adding the constraints for the measurement operators",
        "Defining the cglmp inequality",
        "every input has probability 1/4",
        "constraint on the cglmp score",
        "Commutation constraints for W (I think the projective msmt thing already includes ones for A,B)",
        "\\sum W_{a,b} <= I_{R'}",
        "positivity constraints for W_{a,b}",
        "We must specify localizing mmonomials for the constraints of the",
        "problem but by specifying None ncpol2sdpa uses a default set",
        "We now specify some extra monomials to include in the relaxation",
        "Objective function"
    ],
    "docstrings": [
        "\"\"\"\nIn this script we calculate H_min(A|X) for the CGLMP_3 game constrained by some\nCGLMP_3 winning probability.\n\"\"\"",
        "\"\"\"obj = A[x][0]*B[y][0]*W[0] + \\\n            A[x][0]*B[y][1]*W[1] + \\\n            A[x][0]*(1-B[y][0]-B[y][1])*W[2] + \\\n            A[x][1]*B[y][0]*W[3] + \\\n            A[x][1]*B[y][1]*W[4] + \\\n            A[x][1]*(1-B[y][0]-B[y][1])*W[5] + \\\n            (1-A[x][0]-A[x][1])*B[y][0]*W[6] + \\\n            (1-A[x][0]-A[x][1])*B[y][1]*W[7] + \\\n            (1-A[x][0]-A[x][1])*(1-B[y][0]-B[y][1])*W[8]\"\"\""
    ],
    "functions": [
        "ent",
        "game_pred"
    ],
    "classes": []
}