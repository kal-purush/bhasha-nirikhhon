{
    "identifiers": [
        "LitElement",
        "html",
        "css",
        "TemplateResult",
        "nothing",
        "state",
        "property",
        "query",
        "queryAll",
        "customElement",
        "repeat",
        "Minisearch",
        "LionOption",
        "title",
        "heading",
        "isSubsection",
        "isSubsection",
        "html",
        "title",
        "heading",
        "html",
        "title",
        "url",
        "url",
        "html",
        "customElement",
        "LitElement",
        "css",
        "queryAll",
        "query",
        "query",
        "state",
        "LitDevSearch",
        "LitDevSearch",
        "LitDevSearch",
        "fetch",
        "LitDevSearch",
        "Minisearch",
        "searchIndexJson",
        "setTimeout",
        "e",
        "e",
        "query",
        "query",
        "LitDevSearch",
        "trimmedQuery",
        "trimmedQuery",
        "LitDevSearch",
        "trimmedQuery",
        "e",
        "e",
        "el",
        "el",
        "el",
        "firstSuggestion",
        "firstSuggestion",
        "url",
        "URL",
        "URL",
        "url",
        "pageUrl",
        "pageUrl",
        "mods",
        "searchUrl",
        "mods",
        "searchUrl",
        "html",
        "repeat",
        "v",
        "v",
        "html",
        "relativeUrl",
        "title",
        "heading",
        "isSubsection",
        "relativeUrl",
        "SEARCH_ICON",
        "customElement",
        "LionOption",
        "property",
        "property",
        "property",
        "property",
        "css",
        "html",
        "titleAndHeadingCard",
        "isApiLink",
        "html",
        "nothing"
    ],
    "literals": [
        "'lit'",
        "'lit/decorators.js'",
        "'lit/directives/repeat.js'",
        "'minisearch'",
        "'@lion/combobox/define'",
        "'@lion/listbox'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'text'",
        "string",
        "string",
        "<div class=\"title-and-header\">\n      <span class=\"title\">${title}</span><span class=\"header\">${heading}</span>\n    </div>",
        "<span class=\"header\">${title}</span>",
        "string",
        "'docs/api/'",
        "<svg height=\"24\" width=\"24\" aria-hidden=\"true\">\n  <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n  <path\n    class=\"search-icon\"\n    fill=\"#6f6f6f\"\n    d=\"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0016 9.5 6.5 6.5 0 109.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n  ></path>\n</svg>",
        "'litdev-search'",
        ":host {\n      display: block;\n      padding: 0.3em 0.5em;\n      box-sizing: border-box;\n      position: relative;\n\n      /* Subtle vertical layout placement. */\n      margin-top: 4px;\n    }\n\n    svg {\n      margin-left: 0.3em;\n      position: absolute;\n      right: 14px;\n      top: 2px;\n      /* If you press the search icon you will focus the input behind it. */\n      pointer-events: none;\n\n      transition: opacity 1s;\n    }\n\n    lion-combobox > lion-options {\n      /* Fix the dimensions of the suggestion dropdown */\n      max-height: min(400px, 100vh - 60px);\n      width: 400px;\n      box-shadow: 0 1px 5px 0 rgb(0 0 0 / 10%);\n    }\n\n    lion-combobox {\n      color: #6f6f6f;\n      font-size: 0.9em;\n      font-weight: 600;\n    }\n\n    /* Mobile responsive search */\n    @media (max-width: 864px) {\n      lion-combobox {\n        color: white;\n      }\n\n      lion-combobox input::placeholder {\n        color: inherit;\n      }\n\n      svg .search-icon {\n        fill: white;\n      }\n\n      :host {\n        padding-left: 0;\n      }\n\n      lion-combobox > lion-options {\n        /* Fix the dimensions of the suggestion dropdown */\n        max-height: min(400px, 100vh - 60px);\n        width: 240px;\n        margin-left: -20px;\n      }\n    }",
        "string",
        "''",
        "'litdev-search-option'",
        "'lion-combobox input'",
        "'svg'",
        "'/searchIndex.json'",
        "'id'",
        "'title'",
        "'heading'",
        "'text'",
        "'title'",
        "'heading'",
        "'relativeUrl'",
        "'isSubsection'",
        "'requestIdleCallback'",
        "'Search'",
        "''",
        "string",
        "''",
        "'Enter'",
        "string",
        "'mods'",
        "'mods'",
        "''",
        "''",
        "'opacity'",
        "'0'",
        "'opacity'",
        "'1'",
        "<lion-combobox\n        name=\"lit-search\"\n        autocomplete=\"none\"\n        @input=${this.handleInput}\n        @keydown=${this.handleKeyDown}\n        @focus=${this.onFocus}\n        @blur=${this.onBlur}\n      >\n        ${repeat(\n          this.suggestions,\n          (v) => v.id,\n          ({\n            relativeUrl,\n            title,\n            heading,\n            isSubsection,\n          }) => html` <!-- Set choiceValue to the current searchInput to override autofill behavior. -->\n            <litdev-search-option\n              .choiceValue=\"${this.searchText}\"\n              .relativeUrl=\"${relativeUrl}\"\n              .title=\"${title}\"\n              .heading=\"${heading}\"\n              .isSubsection=\"${isSubsection}\"\n              @click=\"${() => this.navigate(relativeUrl)}\"\n            ></litdev-search-option>`\n        )}\n      </lion-combobox>\n      ${SEARCH_ICON}",
        "<!-- Set choiceValue to the current searchInput to override autofill behavior. -->\n            <litdev-search-option\n              .choiceValue=\"${this.searchText}\"\n              .relativeUrl=\"${relativeUrl}\"\n              .title=\"${title}\"\n              .heading=\"${heading}\"\n              .isSubsection=\"${isSubsection}\"\n              @click=\"${() => this.navigate(relativeUrl)}\"\n            ></litdev-search-option>",
        "'litdev-search-option'",
        "''",
        "''",
        "''",
        ".suggestion {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          height: 50px;\n          padding: 0.2em 2em;\n          border-bottom: 1px solid #ddd;\n          background-color: white;\n          color: black;\n          font-size: 16px;\n          cursor: pointer;\n        }\n\n        .title-and-header {\n          display: flex;\n          flex-direction: column;\n          width: 100%;\n        }\n\n        .title,\n        .header {\n          text-overflow: ellipsis;\n          white-space: nowrap;\n          overflow: hidden;\n        }\n\n        .header {\n          font-size: 0.9em;\n          font-weight: 600;\n        }\n\n        .api-tag {\n          color: white;\n          background-color: #6e6e6e;\n          padding: 0 0.5em;\n          margin-left: 1em;\n          font-weight: 600;\n        }",
        "<div class=\"suggestion\">\n        ${titleAndHeadingCard(this.title, this.heading, this.isSubsection)}\n        ${isApiLink(this.relativeUrl)\n          ? html`<span class=\"api-tag\">API</span>`\n          : nothing}\n      </div>",
        "<span class=\"api-tag\">API</span>",
        "'litdev-search'",
        "'litdev-search-option'"
    ],
    "variables": [
        "SEARCH_ICON",
        "searchIndexJson",
        "trimmedQuery",
        "firstSuggestion",
        "pageUrl",
        "searchUrl",
        "mods"
    ],
    "comments": [
        "We already have a search index.",
        "Minisearch intialization config must exactly match",
        "`/lit-dev-tools/src/search/plugin.ts` Minisearch options.",
        "If a search query has already been written, fill suggestions.",
        "Late load search index when page is idle.",
        "Navigate to checked element.",
        "No element is selected. Fallback behavior is to navigate to the first",
        "suggestion."
    ],
    "docstrings": [
        "* @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause",
        "* Representation of each document indexed by Minisearch.\n *\n * Duplicated interface that must match `/lit-dev-tools/src/search/plugin.ts`",
        "* Suggestion returned by Minisearch when there is a matching search result.",
        "* Returns a page suggestion TemplateResult with title and optional heading.",
        "* Used to mark a search page suggestion with the API chip.",
        "* Search input component that can fuzzy search the site.",
        "* Text value in search input.",
        "* Site search index.",
        "* Flag so we only load the index once.",
        "* Search suggestion options.",
        "* Search input within lion-combobox.",
        "* Reference the search icon.",
        "* Suggestions visible to the user rendered under the search input field.",
        "* Load and deserialize search index into `LitDevSearch.siteSearchIndex`.",
        "* Load the search index.",
        "* Repopulate suggestions with each input event.",
        "* Populate suggestion dropdown from query.\n   *\n   * An empty query clears suggestions.",
        "* Handle key press with side effects.\n   *  - \"Enter\" finds the selected option and navigates to the page.",
        "* Navigate to the provided url. Manually clears the input value as the\n   * default behavior when navigating to a fragment on the page is not\n   * refreshing the UI.",
        "* We hide the search icon on focus to prevent text overlapping the icon.",
        "* A single search option suggestion."
    ],
    "functions": [
        "titleAndHeadingCard",
        "isApiLink",
        "loadSearchIndex",
        "firstUpdated",
        "handleInput",
        "querySearch",
        "handleKeyDown",
        "navigate",
        "onFocus",
        "onBlur",
        "render",
        "styles",
        "render"
    ],
    "classes": [
        "LitDevSearch",
        "LitdevSearchOption"
    ]
}