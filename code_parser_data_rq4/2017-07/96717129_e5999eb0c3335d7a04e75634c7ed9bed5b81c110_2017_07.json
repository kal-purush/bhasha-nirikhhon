{
    "identifiers": [
        "jemsdi",
        "FakeTypeA",
        "FakeTypeB",
        "FakeTypeC",
        "IContainer",
        "describe",
        "jemsdi",
        "jemsdi",
        "before",
        "kernel",
        "containerBAlias",
        "kernel",
        "containerCAlias",
        "containerBAlias",
        "kernel",
        "defaultContainer",
        "jemsdi",
        "FakeTypeA",
        "defaultContainer",
        "jemsdi",
        "FakeTypeA",
        "kernel",
        "containerBAlias",
        "containerB",
        "jemsdi",
        "FakeTypeB",
        "containerB",
        "jemsdi",
        "FakeTypeB",
        "kernel",
        "containerCAlias",
        "containerC",
        "jemsdi",
        "FakeTypeC",
        "containerC",
        "jemsdi",
        "FakeTypeC",
        "it",
        "kernel",
        "kernel",
        "resolvedObject",
        "FakeTypeA",
        "it",
        "kernel",
        "kernel",
        "resolvedObject",
        "FakeTypeA",
        "it",
        "kernel",
        "containerBAlias",
        "kernel",
        "resolvedObject",
        "FakeTypeB",
        "resolvedObject",
        "FakeTypeA",
        "it",
        "kernel",
        "containerBAlias",
        "kernel",
        "resolvedObject",
        "FakeTypeB",
        "it",
        "kernel",
        "containerCAlias",
        "kernel",
        "resolvedObject",
        "FakeTypeC",
        "resolvedObject",
        "FakeTypeA",
        "resolvedObject",
        "FakeTypeB",
        "it",
        "kernel",
        "containerCAlias",
        "kernel",
        "resolvedObject",
        "FakeTypeC"
    ],
    "literals": [
        "'assert'",
        "\"../distribution/Index\"",
        "'./fake_types/FakeTypeA'",
        "'./fake_types/FakeTypeB'",
        "\"./fake_types/FakeTypeC\"",
        "\"../distribution/IContainer\"",
        "'with fluent supported containeraized resolution'",
        "'containerB'",
        "'containerC'",
        "'default'",
        "'fakeType'",
        "'fakeTypeA'",
        "'fakeType'",
        "'fakeTypeB'",
        "'fakeType'",
        "'fakeTypeC'",
        "'should resolve an instance of FakeTypeA with fakeType alias because is registered in the container that is currently in use.'",
        "'fakeType'",
        "'The resolved type is not: FakeTypeA'",
        "'should resolve an instance of FakeTypeA with fakeTypeA alias because is registered.'",
        "'fakeTypeA'",
        "'The resolved type is not: FakeTypeA'",
        "'should resolve an instance of FakeTypeB with fakeTypeB alias because is registered and can resolve A as a dependency of B because is supported by the default container.'",
        "'fakeTypeB'",
        "'The resolved type is not: FakeTypeB'",
        "'The resolved A dependency type is not: FakeTypeA'",
        "'should resolve an instance of FakeTypeB with fakeType alias because is registered in the container that is currently in use.'",
        "'fakeType'",
        "'The resolved type is not: FakeTypeB'",
        "'should resolve an instance of FakeTypeC with fakeTypeC alias because is registered and can resolve A and B as a dependency of C because is supported by the containerB that is supported by the default container.'",
        "'fakeTypeC'",
        "'The resolved type is not: FakeTypeC'",
        "'The resolved A dependency type is not: FakeTypeA'",
        "'The resolved B dependency type is not: FakeTypeB'",
        "'should resolve an instance of FakeTypeC with fakeType alias because is registered in the container that is currently in use.'",
        "'fakeType'",
        "'The resolved type is not: FakeTypeC'"
    ],
    "variables": [
        "kernel",
        "containerBAlias",
        "containerCAlias",
        "defaultContainer",
        "containerB",
        "containerC",
        "resolvedObject",
        "resolvedObject",
        "resolvedObject",
        "resolvedObject",
        "resolvedObject",
        "resolvedObject"
    ],
    "comments": [
        "<reference path=\"../typings/index.d.ts\" />"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}