{
    "identifiers": [
        "com",
        "upload",
        "java",
        "io",
        "File",
        "java",
        "io",
        "java",
        "io",
        "PrintWriter",
        "java",
        "util",
        "javax",
        "servlet",
        "ServletException",
        "javax",
        "servlet",
        "annotation",
        "WebServlet",
        "javax",
        "servlet",
        "http",
        "HttpServlet",
        "javax",
        "servlet",
        "http",
        "HttpServletRequest",
        "javax",
        "servlet",
        "http",
        "HttpServletResponse",
        "javax",
        "servlet",
        "http",
        "Part",
        "org",
        "apache",
        "commons",
        "fileupload",
        "FileItem",
        "org",
        "apache",
        "commons",
        "fileupload",
        "disk",
        "DiskFileItemFactory",
        "org",
        "apache",
        "commons",
        "fileupload",
        "servlet",
        "ServletFileUpload",
        "serialVersionUID",
        "UPLOAD_DIRECTORY",
        "MEMORY_THRESHOLD",
        "MAX_FILE_SIZE",
        "MAX_REQUEST_SIZE",
        "request",
        "response",
        "ServletFileUpload",
        "isMultipartContent",
        "request",
        "writer",
        "response",
        "getWriter",
        "writer",
        "writer",
        "flush",
        "approvallettersfilepart",
        "request",
        "getPart",
        "approvallettersfilepart",
        "factory",
        "factory",
        "setSizeThreshold",
        "MEMORY_THRESHOLD",
        "factory",
        "setRepository",
        "getProperty",
        "upload",
        "factory",
        "upload",
        "setFileSizeMax",
        "MAX_FILE_SIZE",
        "upload",
        "setSizeMax",
        "MAX_REQUEST_SIZE",
        "uploadPath",
        "uploadPath",
        "uploadDir",
        "uploadPath",
        "uploadDir",
        "exists",
        "uploadDir",
        "mkdir",
        "SuppressWarnings",
        "formItems",
        "upload",
        "parseRequest",
        "request",
        "formItems",
        "formItems",
        "size",
        "item",
        "formItems",
        "item",
        "isFormField",
        "fileName",
        "item",
        "getName",
        "getName",
        "filePath",
        "uploadPath",
        "File",
        "separator",
        "fileName",
        "storeFile",
        "filePath",
        "filePath",
        "fileName",
        "item",
        "write",
        "storeFile",
        "request",
        "setAttribute",
        "ex",
        "request",
        "setAttribute",
        "ex",
        "getMessage",
        "getServletContext",
        "getRequestDispatcher",
        "forward",
        "request",
        "response"
    ],
    "literals": [
        "\"upload\"",
        "\"Error: Form must has enctype=multipart/form-data.\"",
        "\"approvalletters\"",
        "\"part\"",
        "\"java.io.tmpdir\"",
        "\"fileUpload\"",
        "\"unchecked\"",
        "\"file path\"",
        "\"file name=\"",
        "\"message\"",
        "\"Upload has been done successfully!\"",
        "\"message\"",
        "\"There was an error: \"",
        "\"/message.jsp\""
    ],
    "variables": [],
    "comments": [
        "location to store file uploaded",
        "upload settings",
        "3MB",
        "40MB",
        "50MB",
        "checks if the request actually contains upload file",
        "if not, we stop here",
        "configures upload settings",
        "sets memory threshold - beyond which files are stored in disk",
        "sets temporary location to store files",
        "sets maximum size of upload file",
        "sets maximum size of request (include file + form data)",
        "constructs the directory path to store upload file",
        "this path is relative to application's directory",
        "creates the directory if it does not exist",
        "parses the request's content to extract file data",
        "iterates over form's fields",
        "processes only fields that are not form fields",
        "saves the file on disk",
        "redirects client to message page"
    ],
    "docstrings": [
        "* A Java servlet that handles file upload from client.\n *\n * @author www.codejava.net",
        "* Upon receiving file upload submission, parses the request to read\n     * upload data and saves the file on disk."
    ],
    "functions": [
        "doPost"
    ],
    "classes": [
        "FileUploadServlet"
    ]
}