{
    "identifiers": [
        "java",
        "util",
        "java",
        "util",
        "regex",
        "java",
        "io",
        "javax",
        "swing",
        "st",
        "abc",
        "count",
        "aa",
        "aa",
        "st",
        "size",
        "aa",
        "st",
        "get",
        "aa",
        "abc",
        "count",
        "count",
        "path",
        "st",
        "x",
        "st",
        "get",
        "st",
        "size",
        "y",
        "path",
        "add",
        "y",
        "y",
        "add",
        "st",
        "get",
        "st",
        "size",
        "path",
        "i",
        "i",
        "x",
        "size",
        "i",
        "st",
        "size",
        "path",
        "x",
        "get",
        "i",
        "get",
        "st",
        "get",
        "st",
        "size",
        "j",
        "j",
        "x",
        "get",
        "i",
        "size",
        "j",
        "pres",
        "st",
        "x",
        "get",
        "i",
        "get",
        "j",
        "x",
        "get",
        "i",
        "get",
        "j",
        "st",
        "add",
        "x",
        "get",
        "i",
        "get",
        "j",
        "y",
        "path",
        "add",
        "y",
        "lm",
        "lm",
        "st",
        "size",
        "lm",
        "y",
        "add",
        "st",
        "get",
        "lm",
        "st",
        "remove",
        "st",
        "size",
        "st",
        "add",
        "x",
        "get",
        "i",
        "get",
        "j",
        "path",
        "recur",
        "path",
        "st",
        "x",
        "st",
        "size",
        "st",
        "remove",
        "st",
        "size",
        "path",
        "args",
        "x",
        "i",
        "i",
        "i",
        "y",
        "x",
        "add",
        "y",
        "x",
        "get",
        "add",
        "x",
        "get",
        "add",
        "x",
        "get",
        "add",
        "x",
        "get",
        "add",
        "x",
        "get",
        "add",
        "x",
        "get",
        "add",
        "x",
        "get",
        "add",
        "x",
        "get",
        "add",
        "x",
        "get",
        "add",
        "x",
        "get",
        "add",
        "x",
        "get",
        "add",
        "x",
        "get",
        "add",
        "x",
        "get",
        "add",
        "x",
        "get",
        "add",
        "x",
        "get",
        "add",
        "x",
        "get",
        "add",
        "x",
        "get",
        "add",
        "x",
        "get",
        "add",
        "x",
        "get",
        "add",
        "i",
        "i",
        "x",
        "size",
        "i",
        "j",
        "j",
        "x",
        "get",
        "i",
        "size",
        "j",
        "x",
        "get",
        "i",
        "get",
        "j",
        "path",
        "st",
        "i",
        "i",
        "i",
        "st",
        "add",
        "x",
        "get",
        "i",
        "get",
        "path",
        "recur",
        "path",
        "st",
        "x",
        "st",
        "count",
        "i",
        "i",
        "path",
        "size",
        "i",
        "count",
        "j",
        "j",
        "path",
        "get",
        "i",
        "size",
        "j",
        "path",
        "get",
        "i",
        "get",
        "j"
    ],
    "literals": [
        "\"D\"",
        "\"D\"",
        "\"A\"",
        "\"C\"",
        "\"A\"",
        "\"B\"",
        "\"B\"",
        "\"E\"",
        "\"A\"",
        "\"B\"",
        "\"C\"",
        "\"D\"",
        "\"A\"",
        "\"B\"",
        "\"D\"",
        "\"A\"",
        "\"B\"",
        "\"E\"",
        "\"C\"",
        "\"A\"",
        "\"B\"",
        "\" ----> \"",
        "\"Path \"",
        "\": \"",
        "\" \""
    ],
    "variables": [],
    "comments": [
        "2 denotes that a path can have upto 2 times a single initial state. You can change this number if you want to have more or less than 2 times a single initial state",
        "D because d is the final state",
        "checks if the string is already present in the stack",
        "D because d is the final state",
        "List of list of string which stores where each state can reach",
        "make a new list of strings",
        "This means A can go to C,A and B",
        "This means B can go to E,A and B",
        "This means C can go to D,A and B",
        "This means D can go to A and B",
        "This means E can go to C,A and B",
        "print function which shows where each state can reach",
        "list of list of strings to store the path",
        "act as a stack",
        "for loop conditions less than 2 because there are only 2 initial states",
        "Variable used to display the path number",
        "print function that prints the path"
    ],
    "docstrings": [
        "State A and State B are the initial States.\nState D is the final state."
    ],
    "functions": [
        "pres",
        "recur",
        "main"
    ],
    "classes": [
        "pathFinder"
    ]
}