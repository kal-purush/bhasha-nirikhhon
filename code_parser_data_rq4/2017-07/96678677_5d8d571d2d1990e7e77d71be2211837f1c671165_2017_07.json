{
    "identifiers": [
        "os",
        "sys",
        "socket",
        "errno",
        "cStringIO",
        "StringIO",
        "cgi",
        "FCGI_UNKNOWN_TYPE",
        "FCGI_GET_VALUES",
        "msg",
        "open",
        "errf",
        "write",
        "msg",
        "errf",
        "close",
        "FCGI_VERSION_1",
        "FCGI_UNKNOWN_TYPE",
        "FCGI_NULL_REQUEST_ID",
        "sock",
        "ord",
        "sock",
        "recv",
        "version",
        "recType",
        "s",
        "s",
        "s",
        "reqId",
        "s",
        "s",
        "s",
        "s",
        "len",
        "content",
        "contentLength",
        "sock",
        "recv",
        "contentLength",
        "len",
        "content",
        "content",
        "data",
        "paddingLength",
        "sock",
        "recv",
        "paddingLength",
        "content",
        "recType",
        "FCGI_BEGIN_REQUEST",
        "ord",
        "c",
        "ord",
        "c",
        "ord",
        "c",
        "recType",
        "FCGI_UNKNOWN_TYPE",
        "ord",
        "c",
        "recType",
        "FCGI_GET_VALUES",
        "recType",
        "FCGI_PARAMS",
        "pos",
        "len",
        "c",
        "readPair",
        "c",
        "pos",
        "values",
        "value",
        "recType",
        "FCGI_END_REQUEST",
        "ord",
        "c",
        "b",
        "b",
        "b",
        "b",
        "ord",
        "c",
        "sock",
        "content",
        "recType",
        "FCGI_BEGIN_REQUEST",
        "chr",
        "role",
        "chr",
        "role",
        "chr",
        "flags",
        "recType",
        "FCGI_UNKNOWN_TYPE",
        "chr",
        "unknownType",
        "recType",
        "FCGI_GET_VALUES",
        "recType",
        "FCGI_PARAMS",
        "i",
        "values",
        "keys",
        "content",
        "writePair",
        "i",
        "values",
        "i",
        "recType",
        "FCGI_END_REQUEST",
        "appStatus",
        "chr",
        "v",
        "chr",
        "v",
        "chr",
        "v",
        "chr",
        "v",
        "content",
        "chr",
        "protocolStatus",
        "len",
        "content",
        "cLen",
        "eLen",
        "cLen",
        "version",
        "recType",
        "reqId",
        "reqId",
        "cLen",
        "cLen",
        "padLen",
        "joinfields",
        "chr",
        "hdr",
        "sock",
        "send",
        "hdr",
        "content",
        "padLen",
        "s",
        "pos",
        "ord",
        "s",
        "pos",
        "pos",
        "nameLen",
        "ord",
        "s",
        "pos",
        "pos",
        "pos",
        "nameLen",
        "b",
        "b",
        "b",
        "ord",
        "s",
        "pos",
        "pos",
        "valueLen",
        "ord",
        "s",
        "pos",
        "pos",
        "pos",
        "valueLen",
        "b",
        "b",
        "b",
        "s",
        "pos",
        "pos",
        "nameLen",
        "s",
        "pos",
        "nameLen",
        "pos",
        "nameLen",
        "valueLen",
        "pos",
        "nameLen",
        "valueLen",
        "name",
        "value",
        "len",
        "name",
        "l",
        "chr",
        "l",
        "chr",
        "l",
        "chr",
        "l",
        "chr",
        "l",
        "chr",
        "l",
        "len",
        "value",
        "l",
        "s",
        "chr",
        "l",
        "s",
        "chr",
        "l",
        "chr",
        "l",
        "chr",
        "l",
        "chr",
        "l",
        "s",
        "name",
        "value",
        "r",
        "conn",
        "r",
        "recType",
        "FCGI_GET_VALUES",
        "FCGI_GET_VALUES_RESULT",
        "FCGI_MAX_CONNS",
        "FCGI_MAX_REQS",
        "FCGI_MPXS_CONNS",
        "i",
        "r",
        "values",
        "keys",
        "vars",
        "has_key",
        "i",
        "vars",
        "i",
        "vars",
        "r",
        "writeRecord",
        "conn",
        "_isFCGI",
        "_isFCGI",
        "_init",
        "_startup",
        "isFCGI",
        "inp",
        "err",
        "env",
        "sys",
        "stdin",
        "sys",
        "stdout",
        "sys",
        "stderr",
        "os",
        "environ",
        "os",
        "environ",
        "has_key",
        "split",
        "os",
        "environ",
        "strip",
        "good_addrs",
        "conn",
        "_sock",
        "accept",
        "good_addrs",
        "addr",
        "good_addrs",
        "error",
        "remaining",
        "record",
        "r",
        "readRecord",
        "conn",
        "r",
        "recType",
        "ManagementTypes",
        "HandleManTypes",
        "r",
        "conn",
        "r",
        "reqId",
        "record",
        "FCGI_UNKNOWN_TYPE",
        "r",
        "recType",
        "r2",
        "writeRecord",
        "conn",
        "r",
        "reqId",
        "requestId",
        "r",
        "recType",
        "FCGI_BEGIN_REQUEST",
        "r",
        "recType",
        "FCGI_BEGIN_REQUEST",
        "requestId",
        "r",
        "recType",
        "FCGI_BEGIN_REQUEST",
        "r",
        "reqId",
        "r",
        "role",
        "FCGI_AUTHORIZER",
        "r",
        "role",
        "FCGI_RESPONDER",
        "r",
        "role",
        "FCGI_FILTER",
        "r",
        "recType",
        "FCGI_PARAMS",
        "r",
        "content",
        "remaining",
        "i",
        "r",
        "values",
        "keys",
        "env",
        "r",
        "values",
        "i",
        "r",
        "recType",
        "FCGI_STDIN",
        "r",
        "content",
        "remaining",
        "stdin",
        "r",
        "content",
        "r",
        "recType",
        "FCGI_DATA",
        "r",
        "content",
        "remaining",
        "data",
        "r",
        "content",
        "StringIO",
        "stdin",
        "StringIO",
        "StringIO",
        "StringIO",
        "data",
        "Finish",
        "status",
        "haveFinished",
        "err",
        "seek",
        "seek",
        "record",
        "FCGI_STDERR",
        "requestId",
        "err",
        "read",
        "data",
        "data",
        "getNextChunk",
        "data",
        "chunk",
        "r",
        "writeRecord",
        "conn",
        "r",
        "writeRecord",
        "conn",
        "FCGI_STDOUT",
        "read",
        "data",
        "getNextChunk",
        "data",
        "chunk",
        "r",
        "writeRecord",
        "conn",
        "r",
        "writeRecord",
        "conn",
        "record",
        "FCGI_END_REQUEST",
        "requestId",
        "status",
        "FCGI_REQUEST_COMPLETE",
        "r",
        "writeRecord",
        "conn",
        "conn",
        "close",
        "env",
        "has_key",
        "upper",
        "env",
        "method",
        "cgi",
        "FieldStorage",
        "environ",
        "env",
        "keep_blank_values",
        "cgi",
        "FieldStorage",
        "fp",
        "inp",
        "environ",
        "env",
        "keep_blank_values",
        "data",
        "data",
        "data",
        "chunk",
        "data",
        "FCGI",
        "_init",
        "socket",
        "fromfd",
        "sys",
        "stdin",
        "fileno",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_STREAM",
        "s",
        "getpeername",
        "socket",
        "error",
        "err",
        "errmsg",
        "err",
        "errno",
        "ENOTCONN",
        "_isFCGI",
        "_sock",
        "s",
        "isFCGI",
        "Accept",
        "counter",
        "req",
        "getFieldStorage",
        "atoi",
        "fs",
        "value",
        "size",
        "doc",
        "append",
        "doc",
        "append",
        "counter",
        "doc",
        "append",
        "join",
        "doc",
        "req",
        "write",
        "len",
        "doc",
        "req",
        "write",
        "doc",
        "req",
        "Finish",
        "traceback",
        "open",
        "traceback",
        "print_exc",
        "file",
        "f",
        "_test"
    ],
    "literals": [
        "'fcgi.error'",
        "\"Append a string to /tmp/err\"",
        "'/tmp/err'",
        "'a+'",
        "'\\n'",
        "\"Class representing FastCGI records\"",
        "\"\"",
        "\"\"",
        "'\\000'",
        "'\\000'",
        "\"\"",
        "'\\000'",
        "''",
        "'\\000'",
        "'FCGI_MAX_CONNS'",
        "'FCGI_MAX_REQS'",
        "'FCGI_MPXS_CONNS'",
        "'FCGI_WEB_SERVER_ADDRS'",
        "'FCGI_WEB_SERVER_ADDRS'",
        "','",
        "\"\"",
        "\"\"",
        "'Connection from invalid server!'",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "'GET'",
        "'REQUEST_METHOD'",
        "'REQUEST_METHOD'",
        "'GET'",
        "'size'",
        "'*'",
        "'<HTML><HEAD><TITLE>FCGI TestApp</TITLE></HEAD>\\n<BODY>\\n'",
        "'<H2>FCGI TestApp</H2><P>'",
        "'<b>request count</b> = %d<br>'",
        "'</BODY></HTML>\\n'",
        "''",
        "'Content-length: %s\\r\\n'",
        "'Content-type: text/html\\r\\n'",
        "'Cache-Control: no-cache\\r\\n'",
        "'\\r\\n'",
        "'traceback'",
        "'w'",
        "'__main__'"
    ],
    "variables": [
        "FCGI_MAX_REQS",
        "FCGI_MAX_CONNS",
        "FCGI_VERSION_1",
        "FCGI_MPXS_CONNS",
        "FCGI_BEGIN_REQUEST",
        "FCGI_ABORT_REQUEST",
        "FCGI_END_REQUEST",
        "FCGI_PARAMS",
        "FCGI_STDIN",
        "FCGI_STDOUT",
        "FCGI_STDERR",
        "FCGI_DATA",
        "FCGI_GET_VALUES",
        "FCGI_GET_VALUES_RESULT",
        "FCGI_UNKNOWN_TYPE",
        "FCGI_MAXTYPE",
        "ManagementTypes",
        "FCGI_NULL_REQUEST_ID",
        "FCGI_KEEP_CONN",
        "FCGI_RESPONDER",
        "FCGI_AUTHORIZER",
        "FCGI_FILTER",
        "FCGI_REQUEST_COMPLETE",
        "FCGI_CANT_MPX_CONN",
        "FCGI_OVERLOADED",
        "FCGI_UNKNOWN_ROLE",
        "error",
        "errf",
        "version",
        "recType",
        "reqId",
        "content",
        "s",
        "paddingLength",
        "contentLength",
        "content",
        "data",
        "content",
        "padding",
        "c",
        "role",
        "flags",
        "unknownType",
        "values",
        "pos",
        "name",
        "value",
        "pos",
        "name",
        "b",
        "appStatus",
        "protocolStatus",
        "content",
        "content",
        "content",
        "content",
        "content",
        "v",
        "content",
        "content",
        "cLen",
        "eLen",
        "padLen",
        "hdr",
        "hdr",
        "nameLen",
        "pos",
        "b",
        "pos",
        "nameLen",
        "valueLen",
        "pos",
        "b",
        "pos",
        "valueLen",
        "l",
        "s",
        "s",
        "l",
        "s",
        "s",
        "r",
        "recType",
        "v",
        "vars",
        "v",
        "i",
        "r",
        "values",
        "_isFCGI",
        "_init",
        "_sock",
        "haveFinished",
        "haveFinished",
        "good_addrs",
        "good_addrs",
        "good_addrs",
        "addr",
        "stdin",
        "data",
        "env",
        "requestId",
        "remaining",
        "r",
        "r2",
        "r2",
        "recType",
        "r2",
        "unknownType",
        "requestId",
        "remaining",
        "remaining",
        "remaining",
        "remaining",
        "i",
        "remaining",
        "stdin",
        "remaining",
        "data",
        "inp",
        "sys",
        "stdin",
        "err",
        "sys",
        "stderr",
        "sys",
        "stdout",
        "data",
        "haveFinished",
        "r",
        "r",
        "recType",
        "r",
        "reqId",
        "data",
        "chunk",
        "data",
        "r",
        "content",
        "r",
        "content",
        "r",
        "recType",
        "data",
        "chunk",
        "data",
        "r",
        "content",
        "r",
        "content",
        "r",
        "r",
        "recType",
        "r",
        "reqId",
        "r",
        "appStatus",
        "r",
        "protocolStatus",
        "method",
        "method",
        "chunk",
        "data",
        "Accept",
        "_init",
        "s",
        "_isFCGI",
        "_sock",
        "counter",
        "req",
        "counter",
        "fs",
        "size",
        "doc",
        "doc",
        "doc",
        "f"
    ],
    "comments": [
        "Copyright 1999-2014. Parallels IP Holdings GmbH. All Rights Reserved.",
        "!@@PYTHON@@",
        "------------------------------------------------------------------------",
        "Copyright (c) 1998 by Total Control Software",
        "All Rights Reserved",
        "------------------------------------------------------------------------",
        "",
        "Module Name:  fcgi.py",
        "",
        "Description:  Handles communication with the FastCGI module of the",
        "web server without using the FastCGI developers kit, but",
        "will also work in a non-FastCGI environment, (straight CGI.)",
        "This module was originally fetched from someplace on the",
        "Net (I don't remember where and I can't find it now...) and",
        "has been significantly modified to fix several bugs, be more",
        "readable, more robust at handling large CGI data and return",
        "document sizes, and also to fit the model that we had previously",
        "used for FastCGI.",
        "",
        "WARNING:  If you don't know what you are doing, don't tinker with this",
        "module!",
        "",
        "Creation Date:    1/30/98 2:59:04PM",
        "",
        "License:      This is free software.  You may use this software for any",
        "purpose including modification/redistribution, so long as",
        "this header remains intact and that you do not claim any",
        "rights of ownership or authorship of this software.  This",
        "software has been tested, but no warranty is expressed or",
        "implied.",
        "",
        "------------------------------------------------------------------------",
        "---------------------------------------------------------------------------",
        "Set various FastCGI constants",
        "Maximum number of requests that can be handled",
        "Supported version of the FastCGI protocol",
        "Boolean: can this application multiplex connections?",
        "Record types",
        "Types of management records",
        "Masks for flags component of FCGI_BEGIN_REQUEST",
        "Values for role component of FCGI_BEGIN_REQUEST",
        "Values for protocolStatus component of FCGI_END_REQUEST",
        "Request completed nicely",
        "This app can't multiplex",
        "New request rejected; too busy",
        "Role value not known",
        "---------------------------------------------------------------------------",
        "The following function is used during debugging; it isn't called",
        "anywhere at the moment",
        "---------------------------------------------------------------------------",
        "----------------------------------------",
        "Parse the content information",
        "----------------------------------------",
        "align to an 8-byte boundary",
        "---------------------------------------------------------------------------",
        "---------------------------------------------------------------------------",
        "---------------------------------------------------------------------------",
        "---------------------------------------------------------------------------",
        "---------------------------------------------------------------------------",
        "assume it is until we find out for sure",
        "---------------------------------------------------------------------------",
        "Remove whitespace",
        "Check if the connection is from a legal address",
        "Oh, poopy.  It's a management record of an unknown",
        "type.  Signal the error.",
        "Charge onwards",
        "Ignore requests that aren't active",
        "If we're already doing a request, ignore further BEGIN_REQUESTs",
        "Begin a new request",
        "end of while remaining:",
        "Terminate stream",
        "Terminate stream",
        "alias for backwards compatibility",
        "---------------------------------------------------------------------------",
        "must be a non-fastCGI environment",
        "---------------------------------------------------------------------------",
        "doc.append('<b>pid</b> = %s<br>' % os.getpid())",
        "if req.env.has_key('CONTENT_LENGTH'):",
        "cl = string.atoi(req.env['CONTENT_LENGTH'])",
        "doc.append('<br><b>POST data (%s):</b><br><pre>' % cl)",
        "keys = fs.keys()",
        "keys.sort()",
        "for k in keys:",
        "val = fs[k]",
        "if type(val) == type([]):",
        "doc.append('    <b>%-15s :</b>  %s\\n' % (k, val))",
        "else:",
        "doc.append('    <b>%-15s :</b>  %s\\n' % (k, val.value))",
        "doc.append('</pre>')",
        "",
        "",
        "doc.append('<P><HR><P><pre>')",
        "keys = req.env.keys()",
        "keys.sort()",
        "for k in keys:",
        "doc.append('<b>%-20s :</b>  %s\\n' % (k, req.env[k]))",
        "doc.append('\\n</pre><P><HR>\\n')",
        "f.write('%s' % doc)",
        "import pdb",
        "pdb.run('_test()')"
    ],
    "docstrings": [],
    "functions": [
        "error",
        "readRecord",
        "writeRecord",
        "readPair",
        "writePair",
        "HandleManTypes",
        "isFCGI",
        "__del__",
        "Finish",
        "getFieldStorage",
        "getNextChunk",
        "_startup",
        "_test"
    ],
    "classes": [
        "record",
        "FCGI"
    ]
}