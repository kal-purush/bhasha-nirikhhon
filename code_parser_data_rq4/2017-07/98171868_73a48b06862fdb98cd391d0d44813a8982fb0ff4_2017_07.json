{
    "identifiers": [
        "root",
        "factory",
        "define",
        "define",
        "define",
        "factory",
        "exports",
        "factory",
        "require",
        "root",
        "factory",
        "root",
        "root",
        "ResizeSensor",
        "element",
        "element",
        "element",
        "element",
        "parseFloat",
        "fontSize",
        "element",
        "value",
        "value",
        "numbers",
        "numbers",
        "value",
        "parseFloat",
        "value",
        "units",
        "value",
        "value",
        "getEmSize",
        "element",
        "value",
        "getEmSize",
        "value",
        "value",
        "units",
        "value",
        "chooser",
        "vw",
        "vh",
        "value",
        "element",
        "element",
        "option",
        "option",
        "option",
        "option",
        "idx",
        "option",
        "width",
        "height",
        "attrValues",
        "key",
        "key",
        "option",
        "key",
        "value",
        "convertToPx",
        "option",
        "actualValue",
        "option",
        "width",
        "height",
        "attrName",
        "option",
        "option",
        "attrValue",
        "option",
        "actualValue",
        "value",
        "attrValue",
        "option",
        "option",
        "actualValue",
        "value",
        "attrValue",
        "option",
        "attrValues",
        "attrName",
        "attrValues",
        "attrName",
        "attrValue",
        "attrValues",
        "attrName",
        "attrValue",
        "attrValues",
        "attrName",
        "attrValue",
        "k",
        "attributes",
        "attributes",
        "k",
        "attrValues",
        "attributes",
        "k",
        "attributes",
        "k",
        "attrValues",
        "attributes",
        "k",
        "attributes",
        "k",
        "element",
        "options",
        "element",
        "element",
        "options",
        "element",
        "SetupInformation",
        "element",
        "element",
        "options",
        "element",
        "ResizeSensor",
        "element",
        "element",
        "element",
        "trackingActive",
        "elements",
        "element",
        "elements",
        "element",
        "selector",
        "mode",
        "property",
        "value",
        "allQueries",
        "mode",
        "allQueries",
        "mode",
        "allQueries",
        "mode",
        "property",
        "allQueries",
        "mode",
        "property",
        "allQueries",
        "mode",
        "property",
        "value",
        "allQueries",
        "mode",
        "property",
        "value",
        "selector",
        "allQueries",
        "mode",
        "property",
        "value",
        "selector",
        "query",
        "query",
        "$$",
        "query",
        "$$",
        "query",
        "jQuery",
        "query",
        "jQuery",
        "query",
        "query",
        "getQuery",
        "mode",
        "allQueries",
        "allQueries",
        "mode",
        "property",
        "allQueries",
        "mode",
        "allQueries",
        "mode",
        "property",
        "value",
        "allQueries",
        "mode",
        "property",
        "allQueries",
        "mode",
        "property",
        "value",
        "query",
        "allQueries",
        "mode",
        "property",
        "value",
        "elements",
        "i",
        "j",
        "i",
        "setupElement",
        "elements",
        "i",
        "mode",
        "property",
        "value",
        "element",
        "i",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "children",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "sources",
        "src",
        "minWidth",
        "rules",
        "rule",
        "minWidth",
        "defaultImageId",
        "children",
        "element",
        "i",
        "element",
        "i",
        "lastActiveImage",
        "defaultImageId",
        "i",
        "children",
        "children",
        "i",
        "rules",
        "i",
        "element",
        "rules",
        "i",
        "imageToDisplay",
        "i",
        "imageToDisplay",
        "imageToDisplay",
        "defaultImageId",
        "lastActiveImage",
        "imageToDisplay",
        "loadedImages",
        "imageToDisplay",
        "Image",
        "image",
        "children",
        "imageToDisplay",
        "sources",
        "imageToDisplay",
        "children",
        "lastActiveImage",
        "children",
        "imageToDisplay",
        "loadedImages",
        "imageToDisplay",
        "lastActiveImage",
        "imageToDisplay",
        "image",
        "sources",
        "imageToDisplay",
        "children",
        "lastActiveImage",
        "children",
        "imageToDisplay",
        "lastActiveImage",
        "imageToDisplay",
        "children",
        "imageToDisplay",
        "sources",
        "imageToDisplay",
        "element",
        "ResizeSensor",
        "element",
        "check",
        "check",
        "trackingActive",
        "elements",
        "element",
        "getQuery",
        "query",
        "elements",
        "i",
        "j",
        "i",
        "attachResponsiveImage",
        "elements",
        "i",
        "css",
        "css",
        "css",
        "match",
        "regex",
        "css",
        "smatch",
        "match",
        "match",
        "attrs",
        "match",
        "attrMatch",
        "attrRegex",
        "attrs",
        "queueQuery",
        "smatch",
        "attrMatch",
        "attrMatch",
        "attrMatch",
        "rules",
        "rules",
        "rules",
        "rules",
        "rules",
        "rules",
        "rules",
        "extractQuery",
        "rules",
        "rules",
        "i",
        "j",
        "i",
        "rules",
        "i",
        "selector",
        "rules",
        "i",
        "rules",
        "i",
        "selector",
        "selector",
        "extractQuery",
        "selector",
        "selector",
        "selector",
        "extractQuery",
        "selector",
        "rules",
        "i",
        "readRules",
        "rules",
        "i",
        "rules",
        "i",
        "rules",
        "i",
        "readRules",
        "rules",
        "i",
        "withTracking",
        "trackingActive",
        "withTracking",
        "withTracking",
        "i",
        "j",
        "i",
        "readRules",
        "i",
        "i",
        "i",
        "e",
        "e",
        "e",
        "defaultCssInjected",
        "style",
        "style",
        "style",
        "defaultCssInjected",
        "findElementQueriesElements",
        "findResponsiveImages",
        "withTracking",
        "withTracking",
        "trackingActive",
        "element",
        "elements",
        "ElementQueries",
        "element",
        "elements",
        "ElementQueries",
        "withTracking",
        "ElementQueries",
        "withTracking",
        "ElementQueries",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "ElementQueries",
        "ElementQueries",
        "ElementQueries",
        "ElementQueries",
        "ElementQueries",
        "ElementQueries",
        "ElementQueries",
        "callback",
        "callback",
        "navigator",
        "setInterval",
        "callback",
        "clearInterval",
        "DOMLoadTimer",
        "callback",
        "ElementQueries",
        "domLoaded",
        "ElementQueries",
        "ElementQueries"
    ],
    "literals": [
        "\"function\"",
        "'./ResizeSensor.js'",
        "\"object\"",
        "'./ResizeSensor.js'",
        "'undefined'",
        "\"px\"",
        "\"em\"",
        "\"rem\"",
        "\"vw\"",
        "\"vh\"",
        "\"vmin\"",
        "\"vmax\"",
        "\"vmin\"",
        "\"min\"",
        "\"max\"",
        "','",
        "'min-width'",
        "'min-height'",
        "'max-width'",
        "'max-height'",
        "'width'",
        "'-'",
        "''",
        "'min'",
        "'max'",
        "''",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "'undefined'",
        "'undefined'",
        "'undefined'",
        "','",
        "'undefined'",
        "'undefined'",
        "'No document.querySelectorAll, jQuery or Mootools\\'s $$ found.'",
        "'img'",
        "'min-width'",
        "'data-min-width'",
        "'data-src'",
        "'url'",
        "'block'",
        "'none'",
        "'none'",
        "'block'",
        "'none'",
        "'block'",
        "'[data-responsive-image],[responsive-image]'",
        "'\"'",
        "''",
        "'string'",
        "'min-width'",
        "'max-width'",
        "'min-height'",
        "'max-height'",
        "'min-width'",
        "'max-width'",
        "'undefined'",
        "'SecurityError'",
        "'style'",
        "'text/css'",
        "'[responsive-image] > img, [data-responsive-image] {overflow: hidden; padding: 0; } [responsive-image] > img, [data-responsive-image] > img { width: 100%;}'",
        "'head'",
        "'withTracking is not enabled. We can not detach elements since we don not store it.'",
        "'Use ElementQueries.withTracking = true; before domready or call ElementQueryes.update(true).'",
        "'DOMContentLoaded'"
    ],
    "variables": [
        "ElementQueries",
        "trackingActive",
        "elements",
        "fontSize",
        "numbers",
        "units",
        "vw",
        "vh",
        "chooser",
        "key",
        "option",
        "width",
        "height",
        "value",
        "actualValue",
        "attrValues",
        "attrValue",
        "attrName",
        "idx",
        "attributes",
        "allQueries",
        "query",
        "query",
        "elements",
        "i",
        "j",
        "children",
        "rules",
        "sources",
        "defaultImageId",
        "lastActiveImage",
        "loadedImages",
        "minWidth",
        "src",
        "rule",
        "imageToDisplay",
        "i",
        "image",
        "query",
        "elements",
        "i",
        "j",
        "regex",
        "attrRegex",
        "match",
        "smatch",
        "selector",
        "i",
        "j",
        "defaultCssInjected",
        "i",
        "j",
        "style",
        "element",
        "domLoaded",
        "DOMLoadTimer"
    ],
    "comments": [
        "Viewport units!",
        "According to http://quirksmode.org/mobile/tableViewport.html",
        "documentElement.clientWidth/Height gets us the most reliable info",
        "for now, not supporting physical units (since they are just a set number of px)",
        "or ex/ch (getting accurate measurements is hard)",
        "extract current dimensions",
        "var minHeight = element.children[i].getAttribute('min-height') || element.children[i].getAttribute('data-min-height');",
        "no rule matched, show default",
        "image change",
        "image has not been loaded yet, we need to load the image first in memory to prevent flash of",
        "no content",
        "make sure for initial check call the .src is set correctly",
        "element queries",
        "responsive image",
        "console.log('detached already', element);",
        "Internet Explorer",
        "@cc_on\n         @if (@_win32 || @_win64)\n         document.write('<script id=\"ieScriptLoad\" defer src=\"//:\"><\\/script>');\n         document.getElementById('ieScriptLoad').onreadystatechange = function() {\n         if (this.readyState == 'complete') {\n         callback();\n         }\n         };\n         @end @",
        "Mozilla, Chrome, Opera",
        "Safari, iCab, Konqueror",
        "Other web browsers"
    ],
    "docstrings": [
        "* Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.",
        "*\n     * @type {Function}\n     * @constructor",
        "*\n         * @param element\n         * @returns {Number}",
        "*\n         * @copyright https://github.com/Mr0grog/element-query/blob/master/LICENSE\n         *\n         * @param {HTMLElement} element\n         * @param {*} value\n         * @returns {*}",
        "*\n         * @param {HTMLElement} element\n         * @constructor",
        "* @param {Object} option {mode: 'min|max', property: 'width|height', value: '123px'}",
        "* Extracts the computed width/height and sets to min/max- attribute.",
        "* @param {HTMLElement} element\n         * @param {Object}      options",
        "* @param {String} selector\n         * @param {String} mode min|max\n         * @param {String} property width|height\n         * @param {String} value",
        "* Start the magic. Go through all collected rules (readRules()) and attach the resize-listener.",
        "*\n         * @param {HTMLElement} element",
        "* @param {String} css",
        "* @param {CssRule[]|String} rules",
        "* Searches all css rules and setups the event listener to all elements with element query rules..\n         *\n         * @param {Boolean} withTracking allows and requires you to use detach, since we store internally all used elements\n         *                               (no garbage collection possible if you don not call .detach() first)",
        "*\n         * @param {Boolean} withTracking allows and requires you to use detach, since we store internally all used elements\n         *                               (no garbage collection possible if you don not call .detach() first)",
        "*\n     * @param {Boolean} withTracking allows and requires you to use detach, since we store internally all used elements\n     *                               (no garbage collection possible if you don not call .detach() first)",
        "* Removes all sensor and elementquery information from the element.\n     *\n     * @param {HTMLElement} element"
    ],
    "functions": [
        "getEmSize",
        "convertToPx",
        "SetupInformation",
        "setupElement",
        "queueQuery",
        "getQuery",
        "findElementQueriesElements",
        "attachResponsiveImage",
        "check",
        "findResponsiveImages",
        "extractQuery",
        "readRules"
    ],
    "classes": []
}