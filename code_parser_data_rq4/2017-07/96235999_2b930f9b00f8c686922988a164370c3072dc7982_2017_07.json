{
    "identifiers": [
        "Joi",
        "reach",
        "assertWithSchema",
        "overrideMethodProperty",
        "Joi",
        "Joi",
        "Joi",
        "schemas",
        "Joi",
        "locale",
        "language",
        "assertWithSchema",
        "schemas",
        "locale",
        "internals",
        "locale",
        "internals",
        "locale",
        "language",
        "locale",
        "supressWarning",
        "locale",
        "internals",
        "assertWithSchema",
        "locale",
        "schemas",
        "locale",
        "internals",
        "internals",
        "locale",
        "supressWarning",
        "locale",
        "Joi",
        "Joi",
        "Joi",
        "addLocaleData",
        "Joi",
        "Joi",
        "setDefaultLocale",
        "process",
        "process",
        "Joi",
        "process",
        "Joi",
        "overrideMethodProperty",
        "anyPrototype",
        "superMethod",
        "validateWrapper",
        "Joi",
        "value",
        "options",
        "Joi",
        "callback",
        "reach",
        "options",
        "reach",
        "internals",
        "locale",
        "locale",
        "internals",
        "reach",
        "reach",
        "internals",
        "locale",
        "language",
        "language",
        "options",
        "options",
        "options",
        "options",
        "mapValidationErrorItem",
        "error",
        "Joi",
        "error",
        "error",
        "error",
        "error",
        "mapValidationErrorItem",
        "reach",
        "language",
        "error",
        "template",
        "error",
        "template",
        "error",
        "template",
        "error",
        "template",
        "error",
        "errors",
        "errors",
        "mapValidationErrorItem",
        "superMethod",
        "wrappedSchema",
        "value",
        "options",
        "callback",
        "locale",
        "internals",
        "locale",
        "superMethod",
        "value",
        "options",
        "callback",
        "overrideMethodProperty",
        "anyPrototype",
        "superMethod",
        "checkOptionsWrapper",
        "options",
        "Joi",
        "assertWithSchema",
        "locale",
        "schemas",
        "superMethod",
        "options",
        "Joi",
        "injectLocale"
    ],
    "literals": [
        "'joi'",
        "'./utils'",
        "'locale'",
        "string",
        "locale ${locale} is already registered! The previous data will be overrided.",
        "string",
        "locale ${locale} is not registered! This operation will be igrnored.",
        "'_locales'",
        "'string'",
        "'.'",
        "'_validateWithOptions'",
        "'locale'",
        "'_settings.locale'",
        "_settings.language.errors",
        "${locale}.errors",
        "'object'",
        "'function'",
        "'string'",
        "locale ${locale} is not registered! Given option will be ignored.",
        "'checkOptions'"
    ],
    "variables": [
        "internals",
        "schemas",
        "anyPrototype",
        "locale",
        "language",
        "mapValidationErrorItem",
        "template",
        "wrappedSchema"
    ],
    "comments": [
        "assert arguments",
        "unset default locale",
        "assert arguments",
        "add joi-i18n helper methods to the root Joi object",
        "set default locales if available",
        "extract prototype of Joi.Any",
        "override internal _validateWithOptions of Joi.Any",
        "get locale from options and remove from options",
        "override locale wrapper if exists",
        "pick language from global locale or validator._settings",
        "use given settings first",
        "use global locale settings second",
        "wrap error processor using Joi.error method",
        "map child error item",
        "get template function or string",
        "return descriptor",
        "call the original validate func",
        "override internal checkOptions of Joi.Any",
        "assert arguments",
        "validate option using original checkOptions",
        "return Joi itself",
        "export injected Joi"
    ],
    "docstrings": [],
    "functions": [
        "addLocaleData",
        "setDefaultLocale",
        "injectLocale"
    ],
    "classes": []
}