{
    "identifiers": [
        "es",
        "hiiberia",
        "simpatico",
        "filters",
        "java",
        "io",
        "javax",
        "servlet",
        "Filter",
        "javax",
        "servlet",
        "FilterChain",
        "javax",
        "servlet",
        "FilterConfig",
        "javax",
        "servlet",
        "ServletException",
        "javax",
        "servlet",
        "ServletRequest",
        "javax",
        "servlet",
        "ServletResponse",
        "javax",
        "servlet",
        "http",
        "HttpServletRequest",
        "javax",
        "servlet",
        "http",
        "HttpServletResponse",
        "java",
        "io",
        "BufferedReader",
        "java",
        "io",
        "InputStreamReader",
        "java",
        "net",
        "HttpURLConnection",
        "java",
        "net",
        "URL",
        "java",
        "util",
        "Base64",
        "org",
        "apache",
        "log4j",
        "Logger",
        "es",
        "hiiberia",
        "simpatico",
        "rest",
        "SimpaticoResourceUtils",
        "es",
        "hiiberia",
        "simpatico",
        "utils",
        "SimpaticoProperties",
        "filterConfig",
        "Logger",
        "getRootLogger",
        "info",
        "request",
        "response",
        "filterChain",
        "ipClient",
        "request",
        "getRemoteAddr",
        "Logger",
        "getRootLogger",
        "info",
        "ipClient",
        "httpRequest",
        "request",
        "SimpaticoProperties",
        "aacUse",
        "proxyRealIp",
        "proxyRealIp",
        "SimpaticoResourceUtils",
        "getRealIPHeader",
        "httpRequest",
        "Logger",
        "getRootLogger",
        "info",
        "ipClient",
        "proxyRealIp",
        "ipClient",
        "proxyRealIp",
        "SimpaticoProperties",
        "ipsAllowed",
        "contains",
        "ipClient",
        "Logger",
        "getRootLogger",
        "debug",
        "httpRequest",
        "getMethod",
        "filterChain",
        "doFilter",
        "request",
        "response",
        "Logger",
        "getRootLogger",
        "debug",
        "ipClient",
        "httpRequest",
        "getMethod",
        "Logger",
        "getRootLogger",
        "info",
        "httpRequest",
        "getMethod",
        "httpRequest",
        "getMethod",
        "equalsIgnoreCase",
        "authRequest",
        "httpRequest",
        "getHeader",
        "Logger",
        "getRootLogger",
        "debug",
        "authRequest",
        "authRequest",
        "splitAuthRequest",
        "authRequest",
        "split",
        "splitAuthRequest",
        "length",
        "basicAuth",
        "SimpaticoProperties",
        "aacGetAuthUser",
        "SimpaticoProperties",
        "aacGetAuthPass",
        "basicAuth",
        "getBytes",
        "encoded",
        "Base64",
        "getEncoder",
        "encodeToString",
        "Logger",
        "getRootLogger",
        "info",
        "basicAuth",
        "encoded",
        "splitAuthRequest",
        "encoded",
        "equals",
        "splitAuthRequest",
        "filterChain",
        "doFilter",
        "request",
        "response",
        "Logger",
        "getRootLogger",
        "info",
        "encoded",
        "splitAuthRequest",
        "url",
        "SimpaticoProperties",
        "aacUrlServer",
        "SimpaticoProperties",
        "aacPathServer",
        "obj",
        "url",
        "con",
        "obj",
        "openConnection",
        "con",
        "setRequestMethod",
        "con",
        "setRequestProperty",
        "httpRequest",
        "getHeader",
        "con",
        "setRequestProperty",
        "con",
        "setRequestProperty",
        "httpRequest",
        "getHeader",
        "responseCode",
        "con",
        "getResponseCode",
        "Logger",
        "getRootLogger",
        "debug",
        "url",
        "httpRequest",
        "getHeader",
        "Logger",
        "getRootLogger",
        "debug",
        "responseCode",
        "con",
        "getInputStream",
        "inputLine",
        "responseHttp",
        "inputLine",
        "readLine",
        "responseHttp",
        "append",
        "inputLine",
        "close",
        "Logger",
        "getRootLogger",
        "debug",
        "responseHttp",
        "toString",
        "responseCode",
        "responseHttp",
        "toString",
        "equalsIgnoreCase",
        "Logger",
        "getRootLogger",
        "debug",
        "filterChain",
        "doFilter",
        "request",
        "response",
        "Logger",
        "getRootLogger",
        "debug",
        "responseCode",
        "responseHttp",
        "toString",
        "response",
        "resetBuffer",
        "response",
        "getOutputStream",
        "write",
        "getBytes",
        "hsr",
        "response",
        "hsr",
        "setStatus",
        "filterChain",
        "doFilter",
        "request",
        "response",
        "Logger",
        "getRootLogger",
        "info"
    ],
    "literals": [
        "\"INIT SIMPATICO AUTHENTICATION FILTER\"",
        "\"[Auth filter] IP request: \"",
        "\"[Auth filter] Looks like there is a proxy server. Changing IP (\"",
        "\") to 'real ip header' (\"",
        "\")\"",
        "\"[Auth filter] IP exists in whitelist. Method: \"",
        "\"[Auth filter] IP doesnt exists in whitelist. IP: \"",
        "\". Method: \"",
        "\"[Auth filter] Using filter. Method: \"",
        "\"GET\"",
        "\"Authorization\"",
        "\"[Auth filter] AuthRequest: \"",
        "\" \"",
        "\":\"",
        "\"UTF-8\"",
        "\"[Auth filter]  My user/pass to encode: \"",
        "\". Encoded: \"",
        "\". Recv: \"",
        "\"[Auth filter] Basic auth dont match (\"",
        "\" recv: \"",
        "\"?scope\"",
        "\"GET\"",
        "\"User-Agent\"",
        "\"User-Agent\"",
        "\"Content-Type\"",
        "\"application/json\"",
        "\"Authorization\"",
        "\"Authorization\"",
        "\"[Auth filter] Sending 'GET' request to URL : \"",
        "\" with token: \"",
        "\"Authorization\"",
        "\"[Auth filter] Response Code : \"",
        "\"[Auth filter] Response: \"",
        "\"true\"",
        "\"[Auth filter] Token authorized\"",
        "\"[Auth filter] Token unauthorized. response code: \"",
        "\". Response page: \"",
        "\"{\\\"message\\\": \\\"Access Denied\\\"}\"",
        "\"DESTROY SIMPATICO AUTHENTICATION FILTER\""
    ],
    "variables": [
        "proxyRealIp",
        "inputLine"
    ],
    "comments": [
        "Logger.getRootLogger().debug(SimpaticoResourceUtils.getHeaders(httpRequest));   // Print all headers",
        "Check allowed IPs",
        "If null -> Not using proxy (or header in simpatico.properties dont match)",
        "User/Pass base64 compare",
        "AuthRequest = Basic <token>",
        "POST/PUT/DELETE",
        "Do Get request to know if token is valid",
        "optional default is GET",
        "add request header",
        "print result"
    ],
    "docstrings": [],
    "functions": [
        "init",
        "doFilter",
        "destroy"
    ],
    "classes": [
        "AuthenticationFilter"
    ]
}