{
    "identifiers": [
        "NMEAProxy",
        "java",
        "io",
        "java",
        "io",
        "OutputStream",
        "java",
        "net",
        "ServerSocket",
        "java",
        "net",
        "Socket",
        "myServerSocket",
        "starter",
        "akt",
        "mysocket",
        "myoutputstream",
        "isRestart",
        "myServerSocket",
        "akt",
        "starter",
        "isRestart",
        "myServerSocket",
        "myServerSocket",
        "akt",
        "akt",
        "starter",
        "starter",
        "isRestart",
        "isRestart",
        "Override",
        "mysocket",
        "myServerSocket",
        "accept",
        "toString",
        "myoutputstream",
        "mysocket",
        "getOutputStream",
        "starter",
        "incrementAktive",
        "isRestart",
        "starter",
        "nextclient",
        "akt",
        "e",
        "e",
        "akt",
        "wait",
        "e",
        "akt",
        "a",
        "myoutputstream",
        "write",
        "a",
        "e",
        "akt",
        "e",
        "stopme",
        "starter",
        "decrementAktive",
        "starter",
        "restartConnection",
        "akt",
        "e",
        "mysocket",
        "close",
        "myoutputstream",
        "close",
        "toString",
        "notify",
        "e",
        "e"
    ],
    "literals": [
        "\"Verbindung akzeptiert: \"",
        "\"Thread waiting: \"",
        "\"Thread finished: \"",
        "\"Akt: \"",
        "\"ClientConnection Exception in Write: \"",
        "\"Class ClientConnection Socket close for Thread: \"",
        "\"Class ClientConnection exception Close Socket Connection: \""
    ],
    "variables": [
        "myServerSocket",
        "starter",
        "akt",
        "mysocket",
        "myoutputstream",
        "isRestart"
    ],
    "comments": [
        "Startet eine neu Instanz von Client Connection",
        "wenn sich ein Client verbunden hat und es kein Restart ist",
        "myoutputstream.write(a);",
        "System.out.println(\"Was auch immer\");"
    ],
    "docstrings": [
        "* To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.",
        "*\n * @author Bernhard Bagyura"
    ],
    "functions": [
        "ClientConnection",
        "run",
        "write",
        "stopme"
    ],
    "classes": [
        "ClientConnection"
    ]
}