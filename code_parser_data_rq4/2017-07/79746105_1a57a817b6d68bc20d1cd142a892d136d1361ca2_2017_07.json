{
    "identifiers": [
        "opv_tasks",
        "task",
        "TaskStatusCode",
        "opv_api_client",
        "ressources",
        "Filter",
        "opv_tasks",
        "utils",
        "find_task",
        "dm_c",
        "db_c",
        "task_name",
        "inputData",
        "find_task",
        "task_name",
        "task_name",
        "client_requestor",
        "db_c",
        "opv_directorymanager_client",
        "dm_c",
        "task",
        "run",
        "options",
        "inputData",
        "options",
        "options",
        "task",
        "tasks",
        "logger",
        "info",
        "task",
        "runTask",
        "_opv_directory_manager",
        "_client_requestor",
        "task",
        "inputData",
        "logger",
        "debug",
        "lastTaskReturn",
        "toJSON",
        "lastTaskReturn",
        "outputData",
        "lastTaskReturn",
        "isSuccess",
        "task",
        "lastTaskReturn",
        "statusCode",
        "TaskStatusCode",
        "ERROR_CP_APN0",
        "logger",
        "info",
        "lastTaskReturn",
        "outputData",
        "_client_requestor",
        "make",
        "ressources",
        "Cp",
        "toCp",
        "toCp",
        "cp",
        "get",
        "cp",
        "lot",
        "get",
        "logger",
        "debug",
        "cp",
        "lot",
        "id",
        "runTask",
        "_opv_directory_manager",
        "_client_requestor",
        "cp",
        "lot",
        "id",
        "logger",
        "debug",
        "lastTaskReturn",
        "toJSON",
        "lastTaskReturn",
        "outputData",
        "fromCp",
        "fromCp",
        "fromCp",
        "toCp",
        "logger",
        "debug",
        "injectInput",
        "runTask",
        "_opv_directory_manager",
        "_client_requestor",
        "injectInput",
        "lastTaskReturn",
        "outputData",
        "logger",
        "debug",
        "lastTaskReturn",
        "toJSON",
        "runTask",
        "_opv_directory_manager",
        "_client_requestor",
        "inputData",
        "lastTaskReturn",
        "outputData",
        "logger",
        "debug",
        "lastTaskReturn",
        "toJSON",
        "runTask",
        "_opv_directory_manager",
        "_client_requestor",
        "inputData",
        "lastTaskReturn",
        "outputData",
        "logger",
        "debug",
        "lastTaskReturn",
        "toJSON",
        "logger",
        "error",
        "lastTaskReturn",
        "error",
        "logger",
        "info",
        "task",
        "inputData"
    ],
    "literals": [
        "\"makeall\"",
        "\"id_cp\"",
        "\"id_malette\"",
        "'Task %s not found'",
        "\"rotate\"",
        "\"cpfind\"",
        "\"autooptimiser\"",
        "\"stitchable\"",
        "\"stitch\"",
        "\"photosphere\"",
        "\"tiling\"",
        "\"Starting task %s\"",
        "\"TaskReturn : \"",
        "\"stitchable\"",
        "\"APN0 error, injecting points ...\"",
        "\"id_cp\"",
        "\"id_malette\"",
        "\"findnearestcp\"",
        "\"id_cp\"",
        "\"idCpFrom\"",
        "\"idCpTo\"",
        "\"apnList\"",
        "\"injectInput: \"",
        "\"injectcpapn\"",
        "\"autooptimiser\"",
        "\"stitchable\"",
        "\"Last task executed failled with following error : \"",
        "\"End of task %s\""
    ],
    "variables": [
        "TASK_NAME",
        "requiredArgsKeys",
        "task",
        "tasks",
        "inputData",
        "lastTaskReturn",
        "inputData",
        "toCp",
        "cp",
        "lastTaskReturn",
        "fromCp",
        "injectInput",
        "injectInput",
        "injectInput",
        "injectInput",
        "lastTaskReturn",
        "inputData",
        "lastTaskReturn",
        "inputData",
        "lastTaskReturn",
        "inputData"
    ],
    "comments": [
        "coding: utf-8",
        "Copyright (C) 2017 Open Path View, Maison Du Libre",
        "This program is free software; you can redistribute it and/or modify",
        "it under the terms of the GNU General Public License as published by",
        "the Free Software Foundation; either version 3 of the License, or",
        "(at your option) any later version.",
        "This program is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the",
        "GNU General Public License for more details.",
        "You should have received a copy of the GNU General Public License along",
        "with this program. If not, see <http://www.gnu.org/licenses/>.",
        "Contributors: Benjamin BERNARD <benjamin.bernard@openpathview.fr>",
        "Email: team@openpathview.fr",
        "Description: Make it all, with correction logic"
    ],
    "docstrings": [
        "\"\"\"\n        Run task.\n        Return a TaskReturn.\n        \"\"\"",
        "\"\"\"\n            :param options: {\"id_lot\": , \"id_malette\"}\n            :return:\n        \"\"\""
    ],
    "functions": [
        "runTask",
        "runWithExceptions"
    ],
    "classes": [
        "MakeallTask"
    ]
}