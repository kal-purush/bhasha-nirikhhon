{
    "identifiers": [
        "Import",
        "pexpect",
        "secret_key",
        "counter",
        "format",
        "HOST",
        "PORT",
        "pexpect",
        "spawn",
        "connect",
        "child",
        "expect",
        "child",
        "sendline",
        "child",
        "expect",
        "child",
        "sendline",
        "secret_key",
        "counter",
        "format",
        "secret_key",
        "counter",
        "child",
        "expect",
        "Listing",
        "counter",
        "Access",
        "secret_key",
        "counter",
        "Listing",
        "open",
        "readlines",
        "Access",
        "secret_key",
        "child",
        "expect",
        "Numb_Lines",
        "Numb_Lines",
        "child",
        "sendline",
        "Numb_Lines",
        "child",
        "expect",
        "child",
        "before",
        "child",
        "before",
        "split",
        "email",
        "found",
        "emails",
        "email",
        "append",
        "email",
        "child",
        "before",
        "open",
        "email",
        "file",
        "write",
        "email",
        "file",
        "close"
    ],
    "literals": [
        "\"83.212.97.72\"",
        "\"80\"",
        "'nc {} {} '",
        "\"Login:\"",
        "\"max\"",
        "\"Password:\"",
        "'ATTEMPTING > {} '",
        "'Login Incorrect'",
        "'>'",
        "'Attempting a different password:'",
        "'password.txt'",
        "'r'",
        "\">\"",
        "''",
        "'Looping through text files, Please wait... '",
        "'more '",
        "'.txt'",
        "\">\"",
        "'@'",
        "'@'",
        "'EMAILSFOUND.txt'",
        "'w'",
        "'\\n'"
    ],
    "variables": [
        "HOST",
        "PORT",
        "connect",
        "child",
        "Listing",
        "counter",
        "secret_key",
        "child",
        "found_emails",
        "found_emails",
        "file"
    ],
    "comments": [
        "importing the pexpect module",
        "IP",
        "Port",
        "this will execute the connection to the server",
        "send the list content and the counter will be the values looped.",
        "will quit the function and return the value back to its caller return child",
        "opening and reading each line in the file",
        "turning the emails into a list",
        "sending 'more' command to the server with 1 to 89 variable",
        "if email has '@' then append it to the list",
        "writing the emails in a line order, so line1, line2 etc."
    ],
    "docstrings": [
        "\"\"\" Opening and reading the password list so it can be used to log in, then its put on to a loop. \"\"\"",
        "\"\"\" settng variables and putting the emails into a list \"\"\"",
        "\"\"\" this piece of code will use a For loop to find emails inside the server, it will first loop through each text file using the server command more and it read the text files and see if any of them has \"@\" in them which stands for email, and once the emails has been found it will be printed out in the terminal and then another if statement inside the previous one to store the found '@' into a text file. \"\"\"",
        "\"\"\"this piece of code will create and open a text file and store all the emails found in there. \"\"\""
    ],
    "functions": [
        "Access"
    ],
    "classes": []
}