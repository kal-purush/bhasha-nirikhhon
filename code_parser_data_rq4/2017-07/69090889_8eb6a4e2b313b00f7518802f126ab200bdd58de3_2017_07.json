{
    "identifiers": [
        "unittest",
        "can",
        "unittest",
        "TestCase",
        "can",
        "Bus",
        "channel",
        "CHANNEL_1",
        "bustype",
        "INTERFACE_1",
        "bitrate",
        "BITRATE",
        "can",
        "Bus",
        "channel",
        "CHANNEL_2",
        "bustype",
        "INTERFACE_2",
        "bitrate",
        "BITRATE",
        "bus1",
        "shutdown",
        "bus2",
        "shutdown",
        "msg",
        "bus1",
        "send",
        "msg",
        "bus2",
        "recv",
        "TIMEOUT",
        "assertIsNotNone",
        "recv_msg",
        "INTERFACE_2",
        "assertEqual",
        "recv_msg",
        "msg",
        "msg",
        "arbitration_id",
        "bus2",
        "send",
        "msg",
        "bus1",
        "recv",
        "TIMEOUT",
        "assertIsNotNone",
        "recv_msg",
        "INTERFACE_1",
        "assertEqual",
        "recv_msg",
        "msg",
        "can",
        "Message",
        "extended_id",
        "arbitration_id",
        "data",
        "_send_and_receive",
        "msg",
        "can",
        "Message",
        "extended_id",
        "arbitration_id",
        "data",
        "_send_and_receive",
        "msg",
        "can",
        "Message",
        "extended_id",
        "arbitration_id",
        "is_remote_frame",
        "dlc",
        "_send_and_receive",
        "msg",
        "can",
        "Message",
        "extended_id",
        "arbitration_id",
        "data",
        "_send_and_receive",
        "msg",
        "unittest",
        "main"
    ],
    "literals": [
        "'virtual'",
        "'virtual'",
        "\"No message was received on %s\"",
        "\"No message was received on %s\"",
        "'__main__'"
    ],
    "variables": [
        "BITRATE",
        "TIMEOUT",
        "INTERFACE_1",
        "CHANNEL_1",
        "INTERFACE_2",
        "CHANNEL_2",
        "bus1",
        "bus2",
        "recv_msg",
        "recv_msg",
        "msg",
        "msg",
        "msg",
        "msg"
    ],
    "comments": [
        "Send with bus 1, receive with bus 2",
        "Send with bus 2, receive with bus 1",
        "Add 1 to arbitration ID to make it a different message"
    ],
    "docstrings": [
        "\"\"\"\n    Use two interfaces connected to the same CAN bus and test them against\n    each other.\n    \"\"\""
    ],
    "functions": [
        "setUp",
        "tearDown",
        "_send_and_receive",
        "test_standard_message",
        "test_extended_message",
        "test_remote_message",
        "test_dlc_less_than_eight"
    ],
    "classes": [
        "Back2BackTestCase"
    ]
}