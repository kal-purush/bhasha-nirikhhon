{
    "identifiers": [
        "cn",
        "madf",
        "leetCode",
        "val",
        "left",
        "right",
        "x",
        "val",
        "x",
        "root",
        "p",
        "q",
        "root",
        "root",
        "p",
        "root",
        "q",
        "root",
        "left",
        "lowestCommonAncestor",
        "root",
        "left",
        "p",
        "q",
        "right",
        "lowestCommonAncestor",
        "root",
        "right",
        "p",
        "q",
        "left",
        "right",
        "right",
        "left",
        "root"
    ],
    "literals": [],
    "variables": [
        "val",
        "left",
        "right"
    ],
    "comments": [],
    "docstrings": [
        "* 给定一个二叉树, 找到该树中两个指定节点的最近公共祖先。\n * <p>\n * 百度百科中最近公共祖先的定义为：“对于有根树 T 的两个结点 p、q，最近公共祖先表示为一个结点 x，满足 x 是 p、q 的祖先且 x 的深度尽可能大（一个节点也可以是它自己的祖先）。”\n * <p>\n * 例如，给定如下二叉树:  root = [3,5,1,6,2,0,8,null,null,7,4]\n * <p>\n * 示例 1:\n * <p>\n * 输入: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1\n * 输出: 3\n * 解释: 节点 5 和节点 1 的最近公共祖先是节点 3。\n * <p>\n * 来源：力扣（LeetCode）\n * 链接：https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree\n * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n *\n * @author 烛影鸾书\n * @date 2020/9/27 13:11\n * @copyright© 2020"
    ],
    "functions": [
        "TreeNode",
        "TreeNode",
        "lowestCommonAncestor"
    ],
    "classes": [
        "P236_ClosestAncestor",
        "TreeNode"
    ]
}