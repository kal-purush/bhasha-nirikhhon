{
    "identifiers": [
        "mpl_toolkits",
        "mplot3d",
        "Axes3D",
        "skimage",
        "measure",
        "euler_number",
        "label",
        "matplotlib",
        "pyplot",
        "plt",
        "numpy",
        "np",
        "np",
        "array",
        "np",
        "pad",
        "SAMPLE",
        "mode",
        "plt",
        "subplots",
        "ax",
        "imshow",
        "SAMPLE",
        "cmap",
        "plt",
        "cm",
        "gray",
        "ax",
        "axis",
        "euler_number",
        "SAMPLE",
        "connectivity",
        "label",
        "SAMPLE",
        "connectivity",
        "max",
        "object_nb_4",
        "e4",
        "euler_number",
        "SAMPLE",
        "connectivity",
        "label",
        "SAMPLE",
        "connectivity",
        "max",
        "object_nb_8",
        "e8",
        "ax",
        "set_title",
        "format",
        "e4",
        "object_nb_4",
        "holes_nb_4",
        "e8",
        "object_nb_8",
        "holes_nb_8",
        "plt",
        "show",
        "grid",
        "plt",
        "figure",
        "fig",
        "gca",
        "projection",
        "ax",
        "grid",
        "grid",
        "ax",
        "set_axis_off",
        "ax",
        "data",
        "np",
        "array",
        "data",
        "shape",
        "np",
        "zeros",
        "size",
        "dtype",
        "data",
        "dtype",
        "data",
        "data_e",
        "indices",
        "indices",
        "x",
        "y",
        "z",
        "x",
        "y",
        "z",
        "volume",
        "explode",
        "np",
        "ones",
        "volume",
        "shape",
        "explode",
        "np",
        "where",
        "volume",
        "blue",
        "red",
        "expand_coordinates",
        "np",
        "indices",
        "np",
        "array",
        "filled",
        "shape",
        "make_ax",
        "ax",
        "voxels",
        "x",
        "y",
        "z",
        "filled",
        "facecolors",
        "fcolors",
        "euler_number",
        "volume",
        "connectivity",
        "euler_number",
        "volume",
        "connectivity",
        "plt",
        "title",
        "format",
        "e26",
        "e6",
        "plt",
        "show",
        "np",
        "ones",
        "n",
        "n",
        "n",
        "dtype",
        "n",
        "n",
        "c",
        "c",
        "n",
        "n",
        "display_voxels",
        "cube"
    ],
    "literals": [
        "'constant'",
        "'off'",
        "'Euler number for N4: {} ({} objects, {} holes), \\n for N8: {} ({} objects, {} holes)'",
        "'3d'",
        "'#ff0000ff'",
        "'#1f77b410'",
        "'Euler number for N26: {}, for N6: {}'"
    ],
    "variables": [
        "SAMPLE",
        "SAMPLE",
        "fig",
        "ax",
        "e4",
        "object_nb_4",
        "holes_nb_4",
        "e8",
        "object_nb_8",
        "holes_nb_8",
        "fig",
        "ax",
        "size",
        "data_e",
        "data_e",
        "x",
        "y",
        "z",
        "red",
        "blue",
        "filled",
        "fcolors",
        "x",
        "y",
        "z",
        "ax",
        "e26",
        "e6",
        "n",
        "cube",
        "c",
        "cube",
        "c",
        "c",
        "c",
        "cube",
        "c",
        "c",
        "cube",
        "cube",
        "c",
        "c",
        "cube",
        "c"
    ],
    "comments": [
        "Sample image.",
        "",
        "3-D objects",
        "===========",
        "",
        "In this example, a 3-D cube is generated, then holes and",
        "tunnels are added. Euler number is evaluated with 6 and 26 neighborhood",
        "configuration. This code is inpired by",
        "https://matplotlib.org/devdocs/gallery/mplot3d/voxels_numpy_logo.html",
        "shrink the gaps between voxels",
        "define colors",
        "upscale the above voxel image, leaving gaps",
        "Shrink the gaps",
        "Define 3D figure and place voxels",
        "Compute Euler number in 6 and 26 neighbourhood configuration, that",
        "correspond to 1 and 3 connectivity, respectively",
        "Define a volume of 7x7x7 voxels",
        "Add a hole",
        "Add a concavity that connects previous hole",
        "Add a new hole",
        "Add a hole in neighbourhood of previous one",
        "Add a tunnel"
    ],
    "docstrings": [
        "\"\"\"\n=========================\nEuler number\n=========================\n\nThis example shows an illustration of the computation of the Euler number [1]_\nin 2D and 3D objects.\n\nFor 2D objects, the Euler number is the number of objects minus the number of\nholes. Notice that if an object is 8-connected, its complementary set is\n4-connected, and conversely. It is also possible to compute the number of\nobjects using :func:`skimage.measure.label`, and to deduce the number of holes\nfrom the difference between the two numbers.\n\nFor 3D objects, the Euler number is obtained as the number of objects plus the\nnumber of holes, minus the number of tunnels, or loops. If an\nobject is 26-connected, its complementary set is 6-connected, and conversely.\nThe voxels are actually represented with blue transparent surfaces.\nInner porosities are represented in red.\n\n.. [1] https://en.wikipedia.org/wiki/Euler_characteristic \n\"\"\"",
        "\"\"\"visualization to separate voxels\n\n    Data voxels are separated by 0-valued ones so that they appear\n    separated in the matplotlib figure.\n    \"\"\"",
        "\"\"\"\n    This collapses together pairs of indices, so that\n    the gaps in the volume array will have a zero width.\n    \"\"\"",
        "\"\"\"\n    volume: (N,M,P) array\n            Represents a binary set of pixels: objects are marked with 1,\n            complementary (porosities) with 0.\n\n    The voxels are actually represented with blue transparent surfaces.\n    Inner porosities are represented in red.\n    \"\"\""
    ],
    "functions": [
        "make_ax",
        "explode",
        "expand_coordinates",
        "display_voxels"
    ],
    "classes": []
}