{
    "identifiers": [
        "com",
        "google",
        "devtools",
        "build",
        "lib",
        "starlarkbuildapi",
        "cpp",
        "com",
        "google",
        "devtools",
        "build",
        "docgen",
        "annot",
        "DocCategory",
        "com",
        "google",
        "devtools",
        "build",
        "docgen",
        "annot",
        "StarlarkConstructor",
        "com",
        "google",
        "devtools",
        "build",
        "lib",
        "cmdline",
        "Label",
        "com",
        "google",
        "devtools",
        "build",
        "lib",
        "starlarkbuildapi",
        "FileApi",
        "com",
        "google",
        "devtools",
        "build",
        "lib",
        "starlarkbuildapi",
        "core",
        "ProviderApi",
        "com",
        "google",
        "devtools",
        "build",
        "lib",
        "starlarkbuildapi",
        "core",
        "StructApi",
        "net",
        "starlark",
        "java",
        "annot",
        "Param",
        "net",
        "starlark",
        "java",
        "annot",
        "ParamType",
        "net",
        "starlark",
        "java",
        "annot",
        "StarlarkBuiltin",
        "net",
        "starlark",
        "java",
        "annot",
        "StarlarkMethod",
        "net",
        "starlark",
        "java",
        "eval",
        "EvalException",
        "net",
        "starlark",
        "java",
        "eval",
        "NoneType",
        "StarlarkBuiltin",
        "name",
        "category",
        "DocCategory",
        "PROVIDER",
        "doc",
        "DebugPackageInfoApi",
        "NAME",
        "StarlarkMethod",
        "name",
        "doc",
        "structField",
        "StarlarkMethod",
        "name",
        "doc",
        "structField",
        "StarlarkMethod",
        "name",
        "doc",
        "structField",
        "StarlarkMethod",
        "name",
        "doc",
        "structField",
        "allowReturnNones",
        "StarlarkBuiltin",
        "name",
        "doc",
        "documented",
        "Provider",
        "StarlarkMethod",
        "name",
        "NAME",
        "doc",
        "parameters",
        "Param",
        "name",
        "doc",
        "positional",
        "named",
        "noneable",
        "allowedTypes",
        "ParamType",
        "Param",
        "name",
        "doc",
        "positional",
        "named",
        "noneable",
        "allowedTypes",
        "ParamType",
        "Param",
        "name",
        "doc",
        "positional",
        "named",
        "noneable",
        "allowedTypes",
        "ParamType",
        "Param",
        "name",
        "doc",
        "positional",
        "named",
        "noneable",
        "defaultValue",
        "allowedTypes",
        "ParamType",
        "ParamType",
        "selfCall",
        "StarlarkConstructor",
        "targetLabel",
        "strippedFile",
        "unstrippedFile",
        "dwpFile"
    ],
    "literals": [
        "\"DebugPackageInfo\"",
        "\"A provider for the binary file and its associated .dwp files, if fission is enabled.\"",
        "\"If Fission ({@url https://gcc.gnu.org/wiki/DebugFission}) is not enabled, the dwp \"",
        "\"file will be null.\"",
        "\"DebugPackageInfo\"",
        "\"target_label\"",
        "\"Returns the label for the *_binary target\"",
        "\"stripped_file\"",
        "\"Returns the stripped file (the explicit \\\".stripped\\\" target).\"",
        "\"unstripped_file\"",
        "\"Returns the unstripped file (the default executable target)\"",
        "\"dwp_file\"",
        "\"Returns the .dwp file (for fission builds) or null if --fission=no.\"",
        "\"Provider\"",
        "\"\"",
        "\"The <code>DebugPackageInfo</code> constructor.\"",
        "\"target_label\"",
        "\"The label for the *_binary target\"",
        "\"stripped_file\"",
        "\"The stripped file (the explicit \\\".stripped\\\" target)\"",
        "\"unstripped_file\"",
        "\"The unstripped file (the default executable target).\"",
        "\"dwp_file\"",
        "\"The .dwp file (for fission builds) or null if --fission=no.\"",
        "\"None\""
    ],
    "variables": [],
    "comments": [
        "Copyright 2020 The Bazel Authors. All rights reserved.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License."
    ],
    "docstrings": [
        "Wrapper for the native DebugPackageProvider.",
        "The provider implementing this can construct DebugPackageInfo objects."
    ],
    "functions": [
        "Label",
        "getTargetLabel",
        "FileT",
        "getStrippedArtifact",
        "FileT",
        "getUnstrippedArtifact",
        "FileT",
        "getDwpArtifact",
        "createDebugPackageInfo"
    ],
    "classes": []
}