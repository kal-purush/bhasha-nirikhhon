{
    "identifiers": [
        "typing",
        "flask",
        "request",
        "session",
        "flask_restx",
        "Namespace",
        "Resource",
        "CTFd",
        "api",
        "v1",
        "helpers",
        "request",
        "validate_args",
        "CTFd",
        "api",
        "v1",
        "helpers",
        "schemas",
        "sqlalchemy_to_pydantic",
        "CTFd",
        "api",
        "v1",
        "schemas",
        "APIDetailedSuccessResponse",
        "APIListSuccessResponse",
        "CTFd",
        "constants",
        "RawEnum",
        "CTFd",
        "models",
        "ChallengeComments",
        "Comments",
        "PageComments",
        "TeamComments",
        "UserComments",
        "db",
        "CTFd",
        "schemas",
        "comments",
        "CommentSchema",
        "CTFd",
        "utils",
        "decorators",
        "admins_only",
        "CTFd",
        "utils",
        "helpers",
        "models",
        "build_model_filters",
        "Namespace",
        "description",
        "sqlalchemy_to_pydantic",
        "Comments",
        "APIDetailedSuccessResponse",
        "CommentModel",
        "APIListSuccessResponse",
        "CommentModel",
        "comments_namespace",
        "schema_model",
        "CommentDetailedSuccessResponse",
        "apidoc",
        "comments_namespace",
        "schema_model",
        "CommentListSuccessResponse",
        "apidoc",
        "data",
        "Comments",
        "data",
        "ChallengeComments",
        "data",
        "UserComments",
        "data",
        "TeamComments",
        "data",
        "PageComments",
        "Comments",
        "model",
        "comments_namespace",
        "route",
        "Resource",
        "admins_only",
        "comments_namespace",
        "doc",
        "description",
        "responses",
        "validate_args",
        "RawEnum",
        "location",
        "query_args",
        "query_args",
        "pop",
        "query_args",
        "pop",
        "get_comment_model",
        "data",
        "query_args",
        "build_model_filters",
        "model",
        "CommentModel",
        "query",
        "q",
        "field",
        "field",
        "CommentModel",
        "query",
        "filter_by",
        "query_args",
        "filters",
        "order_by",
        "CommentModel",
        "id",
        "desc",
        "paginate",
        "max_per_page",
        "CommentSchema",
        "many",
        "schema",
        "dump",
        "comments",
        "items",
        "response",
        "errors",
        "response",
        "errors",
        "comments",
        "page",
        "comments",
        "next_num",
        "comments",
        "prev_num",
        "comments",
        "pages",
        "comments",
        "per_page",
        "comments",
        "total",
        "response",
        "data",
        "admins_only",
        "comments_namespace",
        "doc",
        "description",
        "responses",
        "request",
        "get_json",
        "session",
        "get_comment_model",
        "data",
        "req",
        "CommentModel",
        "req",
        "db",
        "session",
        "add",
        "m",
        "db",
        "session",
        "commit",
        "CommentSchema",
        "schema",
        "dump",
        "m",
        "db",
        "session",
        "close",
        "response",
        "data",
        "comments_namespace",
        "route",
        "Resource",
        "admins_only",
        "comments_namespace",
        "doc",
        "description",
        "responses",
        "comment_id",
        "Comments",
        "query",
        "filter_by",
        "id",
        "comment_id",
        "first_or_404",
        "db",
        "session",
        "comment",
        "db",
        "session",
        "commit",
        "db",
        "session",
        "close"
    ],
    "literals": [
        "\"comments\"",
        "\"Endpoint to retrieve Comments\"",
        "\"CommentDetailedSuccessResponse\"",
        "\"CommentListSuccessResponse\"",
        "\"challenge_id\"",
        "\"user_id\"",
        "\"team_id\"",
        "\"page_id\"",
        "\"\"",
        "\"Endpoint to list Comment objects in bulk\"",
        "\"Success\"",
        "\"CommentListSuccessResponse\"",
        "\"An error occured processing the provided or stored data\"",
        "\"APISimpleErrorResponse\"",
        "\"challenge_id\"",
        "\"user_id\"",
        "\"team_id\"",
        "\"page_id\"",
        "\"q\"",
        "\"field\"",
        "\"CommentFields\"",
        "\"content\"",
        "\"content\"",
        "\"query\"",
        "\"q\"",
        "\"field\"",
        "\"success\"",
        "\"errors\"",
        "\"meta\"",
        "\"pagination\"",
        "\"page\"",
        "\"next\"",
        "\"prev\"",
        "\"pages\"",
        "\"per_page\"",
        "\"total\"",
        "\"success\"",
        "\"data\"",
        "\"Endpoint to create a Comment object\"",
        "\"Success\"",
        "\"CommentDetailedSuccessResponse\"",
        "\"An error occured processing the provided or stored data\"",
        "\"APISimpleErrorResponse\"",
        "\"author_id\"",
        "\"id\"",
        "\"success\"",
        "\"data\"",
        "\"/<comment_id>\"",
        "\"Endpoint to delete a specific Comment object\"",
        "\"Success\"",
        "\"APISimpleSuccessResponse\"",
        "\"success\""
    ],
    "variables": [
        "comments_namespace",
        "CommentModel",
        "data",
        "data",
        "model",
        "model",
        "model",
        "model",
        "model",
        "model",
        "q",
        "field",
        "CommentModel",
        "filters",
        "comments",
        "schema",
        "response",
        "req",
        "req",
        "CommentModel",
        "m",
        "schema",
        "response",
        "comment"
    ],
    "comments": [
        "Always force author IDs to be the actual user"
    ],
    "docstrings": [],
    "functions": [
        "get_comment_model",
        "get",
        "post"
    ],
    "classes": [
        "CommentDetailedSuccessResponse",
        "CommentListSuccessResponse",
        "CommentList",
        "Comment"
    ]
}