{
    "identifiers": [
        "xsd",
        "java",
        "text",
        "NumberFormat",
        "java",
        "util",
        "Locale",
        "strA",
        "strB",
        "newStrA",
        "removeSign",
        "strA",
        "newStrB",
        "removeSign",
        "strB",
        "temp",
        "max",
        "newStrA",
        "length",
        "newStrB",
        "length",
        "temp2",
        "longestCommonSubstring",
        "newStrA",
        "newStrB",
        "temp2",
        "temp",
        "sb",
        "item",
        "toCharArray",
        "charReg",
        "item",
        "sb",
        "append",
        "item",
        "sb",
        "toString",
        "charValue",
        "charValue",
        "charValue",
        "charValue",
        "charValue",
        "charValue",
        "charValue",
        "charValue",
        "charValue",
        "str1",
        "str2",
        "length1",
        "str1",
        "length",
        "length2",
        "str2",
        "length",
        "result",
        "length2",
        "i",
        "i",
        "length1",
        "i",
        "j",
        "j",
        "length2",
        "j",
        "str1",
        "charAt",
        "i",
        "str2",
        "charAt",
        "j",
        "result",
        "i",
        "j",
        "result",
        "i",
        "j",
        "result",
        "i",
        "j",
        "result",
        "i",
        "j",
        "result",
        "i",
        "j",
        "result",
        "i",
        "j",
        "result",
        "i",
        "j",
        "result",
        "length1",
        "length2",
        "resule",
        "NumberFormat",
        "getPercentInstance",
        "format",
        "resule"
    ],
    "literals": [
        "\"en \"",
        "\"US \""
    ],
    "variables": [],
    "comments": [
        "用较大的字符串长度作为分母，相似子串作为分子计算出字串相似度",
        "遍历字符串str,如果是汉字数字或字母，则追加到ab上面",
        "滚动数组,节省空间只依赖于前面的两个解"
    ],
    "docstrings": [
        "* 计算相似度\n     *",
        "* 将字符串的所有数据依次写成一行\n     *",
        "* 判断字符是否为汉字，数字和字母，\n     * 因为对符号进行相似度比较没有实际意义，故符号不加入考虑范围。\n     *",
        "* 求公共子串，采用动态规划算法。\n     * 其不要求所求得的字符在所给的字符串中是连续的。\n     *\n     *",
        "* 结果转换成百分比形式\n     *"
    ],
    "functions": [
        "SimilarDegree",
        "removeSign",
        "charReg",
        "longestCommonSubstring",
        "similarityResult"
    ],
    "classes": [
        "Computeclass"
    ]
}