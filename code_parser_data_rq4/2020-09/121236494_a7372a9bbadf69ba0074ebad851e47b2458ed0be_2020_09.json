{
    "identifiers": [
        "co",
        "elastic",
        "apm",
        "agent",
        "report",
        "co",
        "elastic",
        "apm",
        "agent",
        "configuration",
        "SpyConfiguration",
        "io",
        "undertow",
        "Undertow",
        "io",
        "undertow",
        "io",
        "Sender",
        "org",
        "jetbrains",
        "annotations",
        "NotNull",
        "org",
        "junit",
        "jupiter",
        "api",
        "AfterEach",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeAll",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeEach",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "org",
        "testcontainers",
        "Testcontainers",
        "org",
        "testcontainers",
        "containers",
        "BindMode",
        "org",
        "testcontainers",
        "containers",
        "GenericContainer",
        "javax",
        "annotation",
        "java",
        "io",
        "java",
        "net",
        "Authenticator",
        "java",
        "net",
        "HttpURLConnection",
        "java",
        "net",
        "InetSocketAddress",
        "java",
        "net",
        "MalformedURLException",
        "java",
        "net",
        "PasswordAuthentication",
        "java",
        "net",
        "URL",
        "java",
        "net",
        "URLConnection",
        "java",
        "util",
        "Collections",
        "org",
        "assertj",
        "core",
        "api",
        "Assertions",
        "assertThat",
        "org",
        "mockito",
        "Mockito",
        "doReturn",
        "logger",
        "LoggerFactory",
        "getLogger",
        "PROXY_HEADER",
        "PROXY_HEADER_VALUE",
        "DOCKER_IMAGE_NAME",
        "PROXY_LOGIN",
        "PROXY_PASSWORD",
        "directUrl",
        "proxyUrl",
        "proxy",
        "BeforeAll",
        "host",
        "server",
        "Undertow",
        "builder",
        "addHttpListener",
        "setHandler",
        "exchange",
        "exchange",
        "setStatusCode",
        "path",
        "exchange",
        "getRequestPath",
        "response",
        "exchange",
        "getResponseSender",
        "path",
        "equals",
        "response",
        "send",
        "path",
        "equals",
        "proxyHeader",
        "exchange",
        "getRequestHeaders",
        "getFirst",
        "PROXY_HEADER",
        "response",
        "send",
        "PROXY_HEADER_VALUE",
        "equals",
        "proxyHeader",
        "exchange",
        "endExchange",
        "build",
        "server",
        "start",
        "port",
        "server",
        "getListenerInfo",
        "get",
        "getAddress",
        "getPort",
        "directUrl",
        "baseUrl",
        "host",
        "port",
        "proxyUrl",
        "baseUrl",
        "port",
        "logger",
        "info",
        "directUrl",
        "logger",
        "info",
        "proxyUrl",
        "Testcontainers",
        "exposeHostPorts",
        "port",
        "BeforeEach",
        "Authenticator",
        "setDefault",
        "AfterEach",
        "proxy",
        "proxy",
        "stop",
        "setProperty",
        "setProperty",
        "setProperty",
        "setProperty",
        "assertThat",
        "Authenticator",
        "getDefault",
        "describedAs",
        "isNull",
        "useAuth",
        "squidConfig",
        "format",
        "useAuth",
        "proxy",
        "DOCKER_IMAGE_NAME",
        "withClasspathResourceMapping",
        "squidConfig",
        "BindMode",
        "READ_ONLY",
        "withClasspathResourceMapping",
        "BindMode",
        "READ_ONLY",
        "proxy",
        "addExposedPorts",
        "proxy",
        "start",
        "Test",
        "simpleTestScenario",
        "Test",
        "startProxy",
        "setSystemProxyProperties",
        "expectProxySuccess",
        "Test",
        "startProxy",
        "setSystemProxyProperties",
        "setSystemProxyCredentialProperties",
        "expectProxyError",
        "Test",
        "startProxy",
        "setSystemProxyProperties",
        "setSystemProxyCredentialProperties",
        "expectProxyError",
        "Authenticator",
        "setDefault",
        "Override",
        "PROXY_LOGIN",
        "PROXY_PASSWORD",
        "toCharArray",
        "expectProxySuccess",
        "Authenticator",
        "setDefault",
        "client",
        "createAndStartClient",
        "requestUrl",
        "requestUrl",
        "checkProxyAuthenticationError",
        "client",
        "startRequest",
        "requestUrl",
        "getPath",
        "checkProxyAuthenticationError",
        "requestUrl",
        "openConnection",
        "client",
        "createAndStartClient",
        "requestUrl",
        "requestUrl",
        "checkUsingProxy",
        "client",
        "startRequest",
        "requestUrl",
        "getPath",
        "checkUsingProxy",
        "requestUrl",
        "openConnection",
        "useProxy",
        "client",
        "createAndStartClient",
        "useProxy",
        "requestUrl",
        "requestUrl",
        "useProxy",
        "checkUsingProxy",
        "client",
        "startRequest",
        "requestUrl",
        "getPath",
        "useProxy",
        "checkUsingProxy",
        "requestUrl",
        "openConnection",
        "useProxy",
        "setProperty",
        "proxy",
        "getContainerIpAddress",
        "setProperty",
        "toString",
        "proxy",
        "getMappedPort",
        "setProperty",
        "PROXY_LOGIN",
        "setProperty",
        "PROXY_PASSWORD",
        "useProxy",
        "config",
        "SpyConfiguration",
        "createSpyConfig",
        "getConfig",
        "doReturn",
        "Collections",
        "singletonList",
        "useProxy",
        "proxyUrl",
        "directUrl",
        "when",
        "config",
        "getServerUrls",
        "client",
        "config",
        "client",
        "start",
        "client",
        "useProxy",
        "useProxy",
        "proxyUrl",
        "directUrl",
        "toString",
        "e",
        "e",
        "connection",
        "expectProxy",
        "assertThat",
        "connection",
        "isNotNull",
        "isInstanceOf",
        "assertThat",
        "HttpUtils",
        "readToString",
        "connection",
        "getInputStream",
        "isEqualTo",
        "expectProxy",
        "assertThat",
        "connection",
        "getResponseCode",
        "isEqualTo",
        "connection",
        "assertThat",
        "connection",
        "isNotNull",
        "isInstanceOf",
        "assertThat",
        "connection",
        "getResponseCode",
        "isEqualTo",
        "NotNull",
        "host",
        "port",
        "format",
        "host",
        "port",
        "e",
        "e"
    ],
    "literals": [
        "\"proxy-header\"",
        "\"1234\"",
        "\"sameersbn/squid:3.5.27-2\"",
        "\"elastic\"",
        "\"elasticpwd\"",
        "\"127.0.0.1\"",
        "\"0.0.0.0\"",
        "\"/\"",
        "\"{\\\"version\\\":\\\"7.9.0\\\"}\"",
        "\"/proxy\"",
        "\"proxy\"",
        "\"no-proxy\"",
        "\"host.testcontainers.internal\"",
        "\"server direct url = {}\"",
        "\"server proxy url = {}\"",
        "\"http.proxyHost\"",
        "\"\"",
        "\"http.proxyPort\"",
        "\"\"",
        "\"http.proxyUser\"",
        "\"\"",
        "\"http.proxyPassword\"",
        "\"\"",
        "\"test should not leave a global authenticator instance set\"",
        "\"squid/squid_%s.conf\"",
        "\"basic-auth\"",
        "\"no-auth\"",
        "\"/etc/squid/squid.conf\"",
        "\"squid/squid_passwd\"",
        "\"/etc/squid/passwd\"",
        "\"http.proxyHost\"",
        "\"http.proxyPort\"",
        "\"http.proxyUser\"",
        "\"http.proxyPassword\"",
        "\"/proxy\"",
        "\"proxy\"",
        "\"no-proxy\"",
        "\"http://%s:%d\""
    ],
    "variables": [
        "directUrl",
        "proxyUrl"
    ],
    "comments": [
        "Using a separate test class for proxy support",
        "listen to all interfaces",
        "we have to use another host name so the proxy host can call the docker host where",
        "the http server is running",
        "allow proxy to connect to host port",
        "ensure that there is no global authenticator set",
        "in this case, no global authenticator is set",
        "thus we should get a 407 error from the proxy because credentials aren't taken in account by default",
        "we should not be able to use proxy without authenticator"
    ],
    "docstrings": [
        "* #%L\n * Elastic APM Java agent\n * %%\n * Copyright (C) 2018 - 2020 Elastic and contributors\n * %%\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n * #L%"
    ],
    "functions": [
        "initAll",
        "beforeEach",
        "afterEach",
        "startProxy",
        "noProxy",
        "noAuthProxy",
        "basicAuthProxy_noAuthenticator",
        "basicAuthProxy_globalAuthenticator",
        "PasswordAuthentication",
        "getPasswordAuthentication",
        "expectProxyError",
        "expectProxySuccess",
        "simpleTestScenario",
        "setSystemProxyProperties",
        "setSystemProxyCredentialProperties",
        "ApmServerClient",
        "createAndStartClient",
        "URL",
        "requestUrl",
        "checkUsingProxy",
        "checkProxyAuthenticationError",
        "URL",
        "baseUrl"
    ],
    "classes": [
        "ApmServerClientProxySupportTest"
    ]
}