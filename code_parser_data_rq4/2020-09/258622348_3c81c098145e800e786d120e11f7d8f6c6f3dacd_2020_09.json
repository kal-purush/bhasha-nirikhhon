{
    "identifiers": [
        "com",
        "objectcomputing",
        "checkins",
        "services",
        "file",
        "com",
        "google",
        "api",
        "client",
        "auth",
        "oauth2",
        "Credential",
        "com",
        "google",
        "api",
        "client",
        "extensions",
        "java6",
        "auth",
        "oauth2",
        "AuthorizationCodeInstalledApp",
        "com",
        "google",
        "api",
        "client",
        "extensions",
        "jetty",
        "auth",
        "oauth2",
        "LocalServerReceiver",
        "com",
        "google",
        "api",
        "client",
        "googleapis",
        "auth",
        "oauth2",
        "GoogleAuthorizationCodeFlow",
        "com",
        "google",
        "api",
        "client",
        "googleapis",
        "auth",
        "oauth2",
        "GoogleClientSecrets",
        "com",
        "google",
        "api",
        "client",
        "http",
        "HttpTransport",
        "com",
        "google",
        "auth",
        "oauth2",
        "AccessToken",
        "com",
        "google",
        "auth",
        "oauth2",
        "GoogleCredentials",
        "com",
        "google",
        "api",
        "client",
        "http",
        "javanet",
        "NetHttpTransport",
        "com",
        "google",
        "api",
        "client",
        "json",
        "JsonFactory",
        "com",
        "google",
        "api",
        "client",
        "json",
        "jackson2",
        "JacksonFactory",
        "com",
        "google",
        "api",
        "client",
        "util",
        "store",
        "FileDataStoreFactory",
        "io",
        "micronaut",
        "context",
        "annotation",
        "Property",
        "javax",
        "inject",
        "Singleton",
        "java",
        "io",
        "java",
        "nio",
        "charset",
        "StandardCharsets",
        "java",
        "security",
        "GeneralSecurityException",
        "java",
        "util",
        "Collection",
        "Singleton",
        "scopes",
        "googleCredentials",
        "JSON_FACTORY",
        "JacksonFactory",
        "getDefaultInstance",
        "HTTP_TRANSPORT",
        "TOKENS_DIRECTORY_PATH",
        "credentials",
        "Property",
        "name",
        "scopes",
        "Property",
        "name",
        "googleCredentials",
        "scopes",
        "scopes",
        "googleCredentials",
        "googleCredentials",
        "file",
        "googleCredentials",
        "file",
        "exists",
        "s",
        "file",
        "credentials",
        "GoogleCredentials",
        "fromStream",
        "s",
        "file",
        "getAbsolutePath",
        "credentials",
        "credentials",
        "GoogleCredentials",
        "getApplicationDefault",
        "scopes",
        "isEmpty",
        "credentials",
        "credentials",
        "createScoped",
        "scopes"
    ],
    "literals": [
        "\"tokens\"",
        "\"check-ins.application.scopes\"",
        "\"google.credentials\"",
        "\"Using Google Credentials from file: \"",
        "\"Using Google Application Default Credentials\""
    ],
    "variables": [
        "scopes",
        "googleCredentials"
    ],
    "comments": [
        "// Load client secrets",
        "InputStream in = new ByteArrayInputStream(googleCredentials.getBytes(StandardCharsets.UTF_8));",
        "//GoogleAuthenticator.class.getResourceAsStream(googleCredentials);",
        "//new FileInputStream(PRIVATE_KEY_PATH);",
        "//GoogleAuthenticator.class.getResourceAsStream(googleCredentials);",
        "//new ByteArrayInputStream(googleCredentials.getBytes(StandardCharsets.UTF_8));",
        "if (in == null) {",
        "throw new FileNotFoundException(\"Google Credential resource not found\");",
        "}",
        "",
        "GoogleCredentials credentials = GoogleCredentials.fromStream(in);",
        "credentials.refreshIfExpired();",
        "AccessToken token = credentials.getAccessToken();",
        "",
        "GoogleClientSecrets clientSecrets = GoogleClientSecrets.load(JSON_FACTORY, new InputStreamReader(in));",
        "",
        "// Build flow and trigger user authorization request.",
        "GoogleAuthorizationCodeFlow flow = new GoogleAuthorizationCodeFlow.Builder(",
        "HTTP_TRANSPORT, JSON_FACTORY, clientSecrets, scopes)",
        ".setDataStoreFactory(new FileDataStoreFactory(new java.io.File(TOKENS_DIRECTORY_PATH)))",
        ".setAccessType(\"offline\")",
        ".build();",
        "LocalServerReceiver receiver = new LocalServerReceiver.Builder().setPort(8888).build();",
        "return new AuthorizationCodeInstalledApp(flow, receiver).authorize(\"user\");"
    ],
    "docstrings": [
        "* Creates a google drive utility for quick access\n     *\n     * @param scopes, the scope(s) of access to request for this application",
        "* Creates an authorized Credential object.\n     *\n     * @return An authorized Credential object.\n     * @throws IOException If the credentials.json file cannot be found."
    ],
    "functions": [
        "GoogleAuthenticator",
        "GoogleCredentials",
        "setupCredentials"
    ],
    "classes": [
        "GoogleAuthenticator"
    ]
}