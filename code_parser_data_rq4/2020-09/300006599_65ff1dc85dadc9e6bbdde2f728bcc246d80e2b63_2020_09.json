{
    "identifiers": [
        "com",
        "checkmarx",
        "flow",
        "cucumber",
        "integration",
        "cli",
        "ast",
        "com",
        "checkmarx",
        "flow",
        "CxFlowApplication",
        "com",
        "checkmarx",
        "flow",
        "CxFlowRunner",
        "com",
        "checkmarx",
        "flow",
        "config",
        "FlowProperties",
        "com",
        "checkmarx",
        "flow",
        "config",
        "JiraProperties",
        "com",
        "checkmarx",
        "flow",
        "cucumber",
        "common",
        "utils",
        "TestUtils",
        "com",
        "checkmarx",
        "flow",
        "cucumber",
        "integration",
        "sca_scanner",
        "ScaCommonSteps",
        "com",
        "checkmarx",
        "flow",
        "exception",
        "ExitThrowable",
        "com",
        "checkmarx",
        "flow",
        "service",
        "ASTScanner",
        "com",
        "checkmarx",
        "flow",
        "service",
        "SCAScanner",
        "com",
        "checkmarx",
        "jira",
        "IJiraTestUtils",
        "com",
        "checkmarx",
        "jira",
        "JiraTestUtils",
        "com",
        "checkmarx",
        "sdk",
        "config",
        "AstProperties",
        "com",
        "checkmarx",
        "sdk",
        "config",
        "ScaProperties",
        "io",
        "cucumber",
        "java",
        "After",
        "io",
        "cucumber",
        "java",
        "Before",
        "io",
        "cucumber",
        "java",
        "PendingException",
        "io",
        "cucumber",
        "java",
        "en",
        "And",
        "io",
        "cucumber",
        "java",
        "en",
        "Given",
        "io",
        "cucumber",
        "java",
        "en",
        "Then",
        "io",
        "cucumber",
        "java",
        "en",
        "When",
        "lombok",
        "RequiredArgsConstructor",
        "lombok",
        "slf4j",
        "Slf4j",
        "org",
        "apache",
        "commons",
        "io",
        "FileUtils",
        "org",
        "apache",
        "commons",
        "io",
        "file",
        "PathUtils",
        "org",
        "junit",
        "Assert",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "boot",
        "test",
        "context",
        "SpringBootTest",
        "java",
        "io",
        "File",
        "java",
        "io",
        "java",
        "lang",
        "reflect",
        "InvocationTargetException",
        "java",
        "nio",
        "file",
        "Path",
        "java",
        "nio",
        "file",
        "Paths",
        "java",
        "util",
        "SpringBootTest",
        "classes",
        "Slf4j",
        "RequiredArgsConstructor",
        "REPO_ARGS",
        "GITHUB_REPO_ARGS",
        "REPO_ARGS",
        "JIRA_PROJECT",
        "DIRECTORY_TO_SCAN",
        "NO_FILTERS",
        "AT_LEAST_ONE",
        "MAX_VALUE",
        "flowProperties",
        "jiraProperties",
        "scaProperties",
        "astProperties",
        "cxFlowRunner",
        "cxFlowExecutionException",
        "customAstProjectName",
        "directoryToScan",
        "SEPARATOR",
        "Autowired",
        "jiraUtils",
        "Before",
        "log",
        "info",
        "flowProperties",
        "setBugTracker",
        "ScaCommonSteps",
        "initSCAConfig",
        "scaProperties",
        "log",
        "info",
        "JIRA_PROJECT",
        "jiraProperties",
        "setProject",
        "JIRA_PROJECT",
        "initJiraBugTracker",
        "log",
        "info",
        "scaProperties",
        "setFilterSeverity",
        "Collections",
        "emptyList",
        "astProperties",
        "setPreset",
        "astProperties",
        "setIncremental",
        "After",
        "log",
        "info",
        "jiraProperties",
        "getProject",
        "jiraUtils",
        "cleanProject",
        "jiraProperties",
        "getProject",
        "directoryToScan",
        "log",
        "info",
        "directoryToScan",
        "PathUtils",
        "deleteDirectory",
        "directoryToScan",
        "e",
        "log",
        "warn",
        "e",
        "getMessage",
        "Given",
        "initiatorList",
        "scanners",
        "Arrays",
        "asList",
        "initiatorList",
        "toLowerCase",
        "split",
        "SEPARATOR",
        "flowProperties",
        "setEnabledVulnerabilityScanners",
        "scanners",
        "And",
        "directoryToScan",
        "getTempDir",
        "copyTestProjectTo",
        "directoryToScan",
        "When",
        "issueType",
        "commandBuilder",
        "setScanInitiator",
        "issueType",
        "commandBuilder",
        "append",
        "append",
        "GITHUB_REPO_ARGS",
        "commandBuilder",
        "append",
        "GITHUB_REPO_ARGS",
        "commandBuilder",
        "append",
        "append",
        "REPO_ARGS",
        "issueType",
        "log",
        "info",
        "commandBuilder",
        "toString",
        "TestUtils",
        "runCxFlow",
        "cxFlowRunner",
        "commandBuilder",
        "toString",
        "cxFlowExecutionException",
        "e",
        "cxFlowExecutionException",
        "e",
        "Then",
        "expectedExitCode",
        "Assert",
        "assertNotNull",
        "cxFlowExecutionException",
        "Assert",
        "assertEquals",
        "cxFlowExecutionException",
        "getClass",
        "targetException",
        "cxFlowExecutionException",
        "getTargetException",
        "Assert",
        "assertTrue",
        "targetException",
        "actualExitCode",
        "targetException",
        "getExitCode",
        "Assert",
        "assertEquals",
        "expectedExitCode",
        "actualExitCode",
        "When",
        "customAstProjectName",
        "commandLine",
        "commandLine",
        "append",
        "append",
        "GITHUB_REPO_ARGS",
        "tryRunCxFlow",
        "commandLine",
        "toString",
        "Then",
        "expectedIssuesCount",
        "actualIssueCount",
        "jiraUtils",
        "getNumberOfIssuesInProject",
        "jiraProperties",
        "getProject",
        "log",
        "info",
        "expectedIssuesCount",
        "actualIssueCount",
        "Assert",
        "assertEquals",
        "expectedIssuesCount",
        "actualIssueCount",
        "When",
        "customAstProjectName",
        "commandLine",
        "format",
        "customAstProjectName",
        "directoryToScan",
        "tryRunCxFlow",
        "commandLine",
        "And",
        "Assert",
        "assertNull",
        "cxFlowExecutionException",
        "commandLine",
        "TestUtils",
        "runCxFlow",
        "cxFlowRunner",
        "commandLine",
        "e",
        "log",
        "info",
        "e",
        "getClass",
        "getSimpleName",
        "log",
        "info",
        "jiraProperties",
        "getProject",
        "jiraUtils",
        "ensureProjectExists",
        "jiraProperties",
        "getProject",
        "jiraUtils",
        "cleanProject",
        "jiraProperties",
        "getProject",
        "systemTempDir",
        "FileUtils",
        "getTempDirectoryPath",
        "subdir",
        "format",
        "UUID",
        "randomUUID",
        "Paths",
        "get",
        "systemTempDir",
        "subdir",
        "targetDir",
        "log",
        "info",
        "DIRECTORY_TO_SCAN",
        "targetDir",
        "directory",
        "TestUtils",
        "getFileFromResource",
        "DIRECTORY_TO_SCAN",
        "FileUtils",
        "copyDirectory",
        "directory",
        "targetDir",
        "toFile"
    ],
    "literals": [
        "\" --repo-url=https://github.com/cxflowtestuser/testsAST.git --repo-name=CLI-public-rest-repo --branch=master --blocksysexit\"",
        "\" --github \"",
        "\"SCIT\"",
        "\"input-code-for-sca\"",
        "\"none\"",
        "\",\"",
        "\"Setting bugTracker: Jira\"",
        "\"JIRA\"",
        "\"Jira project key: {}\"",
        "\"reset sca filters\"",
        "\"Checkmarx Default\"",
        "\"false\"",
        "\"Cleaning JIRA project: {}\"",
        "\"Deleting temp directory: {}\"",
        "\"AstCliSteps.afterEachScenario(): Failed to clean issues: \"",
        "\"scanner is {}\"",
        "\"source directory contains vulnerable files\"",
        "\"running a AST scan with break-build on {}\"",
        "\"AST\"",
        "\"success\"",
        "\"--scan --app=MyApp --cx-project=test\"",
        "\"missing-mandatory-parameter\"",
        "\"missing-project\"",
        "\"--scan --app=MyApp --f=nofile\"",
        "\"Issues type \"",
        "\" isn't supported\"",
        "\"Running CxFlow scan with command line: {}\"",
        "\"run should exit with exit code {}\"",
        "\"Expected an exception to be thrown.\"",
        "\"The expected exit code did not match\"",
        "\"repository is github\"",
        "\"test\"",
        "\" --scan --app=MyApp --cx-project=test\"",
        "\"bug tracker contains {} issues\"",
        "\"comparing expected number of issues: {}, to actual bug tracker issues; {}\"",
        "\"Wrong issue count in bug tracker.\"",
        "\"running CxFlow with `scan local sources` options\"",
        "\"ci-local-scan-test\"",
        "\"--scan --cx-project=%s --app=MyApp --f=%s --blocksysexit\"",
        "\"no exception is thrown\"",
        "\"Unexpected exception while running CxFlow\"",
        "\"Caught CxFlow execution exception: {}.\"",
        "\"Cleaning jira project before test: {}\"",
        "\"ast-cli-test-%s\"",
        "\"Copying test project files from resources ({}) into a temp directory: {}\""
    ],
    "variables": [
        "flowProperties",
        "jiraProperties",
        "scaProperties",
        "astProperties",
        "cxFlowRunner",
        "cxFlowExecutionException",
        "customAstProjectName",
        "directoryToScan",
        "jiraUtils"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "beforeEachScenario",
        "afterEachScenario",
        "setScanInitiator",
        "sourceDirectoryContainsVulnerableFiles",
        "runningWithBreakBuild",
        "validateExitCode",
        "runnningScan",
        "validateBugTrackerIssues",
        "runningCxFlowWithScanLocalSourcesOptions",
        "noExceptionIsThrown",
        "tryRunCxFlow",
        "initJiraBugTracker",
        "Path",
        "getTempDir",
        "copyTestProjectTo"
    ],
    "classes": [
        "AstCliSteps"
    ]
}