{
    "identifiers": [
        "io",
        "temporal",
        "replay",
        "com",
        "google",
        "protobuf",
        "ByteString",
        "io",
        "temporal",
        "api",
        "history",
        "v1",
        "History",
        "io",
        "temporal",
        "api",
        "workflowservice",
        "v1",
        "GetWorkflowExecutionHistoryResponse",
        "io",
        "temporal",
        "api",
        "workflowservice",
        "v1",
        "PollWorkflowTaskQueueResponse",
        "io",
        "temporal",
        "testUtils",
        "HistoryUtils",
        "java",
        "nio",
        "charset",
        "Charset",
        "java",
        "time",
        "Duration",
        "java",
        "util",
        "NoSuchElementException",
        "java",
        "util",
        "concurrent",
        "atomic",
        "AtomicInteger",
        "org",
        "junit",
        "Assert",
        "org",
        "junit",
        "Test",
        "EMPTY_PAGE_TOKEN",
        "ByteString",
        "copyFrom",
        "Charset",
        "defaultCharset",
        "NEXT_PAGE_TOKEN",
        "ByteString",
        "copyFrom",
        "Charset",
        "defaultCharset",
        "Test",
        "workflowTask",
        "PollWorkflowTaskQueueResponse",
        "newBuilder",
        "setNextPageToken",
        "NEXT_PAGE_TOKEN",
        "build",
        "timesCalledServer",
        "iterator",
        "workflowTask",
        "Duration",
        "ofSeconds",
        "timesCalledServer",
        "incrementAndGet",
        "EMPTY_PAGE_TOKEN",
        "equals",
        "nextPageToken",
        "GetWorkflowExecutionHistoryResponse",
        "newBuilder",
        "build",
        "history",
        "HistoryUtils",
        "generateWorkflowTaskWithInitialHistory",
        "getHistory",
        "GetWorkflowExecutionHistoryResponse",
        "newBuilder",
        "setHistory",
        "history",
        "setNextPageToken",
        "EMPTY_PAGE_TOKEN",
        "build",
        "e",
        "e",
        "Assert",
        "assertEquals",
        "timesCalledServer",
        "get",
        "Assert",
        "assertTrue",
        "iterator",
        "hasNext",
        "Assert",
        "assertEquals",
        "timesCalledServer",
        "get",
        "Assert",
        "assertNotNull",
        "iterator",
        "next",
        "Assert",
        "assertTrue",
        "iterator",
        "hasNext",
        "Assert",
        "assertNotNull",
        "iterator",
        "next",
        "Assert",
        "assertTrue",
        "iterator",
        "hasNext",
        "Assert",
        "assertNotNull",
        "iterator",
        "next",
        "Assert",
        "assertEquals",
        "timesCalledServer",
        "get",
        "Assert",
        "assertFalse",
        "iterator",
        "hasNext",
        "Assert",
        "assertEquals",
        "timesCalledServer",
        "get",
        "Assert",
        "assertThrows",
        "iterator",
        "next",
        "Assert",
        "assertEquals",
        "timesCalledServer",
        "get"
    ],
    "literals": [
        "\"empty page token\"",
        "\"next token\"",
        "\"default\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "*  Copyright (C) 2020 Temporal Technologies, Inc. All Rights Reserved.\n *\n *  Copyright 2012-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Modifications copyright (C) 2017 Uber Technologies, Inc.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\"). You may not\n *  use this file except in compliance with the License. A copy of the License is\n *  located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed on\n *  an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.",
        "This test Scenario verifies following things:\n     1. hasNext() method makes a call to the server to retrieve workflow history when current\n     history is empty and history token is available and cached the result.\n     2. next() method reuses cached history when possible.\n     3. hasNext() fetches an empty page and return false.\n     4. next() throws NoSuchElementException when neither history no history token is available."
    ],
    "functions": [
        "verifyHasNextIsFalseWhenHistoryIsEmpty",
        "GetWorkflowExecutionHistoryResponse",
        "queryWorkflowExecutionHistory"
    ],
    "classes": [
        "WorkflowHistoryIteratorTest"
    ]
}