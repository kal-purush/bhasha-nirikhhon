{
    "identifiers": [
        "requests",
        "django",
        "contrib",
        "auth",
        "authenticate",
        "login",
        "django",
        "shortcuts",
        "redirect",
        "render",
        "ImportError",
        "request",
        "request",
        "method",
        "render",
        "request",
        "request",
        "POST",
        "get",
        "request",
        "POST",
        "get",
        "request",
        "POST",
        "get",
        "requests",
        "post",
        "url",
        "data",
        "secret_key",
        "client_key",
        "response",
        "json",
        "get",
        "authenticate",
        "request",
        "username",
        "username",
        "password",
        "password",
        "user_in_database",
        "login",
        "request",
        "user_in_database",
        "redirect",
        "render",
        "request"
    ],
    "literals": [
        "\"secretKey\"",
        "\"https://www.google.com/recaptcha/api/siteverify\"",
        "\"POST\"",
        "\"login.html\"",
        "\"username\"",
        "\"password\"",
        "\"g-recaptcha-response\"",
        "\"secret\"",
        "\"response\"",
        "\"success\"",
        "\"/your-webpage\"",
        "\"login.html\""
    ],
    "variables": [
        "authenticate",
        "login",
        "render",
        "redirect",
        "secret_key",
        "url",
        "username",
        "password",
        "client_key",
        "response",
        "user_in_database"
    ],
    "comments": [
        "Enter your recaptcha secret key here",
        "when method is not POST, direct user to login page",
        "from the frontend, get username, password, and client_key",
        "post recaptcha response to Google's recaptcha api",
        "if the recaptcha api verified our keys",
        "authenticate the user"
    ],
    "docstrings": [
        "\"\"\"\nRecaptcha is a free captcha service offered by Google in order to secure websites and\nforms.  At https://www.google.com/recaptcha/admin/create you can create new recaptcha\nkeys and see the keys that your have already created.\n* Keep in mind that recaptcha doesn't work with localhost\nWhen you create a recaptcha key, your will get two separate keys: ClientKey & SecretKey.\nClientKey should be kept in your site's front end\nSecretKey should be kept in your site's  back end\n\n# An example HTML login form with recaptcha tag is shown below\n\n    <form action=\"\" method=\"post\">\n        <h2 class=\"text-center\">Log in</h2>\n        {% csrf_token %}\n        <div class=\"form-group\">\n            <input type=\"text\" name=\"username\" required=\"required\">\n        </div>\n        <div class=\"form-group\">\n            <input type=\"password\" name=\"password\" required=\"required\">\n        </div>\n        <div class=\"form-group\">\n            <button type=\"submit\">Log in</button>\n        </div>\n        <!-- Below is the recaptcha tag of html -->\n        <div class=\"g-recaptcha\" data-sitekey=\"ClientKey\"></div>\n    </form>\n\n    <!-- Below is the recaptcha script to be kept inside html tag -->\n    <script src=\"https://www.google.com/recaptcha/api.js\" async defer></script>\n\nBelow a Django function for the views.py file contains a login form for demonstrating\nrecaptcha verification.\n\"\"\""
    ],
    "functions": [
        "login_using_recaptcha"
    ],
    "classes": []
}