{
    "identifiers": [
        "pandas",
        "pd",
        "df",
        "df",
        "rename",
        "columns",
        "inplace",
        "df",
        "replace",
        "df",
        "replace",
        "df",
        "replace",
        "df",
        "replace",
        "regex",
        "df",
        "replace",
        "regex",
        "df",
        "replace",
        "regex",
        "df",
        "replace",
        "regex",
        "df",
        "dropna",
        "subset",
        "inplace",
        "pd",
        "to_datetime",
        "df",
        "infer_datetime_format",
        "df",
        "strip",
        "df",
        "strip",
        "df",
        "split",
        "df",
        "astype",
        "upper",
        "df",
        "astype",
        "lower",
        "df",
        "replace",
        "df",
        "replace",
        "df",
        "replace",
        "df",
        "pd",
        "read_csv",
        "clean_pb2020",
        "df",
        "df",
        "to_csv"
    ],
    "literals": [
        "'state'",
        "'STATE_NAME'",
        "'city'",
        "'CITY'",
        "'name'",
        "'text'",
        "'CITY'",
        "'CITY'",
        "'DC'",
        "'Washington'",
        "'STATE_NAME'",
        "'STATE_NAME'",
        "'Washington DC'",
        "'District of Columbia'",
        "'CITY'",
        "'CITY'",
        "'Hungtington Beach'",
        "'Huntington Beach'",
        "'id'",
        "'id'",
        "'-dc'",
        "'-washington'",
        "'id'",
        "'id'",
        "'-hungtingtonbeach'",
        "'-huntingtonbeach'",
        "'id'",
        "'id'",
        "'-costa-mesa'",
        "'-costamesa'",
        "'id'",
        "'id'",
        "'-newyorkcity'",
        "'-newyork'",
        "'CITY'",
        "'date'",
        "'date'",
        "'date'",
        "'CITY'",
        "'CITY'",
        "'STATE_NAME'",
        "'STATE_NAME'",
        "'state_code'",
        "'id'",
        "'-'",
        "'state_code'",
        "'state_code'",
        "'text'",
        "'text'",
        "'text'",
        "'text'",
        "r'\\''",
        "r''",
        "'CITY'",
        "'CITY'",
        "r'[^a-zA-Z]'",
        "r' '",
        "'text'",
        "'text'",
        "r'[^a-zA-Z]'",
        "r' '",
        "'dbsetup/training_data.csv'",
        "'dbsetup/training_data2.csv'"
    ],
    "variables": [
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df"
    ],
    "comments": [
        "rename columns (location columns to loc standard and description column to 'text')",
        "drop redundant date column",
        "df = df.drop('date_text', axis=1)",
        "change substandard city and state names",
        "fix id to match city name",
        "drop NaNs",
        "put date column in datetime",
        "remove leading and trailing whitespace from columns",
        "create column for state abbreviations",
        "ensure state code column is str and capitalized",
        "put description column into str and convert text to lowercase",
        "regex for nlp:",
        "remove backslash and apostrophe",
        "remove anything that isn't in a-z"
    ],
    "docstrings": [
        "'''\n    function that takes PB2020 api data\n    processes it according to our project needs\n    outputs a cleaned df\n    '''"
    ],
    "functions": [
        "clean_pb2020"
    ],
    "classes": []
}