{
    "identifiers": [
        "sys",
        "textwrap",
        "time",
        "typing",
        "looker_sdk",
        "looker_sdk",
        "models40",
        "models",
        "sdk_exceptions",
        "looker_sdk",
        "init40",
        "model",
        "view",
        "fields",
        "sdk",
        "create_query",
        "body",
        "models",
        "WriteQuery",
        "model",
        "model",
        "view",
        "view",
        "fields",
        "fields",
        "query",
        "id",
        "models",
        "WriteCreateQueryTask",
        "query_id",
        "query",
        "id",
        "result_format",
        "models",
        "ResultFormat",
        "csv",
        "sdk",
        "create_query_task",
        "body",
        "create_query_task",
        "limit",
        "task",
        "id",
        "sdk",
        "query_task",
        "query_task_id",
        "task",
        "id",
        "poll",
        "status",
        "poll",
        "status",
        "poll",
        "sdk_exceptions",
        "RenderTaskError",
        "poll",
        "status",
        "time",
        "sleep",
        "delay",
        "elapsed",
        "delay",
        "elapsed",
        "sdk",
        "query_task_results",
        "task",
        "id",
        "model",
        "view",
        "fields",
        "sdk",
        "create_query",
        "body",
        "model",
        "view",
        "fields",
        "sdk",
        "create_query_task",
        "body",
        "query",
        "limit",
        "sdk",
        "query_task",
        "query_task_id",
        "task",
        "poll",
        "poll",
        "sdk_exceptions",
        "RenderTaskError",
        "poll",
        "time",
        "sleep",
        "delay",
        "elapsed",
        "delay",
        "elapsed",
        "sdk",
        "query_task_results",
        "task",
        "sys",
        "argv",
        "len",
        "sys",
        "argv",
        "sys",
        "argv",
        "len",
        "sys",
        "argv",
        "fields",
        "sys",
        "argv",
        "ValueError",
        "sdk_exceptions",
        "ArgumentError",
        "textwrap",
        "dedent",
        "main_models",
        "model",
        "view",
        "fields",
        "model",
        "view",
        "join",
        "fields",
        "open",
        "filename",
        "f",
        "f",
        "write",
        "result",
        "filename",
        "sys",
        "exit",
        "main"
    ],
    "literals": [
        "\"../../looker.ini\"",
        "\"Running model class instance form of SDK\"",
        "\"failure\"",
        "\"error\"",
        "\"Query failed\"",
        "\"complete\"",
        "f\"query task completed in {elapsed} seconds\"",
        "\"Running dictionary form of SDK\"",
        "\"model\"",
        "\"view\"",
        "\"fields\"",
        "\"query_id\"",
        "\"id\"",
        "\"result_format\"",
        "\"csv\"",
        "\"id\"",
        "\"status\"",
        "\"error\"",
        "\"Query failed\"",
        "\"status\"",
        "\"complete\"",
        "f\"query task completed in {elapsed} seconds\"",
        "\"id\"",
        "\"\"",
        "\"\"",
        "f\"{model}--{view}--{('-').join(fields)}\"",
        "'-'",
        "\"w\"",
        "f\"Look saved to '{filename}'\"",
        "\"__main__\""
    ],
    "variables": [
        "sdk",
        "query",
        "create_query_task",
        "task",
        "elapsed",
        "delay",
        "poll",
        "query",
        "task",
        "elapsed",
        "delay",
        "poll",
        "model",
        "view",
        "model",
        "view",
        "result",
        "filename"
    ],
    "comments": [
        "WriteCreateQueryTask.result_format is an enum",
        "wait .5 seconds",
        "Note - dictionary form does not adhere to the type safety in place",
        "for the SDK. Here you will see the following mypy error:",
        "",
        "Error: mypy: Argument \"body\" to \"create_query\" of \"Looker40SDK\" has",
        "incompatible type \"Dict[str, Any]\"; expected \"WriteQuery\"",
        "",
        "As long as you are respecting what the API can take as input you should",
        "be fine. However, the SDK will send whatever you provide, including",
        "extraneous input and give you back whatever the API server replies with.",
        "type: ignore",
        "In dictionary form \"result_format\" key is just a string, not an enum.",
        "type: ignore",
        "wait .5 seconds",
        "an alternate implementation using dictionaries",
        "result = main_dictionaries(model, view, fields)"
    ],
    "docstrings": [
        "\"\"\"QueryTask logic implemented using model class instances.\"\"\"",
        "\"\"\"QueryTask logic implemented using dictionaries.\"\"\"",
        "\"\"\"Given a model, view, and fields create a query, and then a query task\n    to asynchronously execute.\n\n    $ python query_task.py thelook users users.first_name [users.last_name users.email ...]\n    \"\"\"",
        "\"\"\"\n                Please provide: <model> <view> <field1> [<field2> ...]\n                \"\"\""
    ],
    "functions": [
        "main_models",
        "main_dictionaries",
        "main"
    ],
    "classes": []
}