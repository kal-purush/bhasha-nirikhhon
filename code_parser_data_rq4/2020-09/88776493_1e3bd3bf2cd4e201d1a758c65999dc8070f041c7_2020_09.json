{
    "identifiers": [
        "yt",
        "testing",
        "assert_allclose_units",
        "assert_raises",
        "requires_file",
        "yt",
        "units",
        "YTQuantity",
        "yt",
        "utilities",
        "answer_testing",
        "framework",
        "data_dir_load",
        "ds",
        "assert_allclose_units",
        "ds",
        "length_unit",
        "YTQuantity",
        "length_unit",
        "assert_allclose_units",
        "ds",
        "temperature_unit",
        "YTQuantity",
        "temperature_unit",
        "assert_allclose_units",
        "ds",
        "density_unit",
        "YTQuantity",
        "density_unit",
        "assert_allclose_units",
        "ds",
        "mass_unit",
        "YTQuantity",
        "mass_unit",
        "assert_allclose_units",
        "ds",
        "velocity_unit",
        "YTQuantity",
        "velocity_unit",
        "assert_allclose_units",
        "ds",
        "pressure_unit",
        "YTQuantity",
        "pressure_unit",
        "assert_allclose_units",
        "ds",
        "time_unit",
        "YTQuantity",
        "time_unit",
        "assert_allclose_units",
        "ds",
        "magnetic_unit",
        "YTQuantity",
        "magnetic_unit",
        "requires_file",
        "khi_cartesian_2D",
        "length_unit",
        "length_unit",
        "temperature_unit",
        "temperature_unit",
        "numberdensity_unit",
        "numberdensity_unit",
        "data_dir_load",
        "khi_cartesian_2D",
        "kwargs",
        "overrides",
        "_assert_normalisations_equal",
        "ds",
        "requires_file",
        "khi_cartesian_2D",
        "length_unit",
        "length_unit",
        "temperature_unit",
        "temperature_unit",
        "mass_unit",
        "mass_unit",
        "data_dir_load",
        "khi_cartesian_2D",
        "kwargs",
        "overrides",
        "_assert_normalisations_equal",
        "ds",
        "requires_file",
        "khi_cartesian_2D",
        "length_unit",
        "length_unit",
        "time_unit",
        "time_unit",
        "mass_unit",
        "mass_unit",
        "data_dir_load",
        "khi_cartesian_2D",
        "kwargs",
        "overrides",
        "_assert_normalisations_equal",
        "ds",
        "requires_file",
        "khi_cartesian_2D",
        "length_unit",
        "length_unit",
        "velocity_unit",
        "velocity_unit",
        "numberdensity_unit",
        "numberdensity_unit",
        "data_dir_load",
        "khi_cartesian_2D",
        "kwargs",
        "overrides",
        "_assert_normalisations_equal",
        "ds",
        "requires_file",
        "khi_cartesian_2D",
        "length_unit",
        "length_unit",
        "velocity_unit",
        "velocity_unit",
        "mass_unit",
        "mass_unit",
        "data_dir_load",
        "khi_cartesian_2D",
        "kwargs",
        "overrides",
        "_assert_normalisations_equal",
        "ds",
        "requires_file",
        "khi_cartesian_2D",
        "data_dir_load",
        "khi_cartesian_2D",
        "assert_allclose_units",
        "ds",
        "length_unit",
        "YTQuantity",
        "assert_allclose_units",
        "ds",
        "temperature_unit",
        "YTQuantity",
        "assert_allclose_units",
        "ds",
        "density_unit",
        "YTQuantity",
        "assert_allclose_units",
        "ds",
        "mass_unit",
        "YTQuantity",
        "assert_allclose_units",
        "ds",
        "velocity_unit",
        "YTQuantity",
        "assert_allclose_units",
        "ds",
        "pressure_unit",
        "YTQuantity",
        "assert_allclose_units",
        "ds",
        "time_unit",
        "YTQuantity",
        "assert_allclose_units",
        "ds",
        "magnetic_unit",
        "YTQuantity",
        "requires_file",
        "khi_cartesian_2D",
        "length_unit",
        "length_unit",
        "numberdensity_unit",
        "numberdensity_unit",
        "temperature_unit",
        "temperature_unit",
        "time_unit",
        "time_unit",
        "assert_raises",
        "ValueError",
        "data_dir_load",
        "khi_cartesian_2D",
        "kwargs",
        "overrides",
        "requires_file",
        "khi_cartesian_2D",
        "length_unit",
        "length_unit",
        "velocity_unit",
        "velocity_unit",
        "temperature_unit",
        "temperature_unit",
        "assert_raises",
        "ValueError",
        "data_dir_load",
        "khi_cartesian_2D",
        "kwargs",
        "overrides"
    ],
    "literals": [
        "\"amrvac/kh_2d0000.dat\"",
        "\"cm\"",
        "\"cm**-3\"",
        "\"K\"",
        "\"g*cm**-3\"",
        "\"g\"",
        "\"cm*s**-1\"",
        "\"dyn*cm**-2\"",
        "\"s\"",
        "\"gauss\"",
        "\"units_override\"",
        "\"units_override\"",
        "\"units_override\"",
        "\"units_override\"",
        "\"units_override\"",
        "\"cm\"",
        "\"K\"",
        "\"g*cm**-3\"",
        "\"g\"",
        "\"cm*s**-1\"",
        "\"dyn*cm**-2\"",
        "\"s\"",
        "\"gauss\"",
        "\"units_override\"",
        "\"units_override\""
    ],
    "variables": [
        "khi_cartesian_2D",
        "length_unit",
        "numberdensity_unit",
        "temperature_unit",
        "density_unit",
        "mass_unit",
        "velocity_unit",
        "pressure_unit",
        "time_unit",
        "magnetic_unit",
        "overrides",
        "ds",
        "overrides",
        "ds",
        "overrides",
        "ds",
        "overrides",
        "ds",
        "overrides",
        "ds",
        "ds",
        "overrides",
        "overrides"
    ],
    "comments": [
        "Tests for units: verify that overriding certain units yields the correct derived units.",
        "The following are correct normalisations based on length, numberdensity and temperature",
        "overriding length, temperature, numberdensity",
        "overriding length, temperature, mass",
        "overriding length, time, mass",
        "overriding length, velocity, numberdensity",
        "overriding length, velocity, mass",
        "test default normalisations, without overrides",
        "test forbidden case: too many arguments (max 3 are allowed)",
        "test forbidden case: both velocity and temperature are specified as overrides"
    ],
    "docstrings": [],
    "functions": [
        "_assert_normalisations_equal",
        "test_normalisations_length_temp_nb",
        "test_normalisations_length_temp_mass",
        "test_normalisations_length_time_mass",
        "test_normalisations_length_vel_nb",
        "test_normalisations_length_vel_mass",
        "test_normalisations_default",
        "test_normalisations_too_many_args",
        "test_normalisations_vel_and_length"
    ],
    "classes": []
}