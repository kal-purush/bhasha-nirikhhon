{
    "identifiers": [
        "emptyArray",
        "emptyArray",
        "table",
        "table",
        "table",
        "tableRow",
        "tableRow",
        "class2type",
        "zepto",
        "element",
        "selector",
        "selector",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "matchesSelector",
        "matchesSelector",
        "element",
        "selector",
        "element",
        "parent",
        "temp",
        "parent",
        "tempParent",
        "element",
        "match",
        "zepto",
        "parent",
        "selector",
        "element",
        "temp",
        "tempParent",
        "element",
        "match",
        "obj",
        "obj",
        "obj",
        "class2type",
        "toString",
        "obj",
        "value",
        "value",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "isObject",
        "obj",
        "isWindow",
        "obj",
        "obj",
        "obj",
        "obj",
        "array",
        "array",
        "item",
        "item",
        "array",
        "array",
        "$",
        "array",
        "array",
        "camelize",
        "match",
        "chr",
        "chr",
        "chr",
        "uniq",
        "array",
        "array",
        "item",
        "idx",
        "array",
        "item",
        "idx",
        "name",
        "name",
        "classCache",
        "classCache",
        "name",
        "classCache",
        "name",
        "name",
        "name",
        "value",
        "value",
        "cssNumber",
        "dasherize",
        "name",
        "value",
        "value",
        "nodeName",
        "elementDisplay",
        "nodeName",
        "element",
        "nodeName",
        "element",
        "display",
        "getComputedStyle",
        "element",
        "element",
        "element",
        "display",
        "display",
        "elementDisplay",
        "nodeName",
        "display",
        "elementDisplay",
        "nodeName",
        "element",
        "element",
        "element",
        "$",
        "element",
        "node",
        "node",
        "node",
        "zepto",
        "html",
        "name",
        "properties",
        "singleTagRE",
        "html",
        "dom",
        "$",
        "dom",
        "html",
        "html",
        "html",
        "tagExpanderRE",
        "name",
        "name",
        "fragmentRE",
        "html",
        "name",
        "containers",
        "name",
        "container",
        "containers",
        "name",
        "container",
        "html",
        "dom",
        "$",
        "container",
        "container",
        "isPlainObject",
        "properties",
        "nodes",
        "$",
        "dom",
        "$",
        "properties",
        "key",
        "value",
        "methodAttributes",
        "key",
        "nodes",
        "key",
        "value",
        "nodes",
        "key",
        "value",
        "dom",
        "zepto",
        "dom",
        "selector",
        "dom",
        "dom",
        "dom",
        "$",
        "dom",
        "selector",
        "dom",
        "zepto",
        "zepto",
        "zepto",
        "selector",
        "context",
        "selector",
        "zepto",
        "selector",
        "selector",
        "selector",
        "selector",
        "fragmentRE",
        "selector",
        "dom",
        "zepto",
        "selector",
        "context",
        "selector",
        "context",
        "$",
        "context",
        "selector",
        "dom",
        "zepto",
        "selector",
        "isFunction",
        "selector",
        "$",
        "selector",
        "zepto",
        "selector",
        "selector",
        "isArray",
        "selector",
        "dom",
        "compact",
        "selector",
        "isObject",
        "selector",
        "dom",
        "selector",
        "selector",
        "fragmentRE",
        "selector",
        "dom",
        "zepto",
        "selector",
        "context",
        "selector",
        "context",
        "$",
        "context",
        "selector",
        "dom",
        "zepto",
        "selector",
        "zepto",
        "dom",
        "selector",
        "$",
        "selector",
        "context",
        "zepto",
        "selector",
        "context",
        "target",
        "source",
        "deep",
        "key",
        "source",
        "deep",
        "isPlainObject",
        "source",
        "key",
        "isArray",
        "source",
        "key",
        "isPlainObject",
        "source",
        "key",
        "isPlainObject",
        "target",
        "key",
        "target",
        "key",
        "isArray",
        "source",
        "key",
        "isArray",
        "target",
        "key",
        "target",
        "key",
        "extend",
        "target",
        "key",
        "source",
        "key",
        "deep",
        "source",
        "key",
        "target",
        "key",
        "source",
        "key",
        "$",
        "target",
        "arguments",
        "target",
        "deep",
        "target",
        "target",
        "args",
        "args",
        "arg",
        "extend",
        "target",
        "arg",
        "deep",
        "target",
        "zepto",
        "element",
        "selector",
        "selector",
        "maybeID",
        "selector",
        "maybeID",
        "maybeClass",
        "selector",
        "selector",
        "simpleSelectorRE",
        "nameOnly",
        "isDocument",
        "element",
        "isSimple",
        "maybeID",
        "found",
        "element",
        "nameOnly",
        "found",
        "element",
        "element",
        "isSimple",
        "maybeID",
        "maybeClass",
        "element",
        "nameOnly",
        "element",
        "selector",
        "element",
        "selector",
        "nodes",
        "selector",
        "selector",
        "$",
        "nodes",
        "$",
        "nodes",
        "selector",
        "$",
        "parent",
        "node",
        "parent",
        "node",
        "parent",
        "node",
        "parent",
        "node",
        "node",
        "node",
        "node",
        "node",
        "parent",
        "context",
        "arg",
        "idx",
        "payload",
        "isFunction",
        "arg",
        "arg",
        "context",
        "idx",
        "payload",
        "arg",
        "node",
        "name",
        "value",
        "value",
        "node",
        "name",
        "node",
        "name",
        "value",
        "node",
        "value",
        "node",
        "klass",
        "klass",
        "value",
        "svg",
        "klass",
        "klass",
        "svg",
        "klass",
        "value",
        "node",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "$",
        "value",
        "value",
        "value",
        "e",
        "value",
        "$",
        "$",
        "isFunction",
        "$",
        "isWindow",
        "$",
        "isArray",
        "$",
        "isPlainObject",
        "$",
        "obj",
        "name",
        "obj",
        "$",
        "elem",
        "array",
        "i",
        "emptyArray",
        "array",
        "elem",
        "i",
        "$",
        "camelize",
        "$",
        "$",
        "$",
        "$",
        "$",
        "elements",
        "callback",
        "likeArray",
        "elements",
        "i",
        "i",
        "elements",
        "i",
        "value",
        "callback",
        "elements",
        "i",
        "i",
        "value",
        "values",
        "value",
        "key",
        "elements",
        "value",
        "callback",
        "elements",
        "key",
        "key",
        "value",
        "values",
        "value",
        "flatten",
        "values",
        "$",
        "elements",
        "callback",
        "likeArray",
        "elements",
        "i",
        "i",
        "elements",
        "i",
        "callback",
        "elements",
        "i",
        "i",
        "elements",
        "i",
        "elements",
        "key",
        "elements",
        "callback",
        "elements",
        "key",
        "key",
        "elements",
        "key",
        "elements",
        "elements",
        "$",
        "elements",
        "callback",
        "elements",
        "callback",
        "$",
        "$",
        "i",
        "name",
        "class2type",
        "name",
        "name",
        "$",
        "emptyArray",
        "emptyArray",
        "emptyArray",
        "emptyArray",
        "emptyArray",
        "emptyArray",
        "fn",
        "$",
        "$",
        "el",
        "i",
        "fn",
        "el",
        "i",
        "el",
        "$",
        "arguments",
        "callback",
        "readyRE",
        "callback",
        "$",
        "callback",
        "$",
        "idx",
        "idx",
        "idx",
        "idx",
        "idx",
        "callback",
        "emptyArray",
        "el",
        "idx",
        "callback",
        "el",
        "idx",
        "el",
        "selector",
        "isFunction",
        "selector",
        "selector",
        "$",
        "element",
        "zepto",
        "element",
        "selector",
        "selector",
        "context",
        "$",
        "uniq",
        "$",
        "selector",
        "context",
        "selector",
        "zepto",
        "selector",
        "selector",
        "isFunction",
        "selector",
        "selector",
        "idx",
        "selector",
        "idx",
        "nodes",
        "selector",
        "selector",
        "likeArray",
        "selector",
        "isFunction",
        "selector",
        "selector",
        "$",
        "selector",
        "el",
        "excludes",
        "el",
        "nodes",
        "el",
        "$",
        "nodes",
        "selector",
        "isObject",
        "selector",
        "$",
        "selector",
        "$",
        "selector",
        "idx",
        "idx",
        "idx",
        "idx",
        "idx",
        "el",
        "isObject",
        "el",
        "el",
        "$",
        "el",
        "el",
        "isObject",
        "el",
        "el",
        "$",
        "el",
        "selector",
        "selector",
        "result",
        "$",
        "selector",
        "result",
        "$",
        "selector",
        "emptyArray",
        "$this",
        "parent",
        "$",
        "parent",
        "node",
        "result",
        "$",
        "zepto",
        "selector",
        "result",
        "zepto",
        "selector",
        "result",
        "selector",
        "context",
        "selector",
        "collection",
        "$",
        "selector",
        "node",
        "collection",
        "collection",
        "node",
        "zepto",
        "node",
        "selector",
        "node",
        "node",
        "context",
        "isDocument",
        "node",
        "node",
        "$",
        "node",
        "selector",
        "nodes",
        "nodes",
        "$",
        "nodes",
        "node",
        "node",
        "node",
        "isDocument",
        "node",
        "ancestors",
        "node",
        "ancestors",
        "node",
        "node",
        "filtered",
        "ancestors",
        "selector",
        "selector",
        "filtered",
        "uniq",
        "selector",
        "selector",
        "filtered",
        "children",
        "selector",
        "selector",
        "filtered",
        "i",
        "el",
        "children",
        "el",
        "child",
        "child",
        "el",
        "selector",
        "property",
        "$",
        "el",
        "el",
        "property",
        "getComputedStyle",
        "defaultDisplay",
        "newContent",
        "newContent",
        "structure",
        "isFunction",
        "structure",
        "func",
        "$",
        "structure",
        "dom",
        "index",
        "$",
        "func",
        "structure",
        "index",
        "clone",
        "dom",
        "dom",
        "structure",
        "$",
        "structure",
        "$",
        "structure",
        "children",
        "structure",
        "structure",
        "children",
        "$",
        "structure",
        "structure",
        "isFunction",
        "structure",
        "index",
        "$",
        "func",
        "structure",
        "index",
        "structure",
        "contents",
        "contents",
        "dom",
        "dom",
        "$",
        "$",
        "setting",
        "$",
        "setting",
        "el",
        "setting",
        "el",
        "el",
        "selector",
        "$",
        "selector",
        "selector",
        "$",
        "selector",
        "html",
        "arguments",
        "idx",
        "$",
        "funcArg",
        "html",
        "idx",
        "originHtml",
        "text",
        "arguments",
        "idx",
        "funcArg",
        "text",
        "idx",
        "newText",
        "newText",
        "name",
        "value",
        "name",
        "arguments",
        "result",
        "name",
        "name",
        "name",
        "result",
        "idx",
        "isObject",
        "name",
        "key",
        "name",
        "setAttribute",
        "key",
        "name",
        "key",
        "setAttribute",
        "name",
        "funcArg",
        "value",
        "idx",
        "name",
        "name",
        "name",
        "attribute",
        "setAttribute",
        "attribute",
        "name",
        "value",
        "name",
        "propMap",
        "name",
        "name",
        "arguments",
        "idx",
        "name",
        "funcArg",
        "value",
        "idx",
        "name",
        "name",
        "name",
        "value",
        "name",
        "capitalRE",
        "arguments",
        "attrName",
        "value",
        "attrName",
        "data",
        "deserializeValue",
        "data",
        "value",
        "arguments",
        "idx",
        "funcArg",
        "value",
        "idx",
        "$",
        "coordinates",
        "coordinates",
        "index",
        "$",
        "funcArg",
        "coordinates",
        "index",
        "$this",
        "$this",
        "coords",
        "parentOffset",
        "coords",
        "parentOffset",
        "$this",
        "props",
        "$this",
        "props",
        "obj",
        "obj",
        "obj",
        "obj",
        "property",
        "value",
        "arguments",
        "element",
        "computedStyle",
        "getComputedStyle",
        "element",
        "property",
        "element",
        "camelize",
        "property",
        "computedStyle",
        "property",
        "isArray",
        "property",
        "$",
        "property",
        "_",
        "prop",
        "props",
        "prop",
        "element",
        "camelize",
        "prop",
        "computedStyle",
        "prop",
        "props",
        "property",
        "value",
        "value",
        "dasherize",
        "property",
        "css",
        "dasherize",
        "property",
        "maybeAddPx",
        "property",
        "value",
        "key",
        "property",
        "property",
        "key",
        "property",
        "key",
        "dasherize",
        "key",
        "css",
        "dasherize",
        "key",
        "maybeAddPx",
        "key",
        "property",
        "key",
        "css",
        "element",
        "element",
        "$",
        "element",
        "name",
        "name",
        "emptyArray",
        "el",
        "className",
        "el",
        "classRE",
        "name",
        "name",
        "name",
        "idx",
        "classList",
        "className",
        "funcArg",
        "name",
        "idx",
        "cls",
        "newName",
        "klass",
        "$",
        "klass",
        "classList",
        "klass",
        "classList",
        "className",
        "cls",
        "cls",
        "classList",
        "name",
        "idx",
        "name",
        "className",
        "classList",
        "className",
        "funcArg",
        "name",
        "idx",
        "classList",
        "klass",
        "classList",
        "classList",
        "classRE",
        "klass",
        "className",
        "classList",
        "name",
        "when",
        "name",
        "idx",
        "$",
        "funcArg",
        "name",
        "idx",
        "className",
        "names",
        "klass",
        "when",
        "$this",
        "klass",
        "when",
        "$this",
        "klass",
        "$this",
        "klass",
        "value",
        "value",
        "hasScrollTop",
        "hasScrollTop",
        "value",
        "value",
        "value",
        "value",
        "hasScrollLeft",
        "hasScrollLeft",
        "value",
        "value",
        "rootNodeRE",
        "offsetParent",
        "offsetParent",
        "offset",
        "parseFloat",
        "$",
        "elem",
        "offset",
        "parseFloat",
        "$",
        "elem",
        "parentOffset",
        "parseFloat",
        "$",
        "offsetParent",
        "parentOffset",
        "parseFloat",
        "$",
        "offsetParent",
        "offset",
        "parentOffset",
        "offset",
        "parentOffset",
        "parent",
        "rootNodeRE",
        "parent",
        "$",
        "parent",
        "parent",
        "parent",
        "parent",
        "$",
        "$",
        "dimension",
        "dimension",
        "m",
        "m",
        "$",
        "dimension",
        "value",
        "value",
        "isWindow",
        "el",
        "el",
        "dimensionProperty",
        "isDocument",
        "el",
        "el",
        "dimensionProperty",
        "offset",
        "offset",
        "dimension",
        "idx",
        "el",
        "$",
        "el",
        "dimension",
        "funcArg",
        "value",
        "idx",
        "el",
        "dimension",
        "node",
        "fun",
        "fun",
        "node",
        "node",
        "i",
        "len",
        "i",
        "traverseNode",
        "node",
        "i",
        "fun",
        "adjacencyOperators",
        "operatorIndex",
        "operatorIndex",
        "$",
        "$",
        "arguments",
        "arg",
        "argType",
        "arg",
        "argType",
        "argType",
        "arg",
        "arg",
        "zepto",
        "arg",
        "nodes",
        "_",
        "target",
        "parent",
        "inside",
        "target",
        "target",
        "target",
        "operatorIndex",
        "target",
        "operatorIndex",
        "target",
        "operatorIndex",
        "target",
        "$",
        "parent",
        "nodes",
        "node",
        "copyByClone",
        "node",
        "node",
        "parent",
        "$",
        "node",
        "parent",
        "node",
        "target",
        "parentInDocument",
        "traverseNode",
        "node",
        "el",
        "el",
        "el",
        "el",
        "el",
        "el",
        "el",
        "$",
        "inside",
        "operatorIndex",
        "html",
        "$",
        "html",
        "zepto",
        "$",
        "zepto",
        "uniq",
        "zepto",
        "deserializeValue",
        "$",
        "zepto",
        "$",
        "Zepto",
        "Zepto",
        "$",
        "$",
        "obj",
        "obj",
        "specialEvents",
        "specialEvents",
        "specialEvents",
        "specialEvents",
        "element",
        "element",
        "element",
        "_zid",
        "element",
        "fn",
        "selector",
        "parse",
        "matcherFor",
        "handlers",
        "zid",
        "element",
        "handler",
        "handler",
        "handler",
        "matcher",
        "handler",
        "fn",
        "zid",
        "handler",
        "zid",
        "fn",
        "selector",
        "handler",
        "selector",
        "parts",
        "parts",
        "ns",
        "ns",
        "handler",
        "captureSetting",
        "handler",
        "focusinSupported",
        "handler",
        "focus",
        "captureSetting",
        "hover",
        "focusinSupported",
        "focus",
        "element",
        "events",
        "fn",
        "data",
        "selector",
        "delegator",
        "capture",
        "zid",
        "element",
        "handlers",
        "id",
        "handlers",
        "id",
        "events",
        "$",
        "fn",
        "parse",
        "handler",
        "fn",
        "handler",
        "selector",
        "handler",
        "hover",
        "fn",
        "e",
        "e",
        "related",
        "related",
        "$",
        "related",
        "handler",
        "arguments",
        "handler",
        "delegator",
        "delegator",
        "fn",
        "handler",
        "e",
        "e",
        "compatible",
        "e",
        "e",
        "e",
        "data",
        "callback",
        "element",
        "e",
        "e",
        "e",
        "e",
        "result",
        "e",
        "e",
        "result",
        "handler",
        "handler",
        "element",
        "element",
        "realEvent",
        "handler",
        "handler",
        "eventCapture",
        "handler",
        "capture",
        "element",
        "events",
        "fn",
        "selector",
        "capture",
        "zid",
        "element",
        "events",
        "findHandlers",
        "element",
        "fn",
        "selector",
        "handler",
        "handlers",
        "id",
        "handler",
        "element",
        "element",
        "realEvent",
        "handler",
        "handler",
        "eventCapture",
        "handler",
        "capture",
        "$",
        "add",
        "remove",
        "$",
        "fn",
        "context",
        "arguments",
        "arguments",
        "isFunction",
        "fn",
        "fn",
        "context",
        "args",
        "args",
        "arguments",
        "arguments",
        "proxyFn",
        "zid",
        "fn",
        "proxyFn",
        "isString",
        "context",
        "args",
        "args",
        "fn",
        "context",
        "fn",
        "$",
        "args",
        "$",
        "fn",
        "context",
        "fn",
        "$",
        "data",
        "callback",
        "data",
        "callback",
        "$",
        "callback",
        "callback",
        "$",
        "selector",
        "data",
        "callback",
        "selector",
        "data",
        "callback",
        "source",
        "source",
        "source",
        "source",
        "$",
        "eventMethods",
        "name",
        "predicate",
        "source",
        "name",
        "name",
        "predicate",
        "returnTrue",
        "sourceMethod",
        "sourceMethod",
        "source",
        "arguments",
        "predicate",
        "returnFalse",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "returnTrue",
        "key",
        "ignoreProperties",
        "key",
        "key",
        "proxy",
        "key",
        "key",
        "compatible",
        "proxy",
        "$",
        "selector",
        "callback",
        "selector",
        "callback",
        "$",
        "selector",
        "callback",
        "selector",
        "callback",
        "$",
        "callback",
        "$",
        "callback",
        "$",
        "callback",
        "$",
        "callback",
        "$",
        "selector",
        "data",
        "callback",
        "one",
        "isString",
        "$",
        "fn",
        "$this",
        "selector",
        "data",
        "fn",
        "one",
        "$this",
        "isString",
        "selector",
        "isFunction",
        "callback",
        "callback",
        "callback",
        "data",
        "data",
        "selector",
        "selector",
        "isFunction",
        "data",
        "data",
        "callback",
        "data",
        "data",
        "callback",
        "callback",
        "returnFalse",
        "$this",
        "_",
        "element",
        "one",
        "autoRemove",
        "e",
        "remove",
        "element",
        "e",
        "callback",
        "callback",
        "arguments",
        "selector",
        "delegator",
        "e",
        "$",
        "e",
        "selector",
        "element",
        "match",
        "match",
        "element",
        "evt",
        "$",
        "createProxy",
        "e",
        "match",
        "element",
        "autoRemove",
        "callback",
        "match",
        "evt",
        "arguments",
        "add",
        "element",
        "callback",
        "data",
        "selector",
        "delegator",
        "autoRemove",
        "$",
        "selector",
        "callback",
        "isString",
        "$",
        "fn",
        "$this",
        "selector",
        "fn",
        "$this",
        "isString",
        "selector",
        "isFunction",
        "callback",
        "callback",
        "callback",
        "selector",
        "selector",
        "callback",
        "callback",
        "returnFalse",
        "$this",
        "remove",
        "callback",
        "selector",
        "$",
        "args",
        "isString",
        "$",
        "$",
        "compatible",
        "args",
        "focus",
        "$",
        "args",
        "$",
        "args",
        "i",
        "element",
        "e",
        "createProxy",
        "isString",
        "$",
        "e",
        "args",
        "e",
        "element",
        "$",
        "findHandlers",
        "element",
        "i",
        "handler",
        "result",
        "handler",
        "e",
        "e",
        "result",
        "$",
        "callback",
        "arguments",
        "callback",
        "$",
        "props",
        "isString",
        "props",
        "props",
        "specialEvents",
        "props",
        "name",
        "props",
        "name",
        "bubbles",
        "props",
        "name",
        "name",
        "props",
        "name",
        "bubbles",
        "compatible",
        "Zepto",
        "$",
        "originAnchor",
        "context",
        "eventName",
        "data",
        "$",
        "eventName",
        "$",
        "context",
        "data",
        "settings",
        "context",
        "eventName",
        "data",
        "settings",
        "triggerAndReturn",
        "context",
        "eventName",
        "data",
        "$",
        "settings",
        "settings",
        "$",
        "triggerGlobal",
        "settings",
        "settings",
        "settings",
        "$",
        "triggerGlobal",
        "settings",
        "xhr",
        "settings",
        "settings",
        "settings",
        "context",
        "xhr",
        "settings",
        "triggerGlobal",
        "settings",
        "context",
        "xhr",
        "settings",
        "triggerGlobal",
        "settings",
        "context",
        "xhr",
        "settings",
        "data",
        "xhr",
        "settings",
        "deferred",
        "settings",
        "settings",
        "context",
        "data",
        "status",
        "xhr",
        "deferred",
        "deferred",
        "context",
        "data",
        "status",
        "xhr",
        "triggerGlobal",
        "settings",
        "context",
        "xhr",
        "settings",
        "data",
        "ajaxComplete",
        "status",
        "xhr",
        "settings",
        "error",
        "xhr",
        "settings",
        "deferred",
        "settings",
        "settings",
        "context",
        "xhr",
        "error",
        "deferred",
        "deferred",
        "context",
        "xhr",
        "error",
        "triggerGlobal",
        "settings",
        "context",
        "xhr",
        "settings",
        "error",
        "ajaxComplete",
        "xhr",
        "settings",
        "status",
        "xhr",
        "settings",
        "settings",
        "settings",
        "context",
        "xhr",
        "status",
        "triggerGlobal",
        "settings",
        "context",
        "xhr",
        "settings",
        "ajaxStop",
        "settings",
        "$",
        "options",
        "deferred",
        "options",
        "$",
        "options",
        "options",
        "$",
        "_callbackName",
        "_callbackName",
        "_callbackName",
        "jsonpID",
        "callbackName",
        "errorType",
        "$",
        "script",
        "errorType",
        "abort",
        "deferred",
        "deferred",
        "xhr",
        "$",
        "script",
        "e",
        "errorType",
        "clearTimeout",
        "abortTimeout",
        "$",
        "script",
        "e",
        "responseData",
        "ajaxError",
        "errorType",
        "xhr",
        "options",
        "deferred",
        "ajaxSuccess",
        "responseData",
        "xhr",
        "options",
        "deferred",
        "callbackName",
        "originalCallback",
        "responseData",
        "$",
        "originalCallback",
        "originalCallback",
        "responseData",
        "originalCallback",
        "responseData",
        "ajaxBeforeSend",
        "xhr",
        "options",
        "abort",
        "xhr",
        "callbackName",
        "responseData",
        "arguments",
        "script",
        "options",
        "callbackName",
        "script",
        "options",
        "abortTimeout",
        "setTimeout",
        "abort",
        "options",
        "xhr",
        "$",
        "empty",
        "empty",
        "empty",
        "empty",
        "jsonType",
        "htmlType",
        "mime",
        "mime",
        "mime",
        "mime",
        "mime",
        "mime",
        "htmlType",
        "mime",
        "jsonType",
        "scriptTypeRE",
        "mime",
        "xmlTypeRE",
        "mime",
        "url",
        "query",
        "query",
        "url",
        "url",
        "query",
        "options",
        "options",
        "options",
        "$",
        "options",
        "options",
        "$",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "appendQuery",
        "options",
        "options",
        "options",
        "$",
        "options",
        "$",
        "options",
        "$",
        "$",
        "key",
        "$",
        "settings",
        "key",
        "settings",
        "key",
        "$",
        "key",
        "ajaxStart",
        "settings",
        "settings",
        "urlAnchor",
        "urlAnchor",
        "settings",
        "urlAnchor",
        "urlAnchor",
        "settings",
        "originAnchor",
        "originAnchor",
        "urlAnchor",
        "urlAnchor",
        "settings",
        "settings",
        "serializeData",
        "settings",
        "settings",
        "settings",
        "hasPlaceholder",
        "dataType",
        "settings",
        "options",
        "options",
        "dataType",
        "dataType",
        "settings",
        "appendQuery",
        "settings",
        "dataType",
        "hasPlaceholder",
        "settings",
        "appendQuery",
        "settings",
        "settings",
        "settings",
        "settings",
        "$",
        "settings",
        "deferred",
        "settings",
        "dataType",
        "name",
        "value",
        "headers",
        "name",
        "name",
        "value",
        "settings",
        "settings",
        "xhr",
        "deferred",
        "deferred",
        "xhr",
        "settings",
        "setHeader",
        "setHeader",
        "mime",
        "mime",
        "settings",
        "mime",
        "mime",
        "mime",
        "mime",
        "xhr",
        "xhr",
        "mime",
        "settings",
        "settings",
        "settings",
        "settings",
        "setHeader",
        "settings",
        "settings",
        "name",
        "settings",
        "setHeader",
        "name",
        "settings",
        "name",
        "xhr",
        "setHeader",
        "xhr",
        "xhr",
        "xhr",
        "empty",
        "clearTimeout",
        "abortTimeout",
        "xhr",
        "xhr",
        "xhr",
        "xhr",
        "protocol",
        "dataType",
        "dataType",
        "mimeToDataType",
        "settings",
        "xhr",
        "result",
        "xhr",
        "dataType",
        "eval",
        "result",
        "dataType",
        "result",
        "xhr",
        "dataType",
        "result",
        "blankRE",
        "result",
        "$",
        "result",
        "e",
        "error",
        "e",
        "error",
        "ajaxError",
        "error",
        "xhr",
        "settings",
        "deferred",
        "ajaxSuccess",
        "result",
        "xhr",
        "settings",
        "deferred",
        "ajaxError",
        "xhr",
        "xhr",
        "xhr",
        "settings",
        "deferred",
        "ajaxBeforeSend",
        "xhr",
        "settings",
        "xhr",
        "ajaxError",
        "xhr",
        "settings",
        "deferred",
        "xhr",
        "settings",
        "name",
        "settings",
        "xhr",
        "name",
        "settings",
        "name",
        "settings",
        "settings",
        "xhr",
        "settings",
        "settings",
        "async",
        "settings",
        "settings",
        "name",
        "headers",
        "nativeSetHeader",
        "xhr",
        "headers",
        "name",
        "settings",
        "abortTimeout",
        "setTimeout",
        "xhr",
        "empty",
        "xhr",
        "ajaxError",
        "xhr",
        "settings",
        "deferred",
        "settings",
        "xhr",
        "settings",
        "settings",
        "xhr",
        "url",
        "data",
        "success",
        "dataType",
        "$",
        "data",
        "dataType",
        "success",
        "success",
        "data",
        "data",
        "$",
        "success",
        "dataType",
        "success",
        "success",
        "url",
        "data",
        "success",
        "dataType",
        "$",
        "$",
        "parseArguments",
        "arguments",
        "$",
        "parseArguments",
        "arguments",
        "options",
        "$",
        "options",
        "$",
        "parseArguments",
        "arguments",
        "options",
        "$",
        "options",
        "$",
        "url",
        "data",
        "success",
        "url",
        "parseArguments",
        "url",
        "data",
        "success",
        "options",
        "parts",
        "options",
        "parts",
        "selector",
        "parts",
        "options",
        "response",
        "selector",
        "$",
        "response",
        "rscript",
        "selector",
        "response",
        "callback",
        "callback",
        "arguments",
        "$",
        "options",
        "obj",
        "traditional",
        "scope",
        "$",
        "obj",
        "$",
        "obj",
        "$",
        "obj",
        "key",
        "value",
        "$",
        "value",
        "scope",
        "key",
        "traditional",
        "scope",
        "scope",
        "hash",
        "key",
        "scope",
        "array",
        "value",
        "value",
        "traditional",
        "serialize",
        "value",
        "traditional",
        "key",
        "key",
        "value",
        "$",
        "obj",
        "traditional",
        "key",
        "value",
        "$",
        "value",
        "value",
        "value",
        "value",
        "value",
        "escape",
        "key",
        "escape",
        "value",
        "serialize",
        "obj",
        "traditional",
        "Zepto",
        "$",
        "$",
        "value",
        "value",
        "value",
        "add",
        "result",
        "name",
        "value",
        "$",
        "_",
        "field",
        "field",
        "name",
        "field",
        "name",
        "field",
        "field",
        "field",
        "add",
        "$",
        "field",
        "result",
        "$",
        "elm",
        "result",
        "encodeURIComponent",
        "elm",
        "encodeURIComponent",
        "elm",
        "result",
        "$",
        "callback",
        "arguments",
        "callback",
        "$",
        "Zepto",
        "$",
        "$",
        "$",
        "dom",
        "selector",
        "dom",
        "dom",
        "$",
        "dom",
        "$",
        "dom",
        "selector",
        "dom",
        "dom",
        "$",
        "getComputedStyle",
        "e",
        "element",
        "nativeGetComputedStyle",
        "element",
        "e",
        "Zepto",
        "root",
        "ArrayProto",
        "ArrayProto",
        "ObjProto",
        "ObjProto",
        "FuncProto",
        "obj",
        "obj",
        "_",
        "obj",
        "_",
        "_",
        "obj",
        "obj",
        "exports",
        "exports",
        "_",
        "exports",
        "_",
        "root",
        "_",
        "_",
        "func",
        "context",
        "argCount",
        "context",
        "func",
        "argCount",
        "argCount",
        "value",
        "func",
        "context",
        "value",
        "value",
        "other",
        "func",
        "context",
        "value",
        "other",
        "value",
        "index",
        "collection",
        "func",
        "context",
        "value",
        "index",
        "collection",
        "accumulator",
        "value",
        "index",
        "collection",
        "func",
        "context",
        "accumulator",
        "value",
        "index",
        "collection",
        "func",
        "context",
        "arguments",
        "value",
        "context",
        "argCount",
        "value",
        "_",
        "_",
        "value",
        "optimizeCb",
        "value",
        "context",
        "argCount",
        "_",
        "value",
        "_",
        "value",
        "_",
        "value",
        "_",
        "value",
        "context",
        "cb",
        "value",
        "context",
        "Infinity",
        "keysFunc",
        "undefinedOnly",
        "obj",
        "arguments",
        "length",
        "obj",
        "obj",
        "index",
        "length",
        "index",
        "arguments",
        "index",
        "keysFunc",
        "source",
        "keys",
        "i",
        "l",
        "i",
        "keys",
        "i",
        "undefinedOnly",
        "obj",
        "key",
        "obj",
        "key",
        "source",
        "key",
        "obj",
        "prototype",
        "_",
        "prototype",
        "nativeCreate",
        "nativeCreate",
        "prototype",
        "Ctor",
        "prototype",
        "Ctor",
        "Ctor",
        "result",
        "key",
        "obj",
        "obj",
        "obj",
        "key",
        "property",
        "collection",
        "getLength",
        "collection",
        "length",
        "length",
        "length",
        "MAX_ARRAY_INDEX",
        "_",
        "_",
        "obj",
        "iteratee",
        "context",
        "iteratee",
        "optimizeCb",
        "iteratee",
        "context",
        "isArrayLike",
        "obj",
        "i",
        "length",
        "obj",
        "i",
        "length",
        "i",
        "iteratee",
        "obj",
        "i",
        "i",
        "obj",
        "_",
        "obj",
        "i",
        "length",
        "keys",
        "i",
        "length",
        "i",
        "iteratee",
        "obj",
        "keys",
        "i",
        "keys",
        "i",
        "obj",
        "obj",
        "_",
        "_",
        "obj",
        "iteratee",
        "context",
        "iteratee",
        "cb",
        "iteratee",
        "context",
        "isArrayLike",
        "obj",
        "_",
        "obj",
        "keys",
        "obj",
        "length",
        "index",
        "length",
        "index",
        "keys",
        "keys",
        "index",
        "index",
        "results",
        "index",
        "iteratee",
        "obj",
        "currentKey",
        "currentKey",
        "obj",
        "results",
        "dir",
        "obj",
        "iteratee",
        "memo",
        "keys",
        "index",
        "length",
        "index",
        "index",
        "length",
        "index",
        "dir",
        "keys",
        "keys",
        "index",
        "index",
        "memo",
        "iteratee",
        "memo",
        "obj",
        "currentKey",
        "currentKey",
        "obj",
        "memo",
        "obj",
        "iteratee",
        "memo",
        "context",
        "iteratee",
        "optimizeCb",
        "iteratee",
        "context",
        "isArrayLike",
        "obj",
        "_",
        "obj",
        "keys",
        "obj",
        "dir",
        "length",
        "arguments",
        "memo",
        "obj",
        "keys",
        "keys",
        "index",
        "index",
        "index",
        "dir",
        "iterator",
        "obj",
        "iteratee",
        "memo",
        "keys",
        "index",
        "length",
        "_",
        "_",
        "_",
        "createReduce",
        "_",
        "_",
        "createReduce",
        "_",
        "_",
        "obj",
        "predicate",
        "context",
        "isArrayLike",
        "obj",
        "key",
        "_",
        "obj",
        "predicate",
        "context",
        "key",
        "_",
        "obj",
        "predicate",
        "context",
        "key",
        "key",
        "obj",
        "key",
        "_",
        "_",
        "obj",
        "predicate",
        "context",
        "predicate",
        "cb",
        "predicate",
        "context",
        "_",
        "obj",
        "value",
        "index",
        "predicate",
        "value",
        "index",
        "results",
        "value",
        "results",
        "_",
        "obj",
        "predicate",
        "context",
        "_",
        "obj",
        "_",
        "cb",
        "predicate",
        "context",
        "_",
        "_",
        "obj",
        "predicate",
        "context",
        "predicate",
        "cb",
        "predicate",
        "context",
        "isArrayLike",
        "obj",
        "_",
        "obj",
        "keys",
        "obj",
        "index",
        "length",
        "index",
        "keys",
        "keys",
        "index",
        "index",
        "predicate",
        "obj",
        "currentKey",
        "currentKey",
        "obj",
        "_",
        "_",
        "obj",
        "predicate",
        "context",
        "predicate",
        "cb",
        "predicate",
        "context",
        "isArrayLike",
        "obj",
        "_",
        "obj",
        "keys",
        "obj",
        "index",
        "length",
        "index",
        "keys",
        "keys",
        "index",
        "index",
        "predicate",
        "obj",
        "currentKey",
        "currentKey",
        "obj",
        "_",
        "_",
        "_",
        "obj",
        "item",
        "fromIndex",
        "guard",
        "isArrayLike",
        "obj",
        "obj",
        "_",
        "obj",
        "fromIndex",
        "guard",
        "fromIndex",
        "_",
        "obj",
        "item",
        "fromIndex",
        "_",
        "obj",
        "method",
        "arguments",
        "_",
        "method",
        "_",
        "obj",
        "value",
        "isFunc",
        "method",
        "value",
        "method",
        "func",
        "func",
        "func",
        "value",
        "args",
        "_",
        "obj",
        "key",
        "_",
        "obj",
        "_",
        "key",
        "_",
        "obj",
        "attrs",
        "_",
        "obj",
        "_",
        "attrs",
        "_",
        "obj",
        "attrs",
        "_",
        "obj",
        "_",
        "attrs",
        "_",
        "obj",
        "iteratee",
        "context",
        "Infinity",
        "Infinity",
        "iteratee",
        "obj",
        "obj",
        "isArrayLike",
        "obj",
        "obj",
        "_",
        "obj",
        "obj",
        "i",
        "length",
        "i",
        "value",
        "obj",
        "i",
        "value",
        "result",
        "result",
        "value",
        "iteratee",
        "cb",
        "iteratee",
        "context",
        "_",
        "obj",
        "value",
        "index",
        "computed",
        "iteratee",
        "value",
        "index",
        "computed",
        "lastComputed",
        "computed",
        "Infinity",
        "result",
        "Infinity",
        "result",
        "value",
        "lastComputed",
        "computed",
        "result",
        "_",
        "obj",
        "iteratee",
        "context",
        "iteratee",
        "obj",
        "obj",
        "isArrayLike",
        "obj",
        "obj",
        "_",
        "obj",
        "obj",
        "i",
        "length",
        "i",
        "value",
        "obj",
        "i",
        "value",
        "result",
        "result",
        "value",
        "iteratee",
        "cb",
        "iteratee",
        "context",
        "_",
        "obj",
        "value",
        "index",
        "computed",
        "iteratee",
        "value",
        "index",
        "computed",
        "lastComputed",
        "computed",
        "Infinity",
        "result",
        "Infinity",
        "result",
        "value",
        "lastComputed",
        "computed",
        "result",
        "_",
        "obj",
        "isArrayLike",
        "obj",
        "obj",
        "_",
        "obj",
        "length",
        "index",
        "length",
        "index",
        "rand",
        "_",
        "index",
        "rand",
        "index",
        "shuffled",
        "index",
        "shuffled",
        "rand",
        "shuffled",
        "rand",
        "index",
        "shuffled",
        "_",
        "obj",
        "n",
        "guard",
        "n",
        "guard",
        "isArrayLike",
        "obj",
        "obj",
        "_",
        "obj",
        "obj",
        "_",
        "obj",
        "_",
        "obj",
        "n",
        "_",
        "obj",
        "iteratee",
        "context",
        "iteratee",
        "cb",
        "iteratee",
        "context",
        "_",
        "_",
        "obj",
        "value",
        "index",
        "value",
        "index",
        "iteratee",
        "value",
        "index",
        "left",
        "right",
        "left",
        "right",
        "a",
        "b",
        "a",
        "b",
        "a",
        "a",
        "b",
        "b",
        "left",
        "right",
        "behavior",
        "obj",
        "iteratee",
        "context",
        "iteratee",
        "cb",
        "iteratee",
        "context",
        "_",
        "obj",
        "value",
        "index",
        "iteratee",
        "value",
        "index",
        "obj",
        "behavior",
        "result",
        "value",
        "key",
        "result",
        "_",
        "group",
        "result",
        "value",
        "key",
        "_",
        "result",
        "key",
        "result",
        "key",
        "value",
        "result",
        "key",
        "value",
        "_",
        "group",
        "result",
        "value",
        "key",
        "result",
        "key",
        "value",
        "_",
        "group",
        "result",
        "value",
        "key",
        "_",
        "result",
        "key",
        "result",
        "key",
        "result",
        "key",
        "_",
        "obj",
        "obj",
        "_",
        "obj",
        "obj",
        "isArrayLike",
        "obj",
        "_",
        "obj",
        "_",
        "_",
        "obj",
        "_",
        "obj",
        "obj",
        "isArrayLike",
        "obj",
        "obj",
        "_",
        "obj",
        "_",
        "obj",
        "predicate",
        "context",
        "predicate",
        "cb",
        "predicate",
        "context",
        "_",
        "obj",
        "value",
        "key",
        "obj",
        "predicate",
        "value",
        "key",
        "obj",
        "fail",
        "value",
        "fail",
        "_",
        "_",
        "_",
        "array",
        "n",
        "guard",
        "array",
        "n",
        "guard",
        "array",
        "_",
        "array",
        "array",
        "n",
        "_",
        "array",
        "n",
        "guard",
        "array",
        "array",
        "n",
        "guard",
        "n",
        "_",
        "array",
        "n",
        "guard",
        "array",
        "n",
        "guard",
        "array",
        "array",
        "_",
        "array",
        "array",
        "n",
        "_",
        "_",
        "_",
        "array",
        "n",
        "guard",
        "array",
        "n",
        "guard",
        "n",
        "_",
        "array",
        "_",
        "array",
        "_",
        "input",
        "shallow",
        "strict",
        "startIndex",
        "startIndex",
        "getLength",
        "input",
        "i",
        "length",
        "i",
        "input",
        "i",
        "isArrayLike",
        "value",
        "_",
        "value",
        "_",
        "value",
        "shallow",
        "value",
        "flatten",
        "value",
        "shallow",
        "strict",
        "value",
        "output",
        "len",
        "j",
        "len",
        "output",
        "idx",
        "value",
        "j",
        "strict",
        "output",
        "idx",
        "value",
        "output",
        "_",
        "array",
        "shallow",
        "flatten",
        "array",
        "shallow",
        "_",
        "array",
        "_",
        "array",
        "arguments",
        "_",
        "_",
        "array",
        "isSorted",
        "iteratee",
        "context",
        "_",
        "isSorted",
        "context",
        "iteratee",
        "iteratee",
        "isSorted",
        "isSorted",
        "iteratee",
        "iteratee",
        "cb",
        "iteratee",
        "context",
        "getLength",
        "array",
        "i",
        "length",
        "i",
        "array",
        "i",
        "iteratee",
        "iteratee",
        "value",
        "i",
        "array",
        "value",
        "isSorted",
        "i",
        "seen",
        "computed",
        "result",
        "value",
        "seen",
        "computed",
        "iteratee",
        "_",
        "seen",
        "computed",
        "seen",
        "computed",
        "result",
        "value",
        "_",
        "result",
        "value",
        "result",
        "value",
        "result",
        "_",
        "_",
        "flatten",
        "arguments",
        "_",
        "array",
        "arguments",
        "getLength",
        "array",
        "i",
        "length",
        "i",
        "array",
        "i",
        "_",
        "result",
        "item",
        "j",
        "argsLength",
        "j",
        "_",
        "arguments",
        "j",
        "item",
        "j",
        "argsLength",
        "result",
        "item",
        "result",
        "_",
        "array",
        "flatten",
        "arguments",
        "_",
        "array",
        "value",
        "_",
        "rest",
        "value",
        "_",
        "_",
        "arguments",
        "_",
        "array",
        "array",
        "_",
        "array",
        "getLength",
        "length",
        "index",
        "length",
        "index",
        "result",
        "index",
        "_",
        "array",
        "index",
        "result",
        "_",
        "values",
        "getLength",
        "i",
        "length",
        "i",
        "values",
        "result",
        "i",
        "values",
        "i",
        "result",
        "i",
        "i",
        "result",
        "dir",
        "array",
        "predicate",
        "context",
        "predicate",
        "cb",
        "predicate",
        "context",
        "getLength",
        "array",
        "dir",
        "length",
        "index",
        "index",
        "length",
        "index",
        "dir",
        "predicate",
        "array",
        "index",
        "index",
        "array",
        "index",
        "_",
        "createPredicateIndexFinder",
        "_",
        "createPredicateIndexFinder",
        "_",
        "array",
        "obj",
        "iteratee",
        "context",
        "iteratee",
        "cb",
        "iteratee",
        "context",
        "iteratee",
        "obj",
        "getLength",
        "array",
        "low",
        "high",
        "low",
        "high",
        "iteratee",
        "array",
        "mid",
        "value",
        "low",
        "mid",
        "high",
        "mid",
        "low",
        "dir",
        "predicateFind",
        "sortedIndex",
        "array",
        "item",
        "idx",
        "getLength",
        "array",
        "idx",
        "dir",
        "i",
        "idx",
        "idx",
        "idx",
        "length",
        "i",
        "length",
        "idx",
        "idx",
        "length",
        "idx",
        "length",
        "sortedIndex",
        "idx",
        "length",
        "idx",
        "sortedIndex",
        "array",
        "item",
        "array",
        "idx",
        "item",
        "idx",
        "item",
        "item",
        "idx",
        "predicateFind",
        "array",
        "i",
        "length",
        "_",
        "idx",
        "idx",
        "i",
        "idx",
        "dir",
        "i",
        "length",
        "idx",
        "idx",
        "length",
        "idx",
        "dir",
        "array",
        "idx",
        "item",
        "idx",
        "_",
        "createIndexFinder",
        "_",
        "_",
        "_",
        "createIndexFinder",
        "_",
        "_",
        "start",
        "stop",
        "step",
        "stop",
        "stop",
        "start",
        "start",
        "step",
        "step",
        "stop",
        "start",
        "step",
        "length",
        "idx",
        "length",
        "idx",
        "start",
        "step",
        "idx",
        "start",
        "sourceFunc",
        "boundFunc",
        "context",
        "callingContext",
        "args",
        "callingContext",
        "boundFunc",
        "sourceFunc",
        "context",
        "args",
        "baseCreate",
        "sourceFunc",
        "sourceFunc",
        "args",
        "_",
        "result",
        "result",
        "_",
        "func",
        "context",
        "nativeBind",
        "func",
        "nativeBind",
        "nativeBind",
        "func",
        "arguments",
        "_",
        "func",
        "arguments",
        "executeBound",
        "func",
        "bound",
        "context",
        "args",
        "arguments",
        "bound",
        "_",
        "func",
        "arguments",
        "boundArgs",
        "length",
        "i",
        "length",
        "i",
        "args",
        "i",
        "boundArgs",
        "i",
        "_",
        "arguments",
        "position",
        "boundArgs",
        "i",
        "position",
        "arguments",
        "args",
        "arguments",
        "position",
        "executeBound",
        "func",
        "bound",
        "args",
        "bound",
        "_",
        "obj",
        "arguments",
        "length",
        "i",
        "i",
        "length",
        "i",
        "key",
        "arguments",
        "i",
        "obj",
        "key",
        "_",
        "obj",
        "key",
        "obj",
        "obj",
        "_",
        "func",
        "hasher",
        "key",
        "memoize",
        "hasher",
        "hasher",
        "arguments",
        "key",
        "_",
        "cache",
        "address",
        "cache",
        "address",
        "func",
        "arguments",
        "cache",
        "address",
        "memoize",
        "memoize",
        "_",
        "func",
        "wait",
        "arguments",
        "setTimeout",
        "func",
        "args",
        "wait",
        "_",
        "_",
        "_",
        "_",
        "_",
        "func",
        "wait",
        "options",
        "options",
        "options",
        "previous",
        "options",
        "_",
        "timeout",
        "result",
        "func",
        "context",
        "args",
        "timeout",
        "context",
        "args",
        "_",
        "previous",
        "options",
        "previous",
        "now",
        "wait",
        "now",
        "previous",
        "context",
        "args",
        "arguments",
        "remaining",
        "remaining",
        "wait",
        "timeout",
        "clearTimeout",
        "timeout",
        "timeout",
        "previous",
        "now",
        "result",
        "func",
        "context",
        "args",
        "timeout",
        "context",
        "args",
        "timeout",
        "options",
        "timeout",
        "setTimeout",
        "later",
        "remaining",
        "result",
        "_",
        "func",
        "wait",
        "immediate",
        "_",
        "timestamp",
        "last",
        "wait",
        "last",
        "timeout",
        "setTimeout",
        "later",
        "wait",
        "last",
        "timeout",
        "immediate",
        "result",
        "func",
        "context",
        "args",
        "timeout",
        "context",
        "args",
        "context",
        "args",
        "arguments",
        "timestamp",
        "_",
        "immediate",
        "timeout",
        "timeout",
        "timeout",
        "setTimeout",
        "later",
        "wait",
        "callNow",
        "result",
        "func",
        "context",
        "args",
        "context",
        "args",
        "result",
        "_",
        "func",
        "wrapper",
        "_",
        "wrapper",
        "func",
        "_",
        "predicate",
        "predicate",
        "arguments",
        "_",
        "args",
        "args",
        "start",
        "arguments",
        "i",
        "result",
        "args",
        "i",
        "result",
        "result",
        "_",
        "times",
        "func",
        "times",
        "func",
        "arguments",
        "_",
        "times",
        "func",
        "times",
        "memo",
        "func",
        "arguments",
        "times",
        "func",
        "memo",
        "_",
        "_",
        "_",
        "obj",
        "keys",
        "nonEnumerableProps",
        "obj",
        "_",
        "ObjProto",
        "_",
        "obj",
        "prop",
        "_",
        "keys",
        "prop",
        "keys",
        "prop",
        "nonEnumIdx",
        "prop",
        "nonEnumerableProps",
        "nonEnumIdx",
        "prop",
        "obj",
        "obj",
        "prop",
        "proto",
        "prop",
        "_",
        "keys",
        "prop",
        "keys",
        "prop",
        "_",
        "obj",
        "_",
        "obj",
        "nativeKeys",
        "nativeKeys",
        "obj",
        "key",
        "obj",
        "_",
        "obj",
        "key",
        "keys",
        "key",
        "hasEnumBug",
        "collectNonEnumProps",
        "obj",
        "keys",
        "keys",
        "_",
        "obj",
        "_",
        "obj",
        "key",
        "obj",
        "keys",
        "key",
        "hasEnumBug",
        "collectNonEnumProps",
        "obj",
        "keys",
        "keys",
        "_",
        "obj",
        "_",
        "obj",
        "keys",
        "length",
        "i",
        "length",
        "i",
        "values",
        "i",
        "obj",
        "keys",
        "i",
        "values",
        "_",
        "obj",
        "iteratee",
        "context",
        "iteratee",
        "cb",
        "iteratee",
        "context",
        "_",
        "obj",
        "keys",
        "index",
        "length",
        "index",
        "currentKey",
        "keys",
        "index",
        "results",
        "currentKey",
        "iteratee",
        "obj",
        "currentKey",
        "currentKey",
        "obj",
        "results",
        "_",
        "obj",
        "_",
        "obj",
        "keys",
        "length",
        "i",
        "length",
        "i",
        "pairs",
        "i",
        "keys",
        "i",
        "obj",
        "keys",
        "i",
        "pairs",
        "_",
        "obj",
        "_",
        "obj",
        "keys",
        "i",
        "length",
        "i",
        "result",
        "obj",
        "keys",
        "i",
        "keys",
        "i",
        "result",
        "_",
        "_",
        "obj",
        "key",
        "obj",
        "_",
        "obj",
        "key",
        "names",
        "key",
        "names",
        "_",
        "createAssigner",
        "_",
        "_",
        "_",
        "createAssigner",
        "_",
        "_",
        "obj",
        "predicate",
        "context",
        "predicate",
        "cb",
        "predicate",
        "context",
        "_",
        "obj",
        "keys",
        "i",
        "length",
        "i",
        "key",
        "keys",
        "i",
        "predicate",
        "obj",
        "key",
        "key",
        "obj",
        "key",
        "_",
        "oiteratee",
        "context",
        "obj",
        "result",
        "_",
        "oiteratee",
        "keys",
        "_",
        "obj",
        "iteratee",
        "optimizeCb",
        "oiteratee",
        "context",
        "keys",
        "flatten",
        "arguments",
        "iteratee",
        "value",
        "key",
        "obj",
        "key",
        "obj",
        "obj",
        "obj",
        "keys",
        "i",
        "length",
        "i",
        "keys",
        "i",
        "obj",
        "key",
        "iteratee",
        "value",
        "key",
        "obj",
        "result",
        "key",
        "value",
        "result",
        "_",
        "obj",
        "iteratee",
        "context",
        "_",
        "iteratee",
        "iteratee",
        "_",
        "iteratee",
        "_",
        "flatten",
        "arguments",
        "iteratee",
        "value",
        "key",
        "_",
        "keys",
        "key",
        "_",
        "obj",
        "iteratee",
        "context",
        "_",
        "createAssigner",
        "_",
        "_",
        "prototype",
        "props",
        "baseCreate",
        "prototype",
        "props",
        "_",
        "result",
        "props",
        "result",
        "_",
        "obj",
        "_",
        "obj",
        "obj",
        "_",
        "obj",
        "obj",
        "_",
        "obj",
        "_",
        "obj",
        "interceptor",
        "interceptor",
        "obj",
        "obj",
        "_",
        "attrs",
        "_",
        "attrs",
        "keys",
        "length",
        "i",
        "length",
        "i",
        "keys",
        "i",
        "attrs",
        "key",
        "obj",
        "key",
        "key",
        "obj",
        "a",
        "b",
        "aStack",
        "bStack",
        "a",
        "b",
        "a",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "_",
        "a",
        "a",
        "b",
        "_",
        "b",
        "b",
        "toString",
        "a",
        "className",
        "toString",
        "b",
        "className",
        "a",
        "b",
        "a",
        "a",
        "b",
        "b",
        "a",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "className",
        "areArrays",
        "a",
        "b",
        "a",
        "b",
        "aCtor",
        "bCtor",
        "_",
        "aCtor",
        "aCtor",
        "aCtor",
        "_",
        "bCtor",
        "bCtor",
        "bCtor",
        "a",
        "b",
        "aStack",
        "aStack",
        "bStack",
        "bStack",
        "aStack",
        "length",
        "aStack",
        "length",
        "a",
        "bStack",
        "length",
        "b",
        "aStack",
        "a",
        "bStack",
        "b",
        "areArrays",
        "length",
        "a",
        "length",
        "b",
        "length",
        "eq",
        "a",
        "length",
        "b",
        "length",
        "aStack",
        "bStack",
        "_",
        "a",
        "length",
        "keys",
        "_",
        "b",
        "length",
        "length",
        "key",
        "keys",
        "length",
        "_",
        "b",
        "key",
        "eq",
        "a",
        "key",
        "b",
        "key",
        "aStack",
        "bStack",
        "aStack",
        "bStack",
        "_",
        "a",
        "b",
        "eq",
        "a",
        "b",
        "_",
        "obj",
        "obj",
        "isArrayLike",
        "obj",
        "_",
        "obj",
        "_",
        "obj",
        "_",
        "obj",
        "obj",
        "_",
        "obj",
        "_",
        "obj",
        "obj",
        "obj",
        "_",
        "nativeIsArray",
        "obj",
        "toString",
        "obj",
        "_",
        "obj",
        "obj",
        "obj",
        "_",
        "name",
        "_",
        "name",
        "obj",
        "toString",
        "obj",
        "name",
        "_",
        "arguments",
        "_",
        "obj",
        "_",
        "obj",
        "Int8Array",
        "_",
        "obj",
        "obj",
        "_",
        "obj",
        "isFinite",
        "obj",
        "isNaN",
        "parseFloat",
        "obj",
        "_",
        "obj",
        "_",
        "obj",
        "obj",
        "obj",
        "_",
        "obj",
        "obj",
        "obj",
        "toString",
        "obj",
        "_",
        "obj",
        "obj",
        "_",
        "obj",
        "obj",
        "_",
        "obj",
        "key",
        "obj",
        "hasOwnProperty",
        "obj",
        "key",
        "_",
        "root",
        "previousUnderscore",
        "_",
        "value",
        "value",
        "_",
        "value",
        "value",
        "_",
        "_",
        "property",
        "_",
        "obj",
        "obj",
        "key",
        "obj",
        "key",
        "_",
        "_",
        "attrs",
        "attrs",
        "_",
        "attrs",
        "obj",
        "_",
        "obj",
        "attrs",
        "_",
        "n",
        "iteratee",
        "context",
        "n",
        "iteratee",
        "optimizeCb",
        "iteratee",
        "context",
        "i",
        "n",
        "i",
        "accum",
        "i",
        "iteratee",
        "i",
        "accum",
        "_",
        "min",
        "max",
        "max",
        "max",
        "min",
        "min",
        "min",
        "max",
        "min",
        "_",
        "_",
        "escapeMap",
        "match",
        "match",
        "_",
        "source",
        "source",
        "testRegexp",
        "replaceRegexp",
        "escaper",
        "_",
        "createEscaper",
        "escapeMap",
        "_",
        "createEscaper",
        "unescapeMap",
        "_",
        "property",
        "fallback",
        "property",
        "value",
        "value",
        "fallback",
        "_",
        "value",
        "value",
        "value",
        "_",
        "prefix",
        "idCounter",
        "prefix",
        "prefix",
        "id",
        "id",
        "_",
        "match",
        "escapes",
        "match",
        "_",
        "text",
        "settings",
        "oldSettings",
        "settings",
        "oldSettings",
        "settings",
        "oldSettings",
        "settings",
        "_",
        "settings",
        "_",
        "settings",
        "noMatch",
        "settings",
        "noMatch",
        "settings",
        "noMatch",
        "text",
        "matcher",
        "match",
        "escape",
        "interpolate",
        "evaluate",
        "offset",
        "source",
        "text",
        "index",
        "offset",
        "escaper",
        "escapeChar",
        "index",
        "offset",
        "match",
        "escape",
        "source",
        "escape",
        "interpolate",
        "source",
        "interpolate",
        "evaluate",
        "source",
        "evaluate",
        "match",
        "source",
        "settings",
        "source",
        "source",
        "source",
        "source",
        "settings",
        "source",
        "e",
        "e",
        "source",
        "e",
        "data",
        "render",
        "data",
        "_",
        "settings",
        "template",
        "argument",
        "source",
        "template",
        "_",
        "obj",
        "_",
        "obj",
        "instance",
        "instance",
        "instance",
        "obj",
        "instance",
        "_",
        "obj",
        "obj",
        "_",
        "obj",
        "_",
        "_",
        "obj",
        "name",
        "_",
        "name",
        "obj",
        "name",
        "_",
        "name",
        "push",
        "args",
        "arguments",
        "result",
        "func",
        "_",
        "args",
        "_",
        "_",
        "_",
        "name",
        "ArrayProto",
        "name",
        "_",
        "name",
        "method",
        "obj",
        "arguments",
        "name",
        "name",
        "obj",
        "obj",
        "result",
        "obj",
        "_",
        "name",
        "ArrayProto",
        "name",
        "_",
        "name",
        "result",
        "method",
        "arguments",
        "_",
        "_",
        "_",
        "_",
        "_",
        "define",
        "define",
        "define",
        "_",
        "factory",
        "define",
        "define",
        "define",
        "_",
        "$",
        "exports",
        "root",
        "factory",
        "root",
        "exports",
        "_",
        "$",
        "exports",
        "require",
        "$",
        "require",
        "e",
        "factory",
        "root",
        "exports",
        "_",
        "$",
        "root",
        "factory",
        "root",
        "root",
        "root",
        "root",
        "root",
        "root",
        "root",
        "Backbone",
        "_",
        "$",
        "root",
        "Backbone",
        "Backbone",
        "$",
        "Backbone",
        "root",
        "previousBackbone",
        "Backbone",
        "Backbone",
        "length",
        "method",
        "attribute",
        "length",
        "_",
        "method",
        "attribute",
        "value",
        "_",
        "method",
        "attribute",
        "value",
        "iteratee",
        "context",
        "_",
        "method",
        "attribute",
        "cb",
        "iteratee",
        "context",
        "iteratee",
        "defaultVal",
        "context",
        "_",
        "method",
        "attribute",
        "cb",
        "iteratee",
        "defaultVal",
        "context",
        "arguments",
        "args",
        "attribute",
        "_",
        "method",
        "_",
        "args",
        "Class",
        "methods",
        "attribute",
        "_",
        "methods",
        "length",
        "method",
        "_",
        "method",
        "Class",
        "method",
        "addMethod",
        "length",
        "method",
        "attribute",
        "iteratee",
        "instance",
        "_",
        "iteratee",
        "iteratee",
        "_",
        "iteratee",
        "instance",
        "iteratee",
        "modelMatcher",
        "iteratee",
        "_",
        "iteratee",
        "model",
        "model",
        "iteratee",
        "iteratee",
        "attrs",
        "_",
        "attrs",
        "model",
        "matcher",
        "model",
        "Backbone",
        "iteratee",
        "events",
        "name",
        "callback",
        "opts",
        "name",
        "name",
        "callback",
        "opts",
        "opts",
        "opts",
        "callback",
        "names",
        "_",
        "name",
        "i",
        "names",
        "i",
        "events",
        "eventsApi",
        "iteratee",
        "events",
        "names",
        "i",
        "name",
        "names",
        "i",
        "opts",
        "name",
        "eventSplitter",
        "name",
        "names",
        "name",
        "eventSplitter",
        "i",
        "names",
        "i",
        "events",
        "iteratee",
        "events",
        "names",
        "i",
        "callback",
        "opts",
        "events",
        "iteratee",
        "events",
        "name",
        "callback",
        "opts",
        "events",
        "Events",
        "name",
        "callback",
        "context",
        "internalOn",
        "name",
        "callback",
        "context",
        "obj",
        "name",
        "callback",
        "context",
        "listening",
        "obj",
        "eventsApi",
        "onApi",
        "obj",
        "name",
        "callback",
        "context",
        "obj",
        "listening",
        "listening",
        "obj",
        "obj",
        "listeners",
        "listening",
        "listening",
        "obj",
        "Events",
        "obj",
        "name",
        "callback",
        "obj",
        "obj",
        "obj",
        "_",
        "listeningTo",
        "id",
        "listening",
        "_",
        "listening",
        "listeningTo",
        "id",
        "obj",
        "id",
        "thisId",
        "listeningTo",
        "internalOn",
        "obj",
        "name",
        "callback",
        "listening",
        "events",
        "name",
        "callback",
        "options",
        "callback",
        "events",
        "name",
        "events",
        "name",
        "options",
        "options",
        "options",
        "listening",
        "listening",
        "handlers",
        "callback",
        "context",
        "context",
        "ctx",
        "listening",
        "events",
        "Events",
        "name",
        "callback",
        "context",
        "eventsApi",
        "offApi",
        "name",
        "callback",
        "context",
        "Events",
        "obj",
        "name",
        "callback",
        "listeningTo",
        "obj",
        "obj",
        "_",
        "listeningTo",
        "i",
        "ids",
        "i",
        "listeningTo",
        "ids",
        "i",
        "listening",
        "listening",
        "name",
        "callback",
        "_",
        "listeningTo",
        "events",
        "name",
        "callback",
        "options",
        "events",
        "options",
        "options",
        "name",
        "callback",
        "context",
        "_",
        "listeners",
        "i",
        "ids",
        "i",
        "listening",
        "listeners",
        "ids",
        "i",
        "listeners",
        "listening",
        "listening",
        "listening",
        "name",
        "name",
        "_",
        "events",
        "i",
        "names",
        "i",
        "name",
        "names",
        "i",
        "events",
        "name",
        "handlers",
        "j",
        "handlers",
        "j",
        "handlers",
        "j",
        "callback",
        "callback",
        "handler",
        "callback",
        "handler",
        "context",
        "context",
        "handler",
        "remaining",
        "handler",
        "listening",
        "handler",
        "listening",
        "listening",
        "listeners",
        "listening",
        "listening",
        "listening",
        "remaining",
        "events",
        "name",
        "remaining",
        "events",
        "name",
        "_",
        "events",
        "events",
        "Events",
        "name",
        "callback",
        "context",
        "eventsApi",
        "onceMap",
        "name",
        "callback",
        "_",
        "events",
        "context",
        "Events",
        "obj",
        "name",
        "callback",
        "eventsApi",
        "onceMap",
        "name",
        "callback",
        "_",
        "obj",
        "obj",
        "events",
        "name",
        "callback",
        "offer",
        "callback",
        "name",
        "_",
        "offer",
        "name",
        "once",
        "callback",
        "arguments",
        "once",
        "callback",
        "Events",
        "name",
        "arguments",
        "length",
        "i",
        "length",
        "i",
        "args",
        "i",
        "arguments",
        "i",
        "eventsApi",
        "triggerApi",
        "name",
        "args",
        "objEvents",
        "name",
        "cb",
        "args",
        "objEvents",
        "objEvents",
        "name",
        "objEvents",
        "events",
        "allEvents",
        "allEvents",
        "allEvents",
        "events",
        "triggerEvents",
        "events",
        "args",
        "allEvents",
        "triggerEvents",
        "allEvents",
        "name",
        "args",
        "objEvents",
        "events",
        "args",
        "events",
        "args",
        "args",
        "args",
        "args",
        "i",
        "l",
        "ev",
        "events",
        "i",
        "ev",
        "i",
        "l",
        "ev",
        "events",
        "i",
        "ev",
        "a1",
        "i",
        "l",
        "ev",
        "events",
        "i",
        "ev",
        "a1",
        "a2",
        "i",
        "l",
        "ev",
        "events",
        "i",
        "ev",
        "a1",
        "a2",
        "a3",
        "i",
        "l",
        "ev",
        "events",
        "i",
        "ev",
        "args",
        "Events",
        "Events",
        "Events",
        "Events",
        "_",
        "Backbone",
        "Events",
        "Backbone",
        "attributes",
        "options",
        "attributes",
        "options",
        "options",
        "_",
        "options",
        "options",
        "options",
        "attrs",
        "attrs",
        "options",
        "attrs",
        "_",
        "attrs",
        "_",
        "attrs",
        "options",
        "arguments",
        "_",
        "Model",
        "Events",
        "options",
        "_",
        "Backbone",
        "arguments",
        "attr",
        "attr",
        "attr",
        "_",
        "attr",
        "attr",
        "attr",
        "attrs",
        "_",
        "attrs",
        "key",
        "val",
        "options",
        "key",
        "key",
        "attrs",
        "key",
        "options",
        "val",
        "attrs",
        "key",
        "val",
        "options",
        "options",
        "attrs",
        "options",
        "options",
        "options",
        "changing",
        "_",
        "attr",
        "attrs",
        "val",
        "attrs",
        "attr",
        "_",
        "current",
        "attr",
        "val",
        "changes",
        "attr",
        "_",
        "prev",
        "attr",
        "val",
        "changed",
        "attr",
        "val",
        "changed",
        "attr",
        "unset",
        "current",
        "attr",
        "current",
        "attr",
        "val",
        "silent",
        "changes",
        "options",
        "i",
        "changes",
        "i",
        "changes",
        "i",
        "current",
        "changes",
        "i",
        "options",
        "changing",
        "silent",
        "options",
        "options",
        "attr",
        "options",
        "attr",
        "_",
        "options",
        "options",
        "key",
        "attrs",
        "key",
        "attrs",
        "_",
        "options",
        "attr",
        "attr",
        "_",
        "_",
        "attr",
        "diff",
        "diff",
        "_",
        "attr",
        "diff",
        "diff",
        "attr",
        "_",
        "old",
        "attr",
        "val",
        "changed",
        "attr",
        "val",
        "_",
        "changed",
        "changed",
        "attr",
        "attr",
        "attr",
        "_",
        "options",
        "options",
        "_",
        "options",
        "options",
        "options",
        "resp",
        "options",
        "model",
        "resp",
        "options",
        "resp",
        "model",
        "serverAttrs",
        "options",
        "success",
        "success",
        "options",
        "model",
        "resp",
        "options",
        "model",
        "model",
        "resp",
        "options",
        "wrapError",
        "options",
        "options",
        "key",
        "val",
        "options",
        "key",
        "key",
        "attrs",
        "key",
        "options",
        "val",
        "attrs",
        "key",
        "val",
        "options",
        "_",
        "options",
        "options",
        "attrs",
        "wait",
        "attrs",
        "options",
        "attrs",
        "options",
        "options",
        "options",
        "resp",
        "model",
        "attributes",
        "options",
        "model",
        "resp",
        "options",
        "resp",
        "wait",
        "serverAttrs",
        "_",
        "attrs",
        "serverAttrs",
        "serverAttrs",
        "model",
        "serverAttrs",
        "options",
        "success",
        "success",
        "options",
        "model",
        "resp",
        "options",
        "model",
        "model",
        "resp",
        "options",
        "wrapError",
        "options",
        "attrs",
        "wait",
        "_",
        "attributes",
        "attrs",
        "options",
        "method",
        "options",
        "options",
        "attrs",
        "method",
        "options",
        "attributes",
        "xhr",
        "options",
        "options",
        "options",
        "_",
        "options",
        "options",
        "options",
        "model",
        "model",
        "model",
        "model",
        "options",
        "options",
        "resp",
        "wait",
        "destroy",
        "success",
        "success",
        "options",
        "model",
        "resp",
        "options",
        "model",
        "model",
        "model",
        "resp",
        "options",
        "_",
        "options",
        "wrapError",
        "options",
        "xhr",
        "options",
        "wait",
        "destroy",
        "xhr",
        "_",
        "_",
        "urlError",
        "encodeURIComponent",
        "id",
        "resp",
        "options",
        "resp",
        "options",
        "_",
        "options",
        "attrs",
        "options",
        "options",
        "attrs",
        "_",
        "attrs",
        "attrs",
        "options",
        "error",
        "error",
        "_",
        "options",
        "error",
        "addUnderscoreMethods",
        "Model",
        "modelMethods",
        "Backbone",
        "models",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "arguments",
        "models",
        "models",
        "_",
        "options",
        "array",
        "insert",
        "at",
        "at",
        "at",
        "array",
        "array",
        "at",
        "insert",
        "i",
        "tail",
        "i",
        "tail",
        "i",
        "array",
        "i",
        "at",
        "i",
        "i",
        "length",
        "i",
        "array",
        "i",
        "at",
        "insert",
        "i",
        "i",
        "i",
        "tail",
        "i",
        "array",
        "i",
        "length",
        "at",
        "tail",
        "i",
        "_",
        "Collection",
        "Events",
        "Model",
        "options",
        "model",
        "model",
        "options",
        "Backbone",
        "arguments",
        "models",
        "options",
        "models",
        "_",
        "options",
        "addOptions",
        "models",
        "options",
        "options",
        "_",
        "options",
        "_",
        "models",
        "models",
        "singular",
        "models",
        "_",
        "models",
        "models",
        "options",
        "options",
        "removed",
        "options",
        "singular",
        "removed",
        "removed",
        "models",
        "options",
        "models",
        "options",
        "_",
        "options",
        "setOptions",
        "options",
        "models",
        "models",
        "models",
        "options",
        "_",
        "models",
        "models",
        "singular",
        "models",
        "models",
        "options",
        "at",
        "at",
        "at",
        "at",
        "at",
        "options",
        "options",
        "options",
        "at",
        "options",
        "_",
        "i",
        "models",
        "i",
        "model",
        "models",
        "i",
        "model",
        "existing",
        "merge",
        "model",
        "existing",
        "model",
        "model",
        "model",
        "options",
        "attrs",
        "existing",
        "attrs",
        "options",
        "existing",
        "attrs",
        "options",
        "sortable",
        "sort",
        "sort",
        "existing",
        "sortAttr",
        "modelMap",
        "existing",
        "modelMap",
        "existing",
        "existing",
        "models",
        "i",
        "existing",
        "add",
        "model",
        "models",
        "i",
        "model",
        "options",
        "model",
        "toAdd",
        "model",
        "model",
        "options",
        "modelMap",
        "model",
        "model",
        "remove",
        "i",
        "i",
        "i",
        "model",
        "i",
        "modelMap",
        "model",
        "toRemove",
        "model",
        "toRemove",
        "toRemove",
        "options",
        "sortable",
        "add",
        "remove",
        "replace",
        "orderChanged",
        "_",
        "model",
        "index",
        "model",
        "index",
        "splice",
        "toAdd",
        "sortable",
        "sort",
        "splice",
        "toAdd",
        "at",
        "at",
        "sort",
        "options",
        "i",
        "i",
        "toAdd",
        "i",
        "at",
        "options",
        "at",
        "i",
        "model",
        "toAdd",
        "i",
        "model",
        "model",
        "options",
        "sort",
        "orderChanged",
        "options",
        "toAdd",
        "toRemove",
        "options",
        "singular",
        "models",
        "models",
        "models",
        "options",
        "options",
        "options",
        "_",
        "options",
        "i",
        "i",
        "i",
        "options",
        "options",
        "models",
        "models",
        "_",
        "options",
        "options",
        "options",
        "models",
        "model",
        "options",
        "model",
        "_",
        "options",
        "options",
        "model",
        "options",
        "model",
        "options",
        "model",
        "_",
        "options",
        "options",
        "model",
        "options",
        "arguments",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "id",
        "obj",
        "index",
        "index",
        "index",
        "index",
        "attrs",
        "first",
        "first",
        "attrs",
        "attrs",
        "attrs",
        "options",
        "comparator",
        "options",
        "options",
        "comparator",
        "_",
        "comparator",
        "comparator",
        "_",
        "comparator",
        "length",
        "_",
        "comparator",
        "comparator",
        "comparator",
        "options",
        "options",
        "attr",
        "_",
        "attr",
        "options",
        "options",
        "_",
        "options",
        "options",
        "options",
        "resp",
        "options",
        "collection",
        "method",
        "resp",
        "options",
        "success",
        "success",
        "options",
        "collection",
        "resp",
        "options",
        "collection",
        "collection",
        "resp",
        "options",
        "wrapError",
        "options",
        "options",
        "model",
        "options",
        "options",
        "options",
        "_",
        "options",
        "options",
        "model",
        "model",
        "options",
        "model",
        "wait",
        "model",
        "options",
        "options",
        "options",
        "model",
        "resp",
        "callbackOpts",
        "wait",
        "collection",
        "model",
        "callbackOpts",
        "success",
        "success",
        "callbackOpts",
        "model",
        "resp",
        "callbackOpts",
        "model",
        "options",
        "model",
        "resp",
        "options",
        "resp",
        "attrs",
        "attrs",
        "attrs",
        "options",
        "attrs",
        "attrs",
        "attrs",
        "attrs",
        "options",
        "options",
        "_",
        "options",
        "options",
        "attrs",
        "options",
        "model",
        "model",
        "model",
        "options",
        "models",
        "options",
        "i",
        "models",
        "i",
        "models",
        "i",
        "model",
        "model",
        "index",
        "options",
        "options",
        "index",
        "model",
        "model",
        "options",
        "removed",
        "model",
        "model",
        "options",
        "removed",
        "removed",
        "model",
        "model",
        "Model",
        "model",
        "options",
        "model",
        "model",
        "model",
        "id",
        "id",
        "model",
        "model",
        "model",
        "options",
        "model",
        "model",
        "id",
        "id",
        "model",
        "model",
        "model",
        "model",
        "collection",
        "options",
        "collection",
        "model",
        "options",
        "model",
        "model",
        "prevId",
        "id",
        "prevId",
        "prevId",
        "id",
        "id",
        "model",
        "arguments",
        "addUnderscoreMethods",
        "Collection",
        "collectionMethods",
        "Backbone",
        "options",
        "_",
        "_",
        "_",
        "options",
        "viewOptions",
        "arguments",
        "_",
        "View",
        "Events",
        "selector",
        "selector",
        "element",
        "element",
        "el",
        "el",
        "Backbone",
        "el",
        "Backbone",
        "el",
        "events",
        "events",
        "events",
        "_",
        "events",
        "key",
        "events",
        "events",
        "key",
        "_",
        "method",
        "method",
        "method",
        "method",
        "key",
        "delegateEventSplitter",
        "match",
        "match",
        "_",
        "method",
        "eventName",
        "selector",
        "listener",
        "eventName",
        "selector",
        "listener",
        "eventName",
        "selector",
        "listener",
        "eventName",
        "selector",
        "listener",
        "tagName",
        "tagName",
        "_",
        "_",
        "attrs",
        "_",
        "attrs",
        "_",
        "_",
        "attrs",
        "_",
        "attributes",
        "attributes",
        "Backbone",
        "method",
        "model",
        "options",
        "methodMap",
        "method",
        "_",
        "options",
        "options",
        "Backbone",
        "Backbone",
        "options",
        "_",
        "model",
        "urlError",
        "options",
        "model",
        "method",
        "method",
        "method",
        "options",
        "model",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "xhr",
        "xhr",
        "beforeSend",
        "beforeSend",
        "arguments",
        "options",
        "options",
        "options",
        "xhr",
        "textStatus",
        "errorThrown",
        "options",
        "textStatus",
        "options",
        "errorThrown",
        "error",
        "error",
        "options",
        "xhr",
        "textStatus",
        "errorThrown",
        "options",
        "Backbone",
        "_",
        "options",
        "model",
        "model",
        "xhr",
        "options",
        "xhr",
        "Backbone",
        "Backbone",
        "Backbone",
        "arguments",
        "Backbone",
        "options",
        "options",
        "options",
        "options",
        "options",
        "arguments",
        "_",
        "Router",
        "Events",
        "route",
        "name",
        "callback",
        "_",
        "route",
        "route",
        "route",
        "_",
        "name",
        "callback",
        "name",
        "name",
        "callback",
        "callback",
        "name",
        "Backbone",
        "route",
        "fragment",
        "router",
        "route",
        "fragment",
        "router",
        "callback",
        "args",
        "name",
        "router",
        "router",
        "name",
        "args",
        "router",
        "name",
        "args",
        "Backbone",
        "router",
        "name",
        "args",
        "callback",
        "args",
        "name",
        "callback",
        "callback",
        "args",
        "fragment",
        "options",
        "Backbone",
        "fragment",
        "options",
        "_",
        "_",
        "route",
        "routes",
        "route",
        "route",
        "route",
        "route",
        "route",
        "escapeRegExp",
        "optionalParam",
        "namedParam",
        "match",
        "optional",
        "optional",
        "match",
        "splatParam",
        "route",
        "route",
        "fragment",
        "route",
        "fragment",
        "_",
        "param",
        "i",
        "i",
        "param",
        "param",
        "decodeURIComponent",
        "param",
        "Backbone",
        "_",
        "History",
        "_",
        "History",
        "Events",
        "path",
        "path",
        "root",
        "fragment",
        "decodeURI",
        "fragment",
        "match",
        "match",
        "match",
        "match",
        "path",
        "path",
        "path",
        "fragment",
        "fragment",
        "fragment",
        "fragment",
        "fragment",
        "routeStripper",
        "options",
        "History",
        "History",
        "_",
        "options",
        "rootStripper",
        "root",
        "body",
        "body",
        "iWindow",
        "iWindow",
        "iWindow",
        "eventName",
        "listener",
        "attachEvent",
        "eventName",
        "listener",
        "addEventListener",
        "addEventListener",
        "setInterval",
        "eventName",
        "listener",
        "detachEvent",
        "eventName",
        "listener",
        "removeEventListener",
        "removeEventListener",
        "clearInterval",
        "History",
        "route",
        "callback",
        "route",
        "callback",
        "e",
        "current",
        "current",
        "current",
        "current",
        "fragment",
        "fragment",
        "fragment",
        "_",
        "handler",
        "handler",
        "fragment",
        "handler",
        "fragment",
        "fragment",
        "options",
        "History",
        "options",
        "options",
        "options",
        "options",
        "fragment",
        "fragment",
        "fragment",
        "fragment",
        "root",
        "root",
        "root",
        "fragment",
        "fragment",
        "fragment",
        "pathStripper",
        "fragment",
        "fragment",
        "options",
        "url",
        "fragment",
        "options",
        "fragment",
        "options",
        "iWindow",
        "iWindow",
        "iWindow",
        "fragment",
        "options",
        "url",
        "options",
        "fragment",
        "location",
        "fragment",
        "replace",
        "replace",
        "location",
        "location",
        "href",
        "fragment",
        "location",
        "fragment",
        "Backbone",
        "History",
        "protoProps",
        "staticProps",
        "protoProps",
        "_",
        "protoProps",
        "child",
        "protoProps",
        "child",
        "parent",
        "arguments",
        "_",
        "child",
        "parent",
        "staticProps",
        "child",
        "Surrogate",
        "parent",
        "child",
        "Surrogate",
        "protoProps",
        "_",
        "child",
        "protoProps",
        "child",
        "parent",
        "child",
        "Model",
        "Collection",
        "Router",
        "View",
        "History",
        "extend",
        "model",
        "options",
        "options",
        "options",
        "resp",
        "error",
        "error",
        "options",
        "model",
        "resp",
        "options",
        "model",
        "model",
        "resp",
        "options",
        "Backbone",
        "root",
        "factory",
        "exports",
        "require",
        "factory",
        "require",
        "define",
        "define",
        "define",
        "Backbone",
        "factory",
        "Backbone",
        "root",
        "factory",
        "Backbone",
        "Backbone",
        "S4",
        "S4",
        "S4",
        "S4",
        "S4",
        "S4",
        "S4",
        "S4",
        "item",
        "item",
        "item",
        "array",
        "item",
        "array",
        "i",
        "array",
        "i",
        "item",
        "obj",
        "props",
        "key",
        "props",
        "obj",
        "key",
        "props",
        "key",
        "obj",
        "property",
        "property",
        "value",
        "property",
        "value",
        "Backbone",
        "name",
        "serializer",
        "name",
        "serializer",
        "item",
        "isObject",
        "item",
        "item",
        "item",
        "data",
        "data",
        "data",
        "store",
        "store",
        "extend",
        "Backbone",
        "model",
        "model",
        "model",
        "model",
        "guid",
        "model",
        "model",
        "model",
        "model",
        "model",
        "model",
        "model",
        "model",
        "model",
        "model",
        "model",
        "contains",
        "modelId",
        "modelId",
        "model",
        "model",
        "model",
        "i",
        "i",
        "id",
        "i",
        "data",
        "id",
        "data",
        "result",
        "data",
        "result",
        "model",
        "model",
        "model",
        "i",
        "i",
        "i",
        "modelId",
        "i",
        "model",
        "localStorage",
        "local",
        "k",
        "local",
        "itemRe",
        "k",
        "local",
        "k",
        "id",
        "id",
        "Backbone",
        "Backbone",
        "method",
        "model",
        "options",
        "result",
        "model",
        "result",
        "model",
        "Backbone",
        "Backbone",
        "Backbone",
        "Backbone",
        "Backbone",
        "method",
        "resp",
        "model",
        "store",
        "model",
        "store",
        "resp",
        "store",
        "model",
        "resp",
        "store",
        "model",
        "resp",
        "store",
        "model",
        "error",
        "error",
        "store",
        "errorMessage",
        "errorMessage",
        "error",
        "resp",
        "options",
        "options",
        "Backbone",
        "options",
        "model",
        "resp",
        "options",
        "options",
        "resp",
        "syncDfd",
        "syncDfd",
        "resp",
        "errorMessage",
        "errorMessage",
        "errorMessage",
        "options",
        "options",
        "Backbone",
        "options",
        "model",
        "errorMessage",
        "options",
        "options",
        "errorMessage",
        "syncDfd",
        "syncDfd",
        "errorMessage",
        "options",
        "options",
        "options",
        "resp",
        "syncDfd",
        "syncDfd",
        "Backbone",
        "Backbone",
        "Backbone",
        "model",
        "options",
        "options",
        "options",
        "forceAjaxSync",
        "result",
        "model",
        "result",
        "model",
        "Backbone",
        "Backbone",
        "Backbone",
        "method",
        "model",
        "options",
        "Backbone",
        "model",
        "options",
        "method",
        "model",
        "options",
        "Backbone"
    ],
    "literals": [
        "'column-count'",
        "'columns'",
        "'font-weight'",
        "'line-height'",
        "'opacity'",
        "'z-index'",
        "'zoom'",
        "'val'",
        "'css'",
        "'html'",
        "'text'",
        "'data'",
        "'width'",
        "'height'",
        "'offset'",
        "'after'",
        "'prepend'",
        "'before'",
        "'append'",
        "'table'",
        "'tr'",
        "'tr'",
        "'tbody'",
        "'tbody'",
        "'thead'",
        "'tfoot'",
        "'td'",
        "'th'",
        "'*'",
        "'div'",
        "'div'",
        "'tabindex'",
        "'tabIndex'",
        "'readonly'",
        "'readOnly'",
        "'for'",
        "'htmlFor'",
        "'class'",
        "'className'",
        "'maxlength'",
        "'maxLength'",
        "'cellspacing'",
        "'cellSpacing'",
        "'cellpadding'",
        "'cellPadding'",
        "'rowspan'",
        "'rowSpan'",
        "'colspan'",
        "'colSpan'",
        "'usemap'",
        "'useMap'",
        "'frameborder'",
        "'frameBorder'",
        "'contenteditable'",
        "'contentEditable'",
        "\"object\"",
        "\"function\"",
        "\"object\"",
        "'number'",
        "''",
        "'/'",
        "'$1_$2'",
        "'$1_$2'",
        "'-'",
        "'(^|\\\\s)'",
        "'(\\\\s|$)'",
        "\"number\"",
        "\"px\"",
        "''",
        "\"display\"",
        "\"none\"",
        "\"block\"",
        "'children'",
        "\"<$1></$2>\"",
        "'*'",
        "''",
        "''",
        "'string'",
        "'<'",
        "'boolean'",
        "'#'",
        "'.'",
        "''",
        "\"true\"",
        "\"false\"",
        "\"null\"",
        "\"\"",
        "\"\"",
        "\"Boolean Number String Function Array Date RegExp Object Error\"",
        "\" \"",
        "\"[object \"",
        "\"]\"",
        "'DOMContentLoaded'",
        "'string'",
        "'object'",
        "'object'",
        "'parentNode'",
        "''",
        "\"none\"",
        "''",
        "''",
        "\"display\"",
        "\"none\"",
        "\"display\"",
        "\"none\"",
        "\"display\"",
        "\"none\"",
        "'previousElementSibling'",
        "'*'",
        "'nextElementSibling'",
        "'*'",
        "''",
        "''",
        "'string'",
        "' '",
        "'data-'",
        "'-$1'",
        "'option'",
        "'value'",
        "'position'",
        "'static'",
        "'position'",
        "'relative'",
        "''",
        "'string'",
        "''",
        "'string'",
        "\":\"",
        "':'",
        "';'",
        "';'",
        "'className'",
        "\" \"",
        "\"\"",
        "\" \"",
        "'className'",
        "''",
        "\" \"",
        "'scrollTop'",
        "'scrollLeft'",
        "'margin-top'",
        "'margin-left'",
        "'border-top-width'",
        "'border-left-width'",
        "\"position\"",
        "\"static\"",
        "'width'",
        "'height'",
        "'inner'",
        "'scroll'",
        "\"object\"",
        "\"array\"",
        "'SCRIPT'",
        "'text/javascript'",
        "'eval'",
        "'To'",
        "'insert'",
        "'Before'",
        "'After'",
        "'string'",
        "'onfocusin'",
        "'focusin'",
        "'focusout'",
        "'mouseover'",
        "'mouseout'",
        "'MouseEvents'",
        "''",
        "'.'",
        "' '",
        "'(?:^| )'",
        "' '",
        "' .* ?'",
        "'(?: |$)'",
        "'ready'",
        "'addEventListener'",
        "''",
        "'removeEventListener'",
        "\"expected function\"",
        "'isDefaultPrevented'",
        "'isImmediatePropagationStopped'",
        "'isPropagationStopped'",
        "'returnValue'",
        "\"function\"",
        "'dispatchEvent'",
        "'focusin focusout focus blur load resize scroll unload click dblclick '",
        "'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave '",
        "'change select keydown keypress keyup error'",
        "' '",
        "'Events'",
        "'bubbles'",
        "'application/json'",
        "'text/html'",
        "'a'",
        "'ajaxStart'",
        "'ajaxStop'",
        "'ajaxBeforeSend'",
        "'ajaxSend'",
        "'success'",
        "'ajaxSuccess'",
        "'ajaxError'",
        "'ajaxComplete'",
        "'type'",
        "'jsonp'",
        "'script'",
        "'error'",
        "'abort'",
        "'load error'",
        "'error'",
        "'error'",
        "'abort'",
        "'?$1='",
        "'timeout'",
        "'GET'",
        "'text/javascript, application/javascript, application/x-javascript'",
        "'application/xml, text/xml'",
        "'text/plain'",
        "';'",
        "'html'",
        "'json'",
        "'script'",
        "'xml'",
        "'text'",
        "''",
        "'&'",
        "'?'",
        "\"string\"",
        "'GET'",
        "'a'",
        "'//'",
        "'//'",
        "'jsonp'",
        "'script'",
        "'jsonp'",
        "'_='",
        "'jsonp'",
        "'=?'",
        "''",
        "'callback=?'",
        "'X-Requested-With'",
        "'XMLHttpRequest'",
        "'Accept'",
        "'*/*'",
        "','",
        "','",
        "'GET'",
        "'Content-Type'",
        "'application/x-www-form-urlencoded'",
        "'file:'",
        "'content-type'",
        "'script'",
        "'xml'",
        "'json'",
        "'parsererror'",
        "'error'",
        "'abort'",
        "'abort'",
        "'async'",
        "'timeout'",
        "'POST'",
        "'json'",
        "'<div>'",
        "\"\"",
        "'['",
        "'object'",
        "'array'",
        "''",
        "']'",
        "\"array\"",
        "\"object\"",
        "\"\"",
        "'='",
        "'&'",
        "'+'",
        "'fieldset'",
        "'submit'",
        "'reset'",
        "'button'",
        "'file'",
        "'radio'",
        "'checkbox'",
        "'='",
        "'&'",
        "'submit'",
        "'submit'",
        "'__proto__'",
        "''",
        "'array'",
        "'__Z'",
        "'undefined'",
        "'undefined'",
        "'1.8.3'",
        "'length'",
        "'number'",
        "'number'",
        "'value'",
        "'number'",
        "'Bind must be called on a function'",
        "'bindAll must be passed function names'",
        "''",
        "'toString'",
        "'valueOf'",
        "'isPrototypeOf'",
        "'toString'",
        "'propertyIsEnumerable'",
        "'hasOwnProperty'",
        "'toLocaleString'",
        "'constructor'",
        "'[object RegExp]'",
        "'[object String]'",
        "''",
        "''",
        "'[object Number]'",
        "'[object Date]'",
        "'[object Boolean]'",
        "'[object Array]'",
        "'object'",
        "'object'",
        "'constructor'",
        "'constructor'",
        "'[object Array]'",
        "'function'",
        "'object'",
        "'Arguments'",
        "'Function'",
        "'String'",
        "'Number'",
        "'Date'",
        "'RegExp'",
        "'Error'",
        "'is'",
        "'[object '",
        "']'",
        "'callee'",
        "'function'",
        "'object'",
        "'function'",
        "'[object Boolean]'",
        "'&'",
        "'&amp;'",
        "'<'",
        "'&lt;'",
        "'>'",
        "'&gt;'",
        "'\"'",
        "'&quot;'",
        "\"'\"",
        "'&#x27;'",
        "'`'",
        "'&#x60;'",
        "'(?:'",
        "'|'",
        "')'",
        "'g'",
        "''",
        "''",
        "''",
        "\"'\"",
        "\"'\"",
        "'\\\\'",
        "'\\\\'",
        "'\\r'",
        "'r'",
        "'\\n'",
        "'n'",
        "'\\u2028'",
        "'u2028'",
        "'\\u2029'",
        "'u2029'",
        "'\\\\'",
        "'|'",
        "'|$'",
        "'g'",
        "\"__p+='\"",
        "\"'+\\n((__t=(\"",
        "\"))==null?'':_.escape(__t))+\\n'\"",
        "\"'+\\n((__t=(\"",
        "\"))==null?'':__t)+\\n'\"",
        "\"';\\n\"",
        "\"\\n__p+='\"",
        "\"';\\n\"",
        "'with(obj||{}){\\n'",
        "'}\\n'",
        "\"var __t,__p='',__j=Array.prototype.join,\"",
        "\"print=function(){__p+=__j.call(arguments,'');};\\n\"",
        "'return __p;\\n'",
        "'obj'",
        "'_'",
        "'obj'",
        "'function('",
        "'){\\n'",
        "'}'",
        "'pop'",
        "'push'",
        "'reverse'",
        "'shift'",
        "'sort'",
        "'splice'",
        "'unshift'",
        "'shift'",
        "'splice'",
        "'concat'",
        "'join'",
        "'slice'",
        "''",
        "'function'",
        "'underscore'",
        "'object'",
        "'object'",
        "'function'",
        "'underscore'",
        "'jquery'",
        "'exports'",
        "'undefined'",
        "'underscore'",
        "'jquery'",
        "'1.2.3'",
        "'object'",
        "'context'",
        "'l'",
        "'l'",
        "'defaults'",
        "'id'",
        "'c'",
        "'object'",
        "'change:'",
        "'change'",
        "'sync'",
        "'read'",
        "'object'",
        "'sync'",
        "'create'",
        "'patch'",
        "'update'",
        "'patch'",
        "'destroy'",
        "'sync'",
        "'delete'",
        "'urlRoot'",
        "'url'",
        "'$&/'",
        "'invalid'",
        "'attributes'",
        "'update'",
        "'add'",
        "'sort'",
        "'update'",
        "'reset'",
        "'find'",
        "'filter'",
        "'Cannot sort a set without a comparator'",
        "'sort'",
        "'get'",
        "'reset'",
        "'set'",
        "'sync'",
        "'read'",
        "'id'",
        "'invalid'",
        "'remove'",
        "'all'",
        "'all'",
        "'add'",
        "'remove'",
        "'destroy'",
        "'change'",
        "'models'",
        "'view'",
        "'model'",
        "'collection'",
        "'el'",
        "'id'",
        "'attributes'",
        "'className'",
        "'tagName'",
        "'events'",
        "'div'",
        "'events'",
        "'.delegateEvents'",
        "'.delegateEvents'",
        "'.delegateEvents'",
        "'attributes'",
        "'id'",
        "'class'",
        "'className'",
        "'tagName'",
        "'el'",
        "'json'",
        "'url'",
        "'create'",
        "'update'",
        "'patch'",
        "'application/json'",
        "'application/x-www-form-urlencoded'",
        "'PUT'",
        "'DELETE'",
        "'PATCH'",
        "'POST'",
        "'X-HTTP-Method-Override'",
        "'GET'",
        "'request'",
        "'create'",
        "'POST'",
        "'update'",
        "'PUT'",
        "'patch'",
        "'PATCH'",
        "'delete'",
        "'DELETE'",
        "'read'",
        "'GET'",
        "''",
        "'route:'",
        "'route'",
        "'route'",
        "'routes'",
        "'\\\\$&'",
        "'(?:$1)?'",
        "'([^/?]+)'",
        "'([^?]*?)'",
        "'^'",
        "'(?:\\\\?([\\\\s\\\\S]*))?$'",
        "'undefined'",
        "'$&/'",
        "'/'",
        "'%2525'",
        "''",
        "''",
        "''",
        "'/'",
        "''",
        "'Backbone.history has already been started'",
        "'/'",
        "'onhashchange'",
        "'/'",
        "'/'",
        "'/'",
        "'/'",
        "'#'",
        "'iframe'",
        "'javascript:0'",
        "'none'",
        "'#'",
        "'on'",
        "'popstate'",
        "'hashchange'",
        "'on'",
        "'popstate'",
        "'hashchange'",
        "''",
        "''",
        "'?'",
        "'/'",
        "''",
        "'replaceState'",
        "'pushState'",
        "''",
        "'#'",
        "'#'",
        "'constructor'",
        "'A \"url\" property or function must be specified'",
        "'error'",
        "'object'",
        "'function'",
        "\"backbone\"",
        "\"function\"",
        "\"backbone\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "'function'",
        "\"Backbone.localStorage: Environment does not support localStorage.\"",
        "\",\"",
        "\",\"",
        "\"^\"",
        "\"-\"",
        "\"-\"",
        "'localStorage'",
        "'localStorage'",
        "\"read\"",
        "\"create\"",
        "\"update\"",
        "\"delete\"",
        "\"Private browsing is unsupported\"",
        "\"0.9.10\"",
        "\"Record Not Found\"",
        "\"0.9.10\"",
        "'localStorage'",
        "'localStorage'"
    ],
    "variables": [
        "Zepto",
        "key",
        "$",
        "classList",
        "emptyArray",
        "elementDisplay",
        "classCache",
        "cssNumber",
        "fragmentRE",
        "singleTagRE",
        "tagExpanderRE",
        "rootNodeRE",
        "capitalRE",
        "methodAttributes",
        "adjacencyOperators",
        "table",
        "tableRow",
        "containers",
        "readyRE",
        "simpleSelectorRE",
        "class2type",
        "toString",
        "zepto",
        "camelize",
        "uniq",
        "tempParent",
        "propMap",
        "isArray",
        "matchesSelector",
        "match",
        "parent",
        "temp",
        "element",
        "display",
        "dom",
        "nodes",
        "container",
        "dom",
        "deep",
        "args",
        "found",
        "maybeID",
        "maybeClass",
        "nameOnly",
        "isSimple",
        "klass",
        "svg",
        "name",
        "value",
        "values",
        "i",
        "key",
        "i",
        "key",
        "nodes",
        "excludes",
        "el",
        "el",
        "result",
        "$this",
        "node",
        "node",
        "collection",
        "ancestors",
        "nodes",
        "func",
        "dom",
        "clone",
        "children",
        "func",
        "contents",
        "dom",
        "el",
        "originHtml",
        "newText",
        "result",
        "attrName",
        "data",
        "$this",
        "coords",
        "parentOffset",
        "props",
        "obj",
        "computedStyle",
        "element",
        "props",
        "css",
        "cls",
        "newName",
        "$this",
        "names",
        "hasScrollTop",
        "hasScrollLeft",
        "elem",
        "offsetParent",
        "offset",
        "parentOffset",
        "parent",
        "dimensionProperty",
        "offset",
        "el",
        "i",
        "len",
        "inside",
        "argType",
        "nodes",
        "parent",
        "copyByClone",
        "parentInDocument",
        "_zid",
        "isFunction",
        "isString",
        "handlers",
        "specialEvents",
        "focusinSupported",
        "focus",
        "hover",
        "matcher",
        "parts",
        "id",
        "handler",
        "related",
        "callback",
        "result",
        "id",
        "args",
        "proxyFn",
        "returnTrue",
        "returnFalse",
        "ignoreProperties",
        "eventMethods",
        "sourceMethod",
        "key",
        "proxy",
        "autoRemove",
        "delegator",
        "$this",
        "evt",
        "match",
        "$this",
        "e",
        "result",
        "bubbles",
        "jsonpID",
        "key",
        "name",
        "rscript",
        "scriptTypeRE",
        "xmlTypeRE",
        "jsonType",
        "htmlType",
        "blankRE",
        "originAnchor",
        "context",
        "context",
        "status",
        "context",
        "context",
        "_callbackName",
        "callbackName",
        "script",
        "originalCallback",
        "responseData",
        "abort",
        "xhr",
        "abortTimeout",
        "settings",
        "deferred",
        "urlAnchor",
        "dataType",
        "hasPlaceholder",
        "mime",
        "headers",
        "setHeader",
        "protocol",
        "xhr",
        "nativeSetHeader",
        "abortTimeout",
        "result",
        "error",
        "async",
        "options",
        "options",
        "parts",
        "selector",
        "options",
        "callback",
        "escape",
        "encodeURIComponent",
        "array",
        "hash",
        "name",
        "result",
        "add",
        "result",
        "nativeGetComputedStyle",
        "getComputedStyle",
        "root",
        "previousUnderscore",
        "ArrayProto",
        "ObjProto",
        "FuncProto",
        "push",
        "toString",
        "hasOwnProperty",
        "nativeIsArray",
        "nativeKeys",
        "nativeBind",
        "nativeCreate",
        "Ctor",
        "_",
        "optimizeCb",
        "cb",
        "createAssigner",
        "length",
        "index",
        "source",
        "keys",
        "l",
        "i",
        "key",
        "baseCreate",
        "result",
        "property",
        "MAX_ARRAY_INDEX",
        "getLength",
        "isArrayLike",
        "length",
        "i",
        "length",
        "keys",
        "keys",
        "length",
        "results",
        "index",
        "currentKey",
        "currentKey",
        "keys",
        "length",
        "index",
        "key",
        "results",
        "keys",
        "length",
        "index",
        "currentKey",
        "keys",
        "length",
        "index",
        "currentKey",
        "args",
        "isFunc",
        "func",
        "result",
        "lastComputed",
        "value",
        "computed",
        "i",
        "length",
        "result",
        "Infinity",
        "lastComputed",
        "Infinity",
        "value",
        "computed",
        "i",
        "length",
        "length",
        "shuffled",
        "index",
        "rand",
        "a",
        "b",
        "group",
        "result",
        "key",
        "fail",
        "flatten",
        "output",
        "idx",
        "i",
        "length",
        "value",
        "j",
        "len",
        "result",
        "seen",
        "i",
        "length",
        "value",
        "computed",
        "result",
        "argsLength",
        "i",
        "length",
        "item",
        "j",
        "rest",
        "length",
        "result",
        "index",
        "result",
        "i",
        "length",
        "length",
        "index",
        "value",
        "low",
        "high",
        "mid",
        "i",
        "length",
        "length",
        "idx",
        "executeBound",
        "result",
        "args",
        "bound",
        "boundArgs",
        "bound",
        "position",
        "length",
        "args",
        "i",
        "i",
        "length",
        "key",
        "memoize",
        "cache",
        "address",
        "args",
        "context",
        "args",
        "result",
        "timeout",
        "previous",
        "later",
        "now",
        "remaining",
        "timeout",
        "args",
        "context",
        "timestamp",
        "result",
        "later",
        "last",
        "callNow",
        "args",
        "arguments",
        "start",
        "i",
        "start",
        "result",
        "memo",
        "hasEnumBug",
        "nonEnumerableProps",
        "nonEnumIdx",
        "proto",
        "prop",
        "keys",
        "keys",
        "keys",
        "length",
        "values",
        "i",
        "keys",
        "length",
        "results",
        "currentKey",
        "index",
        "keys",
        "length",
        "pairs",
        "i",
        "result",
        "keys",
        "i",
        "length",
        "names",
        "keys",
        "key",
        "i",
        "length",
        "result",
        "obj",
        "iteratee",
        "keys",
        "i",
        "length",
        "key",
        "value",
        "keys",
        "result",
        "keys",
        "length",
        "obj",
        "i",
        "key",
        "eq",
        "className",
        "areArrays",
        "aCtor",
        "bCtor",
        "length",
        "keys",
        "key",
        "accum",
        "i",
        "escapeMap",
        "unescapeMap",
        "createEscaper",
        "escaper",
        "source",
        "testRegexp",
        "replaceRegexp",
        "value",
        "idCounter",
        "id",
        "noMatch",
        "escapes",
        "escaper",
        "escapeChar",
        "matcher",
        "index",
        "source",
        "render",
        "template",
        "argument",
        "instance",
        "result",
        "func",
        "args",
        "method",
        "obj",
        "method",
        "root",
        "_",
        "$",
        "previousBackbone",
        "addMethod",
        "args",
        "addUnderscoreMethods",
        "cb",
        "modelMatcher",
        "matcher",
        "Events",
        "eventSplitter",
        "eventsApi",
        "i",
        "names",
        "internalOn",
        "listeners",
        "id",
        "listeningTo",
        "listening",
        "thisId",
        "onApi",
        "handlers",
        "context",
        "ctx",
        "listening",
        "listeningTo",
        "ids",
        "i",
        "listening",
        "offApi",
        "i",
        "listening",
        "context",
        "listeners",
        "ids",
        "names",
        "handlers",
        "remaining",
        "j",
        "handler",
        "events",
        "events",
        "onceMap",
        "once",
        "length",
        "args",
        "i",
        "triggerApi",
        "events",
        "allEvents",
        "triggerEvents",
        "ev",
        "i",
        "l",
        "a1",
        "a2",
        "a3",
        "Model",
        "attrs",
        "attrs",
        "unset",
        "silent",
        "changes",
        "changing",
        "current",
        "changed",
        "prev",
        "i",
        "attrs",
        "old",
        "changed",
        "val",
        "model",
        "success",
        "serverAttrs",
        "attrs",
        "wait",
        "model",
        "success",
        "attributes",
        "serverAttrs",
        "method",
        "xhr",
        "model",
        "success",
        "wait",
        "destroy",
        "xhr",
        "id",
        "error",
        "modelMethods",
        "Collection",
        "setOptions",
        "addOptions",
        "splice",
        "tail",
        "length",
        "i",
        "singular",
        "removed",
        "singular",
        "at",
        "toAdd",
        "toRemove",
        "modelMap",
        "add",
        "merge",
        "remove",
        "sort",
        "sortable",
        "sortAttr",
        "model",
        "i",
        "existing",
        "attrs",
        "orderChanged",
        "replace",
        "i",
        "model",
        "model",
        "id",
        "comparator",
        "length",
        "success",
        "collection",
        "method",
        "wait",
        "collection",
        "success",
        "model",
        "removed",
        "i",
        "model",
        "index",
        "id",
        "id",
        "prevId",
        "id",
        "collectionMethods",
        "View",
        "delegateEventSplitter",
        "viewOptions",
        "method",
        "match",
        "attrs",
        "beforeSend",
        "error",
        "xhr",
        "methodMap",
        "Router",
        "optionalParam",
        "namedParam",
        "splatParam",
        "escapeRegExp",
        "router",
        "args",
        "route",
        "routes",
        "History",
        "routeStripper",
        "rootStripper",
        "pathStripper",
        "path",
        "path",
        "root",
        "match",
        "match",
        "path",
        "root",
        "body",
        "iWindow",
        "addEventListener",
        "removeEventListener",
        "current",
        "root",
        "url",
        "iWindow",
        "href",
        "extend",
        "parent",
        "child",
        "Surrogate",
        "urlError",
        "wrapError",
        "error",
        "i",
        "value",
        "store",
        "modelId",
        "result",
        "i",
        "id",
        "data",
        "modelId",
        "i",
        "id",
        "local",
        "itemRe",
        "store",
        "resp",
        "errorMessage",
        "syncDfd",
        "forceAjaxSync"
    ],
    "comments": [
        "Zepto v1.1.6 - zepto event ajax form ie - zeptojs.com/license",
        "special attributes that should be get/set via method calls",
        "fall back to performing a selector:",
        "`$.zepto.fragment` takes a html string and an optional tag name",
        "to generate DOM nodes nodes from the given html string.",
        "The generated DOM nodes are returned as an array.",
        "This function can be overriden in plugins for example to make",
        "it compatible with browsers that don't support the DOM fully.",
        "A special case optimization for a single tag",
        "`$.zepto.Z` swaps out the prototype of the given `dom` array",
        "of nodes with `$.fn` and thus supplying all the Zepto functions",
        "to the array. Note that `__proto__` is not supported on Internet",
        "Explorer. This method can be overriden in plugins.",
        "`$.zepto.isZ` should return `true` if the given object is a Zepto",
        "collection. This method can be overriden in plugins.",
        "`$.zepto.init` is Zepto's counterpart to jQuery's `$.fn.init` and",
        "takes a CSS selector and an optional context (and handles various",
        "special cases).",
        "This method can be overriden in plugins.",
        "If nothing given, return an empty Zepto collection",
        "Optimize for string selectors",
        "If it's a html fragment, create nodes from it",
        "Note: In both Chrome 21 and Firefox 15, DOM error 12",
        "is thrown if the fragment doesn't begin with <",
        "If there's a context, create a collection on that context first, and select",
        "nodes from there",
        "If it's a CSS selector, use it to select nodes.",
        "If a function is given, call it when the DOM is ready",
        "If a Zepto collection is given, just return it",
        "normalize array if an array of nodes is given",
        "Wrap DOM nodes.",
        "If it's a html fragment, create nodes from it",
        "If there's a context, create a collection on that context first, and select",
        "nodes from there",
        "And last but no least, if it's a CSS selector, use it to select nodes.",
        "create a new Zepto collection from the nodes found",
        "`$` will be the base `Zepto` object. When calling this",
        "function just call `$.zepto.init, which makes the implementation",
        "details of selecting nodes and creating Zepto collections",
        "patchable in plugins.",
        "Copy all but undefined properties from one or more",
        "objects to the `target` object.",
        "`$.zepto.qsa` is Zepto's CSS selector implementation which",
        "uses `document.querySelectorAll` and optimizes for some special cases, like `#id`.",
        "This method can be overriden in plugins.",
        "Ensure that a 1 char tag name still gets checked",
        "If it's simple, it could be a class",
        "Or a tag",
        "Or it's not simple, and we need to query all",
        "access className property while respecting SVGAnimatedString",
        "\"true\"  => true",
        "\"false\" => false",
        "\"null\"  => null",
        "\"42\"    => 42",
        "\"42.5\"  => 42.5",
        "\"08\"    => \"08\"",
        "JSON    => parse if valid",
        "String  => self",
        "plugin compatibility",
        "Populate the class2type map",
        "Define methods that will be available on all",
        "Zepto collections",
        "Because a collection acts like an array",
        "copy over these useful array functions.",
        "`map` and `slice` in the jQuery API work differently",
        "from their array counterparts",
        "need to check if document.body exists for IE as that browser reports",
        "document ready when it hasn't yet created the body element",
        "`pluck` is borrowed from Prototype.js",
        "drill down to the inmost element",
        "Get *real* offsetParent",
        "Get correct offsets",
        "Subtract element margins",
        "note: when an element has margin: auto the offsetLeft and marginLeft",
        "are the same in Safari causing offset.left to incorrectly be 0",
        "Add offsetParent borders",
        "Subtract the two offsets",
        "for now",
        "Generate the `width` and `height` functions",
        "Generate the `after`, `prepend`, `before`, `append`,",
        "`insertAfter`, `insertBefore`, `appendTo`, and `prependTo` methods.",
        "=> prepend, append",
        "arguments can be nodes, arrays of nodes, Zepto objects and HTML strings",
        "convert all methods to a \"before\" operation",
        "after    => insertAfter",
        "prepend  => prependTo",
        "before   => insertBefore",
        "append   => appendTo",
        "Export internal API functions in the `$.zepto` namespace",
        "emulate mouseenter, mouseleave",
        "handle focus(), blur() by calling them directly",
        "items in the collection might not be DOM elements",
        "triggers event handlers on current element just as if an event occurred,",
        "doesn't trigger an actual event, doesn't bubble",
        "shortcut methods for `.bind(event, fn)` for each event type",
        "trigger a custom event and return false if it was cancelled",
        "trigger an Ajax \"global\" event",
        "Number of active Ajax requests",
        "triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable",
        "type: \"timeout\", \"error\", \"abort\", \"parsererror\"",
        "status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"",
        "Empty function, used as default callback",
        "Default type of request",
        "Callback that is executed before request",
        "Callback that is executed if the request succeeds",
        "Callback that is executed the the server drops error",
        "Callback that is executed on request complete (both: error and success)",
        "The context for the callbacks",
        "Whether to trigger \"global\" Ajax events",
        "Transport",
        "MIME types mapping",
        "IIS returns Javascript as \"application/x-javascript\"",
        "Whether the request is to another domain",
        "Default timeout",
        "Whether data should be serialized to string",
        "Whether the browser should be allowed to cache GET responses",
        "serialize payload and append it to the URL for GET requests",
        "http://perfectionkills.com/global-eval-what-are-the-options/",
        "avoid sending empty string (#319)",
        "handle optional data/success arguments",
        "url, data, success, dataType",
        "url, data, success, dataType",
        "url, data, success",
        "handle data in serializeArray() format",
        "recurse into nested objects",
        "__proto__ doesn't exist on IE<11, so redefine",
        "the Z function to use object extension instead",
        "this is a kludge but works",
        "getComputedStyle shouldn't freak out when called",
        "without a valid element as argument",
        "Underscore.js 1.8.3",
        "http://underscorejs.org",
        "(c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors",
        "Underscore may be freely distributed under the MIT license.",
        "Baseline setup",
        "--------------",
        "Establish the root object, `window` in the browser, or `exports` on the server.",
        "Save the previous value of the `_` variable.",
        "Save bytes in the minified (but not gzipped) version:",
        "Create quick reference variables for speed access to core prototypes.",
        "All **ECMAScript 5** native function implementations that we hope to use",
        "are declared here.",
        "Naked function reference for surrogate-prototype-swapping.",
        "Create a safe reference to the Underscore object for use below.",
        "Export the Underscore object for **Node.js**, with",
        "backwards-compatibility for the old `require()` API. If we're in",
        "the browser, add `_` as a global object.",
        "Current version.",
        "Internal function that returns an efficient (for current engines) version",
        "of the passed-in callback, to be repeatedly applied in other Underscore",
        "functions.",
        "A mostly-internal function to generate callbacks that can be applied",
        "to each element in a collection, returning the desired result — either",
        "identity, an arbitrary callback, a property matcher, or a property accessor.",
        "An internal function for creating assigner functions.",
        "An internal function for creating a new object that inherits from another.",
        "Helper for collection methods to determine whether a collection",
        "should be iterated as an array or as an object",
        "Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength",
        "Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094",
        "Collection Functions",
        "--------------------",
        "The cornerstone, an `each` implementation, aka `forEach`.",
        "Handles raw objects in addition to array-likes. Treats all",
        "sparse array-likes as if they were dense.",
        "Return the results of applying the iteratee to each element.",
        "Create a reducing function iterating left or right.",
        "Optimized iterator function as using arguments.length",
        "in the main function will deoptimize the, see #1991.",
        "Determine the initial value if none is provided.",
        "or `foldl`.",
        "The right-associative version of reduce, also known as `foldr`.",
        "Return the first value which passes a truth test. Aliased as `detect`.",
        "Return all the elements that pass a truth test.",
        "Aliased as `select`.",
        "Return all the elements for which a truth test fails.",
        "Determine whether all of the elements match a truth test.",
        "Aliased as `all`.",
        "Determine if at least one element in the object matches a truth test.",
        "Aliased as `any`.",
        "Determine if the array or object contains a given item (using `===`).",
        "Aliased as `includes` and `include`.",
        "Invoke a method (with arguments) on every item in a collection.",
        "Convenience version of a common use case of `map`: fetching a property.",
        "Convenience version of a common use case of `filter`: selecting only objects",
        "containing specific `key:value` pairs.",
        "Convenience version of a common use case of `find`: getting the first object",
        "containing specific `key:value` pairs.",
        "Return the maximum element (or element-based computation).",
        "Return the minimum element (or element-based computation).",
        "Shuffle a collection, using the modern version of the",
        "[Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).",
        "Sample **n** random values from a collection.",
        "If **n** is not specified, returns a single random element.",
        "The internal `guard` argument allows it to work with `map`.",
        "Sort the object's values by a criterion produced by an iteratee.",
        "An internal function used for aggregate \"group by\" operations.",
        "Groups the object's values by a criterion. Pass either a string attribute",
        "to group by, or a function that returns the criterion.",
        "Indexes the object's values by a criterion, similar to `groupBy`, but for",
        "when you know that your index values will be unique.",
        "Counts instances of an object that group by a certain criterion. Pass",
        "either a string attribute to count by, or a function that returns the",
        "criterion.",
        "Safely create a real, live array from anything iterable.",
        "Return the number of elements in an object.",
        "Split a collection into two arrays: one whose elements all satisfy the given",
        "predicate, and one whose elements all do not satisfy the predicate.",
        "Array Functions",
        "---------------",
        "Get the first element of an array. Passing **n** will return the first N",
        "values in the array. Aliased as `head` and `take`. The **guard** check",
        "allows it to work with `_.map`.",
        "Returns everything but the last entry of the array. Especially useful on",
        "the arguments object. Passing **n** will return all the values in",
        "the array, excluding the last N.",
        "Get the last element of an array. Passing **n** will return the last N",
        "values in the array.",
        "Returns everything but the first entry of the array. Aliased as `tail` and `drop`.",
        "Especially useful on the arguments object. Passing an **n** will return",
        "the rest N values in the array.",
        "Trim out all falsy values from an array.",
        "Internal implementation of a recursive `flatten` function.",
        "flatten current level of array or arguments object",
        "Flatten out an array, either recursively (by default), or just one level.",
        "Return a version of the array that does not contain the specified value(s).",
        "Produce a duplicate-free version of the array. If the array has already",
        "been sorted, you have the option of using a faster algorithm.",
        "Aliased as `unique`.",
        "Produce an array that contains the union: each distinct element from all of",
        "the passed-in arrays.",
        "Produce an array that contains every item shared between all the",
        "passed-in arrays.",
        "Take the difference between one array and a number of other arrays.",
        "Only the elements present in just the first array will remain.",
        "Zip together multiple lists into a single array -- elements that share",
        "an index go together.",
        "Complement of _.zip. Unzip accepts an array of arrays and groups",
        "each array's elements on shared indices",
        "Converts lists into objects. Pass either a single array of `[key, value]`",
        "pairs, or two parallel arrays of the same length -- one of keys, and one of",
        "the corresponding values.",
        "Generator function to create the findIndex and findLastIndex functions",
        "Returns the first index on an array-like that passes a predicate test",
        "Use a comparator function to figure out the smallest index at which",
        "an object should be inserted so as to maintain order. Uses binary search.",
        "Generator function to create the indexOf and lastIndexOf functions",
        "Return the position of the first occurrence of an item in an array,",
        "or -1 if the item is not included in the array.",
        "If the array is large and already in sort order, pass `true`",
        "for **isSorted** to use binary search.",
        "Generate an integer Array containing an arithmetic progression. A port of",
        "the native Python `range()` function. See",
        "[the Python documentation](http://docs.python.org/library/functions.html#range).",
        "Function (ahem) Functions",
        "------------------",
        "Determines whether to execute a function as a constructor",
        "or a normal function with the provided arguments",
        "Create a function bound to a given object (assigning `this`, and arguments,",
        "optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if",
        "available.",
        "Partially apply a function by creating a version that has had some of its",
        "arguments pre-filled, without changing its dynamic `this` context. _ acts",
        "as a placeholder, allowing any combination of arguments to be pre-filled.",
        "Bind a number of an object's methods to that object. Remaining arguments",
        "are the method names to be bound. Useful for ensuring that all callbacks",
        "defined on an object belong to it.",
        "Memoize an expensive function by storing its results.",
        "Delays a function for the given number of milliseconds, and then calls",
        "it with the arguments supplied.",
        "Defers a function, scheduling it to run after the current call stack has",
        "cleared.",
        "Returns a function, that, when invoked, will only be triggered at most once",
        "during a given window of time. Normally, the throttled function will run",
        "as much as it can, without ever going more than once per `wait` duration;",
        "but if you'd like to disable the execution on the leading edge, pass",
        "`{leading: false}`. To disable execution on the trailing edge, ditto.",
        "Returns a function, that, as long as it continues to be invoked, will not",
        "be triggered. The function will be called after it stops being called for",
        "N milliseconds. If `immediate` is passed, trigger the function on the",
        "leading edge, instead of the trailing.",
        "Returns the first function passed as an argument to the second,",
        "allowing you to adjust arguments, run code before and after, and",
        "conditionally execute the original function.",
        "Returns a negated version of the passed-in predicate.",
        "Returns a function that is the composition of a list of functions, each",
        "consuming the return value of the function that follows.",
        "Returns a function that will only be executed on and after the Nth call.",
        "Returns a function that will only be executed up to (but not including) the Nth call.",
        "Returns a function that will be executed at most one time, no matter how",
        "often you call it. Useful for lazy initialization.",
        "Object Functions",
        "----------------",
        "Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.",
        "Constructor is a special case.",
        "Retrieve the names of an object's own properties.",
        "Delegates to **ECMAScript 5**'s native `Object.keys`",
        "Ahem, IE < 9.",
        "Retrieve all the property names of an object.",
        "Ahem, IE < 9.",
        "Retrieve the values of an object's properties.",
        "Returns the results of applying the iteratee to each element of the object",
        "In contrast to _.map it returns an object",
        "Convert an object into a list of `[key, value]` pairs.",
        "Invert the keys and values of an object. The values must be serializable.",
        "Return a sorted list of the function names available on the object.",
        "Aliased as `methods`",
        "Extend a given object with all the properties in passed-in object(s).",
        "Assigns a given object with all the own properties in the passed-in object(s)",
        "(https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)",
        "Returns the first key on an object that passes a predicate test",
        "Return a copy of the object only containing the whitelisted properties.",
        "Return a copy of the object without the blacklisted properties.",
        "Fill in a given object with default properties.",
        "Creates an object that inherits from the given prototype object.",
        "If additional properties are provided then they will be added to the",
        "created object.",
        "Create a (shallow-cloned) duplicate of an object.",
        "Invokes interceptor with the obj, and then returns obj.",
        "The primary purpose of this method is to \"tap into\" a method chain, in",
        "order to perform operations on intermediate results within the chain.",
        "Returns whether an object has a given set of `key:value` pairs.",
        "Internal recursive comparison function for `isEqual`.",
        "Identical objects are equal. `0 === -0`, but they aren't identical.",
        "See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).",
        "A strict comparison is necessary because `null == undefined`.",
        "Unwrap any wrapped objects.",
        "Compare `[[Class]]` names.",
        "Strings, numbers, regular expressions, dates, and booleans are compared by value.",
        "RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')",
        "Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is",
        "equivalent to `new String(\"5\")`.",
        "`NaN`s are equivalent, but non-reflexive.",
        "Object(NaN) is equivalent to NaN",
        "An `egal` comparison is performed for other numeric values.",
        "Coerce dates and booleans to numeric primitive values. Dates are compared by their",
        "millisecond representations. Note that invalid dates with millisecond representations",
        "of `NaN` are not equivalent.",
        "Objects with different constructors are not equivalent, but `Object`s or `Array`s",
        "from different frames are.",
        "Assume equality for cyclic structures. The algorithm for detecting cyclic",
        "structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.",
        "Initializing stack of traversed objects.",
        "It's done here since we only need them for objects and arrays comparison.",
        "Linear search. Performance is inversely proportional to the number of",
        "unique nested structures.",
        "Add the first object to the stack of traversed objects.",
        "Recursively compare objects and arrays.",
        "Compare array lengths to determine if a deep comparison is necessary.",
        "Deep compare the contents, ignoring non-numeric properties.",
        "Deep compare objects.",
        "Ensure that both objects contain the same number of properties before comparing deep equality.",
        "Deep compare each member",
        "Remove the first object from the stack of traversed objects.",
        "Perform a deep comparison to check if two objects are equal.",
        "Is a given array, string, or object empty?",
        "An \"empty\" object has no enumerable own-properties.",
        "Is a given value a DOM element?",
        "Is a given value an array?",
        "Delegates to ECMA5's native Array.isArray",
        "Is a given variable an object?",
        "Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.",
        "Define a fallback version of the method in browsers (ahem, IE < 9), where",
        "there isn't any inspectable \"Arguments\" type.",
        "Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,",
        "IE 11 (#1621), and in Safari 8 (#1929).",
        "Is a given object a finite number?",
        "Is the given value `NaN`? (NaN is the only number which does not equal itself).",
        "Is a given value a boolean?",
        "Is a given value equal to null?",
        "Is a given variable undefined?",
        "Shortcut function for checking if an object has a given property directly",
        "on itself (in other words, not on a prototype).",
        "Utility Functions",
        "-----------------",
        "Run Underscore.js in *noConflict* mode, returning the `_` variable to its",
        "previous owner. Returns a reference to the Underscore object.",
        "Keep the identity function around for default iteratees.",
        "Predicate-generating functions. Often useful outside of Underscore.",
        "Generates a function for a given object that returns a given property.",
        "Returns a predicate for checking whether an object has a given set of",
        "`key:value` pairs.",
        "Run a function **n** times.",
        "Return a random integer between min and max (inclusive).",
        "A (possibly faster) way to get the current timestamp as an integer.",
        "List of HTML entities for escaping.",
        "Functions for escaping and unescaping strings to/from HTML interpolation.",
        "Regexes for identifying a key that needs to be escaped",
        "If the value of the named `property` is a function then invoke it with the",
        "`object` as context; otherwise, return it.",
        "Generate a unique integer id (unique within the entire client session).",
        "Useful for temporary DOM ids.",
        "By default, Underscore uses ERB-style template delimiters, change the",
        "following template settings to use alternative delimiters.",
        "When customizing `templateSettings`, if you don't want to define an",
        "interpolation, evaluation or escaping regex, we need one that is",
        "guaranteed not to match.",
        "Certain characters need to be escaped so that they can be put into a",
        "string literal.",
        "JavaScript micro-templating, similar to John Resig's implementation.",
        "Underscore templating handles arbitrary delimiters, preserves whitespace,",
        "and correctly escapes quotes within interpolated code.",
        "NB: `oldSettings` only exists for backwards compatibility.",
        "Combine delimiters into one regular expression via alternation.",
        "Compile the template source, escaping string literals appropriately.",
        "Adobe VMs need the match returned to produce the correct offest.",
        "If a variable is not specified, place data values in local scope.",
        "Provide the compiled source as a convenience for precompilation.",
        "Add a \"chain\" function. Start chaining a wrapped Underscore object.",
        "OOP",
        "---------------",
        "If Underscore is called as a function, it returns a wrapped object that",
        "can be used OO-style. This wrapper holds altered versions of all the",
        "underscore functions. Wrapped objects may be chained.",
        "Helper function to continue chaining intermediate results.",
        "Add your own custom functions to the Underscore object.",
        "Add all of the Underscore functions to the wrapper object.",
        "Add all mutator Array functions to the wrapper.",
        "Add all accessor Array functions to the wrapper.",
        "Extracts the result from a wrapped and chained object.",
        "Provide unwrapping proxy for some methods used in engine operations",
        "such as arithmetic and JSON stringification.",
        "AMD registration happens at the end for compatibility with AMD loaders",
        "that may not enforce next-turn semantics on modules. Even though general",
        "practice for AMD registration is to be anonymous, underscore registers",
        "as a named module because, like jQuery, it is a base library that is",
        "popular enough to be bundled in a third party lib, but not be part of",
        "an AMD load request. Those cases could generate an error when an",
        "anonymous define() is called outside of a loader request.",
        "Backbone.js 1.2.3",
        "(c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors",
        "Backbone may be freely distributed under the MIT license.",
        "For all details and documentation:",
        "http://backbonejs.org",
        "Establish the root object, `window` (`self`) in the browser, or `global` on the server.",
        "We use `self` instead of `window` for `WebWorker` support.",
        "Set up Backbone appropriately for the environment. Start with AMD.",
        "Export global even in AMD case in case this script is loaded with",
        "others that may still expect a global Backbone.",
        "Next for Node.js or CommonJS. jQuery may not be needed as a module.",
        "Finally, as a browser global.",
        "Initial Setup",
        "-------------",
        "Save the previous value of the `Backbone` variable, so that it can be",
        "restored later on, if `noConflict` is used.",
        "Create a local reference to a common array method we'll want to use later.",
        "Current version of the library. Keep in sync with `package.json`.",
        "For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns",
        "the `$` variable.",
        "Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable",
        "to its previous owner. Returns a reference to this Backbone object.",
        "Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option",
        "will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and",
        "set a `X-Http-Method-Override` header.",
        "Turn on `emulateJSON` to support legacy servers that can't deal with direct",
        "`application/json` requests ... this will encode the body as",
        "`application/x-www-form-urlencoded` instead and will send the model in a",
        "form param named `model`.",
        "Proxy Backbone class methods to Underscore functions, wrapping the model's",
        "`attributes` object or collection's `models` array behind the scenes.",
        "",
        "collection.filter(function(model) { return model.get('age') > 10 });",
        "collection.each(this.addView);",
        "",
        "`Function#apply` can be slow so we use the method's arg count, if we know it.",
        "Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.",
        "Backbone.Events",
        "---------------",
        "A module that can be mixed in to *any object* in order to provide it with",
        "a custom event channel. You may bind a callback to an event with `on` or",
        "remove with `off`; `trigger`-ing an event fires all callbacks in",
        "succession.",
        "",
        "var object = {};",
        "_.extend(object, Backbone.Events);",
        "object.on('expand', function(){ alert('expanded'); });",
        "object.trigger('expand');",
        "",
        "Regular expression used to split event strings.",
        "Iterates over the standard `event, callback` (as well as the fancy multiple",
        "space-separated events `\"change blur\", callback` and jQuery-style event",
        "maps `{event: callback}`).",
        "Handle event maps.",
        "Handle space separated event names by delegating them individually.",
        "Finally, standard events.",
        "Bind an event to a `callback` function. Passing `\"all\"` will bind",
        "the callback to all events fired.",
        "Guard the `listening` argument from the public API.",
        "Inversion-of-control versions of `on`. Tell *this* object to listen to",
        "an event in another object... keeping track of what it's listening to",
        "for easier unbinding later.",
        "This object is not listening to any other events on `obj` yet.",
        "Setup the necessary references to track the listening callbacks.",
        "Bind callbacks on obj, and keep track of them on listening.",
        "The reducing API that adds a callback to the `events` object.",
        "Remove one or many callbacks. If `context` is null, removes all",
        "callbacks with that function. If `callback` is null, removes all",
        "callbacks for the event. If `name` is null, removes all bound",
        "callbacks for all events.",
        "Tell this object to stop listening to either specific events ... or",
        "to every object it's currently listening to.",
        "If listening doesn't exist, this object is not currently",
        "listening to obj. Break out early.",
        "The reducing API that removes a callback from the `events` object.",
        "Delete all events listeners and \"drop\" events.",
        "Bail out if there are no events stored.",
        "Replace events if there are any remaining.  Otherwise, clean up.",
        "Update tail event if the list has any events.  Otherwise, clean up.",
        "Bind an event to only be triggered a single time. After the first time",
        "the callback is invoked, its listener will be removed. If multiple events",
        "are passed in using the space-separated syntax, the handler will fire",
        "once for each event, not once for a combination of all events.",
        "Map the event into a `{event: once}` object.",
        "Inversion-of-control versions of `once`.",
        "Map the event into a `{event: once}` object.",
        "Reduces the event callbacks into a map of `{event: onceWrapper}`.",
        "`offer` unbinds the `onceWrapper` after it has been called.",
        "Trigger one or many events, firing all bound callbacks. Callbacks are",
        "passed the same arguments as `trigger` is, apart from the event name",
        "(unless you're listening on `\"all\"`, which will cause your callback to",
        "receive the true name of the event as the first argument).",
        "Handles triggering the appropriate event callbacks.",
        "A difficult-to-believe, but optimized internal dispatch function for",
        "triggering events. Tries to keep the usual cases speedy (most internal",
        "Backbone events have 3 arguments).",
        "Aliases for backwards compatibility.",
        "Allow the `Backbone` object to serve as a global event bus, for folks who",
        "want global \"pubsub\" in a convenient place.",
        "Backbone.Model",
        "--------------",
        "Backbone **Models** are the basic data object in the framework --",
        "frequently representing a row in a table in a database on your server.",
        "A discrete chunk of data and a bunch of useful, related methods for",
        "performing computations and transformations on that data.",
        "Create a new model with the specified attributes. A client id (`cid`)",
        "is automatically generated and assigned for you.",
        "Attach all inheritable methods to the Model prototype.",
        "A hash of attributes whose current and previous value differ.",
        "The value returned during the last failed validation.",
        "The default name for the JSON `id` attribute is `\"id\"`. MongoDB and",
        "CouchDB users may want to set this to `\"_id\"`.",
        "The prefix is used to create the client id which is used to identify models locally.",
        "You may want to override this if you're experiencing name clashes with model ids.",
        "Initialize is an empty function by default. Override it with your own",
        "initialization logic.",
        "Return a copy of the model's `attributes` object.",
        "Proxy `Backbone.sync` by default -- but override this if you need",
        "custom syncing semantics for *this* particular model.",
        "Get the value of an attribute.",
        "Get the HTML-escaped value of an attribute.",
        "Returns `true` if the attribute contains a value that is not null",
        "or undefined.",
        "Special-cased proxy to underscore's `_.matches` method.",
        "Set a hash of model attributes on the object, firing `\"change\"`. This is",
        "the core primitive operation of a model, updating the data and notifying",
        "anyone who needs to know about the change in state. The heart of the beast.",
        "Handle both `\"key\", value` and `{key: value}` -style arguments.",
        "Run validation.",
        "Extract attributes and options.",
        "For each `set` attribute, update or delete the current value.",
        "Update the `id`.",
        "Trigger all relevant attribute changes.",
        "You might be wondering why there's a `while` loop here. Changes can",
        "be recursively nested within `\"change\"` events.",
        "Remove an attribute from the model, firing `\"change\"`. `unset` is a noop",
        "if the attribute doesn't exist.",
        "Clear all attributes on the model, firing `\"change\"`.",
        "Determine if the model has changed since the last `\"change\"` event.",
        "If you specify an attribute name, determine if that attribute has changed.",
        "Return an object containing all the attributes that have changed, or",
        "false if there are no changed attributes. Useful for determining what",
        "parts of a view need to be updated and/or what attributes need to be",
        "persisted to the server. Unset attributes will be set to undefined.",
        "You can also pass an attributes object to diff against the model,",
        "determining if there *would be* a change.",
        "Get the previous value of an attribute, recorded at the time the last",
        "`\"change\"` event was fired.",
        "Get all of the attributes of the model at the time of the previous",
        "`\"change\"` event.",
        "Fetch the model from the server, merging the response with the model's",
        "local attributes. Any changed attributes will trigger a \"change\" event.",
        "Set a hash of model attributes, and sync the model to the server.",
        "If the server returns an attributes hash that differs, the model's",
        "state will be `set` again.",
        "Handle both `\"key\", value` and `{key: value}` -style arguments.",
        "If we're not waiting and attributes exist, save acts as",
        "`set(attr).save(null, opts)` with validation. Otherwise, check if",
        "the model will be valid when the attributes, if any, are set.",
        "After a successful server-side save, the client is (optionally)",
        "updated with the server-side state.",
        "Ensure attributes are restored during synchronous saves.",
        "Set temporary attributes if `{wait: true}` to properly find new ids.",
        "Restore attributes.",
        "Destroy this model on the server if it was already persisted.",
        "Optimistically removes the model from its collection, if it has one.",
        "If `wait: true` is passed, waits for the server to respond before removal.",
        "Default URL for the model's representation on the server -- if you're",
        "using Backbone's restful methods, override this to change the endpoint",
        "that will be called.",
        "the model. The default implementation is just to pass the response along.",
        "Create a new model with identical attributes to this one.",
        "A model is new if it has never been saved to the server, and lacks an id.",
        "Check if the model is currently in a valid state.",
        "Run validation against the next complete set of model attributes,",
        "returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.",
        "Underscore methods that we want to implement on the Model, mapped to the",
        "number of arguments they take.",
        "Mix in each Underscore method as a proxy to `Model#attributes`.",
        "Backbone.Collection",
        "-------------------",
        "If models tend to represent a single row of data, a Backbone Collection is",
        "more analogous to a table full of data ... or a small slice or page of that",
        "table, or a collection of rows that belong together for a particular reason",
        "-- all of the messages in this particular folder, all of the documents",
        "belonging to this particular author, and so on. Collections maintain",
        "indexes of their models, both in order, and for lookup by `id`.",
        "Create a new **Collection**, perhaps to contain a specific type of `model`.",
        "If a `comparator` is specified, the Collection will maintain",
        "its models in sort order, as they're added and removed.",
        "Default options for `Collection#set`.",
        "Splices `insert` into `array` at index `at`.",
        "Define the Collection's inheritable methods.",
        "The default model for a collection is just a **Backbone.Model**.",
        "This should be overridden in most cases.",
        "Initialize is an empty function by default. Override it with your own",
        "initialization logic.",
        "The JSON representation of a Collection is an array of the",
        "models' attributes.",
        "Proxy `Backbone.sync` by default.",
        "Add a model, or list of models to the set. `models` may be Backbone",
        "Models or raw JavaScript objects to be converted to Models, or any",
        "combination of the two.",
        "Remove a model, or a list of models from the set.",
        "Update a collection by `set`-ing a new list of models, adding new ones,",
        "removing models that are no longer present, and merging models that",
        "already exist in the collection, as necessary. Similar to **Model#set**,",
        "the core operation for updating the data contained by the collection.",
        "Turn bare objects into model references, and prevent invalid models",
        "from being added.",
        "If a duplicate is found, prevent it from being added and",
        "optionally merge it into the existing model.",
        "If this is a new, valid model, push it to the `toAdd` list.",
        "Remove stale models.",
        "See if sorting is needed, update `length` and splice in new models.",
        "Silently sort the collection if appropriate.",
        "Unless silenced, it's time to fire all appropriate add/sort events.",
        "Return the added (or merged) model (or models).",
        "When you have more items than you want to add or remove individually,",
        "you can reset the entire set with a new list of models, without firing",
        "any granular `add` or `remove` events. Fires `reset` when finished.",
        "Useful for bulk operations and optimizations.",
        "Add a model to the end of the collection.",
        "Remove a model from the end of the collection.",
        "Add a model to the beginning of the collection.",
        "Remove a model from the beginning of the collection.",
        "Slice out a sub-array of models from the collection.",
        "Get a model from the set by id.",
        "Get the model at the given index.",
        "Return models with matching attributes. Useful for simple cases of",
        "`filter`.",
        "Return the first model with matching attributes. Useful for simple cases",
        "of `find`.",
        "Force the collection to re-sort itself. You don't need to call this under",
        "normal circumstances, as the set will maintain sort order as each item",
        "is added.",
        "Run sort based on type of `comparator`.",
        "Pluck an attribute from each model in the collection.",
        "Fetch the default set of models for this collection, resetting the",
        "collection when they arrive. If `reset: true` is passed, the response",
        "data will be passed through the `reset` method instead of `set`.",
        "Create a new instance of a model in this collection. Add the model to the",
        "collection immediately, unless `wait: true` is passed, in which case we",
        "wait for the server to agree.",
        "collection. The default implementation is just to pass it through.",
        "Create a new collection with an identical list of models as this one.",
        "Define how to uniquely identify models in the collection.",
        "Private method to reset all internal state. Called when the collection",
        "is first initialized or reset.",
        "Prepare a hash of attributes (or other model) to be added to this",
        "collection.",
        "Internal method called by both remove and set.",
        "Method for checking whether an object should be considered a model for",
        "the purposes of adding to the collection.",
        "Internal method to create a model's ties to a collection.",
        "Internal method to sever a model's ties to a collection.",
        "Internal method called every time a model in the set fires an event.",
        "Sets need to update their indexes when models change ids. All other",
        "events simply proxy through. \"add\" and \"remove\" events that originate",
        "in other collections are ignored.",
        "Underscore methods that we want to implement on the Collection.",
        "90% of the core usefulness of Backbone Collections is actually implemented",
        "right here:",
        "Mix in each Underscore method as a proxy to `Collection#models`.",
        "Backbone.View",
        "-------------",
        "Backbone Views are almost more convention than they are actual code. A View",
        "is simply a JavaScript object that represents a logical chunk of UI in the",
        "DOM. This might be a single item, an entire list, a sidebar or panel, or",
        "even the surrounding frame which wraps your whole app. Defining a chunk of",
        "UI as a **View** allows you to define your DOM events declaratively, without",
        "having to worry about render order ... and makes it easy for the view to",
        "react to specific changes in the state of your models.",
        "Creating a Backbone.View creates its initial element outside of the DOM,",
        "if an existing element is not provided...",
        "Cached regex to split keys for `delegate`.",
        "List of view options to be set as properties.",
        "Set up all inheritable **Backbone.View** properties and methods.",
        "The default `tagName` of a View's element is `\"div\"`.",
        "jQuery delegate for element lookup, scoped to DOM elements within the",
        "current view. This should be preferred to global lookups where possible.",
        "Initialize is an empty function by default. Override it with your own",
        "initialization logic.",
        "to populate its element (`this.el`), with the appropriate HTML. The",
        "convention is for **render** to always return `this`.",
        "Remove this view by taking the element out of the DOM, and removing any",
        "applicable Backbone.Events listeners.",
        "Remove this view's element from the document and all event listeners",
        "attached to it. Exposed for subclasses using an alternative DOM",
        "manipulation API.",
        "Change the view's element (`this.el` property) and re-delegate the",
        "view's events on the new element.",
        "Creates the `this.el` and `this.$el` references for this view using the",
        "given `el`. `el` can be a CSS selector or an HTML string, a jQuery",
        "context or an element. Subclasses can override this to utilize an",
        "alternative DOM manipulation API and are only required to set the",
        "`this.el` property.",
        "Set callbacks, where `this.events` is a hash of",
        "",
        "",
        "{",
        "'mousedown .title':  'edit',",
        "'click .button':     'save',",
        "'click .open':       function(e) { ... }",
        "}",
        "",
        "pairs. Callbacks will be bound to the view, with `this` set properly.",
        "Uses event delegation for efficiency.",
        "Omitting the selector binds the event to `this.el`.",
        "Add a single event listener to the view's element (or a child element",
        "using `selector`). This only works for delegate-able events: not `focus`,",
        "`blur`, and not `change`, `submit`, and `reset` in Internet Explorer.",
        "Clears all callbacks previously bound to the view by `delegateEvents`.",
        "You usually don't need to use this, but may wish to if you have multiple",
        "Backbone views attached to the same DOM element.",
        "A finer-grained `undelegateEvents` for removing a single delegated event.",
        "`selector` and `listener` are both optional.",
        "Produces a DOM element to be assigned to your view. Exposed for",
        "subclasses using an alternative DOM manipulation API.",
        "Ensure that the View has a DOM element to render into.",
        "If `this.el` is a string, pass it through `$()`, take the first",
        "matching element, and re-assign it to `el`. Otherwise, create",
        "an element from the `id`, `className` and `tagName` properties.",
        "Set attributes from a hash on this view's element.  Exposed for",
        "subclasses using an alternative DOM manipulation API.",
        "Backbone.sync",
        "-------------",
        "Override this function to change the manner in which Backbone persists",
        "models to the server. You will be passed the type of request, and the",
        "model in question. By default, makes a RESTful Ajax request",
        "to the model's `url()`. Some possible customizations could be:",
        "",
        "",
        "Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests",
        "as `POST`, with a `_method` parameter containing the true HTTP method,",
        "as well as all requests with the body as `application/x-www-form-urlencoded`",
        "instead of `application/json` with the model in a param named `model`.",
        "Useful when interfacing with server-side languages like **PHP** that make",
        "it difficult to read the body of `PUT` requests.",
        "Default options, unless specified.",
        "Default JSON-request options.",
        "Ensure that we have a URL.",
        "Ensure that we have the appropriate request data.",
        "For older servers, emulate JSON by encoding the request into an HTML-form.",
        "For older servers, emulate HTTP by mimicking the HTTP method with `_method`",
        "And an `X-HTTP-Method-Override` header.",
        "Don't process data on a non-GET request.",
        "Pass along `textStatus` and `errorThrown` from jQuery.",
        "Make the request, allowing the user to override any Ajax options.",
        "Map from CRUD to HTTP for our default `Backbone.sync` implementation.",
        "Set the default implementation of `Backbone.ajax` to proxy through to `$`.",
        "Override this if you'd like to use a different library.",
        "Backbone.Router",
        "---------------",
        "Routers map faux-URLs to actions, and fire events when routes are",
        "matched. Creating a new one sets its `routes` hash, if not set statically.",
        "Cached regular expressions for matching named param parts and splatted",
        "parts of route strings.",
        "Set up all inheritable **Backbone.Router** properties and methods.",
        "Initialize is an empty function by default. Override it with your own",
        "initialization logic.",
        "Manually bind a single named route to a callback. For example:",
        "",
        "this.route('search/:query/p:num', 'search', function(query, num) {",
        "...",
        "});",
        "",
        "Execute a route handler with the provided parameters.  This is an",
        "excellent place to do pre-route setup or post-route cleanup.",
        "Simple proxy to `Backbone.history` to save a fragment into the history.",
        "Bind all defined routes to `Backbone.history`. We have to reverse the",
        "order of the routes here to support behavior where the most general",
        "routes can be defined at the bottom of the route map.",
        "Convert a route string into a regular expression, suitable for matching",
        "against the current location hash.",
        "Given a route, and a URL fragment that it matches, return the array of",
        "extracted decoded parameters. Empty or unmatched parameters will be",
        "treated as `null` to normalize cross-browser behavior.",
        "Don't decode the search params.",
        "Backbone.History",
        "----------------",
        "Handles cross-browser history management, based on either",
        "[pushState](http://diveintohtml5.info/history.html) and real URLs, or",
        "[onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)",
        "and URL fragments. If the browser supports neither (old IE, natch),",
        "falls back to polling.",
        "Ensure that `History` can be used outside of the browser.",
        "Cached regex for stripping a leading hash/slash and trailing space.",
        "Cached regex for stripping leading and trailing slashes.",
        "Cached regex for stripping urls of hash.",
        "Has the history handling already been started?",
        "Set up all inheritable **Backbone.History** properties and methods.",
        "The default interval to poll for hash changes, if necessary, is",
        "twenty times a second.",
        "Are we at the app root?",
        "Does the pathname match the root?",
        "Unicode characters in `location.pathname` are percent encoded so they're",
        "decoded for comparison. `%25` should not be decoded since it may be part",
        "of an encoded parameter.",
        "In IE6, the hash fragment and search params are incorrect if the",
        "fragment contains `?`.",
        "Gets the true hash value. Cannot use location.hash directly due to bug",
        "in Firefox where location.hash will always be decoded.",
        "Get the pathname and search params, without the root.",
        "Get the cross-browser normalized URL fragment from the path or hash.",
        "Start the hash change handling, returning `true` if the current URL matches",
        "an existing route, and `false` otherwise.",
        "Figure out the initial configuration. Do we need an iframe?",
        "Is pushState desired ... is it available?",
        "Normalize root to always include a leading and trailing slash.",
        "Transition from hashChange to pushState or vice versa if both are",
        "requested.",
        "If we've started off with a route from a `pushState`-enabled",
        "browser, but we're currently in a browser that doesn't support it...",
        "Return immediately as browser will do redirect to new url",
        "Or if we've started out with a hash-based route, but we're currently",
        "in a browser where it could be `pushState`-based instead...",
        "Proxy an iframe to handle location events if the browser doesn't",
        "support the `hashchange` event, HTML5 history, or the user wants",
        "`hashChange` but not `pushState`.",
        "Using `appendChild` will throw on IE < 9 if the document is not ready.",
        "Add a cross-platform `addEventListener` shim for older browsers.",
        "Depending on whether we're using pushState or hashes, and whether",
        "'onhashchange' is supported, determine how we check the URL state.",
        "Disable Backbone.history, perhaps temporarily. Not useful in a real app,",
        "but possibly useful for unit testing Routers.",
        "Add a cross-platform `removeEventListener` shim for older browsers.",
        "Remove window listeners.",
        "Clean up the iframe if necessary.",
        "Some environments will throw when clearing an undefined interval.",
        "Add a route to be tested when the fragment changes. Routes added later",
        "may override previous routes.",
        "Checks the current URL to see if it has changed, and if it has,",
        "calls `loadUrl`, normalizing across the hidden iframe.",
        "If the user pressed the back button, the iframe's hash will have",
        "changed and we should use that for comparison.",
        "Attempt to load the current URL fragment. If a route succeeds with a",
        "match, returns `true`. If no defined routes matches the fragment,",
        "returns `false`.",
        "If the root doesn't match, no routes can match either.",
        "Save a fragment into the hash history, or replace the URL state if the",
        "'replace' option is passed. You are responsible for properly URL-encoding",
        "the fragment in advance.",
        "",
        "The options object can contain `trigger: true` if you wish to have the",
        "route callback be fired (not usually desirable), or `replace: true`, if",
        "you wish to modify the current URL without adding an entry to the history.",
        "Normalize the fragment.",
        "Don't include a trailing slash on the root.",
        "Strip the hash and decode for matching.",
        "If pushState is available, we use it to set the fragment as a real URL.",
        "If hash changes haven't been explicitly disabled, update the hash",
        "fragment to store history.",
        "Opening and closing the iframe tricks IE7 and earlier to push a",
        "history entry on hash-tag change.  When replace is true, we don't",
        "want this.",
        "If you've told us that you explicitly don't want fallback hashchange-",
        "based history, then `navigate` becomes a page refresh.",
        "Update the hash location, either replacing the current entry, or adding",
        "a new one to the browser history.",
        "Some browsers require that `hash` contains a leading #.",
        "Create the default Backbone.history.",
        "Helpers",
        "-------",
        "Helper function to correctly set up the prototype chain for subclasses.",
        "Similar to `goog.inherits`, but uses a hash of prototype properties and",
        "class properties to be extended.",
        "The constructor function for the new subclass is either defined by you",
        "(the \"constructor\" property in your `extend` definition), or defaulted",
        "by us to simply call the parent constructor.",
        "Add static properties to the constructor function, if supplied.",
        "Set the prototype chain to inherit from `parent`, without calling",
        "`parent` constructor function.",
        "Add prototype properties (instance properties) to the subclass,",
        "if supplied.",
        "Set a convenience property in case the parent's prototype is needed",
        "later.",
        "Set up inheritance for the model, collection, router, view and history.",
        "Throw an error when a URL is needed, and none is supplied.",
        "Wrap an optional error callback with a fallback error event.",
        "AMD. Register as an anonymous module.",
        "Use global variables if the locals are undefined.",
        "A simple module to replace `Backbone.sync` with *localStorage*-based",
        "persistence. Models are given GUIDS, and saved into a JSON object. Simple",
        "as that.",
        "Generate four random hex digits.",
        "Generate a pseudo-GUID by concatenating random hexadecimal.",
        "Our Store is represented by a single JS object in *localStorage*. Create it",
        "with a meaningful name, like the name you'd give a table.",
        "window.Store is deprectated, use Backbone.LocalStorage instead",
        "fix for \"illegal access\" error on Android when JSON.parse is passed null",
        "Save the current state of the **Store** to *localStorage*.",
        "Add a model, giving it a (hopefully)-unique GUID, if it doesn't already",
        "have an id of it's own.",
        "Update a model by replacing its copy in `this.data`.",
        "Retrieve a model from `this.data` by id.",
        "Return the array of all models currently in storage.",
        "Delete a model from `this.data`, returning it.",
        "Clear localStorage for specific collection.",
        "Remove id-tracking item (e.g., \"foo\").",
        "Match all data items (e.g., \"foo-ID\") and remove.",
        "Size of localStorage.",
        "localSync delegate to the model or collection's",
        "window.Store.sync and Backbone.localSync is deprecated, use Backbone.LocalStorage.sync instead",
        "If $ is having Deferred - use it.",
        "add compatibility with $.ajax",
        "always execute callback for success and error",
        "Override 'Backbone.sync' to default to localSync,",
        "the original 'Backbone.sync' is still available in 'Backbone.ajaxSync'"
    ],
    "docstrings": [
        "**Reduce** builds up a single result from a list of values, aka `inject`,",
        "**parse** converts a response into the hash of attributes to be `set` on",
        "**parse** converts a response into a list of models to be added to the",
        "**render** is the core function that your view should override, in order",
        "*{\"event selector\": \"callback\"}*",
        "* Use `setTimeout` to batch rapid-fire updates into a single request.",
        "* Send up the models as XML instead of JSON.",
        "* Persist models via WebSockets instead of Ajax.",
        "* Backbone localStorage Adapter\n * Version 1.1.16\n *\n * https://github.com/jeromegn/Backbone.localStorage",
        "*localStorage* property, which should be an instance of `Store`."
    ],
    "functions": [
        "isFunction",
        "isWindow",
        "isDocument",
        "isObject",
        "isPlainObject",
        "likeArray",
        "compact",
        "flatten",
        "dasherize",
        "classRE",
        "maybeAddPx",
        "defaultDisplay",
        "children",
        "extend",
        "filtered",
        "funcArg",
        "setAttribute",
        "className",
        "deserializeValue",
        "traverseNode",
        "zid",
        "findHandlers",
        "parse",
        "matcherFor",
        "eventCapture",
        "realEvent",
        "add",
        "remove",
        "compatible",
        "createProxy",
        "triggerAndReturn",
        "triggerGlobal",
        "ajaxStart",
        "ajaxStop",
        "ajaxBeforeSend",
        "ajaxSuccess",
        "ajaxError",
        "ajaxComplete",
        "empty",
        "mimeToDataType",
        "appendQuery",
        "serializeData",
        "parseArguments",
        "serialize",
        "createReduce",
        "iterator",
        "createPredicateIndexFinder",
        "createIndexFinder",
        "collectNonEnumProps",
        "S4",
        "guid",
        "isObject",
        "contains",
        "extend",
        "result"
    ],
    "classes": []
}