{
    "identifiers": [
        "it",
        "inject",
        "injectAsync",
        "beforeEachProviders",
        "TestComponentBuilder",
        "Component",
        "provide",
        "BaseRequestOptions",
        "XHRBackend",
        "ResponseOptions",
        "Response",
        "Http",
        "MockBackend",
        "MockConnection",
        "MyHttp",
        "describe",
        "beforeEachProviders",
        "BaseRequestOptions",
        "MockBackend",
        "provide",
        "Http",
        "backend",
        "defaultOptions",
        "Http",
        "backend",
        "defaultOptions",
        "MockBackend",
        "BaseRequestOptions",
        "MyHttp",
        "it",
        "inject",
        "MyHttp",
        "myhttp",
        "expect",
        "myhttp",
        "it",
        "injectAsync",
        "XHRBackend",
        "MyHttp",
        "mockBackend",
        "myhttp",
        "mockBackend",
        "connection",
        "status",
        "connection",
        "Response",
        "ResponseOptions",
        "connection",
        "myhttp",
        "res",
        "res",
        "res",
        "counter",
        "expect",
        "res",
        "status",
        "expect",
        "res"
    ],
    "literals": [
        "'angular2/testing'",
        "'angular2/core'",
        "'angular2/http'",
        "'angular2/http/testing'",
        "'./my-http.service'",
        "'Title'",
        "'should return status'",
        "'should get data from the server even if connection is down at first'",
        "\"<p><b>Hi there</b></p>\"",
        "\"*Hi there*\"",
        "'404'",
        "'/'"
    ],
    "variables": [
        "status",
        "counter"
    ],
    "comments": [
        "mock online status",
        "set connection to \"online\"",
        "spyOn(console, 'log');\n    expect(console.log).not.toHaveBeenCalled();\n\n    myhttp.get('').getData();\n    expect(console.log).toHaveBeenCalled();\n    expect(title.getData()).toEqual({ value: 'AngularClass' });"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}