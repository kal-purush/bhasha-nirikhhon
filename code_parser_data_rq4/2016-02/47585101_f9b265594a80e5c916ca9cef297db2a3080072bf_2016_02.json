{
    "identifiers": [
        "numpy",
        "np",
        "a",
        "foldpc",
        "nsample",
        "np",
        "asarray",
        "a",
        "T",
        "foldpc",
        "foldpc",
        "ValueError",
        "len",
        "a",
        "foldpc",
        "np",
        "arange",
        "len",
        "a",
        "x",
        "np",
        "random",
        "shuffle",
        "x",
        "x",
        "np",
        "asarray",
        "a",
        "get_shuffled",
        "indexes",
        "size",
        "T",
        "i",
        "nsample",
        "a",
        "b",
        "verbose",
        "scipy",
        "stats",
        "pearsonr",
        "np",
        "asarray",
        "a",
        "np",
        "asarray",
        "b",
        "len",
        "a",
        "len",
        "a",
        "ValueError",
        "pearsonr",
        "a",
        "b",
        "rho",
        "np",
        "sqrt",
        "len",
        "a",
        "rho",
        "verbose",
        "rho",
        "P_val",
        "significance",
        "rho",
        "P_val",
        "significance",
        "a",
        "b",
        "axis",
        "verbose",
        "scipy",
        "stats",
        "spearmanr",
        "np",
        "asarray",
        "a",
        "np",
        "asarray",
        "b",
        "len",
        "a",
        "len",
        "a",
        "ValueError",
        "spearmanr",
        "a",
        "b",
        "axis",
        "axis",
        "rho",
        "np",
        "sqrt",
        "len",
        "a",
        "rho",
        "rho",
        "P_val",
        "significance",
        "stat",
        "argstat",
        "foldpc",
        "nsample",
        "stat",
        "spearman_rank_coef",
        "arg",
        "arg",
        "kfold_it",
        "argstat",
        "foldpc",
        "foldpc",
        "nsample",
        "nsample",
        "stat",
        "pearson_coef",
        "arg",
        "arg",
        "kfold_it",
        "argstat",
        "foldpc",
        "foldpc",
        "nsample",
        "nsample",
        "NotImplementedError",
        "a",
        "b",
        "scipy",
        "stats",
        "ks_2samp",
        "np",
        "asarray",
        "a",
        "np",
        "asarray",
        "b",
        "len",
        "a",
        "len",
        "a",
        "ValueError",
        "ks_2samp",
        "a",
        "b",
        "k",
        "L",
        "n",
        "logL_given",
        "logL_given",
        "k",
        "L",
        "k",
        "np",
        "log",
        "L",
        "AIC",
        "k",
        "k",
        "n",
        "k"
    ],
    "literals": [
        "\"kfold_it\"",
        "\"pearson_coef\"",
        "\"spearman_rank_coef\"",
        "\"ks_test\"",
        "\"aicc\"",
        "\"foldpc (the percentage of removed data) must be between 0 and 100\"",
        "\"A and B must have the same size\"",
        "\"rho,pvalues,significance: \"",
        "\"a and b must have the same size\"",
        "\"spearman_rank_coef\"",
        "\"pearson_coef\"",
        "\"Only spearman_rank_coef and pearson_coef stat implemented\"",
        "\"a and b must have the same size\""
    ],
    "variables": [
        "__all__",
        "a",
        "size",
        "indexes",
        "a",
        "b",
        "rho",
        "P_val",
        "significance",
        "a",
        "b",
        "rho",
        "P_val",
        "significance",
        "a",
        "b",
        "AIC",
        "AIC"
    ],
    "comments": [
        "! /usr/bin/env python",
        "-*- coding: utf-8 -*-"
    ],
    "docstrings": [
        "\"\"\"This modules has some basics numpy based statisitical tools \"\"\"",
        "\"\"\"This methods enables to get a kflod sample of 100-foldpc% randomly\n    picked among the given data. `nsample` times realization are returned\n    a could be a [NxM] array. The kfolding is performed on the 0th axis\n    \"\"\"",
        "\"\"\"\n    This return rho,p_val,signifiance\n    \"\"\"",
        "\"\"\"\n    based of scipy.stats.spearmanr but add the error of rho\n    see http://en.wikipedia.org/wiki/Spearman%27s_rank_correlation_coefficient\n\n    if all return are false, return_all is set True\n    ----\n    \n    \"\"\"",
        "\"\"\"This functions draws `nsample` folded samples from `argstat`\n    and which should returns an array of associated statistics significance\"\"\"",
        "\"\"\"\n    Compare if 2 sample can be identical or not within a confiance value.\n    The nulle hypothese is given by the p-value.\n    ** This function return  *TRUE* if A and B are *DIFFERENT*\n    at the `limit_test` % confident level **\n    \n    limit_test : if p-value < `limit_test` [in %] return True\n    ----\n    return Booleen\n    \"\"\"",
        "\"\"\"\n    ***\n    Akaike_information_criterion\n    ***\n    \n    * Only differences in AIC are meaningful *\n    * AIC = \\chi^2 + 2k for model comparisons. *\n    \n    This function has to be minimized, see\n    http://en.wikipedia.org/wiki/Akaike_information_criterion\n    \n    where k is the number of parameters,\n    L is the maximized value of the likelihood function\n    n the number of element fitted (sample size)\n    \"\"\""
    ],
    "functions": [
        "kfold_it",
        "get_shuffled",
        "pearson_coef",
        "spearman_rank_coef",
        "get_kfolded_significance",
        "ks_test",
        "aicc"
    ],
    "classes": []
}