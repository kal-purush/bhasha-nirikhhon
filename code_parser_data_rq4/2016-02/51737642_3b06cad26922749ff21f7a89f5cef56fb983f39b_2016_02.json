{
    "identifiers": [
        "id",
        "id",
        "resultantId",
        "SEPARATOR",
        "SEPARATOR",
        "id",
        "require",
        "resultantId",
        "factory",
        "localRequire",
        "require",
        "id",
        "modules",
        "id",
        "id",
        "id",
        "inProgressModules",
        "requireStack",
        "inProgressModules",
        "id",
        "id",
        "cycle",
        "modules",
        "id",
        "inProgressModules",
        "id",
        "requireStack",
        "requireStack",
        "id",
        "build",
        "modules",
        "id",
        "inProgressModules",
        "id",
        "requireStack",
        "modules",
        "id",
        "define",
        "id",
        "factory",
        "modules",
        "id",
        "id",
        "modules",
        "id",
        "id",
        "factory",
        "define",
        "id",
        "modules",
        "id",
        "define",
        "modules",
        "require",
        "require",
        "define",
        "define",
        "require",
        "exports",
        "HTMLElement",
        "require",
        "require",
        "evt",
        "handler",
        "capture",
        "evt",
        "documentEventHandlers",
        "e",
        "documentEventHandlers",
        "e",
        "handler",
        "m_document_addEventListener",
        "evt",
        "handler",
        "capture",
        "evt",
        "handler",
        "capture",
        "evt",
        "windowEventHandlers",
        "e",
        "windowEventHandlers",
        "e",
        "handler",
        "m_window_addEventListener",
        "evt",
        "handler",
        "capture",
        "evt",
        "handler",
        "capture",
        "evt",
        "documentEventHandlers",
        "e",
        "documentEventHandlers",
        "e",
        "handler",
        "m_document_removeEventListener",
        "evt",
        "handler",
        "capture",
        "evt",
        "handler",
        "capture",
        "evt",
        "windowEventHandlers",
        "e",
        "windowEventHandlers",
        "e",
        "handler",
        "m_window_removeEventListener",
        "evt",
        "handler",
        "capture",
        "data",
        "data",
        "i",
        "data",
        "data",
        "i",
        "i",
        "data",
        "i",
        "define",
        "require",
        "PLATFORM_VERSION_BUILD_LABEL",
        "PLATFORM_VERSION_BUILD_LABEL",
        "platform",
        "windowEventHandlers",
        "channel",
        "documentEventHandlers",
        "channel",
        "documentEventHandlers",
        "channel",
        "windowEventHandlers",
        "documentEventHandlers",
        "m_document_addEventListener",
        "m_document_removeEventListener",
        "m_window_addEventListener",
        "m_window_removeEventListener",
        "data",
        "bNoDetach",
        "createEvent",
        "data",
        "documentEventHandlers",
        "bNoDetach",
        "documentEventHandlers",
        "evt",
        "setTimeout",
        "evt",
        "documentEventHandlers",
        "evt",
        "evt",
        "data",
        "createEvent",
        "data",
        "windowEventHandlers",
        "setTimeout",
        "windowEventHandlers",
        "evt",
        "evt",
        "callbackId",
        "args",
        "cordova",
        "callbackId",
        "args",
        "args",
        "args",
        "callbackId",
        "args",
        "cordova",
        "callbackId",
        "args",
        "args",
        "args",
        "callbackId",
        "isSuccess",
        "status",
        "args",
        "keepCallback",
        "cordova",
        "callbackId",
        "callback",
        "isSuccess",
        "status",
        "cordova",
        "callback",
        "callback",
        "args",
        "isSuccess",
        "callback",
        "callback",
        "args",
        "keepCallback",
        "cordova",
        "callbackId",
        "err",
        "isSuccess",
        "callbackId",
        "err",
        "msg",
        "cordova",
        "msg",
        "err",
        "func",
        "channel",
        "func",
        "e",
        "e",
        "cordova",
        "define",
        "require",
        "exports",
        "require",
        "callee",
        "argIndex",
        "callee",
        "argIndex",
        "spec",
        "functionName",
        "args",
        "opt_callee",
        "moduleExports",
        "i",
        "spec",
        "i",
        "spec",
        "i",
        "c",
        "args",
        "i",
        "c",
        "typeName",
        "utils",
        "arg",
        "arg",
        "arg",
        "c",
        "cUpper",
        "typeName",
        "typeMap",
        "cUpper",
        "errMsg",
        "typeMap",
        "cUpper",
        "errMsg",
        "errMsg",
        "typeName",
        "errMsg",
        "extractParamName",
        "opt_callee",
        "args",
        "i",
        "functionName",
        "errMsg",
        "jasmine",
        "errMsg",
        "errMsg",
        "value",
        "defaultValue",
        "value",
        "defaultValue",
        "value",
        "moduleExports",
        "checkArgs",
        "moduleExports",
        "getValue",
        "moduleExports",
        "define",
        "require",
        "exports",
        "base64",
        "arrayBuffer",
        "Uint8Array",
        "arrayBuffer",
        "uint8ToBase64",
        "array",
        "base64",
        "atob",
        "atob",
        "Buffer",
        "ArrayBuffer",
        "decodedStr",
        "Uint8Array",
        "arrayBuffer",
        "decodedStr",
        "i",
        "len",
        "i",
        "array",
        "i",
        "decodedStr",
        "i",
        "arrayBuffer",
        "b64_12bit",
        "i",
        "i",
        "j",
        "j",
        "b64_12bit",
        "i",
        "j",
        "b64_6bit",
        "i",
        "b64_6bit",
        "j",
        "b64_12bitTable",
        "b64_12bit",
        "b64_12bit",
        "rawData",
        "rawData",
        "b64_12bitTable",
        "i",
        "numBytes",
        "i",
        "segment",
        "rawData",
        "i",
        "rawData",
        "i",
        "rawData",
        "i",
        "output",
        "table",
        "segment",
        "output",
        "table",
        "segment",
        "numBytes",
        "i",
        "segment",
        "rawData",
        "i",
        "rawData",
        "i",
        "output",
        "table",
        "segment",
        "output",
        "b64_6bit",
        "segment",
        "output",
        "numBytes",
        "i",
        "segment",
        "rawData",
        "i",
        "output",
        "table",
        "segment",
        "output",
        "output",
        "define",
        "require",
        "exports",
        "require",
        "objects",
        "func",
        "context",
        "prop",
        "objects",
        "objects",
        "prop",
        "func",
        "context",
        "objects",
        "prop",
        "prop",
        "obj",
        "key",
        "value",
        "exports",
        "obj",
        "key",
        "obj",
        "key",
        "value",
        "e",
        "needsProperty",
        "needsProperty",
        "obj",
        "key",
        "value",
        "utils",
        "obj",
        "key",
        "value",
        "obj",
        "key",
        "value",
        "message",
        "message",
        "utils",
        "obj",
        "key",
        "message",
        "obj",
        "key",
        "clobber",
        "obj",
        "key",
        "value",
        "value",
        "clobber",
        "obj",
        "key",
        "value",
        "parent",
        "objects",
        "clobber",
        "merge",
        "each",
        "objects",
        "obj",
        "key",
        "obj",
        "require",
        "obj",
        "clobber",
        "parent",
        "key",
        "assignOrWrapInDeprecateGetter",
        "parent",
        "key",
        "result",
        "obj",
        "obj",
        "merge",
        "recursiveMerge",
        "parent",
        "key",
        "result",
        "assignOrWrapInDeprecateGetter",
        "parent",
        "key",
        "result",
        "obj",
        "result",
        "parent",
        "key",
        "parent",
        "key",
        "assignOrWrapInDeprecateGetter",
        "parent",
        "key",
        "result",
        "obj",
        "result",
        "parent",
        "key",
        "obj",
        "include",
        "result",
        "obj",
        "clobber",
        "merge",
        "e",
        "utils",
        "e",
        "key",
        "target",
        "src",
        "prop",
        "src",
        "src",
        "prop",
        "target",
        "target",
        "target",
        "clobber",
        "target",
        "prop",
        "src",
        "prop",
        "src",
        "prop",
        "target",
        "prop",
        "recursiveMerge",
        "target",
        "prop",
        "src",
        "prop",
        "clobber",
        "target",
        "prop",
        "src",
        "prop",
        "exports",
        "objects",
        "target",
        "include",
        "target",
        "objects",
        "exports",
        "objects",
        "target",
        "include",
        "target",
        "objects",
        "exports",
        "objects",
        "target",
        "include",
        "target",
        "objects",
        "exports",
        "recursiveMerge",
        "exports",
        "assignOrWrapInDeprecateGetter",
        "exports",
        "define",
        "require",
        "exports",
        "require",
        "sticky",
        "sticky",
        "h",
        "c",
        "c",
        "i",
        "h",
        "j",
        "len",
        "j",
        "c",
        "j",
        "c",
        "j",
        "f",
        "len",
        "h",
        "channel",
        "Channel",
        "channel",
        "Channel",
        "feature",
        "feature",
        "channel",
        "feature",
        "feature",
        "feature",
        "c",
        "c",
        "feature",
        "feature",
        "c",
        "c",
        "f",
        "f",
        "Channel",
        "f",
        "c",
        "forceFunction",
        "f",
        "f",
        "c",
        "f",
        "c",
        "func",
        "utils",
        "c",
        "f",
        "guid",
        "guid",
        "nextGuid",
        "func",
        "guid",
        "f",
        "guid",
        "guid",
        "guid",
        "func",
        "Channel",
        "f",
        "forceFunction",
        "f",
        "f",
        "guid",
        "handler",
        "guid",
        "Channel",
        "e",
        "arguments",
        "fireArgs",
        "item",
        "toCall",
        "item",
        "i",
        "toCall",
        "i",
        "toCall",
        "i",
        "fireArgs",
        "channel",
        "channel",
        "channel",
        "channel",
        "channel",
        "channel",
        "channel",
        "channel",
        "channel",
        "channel",
        "define",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "bridgeMode",
        "jsToNativeModes",
        "bridgeMode",
        "jsToNativeModes",
        "i",
        "commandQueue",
        "i",
        "payloadLength",
        "commandQueue",
        "i",
        "payloadLength",
        "args",
        "args",
        "utils",
        "args",
        "args",
        "args",
        "arg",
        "i",
        "utils",
        "arg",
        "ret",
        "base64",
        "arg",
        "ret",
        "arg",
        "ret",
        "message",
        "message",
        "Uint8Array",
        "i",
        "i",
        "ret",
        "i",
        "i",
        "ret",
        "b64",
        "stringToArrayBuffer",
        "atob",
        "b64",
        "message",
        "base64ToArrayBuffer",
        "message",
        "message",
        "message",
        "message",
        "message",
        "args",
        "message",
        "message",
        "message",
        "e",
        "args",
        "massageMessageNativeToJs",
        "e",
        "args",
        "massageMessageNativeToJs",
        "message",
        "args",
        "bridgeMode",
        "bridgeMode",
        "jsToNativeModes",
        "bridgeMode",
        "jsToNativeModes",
        "arguments",
        "successCallback",
        "arguments",
        "failCallback",
        "arguments",
        "service",
        "arguments",
        "action",
        "arguments",
        "actionArgs",
        "arguments",
        "callbackId",
        "splitCommand",
        "arguments",
        "action",
        "splitCommand",
        "service",
        "splitCommand",
        "actionArgs",
        "arguments",
        "service",
        "action",
        "actionArgs",
        "e",
        "actionArgs",
        "actionArgs",
        "successCallback",
        "failCallback",
        "callbackId",
        "service",
        "cordova",
        "cordova",
        "callbackId",
        "successCallback",
        "failCallback",
        "actionArgs",
        "massageArgsJsToNative",
        "actionArgs",
        "callbackId",
        "service",
        "action",
        "actionArgs",
        "commandQueue",
        "command",
        "bridgeMode",
        "jsToNativeModes",
        "command",
        "isInContextOfEvalJs",
        "commandQueue",
        "pokeNative",
        "bridgeMode",
        "jsToNativeModes",
        "jsToNativeModes",
        "jsToNativeModes",
        "pokeNativeViaXhr",
        "pokeNativeViaIframe",
        "execXhr",
        "execXhr",
        "execXhr",
        "execXhr",
        "execXhr",
        "XMLHttpRequest",
        "execXhr",
        "vcHeaderValue",
        "vcHeaderValue",
        "navigator",
        "execXhr",
        "vcHeaderValue",
        "execXhr",
        "requestCount",
        "shouldBundleCommandJson",
        "execXhr",
        "iOSExec",
        "execXhr",
        "setTimeout",
        "pokeNativeViaIframe",
        "bridgeMode",
        "jsToNativeModes",
        "bridgeMode",
        "jsToNativeModes",
        "execHashIframe",
        "execHashIframe",
        "execHashIframe",
        "execHashIframe",
        "execHashIframe",
        "hashToggle",
        "hashToggle",
        "hashToggle",
        "bridgeMode",
        "jsToNativeModes",
        "hashValue",
        "iOSExec",
        "execHashIframe",
        "hashValue",
        "execIframe",
        "execIframe",
        "execIframe",
        "execIframe",
        "execIframe",
        "execIframe",
        "execIframe",
        "failSafeTimerId",
        "setTimeout",
        "commandQueue",
        "pokeNative",
        "iOSExec",
        "jsToNativeModes",
        "iOSExec",
        "mode",
        "execIframe",
        "execIframe",
        "execIframe",
        "execIframe",
        "execIframe",
        "bridgeMode",
        "mode",
        "iOSExec",
        "failSafeTimerId",
        "clearTimeout",
        "failSafeTimerId",
        "failSafeTimerId",
        "commandQueue",
        "commandQueue",
        "commandQueue",
        "json",
        "iOSExec",
        "callbackId",
        "status",
        "message",
        "keepCallback",
        "iOSExec",
        "status",
        "status",
        "convertMessageToArgsNativeToJs",
        "message",
        "cordova",
        "callbackId",
        "success",
        "status",
        "args",
        "keepCallback",
        "iOSExec",
        "func",
        "isInContextOfEvalJs",
        "func",
        "iOSExec",
        "isInContextOfEvalJs",
        "iOSExec",
        "define",
        "require",
        "exports",
        "id",
        "proxyObj",
        "id",
        "CommandProxyMap",
        "id",
        "proxyObj",
        "proxyObj",
        "id",
        "CommandProxyMap",
        "id",
        "CommandProxyMap",
        "id",
        "CommandProxyMap",
        "id",
        "proxy",
        "service",
        "action",
        "CommandProxyMap",
        "service",
        "CommandProxyMap",
        "service",
        "action",
        "define",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "channel",
        "channel",
        "arr",
        "i",
        "arr",
        "i",
        "arr",
        "i",
        "arr",
        "i",
        "channel",
        "logUnfiredChannels",
        "platformInitChannelsArray",
        "logUnfiredChannels",
        "channel",
        "origNavigator",
        "CordovaNavigator",
        "origNavigator",
        "CordovaNavigator",
        "CordovaNavigator",
        "key",
        "origNavigator",
        "origNavigator",
        "key",
        "newNavigator",
        "key",
        "origNavigator",
        "key",
        "origNavigator",
        "k",
        "utils",
        "newNavigator",
        "key",
        "origNavigator",
        "k",
        "key",
        "newNavigator",
        "replaceNavigator",
        "msg",
        "msg",
        "channel",
        "cordova",
        "channel",
        "cordova",
        "channel",
        "cordova",
        "channel",
        "cordova",
        "channel",
        "channel",
        "channel",
        "modulemapper",
        "modulemapper",
        "modulemapper",
        "platform",
        "platform",
        "setTimeout",
        "pluginloader",
        "channel",
        "channel",
        "modulemapper",
        "platform",
        "platform",
        "channel",
        "channel",
        "require",
        "channel",
        "platformInitChannelsArray",
        "define",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "channel",
        "channel",
        "channel",
        "cordova",
        "require",
        "arr",
        "i",
        "arr",
        "i",
        "arr",
        "i",
        "arr",
        "i",
        "channel",
        "logUnfiredChannels",
        "platformInitChannelsArray",
        "logUnfiredChannels",
        "channel",
        "origNavigator",
        "CordovaNavigator",
        "origNavigator",
        "CordovaNavigator",
        "CordovaNavigator",
        "key",
        "origNavigator",
        "origNavigator",
        "key",
        "newNavigator",
        "key",
        "origNavigator",
        "key",
        "origNavigator",
        "k",
        "utils",
        "newNavigator",
        "key",
        "origNavigator",
        "k",
        "key",
        "newNavigator",
        "replaceNavigator",
        "msg",
        "msg",
        "channel",
        "cordova",
        "channel",
        "cordova",
        "channel",
        "cordova",
        "channel",
        "cordova",
        "channel",
        "channel",
        "channel",
        "platform",
        "platform",
        "setTimeout",
        "pluginloader",
        "channel",
        "channel",
        "modulemapper",
        "platform",
        "platform",
        "channel",
        "channel",
        "require",
        "channel",
        "platformInitChannelsArray",
        "define",
        "require",
        "exports",
        "require",
        "define",
        "exports",
        "symbolList",
        "deprecationMap",
        "strategy",
        "moduleName",
        "symbolPath",
        "opt_deprecationMessage",
        "moduleName",
        "moduleMap",
        "moduleName",
        "symbolList",
        "strategy",
        "moduleName",
        "symbolPath",
        "opt_deprecationMessage",
        "deprecationMap",
        "symbolPath",
        "opt_deprecationMessage",
        "exports",
        "moduleName",
        "symbolPath",
        "opt_deprecationMessage",
        "addEntry",
        "moduleName",
        "symbolPath",
        "opt_deprecationMessage",
        "exports",
        "moduleName",
        "symbolPath",
        "opt_deprecationMessage",
        "addEntry",
        "moduleName",
        "symbolPath",
        "opt_deprecationMessage",
        "exports",
        "moduleName",
        "symbolPath",
        "opt_deprecationMessage",
        "addEntry",
        "moduleName",
        "symbolPath",
        "opt_deprecationMessage",
        "exports",
        "moduleName",
        "addEntry",
        "moduleName",
        "symbolPath",
        "context",
        "symbolPath",
        "context",
        "symbolPath",
        "part",
        "parts",
        "i",
        "i",
        "cur",
        "cur",
        "part",
        "cur",
        "part",
        "cur",
        "exports",
        "context",
        "context",
        "origSymbols",
        "symbolList",
        "i",
        "len",
        "i",
        "symbolList",
        "i",
        "symbolList",
        "i",
        "require",
        "moduleName",
        "strategy",
        "symbolList",
        "i",
        "symbolPath",
        "symbolPath",
        "lastDot",
        "symbolPath",
        "lastDot",
        "symbolPath",
        "deprecationMap",
        "symbolPath",
        "deprecationMsg",
        "prepareNamespace",
        "context",
        "parentObj",
        "lastName",
        "strategy",
        "target",
        "builder",
        "target",
        "strategy",
        "target",
        "strategy",
        "symbolPath",
        "origSymbols",
        "origSymbols",
        "symbolPath",
        "target",
        "builder",
        "parentObj",
        "lastName",
        "deprecationMsg",
        "exports",
        "context",
        "symbolPath",
        "context",
        "origSymbols",
        "symbolPath",
        "origSymbols",
        "origSymbols",
        "symbolPath",
        "symbolPath",
        "i",
        "parts",
        "i",
        "obj",
        "obj",
        "obj",
        "parts",
        "i",
        "obj",
        "exports",
        "define",
        "require",
        "exports",
        "require",
        "exports",
        "symbolList",
        "deprecationMap",
        "strategy",
        "moduleName",
        "symbolPath",
        "opt_deprecationMessage",
        "symbolList",
        "strategy",
        "moduleName",
        "symbolPath",
        "opt_deprecationMessage",
        "deprecationMap",
        "symbolPath",
        "opt_deprecationMessage",
        "exports",
        "moduleName",
        "symbolPath",
        "opt_deprecationMessage",
        "addEntry",
        "moduleName",
        "symbolPath",
        "opt_deprecationMessage",
        "exports",
        "moduleName",
        "symbolPath",
        "opt_deprecationMessage",
        "addEntry",
        "moduleName",
        "symbolPath",
        "opt_deprecationMessage",
        "exports",
        "moduleName",
        "symbolPath",
        "opt_deprecationMessage",
        "addEntry",
        "moduleName",
        "symbolPath",
        "opt_deprecationMessage",
        "exports",
        "moduleName",
        "addEntry",
        "moduleName",
        "symbolPath",
        "context",
        "symbolPath",
        "context",
        "symbolPath",
        "part",
        "parts",
        "i",
        "i",
        "cur",
        "cur",
        "part",
        "cur",
        "part",
        "cur",
        "exports",
        "context",
        "context",
        "origSymbols",
        "symbolList",
        "i",
        "len",
        "i",
        "symbolList",
        "i",
        "symbolList",
        "i",
        "require",
        "moduleName",
        "strategy",
        "symbolList",
        "i",
        "symbolPath",
        "symbolPath",
        "lastDot",
        "symbolPath",
        "lastDot",
        "symbolPath",
        "deprecationMap",
        "symbolPath",
        "deprecationMsg",
        "prepareNamespace",
        "context",
        "parentObj",
        "lastName",
        "strategy",
        "target",
        "builder",
        "target",
        "strategy",
        "target",
        "strategy",
        "symbolPath",
        "origSymbols",
        "origSymbols",
        "symbolPath",
        "target",
        "builder",
        "parentObj",
        "lastName",
        "deprecationMsg",
        "exports",
        "context",
        "symbolPath",
        "context",
        "origSymbols",
        "symbolPath",
        "origSymbols",
        "origSymbols",
        "symbolPath",
        "symbolPath",
        "i",
        "parts",
        "i",
        "obj",
        "obj",
        "obj",
        "parts",
        "i",
        "obj",
        "exports",
        "define",
        "require",
        "exports",
        "require",
        "define",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "url",
        "onload",
        "onerror",
        "script",
        "onload",
        "script",
        "onerror",
        "script",
        "url",
        "script",
        "id",
        "url",
        "onload",
        "onerror",
        "onerror",
        "onerror",
        "onload",
        "id",
        "define",
        "onload",
        "exports",
        "url",
        "id",
        "define",
        "onload",
        "onerror",
        "onerror",
        "moduleList",
        "finishPluginLoading",
        "moduleList",
        "i",
        "i",
        "j",
        "j",
        "modulemapper",
        "j",
        "k",
        "k",
        "modulemapper",
        "k",
        "modulemapper",
        "finishPluginLoading",
        "path",
        "moduleList",
        "finishPluginLoading",
        "moduleList",
        "scriptCounter",
        "finishPluginLoading",
        "scriptCounter",
        "onScriptLoadingComplete",
        "moduleList",
        "finishPluginLoading",
        "i",
        "moduleList",
        "i",
        "injectIfNecessary",
        "moduleList",
        "i",
        "path",
        "moduleList",
        "i",
        "scriptLoadedCallback",
        "scripts",
        "n",
        "n",
        "scripts",
        "n",
        "src",
        "term",
        "src",
        "term",
        "path",
        "src",
        "src",
        "term",
        "path",
        "exports",
        "callback",
        "findCordovaPath",
        "pathPrefix",
        "pathPrefix",
        "injectIfNecessary",
        "pathPrefix",
        "require",
        "handlePluginsObject",
        "pathPrefix",
        "moduleList",
        "callback",
        "callback",
        "define",
        "require",
        "exports",
        "require",
        "moduleList",
        "moduleList",
        "moduleList",
        "moduleList",
        "i",
        "i",
        "j",
        "j",
        "modulemapper",
        "j",
        "k",
        "k",
        "modulemapper",
        "k",
        "modulemapper",
        "exports",
        "callback",
        "require",
        "handlePluginsObject",
        "moduleList",
        "callback",
        "define",
        "require",
        "exports",
        "exports",
        "makeAbsolute",
        "url",
        "anchorEl",
        "url",
        "anchorEl",
        "define",
        "require",
        "exports",
        "utils",
        "obj",
        "key",
        "getFunc",
        "opt_setFunc",
        "getFunc",
        "opt_setFunc",
        "desc",
        "opt_setFunc",
        "obj",
        "key",
        "desc",
        "obj",
        "key",
        "getFunc",
        "opt_setFunc",
        "obj",
        "key",
        "opt_setFunc",
        "utils",
        "utils",
        "utils",
        "a",
        "item",
        "a",
        "a",
        "item",
        "a",
        "i",
        "len",
        "i",
        "a",
        "i",
        "item",
        "i",
        "utils",
        "a",
        "item",
        "utils",
        "a",
        "item",
        "index",
        "a",
        "index",
        "index",
        "utils",
        "val",
        "val",
        "utils",
        "a",
        "utils",
        "a",
        "utils",
        "d",
        "d",
        "utils",
        "obj",
        "obj",
        "obj",
        "utils",
        "obj",
        "obj",
        "obj",
        "utils",
        "obj",
        "retVal",
        "i",
        "i",
        "obj",
        "i",
        "retVal",
        "utils",
        "obj",
        "i",
        "retVal",
        "retVal",
        "i",
        "obj",
        "i",
        "retVal",
        "retVal",
        "i",
        "obj",
        "i",
        "retVal",
        "i",
        "utils",
        "obj",
        "i",
        "retVal",
        "utils",
        "context",
        "func",
        "arguments",
        "func",
        "context",
        "args",
        "length",
        "i",
        "length",
        "i",
        "parseInt",
        "uuidchar",
        "uuidchar",
        "uuidchar",
        "uuidpart",
        "uuidchar",
        "uuidpart",
        "utils",
        "UUIDcreatePart",
        "UUIDcreatePart",
        "UUIDcreatePart",
        "UUIDcreatePart",
        "UUIDcreatePart",
        "utils",
        "Child",
        "Parent",
        "F",
        "Parent",
        "Child",
        "F",
        "Child",
        "Parent",
        "Child",
        "Child",
        "utils",
        "msg",
        "msg",
        "msg",
        "require",
        "require"
    ],
    "literals": [
        "'3.9.2'",
        "\".\"",
        "\".\"",
        "\"module \"",
        "\" not found\"",
        "'->'",
        "'->'",
        "\"Cycle in require graph: \"",
        "\"module \"",
        "\" already defined\"",
        "\"object\"",
        "\"function\"",
        "\"cordova\"",
        "\"cordova already defined\"",
        "'cordova/channel'",
        "'cordova/platform'",
        "'undefined'",
        "'undefined'",
        "\"undefined\"",
        "\"undefined\"",
        "'Events'",
        "'document'",
        "'addEventListener'",
        "'removeEventListener'",
        "'window'",
        "'addEventListener'",
        "'removeEventListener'",
        "'undefined'",
        "'deviceready'",
        "'undefined'",
        "\"Error in \"",
        "\"Success\"",
        "\"Error\"",
        "\" callbackId: \"",
        "\" : \"",
        "\"cordovacallbackerror\"",
        "'message'",
        "\"Failed to run constructor: \"",
        "\"cordova/argscheck\"",
        "'cordova/utils'",
        "'A'",
        "'Array'",
        "'D'",
        "'Date'",
        "'N'",
        "'Number'",
        "'S'",
        "'String'",
        "'F'",
        "'Function'",
        "'O'",
        "'Object'",
        "', '",
        "'*'",
        "'Expected '",
        "', but got '",
        "'.'",
        "'Wrong type for parameter \"'",
        "'\" of '",
        "': '",
        "'undefined'",
        "\"cordova/base64\"",
        "'undefined'",
        "'base64'",
        "'binary'",
        "\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"",
        "\"\"",
        "'='",
        "'=='",
        "\"cordova/builder\"",
        "'cordova/utils'",
        "'undefined'",
        "'undefined'",
        "'undefined'",
        "'Exception building Cordova JS globals: '",
        "' for key \"'",
        "'\"'",
        "'object'",
        "'object'",
        "\"cordova/channel\"",
        "'cordova/utils'",
        "'Can only use join with sticky channels.'",
        "'function'",
        "\"Function required as first argument!\"",
        "\"object\"",
        "''",
        "'onDOMContentLoaded'",
        "'onNativeReady'",
        "'onCordovaReady'",
        "'onPluginsReady'",
        "'onDeviceReady'",
        "'onResume'",
        "'onPause'",
        "'onCordovaReady'",
        "'onDOMContentLoaded'",
        "\"cordova/exec\"",
        "'cordova'",
        "'cordova/channel'",
        "'cordova/utils'",
        "'cordova/base64'",
        "'Array'",
        "'ArrayBuffer'",
        "'CDVType'",
        "'ArrayBuffer'",
        "'data'",
        "'ArrayBuffer'",
        "'CDVType'",
        "'MultiPart'",
        "\"string\"",
        "'INVALID'",
        "\".\"",
        "\".\"",
        "'The old format of this exec call has been removed (deprecated since 2.1). Change to: '",
        "\"cordova.exec(null, null, \\\"\"",
        "\"\\\", \\\"\"",
        "\"\\\",\"",
        "\");\"",
        "'HEAD'",
        "\"/!gap_exec?\"",
        "'vc'",
        "'rc'",
        "'cmds'",
        "'iframe'",
        "'none'",
        "'file:///#'",
        "'%0'",
        "'gap://ready'",
        "'iframe'",
        "'none'",
        "'gap://ready'",
        "''",
        "'['",
        "','",
        "']'",
        "\"cordova/exec/proxy\"",
        "\"adding proxy for \"",
        "\"cordova/init\"",
        "'cordova/channel'",
        "'cordova'",
        "'cordova/modulemapper'",
        "'cordova/platform'",
        "'cordova/pluginloader'",
        "'cordova/utils'",
        "'Channel not fired: '",
        "'deviceready has not fired after 5 seconds.'",
        "'function'",
        "\"warn: \"",
        "'pause'",
        "'resume'",
        "'activated'",
        "'deviceready'",
        "'complete'",
        "'interactive'",
        "'DOMContentLoaded'",
        "'cordova'",
        "'cordova'",
        "'cordova/exec'",
        "'cordova.exec'",
        "'cordova/exec'",
        "'Cordova.exec'",
        "'cordova'",
        "'deviceready'",
        "\"cordova/init_b\"",
        "'cordova/channel'",
        "'cordova'",
        "'cordova/modulemapper'",
        "'cordova/platform'",
        "'cordova/pluginloader'",
        "'cordova/utils'",
        "'cordova/exec'",
        "'Channel not fired: '",
        "'deviceready has not fired after 5 seconds.'",
        "'function'",
        "\"warn: \"",
        "'pause'",
        "'resume'",
        "'activated'",
        "'deviceready'",
        "'complete'",
        "'interactive'",
        "'DOMContentLoaded'",
        "'cordova'",
        "'deviceready'",
        "\"cordova/modulemapper\"",
        "'cordova/builder'",
        "'Module '",
        "' does not exist.'",
        "'c'",
        "'m'",
        "'d'",
        "'r'",
        "'.'",
        "'r'",
        "'.'",
        "'Access made to deprecated symbol: '",
        "'. '",
        "'m'",
        "'d'",
        "'d'",
        "'.'",
        "\"cordova/modulemapper_b\"",
        "'cordova/builder'",
        "'c'",
        "'m'",
        "'d'",
        "'r'",
        "'.'",
        "'r'",
        "'.'",
        "'Access made to deprecated symbol: '",
        "'. '",
        "'m'",
        "'d'",
        "'d'",
        "'.'",
        "\"cordova/platform\"",
        "'ios'",
        "'cordova/channel'",
        "\"cordova/pluginloader\"",
        "'cordova/modulemapper'",
        "'cordova/urlutil'",
        "\"script\"",
        "'script'",
        "'/cordova.js'",
        "''",
        "'/'",
        "'Could not find cordova.js script tag. Plugin loading may fail.'",
        "''",
        "'cordova/plugin_list'",
        "'cordova_plugins.js'",
        "\"cordova/plugin_list\"",
        "\"cordova/pluginloader_b\"",
        "'cordova/modulemapper'",
        "\"cordova/plugin_list\"",
        "\"cordova/urlutil\"",
        "'a'",
        "\"cordova/utils\"",
        "'Array'",
        "'function'",
        "'object'",
        "\"\"",
        "\"0\"",
        "'-'",
        "'-'",
        "'-'",
        "'-'",
        "'cordova'",
        "'cordova/init'"
    ],
    "variables": [
        "PLATFORM_VERSION_BUILD_LABEL",
        "require",
        "define",
        "modules",
        "requireStack",
        "inProgressModules",
        "SEPARATOR",
        "factory",
        "localRequire",
        "resultantId",
        "id",
        "cycle",
        "channel",
        "platform",
        "m_document_addEventListener",
        "m_document_removeEventListener",
        "m_window_addEventListener",
        "m_window_removeEventListener",
        "documentEventHandlers",
        "windowEventHandlers",
        "e",
        "e",
        "e",
        "e",
        "cordova",
        "evt",
        "evt",
        "callback",
        "msg",
        "utils",
        "moduleExports",
        "typeMap",
        "errMsg",
        "typeName",
        "i",
        "c",
        "cUpper",
        "arg",
        "base64",
        "exports",
        "array",
        "decodedStr",
        "arrayBuffer",
        "array",
        "i",
        "len",
        "b64_6bit",
        "b64_12bit",
        "b64_12bitTable",
        "i",
        "j",
        "numBytes",
        "output",
        "segment",
        "table",
        "i",
        "utils",
        "needsProperty",
        "result",
        "utils",
        "nextGuid",
        "Channel",
        "channel",
        "len",
        "i",
        "len",
        "f",
        "j",
        "c",
        "c",
        "func",
        "f",
        "guid",
        "guid",
        "handler",
        "fail",
        "fireArgs",
        "toCall",
        "i",
        "cordova",
        "channel",
        "utils",
        "base64",
        "jsToNativeModes",
        "bridgeMode",
        "execIframe",
        "execHashIframe",
        "hashToggle",
        "execXhr",
        "requestCount",
        "vcHeaderValue",
        "commandQueue",
        "isInContextOfEvalJs",
        "failSafeTimerId",
        "payloadLength",
        "i",
        "ret",
        "stringToArrayBuffer",
        "ret",
        "i",
        "base64ToArrayBuffer",
        "args",
        "successCallback",
        "failCallback",
        "service",
        "action",
        "actionArgs",
        "splitCommand",
        "callbackId",
        "command",
        "hashValue",
        "json",
        "success",
        "args",
        "CommandProxyMap",
        "proxy",
        "channel",
        "cordova",
        "modulemapper",
        "platform",
        "pluginloader",
        "utils",
        "platformInitChannelsArray",
        "i",
        "CordovaNavigator",
        "newNavigator",
        "channel",
        "cordova",
        "modulemapper",
        "platform",
        "pluginloader",
        "utils",
        "platformInitChannelsArray",
        "i",
        "CordovaNavigator",
        "newNavigator",
        "builder",
        "moduleMap",
        "symbolList",
        "deprecationMap",
        "parts",
        "cur",
        "context",
        "i",
        "part",
        "origSymbols",
        "i",
        "len",
        "strategy",
        "moduleName",
        "symbolPath",
        "lastDot",
        "lastName",
        "deprecationMsg",
        "parentObj",
        "target",
        "origSymbols",
        "parts",
        "obj",
        "context",
        "i",
        "builder",
        "symbolList",
        "deprecationMap",
        "parts",
        "cur",
        "context",
        "i",
        "part",
        "origSymbols",
        "i",
        "len",
        "strategy",
        "moduleName",
        "symbolPath",
        "lastDot",
        "lastName",
        "deprecationMsg",
        "parentObj",
        "target",
        "origSymbols",
        "parts",
        "obj",
        "context",
        "i",
        "modulemapper",
        "urlutil",
        "script",
        "i",
        "j",
        "k",
        "scriptCounter",
        "i",
        "path",
        "scripts",
        "term",
        "n",
        "src",
        "pathPrefix",
        "moduleList",
        "modulemapper",
        "i",
        "j",
        "k",
        "moduleList",
        "anchorEl",
        "utils",
        "exports",
        "desc",
        "len",
        "i",
        "index",
        "retVal",
        "i",
        "args",
        "uuidpart",
        "i",
        "uuidchar",
        "F"
    ],
    "comments": [
        "Platform: ios",
        "49a8db57fa070d20ea7b304a53ffec3d7250c5af",
        "Licensed to the Apache Software Foundation (ASF) under one\n or more contributor license agreements.  See the NOTICE file\n distributed with this work for additional information\n regarding copyright ownership.  The ASF licenses this file\n to you under the Apache License, Version 2.0 (the\n \"License\"); you may not use this file except in compliance\n with the License.  You may obtain a copy of the License at\n \n     http://www.apache.org/licenses/LICENSE-2.0\n \n Unless required by applicable law or agreed to in writing,\n software distributed under the License is distributed on an\n \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n KIND, either express or implied.  See the License for the\n specific language governing permissions and limitations\n under the License.",
        "file: src/scripts/require.js",
        "jshint -W079",
        "jshint -W020",
        "Stack of moduleIds currently being built.",
        "Map of module ID -> index into requireStack of modules currently being built.",
        "Its a relative path, so lop off the last portion and add the id (minus \"./\")",
        "Export for use in node",
        "file: src/cordova.js",
        "Workaround for Windows 10 in hosted environment case",
        "http://www.w3.org/html/wg/drafts/html/master/browsers.html#named-access-on-the-window-object",
        "If unsubscribing from an event that is handled by a plugin",
        "If unsubscribing from an event that is handled by a plugin",
        "Fire deviceready on listeners that were registered before cordova.js was loaded.",
        "Randomize the starting callbackId to avoid collisions after refreshing or navigating.",
        "This way, it's very unlikely that any new callback would get the same callbackId as an old callback.",
        "TODO: Deprecate callbackSuccess and callbackError in favour of callbackFromNative.",
        "Derive success from status.",
        "else\n                    Note, this case is intentionally not caught.\n                    this can happen if isSuccess is true, but callbackStatus is NO_RESULT\n                    which is used to remove a callback from the list without calling the callbacks\n                    typically keepCallback is false in this case",
        "Clear callback if not expecting any more results",
        "file: src/common/argscheck.js",
        "Asterix means allow anything.",
        "Don't log when running unit tests.",
        "file: src/common/base64.js",
        "------------------------------------------------------------------------------",
        "This code is based on the performance tests at http://jsperf.com/b64tests\n * This 12-bit-at-a-time algorithm was the best performing version on all\n * platforms tested.",
        "file: src/common/builder.js",
        "Getters can only be overridden by getters.",
        "Clobber if it doesn't exist.",
        "If merging, merge properties onto parent, otherwise, clobber.",
        "Overwrite if not currently defined.",
        "Set result to what already exists, so we can build children into it if they exist.",
        "If the target object is a constructor override off prototype.",
        "file: src/common/channel.js",
        "Map of guid -> function.",
        "0 = Non-sticky, 1 = Sticky non-fired, 2 = Sticky fired.",
        "Used in sticky mode to remember args passed to fire().",
        "Used by onHasSubscribersChange to know if there are any listeners.",
        "Function that is called when the first listener is subscribed, or when",
        "the last listener is unsubscribed.",
        "need a function to call",
        "first time any channel has seen this subscriber",
        "Don't add the same handler more than once.",
        "need a function to unsubscribe",
        "Apply stickiness.",
        "Copy the values first so that it is safe to modify it from within",
        "callbacks.",
        "defining them here so they are ready super fast!",
        "DOM event that is received when the web page is loaded and parsed.",
        "Event to indicate the Cordova native side is ready.",
        "Event to indicate that all Cordova JavaScript objects have been created",
        "and it's time to run plugin constructors.",
        "Event to indicate that all automatically loaded JS plugins are loaded and ready.",
        "FIXME remove this",
        "Event to indicate that Cordova is ready",
        "Event to indicate a resume lifecycle event",
        "Event to indicate a pause lifecycle event",
        "Channels that must fire before \"deviceready\" is fired.",
        "file: e:/cordova/cordova-ios/cordova-js-src/exec.js",
        "XHR mode does not work on iOS 4.2.",
        "XHR mode's main advantage is working around a bug in -webkit-scroll, which",
        "doesn't exist only on iOS 5.x devices.",
        "IFRAME_NAV is the fastest.",
        "IFRAME_HASH could be made to enable synchronous bridge calls if we wanted this feature.",
        "Default. Uses a new iframe for each poke.",
        "XHR bridge appears to be flaky sometimes: CB-3900, CB-3359, CB-5457, CB-4970, CB-4998, CB-5134",
        "About the same speed as IFRAME_NAV. Performance not about the same as IFRAME_NAV, but more variable.",
        "Flakey, and not as performant",
        "Flakey, and not as performant",
        "Not fully baked. A bit faster than IFRAME_NAV, but risks jank since poke happens synchronously.",
        "Slower than no payload. Maybe since it has to be URI encoded / decoded.",
        "Only way that works for WKWebView :)",
        "Contains pending JS->Native messages.",
        "The value here was determined using the benchmark within CordovaLibApp on an iPad 3.",
        "FORMAT ONE",
        "Since we need to maintain backwards compatibility, we have to pass",
        "an invalid callbackId even if no callback was provided since plugins",
        "will be expecting it. The Cordova.exec() implementation allocates",
        "an invalid callbackId and passes it even if no callbacks were given.",
        "FORMAT TWO, REMOVED",
        "If actionArgs is not provided, default to an empty array",
        "Register the callbacks and add the callbackId to the positional",
        "arguments if given.",
        "Stringify and queue the command. We stringify to command now to",
        "effectively clone the command arguments in case they are mutated before",
        "the command is executed.",
        "If we're in the context of a stringByEvaluatingJavaScriptFromString call,",
        "then the queue will be flushed when it returns; no need for a poke.",
        "Also, if there is already a command in the queue, then we've already",
        "poked the native side, so there is no reason to do so again.",
        "iframe-based.",
        "This prevents sending an XHR when there is already one being sent.",
        "This should happen only in rare circumstances (refer to unit tests).",
        "Re-using the XHR improves exec() performance by about 10%.",
        "Changing this to a GET will make the XHR reach the URIProtocol on 4.2.",
        "For some reason it still doesn't work though...",
        "Add a timestamp to the query param to prevent caching.",
        "CB-5488 - Don't attempt to create iframe before document.body is available.",
        "TODO: This bridge mode doesn't properly support being removed from the DOM (CB-7735)",
        "Hash changes don't work on about:blank, so switch it to file:///.",
        "The delegate method is called only when the hash changes, so toggle it back and forth.",
        "Check if they've removed it from the DOM, and put it back if so.",
        "Use a timer to protect against iframe being unloaded during the poke (CB-7735).",
        "This makes the bridge ~ 7% slower, but works around the poke getting lost",
        "when the iframe is removed from the DOM.",
        "An onunload listener could be used in the case where the iframe has just been",
        "created, but since unload events fire only once, it doesn't work in the normal",
        "case of iframe reuse (where unload will have already fired due to the attempted",
        "navigation of the page).",
        "Making this > 0 improves performance (marginally) in the normal case (where it doesn't fire).",
        "Remove the iFrame since it may be no longer required, and its existence",
        "can trigger browser bugs.",
        "https://issues.apache.org/jira/browse/CB-593",
        "Stop listing for window detatch once native side confirms poke.",
        "Each entry in commandQueue is a JSON string already.",
        "This shouldn't be nested, but better to be safe.",
        "file: src/common/exec/proxy.js",
        "internal map of proxy function",
        "example: cordova.commandProxy.add(\"Accelerometer\",{getCurrentAcceleration: function(successCallback, errorCallback, options) {...},...);",
        "cordova.commandProxy.remove(\"Accelerometer\");",
        "file: src/common/init.js",
        "Replace navigator before any modules are required(), to ensure it happens as soon as possible.",
        "We replace it so that properties that can't be clobbered can instead be overridden.",
        "This work-around really only applies to new APIs that are newer than Function.bind.",
        "Without it, APIs such as getGamepads() break.",
        "Register pause, resume and deviceready channels as events on document.",
        "Listen for DOMContentLoaded and notify our channel subscribers.",
        "_nativeReady is global variable that the native side can set",
        "to signify that the native code is ready. It is a global since",
        "it may be called before any cordova JS is ready.",
        "Call the platform-specific initialization.",
        "Wrap in a setTimeout to support the use-case of having plugin JS appended to cordova.js.",
        "The delay allows the attached modules to be defined before the plugin loader looks for them.",
        "Fire event to notify that all objects are created",
        "Fire onDeviceReady event once page has fully loaded, all",
        "constructors have run and cordova info has been received from native",
        "side.",
        "file: src/common/init_b.js",
        "setting exec",
        "Replace navigator before any modules are required(), to ensure it happens as soon as possible.",
        "We replace it so that properties that can't be clobbered can instead be overridden.",
        "This work-around really only applies to new APIs that are newer than Function.bind.",
        "Without it, APIs such as getGamepads() break.",
        "Register pause, resume and deviceready channels as events on document.",
        "Listen for DOMContentLoaded and notify our channel subscribers.",
        "_nativeReady is global variable that the native side can set",
        "to signify that the native code is ready. It is a global since",
        "it may be called before any cordova JS is ready.",
        "Call the platform-specific initialization.",
        "Wrap in a setTimeout to support the use-case of having plugin JS appended to cordova.js.",
        "The delay allows the attached modules to be defined before the plugin loader looks for them.",
        "Fire event to notify that all objects are created",
        "Fire onDeviceReady event once page has fully loaded, all",
        "constructors have run and cordova info has been received from native",
        "side.",
        "file: src/common/modulemapper.js",
        "Note: Android 2.3 does have Function.bind().",
        "<runs/>",
        "file: src/common/modulemapper_b.js",
        "Note: Android 2.3 does have Function.bind().",
        "<runs/>",
        "file: e:/cordova/cordova-ios/cordova-js-src/platform.js",
        "file: src/common/pluginloader.js",
        "Helper function to inject a <script> tag.",
        "Exported for testing.",
        "onload fires even when script fails loads with an error.",
        "onerror fires for malformed URLs.",
        "Loop through all the plugins and then through their clobbers and merges.",
        "Finally, if runs is truthy we want to simply require() the module.",
        "Handler for the cordova_plugins.js content.",
        "See plugman's plugin_loader.js for the details of this object.",
        "This function is only called if the really is a plugins array that isn't empty.",
        "Otherwise the onerror response handler will just call finishPluginLoading().",
        "Now inject the scripts.",
        "Strip any query param (CB-6007).",
        "Tries to load all plugins' js-modules.",
        "This is an async process, but onDeviceReady is blocked on onPluginsReady.",
        "onPluginsReady is fired when there are no plugins to load, or they are all done.",
        "file: src/common/pluginloader_b.js",
        "Handler for the cordova_plugins.js content.",
        "See plugman's plugin_loader.js for the details of this object.",
        "if moduleList is not defined or empty, we've nothing to do",
        "Loop through all the modules and then through their clobbers and merges.",
        "Finally, if runs is truthy we want to simply require() the module.",
        "Loads all plugins' js-modules. Plugin loading is syncronous in browserified bundle",
        "but the method accepts callback to be compatible with non-browserify flow.",
        "onDeviceReady is blocked on onPluginsReady. onPluginsReady is fired when there are",
        "no plugins to load, or they are all done.",
        "file: src/common/urlutil.js",
        "file: src/common/utils.js",
        "------------------------------------------------------------------------------",
        "proxy used to establish prototype chain",
        "extend Child from Parent",
        "file: src/scripts/bootstrap.js"
    ],
    "docstrings": [
        "* Intercept calls to addEventListener + removeEventListener and handle deviceready,\n * resume, and pause events.",
        "* Houses custom event handlers to intercept on document + window event listeners.",
        "* Methods to add/remove your own addEventListener hijacking on document + window.",
        "* Retrieve original event handlers that were replaced by Cordova\n     *\n     * @return object",
        "* Method to fire event from native code\n     * bNoDetach is required for events which cause an exception which needs to be caught in native code",
        "* Plugin callback mechanism.",
        "* Called by native code when returning successful result from an action.",
        "* Called by native code when returning error result from an action.",
        "* Called by native code when returning the result from an action.",
        "* Merge properties from one object onto another recursively.  Properties from\n * the src object will overwrite existing target property.\n *\n * @param target Object to merge properties into.\n * @param src Object to merge properties from.",
        "* Custom pub-sub \"channel\" that can have functions subscribed to it\n * This object is used to define and control firing of events for\n * cordova initialization, as well as for custom events thereafter.\n *\n * The order of events during page load and Cordova startup is as follows:\n *\n * onDOMContentLoaded*         Internal event that is received when the web page is loaded and parsed.\n * onNativeReady*              Internal event that indicates the Cordova native side is ready.\n * onCordovaReady*             Internal event fired when all Cordova JavaScript objects have been created.\n * onDeviceReady*              User event fired to indicate that Cordova is ready\n * onResume                    User event fired to indicate a start/resume lifecycle event\n * onPause                     User event fired to indicate a pause lifecycle event\n *\n * The events marked with an * are sticky. Once they have fired, they will stay in the fired state.\n * All listeners that subscribe after the event is fired will be executed right away.\n *\n * The only Cordova events that user code should register for are:\n *      deviceready           Cordova native code is initialized and Cordova APIs can be called from JavaScript\n *      pause                 App has moved to background\n *      resume                App has returned to foreground\n *\n * Listeners can be registered as:\n *      document.addEventListener(\"deviceready\", myDeviceReadyListener, false);\n *      document.addEventListener(\"resume\", myResumeListener, false);\n *      document.addEventListener(\"pause\", myPauseListener, false);\n *\n * The DOM lifecycle events should be used for saving and restoring state\n *      window.onload\n *      window.onunload\n *",
        "* Channel\n * @constructor\n * @param type  String the channel name",
        "* Calls the provided function only after all of the channels specified\n         * have been fired. All channels must be sticky channels.",
        "* cordova Channels that must fire before \"deviceready\" is fired.",
        "* Indicate that a feature needs to be initialized before it is ready to be used.\n         * This holds up Cordova's \"deviceready\" event until the feature has been initialized\n         * and Cordova.initComplete(feature) is called.\n         *\n         * @param feature {String}     The unique feature name",
        "* Indicate that initialization code has completed and the feature is ready to be used.\n         *\n         * @param feature {String}     The unique feature name",
        "* Subscribes the given function to the channel. Any time that\n * Channel.fire is called so too will the function.\n * Optionally specify an execution context for the function\n * and a guid that can be used to stop subscribing to the channel.\n * Returns the guid.",
        "* Unsubscribes the function with the given guid from the channel.",
        "* Calls all functions subscribed to this channel.",
        "* Creates a gap bridge iframe used to notify the native code about queued\n * commands.",
        "* Create all cordova objects once native side is ready.",
        "* Create all cordova objects once native side is ready.",
        "* For already absolute URLs, returns what is passed in.\n * For relative URLs, converts them to absolute ones.",
        "* Defines a property getter / setter for obj[key].",
        "* Defines a property getter for obj[key].",
        "* Returns whether the item was found in the array.",
        "* Returns an indication of whether the argument is an array or not",
        "* Returns an indication of whether the argument is a Date or not",
        "* Does a deep clone of the object.",
        "* Returns a wrapped version of the function",
        "* Create a UUID",
        "* Extends a child object from a parent object using classical inheritance\n * pattern.",
        "* Alerts a message in any available way: alert or console.log."
    ],
    "functions": [
        "build",
        "createEvent",
        "extractParamName",
        "checkArgs",
        "getValue",
        "uint8ToBase64",
        "each",
        "clobber",
        "assignOrWrapInDeprecateGetter",
        "include",
        "recursiveMerge",
        "forceFunction",
        "shouldBundleCommandJson",
        "massageArgsJsToNative",
        "massageMessageNativeToJs",
        "convertMessageToArgsNativeToJs",
        "iOSExec",
        "pokeNative",
        "pokeNativeViaXhr",
        "pokeNativeViaIframe",
        "logUnfiredChannels",
        "replaceNavigator",
        "logUnfiredChannels",
        "replaceNavigator",
        "addEntry",
        "prepareNamespace",
        "addEntry",
        "prepareNamespace",
        "injectIfNecessary",
        "onScriptLoadingComplete",
        "handlePluginsObject",
        "scriptLoadedCallback",
        "findCordovaPath",
        "handlePluginsObject",
        "UUIDcreatePart"
    ],
    "classes": []
}