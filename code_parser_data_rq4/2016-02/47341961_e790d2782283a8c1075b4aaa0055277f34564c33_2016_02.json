{
    "identifiers": [
        "vscode",
        "child_process",
        "fs",
        "path",
        "vscode",
        "context",
        "vscode",
        "_coreClrDebugDir",
        "path",
        "context",
        "_debugAdapterDir",
        "path",
        "_coreClrDebugDir",
        "_channel",
        "vscode",
        "existsSync",
        "_debugAdapterDir",
        "_channel",
        "_channel",
        "vscode",
        "spawnChildProcess",
        "_channel",
        "_coreClrDebugDir",
        "spawnChildProcess",
        "_debugAdapterDir",
        "_channel",
        "_coreClrDebugDir",
        "promises",
        "renameDummyEntrypoint",
        "promises",
        "promises",
        "copyFiles",
        "context",
        "promises",
        "removeLibCoreClrTraceProvider",
        "promises",
        "_channel",
        "error",
        "_channel",
        "error",
        "path",
        "_debugAdapterDir",
        "path",
        "_debugAdapterDir",
        "src",
        "getPlatformExeExtension",
        "dest",
        "getPlatformExeExtension",
        "resolve",
        "reject",
        "fs",
        "src",
        "dest",
        "err",
        "err",
        "reject",
        "err",
        "resolve",
        "promise",
        "context",
        "vscode",
        "fs",
        "path",
        "_coreClrDebugDir",
        "projectJson",
        "clrdbgId",
        "projectJson",
        "MIEngineId",
        "getPackagesRoot",
        "path",
        "packagesRoot",
        "clrdbgId",
        "clrdbgVersion",
        "path",
        "packagesRoot",
        "MIEngineId",
        "MIEngineVersion",
        "src",
        "dest",
        "promises",
        "copy",
        "path",
        "clrdbgRoot",
        "src",
        "dest",
        "src",
        "dest",
        "promises",
        "copy",
        "path",
        "MIEngineRoot",
        "src",
        "dest",
        "copyClrdbg",
        "path",
        "copyClrdbg",
        "path",
        "copyClrdbg",
        "path",
        "copyClrdbg",
        "copyClrdbg",
        "copyClrdbg",
        "copyClrdbg",
        "copyClrdbg",
        "copyClrdbg",
        "copyMIEngine",
        "promises",
        "path",
        "_debugAdapterDir",
        "getPlatformLibExtension",
        "existsSync",
        "filePath",
        "resolve",
        "reject",
        "fs",
        "filePath",
        "err",
        "err",
        "reject",
        "err",
        "_channel",
        "filePath",
        "resolve",
        "src",
        "dest",
        "dest",
        "destination",
        "path",
        "destination",
        "dest",
        "resolve",
        "reject",
        "existsSync",
        "destination",
        "fs",
        "destination",
        "path",
        "destination",
        "path",
        "src",
        "fs",
        "src",
        "sourceStream",
        "reject",
        "fs",
        "destFile",
        "destStream",
        "reject",
        "destStream",
        "_channel",
        "src",
        "destination",
        "resolve",
        "sourceStream",
        "destStream",
        "dirPath",
        "existsSync",
        "dirPath",
        "fs",
        "dirPath",
        "file",
        "index",
        "path",
        "dirPath",
        "file",
        "fs",
        "currentPath",
        "deleteDirectoryRecursivelySync",
        "currentPath",
        "fs",
        "currentPath",
        "fs",
        "dirPath",
        "path",
        "fs",
        "path",
        "fs",
        "err",
        "err",
        "err",
        "getHomeDir",
        "path",
        "homedir",
        "process",
        "process",
        "process",
        "process",
        "process",
        "process",
        "process",
        "process",
        "args",
        "channel",
        "vscode",
        "workingDirectory",
        "resolve",
        "reject",
        "child_process",
        "process",
        "args",
        "workingDirectory",
        "child",
        "data",
        "channel",
        "data",
        "child",
        "data",
        "channel",
        "data",
        "child",
        "code",
        "code",
        "channel",
        "process",
        "code",
        "reject",
        "code",
        "resolve",
        "promise"
    ],
    "literals": [
        "'use strict'",
        "'vscode'",
        "'child_process'",
        "'fs'",
        "'path'",
        "string",
        "string",
        "'coreclr-debug'",
        "'debugAdapters'",
        "'coreclr-debug'",
        "'.NET Core Debugger tools already installed'",
        "\"Downloading and configuring the .NET Core Debugger...\"",
        "'dotnet'",
        "'restore'",
        "'dotnet'",
        "'publish'",
        "'-o'",
        "'Succesfully installed .NET Core Debugger.'",
        "'Error while installing .NET Core Debugger.'",
        "'dummy'",
        "'OpenDebugAD7'",
        "'project.json'",
        "'Microsoft.VisualStudio.clrdbg'",
        "string",
        "'Microsoft.VisualStudio.clrdbg.MIEngine'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'1033'",
        "'clrdbg.resources.dll'",
        "'1033'",
        "'1033'",
        "'vsdebugeng.impl.resources.dll'",
        "'1033'",
        "'1033'",
        "'VSDebugUI.dll'",
        "'1033'",
        "'libclrdbg.vsdconfig'",
        "'Microsoft.CodeAnalysis.CSharp.ExpressionEvaluator.ExpressionCompiler.vsdconfig'",
        "'Microsoft.CodeAnalysis.CSharp.ExpressionEvaluator.ResultProvider.vsdconfig'",
        "'version.txt'",
        "'vsdebugeng.impl.vsdconfig'",
        "'vsdebugeng.manimpl.vsdconfig'",
        "'coreclr.ad7Engine.json'",
        "'libcoreclrtraceptprovider'",
        "'Succesfully deleted '",
        "string",
        "string",
        "'error'",
        "'error'",
        "'finish'",
        "'Succesfully copied '",
        "' to '",
        "string",
        "string",
        "'ENOENT'",
        "string",
        "'.nuget'",
        "'packages'",
        "string",
        "\"win32\"",
        "'USERPROFILE'",
        "\"darwin\"",
        "\"linux\"",
        "'HOME'",
        "'Unsupported platform: '",
        "string",
        "'win32'",
        "'.exe'",
        "''",
        "string",
        "'win32'",
        "'.dll'",
        "'darwin'",
        "'.dylib'",
        "'linux'",
        "'.so'",
        "'Unsupported platform '",
        "string",
        "string",
        "string",
        "'data'",
        "${data}",
        "'data'",
        "Error: ${data}",
        "'close'",
        "${process} exited with error code ${code}"
    ],
    "variables": [
        "_coreClrDebugDir",
        "_debugAdapterDir",
        "_channel",
        "promises",
        "src",
        "dest",
        "promise",
        "projectJson",
        "clrdbgId",
        "clrdbgVersion",
        "MIEngineId",
        "MIEngineVersion",
        "destRoot",
        "_debugAdapterDir",
        "packagesRoot",
        "clrdbgRoot",
        "MIEngineRoot",
        "promises",
        "filePath",
        "destination",
        "_debugAdapterDir",
        "destFile",
        "sourceStream",
        "destStream",
        "currentPath",
        "homedir",
        "promise",
        "child"
    ],
    "comments": [
        "TODO: This method and all invocations can be removed once",
        "the dotnet cli tools support nuget packages with",
        "contentFiles metadata",
        "https://docs.nuget.org/create/nuspec-reference#contentfiles-with-visual-studio-2015-update-1-and-later",
        "TODO: not currently used but may need to be used for updating.",
        "TODO: wrap this in try catch for i/o errors"
    ],
    "docstrings": [],
    "functions": [
        "installCoreClrDebug",
        "renameDummyEntrypoint",
        "copyFiles",
        "copyClrdbg",
        "copyMIEngine",
        "removeLibCoreClrTraceProvider",
        "copy",
        "deleteDirectoryRecursivelySync",
        "existsSync",
        "getPackagesRoot",
        "getHomeDir",
        "getPlatformExeExtension",
        "getPlatformLibExtension",
        "spawnChildProcess"
    ],
    "classes": []
}