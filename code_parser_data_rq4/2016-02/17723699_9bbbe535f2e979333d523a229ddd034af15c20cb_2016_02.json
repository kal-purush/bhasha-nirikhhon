{
    "identifiers": [
        "Microsoft",
        "AspNetCore",
        "Http",
        "Authentication",
        "Microsoft",
        "IdentityModel",
        "Clients",
        "ActiveDirectory",
        "OpenIdConnect",
        "AzureAdSample",
        "TokenCache",
        "AuthenticationProperties",
        "authProperties",
        "_authProperties",
        "authProperties",
        "BeforeAccess",
        "BeforeAccessNotification",
        "AfterAccess",
        "AfterAccessNotification",
        "BeforeWrite",
        "BeforeWriteNotification",
        "authProperties",
        "Items",
        "TryGetValue",
        "TokenCacheKey",
        "cachedTokensText",
        "Convert",
        "FromBase64String",
        "cachedTokensText",
        "Deserialize",
        "cachedTokens",
        "TokenCacheNotificationArgs",
        "args",
        "TokenCacheNotificationArgs",
        "args",
        "HasStateChanged",
        "HasCacheChanged",
        "Serialize",
        "Convert",
        "ToBase64String",
        "cachedTokens",
        "_authProperties",
        "Items",
        "TokenCacheKey",
        "cachedTokensText",
        "TokenCacheNotificationArgs",
        "args"
    ],
    "literals": [
        "\".TokenCache\""
    ],
    "variables": [
        "TokenCacheKey",
        "AuthenticationProperties",
        "_authProperties",
        "HasCacheChanged",
        "cachedTokensText",
        "cachedTokens",
        "cachedTokens",
        "cachedTokensText"
    ],
    "comments": [
        "Notification raised before ADAL accesses the cache.",
        "This is your chance to update the in-memory copy from the DB, if the in-memory version is stale",
        "Notification raised after ADAL accessed the cache.",
        "If the HasStateChanged flag is set, ADAL changed the content of the cache",
        "if state changed",
        "if you want to ensure that no concurrent write take place, use this notification to place a lock on the entry"
    ],
    "docstrings": [],
    "functions": [
        "AuthPropertiesTokenCache",
        "BeforeAccessNotification",
        "AfterAccessNotification",
        "BeforeWriteNotification"
    ],
    "classes": [
        "AuthPropertiesTokenCache"
    ]
}