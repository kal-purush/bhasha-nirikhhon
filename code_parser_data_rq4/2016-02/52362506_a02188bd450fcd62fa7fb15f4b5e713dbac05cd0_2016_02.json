{
    "identifiers": [
        "fs",
        "path",
        "format",
        "inspect",
        "_",
        "sensorLib",
        "fsp",
        "processp",
        "Sensor",
        "Config",
        "processConfig",
        "LoggerInstance",
        "createLogger",
        "logErrorAndExit",
        "getIsoDate",
        "path",
        "__dirname",
        "baseDir",
        "sensorName",
        "sensorName",
        "sensorName",
        "sensor",
        "sensorLib",
        "process",
        "readout",
        "logger",
        "sensor",
        "sensor",
        "sensor",
        "readout",
        "onNewSensorReadout",
        "sensor",
        "readout",
        "readout",
        "process",
        "hrstart",
        "hrend",
        "hrend",
        "setTimeout",
        "readSensors",
        "durationBetweenSamples",
        "msDuration",
        "sensor",
        "sensorName",
        "temperatureC",
        "humidityRel",
        "temperatureC",
        "humidityRel",
        "sensorToVal",
        "sensorName",
        "temperatureC",
        "humidityRel",
        "fsp",
        "sensorToLatestFd",
        "sensorName",
        "fsp",
        "sensorToLatestFd",
        "sensorName",
        "writeSensorVal",
        "sensorToLatestFd",
        "sensorName",
        "temperatureC",
        "now",
        "writeSensorVal",
        "sensorToLatestFd",
        "sensorName",
        "humidityRel",
        "now",
        "sensor",
        "config",
        "writeSensorVal",
        "sensorToValuesFd",
        "sensor",
        "sensorToVal",
        "sensor",
        "now",
        "writeSensorVal",
        "sensorToValuesFd",
        "sensor",
        "sensorToVal",
        "sensor",
        "now",
        "fd",
        "sensorVal",
        "date",
        "addNewLine",
        "getIsoDate",
        "date",
        "sensorVal",
        "dateWithPadding",
        "totalRowLen",
        "sensorValStr",
        "sensorValStr",
        "addNewLine",
        "fsp",
        "fd",
        "row",
        "filePath",
        "header",
        "filePath",
        "fsp",
        "filePath",
        "fsp",
        "fd",
        "fstat",
        "fsp",
        "fd",
        "header",
        "fd",
        "sensor",
        "config",
        "path",
        "baseDir",
        "sensor",
        "sensor",
        "dir",
        "fsp",
        "dir",
        "openFilesEnsureHeaderHelper",
        "sensor",
        "openFilesEnsureHeaderHelper",
        "sensor",
        "sensorToValuesFd",
        "sensor",
        "fdTemperature",
        "fdHumidity",
        "fsp",
        "sensor",
        "fsp",
        "sensor",
        "sensorToLatestFd",
        "sensor",
        "fdTemperatureLatest",
        "fdHumidityLatest",
        "config",
        "processConfig",
        "baseDir",
        "configName",
        "logger",
        "createLogger",
        "config",
        "logger",
        "openFilesEnsureHeader",
        "sensorLib",
        "config",
        "config",
        "isInitialized",
        "logErrorAndExit",
        "logger",
        "sensor",
        "config",
        "readSensors",
        "sensor",
        "setInterval",
        "onTwoMinuteIntervall",
        "main",
        "err",
        "logErrorAndExit",
        "logger",
        "err"
    ],
    "literals": [
        "\"use strict\"",
        "\"fs\"",
        "\"path\"",
        "\"util\"",
        "\"lodash\"",
        "\"node-dht-sensor\"",
        "\"./global-extensions\"",
        "\"./fs-promises\"",
        "\"./process-promises\"",
        "\"./config-helper\"",
        "\"./log-helper\"",
        "\"./isodate-helper\"",
        "\"..\"",
        "\"basedir: \"",
        "\"sensorconfig.json\"",
        "string",
        "string",
        "string",
        "Error reading sensor with name '${sensor.name}', type '${sensor.type}' on pin '${sensor.pin}'. Error count '${readout.errors}'.",
        "string",
        "\"onNewSensorReadout \"",
        "\" \"",
        "\"onTwoMinuteIntervall\"",
        "\",      \"",
        "\"\\n\"",
        "\"\"",
        "string",
        "string",
        "Opening or creating file '${filePath}' and writing header if it contains zero bytes.",
        "\"a\"",
        "Creating directory for sensor data files if not existing '${dir}'.",
        "\"Iso Date,Temperature in Celsius\\n\"",
        "\"Iso Date,Humidity in %\\n\"",
        "\"w\"",
        "\"w\"",
        "\"Script started. Writing all log messages to the logfilePath specified in 'sensorconfig.json'.\"",
        "\"Config parsed, logger initialized.\"",
        "\"Failed to call 'initialize' on the 'node-dht-sensor' library. \"",
        "\"'initialize' in turn initializes the native 'BCM2835' library. Check the github page of 'node-dht-sensor' for help.\""
    ],
    "variables": [
        "baseDir",
        "configName",
        "config",
        "logger",
        "sensorToValuesFd",
        "sensorToLatestFd",
        "sensorToVal",
        "readout",
        "hrstart",
        "hrend",
        "msDuration",
        "durationBetweenSamples",
        "now",
        "now",
        "totalRowLen",
        "dateWithPadding",
        "sensorValStr",
        "row",
        "fd",
        "fstat",
        "dir",
        "fdTemperature",
        "fdHumidity",
        "fdTemperatureLatest",
        "fdHumidityLatest",
        "isInitialized"
    ],
    "comments": [
        "<reference path=\"../typings/lib.es6.d.ts\" />",
        "<reference path=\"../typings/node/node.d.ts\" />",
        "<reference path=\"../typings/lodash/lodash.d.ts\" />",
        "<reference path=\"../typings/node-dht-sensor/node-dht-sensor.d.ts\" />",
        "The node-dht-sensor module reads gpio pins of the BCM2835 chip of the Raspberry Pi.",
        "The line will load the native node_dht_sensor.node module, which only succees on the Raspberry Pi.",
        "This file is located in the lib subdirectory when executed, so baseDir is one level up.",
        "Lookup with the sensorName as key and the file descriptors for the 2 minutes historical values as value.",
        "Lookup with the sensorName as key and the file descriptors for the 2 seconds historical values as value.",
        "Lookup with the sensorName as key and the latest sensor value as value.",
        "function is called recursively after the 2 second timeout.",
        "do not wait until data is written.",
        "hrend[0] contains passed seconds, hrend[1] contains passed nanoseconds",
        "collecting period (or sampling period) is 2000 ms for DHT22 and 1000 ms for DHT11. Here set to 2000 because node-dht-sensor lib returns previous measurement if called earlier.",
        "substract time since last read from durationBetweenSamples.",
        "could subtract further 520 ms based on the two bcm2835_delay(xx) statements in readDHT function in node-dht-sensor.cpp",
        "function is called when a new sensor value was read. This is about every 2 seconds.",
        "Length of a data line in the output file excluding \\n character.",
        "Ensures the baseDir directory exists, opens the temperatureValues files and writes a header if the file is empty.",
        "Call node-dht-sensor Lib, which will initialize the native BCM2835 library.",
        "A failure here has nothing to do with the sensor but likely with the installation of the BCM2835 library."
    ],
    "docstrings": [],
    "functions": [
        "readSensors",
        "onNewSensorReadout",
        "onTwoMinuteIntervall",
        "writeSensorVal",
        "openFilesEnsureHeader",
        "openFilesEnsureHeaderHelper",
        "main"
    ],
    "classes": []
}