{
    "identifiers": [
        "setuptools",
        "setup",
        "find_packages",
        "codecs",
        "open",
        "os",
        "path",
        "listdir",
        "open",
        "path",
        "join",
        "path",
        "dirname",
        "path",
        "abspath",
        "version_file",
        "version_file",
        "read",
        "strip",
        "path",
        "abspath",
        "path",
        "dirname",
        "open",
        "path",
        "join",
        "here",
        "encoding",
        "f",
        "f",
        "read",
        "setup",
        "name",
        "version",
        "version",
        "description",
        "long_description",
        "long_description",
        "url",
        "author",
        "author_email",
        "license",
        "classifiers",
        "keywords",
        "packages",
        "find_packages",
        "exclude",
        "install_requires"
    ],
    "literals": [
        "'unknown'",
        "'VERSION'",
        "'README.md'",
        "'utf-8'",
        "'pip_analogj_test'",
        "'test package'",
        "'https://github.com/AnalogJ/pip_analogj_test'",
        "'Jason Kulatunga'",
        "'jason@thesparktree.com'",
        "'MIT'",
        "'Development Status :: 5 - Production/Stable'",
        "'pip_analogj_test'",
        "'contrib'",
        "'docs'",
        "'tests'",
        "'pip_analogj_test'"
    ],
    "variables": [
        "version",
        "version",
        "here",
        "long_description"
    ],
    "comments": [
        "Always prefer setuptools over distutils",
        "To use a consistent encoding",
        "Get the long description from the README file",
        "Versions should comply with PEP440.  For a discussion on single-sourcing",
        "the version across setup.py and the project code, see",
        "https://packaging.python.org/en/latest/single_source_version.html",
        "The project's main homepage.",
        "Author details",
        "Choose your license",
        "See https://pypi.python.org/pypi?%3Aaction=list_classifiers",
        "How mature is this project? Common values are",
        "3 - Alpha",
        "4 - Beta",
        "5 - Production/Stable",
        "What does your project relate to?",
        "You can just specify the packages manually here if your project is",
        "simple. Or you can use find_packages().",
        "Alternatively, if you want to distribute just a my_module.py, uncomment",
        "this:",
        "py_modules=[\"my_module\"],",
        "List run-time dependencies here.  These will be installed by pip when",
        "your project is installed. For an analysis of \"install_requires\" vs pip's",
        "requirements files see:",
        "https://packaging.python.org/en/latest/requirements.html",
        "Although 'package_data' is the preferred approach, in some case you may",
        "need to place data files outside of your packages. See:",
        "http://docs.python.org/3.4/distutils/setupscript.html#installing-additional-files # noqa",
        "In this case, 'data_file' will be installed into '<sys.prefix>/my_data'",
        "data_files=[('my_data', ['data/data_file'])],",
        "To provide executable scripts, use entry points in preference to the",
        "\"scripts\" keyword. Entry points provide cross-platform support and allow",
        "pip to create the appropriate form of executable for the target platform."
    ],
    "docstrings": [
        "\"\"\"A setuptools based setup module.\n\nSee:\nhttps://packaging.python.org/en/latest/distributing.html\nhttps://github.com/pypa/sampleproject\n\"\"\""
    ],
    "functions": [],
    "classes": []
}