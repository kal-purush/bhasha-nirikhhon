{
    "identifiers": [
        "spockbot",
        "mcdata",
        "constants",
        "windows",
        "spockbot",
        "mcdata",
        "windows",
        "make_slot_check",
        "spockbot",
        "plugins",
        "PluginBase",
        "pl_announce",
        "spockbot",
        "plugins",
        "tools",
        "EVENT_UNREGISTER",
        "spockbot",
        "plugins",
        "tools",
        "inventory_async",
        "InventoryAsync",
        "net_plugin",
        "send_click",
        "net_plugin",
        "send_click",
        "windows",
        "SlotCursor",
        "windows",
        "PlayerWindow",
        "InventoryAsync",
        "wanted",
        "slots",
        "slots",
        "slots",
        "make_slot_check",
        "wanted",
        "sum",
        "slot",
        "amount",
        "slot",
        "slots",
        "wanted",
        "slot",
        "wanted",
        "slots",
        "slot",
        "find_slots",
        "wanted",
        "slots",
        "slot",
        "wanted",
        "slots",
        "slots",
        "inv_slots_preferred",
        "window_slots",
        "make_slot_check",
        "wanted",
        "slot",
        "slots",
        "wanted",
        "slot",
        "slot",
        "slot_or_hotbar_index",
        "hasattr",
        "slot_or_hotbar_index",
        "hotbar_slots",
        "slot_nr",
        "slot_or_hotbar_index",
        "slot_nr",
        "hotbar_start",
        "slot_or_hotbar_index",
        "constants",
        "INV_SLOTS_HOTBAR",
        "slot_or_hotbar_index",
        "active_slot_nr",
        "slot_or_hotbar_index",
        "slot_or_hotbar_index",
        "_net",
        "push_packet",
        "slot_or_hotbar_index",
        "slot",
        "right",
        "isinstance",
        "slot",
        "slots",
        "slot",
        "constants",
        "INV_BUTTON_RIGHT",
        "right",
        "constants",
        "INV_BUTTON_LEFT",
        "send_click",
        "windows",
        "SingleClick",
        "slot",
        "button",
        "slot",
        "drop_stack",
        "slot",
        "cursor_slot",
        "is_empty",
        "active_slot",
        "cursor_slot",
        "isinstance",
        "slot",
        "slots",
        "slot",
        "slot",
        "cursor_slot",
        "click_slot",
        "cursor_slot",
        "drop_stack",
        "send_click",
        "windows",
        "DropClick",
        "slot",
        "drop_stack",
        "_net",
        "push_packet",
        "window_id",
        "slot_nr",
        "slot_dict",
        "slot",
        "_net",
        "push_packet",
        "slot_nr",
        "slot",
        "slot_nr",
        "slot_dict",
        "slot",
        "get_dict",
        "property",
        "hotbar_slots",
        "active_slot_nr",
        "property",
        "active_slot",
        "slots",
        "extend",
        "slot",
        "slot",
        "hotbar_slots",
        "slot",
        "active_slot",
        "slots",
        "extend",
        "inventory_slots",
        "slots",
        "pl_announce",
        "PluginBase",
        "ploader",
        "settings",
        "InventoryPlugin",
        "ploader",
        "settings",
        "InventoryCore",
        "net",
        "send_click",
        "ploader",
        "provides",
        "inventory",
        "reg_event_handler",
        "emit_open_window",
        "_",
        "emit",
        "inventory",
        "EVENT_UNREGISTER",
        "packet",
        "inventory",
        "packet",
        "data",
        "emit",
        "packet",
        "data",
        "packet",
        "windows",
        "inv_types",
        "packet",
        "data",
        "inventory",
        "inv_type",
        "persistent_slots",
        "inventory",
        "slots",
        "packet",
        "data",
        "reg_event_handler",
        "emit_open_window",
        "packet",
        "inventory",
        "inventory",
        "windows",
        "PlayerWindow",
        "persistent_slots",
        "closed_window",
        "slots",
        "inventory",
        "packet",
        "packet",
        "data",
        "set_slot",
        "data",
        "data",
        "data",
        "is_synchronized",
        "data",
        "constants",
        "INV_SLOT_NR_CURSOR",
        "data",
        "constants",
        "INV_WINID_CURSOR",
        "emit",
        "packet",
        "packet",
        "data",
        "slot_nr",
        "slot_data",
        "packet",
        "data",
        "set_slot",
        "window_id",
        "slot_nr",
        "slot_data",
        "window_id",
        "slot_nr",
        "slot_data",
        "inventory",
        "window_id",
        "inv",
        "window_id",
        "window_id",
        "constants",
        "INV_WINID_PLAYER",
        "handle_close_window",
        "window_id",
        "inv",
        "window_id",
        "window_id",
        "constants",
        "INV_WINID_CURSOR",
        "slot_nr",
        "constants",
        "INV_SLOT_NR_CURSOR",
        "windows",
        "SlotCursor",
        "slot_data",
        "window_id",
        "inv",
        "window_id",
        "inv",
        "slots",
        "windows",
        "Slot",
        "inv",
        "slot_nr",
        "slot_data",
        "ValueError",
        "slot_nr",
        "window_id",
        "inv",
        "window_id",
        "emit_set_slot",
        "slot",
        "inventory",
        "slot",
        "window_id",
        "title",
        "len",
        "slots",
        "slot",
        "slots",
        "to_be_emitted",
        "append",
        "slot",
        "slot_nr",
        "slot",
        "amount",
        "slot",
        "item",
        "stack_size",
        "slot",
        "window_id",
        "slot",
        "item",
        "display_name",
        "slot",
        "item",
        "id",
        "emit",
        "to_be_emitted",
        "packet",
        "inventory",
        "packet",
        "data",
        "inv_data",
        "prop_id",
        "properties",
        "packet",
        "data",
        "emit",
        "packet",
        "data",
        "prop_name",
        "prop_id",
        "packet",
        "data",
        "packet",
        "last_click",
        "packet",
        "data",
        "packet",
        "data",
        "_",
        "emit",
        "action_id",
        "accepted",
        "click",
        "EVENT_UNREGISTER",
        "accepted",
        "click",
        "on_success",
        "inventory",
        "emit_set_slot",
        "emit_click_response",
        "packet",
        "new_ident",
        "net",
        "push",
        "packet",
        "reg_event_handler",
        "emit_click_response",
        "click",
        "last_click",
        "inventory",
        "click",
        "get_packet",
        "inv",
        "inv",
        "craft_result_slot",
        "slot_nr",
        "packet",
        "craft_result_slot",
        "AttributeError",
        "action_id",
        "inv",
        "window_id",
        "action_id",
        "click",
        "net",
        "push_packet",
        "packet",
        "action_id"
    ],
    "literals": [
        "'slot_nr'",
        "'Invalid hotbar index %i'",
        "'PLAY>Held Item Change'",
        "'slot'",
        "'PLAY>Close Window'",
        "'window_id'",
        "'PLAY>Creative Inventory Action'",
        "'slot'",
        "'clicked_item'",
        "'Inventory'",
        "'Event'",
        "'Net'",
        "'Timers'",
        "'PLAY<Held Item Change'",
        "'handle_held_item_change'",
        "'PLAY<Set Slot'",
        "'handle_set_slot'",
        "'PLAY<Window Items'",
        "'handle_window_items'",
        "'PLAY<Window Property'",
        "'handle_window_prop'",
        "'PLAY<Confirm Transaction'",
        "'handle_confirm_transaction'",
        "'PLAY<Open Window'",
        "'handle_open_window'",
        "'PLAY<Close Window'",
        "'handle_close_window'",
        "'PLAY>Close Window'",
        "'handle_close_window'",
        "'Inventory'",
        "'inventory_synced'",
        "'inventory_open_window'",
        "'window'",
        "'slot'",
        "'inventory_held_item_change'",
        "'inv_type'",
        "'inventory_synced'",
        "'window_id'",
        "'slot'",
        "'slot_data'",
        "'slot'",
        "'window_id'",
        "'inventory_synced'",
        "'window_id'",
        "'slots'",
        "'Unexpected slot_nr (%i) or window ID (%i instead of %i)'",
        "'window_id'",
        "'window_title'",
        "'slot_count'",
        "'slots'",
        "'slots'",
        "'slot_nr'",
        "'amount'",
        "'item_stack_size'",
        "'window'",
        "'item_name'",
        "'item_id'",
        "'ros_client_inventory_update_window'",
        "'property'",
        "'properties'",
        "'value'",
        "'inventory_win_prop'",
        "'window_id'",
        "'window_id'",
        "'property_name'",
        "'property_id'",
        "'value'",
        "'value'",
        "'action'",
        "'accepted'",
        "'inventory_click_response'",
        "'action_id'",
        "'accepted'",
        "'click'",
        "'PLAY>Confirm Transaction'",
        "'inventory_synced'",
        "'slot'",
        "'clicked_item'",
        "'id'",
        "'window_id'",
        "'action'",
        "'PLAY>Click Window'"
    ],
    "variables": [
        "_net",
        "send_click",
        "active_slot_nr",
        "cursor_slot",
        "async",
        "slots",
        "wanted",
        "slots",
        "wanted",
        "hotbar_start",
        "slot_or_hotbar_index",
        "active_slot_nr",
        "slot",
        "button",
        "slot",
        "slot",
        "slot",
        "slots",
        "requires",
        "events",
        "inventory",
        "action_id",
        "last_click",
        "is_synchronized",
        "active_slot_nr",
        "inv_type",
        "is_synchronized",
        "closed_window",
        "current_player_window",
        "data",
        "is_synchronized",
        "window_id",
        "inv",
        "slot",
        "inv",
        "cursor_slot",
        "slot",
        "slot_nr",
        "to_be_emitted",
        "prop_id",
        "prop_name",
        "prop_id",
        "click",
        "last_click",
        "action_id",
        "accepted",
        "is_synchronized",
        "inv",
        "packet",
        "craft_result_slot",
        "packet",
        "packet",
        "packet",
        "last_click"
    ],
    "comments": [
        "the slot that moves with the mouse when clicking a slot",
        "also allow slot nr",
        "dropping items from cursor is done via normal click",
        "TODO does server send close window, or should we close window now?",
        "for now, we just call handle_close_window() on 'PLAY>Close Window'",
        "TODO test",
        "also register to serverbound, as server",
        "does not send Close Window when we do",
        "click sending",
        "start at 1 so bool(action_id) is",
        "False only for None, see send_click",
        "stores the last click action for confirmation",
        "to know when the inventory got synced with server",
        "emit inv_open_window when the inventory is loaded",
        "unregister this handler",
        "all slots received, inventory state synchronized with server",
        "server did not close the open window",
        "before adressing the player inventory",
        "--> this updates the player inventory with the items added by actions in the currently open window, this should be done to maintain consistency with player inventory",
        "what does greater than mean?",
        "server did not send the Open Window packet yet",
        "assume window will be empty TODO defer the set_slot?",
        "added",
        "unregister this handler",
        "TODO check if the wrong window/action ID was confirmed,",
        "never occured during testing update inventory, because 1.8",
        "server does not send slot updates after successful clicks",
        "click not accepted",
        "confirm that we received this packet",
        "1.8 server will re-send all slots now",
        "only send if previous click got confirmed",
        "send wrong click to update inventory after crafting",
        "not crafting"
    ],
    "docstrings": [
        "\"\"\"\nThe Inventory plugin keeps track of the inventory\nand provides simple inventory analysis and manipulation.\n\"\"\"",
        "\"\"\" Handles operations with the player inventory. \"\"\"",
        "\"\"\"\n        Calculates the total number of items of that type\n        in the current window or given slot range.\n\n        Args:\n            wanted: function(Slot) or Slot or itemID or (itemID, metadata)\n        \"\"\"",
        "\"\"\"\n        Searches the given slots or, if not given,\n        active hotbar slot, hotbar, inventory, open window in this order.\n\n        Args:\n            wanted: function(Slot) or Slot or itemID or (itemID, metadata)\n\n        Returns:\n            Optional[Slot]: The first slot containing the item\n                            or None if not found.\n        \"\"\"",
        "\"\"\"\n        Yields all slots containing the item.\n        Searches the given slots or, if not given,\n        active hotbar slot, hotbar, inventory, open window in this order.\n\n        Args:\n            wanted: function(Slot) or Slot or itemID or (itemID, metadata)\n        \"\"\"",
        "\"\"\"\n        Left-click or right-click the slot.\n\n        Args:\n            slot (Slot): The clicked slot. Can be ``Slot`` instance or integer.\n                         Set to ``inventory.cursor_slot``\n                         for clicking outside the window.\n        \"\"\"",
        "\"\"\"\n        Drop one or all items of the slot.\n\n        Does not wait for confirmation from the server. If you want that,\n        use a ``Task`` and ``yield inventory.async.drop_slot()`` instead.\n\n        If ``slot`` is None, drops the ``cursor_slot`` or, if that's empty,\n        the currently held item (``active_slot``).\n\n        Args:\n            slot (Optional[Slot]): The dropped slot. Can be None, integer,\n                                   or ``Slot`` instance.\n\n        Returns:\n            int: The action ID of the click\n        \"\"\"",
        "\"\"\"\n        List of all available inventory slots in the preferred search order.\n        Does not include the additional slots from the open window.\n\n        1. active slot\n        2. remainder of the hotbar\n        3. remainder of the persistent inventory\n        \"\"\"",
        "\"\"\"\n        Sends a click to the server if the previous click has been confirmed.\n\n        Args:\n            click (BaseClick): The click to send.\n\n        Returns:\n            the click's action ID if the click could be sent,\n            None if the previous click has not been received and confirmed yet.\n        \"\"\""
    ],
    "functions": [
        "total_stored",
        "find_slot",
        "find_slots",
        "select_active_slot",
        "click_slot",
        "drop_slot",
        "close_window",
        "creative_set_slot",
        "active_slot",
        "inv_slots_preferred",
        "emit_open_window",
        "handle_held_item_change",
        "handle_open_window",
        "handle_close_window",
        "handle_set_slot",
        "handle_window_items",
        "set_slot",
        "emit_set_slot",
        "handle_window_prop",
        "handle_confirm_transaction",
        "emit_click_response",
        "send_click"
    ],
    "classes": [
        "InventoryCore",
        "InventoryPlugin"
    ]
}