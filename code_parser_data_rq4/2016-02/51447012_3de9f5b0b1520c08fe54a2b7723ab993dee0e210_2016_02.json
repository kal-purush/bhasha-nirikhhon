{
    "identifiers": [
        "vscode",
        "context",
        "vscode",
        "vscode",
        "vscode",
        "vscode",
        "vscode",
        "uri",
        "vscode",
        "vscode",
        "vscode",
        "uri",
        "vscode",
        "uri",
        "vscode",
        "vscode",
        "editor",
        "editor",
        "editor",
        "editor",
        "editor",
        "editor",
        "editor",
        "editor",
        "selStart",
        "selEnd",
        "error",
        "error",
        "TextDocumentContentProvider",
        "vscode",
        "provider",
        "vscode",
        "e",
        "vscode",
        "e",
        "vscode",
        "provider",
        "previewUri",
        "vscode",
        "e",
        "vscode",
        "e",
        "vscode",
        "provider",
        "previewUri",
        "vscode",
        "vscode",
        "previewUri",
        "vscode",
        "success",
        "reason",
        "vscode",
        "reason",
        "context",
        "disposable",
        "registration"
    ],
    "literals": [
        "'use strict'",
        "'vscode'",
        "'html-escape://cfjedimaster/html-escape'",
        "string",
        "'createEscapedHtml'",
        "string",
        "'is it empty? '",
        "'return selection'",
        "string",
        "string",
        "<body>\n                    ${error}\n                </body>",
        "string",
        "\"&amp;\"",
        "\"&lt;\"",
        "'ok, wtf, i should have esvaped html now '",
        "\"&gt;\"",
        "\"&quot;\"",
        "\"&#x27;\"",
        "\"&#x2F;\"",
        "\"&amp;\"",
        "'<body><h1>Escaped HTML</h1>'",
        "'html-escape'",
        "'extension.showHtmlEscape'",
        "'running dis'",
        "'vscode.previewHtml'"
    ],
    "variables": [
        "previewUri",
        "editor",
        "editor",
        "selStart",
        "selEnd",
        "provider",
        "registration",
        "disposable"
    ],
    "comments": [
        "if (!(editor.document.languageId === 'css')) {\n                return this.errorSnippet(\"Active editor doesn't show a CSS document - no properties to preview.\")\n            }",
        "if we have a selection, use that, otherwise, whole document",
        "there must be a better way of doing this",
        "Required since we're rendering in HTML itself..."
    ],
    "docstrings": [],
    "functions": [
        "activate",
        "provideTextDocumentContent",
        "onDidChange",
        "update",
        "createEscapedHtml",
        "extractSnippet",
        "errorSnippet",
        "snippet",
        "deactivate"
    ],
    "classes": [
        "TextDocumentContentProvider"
    ]
}