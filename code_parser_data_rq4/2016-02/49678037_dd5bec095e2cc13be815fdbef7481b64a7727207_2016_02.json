{
    "identifiers": [
        "sys",
        "binascii",
        "pyshark",
        "bitstring",
        "BitArray",
        "BitStream",
        "crc16",
        "stream",
        "stream",
        "readlist",
        "ord",
        "magicHeader",
        "stream",
        "read",
        "stream",
        "read",
        "checkNullBytes",
        "stream",
        "read",
        "stream",
        "read",
        "stream",
        "read",
        "checkNullBytes",
        "stream",
        "read",
        "stream",
        "bytepos",
        "messageSize",
        "stream",
        "length",
        "expectedMessageSize",
        "expectedMessageSize",
        "stream",
        "length",
        "stream",
        "read",
        "messageSize",
        "stream",
        "readlist",
        "s",
        "messageSize",
        "ccitt",
        "innerMessage",
        "calcCcitt",
        "innerMessage",
        "innerMessage",
        "calcCcitt",
        "commandType",
        "commandType",
        "messageCrc",
        "stream",
        "calcCrc",
        "rollingChecksum",
        "rollingChecksum",
        "calcCrc",
        "field",
        "getattr",
        "field",
        "field",
        "stream",
        "stream",
        "unpack",
        "stream",
        "length",
        "sum",
        "crc16",
        "crc16xmodem",
        "crc",
        "ord",
        "magicHeader",
        "magicHeader",
        "pumpId",
        "unknownBytes",
        "commandType",
        "sequenceNumber",
        "unknownBytes2",
        "messageSize",
        "rollingChecksum",
        "innerMessage",
        "encode",
        "hasattr",
        "pyshark",
        "FileCapture",
        "sys",
        "argv",
        "BitStream",
        "packet",
        "cap",
        "packet",
        "usb",
        "endpoint_number",
        "usbEndpoint",
        "INCOMING_ENDPOINT",
        "usbEndpoint",
        "OUTGOING_ENDPOINT",
        "BitStream",
        "packet",
        "data",
        "usb_capdata",
        "replace",
        "usbBuffer",
        "readlist",
        "usbEndpoint",
        "OUTGOING_ENDPOINT",
        "usbHeader",
        "encode",
        "usbHeader",
        "encode",
        "usbEndpoint",
        "INCOMING_ENDPOINT",
        "usbHeader",
        "usbHeader",
        "encode",
        "messageBuffer",
        "append",
        "usbBuffer",
        "read",
        "usbHeader",
        "usbHeader",
        "USB_PACKET_SIZE",
        "usbEndpoint",
        "OUTGOING_ENDPOINT",
        "messageBuffer",
        "hex",
        "messageBuffer",
        "messageBuffer",
        "medtronicMessage",
        "messageBuffer",
        "msg",
        "messageBuffer",
        "clear",
        "i",
        "i"
    ],
    "literals": [
        "'2*bytes:1'",
        "'bytes:6'",
        "'int:80'",
        "'unknownBytes'",
        "'uint:8'",
        "'uintle:32'",
        "'int:40'",
        "'unknownBytes2'",
        "'uintle:32'",
        "\"Message size mismatch. Expecting message to be '%d' bytes, this stream has '%d' bytes\"",
        "'uintle:8'",
        "'bytes:s, uintle:16'",
        "\"CRC-CCITT doesn't match. Expected '%#x', calculated '%#x'\"",
        "\"Rolling checksum doesn't match. Expected '%#x', calculated '%#x'\"",
        "'*** SOMETHING NEW! %s is more than it seems'",
        "'%s*uint:8'",
        "'Not a Medtronic long message'",
        "'%s, %s, %s, %#x, %d, %#x, %d, %#x\\n%s'",
        "'hex'",
        "'innerMessage'",
        "''",
        "'0x%s'",
        "':'",
        "''",
        "'bytes:3, uint:8'",
        "'hex'",
        "'000000'",
        "'Unexpected USB Header. Expected \"0x000000\", got \"0x%s\".'",
        "'hex'",
        "'ABC'",
        "'Unexpected USB Header. Expected \"0x414243\", got \"0x%s\".'",
        "'hex'",
        "'Message %s'",
        "'OUT'",
        "'IN'",
        "'Hex: %s'",
        "'Q'",
        "'String: %s\\n'",
        "\"Processed %d messages\""
    ],
    "variables": [
        "INCOMING_ENDPOINT",
        "OUTGOING_ENDPOINT",
        "USB_PACKET_SIZE",
        "magicHeader",
        "pumpId",
        "unknownBytes",
        "commandType",
        "sequenceNumber",
        "unknownBytes2",
        "messageSize",
        "expectedMessageSize",
        "rollingChecksum",
        "innerMessage",
        "calcCcitt",
        "calcCrc",
        "crc",
        "cap",
        "messageBuffer",
        "i",
        "usbEndpoint",
        "usbBuffer",
        "usbHeader",
        "msg"
    ],
    "comments": [
        "!/usr/bin/env python",
        "pip install pyshark",
        "pip install bigstring",
        "pip install crc16",
        "This is the incoming endpoint we want data from",
        "This is the outgoing endpoint we want data from",
        "This is 80 bits of data",
        "If unknownBytes is ever anything other than padded nulls, we want to know about it!",
        "Assuming for now it's a regular int",
        "This is 80 bits of data",
        "If unknownBytes is ever anything other than padded nulls, we want to know about it!",
        "Assuming for now it's a regular int",
        "+ 1 because bytepos is an index",
        "TODO - 0x10 OUT and 0x14 IN command messages don't seem to have the CRC-CCITT. Look into this",
        "Check the rolling Checksum",
        "unpack is the same as readlist, but starts from the beginning of the stream",
        "The 33rd byte is the checksum itself, and shouldn't be included in the rolling checksum",
        "Make sure the data is coming from one of the USB endpoints we care about.",
        "Skip anything else",
        "Validate the header",
        "Clear the messageBuffer if we have a full message",
        "TODO - we need to be able to figure out if all 60 bytes are conusumed, but it's the end of the message",
        "If we're up to the non-ASTM messages, let's not bother with the String output"
    ],
    "docstrings": [],
    "functions": [
        "checkNullBytes",
        "messageCrc",
        "ccitt",
        "__str__"
    ],
    "classes": [
        "medtronicMessage"
    ]
}