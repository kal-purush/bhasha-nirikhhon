{
    "identifiers": [
        "Basic",
        "Azure",
        "Storage",
        "Communications",
        "BlobService",
        "BlobOperations",
        "Basic",
        "Azure",
        "Storage",
        "Communications",
        "ServiceExceptions",
        "Basic",
        "Azure",
        "Storage",
        "Extensions",
        "Basic",
        "Azure",
        "Storage",
        "Extensions",
        "Contracts",
        "Moq",
        "NUnit",
        "Framework",
        "Collections",
        "Generic",
        "Linq",
        "Text",
        "Threading",
        "Threading",
        "Tasks",
        "Basic",
        "Azure",
        "Storage",
        "Tests",
        "Extensions",
        "TestFixture",
        "Test",
        "FakeLeaseBlobAcquireResponse",
        "Mock",
        "IBlobServiceClientEx",
        "mockClientExtensions",
        "Setup",
        "ce",
        "LeaseBlobAcquireAsync",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "ReturnsAsync",
        "expectedLeaseResponse",
        "BlobLeaseMaintainer",
        "LeaseNewOrExistingBlockBlobAsync",
        "mockClientExtensions",
        "Assert",
        "AreEqual",
        "expectedLeaseResponse",
        "leaseResult",
        "Test",
        "BlobNotFoundAzureException",
        "Net",
        "HttpStatusCode",
        "NotFound",
        "FakeLeaseBlobAcquireResponse",
        "PutBlobResponse",
        "Mock",
        "IBlobServiceClientEx",
        "mockClientExtensions",
        "SetupSequence",
        "ce",
        "LeaseBlobAcquireAsync",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "Throws",
        "expectedException",
        "Returns",
        "Run",
        "LeaseBlobAcquireResponse",
        "expectedLeaseResponse",
        "mockClientExtensions",
        "Setup",
        "ce",
        "PutBlockBlobAsync",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "ReturnsAsync",
        "expectedBlobResponse",
        "BlobLeaseMaintainer",
        "LeaseNewOrExistingBlockBlobAsync",
        "mockClientExtensions",
        "Assert",
        "AreEqual",
        "expectedLeaseResponse",
        "leaseResult",
        "mockClientExtensions",
        "Verify",
        "ce",
        "LeaseBlobAcquireAsync",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "Times",
        "Exactly",
        "mockClientExtensions",
        "Verify",
        "ce",
        "PutBlockBlobAsync",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "Times",
        "Once",
        "Test",
        "FakeLeaseBlobAcquireResponse",
        "Mock",
        "IBlobServiceClientEx",
        "mockClientExtensions",
        "Setup",
        "ce",
        "LeaseBlobAcquireAsync",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "ReturnsAsync",
        "expectedLeaseResponse",
        "BlobLeaseMaintainer",
        "LeaseNewOrExistingBlockBlobAndMaintainLeaseAsync",
        "mockClientExtensions",
        "Assert",
        "AreEqual",
        "expectedLeaseResponse",
        "LeaseId",
        "leaseResult",
        "LeaseId",
        "leaseResult",
        "StopMaintainingAndClearLeaseAsync",
        "Test",
        "BlobNotFoundAzureException",
        "Net",
        "HttpStatusCode",
        "NotFound",
        "FakeLeaseBlobAcquireResponse",
        "PutBlobResponse",
        "Mock",
        "IBlobServiceClientEx",
        "mockClientExtensions",
        "SetupSequence",
        "ce",
        "LeaseBlobAcquireAsync",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "Throws",
        "expectedException",
        "Returns",
        "Run",
        "LeaseBlobAcquireResponse",
        "expectedLeaseResponse",
        "mockClientExtensions",
        "Setup",
        "ce",
        "PutBlockBlobAsync",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "ReturnsAsync",
        "expectedBlobResponse",
        "BlobLeaseMaintainer",
        "LeaseNewOrExistingBlockBlobAndMaintainLeaseAsync",
        "mockClientExtensions",
        "Assert",
        "AreEqual",
        "expectedLeaseResponse",
        "LeaseId",
        "leaseResult",
        "LeaseId",
        "leaseResult",
        "StopMaintainingAndClearLeaseAsync",
        "Test",
        "FakeLeaseBlobAcquireResponse",
        "Mock",
        "IBlobServiceClientEx",
        "mockClientExtensions",
        "Setup",
        "ce",
        "LeaseBlobAcquireAsync",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "ReturnsAsync",
        "expectedLeaseResponse",
        "BlobLeaseMaintainer",
        "LeaseNewOrExistingBlockBlobAndMaintainLeaseAsync",
        "mockClientExtensions",
        "lease",
        "StopMaintainingAndClearLeaseAsync",
        "mockClientExtensions",
        "Verify",
        "ce",
        "LeaseBlobReleaseAsync",
        "expectedLeaseResponse",
        "LeaseId",
        "Times",
        "Once",
        "Test",
        "FakeLeaseBlobAcquireResponse",
        "Mock",
        "IBlobServiceClientEx",
        "mockClientExtensions",
        "Setup",
        "ce",
        "LeaseBlobAcquireAsync",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "ReturnsAsync",
        "expectedLeaseResponse",
        "BlobLeaseMaintainer",
        "LeaseNewOrExistingBlockBlobAndMaintainLeaseAsync",
        "mockClientExtensions",
        "lease",
        "Dispose",
        "mockClientExtensions",
        "Verify",
        "ce",
        "LeaseBlobReleaseAsync",
        "expectedLeaseResponse",
        "LeaseId",
        "Times",
        "Once",
        "Test",
        "FakeLeaseBlobAcquireResponse",
        "Mock",
        "IBlobServiceClientEx",
        "mockClientExtensions",
        "Setup",
        "ce",
        "LeaseBlobAcquireAsync",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "ReturnsAsync",
        "expectedLeaseResponse",
        "BlobLeaseMaintainer",
        "LeaseNewOrExistingBlockBlobAndMaintainLeaseAsync",
        "mockClientExtensions",
        "mockClientExtensions",
        "Verify",
        "ce",
        "LeaseBlobReleaseAsync",
        "expectedLeaseResponse",
        "LeaseId",
        "Times",
        "Once",
        "Test",
        "FakeLeaseBlobAcquireResponse",
        "Mock",
        "IBlobServiceClientEx",
        "mockClientExtensions",
        "Setup",
        "ce",
        "LeaseBlobAcquireAsync",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "ReturnsAsync",
        "expectedLeaseResponse",
        "BlobLeaseMaintainer",
        "LeaseNewOrExistingBlockBlobAndMaintainLeaseAsync",
        "mockClientExtensions",
        "lease",
        "Dispose",
        "mockClientExtensions",
        "Verify",
        "ce",
        "LeaseBlobReleaseAsync",
        "expectedLeaseResponse",
        "LeaseId",
        "Times",
        "Once",
        "Test",
        "FakeLeaseBlobAcquireResponse",
        "Mock",
        "IBlobServiceClientEx",
        "mockClientExtensions",
        "Setup",
        "ce",
        "LeaseBlobAcquireAsync",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "ReturnsAsync",
        "expectedLeaseResponse",
        "mockClientExtensions",
        "Setup",
        "ce",
        "LeaseBlobRenewAsync",
        "expectedLeaseResponse",
        "LeaseId",
        "Throws",
        "expectedException",
        "CancellationTokenSource",
        "Action",
        "BlobLeaseMaintainer",
        "AggregateException",
        "m",
        "e",
        "receivedException",
        "e",
        "fakeExceptionHandlerTokenSource",
        "Cancel",
        "BlobLeaseMaintainer",
        "LeaseNewOrExistingBlockBlobAndMaintainLeaseAsync",
        "mockClientExtensions",
        "fakeExceptionHandler",
        "fakeExceptionHandlerTokenSource",
        "Token",
        "WaitHandle",
        "WaitOne",
        "Assert",
        "AreEqual",
        "expectedException",
        "receivedException",
        "InnerException",
        "Test",
        "FakeLeaseBlobAcquireResponse",
        "Mock",
        "IBlobServiceClientEx",
        "mockClientExtensions",
        "Setup",
        "ce",
        "LeaseBlobAcquireAsync",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "ReturnsAsync",
        "expectedLeaseResponse",
        "CancellationTokenSource",
        "mockClientExtensions",
        "Setup",
        "ce",
        "LeaseBlobRenewAsync",
        "expectedLeaseResponse",
        "LeaseId",
        "Callback",
        "leaseRenewTokenSource",
        "CancelAfter",
        "Throws",
        "expectedException",
        "BlobLeaseMaintainer",
        "LeaseNewOrExistingBlockBlobAndMaintainLeaseAsync",
        "mockClientExtensions",
        "leaseRenewTokenSource",
        "Token",
        "WaitHandle",
        "WaitOne",
        "Assert",
        "IsTrue",
        "wasCancelled",
        "LeaseBlobAcquireResponse",
        "leaseId",
        "LeaseId",
        "leaseId"
    ],
    "literals": [
        "\"unit-test-abc123\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\"",
        "\"1\"",
        "\"status\"",
        "\"unit-test-abc123\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\"",
        "\"unit-test-abc123\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\"",
        "\"1\"",
        "\"status\"",
        "\"unit-test-abc123\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\"",
        "\"unit-test-abc123\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\"",
        "\"unit-test-abc123\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\"",
        "\"unit-test-abc123\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\"",
        "\"unit-test-abc123\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\"",
        "\"unit-test-abc123\"",
        "\"Error, the internet is on fire\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\"",
        "\"unit-test-abc123\"",
        "\"Error, the internet is on fire\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\"",
        "\"container\"",
        "\"blob\""
    ],
    "variables": [
        "expectedLeaseResponse",
        "mockClientExtensions",
        "leaseResult",
        "expectedException",
        "expectedLeaseResponse",
        "expectedBlobResponse",
        "mockClientExtensions",
        "leaseResult",
        "expectedLeaseResponse",
        "mockClientExtensions",
        "leaseResult",
        "expectedException",
        "expectedLeaseResponse",
        "expectedBlobResponse",
        "mockClientExtensions",
        "leaseResult",
        "expectedLeaseResponse",
        "mockClientExtensions",
        "lease",
        "expectedLeaseResponse",
        "mockClientExtensions",
        "lease",
        "expectedLeaseResponse",
        "mockClientExtensions",
        "lease",
        "expectedLeaseResponse",
        "mockClientExtensions",
        "lease",
        "expectedLeaseResponse",
        "expectedException",
        "mockClientExtensions",
        "AggregateException",
        "receivedException",
        "fakeExceptionHandlerTokenSource",
        "fakeExceptionHandler",
        "lease",
        "expectedLeaseResponse",
        "expectedException",
        "mockClientExtensions",
        "leaseRenewTokenSource",
        "lease",
        "wasCancelled"
    ],
    "comments": [
        "LeaseBlobAcquire - returns response on first try",
        "LeaseBlobAcquire - blob not found on first call, good response on second",
        "PutBlockBlob",
        "2 attempts to lease",
        "1 attempt to create blob",
        "LeaseBlobAcquire - returns response on first try",
        "temporary until we fix lack of auto-release",
        "LeaseBlobAcquire - blob not found on first call, good response on second",
        "PutBlockBlob",
        "temporary until we fix lack of auto-release",
        "LeaseBlobAcquire - returns response on first try",
        "LeaseBlobAcquire - returns response on first try",
        "This is exactly the same as the prior test, I just wanted to have an explicit example of the using in here",
        "</summary>",
        "LeaseBlobAcquire - returns response on first try",
        "blah-di-blah, work going on here",
        "LeaseBlobAcquire - returns response on first try",
        "LeaseBlobAcquire - returns response on first try",
        "LeaseBlobRenewAsync - throws on the first attempted renewal",
        "wiring to wait until the exception and capture the passed exception",
        "should cancel in less than one second",
        "LeaseBlobAcquire - returns response on first try",
        "LeaseBlobRenewAsync - throws on the first attempted renewal",
        "reasonable guess for far longer than it should take the maintenance task to die",
        "???",
        "This test is highly questionable, there is no way to verify that we exited the maintenance",
        "arbitrary amount much larger than lease time above"
    ],
    "docstrings": [
        "<summary>"
    ],
    "functions": [
        "LeaseNewOrExistingBlockBlobAsync_ExistingBlob_AcquiresLease",
        "LeaseNewOrExistingBlockBlobAsync_NonExistentBlob_CreatesBlobAndAcquiresLease",
        "LeaseNewOrExistingBlockBlobAndMaintainLeaseAsync_ExistingBlob_AcquiresLease",
        "LeaseNewOrExistingBlockBlobAndMaintainLeaseAsync_NonExistentBlob_CreatesBlobAndAcquiresLease",
        "StopMaintainingAndClearLeaseAsync_ExistingLease_ReleasesLease",
        "Dispose_ExistingLease_ReleasesLease",
        "Using_ExistingLease_ReleasesLease",
        "Dispose_ExistingLeaseMultipleDisposes_ReleasesLeaseOnlyOnce",
        "LeaseNewOrExistingBlockBlobAndMaintainLeaseAsync_ExceptionDuringMaintenanceAndHandlerProvided_CallsExceptionHandler",
        "LeaseNewOrExistingBlockBlobAndMaintainLeaseAsync_ExceptionDuringMaintenanceAndNoHandlerProvided_DoesntDoAnythingHorrible",
        "FakeLeaseBlobAcquireResponse"
    ],
    "classes": [
        "BlobLeaseMaintainerTests",
        "FakeLeaseBlobAcquireResponse"
    ]
}