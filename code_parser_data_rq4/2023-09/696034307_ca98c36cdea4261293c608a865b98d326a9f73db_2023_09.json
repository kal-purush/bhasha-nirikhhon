{
    "identifiers": [
        "modules",
        "CSVFileHandler",
        "CSVFileHandler",
        "modules",
        "CommentPullingModule",
        "CommentPullingModule",
        "modules",
        "DatabaseHandler",
        "DatabaseHandler",
        "modules",
        "Persist",
        "PersistHandler",
        "objects",
        "Comment",
        "Comment",
        "objects",
        "CommentThread",
        "CommentThread",
        "googleapiclient",
        "discovery",
        "googleapiclient",
        "errors",
        "HttpError",
        "google",
        "oauth2",
        "service_account",
        "rich",
        "rich",
        "progress",
        "Progress",
        "typing",
        "Any",
        "TYPE_CHECKING",
        "TYPE_CHECKING",
        "googleapiclient",
        "_apis",
        "youtube",
        "v3",
        "resources",
        "YouTubeResource",
        "CSVFileHandler",
        "CommentPullingModule",
        "Any",
        "service_account",
        "Credentials",
        "from_service_account_file",
        "scopes",
        "googleapiclient",
        "discovery",
        "build",
        "serviceName",
        "version",
        "credentials",
        "c",
        "build_youtube_client",
        "CSVFileHandler",
        "CommentPullingModule",
        "YOUTUBE",
        "CONSOLE",
        "DatabaseHandler",
        "out_path",
        "PersistHandler",
        "CONSOLE",
        "channel",
        "CSV_HANDLER",
        "csv_generator",
        "PERSIST",
        "satisfies_state_check",
        "channel",
        "channel",
        "c",
        "c",
        "CONSOLE",
        "log",
        "c",
        "CONSOLE",
        "log",
        "channel",
        "channel_handle",
        "CONSOLE",
        "status",
        "channel",
        "channel_handle",
        "spinner",
        "status",
        "index",
        "vid",
        "channel",
        "video_ids",
        "PERSIST",
        "satisfies_state_check",
        "video_id",
        "vid",
        "v",
        "PERSIST",
        "v",
        "CONSOLE",
        "log",
        "v",
        "channel",
        "channel_handle",
        "COMMENT_PULLING_MODULE",
        "getCommentThreadsFromVideoId",
        "vid",
        "subset_replies",
        "HttpError",
        "httpErr",
        "error_callback",
        "httpErr",
        "vid",
        "channel",
        "channel_handle",
        "cmt_thrds",
        "COMMENT_PULLING_MODULE",
        "getCommentsAndRepliesFromPaginatedCommentThread",
        "cmt_thrds",
        "HttpError",
        "httpErr",
        "error_callback",
        "httpErr",
        "vid",
        "channel",
        "channel_handle",
        "cmts",
        "DATABASE",
        "push_comments",
        "cmts",
        "override_video",
        "video_id",
        "vid",
        "cmt_thrds",
        "hasNextPage",
        "cmt_thrds",
        "next",
        "HttpError",
        "httpErr",
        "error_callback",
        "httpErr",
        "vid",
        "channel",
        "channel_handle",
        "PERSIST",
        "SAVED_STATE",
        "push_video_id",
        "vid",
        "CONSOLE",
        "log",
        "vid",
        "index",
        "channel",
        "video_id_count",
        "PERSIST",
        "SAVED_STATE",
        "push_channel",
        "channel",
        "err",
        "HttpError",
        "video_id",
        "channel_handle",
        "err",
        "error_details",
        "reason",
        "CONSOLE",
        "log",
        "cleanup",
        "quit",
        "CONSOLE",
        "log",
        "video_id",
        "channel_handle",
        "reason",
        "CONSOLE",
        "log",
        "PERSIST",
        "push_state_to_file",
        "DATABASE",
        "cleanup",
        "YoutubeCommentSniffer",
        "ycs",
        "pull_comments",
        "KeyboardInterrupt",
        "ycs",
        "cleanup"
    ],
    "literals": [
        "\"YouTubeResource\"",
        "\"./creds.json\"",
        "'https://www.googleapis.com/auth/youtube.force-ssl'",
        "\"youtube\"",
        "\"v3\"",
        "'./in'",
        "\"./out.db\"",
        "f\":gear: [bold green] Skipped {c} channels\"",
        "f':bust_in_silhouette: [bold yellow] Attempting to pull videos from channel [green underline]\"{channel.channel_handle}\"'",
        "f'[bold yellow] Pulling Video Data for [green underline]{channel.channel_handle}[/green underline]...'",
        "'monkey'",
        "f':gear: [bold yellow] Skipped {v} videos from channel [green underline]\"{channel.channel_handle}\"'",
        "f'[green] Video Id [cyan]{vid}[/cyan] Completed ({index}/{channel.video_id_count})'",
        "'reason'",
        "'quotaExceeded'",
        "\":x: [bold red] Query Quota Exceeded for the day. [yellow] Program Shutting down...\"",
        "f\":x: [bold red] Video Id = {video_id} | Channel = {channel_handle} | Reason: {reason}\"",
        "\":sponge: [magenta bold] Cleanup method called. Pushing file state and closing database connections.\"",
        "\"__main__\"",
        "'Keyboard Interrupt: Shutting down...'"
    ],
    "variables": [
        "CSV_HANDLER",
        "COMMENT_PULLING_MODULE",
        "YOUTUBE",
        "c",
        "CONSOLE",
        "YOUTUBE",
        "CSV_HANDLER",
        "COMMENT_PULLING_MODULE",
        "DATABASE",
        "PERSIST",
        "c",
        "v",
        "p",
        "c",
        "STATE_RESUME_COMPLETE",
        "v",
        "cmt_thrds",
        "cmts",
        "cmts",
        "reason",
        "ycs"
    ],
    "comments": [
        "Create a credentials instance from the credentials json file",
        "Build the client and return it",
        "Init rich console",
        "Build the youtube client",
        "Create a CSVFileHandler object, specifying where all of the CSV files are",
        "Init the comment pulling module",
        "Init the database module",
        "Init persistent storage for query stuff",
        "Yields a channel and all of the assoc. video ids",
        "If said channel is not equivalent to the last session, skip this channel",
        "Iterate over each video id ...",
        "If the video is not equivalent to the last session, skip this video",
        "If the program gets to this point, then the state resume is completed.",
        "Gather the comment threads",
        "Next One!",
        "Gather comments from the current page of threads",
        "Literally insane behaviour",
        "More stuff could go here"
    ],
    "docstrings": [],
    "functions": [
        "build_youtube_client",
        "pull_comments",
        "error_callback",
        "cleanup"
    ],
    "classes": [
        "YoutubeCommentSniffer"
    ]
}