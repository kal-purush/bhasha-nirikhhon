{
    "identifiers": [
        "expect",
        "ethers",
        "ConfigCache",
        "NetworkType",
        "ParsedConfig",
        "SphinxFunctionSignature",
        "CallAction",
        "getCallHash",
        "getDiff",
        "callAction",
        "callAction",
        "callAction",
        "postDeployFunctionSignature",
        "ethers",
        "constructorArgs",
        "ethers",
        "ethers",
        "constructorArgs",
        "ethers",
        "ethers",
        "fullPostDeployAction",
        "getCallHash",
        "callAction",
        "callAction",
        "callHash",
        "NetworkType",
        "describe",
        "describe",
        "it",
        "getDiff",
        "originalParsedConfig",
        "originalConfigCache",
        "expect",
        "diff",
        "diff",
        "expect",
        "networkTags",
        "expect",
        "executing",
        "expect",
        "sphinxManagerSignature",
        "expect",
        "constructorOneSig",
        "constructorArgs",
        "expect",
        "constructorTwoSig",
        "constructorArgs",
        "expect",
        "postDeploySignature",
        "expect",
        "skipping",
        "it",
        "structuredClone",
        "originalConfigCache",
        "configCache",
        "getDiff",
        "originalParsedConfig",
        "configCache",
        "expect",
        "diff",
        "diff",
        "expect",
        "networkTags",
        "expect",
        "executing",
        "expect",
        "constructorOneSig",
        "constructorArgs",
        "expect",
        "constructorTwoSig",
        "constructorArgs",
        "expect",
        "postDeploySignature",
        "expect",
        "skipping",
        "it",
        "structuredClone",
        "originalConfigCache",
        "configCache",
        "configCache",
        "configCache",
        "configCache",
        "callHash",
        "getDiff",
        "originalParsedConfig",
        "configCache",
        "expect",
        "diff",
        "diff",
        "expect",
        "networkTags",
        "expect",
        "executing",
        "expect",
        "skipping",
        "expect",
        "constructorOneSig",
        "constructorArgs",
        "expect",
        "constructorTwoSig",
        "constructorArgs",
        "expect",
        "postDeploySignature",
        "it",
        "structuredClone",
        "originalParsedConfig",
        "structuredClone",
        "originalConfigCache",
        "structuredClone",
        "originalConfigCache",
        "parsedConfig",
        "constructorArgs",
        "parsedConfig",
        "constructorArgs",
        "parsedConfig",
        "fullPostDeployAction",
        "configCacheTwo",
        "configCacheTwo",
        "parsedConfig",
        "constructorArgs",
        "parsedConfig",
        "constructorArgs",
        "parsedConfig",
        "fullPostDeployAction",
        "configCacheThree",
        "configCacheThree",
        "getDiff",
        "parsedConfig",
        "originalConfigCache",
        "configCacheTwo",
        "configCacheThree",
        "expect",
        "diff",
        "diff",
        "expect",
        "networkTags",
        "expect",
        "executing",
        "expect",
        "sphinxManagerSignature",
        "expect",
        "constructorOneSig",
        "constructorArgs",
        "expect",
        "constructorTwoSig",
        "constructorArgs",
        "expect",
        "postDeploySignature",
        "expect",
        "skipping",
        "it",
        "structuredClone",
        "originalParsedConfig",
        "structuredClone",
        "originalConfigCache",
        "structuredClone",
        "originalConfigCache",
        "parsedConfig",
        "constructorArgs",
        "parsedConfig",
        "constructorArgs",
        "parsedConfig",
        "fullPostDeployAction",
        "configCachePolygon",
        "configCachePolygon",
        "configCachePolygon",
        "configCachePolygon",
        "parsedConfig",
        "parsedConfig",
        "constructorArgs",
        "parsedConfig",
        "fullPostDeployAction",
        "configCacheArbitrum",
        "configCacheArbitrum",
        "getDiff",
        "parsedConfig",
        "originalConfigCache",
        "configCachePolygon",
        "configCacheArbitrum",
        "expect",
        "diff",
        "expect",
        "networkTagsOptimism",
        "expect",
        "executingOptimism",
        "expect",
        "sphinxManagerSigOptimism",
        "expect",
        "constructorOneSigOptimism",
        "constructorArgs",
        "expect",
        "constructorTwoSigOptimism",
        "constructorArgs",
        "expect",
        "postDeploySignatureOptimism",
        "expect",
        "skippingOptimism",
        "expect",
        "networkTagsPolygon",
        "expect",
        "executingPolygon",
        "expect",
        "constructorTwoSig",
        "constructorArgs",
        "expect",
        "postDeploySignaturePolygon",
        "expect",
        "skippingPolygon",
        "expect",
        "constructorSignaturePolygon",
        "constructorArgs",
        "expect",
        "networkTagsArbitrum",
        "expect",
        "executingArbitrum",
        "expect",
        "sphinxManagerSignatureArbitrum",
        "expect",
        "constructorSigOneArbitrum",
        "expect",
        "constructorSigTwoArbitrum",
        "constructorArgs",
        "expect",
        "postDeploySignatureArbitrum",
        "expect",
        "skippingArbitrum"
    ],
    "literals": [
        "'chai'",
        "'ethers'",
        "'../src/config/types'",
        "'../src/actions/types'",
        "'../src/utils'",
        "'../src/diff'",
        "'0x'",
        "'22'",
        "'0x12345678'",
        "'MyContract'",
        "'myFunction'",
        "'myFunctionVal'",
        "'myVal'",
        "'myOtherVal'",
        "'Diff Test'",
        "'MyContract'",
        "'immutable'",
        "'MyContract'",
        "'immutable'",
        "'optimism'",
        "'Diff'",
        "'getDiff'",
        "'returns diff for single network that is executing everything, including SphinxManager'",
        "'optimism'",
        "'SphinxManager'",
        "'constructor'",
        "'MyContract'",
        "'constructor'",
        "'MyContract2'",
        "'constructor'",
        "'MyContract'",
        "'myFunction'",
        "'myFunctionVal'",
        "'returns diff for single network that is executing everything, except SphinxManager'",
        "'optimism'",
        "'MyContract'",
        "'constructor'",
        "'MyContract2'",
        "'constructor'",
        "'MyContract'",
        "'myFunction'",
        "'myFunctionVal'",
        "'returns diff for single network that is skipping everything'",
        "'optimism'",
        "'MyContract'",
        "'constructor'",
        "'MyContract2'",
        "'constructor'",
        "'MyContract'",
        "'myFunction'",
        "'myFunctionVal'",
        "'returns merged diff for networks that are the same'",
        "'MyContract'",
        "'MyContract2'",
        "'arbitrum'",
        "'MyContract'",
        "'MyContract2'",
        "'matic'",
        "'optimism'",
        "'arbitrum'",
        "'matic'",
        "'SphinxManager'",
        "'constructor'",
        "'MyContract'",
        "'constructor'",
        "'MyContract2'",
        "'constructor'",
        "'MyContract'",
        "'myFunction'",
        "'myFunctionVal'",
        "'returns diff for networks that are different'",
        "'MyContract'",
        "'MyContract2'",
        "'matic'",
        "'MyContract'",
        "'myVal2'",
        "'myOtherVal2'",
        "'MyContract2'",
        "'arbitrum'",
        "'optimism'",
        "'SphinxManager'",
        "'constructor'",
        "'MyContract'",
        "'constructor'",
        "'MyContract2'",
        "'constructor'",
        "'MyContract'",
        "'myFunction'",
        "'myFunctionVal'",
        "'matic'",
        "'MyContract2'",
        "'constructor'",
        "'MyContract'",
        "'myFunction'",
        "'myFunctionVal'",
        "'MyContract'",
        "'constructor'",
        "'arbitrum'",
        "'SphinxManager'",
        "'constructor'",
        "'MyContract'",
        "'constructor'",
        "'myVal2'",
        "'myOtherVal2'",
        "'MyContract2'",
        "'constructor'",
        "'MyContract'",
        "'myFunction'",
        "'myFunctionVal'"
    ],
    "variables": [
        "callAction",
        "postDeployFunctionSignature",
        "fullPostDeployAction",
        "constructorArgs",
        "originalParsedConfig",
        "callHash",
        "originalConfigCache",
        "diff",
        "sphinxManagerSignature",
        "constructorOneSig",
        "constructorTwoSig",
        "postDeploySignature",
        "executing",
        "configCache",
        "diff",
        "constructorOneSig",
        "constructorTwoSig",
        "postDeploySignature",
        "executing",
        "configCache",
        "diff",
        "constructorOneSig",
        "constructorTwoSig",
        "postDeploySignature",
        "skipping",
        "parsedConfig",
        "configCacheTwo",
        "configCacheThree",
        "diff",
        "sphinxManagerSignature",
        "constructorOneSig",
        "constructorTwoSig",
        "postDeploySignature",
        "executing",
        "parsedConfig",
        "configCachePolygon",
        "configCacheArbitrum",
        "diff",
        "networkTagsOptimism",
        "executingOptimism",
        "skippingOptimism",
        "networkTagsPolygon",
        "executingPolygon",
        "skippingPolygon",
        "networkTagsArbitrum",
        "executingArbitrum",
        "skippingArbitrum",
        "diff",
        "sphinxManagerSigOptimism",
        "constructorOneSigOptimism",
        "constructorTwoSigOptimism",
        "postDeploySignatureOptimism",
        "executingOptimism",
        "constructorTwoSig",
        "postDeploySignaturePolygon",
        "executingPolygon",
        "constructorSignaturePolygon",
        "skippingPolygon",
        "sphinxManagerSignatureArbitrum",
        "constructorSigOneArbitrum",
        "constructorSigTwoArbitrum",
        "postDeploySignatureArbitrum",
        "executingArbitrum"
    ],
    "comments": [
        "Skip the SphinxManager and the contract deployment on this chain",
        "Use a different constructor argument for the first contract on this chain"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}