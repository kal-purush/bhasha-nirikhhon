{
    "identifiers": [
        "os",
        "pytest",
        "metafunc",
        "metafunc",
        "config",
        "getoption",
        "arc_dir",
        "pytest",
        "skip",
        "os",
        "path",
        "join",
        "root",
        "f",
        "root",
        "_",
        "files",
        "os",
        "walk",
        "arc_dir",
        "f",
        "files",
        "f",
        "endswith",
        "os",
        "path",
        "basename",
        "f",
        "f",
        "ARC_FILES",
        "metafunc",
        "parametrize",
        "ARC_FILES",
        "ids",
        "arc_names",
        "metafunc",
        "metafunc",
        "config",
        "getoption",
        "arc_dir",
        "pytest",
        "skip",
        "os",
        "path",
        "join",
        "root",
        "f",
        "root",
        "_",
        "files",
        "os",
        "walk",
        "arc_dir",
        "f",
        "files",
        "f",
        "endswith",
        "ARC_FILES",
        "ValueError",
        "arc_dir",
        "mrls_per_arc",
        "ARC_FILES",
        "metafunc",
        "parametrize",
        "mrls",
        "indirect",
        "ids",
        "ids",
        "arc_paths",
        "albam",
        "engines",
        "mtfw",
        "archive",
        "ArcWrapper",
        "arc_path",
        "arc_paths",
        "os",
        "path",
        "basename",
        "arc_path",
        "ArcWrapper",
        "arc_path",
        "arc",
        "get_file_entries_by_extension",
        "mrls_fe",
        "mrl",
        "mrls_fe",
        "append",
        "arc",
        "mrl",
        "ids",
        "append",
        "join",
        "arc_name",
        "mrl",
        "file_path",
        "ids"
    ],
    "literals": [
        "\"arcdir\"",
        "\"No arc directory supplied\"",
        "\".arc\"",
        "\"arc_filepath\"",
        "\"arcdir\"",
        "\"No arc directory supplied\"",
        "\".arc\"",
        "f\"No files ending in .arc found in {arc_dir}\"",
        "\"mrl\"",
        "\"mrl\"",
        "\"::\"",
        "\".mrl\""
    ],
    "variables": [
        "arc_dir",
        "ARC_FILES",
        "arc_names",
        "arc_dir",
        "ARC_FILES",
        "mrls",
        "ids",
        "ids",
        "arc_name",
        "arc",
        "mrls_fe"
    ],
    "comments": [
        "mrl fixture in tests/mtfw/conftest.py",
        "test collection before calling register() in pytest_session_start",
        "doesn't have sys.path modified for albam_vendor, so kaitaistruct",
        "not found"
    ],
    "docstrings": [
        "\"\"\"\n    Generate one parsed mrl object per test, based on provided arcs.\n    Defer decompression and parsing to test-run time, not\n    collection time\n    \"\"\""
    ],
    "functions": [
        "_generate_tests_arc_file_path",
        "_generate_tests_mrl",
        "mrls_per_arc"
    ],
    "classes": []
}