{
    "identifiers": [
        "com",
        "scalar",
        "db",
        "api",
        "com",
        "google",
        "common",
        "MoreObjects",
        "com",
        "scalar",
        "db",
        "io",
        "TextColumn",
        "java",
        "util",
        "Objects",
        "javax",
        "annotation",
        "Nonnull",
        "javax",
        "annotation",
        "concurrent",
        "Immutable",
        "Immutable",
        "DEFAULT_ESCAPE_CHAR",
        "escape",
        "column",
        "column",
        "DEFAULT_ESCAPE_CHAR",
        "column",
        "escape",
        "column",
        "check",
        "column",
        "getTextValue",
        "escape",
        "escape",
        "escape",
        "pattern",
        "escape",
        "Operator",
        "LIKE",
        "Operator",
        "NOT_LIKE",
        "escape",
        "escape",
        "length",
        "pattern",
        "escapeChar",
        "escape",
        "length",
        "escape",
        "charAt",
        "chars",
        "pattern",
        "toCharArray",
        "i",
        "i",
        "chars",
        "length",
        "i",
        "c",
        "chars",
        "i",
        "escapeChar",
        "c",
        "escapeChar",
        "i",
        "chars",
        "length",
        "nextChar",
        "chars",
        "i",
        "nextChar",
        "nextChar",
        "nextChar",
        "escapeChar",
        "escapeChar",
        "c",
        "escapeChar",
        "Nonnull",
        "escape",
        "Override",
        "o",
        "equals",
        "o",
        "o",
        "o",
        "other",
        "o",
        "escape",
        "equals",
        "other",
        "escape",
        "Override",
        "Objects",
        "hash",
        "hashCode",
        "escape",
        "Override",
        "MoreObjects",
        "toStringHelper",
        "add",
        "escape",
        "toString"
    ],
    "literals": [
        "\"\\\\\"",
        "\"Operator must be like or not-like. Operator: \"",
        "\"Escape character must be a string of a single character or an empty string\"",
        "\"LIKE pattern must not be null\"",
        "\"LIKE pattern must not include only escape character\"",
        "\"LIKE pattern must not end with escape character\"",
        "\"escape\""
    ],
    "variables": [
        "escape"
    ],
    "comments": [],
    "docstrings": [
        "* Constructs a {@code LikeExpression} with the specified column and operator. For the escape\n   * character, the default one (\"\\\", i.e., backslash) is used.\n   *\n   * @param column a target column used to compare\n   * @param operator an operator used to compare the target column",
        "* Constructs a {@code LikeExpression} with the specified column, operator and escape character.\n   * The escape character must be a string of a single character or an empty string. If an empty\n   * string is specified, the escape character is disabled.\n   *\n   * @param column a target column used to compare\n   * @param operator an operator used to compare the target column\n   * @param escape an escape character for the like operator",
        "* Returns the escape character for LIKE operator.\n   *\n   * @return the escape character for LIKE operator",
        "* Indicates whether some other object is \"equal to\" this object. The other object is considered\n   * equal if:\n   *\n   * <ul>\n   *   <li>both super class instances are equal and\n   *   <li>it is also an {@code LikeExpression} and\n   *   <li>both instances have the same escape character.\n   * </ul>\n   *\n   * @param o an object to be tested for equality\n   * @return {@code true} if the other object is \"equal to\" this object otherwise {@code false}"
    ],
    "functions": [
        "LikeExpression",
        "LikeExpression",
        "check",
        "getEscape",
        "equals",
        "hashCode",
        "toString"
    ],
    "classes": [
        "LikeExpression"
    ]
}