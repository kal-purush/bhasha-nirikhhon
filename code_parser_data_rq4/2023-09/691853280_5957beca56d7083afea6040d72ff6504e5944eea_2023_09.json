{
    "identifiers": [
        "os",
        "os",
        "environ",
        "re",
        "sys",
        "glob",
        "html",
        "argparse",
        "jsbeautifier",
        "webbrowser",
        "subprocess",
        "base64",
        "ssl",
        "xml",
        "etree",
        "ElementTree",
        "gzip",
        "GzipFile",
        "Template",
        "StringIO",
        "StringIO",
        "StringIO",
        "ImportError",
        "io",
        "BytesIO",
        "BytesIO",
        "urllib",
        "request",
        "Request",
        "urlopen",
        "ImportError",
        "urllib2",
        "Request",
        "urlopen",
        "errmsg",
        "sys",
        "argv",
        "errmsg",
        "sys",
        "exit",
        "input",
        "input",
        "startswith",
        "input",
        "input",
        "startswith",
        "input",
        "args",
        "burp",
        "xml",
        "etree",
        "ElementTree",
        "fromstring",
        "open",
        "args",
        "input",
        "read",
        "item",
        "items",
        "jsfiles",
        "append",
        "base64",
        "b64decode",
        "item",
        "find",
        "text",
        "decode",
        "item",
        "find",
        "text",
        "jsfiles",
        "input",
        "glob",
        "glob",
        "os",
        "path",
        "abspath",
        "input",
        "index",
        "path",
        "paths",
        "path",
        "paths",
        "len",
        "paths",
        "parser_error",
        "os",
        "path",
        "abspath",
        "input",
        "path",
        "os",
        "path",
        "exists",
        "input",
        "parser_error",
        "url",
        "Request",
        "url",
        "q",
        "add_header",
        "q",
        "add_header",
        "q",
        "add_header",
        "q",
        "add_header",
        "q",
        "add_header",
        "args",
        "cookies",
        "ssl",
        "SSLContext",
        "ssl",
        "PROTOCOL_TLSv1_2",
        "urlopen",
        "q",
        "timeout",
        "args",
        "timeout",
        "context",
        "sslcontext",
        "ssl",
        "SSLContext",
        "ssl",
        "PROTOCOL_TLSv1",
        "urlopen",
        "q",
        "timeout",
        "args",
        "timeout",
        "context",
        "sslcontext",
        "response",
        "info",
        "get",
        "GzipFile",
        "fileobj",
        "readBytesCustom",
        "response",
        "read",
        "read",
        "response",
        "info",
        "get",
        "response",
        "read",
        "read",
        "response",
        "read",
        "data",
        "decode",
        "list_matches",
        "content",
        "include_delimiter",
        "context_delimiter_str",
        "m",
        "list_matches",
        "m",
        "m",
        "m",
        "match_start",
        "match_end",
        "len",
        "context_delimiter_str",
        "len",
        "content",
        "content",
        "context_start_index",
        "context_delimiter_str",
        "context_start_index",
        "context_start_index",
        "content",
        "context_end_index",
        "context_delimiter_str",
        "context_end_index",
        "content_max_index",
        "context_end_index",
        "include_delimiter",
        "content",
        "context_start_index",
        "context_end_index",
        "content",
        "context_start_index",
        "delimiter_len",
        "context_end_index",
        "match_str",
        "context",
        "items",
        "append",
        "item",
        "items",
        "content",
        "regex_str",
        "mode",
        "more_regex",
        "no_dup",
        "context_delimiter_str",
        "mode",
        "len",
        "content",
        "content",
        "replace",
        "replace",
        "jsbeautifier",
        "beautify",
        "content",
        "re",
        "compile",
        "regex_str",
        "re",
        "VERBOSE",
        "mode",
        "m",
        "group",
        "m",
        "start",
        "m",
        "end",
        "m",
        "re",
        "finditer",
        "regex",
        "content",
        "getContext",
        "all_matches",
        "content",
        "context_delimiter_str",
        "context_delimiter_str",
        "m",
        "group",
        "m",
        "re",
        "finditer",
        "regex",
        "content",
        "no_dup",
        "item",
        "items",
        "item",
        "all_links",
        "all_links",
        "add",
        "item",
        "no_dup_items",
        "append",
        "item",
        "no_dup_items",
        "item",
        "items",
        "more_regex",
        "re",
        "search",
        "more_regex",
        "item",
        "filtered_items",
        "append",
        "item",
        "filtered_items",
        "append",
        "item",
        "filtered_items",
        "endpoints",
        "endpoint",
        "endpoints",
        "html",
        "escape",
        "endpoint",
        "encode",
        "decode",
        "html",
        "os",
        "dup",
        "os",
        "close",
        "os",
        "open",
        "os",
        "devnull",
        "os",
        "O_RDWR",
        "Template",
        "open",
        "sys",
        "path",
        "read",
        "open",
        "args",
        "output",
        "text_file",
        "write",
        "s",
        "substitute",
        "content",
        "html",
        "encode",
        "text_file",
        "close",
        "os",
        "path",
        "abspath",
        "args",
        "output",
        "os",
        "path",
        "abspath",
        "args",
        "output",
        "sys",
        "platform",
        "sys",
        "platform",
        "subprocess",
        "call",
        "file",
        "webbrowser",
        "open",
        "file",
        "e",
        "args",
        "output",
        "e",
        "os",
        "dup2",
        "hide",
        "url",
        "url",
        "url",
        "split",
        "word",
        "words",
        "word",
        "nopelist",
        "url",
        "url",
        "url",
        "url",
        "args",
        "input",
        "url",
        "args",
        "input",
        "url",
        "url",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "required",
        "action",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "default_timeout",
        "default_timeout",
        "metavar",
        "parser",
        "parse_args",
        "args",
        "input",
        "args",
        "input",
        "args",
        "output",
        "parser_input",
        "args",
        "input",
        "url",
        "urls",
        "args",
        "burp",
        "send_request",
        "url",
        "e",
        "parser_error",
        "e",
        "url",
        "url",
        "parser_file",
        "file",
        "regex_str",
        "mode",
        "args",
        "regex",
        "args",
        "domain",
        "endpoint",
        "endpoints",
        "html",
        "escape",
        "endpoint",
        "encode",
        "decode",
        "check_url",
        "endpoint",
        "endpoint",
        "endpoint",
        "send_request",
        "endpoint",
        "parser_file",
        "file",
        "regex_str",
        "mode",
        "args",
        "regex",
        "args",
        "output",
        "cli_output",
        "new_endpoints",
        "output",
        "html",
        "escape",
        "endpoint",
        "html",
        "escape",
        "endpoint",
        "endpoint2",
        "new_endpoints",
        "html",
        "escape",
        "endpoint2",
        "html",
        "escape",
        "url",
        "html",
        "escape",
        "url",
        "html",
        "escape",
        "endpoint2",
        "body",
        "replace",
        "html",
        "escape",
        "endpoint2",
        "html",
        "escape",
        "endpoint2",
        "output",
        "header",
        "body",
        "e",
        "endpoint",
        "args",
        "output",
        "cli_output",
        "endpoints",
        "output",
        "html",
        "escape",
        "url",
        "html",
        "escape",
        "url",
        "endpoint",
        "endpoints",
        "html",
        "escape",
        "endpoint",
        "html",
        "escape",
        "url",
        "html",
        "escape",
        "url",
        "html",
        "escape",
        "endpoint",
        "body",
        "replace",
        "html",
        "escape",
        "endpoint",
        "html",
        "escape",
        "endpoint",
        "output",
        "header",
        "body",
        "args",
        "output",
        "html_save",
        "output"
    ],
    "literals": [
        "\"BROWSER\"",
        "\"open\"",
        "r\"\"\"\n\n  (?:\"|')                               # Start newline delimiter\n\n  (\n    ((?:[a-zA-Z]{1,10}://|//)           # Match a scheme [a-Z]*1-10 or //\n    [^\"'/]{1,}\\.                        # Match a domainname (any character + dot)\n    [a-zA-Z]{2,}[^\"']{0,})              # The domainextension and/or path\n\n    |\n\n    ((?:/|\\.\\./|\\./)                    # Start with /,../,./\n    [^\"'><,;| *()(%%$^/\\\\\\[\\]]          # Next character can't be...\n    [^\"'><,;|()]{1,})                   # Rest of the characters can't be\n\n    |\n\n    ([a-zA-Z0-9_\\-/]{1,}/               # Relative endpoint with /\n    [a-zA-Z0-9_\\-/]{1,}                 # Resource name\n    \\.(?:[a-zA-Z]{1,4}|action)          # Rest + extension (length 1-4 or action)\n    (?:[\\?|#][^\"|']{0,}|))              # ? or # mark with parameters\n\n    |\n\n    ([a-zA-Z0-9_\\-/]{1,}/               # REST API (no extension) with /\n    [a-zA-Z0-9_\\-/]{3,}                 # Proper REST endpoints usually have 3+ chars\n    (?:[\\?|#][^\"|']{0,}|))              # ? or # mark with parameters\n\n    |\n\n    ([a-zA-Z0-9_\\-]{1,}                 # filename\n    \\.(?:php|asp|aspx|jsp|json|\n         action|html|js|txt|xml)        # . + extension\n    (?:[\\?|#][^\"|']{0,}|))              # ? or # mark with parameters\n\n  )\n\n  (?:\"|')                               # End newline delimiter\n\n\"\"\"",
        "\"\\n\"",
        "\"Usage: python %s [Options] use -h for help\"",
        "\"Error: %s\"",
        "'http://'",
        "'https://'",
        "'file://'",
        "'ftp://'",
        "'ftps://'",
        "'view-source:'",
        "\"r\"",
        "\"js\"",
        "'response'",
        "'utf-8'",
        "\"replace\"",
        "\"url\"",
        "'url'",
        "\"*\"",
        "\"file://%s\"",
        "'Input with wildcard does \\\n        not match any files.'",
        "\"file://%s\"",
        "\"file could not \\\nbe found (maybe you forgot to add http/https).\"",
        "'User-Agent'",
        "'Mozilla/5.0 (Windows NT 10.0; Win64; x64) \\\n        AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36'",
        "'Accept'",
        "'text/html,\\\n        application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'",
        "'Accept-Language'",
        "'en-US,en;q=0.8'",
        "'Accept-Encoding'",
        "'gzip'",
        "'Cookie'",
        "'Content-Encoding'",
        "'gzip'",
        "'Content-Encoding'",
        "'deflate'",
        "'utf-8'",
        "'replace'",
        "\"\\n\"",
        "\"link\"",
        "\"context\"",
        "\";\"",
        "\";\\r\\n\"",
        "\",\"",
        "\",\\r\\n\"",
        "\"link\"",
        "\"link\"",
        "\"link\"",
        "\"link\"",
        "\"link\"",
        "'ascii'",
        "'ignore'",
        "'utf8'",
        "'%s/template.html'",
        "'r'",
        "\"wb\"",
        "'utf8'",
        "\"URL to access output: file://%s\"",
        "\"file:///%s\"",
        "'linux'",
        "'linux2'",
        "\"xdg-open\"",
        "\"Output can't be saved in %s \\\n            due to exception: %s\"",
        "\"node_modules\"",
        "\"jquery.js\"",
        "\".js\"",
        "\"/\"",
        "\"//\"",
        "\"https:\"",
        "\"http\"",
        "\"/\"",
        "\"/\"",
        "\"__main__\"",
        "\"-d\"",
        "\"--domain\"",
        "\"Input a domain to recursively parse all javascript located in a page\"",
        "\"store_true\"",
        "\"-i\"",
        "\"--input\"",
        "\"Input a: URL, file or folder. \\\n                        For folders a wildcard can be used (e.g. '/*.js').\"",
        "\"True\"",
        "\"store\"",
        "\"-o\"",
        "\"--output\"",
        "\"Where to save the file, \\\n                        including file name. Default: output.html\"",
        "\"store\"",
        "\"output.html\"",
        "\"-r\"",
        "\"--regex\"",
        "\"RegEx for filtering purposes \\\n                        against found endpoint (e.g. ^/api/)\"",
        "\"store\"",
        "\"-b\"",
        "\"--burp\"",
        "\"\"",
        "\"store_true\"",
        "\"-c\"",
        "\"--cookies\"",
        "\"Add cookies for authenticated JS files\"",
        "\"store\"",
        "\"\"",
        "\"-t\"",
        "\"--timeout\"",
        "\"How many seconds to wait for the server to send data before giving up (default: \"",
        "\" seconds)\"",
        "\"<seconds>\"",
        "\"/\"",
        "\"cli\"",
        "''",
        "\"invalid input defined or SSL error: %s\"",
        "'js'",
        "'url'",
        "\"link\"",
        "'ascii'",
        "'ignore'",
        "'utf8'",
        "\"Running against: \"",
        "\"\"",
        "'cli'",
        "\"link\"",
        "\"<div><a href='%s' class='text'>%s\"",
        "\"</a><div class='container'>%s</div></div>\"",
        "\"context\"",
        "\"link\"",
        "\"<span style='background-color:yellow'>%s</span>\"",
        "\"link\"",
        "\"Invalid input defined or SSL error for: \"",
        "'cli'",
        "\"link\"",
        "\"<div><a href='%s' class='text'>%s\"",
        "\"</a><div class='container'>%s</div></div>\"",
        "\"context\"",
        "\"link\"",
        "\"<span style='background-color:yellow'>%s</span>\"",
        "\"link\"",
        "'cli'"
    ],
    "variables": [
        "readBytesCustom",
        "readBytesCustom",
        "regex_str",
        "context_delimiter_str",
        "jsfiles",
        "items",
        "paths",
        "paths",
        "index",
        "path",
        "q",
        "sslcontext",
        "response",
        "sslcontext",
        "response",
        "data",
        "data",
        "data",
        "items",
        "match_str",
        "match_start",
        "match_end",
        "context_start_index",
        "context_end_index",
        "delimiter_len",
        "content_max_index",
        "context_start_index",
        "context_end_index",
        "context",
        "context",
        "item",
        "content",
        "content",
        "regex",
        "all_matches",
        "items",
        "items",
        "all_links",
        "no_dup_items",
        "items",
        "filtered_items",
        "hide",
        "s",
        "text_file",
        "file",
        "nopelist",
        "words",
        "url",
        "url",
        "url",
        "parser",
        "default_timeout",
        "args",
        "args",
        "input",
        "mode",
        "mode",
        "urls",
        "output",
        "file",
        "file",
        "url",
        "endpoints",
        "endpoint",
        "endpoint",
        "file",
        "new_endpoints",
        "url",
        "header",
        "body",
        "body",
        "url",
        "header",
        "body",
        "body"
    ],
    "comments": [
        "!/usr/bin/env python",
        "Python 3",
        "LinkFinder",
        "By Gerben_Javado",
        "Fix webbrowser bug for MacOS",
        "Import libraries",
        "Regex used",
        "Method 1 - URL",
        "Method 2 - URL Inspector Firefox",
        "Method 3 - Burp file",
        "Method 4 - Folder with a wildcard",
        "Method 5 - Local file",
        "Beautify",
        "Remove duplication",
        "Match Regex",
        "Remove other capture groups from regex results",
        "Parse command line",
        "Convert input to URLs or JS files",
        "Convert URLs to JS"
    ],
    "docstrings": [
        "'''\n    Error Messages\n    '''",
        "'''\n    Parse Input\n    '''",
        "'''\n    Send requests with Requests\n    '''",
        "'''\n    Parse Input\n    list_matches:       list of tuple (link, start_index, end_index)\n    content:            content to search for the context\n    include_delimiter   Set 1 to include delimiter in context\n    '''",
        "'''\n    Parse Input\n    content:    string of content to be searched\n    regex_str:  string of regex (The link should be in the group(1))\n    mode:       mode of parsing. Set 1 to include surrounding contexts in the result\n    more_regex: string of regex to filter the result\n    no_dup:     remove duplicated link (context is NOT counted)\n\n    Return the list of [\"link\": link, \"context\": context]\n    The context is optional if mode=1 is provided.\n    '''",
        "'''\n    Output to CLI\n    '''",
        "'''\n    Save as HTML file and open in the browser\n    '''",
        "'''\n                        <h1>File: <a href=\"%s\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">%s</a></h1>\n                        '''",
        "'''\n                <h1>File: <a href=\"%s\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">%s</a></h1>\n                '''"
    ],
    "functions": [
        "parser_error",
        "parser_input",
        "send_request",
        "getContext",
        "parser_file",
        "cli_output",
        "html_save",
        "check_url"
    ],
    "classes": []
}