{
    "identifiers": [
        "typing",
        "Callable",
        "Dict",
        "flwr",
        "client",
        "typing",
        "ClientLike",
        "flwr",
        "common",
        "ndarrays_to_parameters",
        "parameters_to_ndarrays",
        "flwr",
        "common",
        "typing",
        "Code",
        "EvaluateIns",
        "EvaluateRes",
        "FitIns",
        "FitRes",
        "GetParametersIns",
        "GetParametersRes",
        "GetPropertiesIns",
        "GetPropertiesRes",
        "NDArrays",
        "Status",
        "client",
        "Client",
        "numpy_client",
        "NumPyClient",
        "numpy_client",
        "has_evaluate",
        "numpyclient_has_evaluate",
        "numpy_client",
        "has_fit",
        "numpyclient_has_fit",
        "numpy_client",
        "has_get_parameters",
        "numpyclient_has_get_parameters",
        "numpy_client",
        "has_get_properties",
        "numpyclient_has_get_properties",
        "client_like",
        "ClientLike",
        "Client",
        "isinstance",
        "client_like",
        "NumPyClient",
        "_wrap_numpy_client",
        "client",
        "client_like",
        "client_like",
        "Client",
        "numpy_client",
        "NumPyClient",
        "numpy_client",
        "Client",
        "ins",
        "GetPropertiesIns",
        "GetPropertiesRes",
        "numpy_client",
        "get_properties",
        "config",
        "ins",
        "config",
        "GetPropertiesRes",
        "status",
        "Status",
        "code",
        "Code",
        "OK",
        "message",
        "properties",
        "properties",
        "Client",
        "ins",
        "GetParametersIns",
        "GetParametersRes",
        "numpy_client",
        "get_parameters",
        "config",
        "ins",
        "config",
        "ndarrays_to_parameters",
        "parameters",
        "GetParametersRes",
        "status",
        "Status",
        "code",
        "Code",
        "OK",
        "message",
        "parameters",
        "parameters_proto",
        "Client",
        "ins",
        "FitIns",
        "FitRes",
        "NDArrays",
        "parameters_to_ndarrays",
        "ins",
        "parameters",
        "numpy_client",
        "fit",
        "parameters",
        "ins",
        "config",
        "len",
        "results",
        "isinstance",
        "results",
        "isinstance",
        "results",
        "isinstance",
        "results",
        "EXCEPTION_MESSAGE_WRONG_RETURN_TYPE_FIT",
        "results",
        "ndarrays_to_parameters",
        "parameters_prime",
        "FitRes",
        "status",
        "Status",
        "code",
        "Code",
        "OK",
        "message",
        "parameters",
        "parameters_prime_proto",
        "num_examples",
        "num_examples",
        "metrics",
        "metrics",
        "Client",
        "ins",
        "EvaluateIns",
        "EvaluateRes",
        "NDArrays",
        "parameters_to_ndarrays",
        "ins",
        "parameters",
        "numpy_client",
        "evaluate",
        "parameters",
        "ins",
        "config",
        "len",
        "results",
        "isinstance",
        "results",
        "isinstance",
        "results",
        "isinstance",
        "results",
        "EXCEPTION_MESSAGE_WRONG_RETURN_TYPE_EVALUATE",
        "results",
        "EvaluateRes",
        "status",
        "Status",
        "code",
        "Code",
        "OK",
        "message",
        "loss",
        "loss",
        "num_examples",
        "num_examples",
        "metrics",
        "metrics",
        "client",
        "NumPyClient",
        "Client",
        "Dict",
        "Callable",
        "_constructor",
        "numpyclient_has_get_properties",
        "client",
        "client",
        "_get_properties",
        "numpyclient_has_get_parameters",
        "client",
        "client",
        "_get_parameters",
        "numpyclient_has_fit",
        "client",
        "client",
        "_fit",
        "numpyclient_has_evaluate",
        "client",
        "client",
        "_evaluate",
        "Client",
        "member_dict",
        "wrapper_class",
        "numpy_client",
        "client"
    ],
    "literals": [
        "\"Success\"",
        "\"Success\"",
        "\"Success\"",
        "\"Success\"",
        "\"__init__\"",
        "\"get_properties\"",
        "\"get_parameters\"",
        "\"fit\"",
        "\"evaluate\"",
        "\"NumPyClientWrapper\""
    ],
    "variables": [
        "EXCEPTION_MESSAGE_WRONG_RETURN_TYPE_FIT",
        "EXCEPTION_MESSAGE_WRONG_RETURN_TYPE_EVALUATE",
        "numpy_client",
        "properties",
        "parameters",
        "parameters_proto",
        "parameters",
        "results",
        "parameters_prime",
        "num_examples",
        "metrics",
        "parameters_prime_proto",
        "parameters",
        "results",
        "loss",
        "num_examples",
        "metrics",
        "member_dict",
        "member_dict",
        "member_dict",
        "member_dict",
        "member_dict",
        "wrapper_class"
    ],
    "comments": [
        "Copyright 2023 Flower Labs GmbH. All Rights Reserved.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "==============================================================================",
        "type: ignore",
        "type: ignore",
        "type: ignore",
        "Deconstruct FitIns",
        "Train",
        "type: ignore",
        "Return FitRes",
        "type: ignore",
        "Return EvaluateRes",
        "type: ignore",
        "Add wrapper type methods (if overridden)",
        "Create wrapper class",
        "Create and return an instance of the newly created class",
        "type: ignore"
    ],
    "docstrings": [
        "\"\"\"Wrapper for NumPyClient objects.\"\"\"",
        "\"\"\"\nNumPyClient.fit did not return a tuple with 3 elements.\nThe returned values should have the following type signature:\n\n    Tuple[NDArrays, int, Dict[str, Scalar]]\n\nExample\n-------\n\n    model.get_weights(), 10, {\"accuracy\": 0.95}\n\n\"\"\"",
        "\"\"\"\nNumPyClient.evaluate did not return a tuple with 3 elements.\nThe returned values should have the following type signature:\n\n    Tuple[float, int, Dict[str, Scalar]]\n\nExample\n-------\n\n    0.5, 10, {\"accuracy\": 0.95}\n\n\"\"\"",
        "\"\"\"Take any Client-like object and return it as a Client.\"\"\"",
        "\"\"\"Return the current client properties.\"\"\"",
        "\"\"\"Return the current local model parameters.\"\"\"",
        "\"\"\"Refine the provided parameters using the locally held dataset.\"\"\"",
        "\"\"\"Evaluate the provided parameters using the locally held dataset.\"\"\""
    ],
    "functions": [
        "to_client",
        "_constructor",
        "_get_properties",
        "_get_parameters",
        "_fit",
        "_evaluate",
        "_wrap_numpy_client"
    ],
    "classes": []
}