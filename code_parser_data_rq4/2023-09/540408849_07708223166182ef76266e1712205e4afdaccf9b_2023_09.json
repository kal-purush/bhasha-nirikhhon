{
    "identifiers": [
        "Test",
        "INestApplication",
        "ValidationPipe",
        "VersioningType",
        "RegistryKeyStorageService",
        "MikroORM",
        "MikroOrmModule",
        "KeysController",
        "StakingRouterModule",
        "key",
        "dvtModule",
        "curatedModule",
        "SRModuleStorageService",
        "ElMetaStorageService",
        "KeysService",
        "BatchProviderModule",
        "ExtendedJsonRpcBatchProvider",
        "nullTransport",
        "LoggerModule",
        "request",
        "FastifyAdapter",
        "NestFastifyApplication",
        "describe",
        "beforeEach",
        "MikroOrmModule",
        "LoggerModule",
        "nullTransport",
        "BatchProviderModule",
        "process",
        "StakingRouterModule",
        "ExtendedJsonRpcBatchProvider",
        "provider",
        "KeysController",
        "KeysService",
        "Test",
        "elMetaStorageService",
        "moduleRef",
        "ElMetaStorageService",
        "keysStorageService",
        "moduleRef",
        "RegistryKeyStorageService",
        "moduleStorageService",
        "moduleRef",
        "SRModuleStorageService",
        "moduleRef",
        "MikroORM",
        "generator",
        "app",
        "moduleRef",
        "FastifyAdapter",
        "app",
        "VersioningType",
        "app",
        "ValidationPipe",
        "app",
        "app",
        "afterEach",
        "keysStorageService",
        "moduleStorageService",
        "elMetaStorageService",
        "afterAll",
        "app",
        "describe",
        "it",
        "elMetaStorageService",
        "elMeta",
        "dvtModule",
        "key",
        "curatedModule",
        "key",
        "keysStorageService",
        "keys",
        "moduleStorageService",
        "dvtModule",
        "moduleStorageService",
        "curatedModule",
        "request",
        "app",
        "expect",
        "response",
        "expect",
        "response",
        "keys",
        "expect",
        "response",
        "expect",
        "keys",
        "expect",
        "response",
        "elMeta",
        "elMeta",
        "elMeta",
        "it",
        "elMetaStorageService",
        "elMeta",
        "dvtModule",
        "key",
        "curatedModule",
        "key",
        "keysStorageService",
        "keys",
        "request",
        "app",
        "expect",
        "response",
        "expect",
        "response",
        "it",
        "dvtModule",
        "key",
        "curatedModule",
        "key",
        "keysStorageService",
        "keys",
        "moduleStorageService",
        "curatedModule",
        "request",
        "app",
        "expect",
        "response",
        "expect",
        "response"
    ],
    "literals": [
        "'@nestjs/testing'",
        "'@nestjs/common'",
        "'../../common/registry'",
        "'@mikro-orm/core'",
        "'@mikro-orm/nestjs'",
        "'./keys.controller'",
        "'../../staking-router-modules/staking-router.module'",
        "'./key.fixture'",
        "'../../storage/module.fixture'",
        "'../../storage/sr-module.storage'",
        "'../../storage/el-meta.storage'",
        "'./keys.service'",
        "'@lido-nestjs/execution'",
        "'@lido-nestjs/logger'",
        "'supertest'",
        "'@nestjs/platform-fastify'",
        "'KeyController (e2e)'",
        "':memory:'",
        "'sqlite'",
        "'./**/*.entity.ts'",
        "string",
        "'The /keys requests'",
        "'should return an array of keys'",
        "'0x662e3e713207240b25d01324b6eccdc91493249a5048881544254994694530a5'",
        "'/v1/keys'",
        "'should return too early response if there are no modules in database'",
        "'0x662e3e713207240b25d01324b6eccdc91493249a5048881544254994694530a5'",
        "'/v1/keys'",
        "'Too early response'",
        "'should return too early response if there are no meta'",
        "'/v1/keys'",
        "'Too early response'"
    ],
    "variables": [
        "app",
        "keysStorageService",
        "moduleStorageService",
        "elMetaStorageService",
        "imports",
        "controllers",
        "providers",
        "moduleRef",
        "generator",
        "elMeta",
        "keys",
        "response",
        "elMeta",
        "keys",
        "response",
        "keys",
        "response"
    ],
    "comments": [
        "MikroOrmModule.forRoot({",
        "dbName: process.env.DB_NAME,",
        "type: 'postgresql',",
        "host: process.env.DB_HOST,",
        "port: parseInt(process?.env?.DB_PORT ?? '', 10),",
        "user: process.env.DB_USER,",
        "password: process.env.DB_PASSWORD,",
        "allowGlobalContext: true,",
        "autoLoadEntities: true,",
        "entities: ['./**/*.entity.ts'],",
        "}),",
        "sqlite3 only supports serializable transactions, ignoring the isolation level param",
        "TODO: use postgres",
        "TODO: mock provider",
        "lets save meta",
        "lets save keys",
        "lets save modules",
        "TODO: how does it work",
        "lets save meta",
        "lets save keys",
        "lets save keys"
    ],
    "docstrings": [],
    "functions": [
        "useFactory"
    ],
    "classes": []
}