{
    "identifiers": [
        "numpy",
        "np",
        "random",
        "rr",
        "matplotlib",
        "pyplot",
        "plt",
        "os",
        "sys",
        "shutil",
        "multiprocessing",
        "glob",
        "IPython",
        "number",
        "width",
        "height",
        "height",
        "width",
        "np",
        "ones",
        "shape",
        "dtype",
        "np",
        "zeros",
        "shape",
        "dtype",
        "rr",
        "choice",
        "shape",
        "rr",
        "choice",
        "shape",
        "Z",
        "A",
        "Y",
        "A",
        "stack",
        "append",
        "A",
        "B",
        "Y",
        "all",
        "A",
        "height",
        "Y",
        "A",
        "B",
        "nebs",
        "append",
        "A",
        "B",
        "walls",
        "append",
        "A",
        "B",
        "A",
        "height",
        "Y",
        "A",
        "B",
        "nebs",
        "append",
        "A",
        "B",
        "walls",
        "append",
        "A",
        "B",
        "B",
        "width",
        "Y",
        "A",
        "B",
        "nebs",
        "append",
        "A",
        "B",
        "walls",
        "append",
        "A",
        "B",
        "B",
        "width",
        "Y",
        "A",
        "B",
        "nebs",
        "append",
        "A",
        "B",
        "walls",
        "append",
        "A",
        "B",
        "nebs",
        "rr",
        "choice",
        "len",
        "nebs",
        "stack",
        "append",
        "A",
        "B",
        "Z",
        "nebs",
        "cho",
        "nebs",
        "cho",
        "Z",
        "walls",
        "cho",
        "walls",
        "cho",
        "nebs",
        "cho",
        "nebs",
        "cho",
        "Y",
        "nebs",
        "cho",
        "nebs",
        "cho",
        "Y",
        "walls",
        "cho",
        "walls",
        "cho",
        "stack",
        "append",
        "A",
        "B",
        "stack",
        "A",
        "height",
        "Y",
        "A",
        "A",
        "height",
        "Y",
        "A",
        "B",
        "width",
        "Y",
        "A",
        "B",
        "B",
        "width",
        "Y",
        "A",
        "B",
        "stack",
        "pop",
        "p",
        "p",
        "plt",
        "figure",
        "plt",
        "imshow",
        "Z",
        "cmap",
        "plt",
        "cm",
        "binary",
        "interpolation",
        "plt",
        "xticks",
        "plt",
        "yticks",
        "plt",
        "savefig",
        "format",
        "number",
        "np",
        "savetxt",
        "format",
        "number",
        "Z",
        "fmt",
        "number",
        "width",
        "height",
        "height",
        "width",
        "np",
        "random",
        "choice",
        "size",
        "shape",
        "p",
        "plt",
        "figure",
        "plt",
        "imshow",
        "Z",
        "cmap",
        "plt",
        "cm",
        "binary",
        "interpolation",
        "plt",
        "xticks",
        "plt",
        "yticks",
        "plt",
        "savefig",
        "format",
        "number",
        "np",
        "savetxt",
        "format",
        "number",
        "Z",
        "fmt",
        "os",
        "path",
        "exists",
        "shutil",
        "rmtree",
        "os",
        "path",
        "exists",
        "shutil",
        "rmtree",
        "os",
        "path",
        "exists",
        "os",
        "remove",
        "i",
        "os",
        "mkdir",
        "i",
        "os",
        "mkdir",
        "i",
        "sys",
        "argv",
        "multiprocessing",
        "freeze_support",
        "multiprocessing",
        "cpu_count",
        "multiprocessing",
        "Pool",
        "processes",
        "num_proc",
        "i",
        "i",
        "n_grids",
        "pool",
        "randGridMaze",
        "nn",
        "i",
        "n_grids",
        "i",
        "nn",
        "pool",
        "backTrackerMaze",
        "nn",
        "pool",
        "close",
        "pool",
        "join"
    ],
    "literals": [
        "'nearest'",
        "\"pics/backTrackerMazes/backTrackerMaze{0:0=2d}.png\"",
        "\"arrs/backTrackerMazes/{0:0=2d}.txt\"",
        "'%d'",
        "'nearest'",
        "\"pics/randGrid/maze{0:0=2d}.png\"",
        "\"arrs/randGrid/{0:0=2d}.txt\"",
        "'%d'",
        "\"__main__\"",
        "\"arrs\"",
        "\"arrs\"",
        "\"pics\"",
        "\"pics\"",
        "\"maze.png\"",
        "\"maze.png\"",
        "\"\"",
        "\"/backTrackerMazes/\"",
        "\"/randGrid/\"",
        "\"pics\"",
        "\"arrs\""
    ],
    "variables": [
        "shape",
        "Z",
        "Y",
        "stack",
        "A",
        "B",
        "B",
        "B",
        "nebs",
        "walls",
        "cho",
        "A",
        "B",
        "B",
        "B",
        "p",
        "A",
        "B",
        "shape",
        "Z",
        "n_grids",
        "num_proc",
        "pool",
        "nn",
        "nn"
    ],
    "comments": [
        "Build actual maze",
        "Maze-grid: 1's are black, 0's are white",
        "Inititally set all cells as unvisited.",
        "Visted or not",
        "stack of visted cells",
        "Recursive backtracker",
        "1 Make the initial cell the current cell and mark it as visited.",
        "Random Initial cell",
        "Making it the current cell",
        "Marking it as visited",
        "2 While there are unvisited cells",
        "print(A,B)",
        "2.1 If the current cell has any neighbors which have not been visited",
        "2.1.1 Choose randomly one of the unvisited neighbors",
        "2.1.2 Push the current cell to the stack",
        "2.1.3 Remove the wall between the current cell and the chosen cell",
        "2.1.4 Make the chosen cell the current cell and mark it as visited",
        "2.2. Else if stack is not empty",
        "2.2.1 Pop a cell from the stack",
        "2.2.2 Make it the current cell",
        "specify the number of grids you want to generate",
        "for python 3.6 uncomment the line below, and comment the line above",
        "num_proc = os.cpu_count()"
    ],
    "docstrings": [],
    "functions": [
        "backTrackerMaze",
        "randGridMaze"
    ],
    "classes": []
}