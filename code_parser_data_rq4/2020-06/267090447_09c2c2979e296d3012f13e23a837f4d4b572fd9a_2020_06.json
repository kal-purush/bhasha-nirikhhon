{
    "identifiers": [
        "io",
        "jenkins",
        "plugins",
        "ml",
        "hudson",
        "Extension",
        "hudson",
        "FilePath",
        "hudson",
        "Launcher",
        "hudson",
        "model",
        "AbstractBuild",
        "hudson",
        "model",
        "AbstractProject",
        "hudson",
        "model",
        "BuildListener",
        "hudson",
        "tasks",
        "BuildWrapper",
        "hudson",
        "tasks",
        "BuildWrapperDescriptor",
        "io",
        "jenkins",
        "plugins",
        "ml",
        "model",
        "ParsableFile",
        "org",
        "kohsuke",
        "stapler",
        "DataBoundConstructor",
        "org",
        "kohsuke",
        "stapler",
        "DataBoundSetter",
        "javax",
        "annotation",
        "Nonnull",
        "java",
        "io",
        "File",
        "java",
        "io",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Optional",
        "java",
        "util",
        "logging",
        "Logger",
        "parsableFiles",
        "LOGGER",
        "Logger",
        "getLogger",
        "getName",
        "DataBoundConstructor",
        "parsableFiles",
        "parsableFiles",
        "parsableFiles",
        "DataBoundSetter",
        "parsableFiles",
        "parsableFiles",
        "parsableFiles",
        "Override",
        "build",
        "launcher",
        "listener",
        "LOGGER",
        "info",
        "projectWorkspace",
        "Optional",
        "ofNullable",
        "build",
        "getWorkspace",
        "projectWorkspace",
        "ifPresent",
        "workspace",
        "file",
        "parsableFiles",
        "copyFrom",
        "file",
        "getFileName",
        "LOGGER",
        "info",
        "format",
        "copyFrom",
        "getName",
        "workspace",
        "getName",
        "copyFrom",
        "copyTo",
        "workspace",
        "copyFrom",
        "getName",
        "LOGGER",
        "info",
        "e",
        "e",
        "printStackTrace",
        "listener",
        "getLogger",
        "Override",
        "build",
        "listener",
        "projectWorkspace",
        "ifPresent",
        "workspace",
        "parsableFiles",
        "stream",
        "file",
        "file",
        "file",
        "isDeleteFilesAfterBuild",
        "file",
        "file",
        "getFileName",
        "forEach",
        "file",
        "copyToFile",
        "file",
        "getName",
        "child",
        "workspace",
        "copyToFile",
        "child",
        "e",
        "e",
        "printStackTrace",
        "listener",
        "getLogger",
        "Extension",
        "Override",
        "Nonnull",
        "Override",
        "item"
    ],
    "literals": [
        "\"Recognize project workspace and folder\"",
        "\"Copying file from %s to %s\"",
        "\"Saving name\"",
        "\"Add Files to the workspace\""
    ],
    "variables": [
        "parsableFiles"
    ],
    "comments": [
        "Get the workspace",
        "Copy each file to the workspace",
        "Delete the file after build if necessary"
    ],
    "docstrings": [
        "* The MIT License\n *\n * Copyright 2020 Loghi Perinpanayagam.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE."
    ],
    "functions": [
        "FileParser",
        "setParsableFiles",
        "Environment",
        "setUp",
        "tearDown",
        "DescriptorImpl",
        "getDisplayName",
        "isApplicable"
    ],
    "classes": [
        "FileParser",
        "DescriptorImpl"
    ]
}