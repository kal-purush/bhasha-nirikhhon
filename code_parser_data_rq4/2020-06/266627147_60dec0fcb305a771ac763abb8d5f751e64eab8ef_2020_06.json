{
    "identifiers": [
        "button1",
        "data",
        "data",
        "sendAnalytics",
        "button3",
        "button4",
        "button4",
        "button4",
        "message",
        "num1",
        "message",
        "button4",
        "button4",
        "clickHandler",
        "button4",
        "clickHandler",
        "button4",
        "clickHandler",
        "name",
        "age",
        "name",
        "num1",
        "num2",
        "num1",
        "num2",
        "num1",
        "num2",
        "num1",
        "num2",
        "num1",
        "num1"
    ],
    "literals": [
        "\"button\"",
        "\"click\"",
        "\"clicked!!!\"",
        "\"\"",
        "\"---------------------noimplicitAny----------------------------\"",
        "\"analytics!!!!!!\"",
        "\"\"",
        "\"---------------------strictNullChecks----------------------------\"",
        "\"button\"",
        "\"click\"",
        "\"clicked!!!\"",
        "\"Nonexistingbutton\"",
        "\"button 4 is \"",
        "\"click\"",
        "\"clicked!!!\"",
        "\"\"",
        "\"---------------------strictBindCallApply----------------------------\"",
        "\"button\"",
        "string",
        "\"user clicked \"",
        "\"click\"",
        "\"hiiii\"",
        "\"click\"",
        "\"click\"",
        "\"\"",
        "\"---------------------Code quality options----------------------------\"",
        "\"\"",
        "\"--------------------------noUnusedLocals---------------\"",
        "\"noUnusedLocals allowed\"",
        "\"\"",
        "\"--------------------------noUnusedParameters---------------\"",
        "string",
        "\"\"",
        "\"--------------------------noImplicitReturns---------------\"",
        "\"correct your input\"",
        "\"\"",
        "\"--------------------------noFallthroughCasesInSwitch---------------\"",
        "\"received 1\"",
        "\"received 2 or 3\"",
        "\"received 4\"",
        "\"received 5\""
    ],
    "variables": [
        "button1",
        "button3",
        "button4",
        "button5",
        "abc"
    ],
    "comments": [
        "remove exclimation mark for demo",
        "ts would give an error here that button might be null to solve it temporarily",
        "we add an ! in above line to tell ts that a button will exist",
        "but how does ts know that document will exist and it has a method querySelector()",
        "we can argue that vanilla js knows this",
        "but we can write nodejs code in ts and document doesnt exist there",
        "ts knows about it by the lib option in tsconfig",
        "it is commented by default",
        "lets uncomment it and leave it blank we will notice ts no longer knows a lot of stuff now like document",
        "--------------------strict type checking options------------------",
        "---------------------noimplicitAny----------------------------",
        "set noimplicitAny to true to demo",
        "the below function data parameter  imlicitly has any type",
        "and will give an error",
        "---------------------noimplicitAny Ends----------------------------",
        "---------------------strictNullChecks----------------------------",
        "set strictNullChecks to true for demo",
        "ts would give an error here that button2 might be null if no button exists in html file",
        "but if we set strictNullChecks to false it will stop complaining",
        "but the issue will remain and an exception might occur",
        "uncomment to demo",
        "const button2 = document.querySelector(\"button\");",
        "button2.addEventListener(\"click\", () => {\n  console.log(\"clicked!!!\");\n});",
        "if  as a developer we are absolutely sure that the button exists",
        "we can use the ! mark in decleration",
        "ts would not complain even if strictNullChecks is true  as we are explicitly telling",
        "ts thatbutton 3 will exist",
        "another way here is to wrap the usage in an if check",
        "ts would not complain even if strictNullChecks is true",
        "as the if check would avoid null reference",
        "---------------------strictNullChecks Ends----------------------------",
        "---------------------strictBindCallApply----------------------------",
        "set strictBindCallApply to true to demo",
        "below code will give an error as addEventListener expects a function as second",
        "argument and apply returns void in this case as clickHandler retruns void",
        "but error will only be reported if  strictBindCallApply is true",
        "following code should give an error as arguments expected are string number",
        "but passed are number,number",
        "following code should give an error as arguments expected are string number",
        "but passed are number,number as well as call returns void in this case",
        "as clickHandler retruns void but expectation of addEventListener is a function",
        "---------------------strictBindCallApply Ends----------------------------",
        "---------------------Code quality options----------------------------",
        "--------------------------noUnusedLocals---------------",
        "set noUnusedLocals to true to demo this",
        "below is an unused local variable",
        "ts will give an error on compilation if noUnusedLocals is true",
        "--------------------------noUnusedLocals Ends---------------",
        "--------------------------noUnusedParameters---------------",
        "set noUnusedParameters to true to demo this",
        "only name parameter is used",
        "age parameter is not used",
        "if noUnusedParameters is set to true it will give an error",
        "--------------------------noUnusedParameters Ends---------------",
        "--------------------------noImplicitReturns---------------",
        "set noImplicitReturns to true to demo this",
        "this branch doesnt return anything",
        "if noImplicitReturnsis set to true i will give an error",
        "this is allowed",
        "--------------------------noImplicitReturns Ends ---------------",
        "set noFallthroughCasesInSwitch to true to demo this",
        "below is allowed",
        "below not allowed as below we have a missing break",
        "if noFallthroughCasesInSwitch is true ts will give an error",
        "--------------------------noFallthroughCasesInSwitch Ends ---------------"
    ],
    "docstrings": [],
    "functions": [
        "sendAnalytics",
        "clickHandler",
        "demoNoUnusedLocals",
        "demoNoUnusedParameters",
        "demoNoImplicitReturns",
        "demoNoFallthroughCasesInSwitch"
    ],
    "classes": []
}