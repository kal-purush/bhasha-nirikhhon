{
    "identifiers": [
        "numpy",
        "np",
        "jax",
        "pytest",
        "tensornetwork",
        "backends",
        "jax",
        "jitted_functions",
        "_generate_arnoldi_factorization",
        "jax",
        "config",
        "update",
        "pytest",
        "mark",
        "parametrize",
        "np",
        "float64",
        "np",
        "complex128",
        "dtype",
        "np",
        "random",
        "seed",
        "np",
        "random",
        "rand",
        "D",
        "D",
        "astype",
        "dtype",
        "np",
        "random",
        "rand",
        "D",
        "astype",
        "dtype",
        "jax",
        "tree_util",
        "jax",
        "jit",
        "vector",
        "matrix",
        "matrix",
        "vector",
        "_generate_arnoldi_factorization",
        "jax",
        "jax",
        "numpy",
        "zeros",
        "ncv",
        "D",
        "dtype",
        "dtype",
        "jax",
        "numpy",
        "zeros",
        "ncv",
        "ncv",
        "dtype",
        "dtype",
        "arnoldi",
        "matvec",
        "mat",
        "x",
        "kv",
        "H",
        "start",
        "ncv",
        "jax",
        "numpy",
        "transpose",
        "kv",
        "it",
        "H",
        "it",
        "it",
        "kv",
        "it",
        "H",
        "it",
        "it",
        "np",
        "zeros",
        "Vm",
        "shape",
        "np",
        "testing",
        "assert_almost_equal",
        "mat",
        "Vm",
        "Vm",
        "Hm",
        "fm",
        "em",
        "np",
        "zeros",
        "it",
        "Vm",
        "shape",
        "astype",
        "dtype"
    ],
    "literals": [
        "'jax_enable_x64'",
        "\"dtype\""
    ],
    "variables": [
        "D",
        "mat",
        "x",
        "arnoldi",
        "ncv",
        "kv",
        "H",
        "start",
        "kv",
        "H",
        "it",
        "_",
        "Vm",
        "Hm",
        "fm",
        "em",
        "em"
    ],
    "comments": [
        "pylint: disable=line-too-long"
    ],
    "docstrings": [],
    "functions": [
        "test_arnoldi_factorization",
        "matvec"
    ],
    "classes": []
}