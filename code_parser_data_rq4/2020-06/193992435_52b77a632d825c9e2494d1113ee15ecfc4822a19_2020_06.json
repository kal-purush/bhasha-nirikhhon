{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Nuke",
        "Common",
        "CI",
        "GitHubActions",
        "Rocket",
        "Surgery",
        "Nuke",
        "Rocket",
        "Surgery",
        "Nuke",
        "ContinuousIntegration",
        "Rocket",
        "Surgery",
        "Nuke",
        "DotNetCore",
        "Rocket",
        "Surgery",
        "Nuke",
        "GithubActions",
        "AzurePipelinesSteps",
        "AutoGenerate",
        "InvokeTargets",
        "nameof",
        "Default",
        "NonEntryTargets",
        "nameof",
        "ICIEnvironment",
        "CIEnvironment",
        "nameof",
        "ITriggerCodeCoverageReports",
        "Trigger_Code_Coverage_Reports",
        "nameof",
        "ITriggerCodeCoverageReports",
        "Generate_Code_Coverage_Report_Cobertura",
        "nameof",
        "IGenerateCodeCoverageBadges",
        "Generate_Code_Coverage_Badges",
        "nameof",
        "IGenerateCodeCoverageReport",
        "Generate_Code_Coverage_Report",
        "nameof",
        "IGenerateCodeCoverageSummary",
        "Generate_Code_Coverage_Summary",
        "nameof",
        "Default",
        "ExcludedTargets",
        "nameof",
        "ICanClean",
        "Clean",
        "nameof",
        "ICanRestoreWithDotNetCore",
        "Restore",
        "nameof",
        "ICanRestoreWithDotNetCore",
        "DotnetToolRestore",
        "Parameters",
        "nameof",
        "IHaveCodeCoverage",
        "CoverageDirectory",
        "nameof",
        "IHaveOutputArtifacts",
        "ArtifactsDirectory",
        "nameof",
        "Verbosity",
        "nameof",
        "IHaveConfiguration",
        "Configuration",
        "GitHubActionsSteps",
        "GitHubActionsImage",
        "MacOsLatest",
        "GitHubActionsImage",
        "WindowsLatest",
        "GitHubActionsImage",
        "UbuntuLatest",
        "AutoGenerate",
        "On",
        "GitHubActionsTrigger",
        "Push",
        "OnPushTags",
        "OnPushBranches",
        "OnPullRequestBranches",
        "InvokedTargets",
        "nameof",
        "Default",
        "NonEntryTargets",
        "nameof",
        "ICIEnvironment",
        "CIEnvironment",
        "nameof",
        "ITriggerCodeCoverageReports",
        "Trigger_Code_Coverage_Reports",
        "nameof",
        "ITriggerCodeCoverageReports",
        "Generate_Code_Coverage_Report_Cobertura",
        "nameof",
        "IGenerateCodeCoverageBadges",
        "Generate_Code_Coverage_Badges",
        "nameof",
        "IGenerateCodeCoverageReport",
        "Generate_Code_Coverage_Report",
        "nameof",
        "IGenerateCodeCoverageSummary",
        "Generate_Code_Coverage_Summary",
        "nameof",
        "Default",
        "ExcludedTargets",
        "nameof",
        "ICanClean",
        "Clean",
        "nameof",
        "ICanRestoreWithDotNetCore",
        "DotnetToolRestore",
        "Enhancements",
        "nameof",
        "Middleware",
        "PrintBuildVersion",
        "PrintCIEnvironment",
        "UploadLogs",
        "RocketSurgeonGitHubActionsConfiguration",
        "configuration",
        "configuration",
        "Jobs",
        "First",
        "z",
        "Name",
        "buildJob",
        "Steps",
        "OfType",
        "CheckoutStep",
        "Single",
        "buildJob",
        "Steps",
        "InsertRange",
        "buildJob",
        "Steps",
        "IndexOf",
        "checkoutStep",
        "BaseGitHubActionsStep",
        "RunStep",
        "Run",
        "SetupDotNetStep",
        "DotNetVersion",
        "SetupDotNetStep",
        "DotNetVersion",
        "RunStep",
        "Shell",
        "GithubActionShell",
        "Pwsh",
        "Run",
        "buildJob",
        "Steps",
        "Add",
        "UsingStep",
        "Uses",
        "With",
        "buildJob",
        "Steps",
        "Add",
        "UploadArtifactStep",
        "Name",
        "Path",
        "If",
        "buildJob",
        "Steps",
        "Add",
        "UploadArtifactStep",
        "Name",
        "Path",
        "If",
        "buildJob",
        "Steps",
        "Add",
        "UploadArtifactStep",
        "Name",
        "Path",
        "If",
        "buildJob",
        "Steps",
        "Add",
        "UploadArtifactStep",
        "Name",
        "Path",
        "If",
        "configuration"
    ],
    "literals": [
        "\"ci\"",
        "\"v*\"",
        "\"master\"",
        "\"next\"",
        "\"master\"",
        "\"next\"",
        "\"Build\"",
        "\"Fetch all history for all tags and branches\"",
        "\"git fetch --prune --unshallow\"",
        "\"Use .NET Core 2.1 SDK\"",
        "\"2.1.x\"",
        "\"Use .NET Core 3.1 SDK\"",
        "\"3.1.x\"",
        "\"ðŸª“ **DOTNET HACK** ðŸª“\"",
        "\"Publish Coverage\"",
        "\"codecov/codecov-action@v1\"",
        "\"name\"",
        "\"actions-${{ matrix.os }}\"",
        "\"fail_ci_if_error\"",
        "\"true\"",
        "\"Publish logs\"",
        "\"logs\"",
        "\"artifacts/logs/\"",
        "\"always()\"",
        "\"Publish coverage data\"",
        "\"coverage\"",
        "\"coverage/\"",
        "\"always()\"",
        "\"Publish test data\"",
        "\"test data\"",
        "\"artifacts/test/\"",
        "\"always()\"",
        "\"Publish NuGet Packages\"",
        "\"nuget\"",
        "\"artifacts/nuget/\"",
        "\"always()\""
    ],
    "variables": [
        "buildJob",
        "checkoutStep"
    ],
    "comments": [
        "For fetch all",
        "checkoutStep.FetchDepth = 0;",
        "- publish: \"${{ parameters.Artifacts }}/logs/\"\n    displayName: Publish Logs\n    artifact: \"Logs${{ parameters.Postfix }}\"\n    condition: always()\n\n  - publish: ${{ parameters.Coverage }}\n    displayName: Publish Coverage\n    artifact: \"Coverage${{ parameters.Postfix }}\"\n    condition: always()\n\n  - publish: \"${{ parameters.Artifacts }}/nuget/\"\n    displayName: Publish NuGet Artifacts\n    artifact: \"NuGet${{ parameters.Postfix }}\"\n    condition: always()"
    ],
    "docstrings": [],
    "functions": [
        "RocketSurgeonGitHubActionsConfiguration",
        "Middleware"
    ],
    "classes": [
        "Solution"
    ]
}