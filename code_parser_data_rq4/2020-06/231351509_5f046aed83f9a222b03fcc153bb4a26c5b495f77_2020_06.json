{
    "identifiers": [
        "copy",
        "deepcopy",
        "typing",
        "Any",
        "Type",
        "Union",
        "_GenericAlias",
        "_SpecialForm",
        "tyaml",
        "types",
        "get_mappings",
        "yaml",
        "FullLoader",
        "MappingNode",
        "SequenceNode",
        "cls",
        "isinstance",
        "cls",
        "_GenericAlias",
        "isinstance",
        "cls",
        "_SpecialForm",
        "cls",
        "Any",
        "Union",
        "_GenericAlias",
        "cls",
        "TypeOrGeneric",
        "cls",
        "__origin__",
        "loader",
        "node",
        "typ",
        "fld_mappings",
        "loader",
        "construct_mapping",
        "node",
        "cls_field",
        "fields",
        "yml_field",
        "cls_field",
        "yml_field",
        "fld_mappings",
        "items",
        "yml_field",
        "fields",
        "typ",
        "kwargs",
        "typ",
        "typ",
        "__module__",
        "typ",
        "typ",
        "loader",
        "Type",
        "FullLoader",
        "base_path",
        "_type_tag",
        "typ",
        "AttributeError",
        "get_mappings",
        "typ",
        "field_mappings",
        "loader",
        "add_constructor",
        "tag",
        "l",
        "n",
        "__kwarg_constructor",
        "l",
        "n",
        "typ",
        "field_mappings",
        "copy",
        "loader",
        "add_path_resolver",
        "tag",
        "base_path",
        "MappingNode",
        "hasattr",
        "typ",
        "field",
        "f_typ",
        "typ",
        "__annotations__",
        "items",
        "f_typ",
        "deepcopy",
        "base_path",
        "el_path",
        "append",
        "field",
        "_add_path_resolvers",
        "f_typ",
        "loader",
        "el_path",
        "typ",
        "TypeOrGeneric",
        "loader",
        "Type",
        "FullLoader",
        "base_path",
        "base_path",
        "base_path",
        "_is_generic",
        "typ",
        "typ",
        "__args__",
        "_real_cls",
        "typ",
        "typ",
        "Union",
        "len",
        "args",
        "issubclass",
        "args",
        "_add_single_cls_loader",
        "args",
        "loader",
        "base_path",
        "join",
        "t",
        "t",
        "args",
        "typ",
        "args",
        "base_path",
        "append",
        "SequenceNode",
        "_add_path_resolvers",
        "el_type",
        "loader",
        "base_path",
        "issubclass",
        "typ",
        "args",
        "base_path",
        "append",
        "MappingNode",
        "_add_path_resolvers",
        "el_type",
        "loader",
        "base_path",
        "_add_single_cls_loader",
        "typ",
        "loader",
        "base_path",
        "as_type",
        "Type",
        "FullLoader",
        "FullLoader",
        "_add_path_resolvers",
        "as_type",
        "TypedLoader",
        "TypedLoader"
    ],
    "literals": [
        "f\"!!python/object:{typ.__module__}.{typ.__name__}\"",
        "\"__annotations__\"",
        "f\"Only Optional[...] is allowed but\"",
        "f\"Union[{', '.join(t.__name__ for t in args)}] was given\"",
        "', '"
    ],
    "variables": [
        "TypeOrGeneric",
        "fields",
        "kwargs",
        "tag",
        "field_mappings",
        "el_path",
        "base_path",
        "base_path",
        "args",
        "typ",
        "el_type",
        "el_type"
    ],
    "comments": [
        "Optional[...] fields",
        "go deeper",
        "convert typing generics to class",
        "given type is Optional",
        "type: type",
        "pylint: disable=too-many-ancestors",
        "we need to add resolver only to the root typed item"
    ],
    "docstrings": [
        "\"\"\"Construct new loader class supporting current class structure\"\"\"",
        "\"\"\"Custom loader with typed resolver\"\"\""
    ],
    "functions": [
        "_is_generic",
        "_real_cls",
        "__kwarg_constructor",
        "_type_tag",
        "_add_single_cls_loader",
        "_add_path_resolvers",
        "special_loader"
    ],
    "classes": [
        "TypedLoader"
    ]
}