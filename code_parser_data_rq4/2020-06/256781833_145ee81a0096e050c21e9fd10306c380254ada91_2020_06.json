{
    "identifiers": [
        "logging",
        "argparse",
        "Namespace",
        "typing",
        "Optional",
        "name",
        "args",
        "Optional",
        "Namespace",
        "logging",
        "Logger",
        "logging",
        "getLogger",
        "logging",
        "Formatter",
        "logging",
        "StreamHandler",
        "sys",
        "stderr",
        "err_handler",
        "setFormatter",
        "log_formatter",
        "err_handler",
        "setLevel",
        "logging",
        "WARNING",
        "logger",
        "addHandler",
        "err_handler",
        "args",
        "args",
        "logfile",
        "logdir",
        "args",
        "logfile",
        "parents",
        "logdir",
        "Path",
        "cwd",
        "logdir",
        "mkdir",
        "exist_ok",
        "args",
        "logfile",
        "open",
        "OSError",
        "logger",
        "error",
        "args",
        "logfile",
        "exc_info",
        "SystemExit",
        "logging",
        "StreamHandler",
        "logstream",
        "file_handler",
        "setFormatter",
        "err_formatter",
        "file_handler",
        "setLevel",
        "logging",
        "INFO",
        "logger",
        "addHandler",
        "file_handler",
        "logger",
        "build_logger"
    ],
    "literals": [
        "\"[%(asctime)s] [%(name)s] [%(levelname)s] %(message)s\"",
        "\"w\"",
        "\"Could not open %s for logging\""
    ],
    "variables": [
        "logger",
        "log_formatter",
        "err_handler",
        "logstream",
        "file_handler",
        "logger"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "Instantiate logger",
        "Common format for logstrings",
        "StreamHandler for default error handling (sys.stderr)",
        "Streamhandler for optional logfile",
        "If the logfile is going in another directory, we must",
        "create it/check if it's there",
        "Substitute meaningful error code when known",
        "If imported as a module, create a logging.Logger instance"
    ],
    "docstrings": [
        "\"\"\"Provides logging for the simple_network_sim module.\"\"\"",
        "\"\"\"Create and return a logging.Logger instance.\n    \n    :param name: Name for the logger. Default: __name__\n    :param args: argparse.Namespace; args.logfile (pathlib.Path) is used to create a logfile if present\n    \"\"\""
    ],
    "functions": [
        "build_logger"
    ],
    "classes": []
}