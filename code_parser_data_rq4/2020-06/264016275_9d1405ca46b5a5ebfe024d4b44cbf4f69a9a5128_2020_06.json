{
    "identifiers": [
        "src",
        "tools",
        "src",
        "preprocessing",
        "tree_plans",
        "codecs",
        "os",
        "collections",
        "defaultdict",
        "re",
        "json",
        "random",
        "split_data",
        "os",
        "system",
        "format",
        "base_path",
        "os",
        "system",
        "format",
        "base_path",
        "format",
        "sprp_root",
        "defaultdict",
        "defaultdict",
        "defaultdict",
        "defaultdict",
        "defaultdict",
        "parse_RDF_xmls",
        "open",
        "raw_data_file_path",
        "f",
        "f",
        "readline",
        "line",
        "re",
        "match",
        "line",
        "complex_counter",
        "complex_counter",
        "format",
        "complex_counter",
        "line",
        "split",
        "strip",
        "f",
        "readline",
        "complex_sents",
        "append",
        "complex_sent",
        "strip",
        "f",
        "readline",
        "f",
        "readline",
        "f",
        "readline",
        "category_RDF_id",
        "split",
        "split",
        "split",
        "strip",
        "split",
        "split",
        "strip",
        "split",
        "split",
        "strip",
        "domain_to_sent_ids",
        "sent_domain",
        "add",
        "sentence_id",
        "domain_triples2eids2rdfs",
        "sent_domain",
        "sent_triples_amount",
        "sent_eid",
        "rdf",
        "RDF_triples_in_sent",
        "entity_to_sent_id",
        "rdf",
        "add",
        "sentence_id",
        "relation_to_sent_id",
        "rdf",
        "add",
        "sentence_id",
        "entity_to_sent_id",
        "rdf",
        "add",
        "sentence_id",
        "g",
        "group_to_rdfs",
        "rdf",
        "RDF_triples_in_sent",
        "join",
        "rdf",
        "rdf_str",
        "group_to_rdfs",
        "g",
        "candidate_groups",
        "add",
        "g",
        "len",
        "candidate_groups",
        "candidate_groups",
        "len",
        "candidate_groups",
        "candidate_groups",
        "candidate_groups_list",
        "g",
        "candidate_groups_list",
        "e",
        "group_to_rdfs",
        "g",
        "group_to_rdfs",
        "chosen_group",
        "add",
        "e",
        "group_to_rdfs",
        "g",
        "g",
        "candidate_groups_list",
        "s",
        "group_to_sent_ids",
        "g",
        "group_to_sent_ids",
        "chosen_group",
        "add",
        "s",
        "group_to_sent_ids",
        "g",
        "len",
        "candidate_groups",
        "format",
        "group_counter",
        "group_counter",
        "group_to_sent_ids",
        "chosen_group",
        "add",
        "sentence_id",
        "rdf",
        "RDF_triples_in_sent",
        "join",
        "rdf",
        "group_to_rdfs",
        "chosen_group",
        "add",
        "rdf_str",
        "f",
        "readline",
        "f",
        "readline",
        "format",
        "len",
        "group_to_rdfs",
        "g",
        "group_to_rdfs",
        "format",
        "g",
        "len",
        "group_to_rdfs",
        "g",
        "len",
        "group_to_sent_ids",
        "g",
        "format",
        "sum",
        "len",
        "group_to_sent_ids",
        "g",
        "g",
        "group_to_sent_ids",
        "len",
        "group_to_sent_ids",
        "format",
        "complex_counter",
        "format",
        "sum",
        "len",
        "group_to_sent_ids",
        "g",
        "g",
        "group_to_sent_ids",
        "format",
        "len",
        "complex_sents",
        "format",
        "len",
        "complex_sents",
        "random",
        "seed",
        "defaultdict",
        "defaultdict",
        "relation",
        "relation_to_sent_id",
        "group",
        "group_to_sent_ids",
        "len",
        "relation_to_sent_id",
        "relation",
        "intersection",
        "group_to_sent_ids",
        "group",
        "relation_to_groups",
        "relation",
        "add",
        "group",
        "relation",
        "relation_to_groups",
        "group",
        "relation_to_groups",
        "relation",
        "group",
        "allocated_groups",
        "covered",
        "random",
        "choice",
        "relation_to_groups",
        "relation",
        "RDFs_relations_split",
        "group_to_sent_ids",
        "choice",
        "allocated_groups",
        "add",
        "choice",
        "group",
        "group_to_sent_ids",
        "group",
        "allocated_groups",
        "len",
        "group_to_sent_ids",
        "group",
        "random",
        "choice",
        "choices",
        "RDFs_relations_split",
        "choice",
        "group_to_sent_ids",
        "group",
        "allocated_groups",
        "add",
        "group",
        "len",
        "RDFs_relations_split",
        "choices",
        "choices",
        "remove",
        "len",
        "RDFs_relations_split",
        "choices",
        "choices",
        "remove",
        "codecs",
        "open",
        "base_path",
        "fp",
        "json",
        "dump",
        "RDFs_relations_split",
        "fp",
        "s",
        "codecs",
        "open",
        "base_path",
        "format",
        "s",
        "writelines",
        "n",
        "n",
        "sorted",
        "RDFs_relations_split",
        "s",
        "upper",
        "s",
        "RDFs_relations_split",
        "format",
        "s",
        "len",
        "RDFs_relations_split",
        "s",
        "relations_split_stats",
        "RDFs_relations_split",
        "relation_to_sent_id",
        "entities_split_stats",
        "RDFs_relations_split",
        "entity_to_sent_id",
        "data_split",
        "relation_to_sent_id",
        "relation",
        "relation_to_sent_id",
        "sent_id",
        "relation_to_sent_id",
        "relation",
        "sent_id",
        "data_split",
        "count_dev",
        "sent_id",
        "data_split",
        "count_train",
        "sent_id",
        "data_split",
        "count_test",
        "count_dev",
        "count_train",
        "dev_relations_in_train",
        "count_dev",
        "dev_relations",
        "count_test",
        "count_train",
        "test_relations_in_train",
        "count_test",
        "test_relations",
        "format",
        "dev_relations_in_train",
        "dev_relations",
        "dev_relations_in_train",
        "dev_relations",
        "format",
        "test_relations_in_train",
        "test_relations",
        "test_relations_in_train",
        "test_relations",
        "data_split",
        "entity_to_sent_id",
        "e",
        "entity_to_sent_id",
        "sent_id",
        "entity_to_sent_id",
        "e",
        "sent_id",
        "data_split",
        "count_dev",
        "sent_id",
        "data_split",
        "count_train",
        "sent_id",
        "data_split",
        "count_test",
        "count_dev",
        "count_train",
        "dev_entities_in_train",
        "count_dev",
        "dev_entities",
        "count_test",
        "count_train",
        "test_entities_in_train",
        "count_test",
        "test_entities",
        "format",
        "dev_entities_in_train",
        "dev_entities",
        "dev_entities_in_train",
        "dev_entities",
        "format",
        "test_entities_in_train",
        "test_entities",
        "test_entities_in_train",
        "test_entities",
        "defaultdict",
        "base_path",
        "triples",
        "os",
        "listdir",
        "raw_dirs_path_format",
        "format",
        "triples",
        "file_path",
        "xml_files",
        "d",
        "d",
        "domains",
        "d",
        "file_path",
        "current_domain",
        "triples",
        "codecs",
        "open",
        "raw_dirs_path_format",
        "format",
        "triples",
        "file_path",
        "readlines",
        "row",
        "rows",
        "row",
        "row",
        "split",
        "split",
        "replace",
        "strip",
        "row",
        "row",
        "strip",
        "replace",
        "replace",
        "strip",
        "split",
        "item",
        "strip",
        "item",
        "rdf_parts",
        "current_eid",
        "domain_triples2eids2rdfs",
        "current_domain",
        "triples",
        "domain_triples2eids2rdfs",
        "xml_id",
        "domain_triples2eids2rdfs",
        "xml_id",
        "current_eid",
        "append",
        "rdf_parts",
        "all_entities",
        "append",
        "rdf_parts",
        "all_relations",
        "append",
        "rdf_parts",
        "all_entities",
        "append",
        "rdf_parts",
        "domain_triples2eids2rdfs",
        "all_entities",
        "all_relations",
        "main"
    ],
    "literals": [
        "'/home/nlp/aharonr6'",
        "\"/home/nlp/aharonr6\"",
        "'python {}/sprp/src/split_and_rephrase/prepare-baseline-data-RDFs-relations.py'",
        "'python {}/sprp/src/split_and_rephrase/prepare-evaluation-directories-RDFs-relations.py'",
        "\"{}/Split-and-Rephrase/benchmark/final-complexsimple-meanpreserve-intreeorder-full.txt\"",
        "'COMPLEX-[0-9]*\\n'",
        "'went through {} complex sents'",
        "\"-\"",
        "'='",
        "'='",
        "'='",
        "'_'",
        "'_'",
        "'group_{}'",
        "'_'",
        "'formed {} groups'",
        "'group {}: {} sents, {} RDFs'",
        "'avg sents per group: {}'",
        "'complex counter: {}'",
        "'allocated sentences in groups: {}'",
        "'complex sents: {}'",
        "'distinct complex sents: {}'",
        "'\\n\\ncreating rdf-relation split...'",
        "'TRAIN'",
        "'VALIDATION'",
        "'TEST'",
        "'TRAIN'",
        "'TRAIN'",
        "'VALIDATION'",
        "'VALIDATION'",
        "'VALIDATION'",
        "'TEST'",
        "'TEST'",
        "'TEST'",
        "'/git/Split-and-Rephrase/benchmark/Split-RDFs-relations.json'",
        "'w'",
        "'utf8'",
        "'train'",
        "'validation'",
        "'test'",
        "'/git/Split-and-Rephrase/benchmark/complex-sents/{}-rdfs-relations.id'",
        "'w'",
        "'utf8'",
        "'\\n'",
        "'RDFs_relations split:'",
        "'{} has {} sents'",
        "'VALIDATION'",
        "'TRAIN'",
        "'TEST'",
        "'{} dev relations in train out of {} ({}%)'",
        "'{} test relations in train out of {} ({}%)'",
        "'VALIDATION'",
        "'TRAIN'",
        "'TEST'",
        "'{} dev entities in train out of {} ({}%)'",
        "'{} test entities in train out of {} ({}%)'",
        "'Building'",
        "'WrittenWork'",
        "'Astronaut'",
        "'SportsTeam'",
        "'Monument'",
        "'University'",
        "'/git/Split-and-Rephrase/benchmark/benchmark_verified_simplifcation/{}triples/'",
        "'_'",
        "'eid='",
        "'='",
        "\"\\\"\"",
        "\"\"",
        "'<mtriple>'",
        "'<mtriple>'",
        "''",
        "'</mtriple>'",
        "''",
        "'|'",
        "'_'",
        "'__main__'"
    ],
    "variables": [
        "base_path",
        "sprp_root",
        "complex_counter",
        "raw_data_file_path",
        "group_to_sent_ids",
        "group_to_rdfs",
        "domain_to_sent_ids",
        "entity_to_sent_id",
        "relation_to_sent_id",
        "domain_triples2eids2rdfs",
        "all_entities_distinct",
        "all_relations_distinct",
        "group_counter",
        "complex_sents",
        "line",
        "sentence_id",
        "complex_sent",
        "category_RDF_id",
        "split",
        "sent_domain",
        "sent_eid",
        "sent_triples_amount",
        "RDF_triples_in_sent",
        "candidate_groups",
        "rdf_str",
        "chosen_group",
        "candidate_groups_list",
        "chosen_group",
        "chosen_group",
        "rdf_str",
        "line",
        "line",
        "choices",
        "RDFs_relations_split",
        "relation_to_groups",
        "allocated_groups",
        "covered",
        "covered",
        "choice",
        "choice",
        "choice",
        "dev_relations",
        "test_relations",
        "test_relations_in_train",
        "dev_relations_in_train",
        "count_train",
        "count_dev",
        "count_test",
        "dev_entities_in_train",
        "test_entities_in_train",
        "dev_entities",
        "test_entities",
        "count_train",
        "count_dev",
        "count_test",
        "domain_triples2eids2rdfs",
        "all_entities",
        "all_relations",
        "domains",
        "raw_dirs_path_format",
        "xml_files",
        "current_domain",
        "xml_id",
        "rows",
        "current_eid",
        "rdf_parts",
        "rdf_parts",
        "current_eid"
    ],
    "comments": [
        "directory containing the current github repository",
        "directory containing the split and rephrase github repository",
        "split the raw data according to RDFs. will create a json file containing the example ids for the new split",
        "create the files for training and evaluating a seq2seq model, according to the new split",
        "read the raw data file, parse it, create a new data split according to entities/domains",
        "go through the raw data in final-complexsimple-meanpreserve-intreeorder-full.txt",
        "if complex sentence",
        "read two blank rows",
        "read and parse code row, for example: \"category=WrittenWork eid=Id26 size=1\"",
        "get the RDFs of the sentence using the xml file",
        "check if any of the entities are already in a group",
        "if they are in one group - add the sentence there",
        "if they are in more than one group - merge the groups and add the sentence there",
        "merge rdfs",
        "merge sentences",
        "if they are in no group - create a new group and add the sentence there",
        "add sent id and entities to chosen group",
        "read the next line",
        "create relation_based_split",
        "go through each relation",
        "map relations to groups",
        "go through each relation, make sure at least one is in train",
        "check if its already covered",
        "not covered, add random group",
        "and the rest randomly",
        "make sure the dev and test are not too large",
        "create json file with sent ids",
        "create text files with sent ids",
        "relations split stats",
        "return a dictionary from triples+domain to eids to RDFs",
        "loop through files",
        "open xml file, read all rows"
    ],
    "docstrings": [],
    "functions": [
        "main",
        "split_data",
        "relations_split_stats",
        "entities_split_stats",
        "parse_RDF_xmls"
    ],
    "classes": []
}