{
    "identifiers": [
        "typing",
        "Dict",
        "os",
        "pkg_resources",
        "resource_filename",
        "Requirement",
        "DistributionNotFound",
        "numpy",
        "np",
        "os",
        "environ",
        "get",
        "resource_filename",
        "Requirement",
        "parse",
        "DistributionNotFound",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "Dict",
        "f",
        "os",
        "listdir",
        "PACKAGE_DIR",
        "f",
        "endswith",
        "SUFFIX",
        "f",
        "len",
        "SUFFIX",
        "os",
        "path",
        "join",
        "PACKAGE_DIR",
        "f",
        "EXTRA_CMAP_FOLDER",
        "cmap_files",
        "os",
        "path",
        "isdir",
        "EXTRA_CMAP_FOLDER",
        "IOError",
        "EXTRA_CMAP_FOLDER",
        "f",
        "os",
        "listdir",
        "EXTRA_CMAP_FOLDER",
        "f",
        "endswith",
        "SUFFIX",
        "os",
        "path",
        "join",
        "EXTRA_CMAP_FOLDER",
        "f",
        "_read_cmap",
        "f_path",
        "ValueError",
        "exc",
        "ValueError",
        "f",
        "exc",
        "f",
        "len",
        "SUFFIX",
        "f_path",
        "cmap_files",
        "_get_cmap_files",
        "sorted",
        "CMAP_FILES",
        "keys",
        "path",
        "np",
        "ndarray",
        "open",
        "path",
        "f",
        "np",
        "load",
        "f",
        "cmap_data",
        "shape",
        "ValueError",
        "cmap_data",
        "shape",
        "cmap_data",
        "dtype",
        "np",
        "uint8",
        "ValueError",
        "cmap_data",
        "dtype",
        "cmap_data",
        "name",
        "np",
        "ndarray",
        "name",
        "lower",
        "name",
        "AVAILABLE_CMAPS",
        "ValueError",
        "name",
        "AVAILABLE_CMAPS",
        "_read_cmap",
        "CMAP_FILES",
        "name"
    ],
    "literals": [
        "'_rgba.npy'",
        "'TC_EXTRA_CMAP_FOLDER'",
        "''",
        "'terracotta'",
        "'terracotta/cmaps/data'",
        "'data'",
        "f'invalid TC_EXTRA_CMAP_FOLDER: {EXTRA_CMAP_FOLDER}'",
        "f'invalid custom colormap {f}: {exc!s}'",
        "'rb'",
        "f'invalid shape (expected: (255, 4); got: {cmap_data.shape})'",
        "f'invalid dtype (expected: uint8; got: {cmap_data.dtype})'",
        "f'Unknown colormap {name}, must be one of {AVAILABLE_CMAPS}'"
    ],
    "variables": [
        "SUFFIX",
        "EXTRA_CMAP_FOLDER",
        "PACKAGE_DIR",
        "PACKAGE_DIR",
        "cmap_files",
        "cmap_name",
        "cmap_files",
        "cmap_name",
        "f_path",
        "cmap_name",
        "cmap_files",
        "cmap_name",
        "CMAP_FILES",
        "AVAILABLE_CMAPS",
        "cmap_data",
        "name"
    ],
    "comments": [
        "terracotta was not installed, fall back to file system"
    ],
    "docstrings": [
        "\"\"\"cmaps/get_cmap.py\n\nDefine an interface to retrieve stored color maps.\n\"\"\"",
        "\"\"\"Retrieve the given colormap and return RGBA values as a uint8 NumPy array of\n    shape (255, 4)\n    \"\"\""
    ],
    "functions": [
        "_get_cmap_files",
        "_read_cmap",
        "get_cmap"
    ],
    "classes": []
}