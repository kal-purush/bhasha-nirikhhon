{
    "identifiers": [
        "Injectable",
        "Observable",
        "publishReplay",
        "refCount",
        "ReportConfig",
        "ReportService",
        "KalturaEndUserReportInputFilter",
        "KalturaFilterPager",
        "KalturaObjectBaseFactory",
        "KalturaReportType",
        "reportTypeMap",
        "key",
        "Injectable",
        "KalturaFilterPager",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "_reportService",
        "hotspotType",
        "hotspotId",
        "hotspotId",
        "KalturaObjectBaseFactory",
        "hotspotFilter",
        "hotspotId",
        "hotspotFilter",
        "hotspotType",
        "reportTypeMap",
        "KalturaReportType",
        "reportTypeMap",
        "KalturaReportType",
        "hotspotId",
        "reportConfig",
        "report",
        "report",
        "report",
        "report",
        "report",
        "report",
        "tableData",
        "tableData",
        "hotspotType",
        "tableData",
        "a",
        "b",
        "a",
        "b",
        "item",
        "item",
        "field",
        "publishReplay",
        "refCount",
        "hotspotId"
    ],
    "literals": [
        "'@angular/core'",
        "'rxjs'",
        "'rxjs/operators'",
        "'shared/services'",
        "'kaltura-ngx-client'",
        "'shared/utils/report-type-map'",
        "string",
        "'percentile'",
        "'count_node_switch'",
        "'count_hotspot_clicked'",
        "string",
        "string",
        "${hotspotId}",
        "'nodeSwitch'",
        "${hotspotId}",
        "'nodeSwitch'",
        "'count_node_switch'",
        "'count_hotspot_clicked'",
        "'percentile'",
        "'percentile'",
        "${hotspotId}"
    ],
    "variables": [
        "hotspotFilter",
        "reportConfig",
        "field"
    ],
    "comments": [
        "don't mess with original filter",
        "if we get 101 data points, remove the last data point"
    ],
    "docstrings": [],
    "functions": [
        "clearCache",
        "getHeatMap"
    ],
    "classes": [
        "HotspotHeatMapStoreService"
    ]
}