{
    "identifiers": [
        "org",
        "opentosca",
        "container",
        "api",
        "service",
        "java",
        "util",
        "java",
        "util",
        "Collection",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "java",
        "util",
        "Optional",
        "javax",
        "ws",
        "rs",
        "NotFoundException",
        "javax",
        "xml",
        "xpath",
        "XPath",
        "javax",
        "xml",
        "xpath",
        "XPathConstants",
        "javax",
        "xml",
        "xpath",
        "XPathExpressionException",
        "javax",
        "xml",
        "xpath",
        "XPathFactory",
        "org",
        "opentosca",
        "container",
        "core",
        "next",
        "model",
        "NodeTemplateInstance",
        "org",
        "opentosca",
        "container",
        "core",
        "next",
        "model",
        "NodeTemplateInstanceProperty",
        "org",
        "opentosca",
        "container",
        "core",
        "next",
        "model",
        "ServiceTemplateInstance",
        "org",
        "opentosca",
        "container",
        "core",
        "next",
        "model",
        "ServiceTemplateInstanceProperty",
        "org",
        "opentosca",
        "container",
        "core",
        "tosca",
        "model",
        "TBoundaryDefinitions",
        "Properties",
        "PropertyMappings",
        "org",
        "opentosca",
        "container",
        "core",
        "tosca",
        "model",
        "TNodeTemplate",
        "org",
        "opentosca",
        "container",
        "core",
        "tosca",
        "model",
        "TPropertyMapping",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "org",
        "w3c",
        "dom",
        "Document",
        "org",
        "w3c",
        "dom",
        "Element",
        "org",
        "w3c",
        "dom",
        "Node",
        "org",
        "w3c",
        "dom",
        "NodeList",
        "logger",
        "LoggerFactory",
        "getLogger",
        "instanceService",
        "instanceService",
        "instanceService",
        "instanceService",
        "serviceTemplateInstanceId",
        "serviceInstance",
        "instanceService",
        "getServiceTemplateInstance",
        "serviceTemplateInstanceId",
        "serviceInstance",
        "msg",
        "format",
        "serviceInstance",
        "msg",
        "propertiesAsXML",
        "instanceService",
        "getServiceTemplateInstanceRawProperties",
        "serviceTemplateInstanceId",
        "propertiesAsXML",
        "updateServiceInstanceProperties",
        "serviceInstance",
        "propertiesAsXML",
        "propertiesAsXML",
        "serviceInstance",
        "proprtiesAsXML",
        "propertyMappings",
        "instanceService",
        "getReferenceMapper",
        "getServiceTemplateBoundsPropertyMappings",
        "serviceInstance",
        "getCsarId",
        "serviceInstance",
        "getTemplateId",
        "propertyMappings",
        "mapping",
        "propertyMappings",
        "getPropertyMapping",
        "serviceTemplatePropertyQuery",
        "mapping",
        "getServiceTemplatePropertyRef",
        "serviceTemplatePropertyElements",
        "queryElementList",
        "proprtiesAsXML",
        "getFirstChild",
        "serviceTemplatePropertyQuery",
        "serviceTemplatePropertyElements",
        "size",
        "isConcatQuery",
        "mapping",
        "getTargetPropertyRef",
        "propertyValue",
        "generatePropertyValueFromConcatQuery",
        "mapping",
        "getTargetPropertyRef",
        "serviceInstance",
        "getNodeTemplateInstances",
        "serviceTemplatePropertyElements",
        "get",
        "setTextContent",
        "propertyValue",
        "nodeInstance",
        "getNodeInstanceFromMappingObject",
        "serviceInstance",
        "mapping",
        "getTargetObjectRef",
        "nodeInstance",
        "firstProperty",
        "nodeInstance",
        "getProperties",
        "stream",
        "findFirst",
        "firstProperty",
        "isPresent",
        "nodeProperties",
        "instanceService",
        "convertPropertyToDocument",
        "firstProperty",
        "get",
        "nodePropertiesRoot",
        "nodeProperties",
        "getFirstChild",
        "nodeTemplatePropertyQuery",
        "mapping",
        "getTargetPropertyRef",
        "nodePropertyElements",
        "queryElementList",
        "nodePropertiesRoot",
        "nodeTemplatePropertyQuery",
        "nodePropertyElements",
        "size",
        "serviceTemplatePropertyElements",
        "get",
        "setTextContent",
        "nodePropertyElements",
        "get",
        "getTextContent",
        "serviceInstance",
        "setProperties",
        "Collections",
        "singleton",
        "instanceService",
        "convertDocumentToProperty",
        "proprtiesAsXML",
        "e",
        "logger",
        "error",
        "e",
        "getMessage",
        "node",
        "xpathQuery",
        "elements",
        "xPath",
        "XPathFactory",
        "newInstance",
        "newXPath",
        "nodes",
        "xPath",
        "evaluate",
        "xpathQuery",
        "node",
        "XPathConstants",
        "NODESET",
        "index",
        "index",
        "nodes",
        "getLength",
        "index",
        "nodes",
        "item",
        "index",
        "getNodeType",
        "Node",
        "ELEMENT_NODE",
        "elements",
        "add",
        "nodes",
        "item",
        "index",
        "e",
        "e",
        "printStackTrace",
        "elements",
        "xPathQuery",
        "testString",
        "xPathQuery",
        "trim",
        "testString",
        "startsWith",
        "functionContent",
        "testString",
        "substring",
        "length",
        "functionContent",
        "functionContent",
        "substring",
        "functionContent",
        "length",
        "functionParts",
        "functionContent",
        "split",
        "functionPart",
        "functionParts",
        "functionPart",
        "startsWith",
        "functionPart",
        "endsWith",
        "targetPropertyRef",
        "nodeInstance",
        "testQuery",
        "targetPropertyRef",
        "trim",
        "testQuery",
        "endsWith",
        "functionOpeningBracket",
        "testQuery",
        "indexOf",
        "functionString",
        "testQuery",
        "substring",
        "functionOpeningBracket",
        "functionString",
        "equals",
        "functionContent",
        "testQuery",
        "substring",
        "functionOpeningBracket",
        "testQuery",
        "lastIndexOf",
        "trim",
        "functionParts",
        "functionContent",
        "split",
        "augmentedFunctionParts",
        "functionPart",
        "functionParts",
        "functionPart",
        "trim",
        "startsWith",
        "augmentedFunctionParts",
        "add",
        "functionPart",
        "trim",
        "functionPart",
        "trim",
        "split",
        "length",
        "queryParts",
        "functionPart",
        "trim",
        "split",
        "queryParts",
        "equals",
        "nodeTemplateName",
        "queryParts",
        "propertyName",
        "queryParts",
        "getNodeInstanceWithName",
        "nodeInstance",
        "nodeTemplateName",
        "propValue",
        "fetchPropertyValueFromNodeInstance",
        "getNodeInstanceWithName",
        "nodeInstance",
        "nodeTemplateName",
        "propertyName",
        "augmentedFunctionParts",
        "add",
        "propValue",
        "resultString",
        "functionPart",
        "augmentedFunctionParts",
        "resultString",
        "functionPart",
        "replace",
        "resultString",
        "nodeInstances",
        "nodeTemplateId",
        "nodeInstance",
        "nodeInstances",
        "nodeInstance",
        "getTemplateId",
        "getLocalPart",
        "equals",
        "nodeTemplateId",
        "nodeInstance",
        "nodeInstance",
        "propertyLocalName",
        "nodeInstance",
        "getProperties",
        "nodeInstance",
        "getPropertiesAsMap",
        "getOrDefault",
        "propertyLocalName",
        "serviceInstance",
        "obj",
        "obj",
        "template",
        "obj",
        "nodeInstances",
        "serviceInstance",
        "getNodeTemplateInstances",
        "nodeInstances",
        "nodeInstance",
        "nodeInstances",
        "nodeInstance",
        "getTemplateId",
        "getLocalPart",
        "equals",
        "template",
        "getId",
        "nodeInstance",
        "logger",
        "error"
    ],
    "literals": [
        "\"Failed to retrieve ServiceInstance: '%s'\"",
        "\"Failed to store properties in service template instance object. Reason {}\"",
        "\"concat(\"",
        "\"concat(\"",
        "\",\"",
        "\"'\"",
        "\"'\"",
        "\")\"",
        "\"(\"",
        "\"concat\"",
        "\")\"",
        "\",\"",
        "\"'\"",
        "\"\\\\.\"",
        "\"\\\\.\"",
        "\"Properties\"",
        "\"'\"",
        "\"'\"",
        "\"\"",
        "\"'\"",
        "\"\"",
        "\"Only node templates are supported as target objects for property mappings!\""
    ],
    "variables": [
        "instanceService"
    ],
    "comments": [
        "check if the serviceInstance has properties",
        "check if the serviceTemplate has propertyMappings",
        "if there are no property mappings there is no need to update. The",
        "properties can only be updated by external clients via setting",
        "properties by hand",
        "cycle through mappings and update accordingly",
        "fetch element from serviceTemplateProperties",
        "skip this property, we expect only one",
        "check whether the targetRef is concat query",
        "this query needs possibly multiple properties from different",
        "nodeInstances",
        "this query only fetches a SINGLE element on the properties of",
        "the referenced entity",
        "skip it, the mapping is invalid",
        "skip this property, we expect only one",
        "change the serviceTemplateProperty",
        "this.siDAO.storeServiceInstance(serviceInstance);",
        "TODO Auto-generated catch block",
        "simple validity check as we only want to be able to concat strings,",
        "but maybe more later",
        "string function part, just add to list",
        "\"DSL\" Query",
        "fast check for validity",
        "now we have a string of the form:",
        "concat('someString','somePropertyValue','someString',..)",
        "just make the concat itself instead of running an XPath query",
        "service.getNodeInstances(null, null, null,",
        "serviceInstanceIDtoURI);"
    ],
    "docstrings": [
        "* Evaluates the property mappings of a boundary definition's properties against the xml fragment\n     * representing these properties and uses node template instances for this purpose.\n     *\n     * @param serviceTemplateInstanceId the id of the service template instance whose property mappings\n     *        we want to evaluate\n     * @return the xml fragment representing the properties after property mappings are evaluated\n     * @throws NotFoundException thrown when the id does not correspond to a service template instance"
    ],
    "functions": [
        "PropertyMappingsHelper",
        "Document",
        "evaluatePropertyMappings",
        "updateServiceInstanceProperties",
        "queryElementList",
        "isConcatQuery",
        "generatePropertyValueFromConcatQuery",
        "NodeTemplateInstance",
        "getNodeInstanceWithName",
        "fetchPropertyValueFromNodeInstance",
        "NodeTemplateInstance",
        "getNodeInstanceFromMappingObject"
    ],
    "classes": [
        "PropertyMappingsHelper"
    ]
}