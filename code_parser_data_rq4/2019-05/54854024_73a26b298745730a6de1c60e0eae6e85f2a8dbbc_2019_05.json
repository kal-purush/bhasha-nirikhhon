{
    "identifiers": [
        "unittest",
        "os",
        "shutil",
        "logging",
        "hyo2",
        "soundspeedmanager",
        "AppInfo",
        "hyo2",
        "soundspeed",
        "atlas",
        "regofs",
        "RegOfs",
        "hyo2",
        "soundspeed",
        "soundspeed",
        "SoundSpeedLibrary",
        "logging",
        "getLogger",
        "unittest",
        "TestCase",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "dirname",
        "os",
        "listdir",
        "cur_dir",
        "item",
        "dir_items",
        "item",
        "split",
        "os",
        "remove",
        "os",
        "path",
        "join",
        "cur_dir",
        "item",
        "item",
        "shutil",
        "rmtree",
        "os",
        "path",
        "join",
        "cur_dir",
        "item",
        "SoundSpeedLibrary",
        "data_folder",
        "cur_dir",
        "RegOfs",
        "data_folder",
        "prj",
        "cbofs_folder",
        "prj",
        "prj",
        "model",
        "RegOfs",
        "Model",
        "CBOFS",
        "assertTrue",
        "cbofs",
        "data_folder",
        "assertFalse",
        "cbofs",
        "is_present",
        "prj",
        "close",
        "SoundSpeedLibrary",
        "data_folder",
        "cur_dir",
        "RegOfs",
        "data_folder",
        "prj",
        "cbofs_folder",
        "prj",
        "prj",
        "model",
        "RegOfs",
        "Model",
        "CBOFS",
        "cbofs",
        "download_db",
        "server_mode",
        "cbofs",
        "is_present",
        "logger",
        "warning",
        "prj",
        "close",
        "SoundSpeedLibrary",
        "data_folder",
        "cur_dir",
        "RegOfs",
        "data_folder",
        "prj",
        "dbofs_folder",
        "prj",
        "prj",
        "model",
        "RegOfs",
        "Model",
        "DBOFS",
        "assertTrue",
        "dbofs",
        "data_folder",
        "assertFalse",
        "dbofs",
        "is_present",
        "prj",
        "close",
        "SoundSpeedLibrary",
        "data_folder",
        "cur_dir",
        "RegOfs",
        "data_folder",
        "prj",
        "dbofs_folder",
        "prj",
        "prj",
        "model",
        "RegOfs",
        "Model",
        "DBOFS",
        "dbofs",
        "download_db",
        "server_mode",
        "dbofs",
        "is_present",
        "logger",
        "warning",
        "prj",
        "close",
        "SoundSpeedLibrary",
        "data_folder",
        "cur_dir",
        "RegOfs",
        "data_folder",
        "prj",
        "gomofs_folder",
        "prj",
        "prj",
        "model",
        "RegOfs",
        "Model",
        "GoMOFS",
        "assertTrue",
        "gomofs",
        "data_folder",
        "assertFalse",
        "gomofs",
        "is_present",
        "prj",
        "close",
        "SoundSpeedLibrary",
        "data_folder",
        "cur_dir",
        "RegOfs",
        "data_folder",
        "prj",
        "gomofs_folder",
        "prj",
        "prj",
        "model",
        "RegOfs",
        "Model",
        "GoMOFS",
        "gomofs",
        "download_db",
        "server_mode",
        "gomofs",
        "is_present",
        "logger",
        "warning",
        "prj",
        "close",
        "SoundSpeedLibrary",
        "data_folder",
        "cur_dir",
        "RegOfs",
        "data_folder",
        "prj",
        "ngofs_folder",
        "prj",
        "prj",
        "model",
        "RegOfs",
        "Model",
        "NGOFS",
        "assertTrue",
        "ngofs",
        "data_folder",
        "assertFalse",
        "ngofs",
        "is_present",
        "prj",
        "close",
        "SoundSpeedLibrary",
        "data_folder",
        "cur_dir",
        "RegOfs",
        "data_folder",
        "prj",
        "ngofs_folder",
        "prj",
        "prj",
        "model",
        "RegOfs",
        "Model",
        "NGOFS",
        "ngofs",
        "download_db",
        "server_mode",
        "ngofs",
        "is_present",
        "logger",
        "warning",
        "prj",
        "close",
        "SoundSpeedLibrary",
        "data_folder",
        "cur_dir",
        "RegOfs",
        "data_folder",
        "prj",
        "tbofs_folder",
        "prj",
        "prj",
        "model",
        "RegOfs",
        "Model",
        "TBOFS",
        "assertTrue",
        "tbofs",
        "data_folder",
        "assertFalse",
        "tbofs",
        "is_present",
        "prj",
        "close",
        "SoundSpeedLibrary",
        "data_folder",
        "cur_dir",
        "RegOfs",
        "data_folder",
        "prj",
        "tbofs_folder",
        "prj",
        "prj",
        "model",
        "RegOfs",
        "Model",
        "TBOFS",
        "tbofs",
        "download_db",
        "server_mode",
        "tbofs",
        "is_present",
        "logger",
        "warning",
        "prj",
        "close",
        "SoundSpeedLibrary",
        "data_folder",
        "cur_dir",
        "RegOfs",
        "data_folder",
        "prj",
        "leofs_folder",
        "prj",
        "prj",
        "model",
        "RegOfs",
        "Model",
        "LEOFS",
        "assertTrue",
        "leofs",
        "data_folder",
        "assertFalse",
        "leofs",
        "is_present",
        "prj",
        "close",
        "SoundSpeedLibrary",
        "data_folder",
        "cur_dir",
        "RegOfs",
        "data_folder",
        "prj",
        "leofs_folder",
        "prj",
        "prj",
        "model",
        "RegOfs",
        "Model",
        "LEOFS",
        "leofs",
        "download_db",
        "server_mode",
        "leofs",
        "is_present",
        "logger",
        "warning",
        "prj",
        "close",
        "SoundSpeedLibrary",
        "data_folder",
        "cur_dir",
        "RegOfs",
        "data_folder",
        "prj",
        "creofs_folder",
        "prj",
        "prj",
        "model",
        "RegOfs",
        "Model",
        "CREOFS",
        "assertTrue",
        "creofs",
        "data_folder",
        "assertFalse",
        "creofs",
        "is_present",
        "prj",
        "close",
        "SoundSpeedLibrary",
        "data_folder",
        "cur_dir",
        "RegOfs",
        "data_folder",
        "prj",
        "creofs_folder",
        "prj",
        "prj",
        "model",
        "RegOfs",
        "Model",
        "CREOFS",
        "creofs",
        "download_db",
        "server_mode",
        "creofs",
        "is_present",
        "logger",
        "warning",
        "prj",
        "close",
        "SoundSpeedLibrary",
        "data_folder",
        "cur_dir",
        "RegOfs",
        "data_folder",
        "prj",
        "sfbofs_folder",
        "prj",
        "prj",
        "model",
        "RegOfs",
        "Model",
        "SFBOFS",
        "assertTrue",
        "sfbofs",
        "data_folder",
        "assertFalse",
        "sfbofs",
        "is_present",
        "prj",
        "close",
        "SoundSpeedLibrary",
        "data_folder",
        "cur_dir",
        "RegOfs",
        "data_folder",
        "prj",
        "sfbofs_folder",
        "prj",
        "prj",
        "model",
        "RegOfs",
        "Model",
        "SFBOFS",
        "sfbofs",
        "download_db",
        "server_mode",
        "sfbofs",
        "is_present",
        "logger",
        "warning",
        "prj",
        "close",
        "unittest",
        "TestSuite",
        "s",
        "addTests",
        "unittest",
        "TestLoader",
        "loadTestsFromTestCase",
        "TestSoundSpeedAtlasGomofs",
        "s"
    ],
    "literals": [
        "'.'",
        "'db'",
        "'atlases'",
        "'regofs'",
        "\"unable to download CBOFS data\"",
        "'regofs'",
        "\"unable to download DBOFS data\"",
        "'regofs'",
        "\"unable to download GoMOFS data\"",
        "'regofs'",
        "\"unable to download NGOFS data\"",
        "'regofs'",
        "\"unable to download TBOFS data\"",
        "'regofs'",
        "\"unable to download LEOFS data\"",
        "'regofs'",
        "\"unable to download CREOFS data\"",
        "'regofs'",
        "\"unable to download SFBOFS data\""
    ],
    "variables": [
        "logger",
        "cur_dir",
        "dir_items",
        "prj",
        "cbofs",
        "prj",
        "cbofs",
        "prj",
        "dbofs",
        "prj",
        "dbofs",
        "prj",
        "gomofs",
        "prj",
        "gomofs",
        "prj",
        "ngofs",
        "prj",
        "ngofs",
        "prj",
        "tbofs",
        "prj",
        "tbofs",
        "prj",
        "leofs",
        "prj",
        "leofs",
        "prj",
        "creofs",
        "prj",
        "creofs",
        "prj",
        "sfbofs",
        "prj",
        "sfbofs",
        "s"
    ],
    "comments": [
        "to avoid test failures",
        "self.assertTrue(rtofs.is_present())",
        "to avoid test failures",
        "self.assertTrue(rtofs.is_present())",
        "to avoid test failures",
        "self.assertTrue(rtofs.is_present())",
        "def test_creation_of_Nyofs(self):",
        "prj = SoundSpeedLibrary(data_folder=self.cur_dir)",
        "nyofs = RegOfs(data_folder=prj.nyofs_folder, prj=prj, model=RegOfs.Model.NYOFS)",
        "self.assertTrue('regofs' in nyofs.data_folder)",
        "self.assertFalse(nyofs.is_present())",
        "prj.close()",
        "",
        "def test_download_db_from_Nyofs(self):",
        "prj = SoundSpeedLibrary(data_folder=self.cur_dir)",
        "nyofs = RegOfs(data_folder=prj.nyofs_folder, prj=prj, model=RegOfs.Model.NYOFS)",
        "nyofs.download_db(server_mode=True)",
        "",
        "# to avoid test failures",
        "if not nyofs.is_present():",
        "logger.warning(\"unable to download NYOFS data\")",
        "# self.assertTrue(rtofs.is_present())",
        "",
        "prj.close()",
        "def test_creation_of_Sjrofs(self):",
        "prj = SoundSpeedLibrary(data_folder=self.cur_dir)",
        "sjrofs = RegOfs(data_folder=prj.sjrofs_folder, prj=prj, model=RegOfs.Model.SJROFS)",
        "self.assertTrue('regofs' in sjrofs.data_folder)",
        "self.assertFalse(sjrofs.is_present())",
        "prj.close()",
        "",
        "def test_download_db_from_Sjrofs(self):",
        "prj = SoundSpeedLibrary(data_folder=self.cur_dir)",
        "sjrofs = RegOfs(data_folder=prj.sjrofs_folder, prj=prj, model=RegOfs.Model.SJROFS)",
        "sjrofs.download_db(server_mode=True)",
        "",
        "# to avoid test failures",
        "if not sjrofs.is_present():",
        "logger.warning(\"unable to download SJROFS data\")",
        "# self.assertTrue(rtofs.is_present())",
        "",
        "prj.close()",
        "to avoid test failures",
        "self.assertTrue(rtofs.is_present())",
        "to avoid test failures",
        "self.assertTrue(rtofs.is_present())",
        "to avoid test failures",
        "self.assertTrue(rtofs.is_present())",
        "def test_creation_of_Lhofs(self):",
        "prj = SoundSpeedLibrary(data_folder=self.cur_dir)",
        "lhofs = RegOfs(data_folder=prj.lhofs_folder, prj=prj, model=RegOfs.Model.LHOFS)",
        "self.assertTrue('regofs' in lhofs.data_folder)",
        "self.assertFalse(lhofs.is_present())",
        "prj.close()",
        "",
        "def test_download_db_from_Lhofs(self):",
        "prj = SoundSpeedLibrary(data_folder=self.cur_dir)",
        "lhofs = RegOfs(data_folder=prj.lhofs_folder, prj=prj, model=RegOfs.Model.LHOFS)",
        "lhofs.download_db(server_mode=True)",
        "",
        "# to avoid test failures",
        "if not lhofs.is_present():",
        "logger.warning(\"unable to download LHOFS data\")",
        "# self.assertTrue(rtofs.is_present())",
        "",
        "prj.close()",
        "def test_creation_of_Lmofs(self):",
        "prj = SoundSpeedLibrary(data_folder=self.cur_dir)",
        "lmofs = RegOfs(data_folder=prj.lmofs_folder, prj=prj, model=RegOfs.Model.LMOFS)",
        "self.assertTrue('regofs' in lmofs.data_folder)",
        "self.assertFalse(lmofs.is_present())",
        "prj.close()",
        "",
        "def test_download_db_from_Lmofs(self):",
        "prj = SoundSpeedLibrary(data_folder=self.cur_dir)",
        "lmofs = RegOfs(data_folder=prj.lmofs_folder, prj=prj, model=RegOfs.Model.LMOFS)",
        "lmofs.download_db(server_mode=True)",
        "",
        "# to avoid test failures",
        "if not lmofs.is_present():",
        "logger.warning(\"unable to download LMOFS data\")",
        "# self.assertTrue(rtofs.is_present())",
        "",
        "prj.close()",
        "def test_creation_of_Loofs(self):",
        "prj = SoundSpeedLibrary(data_folder=self.cur_dir)",
        "loofs = RegOfs(data_folder=prj.loofs_folder, prj=prj, model=RegOfs.Model.LOOFS)",
        "self.assertTrue('regofs' in loofs.data_folder)",
        "self.assertFalse(loofs.is_present())",
        "prj.close()",
        "",
        "def test_download_db_from_Loofs(self):",
        "prj = SoundSpeedLibrary(data_folder=self.cur_dir)",
        "loofs = RegOfs(data_folder=prj.loofs_folder, prj=prj, model=RegOfs.Model.LOOFS)",
        "loofs.download_db(server_mode=True)",
        "",
        "# to avoid test failures",
        "if not loofs.is_present():",
        "logger.warning(\"unable to download LOOFS data\")",
        "# self.assertTrue(rtofs.is_present())",
        "",
        "prj.close()",
        "def test_creation_of_Lsofs(self):",
        "prj = SoundSpeedLibrary(data_folder=self.cur_dir)",
        "lsofs = RegOfs(data_folder=prj.lsofs_folder, prj=prj, model=RegOfs.Model.LSOFS)",
        "self.assertTrue('regofs' in lsofs.data_folder)",
        "self.assertFalse(lsofs.is_present())",
        "prj.close()",
        "",
        "def test_download_db_from_Lsofs(self):",
        "prj = SoundSpeedLibrary(data_folder=self.cur_dir)",
        "lsofs = RegOfs(data_folder=prj.lsofs_folder, prj=prj, model=RegOfs.Model.LSOFS)",
        "lsofs.download_db(server_mode=True)",
        "",
        "# to avoid test failures",
        "if not lsofs.is_present():",
        "logger.warning(\"unable to download LSOFS data\")",
        "# self.assertTrue(rtofs.is_present())",
        "",
        "prj.close()",
        "to avoid test failures",
        "self.assertTrue(rtofs.is_present())",
        "to avoid test failures",
        "self.assertTrue(rtofs.is_present())"
    ],
    "docstrings": [],
    "functions": [
        "setUp",
        "tearDown",
        "test_creation_of_Cbofs",
        "test_download_db_from_Cbofs",
        "test_creation_of_Dbofs",
        "test_download_db_from_Dbofs",
        "test_creation_of_Gomofs",
        "test_download_db_from_Gomofs",
        "test_creation_of_Ngofs",
        "test_download_db_from_Ngofs",
        "test_creation_of_Tbofs",
        "test_download_db_from_Tbofs",
        "test_creation_of_Leofs",
        "test_download_db_from_Leofs",
        "test_creation_of_Creofs",
        "test_download_db_from_Creofs",
        "test_creation_of_Sfbofs",
        "test_download_db_from_Sfbofs",
        "suite"
    ],
    "classes": [
        "TestSoundSpeedAtlasGomofs"
    ]
}