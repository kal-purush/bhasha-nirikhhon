{
    "identifiers": [
        "pytest",
        "re",
        "solitude",
        "linter",
        "Linter",
        "solitude",
        "common",
        "ContractSourceList",
        "conftest",
        "tool_ethlint",
        "SOLIDITY_VERSION",
        "pytest",
        "mark",
        "pytest",
        "mark",
        "linter",
        "tool_ethlint",
        "Linter",
        "tool_ethlint",
        "get",
        "plugins",
        "rules",
        "parallelism",
        "ContractSourceList",
        "i",
        "COUNT",
        "sources",
        "add_string",
        "i",
        "TEST_CONTRACT",
        "format",
        "solidity_version",
        "SOLIDITY_VERSION",
        "err",
        "linter",
        "lint",
        "sources",
        "err",
        "err",
        "unitname",
        "startswith",
        "err",
        "line",
        "err",
        "column",
        "err",
        "message",
        "err_count",
        "err_count",
        "COUNT"
    ],
    "literals": [
        "\"solium\"",
        "\"security\"",
        "\"quotes\"",
        "\"error\"",
        "\"double\"",
        "\"indentation\"",
        "\"error\"",
        "\"TestContract%03d\"",
        "\"error\"",
        "\"TestContract\"",
        "\"[indentation]\""
    ],
    "variables": [
        "pytestmark",
        "COUNT",
        "linter",
        "sources",
        "err_count",
        "TEST_CONTRACT"
    ],
    "comments": [
        "Copyright (c) 2019, Solitude Developers",
        "",
        "This source code is licensed under the BSD-3-Clause license found in the",
        "COPYING file in the root directory of this source tree",
        "noqa"
    ],
    "docstrings": [
        "\"\"\"\\\npragma solidity ^{solidity_version};\ncontract Fibonacci {{\n    uint public result;\n\n  constructor() public {{  // this is line 5. do not move or change this line\n        result = 0;\n    }}\n\n    function fib_r(uint n) internal pure returns (uint) {{\n        if (n < 2) {{\n            return n;\n        }}\n        return fib_r(n - 1) + fib_r(n - 2);\n    }}\n\n    function fib(uint n) public {{\n        result = fib_r(n);\n    }}\n}}\n\"\"\""
    ],
    "functions": [
        "test_0001_lint"
    ],
    "classes": []
}