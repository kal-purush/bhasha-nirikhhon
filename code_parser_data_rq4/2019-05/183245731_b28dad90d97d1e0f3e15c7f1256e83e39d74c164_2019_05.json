{
    "identifiers": [
        "Http",
        "Path",
        "FeatureCollection",
        "MultiPolygon",
        "County",
        "CountyProperties",
        "isArray",
        "http",
        "http",
        "abbreviation",
        "encodeURI",
        "abbreviation",
        "Path",
        "stateAbURI",
        "Path",
        "geoId",
        "encodeURI",
        "geoId",
        "Path",
        "geoIdURI",
        "geoId",
        "encodeURI",
        "geoId",
        "Path",
        "geoIdURI",
        "Path",
        "countyName",
        "stateAb",
        "countyName",
        "stateAb",
        "Path",
        "Path",
        "countyName",
        "stateAb",
        "countyName",
        "stateAb",
        "Path",
        "Path",
        "Path",
        "countyNames",
        "isArray",
        "countyNames",
        "countyNames",
        "Path",
        "abbreviations",
        "isArray",
        "abbreviations",
        "abbreviations",
        "Path",
        "northEast",
        "southWest",
        "intersect",
        "isArray",
        "northEast",
        "isArray",
        "southWest",
        "intersect",
        "northEast",
        "southWest",
        "Path",
        "Path",
        "northEast",
        "southWest",
        "intersect",
        "isArray",
        "northEast",
        "isArray",
        "southWest",
        "intersect",
        "northEast",
        "southWest",
        "Path",
        "Path",
        "Path",
        "latitude",
        "longitude",
        "radius",
        "latitude",
        "latitude",
        "radius",
        "Path",
        "Path",
        "latitude",
        "longitude",
        "radius",
        "latitude",
        "latitude",
        "radius",
        "Path",
        "Path",
        "Path"
    ],
    "literals": [
        "'./Http'",
        "'./Path'",
        "'geojson'",
        "'../models/County'",
        "'../helpers/utils'",
        "string",
        "string",
        "${Path.COUNTIES_SEARCH_PATH}/byState/${stateAbURI}${Path.ENTITY_PATH}",
        "string",
        "${Path.COUNTIES_PATH}/${geoIdURI}",
        "string",
        "${Path.COUNTIES_PATH}/${geoIdURI}${Path.ENTITY_PATH}",
        "string",
        "string",
        "${Path.COUNTIES_SEARCH_PATH}${Path.BY_NAME_AND_STATE}",
        "string",
        "string",
        "${Path.COUNTIES_SEARCH_PATH}${Path.BY_NAME_AND_STATE}${Path.ENTITY_PATH}",
        "string",
        "','",
        "${Path.COUNTIES_SEARCH_PATH}/byNames",
        "string",
        "','",
        "${Path.COUNTIES_SEARCH_PATH}/byStates",
        "','",
        "','",
        "${Path.COUNTIES_SEARCH_PATH}${Path.IN_BOUNDING_BOX_PATH}",
        "','",
        "','",
        "${Path.COUNTIES_SEARCH_PATH}${Path.IN_BOUNDING_BOX_PATH}${Path.ENTITY_PATH}",
        "${Path.COUNTIES_SEARCH_PATH}${Path.IN_RADIUS_PATH}",
        "${Path.COUNTIES_SEARCH_PATH}${Path.IN_RADIUS_PATH}${Path.ENTITY_PATH}"
    ],
    "variables": [
        "stateAbURI",
        "geoIdURI",
        "geoIdURI"
    ],
    "comments": [],
    "docstrings": [
        "* @param {string} abbreviation (NY, AK, AI, LA, KY, etc)\n   * @return {Promise<Array<County>>}",
        "* @param {string} geoId\n   * @return {Promise<FeatureCollection<MultiPolygon, CountyProperties>>}",
        "* @param {string} geoId\n   * @return {Promise<County>}",
        "* @param {string} countyName (County name Adair, etc)\n   * @param {string} stateAb (NY, KY, AI, AL, etc)\n   * @return {Promise<FeatureCollection<MultiPolygon, CountyProperties>>}",
        "*\n   * @param {string} countyName (County name Adair, etc)\n   * @param {string} stateAb (NY, KY, AI, AL, etc)\n   * @return {Promise<County>}",
        "* @param {Array<string>} countyNames (Adair, etc)\n   * @return {Promise<FeatureCollection<MultiPolygon, CountyProperties>>}",
        "* @deprecated\n   * @param {Array<string>} abbreviations (NY,KY,AI, etc)\n   * @return {Promise<FeatureCollection<MultiPolygon, CountyProperties>>}",
        "* @param {Array<number>} northEast (Coordinates of north-east corner [latitude, longitude] )\n   * @param {Array<number>} southWest (Coordinates of south-west corner [latitude, longitude] )\n   * @param {boolean} intersect (get counties that intersect with the bounding box)\n   * @return {Promise<FeatureCollection<MultiPolygon, CountyProperties>>}",
        "* @param {Array<number>} northEast (Coordinates of north-east corner [latitude, longitude] )\n   * @param {Array<number>} southWest (Coordinates of south-west corner [latitude, longitude] )\n   * @param {boolean} intersect (get counties that intersect with the bounding box)\n   * @return {Promise<Array<County>>}",
        "* @param {number} latitude\n   * @param {number} longitude\n   * @param {number} radius (size in miles min values is 1 max 500)\n   * @return {Promise<FeatureCollection<MultiPolygon, CountyProperties>>}",
        "* @param {number} latitude\n   * @param {number} longitude\n   * @param {number} radius (size in miles min values is 1 max 500)\n   * @return {Promise<Array<County>>}"
    ],
    "functions": [
        "getByStateAb",
        "getGeojsonByGeoId",
        "getByGeoId",
        "getGeojsonByCountyNameAndStateAb",
        "getByCountyNameAndStateAb",
        "getGeojsonByCountyNames",
        "getGeojsonByStateAbs",
        "getGeojsonInBoundingBox",
        "getInBoundingBox",
        "getGeojsonInRadius",
        "getInRadius"
    ],
    "classes": [
        "Counties"
    ]
}