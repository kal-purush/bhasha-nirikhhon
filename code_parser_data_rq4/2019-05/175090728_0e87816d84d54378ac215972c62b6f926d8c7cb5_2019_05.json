{
    "identifiers": [
        "BigNum",
        "sleep",
        "ms",
        "resolve",
        "setTimeout",
        "resolve",
        "ms",
        "remove0x",
        "add0x",
        "isObject",
        "obj",
        "obj",
        "obj",
        "getNullString",
        "n",
        "n",
        "reverse",
        "bnMin",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "bnMax",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b"
    ],
    "literals": [
        "'bn.js'",
        "string",
        "string",
        "'0x'",
        "string",
        "string",
        "'0x'",
        "'0x'",
        "'object'",
        "string",
        "'0x'",
        "'0'",
        "string",
        "string",
        "''"
    ],
    "variables": [
        "sleep",
        "remove0x",
        "add0x",
        "isObject",
        "getNullString",
        "reverse",
        "bnMin",
        "bnMax"
    ],
    "comments": [
        "External Imports"
    ],
    "docstrings": [
        "* Sleeps for a number of milliseconds.\n * @param ms Number of ms to sleep.\n * @returns a promise that resolves after the number of ms.",
        "* Removes \"0x\" from start of a string if it exists.\n * @param str String to modify.\n * @returns the string without \"0x\".",
        "* Adds \"0x\" to the start of a string if necessary.\n * @param str String to modify.\n * @returns the string with \"0x\".",
        "* Checks if something is an Object\n * @param obj Thing that might be an Object.\n * @returns `true` if the thing is a Object, `false` otherwise.",
        "* Creates a hex string with a certain number of zeroes.\n * @param n Number of zeroes.\n * @returns the hex string.",
        "* Reverses a string in place.\n * @param str String to reverse.\n * @returns the reversed string.",
        "* Determines the less of two BigNums.\n * @param a First BigNum.\n * @param b Second BigNum.\n * @returns the lesser of the two.",
        "* Determines the greater of two BigNums.\n * @param a First BigNum.\n * @param b Second BigNum.\n * @returns the greater of the two."
    ],
    "functions": [],
    "classes": []
}