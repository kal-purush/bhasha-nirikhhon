{
    "identifiers": [
        "sys",
        "os",
        "json",
        "argparse",
        "zlib",
        "datetime",
        "datetime",
        "boto3",
        "diskcache",
        "Cache",
        "Disk",
        "ModuleNotFoundError",
        "err",
        "err",
        "file",
        "sys",
        "stderr",
        "sys",
        "exit",
        "Disk",
        "directory",
        "compress_level",
        "kwargs",
        "compress_level",
        "JSONDiskCache",
        "directory",
        "kwargs",
        "key",
        "json",
        "dumps",
        "key",
        "encode",
        "zlib",
        "compress",
        "json_bytes",
        "compress_level",
        "JSONDiskCache",
        "put",
        "data",
        "key",
        "raw",
        "JSONDiskCache",
        "get",
        "key",
        "raw",
        "json",
        "loads",
        "zlib",
        "decompress",
        "data",
        "decode",
        "value",
        "read",
        "read",
        "json",
        "dumps",
        "value",
        "encode",
        "zlib",
        "compress",
        "json_bytes",
        "compress_level",
        "JSONDiskCache",
        "store",
        "value",
        "read",
        "mode",
        "filename",
        "value",
        "read",
        "JSONDiskCache",
        "fetch",
        "mode",
        "filename",
        "value",
        "read",
        "read",
        "json",
        "loads",
        "zlib",
        "decompress",
        "data",
        "decode",
        "data",
        "json",
        "JSONEncoder",
        "o",
        "isinstance",
        "o",
        "datetime",
        "o",
        "isoformat",
        "isinstance",
        "o",
        "boto3",
        "Session",
        "isinstance",
        "o",
        "boto3",
        "ec2",
        "json",
        "JSONEncoder",
        "o",
        "session",
        "filters",
        "region",
        "session",
        "region",
        "__session",
        "client",
        "region_name",
        "region",
        "filters",
        "__conn",
        "describe_instances",
        "__conn",
        "describe_volumes",
        "property",
        "__filters",
        "filters",
        "setter",
        "filters",
        "filters",
        "property",
        "__region",
        "region",
        "setter",
        "region",
        "region",
        "property",
        "__instances",
        "instances",
        "setter",
        "callableFunc",
        "callableFunc",
        "Filters",
        "filters",
        "property",
        "__volumes",
        "volumes",
        "setter",
        "callableFunc",
        "callableFunc",
        "Filters",
        "filters",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "args",
        "region",
        "split",
        "item",
        "split",
        "item",
        "args",
        "tags",
        "split",
        "args",
        "parse_args",
        "format",
        "item",
        "keys",
        "item",
        "values",
        "item",
        "args",
        "tags",
        "args",
        "verbosity",
        "format",
        "filters",
        "boto3",
        "Session",
        "profile_name",
        "args",
        "profile",
        "session",
        "client",
        "args",
        "region",
        "region",
        "region",
        "region",
        "region",
        "conn",
        "describe_regions",
        "args",
        "region",
        "args",
        "verbosity",
        "format",
        "userRegion",
        "Cache",
        "os",
        "path",
        "expanduser",
        "disk",
        "JSONDiskCache",
        "disk_compress_level",
        "region",
        "userRegion",
        "regions",
        "append",
        "cache",
        "region",
        "filters",
        "KeyError",
        "regions",
        "append",
        "region",
        "EC2Resources",
        "session",
        "filters",
        "region",
        "args",
        "verbosity",
        "format",
        "regions",
        "region",
        "regions",
        "k",
        "ec2Instance",
        "region",
        "items",
        "json",
        "dumps",
        "ec2Instance",
        "instances",
        "cls",
        "DateTimeEncoder",
        "json",
        "loads",
        "jsonContent",
        "json",
        "dumps",
        "from_json",
        "indent",
        "main",
        "KeyboardInterrupt",
        "sys",
        "exit"
    ],
    "literals": [
        "'utf-8'",
        "'utf-8'",
        "'utf-8'",
        "'utf-8'",
        "''",
        "\"ec2\"",
        "\"-v\"",
        "\"--verbosity\"",
        "\"count\"",
        "\"print debugging messages. Multiple -v options \"",
        "\"increase verbosity.  The maximum is 3.\"",
        "\"-r\"",
        "\"--region\"",
        "\"use specified region(s) '-r us-west-1,us-west-2' \"",
        "\"defaults to configured region in profile. Use '-r all' \"",
        "\"for all regions.\"",
        "\"-p\"",
        "\"--profile\"",
        "\"use specified profile\"",
        "\"tags\"",
        "\"specify tags to search, e.g. \"",
        "\"stack_name=test,test01;role=hadoop,hbase\"",
        "','",
        "\"=\"",
        "\";\"",
        "'Name'",
        "'tag:{}'",
        "'Values'",
        "\"filters: {}\"",
        "'ec2'",
        "'all'",
        "'RegionName'",
        "'Regions'",
        "\"userRegion: {}\"",
        "'~'",
        "'/.awstools'",
        "\"regions: {}\"",
        "\"__main__\"",
        "\"Exiting on user interrupt\""
    ],
    "variables": [
        "compress_level",
        "json_bytes",
        "data",
        "data",
        "json_bytes",
        "value",
        "data",
        "data",
        "__session",
        "region",
        "__conn",
        "filters",
        "instances",
        "volumes",
        "__filters",
        "__region",
        "__instances",
        "__volumes",
        "parser",
        "args",
        "args",
        "region",
        "args",
        "tags",
        "args",
        "filters",
        "session",
        "conn",
        "userRegion",
        "userRegion",
        "cache",
        "regions",
        "jsonContent",
        "from_json"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "",
        "This code traverses each region in AWS and searches for resources in EC2",
        "that match tags provided.",
        "",
        "Usage: `basename $0` [-v][-r region1,region2] [-p profile]",
        "<tag1=value,tag2=value,...,tagN=value>",
        "",
        "Requires: Python3, Boto 3",
        "",
        "Before you can begin using Boto 3, you should set up authentication",
        "credentials. Credentials for your AWS account can be found in the IAM",
        "Console. You can create or use an existing user. Go to manage access keys and",
        "generate a new set of keys.",
        "",
        "If you have the AWS CLI installed, then you can use it to configure your credentials file:",
        "`aws configure`",
        "",
        "Author: Justin Cook <jhcook@secnix.com>",
        "Sort command-line parameters",
        "Create a session and connection to ec2",
        "Create region list",
        "Cache results to disk",
        "regions = [ {region:EC2Resources(session, filters, region)} for region in",
        "userRegion ]",
        "Convert to JSON -> Python data structure -> JSON for proper formatting",
        "Shrugs",
        "cache.add(k + str(ec2Instance.filters), json.dumps(ec2Instance.__dict__,",
        "cls=DateTimeEncoder))"
    ],
    "docstrings": [
        "'''some objects are not serialisable to json'''",
        "'''Get the instances'''",
        "'''Get the volumes'''"
    ],
    "functions": [
        "put",
        "get",
        "store",
        "fetch",
        "filters",
        "filters",
        "region",
        "region",
        "instances",
        "instances",
        "volumes",
        "volumes",
        "parse_args",
        "main"
    ],
    "classes": [
        "JSONDiskCache",
        "DateTimeEncoder",
        "EC2Resources"
    ]
}