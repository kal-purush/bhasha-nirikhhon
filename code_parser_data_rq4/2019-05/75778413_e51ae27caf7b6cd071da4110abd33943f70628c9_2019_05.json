{
    "identifiers": [
        "jsonschema",
        "Draft7Validator",
        "validators",
        "ValidationError",
        "jsonschema",
        "exceptions",
        "best_match",
        "copy",
        "deepcopy",
        "validator_class",
        "Draft7Validator",
        "validator_class",
        "VALIDATORS",
        "validator_class",
        "VALIDATORS",
        "validator_class",
        "VALIDATORS",
        "validator",
        "properties",
        "instance",
        "schema",
        "validator",
        "is_type",
        "instance",
        "prop",
        "subschema",
        "properties",
        "items",
        "instance",
        "get",
        "prop",
        "subschema",
        "subschema",
        "subschema",
        "get",
        "subschema",
        "get",
        "default_val",
        "error",
        "validate_props",
        "validator",
        "properties",
        "instance",
        "schema",
        "error",
        "validator",
        "properties",
        "instance",
        "schema",
        "validator",
        "is_type",
        "instance",
        "instance",
        "properties",
        "properties",
        "properties",
        "get",
        "properties",
        "get",
        "default_val",
        "instance",
        "append",
        "default_val",
        "error",
        "validate_array",
        "validator",
        "properties",
        "instance",
        "schema",
        "error",
        "validator",
        "properties",
        "instance",
        "schema",
        "i",
        "subschema",
        "properties",
        "deepcopy",
        "instance",
        "validator",
        "descend",
        "new_instance",
        "subschema",
        "schema_path",
        "i",
        "validator",
        "descend",
        "new_instance",
        "subschema",
        "schema_path",
        "i",
        "errs",
        "all_errors",
        "extend",
        "errs",
        "good_properties",
        "append",
        "subschema",
        "new_instance",
        "len",
        "good_properties",
        "instance",
        "ValidationError",
        "msg",
        "context",
        "all_errors",
        "len",
        "good_properties",
        "instance",
        "join",
        "repr",
        "p",
        "p",
        "good_properties",
        "ValidationError",
        "msg",
        "instance",
        "clear",
        "instance",
        "update",
        "good_instance",
        "set_defaults",
        "set_array_defaults",
        "set_oneOf_defaults",
        "validators",
        "extend",
        "validator_class",
        "custom_validators",
        "schema",
        "obj",
        "validator_class",
        "Draft7Validator",
        "extend_with_default",
        "validator_class",
        "schema",
        "validator",
        "iter_errors",
        "obj",
        "validator",
        "iter_errors",
        "obj"
    ],
    "literals": [
        "\"properties\"",
        "\"items\"",
        "\"oneOf\"",
        "\"object\"",
        "\"default\"",
        "\"default\"",
        "'type'",
        "'array'",
        "'type'",
        "'object'",
        "\"array\"",
        "\"default\"",
        "'default'",
        "'type'",
        "'array'",
        "'type'",
        "'object'",
        "f'{instance} is not valid under any of the given schemas'",
        "f'{instance} is valid under each of {\", \".join(repr(p) for p in good_properties)}'",
        "\", \"",
        "\"properties\"",
        "\"items\"",
        "\"oneOf\""
    ],
    "variables": [
        "validate_props",
        "validate_array",
        "validate_oneOf",
        "default_val",
        "default_val",
        "default_val",
        "instance",
        "prop",
        "default_val",
        "default_val",
        "default_val",
        "default_val",
        "good_properties",
        "all_errors",
        "good_instance",
        "new_instance",
        "errs",
        "good_instance",
        "msg",
        "msg",
        "custom_validators",
        "validator"
    ],
    "comments": [
        "must use draft 4+",
        "first time to fill in defaults since validating 'required', 'minProperties',",
        "etc. can't be done until the instance has been properly filled with defaults.",
        "first time to fill in defaults since validating 'required', 'minProperties',",
        "etc. can't be done until the instance has been properly filled with defaults."
    ],
    "docstrings": [
        "\"\"\"\n    Extends a validator class to add defaults before validation.\n    From: https://github.com/Julian/jsonschema/blob/master/docs/faq.rst\n    \"\"\"",
        "\"\"\" Set defaults within a \"properties\" context \"\"\"",
        "\"\"\" Set defaults within an \"array\" context \"\"\"",
        "\"\"\" \n        Set defaults within a \"oneOf\" context. This ensures that only\n        defaults from the matching subschema are set on the instance.\n\n        TODO: If we ever use other optional subschema contexts (ex: allOf, anyOf)\n              then we should implement custom validator functions for those as \n              well.\n        \"\"\"",
        "\"\"\"\n    Return an iterator that yields errors from validating obj on schema \n    after first filling in defaults on obj.\n    \"\"\""
    ],
    "functions": [
        "extend_with_default",
        "set_defaults",
        "set_array_defaults",
        "set_oneOf_defaults",
        "validate_with_defaults"
    ],
    "classes": []
}