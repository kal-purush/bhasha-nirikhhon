{
    "identifiers": [
        "lightning",
        "Plugin",
        "json",
        "psutil",
        "subprocess",
        "threading",
        "time",
        "os",
        "Plugin",
        "path",
        "plugin",
        "path",
        "plugin",
        "threading",
        "Lock",
        "json",
        "JSONDecoder",
        "os",
        "path",
        "getmtime",
        "path",
        "time",
        "sleep",
        "os",
        "path",
        "getmtime",
        "path",
        "last",
        "now",
        "now",
        "restart",
        "plugin",
        "log",
        "level",
        "request",
        "request",
        "copy",
        "key",
        "key",
        "key",
        "request",
        "method",
        "request",
        "id",
        "init",
        "init",
        "init",
        "k",
        "v",
        "k",
        "v",
        "opts",
        "items",
        "k",
        "startswith",
        "plugin",
        "child",
        "send",
        "init",
        "plugin",
        "child",
        "passthru",
        "sock",
        "sock",
        "readline",
        "buff",
        "b",
        "len",
        "b",
        "buff",
        "buff",
        "decode",
        "decoder",
        "raw_decode",
        "buff",
        "buff",
        "len_used",
        "lstrip",
        "encode",
        "objs",
        "ValueError",
        "buff",
        "lstrip",
        "encode",
        "status",
        "subprocess",
        "Popen",
        "path",
        "stdout",
        "subprocess",
        "PIPE",
        "stdin",
        "subprocess",
        "PIPE",
        "getmanifest",
        "e",
        "plugin",
        "log",
        "e",
        "level",
        "status",
        "proc",
        "kill",
        "proc",
        "wait",
        "reader",
        "reader",
        "reader",
        "join",
        "stop",
        "start",
        "plugin",
        "child",
        "send",
        "init",
        "plugin",
        "child",
        "passthru",
        "status",
        "send",
        "_readobj",
        "proc",
        "stdout",
        "msg",
        "format",
        "buff",
        "strip",
        "stop",
        "ValueError",
        "msg",
        "msg",
        "msg",
        "plugin",
        "_write_locked",
        "msg",
        "manifest",
        "_readobj",
        "proc",
        "stdout",
        "msg",
        "msg",
        "init",
        "plugin",
        "_write_locked",
        "msg",
        "proc",
        "stdout",
        "readline",
        "line",
        "plugin",
        "stdout",
        "buffer",
        "write",
        "line",
        "plugin",
        "stdout",
        "flush",
        "threading",
        "target",
        "read_loop",
        "reader",
        "reader",
        "start",
        "msg",
        "proc",
        "stdin",
        "write",
        "json",
        "dumps",
        "msg",
        "encode",
        "proc",
        "stdin",
        "write",
        "proc",
        "stdin",
        "flush",
        "request",
        "args",
        "kwargs",
        "request",
        "method",
        "request",
        "request",
        "id",
        "send",
        "raw",
        "request",
        "args",
        "kwargs",
        "request",
        "method",
        "request",
        "send",
        "raw",
        "plugin",
        "init",
        "options",
        "configuration",
        "plugin",
        "request",
        "options",
        "plugin",
        "rpc",
        "stop",
        "threading",
        "target",
        "plugin",
        "child",
        "watch",
        "watch_thread",
        "start",
        "plugin",
        "child",
        "handle_init",
        "request",
        "plugin",
        "manifest",
        "opt",
        "manifest",
        "get",
        "plugin",
        "add_option",
        "opt",
        "opt",
        "opt",
        "m",
        "manifest",
        "get",
        "plugin",
        "add_method",
        "m",
        "plugin",
        "child",
        "proxy_method",
        "background",
        "s",
        "manifest",
        "get",
        "plugin",
        "add_subscription",
        "s",
        "plugin",
        "child",
        "proxy_subscription",
        "h",
        "manifest",
        "get",
        "plugin",
        "add_hook",
        "h",
        "plugin",
        "child",
        "proxy_method",
        "background",
        "plugin",
        "method",
        "plugin",
        "plugin",
        "child",
        "child",
        "restart",
        "psutil",
        "Process",
        "parent",
        "parent",
        "cmdline",
        "c",
        "cmdline",
        "c",
        "startswith",
        "prefix",
        "c",
        "len",
        "prefix",
        "plugin",
        "path",
        "ChildPlugin",
        "plugin",
        "path",
        "plugin",
        "plugin",
        "child",
        "start",
        "inject_manifest",
        "plugin",
        "plugin",
        "child",
        "manifest",
        "plugin",
        "add_option",
        "plugin",
        "run"
    ],
    "literals": [
        "'stopped'",
        "\"Detected a change in the child plugin, restarting...\"",
        "\"Failed to start plugin, will wait for next change and try again.\"",
        "'warn'",
        "'plugin'",
        "'request'",
        "'jsonrpc'",
        "'2.0'",
        "'method'",
        "'params'",
        "'id'",
        "\"Forwarding\"",
        "'params'",
        "'options'",
        "'params'",
        "'options'",
        "'autoreload'",
        "\"Sent init to child plugin\"",
        "b''",
        "b'}\\n'",
        "\"UTF-8\"",
        "\"UTF-8\"",
        "\"UTF-8\"",
        "'stopped'",
        "'started'",
        "'warn'",
        "'started'",
        "'stopped'",
        "'Restarting child plugin'",
        "\"Sent init to child plugin\"",
        "'started'",
        "'jsonrpc'",
        "'2.0'",
        "'id'",
        "'method'",
        "'getmanifest'",
        "'params'",
        "\"Child plugin does not seem to be sending valid JSON: {}\"",
        "'id'",
        "'id'",
        "'result'",
        "'id'",
        "'id'",
        "'id'",
        "b''",
        "\"Child plugin exited\"",
        "'UTF-8'",
        "b'\\n\\n'",
        "'jsonrpc'",
        "'2.0'",
        "'method'",
        "'params'",
        "'id'",
        "'jsonrpc'",
        "'2.0'",
        "'method'",
        "'params'",
        "'autoreload-plugin'",
        "'null'",
        "\"Cannot run the autoreload plugin on its own, please specify --autoreload-plugin\"",
        "\"options\"",
        "'name'",
        "'default'",
        "'description'",
        "\"rpcmethods\"",
        "'name'",
        "\"subscriptions\"",
        "\"hooks\"",
        "'autoreload-restart'",
        "'--autoreload-plugin='",
        "\"Could not start the plugin under development, can't continue\"",
        "\"autoreload-plugin\"",
        "\"Path to the plugin that we should be watching and reloading.\""
    ],
    "variables": [
        "plugin",
        "path",
        "plugin",
        "status",
        "proc",
        "iolock",
        "decoder",
        "manifest",
        "init",
        "reader",
        "last",
        "now",
        "last",
        "init",
        "opts",
        "buff",
        "b",
        "buff",
        "objs",
        "len_used",
        "buff",
        "buff",
        "proc",
        "status",
        "reader",
        "status",
        "msg",
        "manifest",
        "msg",
        "line",
        "reader",
        "reader",
        "daemon",
        "raw",
        "raw",
        "watch_thread",
        "watch_thread",
        "daemon",
        "child",
        "parent",
        "cmdline",
        "plugin",
        "path",
        "prefix",
        "plugin",
        "path",
        "plugin",
        "child"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "These may have been added by the plugin framework and we won't be",
        "able to serialize them when forwarding, so delete them.",
        "Now remove any options that we registered on behalf of the child",
        "plugin. It'd not understand them if we forward them.",
        "Convert late to UTF-8 so glyphs split across recvs do not",
        "impact us",
        "Probably didn't read enough",
        "First read the init reply, and then we can switch to passthru",
        "We can't rely on @plugin.init to tell us the plugin we need to watch and",
        "reload since we need to start it to pass through its manifest before we get",
        "any cli options. So we're doomed to get our parent cmdline and parse out the",
        "argument by hand.",
        "If we can't start on the first attempt we can't inject into the",
        "manifest, no point in continuing.",
        "Now we can run the actual plugin"
    ],
    "docstrings": [
        "\"\"\"Lightningd has sent us its first init message, clean and forward.\n        \"\"\"",
        "\"\"\"Once we have the manifest from the child plugin, inject it into our own.\n    \"\"\"",
        "\"\"\"Manually triggers a restart of the plugin controlled by autoreload.\n    \"\"\""
    ],
    "functions": [
        "watch",
        "handle_init",
        "_readobj",
        "start",
        "stop",
        "restart",
        "getmanifest",
        "passthru",
        "read_loop",
        "send",
        "proxy_method",
        "proxy_subscription",
        "init",
        "inject_manifest",
        "restart"
    ],
    "classes": [
        "ChildPlugin"
    ]
}