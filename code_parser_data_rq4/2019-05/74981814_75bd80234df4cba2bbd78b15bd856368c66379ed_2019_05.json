{
    "identifiers": [
        "de",
        "urmel_dl",
        "dbt",
        "rc",
        "rest",
        "v2",
        "java",
        "io",
        "java",
        "io",
        "OutputStream",
        "java",
        "lang",
        "annotation",
        "Annotation",
        "java",
        "lang",
        "reflect",
        "Type",
        "javax",
        "ws",
        "rs",
        "Produces",
        "javax",
        "ws",
        "rs",
        "WebApplicationException",
        "javax",
        "ws",
        "rs",
        "core",
        "HttpHeaders",
        "javax",
        "ws",
        "rs",
        "core",
        "MediaType",
        "javax",
        "ws",
        "rs",
        "core",
        "MultivaluedMap",
        "javax",
        "ws",
        "rs",
        "core",
        "Response",
        "javax",
        "ws",
        "rs",
        "ext",
        "MessageBodyWriter",
        "javax",
        "ws",
        "rs",
        "ext",
        "Provider",
        "de",
        "urmel_dl",
        "dbt",
        "rc",
        "datamodel",
        "slot",
        "entries",
        "FileEntry",
        "Provider",
        "Produces",
        "Override",
        "genericType",
        "annotations",
        "mediaType",
        "isAssignableFrom",
        "Override",
        "fileEntry",
        "genericType",
        "annotations",
        "mediaType",
        "httpHeaders",
        "entityStream",
        "fileEntry",
        "getContent",
        "httpHeaders",
        "add",
        "HttpHeaders",
        "CONTENT_DISPOSITION",
        "fileEntry",
        "getName",
        "httpHeaders",
        "add",
        "HttpHeaders",
        "CONTENT_TYPE",
        "fileEntry",
        "getContent",
        "getMimeType",
        "httpHeaders",
        "add",
        "HttpHeaders",
        "ETAG",
        "fileEntry",
        "getHash",
        "fileEntry",
        "getContent",
        "sendTo",
        "entityStream",
        "Response",
        "Status",
        "NOT_FOUND"
    ],
    "literals": [
        "\"*/*\"",
        "\"attachment; filename = \\\"\"",
        "\"\\\"\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* This file is part of the Digitale Bibliothek Th√ºringen\n * Copyright (C) 2000-2018\n * See <https://www.db-thueringen.de/> and <https://github.com/ThULB/dbt/>\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.",
        "* @author Ren\\u00E9 Adler (eagle)\n *",
        "(non-Javadoc)\n     * @see javax.ws.rs.ext.MessageBodyWriter#isWriteable(java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType)",
        "(non-Javadoc)\n     * @see javax.ws.rs.ext.MessageBodyWriter#writeTo(java.lang.Object, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[], javax.ws.rs.core.MediaType, javax.ws.rs.core.MultivaluedMap, java.io.OutputStream)"
    ],
    "functions": [
        "isWriteable",
        "writeTo"
    ],
    "classes": [
        "FileEntryMessageBodyWriter"
    ]
}