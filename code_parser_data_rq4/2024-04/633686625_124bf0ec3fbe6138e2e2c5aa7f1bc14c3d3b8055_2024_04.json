{
    "identifiers": [
        "org",
        "apache",
        "fury",
        "memory",
        "java",
        "lang",
        "reflect",
        "Field",
        "java",
        "nio",
        "Buffer",
        "java",
        "nio",
        "ByteBuffer",
        "org",
        "apache",
        "fury",
        "util",
        "Preconditions",
        "BUFFER_ADDRESS_FIELD_OFFSET",
        "BUFFER_CAPACITY_FIELD_OFFSET",
        "addressField",
        "getDeclaredField",
        "BUFFER_ADDRESS_FIELD_OFFSET",
        "Platform",
        "objectFieldOffset",
        "addressField",
        "Preconditions",
        "checkArgument",
        "BUFFER_ADDRESS_FIELD_OFFSET",
        "capacityField",
        "getDeclaredField",
        "BUFFER_CAPACITY_FIELD_OFFSET",
        "Platform",
        "objectFieldOffset",
        "capacityField",
        "Preconditions",
        "checkArgument",
        "BUFFER_CAPACITY_FIELD_OFFSET",
        "e",
        "e",
        "buffer",
        "Preconditions",
        "checkNotNull",
        "buffer",
        "Preconditions",
        "checkArgument",
        "buffer",
        "isDirect",
        "offHeapAddress",
        "offHeapAddress",
        "Platform",
        "getLong",
        "buffer",
        "BUFFER_ADDRESS_FIELD_OFFSET",
        "t",
        "t",
        "offHeapAddress",
        "localBuffer",
        "ByteBuffer",
        "allocateDirect",
        "address",
        "size",
        "buffer",
        "localBuffer",
        "duplicate",
        "Platform",
        "putLong",
        "buffer",
        "BUFFER_ADDRESS_FIELD_OFFSET",
        "address",
        "Platform",
        "putInt",
        "buffer",
        "BUFFER_CAPACITY_FIELD_OFFSET",
        "size",
        "buffer",
        "clear",
        "buffer",
        "t",
        "t",
        "buffer",
        "address",
        "size",
        "Preconditions",
        "checkArgument",
        "buffer",
        "isDirect",
        "Platform",
        "putLong",
        "buffer",
        "BUFFER_ADDRESS_FIELD_OFFSET",
        "address",
        "Platform",
        "putInt",
        "buffer",
        "BUFFER_CAPACITY_FIELD_OFFSET",
        "size",
        "buffer",
        "clear",
        "address",
        "size",
        "createDirectByteBufferFromNativeAddress",
        "address",
        "size",
        "buffer",
        "address",
        "size",
        "Platform",
        "putLong",
        "buffer",
        "BUFFER_ADDRESS_FIELD_OFFSET",
        "address",
        "Platform",
        "putInt",
        "buffer",
        "BUFFER_CAPACITY_FIELD_OFFSET",
        "size",
        "buffer",
        "clear",
        "buffer",
        "buffer",
        "clear",
        "buffer",
        "buffer",
        "flip",
        "buffer",
        "buffer",
        "rewind",
        "buffer",
        "pos",
        "buffer",
        "position",
        "pos"
    ],
    "literals": [
        "\"address\"",
        "\"capacity\"",
        "\"buffer is null\"",
        "\"Can't get address of a non-direct ByteBuffer.\"",
        "\"Could not access direct byte buffer address field.\"",
        "\"Failed to wrap unsafe off-heap memory with ByteBuffer\"",
        "\"Can't wrap native memory into a non-direct ByteBuffer.\""
    ],
    "variables": [
        "BUFFER_ADDRESS_FIELD_OFFSET",
        "BUFFER_CAPACITY_FIELD_OFFSET",
        "offHeapAddress"
    ],
    "comments": [
        "ByteBuffer.allocateDirect(0) is about 30x slower than `localBuffer.duplicate()`."
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.",
        "Create a direct buffer from native memory represented by address [address, address + size).",
        "Wrap a buffer [address, address + size) into provided <code>buffer</code>.",
        "Wrap a buffer [address, address + size) into provided <code>buffer</code>."
    ],
    "functions": [
        "getAddress",
        "ByteBuffer",
        "createDirectByteBufferFromNativeAddress",
        "wrapDirectByteBufferFromNativeAddress",
        "ByteBuffer",
        "wrapDirectBuffer",
        "wrapDirectBuffer",
        "clearBuffer",
        "flipBuffer",
        "rewind",
        "position"
    ],
    "classes": [
        "ByteBufferUtil"
    ]
}