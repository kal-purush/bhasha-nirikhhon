{
    "identifiers": [
        "datetime",
        "datetime",
        "datetime",
        "now",
        "matplotlib",
        "pyplot",
        "plt",
        "pandas",
        "pd",
        "pickle",
        "torch",
        "sklearn",
        "feature_selection",
        "SelectKBest",
        "sklearn",
        "preprocessing",
        "StandardScaler",
        "datetime",
        "now",
        "start",
        "total_seconds",
        "datetime",
        "now",
        "pd",
        "read_csv",
        "pd",
        "read_csv",
        "df",
        "dropna",
        "df",
        "drop",
        "axis",
        "df",
        "values",
        "load_standard_scaler",
        "ss",
        "transform",
        "X",
        "load_k_best",
        "skb",
        "transform",
        "X",
        "X",
        "Y",
        "StandardScaler",
        "open",
        "f",
        "pickle",
        "load",
        "f",
        "std_scaler",
        "SelectKBest",
        "open",
        "f",
        "pickle",
        "load",
        "f",
        "k_best",
        "torch",
        "nn",
        "Sequential",
        "model",
        "add_module",
        "torch",
        "nn",
        "Linear",
        "D",
        "model",
        "add_module",
        "torch",
        "nn",
        "Tanh",
        "model",
        "add_module",
        "torch",
        "nn",
        "Linear",
        "K",
        "model",
        "load_state_dict",
        "torch",
        "load",
        "model",
        "eval",
        "load_dataset",
        "model",
        "forward",
        "torch",
        "from_numpy",
        "X",
        "logits",
        "data",
        "numpy",
        "datetime",
        "now",
        "start",
        "total_seconds",
        "datetime",
        "now",
        "ax1",
        "ax2",
        "plt",
        "subplots",
        "figsize",
        "ax1",
        "title",
        "set_text",
        "ax1",
        "scatter",
        "Y",
        "Y_pred",
        "ax1",
        "plot",
        "c",
        "ax1",
        "set_xlabel",
        "ax1",
        "set_ylabel",
        "ax1",
        "set_ylim",
        "ax1",
        "set_xlim",
        "ax2",
        "title",
        "set_text",
        "ax2",
        "scatter",
        "Y",
        "Y_pred",
        "ax2",
        "plot",
        "c",
        "ax2",
        "set_xlabel",
        "ax2",
        "set_ylabel",
        "datetime",
        "now",
        "start",
        "total_seconds",
        "datetime",
        "now",
        "plt",
        "show"
    ],
    "literals": [
        "\"____  _____\"",
        "\"Olie\\\\/ortex Analytics: ProductionLi.py\"",
        "f\"Create Lifted Index predictions from Deep Learning Model\"",
        "f\"Effective date: 2010 - 2023 Chanhassen\"",
        "f\"Imports        : {(datetime.now()-start).total_seconds()*1000.:.2f}ms\"",
        "'c:/workspace/dillon.csv'",
        "'li'",
        "'c:/workspace/li.csv'",
        "'date'",
        "'hour'",
        "'li'",
        "'li'",
        "'c:/workspace/li_std_scaler.skl'",
        "'rb'",
        "'c:/workspace/li_k_best.skl'",
        "'rb'",
        "\"dense1\"",
        "\"tanh1\"",
        "\"dense2\"",
        "'c:/workspace/li_fnn.pt'",
        "f\"Make Prediction: {(datetime.now()-start).total_seconds()*1000.:.2f}ms\"",
        "'Interesting Region'",
        "'k'",
        "'actual'",
        "'prediction'",
        "'Full Region'",
        "'k'",
        "'actual'",
        "'prediction'",
        "f\"Draw Graph     : {(datetime.now()-start).total_seconds()*1000.:.2f}ms\""
    ],
    "variables": [
        "start",
        "start",
        "D",
        "K",
        "df",
        "df",
        "df",
        "X",
        "Y",
        "ss",
        "X",
        "skb",
        "X",
        "std_scaler",
        "k_best",
        "model",
        "X",
        "Y",
        "logits",
        "Y_pred",
        "start",
        "fig",
        "start"
    ],
    "comments": [
        "Remove data with NaN values",
        "Separate the datasets",
        "Scale the X dataset",
        "Select the best n features"
    ],
    "docstrings": [],
    "functions": [
        "load_dataset",
        "load_standard_scaler",
        "load_k_best"
    ],
    "classes": []
}