{
    "identifiers": [
        "ru",
        "yandex",
        "practicum",
        "filmorate",
        "controller",
        "lombok",
        "slf4j",
        "Slf4j",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "GetMapping",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "PostMapping",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "PutMapping",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "RequestBody",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "RequestMapping",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "RestController",
        "ru",
        "yandex",
        "practicum",
        "filmorate",
        "exception",
        "ConditionsNotMetException",
        "ru",
        "yandex",
        "practicum",
        "filmorate",
        "exception",
        "DataFormatException",
        "ru",
        "yandex",
        "practicum",
        "filmorate",
        "exception",
        "DuplicatedDataException",
        "ru",
        "yandex",
        "practicum",
        "filmorate",
        "exception",
        "NotFoundException",
        "ru",
        "yandex",
        "practicum",
        "filmorate",
        "model",
        "User",
        "javax",
        "validation",
        "Valid",
        "java",
        "util",
        "Collection",
        "java",
        "util",
        "java",
        "util",
        "Slf4j",
        "RestController",
        "RequestMapping",
        "users",
        "GetMapping",
        "users",
        "values",
        "PostMapping",
        "Valid",
        "RequestBody",
        "user",
        "userValidation",
        "user",
        "user",
        "setId",
        "getNextId",
        "log",
        "debug",
        "user",
        "getId",
        "users",
        "put",
        "user",
        "getId",
        "user",
        "user",
        "exception",
        "log",
        "error",
        "exception",
        "exception",
        "PutMapping",
        "Valid",
        "RequestBody",
        "updatedUser",
        "updatedUser",
        "getId",
        "users",
        "containsKey",
        "updatedUser",
        "getId",
        "userValidation",
        "updatedUser",
        "users",
        "put",
        "updatedUser",
        "getId",
        "updatedUser",
        "log",
        "debug",
        "updatedUser",
        "getId",
        "updatedUser",
        "updatedUser",
        "getId",
        "exception",
        "log",
        "error",
        "exception",
        "exception",
        "user",
        "user",
        "getLogin",
        "contains",
        "errorMessage",
        "log",
        "error",
        "errorMessage",
        "errorMessage",
        "user",
        "getName",
        "user",
        "getName",
        "isBlank",
        "user",
        "setName",
        "user",
        "getLogin",
        "existingUser",
        "users",
        "values",
        "existingUser",
        "getEmail",
        "equals",
        "user",
        "getEmail",
        "existingUser",
        "getId",
        "user",
        "getId",
        "errorMessage",
        "log",
        "error",
        "errorMessage",
        "errorMessage",
        "currentMaxId",
        "users",
        "keySet",
        "stream",
        "mapToLong",
        "id",
        "id",
        "max",
        "orElse",
        "currentMaxId"
    ],
    "literals": [
        "\"/users\"",
        "\"Set to user ID \"",
        "\"Error occurred while creating user\"",
        "\"The ID must be specified\"",
        "\"User with ID \"",
        "\" updated successfully\"",
        "\"User with id = \"",
        "\" not found\"",
        "\"Error occurred while updating user\"",
        "\" \"",
        "\"Login contains spaces\"",
        "\"This email is already in use\""
    ],
    "variables": [],
    "comments": [
        "check necessary conditions",
        "generate additional data",
        "save the new user in the application memory",
        "check necessary conditions",
        "if the user is found and all conditions are met, update its content",
        "auxiliary method for generating the identifier of a new user"
    ],
    "docstrings": [],
    "functions": [
        "findAll",
        "User",
        "create",
        "User",
        "update",
        "userValidation",
        "getNextId"
    ],
    "classes": [
        "UserController"
    ]
}