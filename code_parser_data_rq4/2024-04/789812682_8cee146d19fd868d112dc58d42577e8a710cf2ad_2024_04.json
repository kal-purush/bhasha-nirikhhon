{
    "identifiers": [
        "K",
        "getEntryBySlug",
        "collection",
        "entrySlug",
        "getDataEntryById",
        "collection",
        "entryId",
        "getCollection",
        "collection",
        "entry",
        "entry",
        "getCollection",
        "collection",
        "entry",
        "getEntry",
        "entry",
        "getEntry",
        "entry",
        "getEntry",
        "collection",
        "slug",
        "getEntry",
        "collection",
        "id",
        "getEntries",
        "entries",
        "getEntries",
        "entries",
        "reference",
        "collection",
        "",
        "reference",
        "collection",
        "",
        "args",
        ""
    ],
    "literals": [
        "'astro:content'",
        "'.md'",
        "'astro'",
        "'Content'",
        "'astro'",
        "string",
        "'astro:content'",
        "string",
        "'slug'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'astro/zod'",
        "'astro/zod'",
        "string",
        "'astro/zod'",
        "'astro/zod'",
        "'astro/zod'",
        "'collections'",
        "'schema'"
    ],
    "variables": [],
    "comments": [
        "Note that this has to accept a regular string too, for SSR",
        "Resolve an array of entry references from the same collection",
        "Allow generic `string` to avoid excessive type errors in the config",
        "if `dev` is not running to update as you edit.",
        "Invalid collection names will be caught at build time."
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}