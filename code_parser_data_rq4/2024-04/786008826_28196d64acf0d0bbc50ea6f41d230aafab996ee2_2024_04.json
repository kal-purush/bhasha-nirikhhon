{
    "identifiers": [
        "os",
        "shutil",
        "sys",
        "text",
        "text",
        "replace",
        "lower",
        "rstrip",
        "project_root",
        "root",
        "dirs",
        "_",
        "os",
        "walk",
        "project_root",
        "r",
        "rms",
        "r",
        "dirs",
        "rep",
        "os",
        "path",
        "join",
        "root",
        "r",
        "os",
        "path",
        "exists",
        "r",
        "r",
        "end",
        "shutil",
        "rmtree",
        "r",
        "r",
        "f",
        "f",
        "split",
        "_f",
        "l",
        "_f",
        "_f",
        "_I",
        "_I",
        "_f",
        "project_root",
        "os",
        "popen",
        "read",
        "line",
        "res",
        "splitlines",
        "I",
        "append",
        "rep",
        "line",
        "root",
        "_",
        "files",
        "os",
        "walk",
        "project_root",
        "file",
        "files",
        "file",
        "split",
        "rep",
        "os",
        "path",
        "join",
        "root",
        "file",
        "replace",
        "project_root",
        "strip",
        "f",
        "I",
        "is_test_dir",
        "f",
        "file",
        "split",
        "F",
        "append",
        "f",
        "rep",
        "root",
        "replace",
        "project_root",
        "strip",
        "is_test_dir",
        "d",
        "d",
        "lstrip",
        "d",
        "D",
        "D",
        "append",
        "d",
        "D",
        "F",
        "len",
        "sys",
        "argv",
        "os",
        "_exit",
        "rep",
        "sys",
        "argv",
        "check",
        "project_root",
        "F",
        "os",
        "_exit",
        "os",
        "system",
        "project_root",
        "project_root",
        "sels",
        "dir",
        "D",
        "rep",
        "os",
        "path",
        "join",
        "project_root",
        "dir",
        "dir",
        "sels",
        "sels",
        "append",
        "dir",
        "len",
        "sels",
        "dir",
        "dir",
        "project_root",
        "rep",
        "os",
        "path",
        "dirname",
        "dir",
        "dir",
        "sels",
        "sels",
        "append",
        "dir",
        "len",
        "sels",
        "dir",
        "len",
        "sels",
        "l",
        "input",
        "idx",
        "os",
        "_exit",
        "idx",
        "idx",
        "idx",
        "l",
        "l",
        "idx",
        "sels",
        "idx",
        "os",
        "path",
        "basename",
        "project_root",
        "project_root",
        "rm_build_dirs",
        "project_root",
        "check",
        "project_root",
        "len",
        "F",
        "len",
        "F",
        "os",
        "_exit",
        "open",
        "os",
        "path",
        "join",
        "project_root",
        "ff",
        "ff",
        "write",
        "ff",
        "write",
        "proj_name",
        "encode",
        "ff",
        "write",
        "ff",
        "write",
        "ff",
        "write",
        "f",
        "F",
        "f",
        "ff",
        "write",
        "f",
        "encode",
        "ff",
        "write",
        "ff",
        "write",
        "d",
        "D",
        "d",
        "d",
        "ff",
        "write",
        "d",
        "encode",
        "ff",
        "write",
        "os",
        "system",
        "project_root"
    ],
    "literals": [
        "\"\\\\\"",
        "\"/\"",
        "\"/\"",
        "\"build\"",
        "\".cache\"",
        "f\"Deleting {r}, \"",
        "\"\"",
        "f\"Deleted {r}.\"",
        "\"/\"",
        "\".\"",
        "\"test\"",
        "\"bak\"",
        "\"build\"",
        "\".cache\"",
        "\"git ls-files --exclude-standard --ignored --others\"",
        "\"\"",
        "\".\"",
        "\"c\"",
        "\"h\"",
        "\"cpp\"",
        "\"/\"",
        "\"\"",
        "\"/\"",
        "\".\"",
        "\"c\"",
        "\"cpp\"",
        "\"\"",
        "\"/\"",
        "\"/\"",
        "\"__main__\"",
        "\"cd \"",
        "r\" && del /s /q .cache & rd /s /q .cache & del /s /q build & rd /s /q build\"",
        "\"create CMakeLists.txt at which one:\"",
        "\"1. %s\"",
        "\"%d. %s\"",
        "\"%d. %s\"",
        "\"> \"",
        "\"exit\"",
        "\"project_root:\"",
        "\"no c source files!\"",
        "\"CMakeLists.txt\"",
        "\"wb\"",
        "b\"cmake_minimum_required(VERSION 3.5)\\n\"",
        "f\"set(PROJECT_NAME {proj_name})\\n\"",
        "\"utf-8\"",
        "b'set(CMAKE_C_FLAGS \"-Wall -s -ffunction-sections -fdata-sections -Wl,--gc-sections -O2\")\\n'",
        "b\"project(${PROJECT_NAME})\\n\\n\"",
        "b\"add_executable(${PROJECT_NAME}\\n\"",
        "'        \"${PROJECT_SOURCE_DIR}/'",
        "'\"\\n'",
        "\"utf-8\"",
        "b\"        )\\n\"",
        "b\"target_include_directories(${PROJECT_NAME} PUBLIC\\n\"",
        "'              \"${PROJECT_SOURCE_DIR}'",
        "'\"\\n'",
        "'              \"${PROJECT_SOURCE_DIR}/'",
        "'\"\\n'",
        "\"utf-8\"",
        "b\"              )\\n\"",
        "\"cd \"",
        "r' & cmake -B build -G \"MinGW Makefiles\" -DCMAKE_EXPORT_COMPILE_COMMANDS=1 && cd build & copy compile_commands.json ..\\ /y & cd ..'"
    ],
    "variables": [
        "rms",
        "r",
        "l",
        "I",
        "res",
        "D",
        "F",
        "f",
        "d",
        "d",
        "project_root",
        "D",
        "F",
        "sels",
        "dir",
        "dir",
        "idx",
        "l",
        "idx",
        "idx",
        "idx",
        "idx",
        "idx",
        "project_root",
        "proj_name",
        "D",
        "F",
        "f",
        "d",
        "d"
    ],
    "comments": [
        "can not be in with block!"
    ],
    "docstrings": [],
    "functions": [
        "rep",
        "rm_build_dirs",
        "is_test_dir",
        "check"
    ],
    "classes": []
}