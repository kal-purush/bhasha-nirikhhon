{
    "identifiers": [
        "torch",
        "os",
        "path",
        "osp",
        "numpy",
        "np",
        "scipy",
        "sparse",
        "sp",
        "torch_geometric",
        "data",
        "Data",
        "torch_sparse",
        "coalesce",
        "path",
        "dataset",
        "train_percent",
        "format",
        "dataset",
        "dataset",
        "osp",
        "join",
        "path",
        "dataset",
        "file_name",
        "np",
        "genfromtxt",
        "p2idx_features_labels",
        "dtype",
        "np",
        "dtype",
        "sp",
        "csr_matrix",
        "idx_features_labels",
        "dtype",
        "np",
        "float32",
        "torch",
        "LongTensor",
        "idx_features_labels",
        "astype",
        "np",
        "array",
        "idx_features_labels",
        "dtype",
        "np",
        "int32",
        "j",
        "i",
        "i",
        "j",
        "idx",
        "dataset",
        "osp",
        "join",
        "path",
        "dataset",
        "file_name",
        "np",
        "genfromtxt",
        "p2edges_unordered",
        "dtype",
        "np",
        "int32",
        "np",
        "array",
        "idx_map",
        "get",
        "edges_unordered",
        "flatten",
        "dtype",
        "np",
        "int32",
        "reshape",
        "edges_unordered",
        "shape",
        "edges",
        "T",
        "edge_index",
        "max",
        "edge_index",
        "min",
        "len",
        "np",
        "unique",
        "edge_index",
        "edge_index",
        "max",
        "edge_index",
        "max",
        "edge_index",
        "max",
        "num_nodes",
        "np",
        "hstack",
        "edge_index",
        "edge_index",
        "Data",
        "x",
        "torch",
        "FloatTensor",
        "np",
        "array",
        "features",
        "num_nodes",
        "todense",
        "edge_index",
        "torch",
        "LongTensor",
        "edge_index",
        "y",
        "labels",
        "num_nodes",
        "len",
        "np",
        "unique",
        "edge_index",
        "data",
        "edge_index",
        "data",
        "edge_attr",
        "coalesce",
        "data",
        "edge_index",
        "total_num_node_id_he_id",
        "total_num_node_id_he_id",
        "num_nodes",
        "len",
        "np",
        "unique",
        "labels",
        "num_nodes",
        "numpy",
        "n_x",
        "train_percent",
        "num_he",
        "data"
    ],
    "literals": [
        "\"load_line_expansion_dataset\"",
        "\"cocitation-cora\"",
        "'Loading {} dataset...'",
        "f'{dataset}.content'",
        "'load features'",
        "f'{dataset}.edges'",
        "'load edges'"
    ],
    "variables": [
        "__all__",
        "file_name",
        "p2idx_features_labels",
        "idx_features_labels",
        "features",
        "labels",
        "idx",
        "idx_map",
        "file_name",
        "p2edges_unordered",
        "edges_unordered",
        "edges",
        "edge_index",
        "num_nodes",
        "num_he",
        "edge_index",
        "data",
        "total_num_node_id_he_id",
        "n_x",
        "num_class",
        "data",
        "n_x",
        "data",
        "train_percent",
        "data",
        "num_hyperedges"
    ],
    "comments": [
        "load edges, features, and labels.",
        "features = np.array(idx_features_labels[:, 1:-1])",
        "labels = encode_onehot(idx_features_labels[:, -1])",
        "build graph",
        "From adjacency matrix to edge_list",
        "ipdb.set_trace()",
        "check if values in edge_index is consecutive. i.e. no missing value for node_id/he_id.",
        "build torch data class",
        "used user function to override the default function.",
        "the following will also sort the edge_index and remove duplicates.",
        "n_x = n_expanded",
        "add parameters to attribute"
    ],
    "docstrings": [],
    "functions": [
        "load_line_expansion_dataset"
    ],
    "classes": []
}