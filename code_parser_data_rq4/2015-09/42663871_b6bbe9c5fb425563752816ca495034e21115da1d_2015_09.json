{
    "identifiers": [
        "numpy",
        "np",
        "np",
        "array",
        "magnetic_field",
        "time_list",
        "initial_state",
        "np",
        "zeros",
        "gyromagnetic_ratio",
        "t1",
        "np",
        "inf",
        "t2",
        "np",
        "inf",
        "magnetic_field",
        "time_list",
        "initial_state",
        "gyromagnetic_ratio",
        "t1",
        "t2",
        "property",
        "time_list",
        "gyromagnetic_ratio",
        "magnetic_field",
        "all",
        "conditions",
        "time",
        "is_solvable",
        "UnableToSolveSystemError",
        "isinstance",
        "time",
        "np",
        "array",
        "time",
        "isinstance",
        "time",
        "np",
        "ndarray",
        "t1",
        "np",
        "ones",
        "time",
        "shape",
        "t2",
        "np",
        "ones",
        "time",
        "shape",
        "t1",
        "t2",
        "gyromagnetic_ratio",
        "magnetic_field",
        "time",
        "np",
        "array",
        "t2",
        "gamma",
        "bz",
        "gamma",
        "by",
        "gamma",
        "bz",
        "t2",
        "gamma",
        "bx",
        "gamma",
        "by",
        "gamma",
        "bx",
        "t1",
        "is_solvable",
        "UnableToSolveSystemError",
        "time_list",
        "time_list",
        "np",
        "zeros",
        "len",
        "initial_state",
        "len",
        "time_list",
        "initial_state",
        "index",
        "xrange",
        "len",
        "time_list",
        "time_list",
        "index",
        "get_bloch_matrix",
        "time",
        "get_equilibrium_field",
        "solution",
        "index",
        "index",
        "init",
        "delta_t",
        "np",
        "dot",
        "init",
        "bloch_matrix",
        "eq_field",
        "solution",
        "np",
        "array",
        "t1",
        "field_functions",
        "field_functions",
        "t",
        "np",
        "cos",
        "t",
        "t",
        "np",
        "sin",
        "t",
        "t",
        "field_functions",
        "time",
        "f",
        "time",
        "f",
        "field_functions",
        "__class__",
        "field_functions",
        "bloch",
        "field",
        "bloch",
        "field",
        "property",
        "field",
        "field_functions",
        "driving_field",
        "setter",
        "field_functions",
        "field",
        "field_functions",
        "field_functions",
        "field_functions",
        "field",
        "funcs"
    ],
    "literals": [
        "'Michal Kononenko'",
        "'Unable to solve system'",
        "'Cannot solve system'",
        "'%s(%s)'"
    ],
    "variables": [
        "__author__",
        "equilibrium_magnetic_field",
        "magnetic_field",
        "time_list",
        "initial_state",
        "gyromagnetic_ratio",
        "t1",
        "t2",
        "conditions",
        "time",
        "t1",
        "t2",
        "t1",
        "t2",
        "gamma",
        "bx",
        "by",
        "bz",
        "delta_t",
        "solution",
        "solution",
        "time",
        "bloch_matrix",
        "eq_field",
        "init",
        "solution",
        "field_functions",
        "field_functions",
        "bloch_system",
        "field",
        "funcs",
        "funcs",
        "funcs",
        "field_functions"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\n    Contains all constants and problem parameters for the Bloch equations\n    \"\"\"",
        "\"\"\"\n    Models the magnetization vector :math:`\\nathbb{B} = (B_x, B_y, B_z)`\n    perturbing the system for which a solution is to be found\n\n    :arg perturbation_functions: A list of three functions of x, y, and z,\n    that give the value of the magnetic field in each spatial dimension. Each\n    function must take in a floating-point time value as an argument and return\n    the strength of the magnetic field in Tesla. Defaults to\n\n    ..math::\n        \\mathbb{B} = ( \\cos(t), \\sin(t), 1)\n    \"\"\"",
        "\"\"\"\n        Instantiates the variables listed above\n        \"\"\"",
        "\"\"\" Evaluates the magnetic field at a given time t\n        :param float time: The time value for which the field is to be\n        evaluated\n        :return: A list of the magnetic field components\n        \"\"\"",
        "\"\"\" Contains methods to analyze the return signal given a field and a\n    Bloch system\n    \"\"\""
    ],
    "functions": [
        "is_solvable",
        "get_bloch_matrix",
        "solve",
        "get_equilibrium_field",
        "__call__",
        "__repr__",
        "driving_field",
        "driving_field"
    ],
    "classes": [
        "UnableToSolveSystemError",
        "BlochSystem",
        "MagneticField",
        "SignalAnalyzer"
    ]
}