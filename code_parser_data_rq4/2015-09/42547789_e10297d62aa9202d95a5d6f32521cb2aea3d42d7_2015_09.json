{
    "identifiers": [
        "RouteFilters",
        "describe",
        "angular",
        "$injector",
        "Route",
        "$injector",
        "mockedState",
        "beforeEach",
        "angular",
        "beforeEach",
        "angular",
        "_route",
        "route",
        "_route",
        "describe",
        "describe",
        "it",
        "expect",
        "route",
        "testService",
        "anotherService",
        "it",
        "expect",
        "route",
        "it",
        "expect",
        "route",
        "it",
        "route",
        "route",
        "expect",
        "beforeFilter",
        "expect",
        "beforeFilter",
        "it",
        "expect",
        "route",
        "describe",
        "beforeEach",
        "spies",
        "sinon",
        "sinon",
        "conditions",
        "sinon",
        "sinon",
        "sinon",
        "sinon",
        "sinon",
        "sinon",
        "sinon",
        "sinon",
        "resolutions",
        "sinon",
        "sinon",
        "sinon",
        "sinon",
        "route",
        "conditions",
        "route",
        "route",
        "resolve",
        "conditions",
        "resolve",
        "route",
        "conditions",
        "route",
        "resolve",
        "conditions",
        "resolve",
        "route",
        "conditions",
        "resolutions",
        "route",
        "resolve",
        "reject",
        "conditions",
        "reject",
        "resolutions",
        "route",
        "resolve",
        "reject",
        "conditions",
        "resolutions",
        "route",
        "condition",
        "condition",
        "route",
        "resolve",
        "reject",
        "finalFilter",
        "condition",
        "resolve",
        "reject",
        "condition",
        "route",
        "resolve",
        "reject",
        "reject",
        "it",
        "done",
        "bfName",
        "route",
        "bfName",
        "route",
        "beforeFilters",
        "sinon",
        "conditions",
        "conditions",
        "conditions",
        "conditions",
        "done",
        "it",
        "done",
        "bfName",
        "route",
        "bfName",
        "route",
        "beforeFilters",
        "spies",
        "spies",
        "expect",
        "spies",
        "done",
        "it",
        "done",
        "bfName",
        "route",
        "bfName",
        "route",
        "beforeFilters",
        "spies",
        "expect",
        "spies",
        "done",
        "it",
        "done",
        "bfName",
        "route",
        "bfName",
        "route",
        "beforeFilters",
        "spies",
        "expect",
        "spies",
        "done",
        "it",
        "done",
        "bfName",
        "route",
        "bfName",
        "route",
        "beforeFilters",
        "spies",
        "spies",
        "route",
        "beforeFilters",
        "spies",
        "sinon",
        "spies",
        "spies",
        "expect",
        "spies",
        "done",
        "it",
        "done",
        "bfName",
        "route",
        "bfName",
        "route",
        "beforeFilters",
        "spies",
        "spies",
        "route",
        "beforeFilters",
        "spies",
        "spies",
        "sinon",
        "spies",
        "spies",
        "expect",
        "spies",
        "done",
        "it",
        "done",
        "bfName",
        "route",
        "bfName",
        "route",
        "beforeFilters",
        "spies",
        "spies",
        "route",
        "beforeFilters",
        "spies",
        "spies",
        "route",
        "beforeFilters",
        "spies",
        "spies",
        "route",
        "beforeFilters",
        "sinon",
        "spies",
        "spies",
        "spies",
        "expect",
        "spies",
        "done"
    ],
    "literals": [
        "'use strict'",
        "'Route'",
        "'routeTestApp'",
        "'ui.router'",
        "'route'",
        "'$injector'",
        "'testService'",
        "'anotherService'",
        "'routeTestApp'",
        "'route'",
        "'Bootstrap'",
        "'beforeFilter()'",
        "'works with services magically injected'",
        "'test'",
        "'works with services injected as array annotations'",
        "'test'",
        "'testService'",
        "'anotherService'",
        "'throws error on undefined service'",
        "'test'",
        "'nonExistentService'",
        "'gets a registered BeforeFilter object'",
        "'test'",
        "'testService'",
        "'test'",
        "'function'",
        "'function'",
        "'throws an error when trying to get a non-existent beforeFilter'",
        "'noFilter'",
        "'Route.getBeforeFilterByName:'",
        "'A BeforeFilter with the name \"noFilter\" doesn\\'t exist!'",
        "'ApplyBeforeFilter'",
        "'passingSync'",
        "'passingSync'",
        "'passingAsync'",
        "'anotherPassingSync'",
        "'anotherPassingAsync'",
        "'failingSync'",
        "'failingAsync'",
        "'failingAsyncWithSyncError'",
        "'Sync Error'",
        "'failingFirstResolvedLaterSync'",
        "'failingFirstResolvedLaterAsync'",
        "'failingAsyncWithSyncErrorInResolution'",
        "'Sync Error in Resolution'",
        "'checks that all conditions are evaluated IN THE GIVEN ORDER'",
        "'passingSync'",
        "'passingAsync'",
        "'anotherPassingAsync'",
        "'anotherPassingSync'",
        "'resolves as long as all conditions are passing'",
        "'passingSync'",
        "'passingAsync'",
        "'anotherPassingAsync'",
        "'anotherPassingSync'",
        "'rejects as long as one condition is failing - Sync Condition'",
        "'passingSync'",
        "'passingAsync'",
        "'failingSync'",
        "'rejects and passes the failing BeforeFilter Error - Async Condition'",
        "'passingSync'",
        "'failingAsync'",
        "'resolves after failure and later resolution - Sync Condition'",
        "'passingSync'",
        "'passingAsync'",
        "'failingFirstResolvedLaterSync'",
        "'rejects after failure and later resolution and yet another failure - Sync Conditions'",
        "'passingSync'",
        "'failingFirstResolvedLaterSync'",
        "'failingSync'",
        "'resolves after multiple failures and later resolutions - Sync and Async conditions'",
        "'passingSync'",
        "'failingFirstResolvedLaterSync'",
        "'failingFirstResolvedLaterAsync'"
    ],
    "variables": [
        "route",
        "mockedState",
        "mockedStateChangeEvent",
        "beforeFilter",
        "spies",
        "conditions",
        "resolutions",
        "finalFilter",
        "condition",
        "condition",
        "beforeFilters",
        "beforeFilters",
        "beforeFilters",
        "beforeFilters",
        "beforeFilters",
        "beforeFilters",
        "beforeFilters"
    ],
    "comments": [
        "<reference path=\"../src/Route\" />",
        "Mock the angular module app",
        "",
        "'just a service'",
        "now that the condition passes, authorize again",
        "now that the condition passes, authorize again",
        "now that the condition passes, authorize again",
        "now that the condition passes, authorize again",
        "now that the condition passes, authorize again"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}