{
    "identifiers": [
        "random",
        "sys",
        "customDice",
        "diceCount",
        "diceSides",
        "customDice",
        "input",
        "input",
        "abs",
        "diceCount",
        "ValueError",
        "NameError",
        "abs",
        "diceSides",
        "ValueError",
        "NameError",
        "diceCount",
        "diceSides",
        "random",
        "sample",
        "diceSides",
        "diceCount",
        "sum",
        "rolledNumbers",
        "Player",
        "Dice",
        "input",
        "abs",
        "playerCount",
        "ValueError",
        "NameError",
        "playerCount",
        "currentPlayerOutcome",
        "currentPlayerName",
        "currentPlayerOutcome",
        "currentPlayerName",
        "input",
        "sys",
        "exit",
        "currentPlayerPosition",
        "boardLayout",
        "currentPlayerPosition",
        "KeyError",
        "currentPlayerPosition",
        "playerName",
        "playerPosition",
        "playerName",
        "playerPosition",
        "Dice",
        "Dice",
        "rollDice",
        "playerQuery",
        "playerQuery",
        "playerQuery",
        "playerQuery",
        "playerName",
        "playerQuery",
        "playerQuery",
        "playerQuery",
        "playerPosition",
        "playerQuery",
        "playerQuery",
        "playerQuery",
        "playerWon",
        "newPosition",
        "playerPosition",
        "newPosition",
        "playerName",
        "newPosition",
        "playerPosition",
        "newPosition",
        "Player",
        "rollDice",
        "newPosition",
        "playerName",
        "playerPosition",
        "newPosition",
        "playerPosition",
        "MAXPOSITION",
        "playerName",
        "playerPosition",
        "Dice",
        "customDice",
        "diceCount",
        "diceSides",
        "GameMaster",
        "game",
        "getPlayerCount",
        "playerCounter",
        "playerCount",
        "playerCounter",
        "input",
        "allPlayers",
        "append",
        "Player",
        "playerName",
        "playerNameTemp",
        "playerPosition",
        "turnCounter",
        "MAXPOSITION",
        "playerCounter",
        "playerCount",
        "dice",
        "rollDice",
        "rolledValue",
        "allPlayers",
        "playerCounter",
        "getPlayer",
        "allPlayers",
        "playerCounter",
        "movePlayer",
        "newPosition",
        "allPlayers",
        "playerCounter",
        "getPlayer",
        "game",
        "snlReposition",
        "currentPlayerPosition",
        "rePosition",
        "currentPlayerPosition",
        "allPlayers",
        "playerCounter",
        "getPlayer",
        "currentPlayerPosition",
        "rePosition",
        "allPlayers",
        "playerCounter",
        "movePlayer",
        "rePosition",
        "rePosition",
        "currentPlayerPosition",
        "allPlayers",
        "playerCounter",
        "getPlayer",
        "currentPlayerPosition",
        "rePosition",
        "allPlayers",
        "playerCounter",
        "movePlayer",
        "rePosition",
        "game",
        "winCheck",
        "allPlayers",
        "playerCounter",
        "getPlayer",
        "allPlayers",
        "playerCounter",
        "getPlayer"
    ],
    "literals": [
        "'How many dice can the game use? (Default is 1): '",
        "'How many sides does each dice have? (Default is 6): '",
        "'Invalid value. Number of dice can only be an integer with value 1 or more. Using default value of 1.'",
        "'Invalid value. Number of dice can only be an integer with value 1 or more. Using default value of 1.'",
        "'Invalid value. Number of sides a dice has can only be an integer with value 1 or more. Using default value of 6.'",
        "'Invalid value. Number of sides a dice has can only be an integer with value 1 or more. Using default value of 6.'",
        "'Enter number of players: '",
        "'Invalid value. Number of players can only be an integer with value 1 or more. Using default value of 1.'",
        "'Invalid value. Number of players can only be an integer with value 1 or more. Using default value of 1.'",
        "'Player'",
        "'won!'",
        "'Press any key to end program.'",
        "''",
        "'position'",
        "'name'",
        "'Name'",
        "'NAME'",
        "'position'",
        "'Position'",
        "'POSITION'",
        "'outcome'",
        "'Outcome'",
        "'OUTCOME'",
        "'Player'",
        "'cannot move until they roll a 6. They rolled a'",
        "'. Turn to next player.'",
        "'We have a 6! And'",
        "'moves to'",
        "'.'",
        "''",
        "'moves to'",
        "'.'",
        "'__main__'",
        "'Enter player'",
        "'name:'",
        "'position'",
        "'position'",
        "''",
        "'name'",
        "'found a ladder at'",
        "'! Moving to'",
        "'!'",
        "''",
        "'name'",
        "'was bitten by a snake at'",
        "'! Moving to'",
        "'!'",
        "'outcome'",
        "'name'"
    ],
    "variables": [
        "diceCount",
        "diceSides",
        "diceCount",
        "diceCount",
        "diceCount",
        "diceSides",
        "diceSides",
        "diceSides",
        "diceCount",
        "diceSides",
        "rolledNumbers",
        "Player",
        "Dice",
        "playerCount",
        "playerCount",
        "playerCount",
        "playerCount",
        "boardLayout",
        "playerName",
        "playerPosition",
        "playerWon",
        "Dice",
        "newPosition",
        "playerPosition",
        "playerPosition",
        "playerWon",
        "MAXPOSITION",
        "dice",
        "game",
        "playerCount",
        "allPlayers",
        "playerNameTemp",
        "rolledValue",
        "newPosition",
        "currentPlayerPosition",
        "rePosition"
    ],
    "comments": [
        "def setPlayers(self, playerCount = 0):",
        "''' Creates the players.",
        "Keyword args:",
        "playerCount -- (default: 0, -- User Input) Number of Players.",
        "Return: Dict",
        "'''",
        "self.playerList = {}",
        "if playerCount != 0:",
        "self.playerCount = playerCount",
        "else:",
        "self.playerCount = int(input('How many are playing? '))",
        "for idx in range(1,self.playerCount+1):",
        "print('Enter name of player ', idx, ':')",
        "playerNameTemp = input()",
        "self.playerList[idx] = playerNameTemp",
        "return(self.playerList)",
        "def playerTokens(self):",
        "playerTokenPosition = {}",
        "for idx in range(1,self.maxTokens+1):",
        "playerTokenPosition = {idx,playerTokenPosition}",
        "class Board(object):",
        "''' #Specifies the attributes of the board.",
        "'''",
        "boardLayout = {1:38,",
        "4:14,",
        "9:31,",
        "17:7,",
        "21:42,",
        "28:84,",
        "51:67,",
        "54:34,",
        "62:19,",
        "64:60,",
        "71:91,",
        "80:100,",
        "87:24,",
        "93:73,",
        "95:75,",
        "98:79}",
        "def startCheck(rolledNumbers,gateValue=[6]):",
        "''' Checks if the player has a rolled the gating values before they can move their token.",
        "Keyword args:",
        "rolledNumbers -- accepts the numbers rolled by the dice in a player's turn.",
        "gateValue -- specifies the value(s) the player needs to roll to begin play. Default is 6.",
        "Returns:boolean",
        "'''",
        "playerOpen = rolledNumbers in gateValue",
        "return(playerOpen)",
        "rolledNums = rollDice(getDice())",
        "print(rolledNums)",
        "print(startCheck(rolledNums))",
        "gameKeeper = GameKeeper()",
        "print(gameKeeper.setPlayers())",
        "dice = Dice(customDice=0,diceCount=1, diceSides=6)",
        "print(startCheck((dice.rollDice())))",
        "MAXPOSITION = 100",
        "createDice(sides,number)",
        "playerCount = input('Enter number of players: ')",
        "for loopCounter in range(1,playerCount):",
        "print('Enter player %d name:', loopCounter)",
        "playerNameTemp = input()",
        "setPlayers(playerNameTemp,playerPosition=0)",
        "for turnCounter in range(1,MAXPOSITION):",
        "for playerCounter in range(1,playerCount):",
        "getPlayer(playerCount)",
        "newPosition = rollDie()",
        "movePlayer(checkBoard(newPosition))",
        "abs(int(float(diceCount): ensures any value entered is converted to appropriate number.",
        "Ex - float('-6.7') --> -6.7, int(-6.7) --> -6, abs(-6) --> 6.",
        "raised if user input can not be converted into a numerical value. Ex- 'a' .",
        "raised if user input is a character which the program deals with as a variable. Ex- a .",
        "Sampling 'diceCount' number of values from population 1:diceSides without replacement.",
        "How well does it work for 2 dice? Maybe I should use sets for each die.",
        "abs(int(float(playerCount): ensures any value entered is converted to appropriate number.",
        "Ex - float('-6.7') --> -6.7, int(-6.7) --> -6, abs(-6) --> 6.",
        "raised if user input can not be converted into a numerical value. Ex- 'a' .",
        "raised if user input is a character which the program deals with as a variable. Ex- a ."
    ],
    "docstrings": [
        "'''\nsnakes and ladders\npossible classes: dice,turn,player(incl score and turn)\n'''",
        "''' Specifies the attributes required for the dice.\n\n        Keyword args:\n            customDice -- (default: 0) Determines if player can input the dice parameters. 0 -- No, 1 -- Yes.\n            diceCount -- (default: 1) Sets number of dice used in the game. Range: int([1: )\n            diceSides -- (default: 6) Sets the number of sides each dice has. Range: int([1: )\n\n    '''",
        "''' Initializes the parameters of the dice- how many dice, how many sides.\n\n        returns: none\n        '''",
        "'''Rolls the dice for one turn.\n\n        Keyword args:\n        diceSides -- number of sides of the dice. Default is 6.\n        diceCount -- number of dice rolled together. Default is 1.\n\n        Returns: list of int\n        '''",
        "''' Setsup and runs the game.\n    '''",
        "''' Specifies attributes for the player class.\n    '''",
        "''' Initializes parameters of the player.\n\n        Keyword args:\n        playerName -- (default: '') Specifies plaeyr name.\n        playerPosition -- (default: 0) Specifies score of player. STarting score is 0.\n        '''"
    ],
    "functions": [
        "unused",
        "rollDice",
        "getPlayerCount",
        "winCheck",
        "snlReposition",
        "rollDice",
        "getPlayer",
        "movePlayer"
    ],
    "classes": [
        "Dice",
        "GameMaster",
        "Player"
    ]
}