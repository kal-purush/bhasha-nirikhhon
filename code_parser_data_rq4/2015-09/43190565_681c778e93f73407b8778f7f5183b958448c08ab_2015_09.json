{
    "identifiers": [
        "os",
        "shutil",
        "md5",
        "zipfile",
        "re",
        "standalone",
        "repo_root",
        "os",
        "getcwd",
        "script_name",
        "revision_number",
        "script_credits",
        "homepage",
        "sys",
        "sys",
        "path",
        "append",
        "settings",
        "settings",
        "aggregate_repo_path",
        "settings",
        "compress_addons",
        "addon",
        "os",
        "path",
        "isdir",
        "addon",
        "addon",
        "os",
        "path",
        "join",
        "repo_root",
        "os",
        "path",
        "join",
        "repo_root",
        "_generate_addons_files",
        "os",
        "listdir",
        "repo_root",
        "addon",
        "addons",
        "is_addon_dir",
        "addon",
        "os",
        "path",
        "join",
        "addon",
        "os",
        "path",
        "exists",
        "_path",
        "open",
        "_path",
        "read",
        "splitlines",
        "line",
        "xml_lines",
        "line",
        "find",
        "addon_xml",
        "unicode",
        "line",
        "rstrip",
        "addons_xml",
        "addon_xml",
        "rstrip",
        "e",
        "_path",
        "e",
        "addons_xml",
        "strip",
        "found_an_addon",
        "_save_file",
        "addons_xml",
        "encode",
        "addons_xml",
        "_generate_md5_file",
        "md5",
        "open",
        "addons_xml",
        "read",
        "hexdigest",
        "_save_file",
        "m",
        "addons_xml_md5",
        "e",
        "e",
        "data",
        "the_path",
        "open",
        "the_path",
        "write",
        "data",
        "e",
        "the_path",
        "e",
        "compress_addons",
        "master",
        "os",
        "listdir",
        "repo_root",
        "addon",
        "mydir",
        "addon",
        "os",
        "path",
        "join",
        "repo_root",
        "addon",
        "is_addon_dir",
        "addon_path",
        "os",
        "listdir",
        "addon_path",
        "_get_zipped_addon_path",
        "_read_addon_xml",
        "addon_zip_exists",
        "addon_xml_exists",
        "_extract_addon_xml_to_release_folder",
        "addon_xml_exists",
        "_read_version_number",
        "addon_name",
        "addon_version_number",
        "_create_compressed_addon_release",
        "the_file",
        "addon_folder_contents",
        "the_file",
        "addon_name",
        "the_file",
        "os",
        "path",
        "join",
        "addon_path",
        "the_file",
        "zipfile",
        "ZipFile",
        "addon_zip_path",
        "filename",
        "the_zip",
        "namelist",
        "filename",
        "find",
        "the_zip",
        "extract",
        "filename",
        "addon_path",
        "dir",
        "zip_file",
        "zipfile",
        "ZipFile",
        "zip_file",
        "compression",
        "zipfile",
        "ZIP_DEFLATED",
        "len",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "abspath",
        "dir",
        "root",
        "dirs",
        "files",
        "os",
        "walk",
        "dir",
        "os",
        "path",
        "abspath",
        "root",
        "root_len",
        "f",
        "files",
        "os",
        "path",
        "join",
        "root",
        "f",
        "os",
        "path",
        "join",
        "archive_root",
        "f",
        "write",
        "fullpath",
        "archive_name",
        "zipfile",
        "ZIP_DEFLATED",
        "close",
        "addon_name",
        "addon_version_number",
        "os",
        "path",
        "join",
        "repo_root",
        "zipname",
        "_recursive_zipper",
        "addon_path",
        "zippath",
        "os",
        "rename",
        "zippath",
        "os",
        "path",
        "join",
        "addon_path",
        "zipname",
        "the_file",
        "addon_folder_contents",
        "os",
        "path",
        "join",
        "addon_path",
        "the_file",
        "os",
        "path",
        "isfile",
        "the_path",
        "shutil",
        "rmtree",
        "the_path",
        "the_file",
        "the_file",
        "the_file",
        "the_file",
        "zipname",
        "the_file",
        "os",
        "remove",
        "the_path",
        "the_file",
        "addon_version_number",
        "os",
        "rename",
        "the_path",
        "os",
        "path",
        "join",
        "addon_path",
        "changelog",
        "os",
        "path",
        "join",
        "addon_path",
        "os",
        "path",
        "exists",
        "addon_xml_path",
        "open",
        "addon_xml_path",
        "f",
        "read",
        "f",
        "close",
        "re",
        "compile",
        "re",
        "DOTALL",
        "findall",
        "addon_xml",
        "header",
        "headers",
        "addon_name",
        "header",
        "re",
        "sub",
        "header",
        "re",
        "sub",
        "header",
        "re",
        "compile",
        "re",
        "DOTALL",
        "findall",
        "header",
        "strip",
        "Compressor",
        "Generator",
        "standalone",
        "execute"
    ],
    "literals": [
        "\"repo_prep.py\"",
        "'http://forum.xbmc.org/showthread.php?tid=129401'",
        "'All code copyleft (GNU GPL v3) by Unobtanium @ XBMC Forums'",
        "\"__main__\"",
        "'  v'",
        "'Homepage and updates: '",
        "' '",
        "'..'",
        "\".svn\"",
        "\"addons.xml\"",
        "\"addons.xml.md5\"",
        "u\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?>\\n<addons>\\n\"",
        "\"addon.xml\"",
        "\"r\"",
        "\"\"",
        "\"<?xml\"",
        "\"\\n\"",
        "\"UTF-8\"",
        "\"\\n\\n\"",
        "\"Excluding %s for %s\"",
        "u\"\\n</addons>\\n\"",
        "\"UTF-8\"",
        "\"Updated addons xml and addons.xml.md5 files\"",
        "\"Could not find any addons, so script has done nothing.\"",
        "\"An error occurred creating addons.xml.md5 file!\\n%s\"",
        "\"w\"",
        "\"An error occurred saving %s file!\\n%s\"",
        "'Create compressed addon release for -- '",
        "'  v'",
        "'.zip'",
        "'-'",
        "'r'",
        "'addon.xml'",
        "'w'",
        "'-'",
        "'.zip'",
        "'addon.xml'",
        "'hangelog'",
        "'fanart'",
        "'icon'",
        "'hangelog'",
        "'changelog-'",
        "'.txt'",
        "'addon.xml'",
        "\"r\"",
        "\"\\<addon id\\=(.+?)>\"",
        "'\"'",
        "''",
        "\"'\"",
        "''",
        "\"version\\=(.+?) \""
    ],
    "variables": [
        "script_name",
        "revision_number",
        "homepage",
        "script_credits",
        "compress_addons",
        "repo_root",
        "standalone",
        "standalone",
        "repo_root",
        "repo_root",
        "compress_addons",
        "addons_xml",
        "addons_xml_md5",
        "addons",
        "addons_xml",
        "found_an_addon",
        "_path",
        "found_an_addon",
        "xml_lines",
        "addon_xml",
        "addons_xml",
        "m",
        "addon_name",
        "addon_path",
        "addon_folder_contents",
        "addon_xml",
        "addon_version_number",
        "addon_zip_path",
        "mydir",
        "addon_name",
        "addon_path",
        "addon_folder_contents",
        "addon_zip_exists",
        "addon_xml_exists",
        "addon_zip_path",
        "addon_zip_path",
        "the_zip",
        "root_len",
        "archive_root",
        "fullpath",
        "archive_name",
        "zipname",
        "zippath",
        "the_path",
        "changelog",
        "addon_xml_path",
        "f",
        "addon_xml",
        "headers",
        "header",
        "header",
        "addon_version_number"
    ],
    "comments": [
        "SETTINGS",
        "Set whether you want your addons compressed or not. Values are True or False",
        "NOTE: the settings.py of repository aggregator will override this",
        "Optional set a custom directory of where your addons are. False will use the current directory.",
        "NOTE: the settings.py of repository aggregator will override this",
        "End SETTINGS",
        "check if repo-prep.py is being run standalone or called from another python file",
        "this 'if' block adds support for the repo aggregator script",
        "set the repository's root folder here, if the script user has not set a custom path.",
        "so that we can import stuff from parent dir (settings)",
        "use repository aggregator settings.py to determine whether to compress",
        "this function is used by both classes.",
        "very very simple and weak check that it is an addon dir.",
        "intended to be fast, not totally accurate.",
        "skip any file or .svn folder",
        "paths",
        "call master function",
        "addon list",
        "final addons text",
        "loop thru and add each addons addon.xml file",
        "skip any file or .svn folder",
        "create path",
        "split lines for stripping",
        "new addon",
        "loop thru cleaning each line",
        "skip encoding format line",
        "add line",
        "we succeeded so add to our final addons.xml text",
        "missing or poorly formatted addon.xml",
        "clean and add closing tag",
        "only generate files if we found an addon.xml",
        "save files",
        "notify user",
        "create a new md5 hash",
        "save file",
        "oops",
        "write data to the file",
        "oops",
        "variables used later on",
        "run the master method of the class, when class is initialised.",
        "only do so if we want addons compressed.",
        "set variables",
        "skip any file or .svn folder.",
        "set another variable",
        "check if addon has a current zipped release in it.",
        "checking for addon.xml and try reading it.",
        "generator class relies on addon.xml being in release folder. so if need be, fix a zipped addon release folder lacking an addon.xml",
        "extract the addon_xml from the zip archive into the addon release folder.",
        "now addon.xml has been read, scrape version number from it. we need this when naming the zip (and if it exists the changelog)",
        "get name of addon zip file. returns False if not found.",
        "if loop is not broken by returning the addon path, zip was not found so return False",
        "initialize zipping module",
        "get length of characters of what we will use as the root path",
        "recursive writer",
        "subtract the source file's root from the archive root - ie. make /Users/me/desktop/zipme.txt into just /zipme.txt",
        "create a zip of the addon into repo root directory, tagging it with '-x.x.x' release number scraped from addon.xml",
        "zip full directories",
        "now move the zip into the addon folder, which we will now treat as the 'addon release directory'",
        "in the addon release directory, delete every file apart from addon.xml, changelog, fanart, icon and the zip we just constructed. also rename changelog.",
        "delete directories",
        "list of files we specifically need to retain for the addon release folder (folder containing the zip",
        "tag the changelog with '-x.x.x' release number",
        "hangelog so that it is detected irrespective of whether C is capitalised",
        "check for addon.xml and try and read it.",
        "load whole text into string",
        "return True if we found and read the addon.xml",
        "return False if we couldn't  find the addon.xml",
        "find the header of the addon.",
        "if this is the header for the addon, proceed",
        "clean line of quotation characters so that it is easier to read.",
        "scrape the version number from the line",
        "standalone is equivalent of if name == main"
    ],
    "docstrings": [
        "\"\"\"\nPlease bump the version number one decimal point and add your name to credits when making changes.\n\nThis is an:\n- addons.xml generator\n- addons.xml.md5 generator\n- optional auto-compressor (including handling of icons, fanart and changelog)\n\nCompression of addons in repositories has many benefits, including:\n - Protects addon downloads from corruption.\n - Smaller addon filesize resulting in faster downloads and less space / bandwidth used on the repository.\n - Ability to \"roll back\" addon updates in XBMC to previous versions.\n\nTo enable the auto-compressor, set the compress_addons setting to True\nNOTE: the settings.py of repository aggregator will override this setting.\nIf you do this you must make sure the \"datadir zip\" parameter in the addon.xml of your repository file is set to \"true\".\n\"\"\"",
        "\"\"\"\n        Generates a new addons.xml file from each addons addon.xml file\n        and a new addons.xml.md5 hash file. Must be run from the root of\n        the checked-out repo. Only handles single depth folder structure.\n    \"\"\""
    ],
    "functions": [
        "is_addon_dir",
        "_generate_addons_files",
        "_generate_md5_file",
        "_save_file",
        "master",
        "_get_zipped_addon_path",
        "_extract_addon_xml_to_release_folder",
        "_recursive_zipper",
        "_create_compressed_addon_release",
        "_read_addon_xml",
        "_read_version_number",
        "execute"
    ],
    "classes": [
        "Generator",
        "Compressor"
    ]
}