{
    "identifiers": [
        "org",
        "hl7",
        "fhir",
        "tools",
        "implementations",
        "ruby",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "org",
        "hl7",
        "fhir",
        "definitions",
        "model",
        "DefinedCode",
        "org",
        "hl7",
        "fhir",
        "definitions",
        "model",
        "Definitions",
        "org",
        "hl7",
        "fhir",
        "instance",
        "model",
        "UriType",
        "org",
        "hl7",
        "fhir",
        "instance",
        "model",
        "ValueSet",
        "org",
        "hl7",
        "fhir",
        "instance",
        "model",
        "ValueSet",
        "ConceptDefinitionComponent",
        "org",
        "hl7",
        "fhir",
        "instance",
        "model",
        "ValueSet",
        "ConceptReferenceComponent",
        "org",
        "hl7",
        "fhir",
        "instance",
        "model",
        "ValueSet",
        "ConceptSetComponent",
        "org",
        "hl7",
        "fhir",
        "instance",
        "model",
        "ValueSet",
        "ConceptSetFilterComponent",
        "org",
        "hl7",
        "fhir",
        "instance",
        "model",
        "ValueSet",
        "FilterOperator",
        "org",
        "hl7",
        "fhir",
        "instance",
        "utils",
        "ToolingExtensions",
        "allCodes",
        "defns",
        "undefinedValueSets",
        "emptyValueSets",
        "defns",
        "defns",
        "defns",
        "allCodes",
        "valueSet",
        "allCodes",
        "clear",
        "extractCodesFromValueSet",
        "valueSet",
        "allCodes",
        "valueSet",
        "filterValue",
        "valueSet",
        "valueSet",
        "hasCodeSystem",
        "c",
        "valueSet",
        "getCodeSystem",
        "getConcept",
        "processCode",
        "c",
        "valueSet",
        "getCodeSystem",
        "getSystem",
        "filterValue",
        "valueSet",
        "hasCompose",
        "cc",
        "valueSet",
        "getCompose",
        "getInclude",
        "c",
        "cc",
        "getConcept",
        "filterValue",
        "processCode",
        "c",
        "cc",
        "getSystem",
        "processCode",
        "c",
        "cc",
        "getSystem",
        "cc",
        "getConcept",
        "cc",
        "getConcept",
        "size",
        "vs",
        "findValueSet",
        "cc",
        "getSystem",
        "vs",
        "extractCodesFromValueSet",
        "vs",
        "undefinedValueSets",
        "add",
        "cc",
        "getSystem",
        "cfc",
        "cc",
        "getFilter",
        "op",
        "cfc",
        "getOp",
        "systemUri",
        "cc",
        "getSystem",
        "cfc",
        "getProperty",
        "equals",
        "op",
        "FilterOperator",
        "ISA",
        "vs",
        "findValueSet",
        "systemUri",
        "vs",
        "extractCodesFromValueSet",
        "vs",
        "cfc",
        "getValue",
        "undefinedValueSets",
        "add",
        "cc",
        "getSystem",
        "valueSet",
        "getName",
        "cfc",
        "getProperty",
        "op",
        "name",
        "cfc",
        "getValue",
        "systemUri",
        "ut",
        "valueSet",
        "getCompose",
        "getImport",
        "vs",
        "findValueSet",
        "ut",
        "getValue",
        "vs",
        "extractCodesFromValueSet",
        "vs",
        "undefinedValueSets",
        "add",
        "ut",
        "getValue",
        "allCodes",
        "size",
        "emptyValueSets",
        "add",
        "valueSet",
        "getName",
        "allCodes",
        "name",
        "vs",
        "findValueSet",
        "name",
        "defns",
        "getValuesets",
        "vs",
        "vs",
        "findValueSet",
        "name",
        "defns",
        "getBoundValueSets",
        "vs",
        "vs",
        "findValueSet",
        "name",
        "defns",
        "getCodeSystems",
        "vs",
        "vs",
        "findValueSet",
        "name",
        "defns",
        "getExtraValuesets",
        "vs",
        "name",
        "collection",
        "vs",
        "collection",
        "get",
        "name",
        "vs",
        "vsname",
        "defns",
        "getValuesets",
        "keySet",
        "t",
        "findValueSet",
        "vsname",
        "t",
        "getCodeSystem",
        "t",
        "getCodeSystem",
        "getSystem",
        "name",
        "vs",
        "t",
        "vs",
        "c",
        "system",
        "code",
        "code",
        "setCode",
        "c",
        "getCode",
        "code",
        "setDisplay",
        "c",
        "getDisplay",
        "code",
        "setSystem",
        "system",
        "allCodes",
        "add",
        "code",
        "c",
        "system",
        "parent",
        "filterValue",
        "code",
        "code",
        "setCode",
        "c",
        "getCode",
        "code",
        "setDisplay",
        "c",
        "getDisplay",
        "code",
        "setComment",
        "ToolingExtensions",
        "getComment",
        "c",
        "code",
        "setDefinition",
        "c",
        "getDefinition",
        "code",
        "setParent",
        "parent",
        "code",
        "setSystem",
        "system",
        "filterValue",
        "allCodes",
        "add",
        "code",
        "cc",
        "c",
        "getConcept",
        "processCode",
        "cc",
        "system",
        "c",
        "getCode",
        "filterValue",
        "equals",
        "c",
        "getCode",
        "allCodes",
        "add",
        "code",
        "cc",
        "c",
        "getConcept",
        "processCode",
        "cc",
        "system",
        "c",
        "getCode",
        "cc",
        "c",
        "getConcept",
        "processCode",
        "cc",
        "system",
        "c",
        "getCode",
        "filterValue"
    ],
    "literals": [
        "\"concept\"",
        "\"Ignoring \"",
        "\" includes filter: \"",
        "\" \"",
        "\" \"",
        "\" from \""
    ],
    "variables": [],
    "comments": [
        "------------------------------ INCLUDE VALUESET ------------------------------ //",
        "------------------------------ INCLUDE CONCEPTS ------------------------------ //",
        "------------------------------ NO CONCEPTS, INCLUDE SYSTEM ------------------------------ //",
        "System.out.println(\"Cannot include undefined valueset '\" + cc.getSystem() + \"' to \" + valueSet.getName());",
        "------------------------------ FILTER VALUESET ------------------------------ //",
        "filter codes",
        "System.out.println(\"Cannot filter-in undefined valueset '\" + cc.getSystem() + \"' to \" + valueSet.getName());",
        "------------------------------ IMPORT VALUESET ------------------------------ //",
        "System.out.println(\"Cannot import undefined valueset '\" + ut.getValue() + \"' to \" + valueSet.getName());",
        "System.out.println(\"Filtering in \" + c.getCode() + \" and children.\");"
    ],
    "docstrings": [
        "* Processes ValueSets, to get all the codes, whether declared in-line,\n * included, or imported. Currently, only supports the \"concept is a\" filter.\n * Does not resolve hyper-links. Included and imported value sets are only\n * resolved if the data is local.",
        "* Recursively get all the codes defined in a ValueSet, including\n   * imports and included. Does not resolve hyper-linked remote value\n   * sets.\n   * @param valueSet\n   * @return List of all codes",
        "* Extract all codes out of a ValueSet, including imports and includes.\n   * @param valueSet The value set to process.\n   * @param filterValue An optional filter. Includes the filterValue and all\n   * children (if the ValueSet is hierarchical). If null, all values will be included.\n   * @return List of codes, possibly empty.",
        "* Find a value set by name or URI.\n   * @param name The name or URI of the value set.\n   * @return The value set, if it exists locally in any capacity. Otherwise, null."
    ],
    "functions": [
        "ValueSetProcessor",
        "getAllCodes",
        "extractCodesFromValueSet",
        "ValueSet",
        "findValueSet",
        "ValueSet",
        "findValueSet",
        "processCode",
        "processCode"
    ],
    "classes": [
        "ValueSetProcessor"
    ]
}