{
    "identifiers": [
        "print_function",
        "argparse",
        "os",
        "sys",
        "math",
        "path",
        "os",
        "path",
        "isfile",
        "path",
        "os",
        "path",
        "isdir",
        "path",
        "format",
        "path",
        "format",
        "path",
        "argparse",
        "ArgumentTypeError",
        "msg",
        "path",
        "path",
        "os",
        "path",
        "isdir",
        "path",
        "os",
        "path",
        "isfile",
        "path",
        "format",
        "path",
        "format",
        "path",
        "argparse",
        "ArgumentTypeError",
        "msg",
        "path",
        "argparse",
        "ArgumentParser",
        "description",
        "__doc__",
        "formatter_class",
        "argparse",
        "ArgumentDefaultsHelpFormatter",
        "parser",
        "add_argument",
        "dest",
        "required",
        "argparse",
        "SUPPRESS",
        "isfile",
        "help",
        "parser",
        "add_argument",
        "dest",
        "help",
        "parser",
        "add_argument",
        "dest",
        "help",
        "parser",
        "add_argument",
        "dest",
        "isdir",
        "os",
        "curdir",
        "os",
        "sep",
        "help",
        "parser",
        "parse_args",
        "parser",
        "fasta_stream",
        "line",
        "fasta_stream",
        "line",
        "rstrip",
        "line",
        "startswith",
        "header",
        "header",
        "join",
        "seq",
        "line",
        "seq",
        "append",
        "line",
        "header",
        "header",
        "join",
        "seq",
        "fasta_file",
        "open",
        "fasta_file",
        "stream",
        "line",
        "stream",
        "line",
        "startswith",
        "count",
        "IOError",
        "sys",
        "exit",
        "format",
        "fasta_file",
        "count",
        "fasta_file",
        "chunk_size",
        "output_dir",
        "os",
        "path",
        "splitext",
        "os",
        "path",
        "basename",
        "fasta_file",
        "os",
        "path",
        "join",
        "output_dir",
        "fasta_file_basename",
        "open",
        "fasta_file",
        "stream",
        "format",
        "output_file_prefix",
        "cur_chunk",
        "fasta_file_extension",
        "open",
        "chunk_file",
        "header",
        "seq",
        "read_fasta",
        "stream",
        "entries_in_chunk",
        "chunk_size",
        "cur_chunk",
        "chunk_stream",
        "close",
        "format",
        "output_file_prefix",
        "cur_chunk",
        "fasta_file_extension",
        "open",
        "chunk_file",
        "format",
        "os",
        "linesep",
        "header",
        "fill",
        "seq",
        "file",
        "chunk_stream",
        "entries_in_chunk",
        "format",
        "os",
        "linesep",
        "header",
        "fill",
        "seq",
        "file",
        "chunk_stream",
        "entries_in_chunk",
        "chunk_stream",
        "close",
        "IOError",
        "sys",
        "exit",
        "format",
        "fasta_file",
        "num",
        "x",
        "num",
        "num",
        "x",
        "num",
        "ValueError",
        "text",
        "width",
        "os",
        "linesep",
        "join",
        "text",
        "i",
        "i",
        "width",
        "i",
        "xrange",
        "len",
        "text",
        "width",
        "fasta_file",
        "max_file_size",
        "output_dir",
        "os",
        "path",
        "splitext",
        "os",
        "path",
        "basename",
        "fasta_file",
        "os",
        "path",
        "join",
        "output_dir",
        "fasta_file_basename",
        "open",
        "fasta_file",
        "stream",
        "format",
        "output_file_prefix",
        "cur_chunk",
        "fasta_file_extension",
        "open",
        "chunk_file",
        "header",
        "seq",
        "read_fasta",
        "stream",
        "math",
        "floor",
        "file_size",
        "max_file_size",
        "scale",
        "cur_chunk",
        "chunk_stream",
        "close",
        "chunk_file",
        "format",
        "output_file_prefix",
        "cur_chunk",
        "fasta_file_extension",
        "open",
        "chunk_file",
        "format",
        "os",
        "linesep",
        "header",
        "fill",
        "seq",
        "file",
        "chunk_stream",
        "sizeof_fmt",
        "os",
        "stat",
        "chunk_file",
        "st_size",
        "chunk_stream",
        "close",
        "IOError",
        "sys",
        "exit",
        "format",
        "fasta_file",
        "get_parameters",
        "args",
        "num_chunks",
        "args",
        "max_file_size",
        "file",
        "sys",
        "stderr",
        "sys",
        "exit",
        "parser",
        "print_help",
        "args",
        "num_chunks",
        "format",
        "args",
        "fasta_file",
        "count_entries",
        "args",
        "fasta_file",
        "format",
        "args",
        "fasta_file",
        "num_entries",
        "num_entries",
        "args",
        "num_chunks",
        "args",
        "num_chunks",
        "format",
        "args",
        "fasta_file",
        "args",
        "num_chunks",
        "chunk_size",
        "split",
        "args",
        "fasta_file",
        "chunk_size",
        "args",
        "output_dir",
        "args",
        "max_file_size",
        "format",
        "args",
        "max_file_size",
        "split_depending_on_size",
        "args",
        "fasta_file",
        "args",
        "max_file_size",
        "args",
        "output_dir"
    ],
    "literals": [
        "\"Florian Plaza Onate, Amine Ghozlane\"",
        "\"{0} is a directory\"",
        "\"{0} does not exist.\"",
        "\"{0} is a file.\"",
        "\"{0} does not exist.\"",
        "'-i'",
        "'--input-file'",
        "'fasta_file'",
        "'Input FASTA file to split'",
        "'-n'",
        "'--chunks'",
        "'num_chunks'",
        "'Number of chunks'",
        "'-m'",
        "'--max_file_size'",
        "'max_file_size'",
        "'Instead of a precise number,'",
        "' indicate an expected file size for each chunk '",
        "'(in GB).'",
        "'-o'",
        "'--output-dir'",
        "'output_dir'",
        "'Output directory'",
        "\">\"",
        "''",
        "''",
        "'rt'",
        "\">\"",
        "\"Error cannot open {0}\"",
        "'rt'",
        "\"{0}_{1}{2}\"",
        "'wt'",
        "\"{0}_{1}{2}\"",
        "'wt'",
        "\"{1}{0}{2}\"",
        "\"{1}{0}{2}\"",
        "\"Error cannot open {0}\"",
        "'bytes'",
        "'KB'",
        "'MB'",
        "'GB'",
        "'TB'",
        "'PB'",
        "'The file size exceed the PB, I stop here'",
        "'rt'",
        "\"B\"",
        "\"{0}_{1}{2}\"",
        "'wt'",
        "\"GB\"",
        "\"B\"",
        "\"{0}_{1}{2}\"",
        "'wt'",
        "\"{1}{0}{2}\"",
        "\"Error cannot open {0}\"",
        "'__main__'",
        "\"Please indicate the number of chunks or the max file size to \"",
        "\"split the fasta file !\"",
        "\"Start reading {0}\"",
        "\"{0} has {1} FASTA entries\"",
        "\"Dividing {0} in {1} chunks of {2} entries\"",
        "\"Start creating chunks of {0} GB\"",
        "\"Done\""
    ],
    "variables": [
        "__author__",
        "msg",
        "msg",
        "msg",
        "msg",
        "parser",
        "header",
        "seq",
        "line",
        "header",
        "seq",
        "count",
        "fasta_file_basename",
        "fasta_file_extension",
        "output_file_prefix",
        "cur_chunk",
        "entries_in_chunk",
        "chunk_file",
        "chunk_stream",
        "cur_chunk",
        "entries_in_chunk",
        "chunk_file",
        "chunk_stream",
        "entries_in_chunk",
        "entries_in_chunk",
        "fasta_file_basename",
        "fasta_file_extension",
        "output_file_prefix",
        "cur_chunk",
        "file_size",
        "scale",
        "chunk_file",
        "chunk_stream",
        "cur_chunk",
        "file_size",
        "scale",
        "chunk_file",
        "chunk_stream",
        "file_size",
        "scale",
        "args",
        "parser",
        "num_entries",
        "chunk_size"
    ],
    "comments": [
        "!/usr/bin/env python",
        "def count_entries(fasta_file):",
        "with open(fasta_file, 'r') as stream:",
        "return sum(1 for fasta_item in read_fasta(stream))",
        "return \"%3.1f %s\" % (num, x)",
        "if not args.num_chunks:",
        "size, scale = sizeof_fmt(os.stat(args.fasta_file).st_size)",
        "print(\"File size is : {0:.1f} {1}\".format(size, scale))",
        "if scale != \"GB\":",
        "print(\"Warning file scale is not in GB\", file=sys.stderr)",
        "if (size % args.size_of_chunks) != 0:",
        "args.num_chunks = int(math.floor(size / args.size_of_chunks)) + 1",
        "else:",
        "args.num_chunks = int(math.floor(size / args.size_of_chunks))",
        "print(\"{0} chunks will be created\".format(args.num_chunks))"
    ],
    "docstrings": [
        "\"\"\"Split a multiFASTA file in several chunks\"\"\"",
        "\"\"\"Check if path is an existing file.\n      Arguments:\n          path: Path to the file\n    \"\"\"",
        "\"\"\"Check if path is an existing file.\n      Arguments:\n          path: Path to the file\n    \"\"\"",
        "\"\"\"Split text\"\"\""
    ],
    "functions": [
        "isfile",
        "isdir",
        "get_parameters",
        "read_fasta",
        "count_entries",
        "split",
        "sizeof_fmt",
        "fill",
        "split_depending_on_size"
    ],
    "classes": []
}