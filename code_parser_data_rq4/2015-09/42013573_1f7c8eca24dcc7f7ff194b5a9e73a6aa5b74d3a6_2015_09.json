{
    "identifiers": [
        "re",
        "os",
        "cwd",
        "dirs",
        "files",
        "os",
        "walk",
        "f",
        "files",
        "f",
        "f",
        "open",
        "open",
        "os",
        "path",
        "join",
        "f",
        "converted",
        "close",
        "line",
        "fyl",
        "readlines",
        "rule",
        "conversionRules",
        "re",
        "compile",
        "rule",
        "re",
        "sub",
        "pat",
        "rule",
        "line",
        "open",
        "os",
        "path",
        "join",
        "f",
        "converted",
        "write",
        "pageString",
        "converted",
        "close",
        "fyl",
        "close"
    ],
    "literals": [
        "r\"^====== ?([\\s\\S]+) ?======$\"",
        "r\"# \\1\\n\\n\"",
        "r\"^===== ?([\\s\\S]+) ?=====$\"",
        "r\"## \\1\\n\\n\"",
        "r\"^==== ?([\\s\\S]+) ?====$\"",
        "r\"### \\1\\n\\n\"",
        "r\"^=== ?([\\s\\S]+) ?===$\"",
        "r\"#### \\1\\n\\n\"",
        "r\"^== ?([\\s\\S]+) ?==$\"",
        "r\"##### \\1\\n\\n\"",
        "r\"\\(\\(([\\S\\s]+)\\)\\)\"",
        "r\"\\^\\[\\1\\]\"",
        "r\"<sub>([\\s\\S]+)</sub>\"",
        "r\"~\\1~\"",
        "r\"<super>([\\s\\S]+)</super>\"",
        "r\"~\\1~\"",
        "r\"<del>([\\s\\S]+)</del>\"",
        "r\"~~\\1~~\"",
        "r\"<code( [a-zA-Z]+)?>([\\s\\S]+)</code>\"",
        "r\"\\n```\\1\\n\\2\\n```\\n\"",
        "r\"''([\\S\\s]+)''\"",
        "r\"`\\1`\"",
        "r\"^  ([\\S\\s]+)$\"",
        "r\"\\n    \\1\\n\"",
        "r\"//([\\s\\S]+)//\"",
        "r\"*\\1*\"",
        "r\"\\[\\[(http://[a-zA-Z-_./?&=0-9]+)\\|([A-Za-z0-9 ]+)\\]\\]\"",
        "r\"[\\2](\\1)\"",
        "r\"{{tag>([a-zA-Z ,]+)}}\"",
        "r\"%tags:\\1\"",
        "'../pages'",
        "'txt'",
        "\"converting \"",
        "\"../pages/almondmilk.txt\"",
        "'r'",
        "\"../converted\"",
        "\"md\"",
        "'w'",
        "\"../converted\"",
        "\"md\"",
        "'a'"
    ],
    "variables": [
        "conversionRules",
        "fyl",
        "converted",
        "pat",
        "pageString",
        "converted"
    ],
    "comments": [
        "!/usr/bin/python",
        "print \"egress\"",
        "headings",
        "footnotes",
        "subscript",
        "superscript",
        "strikeout",
        "codeblock with optional language attribute",
        "monospace/inline code",
        "indented monospace/inline code",
        "italic",
        "link",
        "(\"**([\\s\\S]+)*\",\"**\\1**\"),\t\t\t\t\t\t#bold is the same: **<bold>**",
        "tag list",
        "print \"Lol\"",
        "fyl = open(os.path.join(cwd,f), 'r')",
        "pageString = fyl.read()",
        "blank the extant file",
        "print rule",
        "print pageString"
    ],
    "docstrings": [
        "\"\"\"\nlink ext [[url|text]] -> [text](url)\nlink int [[pagename|Link text]]\nlink int [[pagename]]\nanchor internal link [[pagename#anchor|this Section]].\n\nunordered list \"  * <text>\" -> \"* <text>\"\nordered list   \"  - <text>\" -> \"<num>. <text>\" or \"#. <text>\" (ext: fancy_lists)\n\nfootnote = \"((footnote text))\" -> \"^[<inline footnote>]\" (ext: inline_notes)\n\ncodeblock \"<code><text></code>\" -> \"```\\n<text>\\n```\", or \"`<inline code>`\"\ncodeblock languaged \"<code <lang>><text></code>\" -> \"```<lang>\\n<text>\\n```\"\n\nitalic \"//<italictext>//\" -> \"*<emph>*\" or \"_<emph>_\"\nbold \"**<boldtext>**\" \t-> \"**<strong>**\" or \"__<strong>__\"\nbold+italic \"//**<boldtalic>**//\" \t-> \"***<strong>***\" or \"___<strong>___\"\nstrikeout \"<del><struck></del>\" -> ~~<struck>~~\" (ext: strikeout)\nmonospace \"''<mono>''\" -> \"`<mono>`\"\n\nsuperscript \"<super><text></super>\" -> \"^<text>^\"\nsubscript \"<sub><text></sub>\" -> \"~<text>~\"\n\nidentical (or do not need changing) markers\n\nblockquote (seems to be the same)\nhorizontal rule \"-{4,}\" - > \"-{3,}\" (so it's basically fine)\n\nDokuwiki:\n\n^ Heading 1      ^ Heading 2       ^ Heading 3          ^\n| Row 1 Col 1    | Row 1 Col 2     | Row 1 Col 3        |\n| Row 2 Col 1    | some colspan (note the double pipe) ||\n| Row 3 Col 1    | Row 3 Col 2     | Row 3 Col 3        |\n\n\nMarkdown (ext: pipe_tables):\n\nheading 1\t\t| heading 2\t\t\t| heading 3\n----------------|-------------------|-----------\nrow 1 col 1\t\t| row 1 col 2\t\t| row 1 col 3\nrow 2 col 1\t\t| colspan??\t\t| row 1 col 3\nrow 3 col 1\t\t| row 3 col 2\t\t| row 3 col 3\n\nh1 \"====== <text> ======\" -> \"# <text>\"\nh2 \"===== <text> =====\" -> \"## <text>\"\nh3 \"==== <text> ====\" -> \"### <text>\"\nh4 \"=== <text> ===\" -> \"#### <text>\"\nh5 \"== <text> ==\" -> \"##### <text>\"\n\n\ndownloadable code blocks \"<file <lang> <filename>> <sourcecode> </file>\" -> ???\ntag \"{{tag><taglist>}} -> \"%tag:<taglist>\n\"\"\""
    ],
    "functions": [],
    "classes": []
}