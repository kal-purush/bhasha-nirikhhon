{
    "identifiers": [
        "division",
        "copy",
        "deepcopy",
        "os",
        "numpy",
        "np",
        "pandas",
        "pd",
        "itertools",
        "product",
        "data",
        "pd",
        "DataFrame",
        "kinds",
        "depends_keys",
        "condition",
        "dynamics",
        "initials",
        "fit_on",
        "weighted",
        "rootdir",
        "ntrials",
        "tol",
        "maxfev",
        "niter",
        "results",
        "len",
        "depends_keys",
        "make_depends_on_list",
        "depends_keys",
        "condition",
        "initials",
        "nmodels",
        "model_permutations",
        "deplist",
        "depends_on",
        "kinds",
        "kinds",
        "dynamics",
        "dynamics",
        "minfo",
        "minfo",
        "minfo",
        "isinstance",
        "initials",
        "initials",
        "nmodels",
        "isinstance",
        "dynamics",
        "dynamics",
        "nmodels",
        "isinstance",
        "kinds",
        "kinds",
        "nmodels",
        "i",
        "nmodels",
        "kinds",
        "i",
        "depends_on",
        "i",
        "dynamics",
        "i",
        "id_model",
        "kind",
        "dep",
        "dyn",
        "go_to",
        "kind",
        "kind",
        "model_id",
        "model_id",
        "rootdir",
        "rootdir",
        "model_and_analyze",
        "data",
        "data",
        "kind",
        "kind",
        "inits",
        "initials",
        "i",
        "depends_on",
        "dep",
        "dynamic",
        "dyn",
        "fit_on",
        "fit_on",
        "verbose",
        "weighted",
        "weighted",
        "model_id",
        "model_id",
        "ntrials",
        "tol",
        "maxfev",
        "niter",
        "results",
        "mlist",
        "append",
        "fitted_model",
        "mlist",
        "data",
        "pd",
        "DataFrame",
        "kind",
        "inits",
        "depends_on",
        "dynamic",
        "fit_on",
        "verbose",
        "weighted",
        "model_id",
        "ntrials",
        "tol",
        "maxfev",
        "niter",
        "results",
        "radd",
        "build",
        "build",
        "Model",
        "data",
        "data",
        "kind",
        "kind",
        "inits",
        "inits",
        "depends_on",
        "depends_on",
        "dynamic",
        "dynamic",
        "fit_on",
        "fit_on",
        "verbose",
        "weighted",
        "weighted",
        "model",
        "optimize",
        "tol",
        "tol",
        "maxfev",
        "maxfev",
        "ntrials",
        "ntrials",
        "niter",
        "niter",
        "plot_results",
        "model",
        "results",
        "results",
        "model_id",
        "model_id",
        "model",
        "kinds",
        "deplist",
        "dynamics",
        "isinstance",
        "dynamics",
        "dynamics",
        "isinstance",
        "kinds",
        "kinds",
        "kinds",
        "product",
        "k",
        "deplist",
        "k",
        "product",
        "k",
        "deplist",
        "dynamics",
        "k",
        "kinds",
        "tup",
        "tup",
        "infop",
        "tup",
        "tup",
        "infop",
        "mi",
        "mi",
        "allmodels",
        "mi",
        "mi",
        "allmodels",
        "mi",
        "mi",
        "allmodels",
        "minfo",
        "kind",
        "depends_on",
        "dynamic",
        "join",
        "dkeys",
        "dynamic",
        "upper",
        "kind",
        "dkeys",
        "upper",
        "dkeys",
        "join",
        "k",
        "k",
        "depends_on",
        "keys",
        "model_id",
        "kind",
        "model_id",
        "rootdir",
        "rootdir",
        "join",
        "os",
        "sys",
        "path",
        "split",
        "rootdir",
        "join",
        "rootdir",
        "kind",
        "upper",
        "os",
        "path",
        "isdir",
        "kind_path",
        "os",
        "mkdir",
        "kind_path",
        "join",
        "kind_path",
        "model_id",
        "os",
        "path",
        "isdir",
        "model_path",
        "os",
        "mkdir",
        "model_path",
        "os",
        "chdir",
        "model_path",
        "model",
        "results",
        "model_id",
        "radd",
        "neuro",
        "vis",
        "model_id",
        "id_model",
        "model",
        "model",
        "kind",
        "model",
        "fits",
        "reshape",
        "model",
        "ncond",
        "len",
        "model",
        "fits",
        "model",
        "ncond",
        "i",
        "yh",
        "yhat",
        "vis",
        "plot_fits",
        "model",
        "y",
        "i",
        "yh",
        "kind",
        "save",
        "savestr",
        "join",
        "model_id",
        "model",
        "labels",
        "i",
        "results",
        "vis",
        "plot_fits",
        "model",
        "y",
        "model",
        "fits",
        "kind",
        "save",
        "savestr",
        "model_id",
        "results",
        "neuro",
        "BOLD",
        "model",
        "bold",
        "simulate_bold",
        "save",
        "savestr",
        "model_id",
        "bold",
        "plot_means",
        "save",
        "bold",
        "plot_traces",
        "save",
        "depends_keys",
        "condition",
        "dkey",
        "depends_keys",
        "hasattr",
        "dkey",
        "depends_on_list",
        "append",
        "k",
        "condition",
        "k",
        "dkey",
        "depends_on_list",
        "append",
        "dkey",
        "condition",
        "depends_on_list"
    ],
    "literals": [
        "'pro'",
        "'pGo'",
        "'average'",
        "'~/Dropbox/'",
        "'both'",
        "'kinds'",
        "'depends_on'",
        "'dynamics'",
        "'both'",
        "'average'",
        "'both'",
        "'x'",
        "'Null'",
        "'kinds'",
        "'depends_on'",
        "'dynamics'",
        "'_'",
        "'x'",
        "'_'",
        "'pro'",
        "'TEST'",
        "'~/Dropbox/'",
        "\"~\"",
        "'/'",
        "'/'",
        "'/'",
        "'/'",
        "'both'",
        "'pro'",
        "'radd'",
        "'_'",
        "'behavior'",
        "'both'",
        "'pro'",
        "'bold'",
        "'both'",
        "'__iter__'"
    ],
    "variables": [
        "nmodels",
        "depends_on",
        "initials",
        "minfo",
        "kinds",
        "depends_on",
        "dynamics",
        "initials",
        "dynamics",
        "kinds",
        "mlist",
        "kind",
        "dep",
        "dyn",
        "model_id",
        "fitted_model",
        "model",
        "dynamics",
        "kinds",
        "minfo",
        "infop",
        "allmodels",
        "minfo",
        "minfo",
        "minfo",
        "model_id",
        "rootdir",
        "kind_path",
        "model_path",
        "model_id",
        "yhat",
        "bold",
        "depends_on_list"
    ],
    "comments": [
        "!/usr/local/bin/env python",
        "make list of depends_on dictionaries",
        "if no inits then generarte permutations of model attr",
        "get id",
        "make/change to model save dir",
        "build model",
        "store model object",
        "build model",
        "fit model to data",
        "return model",
        "generate permutations of kinds, depends_on, and dynamics",
        "convert product tuples to lists then combine permutations of dynamic models and linear models",
        "AS LAMBDA ###",
        "id_model = lambda mod: [['_'.join([dirname, mod.dynamic]).upper() if 'x' in mod.kind else dirname.upper() for dirname in ['_'.join([k for k in mod.depends_on.keys()])]][0]]"
    ],
    "docstrings": [
        "\"\"\" builds, fits, simulates, plots a sequence of different models\n\n      ::Arguments::\n            data (pd.DataFrame):\n                  Data for fitting. Must be formatted for the specific kind\n                  of models to be fit (i.e., reactive, proactive)\n            kinds (list or str):\n                  model kinds ('radd', 'irm', 'pro', 'xradd', ..etc)\n            depends_keys (list):\n                  list of parameters to use as keys in depends_on dict\n                  elements can be lists (i.e. ['v', 'tr']) or str 'v'\n            condition (str):\n                  column in data that defines the different conditions in the model\n            dynamics (list or str):\n                  Temporal dynamics of Go process ('exp': exponential, 'hyp': hyperbolic).\n                  If type str all models will be assigned the same dynamic.\n            initials (list or None):\n                  list of init parameters to use for each model. If None,\n                  init parameters are drawn from tools.theta.get_default_inits()\n            fit_on (str):\n                  Fit models to 'average', 'subjects', or 'bootstrap' data\n            rootdir (str):\n                  rootdir for model save paths\n            results (str):\n                  plot model predictions for 'behavior', 'bold', or 'both'\n\n      ::Returns::\n            mlist (list):\n                  list of all model objects generated\n      \"\"\"",
        "\"\"\" make/chdir to model_path\n      \"\"\"",
        "\"\"\" plot model predictions\n      ::Arguments::\n            model (RADD model)\n            results (str): 'behavior', 'bold', or 'both'\n      \"\"\""
    ],
    "functions": [
        "run_pipeline",
        "model_and_analyze",
        "model_permutations",
        "id_model",
        "go_to",
        "plot_results",
        "make_depends_on_list"
    ],
    "classes": []
}