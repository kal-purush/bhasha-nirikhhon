{
    "identifiers": [
        "root",
        "ArrayProto",
        "ArrayProto",
        "ObjProto",
        "ObjProto",
        "FuncProto",
        "obj",
        "obj",
        "_",
        "obj",
        "_",
        "_",
        "obj",
        "obj",
        "exports",
        "exports",
        "_",
        "exports",
        "_",
        "root",
        "_",
        "_",
        "func",
        "context",
        "argCount",
        "context",
        "func",
        "argCount",
        "argCount",
        "value",
        "func",
        "context",
        "value",
        "value",
        "other",
        "func",
        "context",
        "value",
        "other",
        "value",
        "index",
        "collection",
        "func",
        "context",
        "value",
        "index",
        "collection",
        "accumulator",
        "value",
        "index",
        "collection",
        "func",
        "context",
        "accumulator",
        "value",
        "index",
        "collection",
        "func",
        "context",
        "arguments",
        "value",
        "context",
        "argCount",
        "value",
        "_",
        "_",
        "value",
        "optimizeCb",
        "value",
        "context",
        "argCount",
        "_",
        "value",
        "_",
        "value",
        "_",
        "value",
        "_",
        "value",
        "context",
        "cb",
        "value",
        "context",
        "Infinity",
        "keysFunc",
        "undefinedOnly",
        "obj",
        "arguments",
        "length",
        "obj",
        "obj",
        "index",
        "length",
        "index",
        "arguments",
        "index",
        "keysFunc",
        "source",
        "keys",
        "i",
        "l",
        "i",
        "keys",
        "i",
        "undefinedOnly",
        "obj",
        "key",
        "obj",
        "key",
        "source",
        "key",
        "obj",
        "prototype",
        "_",
        "prototype",
        "nativeCreate",
        "nativeCreate",
        "prototype",
        "Ctor",
        "prototype",
        "Ctor",
        "Ctor",
        "result",
        "key",
        "obj",
        "obj",
        "obj",
        "key",
        "property",
        "collection",
        "getLength",
        "collection",
        "length",
        "length",
        "length",
        "MAX_ARRAY_INDEX",
        "_",
        "_",
        "obj",
        "iteratee",
        "context",
        "iteratee",
        "optimizeCb",
        "iteratee",
        "context",
        "isArrayLike",
        "obj",
        "i",
        "length",
        "obj",
        "i",
        "length",
        "i",
        "iteratee",
        "obj",
        "i",
        "i",
        "obj",
        "_",
        "obj",
        "i",
        "length",
        "keys",
        "i",
        "length",
        "i",
        "iteratee",
        "obj",
        "keys",
        "i",
        "keys",
        "i",
        "obj",
        "obj",
        "_",
        "_",
        "obj",
        "iteratee",
        "context",
        "iteratee",
        "cb",
        "iteratee",
        "context",
        "isArrayLike",
        "obj",
        "_",
        "obj",
        "keys",
        "obj",
        "length",
        "index",
        "length",
        "index",
        "keys",
        "keys",
        "index",
        "index",
        "results",
        "index",
        "iteratee",
        "obj",
        "currentKey",
        "currentKey",
        "obj",
        "results",
        "dir",
        "obj",
        "iteratee",
        "memo",
        "keys",
        "index",
        "length",
        "index",
        "index",
        "length",
        "index",
        "dir",
        "keys",
        "keys",
        "index",
        "index",
        "memo",
        "iteratee",
        "memo",
        "obj",
        "currentKey",
        "currentKey",
        "obj",
        "memo",
        "obj",
        "iteratee",
        "memo",
        "context",
        "iteratee",
        "optimizeCb",
        "iteratee",
        "context",
        "isArrayLike",
        "obj",
        "_",
        "obj",
        "keys",
        "obj",
        "dir",
        "length",
        "arguments",
        "memo",
        "obj",
        "keys",
        "keys",
        "index",
        "index",
        "index",
        "dir",
        "iterator",
        "obj",
        "iteratee",
        "memo",
        "keys",
        "index",
        "length",
        "_",
        "_",
        "_",
        "createReduce",
        "_",
        "_",
        "createReduce",
        "_",
        "_",
        "obj",
        "predicate",
        "context",
        "isArrayLike",
        "obj",
        "key",
        "_",
        "obj",
        "predicate",
        "context",
        "key",
        "_",
        "obj",
        "predicate",
        "context",
        "key",
        "key",
        "obj",
        "key",
        "_",
        "_",
        "obj",
        "predicate",
        "context",
        "predicate",
        "cb",
        "predicate",
        "context",
        "_",
        "obj",
        "value",
        "index",
        "predicate",
        "value",
        "index",
        "results",
        "value",
        "results",
        "_",
        "obj",
        "predicate",
        "context",
        "_",
        "obj",
        "_",
        "cb",
        "predicate",
        "context",
        "_",
        "_",
        "obj",
        "predicate",
        "context",
        "predicate",
        "cb",
        "predicate",
        "context",
        "isArrayLike",
        "obj",
        "_",
        "obj",
        "keys",
        "obj",
        "index",
        "length",
        "index",
        "keys",
        "keys",
        "index",
        "index",
        "predicate",
        "obj",
        "currentKey",
        "currentKey",
        "obj",
        "_",
        "_",
        "obj",
        "predicate",
        "context",
        "predicate",
        "cb",
        "predicate",
        "context",
        "isArrayLike",
        "obj",
        "_",
        "obj",
        "keys",
        "obj",
        "index",
        "length",
        "index",
        "keys",
        "keys",
        "index",
        "index",
        "predicate",
        "obj",
        "currentKey",
        "currentKey",
        "obj",
        "_",
        "_",
        "_",
        "obj",
        "item",
        "fromIndex",
        "guard",
        "isArrayLike",
        "obj",
        "obj",
        "_",
        "obj",
        "fromIndex",
        "guard",
        "fromIndex",
        "_",
        "obj",
        "item",
        "fromIndex",
        "_",
        "obj",
        "method",
        "arguments",
        "_",
        "method",
        "_",
        "obj",
        "value",
        "isFunc",
        "method",
        "value",
        "method",
        "func",
        "func",
        "func",
        "value",
        "args",
        "_",
        "obj",
        "key",
        "_",
        "obj",
        "_",
        "key",
        "_",
        "obj",
        "attrs",
        "_",
        "obj",
        "_",
        "attrs",
        "_",
        "obj",
        "attrs",
        "_",
        "obj",
        "_",
        "attrs",
        "_",
        "obj",
        "iteratee",
        "context",
        "Infinity",
        "Infinity",
        "iteratee",
        "obj",
        "obj",
        "isArrayLike",
        "obj",
        "obj",
        "_",
        "obj",
        "obj",
        "i",
        "length",
        "i",
        "value",
        "obj",
        "i",
        "value",
        "result",
        "result",
        "value",
        "iteratee",
        "cb",
        "iteratee",
        "context",
        "_",
        "obj",
        "value",
        "index",
        "computed",
        "iteratee",
        "value",
        "index",
        "computed",
        "lastComputed",
        "computed",
        "Infinity",
        "result",
        "Infinity",
        "result",
        "value",
        "lastComputed",
        "computed",
        "result",
        "_",
        "obj",
        "iteratee",
        "context",
        "iteratee",
        "obj",
        "obj",
        "isArrayLike",
        "obj",
        "obj",
        "_",
        "obj",
        "obj",
        "i",
        "length",
        "i",
        "value",
        "obj",
        "i",
        "value",
        "result",
        "result",
        "value",
        "iteratee",
        "cb",
        "iteratee",
        "context",
        "_",
        "obj",
        "value",
        "index",
        "computed",
        "iteratee",
        "value",
        "index",
        "computed",
        "lastComputed",
        "computed",
        "Infinity",
        "result",
        "Infinity",
        "result",
        "value",
        "lastComputed",
        "computed",
        "result",
        "_",
        "obj",
        "isArrayLike",
        "obj",
        "obj",
        "_",
        "obj",
        "length",
        "index",
        "length",
        "index",
        "rand",
        "_",
        "index",
        "rand",
        "index",
        "shuffled",
        "index",
        "shuffled",
        "rand",
        "shuffled",
        "rand",
        "index",
        "shuffled",
        "_",
        "obj",
        "n",
        "guard",
        "n",
        "guard",
        "isArrayLike",
        "obj",
        "obj",
        "_",
        "obj",
        "obj",
        "_",
        "obj",
        "_",
        "obj",
        "n",
        "_",
        "obj",
        "iteratee",
        "context",
        "iteratee",
        "cb",
        "iteratee",
        "context",
        "_",
        "_",
        "obj",
        "value",
        "index",
        "value",
        "index",
        "iteratee",
        "value",
        "index",
        "left",
        "right",
        "left",
        "right",
        "a",
        "b",
        "a",
        "b",
        "a",
        "a",
        "b",
        "b",
        "left",
        "right",
        "behavior",
        "obj",
        "iteratee",
        "context",
        "iteratee",
        "cb",
        "iteratee",
        "context",
        "_",
        "obj",
        "value",
        "index",
        "iteratee",
        "value",
        "index",
        "obj",
        "behavior",
        "result",
        "value",
        "key",
        "result",
        "_",
        "group",
        "result",
        "value",
        "key",
        "_",
        "result",
        "key",
        "result",
        "key",
        "value",
        "result",
        "key",
        "value",
        "_",
        "group",
        "result",
        "value",
        "key",
        "result",
        "key",
        "value",
        "_",
        "group",
        "result",
        "value",
        "key",
        "_",
        "result",
        "key",
        "result",
        "key",
        "result",
        "key",
        "_",
        "obj",
        "obj",
        "_",
        "obj",
        "obj",
        "isArrayLike",
        "obj",
        "_",
        "obj",
        "_",
        "_",
        "obj",
        "_",
        "obj",
        "obj",
        "isArrayLike",
        "obj",
        "obj",
        "_",
        "obj",
        "_",
        "obj",
        "predicate",
        "context",
        "predicate",
        "cb",
        "predicate",
        "context",
        "_",
        "obj",
        "value",
        "key",
        "obj",
        "predicate",
        "value",
        "key",
        "obj",
        "fail",
        "value",
        "fail",
        "_",
        "_",
        "_",
        "array",
        "n",
        "guard",
        "array",
        "n",
        "guard",
        "array",
        "_",
        "array",
        "array",
        "n",
        "_",
        "array",
        "n",
        "guard",
        "array",
        "array",
        "n",
        "guard",
        "n",
        "_",
        "array",
        "n",
        "guard",
        "array",
        "n",
        "guard",
        "array",
        "array",
        "_",
        "array",
        "array",
        "n",
        "_",
        "_",
        "_",
        "array",
        "n",
        "guard",
        "array",
        "n",
        "guard",
        "n",
        "_",
        "array",
        "_",
        "array",
        "_",
        "input",
        "shallow",
        "strict",
        "startIndex",
        "startIndex",
        "getLength",
        "input",
        "i",
        "length",
        "i",
        "input",
        "i",
        "isArrayLike",
        "value",
        "_",
        "value",
        "_",
        "value",
        "shallow",
        "value",
        "flatten",
        "value",
        "shallow",
        "strict",
        "value",
        "output",
        "len",
        "j",
        "len",
        "output",
        "idx",
        "value",
        "j",
        "strict",
        "output",
        "idx",
        "value",
        "output",
        "_",
        "array",
        "shallow",
        "flatten",
        "array",
        "shallow",
        "_",
        "array",
        "_",
        "array",
        "arguments",
        "_",
        "_",
        "array",
        "isSorted",
        "iteratee",
        "context",
        "_",
        "isSorted",
        "context",
        "iteratee",
        "iteratee",
        "isSorted",
        "isSorted",
        "iteratee",
        "iteratee",
        "cb",
        "iteratee",
        "context",
        "getLength",
        "array",
        "i",
        "length",
        "i",
        "array",
        "i",
        "iteratee",
        "iteratee",
        "value",
        "i",
        "array",
        "value",
        "isSorted",
        "i",
        "seen",
        "computed",
        "result",
        "value",
        "seen",
        "computed",
        "iteratee",
        "_",
        "seen",
        "computed",
        "seen",
        "computed",
        "result",
        "value",
        "_",
        "result",
        "value",
        "result",
        "value",
        "result",
        "_",
        "_",
        "flatten",
        "arguments",
        "_",
        "array",
        "arguments",
        "getLength",
        "array",
        "i",
        "length",
        "i",
        "array",
        "i",
        "_",
        "result",
        "item",
        "j",
        "argsLength",
        "j",
        "_",
        "arguments",
        "j",
        "item",
        "j",
        "argsLength",
        "result",
        "item",
        "result",
        "_",
        "array",
        "flatten",
        "arguments",
        "_",
        "array",
        "value",
        "_",
        "rest",
        "value",
        "_",
        "_",
        "arguments",
        "_",
        "array",
        "array",
        "_",
        "array",
        "getLength",
        "length",
        "index",
        "length",
        "index",
        "result",
        "index",
        "_",
        "array",
        "index",
        "result",
        "_",
        "values",
        "getLength",
        "i",
        "length",
        "i",
        "values",
        "result",
        "i",
        "values",
        "i",
        "result",
        "i",
        "i",
        "result",
        "dir",
        "array",
        "predicate",
        "context",
        "predicate",
        "cb",
        "predicate",
        "context",
        "getLength",
        "array",
        "dir",
        "length",
        "index",
        "index",
        "length",
        "index",
        "dir",
        "predicate",
        "array",
        "index",
        "index",
        "array",
        "index",
        "_",
        "createPredicateIndexFinder",
        "_",
        "createPredicateIndexFinder",
        "_",
        "array",
        "obj",
        "iteratee",
        "context",
        "iteratee",
        "cb",
        "iteratee",
        "context",
        "iteratee",
        "obj",
        "getLength",
        "array",
        "low",
        "high",
        "low",
        "high",
        "iteratee",
        "array",
        "mid",
        "value",
        "low",
        "mid",
        "high",
        "mid",
        "low",
        "dir",
        "predicateFind",
        "sortedIndex",
        "array",
        "item",
        "idx",
        "getLength",
        "array",
        "idx",
        "dir",
        "i",
        "idx",
        "idx",
        "idx",
        "length",
        "i",
        "length",
        "idx",
        "idx",
        "length",
        "idx",
        "length",
        "sortedIndex",
        "idx",
        "length",
        "idx",
        "sortedIndex",
        "array",
        "item",
        "array",
        "idx",
        "item",
        "idx",
        "item",
        "item",
        "idx",
        "predicateFind",
        "array",
        "i",
        "length",
        "_",
        "idx",
        "idx",
        "i",
        "idx",
        "dir",
        "i",
        "length",
        "idx",
        "idx",
        "length",
        "idx",
        "dir",
        "array",
        "idx",
        "item",
        "idx",
        "_",
        "createIndexFinder",
        "_",
        "_",
        "_",
        "createIndexFinder",
        "_",
        "_",
        "start",
        "stop",
        "step",
        "stop",
        "stop",
        "start",
        "start",
        "step",
        "step",
        "stop",
        "start",
        "step",
        "length",
        "idx",
        "length",
        "idx",
        "start",
        "step",
        "idx",
        "start",
        "sourceFunc",
        "boundFunc",
        "context",
        "callingContext",
        "args",
        "callingContext",
        "boundFunc",
        "sourceFunc",
        "context",
        "args",
        "baseCreate",
        "sourceFunc",
        "sourceFunc",
        "args",
        "_",
        "result",
        "result",
        "_",
        "func",
        "context",
        "nativeBind",
        "func",
        "nativeBind",
        "nativeBind",
        "func",
        "arguments",
        "_",
        "func",
        "arguments",
        "executeBound",
        "func",
        "bound",
        "context",
        "args",
        "arguments",
        "bound",
        "_",
        "func",
        "arguments",
        "boundArgs",
        "length",
        "i",
        "length",
        "i",
        "args",
        "i",
        "boundArgs",
        "i",
        "_",
        "arguments",
        "position",
        "boundArgs",
        "i",
        "position",
        "arguments",
        "args",
        "arguments",
        "position",
        "executeBound",
        "func",
        "bound",
        "args",
        "bound",
        "_",
        "obj",
        "arguments",
        "length",
        "i",
        "i",
        "length",
        "i",
        "key",
        "arguments",
        "i",
        "obj",
        "key",
        "_",
        "obj",
        "key",
        "obj",
        "obj",
        "_",
        "func",
        "hasher",
        "key",
        "memoize",
        "hasher",
        "hasher",
        "arguments",
        "key",
        "_",
        "cache",
        "address",
        "cache",
        "address",
        "func",
        "arguments",
        "cache",
        "address",
        "memoize",
        "memoize",
        "_",
        "func",
        "wait",
        "arguments",
        "setTimeout",
        "func",
        "args",
        "wait",
        "_",
        "_",
        "_",
        "_",
        "_",
        "func",
        "wait",
        "options",
        "options",
        "options",
        "previous",
        "options",
        "_",
        "timeout",
        "result",
        "func",
        "context",
        "args",
        "timeout",
        "context",
        "args",
        "_",
        "previous",
        "options",
        "previous",
        "now",
        "wait",
        "now",
        "previous",
        "context",
        "args",
        "arguments",
        "remaining",
        "remaining",
        "wait",
        "timeout",
        "clearTimeout",
        "timeout",
        "timeout",
        "previous",
        "now",
        "result",
        "func",
        "context",
        "args",
        "timeout",
        "context",
        "args",
        "timeout",
        "options",
        "timeout",
        "setTimeout",
        "later",
        "remaining",
        "result",
        "_",
        "func",
        "wait",
        "immediate",
        "_",
        "timestamp",
        "last",
        "wait",
        "last",
        "timeout",
        "setTimeout",
        "later",
        "wait",
        "last",
        "timeout",
        "immediate",
        "result",
        "func",
        "context",
        "args",
        "timeout",
        "context",
        "args",
        "context",
        "args",
        "arguments",
        "timestamp",
        "_",
        "immediate",
        "timeout",
        "timeout",
        "timeout",
        "setTimeout",
        "later",
        "wait",
        "callNow",
        "result",
        "func",
        "context",
        "args",
        "context",
        "args",
        "result",
        "_",
        "func",
        "wrapper",
        "_",
        "wrapper",
        "func",
        "_",
        "predicate",
        "predicate",
        "arguments",
        "_",
        "args",
        "args",
        "start",
        "arguments",
        "i",
        "result",
        "args",
        "i",
        "result",
        "result",
        "_",
        "times",
        "func",
        "times",
        "func",
        "arguments",
        "_",
        "times",
        "func",
        "times",
        "memo",
        "func",
        "arguments",
        "times",
        "func",
        "memo",
        "_",
        "_",
        "_",
        "obj",
        "keys",
        "nonEnumerableProps",
        "obj",
        "_",
        "ObjProto",
        "_",
        "obj",
        "prop",
        "_",
        "keys",
        "prop",
        "keys",
        "prop",
        "nonEnumIdx",
        "prop",
        "nonEnumerableProps",
        "nonEnumIdx",
        "prop",
        "obj",
        "obj",
        "prop",
        "proto",
        "prop",
        "_",
        "keys",
        "prop",
        "keys",
        "prop",
        "_",
        "obj",
        "_",
        "obj",
        "nativeKeys",
        "nativeKeys",
        "obj",
        "key",
        "obj",
        "_",
        "obj",
        "key",
        "keys",
        "key",
        "hasEnumBug",
        "collectNonEnumProps",
        "obj",
        "keys",
        "keys",
        "_",
        "obj",
        "_",
        "obj",
        "key",
        "obj",
        "keys",
        "key",
        "hasEnumBug",
        "collectNonEnumProps",
        "obj",
        "keys",
        "keys",
        "_",
        "obj",
        "_",
        "obj",
        "keys",
        "length",
        "i",
        "length",
        "i",
        "values",
        "i",
        "obj",
        "keys",
        "i",
        "values",
        "_",
        "obj",
        "iteratee",
        "context",
        "iteratee",
        "cb",
        "iteratee",
        "context",
        "_",
        "obj",
        "keys",
        "index",
        "length",
        "index",
        "currentKey",
        "keys",
        "index",
        "results",
        "currentKey",
        "iteratee",
        "obj",
        "currentKey",
        "currentKey",
        "obj",
        "results",
        "_",
        "obj",
        "_",
        "obj",
        "keys",
        "length",
        "i",
        "length",
        "i",
        "pairs",
        "i",
        "keys",
        "i",
        "obj",
        "keys",
        "i",
        "pairs",
        "_",
        "obj",
        "_",
        "obj",
        "keys",
        "i",
        "length",
        "i",
        "result",
        "obj",
        "keys",
        "i",
        "keys",
        "i",
        "result",
        "_",
        "_",
        "obj",
        "key",
        "obj",
        "_",
        "obj",
        "key",
        "names",
        "key",
        "names",
        "_",
        "createAssigner",
        "_",
        "_",
        "_",
        "createAssigner",
        "_",
        "_",
        "obj",
        "predicate",
        "context",
        "predicate",
        "cb",
        "predicate",
        "context",
        "_",
        "obj",
        "keys",
        "i",
        "length",
        "i",
        "key",
        "keys",
        "i",
        "predicate",
        "obj",
        "key",
        "key",
        "obj",
        "key",
        "_",
        "oiteratee",
        "context",
        "obj",
        "result",
        "_",
        "oiteratee",
        "keys",
        "_",
        "obj",
        "iteratee",
        "optimizeCb",
        "oiteratee",
        "context",
        "keys",
        "flatten",
        "arguments",
        "iteratee",
        "value",
        "key",
        "obj",
        "key",
        "obj",
        "obj",
        "obj",
        "keys",
        "i",
        "length",
        "i",
        "keys",
        "i",
        "obj",
        "key",
        "iteratee",
        "value",
        "key",
        "obj",
        "result",
        "key",
        "value",
        "result",
        "_",
        "obj",
        "iteratee",
        "context",
        "_",
        "iteratee",
        "iteratee",
        "_",
        "iteratee",
        "_",
        "flatten",
        "arguments",
        "iteratee",
        "value",
        "key",
        "_",
        "keys",
        "key",
        "_",
        "obj",
        "iteratee",
        "context",
        "_",
        "createAssigner",
        "_",
        "_",
        "prototype",
        "props",
        "baseCreate",
        "prototype",
        "props",
        "_",
        "result",
        "props",
        "result",
        "_",
        "obj",
        "_",
        "obj",
        "obj",
        "_",
        "obj",
        "obj",
        "_",
        "obj",
        "_",
        "obj",
        "interceptor",
        "interceptor",
        "obj",
        "obj",
        "_",
        "attrs",
        "_",
        "attrs",
        "keys",
        "length",
        "i",
        "length",
        "i",
        "keys",
        "i",
        "attrs",
        "key",
        "obj",
        "key",
        "key",
        "obj",
        "a",
        "b",
        "aStack",
        "bStack",
        "a",
        "b",
        "a",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "_",
        "a",
        "a",
        "b",
        "_",
        "b",
        "b",
        "toString",
        "a",
        "className",
        "toString",
        "b",
        "className",
        "a",
        "b",
        "a",
        "a",
        "b",
        "b",
        "a",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "className",
        "areArrays",
        "a",
        "b",
        "a",
        "b",
        "aCtor",
        "bCtor",
        "_",
        "aCtor",
        "aCtor",
        "aCtor",
        "_",
        "bCtor",
        "bCtor",
        "bCtor",
        "a",
        "b",
        "aStack",
        "aStack",
        "bStack",
        "bStack",
        "aStack",
        "length",
        "aStack",
        "length",
        "a",
        "bStack",
        "length",
        "b",
        "aStack",
        "a",
        "bStack",
        "b",
        "areArrays",
        "length",
        "a",
        "length",
        "b",
        "length",
        "eq",
        "a",
        "length",
        "b",
        "length",
        "aStack",
        "bStack",
        "_",
        "a",
        "length",
        "keys",
        "_",
        "b",
        "length",
        "length",
        "key",
        "keys",
        "length",
        "_",
        "b",
        "key",
        "eq",
        "a",
        "key",
        "b",
        "key",
        "aStack",
        "bStack",
        "aStack",
        "bStack",
        "_",
        "a",
        "b",
        "eq",
        "a",
        "b",
        "_",
        "obj",
        "obj",
        "isArrayLike",
        "obj",
        "_",
        "obj",
        "_",
        "obj",
        "_",
        "obj",
        "obj",
        "_",
        "obj",
        "_",
        "obj",
        "obj",
        "obj",
        "_",
        "nativeIsArray",
        "obj",
        "toString",
        "obj",
        "_",
        "obj",
        "obj",
        "obj",
        "_",
        "name",
        "_",
        "name",
        "obj",
        "toString",
        "obj",
        "name",
        "_",
        "arguments",
        "_",
        "obj",
        "_",
        "obj",
        "Int8Array",
        "_",
        "obj",
        "obj",
        "_",
        "obj",
        "isFinite",
        "obj",
        "isNaN",
        "parseFloat",
        "obj",
        "_",
        "obj",
        "_",
        "obj",
        "obj",
        "obj",
        "_",
        "obj",
        "obj",
        "obj",
        "toString",
        "obj",
        "_",
        "obj",
        "obj",
        "_",
        "obj",
        "obj",
        "_",
        "obj",
        "key",
        "obj",
        "hasOwnProperty",
        "obj",
        "key",
        "_",
        "root",
        "previousUnderscore",
        "_",
        "value",
        "value",
        "_",
        "value",
        "value",
        "_",
        "_",
        "property",
        "_",
        "obj",
        "obj",
        "key",
        "obj",
        "key",
        "_",
        "_",
        "attrs",
        "attrs",
        "_",
        "attrs",
        "obj",
        "_",
        "obj",
        "attrs",
        "_",
        "n",
        "iteratee",
        "context",
        "n",
        "iteratee",
        "optimizeCb",
        "iteratee",
        "context",
        "i",
        "n",
        "i",
        "accum",
        "i",
        "iteratee",
        "i",
        "accum",
        "_",
        "min",
        "max",
        "max",
        "max",
        "min",
        "min",
        "min",
        "max",
        "min",
        "_",
        "_",
        "escapeMap",
        "match",
        "match",
        "_",
        "source",
        "source",
        "testRegexp",
        "replaceRegexp",
        "escaper",
        "_",
        "createEscaper",
        "escapeMap",
        "_",
        "createEscaper",
        "unescapeMap",
        "_",
        "property",
        "fallback",
        "property",
        "value",
        "value",
        "fallback",
        "_",
        "value",
        "value",
        "value",
        "_",
        "prefix",
        "idCounter",
        "prefix",
        "prefix",
        "id",
        "id",
        "_",
        "match",
        "escapes",
        "match",
        "_",
        "text",
        "settings",
        "oldSettings",
        "settings",
        "oldSettings",
        "settings",
        "oldSettings",
        "settings",
        "_",
        "settings",
        "_",
        "settings",
        "noMatch",
        "settings",
        "noMatch",
        "settings",
        "noMatch",
        "text",
        "matcher",
        "match",
        "escape",
        "interpolate",
        "evaluate",
        "offset",
        "source",
        "text",
        "index",
        "offset",
        "escaper",
        "escapeChar",
        "index",
        "offset",
        "match",
        "escape",
        "source",
        "escape",
        "interpolate",
        "source",
        "interpolate",
        "evaluate",
        "source",
        "evaluate",
        "match",
        "source",
        "settings",
        "source",
        "source",
        "source",
        "source",
        "settings",
        "source",
        "e",
        "e",
        "source",
        "e",
        "data",
        "render",
        "data",
        "_",
        "settings",
        "template",
        "argument",
        "source",
        "template",
        "_",
        "obj",
        "_",
        "obj",
        "instance",
        "instance",
        "instance",
        "obj",
        "instance",
        "_",
        "obj",
        "obj",
        "_",
        "obj",
        "_",
        "_",
        "obj",
        "name",
        "_",
        "name",
        "obj",
        "name",
        "_",
        "name",
        "push",
        "args",
        "arguments",
        "result",
        "func",
        "_",
        "args",
        "_",
        "_",
        "_",
        "name",
        "ArrayProto",
        "name",
        "_",
        "name",
        "method",
        "obj",
        "arguments",
        "name",
        "name",
        "obj",
        "obj",
        "result",
        "obj",
        "_",
        "name",
        "ArrayProto",
        "name",
        "_",
        "name",
        "result",
        "method",
        "arguments",
        "_",
        "_",
        "_",
        "_",
        "_",
        "define",
        "define",
        "define",
        "_"
    ],
    "literals": [
        "'undefined'",
        "'undefined'",
        "'1.8.3'",
        "'length'",
        "'number'",
        "'number'",
        "'value'",
        "'number'",
        "'Bind must be called on a function'",
        "'bindAll must be passed function names'",
        "''",
        "'toString'",
        "'valueOf'",
        "'isPrototypeOf'",
        "'toString'",
        "'propertyIsEnumerable'",
        "'hasOwnProperty'",
        "'toLocaleString'",
        "'constructor'",
        "'[object RegExp]'",
        "'[object String]'",
        "''",
        "''",
        "'[object Number]'",
        "'[object Date]'",
        "'[object Boolean]'",
        "'[object Array]'",
        "'object'",
        "'object'",
        "'constructor'",
        "'constructor'",
        "'[object Array]'",
        "'function'",
        "'object'",
        "'Arguments'",
        "'Function'",
        "'String'",
        "'Number'",
        "'Date'",
        "'RegExp'",
        "'Error'",
        "'is'",
        "'[object '",
        "']'",
        "'callee'",
        "'function'",
        "'object'",
        "'function'",
        "'[object Boolean]'",
        "'&'",
        "'&amp;'",
        "'<'",
        "'&lt;'",
        "'>'",
        "'&gt;'",
        "'\"'",
        "'&quot;'",
        "\"'\"",
        "'&#x27;'",
        "'`'",
        "'&#x60;'",
        "'(?:'",
        "'|'",
        "')'",
        "'g'",
        "''",
        "''",
        "''",
        "\"'\"",
        "\"'\"",
        "'\\\\'",
        "'\\\\'",
        "'\\r'",
        "'r'",
        "'\\n'",
        "'n'",
        "'\\u2028'",
        "'u2028'",
        "'\\u2029'",
        "'u2029'",
        "'\\\\'",
        "'|'",
        "'|$'",
        "'g'",
        "\"__p+='\"",
        "\"'+\\n((__t=(\"",
        "\"))==null?'':_.escape(__t))+\\n'\"",
        "\"'+\\n((__t=(\"",
        "\"))==null?'':__t)+\\n'\"",
        "\"';\\n\"",
        "\"\\n__p+='\"",
        "\"';\\n\"",
        "'with(obj||{}){\\n'",
        "'}\\n'",
        "\"var __t,__p='',__j=Array.prototype.join,\"",
        "\"print=function(){__p+=__j.call(arguments,'');};\\n\"",
        "'return __p;\\n'",
        "'obj'",
        "'_'",
        "'obj'",
        "'function('",
        "'){\\n'",
        "'}'",
        "'pop'",
        "'push'",
        "'reverse'",
        "'shift'",
        "'sort'",
        "'splice'",
        "'unshift'",
        "'shift'",
        "'splice'",
        "'concat'",
        "'join'",
        "'slice'",
        "''",
        "'function'",
        "'underscore'"
    ],
    "variables": [
        "root",
        "previousUnderscore",
        "ArrayProto",
        "ObjProto",
        "FuncProto",
        "push",
        "toString",
        "hasOwnProperty",
        "nativeIsArray",
        "nativeKeys",
        "nativeBind",
        "nativeCreate",
        "Ctor",
        "_",
        "optimizeCb",
        "cb",
        "createAssigner",
        "length",
        "index",
        "source",
        "keys",
        "l",
        "i",
        "key",
        "baseCreate",
        "result",
        "property",
        "MAX_ARRAY_INDEX",
        "getLength",
        "isArrayLike",
        "length",
        "i",
        "length",
        "keys",
        "keys",
        "length",
        "results",
        "index",
        "currentKey",
        "currentKey",
        "keys",
        "length",
        "index",
        "key",
        "results",
        "keys",
        "length",
        "index",
        "currentKey",
        "keys",
        "length",
        "index",
        "currentKey",
        "args",
        "isFunc",
        "func",
        "result",
        "lastComputed",
        "value",
        "computed",
        "i",
        "length",
        "result",
        "Infinity",
        "lastComputed",
        "Infinity",
        "value",
        "computed",
        "i",
        "length",
        "length",
        "shuffled",
        "index",
        "rand",
        "a",
        "b",
        "group",
        "result",
        "key",
        "fail",
        "flatten",
        "output",
        "idx",
        "i",
        "length",
        "value",
        "j",
        "len",
        "result",
        "seen",
        "i",
        "length",
        "value",
        "computed",
        "result",
        "argsLength",
        "i",
        "length",
        "item",
        "j",
        "rest",
        "length",
        "result",
        "index",
        "result",
        "i",
        "length",
        "length",
        "index",
        "value",
        "low",
        "high",
        "mid",
        "i",
        "length",
        "length",
        "idx",
        "executeBound",
        "result",
        "args",
        "bound",
        "boundArgs",
        "bound",
        "position",
        "length",
        "args",
        "i",
        "i",
        "length",
        "key",
        "memoize",
        "cache",
        "address",
        "args",
        "context",
        "args",
        "result",
        "timeout",
        "previous",
        "later",
        "now",
        "remaining",
        "timeout",
        "args",
        "context",
        "timestamp",
        "result",
        "later",
        "last",
        "callNow",
        "args",
        "arguments",
        "start",
        "i",
        "start",
        "result",
        "memo",
        "hasEnumBug",
        "nonEnumerableProps",
        "nonEnumIdx",
        "proto",
        "prop",
        "keys",
        "keys",
        "keys",
        "length",
        "values",
        "i",
        "keys",
        "length",
        "results",
        "currentKey",
        "index",
        "keys",
        "length",
        "pairs",
        "i",
        "result",
        "keys",
        "i",
        "length",
        "names",
        "keys",
        "key",
        "i",
        "length",
        "result",
        "obj",
        "iteratee",
        "keys",
        "i",
        "length",
        "key",
        "value",
        "keys",
        "result",
        "keys",
        "length",
        "obj",
        "i",
        "key",
        "eq",
        "className",
        "areArrays",
        "aCtor",
        "bCtor",
        "length",
        "keys",
        "key",
        "accum",
        "i",
        "escapeMap",
        "unescapeMap",
        "createEscaper",
        "escaper",
        "source",
        "testRegexp",
        "replaceRegexp",
        "value",
        "idCounter",
        "id",
        "noMatch",
        "escapes",
        "escaper",
        "escapeChar",
        "matcher",
        "index",
        "source",
        "render",
        "template",
        "argument",
        "instance",
        "result",
        "func",
        "args",
        "method",
        "obj",
        "method"
    ],
    "comments": [
        "Underscore.js 1.8.3",
        "http://underscorejs.org",
        "(c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors",
        "Underscore may be freely distributed under the MIT license.",
        "Baseline setup",
        "--------------",
        "Establish the root object, `window` in the browser, or `exports` on the server.",
        "Save the previous value of the `_` variable.",
        "Save bytes in the minified (but not gzipped) version:",
        "Create quick reference variables for speed access to core prototypes.",
        "All **ECMAScript 5** native function implementations that we hope to use",
        "are declared here.",
        "Naked function reference for surrogate-prototype-swapping.",
        "Create a safe reference to the Underscore object for use below.",
        "Export the Underscore object for **Node.js**, with",
        "backwards-compatibility for the old `require()` API. If we're in",
        "the browser, add `_` as a global object.",
        "Current version.",
        "Internal function that returns an efficient (for current engines) version",
        "of the passed-in callback, to be repeatedly applied in other Underscore",
        "functions.",
        "A mostly-internal function to generate callbacks that can be applied",
        "to each element in a collection, returning the desired result — either",
        "identity, an arbitrary callback, a property matcher, or a property accessor.",
        "An internal function for creating assigner functions.",
        "An internal function for creating a new object that inherits from another.",
        "Helper for collection methods to determine whether a collection",
        "should be iterated as an array or as an object",
        "Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength",
        "Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094",
        "Collection Functions",
        "--------------------",
        "The cornerstone, an `each` implementation, aka `forEach`.",
        "Handles raw objects in addition to array-likes. Treats all",
        "sparse array-likes as if they were dense.",
        "Return the results of applying the iteratee to each element.",
        "Create a reducing function iterating left or right.",
        "Optimized iterator function as using arguments.length",
        "in the main function will deoptimize the, see #1991.",
        "Determine the initial value if none is provided.",
        "or `foldl`.",
        "The right-associative version of reduce, also known as `foldr`.",
        "Return the first value which passes a truth test. Aliased as `detect`.",
        "Return all the elements that pass a truth test.",
        "Aliased as `select`.",
        "Return all the elements for which a truth test fails.",
        "Determine whether all of the elements match a truth test.",
        "Aliased as `all`.",
        "Determine if at least one element in the object matches a truth test.",
        "Aliased as `any`.",
        "Determine if the array or object contains a given item (using `===`).",
        "Aliased as `includes` and `include`.",
        "Invoke a method (with arguments) on every item in a collection.",
        "Convenience version of a common use case of `map`: fetching a property.",
        "Convenience version of a common use case of `filter`: selecting only objects",
        "containing specific `key:value` pairs.",
        "Convenience version of a common use case of `find`: getting the first object",
        "containing specific `key:value` pairs.",
        "Return the maximum element (or element-based computation).",
        "Return the minimum element (or element-based computation).",
        "Shuffle a collection, using the modern version of the",
        "[Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).",
        "Sample **n** random values from a collection.",
        "If **n** is not specified, returns a single random element.",
        "The internal `guard` argument allows it to work with `map`.",
        "Sort the object's values by a criterion produced by an iteratee.",
        "An internal function used for aggregate \"group by\" operations.",
        "Groups the object's values by a criterion. Pass either a string attribute",
        "to group by, or a function that returns the criterion.",
        "Indexes the object's values by a criterion, similar to `groupBy`, but for",
        "when you know that your index values will be unique.",
        "Counts instances of an object that group by a certain criterion. Pass",
        "either a string attribute to count by, or a function that returns the",
        "criterion.",
        "Safely create a real, live array from anything iterable.",
        "Return the number of elements in an object.",
        "Split a collection into two arrays: one whose elements all satisfy the given",
        "predicate, and one whose elements all do not satisfy the predicate.",
        "Array Functions",
        "---------------",
        "Get the first element of an array. Passing **n** will return the first N",
        "values in the array. Aliased as `head` and `take`. The **guard** check",
        "allows it to work with `_.map`.",
        "Returns everything but the last entry of the array. Especially useful on",
        "the arguments object. Passing **n** will return all the values in",
        "the array, excluding the last N.",
        "Get the last element of an array. Passing **n** will return the last N",
        "values in the array.",
        "Returns everything but the first entry of the array. Aliased as `tail` and `drop`.",
        "Especially useful on the arguments object. Passing an **n** will return",
        "the rest N values in the array.",
        "Trim out all falsy values from an array.",
        "Internal implementation of a recursive `flatten` function.",
        "flatten current level of array or arguments object",
        "Flatten out an array, either recursively (by default), or just one level.",
        "Return a version of the array that does not contain the specified value(s).",
        "Produce a duplicate-free version of the array. If the array has already",
        "been sorted, you have the option of using a faster algorithm.",
        "Aliased as `unique`.",
        "Produce an array that contains the union: each distinct element from all of",
        "the passed-in arrays.",
        "Produce an array that contains every item shared between all the",
        "passed-in arrays.",
        "Take the difference between one array and a number of other arrays.",
        "Only the elements present in just the first array will remain.",
        "Zip together multiple lists into a single array -- elements that share",
        "an index go together.",
        "Complement of _.zip. Unzip accepts an array of arrays and groups",
        "each array's elements on shared indices",
        "Converts lists into objects. Pass either a single array of `[key, value]`",
        "pairs, or two parallel arrays of the same length -- one of keys, and one of",
        "the corresponding values.",
        "Generator function to create the findIndex and findLastIndex functions",
        "Returns the first index on an array-like that passes a predicate test",
        "Use a comparator function to figure out the smallest index at which",
        "an object should be inserted so as to maintain order. Uses binary search.",
        "Generator function to create the indexOf and lastIndexOf functions",
        "Return the position of the first occurrence of an item in an array,",
        "or -1 if the item is not included in the array.",
        "If the array is large and already in sort order, pass `true`",
        "for **isSorted** to use binary search.",
        "Generate an integer Array containing an arithmetic progression. A port of",
        "the native Python `range()` function. See",
        "[the Python documentation](http://docs.python.org/library/functions.html#range).",
        "Function (ahem) Functions",
        "------------------",
        "Determines whether to execute a function as a constructor",
        "or a normal function with the provided arguments",
        "Create a function bound to a given object (assigning `this`, and arguments,",
        "optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if",
        "available.",
        "Partially apply a function by creating a version that has had some of its",
        "arguments pre-filled, without changing its dynamic `this` context. _ acts",
        "as a placeholder, allowing any combination of arguments to be pre-filled.",
        "Bind a number of an object's methods to that object. Remaining arguments",
        "are the method names to be bound. Useful for ensuring that all callbacks",
        "defined on an object belong to it.",
        "Memoize an expensive function by storing its results.",
        "Delays a function for the given number of milliseconds, and then calls",
        "it with the arguments supplied.",
        "Defers a function, scheduling it to run after the current call stack has",
        "cleared.",
        "Returns a function, that, when invoked, will only be triggered at most once",
        "during a given window of time. Normally, the throttled function will run",
        "as much as it can, without ever going more than once per `wait` duration;",
        "but if you'd like to disable the execution on the leading edge, pass",
        "`{leading: false}`. To disable execution on the trailing edge, ditto.",
        "Returns a function, that, as long as it continues to be invoked, will not",
        "be triggered. The function will be called after it stops being called for",
        "N milliseconds. If `immediate` is passed, trigger the function on the",
        "leading edge, instead of the trailing.",
        "Returns the first function passed as an argument to the second,",
        "allowing you to adjust arguments, run code before and after, and",
        "conditionally execute the original function.",
        "Returns a negated version of the passed-in predicate.",
        "Returns a function that is the composition of a list of functions, each",
        "consuming the return value of the function that follows.",
        "Returns a function that will only be executed on and after the Nth call.",
        "Returns a function that will only be executed up to (but not including) the Nth call.",
        "Returns a function that will be executed at most one time, no matter how",
        "often you call it. Useful for lazy initialization.",
        "Object Functions",
        "----------------",
        "Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.",
        "Constructor is a special case.",
        "Retrieve the names of an object's own properties.",
        "Delegates to **ECMAScript 5**'s native `Object.keys`",
        "Ahem, IE < 9.",
        "Retrieve all the property names of an object.",
        "Ahem, IE < 9.",
        "Retrieve the values of an object's properties.",
        "Returns the results of applying the iteratee to each element of the object",
        "In contrast to _.map it returns an object",
        "Convert an object into a list of `[key, value]` pairs.",
        "Invert the keys and values of an object. The values must be serializable.",
        "Return a sorted list of the function names available on the object.",
        "Aliased as `methods`",
        "Extend a given object with all the properties in passed-in object(s).",
        "Assigns a given object with all the own properties in the passed-in object(s)",
        "(https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)",
        "Returns the first key on an object that passes a predicate test",
        "Return a copy of the object only containing the whitelisted properties.",
        "Return a copy of the object without the blacklisted properties.",
        "Fill in a given object with default properties.",
        "Creates an object that inherits from the given prototype object.",
        "If additional properties are provided then they will be added to the",
        "created object.",
        "Create a (shallow-cloned) duplicate of an object.",
        "Invokes interceptor with the obj, and then returns obj.",
        "The primary purpose of this method is to \"tap into\" a method chain, in",
        "order to perform operations on intermediate results within the chain.",
        "Returns whether an object has a given set of `key:value` pairs.",
        "Internal recursive comparison function for `isEqual`.",
        "Identical objects are equal. `0 === -0`, but they aren't identical.",
        "See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).",
        "A strict comparison is necessary because `null == undefined`.",
        "Unwrap any wrapped objects.",
        "Compare `[[Class]]` names.",
        "Strings, numbers, regular expressions, dates, and booleans are compared by value.",
        "RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')",
        "Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is",
        "equivalent to `new String(\"5\")`.",
        "`NaN`s are equivalent, but non-reflexive.",
        "Object(NaN) is equivalent to NaN",
        "An `egal` comparison is performed for other numeric values.",
        "Coerce dates and booleans to numeric primitive values. Dates are compared by their",
        "millisecond representations. Note that invalid dates with millisecond representations",
        "of `NaN` are not equivalent.",
        "Objects with different constructors are not equivalent, but `Object`s or `Array`s",
        "from different frames are.",
        "Assume equality for cyclic structures. The algorithm for detecting cyclic",
        "structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.",
        "Initializing stack of traversed objects.",
        "It's done here since we only need them for objects and arrays comparison.",
        "Linear search. Performance is inversely proportional to the number of",
        "unique nested structures.",
        "Add the first object to the stack of traversed objects.",
        "Recursively compare objects and arrays.",
        "Compare array lengths to determine if a deep comparison is necessary.",
        "Deep compare the contents, ignoring non-numeric properties.",
        "Deep compare objects.",
        "Ensure that both objects contain the same number of properties before comparing deep equality.",
        "Deep compare each member",
        "Remove the first object from the stack of traversed objects.",
        "Perform a deep comparison to check if two objects are equal.",
        "Is a given array, string, or object empty?",
        "An \"empty\" object has no enumerable own-properties.",
        "Is a given value a DOM element?",
        "Is a given value an array?",
        "Delegates to ECMA5's native Array.isArray",
        "Is a given variable an object?",
        "Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.",
        "Define a fallback version of the method in browsers (ahem, IE < 9), where",
        "there isn't any inspectable \"Arguments\" type.",
        "Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,",
        "IE 11 (#1621), and in Safari 8 (#1929).",
        "Is a given object a finite number?",
        "Is the given value `NaN`? (NaN is the only number which does not equal itself).",
        "Is a given value a boolean?",
        "Is a given value equal to null?",
        "Is a given variable undefined?",
        "Shortcut function for checking if an object has a given property directly",
        "on itself (in other words, not on a prototype).",
        "Utility Functions",
        "-----------------",
        "Run Underscore.js in *noConflict* mode, returning the `_` variable to its",
        "previous owner. Returns a reference to the Underscore object.",
        "Keep the identity function around for default iteratees.",
        "Predicate-generating functions. Often useful outside of Underscore.",
        "Generates a function for a given object that returns a given property.",
        "Returns a predicate for checking whether an object has a given set of",
        "`key:value` pairs.",
        "Run a function **n** times.",
        "Return a random integer between min and max (inclusive).",
        "A (possibly faster) way to get the current timestamp as an integer.",
        "List of HTML entities for escaping.",
        "Functions for escaping and unescaping strings to/from HTML interpolation.",
        "Regexes for identifying a key that needs to be escaped",
        "If the value of the named `property` is a function then invoke it with the",
        "`object` as context; otherwise, return it.",
        "Generate a unique integer id (unique within the entire client session).",
        "Useful for temporary DOM ids.",
        "By default, Underscore uses ERB-style template delimiters, change the",
        "following template settings to use alternative delimiters.",
        "When customizing `templateSettings`, if you don't want to define an",
        "interpolation, evaluation or escaping regex, we need one that is",
        "guaranteed not to match.",
        "Certain characters need to be escaped so that they can be put into a",
        "string literal.",
        "JavaScript micro-templating, similar to John Resig's implementation.",
        "Underscore templating handles arbitrary delimiters, preserves whitespace,",
        "and correctly escapes quotes within interpolated code.",
        "NB: `oldSettings` only exists for backwards compatibility.",
        "Combine delimiters into one regular expression via alternation.",
        "Compile the template source, escaping string literals appropriately.",
        "Adobe VMs need the match returned to produce the correct offest.",
        "If a variable is not specified, place data values in local scope.",
        "Provide the compiled source as a convenience for precompilation.",
        "Add a \"chain\" function. Start chaining a wrapped Underscore object.",
        "OOP",
        "---------------",
        "If Underscore is called as a function, it returns a wrapped object that",
        "can be used OO-style. This wrapper holds altered versions of all the",
        "underscore functions. Wrapped objects may be chained.",
        "Helper function to continue chaining intermediate results.",
        "Add your own custom functions to the Underscore object.",
        "Add all of the Underscore functions to the wrapper object.",
        "Add all mutator Array functions to the wrapper.",
        "Add all accessor Array functions to the wrapper.",
        "Extracts the result from a wrapped and chained object.",
        "Provide unwrapping proxy for some methods used in engine operations",
        "such as arithmetic and JSON stringification.",
        "AMD registration happens at the end for compatibility with AMD loaders",
        "that may not enforce next-turn semantics on modules. Even though general",
        "practice for AMD registration is to be anonymous, underscore registers",
        "as a named module because, like jQuery, it is a base library that is",
        "popular enough to be bundled in a third party lib, but not be part of",
        "an AMD load request. Those cases could generate an error when an",
        "anonymous define() is called outside of a loader request."
    ],
    "docstrings": [
        "**Reduce** builds up a single result from a list of values, aka `inject`,"
    ],
    "functions": [
        "createReduce",
        "iterator",
        "createPredicateIndexFinder",
        "createIndexFinder",
        "collectNonEnumProps"
    ],
    "classes": []
}