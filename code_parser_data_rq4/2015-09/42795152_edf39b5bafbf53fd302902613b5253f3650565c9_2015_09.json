{
    "identifiers": [
        "org",
        "apache",
        "giraph",
        "graph",
        "BasicComputation",
        "org",
        "apache",
        "giraph",
        "edge",
        "Edge",
        "org",
        "apa",
        "che",
        "giraph",
        "graph",
        "Vertex",
        "org",
        "apache",
        "hadoop",
        "io",
        "IntWritable",
        "org",
        "apache",
        "hadoop",
        "io",
        "NullWritable",
        "java",
        "io",
        "Override",
        "vertex",
        "messages",
        "currentComponent",
        "vertex",
        "getValue",
        "get",
        "getSuperstep",
        "edge",
        "vertex",
        "getEdges",
        "neighbor",
        "edge",
        "getTargetVertexId",
        "get",
        "neighbor",
        "currentComponent",
        "currentComponent",
        "neighbor",
        "currentComponent",
        "vertex",
        "getValue",
        "get",
        "vertex",
        "setValue",
        "currentComponent",
        "edge",
        "vertex",
        "getEdges",
        "neighbor",
        "edge",
        "getTargetVertexId",
        "neighbor",
        "get",
        "currentComponent",
        "sendMessage",
        "neighbor",
        "vertex",
        "getValue",
        "vertex",
        "voteToHalt",
        "changed",
        "message",
        "messages",
        "candidateComponent",
        "message",
        "get",
        "candidateComponent",
        "currentComponent",
        "currentComponent",
        "candidateComponent",
        "changed",
        "changed",
        "vertex",
        "setValue",
        "currentComponent",
        "sendMessageToAllEdges",
        "vertex",
        "vertex",
        "getValue",
        "vertex",
        "voteToHalt"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "First superstep is special, because we can simply look at the neighbors",
        "Only need to send value if it is not the own id",
        "did we get a smaller id ?",
        "propagate new component id to the neighbors"
    ],
    "docstrings": [
        "* Implementation of the connected component algorithm that identifies\n * connected components and assigns each vertex its \"component\n * identifier\" (the smallest vertex id in the component).",
        "* Propagates the smallest vertex id to all neighbors. Will always choose to\n   * halt and only reactivate if a smaller id has been sent to it.\n   *\n   * @param vertex Vertex\n   * @param messages Iterator of messages from the previous superstep.\n   * @throws IOException"
    ],
    "functions": [
        "compute"
    ],
    "classes": [
        "ConnectedComponentsComputation"
    ]
}