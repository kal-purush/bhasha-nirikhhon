{
    "identifiers": [
        "sys",
        "re",
        "s",
        "lookup",
        "re",
        "compile",
        "re",
        "compile",
        "re",
        "compile",
        "re",
        "compile",
        "re",
        "compile",
        "re_url",
        "match",
        "s",
        "r",
        "r",
        "group",
        "r",
        "group",
        "r",
        "group",
        "r",
        "group",
        "re_brackets",
        "match",
        "s",
        "r",
        "r",
        "group",
        "r",
        "group",
        "r",
        "group",
        "re_anyaddr",
        "match",
        "s",
        "r",
        "r",
        "group",
        "re_ipv6_addr",
        "match",
        "s",
        "r",
        "r",
        "group",
        "re_non_brackets",
        "match",
        "s",
        "r",
        "r",
        "group",
        "r",
        "group",
        "r",
        "group",
        "s",
        "ret",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "len",
        "sys",
        "argv",
        "exit",
        "sys",
        "argv",
        "i",
        "v",
        "i",
        "inet_string",
        "i",
        "pprint",
        "ret",
        "inet_string",
        "sys",
        "argv",
        "pprint",
        "ret"
    ],
    "literals": [
        "'url_scheme'",
        "''",
        "'url_host'",
        "''",
        "'url_path'",
        "''",
        "'host'",
        "''",
        "'port'",
        "''",
        "'^(\\w+)://([^/]+)(|/.*)$'",
        "'^\\[([^]]+)\\](|:([a-zA-Z0-9]+))$'",
        "'^:(\\d+)'",
        "'^([a-fA-F0-9:]+)$'",
        "'^([a-zA-Z0-9\\-\\.]+)(|:([a-zA-Z0-9]+))$'",
        "'url_scheme'",
        "'url_path'",
        "'url_host'",
        "'host'",
        "'port'",
        "''",
        "'host'",
        "''",
        "'port'",
        "'host'",
        "'host'",
        "'port'",
        "''",
        "'host'",
        "'url_scheme ='",
        "'url_scheme'",
        "'  url_host ='",
        "'url_host'",
        "'  url_path ='",
        "'url_path'",
        "'      host ='",
        "'host'",
        "'      port ='",
        "'port'",
        "'__main__'",
        "'Usage: this (test|<inet_addr_string>)'",
        "'test'",
        "'www.example.org'",
        "'192.168.0.1'",
        "'3ffe:5001::1'",
        "'[3ffe:5001::1]'",
        "':9999'",
        "'::1'",
        "'www.example.org:9999'",
        "'192.168.0.1:9999'",
        "'[3ffe:5001::1]:9999'",
        "'http://www.example.org'",
        "'http://192.168.0.1'",
        "'http://3ffe:5001::1'",
        "'http://www.example.org:9999'",
        "'http://192.168.0.1:9999'",
        "'http://192.168.0.1:9999/'",
        "'http://[3ffe:5001::1]:9999'",
        "'http://www.example.org:9999/hoge'",
        "'http://192.168.0.1:9999/hoge'",
        "'http://[3ffe:5001::1]:9999/hoge'",
        "'--- '"
    ],
    "variables": [
        "ret",
        "re_url",
        "re_brackets",
        "re_anyaddr",
        "re_ipv6_addr",
        "re_non_brackets",
        "r",
        "ret",
        "ret",
        "ret",
        "s",
        "r",
        "ret",
        "ret",
        "r",
        "ret",
        "ret",
        "r",
        "ret",
        "r",
        "ret",
        "ret",
        "ret",
        "v",
        "ret",
        "ret"
    ],
    "comments": [
        "!/usr/bin/env python",
        "-*- coding: utf-8 -*-",
        "cut the host part",
        "cut the port number"
    ],
    "docstrings": [
        "'''\nit return a hash list\n    {\n        'url_scheme' : '<url_scheme>',\n          'url_host' : '<url_host>',\n          'url_path' : '<ulr_path>',\n              'host' : '<ip address or host name>',\n              'port' : '<port number or service name>'\n    }\nif there is no matched part, it set '' (null).\n'''",
        "'''\n    re_ipv6_a_p = re.compile('^\\[([0-9a-fA-F:]+)\\](|:\\d+)$')\n    re_ipv6_a = re.compile('^([0-9a-fA-F:]+)$')\n    re_ipv4_a_p = re.compile('^([0-9\\.]+)(|:\\d+)$')\n    r = re_ipv6_a_p.match(s)\n    if r:\n        ret['addr'] = r.group(1)\n        ret['port'] = r.group(2)[1:]\n    else:\n        r = re_ipv6_a.match(s)\n        if r:\n            ret['addr'] = r.group(1)\n        else:\n            r = re_ipv4_a_p.match(s)\n            if r:\n                ret['addr'] = r.group(1)\n                ret['port'] = r.group(2)[1:]\n    '''"
    ],
    "functions": [
        "inet_string",
        "pprint"
    ],
    "classes": []
}