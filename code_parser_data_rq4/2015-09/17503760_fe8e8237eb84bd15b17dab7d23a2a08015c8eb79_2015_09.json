{
    "identifiers": [
        "com",
        "shuoma",
        "alg",
        "com",
        "shuoma",
        "annotation",
        "Tag",
        "Algorithm",
        "DepthFirstSearch",
        "com",
        "shuoma",
        "annotation",
        "Tag",
        "Algorithm",
        "Recursion",
        "com",
        "shuoma",
        "annotation",
        "Tag",
        "DataStructure",
        "StringT",
        "com",
        "shuoma",
        "annotation",
        "Tag",
        "Reference",
        "LeetCode",
        "com",
        "shuoma",
        "annotation",
        "Tag",
        "java",
        "util",
        "java",
        "util",
        "Tag",
        "algs",
        "DepthFirstSearch",
        "Recursion",
        "dss",
        "StringT",
        "references",
        "LeetCode",
        "args",
        "ins",
        "ins",
        "addOperators",
        "ins",
        "addOperators",
        "ins",
        "addOperators",
        "ins",
        "addOperators",
        "num",
        "target",
        "res",
        "addOperatorsDFS",
        "num",
        "target",
        "res",
        "res",
        "num",
        "target",
        "diff",
        "curExpr",
        "res",
        "num",
        "length",
        "target",
        "res",
        "add",
        "curExpr",
        "i",
        "i",
        "num",
        "length",
        "i",
        "operand",
        "num",
        "substring",
        "i",
        "operand",
        "length",
        "operand",
        "charAt",
        "next",
        "num",
        "substring",
        "i",
        "val",
        "parseLong",
        "operand",
        "curExpr",
        "isEmpty",
        "addOperatorsDFS",
        "next",
        "target",
        "val",
        "val",
        "operand",
        "res",
        "addOperatorsDFS",
        "next",
        "target",
        "val",
        "val",
        "curExpr",
        "operand",
        "res",
        "addOperatorsDFS",
        "next",
        "target",
        "val",
        "val",
        "curExpr",
        "operand",
        "res",
        "bundle",
        "diff",
        "val",
        "addOperatorsDFS",
        "next",
        "target",
        "diff",
        "bundle",
        "bundle",
        "curExpr",
        "operand",
        "res"
    ],
    "literals": [
        "\"232\"",
        "\"123\"",
        "\"00\"",
        "\"000\"",
        "\"\"",
        "\"+\"",
        "\"-\"",
        "\"*\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "Given a string that contains only digits 0-9 and a target value,\n return all possibilities to add binary operators (not unary) +, -, or * between the digits\n so they evaluate to the target value.\n\n Examples:\n \"123\", 6 -> [\"1+2+3\", \"1*2*3\"]\n \"232\", 8 -> [\"2*3+2\", \"2+3*2\"]\n \"105\", 5 -> [\"1*0+5\",\"10-5\"]\n \"00\", 0 -> [\"0+0\", \"0-0\", \"0*0\"]\n \"3456237490\", 9191 -> []",
        "* e.g given expr=2+3*2, target=8,\n         * right before multiply by 2，target = 3, diff = 3,\n         * now if when multiply by 2，new-diff should be diff*val, i.e. 3*2=6，\n         * and to calculate new target, we need to revert the last diff, i.e. +3，and add the new\n         * diff，i.e. (3+3)-6=0，i.e. the target of 2+3*2 is 0."
    ],
    "functions": [
        "main",
        "addOperators",
        "addOperatorsDFS"
    ],
    "classes": [
        "ExpressionAddOperators"
    ]
}