{
    "identifiers": [
        "Injectable",
        "Http",
        "Injectable",
        "http",
        "locale",
        "translation",
        "locale",
        "translation",
        "locale",
        "translation",
        "defaultLanguage",
        "navigator",
        "navigator",
        "navigator",
        "navigator",
        "browserLanguage",
        "browserLanguage",
        "browserLanguage",
        "browserLanguage",
        "defaultLanguage",
        "Cookies",
        "prefix",
        "prefix",
        "url",
        "res",
        "res",
        "res",
        "res",
        "locale",
        "locale",
        "Cookies",
        "locale",
        "locale",
        "key",
        "translation",
        "key",
        "value",
        "key",
        "key",
        "value"
    ],
    "literals": [
        "'angular2/angular2'",
        "'http/http'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"locale\"",
        "string",
        "'.json'",
        "string",
        "\"locale\"",
        "string",
        "string"
    ],
    "variables": [
        "browserLanguage",
        "url",
        "translation",
        "value",
        "value"
    ],
    "comments": [
        "ANGULAR 2 LOCALIZATION",
        "an injectable class for localization of angular 2 applications",
        "by direct or asynchronous loading of translations",
        "written by roberto simonetti",
        "MIT license",
        "https://github.com/robisim74/angular2localization",
        "dependencies:",
        "- angular: v2.0.0-alpha.36",
        "- js-cookie",
        "tsd & js libraries",
        "<reference path=\"../typings/angular2/angular2.d.ts\" />",
        "<reference path=\"../typings/js-cookie/js-cookie.d.ts\" />",
        "language code",
        "array of available languages codes",
        "object of translations",
        "direct & asynchronous loading: add a new translation",
        "direct loading",
        "define preferred language",
        "get current browser language or default language",
        "get two-letter code",
        "set session cookie",
        "asinchronous loading: define translation provider & get json data",
        "angular 2 http module",
        "get current language",
        "set current language",
        "check if language is changed",
        "set session cookie",
        "set language code",
        "update translations data",
        "get translation by direct loading",
        "get translations by locale",
        "get translated value by key",
        "get translation by asynchronously loading",
        "get translated value by key",
        "end localization class"
    ],
    "docstrings": [
        "* localization is an injectable class that use angular 2 http module\n * to start, add in route component:\n * \n * @Component({\n *      selector: 'app',\n *      bindings: [Localization] \n * })\n * ...\n * class app {\n *      constructor(public localization: Localization){\n *      ...\n *  }\n * }\n * bootstrap(app, [HTTP_BINDINGS]);",
        "* DIRECT LOADING\n * to inizialize localization by direct loading add the following code in the body of constructor of route component:\n * \n * var translationEN = {\n *      EXAMPLE: 'example',\n *      ...\n * }\n * // add a new translation here\n * \n * this.localization.addTranslation('en', translationEN); // required (parameters: language, translation)\n * this.localization.addTranslation('it', translationIT);\n * // add a new language here \n * this.localization.definePreferredLanguage('en'); // required: define preferred language (parameter: default language)",
        "* ASYNCHRONOUS LOADING\n * to inizialize localization by asynchronous loading add the following code in the body of constructor of route component:\n * \n * this.localization.addTranslation('en'); // required: add a new translations (parameter: a new language) \n * this.localization.addTranslation('it');\n * // add a new language here\n * this.localization.definePreferredLanguage('en'); // required: define preferred language (parameter: default language)\n * this.localization.translationProvider('./resources/locale-'); // required: initialize translation provider (parameter: path prefix)\n * \n * and create the json files of translations such as \"locale-en.json\"\n * (url is obtained concatenating {prefix} + {locale language code} + \".json\")",
        "* CHANGE LANGUAGE\n     * to change language at runtime, add in the component:\n     *  \n     * selectLanguage(locale) {\n     *      this.localization.setCurrentLanguage(locale);\n     * }\n     * \n     * where locale parameter is the language code; then add in the view:\n     * \n     * <a (click)=\"selectLanguage('en')\">English<</a>\n     * ...",
        "* DIRECT LOADING\n    * to get translation by direct loading add the following code in each component:\n    * \n    * translate(key) {\n    *       return this.localization.translate(key);\n    * }\n    * \n    * and in the view:\n    * \n    * <p>{{ translate('EXAMPLE') }}</p>",
        "* ASYNCHRONOUS LOADING\n     * to get translation by asynchronous loading add the following code in each component:\n     * \n     * translate(key) {\n     *      return this.localization.asyncTranslate(key);\n     * }\n     * \n     * and in the view:\n     * \n     * <p>{{ translate('EXAMPLE') }}</p>"
    ],
    "functions": [
        "addTranslation",
        "definePreferredLanguage",
        "translationProvider",
        "getCurrentLanguage",
        "setCurrentLanguage",
        "translate",
        "asyncTranslate"
    ],
    "classes": [
        "Localization"
    ]
}