{
    "identifiers": [
        "fnmatch",
        "os",
        "re",
        "ntpath",
        "sys",
        "argparse",
        "filepath",
        "t",
        "closingStack",
        "append",
        "closing",
        "expr",
        "closing",
        "Literal",
        "closingFor",
        "t",
        "closing",
        "closingStack",
        "pop",
        "open",
        "filepath",
        "file",
        "file",
        "read",
        "c",
        "content",
        "c",
        "lineNumber",
        "isInString",
        "c",
        "inStringType",
        "isInCommentBlock",
        "checkIfInComment",
        "c",
        "c",
        "isInCommentBlock",
        "ignoreTillEndOfLine",
        "c",
        "c",
        "c",
        "c",
        "c",
        "brackets_list",
        "append",
        "c",
        "brackets_list",
        "filepath",
        "lineNumber",
        "bad_count_file",
        "brackets_list",
        "append",
        "c",
        "brackets_list",
        "append",
        "c",
        "brackets_list",
        "filepath",
        "lineNumber",
        "bad_count_file",
        "brackets_list",
        "append",
        "c",
        "brackets_list",
        "append",
        "c",
        "brackets_list",
        "filepath",
        "lineNumber",
        "bad_count_file",
        "brackets_list",
        "append",
        "c",
        "checkIfNextIsClosingBlock",
        "c",
        "c",
        "brackets_list",
        "count",
        "brackets_list",
        "count",
        "filepath",
        "brackets_list",
        "count",
        "brackets_list",
        "count",
        "bad_count_file",
        "brackets_list",
        "count",
        "brackets_list",
        "count",
        "filepath",
        "brackets_list",
        "count",
        "brackets_list",
        "count",
        "bad_count_file",
        "brackets_list",
        "count",
        "brackets_list",
        "count",
        "filepath",
        "brackets_list",
        "count",
        "brackets_list",
        "count",
        "bad_count_file",
        "bad_count_file",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "parse_args",
        "root",
        "dirnames",
        "filenames",
        "os",
        "walk",
        "args",
        "filename",
        "fnmatch",
        "filenames",
        "sqf_list",
        "append",
        "os",
        "path",
        "join",
        "root",
        "filename",
        "filename",
        "sqf_list",
        "bad_count",
        "check_sqf_syntax",
        "filename",
        "format",
        "bad_count",
        "main"
    ],
    "literals": [
        "'r'",
        "'\\n'",
        "'*'",
        "'/'",
        "'\\n'",
        "'\"'",
        "'/'",
        "'('",
        "'('",
        "')'",
        "'{'",
        "'['",
        "\"Possible missing bracket detected at )\"",
        "\"Line number: \"",
        "')'",
        "'['",
        "'['",
        "']'",
        "'{'",
        "'('",
        "\"Possible missing bracket detected at ]\"",
        "\"Line number: \"",
        "']'",
        "'{'",
        "'{'",
        "'}'",
        "'('",
        "'['",
        "\"Possible missing bracket detected at }\"",
        "\"Line number: \"",
        "'}'",
        "'*'",
        "'/'",
        "'*'",
        "'['",
        "']'",
        "\"A possible missing [ or ] in file \"",
        "\"[ = \"",
        "'['",
        "\" ] =\"",
        "']'",
        "'('",
        "')'",
        "\"A possible missing ( or ) in file \"",
        "\"( = \"",
        "'('",
        "\" ) =\"",
        "')'",
        "'{'",
        "'}'",
        "\"A possible missing { or } in file \"",
        "\"{ = \"",
        "'{'",
        "\" } =\"",
        "'}'",
        "\"#########################\"",
        "\"# Validate SQF files missing brackets  #\"",
        "\"#########################\"",
        "'-m'",
        "'--module'",
        "'only search specified module addon folder'",
        "\".\"",
        "'../addons'",
        "'/'",
        "'*.sqf'",
        "\"Bad Count {0}\"",
        "\"__main__\""
    ],
    "variables": [
        "bad_count_file",
        "content",
        "brackets_list",
        "isInCommentBlock",
        "checkIfInComment",
        "ignoreTillEndOfLine",
        "checkIfNextIsClosingBlock",
        "isInString",
        "lineNumber",
        "isInString",
        "checkIfInComment",
        "isInCommentBlock",
        "ignoreTillEndOfLine",
        "ignoreTillEndOfLine",
        "isInString",
        "inStringType",
        "checkIfInComment",
        "checkIfNextIsClosingBlock",
        "isInCommentBlock",
        "checkIfNextIsClosingBlock",
        "sqf_list",
        "bad_count",
        "parser",
        "args",
        "bad_count"
    ],
    "comments": [
        "so we can print accurate line number information when we detect a possible error",
        "if we are not in a comment block, we will check if we are at the start of one or count the () {} and []",
        "This means we have encountered a /, so we are now checking if this is an inline comment or a comment block",
        "if the next character after / is a *, we are at the start of a comment block",
        "Otherwise, will check if we are in an line comment",
        "and an line comment is a / followed by another / (//) We won't care about anything that comes after it",
        "we are in a line comment, just continue going through the characters until we find an end of line"
    ],
    "docstrings": [],
    "functions": [
        "check_sqf_syntax",
        "pushClosing",
        "popClosing",
        "main"
    ],
    "classes": []
}