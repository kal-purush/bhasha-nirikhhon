{
    "identifiers": [
        "targetObject",
        "constructorOpt",
        "NodeJS",
        "NodeJS",
        "setTimeout",
        "callback",
        "args",
        "ms",
        "args",
        "NodeJS",
        "clearTimeout",
        "timeoutId",
        "NodeJS",
        "setInterval",
        "callback",
        "args",
        "ms",
        "args",
        "NodeJS",
        "clearInterval",
        "intervalId",
        "NodeJS",
        "setImmediate",
        "callback",
        "args",
        "args",
        "clearImmediate",
        "immediateId",
        "id",
        "id",
        "encoding",
        "size",
        "size",
        "array",
        "obj",
        "encoding",
        "totalLength",
        "encoding",
        "size",
        "array",
        "arrayBuffer",
        "array",
        "buffer",
        "array",
        "arrayBuffer",
        "byteOffset",
        "length",
        "buffer",
        "encoding",
        "obj",
        "obj",
        "encoding",
        "encoding",
        "totalLength",
        "buf1",
        "buf2",
        "size",
        "fill",
        "encoding",
        "size",
        "size",
        "NodeJS",
        "listener",
        "listener",
        "listener",
        "listener",
        "n",
        "args",
        "listener",
        "listener",
        "size",
        "encoding",
        "destination",
        "options",
        "destination",
        "chunk",
        "chunk",
        "oldStream",
        "buffer",
        "cb",
        "encoding",
        "cb",
        "buffer",
        "cb",
        "cb",
        "encoding",
        "cb",
        "fn",
        "emitter",
        "emitter",
        "cb",
        "err",
        "data",
        "cb",
        "data",
        "listener",
        "listener",
        "listener",
        "listener",
        "directory",
        "code",
        "id",
        "id",
        "id",
        "id",
        "pid",
        "signal",
        "callback",
        "args",
        "mask",
        "time",
        "message",
        "sendHandle",
        "ArrayBuffer",
        "Buffer",
        "DataView",
        "EvalError",
        "Float32Array",
        "Float64Array",
        "Infinity",
        "Int16Array",
        "Int32Array",
        "Int8Array",
        "NaN",
        "RangeError",
        "ReferenceError",
        "SyntaxError",
        "URIError",
        "Uint16Array",
        "Uint32Array",
        "Uint8Array",
        "immediateId",
        "intervalId",
        "NodeJS",
        "timeoutId",
        "NodeJS",
        "decodeURI",
        "decodeURIComponent",
        "encodeURI",
        "encodeURIComponent",
        "eval",
        "isFinite",
        "isNaN",
        "parseFloat",
        "parseInt",
        "callback",
        "args",
        "args",
        "callback",
        "args",
        "ms",
        "args",
        "NodeJS",
        "callback",
        "args",
        "ms",
        "args",
        "NodeJS",
        "offset",
        "length",
        "encoding",
        "encoding",
        "start",
        "end",
        "otherBuffer",
        "otherBuffer",
        "targetStart",
        "targetEnd",
        "sourceStart",
        "sourceEnd",
        "targetBuffer",
        "targetStart",
        "sourceStart",
        "sourceEnd",
        "start",
        "end",
        "value",
        "offset",
        "byteLength",
        "noAssert",
        "value",
        "offset",
        "byteLength",
        "noAssert",
        "value",
        "offset",
        "byteLength",
        "noAssert",
        "value",
        "offset",
        "byteLength",
        "noAssert",
        "offset",
        "byteLength",
        "noAssert",
        "offset",
        "byteLength",
        "noAssert",
        "offset",
        "byteLength",
        "noAssert",
        "offset",
        "byteLength",
        "noAssert",
        "offset",
        "noAssert",
        "offset",
        "noAssert",
        "offset",
        "noAssert",
        "offset",
        "noAssert",
        "offset",
        "noAssert",
        "offset",
        "noAssert",
        "offset",
        "noAssert",
        "offset",
        "noAssert",
        "offset",
        "noAssert",
        "offset",
        "noAssert",
        "offset",
        "noAssert",
        "offset",
        "noAssert",
        "offset",
        "noAssert",
        "offset",
        "noAssert",
        "value",
        "offset",
        "noAssert",
        "value",
        "offset",
        "noAssert",
        "value",
        "offset",
        "noAssert",
        "value",
        "offset",
        "noAssert",
        "value",
        "offset",
        "noAssert",
        "value",
        "offset",
        "noAssert",
        "value",
        "offset",
        "noAssert",
        "value",
        "offset",
        "noAssert",
        "value",
        "offset",
        "noAssert",
        "value",
        "offset",
        "noAssert",
        "value",
        "offset",
        "noAssert",
        "value",
        "offset",
        "noAssert",
        "value",
        "offset",
        "noAssert",
        "value",
        "offset",
        "noAssert",
        "value",
        "offset",
        "end",
        "value",
        "byteOffset",
        "encoding",
        "value",
        "byteOffset",
        "encoding",
        "value",
        "byteOffset",
        "encoding",
        "Buffer",
        "SlowBuffer",
        "BuffType",
        "Buffer",
        "SlowBuffType",
        "SlowBuffer",
        "stringify",
        "obj",
        "sep",
        "eq",
        "options",
        "parse",
        "sep",
        "eq",
        "options",
        "parse",
        "sep",
        "eq",
        "options",
        "escape",
        "unescape",
        "NodeJS",
        "emitter",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "n",
        "args",
        "events",
        "net",
        "stream",
        "key",
        "net",
        "msecs",
        "callback",
        "net",
        "stream",
        "buffer",
        "buffer",
        "cb",
        "cb",
        "encoding",
        "cb",
        "encoding",
        "fd",
        "statusCode",
        "reasonPhrase",
        "headers",
        "statusCode",
        "headers",
        "name",
        "value",
        "msecs",
        "callback",
        "name",
        "name",
        "chunk",
        "encoding",
        "headers",
        "buffer",
        "cb",
        "cb",
        "encoding",
        "cb",
        "data",
        "encoding",
        "stream",
        "buffer",
        "buffer",
        "cb",
        "cb",
        "encoding",
        "cb",
        "encoding",
        "fd",
        "chunk",
        "encoding",
        "timeout",
        "callback",
        "noDelay",
        "enable",
        "initialDelay",
        "name",
        "value",
        "name",
        "name",
        "headers",
        "buffer",
        "cb",
        "cb",
        "encoding",
        "cb",
        "data",
        "encoding",
        "stream",
        "net",
        "msecs",
        "callback",
        "NodeJS",
        "net",
        "error",
        "opts",
        "errorCode",
        "errorCode",
        "createServer",
        "requestListener",
        "request",
        "response",
        "createClient",
        "port",
        "host",
        "request",
        "options",
        "callback",
        "res",
        "get",
        "options",
        "callback",
        "res",
        "child",
        "events",
        "net",
        "events",
        "child",
        "message",
        "sendHandle",
        "signal",
        "signal",
        "listener",
        "listener",
        "listener",
        "code",
        "signal",
        "listener",
        "code",
        "signal",
        "listener",
        "address",
        "listener",
        "message",
        "handle",
        "net",
        "net",
        "listener",
        "listener",
        "listener",
        "listener",
        "code",
        "signal",
        "listener",
        "code",
        "signal",
        "listener",
        "address",
        "listener",
        "message",
        "handle",
        "net",
        "net",
        "listener",
        "listener",
        "listener",
        "listener",
        "code",
        "signal",
        "listener",
        "code",
        "signal",
        "listener",
        "address",
        "listener",
        "message",
        "handle",
        "net",
        "net",
        "listener",
        "listener",
        "listener",
        "listener",
        "code",
        "signal",
        "listener",
        "code",
        "signal",
        "listener",
        "address",
        "listener",
        "message",
        "handle",
        "net",
        "net",
        "listener",
        "listener",
        "listener",
        "listener",
        "code",
        "signal",
        "listener",
        "code",
        "signal",
        "listener",
        "address",
        "listener",
        "message",
        "handle",
        "net",
        "net",
        "listener",
        "listener",
        "listener",
        "listener",
        "code",
        "signal",
        "listener",
        "code",
        "signal",
        "listener",
        "address",
        "listener",
        "message",
        "handle",
        "net",
        "net",
        "listener",
        "events",
        "callback",
        "env",
        "settings",
        "index",
        "listener",
        "listener",
        "worker",
        "listener",
        "worker",
        "code",
        "signal",
        "listener",
        "worker",
        "listener",
        "worker",
        "address",
        "listener",
        "worker",
        "message",
        "handle",
        "net",
        "net",
        "listener",
        "worker",
        "listener",
        "settings",
        "listener",
        "listener",
        "worker",
        "listener",
        "worker",
        "code",
        "signal",
        "listener",
        "worker",
        "listener",
        "worker",
        "address",
        "listener",
        "worker",
        "message",
        "handle",
        "net",
        "net",
        "listener",
        "worker",
        "listener",
        "settings",
        "listener",
        "listener",
        "worker",
        "listener",
        "worker",
        "code",
        "signal",
        "listener",
        "worker",
        "listener",
        "worker",
        "address",
        "listener",
        "worker",
        "message",
        "handle",
        "net",
        "net",
        "listener",
        "worker",
        "listener",
        "settings",
        "listener",
        "listener",
        "worker",
        "listener",
        "worker",
        "code",
        "signal",
        "listener",
        "worker",
        "listener",
        "worker",
        "address",
        "listener",
        "worker",
        "message",
        "handle",
        "net",
        "net",
        "listener",
        "worker",
        "listener",
        "settings",
        "listener",
        "listener",
        "worker",
        "listener",
        "worker",
        "code",
        "signal",
        "listener",
        "worker",
        "listener",
        "worker",
        "address",
        "listener",
        "worker",
        "message",
        "handle",
        "net",
        "net",
        "listener",
        "worker",
        "listener",
        "settings",
        "listener",
        "listener",
        "worker",
        "listener",
        "worker",
        "code",
        "signal",
        "listener",
        "worker",
        "listener",
        "worker",
        "address",
        "listener",
        "worker",
        "message",
        "handle",
        "net",
        "net",
        "listener",
        "worker",
        "listener",
        "settings",
        "disconnect",
        "callback",
        "fork",
        "env",
        "setupMaster",
        "settings",
        "index",
        "addListener",
        "listener",
        "addListener",
        "listener",
        "worker",
        "addListener",
        "listener",
        "worker",
        "code",
        "signal",
        "addListener",
        "listener",
        "worker",
        "addListener",
        "listener",
        "worker",
        "address",
        "addListener",
        "listener",
        "worker",
        "message",
        "handle",
        "net",
        "net",
        "addListener",
        "listener",
        "worker",
        "addListener",
        "listener",
        "settings",
        "emit",
        "listener",
        "emit",
        "listener",
        "worker",
        "emit",
        "listener",
        "worker",
        "code",
        "signal",
        "emit",
        "listener",
        "worker",
        "emit",
        "listener",
        "worker",
        "address",
        "emit",
        "listener",
        "worker",
        "message",
        "handle",
        "net",
        "net",
        "emit",
        "listener",
        "worker",
        "emit",
        "listener",
        "settings",
        "on",
        "listener",
        "on",
        "listener",
        "worker",
        "on",
        "listener",
        "worker",
        "code",
        "signal",
        "on",
        "listener",
        "worker",
        "on",
        "listener",
        "worker",
        "address",
        "on",
        "listener",
        "worker",
        "message",
        "handle",
        "net",
        "net",
        "on",
        "listener",
        "worker",
        "on",
        "listener",
        "settings",
        "once",
        "listener",
        "once",
        "listener",
        "worker",
        "once",
        "listener",
        "worker",
        "code",
        "signal",
        "once",
        "listener",
        "worker",
        "once",
        "listener",
        "worker",
        "address",
        "once",
        "listener",
        "worker",
        "message",
        "handle",
        "net",
        "net",
        "once",
        "listener",
        "worker",
        "once",
        "listener",
        "settings",
        "removeListener",
        "listener",
        "removeAllListeners",
        "setMaxListeners",
        "n",
        "getMaxListeners",
        "listeners",
        "listenerCount",
        "prependListener",
        "listener",
        "prependListener",
        "listener",
        "worker",
        "prependListener",
        "listener",
        "worker",
        "code",
        "signal",
        "prependListener",
        "listener",
        "worker",
        "prependListener",
        "listener",
        "worker",
        "address",
        "prependListener",
        "listener",
        "worker",
        "message",
        "handle",
        "net",
        "net",
        "prependListener",
        "listener",
        "worker",
        "prependListener",
        "listener",
        "settings",
        "prependOnceListener",
        "listener",
        "prependOnceListener",
        "listener",
        "worker",
        "prependOnceListener",
        "listener",
        "worker",
        "code",
        "signal",
        "prependOnceListener",
        "listener",
        "worker",
        "prependOnceListener",
        "listener",
        "worker",
        "address",
        "prependOnceListener",
        "listener",
        "worker",
        "message",
        "handle",
        "net",
        "net",
        "prependOnceListener",
        "listener",
        "worker",
        "prependOnceListener",
        "listener",
        "settings",
        "eventNames",
        "stream",
        "stream",
        "stream",
        "stream",
        "stream",
        "stream",
        "stream",
        "stream",
        "createGzip",
        "options",
        "createGunzip",
        "options",
        "createDeflate",
        "options",
        "createInflate",
        "options",
        "createDeflateRaw",
        "options",
        "createInflateRaw",
        "options",
        "createUnzip",
        "options",
        "deflate",
        "buf",
        "callback",
        "error",
        "result",
        "deflateSync",
        "buf",
        "options",
        "deflateRaw",
        "buf",
        "callback",
        "error",
        "result",
        "deflateRawSync",
        "buf",
        "options",
        "gzip",
        "buf",
        "callback",
        "error",
        "result",
        "gzipSync",
        "buf",
        "options",
        "gunzip",
        "buf",
        "callback",
        "error",
        "result",
        "gunzipSync",
        "buf",
        "options",
        "inflate",
        "buf",
        "callback",
        "error",
        "result",
        "inflateSync",
        "buf",
        "options",
        "inflateRaw",
        "buf",
        "callback",
        "error",
        "result",
        "inflateRawSync",
        "buf",
        "options",
        "unzip",
        "buf",
        "callback",
        "error",
        "result",
        "unzipSync",
        "buf",
        "options",
        "hostname",
        "loadavg",
        "uptime",
        "freemem",
        "totalmem",
        "cpus",
        "release",
        "networkInterfaces",
        "index",
        "homedir",
        "userInfo",
        "options",
        "arch",
        "platform",
        "tmpdir",
        "endianness",
        "tls",
        "events",
        "http",
        "servername",
        "cb",
        "err",
        "ctx",
        "tls",
        "http",
        "http",
        "http",
        "options",
        "tls",
        "createServer",
        "options",
        "requestListener",
        "request",
        "options",
        "callback",
        "res",
        "http",
        "http",
        "get",
        "options",
        "callback",
        "res",
        "http",
        "http",
        "decode",
        "encode",
        "toUnicode",
        "domain",
        "toASCII",
        "domain",
        "codePoints",
        "stream",
        "readline",
        "NodeJS",
        "NodeJS",
        "readline",
        "keyword",
        "cmd",
        "preserveCursor",
        "start",
        "options",
        "events",
        "stream",
        "events",
        "prompt",
        "preserveCursor",
        "query",
        "callback",
        "answer",
        "data",
        "key",
        "line",
        "line",
        "callback",
        "err",
        "result",
        "NodeJS",
        "NodeJS",
        "createInterface",
        "input",
        "NodeJS",
        "output",
        "NodeJS",
        "completer",
        "terminal",
        "createInterface",
        "options",
        "cursorTo",
        "stream",
        "NodeJS",
        "x",
        "y",
        "moveCursor",
        "stream",
        "NodeJS",
        "dx",
        "dy",
        "clearLine",
        "stream",
        "NodeJS",
        "dir",
        "clearScreenDown",
        "stream",
        "NodeJS",
        "code",
        "options",
        "contextifiedSandbox",
        "options",
        "sandbox",
        "options",
        "options",
        "createContext",
        "sandbox",
        "isContext",
        "sandbox",
        "runInContext",
        "code",
        "contextifiedSandbox",
        "options",
        "runInDebugContext",
        "code",
        "runInNewContext",
        "code",
        "sandbox",
        "options",
        "runInThisContext",
        "code",
        "options",
        "events",
        "stream",
        "events",
        "stream",
        "stream",
        "stream",
        "stream",
        "stream",
        "stream",
        "signal",
        "message",
        "sendHandle",
        "spawn",
        "command",
        "args",
        "options",
        "exec",
        "command",
        "callback",
        "error",
        "stdout",
        "stderr",
        "exec",
        "command",
        "options",
        "callback",
        "error",
        "stdout",
        "stderr",
        "exec",
        "command",
        "options",
        "callback",
        "error",
        "stdout",
        "stderr",
        "exec",
        "command",
        "options",
        "callback",
        "error",
        "stdout",
        "stderr",
        "execFile",
        "file",
        "callback",
        "error",
        "stdout",
        "stderr",
        "execFile",
        "file",
        "options",
        "callback",
        "error",
        "stdout",
        "stderr",
        "execFile",
        "file",
        "options",
        "callback",
        "error",
        "stdout",
        "stderr",
        "execFile",
        "file",
        "options",
        "callback",
        "error",
        "stdout",
        "stderr",
        "execFile",
        "file",
        "args",
        "callback",
        "error",
        "stdout",
        "stderr",
        "execFile",
        "file",
        "args",
        "options",
        "callback",
        "error",
        "stdout",
        "stderr",
        "execFile",
        "file",
        "args",
        "options",
        "callback",
        "error",
        "stdout",
        "stderr",
        "execFile",
        "file",
        "args",
        "options",
        "callback",
        "error",
        "stdout",
        "stderr",
        "fork",
        "modulePath",
        "args",
        "options",
        "spawnSync",
        "command",
        "spawnSync",
        "command",
        "options",
        "spawnSync",
        "command",
        "options",
        "spawnSync",
        "command",
        "options",
        "spawnSync",
        "command",
        "args",
        "options",
        "spawnSync",
        "command",
        "args",
        "options",
        "spawnSync",
        "command",
        "args",
        "options",
        "execSync",
        "command",
        "execSync",
        "command",
        "options",
        "execSync",
        "command",
        "options",
        "execSync",
        "command",
        "options",
        "execFileSync",
        "command",
        "execFileSync",
        "command",
        "options",
        "execFileSync",
        "command",
        "options",
        "execFileSync",
        "command",
        "options",
        "execFileSync",
        "command",
        "args",
        "options",
        "execFileSync",
        "command",
        "args",
        "options",
        "execFileSync",
        "command",
        "args",
        "options",
        "parse",
        "urlStr",
        "parseQueryString",
        "slashesDenoteHost",
        "format",
        "url",
        "resolve",
        "to",
        "lookup",
        "domain",
        "family",
        "callback",
        "err",
        "address",
        "family",
        "lookup",
        "domain",
        "callback",
        "err",
        "address",
        "family",
        "resolve",
        "domain",
        "rrtype",
        "callback",
        "err",
        "addresses",
        "resolve",
        "domain",
        "callback",
        "err",
        "addresses",
        "resolve4",
        "domain",
        "callback",
        "err",
        "addresses",
        "resolve6",
        "domain",
        "callback",
        "err",
        "addresses",
        "resolveMx",
        "domain",
        "callback",
        "err",
        "addresses",
        "resolveTxt",
        "domain",
        "callback",
        "err",
        "addresses",
        "resolveSrv",
        "domain",
        "callback",
        "err",
        "addresses",
        "resolveNs",
        "domain",
        "callback",
        "err",
        "addresses",
        "resolveCname",
        "domain",
        "callback",
        "err",
        "addresses",
        "reverse",
        "ip",
        "callback",
        "err",
        "domains",
        "setServers",
        "servers",
        "stream",
        "events",
        "stream",
        "buffer",
        "buffer",
        "cb",
        "cb",
        "encoding",
        "cb",
        "encoding",
        "fd",
        "port",
        "host",
        "connectionListener",
        "path",
        "connectionListener",
        "encoding",
        "data",
        "encoding",
        "callback",
        "timeout",
        "callback",
        "noDelay",
        "enable",
        "initialDelay",
        "buffer",
        "cb",
        "cb",
        "encoding",
        "cb",
        "data",
        "encoding",
        "listener",
        "listener",
        "had_error",
        "listener",
        "listener",
        "data",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "err",
        "address",
        "family",
        "host",
        "listener",
        "args",
        "had_error",
        "data",
        "err",
        "err",
        "address",
        "family",
        "host",
        "listener",
        "listener",
        "had_error",
        "listener",
        "listener",
        "data",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "err",
        "address",
        "family",
        "host",
        "listener",
        "listener",
        "listener",
        "had_error",
        "listener",
        "listener",
        "data",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "err",
        "address",
        "family",
        "host",
        "listener",
        "listener",
        "listener",
        "had_error",
        "listener",
        "listener",
        "data",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "err",
        "address",
        "family",
        "host",
        "listener",
        "listener",
        "listener",
        "had_error",
        "listener",
        "listener",
        "data",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "err",
        "address",
        "family",
        "host",
        "listener",
        "options",
        "events",
        "port",
        "hostname",
        "backlog",
        "listeningListener",
        "port",
        "hostname",
        "listeningListener",
        "port",
        "backlog",
        "listeningListener",
        "port",
        "listeningListener",
        "path",
        "backlog",
        "listeningListener",
        "path",
        "listeningListener",
        "handle",
        "backlog",
        "listeningListener",
        "handle",
        "listeningListener",
        "options",
        "listeningListener",
        "callback",
        "cb",
        "error",
        "count",
        "listener",
        "listener",
        "listener",
        "socket",
        "listener",
        "err",
        "listener",
        "args",
        "socket",
        "err",
        "listener",
        "listener",
        "listener",
        "socket",
        "listener",
        "err",
        "listener",
        "listener",
        "listener",
        "listener",
        "socket",
        "listener",
        "err",
        "listener",
        "listener",
        "listener",
        "listener",
        "socket",
        "listener",
        "err",
        "listener",
        "listener",
        "listener",
        "listener",
        "socket",
        "listener",
        "err",
        "listener",
        "createServer",
        "connectionListener",
        "socket",
        "createServer",
        "options",
        "connectionListener",
        "socket",
        "connect",
        "options",
        "connectionListener",
        "connect",
        "port",
        "host",
        "connectionListener",
        "connect",
        "path",
        "connectionListener",
        "createConnection",
        "options",
        "connectionListener",
        "createConnection",
        "port",
        "host",
        "connectionListener",
        "createConnection",
        "path",
        "connectionListener",
        "isIP",
        "input",
        "isIPv4",
        "input",
        "isIPv6",
        "input",
        "events",
        "createSocket",
        "callback",
        "msg",
        "rinfo",
        "createSocket",
        "options",
        "callback",
        "msg",
        "rinfo",
        "events",
        "msg",
        "port",
        "address",
        "callback",
        "error",
        "msg",
        "offset",
        "length",
        "port",
        "address",
        "callback",
        "error",
        "port",
        "address",
        "callback",
        "options",
        "callback",
        "callback",
        "flag",
        "ttl",
        "ttl",
        "flag",
        "multicastAddress",
        "multicastInterface",
        "multicastAddress",
        "multicastInterface",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "listener",
        "msg",
        "rinfo",
        "args",
        "err",
        "msg",
        "rinfo",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "listener",
        "msg",
        "rinfo",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "listener",
        "msg",
        "rinfo",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "listener",
        "msg",
        "rinfo",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "listener",
        "msg",
        "rinfo",
        "stream",
        "events",
        "events",
        "listener",
        "listener",
        "eventType",
        "filename",
        "listener",
        "code",
        "signal",
        "listener",
        "listener",
        "eventType",
        "filename",
        "listener",
        "code",
        "signal",
        "listener",
        "listener",
        "eventType",
        "filename",
        "listener",
        "code",
        "signal",
        "listener",
        "listener",
        "eventType",
        "filename",
        "listener",
        "code",
        "signal",
        "listener",
        "listener",
        "eventType",
        "filename",
        "listener",
        "code",
        "signal",
        "stream",
        "listener",
        "listener",
        "fd",
        "listener",
        "listener",
        "listener",
        "fd",
        "listener",
        "listener",
        "listener",
        "fd",
        "listener",
        "listener",
        "listener",
        "fd",
        "listener",
        "listener",
        "listener",
        "fd",
        "listener",
        "stream",
        "listener",
        "listener",
        "fd",
        "listener",
        "listener",
        "listener",
        "fd",
        "listener",
        "listener",
        "listener",
        "fd",
        "listener",
        "listener",
        "listener",
        "fd",
        "listener",
        "listener",
        "listener",
        "fd",
        "listener",
        "rename",
        "oldPath",
        "newPath",
        "callback",
        "err",
        "NodeJS",
        "renameSync",
        "oldPath",
        "newPath",
        "truncate",
        "path",
        "callback",
        "err",
        "NodeJS",
        "truncate",
        "path",
        "len",
        "callback",
        "err",
        "NodeJS",
        "truncateSync",
        "path",
        "len",
        "ftruncate",
        "fd",
        "callback",
        "err",
        "NodeJS",
        "ftruncate",
        "fd",
        "len",
        "callback",
        "err",
        "NodeJS",
        "ftruncateSync",
        "fd",
        "len",
        "chown",
        "path",
        "uid",
        "gid",
        "callback",
        "err",
        "NodeJS",
        "chownSync",
        "path",
        "uid",
        "gid",
        "fchown",
        "fd",
        "uid",
        "gid",
        "callback",
        "err",
        "NodeJS",
        "fchownSync",
        "fd",
        "uid",
        "gid",
        "lchown",
        "path",
        "uid",
        "gid",
        "callback",
        "err",
        "NodeJS",
        "lchownSync",
        "path",
        "uid",
        "gid",
        "chmod",
        "path",
        "mode",
        "callback",
        "err",
        "NodeJS",
        "chmod",
        "path",
        "mode",
        "callback",
        "err",
        "NodeJS",
        "chmodSync",
        "path",
        "mode",
        "chmodSync",
        "path",
        "mode",
        "fchmod",
        "fd",
        "mode",
        "callback",
        "err",
        "NodeJS",
        "fchmod",
        "fd",
        "mode",
        "callback",
        "err",
        "NodeJS",
        "fchmodSync",
        "fd",
        "mode",
        "fchmodSync",
        "fd",
        "mode",
        "lchmod",
        "path",
        "mode",
        "callback",
        "err",
        "NodeJS",
        "lchmod",
        "path",
        "mode",
        "callback",
        "err",
        "NodeJS",
        "lchmodSync",
        "path",
        "mode",
        "lchmodSync",
        "path",
        "mode",
        "stat",
        "path",
        "callback",
        "err",
        "NodeJS",
        "stats",
        "lstat",
        "path",
        "callback",
        "err",
        "NodeJS",
        "stats",
        "fstat",
        "fd",
        "callback",
        "err",
        "NodeJS",
        "stats",
        "statSync",
        "path",
        "lstatSync",
        "path",
        "fstatSync",
        "fd",
        "link",
        "srcpath",
        "dstpath",
        "callback",
        "err",
        "NodeJS",
        "linkSync",
        "srcpath",
        "dstpath",
        "symlink",
        "srcpath",
        "dstpath",
        "callback",
        "err",
        "NodeJS",
        "symlinkSync",
        "srcpath",
        "dstpath",
        "readlink",
        "path",
        "callback",
        "err",
        "NodeJS",
        "linkString",
        "readlinkSync",
        "path",
        "realpath",
        "path",
        "callback",
        "err",
        "NodeJS",
        "resolvedPath",
        "realpath",
        "path",
        "cache",
        "path",
        "callback",
        "err",
        "NodeJS",
        "resolvedPath",
        "realpathSync",
        "path",
        "cache",
        "path",
        "unlink",
        "path",
        "callback",
        "err",
        "NodeJS",
        "unlinkSync",
        "path",
        "rmdir",
        "path",
        "callback",
        "err",
        "NodeJS",
        "rmdirSync",
        "path",
        "mkdir",
        "path",
        "callback",
        "err",
        "NodeJS",
        "mkdir",
        "path",
        "mode",
        "callback",
        "err",
        "NodeJS",
        "mkdir",
        "path",
        "mode",
        "callback",
        "err",
        "NodeJS",
        "mkdirSync",
        "path",
        "mode",
        "mkdirSync",
        "path",
        "mode",
        "mkdtemp",
        "prefix",
        "callback",
        "err",
        "NodeJS",
        "folder",
        "mkdtempSync",
        "prefix",
        "readdir",
        "path",
        "callback",
        "err",
        "NodeJS",
        "files",
        "readdirSync",
        "path",
        "close",
        "fd",
        "callback",
        "err",
        "NodeJS",
        "closeSync",
        "fd",
        "open",
        "path",
        "flags",
        "callback",
        "err",
        "NodeJS",
        "fd",
        "open",
        "path",
        "flags",
        "mode",
        "callback",
        "err",
        "NodeJS",
        "fd",
        "openSync",
        "path",
        "flags",
        "mode",
        "utimes",
        "path",
        "atime",
        "mtime",
        "callback",
        "err",
        "NodeJS",
        "utimes",
        "path",
        "atime",
        "mtime",
        "callback",
        "err",
        "NodeJS",
        "utimesSync",
        "path",
        "atime",
        "mtime",
        "utimesSync",
        "path",
        "atime",
        "mtime",
        "futimes",
        "fd",
        "atime",
        "mtime",
        "callback",
        "err",
        "NodeJS",
        "futimes",
        "fd",
        "atime",
        "mtime",
        "callback",
        "err",
        "NodeJS",
        "futimesSync",
        "fd",
        "atime",
        "mtime",
        "futimesSync",
        "fd",
        "atime",
        "mtime",
        "fsync",
        "fd",
        "callback",
        "err",
        "NodeJS",
        "fsyncSync",
        "fd",
        "write",
        "fd",
        "buffer",
        "offset",
        "length",
        "position",
        "callback",
        "err",
        "NodeJS",
        "written",
        "buffer",
        "write",
        "fd",
        "buffer",
        "offset",
        "length",
        "callback",
        "err",
        "NodeJS",
        "written",
        "buffer",
        "write",
        "fd",
        "data",
        "callback",
        "err",
        "NodeJS",
        "written",
        "write",
        "fd",
        "data",
        "offset",
        "callback",
        "err",
        "NodeJS",
        "written",
        "write",
        "fd",
        "data",
        "offset",
        "encoding",
        "callback",
        "err",
        "NodeJS",
        "written",
        "writeSync",
        "fd",
        "buffer",
        "offset",
        "length",
        "position",
        "writeSync",
        "fd",
        "data",
        "position",
        "enconding",
        "read",
        "fd",
        "buffer",
        "offset",
        "length",
        "position",
        "callback",
        "err",
        "NodeJS",
        "bytesRead",
        "buffer",
        "readSync",
        "fd",
        "buffer",
        "offset",
        "length",
        "position",
        "readFile",
        "filename",
        "encoding",
        "callback",
        "err",
        "NodeJS",
        "data",
        "readFile",
        "filename",
        "options",
        "callback",
        "err",
        "NodeJS",
        "data",
        "readFile",
        "filename",
        "options",
        "callback",
        "err",
        "NodeJS",
        "data",
        "readFile",
        "filename",
        "callback",
        "err",
        "NodeJS",
        "data",
        "readFileSync",
        "filename",
        "encoding",
        "readFileSync",
        "filename",
        "options",
        "readFileSync",
        "filename",
        "options",
        "writeFile",
        "filename",
        "data",
        "callback",
        "err",
        "NodeJS",
        "writeFile",
        "filename",
        "data",
        "options",
        "callback",
        "err",
        "NodeJS",
        "writeFile",
        "filename",
        "data",
        "options",
        "callback",
        "err",
        "NodeJS",
        "writeFileSync",
        "filename",
        "data",
        "options",
        "writeFileSync",
        "filename",
        "data",
        "options",
        "appendFile",
        "filename",
        "data",
        "options",
        "callback",
        "err",
        "NodeJS",
        "appendFile",
        "filename",
        "data",
        "options",
        "callback",
        "err",
        "NodeJS",
        "appendFile",
        "filename",
        "data",
        "callback",
        "err",
        "NodeJS",
        "appendFileSync",
        "filename",
        "data",
        "options",
        "appendFileSync",
        "filename",
        "data",
        "options",
        "watchFile",
        "filename",
        "listener",
        "curr",
        "prev",
        "watchFile",
        "filename",
        "options",
        "listener",
        "curr",
        "prev",
        "unwatchFile",
        "filename",
        "listener",
        "curr",
        "prev",
        "watch",
        "filename",
        "listener",
        "filename",
        "watch",
        "filename",
        "encoding",
        "listener",
        "filename",
        "watch",
        "filename",
        "options",
        "listener",
        "filename",
        "exists",
        "path",
        "callback",
        "exists",
        "existsSync",
        "path",
        "constants",
        "access",
        "path",
        "callback",
        "err",
        "NodeJS",
        "access",
        "path",
        "mode",
        "callback",
        "err",
        "NodeJS",
        "accessSync",
        "path",
        "mode",
        "createReadStream",
        "path",
        "options",
        "createWriteStream",
        "path",
        "options",
        "fdatasync",
        "fd",
        "callback",
        "fdatasyncSync",
        "fd",
        "normalize",
        "p",
        "join",
        "paths",
        "join",
        "paths",
        "resolve",
        "pathSegments",
        "isAbsolute",
        "path",
        "relative",
        "to",
        "dirname",
        "p",
        "basename",
        "p",
        "ext",
        "extname",
        "p",
        "parse",
        "pathString",
        "format",
        "pathObject",
        "posix",
        "normalize",
        "p",
        "join",
        "paths",
        "resolve",
        "pathSegments",
        "isAbsolute",
        "p",
        "relative",
        "to",
        "dirname",
        "p",
        "basename",
        "p",
        "ext",
        "extname",
        "p",
        "parse",
        "p",
        "format",
        "pP",
        "win32",
        "normalize",
        "p",
        "join",
        "paths",
        "resolve",
        "pathSegments",
        "isAbsolute",
        "p",
        "relative",
        "to",
        "dirname",
        "p",
        "basename",
        "p",
        "ext",
        "extname",
        "p",
        "parse",
        "p",
        "format",
        "pP",
        "buffer",
        "buffer",
        "encoding",
        "crypto",
        "net",
        "stream",
        "stream",
        "socket",
        "net",
        "options",
        "net",
        "detailed",
        "options",
        "callback",
        "err",
        "size",
        "listener",
        "listener",
        "response",
        "listener",
        "args",
        "response",
        "listener",
        "listener",
        "response",
        "listener",
        "listener",
        "listener",
        "response",
        "listener",
        "listener",
        "listener",
        "response",
        "listener",
        "listener",
        "listener",
        "response",
        "listener",
        "servername",
        "cb",
        "err",
        "ctx",
        "net",
        "servername",
        "cert",
        "net",
        "hostName",
        "credentials",
        "listener",
        "listener",
        "err",
        "tlsSocket",
        "listener",
        "sessionId",
        "sessionData",
        "callback",
        "err",
        "resp",
        "listener",
        "certificate",
        "issuer",
        "callback",
        "listener",
        "sessionId",
        "callback",
        "err",
        "sessionData",
        "listener",
        "tlsSocket",
        "args",
        "err",
        "tlsSocket",
        "sessionId",
        "sessionData",
        "callback",
        "err",
        "resp",
        "certificate",
        "issuer",
        "callback",
        "sessionId",
        "callback",
        "err",
        "sessionData",
        "tlsSocket",
        "listener",
        "listener",
        "err",
        "tlsSocket",
        "listener",
        "sessionId",
        "sessionData",
        "callback",
        "err",
        "resp",
        "listener",
        "certificate",
        "issuer",
        "callback",
        "listener",
        "sessionId",
        "callback",
        "err",
        "sessionData",
        "listener",
        "tlsSocket",
        "listener",
        "listener",
        "err",
        "tlsSocket",
        "listener",
        "sessionId",
        "sessionData",
        "callback",
        "err",
        "resp",
        "listener",
        "certificate",
        "issuer",
        "callback",
        "listener",
        "sessionId",
        "callback",
        "err",
        "sessionData",
        "listener",
        "tlsSocket",
        "listener",
        "listener",
        "err",
        "tlsSocket",
        "listener",
        "sessionId",
        "sessionData",
        "callback",
        "err",
        "resp",
        "listener",
        "certificate",
        "issuer",
        "callback",
        "listener",
        "sessionId",
        "callback",
        "err",
        "sessionData",
        "listener",
        "tlsSocket",
        "listener",
        "listener",
        "err",
        "tlsSocket",
        "listener",
        "sessionId",
        "sessionData",
        "callback",
        "err",
        "resp",
        "listener",
        "certificate",
        "issuer",
        "callback",
        "listener",
        "sessionId",
        "callback",
        "err",
        "sessionData",
        "listener",
        "tlsSocket",
        "stream",
        "createServer",
        "options",
        "secureConnectionListener",
        "cleartextStream",
        "connect",
        "options",
        "secureConnectionListener",
        "connect",
        "port",
        "host",
        "options",
        "secureConnectListener",
        "connect",
        "port",
        "options",
        "secureConnectListener",
        "createSecurePair",
        "credentials",
        "crypto",
        "isServer",
        "requestCert",
        "rejectUnauthorized",
        "createSecureContext",
        "details",
        "spkac",
        "spkac",
        "spkac",
        "createCredentials",
        "details",
        "createHash",
        "algorithm",
        "createHmac",
        "algorithm",
        "key",
        "NodeJS",
        "data",
        "data",
        "input_encoding",
        "encoding",
        "NodeJS",
        "data",
        "data",
        "input_encoding",
        "encoding",
        "createCipher",
        "algorithm",
        "password",
        "createCipheriv",
        "algorithm",
        "key",
        "iv",
        "NodeJS",
        "data",
        "data",
        "input_encoding",
        "data",
        "input_encoding",
        "output_encoding",
        "data",
        "input_encoding",
        "output_encoding",
        "output_encoding",
        "auto_padding",
        "buffer",
        "createDecipher",
        "algorithm",
        "password",
        "createDecipheriv",
        "algorithm",
        "key",
        "iv",
        "NodeJS",
        "data",
        "data",
        "input_encoding",
        "data",
        "input_encoding",
        "output_encoding",
        "data",
        "input_encoding",
        "output_encoding",
        "output_encoding",
        "auto_padding",
        "tag",
        "buffer",
        "createSign",
        "algorithm",
        "NodeJS",
        "data",
        "data",
        "input_encoding",
        "private_key",
        "private_key",
        "output_format",
        "createVerify",
        "algorith",
        "NodeJS",
        "data",
        "data",
        "input_encoding",
        "signature",
        "signature",
        "signature_format",
        "createDiffieHellman",
        "prime_length",
        "generator",
        "createDiffieHellman",
        "prime",
        "createDiffieHellman",
        "prime",
        "prime_encoding",
        "createDiffieHellman",
        "prime",
        "prime_encoding",
        "generator",
        "createDiffieHellman",
        "prime",
        "prime_encoding",
        "generator",
        "generator_encoding",
        "encoding",
        "other_public_key",
        "other_public_key",
        "input_encoding",
        "other_public_key",
        "input_encoding",
        "output_encoding",
        "encoding",
        "encoding",
        "encoding",
        "encoding",
        "public_key",
        "public_key",
        "encoding",
        "private_key",
        "private_key",
        "encoding",
        "getDiffieHellman",
        "group_name",
        "pbkdf2",
        "password",
        "salt",
        "iterations",
        "keylen",
        "digest",
        "callback",
        "err",
        "derivedKey",
        "pbkdf2Sync",
        "password",
        "salt",
        "iterations",
        "keylen",
        "digest",
        "randomBytes",
        "size",
        "randomBytes",
        "size",
        "callback",
        "err",
        "buf",
        "pseudoRandomBytes",
        "size",
        "pseudoRandomBytes",
        "size",
        "callback",
        "err",
        "buf",
        "publicEncrypt",
        "public_key",
        "buffer",
        "privateDecrypt",
        "private_key",
        "buffer",
        "privateEncrypt",
        "private_key",
        "buffer",
        "publicDecrypt",
        "public_key",
        "buffer",
        "getCiphers",
        "getCurves",
        "getHashes",
        "encoding",
        "encoding",
        "format",
        "other_public_key",
        "other_public_key",
        "input_encoding",
        "other_public_key",
        "input_encoding",
        "output_encoding",
        "encoding",
        "encoding",
        "encoding",
        "format",
        "private_key",
        "private_key",
        "encoding",
        "createECDH",
        "curve_name",
        "timingSafeEqual",
        "a",
        "b",
        "events",
        "events",
        "NodeJS",
        "destination",
        "options",
        "size",
        "events",
        "NodeJS",
        "opts",
        "size",
        "size",
        "encoding",
        "NodeJS",
        "destination",
        "options",
        "NodeJS",
        "destination",
        "chunk",
        "oldStream",
        "NodeJS",
        "NodeJS",
        "chunk",
        "encoding",
        "listener",
        "listener",
        "listener",
        "listener",
        "chunk",
        "listener",
        "listener",
        "listener",
        "err",
        "args",
        "chunk",
        "err",
        "listener",
        "listener",
        "listener",
        "chunk",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "listener",
        "listener",
        "chunk",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "listener",
        "listener",
        "chunk",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "listener",
        "listener",
        "chunk",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "listener",
        "listener",
        "chunk",
        "listener",
        "listener",
        "listener",
        "err",
        "chunk",
        "encoding",
        "callback",
        "chunks",
        "callback",
        "events",
        "NodeJS",
        "opts",
        "chunk",
        "encoding",
        "callback",
        "chunk",
        "cb",
        "chunk",
        "encoding",
        "cb",
        "chunk",
        "cb",
        "chunk",
        "encoding",
        "cb",
        "listener",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "listener",
        "src",
        "listener",
        "src",
        "args",
        "chunk",
        "err",
        "src",
        "src",
        "listener",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "listener",
        "src",
        "listener",
        "src",
        "listener",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "listener",
        "src",
        "listener",
        "src",
        "listener",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "listener",
        "src",
        "listener",
        "src",
        "listener",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "listener",
        "src",
        "listener",
        "src",
        "listener",
        "listener",
        "listener",
        "listener",
        "err",
        "listener",
        "listener",
        "src",
        "listener",
        "src",
        "Readable",
        "NodeJS",
        "opts",
        "chunk",
        "encoding",
        "callback",
        "chunk",
        "cb",
        "chunk",
        "encoding",
        "cb",
        "chunk",
        "cb",
        "chunk",
        "encoding",
        "cb",
        "chunk",
        "encoding",
        "callback",
        "callback",
        "events",
        "NodeJS",
        "opts",
        "chunk",
        "encoding",
        "callback",
        "callback",
        "size",
        "encoding",
        "NodeJS",
        "destination",
        "options",
        "NodeJS",
        "destination",
        "chunk",
        "oldStream",
        "NodeJS",
        "NodeJS",
        "chunk",
        "encoding",
        "chunk",
        "cb",
        "chunk",
        "encoding",
        "cb",
        "chunk",
        "cb",
        "chunk",
        "encoding",
        "cb",
        "Transform",
        "format",
        "format",
        "param",
        "debug",
        "error",
        "param",
        "puts",
        "param",
        "param",
        "log",
        "inspect",
        "showHidden",
        "depth",
        "color",
        "inspect",
        "options",
        "isArray",
        "isRegExp",
        "isDate",
        "isError",
        "inherits",
        "superConstructor",
        "debuglog",
        "key",
        "msg",
        "param",
        "isBoolean",
        "isBuffer",
        "isFunction",
        "isNull",
        "isNullOrUndefined",
        "isNumber",
        "isObject",
        "isPrimitive",
        "isString",
        "isSymbol",
        "isUndefined",
        "deprecate",
        "fn",
        "message",
        "value",
        "message",
        "options",
        "fail",
        "actual",
        "expected",
        "message",
        "ok",
        "value",
        "message",
        "equal",
        "actual",
        "expected",
        "message",
        "notEqual",
        "actual",
        "expected",
        "message",
        "deepEqual",
        "actual",
        "expected",
        "message",
        "notDeepEqual",
        "acutal",
        "expected",
        "message",
        "strictEqual",
        "actual",
        "expected",
        "message",
        "notStrictEqual",
        "actual",
        "expected",
        "message",
        "deepStrictEqual",
        "actual",
        "expected",
        "message",
        "notDeepStrictEqual",
        "actual",
        "expected",
        "message",
        "block",
        "message",
        "block",
        "error",
        "message",
        "block",
        "error",
        "message",
        "block",
        "error",
        "err",
        "message",
        "block",
        "message",
        "block",
        "error",
        "message",
        "block",
        "error",
        "message",
        "block",
        "error",
        "err",
        "message",
        "ifError",
        "value",
        "net",
        "isatty",
        "fd",
        "net",
        "mode",
        "net",
        "events",
        "events",
        "NodeJS",
        "fn",
        "emitter",
        "events",
        "emitter",
        "events",
        "cb",
        "err",
        "data",
        "cb",
        "data",
        "create",
        "process",
        "getHeapStatistics",
        "getHeapSpaceStatistics",
        "setFlagsFromString",
        "flags",
        "setTimeout",
        "callback",
        "args",
        "ms",
        "args",
        "NodeJS",
        "clearTimeout",
        "timeoutId",
        "NodeJS",
        "setInterval",
        "callback",
        "args",
        "ms",
        "args",
        "NodeJS",
        "clearInterval",
        "intervalId",
        "NodeJS",
        "setImmediate",
        "callback",
        "args",
        "args",
        "clearImmediate",
        "immediateId"
    ],
    "literals": [
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"ascii\"",
        "\"utf8\"",
        "\"utf16le\"",
        "\"ucs2\"",
        "\"binary\"",
        "\"hex\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'Buffer'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"buffer\"",
        "\"querystring\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"events\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"http\"",
        "\"events\"",
        "\"net\"",
        "\"stream\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"cluster\"",
        "\"child_process\"",
        "\"events\"",
        "\"net\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"udp4\"",
        "\"udp6\"",
        "string",
        "string",
        "string",
        "string",
        "\"disconnect\"",
        "\"error\"",
        "string",
        "\"exit\"",
        "string",
        "\"listening\"",
        "\"message\"",
        "\"online\"",
        "string",
        "\"disconnect\"",
        "\"error\"",
        "string",
        "\"exit\"",
        "string",
        "\"listening\"",
        "\"message\"",
        "\"online\"",
        "string",
        "\"disconnect\"",
        "\"error\"",
        "string",
        "\"exit\"",
        "string",
        "\"listening\"",
        "\"message\"",
        "\"online\"",
        "string",
        "\"disconnect\"",
        "\"error\"",
        "string",
        "\"exit\"",
        "string",
        "\"listening\"",
        "\"message\"",
        "\"online\"",
        "string",
        "\"disconnect\"",
        "\"error\"",
        "string",
        "\"exit\"",
        "string",
        "\"listening\"",
        "\"message\"",
        "\"online\"",
        "string",
        "\"disconnect\"",
        "\"error\"",
        "string",
        "\"exit\"",
        "string",
        "\"listening\"",
        "\"message\"",
        "\"online\"",
        "string",
        "string",
        "\"disconnect\"",
        "\"exit\"",
        "string",
        "\"fork\"",
        "\"listening\"",
        "\"message\"",
        "\"online\"",
        "\"setup\"",
        "string",
        "\"disconnect\"",
        "\"exit\"",
        "string",
        "\"fork\"",
        "\"listening\"",
        "\"message\"",
        "\"online\"",
        "\"setup\"",
        "string",
        "\"disconnect\"",
        "\"exit\"",
        "string",
        "\"fork\"",
        "\"listening\"",
        "\"message\"",
        "\"online\"",
        "\"setup\"",
        "string",
        "\"disconnect\"",
        "\"exit\"",
        "string",
        "\"fork\"",
        "\"listening\"",
        "\"message\"",
        "\"online\"",
        "\"setup\"",
        "string",
        "\"disconnect\"",
        "\"exit\"",
        "string",
        "\"fork\"",
        "\"listening\"",
        "\"message\"",
        "\"online\"",
        "\"setup\"",
        "string",
        "\"disconnect\"",
        "\"exit\"",
        "string",
        "\"fork\"",
        "\"listening\"",
        "\"message\"",
        "\"online\"",
        "\"setup\"",
        "string",
        "string",
        "\"disconnect\"",
        "\"exit\"",
        "string",
        "\"fork\"",
        "\"listening\"",
        "\"message\"",
        "\"online\"",
        "\"setup\"",
        "string",
        "\"disconnect\"",
        "\"exit\"",
        "string",
        "\"fork\"",
        "\"listening\"",
        "\"message\"",
        "\"online\"",
        "\"setup\"",
        "string",
        "\"disconnect\"",
        "\"exit\"",
        "string",
        "\"fork\"",
        "\"listening\"",
        "\"message\"",
        "\"online\"",
        "\"setup\"",
        "string",
        "\"disconnect\"",
        "\"exit\"",
        "string",
        "\"fork\"",
        "\"listening\"",
        "\"message\"",
        "\"online\"",
        "\"setup\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"disconnect\"",
        "\"exit\"",
        "string",
        "\"fork\"",
        "\"listening\"",
        "\"message\"",
        "\"online\"",
        "\"setup\"",
        "string",
        "\"disconnect\"",
        "\"exit\"",
        "string",
        "\"fork\"",
        "\"listening\"",
        "\"message\"",
        "\"online\"",
        "\"setup\"",
        "string",
        "\"zlib\"",
        "\"stream\"",
        "\"os\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"BE\"",
        "\"LE\"",
        "\"https\"",
        "\"tls\"",
        "\"events\"",
        "\"http\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"punycode\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"repl\"",
        "\"stream\"",
        "\"readline\"",
        "string",
        "string",
        "string",
        "\"readline\"",
        "\"events\"",
        "\"stream\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"vm\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"child_process\"",
        "\"events\"",
        "\"stream\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"url\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"dns\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"net\"",
        "\"stream\"",
        "\"events\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"close\"",
        "\"connect\"",
        "\"data\"",
        "\"drain\"",
        "\"end\"",
        "\"error\"",
        "\"lookup\"",
        "string",
        "string",
        "string",
        "\"timeout\"",
        "string",
        "\"close\"",
        "\"connect\"",
        "\"data\"",
        "\"drain\"",
        "\"end\"",
        "\"error\"",
        "\"lookup\"",
        "string",
        "string",
        "string",
        "\"timeout\"",
        "string",
        "\"close\"",
        "\"connect\"",
        "\"data\"",
        "\"drain\"",
        "\"end\"",
        "\"error\"",
        "\"lookup\"",
        "string",
        "string",
        "string",
        "\"timeout\"",
        "string",
        "\"close\"",
        "\"connect\"",
        "\"data\"",
        "\"drain\"",
        "\"end\"",
        "\"error\"",
        "\"lookup\"",
        "string",
        "string",
        "string",
        "\"timeout\"",
        "string",
        "\"close\"",
        "\"connect\"",
        "\"data\"",
        "\"drain\"",
        "\"end\"",
        "\"error\"",
        "\"lookup\"",
        "string",
        "string",
        "string",
        "\"timeout\"",
        "string",
        "\"close\"",
        "\"connect\"",
        "\"data\"",
        "\"drain\"",
        "\"end\"",
        "\"error\"",
        "\"lookup\"",
        "string",
        "string",
        "string",
        "\"timeout\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"close\"",
        "\"connection\"",
        "\"error\"",
        "\"listening\"",
        "string",
        "\"close\"",
        "\"connection\"",
        "\"error\"",
        "\"listening\"",
        "string",
        "\"close\"",
        "\"connection\"",
        "\"error\"",
        "\"listening\"",
        "string",
        "\"close\"",
        "\"connection\"",
        "\"error\"",
        "\"listening\"",
        "string",
        "\"close\"",
        "\"connection\"",
        "\"error\"",
        "\"listening\"",
        "string",
        "\"close\"",
        "\"connection\"",
        "\"error\"",
        "\"listening\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"dgram\"",
        "\"events\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"udp4\"",
        "\"udp6\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"close\"",
        "\"error\"",
        "\"listening\"",
        "\"message\"",
        "string",
        "string",
        "\"close\"",
        "\"error\"",
        "\"listening\"",
        "\"message\"",
        "string",
        "string",
        "\"close\"",
        "\"error\"",
        "\"listening\"",
        "\"message\"",
        "string",
        "string",
        "\"close\"",
        "\"error\"",
        "\"listening\"",
        "\"message\"",
        "string",
        "string",
        "\"close\"",
        "\"error\"",
        "\"listening\"",
        "\"message\"",
        "string",
        "string",
        "\"close\"",
        "\"error\"",
        "\"listening\"",
        "\"message\"",
        "string",
        "\"fs\"",
        "\"stream\"",
        "\"events\"",
        "string",
        "\"change\"",
        "string",
        "string",
        "\"error\"",
        "string",
        "string",
        "\"change\"",
        "string",
        "string",
        "\"error\"",
        "string",
        "string",
        "\"change\"",
        "string",
        "string",
        "\"error\"",
        "string",
        "string",
        "\"change\"",
        "string",
        "string",
        "\"error\"",
        "string",
        "string",
        "\"change\"",
        "string",
        "string",
        "\"error\"",
        "string",
        "string",
        "\"open\"",
        "\"close\"",
        "string",
        "\"open\"",
        "\"close\"",
        "string",
        "\"open\"",
        "\"close\"",
        "string",
        "\"open\"",
        "\"close\"",
        "string",
        "\"open\"",
        "\"close\"",
        "string",
        "string",
        "\"open\"",
        "\"close\"",
        "string",
        "\"open\"",
        "\"close\"",
        "string",
        "\"open\"",
        "\"close\"",
        "string",
        "\"open\"",
        "\"close\"",
        "string",
        "\"open\"",
        "\"close\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"path\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"string_decoder\"",
        "string",
        "string",
        "string",
        "\"tls\"",
        "\"crypto\"",
        "\"net\"",
        "\"stream\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"OCSPResponse\"",
        "\"secureConnect\"",
        "string",
        "\"OCSPResponse\"",
        "\"secureConnect\"",
        "string",
        "\"OCSPResponse\"",
        "\"secureConnect\"",
        "string",
        "\"OCSPResponse\"",
        "\"secureConnect\"",
        "string",
        "\"OCSPResponse\"",
        "\"secureConnect\"",
        "string",
        "\"OCSPResponse\"",
        "\"secureConnect\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"tlsClientError\"",
        "\"newSession\"",
        "\"OCSPRequest\"",
        "\"resumeSession\"",
        "\"secureConnection\"",
        "string",
        "\"tlsClientError\"",
        "\"newSession\"",
        "\"OCSPRequest\"",
        "\"resumeSession\"",
        "\"secureConnection\"",
        "string",
        "\"tlsClientError\"",
        "\"newSession\"",
        "\"OCSPRequest\"",
        "\"resumeSession\"",
        "\"secureConnection\"",
        "string",
        "\"tlsClientError\"",
        "\"newSession\"",
        "\"OCSPRequest\"",
        "\"resumeSession\"",
        "\"secureConnection\"",
        "string",
        "\"tlsClientError\"",
        "\"newSession\"",
        "\"OCSPRequest\"",
        "\"resumeSession\"",
        "\"secureConnection\"",
        "string",
        "\"tlsClientError\"",
        "\"newSession\"",
        "\"OCSPRequest\"",
        "\"resumeSession\"",
        "\"secureConnection\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"crypto\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"utf8\"",
        "\"ascii\"",
        "\"latin1\"",
        "\"latin1\"",
        "\"hex\"",
        "\"base64\"",
        "\"utf8\"",
        "\"ascii\"",
        "\"binary\"",
        "\"binary\"",
        "\"base64\"",
        "\"hex\"",
        "\"compressed\"",
        "\"uncompressed\"",
        "\"hybrid\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"stream\"",
        "\"events\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"close\"",
        "\"data\"",
        "string",
        "\"end\"",
        "\"readable\"",
        "\"error\"",
        "string",
        "\"close\"",
        "\"data\"",
        "string",
        "\"end\"",
        "\"readable\"",
        "\"error\"",
        "string",
        "\"close\"",
        "\"data\"",
        "string",
        "\"end\"",
        "\"readable\"",
        "\"error\"",
        "string",
        "\"close\"",
        "\"data\"",
        "string",
        "\"end\"",
        "\"readable\"",
        "\"error\"",
        "string",
        "\"close\"",
        "\"data\"",
        "string",
        "\"end\"",
        "\"readable\"",
        "\"error\"",
        "string",
        "\"close\"",
        "\"data\"",
        "string",
        "\"end\"",
        "\"readable\"",
        "\"error\"",
        "string",
        "\"close\"",
        "\"data\"",
        "string",
        "\"end\"",
        "\"readable\"",
        "\"error\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"close\"",
        "\"drain\"",
        "\"error\"",
        "\"finish\"",
        "\"pipe\"",
        "\"unpipe\"",
        "string",
        "\"close\"",
        "\"drain\"",
        "string",
        "\"error\"",
        "\"finish\"",
        "\"pipe\"",
        "\"unpipe\"",
        "string",
        "\"close\"",
        "\"drain\"",
        "\"error\"",
        "\"finish\"",
        "\"pipe\"",
        "\"unpipe\"",
        "string",
        "\"close\"",
        "\"drain\"",
        "\"error\"",
        "\"finish\"",
        "\"pipe\"",
        "\"unpipe\"",
        "string",
        "\"close\"",
        "\"drain\"",
        "\"error\"",
        "\"finish\"",
        "\"pipe\"",
        "\"unpipe\"",
        "string",
        "\"close\"",
        "\"drain\"",
        "\"error\"",
        "\"finish\"",
        "\"pipe\"",
        "\"unpipe\"",
        "string",
        "\"close\"",
        "\"drain\"",
        "\"error\"",
        "\"finish\"",
        "\"pipe\"",
        "\"unpipe\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"util\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"assert\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"tty\"",
        "\"net\"",
        "\"domain\"",
        "\"events\"",
        "\"constants\"",
        "string",
        "string",
        "\"process\"",
        "\"v8\"",
        "string",
        "string",
        "\"timers\"",
        "\"console\""
    ],
    "variables": [
        "process",
        "__filename",
        "__dirname",
        "require",
        "exports",
        "SlowBuffer",
        "Buffer",
        "INSPECT_MAX_BYTES",
        "BuffType",
        "SlowBuffType",
        "METHODS",
        "STATUS_CODES",
        "globalAgent",
        "isMaster",
        "isWorker",
        "settings",
        "worker",
        "workers",
        "Z_NO_FLUSH",
        "Z_PARTIAL_FLUSH",
        "Z_SYNC_FLUSH",
        "Z_FULL_FLUSH",
        "Z_FINISH",
        "Z_BLOCK",
        "Z_TREES",
        "Z_OK",
        "Z_STREAM_END",
        "Z_NEED_DICT",
        "Z_ERRNO",
        "Z_STREAM_ERROR",
        "Z_DATA_ERROR",
        "Z_MEM_ERROR",
        "Z_BUF_ERROR",
        "Z_VERSION_ERROR",
        "Z_NO_COMPRESSION",
        "Z_BEST_SPEED",
        "Z_BEST_COMPRESSION",
        "Z_DEFAULT_COMPRESSION",
        "Z_FILTERED",
        "Z_HUFFMAN_ONLY",
        "Z_RLE",
        "Z_FIXED",
        "Z_DEFAULT_STRATEGY",
        "Z_BINARY",
        "Z_TEXT",
        "Z_ASCII",
        "Z_UNKNOWN",
        "Z_DEFLATED",
        "Z_NULL",
        "constants",
        "EOL",
        "Agent",
        "globalAgent",
        "ucs2",
        "version",
        "NODATA",
        "FORMERR",
        "SERVFAIL",
        "NOTFOUND",
        "NOTIMP",
        "REFUSED",
        "BADQUERY",
        "BADNAME",
        "BADFAMILY",
        "BADRESP",
        "CONNREFUSED",
        "TIMEOUT",
        "EOF",
        "FILE",
        "NOMEM",
        "DESTRUCTION",
        "BADSTR",
        "BADFLAGS",
        "NONAME",
        "BADHINTS",
        "NOTINITIALIZED",
        "LOADIPHLPAPI",
        "ADDRGETNETWORKPARAMS",
        "CANCELLED",
        "Socket",
        "F_OK",
        "R_OK",
        "W_OK",
        "X_OK",
        "O_RDONLY",
        "O_WRONLY",
        "O_RDWR",
        "O_CREAT",
        "O_EXCL",
        "O_NOCTTY",
        "O_TRUNC",
        "O_APPEND",
        "O_DIRECTORY",
        "O_NOATIME",
        "O_NOFOLLOW",
        "O_SYNC",
        "O_SYMLINK",
        "O_DIRECT",
        "O_NONBLOCK",
        "S_IFMT",
        "S_IFREG",
        "S_IFDIR",
        "S_IFCHR",
        "S_IFBLK",
        "S_IFIFO",
        "S_IFLNK",
        "S_IFSOCK",
        "S_IRWXU",
        "S_IRUSR",
        "S_IWUSR",
        "S_IXUSR",
        "S_IRWXG",
        "S_IRGRP",
        "S_IWGRP",
        "S_IXGRP",
        "S_IRWXO",
        "S_IROTH",
        "S_IWOTH",
        "S_IXOTH",
        "sep",
        "delimiter",
        "sep",
        "delimiter",
        "sep",
        "delimiter",
        "StringDecoder",
        "CLIENT_RENEG_LIMIT",
        "CLIENT_RENEG_WINDOW",
        "Certificate",
        "fips",
        "DEFAULT_ENCODING",
        "doesNotThrow",
        "E2BIG",
        "EACCES",
        "EADDRINUSE",
        "EADDRNOTAVAIL",
        "EAFNOSUPPORT",
        "EAGAIN",
        "EALREADY",
        "EBADF",
        "EBADMSG",
        "EBUSY",
        "ECANCELED",
        "ECHILD",
        "ECONNABORTED",
        "ECONNREFUSED",
        "ECONNRESET",
        "EDEADLK",
        "EDESTADDRREQ",
        "EDOM",
        "EEXIST",
        "EFAULT",
        "EFBIG",
        "EHOSTUNREACH",
        "EIDRM",
        "EILSEQ",
        "EINPROGRESS",
        "EINTR",
        "EINVAL",
        "EIO",
        "EISCONN",
        "EISDIR",
        "ELOOP",
        "EMFILE",
        "EMLINK",
        "EMSGSIZE",
        "ENAMETOOLONG",
        "ENETDOWN",
        "ENETRESET",
        "ENETUNREACH",
        "ENFILE",
        "ENOBUFS",
        "ENODATA",
        "ENODEV",
        "ENOENT",
        "ENOEXEC",
        "ENOLCK",
        "ENOLINK",
        "ENOMEM",
        "ENOMSG",
        "ENOPROTOOPT",
        "ENOSPC",
        "ENOSR",
        "ENOSTR",
        "ENOSYS",
        "ENOTCONN",
        "ENOTDIR",
        "ENOTEMPTY",
        "ENOTSOCK",
        "ENOTSUP",
        "ENOTTY",
        "ENXIO",
        "EOPNOTSUPP",
        "EOVERFLOW",
        "EPERM",
        "EPIPE",
        "EPROTO",
        "EPROTONOSUPPORT",
        "EPROTOTYPE",
        "ERANGE",
        "EROFS",
        "ESPIPE",
        "ESRCH",
        "ETIME",
        "ETIMEDOUT",
        "ETXTBSY",
        "EWOULDBLOCK",
        "EXDEV",
        "WSAEINTR",
        "WSAEBADF",
        "WSAEACCES",
        "WSAEFAULT",
        "WSAEINVAL",
        "WSAEMFILE",
        "WSAEWOULDBLOCK",
        "WSAEINPROGRESS",
        "WSAEALREADY",
        "WSAENOTSOCK",
        "WSAEDESTADDRREQ",
        "WSAEMSGSIZE",
        "WSAEPROTOTYPE",
        "WSAENOPROTOOPT",
        "WSAEPROTONOSUPPORT",
        "WSAESOCKTNOSUPPORT",
        "WSAEOPNOTSUPP",
        "WSAEPFNOSUPPORT",
        "WSAEAFNOSUPPORT",
        "WSAEADDRINUSE",
        "WSAEADDRNOTAVAIL",
        "WSAENETDOWN",
        "WSAENETUNREACH",
        "WSAENETRESET",
        "WSAECONNABORTED",
        "WSAECONNRESET",
        "WSAENOBUFS",
        "WSAEISCONN",
        "WSAENOTCONN",
        "WSAESHUTDOWN",
        "WSAETOOMANYREFS",
        "WSAETIMEDOUT",
        "WSAECONNREFUSED",
        "WSAELOOP",
        "WSAENAMETOOLONG",
        "WSAEHOSTDOWN",
        "WSAEHOSTUNREACH",
        "WSAENOTEMPTY",
        "WSAEPROCLIM",
        "WSAEUSERS",
        "WSAEDQUOT",
        "WSAESTALE",
        "WSAEREMOTE",
        "WSASYSNOTREADY",
        "WSAVERNOTSUPPORTED",
        "WSANOTINITIALISED",
        "WSAEDISCON",
        "WSAENOMORE",
        "WSAECANCELLED",
        "WSAEINVALIDPROCTABLE",
        "WSAEINVALIDPROVIDER",
        "WSAEPROVIDERFAILEDINIT",
        "WSASYSCALLFAILURE",
        "WSASERVICE_NOT_FOUND",
        "WSATYPE_NOT_FOUND",
        "WSA_E_NO_MORE",
        "WSA_E_CANCELLED",
        "WSAEREFUSED",
        "SIGHUP",
        "SIGINT",
        "SIGILL",
        "SIGABRT",
        "SIGFPE",
        "SIGKILL",
        "SIGSEGV",
        "SIGTERM",
        "SIGBREAK",
        "SIGWINCH",
        "SSL_OP_ALL",
        "SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION",
        "SSL_OP_CIPHER_SERVER_PREFERENCE",
        "SSL_OP_CISCO_ANYCONNECT",
        "SSL_OP_COOKIE_EXCHANGE",
        "SSL_OP_CRYPTOPRO_TLSEXT_BUG",
        "SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS",
        "SSL_OP_EPHEMERAL_RSA",
        "SSL_OP_LEGACY_SERVER_CONNECT",
        "SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER",
        "SSL_OP_MICROSOFT_SESS_ID_BUG",
        "SSL_OP_MSIE_SSLV2_RSA_PADDING",
        "SSL_OP_NETSCAPE_CA_DN_BUG",
        "SSL_OP_NETSCAPE_CHALLENGE_BUG",
        "SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG",
        "SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG",
        "SSL_OP_NO_COMPRESSION",
        "SSL_OP_NO_QUERY_MTU",
        "SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION",
        "SSL_OP_NO_SSLv2",
        "SSL_OP_NO_SSLv3",
        "SSL_OP_NO_TICKET",
        "SSL_OP_NO_TLSv1",
        "SSL_OP_NO_TLSv1_1",
        "SSL_OP_NO_TLSv1_2",
        "SSL_OP_PKCS1_CHECK_1",
        "SSL_OP_PKCS1_CHECK_2",
        "SSL_OP_SINGLE_DH_USE",
        "SSL_OP_SINGLE_ECDH_USE",
        "SSL_OP_SSLEAY_080_CLIENT_DH_BUG",
        "SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG",
        "SSL_OP_TLS_BLOCK_PADDING_BUG",
        "SSL_OP_TLS_D5_BUG",
        "SSL_OP_TLS_ROLLBACK_BUG",
        "ENGINE_METHOD_DSA",
        "ENGINE_METHOD_DH",
        "ENGINE_METHOD_RAND",
        "ENGINE_METHOD_ECDH",
        "ENGINE_METHOD_ECDSA",
        "ENGINE_METHOD_CIPHERS",
        "ENGINE_METHOD_DIGESTS",
        "ENGINE_METHOD_STORE",
        "ENGINE_METHOD_PKEY_METHS",
        "ENGINE_METHOD_PKEY_ASN1_METHS",
        "ENGINE_METHOD_ALL",
        "ENGINE_METHOD_NONE",
        "DH_CHECK_P_NOT_SAFE_PRIME",
        "DH_CHECK_P_NOT_PRIME",
        "DH_UNABLE_TO_CHECK_GENERATOR",
        "DH_NOT_SUITABLE_GENERATOR",
        "NPN_ENABLED",
        "RSA_PKCS1_PADDING",
        "RSA_SSLV23_PADDING",
        "RSA_NO_PADDING",
        "RSA_PKCS1_OAEP_PADDING",
        "RSA_X931_PADDING",
        "RSA_PKCS1_PSS_PADDING",
        "POINT_CONVERSION_COMPRESSED",
        "POINT_CONVERSION_UNCOMPRESSED",
        "POINT_CONVERSION_HYBRID",
        "O_RDONLY",
        "O_WRONLY",
        "O_RDWR",
        "S_IFMT",
        "S_IFREG",
        "S_IFDIR",
        "S_IFCHR",
        "S_IFBLK",
        "S_IFIFO",
        "S_IFSOCK",
        "S_IRWXU",
        "S_IRUSR",
        "S_IWUSR",
        "S_IXUSR",
        "S_IRWXG",
        "S_IRGRP",
        "S_IWGRP",
        "S_IXGRP",
        "S_IRWXO",
        "S_IROTH",
        "S_IWOTH",
        "S_IXOTH",
        "S_IFLNK",
        "O_CREAT",
        "O_EXCL",
        "O_NOCTTY",
        "O_DIRECTORY",
        "O_NOATIME",
        "O_NOFOLLOW",
        "O_SYNC",
        "O_SYMLINK",
        "O_DIRECT",
        "O_NONBLOCK",
        "O_TRUNC",
        "O_APPEND",
        "F_OK",
        "R_OK",
        "W_OK",
        "X_OK",
        "UV_UDP_REUSEADDR",
        "SIGQUIT",
        "SIGTRAP",
        "SIGIOT",
        "SIGBUS",
        "SIGUSR1",
        "SIGUSR2",
        "SIGPIPE",
        "SIGALRM",
        "SIGCHLD",
        "SIGSTKFLT",
        "SIGCONT",
        "SIGSTOP",
        "SIGTSTP",
        "SIGTTIN",
        "SIGTTOU",
        "SIGURG",
        "SIGXCPU",
        "SIGXFSZ",
        "SIGVTALRM",
        "SIGPROF",
        "SIGIO",
        "SIGPOLL",
        "SIGPWR",
        "SIGSYS",
        "SIGUNUSED",
        "defaultCoreCipherList",
        "defaultCipherList",
        "ENGINE_METHOD_RSA",
        "ALPN_ENABLED"
    ],
    "comments": [
        "Generated by typings",
        "Source: https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/988a48ab2cfff3243868d70d836332a118d9f060/node/node.d.ts",
        "compat for TypeScript 1.8",
        "if you use with --target es3 or --target es5 and use below definitions,",
        "use the lib.es6.d.ts that is bundled with TypeScript 1.8.",
        "Same as module.exports",
        "Buffer class",
        "Added in Node 6...",
        "Worker",
        "deprecated",
        "Extended base methods",
        "Extended base methods",
        "Extended base methods",
        "Extended base methods",
        "interfaces",
        "default: process.execArgv",
        "default: process.argv[1]",
        "default: process.argv.slice(2)",
        "default: false",
        "4, 6, -1, \"udp4\", \"udp6\"",
        "the handle is a net.Socket or net.Server object, or undefined.",
        "the handle is a net.Socket or net.Server object, or undefined.",
        "the handle is a net.Socket or net.Server object, or undefined.",
        "the handle is a net.Socket or net.Server object, or undefined.",
        "the handle is a net.Socket or net.Server object, or undefined.",
        "TODO: cluster.schedulingPolicy",
        "the handle is a net.Socket or net.Server object, or undefined.",
        "the handle is a net.Socket or net.Server object, or undefined.",
        "the handle is a net.Socket or net.Server object, or undefined.",
        "the handle is a net.Socket or net.Server object, or undefined.",
        "the handle is a net.Socket or net.Server object, or undefined.",
        "TODO: cluster.schedulingPolicy",
        "the handle is a net.Socket or net.Server object, or undefined.",
        "the handle is a net.Socket or net.Server object, or undefined.",
        "the handle is a net.Socket or net.Server object, or undefined.",
        "the handle is a net.Socket or net.Server object, or undefined.",
        "the handle is a net.Socket or net.Server object, or undefined.",
        "Constants",
        "specify `null`.",
        "usage. child_process.exec(\"tsc\", {encoding: null as string}, (err, stdout, stderr) => {});",
        "specify `null`.",
        "usage. child_process.execFile(\"file.sh\", {encoding: null as string}, (err, stdout, stderr) => {});",
        "usage. child_process.execFile(\"file.sh\", [\"foo\"], {encoding: null as string}, (err, stdout, stderr) => {});",
        "specify `null`.",
        "specify `null`.",
        "specify `null`.",
        "Error codes",
        "Extended base methods",
        "Extended base methods",
        "File Access Constants",
        "Constant for fs.access(). File is visible to the calling process.",
        "Constant for fs.access(). File can be read by the calling process.",
        "Constant for fs.access(). File can be written by the calling process.",
        "Constant for fs.access(). File can be executed by the calling process.",
        "File Open Constants",
        "Constant for fs.open(). Flag indicating to open a file for read-only access.",
        "Constant for fs.open(). Flag indicating to open a file for write-only access.",
        "Constant for fs.open(). Flag indicating to open a file for read-write access.",
        "Constant for fs.open(). Flag indicating to create the file if it does not already exist.",
        "Constant for fs.open(). Flag indicating that opening a file should fail if the O_CREAT flag is set and the file already exists.",
        "Constant for fs.open(). Flag indicating that if path identifies a terminal device, opening the path shall not cause that terminal to become the controlling terminal for the process (if the process does not already have one).",
        "Constant for fs.open(). Flag indicating that if the file exists and is a regular file, and the file is opened successfully for write access, its length shall be truncated to zero.",
        "Constant for fs.open(). Flag indicating that data will be appended to the end of the file.",
        "Constant for fs.open(). Flag indicating that the open should fail if the path is not a directory.",
        "Constant for fs.open(). Flag indicating reading accesses to the file system will no longer result in an update to the atime information associated with the file. This flag is available on Linux operating systems only.",
        "Constant for fs.open(). Flag indicating that the open should fail if the path is a symbolic link.",
        "Constant for fs.open(). Flag indicating that the file is opened for synchronous I/O.",
        "Constant for fs.open(). Flag indicating to open the symbolic link itself rather than the resource it is pointing to.",
        "Constant for fs.open(). When set, an attempt will be made to minimize caching effects of file I/O.",
        "Constant for fs.open(). Flag indicating to open the file in nonblocking mode when possible.",
        "File Type Constants",
        "Constant for fs.Stats mode property for determining a file's type. Bit mask used to extract the file type code.",
        "Constant for fs.Stats mode property for determining a file's type. File type constant for a regular file.",
        "Constant for fs.Stats mode property for determining a file's type. File type constant for a directory.",
        "Constant for fs.Stats mode property for determining a file's type. File type constant for a character-oriented device file.",
        "Constant for fs.Stats mode property for determining a file's type. File type constant for a block-oriented device file.",
        "Constant for fs.Stats mode property for determining a file's type. File type constant for a FIFO/pipe.",
        "Constant for fs.Stats mode property for determining a file's type. File type constant for a symbolic link.",
        "Constant for fs.Stats mode property for determining a file's type. File type constant for a socket.",
        "File Mode Constants",
        "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable, writable and executable by owner.",
        "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable by owner.",
        "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating writable by owner.",
        "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating executable by owner.",
        "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable, writable and executable by group.",
        "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable by group.",
        "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating writable by group.",
        "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating executable by group.",
        "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable, writable and executable by others.",
        "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating readable by others.",
        "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating writable by others.",
        "Constant for fs.Stats mode property for determining access permissions for a file. File mode indicating executable by others.",
        "Tests a user's permissions for the file specified by path.",
        "Synchronous version of fs.access. This throws if any accessibility checks fail, and does nothing otherwise.",
        "Note: Duplex extends both Readable and Writable.",
        "Readable",
        "Writeable",
        "Note: Transform lacks the _read and _write methods of Readable/Writable."
    ],
    "docstrings": [
        "**********************************************\n*                                               *\n*                   GLOBAL                      *\n*                                               *\n***********************************************",
        "* Raw data is stored in instances of the Buffer class.\n * A Buffer is similar to an array of integers but corresponds to a raw memory allocation outside the V8 heap.  A Buffer cannot be resized.\n * Valid string encodings: 'ascii'|'utf8'|'utf16le'|'ucs2'(alias of 'utf16le')|'base64'|'binary'(deprecated)|'hex'",
        "* Allocates a new buffer containing the given {str}.\n     *\n     * @param str String to store in buffer.\n     * @param encoding encoding to use, optional.  Default is 'utf8'",
        "* Allocates a new buffer of {size} octets.\n     *\n     * @param size count of octets to allocate.",
        "* Allocates a new buffer containing the given {array} of octets.\n     *\n     * @param array The octets to store.",
        "* Produces a Buffer backed by the same allocated memory as\n     * the given {ArrayBuffer}.\n     *\n     *\n     * @param arrayBuffer The ArrayBuffer with which to share memory.",
        "* Allocates a new buffer containing the given {array} of octets.\n     *\n     * @param array The octets to store.",
        "* Copies the passed {buffer} data onto a new {Buffer} instance.\n     *\n     * @param buffer The buffer to copy.",
        "* Allocates a new Buffer using an {array} of octets.\n     *\n     * @param array",
        "* When passed a reference to the .buffer property of a TypedArray instance,\n     * the newly created Buffer will share the same allocated memory as the TypedArray.\n     * The optional {byteOffset} and {length} arguments specify a memory range\n     * within the {arrayBuffer} that will be shared by the Buffer.\n     *\n     * @param arrayBuffer The .buffer property of a TypedArray or a new ArrayBuffer()\n     * @param byteOffset\n     * @param length",
        "* Copies the passed {buffer} data onto a new Buffer instance.\n     *\n     * @param buffer",
        "* Creates a new Buffer containing the given JavaScript string {str}.\n     * If provided, the {encoding} parameter identifies the character encoding.\n     * If not provided, {encoding} defaults to 'utf8'.\n     *\n     * @param str",
        "* Returns true if {obj} is a Buffer\n     *\n     * @param obj object to test.",
        "* Returns true if {encoding} is a valid encoding argument.\n     * Valid string encodings in Node 0.12: 'ascii'|'utf8'|'utf16le'|'ucs2'(alias of 'utf16le')|'base64'|'binary'(deprecated)|'hex'\n     *\n     * @param encoding string to test.",
        "* Gives the actual byte length of a string. encoding defaults to 'utf8'.\n     * This is not the same as String.prototype.length since that returns the number of characters in a string.\n     *\n     * @param string string to test.\n     * @param encoding encoding used to evaluate (defaults to 'utf8')",
        "* Returns a buffer which is the result of concatenating all the buffers in the list together.\n     *\n     * If the list has no items, or if the totalLength is 0, then it returns a zero-length buffer.\n     * If the list has exactly one item, then the first item of the list is returned.\n     * If the list has more than one item, then a new Buffer is created.\n     *\n     * @param list An array of Buffer objects to concatenate\n     * @param totalLength Total length of the buffers when concatenated.\n     *   If totalLength is not provided, it is read from the buffers in the list. However, this adds an additional loop to the function, so it is faster to provide the length explicitly.",
        "* The same as buf1.compare(buf2).",
        "* Allocates a new buffer of {size} octets.\n     *\n     * @param size count of octets to allocate.\n     * @param fill if specified, buffer will be initialized by calling buf.fill(fill).\n     *    If parameter is omitted, buffer will be filled with zeros.\n     * @param encoding encoding used for call to buf.fill while initalizing",
        "* Allocates a new buffer of {size} octets, leaving memory not initialized, so the contents\n     * of the newly created Buffer are unknown and may contain sensitive data.\n     *\n     * @param size count of octets to allocate",
        "* Allocates a new non-pooled buffer of {size} octets, leaving memory not initialized, so the contents\n     * of the newly created Buffer are unknown and may contain sensitive data.\n     *\n     * @param size count of octets to allocate",
        "**********************************************\n*                                               *\n*               GLOBAL INTERFACES               *\n*                                               *\n***********************************************",
        "* @deprecated",
        "**********************************************\n*                                               *\n*                   MODULES                     *\n*                                               *\n***********************************************",
        "* @deprecated Use IncomingMessage",
        "* Only valid for request obtained from http.Server.",
        "* Only valid for request obtained from http.Server.",
        "* Only valid for response obtained from http.ClientRequest.",
        "* Only valid for response obtained from http.ClientRequest.",
        "* @deprecated Use IncomingMessage",
        "* Keep sockets around in a pool to be used by other requests in the future. Default = false",
        "* When using HTTP KeepAlive, how often to send TCP KeepAlive packets over sockets being kept alive. Default = 1000.\n         * Only relevant if keepAlive is set to true.",
        "* Maximum number of sockets to allow per host. Default for Node 0.10 is 5, default for Node 0.12 is Infinity",
        "* Maximum number of sockets to leave open in a free state. Only relevant if keepAlive is set to true. Default = 256.",
        "* Destroy any sockets that are currently in use by the agent.\n         * It is usually not necessary to do this. However, if you are using an agent with KeepAlive enabled,\n         * then it is best to explicitly shut down the agent when you know that it will no longer be used. Otherwise,\n         * sockets may hang open for quite a long time before the server terminates them.",
        "* events.EventEmitter\n         *   1. disconnect\n         *   2. error\n         *   3. exit\n         *   4. listening\n         *   5. message\n         *   6. online",
        "* events.EventEmitter\n         *   1. disconnect\n         *   2. exit\n         *   3. fork\n         *   4. listening\n         *   5. message\n         *   6. online\n         *   7. setup",
        "* events.EventEmitter\n     *   1. disconnect\n     *   2. exit\n     *   3. fork\n     *   4. listening\n     *   5. message\n     *   6. online\n     *   7. setup",
        "* events.EventEmitter\n         *   1. close\n         *   2. connect\n         *   3. data\n         *   4. drain\n         *   5. end\n         *   6. error\n         *   7. lookup\n         *   8. timeout",
        "* events.EventEmitter\n         *   1. close\n         *   2. connection\n         *   3. error\n         *   4. listening",
        "* events.EventEmitter\n         * 1. close\n         * 2. error\n         * 3. listening\n         * 4. message\n         *",
        "* events.EventEmitter\n         *   1. change\n         *   2. error",
        "* events.EventEmitter\n         *   1. open\n         *   2. close",
        "* events.EventEmitter\n         *   1. open\n         *   2. close",
        "* Asynchronous rename.\n     * @param oldPath\n     * @param newPath\n     * @param callback No arguments other than a possible exception are given to the completion callback.",
        "* Synchronous rename\n     * @param oldPath\n     * @param newPath",
        "* Asynchronous unlink - deletes the file specified in {path}\n     *\n     * @param path\n     * @param callback No arguments other than a possible exception are given to the completion callback.",
        "* Synchronous unlink - deletes the file specified in {path}\n     *\n     * @param path",
        "* Asynchronous rmdir - removes the directory specified in {path}\n     *\n     * @param path\n     * @param callback No arguments other than a possible exception are given to the completion callback.",
        "* Synchronous rmdir - removes the directory specified in {path}\n     *\n     * @param path",
        "* Asynchronous mkdir - creates the directory specified in {path}.  Parameter {mode} defaults to 0777.\n     *\n     * @param path\n     * @param callback No arguments other than a possible exception are given to the completion callback.",
        "* Asynchronous mkdir - creates the directory specified in {path}.  Parameter {mode} defaults to 0777.\n     *\n     * @param path\n     * @param mode\n     * @param callback No arguments other than a possible exception are given to the completion callback.",
        "* Asynchronous mkdir - creates the directory specified in {path}.  Parameter {mode} defaults to 0777.\n     *\n     * @param path\n     * @param mode\n     * @param callback No arguments other than a possible exception are given to the completion callback.",
        "* Synchronous mkdir - creates the directory specified in {path}.  Parameter {mode} defaults to 0777.\n     *\n     * @param path\n     * @param mode\n     * @param callback No arguments other than a possible exception are given to the completion callback.",
        "* Synchronous mkdir - creates the directory specified in {path}.  Parameter {mode} defaults to 0777.\n     *\n     * @param path\n     * @param mode\n     * @param callback No arguments other than a possible exception are given to the completion callback.",
        "* Asynchronous mkdtemp - Creates a unique temporary directory. Generates six random characters to be appended behind a required prefix to create a unique temporary directory.\n     *\n     * @param prefix\n     * @param callback The created folder path is passed as a string to the callback's second parameter.",
        "* Synchronous mkdtemp - Creates a unique temporary directory. Generates six random characters to be appended behind a required prefix to create a unique temporary directory.\n     *\n     * @param prefix\n     * @returns Returns the created folder path.",
        "* Asynchronous readFile - Asynchronously reads the entire contents of a file.\n     *\n     * @param fileName\n     * @param encoding\n     * @param callback - The callback is passed two arguments (err, data), where data is the contents of the file.",
        "* Asynchronous readFile - Asynchronously reads the entire contents of a file.\n     *\n     * @param fileName\n     * @param options An object with optional {encoding} and {flag} properties.  If {encoding} is specified, readFile returns a string; otherwise it returns a Buffer.\n     * @param callback - The callback is passed two arguments (err, data), where data is the contents of the file.",
        "* Asynchronous readFile - Asynchronously reads the entire contents of a file.\n     *\n     * @param fileName\n     * @param options An object with optional {encoding} and {flag} properties.  If {encoding} is specified, readFile returns a string; otherwise it returns a Buffer.\n     * @param callback - The callback is passed two arguments (err, data), where data is the contents of the file.",
        "* Asynchronous readFile - Asynchronously reads the entire contents of a file.\n     *\n     * @param fileName\n     * @param callback - The callback is passed two arguments (err, data), where data is the contents of the file.",
        "* Synchronous readFile - Synchronously reads the entire contents of a file.\n     *\n     * @param fileName\n     * @param encoding",
        "* Synchronous readFile - Synchronously reads the entire contents of a file.\n     *\n     * @param fileName\n     * @param options An object with optional {encoding} and {flag} properties.  If {encoding} is specified, readFileSync returns a string; otherwise it returns a Buffer.",
        "* Synchronous readFile - Synchronously reads the entire contents of a file.\n     *\n     * @param fileName\n     * @param options An object with optional {encoding} and {flag} properties.  If {encoding} is specified, readFileSync returns a string; otherwise it returns a Buffer.",
        "* A parsed path object generated by path.parse() or consumed by path.format().",
        "* The root of the path such as '/' or 'c:\\'",
        "* The full directory path such as '/home/user/dir' or 'c:\\path\\dir'",
        "* The file name including extension (if any) such as 'index.html'",
        "* The file extension (if any) such as '.html'",
        "* The file name without extension (if any) such as 'index'",
        "* Normalize a string path, reducing '..' and '.' parts.\n     * When multiple slashes are found, they're replaced by a single one; when the path contains a trailing slash, it is preserved. On Windows backslashes are used.\n     *\n     * @param p string path to normalize.",
        "* Join all arguments together and normalize the resulting path.\n     * Arguments must be strings. In v0.8, non-string arguments were silently ignored. In v0.10 and up, an exception is thrown.\n     *\n     * @param paths string paths to join.",
        "* Join all arguments together and normalize the resulting path.\n     * Arguments must be strings. In v0.8, non-string arguments were silently ignored. In v0.10 and up, an exception is thrown.\n     *\n     * @param paths string paths to join.",
        "* The right-most parameter is considered {to}.  Other parameters are considered an array of {from}.\n     *\n     * Starting from leftmost {from} paramter, resolves {to} to an absolute path.\n     *\n     * If {to} isn't already absolute, {from} arguments are prepended in right to left order, until an absolute path is found. If after using all {from} paths still no absolute path is found, the current working directory is used as well. The resulting path is normalized, and trailing slashes are removed unless the path gets resolved to the root directory.\n     *\n     * @param pathSegments string paths to join.  Non-string arguments are ignored.",
        "* Determines whether {path} is an absolute path. An absolute path will always resolve to the same location, regardless of the working directory.\n     *\n     * @param path path to test.",
        "* Solve the relative path from {from} to {to}.\n     * At times we have two absolute paths, and we need to derive the relative path from one to the other. This is actually the reverse transform of path.resolve.\n     *\n     * @param from\n     * @param to",
        "* Return the directory name of a path. Similar to the Unix dirname command.\n     *\n     * @param p the path to evaluate.",
        "* Return the last portion of a path. Similar to the Unix basename command.\n     * Often used to extract the file name from a fully qualified path.\n     *\n     * @param p the path to evaluate.\n     * @param ext optionally, an extension to remove from the result.",
        "* Return the extension of the path, from the last '.' to end of string in the last portion of the path.\n     * If there is no '.' in the last portion of the path or the first character of it is '.', then it returns an empty string\n     *\n     * @param p the path to evaluate.",
        "* The platform-specific file separator. '\\\\' or '/'.",
        "* The platform-specific file delimiter. ';' or ':'.",
        "* Returns an object from a path string - the opposite of format().\n     *\n     * @param pathString path to evaluate.",
        "* Returns a path string from an object - the opposite of parse().\n     *\n     * @param pathString path to evaluate.",
        "* Country code.",
        "* Street.",
        "* Locality.",
        "* Organization.",
        "* Organizational unit.",
        "* Common name.",
        "* The cipher name.",
        "* SSL/TLS protocol version.",
        "* Construct a new tls.TLSSocket object from an existing TCP socket.",
        "* An optional TLS context object from tls.createSecureContext()",
        "* If true the TLS socket will be instantiated in server-mode.\n           * Defaults to false.",
        "* An optional net.Server instance.",
        "* If true the server will request a certificate from clients that\n           * connect and attempt to verify that certificate. Defaults to\n           * false.",
        "* If true the server will reject any connection which is not\n           * authorized with the list of supplied CAs. This option only has an\n           * effect if requestCert is true. Defaults to false.",
        "* An array of strings or a Buffer naming possible NPN protocols.\n           * (Protocols should be ordered by their priority.)",
        "* An array of strings or a Buffer naming possible ALPN protocols.\n           * (Protocols should be ordered by their priority.) When the server\n           * receives both NPN and ALPN extensions from the client, ALPN takes\n           * precedence over NPN and the server does not send an NPN extension\n           * to the client.",
        "* SNICallback(servername, cb) <Function> A function that will be\n           * called if the client supports SNI TLS extension. Two arguments\n           * will be passed when called: servername and cb. SNICallback should\n           * invoke cb(null, ctx), where ctx is a SecureContext instance.\n           * (tls.createSecureContext(...) can be used to get a proper\n           * SecureContext.) If SNICallback wasn't provided the default callback\n           * with high-level API will be used (see below).",
        "* An optional Buffer instance containing a TLS session.",
        "* If true, specifies that the OCSP status request extension will be\n           * added to the client hello and an 'OCSPResponse' event will be\n           * emitted on the socket before establishing a secure communication",
        "* Returns the bound address, the address family name and port of the underlying socket as reported by\n         * the operating system.\n         * @returns {any} - An object with three properties, e.g. { port: 12346, family: 'IPv4', address: '127.0.0.1' }.",
        "* A boolean that is true if the peer certificate was signed by one of the specified CAs, otherwise false.",
        "* The reason why the peer's certificate has not been verified.\n         * This property becomes available only when tlsSocket.authorized === false.",
        "* Static boolean value, always true.\n         * May be used to distinguish TLS sockets from regular ones.",
        "* Returns an object representing the cipher name and the SSL/TLS protocol version of the current connection.\n         * @returns {CipherNameAndProtocol} - Returns an object representing the cipher name\n         * and the SSL/TLS protocol version of the current connection.",
        "* Returns an object representing the peer's certificate.\n         * The returned object has some properties corresponding to the field of the certificate.\n         * If detailed argument is true the full chain with issuer property will be returned,\n         * if false only the top certificate without issuer property.\n         * If the peer does not provide a certificate, it returns null or an empty object.\n         * @param {boolean} detailed - If true; the full chain with issuer property will be returned.\n         * @returns {any} - An object representing the peer's certificate.",
        "* Could be used to speed up handshake establishment when reconnecting to the server.\n         * @returns {any} - ASN.1 encoded TLS session or undefined if none was negotiated.",
        "* NOTE: Works only with client TLS sockets.\n         * Useful only for debugging, for session reuse provide session option to tls.connect().\n         * @returns {any} - TLS session ticket or undefined if none was negotiated.",
        "* The string representation of the local IP address.",
        "* The numeric representation of the local port.",
        "* The string representation of the remote IP address.\n         * For example, '74.125.127.100' or '2001:4860:a005::68'.",
        "* The string representation of the remote IP family. 'IPv4' or 'IPv6'.",
        "* The numeric representation of the remote port. For example, 443.",
        "* Initiate TLS renegotiation process.\n         *\n         * NOTE: Can be used to request peer's certificate after the secure connection has been established.\n         * ANOTHER NOTE: When running as the server, socket will be destroyed with an error after handshakeTimeout timeout.\n         * @param {TlsOptions} options - The options may contain the following fields: rejectUnauthorized,\n         * requestCert (See tls.createServer() for details).\n         * @param {Function} callback - callback(err) will be executed with null as err, once the renegotiation\n         * is successfully completed.",
        "* Set maximum TLS fragment size (default and maximum value is: 16384, minimum is: 512).\n         * Smaller fragment size decreases buffering latency on the client: large fragments are buffered by\n         * the TLS layer until the entire fragment is received and its integrity is verified;\n         * large fragments can span multiple roundtrips, and their processing can be delayed due to packet\n         * loss or reordering. However, smaller fragments add extra TLS framing bytes and CPU overhead,\n         * which may decrease overall server throughput.\n         * @param {number} size - TLS fragment size (default and maximum value is: 16384, minimum is: 512).\n         * @returns {boolean} - Returns true on success, false otherwise.",
        "* events.EventEmitter\n         * 1. OCSPResponse\n         * 2. secureConnect\n         *",
        "* events.EventEmitter\n         * 1. tlsClientError\n         * 2. newSession\n         * 3. OCSPRequest\n         * 4. resumeSession\n         * 5. secureConnection\n         *",
        "* Event emitter\n             * The defined events on documents including:\n             *   1. close\n             *   2. data\n             *   3. end\n             *   4. readable\n             *   5. error\n             *",
        "* Event emitter\n             * The defined events on documents including:\n             *   1. close\n             *   2. drain\n             *   3. error\n             *   4. finish\n             *   5. pipe\n             *   6. unpipe\n             *"
    ],
    "functions": [],
    "classes": [
        "EventEmitter",
        "EventEmitter",
        "Agent",
        "Worker",
        "Script",
        "TLSSocket",
        "Stream",
        "Readable",
        "Writable",
        "Duplex",
        "Transform",
        "PassThrough",
        "AssertionError",
        "Domain"
    ]
}