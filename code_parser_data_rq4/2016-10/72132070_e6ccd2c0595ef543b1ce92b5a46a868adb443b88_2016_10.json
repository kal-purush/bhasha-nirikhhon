{
    "identifiers": [
        "com",
        "gree",
        "dataAccessObject",
        "java",
        "sql",
        "Connection",
        "java",
        "sql",
        "PreparedStatement",
        "com",
        "gree",
        "model",
        "Supplier",
        "con",
        "supplier",
        "sql",
        "pstmt",
        "con",
        "prepareStatement",
        "sql",
        "pstmt",
        "setString",
        "supplier",
        "getSupplierCode",
        "pstmt",
        "setString",
        "supplier",
        "getSupplierName",
        "pstmt",
        "setString",
        "supplier",
        "getSuppliersupplierManager",
        "pstmt",
        "setString",
        "supplier",
        "getSupplierTel",
        "pstmt",
        "setString",
        "supplier",
        "getSupplierCity",
        "pstmt",
        "executeUpdate",
        "con",
        "id",
        "sql",
        "pstmt",
        "con",
        "prepareStatement",
        "sql",
        "pstmt",
        "setString",
        "id",
        "pstmt",
        "executeUpdate"
    ],
    "literals": [
        "\"insert into t_supplier values(null,?,?,?,?,?)\"",
        "\"delete from t_supplier where id=?\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* ͼ��DAO��\n * @author Administrator\n *",
        "* ��������\n\t * @param con\n\t * @param Supplier\n\t * @return\n\t * @throws Exception",
        "* ͼ����Ϣ��ѯ\n\t * @param con\n\t * @param Supplier\n\t * @return\n\t * @throws Exception",
        "ublic ResultSet list(Connection con,Supplier Supplier) throws Exception{\n\t\tStringBuffer sb = new StringBuffer(\"select * from t_Supplier b,t_SupplierType bt where b.SupplierTypeId=bt.id\");\n\t\tif(StringUtility.isNotEmpty(Supplier.getSupplierName())){\n\t\t\tsb.append(\" and b.SupplierName like '%\" +Supplier.getSupplierName() + \"%'\");//ƴ�Ӳ�ѯ����\n\t\t}\n\t\tif(StringUtility.isNotEmpty(Supplier.getAuthor())){\n\t\t\tsb.append(\" and b.author like '%\" + Supplier.getAuthor()+\"%'\");\n\t\t}\n\t\tif(Supplier.getSupplierTypeId()!=null && Supplier.getSupplierTypeId()!=-1){\n\t\t\tsb.append(\" and b.SupplierTypeId=\" + Supplier.getSupplierTypeId());\n\t\t}\n\t\tPreparedStatement pstmt = con.prepareStatement(sb.toString());\n\t\treturn pstmt.executeQuery();\n\t}",
        "* ͼ����Ϣɾ��\n\t * @param con\n\t * @param id\n\t * @return\n\t * @throws Exception",
        "* ͼ����Ϣ�޸�\n\t * @param con\n\t * @param Supplier\n\t * @return\n\t * @throws Exception",
        "ublic int update(Connection con,Supplier Supplier) throws Exception{\n\t\tString sql = \"update t_Supplier set SupplierName=?,author=?,sex=?,price=?,SupplierDesc=?,SupplierTypeId=? where id=?\";\n\t\tPreparedStatement pstmt = con.prepareStatement(sql);\n\t\tpstmt.setString(1, Supplier.getSupplierName());\n\t\tpstmt.setString(2, Supplier.getAuthor());\n\t\tpstmt.setString(3, Supplier.getSex());\n\t\tpstmt.setFloat(4, Supplier.getPrice());\n\t\tpstmt.setString(5, Supplier.getSupplierDesc());\n\t\tpstmt.setInt(6, Supplier.getSupplierTypeId());\n\t\tpstmt.setInt(7, Supplier.getId());\n\t\treturn pstmt.executeUpdate();\n\t}",
        "* ָ��ͼ��������Ƿ����ͼ�飿\n\t * @param con\n\t * @param SupplierTypeId\n\t * @return\n\t * @throws Exception",
        "ublic boolean existSupplierBySupplierId(Connection con,String SupplierId) throws Exception{\n\t\tString sql = \"select * from t_Supplier where SupplierId=?\";\n\t\tPreparedStatement pstmt = con.prepareStatement(sql);\n\t\tpstmt.setString(1, SupplierId);\n\t\tResultSet rs=pstmt.executeQuery();\n\t\treturn rs.next();\n\t}"
    ],
    "functions": [
        "add"
    ],
    "classes": [
        "SupplierDAO"
    ]
}