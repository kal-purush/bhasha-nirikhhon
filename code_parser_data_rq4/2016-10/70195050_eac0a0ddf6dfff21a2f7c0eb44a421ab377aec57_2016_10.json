{
    "identifiers": [
        "os",
        "sys",
        "regex",
        "re",
        "nltk",
        "corp",
        "re",
        "sub",
        "corp",
        "re",
        "sub",
        "n_corp",
        "n_corp",
        "texts",
        "word",
        "wind",
        "nltk",
        "word_tokenize",
        "texts",
        "i",
        "i",
        "j",
        "tokens",
        "j",
        "word",
        "i",
        "indices",
        "tokens",
        "i",
        "wind",
        "i",
        "wind",
        "w",
        "frame",
        "w",
        "co_tot_dic",
        "keys",
        "co_tot_dic",
        "w",
        "k",
        "v",
        "co_tot_dic",
        "items",
        "v",
        "k",
        "punctuation",
        "co_tot_dic",
        "k",
        "k",
        "co_tot_dic",
        "keys",
        "co_tot_dic",
        "k",
        "append",
        "len",
        "w",
        "w",
        "tokens",
        "w",
        "k",
        "len",
        "tokens",
        "len",
        "indices",
        "token_tot",
        "word_tot",
        "co_tot_dic",
        "input",
        "input",
        "root",
        "dirs",
        "files",
        "os",
        "walk",
        "name",
        "files",
        "open",
        "os",
        "path",
        "join",
        "root",
        "name",
        "encoding",
        "corpus",
        "corps",
        "append",
        "clean",
        "corpus",
        "read",
        "join",
        "corps",
        "values",
        "texts",
        "word",
        "wind"
    ],
    "literals": [
        "'<!-- The default annotation set -->(.|\\n)*'",
        "r''",
        "'<[^<]+>'",
        "r''",
        "\"Please insert word:\"",
        "\"Please insert window size:\"",
        "\"nanocorpus\"",
        "'r'",
        "'utf-8'",
        "\"\\n\""
    ],
    "variables": [
        "n_corp",
        "n_corp",
        "co_tot_dic",
        "tokens",
        "indices",
        "frame",
        "co_tot_dic",
        "w",
        "token_tot",
        "word_tot",
        "corps",
        "word",
        "wind",
        "texts",
        "vals"
    ],
    "comments": [
        "for sys.exit() to help with debugging",
        "removes end half of xml tags",
        "removes remaining xml tags",
        "finds indices of word in texts",
        "finds window of word based on given window value",
        "finds and counts all possible collocates in every context",
        "removes entries seen only three times and punctuation.",
        "maybe we can make this an option as well",
        "finds total counts for possible collocates",
        "append to dictionary list for word \"k\"",
        "returns 3 value tuple with - token total, word total,\\",
        "and dictionary formatted as such --> {collocate:[co-occurrence count, total collocate count], ...}",
        "def chi_sq():        #placeholders for finished functions",
        "NB instructions for implementing each algorithm can be found in the text!",
        "#I'm hoping that most of the info you need should be extracted.",
        "def loglike():       #If you need more info from text feel free to run \"def values():\" within function and modify it.",
        "#NB Please only return 100 best results!!!",
        "#NB and return results in dictionary format with collocates as keys and their values!!!",
        "def mutual_info():",
        "input for word you want to search",
        "input for window size you want to search in",
        "cleans all corpus texts in nanocorpus file",
        "combines texts into one large text",
        "chi_sq(vals)                                  #placeholders for finished stat functions",
        "loglike(vals)",
        "mutual(vals)"
    ],
    "docstrings": [],
    "functions": [
        "clean",
        "values"
    ],
    "classes": []
}