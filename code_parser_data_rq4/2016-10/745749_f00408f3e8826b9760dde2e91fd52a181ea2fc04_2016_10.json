{
    "identifiers": [
        "test",
        "thread",
        "parallelization",
        "org",
        "testng",
        "ITestNGListener",
        "org",
        "testng",
        "TestNG",
        "org",
        "testng",
        "annotations",
        "BeforeClass",
        "org",
        "testng",
        "annotations",
        "Test",
        "org",
        "testng",
        "xml",
        "XmlSuite",
        "test",
        "thread",
        "parallelization",
        "sample",
        "TestClassAFiveMethodsWithDataProviderOnSomeMethodsAndNoDepsSample",
        "test",
        "thread",
        "parallelization",
        "sample",
        "TestClassBSixMethodsWithDataProviderOnSomeMethodsAndNoDepsSample",
        "test",
        "thread",
        "parallelization",
        "sample",
        "TestClassCFiveMethodsWithDataProviderOnSomeMethodsAndNoDepsSample",
        "test",
        "thread",
        "parallelization",
        "sample",
        "TestClassDThreeMethodsWithDataProviderOnSomeMethodsAndNoDepsSample",
        "test",
        "thread",
        "parallelization",
        "sample",
        "TestClassEFourMethodsWithDataProviderOnSomeMethodsAndNoDepsSample",
        "test",
        "thread",
        "parallelization",
        "sample",
        "TestClassFSixMethodsWithDataProviderOnSomeMethodsAndNoDepsSample",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "org",
        "testng",
        "Assert",
        "assertEquals",
        "test",
        "thread",
        "parallelization",
        "TestNgRunStateTracker",
        "getAllEventLogsForSuite",
        "test",
        "thread",
        "parallelization",
        "TestNgRunStateTracker",
        "getAllSuiteLevelEventLogs",
        "test",
        "thread",
        "parallelization",
        "TestNgRunStateTracker",
        "getAllSuiteListenerStartEventLogs",
        "test",
        "thread",
        "parallelization",
        "TestNgRunStateTracker",
        "getAllTestLevelEventLogs",
        "test",
        "thread",
        "parallelization",
        "TestNgRunStateTracker",
        "getAllTestMethodLevelEventLogs",
        "test",
        "thread",
        "parallelization",
        "TestNgRunStateTracker",
        "getSuiteAndTestLevelEventLogsForSuite",
        "test",
        "thread",
        "parallelization",
        "TestNgRunStateTracker",
        "getSuiteLevelEventLogsForSuite",
        "test",
        "thread",
        "parallelization",
        "TestNgRunStateTracker",
        "getSuiteListenerFinishEventLog",
        "test",
        "thread",
        "parallelization",
        "TestNgRunStateTracker",
        "getSuiteListenerStartEventLog",
        "test",
        "thread",
        "parallelization",
        "TestNgRunStateTracker",
        "getTestLevelEventLogsForSuite",
        "test",
        "thread",
        "parallelization",
        "TestNgRunStateTracker",
        "getTestListenerFinishEventLog",
        "test",
        "thread",
        "parallelization",
        "TestNgRunStateTracker",
        "getTestListenerStartEventLog",
        "test",
        "thread",
        "parallelization",
        "TestNgRunStateTracker",
        "getTestMethodLevelEventLogsForSuite",
        "test",
        "thread",
        "parallelization",
        "TestNgRunStateTracker",
        "getTestMethodLevelEventLogsForTest",
        "test",
        "thread",
        "parallelization",
        "TestNgRunStateTracker",
        "reset",
        "SUITE_A",
        "SUITE_B",
        "SUITE_A_TEST_A",
        "SUITE_B_TEST_A",
        "SUITE_B_TEST_B",
        "suiteEventLogsMap",
        "expectedInvocationCounts",
        "suiteLevelEventLogs",
        "testLevelEventLogs",
        "testMethodLevelEventLogs",
        "suiteOneSuiteAndTestLevelEventLogs",
        "suiteOneSuiteLevelEventLogs",
        "suiteOneTestLevelEventLogs",
        "suiteOneTestMethodLevelEventLogs",
        "suiteTwoSuiteAndTestLevelEventLogs",
        "suiteTwoSuiteLevelEventLogs",
        "suiteTwoTestLevelEventLogs",
        "suiteTwoTestMethodLevelEventLogs",
        "suiteOneTestOneTestMethodLevelEventLogs",
        "suiteTwoTestOneTestMethodLevelEventLogs",
        "suiteTwoTestTwoTestMethodLevelEventLogs",
        "suiteOneSuiteListenerOnStartEventLog",
        "suiteOneSuiteListenerOnFinishEventLog",
        "suiteTwoSuiteListenerOnStartEventLog",
        "suiteTwoSuiteListenerOnFinishEventLog",
        "suiteOneTestOneListenerOnStartEventLog",
        "suiteOneTestOneListenerOnFinishEventLog",
        "suiteTwoTestOneListenerOnStartEventLog",
        "suiteTwoTestOneListenerOnFinishEventLog",
        "suiteTwoTestTwoListenerOnStartEventLog",
        "suiteTwoTestTwoListenerOnFinishEventLog",
        "BeforeClass",
        "reset",
        "suiteOne",
        "createXmlSuite",
        "SUITE_A",
        "suiteTwo",
        "createXmlSuite",
        "SUITE_B",
        "createXmlTest",
        "suiteOne",
        "SUITE_A_TEST_A",
        "createXmlTest",
        "suiteTwo",
        "SUITE_B_TEST_A",
        "createXmlTest",
        "suiteTwo",
        "SUITE_B_TEST_B",
        "suiteOne",
        "setParallel",
        "XmlSuite",
        "ParallelMode",
        "METHODS",
        "suiteOne",
        "setThreadCount",
        "suiteTwo",
        "setParallel",
        "XmlSuite",
        "ParallelMode",
        "METHODS",
        "suiteTwo",
        "setThreadCount",
        "addParams",
        "suiteOne",
        "SUITE_A",
        "SUITE_A_TEST_A",
        "addParams",
        "suiteTwo",
        "SUITE_B",
        "SUITE_B_TEST_A",
        "addParams",
        "suiteTwo",
        "SUITE_B",
        "SUITE_B_TEST_B",
        "tng",
        "create",
        "suiteOne",
        "suiteTwo",
        "tng",
        "addListener",
        "tng",
        "run",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "expectedInvocationCounts",
        "put",
        "getCanonicalName",
        "suiteLevelEventLogs",
        "getAllSuiteLevelEventLogs",
        "testLevelEventLogs",
        "getAllTestLevelEventLogs",
        "testMethodLevelEventLogs",
        "getAllTestMethodLevelEventLogs",
        "suiteOneSuiteAndTestLevelEventLogs",
        "getSuiteAndTestLevelEventLogsForSuite",
        "SUITE_A",
        "suiteOneSuiteLevelEventLogs",
        "getSuiteLevelEventLogsForSuite",
        "SUITE_A",
        "suiteOneTestLevelEventLogs",
        "getTestLevelEventLogsForSuite",
        "SUITE_A",
        "suiteTwoSuiteAndTestLevelEventLogs",
        "getSuiteAndTestLevelEventLogsForSuite",
        "SUITE_B",
        "suiteTwoSuiteLevelEventLogs",
        "getSuiteLevelEventLogsForSuite",
        "SUITE_B",
        "suiteTwoTestLevelEventLogs",
        "getTestLevelEventLogsForSuite",
        "SUITE_B",
        "suiteEventLogsMap",
        "put",
        "SUITE_A",
        "getAllEventLogsForSuite",
        "SUITE_A",
        "suiteEventLogsMap",
        "put",
        "SUITE_B",
        "getAllEventLogsForSuite",
        "SUITE_B",
        "suiteOneTestMethodLevelEventLogs",
        "getTestMethodLevelEventLogsForSuite",
        "SUITE_A",
        "suiteTwoTestMethodLevelEventLogs",
        "getTestMethodLevelEventLogsForSuite",
        "SUITE_B",
        "suiteOneTestOneTestMethodLevelEventLogs",
        "getTestMethodLevelEventLogsForTest",
        "SUITE_A",
        "SUITE_A_TEST_A",
        "suiteTwoTestOneTestMethodLevelEventLogs",
        "getTestMethodLevelEventLogsForTest",
        "SUITE_B",
        "SUITE_B_TEST_A",
        "suiteTwoTestTwoTestMethodLevelEventLogs",
        "getTestMethodLevelEventLogsForTest",
        "SUITE_B",
        "SUITE_B_TEST_B",
        "suiteOneSuiteListenerOnStartEventLog",
        "getSuiteListenerStartEventLog",
        "SUITE_A",
        "suiteOneSuiteListenerOnFinishEventLog",
        "getSuiteListenerFinishEventLog",
        "SUITE_A",
        "suiteTwoSuiteListenerOnStartEventLog",
        "getSuiteListenerStartEventLog",
        "SUITE_B",
        "suiteTwoSuiteListenerOnFinishEventLog",
        "getSuiteListenerFinishEventLog",
        "SUITE_B",
        "suiteOneTestOneListenerOnStartEventLog",
        "getTestListenerStartEventLog",
        "SUITE_A",
        "SUITE_A_TEST_A",
        "suiteOneTestOneListenerOnFinishEventLog",
        "getTestListenerFinishEventLog",
        "SUITE_A",
        "SUITE_A_TEST_A",
        "suiteTwoTestOneListenerOnStartEventLog",
        "getTestListenerStartEventLog",
        "SUITE_B",
        "SUITE_B_TEST_A",
        "suiteTwoTestOneListenerOnFinishEventLog",
        "getTestListenerFinishEventLog",
        "SUITE_B",
        "SUITE_B_TEST_A",
        "suiteTwoTestTwoListenerOnStartEventLog",
        "getTestListenerStartEventLog",
        "SUITE_B",
        "SUITE_B_TEST_B",
        "suiteTwoTestTwoListenerOnFinishEventLog",
        "getTestListenerFinishEventLog",
        "SUITE_B",
        "SUITE_B_TEST_B",
        "Test",
        "assertEquals",
        "suiteLevelEventLogs",
        "size",
        "SUITE_A",
        "SUITE_B",
        "suiteLevelEventLogs",
        "assertEquals",
        "testLevelEventLogs",
        "size",
        "SUITE_A",
        "SUITE_B",
        "testLevelEventLogs",
        "assertEquals",
        "testMethodLevelEventLogs",
        "size",
        "SUITE_A",
        "SUITE_B",
        "testMethodLevelEventLogs",
        "assertEquals",
        "suiteOneSuiteLevelEventLogs",
        "size",
        "SUITE_A",
        "suiteOneSuiteLevelEventLogs",
        "assertEquals",
        "suiteOneTestLevelEventLogs",
        "size",
        "SUITE_A",
        "suiteOneTestLevelEventLogs",
        "assertEquals",
        "suiteOneTestMethodLevelEventLogs",
        "size",
        "SUITE_A",
        "suiteOneTestMethodLevelEventLogs",
        "assertEquals",
        "suiteTwoSuiteLevelEventLogs",
        "size",
        "SUITE_B",
        "suiteTwoSuiteLevelEventLogs",
        "assertEquals",
        "suiteTwoTestLevelEventLogs",
        "size",
        "SUITE_B",
        "suiteTwoTestLevelEventLogs",
        "assertEquals",
        "suiteTwoTestMethodLevelEventLogs",
        "size",
        "SUITE_B",
        "suiteTwoTestMethodLevelEventLogs",
        "Test",
        "verifySequentialSuites",
        "suiteLevelEventLogs",
        "suiteEventLogsMap",
        "Test",
        "verifySequentialTests",
        "suiteOneSuiteAndTestLevelEventLogs",
        "suiteOneTestLevelEventLogs",
        "suiteOneSuiteListenerOnStartEventLog",
        "suiteOneSuiteListenerOnFinishEventLog",
        "verifySequentialTests",
        "suiteTwoSuiteAndTestLevelEventLogs",
        "suiteTwoTestLevelEventLogs",
        "suiteTwoSuiteListenerOnStartEventLog",
        "suiteTwoSuiteListenerOnFinishEventLog",
        "Test",
        "verifyNumberOfInstancesOfTestClassesForMethods",
        "SUITE_A",
        "SUITE_A_TEST_A",
        "Arrays",
        "asList",
        "verifySameInstancesOfTestClassesAssociatedWithMethods",
        "SUITE_A",
        "SUITE_A_TEST_A",
        "Arrays",
        "asList",
        "verifyNumberOfInstancesOfTestClassForMethods",
        "SUITE_B",
        "SUITE_B_TEST_A",
        "verifySameInstancesOfTestClassAssociatedWithMethods",
        "SUITE_B",
        "SUITE_B_TEST_A",
        "verifyNumberOfInstancesOfTestClassesForMethods",
        "SUITE_B",
        "SUITE_B_TEST_B",
        "Arrays",
        "asList",
        "verifySameInstancesOfTestClassesAssociatedWithMethods",
        "SUITE_B",
        "SUITE_B_TEST_B",
        "Arrays",
        "asList",
        "Test",
        "verifyEventsOccurBetween",
        "suiteOneTestOneListenerOnStartEventLog",
        "suiteOneTestOneTestMethodLevelEventLogs",
        "suiteOneTestOneListenerOnFinishEventLog",
        "SUITE_A_TEST_A",
        "SUITE_A_TEST_A",
        "suiteOneTestOneListenerOnStartEventLog",
        "suiteOneTestOneListenerOnFinishEventLog",
        "suiteOneTestOneTestMethodLevelEventLogs",
        "verifyEventsOccurBetween",
        "suiteTwoTestOneListenerOnStartEventLog",
        "suiteTwoTestOneTestMethodLevelEventLogs",
        "suiteTwoTestOneListenerOnFinishEventLog",
        "SUITE_B_TEST_A",
        "SUITE_B_TEST_A",
        "suiteTwoTestOneListenerOnStartEventLog",
        "suiteTwoTestOneListenerOnFinishEventLog",
        "suiteTwoTestOneTestMethodLevelEventLogs",
        "verifyEventsOccurBetween",
        "suiteTwoTestTwoListenerOnStartEventLog",
        "suiteTwoTestTwoTestMethodLevelEventLogs",
        "suiteTwoTestTwoListenerOnFinishEventLog",
        "SUITE_B_TEST_B",
        "SUITE_B_TEST_B",
        "suiteTwoTestTwoListenerOnStartEventLog",
        "suiteTwoTestTwoListenerOnFinishEventLog",
        "suiteTwoTestTwoTestMethodLevelEventLogs",
        "Test",
        "verifyParallelTestMethodsWithNonParallelDataProvider",
        "getTestMethodLevelEventLogsForTest",
        "SUITE_A",
        "SUITE_A_TEST_A",
        "SUITE_A_TEST_A",
        "expectedInvocationCounts",
        "verifyParallelTestMethodsWithNonParallelDataProvider",
        "getTestMethodLevelEventLogsForTest",
        "SUITE_B",
        "SUITE_B_TEST_A",
        "SUITE_B_TEST_A",
        "expectedInvocationCounts",
        "verifyParallelTestMethodsWithNonParallelDataProvider",
        "getTestMethodLevelEventLogsForTest",
        "SUITE_B",
        "SUITE_B_TEST_B",
        "SUITE_B_TEST_B",
        "expectedInvocationCounts",
        "Test",
        "verifyEventThreadsSpawnedAfter",
        "getAllSuiteListenerStartEventLogs",
        "get",
        "getThreadId",
        "testMethodLevelEventLogs",
        "getAllSuiteListenerStartEventLogs",
        "get",
        "getThreadId",
        "testMethodLevelEventLogs",
        "verifyEventsForTestMethodsRunInTheSameThread",
        "SUITE_A",
        "SUITE_A_TEST_A",
        "verifyEventsForTestMethodsRunInTheSameThread",
        "SUITE_A",
        "SUITE_A_TEST_A",
        "verifyEventsForTestMethodsRunInTheSameThread",
        "SUITE_B",
        "SUITE_B_TEST_A",
        "verifyEventsForTestMethodsRunInTheSameThread",
        "SUITE_B",
        "SUITE_B_TEST_B",
        "verifyEventsForTestMethodsRunInTheSameThread",
        "SUITE_B",
        "SUITE_B_TEST_B",
        "verifyEventsForTestMethodsRunInTheSameThread",
        "SUITE_B",
        "SUITE_B_TEST_B"
    ],
    "literals": [
        "\"TestSuiteA\"",
        "\"TestSuiteB\"",
        "\"TestSuiteA-TwoTestClassTest\"",
        "\"TestSuiteB-SingleTestClassTest\"",
        "\"TestSuiteB-ThreeTestClassTest\"",
        "\"1\"",
        "\"paramOne,paramTwo,paramThree\"",
        "\"1\"",
        "\"paramOne,paramTwo\"",
        "\"1\"",
        "\"paramOne,paramTwo\"",
        "\".testMethodA\"",
        "\".testMethodB\"",
        "\".testMethodC\"",
        "\".testMethodD\"",
        "\".testMethodE\"",
        "\".testMethodA\"",
        "\".testMethodB\"",
        "\".testMethodC\"",
        "\".testMethodD\"",
        "\".testMethodE\"",
        "\".testMethodF\"",
        "\".testMethodA\"",
        "\".testMethodB\"",
        "\".testMethodC\"",
        "\".testMethodD\"",
        "\".testMethodE\"",
        "\".testMethodA\"",
        "\".testMethodB\"",
        "\".testMethodC\"",
        "\".testMethodA\"",
        "\".testMethodB\"",
        "\".testMethodC\"",
        "\".testMethodD\"",
        "\".testMethodA\"",
        "\".testMethodB\"",
        "\".testMethodC\"",
        "\".testMethodD\"",
        "\".testMethodE\"",
        "\".testMethodF\"",
        "\"There should be 4 suite level events logged for \"",
        "\", \"",
        "\": \"",
        "\"There should be 6 test level events logged for \"",
        "\", \"",
        "\": \"",
        "\"There should 150 test method level events logged for \"",
        "\", \"",
        "\": \"",
        "\"There should be 2 suite level events logged for \"",
        "\": \"",
        "\"There should be 2 test level events logged for \"",
        "\": \"",
        "\"There should be 69 test method level events \"",
        "\"logged for \"",
        "\": \"",
        "\"There should be 2 suite level events logged for \"",
        "\": \"",
        "\"There should be 4 test level events logged for \"",
        "\": \"",
        "\"There should be 54 test method level events \"",
        "\"logged for \"",
        "\": \"",
        "\"All of the test method level event logs for \"",
        "\" should have timestamps between the test listener's onStart and onFinish \"",
        "\"event logs for \"",
        "\". Test listener onStart event log: \"",
        "\". Test listener onFinish event log: \"",
        "\". Test method level event logs: \"",
        "\"All of the test method level event logs for \"",
        "\" should have timestamps between the test listener's onStart and onFinish \"",
        "\"event logs for \"",
        "\". Test listener onStart event log: \"",
        "\". Test listener onFinish event log: \"",
        "\". Test method level event logs: \"",
        "\"All of the test method level event logs for \"",
        "\" should have timestamps between the test listener's onStart and onFinish \"",
        "\"event logs for \"",
        "\". Test listener onStart event log: \"",
        "\". Test listener onFinish event log: \"",
        "\". Test method level event logs: \"",
        "\"All the thread IDs for the test method level events should be greater than the thread ID for the \"",
        "\"suite and test level events. The expectation is that since the suite and test level events \"",
        "\"are running sequentially, and all the test methods are running in parallel, new threads \"",
        "\"will be spawned after the thread executing the suite and test level events when new methods \"",
        "\"begin executing. Suite and test level events thread ID: \"",
        "\". Test method level event logs: \""
    ],
    "variables": [
        "suiteLevelEventLogs",
        "testLevelEventLogs",
        "testMethodLevelEventLogs",
        "suiteOneSuiteAndTestLevelEventLogs",
        "suiteOneSuiteLevelEventLogs",
        "suiteOneTestLevelEventLogs",
        "suiteOneTestMethodLevelEventLogs",
        "suiteTwoSuiteAndTestLevelEventLogs",
        "suiteTwoSuiteLevelEventLogs",
        "suiteTwoTestLevelEventLogs",
        "suiteTwoTestMethodLevelEventLogs",
        "suiteOneTestOneTestMethodLevelEventLogs",
        "suiteTwoTestOneTestMethodLevelEventLogs",
        "suiteTwoTestTwoTestMethodLevelEventLogs",
        "suiteOneSuiteListenerOnStartEventLog",
        "suiteOneSuiteListenerOnFinishEventLog",
        "suiteTwoSuiteListenerOnStartEventLog",
        "suiteTwoSuiteListenerOnFinishEventLog",
        "suiteOneTestOneListenerOnStartEventLog",
        "suiteOneTestOneListenerOnFinishEventLog",
        "suiteTwoTestOneListenerOnStartEventLog",
        "suiteTwoTestOneListenerOnFinishEventLog",
        "suiteTwoTestTwoListenerOnStartEventLog",
        "suiteTwoTestTwoListenerOnFinishEventLog"
    ],
    "comments": [
        "Verifies that the expected number of suite, test and test method level events were logged for each of the three",
        "suites.",
        "Verify that all the events in the second suite and third suites run have timestamps later than the suite",
        "listener's onFinish event for the first suite run.",
        "Verify that all the events in the third suite run have timestamps later than the suite listener's onFinish",
        "event for the second suite run.",
        "Verify that all suite level events run in the same thread",
        "For all suites, verify that the test level events run sequentially because the parallel mode is by methods only.",
        "Verify that there is only a single test class instance associated with each of the test methods from the sample",
        "classes for every test in all the suites.",
        "Verify that the same test class instance is associated with each of the test methods from the sample test class",
        "Verify that the test method listener's onTestStart method runs after the test listener's onStart method for",
        "all the test methods in all tests and suites.",
        "Verifies that the test methods execute in different threads in parallel fashion.",
        "Verifies that the method level events all run in different threads from the test and suite level events.",
        "Verifies that the test method listener and execution events for a given test method all run in the same thread."
    ],
    "docstrings": [],
    "functions": [
        "complexMultipleSequentialSuitesWithDataProvider",
        "sanityCheck",
        "verifySuitesRunSequentiallyInSameThread",
        "verifySuiteAndTestLevelEventsRunInSequentialOrderForIndividualSuites",
        "verifyOnlyOneInstanceOfTestClassForAllTestMethodsForAllSuites",
        "verifyTestLevelMethodLevelEventLogsOccurBetweenAfterTestListenerStartAndFinishEventLogs",
        "verifyThatTestMethodsRunInParallelThreads",
        "verifyThatMethodLevelEventsRunInDifferentThreadsFromSuiteAndTestLevelEvents"
    ],
    "classes": [
        "ParallelByMethodsMultipleSuitesTestsWithDataProviderAndMethodQueueing"
    ]
}