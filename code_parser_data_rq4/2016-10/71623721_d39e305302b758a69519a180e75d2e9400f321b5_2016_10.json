{
    "identifiers": [
        "re",
        "hashlib",
        "debian",
        "deb822",
        "django",
        "db",
        "IntegrityError",
        "bidb",
        "packages",
        "models",
        "Source",
        "Architecture",
        "Binary",
        "bidb",
        "buildinfo",
        "models",
        "Buildinfo",
        "re",
        "compile",
        "re",
        "compile",
        "request",
        "request",
        "read",
        "deb822",
        "Deb822",
        "raw_text",
        "data",
        "dump",
        "raw_text",
        "data",
        "get_gpg_info",
        "gpg_info",
        "gpg_info",
        "KeyError",
        "IndexError",
        "InvalidBuildinfo",
        "hashlib",
        "sha1",
        "hexdigest",
        "Buildinfo",
        "objects",
        "get",
        "sha1",
        "sha1",
        "submissions",
        "create",
        "uid",
        "uid",
        "node",
        "request",
        "GET",
        "get",
        "raw_text",
        "raw_text",
        "submission",
        "Buildinfo",
        "DoesNotExist",
        "data",
        "get",
        "InvalidBuildinfo",
        "model",
        "field",
        "model",
        "objects",
        "get_or_create",
        "name",
        "data",
        "field",
        "KeyError",
        "InvalidBuildinfo",
        "format",
        "field",
        "Buildinfo",
        "objects",
        "create",
        "sha1",
        "sha1",
        "raw_text",
        "raw_text_gpg_stripped",
        "source",
        "get_or_create",
        "Source",
        "architecture",
        "get_or_create",
        "Architecture",
        "version",
        "data",
        "build_path",
        "data",
        "get",
        "build_architecture",
        "get_or_create",
        "Architecture",
        "data",
        "split",
        "KeyError",
        "InvalidBuildinfo",
        "binary_names",
        "InvalidBuildinfo",
        "x",
        "binary_names",
        "buildinfo",
        "binaries",
        "create",
        "binary",
        "Binary",
        "objects",
        "get_or_create",
        "name",
        "x",
        "x",
        "hashes",
        "y",
        "data",
        "x",
        "strip",
        "splitlines",
        "y",
        "strip",
        "split",
        "re_filename",
        "match",
        "filename",
        "InvalidBuildinfo",
        "format",
        "filename",
        "size",
        "size",
        "ValueError",
        "ValueError",
        "InvalidBuildinfo",
        "format",
        "filename",
        "size",
        "checksums",
        "setdefault",
        "filename",
        "size",
        "format",
        "x",
        "lower",
        "checksum",
        "checksums",
        "filename",
        "size",
        "existing",
        "InvalidBuildinfo",
        "format",
        "x",
        "existing",
        "size",
        "k",
        "v",
        "sorted",
        "checksums",
        "items",
        "binaries",
        "re_filename",
        "match",
        "k",
        "group",
        "KeyError",
        "buildinfo",
        "checksums",
        "create",
        "filename",
        "k",
        "v",
        "x",
        "data",
        "strip",
        "splitlines",
        "re_installed_build_depends",
        "match",
        "x",
        "strip",
        "Binary",
        "objects",
        "get_or_create",
        "name",
        "m",
        "group",
        "buildinfo",
        "installed_build_depends",
        "get_or_create",
        "binary",
        "binary",
        "version",
        "m",
        "group",
        "buildinfo",
        "submissions",
        "create",
        "uid",
        "uid",
        "node",
        "request",
        "GET",
        "get",
        "raw_text",
        "raw_text"
    ],
    "literals": [
        "r'^(?P<name>[^_]+)_(?P<version>[^_]+)_(?P<architecture>[^\\.]+)\\.deb$'",
        "r'^(?P<package>[^ ]+) \\(= (?P<version>.+)\\)'",
        "''",
        "'NODATA'",
        "'NO_PUBKEY'",
        "\"Could not determine GPG uid\"",
        "'node'",
        "''",
        "'Format'",
        "'0.1'",
        "\"Only Format: 1.0 is supported\"",
        "\"Missing required field: {}\"",
        "'Source'",
        "'Architecture'",
        "'Version'",
        "'Build-Path'",
        "''",
        "'Build-Architecture'",
        "'Binary'",
        "' '",
        "\"Missing 'Binary' field\"",
        "\"Invalid 'Binary' field\"",
        "'Md5'",
        "'Sha1'",
        "'Sha256'",
        "'Checksums-%s'",
        "\"Invalid filename: {}\"",
        "\"Invalid size for {}: {}\"",
        "'size'",
        "'checksum_{}'",
        "'size'",
        "\"Mismatched file size in \"",
        "\"Checksums-{}: {} != {}\"",
        "'binary'",
        "'name'",
        "'binary'",
        "'Installed-Build-Depends'",
        "'package'",
        "'version'",
        "'node'",
        "''"
    ],
    "variables": [
        "re_filename",
        "re_installed_build_depends",
        "raw_text",
        "data",
        "raw_text_gpg_stripped",
        "uid",
        "data",
        "raw_text",
        "gpg_info",
        "uid",
        "sha1",
        "submission",
        "buildinfo",
        "binary_names",
        "binaries",
        "binaries",
        "x",
        "hashes",
        "checksums",
        "checksum",
        "size",
        "filename",
        "size",
        "existing",
        "v",
        "v",
        "m",
        "binary"
    ],
    "comments": [
        "Parse GPG info",
        "Parse binaries #########################################################",
        "Save instances for lookup later",
        "Parse checksums ########################################################",
        "Check filename",
        "Check size",
        "Create Binary instances ################################################",
        "Create InstalledBuildDepends instances #################################"
    ],
    "docstrings": [],
    "functions": [
        "parse_submission",
        "get_or_create"
    ],
    "classes": [
        "InvalidSubmission"
    ]
}