{
    "identifiers": [
        "os",
        "urlparse",
        "urlparse",
        "toil_lib",
        "files",
        "tarball_files",
        "copy_files",
        "toil_lib",
        "programs",
        "docker_call",
        "toil_lib",
        "urls",
        "s3am_upload",
        "job",
        "aligned_bam_id",
        "config",
        "job",
        "fileStore",
        "getLocalTempDir",
        "job",
        "fileStore",
        "readGlobalFile",
        "aligned_bam_id",
        "os",
        "path",
        "join",
        "work_dir",
        "docker_call",
        "tool",
        "work_dir",
        "work_dir",
        "parameters",
        "job",
        "cores",
        "os",
        "path",
        "join",
        "work_dir",
        "x",
        "x",
        "output_names",
        "config",
        "uuid",
        "tarball_files",
        "tar_name",
        "file_paths",
        "output_files",
        "output_dir",
        "work_dir",
        "prefix",
        "prefix",
        "config",
        "save_bam",
        "os",
        "path",
        "join",
        "work_dir",
        "urlparse",
        "config",
        "output_dir",
        "scheme",
        "config",
        "ssec",
        "s3am_upload",
        "fpath",
        "bam_path",
        "s3_dir",
        "config",
        "output_dir",
        "s3_key_path",
        "config",
        "ssec",
        "urlparse",
        "config",
        "output_dir",
        "scheme",
        "copy_files",
        "file_paths",
        "bam_path",
        "output_dir",
        "config",
        "output_dir",
        "os",
        "path",
        "exists",
        "os",
        "path",
        "join",
        "work_dir",
        "fail_flag",
        "job",
        "fileStore",
        "writeGlobalFile",
        "os",
        "path",
        "join",
        "work_dir"
    ],
    "literals": [
        "'rnaAligned.sortedByCoord.out.bam'",
        "'hbeale/treehouse_bam_qc:1.0'",
        "'runQC.sh'",
        "'readDist.txt'",
        "'rnaAligned.out.md.sorted.geneBodyCoverage.curves.pdf'",
        "'rnaAligned.out.md.sorted.geneBodyCoverage.txt'",
        "'.'",
        "'bam_qc.tar.gz'",
        "'rnaAligned.sortedByCoord.md.bam'",
        "'s3'",
        "'s3'",
        "'readDist.txt_FAIL_qc.txt'",
        "'bam_qc.tar.gz'"
    ],
    "variables": [
        "work_dir",
        "output_names",
        "output_files",
        "prefix",
        "bam_path",
        "fail_flag"
    ],
    "comments": [
        "Tar Output files",
        "Save output BAM",
        "Check for FAIL flag"
    ],
    "docstrings": [
        "\"\"\"\n    Run BAM QC as specified by California Kids Cancer Comparison (CKCC)\n\n    :param JobFunctionWrappingJob job:\n    :param str aligned_bam_id: FileStoreID of sorted bam from STAR\n    :param Namespace config: Argparse Namespace object containing argument inputs\n        Must contain:\n            config.uuid str: UUID of input sample\n            config.save_bam bool: True/False depending on whether to save bam\n            config.output_dir str: Path to save bam\n            config.ssec str: Path to encryption key for secure upload to S3\n    :return: boolean flag, FileStoreID for output bam, and FileStoreID for output tar\n    :rtype: tuple(bool, str, str)\n    \"\"\""
    ],
    "functions": [
        "run_bam_qc"
    ],
    "classes": []
}