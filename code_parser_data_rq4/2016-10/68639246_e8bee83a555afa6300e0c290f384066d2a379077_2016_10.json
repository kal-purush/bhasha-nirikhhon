{
    "identifiers": [
        "org",
        "firstinspires",
        "ftc",
        "robotcontroller",
        "external",
        "samples",
        "com",
        "qualcomm",
        "hardware",
        "modernrobotics",
        "ModernRoboticsI2cGyro",
        "com",
        "qualcomm",
        "hardware",
        "modernrobotics",
        "ModernRoboticsUsbDeviceInterfaceModule",
        "com",
        "qualcomm",
        "robotcore",
        "eventloop",
        "opmode",
        "Disabled",
        "com",
        "qualcomm",
        "robotcore",
        "eventloop",
        "opmode",
        "LinearOpMode",
        "com",
        "qualcomm",
        "robotcore",
        "eventloop",
        "opmode",
        "TeleOp",
        "com",
        "qualcomm",
        "robotcore",
        "hardware",
        "DeviceInterfaceModule",
        "com",
        "qualcomm",
        "robotcore",
        "hardware",
        "DigitalChannel",
        "com",
        "qualcomm",
        "robotcore",
        "hardware",
        "DigitalChannelController",
        "TeleOp",
        "name",
        "group",
        "Disabled",
        "BLUE_LED_CHANNEL",
        "RED_LED_CHANNEL",
        "Override",
        "inputPin",
        "outputPin",
        "dim",
        "digIn",
        "digOut",
        "dim",
        "hardwareMap",
        "get",
        "digIn",
        "hardwareMap",
        "get",
        "digOut",
        "hardwareMap",
        "get",
        "digIn",
        "setMode",
        "DigitalChannelController",
        "Mode",
        "INPUT",
        "digOut",
        "setMode",
        "DigitalChannelController",
        "Mode",
        "OUTPUT",
        "telemetry",
        "addData",
        "telemetry",
        "update",
        "waitForStart",
        "opModeIsActive",
        "outputPin",
        "gamepad1",
        "x",
        "digOut",
        "setState",
        "outputPin",
        "inputPin",
        "digIn",
        "getState",
        "inputPin",
        "dim",
        "setLED",
        "RED_LED_CHANNEL",
        "dim",
        "setLED",
        "BLUE_LED_CHANNEL",
        "dim",
        "setLED",
        "RED_LED_CHANNEL",
        "dim",
        "setLED",
        "BLUE_LED_CHANNEL",
        "telemetry",
        "addData",
        "outputPin",
        "telemetry",
        "addData",
        "inputPin",
        "telemetry",
        "addData",
        "inputPin",
        "telemetry",
        "update"
    ],
    "literals": [
        "\"Sensor: DIM DIO\"",
        "\"Sensor\"",
        "\"dim\"",
        "\"digin\"",
        "\"digout\"",
        "\">\"",
        "\"Press play, and then user X button to set DigOut\"",
        "\"Output\"",
        "\"Input\"",
        "\"LED\"",
        "\"Red\"",
        "\"Blue\""
    ],
    "variables": [
        "inputPin",
        "outputPin",
        "dim",
        "digIn",
        "digOut"
    ],
    "comments": [
        "Input State",
        "Output State",
        "Device Object",
        "Device Object",
        "Device Object",
        "get a reference to a Modern Robotics DIM, and IO channels.",
        "Use generic form of device mapping",
        "Use generic form of device mapping",
        "Use generic form of device mapping",
        "Set the direction of each channel",
        "wait for the start button to be pressed.",
        "Set the output pin based on x button",
        "Read the input pin",
        "Display input pin state on LEDs"
    ],
    "docstrings": [
        "Copyright (c) 2016 PSM\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted (subject to the limitations in the disclaimer below) provided that\nthe following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list\nof conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice, this\nlist of conditions and the following disclaimer in the documentation and/or\nother materials provided with the distribution.\n\nNeither the name of Qualcomm Technologies Inc nor the names of its contributors\nmay be used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nNO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY THIS\nLICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
        "* This is an example LinearOpMode that shows how to use the digital inputs and outputs on the\n * the Modern Robotics Device Interface Module.  In addition, it shows how to use the Red and Blue LED\n *\n * This op mode assumes that there is a Device Interface Module attached, named 'dim'.\n * On this DIM there is a digital input named 'digin' and an output named 'digout'\n *\n * To fully exercise this sample, connect pin 3 of the digin connector to pin 3 of the digout.\n * Note: Pin 1 is indicated by the black stripe, so pin 3 is at the opposite end.\n *\n * The X button on the gamepad will be used to activate the digital output pin.\n * The Red/Blue LED will be used to indicate the state of the digital input pin.\n * Blue = false (0V), Red = true (5V)\n * If the two pins are linked, the gamepad will change the LED color.\n *\n * Use Android Studio to Copy this Class, and Paste it into your team's code folder with a new name.\n * Remove or comment out the @Disabled line to add this opmode to the Driver Station OpMode list"
    ],
    "functions": [
        "runOpMode"
    ],
    "classes": [
        "SensorDIO"
    ]
}