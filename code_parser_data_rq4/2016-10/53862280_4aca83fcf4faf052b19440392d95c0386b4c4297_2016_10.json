{
    "identifiers": [
        "Inject",
        "Injectable",
        "Optional",
        "Http",
        "Headers",
        "URLSearchParams",
        "RequestMethod",
        "RequestOptions",
        "RequestOptionsArgs",
        "Response",
        "ResponseContentType",
        "Observable",
        "InlineResponse200",
        "Attendance",
        "InlineResponse2001",
        "InlineResponse2002",
        "XAny",
        "BASE_PATH",
        "Configuration",
        "Injectable",
        "Headers",
        "Configuration",
        "http",
        "Optional",
        "Inject",
        "BASE_PATH",
        "basePath",
        "Optional",
        "configuration",
        "basePath",
        "basePath",
        "configuration",
        "configuration",
        "where",
        "extraHttpRequestParams",
        "where",
        "extraHttpRequestParams",
        "response",
        "response",
        "response",
        "data",
        "extraHttpRequestParams",
        "data",
        "extraHttpRequestParams",
        "response",
        "response",
        "response",
        "options",
        "extraHttpRequestParams",
        "options",
        "extraHttpRequestParams",
        "response",
        "response",
        "response",
        "options",
        "extraHttpRequestParams",
        "options",
        "extraHttpRequestParams",
        "response",
        "response",
        "response",
        "extraHttpRequestParams",
        "extraHttpRequestParams",
        "response",
        "response",
        "response",
        "id",
        "extraHttpRequestParams",
        "id",
        "extraHttpRequestParams",
        "response",
        "response",
        "response",
        "id",
        "extraHttpRequestParams",
        "id",
        "extraHttpRequestParams",
        "response",
        "response",
        "response",
        "id",
        "extraHttpRequestParams",
        "id",
        "extraHttpRequestParams",
        "response",
        "response",
        "response",
        "extraHttpRequestParams",
        "extraHttpRequestParams",
        "response",
        "response",
        "response",
        "id",
        "extraHttpRequestParams",
        "id",
        "extraHttpRequestParams",
        "response",
        "response",
        "response",
        "extraHttpRequestParams",
        "extraHttpRequestParams",
        "response",
        "response",
        "response",
        "extraHttpRequestParams",
        "extraHttpRequestParams",
        "response",
        "response",
        "response",
        "id",
        "data",
        "extraHttpRequestParams",
        "id",
        "data",
        "extraHttpRequestParams",
        "response",
        "response",
        "response",
        "where",
        "data",
        "extraHttpRequestParams",
        "where",
        "data",
        "extraHttpRequestParams",
        "response",
        "response",
        "response",
        "data",
        "extraHttpRequestParams",
        "data",
        "extraHttpRequestParams",
        "response",
        "response",
        "response",
        "where",
        "extraHttpRequestParams",
        "URLSearchParams",
        "Headers",
        "where",
        "queryParameters",
        "where",
        "RequestOptions",
        "RequestMethod",
        "headers",
        "queryParameters",
        "ResponseContentType",
        "path",
        "requestOptions",
        "data",
        "extraHttpRequestParams",
        "URLSearchParams",
        "Headers",
        "headers",
        "RequestOptions",
        "RequestMethod",
        "headers",
        "data",
        "data",
        "queryParameters",
        "ResponseContentType",
        "path",
        "requestOptions",
        "options",
        "extraHttpRequestParams",
        "URLSearchParams",
        "Headers",
        "options",
        "queryParameters",
        "options",
        "RequestOptions",
        "RequestMethod",
        "headers",
        "queryParameters",
        "ResponseContentType",
        "path",
        "requestOptions",
        "options",
        "extraHttpRequestParams",
        "URLSearchParams",
        "Headers",
        "URLSearchParams",
        "headers",
        "options",
        "formParams",
        "options",
        "RequestOptions",
        "RequestMethod",
        "headers",
        "formParams",
        "queryParameters",
        "ResponseContentType",
        "path",
        "requestOptions",
        "extraHttpRequestParams",
        "URLSearchParams",
        "Headers",
        "RequestOptions",
        "RequestMethod",
        "headers",
        "queryParameters",
        "ResponseContentType",
        "path",
        "requestOptions",
        "id",
        "extraHttpRequestParams",
        "id",
        "URLSearchParams",
        "Headers",
        "id",
        "id",
        "RequestOptions",
        "RequestMethod",
        "headers",
        "queryParameters",
        "ResponseContentType",
        "path",
        "requestOptions",
        "id",
        "extraHttpRequestParams",
        "id",
        "URLSearchParams",
        "Headers",
        "id",
        "id",
        "RequestOptions",
        "RequestMethod",
        "headers",
        "queryParameters",
        "ResponseContentType",
        "path",
        "requestOptions",
        "id",
        "extraHttpRequestParams",
        "id",
        "URLSearchParams",
        "Headers",
        "id",
        "id",
        "RequestOptions",
        "RequestMethod",
        "headers",
        "queryParameters",
        "ResponseContentType",
        "path",
        "requestOptions",
        "extraHttpRequestParams",
        "URLSearchParams",
        "Headers",
        "queryParameters",
        "RequestOptions",
        "RequestMethod",
        "headers",
        "queryParameters",
        "ResponseContentType",
        "path",
        "requestOptions",
        "id",
        "extraHttpRequestParams",
        "id",
        "URLSearchParams",
        "Headers",
        "id",
        "id",
        "queryParameters",
        "RequestOptions",
        "RequestMethod",
        "headers",
        "queryParameters",
        "ResponseContentType",
        "path",
        "requestOptions",
        "extraHttpRequestParams",
        "URLSearchParams",
        "Headers",
        "queryParameters",
        "RequestOptions",
        "RequestMethod",
        "headers",
        "queryParameters",
        "ResponseContentType",
        "path",
        "requestOptions",
        "extraHttpRequestParams",
        "URLSearchParams",
        "Headers",
        "RequestOptions",
        "RequestMethod",
        "headers",
        "queryParameters",
        "ResponseContentType",
        "path",
        "requestOptions",
        "id",
        "data",
        "extraHttpRequestParams",
        "id",
        "URLSearchParams",
        "Headers",
        "id",
        "id",
        "headers",
        "RequestOptions",
        "RequestMethod",
        "headers",
        "data",
        "data",
        "queryParameters",
        "ResponseContentType",
        "path",
        "requestOptions",
        "where",
        "data",
        "extraHttpRequestParams",
        "URLSearchParams",
        "Headers",
        "where",
        "queryParameters",
        "where",
        "headers",
        "RequestOptions",
        "RequestMethod",
        "headers",
        "data",
        "data",
        "queryParameters",
        "ResponseContentType",
        "path",
        "requestOptions",
        "data",
        "extraHttpRequestParams",
        "URLSearchParams",
        "Headers",
        "headers",
        "RequestOptions",
        "RequestMethod",
        "headers",
        "data",
        "data",
        "queryParameters",
        "ResponseContentType",
        "path",
        "requestOptions"
    ],
    "literals": [
        "'@angular/core'",
        "'@angular/http'",
        "'@angular/http'",
        "'@angular/http'",
        "'rxjs/Observable'",
        "'../rxjs-operators'",
        "'../model/inlineResponse200'",
        "'../model/attendance'",
        "'../model/inlineResponse2001'",
        "'../model/inlineResponse2002'",
        "'../model/xAny'",
        "'../variables'",
        "'../configuration'",
        "'http://localhost:3000/api'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "/Attendances/count",
        "'where'",
        "string",
        "'application/json'",
        "'application/x-www-form-urlencoded'",
        "'application/xml'",
        "'text/xml'",
        "string",
        "'application/json'",
        "'application/xml'",
        "'text/xml'",
        "'application/javascript'",
        "'text/javascript'",
        "/Attendances",
        "string",
        "'application/json'",
        "'application/x-www-form-urlencoded'",
        "'application/xml'",
        "'text/xml'",
        "string",
        "'application/json'",
        "'application/xml'",
        "'text/xml'",
        "'application/javascript'",
        "'text/javascript'",
        "'Content-Type'",
        "'application/json'",
        "''",
        "string",
        "/Attendances/change-stream",
        "'options'",
        "string",
        "'application/json'",
        "'application/x-www-form-urlencoded'",
        "'application/xml'",
        "'text/xml'",
        "string",
        "'application/json'",
        "'application/xml'",
        "'text/xml'",
        "'application/javascript'",
        "'text/javascript'",
        "string",
        "/Attendances/change-stream",
        "string",
        "'application/json'",
        "'application/x-www-form-urlencoded'",
        "'application/xml'",
        "'text/xml'",
        "string",
        "'application/json'",
        "'application/xml'",
        "'text/xml'",
        "'application/javascript'",
        "'text/javascript'",
        "'Content-Type'",
        "'application/x-www-form-urlencoded'",
        "'options'",
        "/Attendances/deleteAll",
        "string",
        "'application/json'",
        "'application/x-www-form-urlencoded'",
        "'application/xml'",
        "'text/xml'",
        "string",
        "'application/json'",
        "'application/xml'",
        "'text/xml'",
        "'application/javascript'",
        "'text/javascript'",
        "string",
        "/Attendances/${id}",
        "'Required parameter id was null or undefined when calling attendanceDeleteById.'",
        "string",
        "'application/json'",
        "'application/x-www-form-urlencoded'",
        "'application/xml'",
        "'text/xml'",
        "string",
        "'application/json'",
        "'application/xml'",
        "'text/xml'",
        "'application/javascript'",
        "'text/javascript'",
        "string",
        "/Attendances/${id}/exists",
        "'Required parameter id was null or undefined when calling attendanceExistsGetAttendancesidExists.'",
        "string",
        "'application/json'",
        "'application/x-www-form-urlencoded'",
        "'application/xml'",
        "'text/xml'",
        "string",
        "'application/json'",
        "'application/xml'",
        "'text/xml'",
        "'application/javascript'",
        "'text/javascript'",
        "string",
        "/Attendances/${id}",
        "'Required parameter id was null or undefined when calling attendanceExistsHeadAttendancesid.'",
        "string",
        "'application/json'",
        "'application/x-www-form-urlencoded'",
        "'application/xml'",
        "'text/xml'",
        "string",
        "'application/json'",
        "'application/xml'",
        "'text/xml'",
        "'application/javascript'",
        "'text/javascript'",
        "string",
        "/Attendances",
        "'filter'",
        "string",
        "'application/json'",
        "'application/x-www-form-urlencoded'",
        "'application/xml'",
        "'text/xml'",
        "string",
        "'application/json'",
        "'application/xml'",
        "'text/xml'",
        "'application/javascript'",
        "'text/javascript'",
        "string",
        "string",
        "/Attendances/${id}",
        "'Required parameter id was null or undefined when calling attendanceFindById.'",
        "'filter'",
        "string",
        "'application/json'",
        "'application/x-www-form-urlencoded'",
        "'application/xml'",
        "'text/xml'",
        "string",
        "'application/json'",
        "'application/xml'",
        "'text/xml'",
        "'application/javascript'",
        "'text/javascript'",
        "string",
        "/Attendances/findOne",
        "'filter'",
        "string",
        "'application/json'",
        "'application/x-www-form-urlencoded'",
        "'application/xml'",
        "'text/xml'",
        "string",
        "'application/json'",
        "'application/xml'",
        "'text/xml'",
        "'application/javascript'",
        "'text/javascript'",
        "/Attendances/generateRandomAttendances",
        "string",
        "'application/json'",
        "'application/x-www-form-urlencoded'",
        "'application/xml'",
        "'text/xml'",
        "string",
        "'application/json'",
        "'application/xml'",
        "'text/xml'",
        "'application/javascript'",
        "'text/javascript'",
        "string",
        "/Attendances/${id}",
        "'Required parameter id was null or undefined when calling attendancePrototypeUpdateAttributes.'",
        "string",
        "'application/json'",
        "'application/x-www-form-urlencoded'",
        "'application/xml'",
        "'text/xml'",
        "string",
        "'application/json'",
        "'application/xml'",
        "'text/xml'",
        "'application/javascript'",
        "'text/javascript'",
        "'Content-Type'",
        "'application/json'",
        "''",
        "string",
        "/Attendances/update",
        "'where'",
        "string",
        "'application/json'",
        "'application/x-www-form-urlencoded'",
        "'application/xml'",
        "'text/xml'",
        "string",
        "'application/json'",
        "'application/xml'",
        "'text/xml'",
        "'application/javascript'",
        "'text/javascript'",
        "'Content-Type'",
        "'application/json'",
        "''",
        "/Attendances",
        "string",
        "'application/json'",
        "'application/x-www-form-urlencoded'",
        "'application/xml'",
        "'text/xml'",
        "string",
        "'application/json'",
        "'application/xml'",
        "'text/xml'",
        "'application/javascript'",
        "'text/javascript'",
        "'Content-Type'",
        "'application/json'",
        "''"
    ],
    "variables": [
        "path",
        "queryParameters",
        "headers",
        "consumes",
        "produces",
        "requestOptions",
        "path",
        "queryParameters",
        "headers",
        "consumes",
        "produces",
        "requestOptions",
        "path",
        "queryParameters",
        "headers",
        "consumes",
        "produces",
        "requestOptions",
        "path",
        "queryParameters",
        "headers",
        "formParams",
        "consumes",
        "produces",
        "requestOptions",
        "path",
        "queryParameters",
        "headers",
        "consumes",
        "produces",
        "requestOptions",
        "path",
        "queryParameters",
        "headers",
        "consumes",
        "produces",
        "requestOptions",
        "path",
        "queryParameters",
        "headers",
        "consumes",
        "produces",
        "requestOptions",
        "path",
        "queryParameters",
        "headers",
        "consumes",
        "produces",
        "requestOptions",
        "path",
        "queryParameters",
        "headers",
        "consumes",
        "produces",
        "requestOptions",
        "path",
        "queryParameters",
        "headers",
        "consumes",
        "produces",
        "requestOptions",
        "path",
        "queryParameters",
        "headers",
        "consumes",
        "produces",
        "requestOptions",
        "path",
        "queryParameters",
        "headers",
        "consumes",
        "produces",
        "requestOptions",
        "path",
        "queryParameters",
        "headers",
        "consumes",
        "produces",
        "requestOptions",
        "path",
        "queryParameters",
        "headers",
        "consumes",
        "produces",
        "requestOptions",
        "path",
        "queryParameters",
        "headers",
        "consumes",
        "produces",
        "requestOptions"
    ],
    "comments": [
        "tslint:disable:no-unused-variable member-ordering",
        "https://github.com/angular/angular/issues/6845",
        "to determine the Content-Type header",
        "to determine the Accept header",
        "https://github.com/angular/angular/issues/6845",
        "to determine the Content-Type header",
        "to determine the Accept header",
        "https://github.com/angular/angular/issues/10612",
        "https://github.com/angular/angular/issues/6845",
        "to determine the Content-Type header",
        "to determine the Accept header",
        "https://github.com/angular/angular/issues/6845",
        "to determine the Content-Type header",
        "to determine the Accept header",
        "https://github.com/angular/angular/issues/6845",
        "to determine the Content-Type header",
        "to determine the Accept header",
        "https://github.com/angular/angular/issues/6845",
        "verify required parameter 'id' is not null or undefined",
        "to determine the Content-Type header",
        "to determine the Accept header",
        "https://github.com/angular/angular/issues/6845",
        "verify required parameter 'id' is not null or undefined",
        "to determine the Content-Type header",
        "to determine the Accept header",
        "https://github.com/angular/angular/issues/6845",
        "verify required parameter 'id' is not null or undefined",
        "to determine the Content-Type header",
        "to determine the Accept header",
        "https://github.com/angular/angular/issues/6845",
        "to determine the Content-Type header",
        "to determine the Accept header",
        "https://github.com/angular/angular/issues/6845",
        "verify required parameter 'id' is not null or undefined",
        "to determine the Content-Type header",
        "to determine the Accept header",
        "https://github.com/angular/angular/issues/6845",
        "to determine the Content-Type header",
        "to determine the Accept header",
        "https://github.com/angular/angular/issues/6845",
        "to determine the Content-Type header",
        "to determine the Accept header",
        "https://github.com/angular/angular/issues/6845",
        "verify required parameter 'id' is not null or undefined",
        "to determine the Content-Type header",
        "to determine the Accept header",
        "https://github.com/angular/angular/issues/10612",
        "https://github.com/angular/angular/issues/6845",
        "to determine the Content-Type header",
        "to determine the Accept header",
        "https://github.com/angular/angular/issues/10612",
        "https://github.com/angular/angular/issues/6845",
        "to determine the Content-Type header",
        "to determine the Accept header",
        "https://github.com/angular/angular/issues/10612"
    ],
    "docstrings": [
        "* medical-appointment-scheduling-server\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 0.0.2\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Count instances of the model matched by where from the data source.\n     *\n     * @param where Criteria to match model instances",
        "* Create a new instance of the model and persist it into the data source.\n     *\n     * @param data Model instance data",
        "* Create a change stream.\n     *\n     * @param options",
        "* Create a change stream.\n     *\n     * @param options",
        "* Deletes all data.\n     *",
        "* Delete a model instance by id from the data source.\n     *\n     * @param id Model id",
        "* Check whether a model instance exists in the data source.\n     *\n     * @param id Model id",
        "* Check whether a model instance exists in the data source.\n     *\n     * @param id Model id",
        "* Find all instances of the model matched by filter from the data source.\n     *\n     * @param filter Filter defining fields, where, include, order, offset, and limit",
        "* Find a model instance by id from the data source.\n     *\n     * @param id Model id\n     * @param filter Filter defining fields and include",
        "* Find first instance of the model matched by filter from the data source.\n     *\n     * @param filter Filter defining fields, where, include, order, offset, and limit",
        "* Generates random attendances for all past events.\n     *",
        "* Update attributes for a model instance and persist it into the data source.\n     *\n     * @param id PersistedModel id\n     * @param data An object of model property name/value pairs",
        "* Update instances of the model matched by where from the data source.\n     *\n     * @param where Criteria to match model instances\n     * @param data An object of model property name/value pairs",
        "* Update an existing model instance or insert a new one into the data source.\n     *\n     * @param data Model instance data",
        "* Count instances of the model matched by where from the data source.\n     *\n     * @param where Criteria to match model instances",
        "* Create a new instance of the model and persist it into the data source.\n     *\n     * @param data Model instance data",
        "* Create a change stream.\n     *\n     * @param options",
        "* Create a change stream.\n     *\n     * @param options",
        "* Deletes all data.\n     *",
        "* Delete a model instance by id from the data source.\n     *\n     * @param id Model id",
        "* Check whether a model instance exists in the data source.\n     *\n     * @param id Model id",
        "* Check whether a model instance exists in the data source.\n     *\n     * @param id Model id",
        "* Find all instances of the model matched by filter from the data source.\n     *\n     * @param filter Filter defining fields, where, include, order, offset, and limit",
        "* Find a model instance by id from the data source.\n     *\n     * @param id Model id\n     * @param filter Filter defining fields and include",
        "* Find first instance of the model matched by filter from the data source.\n     *\n     * @param filter Filter defining fields, where, include, order, offset, and limit",
        "* Generates random attendances for all past events.\n     *",
        "* Update attributes for a model instance and persist it into the data source.\n     *\n     * @param id PersistedModel id\n     * @param data An object of model property name/value pairs",
        "* Update instances of the model matched by where from the data source.\n     *\n     * @param where Criteria to match model instances\n     * @param data An object of model property name/value pairs",
        "* Update an existing model instance or insert a new one into the data source.\n     *\n     * @param data Model instance data"
    ],
    "functions": [
        "attendanceCount",
        "attendanceCreate",
        "attendanceCreateChangeStreamGetAttendancesChangeStream",
        "attendanceCreateChangeStreamPostAttendancesChangeStream",
        "attendanceDeleteAllAttendances",
        "attendanceDeleteById",
        "attendanceExistsGetAttendancesidExists",
        "attendanceExistsHeadAttendancesid",
        "attendanceFind",
        "attendanceFindById",
        "attendanceFindOne",
        "attendanceGenerateRandomAttendances",
        "attendancePrototypeUpdateAttributes",
        "attendanceUpdateAll",
        "attendanceUpsert",
        "attendanceCountWithHttpInfo",
        "attendanceCreateWithHttpInfo",
        "attendanceCreateChangeStreamGetAttendancesChangeStreamWithHttpInfo",
        "attendanceCreateChangeStreamPostAttendancesChangeStreamWithHttpInfo",
        "attendanceDeleteAllAttendancesWithHttpInfo",
        "attendanceDeleteByIdWithHttpInfo",
        "attendanceExistsGetAttendancesidExistsWithHttpInfo",
        "attendanceExistsHeadAttendancesidWithHttpInfo",
        "attendanceFindWithHttpInfo",
        "attendanceFindByIdWithHttpInfo",
        "attendanceFindOneWithHttpInfo",
        "attendanceGenerateRandomAttendancesWithHttpInfo",
        "attendancePrototypeUpdateAttributesWithHttpInfo",
        "attendanceUpdateAllWithHttpInfo",
        "attendanceUpsertWithHttpInfo"
    ],
    "classes": [
        "AttendanceService"
    ]
}