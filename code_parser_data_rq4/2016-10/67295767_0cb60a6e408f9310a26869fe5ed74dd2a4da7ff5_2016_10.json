{
    "identifiers": [
        "express",
        "http",
        "socketio",
        "partyManager",
        "playerStore",
        "express",
        "http",
        "app",
        "socketio",
        "server",
        "app",
        "process",
        "app",
        "express",
        "app",
        "req",
        "res",
        "partyManager",
        "res",
        "partyManager",
        "winner",
        "io",
        "winner",
        "partyManager",
        "io",
        "playerStore",
        "partyManager",
        "cards",
        "io",
        "cards",
        "partyManager",
        "bets",
        "io",
        "bets",
        "io",
        "socket",
        "socket",
        "playerId",
        "playerName",
        "partyManager",
        "playerId",
        "playerName",
        "socket",
        "playerId",
        "cardId",
        "partyManager",
        "playerId",
        "cardId",
        "socket",
        "playerId",
        "cardId",
        "partyManager",
        "playerId",
        "cardId",
        "socket",
        "playerId",
        "cardId",
        "partyManager",
        "playerId",
        "cardId",
        "socket",
        "playerId",
        "newName",
        "partyManager",
        "playerId",
        "newName",
        "server",
        "app",
        "app"
    ],
    "literals": [
        "\"express\"",
        "\"http\"",
        "\"socket.io\"",
        "\"./party/party-manager\"",
        "\"./player/player-store\"",
        "'port'",
        "'public'",
        "'/reset'",
        "\"Resetting...\"",
        "\"reset done!\"",
        "'gameover'",
        "'update all players!'",
        "'update-all'",
        "'send cards to bet!'",
        "'cards-bet'",
        "'reveled all bets!'",
        "'bets-reveled'",
        "'connection'",
        "'join'",
        "string",
        "string",
        "'pick-card'",
        "string",
        "'pick-bet'",
        "string",
        "'discard-card'",
        "string",
        "'rename-player'",
        "string",
        "string",
        "'port'",
        "listening on :${app.get('port')}",
        "'port'"
    ],
    "variables": [
        "app",
        "server",
        "io"
    ],
    "comments": [
        "socket.on('disconnect', function () { playerManager.handleDisconnect(io, socket); });",
        "socket.on('reconnect-player',(playerId,playerName)=>{ playerManager.handleReconnect(io, socket, playerId, playerName); });"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}