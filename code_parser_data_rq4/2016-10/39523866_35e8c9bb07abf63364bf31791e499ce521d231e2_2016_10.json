{
    "identifiers": [
        "Subject",
        "Observable",
        "ObservableValidator",
        "describe",
        "beforeEach",
        "validator",
        "ObservableValidator",
        "describe",
        "it",
        "Observable",
        "errorString",
        "Observable",
        "validator",
        "firstHandler",
        "validator",
        "secondHandler",
        "validator",
        "valid",
        "result",
        "valid",
        "expect",
        "result",
        "errorString",
        "it",
        "Observable",
        "validator",
        "firstHandler",
        "validator",
        "valid",
        "result",
        "valid",
        "expect",
        "result",
        "it",
        "validator",
        "valid",
        "result",
        "valid",
        "expect",
        "result",
        "describe",
        "it",
        "Observable",
        "validator",
        "firstHandler",
        "validator",
        "valid",
        "result",
        "valid",
        "expect",
        "result",
        "it",
        "Observable",
        "error",
        "firstHandler",
        "Subject",
        "validator",
        "firstHandler",
        "validator",
        "valid",
        "result",
        "valid",
        "firstHandler",
        "expect",
        "result",
        "firstHandler",
        "expect",
        "result",
        "error"
    ],
    "literals": [
        "'rxjs'",
        "'./observableValidator'",
        "'ObservableValidator'",
        "'validate'",
        "'should return the error on the first validator'",
        "'error123'",
        "'other'",
        "'should return null if no errors are found'",
        "'should return null if no validators are registered'",
        "'isActive'",
        "'should ignore a validator with isActive set as false'",
        "'error'",
        "'should get the validation error when the validator becomes active'",
        "'error'"
    ],
    "variables": [
        "validator",
        "errorString",
        "firstHandler",
        "secondHandler",
        "result",
        "firstHandler",
        "result",
        "result",
        "firstHandler",
        "result",
        "error",
        "firstHandler",
        "result"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}