{
    "identifiers": [
        "reactor",
        "test",
        "scheduler",
        "java",
        "util",
        "java",
        "util",
        "concurrent",
        "PriorityBlockingQueue",
        "java",
        "util",
        "concurrent",
        "ThreadFactory",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "java",
        "util",
        "concurrent",
        "atomic",
        "AtomicLongFieldUpdater",
        "java",
        "util",
        "concurrent",
        "atomic",
        "AtomicReference",
        "reactor",
        "core",
        "Cancellation",
        "reactor",
        "core",
        "Exceptions",
        "reactor",
        "core",
        "scheduler",
        "Scheduler",
        "reactor",
        "core",
        "scheduler",
        "Schedulers",
        "reactor",
        "core",
        "scheduler",
        "TimedScheduler",
        "reactor",
        "util",
        "concurrent",
        "QueueSupplier",
        "allSchedulers",
        "s",
        "allSchedulers",
        "Schedulers",
        "setFactory",
        "s",
        "Schedulers",
        "setFactory",
        "s",
        "s",
        "Schedulers",
        "newTimer",
        "s",
        "SuppressWarnings",
        "_s",
        "s",
        "_s",
        "s",
        "Schedulers",
        "shutdownNow",
        "Schedulers",
        "resetFactory",
        "queue",
        "QueueSupplier",
        "XS_BUFFER_SIZE",
        "counter",
        "nanoTime",
        "advanceTime",
        "nanoTime",
        "delayTime",
        "unit",
        "advanceTimeTo",
        "nanoTime",
        "unit",
        "toNanos",
        "delayTime",
        "TimeUnit",
        "NANOSECONDS",
        "delayTime",
        "unit",
        "targetTime",
        "unit",
        "toNanos",
        "delayTime",
        "advanceTime",
        "targetTime",
        "Override",
        "Override",
        "unit",
        "unit",
        "convert",
        "nanoTime",
        "TimeUnit",
        "NANOSECONDS",
        "Override",
        "task",
        "createWorker",
        "schedule",
        "task",
        "Override",
        "task",
        "delay",
        "unit",
        "createWorker",
        "schedule",
        "task",
        "delay",
        "unit",
        "Override",
        "task",
        "initialDelay",
        "period",
        "unit",
        "w",
        "createWorker",
        "periodicTask",
        "task",
        "w",
        "w",
        "schedulePeriodically",
        "periodicTask",
        "initialDelay",
        "period",
        "unit",
        "periodicTask",
        "targetTimeInNanoseconds",
        "queue",
        "isEmpty",
        "current",
        "queue",
        "peek",
        "current",
        "time",
        "targetTimeInNanoseconds",
        "nanoTime",
        "current",
        "time",
        "nanoTime",
        "current",
        "time",
        "queue",
        "remove",
        "current",
        "scheduler",
        "shutdown",
        "current",
        "run",
        "run",
        "nanoTime",
        "targetTimeInNanoseconds",
        "time",
        "run",
        "scheduler",
        "count",
        "scheduler",
        "time",
        "run",
        "count",
        "time",
        "time",
        "run",
        "run",
        "scheduler",
        "scheduler",
        "count",
        "count",
        "Override",
        "o",
        "time",
        "o",
        "time",
        "compare",
        "count",
        "o",
        "count",
        "compare",
        "time",
        "o",
        "time",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "s",
        "s",
        "s",
        "s",
        "Override",
        "threadFactory",
        "s",
        "s",
        "s",
        "s",
        "s",
        "Override",
        "ttlSeconds",
        "threadFactory",
        "s",
        "Override",
        "parallelism",
        "threadFactory",
        "s",
        "Override",
        "threadFactory",
        "s",
        "Override",
        "threadFactory",
        "s",
        "shutdown",
        "Override",
        "unit",
        "TestScheduler",
        "now",
        "unit",
        "Override",
        "run",
        "shutdown",
        "REJECTED",
        "timedTask",
        "run",
        "COUNTER",
        "getAndIncrement",
        "TestScheduler",
        "queue",
        "add",
        "timedTask",
        "queue",
        "remove",
        "timedTask",
        "Override",
        "run",
        "delayTime",
        "unit",
        "shutdown",
        "REJECTED",
        "timedTask",
        "nanoTime",
        "unit",
        "toNanos",
        "delayTime",
        "run",
        "COUNTER",
        "getAndIncrement",
        "TestScheduler",
        "queue",
        "add",
        "timedTask",
        "queue",
        "remove",
        "timedTask",
        "Override",
        "task",
        "initialDelay",
        "period",
        "unit",
        "periodInNanoseconds",
        "unit",
        "toNanos",
        "period",
        "firstNowNanoseconds",
        "now",
        "TimeUnit",
        "NANOSECONDS",
        "firstStartInNanoseconds",
        "firstNowNanoseconds",
        "unit",
        "toNanos",
        "initialDelay",
        "periodicTask",
        "firstStartInNanoseconds",
        "task",
        "firstNowNanoseconds",
        "periodInNanoseconds",
        "replace",
        "periodicTask",
        "schedule",
        "periodicTask",
        "initialDelay",
        "unit",
        "periodicTask",
        "Override",
        "shutdown",
        "CANCELLED",
        "EMPTY",
        "decoratedRun",
        "periodInNanoseconds",
        "count",
        "lastNowNanoseconds",
        "startInNanoseconds",
        "firstStartInNanoseconds",
        "decoratedRun",
        "firstNowNanoseconds",
        "periodInNanoseconds",
        "decoratedRun",
        "decoratedRun",
        "periodInNanoseconds",
        "periodInNanoseconds",
        "lastNowNanoseconds",
        "firstNowNanoseconds",
        "startInNanoseconds",
        "firstStartInNanoseconds",
        "lazySet",
        "EMPTY",
        "Override",
        "decoratedRun",
        "run",
        "get",
        "CANCELLED",
        "nextTick",
        "nowNanoseconds",
        "now",
        "TimeUnit",
        "NANOSECONDS",
        "nowNanoseconds",
        "CLOCK_DRIFT_TOLERANCE_NANOSECONDS",
        "lastNowNanoseconds",
        "nowNanoseconds",
        "lastNowNanoseconds",
        "periodInNanoseconds",
        "CLOCK_DRIFT_TOLERANCE_NANOSECONDS",
        "nextTick",
        "nowNanoseconds",
        "periodInNanoseconds",
        "startInNanoseconds",
        "nextTick",
        "periodInNanoseconds",
        "count",
        "nextTick",
        "startInNanoseconds",
        "count",
        "periodInNanoseconds",
        "lastNowNanoseconds",
        "nowNanoseconds",
        "delay",
        "nextTick",
        "nowNanoseconds",
        "replace",
        "schedule",
        "delay",
        "TimeUnit",
        "NANOSECONDS",
        "Override",
        "getAndSet",
        "CANCELLED",
        "dispose",
        "c",
        "current",
        "get",
        "current",
        "CANCELLED",
        "c",
        "c",
        "dispose",
        "compareAndSet",
        "current",
        "c",
        "run",
        "worker",
        "disposed",
        "run",
        "worker",
        "run",
        "run",
        "worker",
        "worker",
        "Override",
        "disposed",
        "run",
        "run",
        "ex",
        "Exceptions",
        "throwIfFatal",
        "ex",
        "worker",
        "shutdown",
        "Exceptions",
        "propagate",
        "ex",
        "Override",
        "disposed",
        "worker",
        "shutdown",
        "COUNTER",
        "AtomicLongFieldUpdater",
        "newUpdater",
        "CLOCK_DRIFT_TOLERANCE_NANOSECONDS",
        "CLOCK_DRIFT_TOLERANCE_NANOSECONDS",
        "TimeUnit",
        "MINUTES",
        "toNanos",
        "getLong"
    ],
    "literals": [
        "\"\"",
        "\"unchecked\"",
        "\"Check if TestScheduler#enable has been invoked\"",
        "\" first\"",
        "\": \"",
        "\"counter\"",
        "\"reactor.scheduler.drift-tolerance\""
    ],
    "variables": [
        "counter",
        "nanoTime",
        "time",
        "run",
        "scheduler",
        "count",
        "s",
        "s",
        "shutdown",
        "decoratedRun",
        "periodInNanoseconds",
        "count",
        "lastNowNanoseconds",
        "startInNanoseconds",
        "nextTick",
        "run",
        "worker",
        "disposed",
        "CLOCK_DRIFT_TOLERANCE_NANOSECONDS"
    ],
    "comments": [
        "if scheduled time is 0 (immediate) use current virtual time",
        "Only execute if not unsubscribed",
        "for differentiating tasks at same time",
        "If the clock moved in a direction quite a bit, rebase the repetition period"
    ],
    "docstrings": [
        "* Copyright (c) 2011-2016 Pivotal Software Inc, All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "*\n *",
        "* @return a new {@link TestScheduler}",
        "* Assign a singleton {@link TestScheduler} to all or timed-only {@link\n\t * Schedulers.Factory} factories. While the method is thread safe, its usually advised\n\t * to execute such wide-impact BEFORE all tested code runs (setup etc).\n\t *\n\t * @param allSchedulers true if all {@link Schedulers.Factory} factories",
        "* The current {@link TestScheduler} assigned in {@link Schedulers}\n\t * @return current {@link TestScheduler} assigned in {@link Schedulers}\n\t * @throws IllegalStateException if no {@link TestScheduler} has been found",
        "* Re-assign the default Reactor Core {@link Schedulers} factories.\n\t * While the method is thread safe, its usually advised to execute such wide-impact\n\t * AFTER all tested code has been run (teardown etc).",
        "* Triggers any tasks that have not yet been executed and that are scheduled to be\n\t * executed at or before this {@link TestScheduler}'s present time.",
        "* Moves the {@link TestScheduler}'s clock forward by a specified amount of time.\n\t *\n\t * @param delayTime the amount of time to move the {@link TestScheduler}'s clock forward\n\t * @param unit the units of time that {@code delayTime} is expressed in",
        "* Moves the {@link TestScheduler}'s clock to a particular moment in time.\n\t *\n\t * @param delayTime the point in time to move the {@link TestScheduler}'s clock to\n\t * @param unit the units of time that {@code delayTime} is expressed in",
        "* Shift the start point back by the drift as if the whole thing\n                         * started count periods ago."
    ],
    "functions": [
        "TestScheduler",
        "create",
        "enable",
        "TestScheduler",
        "get",
        "reset",
        "TestScheduler",
        "advanceTime",
        "advanceTimeBy",
        "advanceTimeTo",
        "TimedWorker",
        "createWorker",
        "now",
        "Cancellation",
        "schedule",
        "Cancellation",
        "schedule",
        "Cancellation",
        "schedulePeriodically",
        "advanceTime",
        "TimedRunnable",
        "compareTo",
        "compare",
        "TimedOnlyFactory",
        "TimedScheduler",
        "newTimer",
        "AllFactory",
        "Scheduler",
        "newElastic",
        "Scheduler",
        "newParallel",
        "Scheduler",
        "newSingle",
        "TimedScheduler",
        "newTimer",
        "now",
        "Cancellation",
        "schedule",
        "Cancellation",
        "schedule",
        "Cancellation",
        "schedulePeriodically",
        "shutdown",
        "PeriodicTask",
        "run",
        "dispose",
        "replace",
        "PeriodicDirectTask",
        "run",
        "dispose"
    ],
    "classes": [
        "TestScheduler",
        "TimedRunnable",
        "TimedOnlyFactory",
        "AllFactory",
        "TestWorker",
        "PeriodicTask",
        "PeriodicDirectTask"
    ]
}