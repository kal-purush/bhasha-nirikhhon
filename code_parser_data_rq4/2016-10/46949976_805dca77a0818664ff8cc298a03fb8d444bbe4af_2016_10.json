{
    "identifiers": [
        "path",
        "os",
        "multimatch",
        "vscode",
        "fs",
        "vscode",
        "os",
        "vscode",
        "config",
        "config",
        "combVersion",
        "moduleVersion",
        "require",
        "require",
        "combVersion",
        "Comb",
        "require",
        "moduleVersion",
        "combVersion",
        "moduleVersion",
        "filepath",
        "fs",
        "filepath",
        "data",
        "data",
        "err",
        "config",
        "editorConfiguration",
        "vscode",
        "vscode",
        "workspaceConfigFinds",
        "combConfig",
        "readConfig",
        "workspaceConfigFinds",
        "path",
        "osHomeDir",
        "fs",
        "globalConfigPath",
        "globalConfigFinds",
        "combConfig",
        "readConfig",
        "globalConfigPath",
        "combConfig",
        "config",
        "vscode",
        "vscode",
        "selection",
        "vscode",
        "isSupportedSyntax",
        "requireCore",
        "editorConfiguration",
        "combConfig",
        "requireConfig",
        "editorConfiguration",
        "combConfig",
        "vscode",
        "combConfig",
        "combConfig",
        "combConfig",
        "Comb",
        "combConfig",
        "Comb",
        "comb",
        "combConfig",
        "syntax",
        "syntax",
        "selection",
        "selection",
        "vscode",
        "vscode",
        "lastLine",
        "vscode",
        "start",
        "end",
        "text",
        "vscode",
        "selection",
        "selection",
        "text",
        "comb",
        "result",
        "err",
        "err",
        "context",
        "vscode",
        "editorConfiguration",
        "vscode",
        "vscode",
        "textEditor",
        "useComb",
        "textEditor",
        "textEditor",
        "result",
        "textEditor",
        "editBuilder",
        "editBuilder",
        "result",
        "result",
        "err",
        "output",
        "output",
        "vscode",
        "output",
        "output",
        "err",
        "output",
        "vscode",
        "editorConfiguration",
        "editorConfiguration",
        "editorConfiguration",
        "editorConfiguration",
        "excludes",
        "excludes",
        "editorConfiguration",
        "combConfig",
        "combConfig",
        "excludes",
        "excludes",
        "combConfig",
        "excludes",
        "path",
        "vscode",
        "multimatch",
        "currentFile",
        "excludes",
        "useComb",
        "result",
        "vscode",
        "result",
        "result",
        "err",
        "output",
        "output",
        "vscode",
        "output",
        "output",
        "err",
        "output",
        "edit",
        "vscode",
        "workspaceWatcher",
        "requireConfig",
        "editorConfiguration",
        "workspaceWatcher",
        "requireConfig",
        "editorConfiguration",
        "workspaceWatcher",
        "requireConfig",
        "editorConfiguration",
        "vscode",
        "requireConfig",
        "editorConfiguration",
        "context",
        "command",
        "context",
        "onSave",
        "context",
        "workspaceWatcher",
        "context",
        "configurationWatcher"
    ],
    "literals": [
        "'use strict'",
        "'path'",
        "'os'",
        "'multimatch'",
        "'vscode'",
        "'./lib/fs'",
        "string",
        "string",
        "string",
        "string",
        "''",
        "'-next'",
        "''",
        "csscomb${combVersion}",
        "csscomb${moduleVersion}",
        "string",
        "'syntaxError'",
        "'csscomb'",
        "'**/*csscomb.json'",
        "'**∕node_modules∕**'",
        "'.csscomb.json'",
        "'Cannot execute CSScomb because there is not style files. Supported: LESS, SCSS, SASS and CSS.'",
        "'syntaxError'",
        "'Provided JSON file contains syntax errors. Used standard configuration!'",
        "'csscomb'",
        "'string'",
        "'sass'",
        "'csscomb'",
        "'csscomb.execute'",
        "'CSSComb'",
        "string",
        "'CSSComb'",
        "'**/*csscomb.json'"
    ],
    "variables": [
        "osHomeDir",
        "Comb",
        "combVersion",
        "combConfig",
        "editorConfiguration",
        "output",
        "moduleVersion",
        "workspaceConfigFinds",
        "globalConfigPath",
        "globalConfigFinds",
        "comb",
        "syntax",
        "text",
        "lastLine",
        "start",
        "end",
        "result",
        "command",
        "onSave",
        "excludes",
        "currentFile",
        "edit",
        "workspaceWatcher",
        "configurationWatcher"
    ],
    "comments": [
        "\"global\" variables",
        "Update editorConfiguration",
        "Check workspace configuration",
        "Check global configuration",
        "Require CSSComb module & configuration file",
        "If configuration is broken then show error and use standard configuration",
        "If preset is string then get configuration from CSSComb module",
        "Skip formatting code without Editor configuration",
        "Skip excluded files by Editor & CSSComb configuration file",
        "Update configuration only if configuration file was is changed",
        "Subscriptions"
    ],
    "docstrings": [
        "* Update CSSComb module version only if needed.\n *\n * @param {IConfiguration} config",
        "* Read CSSComb configuration file.\n *\n * @param {string} filepath\n * @returns {Promise<any>}",
        "* Update CSSComb configuration only if needed.\n *\n * @param {IConfiguration} config",
        "* Check syntax support.\n *\n * @param {any} ext\n * @returns {boolean}",
        "* Use CSSComb module.\n *\n * @param {vscode.TextDocument} document\n * @param {vscode.Selection} selection\n * @returns {Promise<IResult>}"
    ],
    "functions": [
        "requireCore",
        "readConfig",
        "requireConfig",
        "isSupportedSyntax",
        "useComb",
        "activate"
    ],
    "classes": []
}