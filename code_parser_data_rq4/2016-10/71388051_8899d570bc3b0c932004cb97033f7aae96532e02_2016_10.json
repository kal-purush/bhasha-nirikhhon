{
    "identifiers": [
        "http",
        "url",
        "require",
        "http",
        "seleniumAddress",
        "rootElement",
        "seleniumAddress",
        "rootElement",
        "http",
        "angularWaits",
        "commandPath",
        "commandPath",
        "originalUrl",
        "originalUrl",
        "parts",
        "parts",
        "parts",
        "commandPath",
        "BlockingProxy",
        "commandPath",
        "commandPath",
        "parts",
        "commandsToWaitFor",
        "parts",
        "method",
        "messageUrl",
        "callback",
        "url",
        "options",
        "method",
        "options",
        "parsedUrl",
        "messageUrl",
        "options",
        "parsedUrl",
        "options",
        "parsedUrl",
        "http",
        "options",
        "callback",
        "request",
        "message",
        "data",
        "response",
        "message",
        "message",
        "command",
        "message",
        "response",
        "response",
        "response",
        "message",
        "response",
        "data",
        "response",
        "response",
        "response",
        "response",
        "message",
        "response",
        "response",
        "response",
        "message",
        "response",
        "data",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "originalRequest",
        "originalRequest",
        "resolve",
        "reject",
        "BlockingProxy",
        "originalRequest",
        "stabilityResponse",
        "stabilityResponse",
        "data",
        "stabilityData",
        "data",
        "stabilityResponse",
        "err",
        "err",
        "reject",
        "err",
        "stabilityResponse",
        "stabilityData",
        "value",
        "value",
        "value",
        "value",
        "reject",
        "value",
        "resolve",
        "stabilityRequest",
        "stabilityRequest",
        "deferred",
        "originalRequest",
        "http",
        "response",
        "http",
        "BlockingProxy",
        "originalRequest",
        "originalRequest",
        "d",
        "commandData",
        "d",
        "originalRequest",
        "originalRequest",
        "commandData",
        "response",
        "originalRequest",
        "originalRequest",
        "stabilized",
        "originalRequest",
        "stabilized",
        "originalRequest",
        "originalRequest",
        "seleniumResponse",
        "response",
        "seleniumResponse",
        "seleniumResponse",
        "seleniumResponse",
        "response",
        "originalRequest",
        "seleniumRequest",
        "err",
        "response",
        "response",
        "err",
        "response",
        "port",
        "port",
        "port"
    ],
    "literals": [
        "'http'",
        "'url'",
        "'es6-promise'",
        "'./angular/wait.js'",
        "string",
        "string",
        "'body'",
        "'return ('",
        "').apply(null, arguments);'",
        "string",
        "'/'",
        "'stabilize_proxy'",
        "string",
        "'/'",
        "'execute_async'",
        "'/'",
        "'/'",
        "'executeScript'",
        "'screenshot'",
        "'source'",
        "'title'",
        "'element'",
        "'elements'",
        "'keys'",
        "'moveto'",
        "'click'",
        "'buttondown'",
        "'buttonup'",
        "'doubleclick'",
        "'touch'",
        "'get'",
        "'method'",
        "'path'",
        "'hostname'",
        "'port'",
        "'Got message: '",
        "'/'",
        "'enabled'",
        "'GET'",
        "'POST'",
        "'Invalid method'",
        "'selenium_address'",
        "'GET'",
        "'POST'",
        "'Invalid method'",
        "'Unknown stabilizer proxy command'",
        "'Waiting for stability...'",
        "'POST'",
        "''",
        "'data'",
        "'error'",
        "'end'",
        "'Error while waiting for page to stabilize: '",
        "'Stabilized'",
        "''",
        "'data'",
        "'end'",
        "'Req: '",
        "'Blocking proxy listening on port '"
    ],
    "variables": [
        "angularWaits",
        "parts",
        "parts",
        "commandsToWaitFor",
        "parsedUrl",
        "options",
        "request",
        "command",
        "deferred",
        "stabilityRequest",
        "stabilityData",
        "value",
        "stabilized",
        "commandData",
        "seleniumRequest"
    ],
    "comments": [
        "The ng-app root to use when waiting on the client.",
        "TODO - should this implement some state, and be smart about whether",
        "stabilization is necessary or not? Would that be as simple as GET/POST?",
        "e.g. two gets in a row don't require a wait btwn.",
        "",
        "See https://code.google.com/p/selenium/wiki/JsonWireProtocol for",
        "descriptions of the paths.",
        "We shouldn't stabilize if we haven't loaded the page yet.",
        "TODO - If the response is that angular is not available on the",
        "page, should we just go ahead and continue?",
        "waitForAngular only returns a value if there was an error",
        "in the browser.",
        "If the command is not a proxy command, it's a regular webdriver command."
    ],
    "docstrings": [
        "* The stability proxy is an http server responsible for intercepting\n * JSON webdriver commands. It keeps track of whether the page under test\n * needs to wait for page stability, and initiates a wait if so.",
        "* This command is for the proxy server, not to be forwarded to Selenium.",
        "* Create the WebDriver protocol URL for the executeAsync command.\n   *\n   * @param {string} originalUrl The URL from the incoming command.",
        "* Return true if the requested method should trigger a stabilize first.\n   *\n   * @param {string} commandPath Original request url.",
        "* Creates a request to forward to the Selenium server. The request stream\n   * will not be ended - the user will need to write any data and then call\n   * `.end`.\n   *\n   * @param {string} method\n   * @param {string} messageUrl\n   * @param {function(http.IncomingMessage)} callback\n   *\n   * @return {http.ClientRequest}"
    ],
    "functions": [
        "waitForAngularData",
        "isProxyCommand",
        "executeAsyncUrl",
        "shouldStabilize",
        "createSeleniumRequest",
        "handleProxyCommand",
        "sendRequestToStabilize",
        "requestListener",
        "listen"
    ],
    "classes": [
        "BlockingProxy"
    ]
}