{
    "identifiers": [
        "logging",
        "aexpect",
        "time",
        "re",
        "autotest",
        "client",
        "utils",
        "virttest",
        "error_context",
        "virttest",
        "utils_test",
        "virttest",
        "qemu_devices",
        "qdevices",
        "avocado",
        "core",
        "exceptions",
        "error_context",
        "context_aware",
        "test",
        "env",
        "vm",
        "device",
        "vm",
        "devices",
        "isinstance",
        "device",
        "qdevices",
        "QDevice",
        "device",
        "get_param",
        "rng_list",
        "append",
        "device",
        "rng_list",
        "session",
        "session",
        "cmd_output_safe",
        "verify_cmd",
        "re",
        "findall",
        "output",
        "aexpect",
        "ShellTimeoutError",
        "verify_cmd",
        "exceptions",
        "TestFail",
        "err",
        "rng_devices",
        "get",
        "env",
        "get_vm",
        "vm",
        "verify_alive",
        "vm",
        "wait_for_login",
        "timeout",
        "login_timeout",
        "get",
        "get",
        "error_context",
        "context",
        "logging",
        "info",
        "utils",
        "system",
        "get",
        "error_context",
        "context",
        "logging",
        "info",
        "utils_test",
        "run_virt_sub_test",
        "test",
        "env",
        "sub_test",
        "get",
        "error_context",
        "context",
        "logging",
        "info",
        "get_available_rng",
        "session",
        "get_rng_list",
        "vm",
        "len",
        "rng_devices",
        "len",
        "rng_attached",
        "exceptions",
        "TestFail",
        "len",
        "rng_devices",
        "rng_device",
        "rng_devices",
        "error_context",
        "context",
        "rng_device",
        "logging",
        "info",
        "session",
        "cmd_status",
        "get",
        "rng_device",
        "error_context",
        "context",
        "rng_device",
        "logging",
        "info",
        "utils_test",
        "run_virt_sub_test",
        "test",
        "env",
        "sub_test",
        "get",
        "time",
        "time",
        "time",
        "time",
        "end_time",
        "utils",
        "system",
        "get",
        "ignore_status",
        "get",
        "s"
    ],
    "literals": [
        "\"driver\"",
        "\"virtio-rng-pci\"",
        "\"driver_available_cmd\"",
        "r\"virtio_rng.\\d+\"",
        "\"%s timeout, pls check if it's a product bug\"",
        "\"login_timeout\"",
        "\"main_vm\"",
        "\"sub_test\"",
        "\"pre_cmd\"",
        "\"Fetch data from host\"",
        "\"pre_cmd\"",
        "\"Read rng device in guest\"",
        "\"os_type\"",
        "\"linux\"",
        "\"Query virtio rng device in guest\"",
        "\"The devices get from rng_arriable\"",
        "\" don't match the rng devices attached\"",
        "\"Change virtio rng device to %s\"",
        "\"switch_rng_cmd\"",
        "\"Read from %s in guest\"",
        "\"post_cmd\"",
        "\"post_cmd\"",
        "\"ignore_status\"",
        "\"False\""
    ],
    "variables": [
        "rng_list",
        "verify_cmd",
        "output",
        "rng_devices",
        "err",
        "login_timeout",
        "vm",
        "session",
        "sub_test",
        "rng_devices",
        "rng_attached",
        "end_time",
        "s"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\n    1) Boot up vm with one or more rng devices\n    2) Read from /dev/random in host (optional)\n    3) Run random read in guest\n    4) Switch rng device if there is more than on rng devices\n    5) Run random read in guest\n    6) Read from /dev/random in host (optional)\n    7) Clean random read in host (optional)\n    \"\"\"",
        "\"\"\"\n        Get attached rng devices from device dictionary\n        \"\"\"",
        "\"\"\"\n        Get available rng devices from /sys/devices\n        \"\"\""
    ],
    "functions": [
        "run",
        "get_rng_list",
        "get_available_rng"
    ],
    "classes": []
}