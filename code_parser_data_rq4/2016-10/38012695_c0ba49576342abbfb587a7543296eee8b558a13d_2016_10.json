{
    "identifiers": [
        "org",
        "telegram",
        "updateshandlers",
        "java",
        "util",
        "java",
        "util",
        "org",
        "telegram",
        "BotConfig",
        "org",
        "telegram",
        "telegrambots",
        "api",
        "methods",
        "AnswerCallbackQuery",
        "org",
        "telegram",
        "telegrambots",
        "api",
        "methods",
        "send",
        "SendMessage",
        "org",
        "telegram",
        "telegrambots",
        "api",
        "methods",
        "updatingmessages",
        "EditMessageText",
        "org",
        "telegram",
        "telegrambots",
        "api",
        "objects",
        "CallbackQuery",
        "org",
        "telegram",
        "telegrambots",
        "api",
        "objects",
        "Message",
        "org",
        "telegram",
        "telegrambots",
        "api",
        "objects",
        "Update",
        "org",
        "telegram",
        "telegrambots",
        "api",
        "objects",
        "replykeyboard",
        "InlineKeyboardMarkup",
        "org",
        "telegram",
        "telegrambots",
        "api",
        "objects",
        "replykeyboard",
        "buttons",
        "InlineKeyboardButton",
        "org",
        "telegram",
        "telegrambots",
        "bots",
        "TelegramLongPollingBot",
        "org",
        "telegram",
        "telegrambots",
        "exceptions",
        "TelegramApiException",
        "urls",
        "BACK",
        "NEXT",
        "INDEX_OUT_OF_RANGE",
        "urls",
        "addUrls",
        "Override",
        "BotConfig",
        "ELEKTROLLART_USER",
        "urls",
        "add",
        "urls",
        "add",
        "urls",
        "add",
        "urls",
        "add",
        "urls",
        "add",
        "urls",
        "add",
        "urls",
        "add",
        "urls",
        "add",
        "urls",
        "add",
        "urls",
        "add",
        "urls",
        "add",
        "urls",
        "add",
        "urls",
        "add",
        "urls",
        "add",
        "urls",
        "add",
        "Override",
        "update",
        "update",
        "hasMessage",
        "message",
        "update",
        "getMessage",
        "message",
        "hasText",
        "input",
        "message",
        "getText",
        "input",
        "equals",
        "sendMessagerequest",
        "sendMessagerequest",
        "setChatId",
        "message",
        "getChatId",
        "toString",
        "sendMessagerequest",
        "setText",
        "urls",
        "get",
        "sendMessagerequest",
        "enableMarkdown",
        "sendMessagerequest",
        "setReplyMarkup",
        "getGalleryView",
        "sendMessage",
        "sendMessagerequest",
        "e",
        "e",
        "printStackTrace",
        "update",
        "hasCallbackQuery",
        "callbackquery",
        "update",
        "getCallbackQuery",
        "data",
        "callbackquery",
        "getData",
        "split",
        "index",
        "parseInt",
        "data",
        "data",
        "equals",
        "markup",
        "data",
        "equals",
        "markup",
        "getGalleryView",
        "parseInt",
        "data",
        "index",
        "index",
        "data",
        "equals",
        "markup",
        "getGalleryView",
        "parseInt",
        "data",
        "index",
        "urls",
        "size",
        "index",
        "data",
        "equals",
        "sendAnswerCallbackQuery",
        "callbackquery",
        "e",
        "e",
        "printStackTrace",
        "markup",
        "sendAnswerCallbackQuery",
        "INDEX_OUT_OF_RANGE",
        "callbackquery",
        "e",
        "e",
        "printStackTrace",
        "editMarkup",
        "editMarkup",
        "setChatId",
        "callbackquery",
        "getMessage",
        "getChatId",
        "toString",
        "editMarkup",
        "setInlineMessageId",
        "callbackquery",
        "getInlineMessageId",
        "editMarkup",
        "setText",
        "urls",
        "get",
        "index",
        "editMarkup",
        "enableMarkdown",
        "editMarkup",
        "setMessageId",
        "callbackquery",
        "getMessage",
        "getMessageId",
        "editMarkup",
        "setReplyMarkup",
        "markup",
        "editMessageText",
        "editMarkup",
        "e",
        "e",
        "printStackTrace",
        "text",
        "alert",
        "callbackquery",
        "answerCallbackQuery",
        "answerCallbackQuery",
        "setCallbackQueryId",
        "callbackquery",
        "getId",
        "answerCallbackQuery",
        "setShowAlert",
        "alert",
        "answerCallbackQuery",
        "setText",
        "text",
        "answerCallbackQuery",
        "answerCallbackQuery",
        "index",
        "action",
        "action",
        "index",
        "index",
        "action",
        "index",
        "action",
        "index",
        "urls",
        "size",
        "action",
        "index",
        "markupInline",
        "rowsInline",
        "rowInline",
        "rowInline",
        "add",
        "setText",
        "urls",
        "get",
        "index",
        "setCallbackData",
        "index",
        "rowInline2",
        "rowInline2",
        "add",
        "setText",
        "BACK",
        "setCallbackData",
        "index",
        "rowInline2",
        "add",
        "setText",
        "NEXT",
        "setCallbackData",
        "index",
        "rowInline3",
        "rowInline3",
        "add",
        "setText",
        "setUrl",
        "urls",
        "get",
        "index",
        "rowsInline",
        "add",
        "rowInline",
        "rowsInline",
        "add",
        "rowInline3",
        "rowsInline",
        "add",
        "rowInline2",
        "markupInline",
        "setKeyboard",
        "rowsInline",
        "markupInline",
        "Override",
        "BotConfig",
        "ELEKTROLLART_TOKEN"
    ],
    "literals": [
        "\"⬅️  Back\"",
        "\"Next ➡️\"",
        "\"Requested index is out of range!\"",
        "\"http://www.elektrollart.de/?p=2964\"",
        "\"http://www.elektrollart.de/wp-content/uploads/deer-724x1024.png\"",
        "\"Deer Nature (cc-by)\"",
        "\"http://www.elektrollart.de/?p=2960\"",
        "\"http://www.elektrollart.de/wp-content/uploads/butterfly_wallpaper_by_elektroll-d424m9d-1024x576.png\"",
        "\"Butterfly Wallpaper (cc-by)\"",
        "\"http://www.elektrollart.de/?p=2897\"",
        "\"http://www.elektrollart.de/wp-content/uploads/ilovefs_wallpaper-1024x576.png\"",
        "\"I Love Free Software – Wallpaper (CC0)\"",
        "\"http://www.elektrollart.de/?p=3953\"",
        "\"http://www.elektrollart.de/wp-content/uploads/diaspora_wallpaper_by_elektroll-d4anyj4-1024x576.png\"",
        "\"diaspora Wallpaper (CC-BY-SA)\"",
        "\"http://www.elektrollart.de/?p=549\"",
        "\"http://www.elektrollart.de/wp-content/uploads/diaspora_flower-1024x576.png\"",
        "\"Diaspora Digital Wallpaper (CC-BY-SA)\"",
        "\"http://www.elektrollart.de/?p=534\"",
        "\"http://www.elektrollart.de/wp-content/uploads/debian-butterfly-1024x576.png\"",
        "\"Debian-Butterfly Wallpaper (CC-BY-SA)\"",
        "\"http://www.elektrollart.de/?p=531\"",
        "\"http://www.elektrollart.de/wp-content/uploads/cc-white-1920x1080-1024x576.png\"",
        "\"CC-Wallpaper (CC-BY-NC-SA)\"",
        "\"http://www.elektrollart.de/?p=526\"",
        "\"http://www.elektrollart.de/wp-content/uploads/debian-gal-1920x1080-1024x576.png\"",
        "\"Debian Wallpaper (CC-BY-SA)\"",
        "\"http://www.elektrollart.de/?p=523\"",
        "\"http://www.elektrollart.de/wp-content/uploads/Ubuntusplash-1920x1080-1024x576.png\"",
        "\"Ubuntu Wallpaper (CC-BY-NC-SA)\"",
        "\"http://www.elektrollart.de/?p=559\"",
        "\"http://www.elektrollart.de/wp-content/uploads/skullgirll_a-1024x576.png\"",
        "\"Skullgirl Wallpapers (CC-BY-NC-SA)\"",
        "\"http://www.elektrollart.de/?p=559\"",
        "\"http://www.elektrollart.de/wp-content/uploads/skullgirll_b-1024x576.png\"",
        "\"Skullgirl Wallpapers (CC-BY-NC-SA)\"",
        "\"http://www.elektrollart.de/?p=847\"",
        "\"http://www.elektrollart.de/wp-content/uploads/archlinux_wallpaper-1024x576.png\"",
        "\"ArchLinux (CC0)\"",
        "\"http://www.elektrollart.de/?p=1381\"",
        "\"http://www.elektrollart.de/wp-content/uploads/tuxxi-small-724x1024.png\"",
        "\"Piep (CC-BY)\"",
        "\"http://www.elektrollart.de/?p=4264\"",
        "\"http://www.elektrollart.de/wp-content/uploads/Thngs_left_unsaid-724x1024.jpg\"",
        "\"Things Left Unsaid (CC-BY)\"",
        "\"http://www.elektrollart.de/?p=2334\"",
        "\"http://www.elektrollart.de/wp-content/uploads/redpanda-1024x826.png\"",
        "\"<3 mozilla (CC0)\"",
        "\"/start\"",
        "\"[​](\"",
        "\")\"",
        "\":\"",
        "\"gallery\"",
        "\"back\"",
        "\"next\"",
        "\"text\"",
        "\"Please use one of the given actions below, instead.\"",
        "\"[​](\"",
        "\")\"",
        "\"gallery:text:\"",
        "\"gallery:back:\"",
        "\"gallery:next:\"",
        "\"Link\""
    ],
    "variables": [
        "urls"
    ],
    "comments": [
        "check if the update has a message",
        "check if the message contains a text"
    ],
    "docstrings": [
        "* @author Clevero\n * @version 1.0\n * @brief Handler for updates to ElektrollArtFanBot\n * This bot is an example for using inline buttons, here to make a gallery.\n * Bot contains some images from ElektrollArt that are all licensed under creative commons\n * @date 28 of October of 2016",
        "* Just some sample links of my fav images from elektrollart.de",
        "* we just add the first link from our array\n\t\t\t\t\t * \n\t\t\t\t\t * We use markdown to embedd the image",
        "* \n\t * @param text The text that should be shown\n\t * @param alert If the text should be shown as a alert or not\n\t * @param callbackquery\n\t * @throws TelegramApiException",
        "* \n\t * @param index Index of the current image\n\t * @param action What button was clicked\n\t * @return",
        "* action = 1 -> back\n\t\t * action = 2 -> next\n\t\t * action = -1 -> nothing"
    ],
    "functions": [
        "ElektrollArtFanHandler",
        "getBotUsername",
        "addUrls",
        "onUpdateReceived",
        "sendAnswerCallbackQuery",
        "InlineKeyboardMarkup",
        "getGalleryView",
        "getBotToken"
    ],
    "classes": [
        "ElektrollArtFanHandler"
    ]
}