{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Threading",
        "Threading",
        "Tasks",
        "Baseline",
        "Filesystem",
        "Internal",
        "Extensions",
        "Baseline",
        "Filesystem",
        "CopyDirectoryResponse",
        "CopyDirectoryRequest",
        "copyDirectoryRequest",
        "CancellationToken",
        "cancellationToken",
        "LockFilesystemAsync",
        "ConfigureAwait",
        "ThrowIfDirectoryDoesNotExist",
        "copyDirectoryRequest",
        "SourceDirectoryPath",
        "ThrowIfDirectoryExists",
        "copyDirectoryRequest",
        "DestinationDirectoryPath",
        "_configuration",
        "MemoryFilesystem",
        "GetOrCreateParentDirectoryOf",
        "copyDirectoryRequest",
        "SourceDirectoryPath",
        "_configuration",
        "MemoryFilesystem",
        "GetOrCreateParentDirectoryOf",
        "copyDirectoryRequest",
        "DestinationDirectoryPath",
        "parentOfSourceDirectory",
        "ChildDirectories",
        "copyDirectoryRequest",
        "SourceDirectoryPath",
        "DeepCloneMutableTypes",
        "parentOfDestinationDirectory",
        "ChildDirectories",
        "Add",
        "copyDirectoryRequest",
        "DestinationDirectoryPath",
        "directoryToCopy",
        "TraverseDirectoryAndRewritePaths",
        "directoryToCopy",
        "copyDirectoryRequest",
        "SourceDirectoryPath",
        "copyDirectoryRequest",
        "DestinationDirectoryPath",
        "CopyDirectoryResponse",
        "DestinationDirectory",
        "DirectoryRepresentation",
        "Path",
        "copyDirectoryRequest",
        "DestinationDirectoryPath",
        "CreateDirectoryResponse",
        "CreateDirectoryRequest",
        "createDirectoryRequest",
        "CancellationToken",
        "cancellationToken",
        "LockFilesystemAsync",
        "ConfigureAwait",
        "ThrowIfDirectoryExists",
        "createDirectoryRequest",
        "DirectoryPath",
        "_configuration",
        "MemoryFilesystem",
        "GetOrCreateDirectory",
        "createDirectoryRequest",
        "DirectoryPath",
        "CreateDirectoryResponse",
        "Directory",
        "DirectoryRepresentation",
        "Path",
        "createDirectoryRequest",
        "DirectoryPath",
        "DeleteDirectoryResponse",
        "DeleteDirectoryRequest",
        "deleteDirectoryRequest",
        "CancellationToken",
        "cancellationToken",
        "LockFilesystemAsync",
        "ConfigureAwait",
        "ThrowIfDirectoryDoesNotExist",
        "deleteDirectoryRequest",
        "DirectoryPath",
        "_configuration",
        "MemoryFilesystem",
        "GetOrCreateParentDirectoryOf",
        "deleteDirectoryRequest",
        "DirectoryPath",
        "parentDirectoryOfDirectoryToDelete",
        "ChildDirectories",
        "Remove",
        "deleteDirectoryRequest",
        "DirectoryPath",
        "DeleteDirectoryResponse",
        "IterateDirectoryContentsResponse",
        "IterateDirectoryContentsRequest",
        "iterateDirectoryContentsRequest",
        "CancellationToken",
        "cancellationToken",
        "LockFilesystemAsync",
        "ConfigureAwait",
        "ThrowIfDirectoryDoesNotExist",
        "iterateDirectoryContentsRequest",
        "DirectoryPath",
        "ListContentsUnderPathAndPerformActionUntilCompleteAsync",
        "iterateDirectoryContentsRequest",
        "DirectoryPath",
        "iterateDirectoryContentsRequest",
        "Action",
        "ConfigureAwait",
        "IterateDirectoryContentsResponse",
        "ListDirectoryContentsResponse",
        "ListDirectoryContentsRequest",
        "listDirectoryContentsRequest",
        "CancellationToken",
        "cancellationToken",
        "LockFilesystemAsync",
        "ConfigureAwait",
        "ThrowIfDirectoryDoesNotExist",
        "listDirectoryContentsRequest",
        "DirectoryPath",
        "PathRepresentation",
        "ListContentsUnderPathAndPerformActionUntilCompleteAsync",
        "listDirectoryContentsRequest",
        "DirectoryPath",
        "results",
        "Add",
        "path",
        "FromResult",
        "ConfigureAwait",
        "ListDirectoryContentsResponse",
        "Contents",
        "results",
        "MoveDirectoryResponse",
        "MoveDirectoryRequest",
        "moveDirectoryRequest",
        "CancellationToken",
        "cancellationToken",
        "LockFilesystemAsync",
        "ConfigureAwait",
        "ThrowIfDirectoryDoesNotExist",
        "moveDirectoryRequest",
        "SourceDirectoryPath",
        "ThrowIfDirectoryExists",
        "moveDirectoryRequest",
        "DestinationDirectoryPath",
        "_configuration",
        "MemoryFilesystem",
        "GetOrCreateParentDirectoryOf",
        "moveDirectoryRequest",
        "SourceDirectoryPath",
        "_configuration",
        "MemoryFilesystem",
        "GetOrCreateParentDirectoryOf",
        "moveDirectoryRequest",
        "DestinationDirectoryPath",
        "parentOfSourceDirectory",
        "ChildDirectories",
        "moveDirectoryRequest",
        "SourceDirectoryPath",
        "parentOfDestinationDirectory",
        "ChildDirectories",
        "Add",
        "moveDirectoryRequest",
        "DestinationDirectoryPath",
        "directoryToMove",
        "parentOfSourceDirectory",
        "ChildDirectories",
        "Remove",
        "moveDirectoryRequest",
        "SourceDirectoryPath",
        "TraverseDirectoryAndRewritePaths",
        "parentOfDestinationDirectory",
        "moveDirectoryRequest",
        "SourceDirectoryPath",
        "moveDirectoryRequest",
        "DestinationDirectoryPath",
        "MoveDirectoryResponse",
        "DestinationDirectory",
        "DirectoryRepresentation",
        "Path",
        "moveDirectoryRequest",
        "DestinationDirectoryPath",
        "PathRepresentation",
        "path",
        "Func",
        "PathRepresentation",
        "action",
        "_configuration",
        "MemoryFilesystem",
        "GetOrCreateDirectory",
        "path",
        "TraverseDirectory",
        "PathRepresentation",
        "Path",
        "MemoryDirectoryRepresentation",
        "Representation",
        "directory",
        "action",
        "directory",
        "Path",
        "ConfigureAwait",
        "@continue",
        "file",
        "directory",
        "Representation",
        "Files",
        "Keys",
        "@continue",
        "action",
        "file",
        "ConfigureAwait",
        "@continue",
        "childDirectory",
        "directory",
        "Representation",
        "ChildDirectories",
        "TraverseDirectory",
        "childDirectory",
        "Key",
        "childDirectory",
        "Value",
        "TraverseDirectory",
        "path",
        "directoryToListContentsOf",
        "PathRepresentation",
        "path",
        "_configuration",
        "MemoryFilesystem",
        "DirectoryExists",
        "path",
        "DirectoryAlreadyExistsException",
        "path",
        "NormalisedPath",
        "PathRepresentation",
        "path",
        "_configuration",
        "MemoryFilesystem",
        "DirectoryExists",
        "path",
        "DirectoryNotFoundException",
        "path",
        "NormalisedPath",
        "MemoryDirectoryRepresentation",
        "directoryRepresentation",
        "PathRepresentation",
        "originalPath",
        "PathRepresentation",
        "replacementPath",
        "file",
        "directoryRepresentation",
        "Files",
        "ToList",
        "file",
        "Key",
        "ReplaceDirectoryWithinPath",
        "originalPath",
        "replacementPath",
        "directoryRepresentation",
        "Files",
        "Remove",
        "file",
        "Key",
        "directoryRepresentation",
        "Files",
        "Add",
        "newPath",
        "file",
        "Value",
        "childDirectory",
        "directoryRepresentation",
        "ChildDirectories",
        "ToList",
        "childDirectory",
        "Key",
        "ReplaceDirectoryWithinPath",
        "originalPath",
        "replacementPath",
        "directoryRepresentation",
        "ChildDirectories",
        "Remove",
        "childDirectory",
        "Key",
        "directoryRepresentation",
        "ChildDirectories",
        "Add",
        "newPath",
        "childDirectory",
        "Value",
        "TraverseDirectoryAndRewritePaths",
        "childDirectory",
        "Value",
        "originalPath",
        "replacementPath"
    ],
    "literals": [],
    "variables": [
        "_",
        "parentOfSourceDirectory",
        "parentOfDestinationDirectory",
        "directoryToCopy",
        "_",
        "_",
        "parentDirectoryOfDirectoryToDelete",
        "_",
        "_",
        "results",
        "_",
        "parentOfSourceDirectory",
        "parentOfDestinationDirectory",
        "directoryToMove",
        "directoryToListContentsOf",
        "@continue",
        "newPath",
        "newPath"
    ],
    "comments": [
        "Provides the shared, directory/file agnostic functions of the <see cref=\"IAdapter\"/> implementation within memory.",
        "Perfect for tests or systems that need short-lived, ephemeral data stores.",
        "</summary>",
        "<inheritdoc />",
        "Take the original directory but deep clone any mutable types (i.e. dictionaries).",
        "<inheritdoc />",
        "<inheritdoc />",
        "<inheritdoc />",
        "<inheritdoc />",
        "<inheritdoc />",
        "Recursively traverse the destination directory and replaces any source paths for child directories or files",
        "with that of the new destination directory.",
        "Lists all of the contents under a path (including the provided path itself) and performs a provided action",
        "until either a) all contents have been actioned or b) an action returns false indicating the listing should",
        "stop.",
        "</summary>",
        "Recursive function to traverse a directory and add its path, all of its file paths and the results of all of",
        "its descendants to the result list.",
        "Throws a <see cref=\"DirectoryAlreadyExistsException\"/> if a given directory path already exists.",
        "</summary>",
        "Throws a <see cref=\"DirectoryNotFoundException\"/> if a given directory path does not already.",
        "</summary>",
        "Given a directory within a filesystem, recursively traverse it and replace any paths matching",
        "originalPath with the replacementPath.",
        "</summary>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "CopyDirectoryAsync",
        "CreateDirectoryAsync",
        "DeleteDirectoryAsync",
        "IterateDirectoryContentsAsync",
        "ListDirectoryContentsAsync",
        "MoveDirectoryAsync",
        "ListContentsUnderPathAndPerformActionUntilCompleteAsync",
        "ThrowIfDirectoryExists",
        "ThrowIfDirectoryDoesNotExist",
        "TraverseDirectoryAndRewritePaths"
    ],
    "classes": [
        "MemoryAdapter"
    ]
}