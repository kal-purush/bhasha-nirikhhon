{
    "identifiers": [
        "net",
        "cybercake",
        "cyberapi",
        "bungee",
        "server",
        "commands",
        "net",
        "cybercake",
        "cyberapi",
        "bungee",
        "chat",
        "UChat",
        "net",
        "cybercake",
        "cyberapi",
        "bungee",
        "chat",
        "UTabComp",
        "net",
        "cybercake",
        "cyberapi",
        "bungee",
        "server",
        "commands",
        "cooldown",
        "ActiveCooldown",
        "net",
        "cybercake",
        "cyberapi",
        "common",
        "basic",
        "Time",
        "net",
        "md_5",
        "bungee",
        "api",
        "CommandSender",
        "net",
        "md_5",
        "bungee",
        "api",
        "plugin",
        "TabExecutor",
        "java",
        "util",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "name",
        "CommandInformation",
        "builder",
        "name",
        "information",
        "information",
        "newCommand",
        "build",
        "information",
        "information",
        "getName",
        "information",
        "getPermission",
        "information",
        "getAliases",
        "information",
        "information",
        "information",
        "getPermissionMessage",
        "isEmpty",
        "setPermissionMessage",
        "information",
        "getPermissionMessage",
        "information",
        "information",
        "build",
        "sender",
        "information",
        "ActiveCooldown",
        "cancelCooldownFor",
        "sender",
        "information",
        "information",
        "sender",
        "information",
        "args",
        "sender",
        "information",
        "args",
        "Override",
        "sender",
        "args",
        "information",
        "information",
        "getCooldown",
        "cooldown",
        "ActiveCooldown",
        "getCooldownFor",
        "sender",
        "information",
        "cooldown",
        "cooldown",
        "getExpiration",
        "currentTimeMillis",
        "information",
        "getCooldown",
        "getBypassPermission",
        "information",
        "getCooldown",
        "getBypassPermission",
        "sender",
        "hasPermission",
        "information",
        "getCooldown",
        "getBypassPermission",
        "timeLeft",
        "TimeUnit",
        "SECONDS",
        "convert",
        "cooldown",
        "getExpiration",
        "TimeUnit",
        "MILLISECONDS",
        "TimeUnit",
        "SECONDS",
        "convert",
        "currentTimeMillis",
        "TimeUnit",
        "MILLISECONDS",
        "timeDuration",
        "Time",
        "getBetterTimeDisplay",
        "timeLeft",
        "replace",
        "timeDurationSimplified",
        "Time",
        "getBetterTimeDisplay",
        "timeLeft",
        "timeDurationMilliseconds",
        "Time",
        "formatBasicMs",
        "cooldown",
        "getExpiration",
        "currentTimeMillis",
        "information",
        "getCooldown",
        "getMessage",
        "sender",
        "sendMessage",
        "information",
        "getCooldown",
        "getMessage",
        "replace",
        "timeDuration",
        "replace",
        "timeDurationSimplified",
        "replace",
        "timeDurationMilliseconds",
        "information",
        "getCooldown",
        "getMessage",
        "sender",
        "sendMessage",
        "UChat",
        "bComponent",
        "timeDuration",
        "information",
        "getCooldown",
        "getBypassPermission",
        "sender",
        "hasPermission",
        "information",
        "getCooldown",
        "getBypassPermission",
        "information",
        "getCooldown",
        "getBypassPermission",
        "cancelCooldown",
        "sender",
        "information",
        "ActiveCooldown",
        "setNewCooldown",
        "information",
        "sender",
        "TimeUnit",
        "MILLISECONDS",
        "convert",
        "Time",
        "getUnix",
        "information",
        "getCooldown",
        "getUnit",
        "information",
        "getCooldown",
        "getTime",
        "information",
        "getCooldown",
        "getUnit",
        "perform",
        "perform",
        "sender",
        "information",
        "args",
        "perform",
        "sender",
        "sendMessage",
        "UChat",
        "bComponent",
        "information",
        "getUsage",
        "Override",
        "sender",
        "args",
        "tab",
        "tab",
        "sender",
        "information",
        "args",
        "tab",
        "UTabComp",
        "emptyList",
        "UTabComp",
        "tabCompletions",
        "information",
        "getTabCompleteType",
        "of",
        "args",
        "get",
        "args",
        "length",
        "tab"
    ],
    "literals": [
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\" and \"",
        "\", \"",
        "\"%remaining_time%\"",
        "\"%remaining_time_simplified%\"",
        "\"%remaining_time_ms%\"",
        "\"&cYou cannot use this command for another &6\"",
        "\"&c!\""
    ],
    "variables": [
        "information"
    ],
    "comments": [
        "if the user currently has a cooldown active",
        "sets a new cooldown since the execution of the command is about to occur"
    ],
    "docstrings": [
        "* Creates an instance of {@link CommandInformation.Builder}, allowing you to customize the stored information on the command.\n     * @param name the name of the command, without the slash\n     * @return a new {@link CommandInformation.Builder} instance\n     * @since 15",
        "* Creates a new {@link BungeeCommand} for the server. This command automatically registers itself and doesn't require a plugin.yml entry.\n     * @param information the {@link CommandInformation} that allows the customization of the stored information of the command, use {@link BungeeCommand#newCommand(String)} to create a {@link CommandInformation} instance\n     * @since 41",
        "* Creates a new {@link BungeeCommand} for the server. This command automatically registers itself and doesn't require a plugin.yml entry.\n     * @param information the {@link CommandInformation} that allows the customization of the stored information of the command, use {@link BungeeCommand#newCommand(String)} to create a {@link CommandInformation} instance\n     * @since 41",
        "* Cancels the cooldown for a specific {@link CommandSender user}, but only for a specific {@link CommandInformation command}\n     * @param information the command that the cooldown needs to be cancelled for\n     * @param sender the user the cooldown should affect\n     * @since 79",
        "* @return the main command attributed to this command\n     * @since 41",
        "* The Bungee command's execution\n     * @param sender the sender that executes the command\n     * @param args the command arguments {@code sender} inputted\n     * @return whether the command was successful or not\n     * @since 15",
        "* The Bungee command's tab completions\n     * @param sender the sender that is tab completing a command\n     * @param args the command arguments {@code sender} has inputted so far\n     * @return what to tab complete\n     * @since 15"
    ],
    "functions": [
        "newCommand",
        "BungeeCommand",
        "BungeeCommand",
        "BungeeCommand",
        "cancelCooldown",
        "CommandInformation",
        "getMainCommand",
        "perform",
        "tab",
        "execute",
        "onTabComplete"
    ],
    "classes": [
        "BungeeCommand"
    ]
}