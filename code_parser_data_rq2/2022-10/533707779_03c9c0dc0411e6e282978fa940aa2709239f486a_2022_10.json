{
    "identifiers": [
        "random",
        "BigNumber",
        "BigNumber",
        "x",
        "y",
        "n",
        "x",
        "y",
        "num",
        "n",
        "n",
        "num",
        "isPrime",
        "prime_list",
        "append",
        "n",
        "prime_list",
        "p",
        "BigNumber",
        "q",
        "BigNumber",
        "e",
        "d",
        "n",
        "plain",
        "BigNumber",
        "e",
        "BigNumber",
        "n",
        "BigNumber",
        "cipher",
        "BigNumber",
        "d",
        "BigNumber",
        "n",
        "BigNumber",
        "primesInRange",
        "primes",
        "random",
        "randrange",
        "len",
        "primes",
        "primes",
        "random",
        "randrange",
        "len",
        "primes",
        "P",
        "Q",
        "primes",
        "random",
        "randrange",
        "len",
        "primes",
        "primes",
        "random",
        "randrange",
        "len",
        "primes",
        "random",
        "randrange",
        "make_keys",
        "P",
        "Q",
        "rsa_encrypt",
        "M",
        "e",
        "N",
        "rsa_decrypt",
        "C",
        "d",
        "N",
        "P",
        "Q",
        "N",
        "M",
        "e",
        "d",
        "C",
        "M2",
        "M",
        "M2"
    ],
    "literals": [
        "f\"P = {P}, Q = {Q}, N = {N}, M = {M}, e = {e}, d = {d}, C = {C}, M2 = {M2}\"",
        "\"RSA Success!!\"",
        "\"RSA Failed...\""
    ],
    "variables": [
        "prime_list",
        "isPrime",
        "isPrime",
        "primes",
        "P",
        "Q",
        "P",
        "Q",
        "M",
        "e",
        "d",
        "N",
        "C",
        "M2"
    ],
    "comments": [
        "BigNumber, mpmath package required",
        "run this before execute: pip install BigNumber mpmath",
        "https://www.delftstack.com/howto/python/python-generate-prime-number/",
        "place your own implementation of make_keys",
        "use e = 65537 as if FIPS standard",
        "place your own implementation of rsa_encrypt",
        "place your own implementation of rsa_decrypt"
    ],
    "docstrings": [],
    "functions": [
        "primesInRange",
        "make_keys",
        "rsa_encrypt",
        "rsa_decrypt"
    ],
    "classes": []
}