{
    "identifiers": [
        "describe",
        "length",
        "length",
        "abcRange",
        "length",
        "length",
        "num",
        "num",
        "beforeEach",
        "test",
        "expect",
        "expect",
        "test",
        "abcRange",
        "character",
        "character",
        "expect",
        "test",
        "abcRange",
        "character",
        "character",
        "expect",
        "expect",
        "expect",
        "test",
        "expect",
        "expect",
        "expect",
        "abcRange",
        "character",
        "character",
        "expect",
        "expect",
        "expect",
        "expect",
        "test",
        "abcRange",
        "character",
        "character",
        "expect",
        "expect",
        "expect",
        "expect",
        "expect",
        "value",
        "value",
        "ans",
        "index",
        "index",
        "index",
        "index",
        "index",
        "ans",
        "index",
        "i",
        "i",
        "i",
        "i",
        "describe",
        "length",
        "length",
        "abcRange",
        "length",
        "length",
        "num",
        "num",
        "beforeEach",
        "test",
        "expect",
        "expect",
        "test",
        "abcRange",
        "character",
        "character",
        "expect",
        "test",
        "abcRange",
        "character",
        "character",
        "expect",
        "expect",
        "expect",
        "test",
        "expect",
        "expect",
        "expect",
        "abcRange",
        "character",
        "character",
        "expect",
        "expect",
        "expect",
        "expect",
        "test",
        "abcRange",
        "character",
        "character",
        "expect",
        "expect",
        "expect",
        "expect",
        "expect"
    ],
    "literals": [
        "\"ArrayList\"",
        "\"constructor\"",
        "\"push\"",
        "\"pop\"",
        "\"c\"",
        "\"get\"",
        "\"first\"",
        "\"first\"",
        "\"second\"",
        "\"second\"",
        "\"first\"",
        "\"z\"",
        "\"first\"",
        "\"h\"",
        "\"y\"",
        "\"delete\"",
        "\"m\"",
        "\"o\"",
        "\"b\"",
        "\"ArrayList\"",
        "\"constructor\"",
        "\"push\"",
        "\"pop\"",
        "\"c\"",
        "\"get\"",
        "\"first\"",
        "\"first\"",
        "\"second\"",
        "\"second\"",
        "\"first\"",
        "\"z\"",
        "\"first\"",
        "\"h\"",
        "\"y\"",
        "\"delete\"",
        "\"m\"",
        "\"o\"",
        "\"b\""
    ],
    "variables": [
        "abcRange",
        "ans",
        "ans",
        "i",
        "index",
        "abcRange"
    ],
    "comments": [
        "ArrayList\n  \n  We are going to approximate an implementation of ArrayList. In JavaScript terms, that means we are\n  going to implement an array using objects. You should not use arrays at all in this exercise, just\n  objects. Make a class (or constructor function; something you can call new on) called ArrayList.\n  ArrayList should have the following properties (in addition to whatever properties you create):\n  \n  length - integer  - How many elements in the array\n  push   - function - accepts a value and adds to the end of the list\n  pop    - function - removes the last value in the list and returns it\n  get    - function - accepts an index and returns the value at that position\n  delete - function - accepts an index, removes value from list, collapses, \n                      and returns removed value\n\n  As always, you can change describe to xdescribe to prevent the unit tests from running while\n  you work",
        "code goes here",
        "unit tests",
        "do not modify the below code",
        "ArrayList\n  \n  We are going to approximate an implementation of ArrayList. In JavaScript terms, that means we are\n  going to implement an array using objects. You should not use arrays at all in this exercise, just\n  objects. Make a class (or constructor function; something you can call new on) called ArrayList.\n  ArrayList should have the following properties (in addition to whatever properties you create):\n  \n  length - integer  - How many elements in the array\n  push   - function - accepts a value and adds to the end of the list\n  pop    - function - removes the last value in the list and returns it\n  get    - function - accepts an index and returns the value at that position\n  delete - function - accepts an index, removes value from list, collapses, \n                      and returns removed value\n\n  As always, you can change describe to xdescribe to prevent the unit tests from running while\n  you work",
        "unit tests",
        "do not modify the below code"
    ],
    "docstrings": [],
    "functions": [
        "push",
        "pop",
        "get",
        "_collapseTo",
        "serialize"
    ],
    "classes": []
}