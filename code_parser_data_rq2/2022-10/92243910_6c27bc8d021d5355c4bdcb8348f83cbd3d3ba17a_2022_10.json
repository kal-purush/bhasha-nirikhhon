{
    "identifiers": [
        "Linq",
        "Threading",
        "Tasks",
        "ClusterTest",
        "Messages",
        "FluentAssertions",
        "Xunit",
        "Proto",
        "Cluster",
        "Tests",
        "Fact",
        "Fixture",
        "fixture",
        "InitializeAsync",
        "fixture",
        "Members",
        "First",
        "CreateIdentity",
        "member",
        "RequestAsync",
        "Pong",
        "identity",
        "EchoActor",
        "Kind",
        "Ping",
        "CancellationTokens",
        "FromSeconds",
        "fixture",
        "SpawnNode",
        "member",
        "PidCache",
        "TryGet",
        "ClusterIdentity",
        "Create",
        "identity",
        "EchoActor",
        "Kind",
        "pid",
        "PID",
        "FromAddress",
        "otherMember",
        "Address",
        "pid",
        "Id",
        "member",
        "PidCache",
        "TryUpdate",
        "ClusterIdentity",
        "Create",
        "identity",
        "EchoActor",
        "Kind",
        "newPid",
        "pid",
        "Assert",
        "Fail",
        "Assert",
        "Fail",
        "member",
        "RequestAsync",
        "identity",
        "EchoActor",
        "Kind",
        "Ping",
        "CancellationTokens",
        "FromSeconds",
        "response",
        "Should",
        "BeOfType",
        "Pong",
        "baseId",
        "Guid",
        "NewGuid",
        "ToString",
        "Substring",
        "baseId",
        "BaseInMemoryClusterFixture",
        "clusterSize",
        "clusterSize",
        "cc",
        "WithActorRequestTimeout",
        "TimeSpan",
        "FromSeconds"
    ],
    "literals": [
        "\"dead-letter-test\"",
        "\"Failed to replace actor's pid with a fake one in the pid cache\"",
        "\"Did not find expected actor identity in the pid cache\"",
        "\"N\""
    ],
    "variables": [
        "fixture",
        "member",
        "identity",
        "otherMember",
        "newPid",
        "response"
    ],
    "comments": [
        "make sure the actor is created and the PID is cached",
        "pretend we have an invalid PID in the cache",
        "check if the correct response type is returned"
    ],
    "docstrings": [],
    "functions": [
        "ShouldRetryRequestOnDeadLetterResponseRegardlessOfResponseType",
        "CreateIdentity",
        "Fixture"
    ],
    "classes": [
        "RetryOnDeadLetterTests",
        "Fixture"
    ]
}