{
    "identifiers": [
        "java",
        "util",
        "Scanner",
        "args",
        "keyboardIn",
        "customerType",
        "unitsEntered",
        "totalUnits",
        "meterType",
        "years",
        "noOfBusinesses",
        "counter",
        "standingCharge",
        "excessUnits",
        "standardUnits",
        "businessUnits",
        "vat",
        "grandTotal",
        "totalUnitCost",
        "januaryDiscount",
        "discountApplied",
        "net",
        "customerType",
        "keyboardIn",
        "next",
        "charAt",
        "customerType",
        "customerType",
        "unitsEntered",
        "keyboardIn",
        "nextInt",
        "totalUnits",
        "unitsEntered",
        "meterType",
        "keyboardIn",
        "next",
        "charAt",
        "meterType",
        "meterType",
        "standingCharge",
        "years",
        "keyboardIn",
        "nextInt",
        "years",
        "totalUnits",
        "discountApplied",
        "totalUnits",
        "totalUnits",
        "januaryDiscount",
        "totalUnits",
        "excessUnits",
        "totalUnits",
        "standardUnits",
        "totalUnitCost",
        "excessUnits",
        "standardUnits",
        "totalUnitCost",
        "totalUnits",
        "discountApplied",
        "totalUnits",
        "totalUnitCost",
        "totalUnits",
        "excessUnits",
        "totalUnits",
        "standardUnits",
        "totalUnitCost",
        "excessUnits",
        "standardUnits",
        "totalUnitCost",
        "totalUnits",
        "vat",
        "totalUnitCost",
        "standingCharge",
        "net",
        "totalUnitCost",
        "standingCharge",
        "grandTotal",
        "totalUnitCost",
        "standingCharge",
        "vat",
        "unitsEntered",
        "discountApplied",
        "unitsEntered",
        "discountApplied",
        "totalUnitCost",
        "standingCharge",
        "net",
        "vat",
        "grandTotal",
        "meterType",
        "meterType",
        "standingCharge",
        "years",
        "keyboardIn",
        "nextInt",
        "years",
        "totalUnits",
        "discountApplied",
        "totalUnits",
        "totalUnits",
        "januaryDiscount",
        "totalUnits",
        "excessUnits",
        "totalUnits",
        "standardUnits",
        "totalUnitCost",
        "excessUnits",
        "standardUnits",
        "totalUnitCost",
        "totalUnits",
        "discountApplied",
        "totalUnits",
        "totalUnitCost",
        "totalUnits",
        "excessUnits",
        "totalUnits",
        "standardUnits",
        "totalUnitCost",
        "excessUnits",
        "standardUnits",
        "totalUnitCost",
        "totalUnits",
        "vat",
        "totalUnitCost",
        "standingCharge",
        "net",
        "totalUnitCost",
        "standingCharge",
        "grandTotal",
        "totalUnitCost",
        "standingCharge",
        "vat",
        "unitsEntered",
        "discountApplied",
        "unitsEntered",
        "discountApplied",
        "totalUnitCost",
        "standingCharge",
        "net",
        "vat",
        "grandTotal",
        "customerType",
        "customerType",
        "totalUnits",
        "noOfBusinesses",
        "keyboardIn",
        "nextInt",
        "counter",
        "counter",
        "noOfBusinesses",
        "counter",
        "counter",
        "businessUnits",
        "keyboardIn",
        "nextInt",
        "totalUnits",
        "totalUnits",
        "businessUnits",
        "totalUnitCost",
        "totalUnits",
        "standingCharge",
        "vat",
        "totalUnitCost",
        "standingCharge",
        "net",
        "totalUnitCost",
        "standingCharge",
        "grandTotal",
        "totalUnitCost",
        "standingCharge",
        "vat",
        "totalUnits",
        "totalUnitCost",
        "standingCharge",
        "net",
        "vat",
        "grandTotal"
    ],
    "literals": [
        "\"What type of customer are you? Residential (R) or Business(B)\"",
        "\"How many units did you use this month?\"",
        "\"What type of meter do you have? Urban (U) or Rural (R)\"",
        "\"How many years have you been a customer with us?\"",
        "\"Congratulations! You are eligible for a reduction of up to 200 units this month\"",
        "\"\\nElectric Bill for month ending 31st January 2022\"",
        "\"Total Units: \"",
        "\"Total Units Discounted: -\"",
        "\"\\nTotal Units to be charged: \"",
        "\"Total Unit Cost: �\"",
        "\"Standing Charge: �\"",
        "\"Total net Charge: �\"",
        "\"VAT at 13.5%: �\"",
        "\"Your total payment due is �\"",
        "\"How many years have you been a customer with us?\"",
        "\"Congratulations! You are eligible for a reduction of up to 200 units this month\"",
        "\"\\nElectric Bill for month ending 31st January 2022\"",
        "\"Total Units: \"",
        "\"Total Units Discounted: -\"",
        "\"\\nTotal Units to be charged: \"",
        "\"Total Unit Cost: �\"",
        "\"Standing Charge: �\"",
        "\"Total net Charge: �\"",
        "\"VAT at 13.5%: �\"",
        "\"Your total payment due is �\"",
        "\"Invalid option.\"",
        "\"How many businesses do you have with us?\"",
        "\"How many units were used for business number\"",
        "\"?\"",
        "\"Electric Bill for month ending 31st January 2022\"",
        "\"Total Units: \"",
        "\"Total Unit Cost: �\"",
        "\"Standing Charge: �\"",
        "\"Total net Charge: �\"",
        "\"VAT at 13.5%: �\"",
        "\"Your total payment due is �\"",
        "\".\"",
        "\"Invalid\""
    ],
    "variables": [
        "customerType",
        "meterType",
        "years",
        "noOfBusinesses",
        "counter",
        "excessUnits",
        "standardUnits",
        "businessUnits",
        "net"
    ],
    "comments": [
        "import scanner class for input",
        "declare variables",
        "store the next character typed as a variable",
        "if statement for customer type",
        "store the next integer typed as a variable",
        "store the next character typed as a variable",
        "nested if statement for meter type. This is for Residential customers with an Urban meter",
        "standing charge amount for Urban customer",
        "store the next integer as a variable",
        "nested if statement for whether a customer was with the company for more than three years or not",
        "nested if statement to take into account the different costs for units under/over 200",
        "else statement related to the above as if total units are under 200 then all units will be 18c each",
        "vat calculation",
        "net calculation",
        "gross calculation",
        "else if statement related to meter type. This is for Residential customers with a Rural meter",
        "standing charge amount for Rural customer",
        "store next int as variable",
        "nested if statement for whether a customer was with the company for more than three years or not",
        "nested if statement to take into account the different costs for units under/over 200",
        "else statement related to the above as if total units are under 200 then all units will be 18c each",
        "vat calculation",
        "net calculation",
        "gross calculation",
        "else statement related to meter type. This is if someone enters an incorrect option",
        "else if statement related to customer type. This is for business customers",
        "store next integer as a variable",
        "store next integer as variable",
        "standing charge for business customers",
        "vat calculation",
        "net calculation",
        "gross calculation",
        "else statement related to customer type. This is for if someone enters an incorrect option"
    ],
    "docstrings": [
        "Jayne Lehenbauer\nL00170184",
        "I want to keep unitsEntered variable as it was entered, but I need to do calculations on the amount so making\n            a new variable to store the amount and make calculations without affecting the original value",
        "nested if statement for discount to be applied. If customer entered less than 200 units then taking 200 \n                  away would give a negative amount. There should only be a minimum of 0 units being charged. This calculation \n                  also takes into account the different costs for units under/over 200",
        "else statement related to the nested if statement for discount to be applied. This is for people who \n                  less than 200 units so the January discount will reduce their units to 0",
        "else statement related to the nested if statement for whether a customer was with the company for more than \n               three years or not",
        "nested if statement for discount to be applied. If customer entered less than 200 units then taking 200 \n                  away would give a negative amount. There should only be a minimum of 0 units being charged. This calculation \n                  also takes into account the different costs for units under/over 200",
        "else statement related to the nested if statement for discount to be applied. This is for people who \n                  less than 200 units so the January discount will reduce their units to 0",
        "else statement related to the nested if statement for whether a customer was with the company for more than \n               three years or not",
        "for statement to ask for the units of each business based on the number of businesses entered by the \n            customer. The units for each business will be added to the totalUnits variable during each loop and at the\n            end there will be a total number of units for all businesses combined"
    ],
    "functions": [
        "main"
    ],
    "classes": [
        "lyitElectric4"
    ]
}