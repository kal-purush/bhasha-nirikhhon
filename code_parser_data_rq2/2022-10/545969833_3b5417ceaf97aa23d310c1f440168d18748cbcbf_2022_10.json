{
    "identifiers": [
        "taskComponent",
        "taskComponent",
        "inputValue",
        "column",
        "column",
        "inputValue",
        "index",
        "column",
        "column",
        "index",
        "index",
        "column",
        "column",
        "index",
        "targetColumn",
        "evt",
        "targetIndex",
        "evt",
        "targetColumn",
        "targetColumn",
        "targetNotes",
        "evt",
        "targetIndex",
        "targetNotes",
        "targetIndex",
        "dragNote",
        "targetIndex",
        "targetNotes",
        "targetIndex",
        "dragNote",
        "targetNotes",
        "dragNote",
        "targetColumn",
        "dragNotes",
        "evt",
        "targetNotes",
        "targetIndex",
        "dragNote",
        "targetNotes",
        "dragNote",
        "Vue",
        "App",
        "app"
    ],
    "literals": [
        "'./taskComponent.js'",
        "''",
        "''",
        "'drag-js'",
        "'task-component'",
        "<task-component \n      v-for=\"col in columns\"\n      :column=\"col.column\"\n      :notes=\"col.notes\"\n      :dragClass=\"dragClass\"\n      @removeNoteEvent=\"removeNote\"\n      @addNodeEvent=\"addNote\"\n      @startDragEvent=\"startDrag\"\n      @dropEvent=\"drop\"\n    ></task-component>",
        "'#app'"
    ],
    "variables": [
        "App",
        "dragNote",
        "dragNotes",
        "targetNotes",
        "app"
    ],
    "comments": [
        "app.component('task-component', {",
        "props: ['column', 'notes', 'dragClass'],",
        "emits: ['removeNoteEvent','addNodeEvent', 'startDragEvent', 'dropEvent'],",
        "data() {",
        "return {",
        "inputValue: '',",
        "}",
        "},",
        "methods: {",
        "inputChange(event) {",
        "this.inputValue = event.target.value;",
        "},",
        "validateInput(event) {",
        "if (event.target.value.length >= 15) {",
        "event.preventDefault();",
        "}",
        "},",
        "addNote() {",
        "if (this.inputValue !== '') {",
        "this.$emit('addNodeEvent', this.inputValue, this.column);",
        "this.inputValue = '';",
        "}",
        "},",
        "enterDragEvent(evt) {",
        "evt.target.classList.add('activeItem');",
        "},",
        "leaveDragEvent(evt) {",
        "evt.target.classList.remove('activeItem');",
        "}",
        "},",
        "template:",
        "`",
        "<div class=\"column\"",
        "@drop=\"$emit('dropEvent', column, $event, index)\"",
        "@dragover.prevent",
        "@dragenter.prevent",
        ">",
        "<div class=\"column__head\">",
        "<input",
        "type=\"text\"",
        "placeholder=\"enter note\"",
        ":value=\"inputValue\"",
        "@input=\"inputChange\"",
        "@keypress.enter=\"addNote\"",
        "@keypress=\"validateInput\"",
        ">",
        "<button @click=\"addNote\">add note</button>",
        "</div>",
        "<ul>",
        "<li",
        "v-for=\"(note, index) in notes\"",
        ">",
        "<div",
        "class=\"content\"",
        ":class=\"dragClass\"",
        "draggable=\"true\"",
        "@drop=\"leaveDragEvent($event), $emit('dropEvent', column, $event, index)\"",
        "@dragover.prevent",
        "@dragenter.prevent",
        "@dragstart=\"$emit('startDragEvent', index, column, $event)\"",
        "@dragenter=\"enterDragEvent($event)\"",
        "@dragleave=\"leaveDragEvent($event)\"",
        ">{{ note }}</div>",
        "<button @click=\"$emit('removeNoteEvent', index, column)\">remove</button>",
        "</li>",
        "</ul>",
        "</div>",
        "`",
        "});"
    ],
    "docstrings": [],
    "functions": [
        "data",
        "addNote",
        "removeNote",
        "startDrag",
        "drop"
    ],
    "classes": []
}