{
    "identifiers": [
        "absolute_import",
        "division",
        "print_function",
        "unicode_literals",
        "typing",
        "Dict",
        "Text",
        "Any",
        "Union",
        "Type",
        "Optional",
        "typing",
        "logging",
        "requests",
        "json",
        "re",
        "csv",
        "random",
        "rasa_sdk",
        "events",
        "SlotSet",
        "AllSlotsReset",
        "EventType",
        "rasa_sdk",
        "types",
        "DomainDict",
        "rasa_sdk",
        "Tracker",
        "FormValidationAction",
        "rasa_sdk",
        "executor",
        "CollectingDispatcher",
        "Action",
        "datetime",
        "datetime",
        "date",
        "time",
        "timedelta",
        "logging",
        "getLogger",
        "logger",
        "debug",
        "vers",
        "tracker",
        "event_type",
        "Text",
        "action_names_to_exclude",
        "Text",
        "skip",
        "Optional",
        "Any",
        "e",
        "e",
        "e",
        "event_type",
        "e",
        "e",
        "event_type",
        "e",
        "event_type",
        "e",
        "e",
        "has_instance",
        "excluded",
        "filter_function",
        "reversed",
        "tracker",
        "events",
        "i",
        "skip",
        "next",
        "filtered",
        "next",
        "filtered",
        "tracker",
        "logger",
        "debug",
        "format",
        "len",
        "tracker",
        "events",
        "get_last_event_for",
        "tracker",
        "skip",
        "logger",
        "debug",
        "format",
        "prev_user_event",
        "prev_user_event",
        "prev_user_event",
        "tracker",
        "get_slot",
        "logger",
        "debug",
        "format",
        "feedback_answer",
        "Action",
        "dispatcher",
        "tracker",
        "domain",
        "json",
        "loads",
        "requests",
        "get",
        "text",
        "request",
        "dispatcher",
        "utter_message",
        "joke",
        "Action",
        "dispatcher",
        "tracker",
        "domain",
        "json",
        "loads",
        "requests",
        "get",
        "text",
        "request",
        "dispatcher",
        "utter_message",
        "joke",
        "Action",
        "dispatcher",
        "tracker",
        "domain",
        "json",
        "loads",
        "requests",
        "get",
        "text",
        "logger",
        "debug",
        "format",
        "request",
        "request",
        "logger",
        "debug",
        "format",
        "joke",
        "dispatcher",
        "utter_message",
        "joke",
        "Action",
        "dispatcher",
        "tracker",
        "domain",
        "json",
        "loads",
        "requests",
        "get",
        "text",
        "request",
        "request",
        "quote",
        "author",
        "dispatcher",
        "utter_message",
        "message",
        "Action",
        "dispatcher",
        "tracker",
        "domain",
        "kwargs",
        "requests",
        "get",
        "req",
        "status_code",
        "json",
        "loads",
        "req",
        "text",
        "request",
        "request",
        "requests",
        "exceptions",
        "RequestException",
        "e",
        "logger",
        "error",
        "e",
        "quote",
        "author",
        "dispatcher",
        "utter_message",
        "message",
        "Action",
        "dispatcher",
        "tracker",
        "domain",
        "requests",
        "get",
        "request",
        "status_code",
        "logger",
        "info",
        "format",
        "request",
        "text",
        "re",
        "sub",
        "request",
        "text",
        "json",
        "loads",
        "resp",
        "resp",
        "resp",
        "quote",
        "author",
        "permalink",
        "request",
        "status_code",
        "dispatcher",
        "utter_message",
        "message",
        "Action",
        "dispatcher",
        "tracker",
        "domain",
        "json",
        "loads",
        "requests",
        "get",
        "text",
        "request",
        "request",
        "request",
        "quote",
        "author",
        "permalink",
        "dispatcher",
        "utter_message",
        "message",
        "Action",
        "dispatcher",
        "tracker",
        "domain",
        "json",
        "loads",
        "requests",
        "get",
        "text",
        "request",
        "dispatcher",
        "utter_message",
        "joke",
        "Action",
        "dispatcher",
        "tracker",
        "domain",
        "random",
        "randint",
        "len",
        "quotes",
        "dispatcher",
        "utter_message",
        "quotes",
        "n",
        "Action",
        "Text",
        "duckling_time",
        "grain",
        "re",
        "duckling_time",
        "duckling_time",
        "grain",
        "logger",
        "info",
        "duckling_time",
        "datetime",
        "strptime",
        "duckling_time",
        "logger",
        "info",
        "duckling_dt",
        "duckling_dt",
        "timedelta",
        "hours",
        "dt_delta",
        "strftime",
        "dispatcher",
        "tracker",
        "domain",
        "EventType",
        "tracker",
        "get_slot",
        "tracker",
        "get_slot",
        "tracker",
        "get_slot",
        "logger",
        "info",
        "duckling_time",
        "duckling_time",
        "to_time",
        "from_time",
        "duckling_time",
        "tracker",
        "get_slot",
        "tracker",
        "get_slot",
        "logger",
        "info",
        "tracker",
        "latest_message",
        "tracker",
        "latest_message",
        "get",
        "logger",
        "info",
        "entities",
        "e",
        "e",
        "e",
        "entities",
        "logger",
        "info",
        "entities",
        "tracker",
        "latest_message",
        "get",
        "logger",
        "info",
        "additional_info",
        "tracker",
        "current_state",
        "state",
        "logger",
        "info",
        "intent",
        "intent",
        "to_time",
        "logger",
        "info",
        "duckling_time",
        "duckling_time",
        "_extractRange",
        "duckling_time",
        "additional_info",
        "logger",
        "info",
        "from_time",
        "to_time",
        "dispatcher",
        "utter_message",
        "text",
        "from_time",
        "to_time",
        "SlotSet",
        "from_time",
        "SlotSet",
        "to_time"
    ],
    "literals": [
        "\"vers: 0.1.3, date: Apr 27, 2022\"",
        "\"event\"",
        "\"event\"",
        "\"event\"",
        "\"parse_data\"",
        "\"intent\"",
        "\"name\"",
        "\"domicile\"",
        "\"parse_data\"",
        "\"intent\"",
        "\"name\"",
        "\"customertype\"",
        "\"tracker now has {} events\"",
        "\"user\"",
        "\"event.text: {}, intent: {}, confidence: {}\"",
        "\"text\"",
        "\"parse_data\"",
        "\"intent\"",
        "\"name\"",
        "\"parse_data\"",
        "\"intent\"",
        "\"confidence\"",
        "\"feedback\"",
        "\"feedback: {}\"",
        "\"action_kanye\"",
        "\"https://api.kanye.rest\"",
        "\"quote\"",
        "\"action_chuck\"",
        "\"https://api.chucknorris.io/jokes/random\"",
        "\"value\"",
        "\"action_ron\"",
        "\"https://ron-swanson-quotes.herokuapp.com/v2/quotes\"",
        "\"request: {}\"",
        "\" - Ron Swanson\"",
        "\"joke: {}\"",
        "\"action_breaking\"",
        "\"https://breaking-bad-quotes.herokuapp.com/v1/quotes\"",
        "\"author\"",
        "\"quote\"",
        "\" - \"",
        "\"action_corny\"",
        "\"API Failure\"",
        "\"\"",
        "\"\"",
        "\"Sorry, API Service down\"",
        "\"https://official-joke-api.appspot.com/random_joke\"",
        "\"punchline\"",
        "\"setup\"",
        "f\"HTTP Error: {e}\"",
        "\" - \"",
        "\"action_inspiring\"",
        "\"https://api.forismatic.com/api/1.0/?method=getQuote&lang=en&format=json\"",
        "\"request.text: {}\"",
        "r'(?<!\\\\)\\\\(?![\"\\\\/bfnrt]|u[0-9a-fA-F]{4})'",
        "r\"\"",
        "\"quoteAuthor\"",
        "\"quoteText\"",
        "\"quoteLink\"",
        "\" - [\"",
        "\"](\"",
        "\")\"",
        "\"quote service error (exceeded max free quotes?), error: \"",
        "\"action_geek\"",
        "\"http://quotes.stormconsultancy.co.uk/random.json\"",
        "\"author\"",
        "\"quote\"",
        "\"permalink\"",
        "\" - [\"",
        "\"](\"",
        "\")\"",
        "\"action_trump\"",
        "\"https://api.whatdoestrumpthink.com/api/v1/quotes/random\"",
        "\"message\"",
        "\" - Donald Trump\"",
        "\"I wanna do a cartwheel. But real casual like. Not enough to make a big deal out of it, but I know everyone saw it. One stunning, gorgeous cartwheel\"",
        "\"I've been involved in a number of cults, both a leader and a follower. You have more fun as a follower, but you make more money as a leader.\"",
        "\"Just pretend like we're talking until the cops leave.\"",
        "\"I already won the lottery. I was born in the US of A baby. And as backup I have a Swiss passport.\"",
        "\"The Taliban's the worst. Great heroin though.\"",
        "\"I run a small fake-ID company from my car with a laminating machine that I swiped from the Sheriff's station.\"",
        "\"Ryan, you told Toby that Creed has a distinct old man smell\"",
        "\"I know exactly what he's talking about, I sprout mung beans on a damp paper towel in my desk drawer, very nutritious but they smell like death\"",
        "\"Nobody steals from Creed Bratton and gets away with it. The last person to do this disappeared. His name: Creed Bratton.\"",
        "\"The only difference between me and a homeless man is this job. I will do whatever it takes to survive… like I did when I was a homeless man.\"",
        "\"I am not offended by homosexuality, in the sixties I made love to many, many women, often outdoors in the mud & rain. It's possible a man could've slipped in there. There'd be no way of knowing.\"",
        "\"You ever notice you can only ooze two things? Sexuality and pus.\"",
        "\"action_creed\"",
        "\"action_time_range\"",
        "\"from\"",
        "\"to\"",
        "\"day\"",
        "f\"time w/o ms: {duckling_time}\"",
        "\"%Y-%m-%dT%H:%M:%S\"",
        "f\"duckling_dt: {duckling_dt}\"",
        "\"to\"",
        "\"%Y-%m-%dT%H:%M:%S%z\"",
        "\"from_time\"",
        "\"to_time\"",
        "\"time\"",
        "f\"duckling_time: {type(duckling_time)}, value: {duckling_time}, to_time: {to_time}, from_time: {from_time}\"",
        "\"time\"",
        "\"from\"",
        "\"time\"",
        "\"to\"",
        "f\"latest_message: {tracker.latest_message}\"",
        "\"entities\"",
        "f\"entities 1: {entities}\"",
        "\"entity\"",
        "\"value\"",
        "f\"entities: {entities}\"",
        "\"entities\"",
        "\"additional_info\"",
        "f\"grain: {additional_info['grain']}\"",
        "'grain'",
        "\"latest_message\"",
        "\"intent\"",
        "\"name\"",
        "f\"intent: {intent}\"",
        "\"time_from\"",
        "f\"setting from_time: {duckling_time[:19]}\"",
        "\"grain\"",
        "\"from\"",
        "\"to\"",
        "f\"from: {from_time} to: {to_time}\"",
        "f\"from: {from_time}\\n  to: {to_time}\"",
        "\"from_time\"",
        "\"to_time\""
    ],
    "variables": [
        "logger",
        "vers",
        "has_instance",
        "has_instance",
        "excluded",
        "filtered",
        "prev_user_event",
        "feedback_answer",
        "request",
        "joke",
        "request",
        "joke",
        "request",
        "joke",
        "request",
        "author",
        "quote",
        "message",
        "request",
        "author",
        "author",
        "quote",
        "req",
        "request",
        "author",
        "quote",
        "message",
        "request",
        "resp",
        "author",
        "quote",
        "permalink",
        "message",
        "message",
        "request",
        "author",
        "quote",
        "permalink",
        "message",
        "request",
        "joke",
        "quotes",
        "n",
        "duckling_dt",
        "dt_delta",
        "from_time",
        "to_time",
        "duckling_time",
        "from_time",
        "to_time",
        "entities",
        "entities",
        "additional_info",
        "state",
        "intent",
        "from_time",
        "from_time",
        "to_time"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "from . import otel",
        "import tracing",
        "from rasa_core.trackers import (",
        "DialogueStateTracker, ActionExecuted,",
        "EventVerbosity)",
        "from rasa_core.policies.fallback import FallbackPolicy",
        "from rasa_core.domain import Domain",
        "from rasa_core.utils import AvailableEndpoints",
        "from rasa_core.tracker_store import TrackerStore",
        "otel.init_tracer(\"action_server\")",
        "tracer = tracing.init_tracer(\"action_server\")",
        "import copy",
        "Log currently set slots",
        "define the name of the action which can then be included in training stories",
        "with tracing.extract_start_span(",
        "tracer, domain.get(\"headers\"), self.name()",
        "):",
        "r = requests.get(\"https://api.kanye.rest\")",
        "extract a joke from returned json response",
        "send the message back to the user",
        "define the name of the action which can then be included in training stories",
        "make an apie call",
        "extract a joke from returned json response",
        "send the message back to the user",
        "define the name of the action which can then be included in training stories",
        "what your action should do",
        "make an apie call",
        "send the message back to the user",
        "define the name of the action which can then be included in training stories",
        "what your action should do",
        "make an apie call",
        "message = quote + ' - [' + author + '](' + permalink + ')'",
        "send the message back to the user",
        "define the name of the action which can then be included in training stories",
        "what your action should do",
        "make an api call",
        "message = quote + ' - [' + author + '](' + permalink + ')'",
        "send the message back to the user",
        "define the name of the action which can then be included in training stories",
        "what your action should do",
        "message = quote + ' - ' + author + ' ' + permalink",
        "dispatcher.utter_message(message) #send the message back to the user",
        "send the message back to the user",
        "define the name of the action which can then be included in training stories",
        "what your action should do",
        "make an apie call",
        "message = quote + ' - ' + author + ' ' + permalink",
        "send the message back to the user",
        "define the name of the action which can then be included in training stories",
        "what your action should do",
        "make an apie call",
        "send the message back to the user",
        "send the message back to the user",
        "strip timezone because of strptime limitation - https://bugs.python.org/issue22377",
        "2020-02-06T00:00:00.000-08:00",
        "duckling_time = re.sub(r'\\.000', r' ', duckling_time)",
        "duckling_time = duckling_time[:19]",
        "dt = datetime.strptime(\"2020-03-07T00:00:00 -07:00\", \"%Y-%m-%dT%H:%M:%S %z\")",
        "existing slot values",
        "duckling value",
        "do we have a range",
        "entities = {e[\"entity\"]: e[\"value\"] for e in entities}",
        "logger.info(f\"entities 2: {entities}\")",
        "entities_json = json.dumps(entities)",
        "date = datetime.datetime.now().strftime(\"%d/%m/%Y\")",
        "dispatcher.utter_message(text=entities_json)"
    ],
    "docstrings": [
        "\"\"\"Calculate time range\n    ToDo:\n      - Support additional grains (week, month, year)\n      - Start date must be before end, when `time_from` is set, could be a later date\n      - Fixup future dates\n      - Handle null duckling entity, \"start last weds\"\n      - Relative statements - \"add a week\"\n    \"\"\""
    ],
    "functions": [
        "get_last_event_for",
        "filter_function",
        "log_slots",
        "name",
        "run",
        "name",
        "run",
        "name",
        "run",
        "name",
        "run",
        "name",
        "run",
        "name",
        "run",
        "name",
        "run",
        "name",
        "run",
        "name",
        "run",
        "name",
        "_extractRange",
        "run"
    ],
    "classes": [
        "ActionKanye",
        "ActionChuck",
        "ActionRon",
        "ActionBreakingBad",
        "ActionCorny",
        "ActionInspiring",
        "ActionGeek",
        "ActionTrump",
        "ActionCreed",
        "ActionDuckingTimeRange"
    ]
}