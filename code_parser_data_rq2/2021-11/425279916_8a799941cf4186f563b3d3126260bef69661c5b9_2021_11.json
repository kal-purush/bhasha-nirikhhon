{
    "identifiers": [
        "require",
        "MapView",
        "Home",
        "TileLayer",
        "Swipe",
        "Expand",
        "BasemapGallery",
        "Locate",
        "TileLayer",
        "TileLayer",
        "TileLayer",
        "TileLayer",
        "TileLayer",
        "ishLayer",
        "mqtLayer",
        "negLayer",
        "repLayer",
        "michLayer",
        "MapView",
        "ishLayer",
        "mqtLayer",
        "negLayer",
        "repLayer",
        "michLayer",
        "slider",
        "ishLayer",
        "mqtLayer",
        "negLayer",
        "repLayer",
        "michLayer",
        "Home",
        "view",
        "view",
        "homeBtn",
        "BasemapGallery",
        "view",
        "Expand",
        "view",
        "basemapGallery",
        "basemapGallery",
        "view",
        "view",
        "mobileSize",
        "bgExpand",
        "view",
        "bgExpand",
        "swipeBtn",
        "swipeBtn",
        "swipeBtn",
        "swipe",
        "Swipe",
        "ishLayer",
        "mqtLayer",
        "negLayer",
        "repLayer",
        "michLayer",
        "view",
        "view",
        "swipe",
        "$",
        "$",
        "view",
        "swipeBtn",
        "closeBtn",
        "closeBtn",
        "closeBtn",
        "swipe",
        "$",
        "$",
        "view",
        "closeBtn",
        "$",
        "Locate",
        "view",
        "view",
        "locateBtn"
    ],
    "literals": [
        "\"esri/Map\"",
        "\"esri/views/MapView\"",
        "\"esri/widgets/Home\"",
        "\"esri/layers/TileLayer\"",
        "\"esri/widgets/Swipe\"",
        "\"esri/widgets/Expand\"",
        "\"esri/widgets/BasemapGallery\"",
        "\"esri/widgets/Locate\"",
        "\"https://tiles.arcgis.com/tiles/b7cJ4YYc9GM63RSz/arcgis/rest/services/marquette1917/MapServer\"",
        "\"https://tiles.arcgis.com/tiles/b7cJ4YYc9GM63RSz/arcgis/rest/services/ispheming1911/MapServer\"",
        "\"https://tiles.arcgis.com/tiles/b7cJ4YYc9GM63RSz/arcgis/rest/services/negaunee1911/MapServer\"",
        "\"https://tiles.arcgis.com/tiles/b7cJ4YYc9GM63RSz/arcgis/rest/services/republic1922/MapServer\"",
        "\"https://tiles.arcgis.com/tiles/b7cJ4YYc9GM63RSz/arcgis/rest/services/michigamme/MapServer\"",
        "\"satellite\"",
        "\"viewDiv\"",
        "\"myRange\"",
        "\"top-left\"",
        "\"div\"",
        "\"activeBasemap\"",
        "\"xsmall\"",
        "\"xsmall\"",
        "\"top-left\"",
        "'div'",
        "\"esri-icon-dock-left esri-widget--button esri-widget esri-interactive\"",
        "\"Compare maps\"",
        "'click'",
        "\"scope\"",
        "\".esri-icon-close\"",
        "\".esri-icon-dock-left\"",
        "\"top-left\"",
        "'div'",
        "\"esri-icon-close esri-widget--button esri-widget esri-interactive\"",
        "\"Exit swipe\"",
        "'click'",
        "\".esri-icon-close\"",
        "\".esri-icon-dock-left\"",
        "\"top-left\"",
        "\".esri-icon-close\"",
        "\"top-left\""
    ],
    "variables": [
        "mqtLayer",
        "ishLayer",
        "negLayer",
        "repLayer",
        "michLayer",
        "view",
        "slider",
        "homeBtn",
        "basemapGallery",
        "bgExpand",
        "mobileSize",
        "swipe",
        "swipeBtn",
        "closeBtn",
        "locateBtn"
    ],
    "comments": [
        "URL points to a cached tiled map service hosted on ArcGIS Server",
        "URL points to a cached tiled map service hosted on ArcGIS Server",
        "URL points to a cached tiled map service hosted on ArcGIS Server",
        "URL points to a cached tiled map service hosted on ArcGIS Server",
        "URL points to a cached tiled map service hosted on ArcGIS Server",
        "Add layer to a new map",
        "set the default opacity of the sanborn layers",
        "set up the opacity slider",
        "Update the current slider value (each time you drag the slider handle)",
        "Change the opacity of the tile layer according to the sliders value",
        "Create a BasemapGallery widget instance and set",
        "its container to a div element",
        "Create an Expand instance and set the content",
        "property to the DOM node of the basemap gallery widget",
        "close the expand whenever a basemap is selected",
        "Add the expand instance to the ui",
        "Add element for the 360 photo viewer button using Esri widgets",
        "create a new Swipe widget",
        "trailingLayers: [nearInfrared],",
        "set position of widget to 35%",
        "Add the button to the UI",
        "Add the button to the UI",
        "Add the locate widget to the top left corner of the view",
        "require([\n      \"esri/Map\",\n      \"esri/views/MapView\",\n      \"esri/layers/TileLayer\",\n      \"esri/widgets/Swipe\",\n      \"esri/widgets/Expand\",\n      \"esri/widgets/BasemapGallery\"\n    ], (Map, MapView, TileLayer, Swipe, Expand, BasemapGallery) => {\n      // Setup sanborn tile layer\n      var sanLayer = new TileLayer({\n      // URL points to a cached tiled map service hosted on ArcGIS Server\n      url: \"https://tiles.arcgis.com/tiles/b7cJ4YYc9GM63RSz/arcgis/rest/services/mqttiles/MapServer/0\",      \n      });\n\n      // Add layer to a new map\n      var map = new Map({\n        basemap: \"satellite\",\n        layers: [sanLayer]\n      });\n\n      var view = new MapView({\n        container: \"viewDiv\",\n        map: map,\n        center: [-87.3954, 46.5436],\n        zoom: 16\n      });\n\n      // set the default opacity of the sanborn layer\n      sanLayer.opacity = 100;\n      // set up the opacity slider \n      var slider = document.getElementById(\"myRange\");         \n\n      // Update the current slider value (each time you drag the slider handle)\n      slider.oninput = function() {\n        // Change the opacity of the tile layer according to the sliders value\n        sanLayer.opacity = this.value / 100;\n        console.log(this.value);\n      }\n\n      // Setup ESRI Widgets\n      // Create a BasemapGallery widget instance and set\n      // its container to a div element\n      var basemapGallery = new BasemapGallery({\n        view: view,\n        container: document.createElement(\"div\")\n      });\n\n      // Create an Expand instance and set the content\n      // property to the DOM node of the basemap gallery widget\n      var bgExpand = new Expand({\n        view: view,\n        content: basemapGallery\n      });\n\n      // close the expand whenever a basemap is selected\n      basemapGallery.watch(\"activeBasemap\", function() {\n        var mobileSize = view.heightBreakpoint === \"xsmall\" || view.widthBreakpoint === \"xsmall\";\n\n        if (mobileSize) {\n          bgExpand.collapse();\n        }\n      });\n\n      // Add the expand instance to the ui\n      view.ui.add(bgExpand, \"top-left\"); \n\n      // create a new Swipe widget\n      var swipe = new Swipe({\n        leadingLayers: [sanLayer],\n        type: \"scope\",\n        //trailingLayers: [nearInfrared],\n        position: 50, // set position of widget to 35%\n        view: view\n      });\n      // add the widget to the view\n      view.ui.add(swipe);\n    });"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}