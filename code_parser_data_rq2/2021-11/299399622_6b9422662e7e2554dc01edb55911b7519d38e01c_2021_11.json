{
    "identifiers": [
        "abc",
        "collections",
        "collections",
        "abc",
        "functools",
        "json",
        "logging",
        "queue",
        "typing",
        "logging",
        "getLogger",
        "collections",
        "abc",
        "Hashable",
        "functools",
        "total_ordering",
        "abc",
        "ABC",
        "abc",
        "abstractmethod",
        "Vertex",
        "abc",
        "abstractmethod",
        "Vertex",
        "abc",
        "abstractmethod",
        "GraphDistance",
        "abc",
        "abstractmethod",
        "collections",
        "abc",
        "Generator",
        "collections",
        "abc",
        "Generator",
        "Vertex",
        "other",
        "typing",
        "Any",
        "isinstance",
        "other",
        "_Path",
        "other",
        "typing",
        "Any",
        "_is_valid_operand",
        "other",
        "get_distance",
        "other",
        "get_distance",
        "other",
        "typing",
        "Any",
        "_is_valid_operand",
        "other",
        "get_distance",
        "other",
        "get_distance",
        "_Path",
        "path",
        "_Path",
        "path",
        "_Path",
        "_path",
        "path",
        "_Path",
        "path",
        "_PathRef",
        "get",
        "typing",
        "Any",
        "_path",
        "NotImplementedError",
        "_Path",
        "Vertex",
        "Vertex",
        "GraphDistance",
        "source_vertex",
        "Vertex",
        "destination_vertex",
        "Vertex",
        "distance",
        "GraphDistance",
        "source_vertex",
        "destination_vertex",
        "distance",
        "Vertex",
        "_source_vertex",
        "Vertex",
        "_destination_vertex",
        "GraphDistance",
        "_distance",
        "collections",
        "abc",
        "Generator",
        "collections",
        "abc",
        "Generator",
        "Vertex",
        "collections",
        "abc",
        "Generator",
        "Vertex",
        "get_destination_vertex",
        "edge_gen",
        "typing",
        "Any",
        "_source_vertex",
        "_destination_vertex",
        "_distance",
        "json",
        "dumps",
        "_Path",
        "_PathRef",
        "Edge",
        "GraphDistance",
        "base_path_ref",
        "_PathRef",
        "added_edge",
        "Edge",
        "base_path_ref",
        "get",
        "get_destination_vertex",
        "added_edge",
        "get_source_vertex",
        "base_path_ref",
        "added_edge",
        "base_path_ref",
        "get",
        "get_distance",
        "added_edge",
        "get_distance",
        "Vertex",
        "_base_path_ref",
        "get",
        "get_source_vertex",
        "Vertex",
        "_added_edge",
        "get_destination_vertex",
        "GraphDistance",
        "_distance",
        "collections",
        "abc",
        "Generator",
        "collections",
        "abc",
        "Generator",
        "Vertex",
        "g",
        "collections",
        "abc",
        "Generator",
        "Vertex",
        "collections",
        "abc",
        "Generator",
        "Vertex",
        "g",
        "_added_edge",
        "get_destination_vertex",
        "g",
        "_base_path_ref",
        "get",
        "expand",
        "path_yielder",
        "g",
        "typing",
        "Any",
        "_base_path_ref",
        "_added_edge",
        "_distance",
        "json",
        "dumps",
        "_Path",
        "_PathRef",
        "_PathRef",
        "path1",
        "_PathRef",
        "path2",
        "_PathRef",
        "path1",
        "get",
        "get_source_vertex",
        "path2",
        "get",
        "get_source_vertex",
        "path1",
        "get",
        "get_destination_vertex",
        "path2",
        "get",
        "get_destination_vertex",
        "path1",
        "get",
        "get_distance",
        "path2",
        "get",
        "get_distance",
        "path1",
        "path2",
        "Vertex",
        "_path1",
        "get",
        "get_source_vertex",
        "Vertex",
        "_path1",
        "get",
        "get_destination_vertex",
        "GraphDistance",
        "_path1",
        "get",
        "get_distance",
        "collections",
        "abc",
        "Generator",
        "collections",
        "abc",
        "Generator",
        "Vertex",
        "_path1",
        "get",
        "expand",
        "_path2",
        "get",
        "expand",
        "typing",
        "Any",
        "_path1",
        "_path2",
        "json",
        "dumps",
        "Vertex",
        "Edge",
        "Vertex",
        "Edge",
        "Vertex",
        "vertices",
        "Vertex",
        "edges",
        "Edge",
        "vertices",
        "edges",
        "v",
        "_vertices",
        "v",
        "_vertices_set",
        "format",
        "v",
        "_vertices_set",
        "add",
        "v",
        "e",
        "_edges",
        "e",
        "get_source_vertex",
        "e",
        "get_destination_vertex",
        "tup",
        "edge_tuples",
        "format",
        "tup",
        "edge_tuples",
        "add",
        "tup",
        "collections",
        "defaultdict",
        "e",
        "_edges",
        "_vertices_outgoing_edges",
        "e",
        "get_source_vertex",
        "append",
        "e",
        "logger",
        "debug",
        "format",
        "_vertices_outgoing_edges",
        "start",
        "Vertex",
        "Vertex",
        "_Path",
        "logger",
        "info",
        "format",
        "start",
        "start",
        "_vertices",
        "format",
        "start",
        "Vertex",
        "_PathRef",
        "queue",
        "PriorityQueue",
        "_Path",
        "queue",
        "PriorityQueue",
        "e",
        "_vertices_outgoing_edges",
        "get",
        "start",
        "logger",
        "debug",
        "format",
        "e",
        "next_path_by_distance",
        "put",
        "e",
        "_PathRef",
        "Edge",
        "start",
        "start",
        "next_path_by_distance",
        "empty",
        "next_path_by_distance",
        "get_nowait",
        "next_path",
        "get_destination_vertex",
        "logger",
        "debug",
        "format",
        "next_path",
        "shortest_paths",
        "vertex",
        "shortest_paths",
        "logger",
        "debug",
        "shortest_paths",
        "vertex",
        "existing_path_ref",
        "get",
        "existing_path",
        "get_distance",
        "next_path",
        "get_distance",
        "existing_path",
        "get_distance",
        "next_path",
        "get_distance",
        "logger",
        "debug",
        "_PathAlternatives",
        "existing_path_ref",
        "copy",
        "_PathRef",
        "next_path",
        "logger",
        "debug",
        "format",
        "existing_path",
        "next_path",
        "existing_path_ref",
        "new_alternatives",
        "logger",
        "debug",
        "logger",
        "debug",
        "_PathRef",
        "next_path",
        "path_ref",
        "e",
        "_vertices_outgoing_edges",
        "vertex",
        "_PathSequence",
        "path_ref",
        "e",
        "logger",
        "debug",
        "format",
        "new_path",
        "next_path_by_distance",
        "put_nowait",
        "new_path",
        "Vertex",
        "_Path",
        "k",
        "v",
        "shortest_paths",
        "items",
        "v",
        "get",
        "ret"
    ],
    "literals": [
        "'_PathRef'",
        "\"path_ref\"",
        "\"type\"",
        "\"edge\"",
        "\"source_vertex\"",
        "\"destination_vertex\"",
        "\"distance\"",
        "\"type\"",
        "\"PathSequence\"",
        "\"base_path_ref\"",
        "\"added_edge\"",
        "\"distance\"",
        "\"type\"",
        "\"PathAlternatives\"",
        "\"path1\"",
        "\"path2\"",
        "\"duplicate label: {}\"",
        "\"duplicate edge: {}\"",
        "\"calculated outgoing edges of all vertices: {}\"",
        "\"calculating shortest paths from vertex: {}\"",
        "\"unexpected vertex: {}\"",
        "\"adding initial edge: {}\"",
        "\"popped next path: {}.  shortest paths: {}\"",
        "\"vertex in shortest paths\"",
        "\"new alternative path\"",
        "\"replacing path with alternatives.  \"",
        "\"Original path: {}.  New alternatives: {}\"",
        "\"this is a longer path than exists\"",
        "\"vertex NOT in shortest paths\"",
        "\"adding additional path: {}\""
    ],
    "variables": [
        "logger",
        "Vertex",
        "GraphDistance",
        "_path",
        "_path",
        "_path",
        "_source_vertex",
        "_destination_vertex",
        "_distance",
        "_source_vertex",
        "_destination_vertex",
        "_distance",
        "_base_path_ref",
        "_added_edge",
        "_distance",
        "_base_path_ref",
        "_added_edge",
        "_distance",
        "_path1",
        "_path2",
        "_path1",
        "_path2",
        "_vertices",
        "_edges",
        "_vertices_outgoing_edges",
        "_vertices_set",
        "_vertices",
        "_edges",
        "_vertices_set",
        "edge_tuples",
        "tup",
        "_vertices_outgoing_edges",
        "shortest_paths",
        "next_path_by_distance",
        "shortest_paths",
        "start",
        "next_path",
        "vertex",
        "existing_path_ref",
        "existing_path",
        "new_alternatives",
        "path_ref",
        "shortest_paths",
        "vertex",
        "new_path",
        "ret",
        "ret",
        "k"
    ],
    "comments": [
        "each module/file should provide a global-level logger using this statement",
        "graph distances can be only ints for our purposes.",
        "ordering is done by distance, allowing paths to be added to a priority queue.",
        "mypy current complains that total_ordering must be used on a concrete type.",
        "https://github.com/python/mypy/issues/8539 agrees this is a bug",
        "type: ignore",
        "mypy isn't doing well with NotImplemented's type",
        "type: ignore",
        "mypy isn't doing well with NotImplemented's type",
        "type: ignore",
        "not currently called as we always rather get the json implementation.",
        "if we do end up needing then this will return that same json",
        "store this so that a long string of sequences doesn't have linear",
        "get_distance time",
        "assert no duplicate vertex label",
        "assert no duplicate edge",
        "assemble the dict of vertex labels to edges",
        "add all vertices connected to the start vertex to \"next\" queue",
        "implicit shortest path to starting node is 0",
        "pop the next path.  If we've never seen the destination vertex it",
        "is a shortest path so add a result and add its edges to next",
        "vertices.  If we have seen it check to see if this is an alternate",
        "shortest path to the vertex, but then add no next vertex.  Do this",
        "until there is no more work (no more items in queue).",
        "we have an alternate shortest path to this vertex",
        "do not add any new paths to search",
        "a new shortest path!",
        "add all outgoing edges to next paths.",
        "unpack the path refs to return"
    ],
    "docstrings": [
        "\"\"\"Define and operate on graph objects.\"\"\"",
        "\"\"\"A graph vertex is any hashable object.\n\n2 objects are the same vertex iff their hash codes are equals and\n__eq__/__cmp__ indicate they are the same.\nVertices must be hashable as they will be used in sets and as keys in dicts.\"\"\"",
        "\"\"\"A generic path between 2 vertices.\"\"\"",
        "\"\"\"Return the source vertex.\"\"\"",
        "\"\"\"Return the destination vertex.\"\"\"",
        "\"\"\"Return the distance between the vertices.\"\"\"",
        "\"\"\"Return the distinct represented paths.\n\n        Actually returns a generator where each item is a generator of vertices\n        representing the path.  This is done to avoid temporary object\n        construction and allows the _caller_ to decide if the paths should be\n        stored into collections.\n\n        The initial vertex is excluded.\n        \"\"\"",
        "\"\"\"Define equals according to path distance.\"\"\"",
        "\"\"\"Define < according to path distance.\"\"\"",
        "\"\"\"Holds a ref to a path so that it may be reassigned.\"\"\"",
        "\"\"\"Initialize with value.\"\"\"",
        "\"\"\"Get the current value.\"\"\"",
        "\"\"\"Set the ref value.\"\"\"",
        "\"\"\"Copy (shallow) the PathRef.\"\"\"",
        "\"\"\"Represent as json.\"\"\"",
        "\"\"\"Represent as a string.\"\"\"",
        "\"\"\"An Edge in a Graph.  This is a directed weighted edge.\n\n    Vertices must be constructed first and passed as the arguments of edges.\n    \"\"\"",
        "\"\"\"Create the edge.\n\n        Accepts the source and destination vertex as well as a weight.\n        \"\"\"",
        "\"\"\"Return the source vertex.\"\"\"",
        "\"\"\"Return the destination vertex.\"\"\"",
        "\"\"\"Return the distance between the vertices.\"\"\"",
        "\"\"\"Return the distinct represented paths.\n\n        Excludes the first vertex.\n        \"\"\"",
        "\"\"\"Represent as json.\"\"\"",
        "\"\"\"Represent as a string.\"\"\"",
        "\"\"\"A sequence of Path and additional Edge forming a new Path.\"\"\"",
        "\"\"\"Create the sequence.\"\"\"",
        "\"\"\"Return the source vertex.\"\"\"",
        "\"\"\"Return the destination vertex.\"\"\"",
        "\"\"\"Return the distance between the vertices.\"\"\"",
        "\"\"\"Return the distinct represented paths.\n\n        Excludes the first vertex.\n        \"\"\"",
        "\"\"\"Represent as json.\"\"\"",
        "\"\"\"Represent as a string.\"\"\"",
        "\"\"\"Two paths of equal distance between the same 2 vertices.\"\"\"",
        "\"\"\"Create a Path representing 2 paths to the same vertex.\"\"\"",
        "\"\"\"Return the source vertex.\"\"\"",
        "\"\"\"Return the destination vertex.\"\"\"",
        "\"\"\"Return the distance between the vertices.\"\"\"",
        "\"\"\"Return the distinct represented paths.\n\n        Excludes the first vertex.\n        \"\"\"",
        "\"\"\"Represent as json.\"\"\"",
        "\"\"\"Represent as a string.\"\"\"",
        "\"\"\"Represent a graph.\"\"\"",
        "\"\"\"Create a graph from lists of vertices and edges.\"\"\"",
        "\"\"\"Calculate shortest paths from vertex \"start\" to all others.\"\"\""
    ],
    "functions": [
        "get_source_vertex",
        "get_destination_vertex",
        "get_distance",
        "expand",
        "_is_valid_operand",
        "__eq__",
        "__lt__",
        "get",
        "copy",
        "json_default",
        "__str__",
        "get_source_vertex",
        "get_destination_vertex",
        "get_distance",
        "expand",
        "edge_gen",
        "json_default",
        "__str__",
        "get_source_vertex",
        "get_destination_vertex",
        "get_distance",
        "expand",
        "path_yielder",
        "json_default",
        "__str__",
        "get_source_vertex",
        "get_destination_vertex",
        "get_distance",
        "expand",
        "json_default",
        "__str__",
        "calculate_shortest_paths"
    ],
    "classes": [
        "_Path",
        "_PathRef",
        "Edge",
        "_PathSequence",
        "_PathAlternatives",
        "Graph"
    ]
}