{
    "identifiers": [
        "random",
        "os",
        "time",
        "datetime",
        "dt",
        "nclasses",
        "cl",
        "nclasses",
        "decl",
        "cl",
        "decl",
        "cl",
        "nclasses",
        "decl",
        "cl",
        "decl",
        "bindings",
        "cl",
        "cl",
        "fn",
        "nfns",
        "random",
        "randint",
        "nclasses",
        "random",
        "randint",
        "nclasses",
        "i",
        "nargs",
        "decl",
        "ret",
        "fn",
        "decl",
        "join",
        "p",
        "p",
        "decl",
        "bindings",
        "fn",
        "cl",
        "fn",
        "decl",
        "bindings",
        "result",
        "result",
        "decl",
        "result",
        "result",
        "bindings",
        "result",
        "result",
        "nclasses",
        "cl",
        "nclasses",
        "decl",
        "cl",
        "decl",
        "cl",
        "nclasses",
        "decl",
        "cl",
        "decl",
        "bindings",
        "cl",
        "cl",
        "fn",
        "nfns",
        "random",
        "randint",
        "nclasses",
        "random",
        "randint",
        "nclasses",
        "i",
        "nargs",
        "decl",
        "ret",
        "fn",
        "decl",
        "join",
        "p",
        "p",
        "decl",
        "bindings",
        "fn",
        "cl",
        "fn",
        "decl",
        "bindings",
        "result",
        "result",
        "decl",
        "result",
        "result",
        "bindings",
        "result",
        "result",
        "codegen",
        "generate_dummy_code_pybind11",
        "generate_dummy_code_boost",
        "i",
        "i",
        "open",
        "f",
        "f",
        "write",
        "codegen",
        "nclasses",
        "dt",
        "datetime",
        "now",
        "os",
        "system",
        "dt",
        "datetime",
        "now",
        "n2",
        "n1",
        "total_seconds",
        "os",
        "stat",
        "st_size",
        "nclasses",
        "nfns",
        "elapsed",
        "size"
    ],
    "literals": [
        "\"\"",
        "\"\"",
        "\"class cl%03i;\\n\"",
        "'\\n'",
        "\"class cl%03i {\\n\"",
        "\"public:\\n\"",
        "'    py::class_<cl%03i>(m, \"cl%03i\")\\n'",
        "\"    cl%03i *fn_%03i(\"",
        "\", \"",
        "\"cl%03i *\"",
        "\");\\n\"",
        "'        .def(\"fn_%03i\", &cl%03i::fn_%03i)\\n'",
        "\"};\\n\\n\"",
        "'        ;\\n'",
        "\"#include <pybind11/pybind11.h>\\n\\n\"",
        "\"namespace py = pybind11;\\n\\n\"",
        "'\\n'",
        "\"PYBIND11_MODULE(example, m) {\\n\"",
        "\"}\"",
        "\"\"",
        "\"\"",
        "\"class cl%03i;\\n\"",
        "'\\n'",
        "\"class cl%03i {\\n\"",
        "\"public:\\n\"",
        "'    py::class_<cl%03i>(\"cl%03i\")\\n'",
        "\"    cl%03i *fn_%03i(\"",
        "\", \"",
        "\"cl%03i *\"",
        "\");\\n\"",
        "'        .def(\"fn_%03i\", &cl%03i::fn_%03i, py::return_value_policy<py::manage_new_object>())\\n'",
        "\"};\\n\\n\"",
        "'        ;\\n'",
        "\"#include <boost/python.hpp>\\n\\n\"",
        "\"namespace py = boost::python;\\n\\n\"",
        "'\\n'",
        "\"BOOST_PYTHON_MODULE(example) {\\n\"",
        "\"}\"",
        "\"{\"",
        "\"test.cpp\"",
        "\"w\"",
        "\"g++ -Os -shared -rdynamic -undefined dynamic_lookup \"",
        "\"-fvisibility=hidden -std=c++14 test.cpp -I include \"",
        "\"-I /System/Library/Frameworks/Python.framework/Headers -o test.so\"",
        "'test.so'",
        "\"   {%i, %f, %i},\"",
        "\"}\""
    ],
    "variables": [
        "nfns",
        "nargs",
        "decl",
        "bindings",
        "ret",
        "result",
        "decl",
        "bindings",
        "ret",
        "result",
        "nclasses",
        "n1",
        "n2",
        "elapsed",
        "size"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "Functions per class",
        "Arguments per function"
    ],
    "docstrings": [],
    "functions": [
        "generate_dummy_code_pybind11",
        "generate_dummy_code_boost"
    ],
    "classes": []
}