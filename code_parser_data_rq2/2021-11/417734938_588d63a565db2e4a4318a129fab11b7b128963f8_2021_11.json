{
    "identifiers": [
        "debug",
        "ghactionDebug",
        "error",
        "ghactionError",
        "getInput",
        "ghactionGetInput",
        "info",
        "ghactionInformation",
        "setSecret",
        "ghactionSetSecret",
        "warning",
        "ghactionWarning",
        "basename",
        "pathFileName",
        "dirname",
        "pathDirectoryName",
        "join",
        "pathJoin",
        "fileURLToPath",
        "URLSearchParams",
        "isArray",
        "adIsArray",
        "isJSON",
        "adIsJSON",
        "isString",
        "adIsString",
        "accessSync",
        "fileSystemAccessSync",
        "constants",
        "fileSystemConstants",
        "createReadStream",
        "fileSystemCreateReadStream",
        "readFileSync",
        "fileSystemReadFileSync",
        "stringOverflow",
        "mmStringOverflow",
        "stringParse",
        "mmStringParse",
        "Ajv2020",
        "ajvFormat",
        "ajvFormatsDraft2019",
        "nodeFetch",
        "URLSearchParams",
        "pathDirectoryName",
        "fileURLToPath",
        "process",
        "Ajv2020",
        "ghactionError",
        "ghactionInformation",
        "ghactionWarning",
        "ajvFormat",
        "ajv",
        "ajvFormatsDraft2019",
        "ajv",
        "ajv",
        "fileSystemReadFileSync",
        "pathJoin",
        "ghactionActionDirectory",
        "key",
        "ghactionDebug",
        "key",
        "ghactionGetInput",
        "key",
        "ghactionInformation",
        "mmStringParse",
        "$importInput",
        "dryRun",
        "$importInput",
        "adIsString",
        "key",
        "key",
        "reDiscordWebhookURL",
        "key",
        "key",
        "reDiscordWebhookURL",
        "ghactionSetSecret",
        "key",
        "$importInput",
        "threadID",
        "ghactionSetSecret",
        "threadID",
        "discordWebhookQuery",
        "threadID",
        "mmStringParse",
        "$importInput",
        "wait",
        "wait",
        "discordWebhookQuery",
        "mmStringParse",
        "$importInput",
        "truncateEnable",
        "$importInput",
        "$importInput",
        "$importInput",
        "adIsString",
        "method",
        "mmStringParse",
        "$importInput",
        "adIsJSON",
        "payload",
        "jsonSchemaValidator",
        "payload",
        "error",
        "jsonSchemaValidator",
        "ghactionError",
        "error",
        "jsonSchemaValidator",
        "payload",
        "payload",
        "payload",
        "payload",
        "payload",
        "payload",
        "truncateEnable",
        "payload",
        "mmStringOverflow",
        "payload",
        "stringOverflowOption",
        "payload",
        "payload",
        "payload",
        "payload",
        "truncateEnable",
        "payload",
        "mmStringOverflow",
        "payload",
        "stringOverflowOption",
        "payload",
        "payload",
        "payload",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "truncateEnable",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "mmStringOverflow",
        "payload",
        "embedsIndex",
        "stringOverflowOption",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "truncateEnable",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "mmStringOverflow",
        "payload",
        "embedsIndex",
        "stringOverflowOption",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "reColorHex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "reColorRGB",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "R",
        "G",
        "B",
        "payload",
        "embedsIndex",
        "reColorRandom",
        "payload",
        "embedsIndex",
        "reColorNamespace",
        "payload",
        "embedsIndex",
        "re",
        "payload",
        "embedsIndex",
        "value",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "truncateEnable",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "mmStringOverflow",
        "payload",
        "embedsIndex",
        "stringOverflowOption",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "truncateEnable",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "mmStringOverflow",
        "payload",
        "embedsIndex",
        "stringOverflowOption",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "fieldsIndex",
        "payload",
        "embedsIndex",
        "fieldsIndex",
        "payload",
        "embedsIndex",
        "fieldsIndex",
        "payload",
        "embedsIndex",
        "fieldsIndex",
        "truncateEnable",
        "embedsIndex",
        "fieldsIndex",
        "payload",
        "embedsIndex",
        "fieldsIndex",
        "mmStringOverflow",
        "payload",
        "embedsIndex",
        "fieldsIndex",
        "stringOverflowOption",
        "payload",
        "embedsIndex",
        "fieldsIndex",
        "payload",
        "embedsIndex",
        "fieldsIndex",
        "truncateEnable",
        "embedsIndex",
        "fieldsIndex",
        "payload",
        "embedsIndex",
        "fieldsIndex",
        "mmStringOverflow",
        "payload",
        "embedsIndex",
        "fieldsIndex",
        "stringOverflowOption",
        "payload",
        "embedsIndex",
        "payload",
        "embedsIndex",
        "payload",
        "payload",
        "mmStringParse",
        "$importInput",
        "files",
        "files",
        "adIsArray",
        "files",
        "element",
        "adIsString",
        "element",
        "file",
        "files",
        "fileSystemAccessSync",
        "pathJoin",
        "ghactionWorkspaceDirectory",
        "file",
        "fileSystemConstants",
        "file",
        "payload",
        "payload",
        "files",
        "files",
        "method",
        "method",
        "method",
        "method",
        "method",
        "method",
        "SyntaxError",
        "method",
        "files",
        "payload",
        "discordWebhookQuery",
        "method",
        "requestBody",
        "FormData",
        "files",
        "payload",
        "filesIndex",
        "files",
        "filesIndex",
        "pathJoin",
        "ghactionWorkspaceDirectory",
        "files",
        "filesIndex",
        "pathFileName",
        "fileFullPath",
        "payload",
        "filesIndex",
        "fileName",
        "requestBody",
        "filesIndex",
        "fileSystemCreateReadStream",
        "fileFullPath",
        "fileName",
        "requestBody",
        "payload",
        "requestContentType",
        "requestBody",
        "payloadStringify",
        "requestContentType",
        "dryRun",
        "ghactionInformation",
        "requestBody",
        "ghactionInformation",
        "requestBody",
        "ghactionInformation",
        "nodeFetch",
        "payloadFakeStringify",
        "ghactionUserAgent",
        "response",
        "response",
        "ghactionInformation",
        "response",
        "responseText",
        "response",
        "responseText",
        "ghactionDebug",
        "requestBody",
        "ghactionDebug",
        "requestBody",
        "ghactionInformation",
        "nodeFetch",
        "key",
        "requestQuery",
        "requestQuery",
        "requestBody",
        "requestContentType",
        "ghactionUserAgent",
        "response",
        "response",
        "ghactionDebug",
        "response",
        "responseText",
        "response",
        "responseText",
        "reason",
        "ghactionError",
        "reason",
        "process"
    ],
    "literals": [
        "\"@actions/core\"",
        "\"path\"",
        "\"url\"",
        "\"@hugoalh/advanced-determine\"",
        "\"fs\"",
        "\"@hugoalh/more-method\"",
        "\"ajv/dist/2020.js\"",
        "\"ajv-formats\"",
        "\"ajv-formats-draft2019\"",
        "\"node-fetch\"",
        "\"SendDiscordWebhook.GitHubAction/4.0.0\"",
        "\"log\"",
        "\"string\"",
        "\"discord-webhook-payload-custom.schema.json\"",
        "\"utf8\"",
        "\"r\"",
        "Import input \\`${key}\\`.",
        "Import inputs.",
        "\"dryrun\"",
        "\"boolean\"",
        "Input \\`dryrun\\` must be type of boolean!",
        "\"key\"",
        "Input \\`key\\` must be type of string (non-nullable)!",
        "\"$<key>\"",
        "\"threadid\"",
        "\"thread_id\"",
        "\"wait\"",
        "\"boolean\"",
        "Input \\`wait\\` must be type of boolean!",
        "\"wait\"",
        "\"true\"",
        "\"truncate_enable\"",
        "\"boolean\"",
        "Input \\`truncate_enable\\` must be type of boolean!",
        "\"truncate_ellipsis\"",
        "\"truncate_position\"",
        "\"method\"",
        "Input \\`method\\` must be type of string!",
        "\"payload\"",
        "Input \\`payload\\` must be type of JSON (non-array-root)!",
        "\"undefined\"",
        "\"string\"",
        "Input \\`payload.content\\` is too large!",
        "\"string\"",
        "Input \\`payload.username\\` is too large!",
        "\"string\"",
        "\"string\"",
        "Input \\`payload.embeds[${embedsIndex}].title\\` is too large!",
        "\"string\"",
        "Input \\`payload.embeds[${embedsIndex}].description\\` is too large!",
        "\"string\"",
        "\"string\"",
        "\"#\"",
        "\"0x\"",
        "\"undefined\"",
        "\"string\"",
        "Input \\`payload.embeds[${embedsIndex}].footer.text\\` is too large!",
        "\"string\"",
        "\"undefined\"",
        "\"string\"",
        "\"undefined\"",
        "\"string\"",
        "\"undefined\"",
        "\"string\"",
        "Input \\`payload.embeds[${embedsIndex}].author.name\\` is too large!",
        "\"string\"",
        "\"string\"",
        "\"string\"",
        "Input \\`payload.embeds[${embedsIndex}].fields[${fieldsIndex}].name\\` is too large!",
        "\"string\"",
        "Input \\`payload.embeds[${embedsIndex}].fields[${fieldsIndex}].value\\` is too large!",
        "\"files\"",
        "\"[]\"",
        "Input \\`files\\` must be type of array (string (non-nullable))!",
        "File \\`${file}\\` does not assessible, exist, or readable!",
        "\"undefined\"",
        "\"undefined\"",
        "At least one of the input \\`payload.content\\`, \\`payload.embeds\\`, or \\`files\\` must be provided!",
        "\"form\"",
        "\"json\"",
        "\"form\"",
        "\"json\"",
        "Input \\`method\\`'s value is not in the list!",
        "\"json\"",
        "Invalid content type!",
        "\"form\"",
        "\"form-data\"",
        "\"id\"",
        "\"filename\"",
        "files[${filesIndex}]",
        "\"payload_json\"",
        "\"application/json\"",
        "\"multipart/form-data\"",
        "\"application/json\"",
        "Payload Content: ${requestBody}",
        "\"bar\"",
        "\"foo\"",
        "Post network request to test service.",
        "https://jsonplaceholder.typicode.com/posts",
        "\"Content-Type\"",
        "\"application/json\"",
        "\"User-Agent\"",
        "\"POST\"",
        "\"follow\"",
        "Status Code: ${response.status}\\nResponse: ${responseText}",
        "Status Code: ${response.status}\\nResponse: ${responseText}",
        "Payload Content: ${requestBody}",
        "Post network request to Discord.",
        "https://discord.com/api/webhooks/${key}${(requestQuery.length > 0) ? `?${requestQuery}` : \"\"}",
        "?${requestQuery}",
        "\"\"",
        "\"Content-Type\"",
        "\"User-Agent\"",
        "\"POST\"",
        "\"follow\"",
        "Status Code: ${response.status}\\nResponse: ${responseText}",
        "Status Code: ${response.status}\\nResponse: ${responseText}"
    ],
    "variables": [
        "discordWebhookQuery",
        "ghactionActionDirectory",
        "ghactionUserAgent",
        "ghactionWorkspaceDirectory",
        "ajv",
        "jsonSchemaValidator",
        "reColorHex",
        "reColorNamespace",
        "reColorRandom",
        "reColorRGB",
        "reDiscordWebhookURL",
        "dryRun",
        "key",
        "threadID",
        "wait",
        "truncateEnable",
        "stringOverflowOption",
        "method",
        "payload",
        "embedsIndex",
        "R",
        "G",
        "B",
        "re",
        "value",
        "fieldsIndex",
        "files",
        "payloadStringify",
        "requestBody",
        "requestContentType",
        "requestQuery",
        "FormData",
        "filesIndex",
        "fileFullPath",
        "fileName",
        "payloadFakeStringify",
        "response",
        "responseText",
        "response",
        "responseText"
    ],
    "comments": [],
    "docstrings": [
        "* @private\n * @function $importInput\n * @param {string} key\n * @returns {string}"
    ],
    "functions": [
        "$importInput"
    ],
    "classes": []
}