{
    "identifiers": [
        "optlib",
        "opt",
        "pandas",
        "pd",
        "cdata",
        "cd",
        "ast",
        "os",
        "json",
        "numpy",
        "np",
        "multiprocessing",
        "Pool",
        "cpu_count",
        "Process",
        "Manager",
        "datetime",
        "datetime",
        "sys",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "dirname",
        "queue_in",
        "queue_out",
        "tolerance",
        "days_considered",
        "datetime",
        "now",
        "datetime",
        "strptime",
        "cl_path_prefix",
        "os",
        "path",
        "join",
        "db1_path",
        "pd",
        "read_csv",
        "db1_long_name",
        "keep_default_na",
        "today",
        "day1",
        "days",
        "sim_days",
        "days_considered",
        "queue_in",
        "empty",
        "queue_in",
        "get",
        "cd",
        "checkcountryparams",
        "ccode",
        "cd",
        "getcountryname",
        "ccode",
        "cname",
        "ccode",
        "opt",
        "setcountry",
        "ccode",
        "ccode",
        "opt",
        "get_previous_parameters",
        "df_old_values",
        "cname",
        "opt",
        "simulate_with_old_parameters",
        "old_sev",
        "old_trig",
        "cname",
        "simulated_score",
        "tolerance",
        "old_sev",
        "old_trig",
        "old_long_sev",
        "old_long_trig",
        "simulated_score",
        "ccode",
        "opt",
        "setlengths",
        "len",
        "old_long_sev",
        "old_long_trig",
        "start_extend",
        "old_long_sev",
        "pop",
        "old_long_trig",
        "pop",
        "opt",
        "extendphases",
        "ccode",
        "old_long_sev",
        "old_long_trig",
        "score",
        "simulated_score",
        "old_sev",
        "old_trig",
        "old_long_sev",
        "old_long_trig",
        "simulated_score",
        "opt",
        "showthiscase",
        "dfx",
        "sev",
        "trig",
        "ccode",
        "cname",
        "sev",
        "trig",
        "score",
        "method",
        "ccode",
        "cname",
        "sev",
        "trig",
        "score",
        "longsev",
        "longtrig",
        "method",
        "queue_out",
        "put",
        "short_result",
        "long_result",
        "cl_path_prefix",
        "os",
        "path",
        "join",
        "db1_path",
        "os",
        "path",
        "join",
        "db1_path",
        "Manager",
        "manager",
        "cpu_count",
        "n_processors",
        "datetime",
        "now",
        "pd",
        "DataFrame",
        "columns",
        "pd",
        "DataFrame",
        "columns",
        "pd",
        "read_csv",
        "db1_long_name",
        "keep_default_na",
        "i",
        "len",
        "df_old_values",
        "queue_in",
        "put",
        "df_old_values",
        "i",
        "Process",
        "target",
        "process_countries",
        "args",
        "queue_in",
        "queue_out",
        "tolerance",
        "days_considered",
        "i",
        "n_processors",
        "p",
        "processes",
        "p",
        "start",
        "p",
        "processes",
        "p",
        "join",
        "queue_out",
        "empty",
        "queue_out",
        "get",
        "a_result",
        "a_result",
        "short_results",
        "append",
        "short_result",
        "long_results",
        "append",
        "long_result",
        "pd",
        "DataFrame",
        "short_results",
        "columns",
        "df",
        "to_csv",
        "db1_short_name",
        "pd",
        "DataFrame",
        "long_results",
        "columns",
        "df_long",
        "to_csv",
        "db1_long_name",
        "datetime",
        "now"
    ],
    "literals": [
        "'2019-11-23'",
        "\"%Y-%m-%d\"",
        "'db1_long.csv'",
        "\"COUNTRY:\"",
        "'('",
        "')'",
        "'Currently processing'",
        "'Old result good enough'",
        "'Currently optimizing'",
        "'reoptimized on extend'",
        "'Old result retained on extend - better than new '",
        "'EXT'",
        "'__main__'",
        "'db1.csv'",
        "'db1_long.csv'",
        "'starting'",
        "'Code'",
        "'Country'",
        "'Severities'",
        "'Trigger Dates'",
        "'Score'",
        "'Method'",
        "'Code'",
        "'Country'",
        "'Severities'",
        "'Trigger Dates'",
        "'Score'",
        "'Long Sev'",
        "'Long Trig'",
        "'Method'",
        "'Code'",
        "'Code'",
        "'Country'",
        "'Severities'",
        "'Trigger Dates'",
        "'Score'",
        "'Method'",
        "'Code'",
        "'Country'",
        "'Severities'",
        "'Trigger Dates'",
        "'Score'",
        "'Long Sev'",
        "'Long Trig'",
        "'Method'",
        "'finished'"
    ],
    "variables": [
        "cl_path_prefix",
        "today",
        "day1",
        "db1_path",
        "db1_long_name",
        "df_old_values",
        "sim_days",
        "start_extend",
        "ccode",
        "cname",
        "old_sev",
        "old_trig",
        "old_long_sev",
        "old_long_trig",
        "old_score",
        "method",
        "dfx",
        "simulated_score",
        "sev",
        "trig",
        "longsev",
        "longtrig",
        "score",
        "method",
        "score",
        "dfx",
        "sev",
        "trig",
        "longsev",
        "longtrig",
        "method",
        "sev",
        "trig",
        "longsev",
        "longtrig",
        "score",
        "method",
        "short_result",
        "long_result",
        "db1_path",
        "db1_short_name",
        "db1_long_name",
        "short_results",
        "long_results",
        "manager",
        "queue_in",
        "queue_out",
        "tolerance",
        "days_considered",
        "n_processors",
        "n_processors",
        "df",
        "df_long",
        "df_old_values",
        "processes",
        "a_result",
        "short_result",
        "long_result",
        "df",
        "df_long"
    ],
    "comments": [
        "---------------------------------------------------------------",
        "This program ingests the death and test data for individual countries and uses this data to divide the epidemic into phases",
        "characterised by a homogeneous level of government intervention. For optimal performance of the simulator, the program should be run periodically (ideally daily)",
        "The program computes two time series representing respectively the start date of each phase (measured in days since November 23, 2019,",
        "and the severity of government intervention represented by a custom metric with minimum value 0 and maximum value 1).",
        "The time series are computed to minimize the difference between the actual death values and the values generated by the simulation",
        "given the values of the time series, as represented in a \"score\".",
        "To accelerate the computation, the program only considers phases for a certain number of days in the past defined in \"days_considered\"",
        "As a further acceleration the program does not compute new parameters for countries where the \"score\" of a new simulation with the existing parameters is less than or equal to \"tolerance\".",
        "Computations for different countries are executed in parallel using n_processors-2",
        "----------------------------------------------------------------",
        "uaed to be 60",
        "problem in line below - 'cannot set a row with misplaced columns",
        "queue_in.put(df_old_values['Code'][i]for i in range(0,len(df_old_values)))"
    ],
    "docstrings": [],
    "functions": [
        "process_countries"
    ],
    "classes": []
}