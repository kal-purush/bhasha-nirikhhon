{
    "identifiers": [
        "pandas",
        "pd",
        "numpy",
        "np",
        "pickle",
        "preprocess",
        "process_ds",
        "sklearn",
        "preprocessing",
        "LabelEncoder",
        "df",
        "feature",
        "cat",
        "LabelEncoder",
        "encoder",
        "fit_transform",
        "df",
        "feature",
        "df",
        "df",
        "dayLag",
        "dayLag",
        "dayLags",
        "dayLag",
        "lagSalesCol",
        "dayLags",
        "lagSalesCols",
        "df",
        "groupby",
        "shift",
        "dayLag",
        "windows",
        "dayLag",
        "lagSalesCol",
        "dayLags",
        "lagSalesCols",
        "dayLag",
        "df",
        "lagSalesCol",
        "groupby",
        "lagSalesCol",
        "transform",
        "x",
        "x",
        "rolling",
        "mean",
        "df",
        "df",
        "transform_cat_feats",
        "df",
        "calculate_time_features",
        "df",
        "df",
        "process_ds",
        "cat_ts_feats",
        "df",
        "df",
        "reset_index",
        "set_index",
        "df",
        "drop",
        "columns",
        "cols_not_used",
        "inplace",
        "df",
        "dropna",
        "inplace",
        "df",
        "astype",
        "df",
        "astype",
        "df",
        "df",
        "loc",
        "train_start_date",
        "train_end_date",
        "df",
        "loc",
        "test_start_date",
        "test_end_date",
        "df_train",
        "to_pickle",
        "df_test",
        "to_pickle",
        "get_test_train_data"
    ],
    "literals": [
        "\"item_id\"",
        "\"dept_id\"",
        "\"cat_id\"",
        "\"store_id\"",
        "\"state_id\"",
        "\"event_name_1\"",
        "\"event_type_1\"",
        "\"event_name_2\"",
        "\"event_type_2\"",
        "f\"lag_{dayLag}\"",
        "\"id\"",
        "\"item_sales\"",
        "\"id\"",
        "\"item_sales\"",
        "f\"rmean_{dayLag}_{window}\"",
        "\"id\"",
        "\"id\"",
        "\"date\"",
        "\"id\"",
        "\"weekday\"",
        "\"d\"",
        "\"index\"",
        "\"is_weekend\"",
        "\"is_weekend\"",
        "\"no_sell_price\"",
        "\"no_sell_price\"",
        "\"2014-04-24\"",
        "\"2016-04-23\"",
        "\"2016-04-24\"",
        "\"2016-05-23\"",
        "\"../data/df_train.pkl\"",
        "\"../data/df_test.pkl\"",
        "\"__main__\""
    ],
    "variables": [
        "cat",
        "encoder",
        "df",
        "feature",
        "dayLags",
        "lagSalesCols",
        "df",
        "lagSalesCol",
        "windows",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "cols_not_used",
        "df",
        "df",
        "train_start_date",
        "train_end_date",
        "test_start_date",
        "test_end_date",
        "df_train",
        "df_test"
    ],
    "comments": [
        "nan_features = [",
        "'event_name_1',",
        "'event_type_1',",
        "'event_name_2',",
        "'event_type_2',]",
        "for feature in nan_features:",
        "df[feature].fillna('unknown', inplace = True)",
        "remove unused columns",
        "convert T/F to boolean - lightgbm throws error otherwise",
        "save train and test dataframes for later use"
    ],
    "docstrings": [
        "\"\"\"makes null columns into unknown and cat columns\n    are label encoded\n    Args:\n    df (pd.DataFrame): Dataframe with the sales data.\n    Returns:\n    Dataframe with the sales data including lag and rolling\n    features.\n    \"\"\"",
        "\"\"\"Clagged and rolling mean features\n    of the sales data.\n    Args:\n    df (pd.DataFrame): Dataframe with the sales data.\n    Returns:\n    Dataframe with the sales data including lag and rolling\n    features.\n    \"\"\"",
        "\"\"\"Build categorical and time series feats.\n    Args:\n    df (pd.Dataframe) : Dataframe with sales data\n    Returns:\n    Dataframe with sales data including categorical\n    features and lag/rolling mean features\n    \"\"\"",
        "\"\"\"Build train and test dataset. Test is\n    used for inference\n    Args:\n    None\n    Returns:\n    train and test dataframes\n    \"\"\""
    ],
    "functions": [
        "transform_cat_feats",
        "calculate_time_features",
        "cat_ts_feats",
        "get_test_train_data"
    ],
    "classes": []
}