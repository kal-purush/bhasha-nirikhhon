{
    "identifiers": [
        "pdb",
        "numpy",
        "np",
        "math",
        "test_control",
        "timespan",
        "delta_t",
        "r",
        "num",
        "shift",
        "x",
        "y",
        "z",
        "theta",
        "phi",
        "psi",
        "np",
        "zeros",
        "timespan",
        "np",
        "zeros",
        "timespan",
        "np",
        "zeros",
        "timespan",
        "np",
        "zeros",
        "timespan",
        "np",
        "zeros",
        "timespan",
        "np",
        "zeros",
        "timespan",
        "xt",
        "yt",
        "zt",
        "thetat",
        "phit",
        "psit",
        "r",
        "num",
        "shift",
        "timespan",
        "delta_t",
        "vy",
        "math",
        "cos",
        "thetat",
        "vz",
        "math",
        "sin",
        "thetat",
        "delta_t",
        "vy",
        "math",
        "sin",
        "thetat",
        "vz",
        "math",
        "cos",
        "thetat",
        "delta_t",
        "vth",
        "delta_t",
        "yt",
        "delta_y",
        "zt",
        "delta_z",
        "thetat",
        "delta_th",
        "np",
        "array",
        "xt",
        "yt",
        "zt",
        "thetat",
        "phit",
        "psit",
        "np",
        "array",
        "traj_t",
        "trajd_t",
        "desired_traj",
        "desired_traj",
        "np",
        "array",
        "math",
        "pi",
        "math",
        "pi",
        "q",
        "pose_value",
        "q",
        "jacobian_matrix",
        "dsr_traj",
        "delta_t",
        "dsr_traj",
        "timespan",
        "t",
        "np",
        "arange",
        "ts",
        "dt",
        "reshape",
        "dsr_traj",
        "get_instant_pose_circle",
        "t",
        "execute_joint_traj_goal",
        "joint_goal_lst",
        "DesiredTraj",
        "timespan",
        "delta_t",
        "r",
        "num",
        "shift",
        "KineControl",
        "DsrTraj",
        "kinecontroller",
        "control",
        "kinecontroller",
        "traj_vis"
    ],
    "literals": [
        "'='",
        "'__main__'"
    ],
    "variables": [
        "r",
        "num",
        "shift",
        "timespan",
        "delta_t",
        "vy",
        "vz",
        "vth",
        "delta_y",
        "delta_z",
        "delta_th",
        "traj_t",
        "trajd_t",
        "num_joints",
        "dsr_traj",
        "q0",
        "q_dot0",
        "pose_value",
        "jacobian_matrix",
        "dt",
        "ts",
        "x_dsr",
        "xd_dsr",
        "joint_goal_lst",
        "DsrTraj",
        "kinecontroller"
    ],
    "comments": [
        "! /usr/bin/env python",
        "convert the whole trajectory with a shape of [ts/dt, 7]",
        "into a 1-dim array [ts/dt * 7, ] by using '.reshape((-1,))'",
        "You can define any trajectory you like, there is no limit.",
        "If you define a new trajectory, the visualization script 'test_dsr_traj_vis.py' need to modify correspondingly."
    ],
    "docstrings": [
        "\"\"\"\n        Need to be implemented\n        You can use the 'get_fk' function I provided to verify your results, but do not use it for your project.\n        \"\"\"",
        "\"\"\"\n        Need to be implemented\n        You can use the 'get_jacobian' function I provided to verify your results, but do not use it for your project.\n        \"\"\"",
        "\"\"\"\n        Need to be implemented\n        \"\"\"",
        "\"\"\"\n        Need to be implemented\n        Plot and save the following figures:\n        1. tracking_error(time, e_r)\n        2. joint_angles(time, q_r)\n        3. joint_velocities(time, qd_r)\n        4. manipulability(time,W)\n        \"\"\""
    ],
    "functions": [
        "get_instant_pose_circle",
        "fk",
        "jacobian",
        "control",
        "traj_vis"
    ],
    "classes": [
        "DesiredTraj",
        "KineControl"
    ]
}