{
    "identifiers": [
        "BravoLights",
        "Ast",
        "BravoLights",
        "Common",
        "BravoLights",
        "Connections",
        "Moq",
        "Xunit",
        "BravoLights",
        "Tests",
        "Mock",
        "IWASMChannel",
        "mockWasmChannel",
        "SetupGet",
        "c",
        "SimState",
        "Returns",
        "SimState",
        "SimRunning",
        "LVarManager",
        "Connection",
        "SetWASMChannel",
        "mockWasmChannel",
        "Fact",
        "SetupLVarManager",
        "MSFSExpressionParser",
        "Parse",
        "parse",
        "ValueChanged",
        "sender",
        "ValueChangedEventArgs",
        "e",
        "lastValue",
        "e",
        "NewValue",
        "Assert",
        "Equal",
        "lastValue",
        "Fact",
        "SetupLVarManager",
        "MSFSExpressionParser",
        "Parse",
        "parse",
        "ValueChanged",
        "sender",
        "ValueChangedEventArgs",
        "e",
        "lastValue",
        "e",
        "NewValue",
        "Assert",
        "IsType",
        "lastValue",
        "Fact",
        "SetupLVarManager",
        "MSFSExpressionParser",
        "Parse",
        "parse",
        "ValueChanged",
        "sender",
        "ValueChangedEventArgs",
        "e",
        "lastValue",
        "e",
        "NewValue",
        "Assert",
        "Equal",
        "lastValue",
        "Fact",
        "SetupLVarManager",
        "MSFSExpressionParser",
        "Parse",
        "parse",
        "ValueChanged",
        "sender",
        "ValueChangedEventArgs",
        "e",
        "lastValue",
        "e",
        "NewValue",
        "Assert",
        "IsType",
        "lastValue"
    ],
    "literals": [
        "\"L:Var1 > 3 OR 1 == 1\"",
        "\"L:Var1 > 3 OR 1 == 0\"",
        "\"L:Var1 > 3 AND 1 == 0\"",
        "\"L:Var1 > 3 AND 1 == 1\""
    ],
    "variables": [
        "mockWasmChannel",
        "parse",
        "lastValue",
        "parse",
        "lastValue",
        "parse",
        "lastValue",
        "parse",
        "lastValue"
    ],
    "comments": [
        "Even though the LVar does not exist we should still be able to short-circuit the result because one side of the OR is true.",
        "One side of the OR is false, so we're dependent upon the other side, which is erroring. So the OR should error.",
        "Even though the LVar does not exist we should still be able to short-circuit the result because one side of the AND is false",
        "One side of the AND is true, so we're dependent upon the other side, which is erroring. So the AND should error."
    ],
    "docstrings": [],
    "functions": [
        "SetupLVarManager",
        "ORExpressionsShortcircuitCorrectly",
        "ORExpressionsDoNotShortcircuitIfNeitherSideIsTrue",
        "ANDExpressionsShortcircuitCorrectly",
        "ANDExpressionsDoNotShortcircuitIfEitherSideIsTrue"
    ],
    "classes": [
        "ExpressionCombinationTests"
    ]
}