{
    "identifiers": [
        "com",
        "izforge",
        "izpack",
        "installer",
        "util",
        "com",
        "izforge",
        "izpack",
        "api",
        "data",
        "InstallData",
        "com",
        "izforge",
        "izpack",
        "util",
        "Platform",
        "java",
        "util",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "TARGET_PANEL_DIR",
        "PREFIX",
        "TARGET_PANEL_DIR",
        "installData",
        "currentPath",
        "installData",
        "getInstallPath",
        "currentPath",
        "currentPath",
        "defaultPath",
        "installData",
        "getDefaultInstallPath",
        "defaultPath",
        "defaultPath",
        "getProperty",
        "path",
        "getTargetPanelDir",
        "installData",
        "path",
        "path",
        "installData",
        "getVariables",
        "replace",
        "path",
        "path",
        "defaultPath",
        "path",
        "installData",
        "getVariables",
        "replace",
        "defaultPath",
        "path",
        "installData",
        "platform",
        "installData",
        "getPlatform",
        "path",
        "platform",
        "getSymbolicName",
        "path",
        "installData",
        "getVariable",
        "PREFIX",
        "platform",
        "getSymbolicName",
        "toLowerCase",
        "path",
        "path",
        "getTargetPanelDir",
        "installData",
        "platform",
        "getName",
        "path",
        "path",
        "installData",
        "getVariable",
        "TARGET_PANEL_DIR",
        "path",
        "installData",
        "name",
        "path",
        "queue",
        "queue",
        "add",
        "name",
        "queue",
        "isEmpty",
        "name",
        "queue",
        "remove",
        "path",
        "installData",
        "getVariable",
        "PREFIX",
        "name",
        "toString",
        "toLowerCase",
        "path",
        "Collections",
        "addAll",
        "queue",
        "name",
        "getParents",
        "path"
    ],
    "literals": [
        "\"TargetPanel.dir\"",
        "\".\"",
        "\"user.dir\""
    ],
    "variables": [],
    "comments": [
        "Make the default path point to the current location"
    ],
    "docstrings": [
        "* IzPack - Copyright 2001-2012 Julien Ponge, All Rights Reserved.\n *\n * http://izpack.org/\n * http://izpack.codehaus.org/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Target panel helper methods.\n *\n * @author Tim Anderson",
        "* Target panel directory variable name.",
        "* Target panel directory variable prefix.",
        "* Returns the installation path for the current platform.\n     * <p/>\n     * This looks for a variable in the following order:\n     * <ol>\n     * <li>{@code TargetPanel.dir.<platform symbolic name>}</li>\n     * <li>{@code TargetPanel.dir.<platform name>}. This searches any parent platforms if none is found</li>\n     * <li>{@code TargetPanel.dir}</li>\n     * <li>{@code DEFAULT_INSTALL_PATH}</li>\n     * <li>{@code SYSTEM_user_dir}</li>\n     * </ol>\n     *\n     * @param installData the installation data\n     * @return the default platform path, or {@code null} if none is found",
        "* Returns the installation path for the current platform.\n     * <p/>\n     * This looks for a variable prefixed with {@code TargetPanel.dir} in the following order:\n     * <ol>\n     * <li>{@code TargetPanel.dir.<platform symbolic name>}</li>\n     * <li>{@code TargetPanel.dir.<platform name>}. This searches any parent platforms if none is found</li>\n     * <li>{@code TargetPanel.dir}</li>\n     * </ol>\n     *\n     * @param installData the installation data\n     * @return the default platform path, or {@code null} if none is found",
        "* Returns the installation path for the specified platform name.\n     * <p/>\n     * This looks for a variable named {@code TargetPanel.dir.<platform name>}. If none is found, it searches the\n     * parent platforms, in a breadth-first manner.\n     *\n     * @param installData the installation data\n     * @param name        the platform name\n     * @return the default path, or {@code null} if none is found"
    ],
    "functions": [
        "getPath",
        "getTargetPanelDir",
        "getTargetPanelDir"
    ],
    "classes": [
        "InstallPathHelper"
    ]
}