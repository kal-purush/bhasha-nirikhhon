{
    "identifiers": [
        "org",
        "apache",
        "commons",
        "lang3",
        "java",
        "util",
        "Supplier",
        "NULL_SUPPLIER",
        "AWT_TOOLKIT",
        "FILE_ENCODING",
        "FILE_SEPARATOR",
        "JAVA_AWT_FONTS",
        "JAVA_AWT_GRAPHICSENV",
        "JAVA_AWT_HEADLESS",
        "JAVA_AWT_PRINTERJOB",
        "JAVA_CLASS_PATH",
        "JAVA_CLASS_VERSION",
        "JAVA_COMPILER",
        "JAVA_ENDORSED_DIRS",
        "JAVA_EXT_DIRS",
        "JAVA_HOME",
        "JAVA_IO_TMPDIR",
        "JAVA_LIBRARY_PATH",
        "JAVA_RUNTIME_NAME",
        "JAVA_RUNTIME_VERSION",
        "JAVA_SPECIFICATION_NAME",
        "JAVA_SPECIFICATION_VENDOR",
        "JAVA_SPECIFICATION_VERSION",
        "JAVA_UTIL_PREFS_PREFERENCES_FACTORY",
        "JAVA_VENDOR",
        "JAVA_VENDOR_URL",
        "JAVA_VERSION",
        "JAVA_VM_INFO",
        "JAVA_VM_NAME",
        "JAVA_VM_SPECIFICATION_NAME",
        "JAVA_VM_SPECIFICATION_VENDOR",
        "JAVA_VM_SPECIFICATION_VERSION",
        "JAVA_VM_VENDOR",
        "JAVA_VM_VERSION",
        "LINE_SEPARATOR",
        "OS_ARCH",
        "OS_NAME",
        "OS_VERSION",
        "PATH_SEPARATOR",
        "USER_COUNTRY",
        "USER_DIR",
        "USER_HOME",
        "USER_LANGUAGE",
        "USER_NAME",
        "USER_REGION",
        "USER_TIMEZONE",
        "getProperty",
        "AWT_TOOLKIT",
        "getProperty",
        "FILE_ENCODING",
        "getProperty",
        "FILE_SEPARATOR",
        "getProperty",
        "JAVA_AWT_FONTS",
        "getProperty",
        "JAVA_AWT_GRAPHICSENV",
        "getProperty",
        "JAVA_AWT_HEADLESS",
        "getProperty",
        "JAVA_AWT_PRINTERJOB",
        "getProperty",
        "JAVA_CLASS_PATH",
        "getProperty",
        "JAVA_CLASS_VERSION",
        "getProperty",
        "JAVA_COMPILER",
        "getProperty",
        "JAVA_ENDORSED_DIRS",
        "getProperty",
        "JAVA_EXT_DIRS",
        "getProperty",
        "JAVA_HOME",
        "getProperty",
        "JAVA_IO_TMPDIR",
        "getProperty",
        "JAVA_LIBRARY_PATH",
        "getProperty",
        "JAVA_RUNTIME_NAME",
        "getProperty",
        "JAVA_RUNTIME_VERSION",
        "getProperty",
        "JAVA_SPECIFICATION_NAME",
        "getProperty",
        "JAVA_SPECIFICATION_VENDOR",
        "getProperty",
        "JAVA_SPECIFICATION_VERSION",
        "getProperty",
        "JAVA_UTIL_PREFS_PREFERENCES_FACTORY",
        "getProperty",
        "JAVA_VENDOR",
        "getProperty",
        "JAVA_VENDOR_URL",
        "getProperty",
        "JAVA_VERSION",
        "getProperty",
        "JAVA_VM_INFO",
        "getProperty",
        "JAVA_VM_NAME",
        "getProperty",
        "JAVA_VM_SPECIFICATION_NAME",
        "getProperty",
        "JAVA_VM_SPECIFICATION_VENDOR",
        "getProperty",
        "JAVA_VM_SPECIFICATION_VERSION",
        "getProperty",
        "JAVA_VM_VENDOR",
        "getProperty",
        "JAVA_VM_VERSION",
        "getProperty",
        "LINE_SEPARATOR",
        "getProperty",
        "OS_ARCH",
        "getProperty",
        "OS_NAME",
        "getProperty",
        "OS_VERSION",
        "getProperty",
        "PATH_SEPARATOR",
        "property",
        "getProperty",
        "property",
        "NULL_SUPPLIER",
        "property",
        "defaultValue",
        "StringUtils",
        "isEmpty",
        "property",
        "defaultValue",
        "get",
        "value",
        "getProperty",
        "property",
        "StringUtils",
        "getIfEmpty",
        "value",
        "defaultValue",
        "ignore",
        "defaultValue",
        "get",
        "getProperty",
        "USER_COUNTRY",
        "getProperty",
        "USER_DIR",
        "getProperty",
        "USER_HOME",
        "getProperty",
        "USER_LANGUAGE",
        "getProperty",
        "USER_NAME",
        "getProperty",
        "USER_TIMEZONE"
    ],
    "literals": [
        "\"awt.toolkit\"",
        "\"file.encoding\"",
        "\"file.separator\"",
        "\"java.awt.fonts\"",
        "\"java.awt.graphicsenv\"",
        "\"java.awt.headless\"",
        "\"java.awt.printerjob\"",
        "\"java.class.path\"",
        "\"java.class.version\"",
        "\"java.compiler\"",
        "\"java.endorsed.dirs\"",
        "\"java.ext.dirs\"",
        "\"java.home\"",
        "\"java.io.tmpdir\"",
        "\"java.library.path\"",
        "\"java.runtime.name\"",
        "\"java.runtime.version\"",
        "\"java.specification.name\"",
        "\"java.specification.vendor\"",
        "\"java.specification.version\"",
        "\"java.util.prefs.PreferencesFactory\"",
        "\"java.vendor\"",
        "\"java.vendor.url\"",
        "\"java.version\"",
        "\"java.vm.info\"",
        "\"java.vm.name\"",
        "\"java.vm.specification.name\"",
        "\"java.vm.specification.vendor\"",
        "\"java.vm.specification.version\"",
        "\"java.vm.vendor\"",
        "\"java.vm.version\"",
        "\"line.separator\"",
        "\"os.arch\"",
        "\"os.name\"",
        "\"os.version\"",
        "\"path.separator\"",
        "\"user.country\"",
        "\"user.dir\"",
        "\"user.home\"",
        "\"user.language\"",
        "\"user.name\"",
        "\"user.region\"",
        "\"user.timezone\""
    ],
    "variables": [],
    "comments": [
        "We are not allowed to look at this property.",
        "",
        "System.err.println(\"Caught a SecurityException reading the system property '\" + property",
        "+ \"'; the SystemUtils property value will default to null.\");"
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Accesses current system property names and values.\n *\n * @since 3.13.0",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* The System property name {@value}.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets a System property, defaulting to {@code null} if the property cannot be read.\n     * <p>\n     * If a {@link SecurityException} is caught, the return value is {@code null}.\n     * </p>\n     *\n     * @param property the system property name\n     * @return the system property value or {@code null} if a security problem occurs",
        "* Gets a System property, defaulting to {@code null} if the property cannot be read.\n     * <p>\n     * If a {@link SecurityException} is caught, the return value is {@code null}.\n     * </p>\n     *\n     * @param property        the system property name.\n     * @param defaultValue get this Supplier when the property is empty or throws SecurityException.\n     * @return the system property value or {@code null} if a security problem occurs",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map.",
        "* Gets the current value from the system properties map.\n     * <p>\n     * Returns {@code null} if the property cannot be read due to a {@link SecurityException}.\n     * </p>\n     *\n     * @return the current value from the system properties map."
    ],
    "functions": [
        "getAwtToolkit",
        "getFileEncoding",
        "getFileSeparator",
        "getJavaAwtFonts",
        "getJavaAwtGraphicsenv",
        "getJavaAwtHeadless",
        "getJavaAwtPrinterjob",
        "getJavaClassPath",
        "getJavaClassVersion",
        "getJavaCompiler",
        "getJavaEndorsedDirs",
        "getJavaExtDirs",
        "getJavaHome",
        "getJavaIoTmpdir",
        "getJavaLibraryPath",
        "getJavaRuntimeName",
        "getJavaRuntimeVersion",
        "getJavaSpecificationName",
        "getJavaSpecificationVendor",
        "getJavaSpecificationVersion",
        "getJavaUtilPrefsPreferencesFactory",
        "getJavaVendor",
        "getJavaVendorUrl",
        "getJavaVersion",
        "getJavaVmInfo",
        "getJavaVmName",
        "getJavaVmSpecificationName",
        "getJavaVmSpecificationVendor",
        "getJavaVmSpecificationVersion",
        "getJavaVmVendor",
        "getJavaVmVersion",
        "getLineSeparator",
        "getOsArch",
        "getOsName",
        "getOsVersion",
        "getPathSeparator",
        "getProperty",
        "getProperty",
        "getUserCountry",
        "getUserDir",
        "getUserHome",
        "getUserLanguage",
        "getUserName",
        "getUserTimezone"
    ],
    "classes": [
        "SystemProperties"
    ]
}