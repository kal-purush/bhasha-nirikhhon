{
    "identifiers": [
        "numpy",
        "np",
        "numpy",
        "linalg",
        "norm",
        "scipy",
        "sparse",
        "linalg",
        "svds",
        "scipy",
        "special",
        "betainc",
        "gamma",
        "copy",
        "collections",
        "minPts",
        "radius",
        "group_merging_mode",
        "scale",
        "reassign_outliers",
        "group_merging_mode",
        "ValueError",
        "group_merging_mode",
        "minPts",
        "radius",
        "group_merging_mode",
        "scale",
        "reassign_outliers",
        "data",
        "data_preparation",
        "data",
        "starting_points_list",
        "aggregating",
        "np",
        "full",
        "data",
        "shape",
        "clustering",
        "points_group_labels",
        "points_group_labels",
        "data",
        "isinstance",
        "data",
        "np",
        "ndarray",
        "np",
        "array",
        "data",
        "len",
        "data",
        "shape",
        "data",
        "reshape",
        "data",
        "dtype",
        "data",
        "astype",
        "data",
        "mean",
        "axis",
        "data",
        "mu",
        "norm",
        "data",
        "axis",
        "np",
        "median",
        "distances_from_origin",
        "median",
        "data",
        "median",
        "scaled_data",
        "data",
        "shape",
        "svds",
        "data",
        "k",
        "return_singular_vectors",
        "U1",
        "s1",
        "data",
        "np",
        "argsort",
        "alpha_scores",
        "data",
        "shape",
        "i",
        "data",
        "shape",
        "alpha_scores_ordered_indices",
        "i",
        "points_group_labels",
        "starting_point_index",
        "data",
        "starting_point_index",
        "current_label",
        "j",
        "alpha_scores_ordered_indices",
        "i",
        "points_group_labels",
        "j",
        "alpha_scores",
        "j",
        "alpha_scores",
        "starting_point_index",
        "radius",
        "norm",
        "current_group_center",
        "data",
        "j",
        "ord",
        "axis",
        "radius",
        "current_label",
        "points_current_group_count",
        "starting_points_list",
        "append",
        "starting_point_index",
        "alpha_scores",
        "starting_point_index",
        "points_current_group_count",
        "current_label",
        "np",
        "array",
        "points_group_labels",
        "np",
        "array",
        "starting_points_list",
        "data",
        "data",
        "s",
        "s",
        "data",
        "s",
        "parent",
        "data",
        "findParent",
        "s",
        "parent",
        "s",
        "parent",
        "s1",
        "s2",
        "findParent",
        "s1",
        "findParent",
        "s2",
        "parent_of_s1",
        "data",
        "parent_of_s2",
        "data",
        "findParent",
        "s1",
        "parent_of_s2",
        "starting_point_1",
        "starting_point_2",
        "radius",
        "scale",
        "norm",
        "starting_point_1",
        "starting_point_2",
        "ord",
        "axis",
        "scale",
        "radius",
        "starting_point_1",
        "starting_point_2",
        "radius",
        "samples_number",
        "computeIntersectionVolume",
        "starting_point_1",
        "starting_point_2",
        "radius",
        "samples_number",
        "in_volume",
        "starting_point_1",
        "starting_point_2",
        "radius",
        "starting_point_1",
        "shape",
        "norm",
        "starting_point_1",
        "starting_point_2",
        "ord",
        "axis",
        "center_distance",
        "radius",
        "center_distance",
        "np",
        "pi",
        "dimension",
        "gamma",
        "dimension",
        "radius",
        "dimension",
        "betainc",
        "dimension",
        "c",
        "radius",
        "SET",
        "i",
        "i",
        "starting_points_list",
        "shape",
        "group_merging_mode",
        "np",
        "pi",
        "data",
        "shape",
        "radius",
        "data",
        "shape",
        "gamma",
        "data",
        "shape",
        "i",
        "starting_points_list",
        "shape",
        "data",
        "starting_points_list",
        "i",
        "data",
        "starting_points_list",
        "i",
        "astype",
        "np",
        "arange",
        "i",
        "starting_points_list",
        "shape",
        "dtype",
        "starting_points_list",
        "i",
        "group_merging_mode",
        "norm",
        "successive_starting_points",
        "first_starting_point",
        "ord",
        "axis",
        "radius",
        "close_starting_points",
        "index_overlap",
        "np",
        "index_overlap",
        "norm",
        "data",
        "first_starting_point",
        "ord",
        "axis",
        "radius",
        "np",
        "count_nonzero",
        "points_in_first_ball",
        "volume",
        "j",
        "close_starting_points",
        "astype",
        "data",
        "starting_points_list",
        "j",
        "norm",
        "data",
        "next_starting_point",
        "ord",
        "axis",
        "radius",
        "np",
        "count_nonzero",
        "points_in_next_ball",
        "volume",
        "checkOverlap",
        "first_starting_point",
        "next_starting_point",
        "radius",
        "radius",
        "np",
        "count_nonzero",
        "points_in_first_ball",
        "points_in_next_ball",
        "computeIntersectionDensity",
        "first_starting_point",
        "next_starting_point",
        "radius",
        "radius",
        "samples_number",
        "points_in_intersection_count",
        "density_intersection",
        "density_first_ball",
        "density_intersection",
        "density_next_ball",
        "mergeRoots",
        "connected_pairs",
        "i",
        "connected_pairs",
        "j",
        "connected_pairs_store",
        "append",
        "i",
        "j",
        "np",
        "full",
        "successive_starting_points",
        "shape",
        "dtype",
        "k",
        "successive_starting_points",
        "shape",
        "successive_starting_points",
        "k",
        "current_alpha_scores_ordered",
        "k",
        "current_alpha_scores_ordered",
        "scale",
        "radius",
        "norm",
        "candidate",
        "first_starting_point",
        "ord",
        "axis",
        "scale",
        "radius",
        "np",
        "index_overlap",
        "close_starting_points",
        "index_overlap",
        "j",
        "close_starting_points",
        "mergeRoots",
        "connected_pairs",
        "i",
        "connected_pairs",
        "j",
        "connected_pairs_store",
        "append",
        "i",
        "j",
        "findParent",
        "i",
        "data",
        "i",
        "connected_pairs",
        "i",
        "np",
        "unique",
        "labels",
        "labels_set",
        "append",
        "np",
        "where",
        "labels",
        "i",
        "tolist",
        "labels_set",
        "connected_pairs_store",
        "old_cluster_count",
        "min_samples_rate",
        "minPts",
        "min_samples_rate",
        "sum",
        "old_cluster_count",
        "values",
        "minPts",
        "i",
        "i",
        "old_cluster_count",
        "items",
        "i",
        "min_samples",
        "labels",
        "old_cluster_count",
        "sorted",
        "old_cluster_count",
        "items",
        "key",
        "x",
        "x",
        "reverse",
        "copy",
        "deepcopy",
        "labels",
        "i",
        "len",
        "sorted_dict",
        "labels",
        "sorted_dict",
        "i",
        "i",
        "clabels",
        "points_group_labels",
        "copy",
        "deepcopy",
        "points_group_labels",
        "merge_groups",
        "connected_pairs_edges",
        "merging",
        "max",
        "labels",
        "sublabels",
        "merge_groups",
        "j",
        "sublabels",
        "labels",
        "j",
        "max_label",
        "max_label",
        "collections",
        "Counter",
        "labels",
        "minPts",
        "outlier_filter",
        "old_cluster_count",
        "old_cluster_count",
        "min_samples_rate",
        "minPts",
        "len",
        "potential_noise_labels",
        "i",
        "np",
        "unique",
        "potential_noise_labels",
        "labels",
        "i",
        "max_label",
        "labels",
        "max_label",
        "points_group_labels",
        "valid_data_index",
        "valid_group_labels",
        "labels",
        "valid_data_index",
        "np",
        "unique",
        "points_group_labels",
        "valid_data_index",
        "np",
        "unique",
        "valid_group_labels",
        "starting_points_list",
        "unique_valid_group_labels",
        "reassign_outliers",
        "outlier_label",
        "unique_outliers_group_labels",
        "np",
        "argmin",
        "norm",
        "data",
        "valid_starting_points_list",
        "astype",
        "data",
        "starting_points_list",
        "outlier_label",
        "axis",
        "ord",
        "points_group_labels",
        "outlier_label",
        "label_change",
        "unique_valid_group_labels",
        "closest_group",
        "np",
        "isin",
        "points_group_labels",
        "unique_outliers_group_labels",
        "reassign_labels",
        "labels",
        "labels",
        "old_cluster_count",
        "old_cluster_count",
        "points_group_labels",
        "labels",
        "labels",
        "data_to_predict",
        "data_to_predict",
        "mu",
        "median",
        "starting_points_list",
        "astype",
        "i",
        "len",
        "data_to_predict",
        "np",
        "argmin",
        "norm",
        "data",
        "indices",
        "data_to_predict",
        "i",
        "axis",
        "ord",
        "labels",
        "append",
        "label_change",
        "splabel",
        "labels"
    ],
    "literals": [
        "\"distance\"",
        "\"distance\"",
        "\"density\"",
        "f\"Passed group_merging_mode='{group_merging_mode}' while only 'distance' and 'density' are allowed\"",
        "'float64'",
        "'float64'",
        "\"density\"",
        "\"density\""
    ],
    "variables": [
        "minPts",
        "radius",
        "group_merging_mode",
        "scale",
        "reassign_outliers",
        "starting_points_list",
        "cluster_labels",
        "merge_groups",
        "connected_pairs_edges",
        "data",
        "points_group_labels",
        "valid_data_index",
        "cluster_labels",
        "data",
        "data",
        "data",
        "mu",
        "data",
        "distances_from_origin",
        "median",
        "median",
        "scaled_data",
        "starting_points_list",
        "U1",
        "s1",
        "_",
        "alpha_scores",
        "alpha_scores",
        "alpha_scores_ordered_indices",
        "current_label",
        "points_group_labels",
        "starting_point_index",
        "current_group_center",
        "points_group_labels",
        "starting_point_index",
        "points_current_group_count",
        "points_group_labels",
        "j",
        "data",
        "parent",
        "s",
        "parent",
        "parent_of_s1",
        "parent_of_s2",
        "parent",
        "in_volume",
        "dimension",
        "center_distance",
        "c",
        "connected_pairs",
        "connected_pairs_store",
        "volume",
        "volume",
        "first_starting_point",
        "successive_starting_points",
        "close_starting_points",
        "current_alpha_scores_ordered",
        "index_overlap",
        "close_starting_points",
        "points_in_first_ball",
        "density_first_ball",
        "next_starting_point",
        "points_in_next_ball",
        "density_next_ball",
        "points_in_intersection_count",
        "density_intersection",
        "index_overlap",
        "candidate",
        "index_overlap",
        "k",
        "close_starting_points",
        "labels",
        "labels_set",
        "min_samples",
        "min_samples",
        "sorted_dict",
        "clabels",
        "clabels",
        "labels",
        "max_label",
        "labels",
        "max_label",
        "old_cluster_count",
        "potential_noise_labels",
        "labels",
        "valid_data_index",
        "valid_group_labels",
        "label_change",
        "unique_outliers_group_labels",
        "unique_valid_group_labels",
        "valid_starting_points_list",
        "closest_group",
        "labels",
        "labels",
        "labels",
        "label_change",
        "labels",
        "data_to_predict",
        "indices",
        "splabel"
    ],
    "comments": [
        "center and scale all data points",
        "aggregation labels (group labels)",
        "Array of length=number of datapoints, all filled with True. It will be used to discard self.data points",
        "convert data to np.ndarray",
        "empirical mean value of each feature",
        "center all self.data points by taking off the empirical mean value of each feature",
        "distance of each self.data point from 0",
        "50% of self.data points are within that radius",
        "prevent zero-division",
        "now 50% of self.data are in unit ball, so mext=1",
        "list that will contain groups' starting points",
        "performing SVD to get alpha score of every datapoint",
        "scores alpha-i",
        "if data has only one feature, svd is not needed",
        "ordered indeces of datapoints according to their alpha score",
        "starting labelling from 0. This label will increment moving to the next group",
        "-1 means unassigned",
        "iterate over the whole dataset",
        "extracting starting point index",
        "point is already assigned to a group",
        "point is not assigned to a group, so it will be the starting point of a new one",
        "this it the first data point of the group. It will be used to compute the distance",
        "labelling the datapoint",
        "this new point determines a new group, with only this datapoint",
        "scan all the remaining datapoints",
        "point is already assigned",
        "first far point, we have to exit the loop taking advantage of the ordered alpha scores",
        "check if the point satisfies aggregation condition",
        "assign the label with the current group label",
        "increase the number of points in the group",
        "group assigned, moving to the next starting point",
        "the distance between the two groups",
        "creating a SET for every starting point",
        "list where each element [i,j] is an arch from i to j in the connected componenets merging",
        "loop through starting points",
        "extract the datapoint corresponding to the index of the starting point",
        "get the rest of starting points from position i+1",
        "mask with starting points indeces. Initialized to the range of all the successive starting points indeces",
        "calculate the density",
        "2*distance_scale*radius",
        "compute array of True or False to get the points in the Ball centered in first_starting_point",
        "compute density of the first ball",
        "compute density of the second ball",
        "check if the two balls overlap",
        "find points that are in the intersection of balls",
        "group_merging_mode=\"distance\":",
        "Initialize an array of all false",
        "if no overlapping occurs",
        "all starting points from index i+1 that have a mask value True",
        "two groups merge when their starting points distance is smaller than scale*radius",
        "merge roots of starting points",
        "append indeces of merged componenents",
        "deep copy of aggregation labels (group labels)",
        "starting label for clusters",
        "fully merging griups to get clusters",
        "extracting the clusters with very rare number of objects as potential \"noises\"",
        "mark datapoints with max_label to set them as outliers",
        "mark outliers as not valid datapoints in the index",
        "extracting non outlier starting points",
        "store the mapping between valid group labels and cluster labels",
        "get unique labels of group marked as outlier",
        "get unique labels of non outliers groups",
        "list of starting points of non outlier groups",
        "reassign outliers to the closest groups",
        "mark outliers with label -1",
        "reassign labels so that they start from 0 (and eventually there is -1 for outliers)",
        "mapping between group labels and cluster labels"
    ],
    "docstrings": [
        "\"\"\"\n        Parameters:\n            minPts : int, default=0\n                Threshold used to find outlier clusters. \n                If reassign_outliers=True points of clusters that include less than minPts points are reallocated to thenearest cluster.\n\n            radius : float, default=0.5 \n                Maximum distance between the current starting point and datapoint to have the latter included in the starting point's group\n            \n            group_merging_mode : str, {'distance', 'density'}, default='distance'\n                - 'density': merge two groups if the density of their intersection is greater than at least one of the two groups.               \n                - 'distance': merge two groups if their starting points have a distance smaller than scale*radius.\n             \n            scale : float, default=1.5\n                Parameter used for distance-based merging. The higher the parameter, the more groups are merged together.\n\n            reassign_outliers : boolean, default=True\n                If True, outliers are reassigned to the closest non-outlier cluster. If False they are marked with label -1\n        \"\"\"",
        "\"\"\"Center and scale data so that 50% fall in the unitary ball, making mext=1\n        \n        Parameter:\n            data (numpy.ndarray): datapoints on which the method has to be fit\n        \n        Returns:\n            scaled_data (nmpy.ndarray): data centered and scaled\n        \"\"\"",
        "\"\"\"Perform aggregation phase.\n\n        Returns:         \n            points_group_labels (numpy.ndarray) : \n                At index i group label of datapoint i after aggregation.\n            \n            starting_points_list (numpy.ndarray) : \n                Array of groups' starting points info.\n                    at index [i,0] starting point index of group i\n                    at index [i, 1] group i starting_point's alpha_score\n                    at index [i, 2] number of group i elements\n        \"\"\"",
        "\"\"\"Perform merging phase.\n        \n        Returns:\n\n            labels_set : list\n                Connected components of graph with groups as vertices.\n            \n            connected_pairs_store : list\n                List for connected group labels.\n\n        \"\"\"",
        "\"\"\"Disjoint-set data structure.\"\"\"",
        "\"\"\"Recursive procedure to find parent of a node and return it.\"\"\"",
        "\"\"\"Merge the roots of two node. Returns nothing.\"\"\"",
        "\"\"\"Check if two groups overlap, return True or False accordingly\"\"\"",
        "\"\"\"Calculate the density of intersection\"\"\"",
        "\"\"\"Returns the volume of the intersection of two n-dimensional spheres with the specified radius.\"\"\"",
        "\"\"\"Filter outliers in terms of min_samples\"\"\"",
        "\"\"\"Predict the cluster to which every datapoint belongs.\n        Parameter:\n            data_to_predict : numpy.ndarray\n                The ndarray-like input of shape (n_samples,)\n        Returns:\n            labels : numpy.ndarray\n                The predicted clustering labels.\n        \"\"\""
    ],
    "functions": [
        "fit",
        "data_preparation",
        "aggregating",
        "merging",
        "findParent",
        "mergeRoots",
        "checkOverlap",
        "computeIntersectionDensity",
        "computeIntersectionVolume",
        "outlier_filter",
        "reassign_labels",
        "clustering",
        "predict"
    ],
    "classes": [
        "CLASSIX",
        "SET"
    ]
}