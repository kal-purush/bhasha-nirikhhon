{
    "identifiers": [
        "shantel",
        "box",
        "controllers",
        "java",
        "text",
        "SimpleDateFormat",
        "java",
        "util",
        "java",
        "util",
        "Calendar",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Random",
        "java",
        "util",
        "javax",
        "servlet",
        "http",
        "HttpSession",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "http",
        "HttpHeaders",
        "org",
        "springframework",
        "http",
        "HttpStatus",
        "org",
        "springframework",
        "http",
        "ResponseEntity",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "CrossOrigin",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "GetMapping",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "PostMapping",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "RequestMapping",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "RequestParam",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "RestController",
        "shantel",
        "box",
        "dto",
        "BonusNagradeDTO",
        "shantel",
        "box",
        "model",
        "Bodovi",
        "shantel",
        "box",
        "model",
        "BonusNagrade",
        "shantel",
        "box",
        "model",
        "Korisnik",
        "shantel",
        "box",
        "services",
        "BodoviService",
        "shantel",
        "box",
        "services",
        "BonusNagradeService",
        "shantel",
        "box",
        "services",
        "KorisnikService",
        "RestController",
        "RequestMapping",
        "value",
        "Autowired",
        "bonusNagradeService",
        "Autowired",
        "korisnikService",
        "Autowired",
        "bodoviService",
        "CrossOrigin",
        "value",
        "allowCredentials",
        "GetMapping",
        "value",
        "session",
        "username",
        "session",
        "getAttribute",
        "AuthenticationController",
        "KORISNIK_KEY",
        "sender",
        "korisnikService",
        "findKorisnikByUsername",
        "username",
        "sviKorisnici",
        "korisnikService",
        "findAll",
        "randomKorisnici",
        "rand",
        "sender",
        "bonusNagrada",
        "bonusNagradeService",
        "findEmptyReceivers",
        "sender",
        "bonusNagrada",
        "getRandomSelectedUsers",
        "userIds",
        "i",
        "i",
        "randomUser",
        "rand",
        "nextInt",
        "sviKorisnici",
        "size",
        "korisnik",
        "sviKorisnici",
        "get",
        "randomUser",
        "randomKorisnici",
        "contains",
        "korisnik",
        "korisnik",
        "getUsername",
        "equals",
        "sender",
        "getUsername",
        "korisnik",
        "getUsername",
        "equals",
        "randomKorisnici",
        "add",
        "korisnik",
        "i",
        "userIds",
        "korisnik",
        "getId",
        "bonusNagrada",
        "setRandomSelectedUsers",
        "userIds",
        "bonusNagradeService",
        "save",
        "bonusNagrada",
        "userIds",
        "bonusNagrada",
        "getRandomSelectedUsers",
        "split",
        "i",
        "i",
        "userIds",
        "length",
        "i",
        "korisnik",
        "korisnikService",
        "findKorisnikById",
        "parseInt",
        "userIds",
        "i",
        "randomKorisnici",
        "add",
        "korisnik",
        "e",
        "randomKorisnici",
        "HttpStatus",
        "NO_CONTENT",
        "responseHeaders",
        "responseHeaders",
        "randomKorisnici",
        "HttpStatus",
        "OK",
        "CrossOrigin",
        "value",
        "allowCredentials",
        "GetMapping",
        "value",
        "session",
        "username",
        "session",
        "getAttribute",
        "AuthenticationController",
        "KORISNIK_KEY",
        "sender",
        "korisnikService",
        "findKorisnikByUsername",
        "username",
        "bonusNagradeService",
        "findEmptyReceivers",
        "sender",
        "HttpStatus",
        "OK",
        "HttpStatus",
        "OK",
        "session",
        "username",
        "session",
        "getAttribute",
        "AuthenticationController",
        "KORISNIK_KEY",
        "korisnik",
        "korisnikService",
        "findKorisnikByUsername",
        "username",
        "korisnik",
        "CrossOrigin",
        "value",
        "allowCredentials",
        "PostMapping",
        "value",
        "RequestParam",
        "id",
        "session",
        "receiver",
        "korisnikService",
        "findKorisnikById",
        "id",
        "receiver",
        "sender",
        "findCurrentKorisnik",
        "session",
        "bonusNagrada",
        "bonusNagradeService",
        "findEmptyReceivers",
        "sender",
        "bonusNagrada",
        "datum",
        "bonusType",
        "bonusValue",
        "bonusNagrada",
        "setReceiver",
        "receiver",
        "bonusNagrada",
        "bod",
        "bonusValue",
        "datum",
        "receiver",
        "bod",
        "setSpecijalnaNagrada",
        "bonusType",
        "bonusNagradeService",
        "save",
        "bonusNagrada",
        "bodoviService",
        "save",
        "bod",
        "HttpStatus",
        "OK",
        "e",
        "HttpStatus",
        "OK",
        "CrossOrigin",
        "value",
        "allowCredentials",
        "GetMapping",
        "value",
        "date",
        "formatter",
        "korisnici",
        "sviKorisnici",
        "korisnikService",
        "findAll",
        "korisnik",
        "sviKorisnici",
        "bodovi",
        "korisnik",
        "getBodovi",
        "bonusBodovi",
        "bod",
        "bodovi",
        "formatter",
        "format",
        "date",
        "equals",
        "formatter",
        "format",
        "bod",
        "getDatumDobijanja",
        "bod",
        "getSpecijalnaNagrada",
        "equals",
        "bonusBodovi",
        "add",
        "bod",
        "e",
        "korisnik",
        "setBodovi",
        "bonusBodovi",
        "korisnici",
        "add",
        "korisnik",
        "Collections",
        "sort",
        "korisnici",
        "Collections",
        "reverse",
        "korisnici",
        "korisnici",
        "HttpStatus",
        "OK",
        "SuppressWarnings",
        "CrossOrigin",
        "value",
        "allowCredentials",
        "GetMapping",
        "value",
        "korisnici",
        "sviKorisnici",
        "korisnikService",
        "findAll",
        "now",
        "Calendar",
        "getInstance",
        "month",
        "now",
        "get",
        "Calendar",
        "MONTH",
        "korisnik",
        "sviKorisnici",
        "bodovi",
        "korisnik",
        "getBodovi",
        "bonusBodovi",
        "bod",
        "bodovi",
        "bod",
        "getDatumDobijanja",
        "getMonth",
        "month",
        "bod",
        "getSpecijalnaNagrada",
        "equals",
        "bonusBodovi",
        "add",
        "bod",
        "e",
        "korisnik",
        "setBodovi",
        "bonusBodovi",
        "korisnici",
        "add",
        "korisnik",
        "Collections",
        "sort",
        "korisnici",
        "Collections",
        "reverse",
        "korisnici",
        "korisnici",
        "HttpStatus",
        "OK",
        "CrossOrigin",
        "value",
        "allowCredentials",
        "GetMapping",
        "value",
        "date",
        "formatter",
        "sveBonusNagrade",
        "bonusNagradeService",
        "findAll",
        "dtoList",
        "nagrade",
        "sveBonusNagrade",
        "formatter",
        "format",
        "nagrade",
        "getDate",
        "equals",
        "formatter",
        "format",
        "date",
        "dtoList",
        "add",
        "nagrade",
        "subListBonusBodovi",
        "dtoList",
        "subList",
        "subListBonusBodovi",
        "HttpStatus",
        "OK"
    ],
    "literals": [
        "\"/bonusBodovi\"",
        "\"https://kutija.net\"",
        "\"true\"",
        "\"/randomUsers\"",
        "\"----------------SENDER-----------------------\"",
        "\"SENDER: \"",
        "\"\"",
        "\"djura\"",
        "\";\"",
        "\";\"",
        "\"Access-Control-Allow-Origin\"",
        "\"https://kutija.net\"",
        "\"https://kutija.net\"",
        "\"true\"",
        "\"/hasSendGift\"",
        "\"-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"",
        "\"TRUE\"",
        "\"FALSE\"",
        "\"https://kutija.net\"",
        "\"true\"",
        "\"/chosen\"",
        "\"id\"",
        "\"--------------------------------------------------------------------\"",
        "\"RECEIVER: \"",
        "\"--------------------------------------------------------------------\"",
        "\"Bonus Nagrada: \"",
        "\"Poeni\"",
        "\"Poeni\"",
        "\"https://kutija.net\"",
        "\"true\"",
        "\"/allDailyBonuses\"",
        "\"yyyy-MM-dd\"",
        "\"Poeni\"",
        "\"deprecation\"",
        "\"https://kutija.net\"",
        "\"true\"",
        "\"/allMontlyBonuses\"",
        "\"Poeni\"",
        "\"https://kutija.net\"",
        "\"true\"",
        "\"/dailyRecentBonus\"",
        "\"yyyy-MM-dd\""
    ],
    "variables": [
        "bonusNagradeService",
        "korisnikService",
        "bodoviService"
    ],
    "comments": [
        "Korisnik sender = findCurrentKorisnik(session);",
        "stari nacin",
        "System.out.println(bonusNagradeService.findEmptyReceivers());",
        "List<BonusNagrade> bonusNagrade = bonusNagradeService.findEmptyReceivers();",
        "BonusNagrade bonusNagrada = new BonusNagrade();",
        "for ( BonusNagrade nagrade: bonusNagrade ) {",
        "if ( nagrade.getSenderId() == sender.getId() ) {",
        "bonusNagrada = nagrade;",
        "}",
        "}",
        "TODO",
        "AKO ima vec generisanih korisnika, onda vratiti to. Ukoliko nema generisati nove -- uradjeno?proveriti",
        "Staviti da nije moguce samog sebe dobiti kao opciju -- uradjeno ?proveriti",
        "String username = (String) session.getAttribute(AuthenticationController.KORISNIK_KEY);",
        "Korisnik sender = korisnikService.findKorisnikByUsername(username);",
        "TODO",
        "DODAJ Repository, Service i ServiceImpl za bonusNagrade pa posle toga kreiraj objekat ovde i posalji ga na cuvanje.",
        "posle toga prepravi sistem za racunanje bodova",
        "END",
        "System.out.println(korisnik.getBodovi());",
        "System.out.println(\"SIZE: \" + korisnik.getBodovi());",
        "System.out.println(\"bod\" + bod);",
        "System.out.println(\"======== BONUS BOD ======\" + bod);",
        "else {",
        "bodovi.remove(bod);",
        "System.out.println(\"SIZE: \" + korisnik.getBodovi().size());",
        "if( korisnik.getBodovi().size() == 0) {",
        "System.out.println(\"SIZE: \" + korisnik.getBodovi().size());",
        "break;",
        "}",
        "}",
        "List<BonusNagrade> allBonusNagrade = bonusNagradeService.findByReceiverIsNotNull();",
        "List<BonusNagrade> returnList = new ArrayList<>();",
        "",
        "for ( BonusNagrade bonusNagrada: allBonusNagrade) {",
        "if ( formatter.format(bonusNagrada.getDate()).equals(formatter.format(date))) {",
        "returnList.add(bonusNagrada);",
        "}",
        "}",
        "",
        "return new ResponseEntity<List<BonusNagrade>>(returnList, HttpStatus.OK);"
    ],
    "docstrings": [],
    "functions": [
        "getRandomUsers",
        "hasSendGift",
        "Korisnik",
        "findCurrentKorisnik",
        "chooseUser",
        "getAllDailyBonus",
        "getAllBonus",
        "bonusi"
    ],
    "classes": [
        "BonusBodoviController"
    ]
}