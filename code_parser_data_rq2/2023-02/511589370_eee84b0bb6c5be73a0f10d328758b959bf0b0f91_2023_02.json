{
    "identifiers": [
        "DateFormat",
        "dateToFormat",
        "describe",
        "it",
        "DateFormat",
        "DateFormat",
        "DateFormat",
        "DateFormat",
        "DateFormat",
        "expect",
        "dateToFormat",
        "mockDate",
        "format",
        "output",
        "it",
        "DateFormat",
        "DateFormat",
        "DateFormat",
        "DateFormat",
        "DateFormat",
        "expect",
        "dateToFormat",
        "mockDateWithMillis",
        "format",
        "output",
        "it",
        "DateFormat",
        "DateFormat",
        "DateFormat",
        "DateFormat",
        "DateFormat",
        "expect",
        "dateToFormat",
        "mockDateWithValuesUnderTen",
        "format",
        "output",
        "it",
        "expect",
        "dateToFormat",
        "invalidDate",
        "DateFormat"
    ],
    "literals": [
        "'../date-utils'",
        "'2023-02-22T08:38:36Z'",
        "'2023-02-22T08:38:36.001Z'",
        "'2023-02-02T08:08:06.001Z'",
        "'2023-02-22T24:38:36.001Z'",
        "'date utils'",
        "'should format a date correctly'",
        "'2023-02-22'",
        "'Feb 22, 2023, 08:38:36.000'",
        "'08:38:36.000'",
        "'08:38:36'",
        "'08:38'",
        "'should format a date with milliseconds correctly'",
        "'2023-02-22'",
        "'Feb 22, 2023, 08:38:36.001'",
        "'08:38:36.001'",
        "'08:38:36'",
        "'08:38'",
        "'should format a date with values lower than 10 correctly'",
        "'2023-02-02'",
        "'Feb 2, 2023, 08:08:06.001'",
        "'08:08:06.001'",
        "'08:08:06'",
        "'08:08'",
        "'should return invalid date when the date is invalid'",
        "'invalid date'"
    ],
    "variables": [
        "mockDate",
        "mockDateWithMillis",
        "mockDateWithValuesUnderTen",
        "invalidDate"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}