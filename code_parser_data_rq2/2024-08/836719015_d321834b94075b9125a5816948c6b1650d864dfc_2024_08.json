{
    "identifiers": [
        "flask",
        "Flask",
        "request",
        "jsonify",
        "send_from_directory",
        "make_response",
        "psycopg2",
        "os",
        "uuid",
        "my_clasifier",
        "category_clasification",
        "my_generator",
        "generate_answer",
        "transformers",
        "TFAutoModelForSequenceClassification",
        "AutoTokenizer",
        "joblib",
        "tensorflow",
        "keras",
        "models",
        "load_model",
        "Flask",
        "joblib",
        "load",
        "joblib",
        "load",
        "load_model",
        "model_path",
        "psycopg2",
        "connect",
        "conn",
        "get_db_connection",
        "conn",
        "cursor",
        "cur",
        "execute",
        "conn",
        "commit",
        "cur",
        "close",
        "conn",
        "close",
        "create_table",
        "app",
        "route",
        "send_from_directory",
        "app",
        "route",
        "methods",
        "request",
        "json",
        "data",
        "get",
        "data",
        "get",
        "category_clasification",
        "model",
        "tokenizer",
        "label_encoder",
        "summary",
        "question",
        "generate_answer",
        "summary",
        "question",
        "category",
        "request",
        "headers",
        "get",
        "uuid",
        "uuid4",
        "get_db_connection",
        "conn",
        "cursor",
        "cur",
        "execute",
        "summary",
        "question",
        "answer",
        "os",
        "getenv",
        "trace_id",
        "conn",
        "commit",
        "cur",
        "close",
        "conn",
        "close",
        "jsonify",
        "answer",
        "trace_id",
        "app",
        "run",
        "host",
        "debug"
    ],
    "literals": [
        "'model_lstm_v_1.0.h5'",
        "'tokenizer.pkl'",
        "'label_encoder.pkl'",
        "'postgres://postgres:password@localhost:5432/postgres'",
        "'/'",
        "'static'",
        "'index.html'",
        "'/ask'",
        "'POST'",
        "'summary'",
        "''",
        "'question'",
        "''",
        "'Trace-ID'",
        "'FLASK_ENV'",
        "'development'",
        "'1.0'",
        "'My first mod'",
        "'1.0'",
        "\"answer\"",
        "\"trace_id\"",
        "'__main__'",
        "'0.0.0.0'"
    ],
    "variables": [
        "app",
        "model_path",
        "tokenizer",
        "label_encoder",
        "model",
        "conn",
        "conn",
        "cur",
        "data",
        "summary",
        "question",
        "category",
        "answer",
        "trace_id",
        "conn",
        "cur"
    ],
    "comments": [
        "Load the model and tokenizer",
        "Load the tokenizer",
        "Load the label encoder",
        "Load the model from the .h5 file",
        "Database connection",
        "conn = psycopg2.connect(os.getenv('DATABASE_URL'))",
        "Create table if not exists",
        "Call create_table when the app starts",
        "Serve static/index.html on root route",
        "Handle POST request on /ask",
        "Get trace ID from headers or generate a new one",
        "Save to database",
        "environment",
        "app_version (you can set this to your actual version)",
        "model (replace with your actual model)",
        "model_version (replace with your actual model version)"
    ],
    "docstrings": [
        "'''CREATE TABLE IF NOT EXISTS qa_logs\n                    (id SERIAL PRIMARY KEY,\n                    summary TEXT,\n                    question TEXT,\n                    answer TEXT,\n                    environment TEXT,\n                    app_version TEXT,\n                    model TEXT,\n                    model_version TEXT,\n                    trace_id UUID,\n                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP)'''",
        "'''INSERT INTO qa_logs \n                (summary, question, answer, environment, app_version, model, model_version, trace_id)\n                VALUES (%s, %s, %s, %s, %s, %s, %s, %s)'''"
    ],
    "functions": [
        "get_db_connection",
        "create_table",
        "index",
        "ask"
    ],
    "classes": []
}