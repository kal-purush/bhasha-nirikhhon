{
    "identifiers": [
        "buildGetCanEditModScope",
        "modDefinitionFactory",
        "modMetadataFactory",
        "validateRegistryId",
        "organizationStateFactory",
        "UserRole",
        "describe",
        "it",
        "buildGetCanEditModScope",
        "userScope",
        "modDefinitionFactory",
        "modMetadataFactory",
        "validateRegistryId",
        "userScope",
        "expect",
        "canEditModScope",
        "mod",
        "it",
        "organizationStateFactory",
        "buildGetCanEditModScope",
        "userScope",
        "organization",
        "modDefinitionFactory",
        "modMetadataFactory",
        "validateRegistryId",
        "organization",
        "expect",
        "canEditModScope",
        "mod",
        "it",
        "organizationStateFactory",
        "UserRole",
        "buildGetCanEditModScope",
        "userScope",
        "organization",
        "modDefinitionFactory",
        "modMetadataFactory",
        "validateRegistryId",
        "organization",
        "expect",
        "canEditModScope",
        "mod",
        "it",
        "organizationStateFactory",
        "buildGetCanEditModScope",
        "userScope",
        "organization",
        "modDefinitionFactory",
        "modMetadataFactory",
        "validateRegistryId",
        "expect",
        "canEditModScope",
        "mod"
    ],
    "literals": [
        "\"@/extensionConsole/pages/mods/utils/buildGetCanEditModScope\"",
        "\"@/testUtils/factories/modDefinitionFactories\"",
        "\"@/testUtils/factories/modComponentFactories\"",
        "\"@/types/helpers\"",
        "\"@/testUtils/factories/authFactories\"",
        "\"@/types/contract\"",
        "\"my-test-user\"",
        "\"buildGetCanEditModScope\"",
        "\"returns true for a mod with the user's scope\"",
        "${userScope}/my-test-mod",
        "\"returns true for a mod with a package editor role\"",
        "${organization.scope}/my-test-mod",
        "\"returns false is user is not an editor role\"",
        "${organization.scope}/my-test-mod",
        "\"returns false when membership scope does not match mod scope\"",
        "\"@some-other-scope/my-test-mod\""
    ],
    "variables": [
        "userScope",
        "canEditModScope",
        "mod",
        "organization",
        "canEditModScope",
        "mod",
        "organization",
        "canEditModScope",
        "mod",
        "organization",
        "canEditModScope",
        "mod"
    ],
    "comments": [],
    "docstrings": [
        "* Copyright (C) 2024 PixieBrix, Inc.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>."
    ],
    "functions": [],
    "classes": []
}