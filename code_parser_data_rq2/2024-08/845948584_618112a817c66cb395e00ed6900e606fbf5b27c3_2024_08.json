{
    "identifiers": [
        "modules",
        "entry",
        "mainEntry",
        "parcelRequireName",
        "globalName",
        "globalThis",
        "globalThis",
        "globalObject",
        "parcelRequireName",
        "globalObject",
        "parcelRequireName",
        "previousRequire",
        "name",
        "jumped",
        "cache",
        "name",
        "modules",
        "name",
        "globalObject",
        "parcelRequireName",
        "globalObject",
        "parcelRequireName",
        "jumped",
        "currentRequire",
        "currentRequire",
        "name",
        "previousRequire",
        "previousRequire",
        "name",
        "nodeRequire",
        "name",
        "nodeRequire",
        "name",
        "name",
        "err",
        "err",
        "localRequire",
        "resolve",
        "localRequire",
        "cache",
        "name",
        "newRequire",
        "name",
        "modules",
        "name",
        "localRequire",
        "cache",
        "name",
        "x",
        "localRequire",
        "x",
        "res",
        "newRequire",
        "res",
        "x",
        "modules",
        "name",
        "x",
        "id",
        "id",
        "x",
        "moduleName",
        "moduleName",
        "newRequire",
        "newRequire",
        "newRequire",
        "Module",
        "newRequire",
        "modules",
        "newRequire",
        "cache",
        "newRequire",
        "previousRequire",
        "newRequire",
        "id",
        "exports",
        "modules",
        "id",
        "require",
        "exports",
        "newRequire",
        "globalObject",
        "parcelRequireName",
        "globalObject",
        "parcelRequireName",
        "newRequire",
        "i",
        "entry",
        "i",
        "newRequire",
        "entry",
        "i",
        "mainEntry",
        "newRequire",
        "mainEntry",
        "exports",
        "mainExports",
        "define",
        "define",
        "define",
        "mainExports",
        "globalName",
        "globalName",
        "mainExports",
        "require",
        "exports",
        "arguments",
        "moduleName",
        "OldModule",
        "moduleName",
        "moduleName",
        "fn",
        "fn",
        "fn",
        "fn",
        "moduleName",
        "Module",
        "HMR_HOST",
        "location",
        "location",
        "HMR_PORT",
        "location",
        "parent",
        "parent",
        "WebSocket",
        "getHostname",
        "getPort",
        "HMR_SECURE",
        "location",
        "hostname",
        "HMR_USE_SSE",
        "ws",
        "EventSource",
        "ws",
        "WebSocket",
        "protocol",
        "hostname",
        "port",
        "port",
        "err",
        "err",
        "err",
        "ws",
        "browser",
        "chrome",
        "chrome",
        "browser",
        "eval",
        "err",
        "supportsSourceURL",
        "err",
        "ws",
        "checkedAssets",
        "assetsToAccept",
        "assetsToDispose",
        "data",
        "removeErrorOverlay",
        "data",
        "asset",
        "asset",
        "HMR_ENV_HASH",
        "assets",
        "asset",
        "asset",
        "asset",
        "hmrAcceptCheck",
        "asset",
        "asset",
        "handled",
        "CustomEvent",
        "CustomEvent",
        "hmrApplyUpdates",
        "assets",
        "i",
        "assetsToDispose",
        "i",
        "assetsToDispose",
        "i",
        "processedAssets",
        "id",
        "hmrDispose",
        "assetsToDispose",
        "i",
        "id",
        "processedAssets",
        "id",
        "processedAssets",
        "i",
        "assetsToAccept",
        "i",
        "assetsToAccept",
        "i",
        "processedAssets",
        "id",
        "hmrAccept",
        "assetsToAccept",
        "i",
        "id",
        "processedAssets",
        "id",
        "fullReload",
        "data",
        "ansiDiagnostic",
        "data",
        "ansiDiagnostic",
        "ansiDiagnostic",
        "ansiDiagnostic",
        "ansiDiagnostic",
        "stack",
        "ansiDiagnostic",
        "removeErrorOverlay",
        "createErrorOverlay",
        "data",
        "overlay",
        "ws",
        "WebSocket",
        "ws",
        "e",
        "e",
        "e",
        "ws",
        "OVERLAY_ID",
        "overlay",
        "overlay",
        "diagnostics",
        "overlay",
        "OVERLAY_ID",
        "diagnostic",
        "diagnostics",
        "diagnostic",
        "diagnostic",
        "p",
        "frame",
        "p",
        "encodeURIComponent",
        "frame",
        "frame",
        "frame",
        "diagnostic",
        "errorHTML",
        "diagnostic",
        "stack",
        "diagnostic",
        "hint",
        "hint",
        "diagnostic",
        "diagnostic",
        "errorHTML",
        "overlay",
        "errorHTML",
        "overlay",
        "location",
        "location",
        "extCtx",
        "extCtx",
        "extCtx",
        "extCtx",
        "bundle",
        "id",
        "bundle",
        "modules",
        "k",
        "modules",
        "d",
        "modules",
        "k",
        "dep",
        "modules",
        "k",
        "d",
        "dep",
        "id",
        "dep",
        "dep",
        "dep",
        "id",
        "parents",
        "bundle",
        "k",
        "bundle",
        "parents",
        "parents",
        "getParents",
        "bundle",
        "id",
        "parents",
        "link",
        "link",
        "href",
        "link",
        "newLink",
        "link",
        "link",
        "link",
        "newLink",
        "href",
        "link",
        "newLink",
        "link",
        "cssTimeout",
        "cssTimeout",
        "setTimeout",
        "i",
        "links",
        "i",
        "links",
        "i",
        "getHostname",
        "hostname",
        "getPort",
        "href",
        "href",
        "hostname",
        "getPort",
        "href",
        "href",
        "location",
        "servedFromHMRServer",
        "absolute",
        "updateLink",
        "links",
        "i",
        "cssTimeout",
        "asset",
        "asset",
        "script",
        "asset",
        "asset",
        "script",
        "resolve",
        "reject",
        "script",
        "resolve",
        "script",
        "script",
        "reject",
        "_document$head",
        "_document$head",
        "_document$head",
        "script",
        "importScripts",
        "asset",
        "asset",
        "resolve",
        "reject",
        "importScripts",
        "asset",
        "resolve",
        "err",
        "reject",
        "err",
        "assets",
        "supportsSourceURL",
        "assets",
        "asset",
        "_hmrDownload",
        "hmrDownload",
        "asset",
        "_hmrDownload",
        "_hmrDownload",
        "err",
        "extCtx",
        "extCtx",
        "extCtx",
        "ServiceWorkerGlobalScope",
        "ServiceWorkerGlobalScope",
        "extCtx",
        "err",
        "scriptsToRemove",
        "promises",
        "assets",
        "asset",
        "hmrApply",
        "asset",
        "scriptsToRemove",
        "scriptsToRemove",
        "script",
        "script",
        "_document$head2",
        "_document$head2",
        "_document$head2",
        "script",
        "bundle",
        "asset",
        "bundle",
        "modules",
        "asset",
        "reloadCSS",
        "asset",
        "asset",
        "bundle",
        "deps",
        "modules",
        "asset",
        "modules",
        "asset",
        "dep",
        "oldDeps",
        "deps",
        "dep",
        "deps",
        "dep",
        "oldDeps",
        "dep",
        "oldDeps",
        "dep",
        "getParents",
        "id",
        "parents",
        "hmrDelete",
        "id",
        "supportsSourceURL",
        "eval",
        "asset",
        "asset",
        "modules",
        "asset",
        "fn",
        "deps",
        "bundle",
        "hmrApply",
        "bundle",
        "asset",
        "bundle",
        "id",
        "bundle",
        "modules",
        "modules",
        "id",
        "modules",
        "id",
        "dep",
        "deps",
        "getParents",
        "deps",
        "dep",
        "parents",
        "orphans",
        "deps",
        "dep",
        "modules",
        "id",
        "bundle",
        "id",
        "orphans",
        "id",
        "hmrDelete",
        "id",
        "bundle",
        "hmrDelete",
        "bundle",
        "id",
        "bundle",
        "id",
        "depsByBundle",
        "hmrAcceptCheckOne",
        "bundle",
        "id",
        "depsByBundle",
        "getParents",
        "id",
        "parents",
        "parents",
        "hmrAcceptCheckOne",
        "v",
        "v",
        "a",
        "accepted",
        "getParents",
        "v",
        "p",
        "accepted",
        "parents",
        "p",
        "accepted",
        "bundle",
        "id",
        "depsByBundle",
        "bundle",
        "modules",
        "depsByBundle",
        "depsByBundle",
        "bundle",
        "bundle",
        "hmrAcceptCheck",
        "bundle",
        "id",
        "depsByBundle",
        "checkedAssets",
        "id",
        "checkedAssets",
        "id",
        "bundle",
        "id",
        "assetsToDispose",
        "bundle",
        "id",
        "cached",
        "cached",
        "cached",
        "assetsToAccept",
        "bundle",
        "id",
        "bundle",
        "id",
        "bundle",
        "id",
        "bundle",
        "id",
        "cached",
        "cached",
        "cached",
        "bundle",
        "id",
        "cached",
        "cached",
        "cached",
        "cached",
        "cb",
        "cb",
        "bundle",
        "id",
        "bundle",
        "id",
        "bundle",
        "id",
        "bundle",
        "id",
        "bundle",
        "id",
        "cached",
        "cached",
        "cached",
        "cached",
        "cb",
        "cb",
        "getParents",
        "id",
        "assetsToAlsoAccept",
        "assetsToAccept",
        "assetsToAlsoAccept",
        "a",
        "hmrDispose",
        "a",
        "a",
        "assetsToAccept",
        "assetsToAccept",
        "assetsToAlsoAccept",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "parcelHelpers",
        "_starsJpg",
        "require",
        "parcelHelpers",
        "_sunmapJpg",
        "require",
        "parcelHelpers",
        "_mercurymapJpg",
        "require",
        "parcelHelpers",
        "_venusmapJpg",
        "require",
        "parcelHelpers",
        "_earthMap1KJpg",
        "require",
        "parcelHelpers",
        "_marsJpg",
        "require",
        "parcelHelpers",
        "_jupitermapJpg",
        "require",
        "parcelHelpers",
        "_saturnmapJpg",
        "require",
        "parcelHelpers",
        "_saturnringcolorPng",
        "require",
        "parcelHelpers",
        "_uranusmapJpg",
        "require",
        "parcelHelpers",
        "_uranusringcolourJpg",
        "require",
        "parcelHelpers",
        "_neptunemapJpg",
        "require",
        "parcelHelpers",
        "_plutomapJpg",
        "_three",
        "renderer",
        "renderer",
        "_three",
        "_three",
        "_orbitControlsJs",
        "camera",
        "renderer",
        "camera",
        "orbit",
        "_three",
        "scene",
        "ambientLight",
        "_three",
        "scene",
        "cubeTextureLoader",
        "_starsJpgDefault",
        "_starsJpgDefault",
        "_starsJpgDefault",
        "_starsJpgDefault",
        "_starsJpgDefault",
        "_starsJpgDefault",
        "_three",
        "_three",
        "_three",
        "textureLoader",
        "_sunmapJpgDefault",
        "_three",
        "sunGeo",
        "sunMat",
        "scene",
        "sun",
        "size",
        "texture",
        "position",
        "ring",
        "_three",
        "size",
        "_three",
        "textureLoader",
        "texture",
        "_three",
        "geo",
        "mat",
        "_three",
        "obj",
        "mesh",
        "ring",
        "_three",
        "ring",
        "ring",
        "_three",
        "textureLoader",
        "ring",
        "_three",
        "_three",
        "ringGeo",
        "ringMat",
        "obj",
        "ringMesh",
        "ringMesh",
        "position",
        "ringMesh",
        "scene",
        "obj",
        "mesh",
        "position",
        "createPlanet",
        "_mercurymapJpgDefault",
        "createPlanet",
        "_venusmapJpgDefault",
        "createPlanet",
        "_saturnmapJpgDefault",
        "_saturnringcolorPngDefault",
        "_three",
        "scene",
        "pointLight",
        "sun",
        "mercury",
        "mercury",
        "saturn",
        "saturn",
        "venus",
        "venus",
        "renderer",
        "scene",
        "camera",
        "renderer",
        "animate",
        "camera",
        "camera",
        "renderer",
        "require",
        "exports",
        "require",
        "parcelHelpers",
        "exports",
        "parcelHelpers",
        "exports",
        "ACESFilmicToneMapping",
        "parcelHelpers",
        "exports",
        "AddEquation",
        "parcelHelpers",
        "exports",
        "AddOperation",
        "parcelHelpers",
        "exports",
        "AdditiveAnimationBlendMode",
        "parcelHelpers",
        "exports",
        "AdditiveBlending",
        "parcelHelpers",
        "exports",
        "AgXToneMapping",
        "parcelHelpers",
        "exports",
        "AlphaFormat",
        "parcelHelpers",
        "exports",
        "AlwaysCompare",
        "parcelHelpers",
        "exports",
        "AlwaysDepth",
        "parcelHelpers",
        "exports",
        "AlwaysStencilFunc",
        "parcelHelpers",
        "exports",
        "AmbientLight",
        "parcelHelpers",
        "exports",
        "AnimationAction",
        "parcelHelpers",
        "exports",
        "AnimationClip",
        "parcelHelpers",
        "exports",
        "AnimationLoader",
        "parcelHelpers",
        "exports",
        "AnimationMixer",
        "parcelHelpers",
        "exports",
        "AnimationObjectGroup",
        "parcelHelpers",
        "exports",
        "AnimationUtils",
        "parcelHelpers",
        "exports",
        "ArcCurve",
        "parcelHelpers",
        "exports",
        "ArrayCamera",
        "parcelHelpers",
        "exports",
        "ArrowHelper",
        "parcelHelpers",
        "exports",
        "AttachedBindMode",
        "parcelHelpers",
        "exports",
        "Audio",
        "parcelHelpers",
        "exports",
        "AudioAnalyser",
        "parcelHelpers",
        "exports",
        "AudioContext",
        "parcelHelpers",
        "exports",
        "AudioListener",
        "parcelHelpers",
        "exports",
        "AudioLoader",
        "parcelHelpers",
        "exports",
        "AxesHelper",
        "parcelHelpers",
        "exports",
        "BackSide",
        "parcelHelpers",
        "exports",
        "BasicDepthPacking",
        "parcelHelpers",
        "exports",
        "BasicShadowMap",
        "parcelHelpers",
        "exports",
        "BatchedMesh",
        "parcelHelpers",
        "exports",
        "Bone",
        "parcelHelpers",
        "exports",
        "BooleanKeyframeTrack",
        "parcelHelpers",
        "exports",
        "Box2",
        "parcelHelpers",
        "exports",
        "Box3",
        "parcelHelpers",
        "exports",
        "Box3Helper",
        "parcelHelpers",
        "exports",
        "BoxGeometry",
        "parcelHelpers",
        "exports",
        "BoxHelper",
        "parcelHelpers",
        "exports",
        "BufferAttribute",
        "parcelHelpers",
        "exports",
        "BufferGeometry",
        "parcelHelpers",
        "exports",
        "BufferGeometryLoader",
        "parcelHelpers",
        "exports",
        "ByteType",
        "parcelHelpers",
        "exports",
        "Cache",
        "parcelHelpers",
        "exports",
        "Camera",
        "parcelHelpers",
        "exports",
        "CameraHelper",
        "parcelHelpers",
        "exports",
        "CanvasTexture",
        "parcelHelpers",
        "exports",
        "CapsuleGeometry",
        "parcelHelpers",
        "exports",
        "CatmullRomCurve3",
        "parcelHelpers",
        "exports",
        "CineonToneMapping",
        "parcelHelpers",
        "exports",
        "CircleGeometry",
        "parcelHelpers",
        "exports",
        "ClampToEdgeWrapping",
        "parcelHelpers",
        "exports",
        "Clock",
        "parcelHelpers",
        "exports",
        "Color",
        "parcelHelpers",
        "exports",
        "ColorKeyframeTrack",
        "parcelHelpers",
        "exports",
        "ColorManagement",
        "parcelHelpers",
        "exports",
        "CompressedArrayTexture",
        "parcelHelpers",
        "exports",
        "CompressedCubeTexture",
        "parcelHelpers",
        "exports",
        "CompressedTexture",
        "parcelHelpers",
        "exports",
        "CompressedTextureLoader",
        "parcelHelpers",
        "exports",
        "ConeGeometry",
        "parcelHelpers",
        "exports",
        "ConstantAlphaFactor",
        "parcelHelpers",
        "exports",
        "ConstantColorFactor",
        "parcelHelpers",
        "exports",
        "CubeCamera",
        "parcelHelpers",
        "exports",
        "CubeReflectionMapping",
        "parcelHelpers",
        "exports",
        "CubeRefractionMapping",
        "parcelHelpers",
        "exports",
        "CubeTexture",
        "parcelHelpers",
        "exports",
        "CubeTextureLoader",
        "parcelHelpers",
        "exports",
        "CubeUVReflectionMapping",
        "parcelHelpers",
        "exports",
        "CubicBezierCurve",
        "parcelHelpers",
        "exports",
        "CubicBezierCurve3",
        "parcelHelpers",
        "exports",
        "CubicInterpolant",
        "parcelHelpers",
        "exports",
        "CullFaceBack",
        "parcelHelpers",
        "exports",
        "CullFaceFront",
        "parcelHelpers",
        "exports",
        "CullFaceFrontBack",
        "parcelHelpers",
        "exports",
        "CullFaceNone",
        "parcelHelpers",
        "exports",
        "Curve",
        "parcelHelpers",
        "exports",
        "CurvePath",
        "parcelHelpers",
        "exports",
        "CustomBlending",
        "parcelHelpers",
        "exports",
        "CustomToneMapping",
        "parcelHelpers",
        "exports",
        "CylinderGeometry",
        "parcelHelpers",
        "exports",
        "Cylindrical",
        "parcelHelpers",
        "exports",
        "Data3DTexture",
        "parcelHelpers",
        "exports",
        "DataArrayTexture",
        "parcelHelpers",
        "exports",
        "DataTexture",
        "parcelHelpers",
        "exports",
        "DataTextureLoader",
        "parcelHelpers",
        "exports",
        "DataUtils",
        "parcelHelpers",
        "exports",
        "DecrementStencilOp",
        "parcelHelpers",
        "exports",
        "DecrementWrapStencilOp",
        "parcelHelpers",
        "exports",
        "DefaultLoadingManager",
        "parcelHelpers",
        "exports",
        "DepthFormat",
        "parcelHelpers",
        "exports",
        "DepthStencilFormat",
        "parcelHelpers",
        "exports",
        "DepthTexture",
        "parcelHelpers",
        "exports",
        "DetachedBindMode",
        "parcelHelpers",
        "exports",
        "DirectionalLight",
        "parcelHelpers",
        "exports",
        "DirectionalLightHelper",
        "parcelHelpers",
        "exports",
        "DiscreteInterpolant",
        "parcelHelpers",
        "exports",
        "DisplayP3ColorSpace",
        "parcelHelpers",
        "exports",
        "DodecahedronGeometry",
        "parcelHelpers",
        "exports",
        "DoubleSide",
        "parcelHelpers",
        "exports",
        "DstAlphaFactor",
        "parcelHelpers",
        "exports",
        "DstColorFactor",
        "parcelHelpers",
        "exports",
        "DynamicCopyUsage",
        "parcelHelpers",
        "exports",
        "DynamicDrawUsage",
        "parcelHelpers",
        "exports",
        "DynamicReadUsage",
        "parcelHelpers",
        "exports",
        "EdgesGeometry",
        "parcelHelpers",
        "exports",
        "EllipseCurve",
        "parcelHelpers",
        "exports",
        "EqualCompare",
        "parcelHelpers",
        "exports",
        "EqualDepth",
        "parcelHelpers",
        "exports",
        "EqualStencilFunc",
        "parcelHelpers",
        "exports",
        "EquirectangularReflectionMapping",
        "parcelHelpers",
        "exports",
        "EquirectangularRefractionMapping",
        "parcelHelpers",
        "exports",
        "Euler",
        "parcelHelpers",
        "exports",
        "EventDispatcher",
        "parcelHelpers",
        "exports",
        "ExtrudeGeometry",
        "parcelHelpers",
        "exports",
        "FileLoader",
        "parcelHelpers",
        "exports",
        "Float16BufferAttribute",
        "parcelHelpers",
        "exports",
        "Float32BufferAttribute",
        "parcelHelpers",
        "exports",
        "FloatType",
        "parcelHelpers",
        "exports",
        "Fog",
        "parcelHelpers",
        "exports",
        "FogExp2",
        "parcelHelpers",
        "exports",
        "FramebufferTexture",
        "parcelHelpers",
        "exports",
        "FrontSide",
        "parcelHelpers",
        "exports",
        "Frustum",
        "parcelHelpers",
        "exports",
        "GLBufferAttribute",
        "parcelHelpers",
        "exports",
        "GLSL1",
        "parcelHelpers",
        "exports",
        "GLSL3",
        "parcelHelpers",
        "exports",
        "GreaterCompare",
        "parcelHelpers",
        "exports",
        "GreaterDepth",
        "parcelHelpers",
        "exports",
        "GreaterEqualCompare",
        "parcelHelpers",
        "exports",
        "GreaterEqualDepth",
        "parcelHelpers",
        "exports",
        "GreaterEqualStencilFunc",
        "parcelHelpers",
        "exports",
        "GreaterStencilFunc",
        "parcelHelpers",
        "exports",
        "GridHelper",
        "parcelHelpers",
        "exports",
        "Group",
        "parcelHelpers",
        "exports",
        "HalfFloatType",
        "parcelHelpers",
        "exports",
        "HemisphereLight",
        "parcelHelpers",
        "exports",
        "HemisphereLightHelper",
        "parcelHelpers",
        "exports",
        "IcosahedronGeometry",
        "parcelHelpers",
        "exports",
        "ImageBitmapLoader",
        "parcelHelpers",
        "exports",
        "ImageLoader",
        "parcelHelpers",
        "exports",
        "ImageUtils",
        "parcelHelpers",
        "exports",
        "IncrementStencilOp",
        "parcelHelpers",
        "exports",
        "IncrementWrapStencilOp",
        "parcelHelpers",
        "exports",
        "InstancedBufferAttribute",
        "parcelHelpers",
        "exports",
        "InstancedBufferGeometry",
        "parcelHelpers",
        "exports",
        "InstancedInterleavedBuffer",
        "parcelHelpers",
        "exports",
        "InstancedMesh",
        "parcelHelpers",
        "exports",
        "Int16BufferAttribute",
        "parcelHelpers",
        "exports",
        "Int32BufferAttribute",
        "parcelHelpers",
        "exports",
        "Int8BufferAttribute",
        "parcelHelpers",
        "exports",
        "IntType",
        "parcelHelpers",
        "exports",
        "InterleavedBuffer",
        "parcelHelpers",
        "exports",
        "InterleavedBufferAttribute",
        "parcelHelpers",
        "exports",
        "Interpolant",
        "parcelHelpers",
        "exports",
        "InterpolateDiscrete",
        "parcelHelpers",
        "exports",
        "InterpolateLinear",
        "parcelHelpers",
        "exports",
        "InterpolateSmooth",
        "parcelHelpers",
        "exports",
        "InvertStencilOp",
        "parcelHelpers",
        "exports",
        "KeepStencilOp",
        "parcelHelpers",
        "exports",
        "KeyframeTrack",
        "parcelHelpers",
        "exports",
        "LOD",
        "parcelHelpers",
        "exports",
        "LatheGeometry",
        "parcelHelpers",
        "exports",
        "Layers",
        "parcelHelpers",
        "exports",
        "LessCompare",
        "parcelHelpers",
        "exports",
        "LessDepth",
        "parcelHelpers",
        "exports",
        "LessEqualCompare",
        "parcelHelpers",
        "exports",
        "LessEqualDepth",
        "parcelHelpers",
        "exports",
        "LessEqualStencilFunc",
        "parcelHelpers",
        "exports",
        "LessStencilFunc",
        "parcelHelpers",
        "exports",
        "Light",
        "parcelHelpers",
        "exports",
        "LightProbe",
        "parcelHelpers",
        "exports",
        "Line",
        "parcelHelpers",
        "exports",
        "Line3",
        "parcelHelpers",
        "exports",
        "LineBasicMaterial",
        "parcelHelpers",
        "exports",
        "LineCurve",
        "parcelHelpers",
        "exports",
        "LineCurve3",
        "parcelHelpers",
        "exports",
        "LineDashedMaterial",
        "parcelHelpers",
        "exports",
        "LineLoop",
        "parcelHelpers",
        "exports",
        "LineSegments",
        "parcelHelpers",
        "exports",
        "LinearDisplayP3ColorSpace",
        "parcelHelpers",
        "exports",
        "LinearFilter",
        "parcelHelpers",
        "exports",
        "LinearInterpolant",
        "parcelHelpers",
        "exports",
        "LinearMipMapLinearFilter",
        "parcelHelpers",
        "exports",
        "LinearMipMapNearestFilter",
        "parcelHelpers",
        "exports",
        "LinearMipmapLinearFilter",
        "parcelHelpers",
        "exports",
        "LinearMipmapNearestFilter",
        "parcelHelpers",
        "exports",
        "LinearSRGBColorSpace",
        "parcelHelpers",
        "exports",
        "LinearToneMapping",
        "parcelHelpers",
        "exports",
        "LinearTransfer",
        "parcelHelpers",
        "exports",
        "Loader",
        "parcelHelpers",
        "exports",
        "LoaderUtils",
        "parcelHelpers",
        "exports",
        "LoadingManager",
        "parcelHelpers",
        "exports",
        "LoopOnce",
        "parcelHelpers",
        "exports",
        "LoopPingPong",
        "parcelHelpers",
        "exports",
        "LoopRepeat",
        "parcelHelpers",
        "exports",
        "LuminanceAlphaFormat",
        "parcelHelpers",
        "exports",
        "LuminanceFormat",
        "parcelHelpers",
        "exports",
        "MOUSE",
        "parcelHelpers",
        "exports",
        "Material",
        "parcelHelpers",
        "exports",
        "MaterialLoader",
        "parcelHelpers",
        "exports",
        "MathUtils",
        "parcelHelpers",
        "exports",
        "Matrix2",
        "parcelHelpers",
        "exports",
        "Matrix3",
        "parcelHelpers",
        "exports",
        "Matrix4",
        "parcelHelpers",
        "exports",
        "MaxEquation",
        "parcelHelpers",
        "exports",
        "Mesh",
        "parcelHelpers",
        "exports",
        "MeshBasicMaterial",
        "parcelHelpers",
        "exports",
        "MeshDepthMaterial",
        "parcelHelpers",
        "exports",
        "MeshDistanceMaterial",
        "parcelHelpers",
        "exports",
        "MeshLambertMaterial",
        "parcelHelpers",
        "exports",
        "MeshMatcapMaterial",
        "parcelHelpers",
        "exports",
        "MeshNormalMaterial",
        "parcelHelpers",
        "exports",
        "MeshPhongMaterial",
        "parcelHelpers",
        "exports",
        "MeshPhysicalMaterial",
        "parcelHelpers",
        "exports",
        "MeshStandardMaterial",
        "parcelHelpers",
        "exports",
        "MeshToonMaterial",
        "parcelHelpers",
        "exports",
        "MinEquation",
        "parcelHelpers",
        "exports",
        "MirroredRepeatWrapping",
        "parcelHelpers",
        "exports",
        "MixOperation",
        "parcelHelpers",
        "exports",
        "MultiplyBlending",
        "parcelHelpers",
        "exports",
        "MultiplyOperation",
        "parcelHelpers",
        "exports",
        "NearestFilter",
        "parcelHelpers",
        "exports",
        "NearestMipMapLinearFilter",
        "parcelHelpers",
        "exports",
        "NearestMipMapNearestFilter",
        "parcelHelpers",
        "exports",
        "NearestMipmapLinearFilter",
        "parcelHelpers",
        "exports",
        "NearestMipmapNearestFilter",
        "parcelHelpers",
        "exports",
        "NeutralToneMapping",
        "parcelHelpers",
        "exports",
        "NeverCompare",
        "parcelHelpers",
        "exports",
        "NeverDepth",
        "parcelHelpers",
        "exports",
        "NeverStencilFunc",
        "parcelHelpers",
        "exports",
        "NoBlending",
        "parcelHelpers",
        "exports",
        "NoColorSpace",
        "parcelHelpers",
        "exports",
        "NoToneMapping",
        "parcelHelpers",
        "exports",
        "NormalAnimationBlendMode",
        "parcelHelpers",
        "exports",
        "NormalBlending",
        "parcelHelpers",
        "exports",
        "NotEqualCompare",
        "parcelHelpers",
        "exports",
        "NotEqualDepth",
        "parcelHelpers",
        "exports",
        "NotEqualStencilFunc",
        "parcelHelpers",
        "exports",
        "NumberKeyframeTrack",
        "parcelHelpers",
        "exports",
        "Object3D",
        "parcelHelpers",
        "exports",
        "ObjectLoader",
        "parcelHelpers",
        "exports",
        "ObjectSpaceNormalMap",
        "parcelHelpers",
        "exports",
        "OctahedronGeometry",
        "parcelHelpers",
        "exports",
        "OneFactor",
        "parcelHelpers",
        "exports",
        "OneMinusConstantAlphaFactor",
        "parcelHelpers",
        "exports",
        "OneMinusConstantColorFactor",
        "parcelHelpers",
        "exports",
        "OneMinusDstAlphaFactor",
        "parcelHelpers",
        "exports",
        "OneMinusDstColorFactor",
        "parcelHelpers",
        "exports",
        "OneMinusSrcAlphaFactor",
        "parcelHelpers",
        "exports",
        "OneMinusSrcColorFactor",
        "parcelHelpers",
        "exports",
        "OrthographicCamera",
        "parcelHelpers",
        "exports",
        "P3Primaries",
        "parcelHelpers",
        "exports",
        "PCFShadowMap",
        "parcelHelpers",
        "exports",
        "PCFSoftShadowMap",
        "parcelHelpers",
        "exports",
        "PMREMGenerator",
        "parcelHelpers",
        "exports",
        "Path",
        "parcelHelpers",
        "exports",
        "PerspectiveCamera",
        "parcelHelpers",
        "exports",
        "Plane",
        "parcelHelpers",
        "exports",
        "PlaneGeometry",
        "parcelHelpers",
        "exports",
        "PlaneHelper",
        "parcelHelpers",
        "exports",
        "PointLight",
        "parcelHelpers",
        "exports",
        "PointLightHelper",
        "parcelHelpers",
        "exports",
        "Points",
        "parcelHelpers",
        "exports",
        "PointsMaterial",
        "parcelHelpers",
        "exports",
        "PolarGridHelper",
        "parcelHelpers",
        "exports",
        "PolyhedronGeometry",
        "parcelHelpers",
        "exports",
        "PositionalAudio",
        "parcelHelpers",
        "exports",
        "PropertyBinding",
        "parcelHelpers",
        "exports",
        "PropertyMixer",
        "parcelHelpers",
        "exports",
        "QuadraticBezierCurve",
        "parcelHelpers",
        "exports",
        "QuadraticBezierCurve3",
        "parcelHelpers",
        "exports",
        "Quaternion",
        "parcelHelpers",
        "exports",
        "QuaternionKeyframeTrack",
        "parcelHelpers",
        "exports",
        "QuaternionLinearInterpolant",
        "parcelHelpers",
        "exports",
        "RED_GREEN_RGTC2_Format",
        "parcelHelpers",
        "exports",
        "RED_RGTC1_Format",
        "parcelHelpers",
        "exports",
        "REVISION",
        "parcelHelpers",
        "exports",
        "RGBADepthPacking",
        "parcelHelpers",
        "exports",
        "RGBAFormat",
        "parcelHelpers",
        "exports",
        "RGBAIntegerFormat",
        "parcelHelpers",
        "exports",
        "RGBA_ASTC_10x10_Format",
        "parcelHelpers",
        "exports",
        "RGBA_ASTC_10x5_Format",
        "parcelHelpers",
        "exports",
        "RGBA_ASTC_10x6_Format",
        "parcelHelpers",
        "exports",
        "RGBA_ASTC_10x8_Format",
        "parcelHelpers",
        "exports",
        "RGBA_ASTC_12x10_Format",
        "parcelHelpers",
        "exports",
        "RGBA_ASTC_12x12_Format",
        "parcelHelpers",
        "exports",
        "RGBA_ASTC_4x4_Format",
        "parcelHelpers",
        "exports",
        "RGBA_ASTC_5x4_Format",
        "parcelHelpers",
        "exports",
        "RGBA_ASTC_5x5_Format",
        "parcelHelpers",
        "exports",
        "RGBA_ASTC_6x5_Format",
        "parcelHelpers",
        "exports",
        "RGBA_ASTC_6x6_Format",
        "parcelHelpers",
        "exports",
        "RGBA_ASTC_8x5_Format",
        "parcelHelpers",
        "exports",
        "RGBA_ASTC_8x6_Format",
        "parcelHelpers",
        "exports",
        "RGBA_ASTC_8x8_Format",
        "parcelHelpers",
        "exports",
        "RGBA_BPTC_Format",
        "parcelHelpers",
        "exports",
        "RGBA_ETC2_EAC_Format",
        "parcelHelpers",
        "exports",
        "RGBA_PVRTC_2BPPV1_Format",
        "parcelHelpers",
        "exports",
        "RGBA_PVRTC_4BPPV1_Format",
        "parcelHelpers",
        "exports",
        "RGBA_S3TC_DXT1_Format",
        "parcelHelpers",
        "exports",
        "RGBA_S3TC_DXT3_Format",
        "parcelHelpers",
        "exports",
        "RGBA_S3TC_DXT5_Format",
        "parcelHelpers",
        "exports",
        "RGBDepthPacking",
        "parcelHelpers",
        "exports",
        "RGBFormat",
        "parcelHelpers",
        "exports",
        "RGBIntegerFormat",
        "parcelHelpers",
        "exports",
        "RGB_BPTC_SIGNED_Format",
        "parcelHelpers",
        "exports",
        "RGB_BPTC_UNSIGNED_Format",
        "parcelHelpers",
        "exports",
        "RGB_ETC1_Format",
        "parcelHelpers",
        "exports",
        "RGB_ETC2_Format",
        "parcelHelpers",
        "exports",
        "RGB_PVRTC_2BPPV1_Format",
        "parcelHelpers",
        "exports",
        "RGB_PVRTC_4BPPV1_Format",
        "parcelHelpers",
        "exports",
        "RGB_S3TC_DXT1_Format",
        "parcelHelpers",
        "exports",
        "RGDepthPacking",
        "parcelHelpers",
        "exports",
        "RGFormat",
        "parcelHelpers",
        "exports",
        "RGIntegerFormat",
        "parcelHelpers",
        "exports",
        "RawShaderMaterial",
        "parcelHelpers",
        "exports",
        "Ray",
        "parcelHelpers",
        "exports",
        "Raycaster",
        "parcelHelpers",
        "exports",
        "Rec709Primaries",
        "parcelHelpers",
        "exports",
        "RectAreaLight",
        "parcelHelpers",
        "exports",
        "RedFormat",
        "parcelHelpers",
        "exports",
        "RedIntegerFormat",
        "parcelHelpers",
        "exports",
        "ReinhardToneMapping",
        "parcelHelpers",
        "exports",
        "RenderTarget",
        "parcelHelpers",
        "exports",
        "RepeatWrapping",
        "parcelHelpers",
        "exports",
        "ReplaceStencilOp",
        "parcelHelpers",
        "exports",
        "ReverseSubtractEquation",
        "parcelHelpers",
        "exports",
        "RingGeometry",
        "parcelHelpers",
        "exports",
        "SIGNED_RED_GREEN_RGTC2_Format",
        "parcelHelpers",
        "exports",
        "SIGNED_RED_RGTC1_Format",
        "parcelHelpers",
        "exports",
        "SRGBColorSpace",
        "parcelHelpers",
        "exports",
        "SRGBTransfer",
        "parcelHelpers",
        "exports",
        "Scene",
        "parcelHelpers",
        "exports",
        "ShaderChunk",
        "parcelHelpers",
        "exports",
        "ShaderLib",
        "parcelHelpers",
        "exports",
        "ShaderMaterial",
        "parcelHelpers",
        "exports",
        "ShadowMaterial",
        "parcelHelpers",
        "exports",
        "Shape",
        "parcelHelpers",
        "exports",
        "ShapeGeometry",
        "parcelHelpers",
        "exports",
        "ShapePath",
        "parcelHelpers",
        "exports",
        "ShapeUtils",
        "parcelHelpers",
        "exports",
        "ShortType",
        "parcelHelpers",
        "exports",
        "Skeleton",
        "parcelHelpers",
        "exports",
        "SkeletonHelper",
        "parcelHelpers",
        "exports",
        "SkinnedMesh",
        "parcelHelpers",
        "exports",
        "Source",
        "parcelHelpers",
        "exports",
        "Sphere",
        "parcelHelpers",
        "exports",
        "SphereGeometry",
        "parcelHelpers",
        "exports",
        "Spherical",
        "parcelHelpers",
        "exports",
        "SphericalHarmonics3",
        "parcelHelpers",
        "exports",
        "SplineCurve",
        "parcelHelpers",
        "exports",
        "SpotLight",
        "parcelHelpers",
        "exports",
        "SpotLightHelper",
        "parcelHelpers",
        "exports",
        "Sprite",
        "parcelHelpers",
        "exports",
        "SpriteMaterial",
        "parcelHelpers",
        "exports",
        "SrcAlphaFactor",
        "parcelHelpers",
        "exports",
        "SrcAlphaSaturateFactor",
        "parcelHelpers",
        "exports",
        "SrcColorFactor",
        "parcelHelpers",
        "exports",
        "StaticCopyUsage",
        "parcelHelpers",
        "exports",
        "StaticDrawUsage",
        "parcelHelpers",
        "exports",
        "StaticReadUsage",
        "parcelHelpers",
        "exports",
        "StereoCamera",
        "parcelHelpers",
        "exports",
        "StreamCopyUsage",
        "parcelHelpers",
        "exports",
        "StreamDrawUsage",
        "parcelHelpers",
        "exports",
        "StreamReadUsage",
        "parcelHelpers",
        "exports",
        "StringKeyframeTrack",
        "parcelHelpers",
        "exports",
        "SubtractEquation",
        "parcelHelpers",
        "exports",
        "SubtractiveBlending",
        "parcelHelpers",
        "exports",
        "TOUCH",
        "parcelHelpers",
        "exports",
        "TangentSpaceNormalMap",
        "parcelHelpers",
        "exports",
        "TetrahedronGeometry",
        "parcelHelpers",
        "exports",
        "Texture",
        "parcelHelpers",
        "exports",
        "TextureLoader",
        "parcelHelpers",
        "exports",
        "TextureUtils",
        "parcelHelpers",
        "exports",
        "TorusGeometry",
        "parcelHelpers",
        "exports",
        "TorusKnotGeometry",
        "parcelHelpers",
        "exports",
        "Triangle",
        "parcelHelpers",
        "exports",
        "TriangleFanDrawMode",
        "parcelHelpers",
        "exports",
        "TriangleStripDrawMode",
        "parcelHelpers",
        "exports",
        "TrianglesDrawMode",
        "parcelHelpers",
        "exports",
        "TubeGeometry",
        "parcelHelpers",
        "exports",
        "UVMapping",
        "parcelHelpers",
        "exports",
        "Uint16BufferAttribute",
        "parcelHelpers",
        "exports",
        "Uint32BufferAttribute",
        "parcelHelpers",
        "exports",
        "Uint8BufferAttribute",
        "parcelHelpers",
        "exports",
        "Uint8ClampedBufferAttribute",
        "parcelHelpers",
        "exports",
        "Uniform",
        "parcelHelpers",
        "exports",
        "UniformsGroup",
        "parcelHelpers",
        "exports",
        "UniformsLib",
        "parcelHelpers",
        "exports",
        "UniformsUtils",
        "parcelHelpers",
        "exports",
        "UnsignedByteType",
        "parcelHelpers",
        "exports",
        "UnsignedInt248Type",
        "parcelHelpers",
        "exports",
        "UnsignedInt5999Type",
        "parcelHelpers",
        "exports",
        "UnsignedIntType",
        "parcelHelpers",
        "exports",
        "UnsignedShort4444Type",
        "parcelHelpers",
        "exports",
        "UnsignedShort5551Type",
        "parcelHelpers",
        "exports",
        "UnsignedShortType",
        "parcelHelpers",
        "exports",
        "VSMShadowMap",
        "parcelHelpers",
        "exports",
        "Vector2",
        "parcelHelpers",
        "exports",
        "Vector3",
        "parcelHelpers",
        "exports",
        "Vector4",
        "parcelHelpers",
        "exports",
        "VectorKeyframeTrack",
        "parcelHelpers",
        "exports",
        "VideoTexture",
        "parcelHelpers",
        "exports",
        "WebGL3DRenderTarget",
        "parcelHelpers",
        "exports",
        "WebGLArrayRenderTarget",
        "parcelHelpers",
        "exports",
        "WebGLCoordinateSystem",
        "parcelHelpers",
        "exports",
        "WebGLCubeRenderTarget",
        "parcelHelpers",
        "exports",
        "WebGLMultipleRenderTargets",
        "parcelHelpers",
        "exports",
        "WebGLRenderTarget",
        "parcelHelpers",
        "exports",
        "WebGLRenderer",
        "parcelHelpers",
        "exports",
        "WebGLUtils",
        "parcelHelpers",
        "exports",
        "WebGPUCoordinateSystem",
        "parcelHelpers",
        "exports",
        "WireframeGeometry",
        "parcelHelpers",
        "exports",
        "WrapAroundEnding",
        "parcelHelpers",
        "exports",
        "ZeroCurvatureEnding",
        "parcelHelpers",
        "exports",
        "ZeroFactor",
        "parcelHelpers",
        "exports",
        "ZeroSlopeEnding",
        "parcelHelpers",
        "exports",
        "ZeroStencilOp",
        "parcelHelpers",
        "exports",
        "createCanvasElement",
        "listener",
        "listeners",
        "listeners",
        "listeners",
        "listener",
        "listeners",
        "listener",
        "listener",
        "listeners",
        "listeners",
        "listener",
        "listener",
        "listeners",
        "listenerArray",
        "listenerArray",
        "listener",
        "index",
        "listenerArray",
        "index",
        "listeners",
        "listenerArray",
        "listenerArray",
        "array",
        "i",
        "l",
        "i",
        "array",
        "i",
        "_lut",
        "d0",
        "_lut",
        "d0",
        "_lut",
        "d0",
        "_lut",
        "d0",
        "_lut",
        "d1",
        "_lut",
        "d1",
        "_lut",
        "d1",
        "_lut",
        "d1",
        "_lut",
        "d2",
        "_lut",
        "d2",
        "_lut",
        "d2",
        "_lut",
        "d2",
        "_lut",
        "d3",
        "_lut",
        "d3",
        "_lut",
        "d3",
        "_lut",
        "d3",
        "uuid",
        "value",
        "min",
        "max",
        "min",
        "max",
        "value",
        "n",
        "m",
        "n",
        "m",
        "m",
        "m",
        "x",
        "a1",
        "a2",
        "b1",
        "b2",
        "b1",
        "x",
        "a1",
        "b2",
        "b1",
        "a2",
        "a1",
        "x",
        "y",
        "value",
        "x",
        "y",
        "value",
        "x",
        "y",
        "x",
        "x",
        "y",
        "t",
        "t",
        "x",
        "t",
        "y",
        "x",
        "y",
        "dt",
        "lerp",
        "x",
        "y",
        "dt",
        "x",
        "length",
        "length",
        "euclideanModulo",
        "x",
        "length",
        "length",
        "x",
        "min",
        "max",
        "x",
        "min",
        "x",
        "max",
        "x",
        "x",
        "min",
        "max",
        "min",
        "x",
        "x",
        "x",
        "x",
        "min",
        "max",
        "x",
        "min",
        "x",
        "max",
        "x",
        "x",
        "min",
        "max",
        "min",
        "x",
        "x",
        "x",
        "x",
        "x",
        "low",
        "high",
        "low",
        "high",
        "low",
        "low",
        "high",
        "low",
        "high",
        "low",
        "s",
        "s",
        "_seed",
        "s",
        "_seed",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "degrees",
        "degrees",
        "DEG2RAD",
        "radians",
        "radians",
        "RAD2DEG",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "q",
        "a",
        "b",
        "c",
        "order",
        "cos",
        "b",
        "sin",
        "b",
        "cos",
        "a",
        "c",
        "sin",
        "a",
        "c",
        "cos",
        "a",
        "c",
        "sin",
        "a",
        "c",
        "cos",
        "c",
        "a",
        "sin",
        "c",
        "a",
        "order",
        "q",
        "c2",
        "s13",
        "s2",
        "c1_3",
        "s2",
        "s1_3",
        "c2",
        "c13",
        "q",
        "s2",
        "s1_3",
        "c2",
        "s13",
        "s2",
        "c1_3",
        "c2",
        "c13",
        "q",
        "s2",
        "c1_3",
        "s2",
        "s1_3",
        "c2",
        "s13",
        "c2",
        "c13",
        "q",
        "c2",
        "s13",
        "s2",
        "s3_1",
        "s2",
        "c3_1",
        "c2",
        "c13",
        "q",
        "s2",
        "c3_1",
        "c2",
        "s13",
        "s2",
        "s3_1",
        "c2",
        "c13",
        "q",
        "s2",
        "s3_1",
        "s2",
        "c3_1",
        "c2",
        "s13",
        "c2",
        "c13",
        "order",
        "value",
        "array",
        "array",
        "Float32Array",
        "value",
        "Uint32Array",
        "value",
        "Uint16Array",
        "value",
        "Uint8Array",
        "value",
        "Int32Array",
        "value",
        "Int16Array",
        "value",
        "Int8Array",
        "value",
        "value",
        "array",
        "array",
        "Float32Array",
        "value",
        "Uint32Array",
        "value",
        "Uint16Array",
        "value",
        "Uint8Array",
        "value",
        "Int32Array",
        "value",
        "Int16Array",
        "value",
        "Int8Array",
        "value",
        "DEG2RAD",
        "RAD2DEG",
        "generateUUID",
        "clamp",
        "euclideanModulo",
        "mapLinear",
        "inverseLerp",
        "lerp",
        "damp",
        "pingpong",
        "smoothstep",
        "smootherstep",
        "randInt",
        "randFloat",
        "randFloatSpread",
        "seededRandom",
        "degToRad",
        "radToDeg",
        "isPowerOfTwo",
        "ceilPowerOfTwo",
        "floorPowerOfTwo",
        "setQuaternionFromProperEuler",
        "normalize",
        "denormalize",
        "x",
        "y",
        "Vector2",
        "x",
        "y",
        "value",
        "value",
        "value",
        "value",
        "x",
        "y",
        "x",
        "y",
        "scalar",
        "scalar",
        "scalar",
        "x",
        "x",
        "y",
        "y",
        "index",
        "value",
        "index",
        "value",
        "value",
        "index",
        "index",
        "index",
        "index",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "s",
        "s",
        "s",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "v",
        "s",
        "v",
        "s",
        "v",
        "s",
        "v",
        "v",
        "v",
        "s",
        "s",
        "s",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "v",
        "v",
        "v",
        "scalar",
        "scalar",
        "scalar",
        "v",
        "v",
        "v",
        "scalar",
        "scalar",
        "m",
        "m",
        "e",
        "x",
        "e",
        "y",
        "e",
        "e",
        "x",
        "e",
        "y",
        "e",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "minVal",
        "maxVal",
        "minVal",
        "maxVal",
        "minVal",
        "maxVal",
        "min",
        "max",
        "length",
        "min",
        "max",
        "length",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "angle",
        "v",
        "v",
        "denominator",
        "v",
        "denominator",
        "clamp",
        "theta",
        "v",
        "v",
        "v",
        "v",
        "v",
        "dx",
        "dx",
        "dy",
        "dy",
        "v",
        "v",
        "v",
        "length",
        "length",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "v1",
        "v2",
        "alpha",
        "v1",
        "v2",
        "v1",
        "alpha",
        "v1",
        "v2",
        "v1",
        "alpha",
        "v",
        "v",
        "v",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "attribute",
        "index",
        "attribute",
        "index",
        "attribute",
        "index",
        "center",
        "angle",
        "angle",
        "angle",
        "center",
        "center",
        "x",
        "c",
        "y",
        "s",
        "center",
        "x",
        "s",
        "y",
        "c",
        "center",
        "n11",
        "n12",
        "n13",
        "n21",
        "n22",
        "n23",
        "n31",
        "n32",
        "n33",
        "Matrix3",
        "n11",
        "n11",
        "n12",
        "n13",
        "n21",
        "n22",
        "n23",
        "n31",
        "n32",
        "n33",
        "n11",
        "n12",
        "n13",
        "n21",
        "n22",
        "n23",
        "n31",
        "n32",
        "n33",
        "te",
        "n11",
        "te",
        "n21",
        "te",
        "n31",
        "te",
        "n12",
        "te",
        "n22",
        "te",
        "n32",
        "te",
        "n13",
        "te",
        "n23",
        "te",
        "n33",
        "m",
        "m",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "xAxis",
        "yAxis",
        "zAxis",
        "xAxis",
        "yAxis",
        "zAxis",
        "m",
        "m",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "m",
        "m",
        "m",
        "m",
        "a",
        "b",
        "a",
        "b",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "te",
        "a11",
        "b11",
        "a12",
        "b21",
        "a13",
        "b31",
        "te",
        "a11",
        "b12",
        "a12",
        "b22",
        "a13",
        "b32",
        "te",
        "a11",
        "b13",
        "a12",
        "b23",
        "a13",
        "b33",
        "te",
        "a21",
        "b11",
        "a22",
        "b21",
        "a23",
        "b31",
        "te",
        "a21",
        "b12",
        "a22",
        "b22",
        "a23",
        "b32",
        "te",
        "a21",
        "b13",
        "a22",
        "b23",
        "a23",
        "b33",
        "te",
        "a31",
        "b11",
        "a32",
        "b21",
        "a33",
        "b31",
        "te",
        "a31",
        "b12",
        "a32",
        "b22",
        "a33",
        "b32",
        "te",
        "a31",
        "b13",
        "a32",
        "b23",
        "a33",
        "b33",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "a",
        "e",
        "i",
        "a",
        "f",
        "h",
        "b",
        "d",
        "i",
        "b",
        "f",
        "g",
        "c",
        "d",
        "h",
        "c",
        "e",
        "g",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "n33",
        "n22",
        "n32",
        "n23",
        "n32",
        "n13",
        "n33",
        "n12",
        "n23",
        "n12",
        "n22",
        "n13",
        "n11",
        "t11",
        "n21",
        "t12",
        "n31",
        "t13",
        "det",
        "det",
        "te",
        "t11",
        "detInv",
        "te",
        "n31",
        "n23",
        "n33",
        "n21",
        "detInv",
        "te",
        "n32",
        "n21",
        "n31",
        "n22",
        "detInv",
        "te",
        "t12",
        "detInv",
        "te",
        "n33",
        "n11",
        "n31",
        "n13",
        "detInv",
        "te",
        "n31",
        "n12",
        "n32",
        "n11",
        "detInv",
        "te",
        "t13",
        "detInv",
        "te",
        "n21",
        "n13",
        "n23",
        "n11",
        "detInv",
        "te",
        "n22",
        "n11",
        "n21",
        "n12",
        "detInv",
        "tmp",
        "m",
        "m",
        "m",
        "m",
        "tmp",
        "tmp",
        "m",
        "m",
        "m",
        "m",
        "tmp",
        "tmp",
        "m",
        "m",
        "m",
        "m",
        "tmp",
        "matrix4",
        "matrix4",
        "r",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "tx",
        "ty",
        "sx",
        "sy",
        "rotation",
        "cx",
        "cy",
        "rotation",
        "rotation",
        "sx",
        "c",
        "sx",
        "s",
        "sx",
        "c",
        "cx",
        "s",
        "cy",
        "cx",
        "tx",
        "sy",
        "s",
        "sy",
        "c",
        "sy",
        "s",
        "cx",
        "c",
        "cy",
        "cy",
        "ty",
        "sx",
        "sy",
        "_m3",
        "sx",
        "sy",
        "theta",
        "_m3",
        "theta",
        "tx",
        "ty",
        "_m3",
        "tx",
        "ty",
        "x",
        "y",
        "x",
        "x",
        "x",
        "x",
        "y",
        "theta",
        "theta",
        "theta",
        "c",
        "s",
        "s",
        "c",
        "x",
        "y",
        "x",
        "y",
        "matrix",
        "matrix",
        "i",
        "i",
        "te",
        "i",
        "me",
        "i",
        "array",
        "offset",
        "i",
        "i",
        "i",
        "array",
        "i",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "Matrix3",
        "array",
        "array",
        "i",
        "i",
        "array",
        "i",
        "Int8Array",
        "Uint8Array",
        "Uint8ClampedArray",
        "Int16Array",
        "Uint16Array",
        "Int32Array",
        "Uint32Array",
        "Float32Array",
        "Float64Array",
        "buffer",
        "TYPED_ARRAYS",
        "buffer",
        "name",
        "name",
        "createElementNS",
        "canvas",
        "canvas",
        "message",
        "message",
        "_cache",
        "_cache",
        "message",
        "message",
        "gl",
        "sync",
        "interval",
        "resolve",
        "reject",
        "gl",
        "sync",
        "gl",
        "gl",
        "reject",
        "gl",
        "setTimeout",
        "probe",
        "interval",
        "resolve",
        "setTimeout",
        "probe",
        "interval",
        "Matrix3",
        "Matrix3",
        "LinearSRGBColorSpace",
        "LinearTransfer",
        "Rec709Primaries",
        "color",
        "color",
        "color",
        "color",
        "SRGBColorSpace",
        "SRGBTransfer",
        "Rec709Primaries",
        "color",
        "color",
        "color",
        "color",
        "LinearDisplayP3ColorSpace",
        "LinearTransfer",
        "P3Primaries",
        "color",
        "color",
        "LINEAR_DISPLAY_P3_TO_LINEAR_SRGB",
        "color",
        "color",
        "LINEAR_SRGB_TO_LINEAR_DISPLAY_P3",
        "DisplayP3ColorSpace",
        "SRGBTransfer",
        "P3Primaries",
        "color",
        "color",
        "LINEAR_DISPLAY_P3_TO_LINEAR_SRGB",
        "color",
        "color",
        "LINEAR_SRGB_TO_LINEAR_DISPLAY_P3",
        "LinearSRGBColorSpace",
        "LinearDisplayP3ColorSpace",
        "LinearSRGBColorSpace",
        "colorSpace",
        "SUPPORTED_WORKING_COLOR_SPACES",
        "colorSpace",
        "colorSpace",
        "colorSpace",
        "color",
        "sourceColorSpace",
        "targetColorSpace",
        "sourceColorSpace",
        "targetColorSpace",
        "sourceColorSpace",
        "targetColorSpace",
        "color",
        "COLOR_SPACES",
        "sourceColorSpace",
        "COLOR_SPACES",
        "targetColorSpace",
        "targetFromReference",
        "sourceToReference",
        "color",
        "color",
        "targetColorSpace",
        "color",
        "targetColorSpace",
        "color",
        "sourceColorSpace",
        "color",
        "sourceColorSpace",
        "colorSpace1",
        "COLOR_SPACES",
        "colorSpace1",
        "colorSpace1",
        "colorSpace1",
        "NoColorSpace",
        "LinearTransfer",
        "COLOR_SPACES",
        "colorSpace1",
        "target",
        "colorSpace1",
        "target",
        "COLOR_SPACES",
        "colorSpace1",
        "c",
        "c",
        "c",
        "c",
        "c",
        "c",
        "c",
        "c",
        "image",
        "image",
        "image",
        "HTMLCanvasElement",
        "image",
        "image",
        "HTMLCanvasElement",
        "canvas",
        "image",
        "_canvas",
        "_canvas",
        "createElementNS",
        "_canvas",
        "image",
        "_canvas",
        "image",
        "_canvas",
        "image",
        "ImageData",
        "context",
        "image",
        "context",
        "image",
        "image",
        "image",
        "canvas",
        "_canvas",
        "canvas",
        "canvas",
        "image",
        "canvas",
        "canvas",
        "image",
        "HTMLImageElement",
        "image",
        "HTMLImageElement",
        "HTMLCanvasElement",
        "image",
        "HTMLCanvasElement",
        "ImageBitmap",
        "image",
        "ImageBitmap",
        "createElementNS",
        "canvas",
        "image",
        "canvas",
        "image",
        "canvas",
        "context",
        "image",
        "image",
        "image",
        "context",
        "image",
        "image",
        "imageData",
        "i",
        "data",
        "i",
        "data",
        "i",
        "SRGBToLinear",
        "data",
        "i",
        "context",
        "imageData",
        "canvas",
        "image",
        "image",
        "i",
        "data",
        "i",
        "data",
        "Uint8Array",
        "data",
        "Uint8ClampedArray",
        "data",
        "i",
        "SRGBToLinear",
        "data",
        "i",
        "data",
        "i",
        "SRGBToLinear",
        "data",
        "i",
        "data",
        "image",
        "image",
        "image",
        "data",
        "_sourceId",
        "generateUUID",
        "data",
        "value",
        "value",
        "meta",
        "meta",
        "meta",
        "isRootObject",
        "meta",
        "meta",
        "data",
        "data",
        "url",
        "data",
        "i",
        "l",
        "i",
        "data",
        "i",
        "url",
        "serializeImage",
        "data",
        "i",
        "url",
        "serializeImage",
        "data",
        "i",
        "url",
        "serializeImage",
        "data",
        "output",
        "url",
        "isRootObject",
        "meta",
        "output",
        "output",
        "image",
        "HTMLImageElement",
        "image",
        "HTMLImageElement",
        "HTMLCanvasElement",
        "image",
        "HTMLCanvasElement",
        "ImageBitmap",
        "image",
        "ImageBitmap",
        "ImageUtils",
        "image",
        "image",
        "image",
        "image",
        "image",
        "image",
        "EventDispatcher",
        "image",
        "Texture",
        "mapping",
        "Texture",
        "wrapS",
        "ClampToEdgeWrapping",
        "wrapT",
        "ClampToEdgeWrapping",
        "magFilter",
        "LinearFilter",
        "minFilter",
        "LinearMipmapLinearFilter",
        "format",
        "RGBAFormat",
        "UnsignedByteType",
        "anisotropy",
        "Texture",
        "colorSpace1",
        "NoColorSpace",
        "_textureId",
        "generateUUID",
        "Source",
        "image",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "anisotropy",
        "format",
        "Vector2",
        "Vector2",
        "Vector2",
        "Matrix3",
        "colorSpace1",
        "value",
        "value",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "meta",
        "meta",
        "meta",
        "isRootObject",
        "meta",
        "meta",
        "meta",
        "output",
        "isRootObject",
        "meta",
        "output",
        "output",
        "uv",
        "UVMapping",
        "uv",
        "uv",
        "uv",
        "uv",
        "RepeatWrapping",
        "uv",
        "uv",
        "uv",
        "ClampToEdgeWrapping",
        "uv",
        "uv",
        "MirroredRepeatWrapping",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "RepeatWrapping",
        "uv",
        "uv",
        "uv",
        "ClampToEdgeWrapping",
        "uv",
        "uv",
        "MirroredRepeatWrapping",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "value",
        "value",
        "value",
        "value",
        "Texture",
        "Texture",
        "UVMapping",
        "Texture",
        "x",
        "y",
        "z",
        "w",
        "Vector4",
        "x",
        "y",
        "z",
        "w",
        "value",
        "value",
        "value",
        "value",
        "x",
        "y",
        "z",
        "w",
        "x",
        "y",
        "z",
        "w",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "w",
        "w",
        "index",
        "value",
        "index",
        "value",
        "value",
        "value",
        "value",
        "index",
        "index",
        "index",
        "index",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "s",
        "s",
        "s",
        "s",
        "s",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "v",
        "s",
        "v",
        "s",
        "v",
        "s",
        "v",
        "s",
        "v",
        "s",
        "v",
        "v",
        "v",
        "v",
        "v",
        "s",
        "s",
        "s",
        "s",
        "s",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "v",
        "v",
        "v",
        "v",
        "v",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "m",
        "m",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "w",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "w",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "w",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "w",
        "scalar",
        "scalar",
        "q",
        "q",
        "q",
        "q",
        "s",
        "q",
        "s",
        "q",
        "s",
        "q",
        "s",
        "m",
        "m",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "m12",
        "m21",
        "epsilon",
        "m13",
        "m31",
        "epsilon",
        "m23",
        "m32",
        "epsilon",
        "m12",
        "m21",
        "epsilon2",
        "m13",
        "m31",
        "epsilon2",
        "m23",
        "m32",
        "epsilon2",
        "m11",
        "m22",
        "m33",
        "epsilon2",
        "angle",
        "m11",
        "m22",
        "m33",
        "m12",
        "m21",
        "m13",
        "m31",
        "m23",
        "m32",
        "xx",
        "yy",
        "xx",
        "zz",
        "xx",
        "epsilon",
        "x",
        "y",
        "z",
        "x",
        "xx",
        "y",
        "xy",
        "x",
        "z",
        "xz",
        "x",
        "yy",
        "zz",
        "yy",
        "epsilon",
        "x",
        "y",
        "z",
        "y",
        "yy",
        "x",
        "xy",
        "y",
        "z",
        "yz",
        "y",
        "zz",
        "epsilon",
        "x",
        "y",
        "z",
        "z",
        "zz",
        "x",
        "xz",
        "z",
        "y",
        "yz",
        "z",
        "x",
        "y",
        "z",
        "angle",
        "m32",
        "m23",
        "m32",
        "m23",
        "m13",
        "m31",
        "m13",
        "m31",
        "m21",
        "m12",
        "m21",
        "m12",
        "s",
        "s",
        "m32",
        "m23",
        "s",
        "m13",
        "m31",
        "s",
        "m21",
        "m12",
        "s",
        "m11",
        "m22",
        "m33",
        "m",
        "m",
        "e",
        "e",
        "e",
        "e",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "minVal",
        "maxVal",
        "minVal",
        "maxVal",
        "minVal",
        "maxVal",
        "minVal",
        "maxVal",
        "minVal",
        "maxVal",
        "min",
        "max",
        "length",
        "min",
        "max",
        "length",
        "v",
        "v",
        "v",
        "v",
        "v",
        "length",
        "length",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "v1",
        "v2",
        "alpha",
        "v1",
        "v2",
        "v1",
        "alpha",
        "v1",
        "v2",
        "v1",
        "alpha",
        "v1",
        "v2",
        "v1",
        "alpha",
        "v1",
        "v2",
        "v1",
        "alpha",
        "v",
        "v",
        "v",
        "v",
        "v",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "attribute",
        "index",
        "attribute",
        "index",
        "attribute",
        "index",
        "attribute",
        "index",
        "attribute",
        "index",
        "EventDispatcher",
        "width",
        "height",
        "options",
        "width",
        "height",
        "Vector4",
        "width",
        "height",
        "Vector4",
        "width",
        "height",
        "width",
        "height",
        "options",
        "LinearFilter",
        "options",
        "Texture",
        "image",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "texture",
        "texture",
        "options",
        "texture",
        "options",
        "options",
        "i",
        "count",
        "i",
        "i",
        "texture",
        "i",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "value",
        "value",
        "width",
        "height",
        "depth",
        "width",
        "height",
        "depth",
        "width",
        "height",
        "depth",
        "i",
        "il",
        "i",
        "i",
        "width",
        "i",
        "height",
        "i",
        "depth",
        "width",
        "height",
        "width",
        "height",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "i",
        "il",
        "i",
        "i",
        "source",
        "i",
        "i",
        "source",
        "Source",
        "image",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "RenderTarget",
        "width",
        "height",
        "options",
        "width",
        "height",
        "options",
        "Texture",
        "data",
        "width",
        "height",
        "depth",
        "NearestFilter",
        "NearestFilter",
        "ClampToEdgeWrapping",
        "layerIndex",
        "layerIndex",
        "WebGLRenderTarget",
        "width",
        "height",
        "depth",
        "options",
        "width",
        "height",
        "options",
        "depth",
        "DataArrayTexture",
        "width",
        "height",
        "depth",
        "Texture",
        "data",
        "width",
        "height",
        "depth",
        "NearestFilter",
        "NearestFilter",
        "ClampToEdgeWrapping",
        "WebGLRenderTarget",
        "width",
        "height",
        "depth",
        "options",
        "width",
        "height",
        "options",
        "depth",
        "Data3DTexture",
        "width",
        "height",
        "depth",
        "x",
        "y",
        "z",
        "w",
        "x",
        "y",
        "z",
        "w",
        "dst",
        "dstOffset",
        "src0",
        "srcOffset0",
        "src1",
        "srcOffset1",
        "t",
        "src0",
        "srcOffset0",
        "src0",
        "srcOffset0",
        "src0",
        "srcOffset0",
        "src0",
        "srcOffset0",
        "src1",
        "srcOffset1",
        "src1",
        "srcOffset1",
        "src1",
        "srcOffset1",
        "src1",
        "srcOffset1",
        "t",
        "dst",
        "dstOffset",
        "x0",
        "dst",
        "dstOffset",
        "y0",
        "dst",
        "dstOffset",
        "z0",
        "dst",
        "dstOffset",
        "w0",
        "t",
        "dst",
        "dstOffset",
        "x1",
        "dst",
        "dstOffset",
        "y1",
        "dst",
        "dstOffset",
        "z1",
        "dst",
        "dstOffset",
        "w1",
        "w0",
        "w1",
        "x0",
        "x1",
        "y0",
        "y1",
        "z0",
        "z1",
        "t",
        "x0",
        "x1",
        "y0",
        "y1",
        "z0",
        "z1",
        "w0",
        "w1",
        "cos",
        "cos",
        "cos",
        "sqrSin",
        "sqrSin",
        "sin",
        "cos",
        "dir",
        "s",
        "s",
        "len",
        "sin",
        "t",
        "t",
        "len",
        "sin",
        "t",
        "dir",
        "x0",
        "x0",
        "s",
        "x1",
        "tDir",
        "y0",
        "y0",
        "s",
        "y1",
        "tDir",
        "z0",
        "z0",
        "s",
        "z1",
        "tDir",
        "w0",
        "w0",
        "s",
        "w1",
        "tDir",
        "s",
        "t",
        "x0",
        "x0",
        "y0",
        "y0",
        "z0",
        "z0",
        "w0",
        "w0",
        "x0",
        "f",
        "y0",
        "f",
        "z0",
        "f",
        "w0",
        "f",
        "dst",
        "dstOffset",
        "x0",
        "dst",
        "dstOffset",
        "y0",
        "dst",
        "dstOffset",
        "z0",
        "dst",
        "dstOffset",
        "w0",
        "dst",
        "dstOffset",
        "src0",
        "srcOffset0",
        "src1",
        "srcOffset1",
        "src0",
        "srcOffset0",
        "src0",
        "srcOffset0",
        "src0",
        "srcOffset0",
        "src0",
        "srcOffset0",
        "src1",
        "srcOffset1",
        "src1",
        "srcOffset1",
        "src1",
        "srcOffset1",
        "src1",
        "srcOffset1",
        "dst",
        "dstOffset",
        "x0",
        "w1",
        "w0",
        "x1",
        "y0",
        "z1",
        "z0",
        "y1",
        "dst",
        "dstOffset",
        "y0",
        "w1",
        "w0",
        "y1",
        "z0",
        "x1",
        "x0",
        "z1",
        "dst",
        "dstOffset",
        "z0",
        "w1",
        "w0",
        "z1",
        "x0",
        "y1",
        "y0",
        "x1",
        "dst",
        "dstOffset",
        "w0",
        "w1",
        "x0",
        "x1",
        "y0",
        "y1",
        "z0",
        "z1",
        "dst",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "x",
        "y",
        "z",
        "w",
        "x",
        "y",
        "z",
        "w",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "euler",
        "update",
        "euler",
        "euler",
        "euler",
        "euler",
        "cos",
        "x",
        "cos",
        "y",
        "cos",
        "z",
        "sin",
        "x",
        "sin",
        "y",
        "sin",
        "z",
        "order",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "order",
        "update",
        "axis",
        "angle",
        "angle",
        "halfAngle",
        "axis",
        "s",
        "axis",
        "s",
        "axis",
        "s",
        "halfAngle",
        "m",
        "m",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "m11",
        "m22",
        "m33",
        "trace",
        "trace",
        "s",
        "m32",
        "m23",
        "s",
        "m13",
        "m31",
        "s",
        "m21",
        "m12",
        "s",
        "m11",
        "m22",
        "m11",
        "m33",
        "m11",
        "m22",
        "m33",
        "m32",
        "m23",
        "s",
        "s",
        "m12",
        "m21",
        "s",
        "m13",
        "m31",
        "s",
        "m22",
        "m33",
        "m22",
        "m11",
        "m33",
        "m13",
        "m31",
        "s",
        "m12",
        "m21",
        "s",
        "s",
        "m23",
        "m32",
        "s",
        "m33",
        "m11",
        "m22",
        "m21",
        "m12",
        "s",
        "m13",
        "m31",
        "s",
        "m23",
        "m32",
        "s",
        "s",
        "vFrom",
        "vTo",
        "vFrom",
        "vTo",
        "r",
        "r",
        "vFrom",
        "vFrom",
        "vFrom",
        "vFrom",
        "r",
        "vFrom",
        "vFrom",
        "r",
        "vFrom",
        "vTo",
        "vFrom",
        "vTo",
        "vFrom",
        "vTo",
        "vFrom",
        "vTo",
        "vFrom",
        "vTo",
        "vFrom",
        "vTo",
        "r",
        "q",
        "clamp",
        "q",
        "q",
        "step",
        "q",
        "angle",
        "step",
        "angle",
        "q",
        "t",
        "v",
        "v",
        "v",
        "v",
        "v",
        "l",
        "l",
        "l",
        "l",
        "l",
        "l",
        "l",
        "q",
        "q",
        "q",
        "q",
        "a",
        "b",
        "a",
        "a",
        "a",
        "a",
        "b",
        "b",
        "b",
        "b",
        "qax",
        "qbw",
        "qaw",
        "qbx",
        "qay",
        "qbz",
        "qaz",
        "qby",
        "qay",
        "qbw",
        "qaw",
        "qby",
        "qaz",
        "qbx",
        "qax",
        "qbz",
        "qaz",
        "qbw",
        "qaw",
        "qbz",
        "qax",
        "qby",
        "qay",
        "qbx",
        "qaw",
        "qbw",
        "qax",
        "qbx",
        "qay",
        "qby",
        "qaz",
        "qbz",
        "qb",
        "t",
        "t",
        "t",
        "qb",
        "w",
        "qb",
        "x",
        "qb",
        "y",
        "qb",
        "z",
        "qb",
        "cosHalfTheta",
        "qb",
        "qb",
        "qb",
        "qb",
        "cosHalfTheta",
        "cosHalfTheta",
        "qb",
        "cosHalfTheta",
        "w",
        "x",
        "y",
        "z",
        "cosHalfTheta",
        "cosHalfTheta",
        "sqrSinHalfTheta",
        "t",
        "s",
        "w",
        "t",
        "s",
        "x",
        "t",
        "s",
        "y",
        "t",
        "s",
        "z",
        "t",
        "sqrSinHalfTheta",
        "sinHalfTheta",
        "cosHalfTheta",
        "t",
        "halfTheta",
        "sinHalfTheta",
        "t",
        "halfTheta",
        "sinHalfTheta",
        "w",
        "ratioA",
        "ratioB",
        "x",
        "ratioA",
        "ratioB",
        "y",
        "ratioA",
        "ratioB",
        "z",
        "ratioA",
        "ratioB",
        "qa",
        "qb",
        "t",
        "qa",
        "qb",
        "t",
        "x0",
        "x0",
        "r1",
        "theta1",
        "r1",
        "theta1",
        "r2",
        "theta2",
        "r2",
        "theta2",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "attribute",
        "index",
        "attribute",
        "index",
        "attribute",
        "index",
        "attribute",
        "index",
        "attribute",
        "index",
        "callback",
        "callback",
        "x",
        "y",
        "z",
        "Vector3",
        "x",
        "y",
        "z",
        "x",
        "y",
        "z",
        "z",
        "z",
        "x",
        "y",
        "z",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "index",
        "value",
        "index",
        "value",
        "value",
        "value",
        "index",
        "index",
        "index",
        "index",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "s",
        "s",
        "s",
        "s",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "v",
        "s",
        "v",
        "s",
        "v",
        "s",
        "v",
        "s",
        "v",
        "v",
        "v",
        "v",
        "s",
        "s",
        "s",
        "s",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "v",
        "v",
        "v",
        "v",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "euler",
        "_quaternion$4",
        "euler",
        "axis",
        "angle",
        "_quaternion$4",
        "axis",
        "angle",
        "m",
        "m",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "m",
        "m",
        "m",
        "m",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "w",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "w",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "w",
        "q",
        "q",
        "q",
        "q",
        "q",
        "qy",
        "vz",
        "qz",
        "vy",
        "qz",
        "vx",
        "qx",
        "vz",
        "qx",
        "vy",
        "qy",
        "vx",
        "vx",
        "qw",
        "tx",
        "qy",
        "tz",
        "qz",
        "ty",
        "vy",
        "qw",
        "ty",
        "qz",
        "tx",
        "qx",
        "tz",
        "vz",
        "qw",
        "tz",
        "qx",
        "ty",
        "qy",
        "tx",
        "camera",
        "camera",
        "camera",
        "camera",
        "camera",
        "camera",
        "m",
        "m",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "v",
        "v",
        "v",
        "v",
        "scalar",
        "scalar",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "minVal",
        "maxVal",
        "minVal",
        "maxVal",
        "minVal",
        "maxVal",
        "minVal",
        "maxVal",
        "min",
        "max",
        "length",
        "min",
        "max",
        "length",
        "v",
        "v",
        "v",
        "v",
        "length",
        "length",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "v1",
        "v2",
        "alpha",
        "v1",
        "v2",
        "v1",
        "alpha",
        "v1",
        "v2",
        "v1",
        "alpha",
        "v1",
        "v2",
        "v1",
        "alpha",
        "v",
        "v",
        "a",
        "b",
        "a",
        "a",
        "a",
        "b",
        "b",
        "b",
        "ay",
        "bz",
        "az",
        "by",
        "az",
        "bx",
        "ax",
        "bz",
        "ax",
        "by",
        "ay",
        "bx",
        "v",
        "v",
        "denominator",
        "v",
        "denominator",
        "v",
        "scalar",
        "planeNormal",
        "_vector$c",
        "planeNormal",
        "_vector$c",
        "normal",
        "_vector$c",
        "normal",
        "normal",
        "v",
        "v",
        "denominator",
        "v",
        "denominator",
        "clamp",
        "theta",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "dx",
        "dx",
        "dy",
        "dy",
        "dz",
        "dz",
        "v",
        "v",
        "v",
        "v",
        "s",
        "s",
        "s",
        "s",
        "radius",
        "phi",
        "theta",
        "phi",
        "radius",
        "sinPhiRadius",
        "theta",
        "phi",
        "radius",
        "sinPhiRadius",
        "theta",
        "c",
        "c",
        "c",
        "c",
        "radius",
        "theta",
        "y",
        "radius",
        "theta",
        "y",
        "radius",
        "theta",
        "m",
        "m",
        "e",
        "e",
        "e",
        "m",
        "m",
        "m",
        "m",
        "sx",
        "sy",
        "sz",
        "m",
        "index",
        "m",
        "index",
        "m",
        "index",
        "m",
        "index",
        "e",
        "e",
        "e",
        "e",
        "c",
        "c",
        "c",
        "c",
        "v",
        "v",
        "v",
        "v",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "attribute",
        "index",
        "attribute",
        "index",
        "attribute",
        "index",
        "attribute",
        "index",
        "u",
        "u",
        "c",
        "theta",
        "u",
        "c",
        "theta",
        "Vector3",
        "Quaternion",
        "min",
        "Vector3",
        "Infinity",
        "Infinity",
        "Infinity",
        "max",
        "Vector3",
        "Infinity",
        "Infinity",
        "Infinity",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "array",
        "array",
        "i",
        "il",
        "i",
        "_vector$b",
        "array",
        "i",
        "attribute",
        "attribute",
        "i",
        "il",
        "i",
        "_vector$b",
        "attribute",
        "i",
        "points",
        "points",
        "i",
        "il",
        "i",
        "points",
        "i",
        "center",
        "size",
        "_vector$b",
        "size",
        "center",
        "halfSize",
        "center",
        "halfSize",
        "precise",
        "precise",
        "box",
        "box",
        "box",
        "Infinity",
        "Infinity",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "point",
        "point",
        "point",
        "vector",
        "vector",
        "vector",
        "scalar",
        "scalar",
        "scalar",
        "precise",
        "geometry",
        "geometry",
        "precise",
        "positionAttribute",
        "positionAttribute",
        "i",
        "l",
        "i",
        "i",
        "_vector$b",
        "_vector$b",
        "positionAttribute",
        "i",
        "_vector$b",
        "_vector$b",
        "_box$4",
        "geometry",
        "geometry",
        "_box$4",
        "geometry",
        "_box$4",
        "_box$4",
        "children",
        "i",
        "l",
        "i",
        "children",
        "i",
        "precise",
        "point",
        "point",
        "point",
        "point",
        "point",
        "point",
        "point",
        "box",
        "box",
        "box",
        "box",
        "box",
        "box",
        "box",
        "point",
        "target",
        "target",
        "point",
        "point",
        "point",
        "box",
        "box",
        "box",
        "box",
        "box",
        "box",
        "box",
        "sphere",
        "sphere",
        "_vector$b",
        "_vector$b",
        "sphere",
        "sphere",
        "sphere",
        "plane",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "triangle",
        "_center",
        "_extents",
        "_center",
        "_v0$3",
        "triangle",
        "_center",
        "_v1$7",
        "triangle",
        "_center",
        "_v2$4",
        "triangle",
        "_center",
        "_f0",
        "_v1$7",
        "_v0$3",
        "_f1",
        "_v2$4",
        "_v1$7",
        "_f2",
        "_v0$3",
        "_v2$4",
        "_f0",
        "_f0",
        "_f1",
        "_f1",
        "_f2",
        "_f2",
        "_f0",
        "_f0",
        "_f1",
        "_f1",
        "_f2",
        "_f2",
        "_f0",
        "_f0",
        "_f1",
        "_f1",
        "_f2",
        "_f2",
        "satForAxes",
        "axes",
        "_v0$3",
        "_v1$7",
        "_v2$4",
        "_extents",
        "axes",
        "satForAxes",
        "axes",
        "_v0$3",
        "_v1$7",
        "_v2$4",
        "_extents",
        "_triangleNormal",
        "_f0",
        "_f1",
        "axes",
        "_triangleNormal",
        "_triangleNormal",
        "_triangleNormal",
        "satForAxes",
        "axes",
        "_v0$3",
        "_v1$7",
        "_v2$4",
        "_extents",
        "point",
        "target",
        "target",
        "point",
        "point",
        "point",
        "_vector$b",
        "point",
        "target",
        "target",
        "target",
        "target",
        "_vector$b",
        "target",
        "box",
        "box",
        "box",
        "box",
        "box",
        "box",
        "matrix",
        "_points",
        "matrix",
        "_points",
        "matrix",
        "_points",
        "matrix",
        "_points",
        "matrix",
        "_points",
        "matrix",
        "_points",
        "matrix",
        "_points",
        "matrix",
        "_points",
        "matrix",
        "_points",
        "offset",
        "offset",
        "offset",
        "box",
        "box",
        "box",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Box3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "axes",
        "v0",
        "v1",
        "v2",
        "extents",
        "axes",
        "i",
        "j",
        "i",
        "_testAxis",
        "axes",
        "i",
        "extents",
        "_testAxis",
        "extents",
        "_testAxis",
        "extents",
        "_testAxis",
        "v0",
        "_testAxis",
        "v1",
        "_testAxis",
        "v2",
        "_testAxis",
        "p0",
        "p1",
        "p2",
        "p0",
        "p1",
        "p2",
        "r",
        "Box3",
        "Vector3",
        "Vector3",
        "center",
        "Vector3",
        "radius",
        "center",
        "radius",
        "center",
        "radius",
        "center",
        "radius",
        "points",
        "optionalCenter",
        "optionalCenter",
        "center",
        "optionalCenter",
        "_box$3",
        "points",
        "center",
        "points",
        "i",
        "il",
        "i",
        "maxRadiusSq",
        "maxRadiusSq",
        "center",
        "points",
        "i",
        "maxRadiusSq",
        "sphere",
        "sphere",
        "sphere",
        "point",
        "point",
        "point",
        "point",
        "sphere",
        "sphere",
        "sphere",
        "radiusSum",
        "radiusSum",
        "box",
        "box",
        "plane",
        "plane",
        "point",
        "target",
        "point",
        "target",
        "point",
        "deltaLengthSq",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "matrix",
        "matrix",
        "matrix",
        "offset",
        "offset",
        "point",
        "point",
        "_v1$6",
        "point",
        "_v1$6",
        "lengthSq",
        "lengthSq",
        "length",
        "_v1$6",
        "delta",
        "length",
        "delta",
        "sphere",
        "sphere",
        "sphere",
        "sphere",
        "sphere",
        "_v2$3",
        "sphere",
        "sphere",
        "_v1$6",
        "sphere",
        "_v2$3",
        "_v1$6",
        "sphere",
        "_v2$3",
        "sphere",
        "sphere",
        "sphere",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "origin",
        "Vector3",
        "direction",
        "Vector3",
        "origin",
        "direction",
        "origin",
        "direction",
        "origin",
        "direction",
        "ray",
        "ray",
        "ray",
        "t",
        "target",
        "target",
        "t",
        "v",
        "v",
        "t",
        "t",
        "_vector$a",
        "point",
        "target",
        "target",
        "point",
        "target",
        "directionDistance",
        "target",
        "target",
        "directionDistance",
        "point",
        "point",
        "point",
        "_vector$a",
        "point",
        "directionDistance",
        "point",
        "_vector$a",
        "directionDistance",
        "_vector$a",
        "point",
        "v0",
        "v1",
        "optionalPointOnRay",
        "optionalPointOnSegment",
        "_segCenter",
        "v0",
        "v1",
        "_segDir",
        "v1",
        "v0",
        "_diff",
        "_segCenter",
        "v0",
        "v1",
        "_segDir",
        "_diff",
        "_diff",
        "_segDir",
        "_diff",
        "a01",
        "a01",
        "det",
        "s0",
        "a01",
        "b1",
        "b0",
        "s1",
        "a01",
        "b0",
        "b1",
        "extDet",
        "segExtent",
        "det",
        "s0",
        "s1",
        "extDet",
        "s1",
        "extDet",
        "det",
        "s0",
        "invDet",
        "s1",
        "invDet",
        "sqrDist",
        "s0",
        "s0",
        "a01",
        "s1",
        "b0",
        "s1",
        "a01",
        "s0",
        "s1",
        "b1",
        "c",
        "s1",
        "segExtent",
        "s0",
        "a01",
        "s1",
        "b0",
        "sqrDist",
        "s0",
        "s0",
        "s1",
        "s1",
        "b1",
        "c",
        "s1",
        "segExtent",
        "s0",
        "a01",
        "s1",
        "b0",
        "sqrDist",
        "s0",
        "s0",
        "s1",
        "s1",
        "b1",
        "c",
        "s1",
        "extDet",
        "s0",
        "a01",
        "segExtent",
        "b0",
        "s1",
        "s0",
        "segExtent",
        "segExtent",
        "b1",
        "segExtent",
        "sqrDist",
        "s0",
        "s0",
        "s1",
        "s1",
        "b1",
        "c",
        "s1",
        "extDet",
        "s0",
        "s1",
        "segExtent",
        "b1",
        "segExtent",
        "sqrDist",
        "s1",
        "s1",
        "b1",
        "c",
        "s0",
        "a01",
        "segExtent",
        "b0",
        "s1",
        "s0",
        "segExtent",
        "segExtent",
        "b1",
        "segExtent",
        "sqrDist",
        "s0",
        "s0",
        "s1",
        "s1",
        "b1",
        "c",
        "s1",
        "a01",
        "segExtent",
        "segExtent",
        "s0",
        "a01",
        "s1",
        "b0",
        "sqrDist",
        "s0",
        "s0",
        "s1",
        "s1",
        "b1",
        "c",
        "optionalPointOnRay",
        "optionalPointOnRay",
        "s0",
        "optionalPointOnSegment",
        "optionalPointOnSegment",
        "_segCenter",
        "_segDir",
        "s1",
        "sqrDist",
        "sphere",
        "target",
        "_vector$a",
        "sphere",
        "_vector$a",
        "_vector$a",
        "_vector$a",
        "tca",
        "tca",
        "sphere",
        "sphere",
        "d2",
        "radius2",
        "radius2",
        "d2",
        "tca",
        "thc",
        "tca",
        "thc",
        "t1",
        "t0",
        "t1",
        "target",
        "t0",
        "target",
        "sphere",
        "sphere",
        "sphere",
        "sphere",
        "plane",
        "plane",
        "denominator",
        "plane",
        "plane",
        "plane",
        "denominator",
        "t",
        "t",
        "plane",
        "target",
        "plane",
        "t",
        "t",
        "target",
        "plane",
        "plane",
        "distToPoint",
        "plane",
        "denominator",
        "distToPoint",
        "box",
        "target",
        "invdirx",
        "tmin",
        "box",
        "origin",
        "invdirx",
        "tmax",
        "box",
        "origin",
        "invdirx",
        "tmin",
        "box",
        "origin",
        "invdirx",
        "tmax",
        "box",
        "origin",
        "invdirx",
        "invdiry",
        "tymin",
        "box",
        "origin",
        "invdiry",
        "tymax",
        "box",
        "origin",
        "invdiry",
        "tymin",
        "box",
        "origin",
        "invdiry",
        "tymax",
        "box",
        "origin",
        "invdiry",
        "tmin",
        "tymax",
        "tymin",
        "tmax",
        "tymin",
        "tmin",
        "isNaN",
        "tmin",
        "tmin",
        "tymin",
        "tymax",
        "tmax",
        "isNaN",
        "tmax",
        "tmax",
        "tymax",
        "invdirz",
        "tzmin",
        "box",
        "origin",
        "invdirz",
        "tzmax",
        "box",
        "origin",
        "invdirz",
        "tzmin",
        "box",
        "origin",
        "invdirz",
        "tzmax",
        "box",
        "origin",
        "invdirz",
        "tmin",
        "tzmax",
        "tzmin",
        "tmax",
        "tzmin",
        "tmin",
        "tmin",
        "tmin",
        "tmin",
        "tzmin",
        "tzmax",
        "tmax",
        "tmax",
        "tmax",
        "tmax",
        "tzmax",
        "tmax",
        "tmin",
        "tmin",
        "tmax",
        "target",
        "box",
        "box",
        "_vector$a",
        "a",
        "b",
        "c",
        "backfaceCulling",
        "target",
        "_edge1",
        "b",
        "a",
        "_edge2",
        "c",
        "a",
        "_normal$1",
        "_edge1",
        "_edge2",
        "_normal$1",
        "DdN",
        "backfaceCulling",
        "sign",
        "DdN",
        "sign",
        "DdN",
        "DdN",
        "_diff",
        "a",
        "sign",
        "_edge2",
        "_diff",
        "_edge2",
        "DdQxE2",
        "sign",
        "_edge1",
        "_diff",
        "DdE1xQ",
        "DdQxE2",
        "DdE1xQ",
        "DdN",
        "sign",
        "_diff",
        "_normal$1",
        "QdN",
        "QdN",
        "DdN",
        "target",
        "matrix4",
        "matrix4",
        "matrix4",
        "ray",
        "ray",
        "ray",
        "n11",
        "n12",
        "n13",
        "n14",
        "n21",
        "n22",
        "n23",
        "n24",
        "n31",
        "n32",
        "n33",
        "n34",
        "n41",
        "n42",
        "n43",
        "n44",
        "Matrix4",
        "n11",
        "n11",
        "n12",
        "n13",
        "n14",
        "n21",
        "n22",
        "n23",
        "n24",
        "n31",
        "n32",
        "n33",
        "n34",
        "n41",
        "n42",
        "n43",
        "n44",
        "n11",
        "n12",
        "n13",
        "n14",
        "n21",
        "n22",
        "n23",
        "n24",
        "n31",
        "n32",
        "n33",
        "n34",
        "n41",
        "n42",
        "n43",
        "n44",
        "te",
        "n11",
        "te",
        "n12",
        "te",
        "n13",
        "te",
        "n14",
        "te",
        "n21",
        "te",
        "n22",
        "te",
        "n23",
        "te",
        "n24",
        "te",
        "n31",
        "te",
        "n32",
        "te",
        "n33",
        "te",
        "n34",
        "te",
        "n41",
        "te",
        "n42",
        "te",
        "n43",
        "te",
        "n44",
        "Matrix4",
        "m",
        "m",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "m",
        "m",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "m",
        "m",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "xAxis",
        "yAxis",
        "zAxis",
        "xAxis",
        "yAxis",
        "zAxis",
        "xAxis",
        "yAxis",
        "zAxis",
        "xAxis",
        "yAxis",
        "zAxis",
        "xAxis",
        "yAxis",
        "zAxis",
        "xAxis",
        "yAxis",
        "zAxis",
        "m",
        "m",
        "_v1$5",
        "m",
        "_v1$5",
        "m",
        "_v1$5",
        "m",
        "te",
        "me",
        "scaleX",
        "te",
        "me",
        "scaleX",
        "te",
        "me",
        "scaleX",
        "te",
        "te",
        "me",
        "scaleY",
        "te",
        "me",
        "scaleY",
        "te",
        "me",
        "scaleY",
        "te",
        "te",
        "me",
        "scaleZ",
        "te",
        "me",
        "scaleZ",
        "te",
        "me",
        "scaleZ",
        "te",
        "te",
        "te",
        "te",
        "te",
        "euler",
        "euler",
        "euler",
        "euler",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "euler",
        "a",
        "e",
        "a",
        "f",
        "b",
        "e",
        "b",
        "f",
        "te",
        "c",
        "e",
        "te",
        "c",
        "f",
        "te",
        "d",
        "te",
        "af",
        "be",
        "d",
        "te",
        "ae",
        "bf",
        "d",
        "te",
        "b",
        "c",
        "te",
        "bf",
        "ae",
        "d",
        "te",
        "be",
        "af",
        "d",
        "te",
        "a",
        "c",
        "euler",
        "c",
        "e",
        "c",
        "f",
        "d",
        "e",
        "d",
        "f",
        "te",
        "ce",
        "df",
        "b",
        "te",
        "de",
        "b",
        "cf",
        "te",
        "a",
        "d",
        "te",
        "a",
        "f",
        "te",
        "a",
        "e",
        "te",
        "b",
        "te",
        "cf",
        "b",
        "de",
        "te",
        "df",
        "ce",
        "b",
        "te",
        "a",
        "c",
        "euler",
        "c",
        "e",
        "c",
        "f",
        "d",
        "e",
        "d",
        "f",
        "te",
        "ce",
        "df",
        "b",
        "te",
        "a",
        "f",
        "te",
        "de",
        "cf",
        "b",
        "te",
        "cf",
        "de",
        "b",
        "te",
        "a",
        "e",
        "te",
        "df",
        "ce",
        "b",
        "te",
        "a",
        "d",
        "te",
        "b",
        "te",
        "a",
        "c",
        "euler",
        "a",
        "e",
        "a",
        "f",
        "b",
        "e",
        "b",
        "f",
        "te",
        "c",
        "e",
        "te",
        "be",
        "d",
        "af",
        "te",
        "ae",
        "d",
        "bf",
        "te",
        "c",
        "f",
        "te",
        "bf",
        "d",
        "ae",
        "te",
        "af",
        "d",
        "be",
        "te",
        "d",
        "te",
        "b",
        "c",
        "te",
        "a",
        "c",
        "euler",
        "a",
        "c",
        "a",
        "d",
        "b",
        "c",
        "b",
        "d",
        "te",
        "c",
        "e",
        "te",
        "bd",
        "ac",
        "f",
        "te",
        "bc",
        "f",
        "ad",
        "te",
        "f",
        "te",
        "a",
        "e",
        "te",
        "b",
        "e",
        "te",
        "d",
        "e",
        "te",
        "ad",
        "f",
        "bc",
        "te",
        "ac",
        "bd",
        "f",
        "euler",
        "a",
        "c",
        "a",
        "d",
        "b",
        "c",
        "b",
        "d",
        "te",
        "c",
        "e",
        "te",
        "f",
        "te",
        "d",
        "e",
        "te",
        "ac",
        "f",
        "bd",
        "te",
        "a",
        "e",
        "te",
        "ad",
        "f",
        "bc",
        "te",
        "bc",
        "f",
        "ad",
        "te",
        "b",
        "e",
        "te",
        "bd",
        "f",
        "ac",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "q",
        "_zero",
        "q",
        "_one",
        "eye",
        "target",
        "up",
        "_z",
        "eye",
        "target",
        "_z",
        "_z",
        "_z",
        "_x",
        "up",
        "_z",
        "_x",
        "up",
        "_z",
        "_z",
        "_z",
        "_x",
        "up",
        "_z",
        "_x",
        "_y",
        "_z",
        "_x",
        "te",
        "_x",
        "te",
        "_y",
        "te",
        "_z",
        "te",
        "_x",
        "te",
        "_y",
        "te",
        "_z",
        "te",
        "_x",
        "te",
        "_y",
        "te",
        "_z",
        "m",
        "m",
        "m",
        "m",
        "a",
        "b",
        "a",
        "b",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "te",
        "a11",
        "b11",
        "a12",
        "b21",
        "a13",
        "b31",
        "a14",
        "b41",
        "te",
        "a11",
        "b12",
        "a12",
        "b22",
        "a13",
        "b32",
        "a14",
        "b42",
        "te",
        "a11",
        "b13",
        "a12",
        "b23",
        "a13",
        "b33",
        "a14",
        "b43",
        "te",
        "a11",
        "b14",
        "a12",
        "b24",
        "a13",
        "b34",
        "a14",
        "b44",
        "te",
        "a21",
        "b11",
        "a22",
        "b21",
        "a23",
        "b31",
        "a24",
        "b41",
        "te",
        "a21",
        "b12",
        "a22",
        "b22",
        "a23",
        "b32",
        "a24",
        "b42",
        "te",
        "a21",
        "b13",
        "a22",
        "b23",
        "a23",
        "b33",
        "a24",
        "b43",
        "te",
        "a21",
        "b14",
        "a22",
        "b24",
        "a23",
        "b34",
        "a24",
        "b44",
        "te",
        "a31",
        "b11",
        "a32",
        "b21",
        "a33",
        "b31",
        "a34",
        "b41",
        "te",
        "a31",
        "b12",
        "a32",
        "b22",
        "a33",
        "b32",
        "a34",
        "b42",
        "te",
        "a31",
        "b13",
        "a32",
        "b23",
        "a33",
        "b33",
        "a34",
        "b43",
        "te",
        "a31",
        "b14",
        "a32",
        "b24",
        "a33",
        "b34",
        "a34",
        "b44",
        "te",
        "a41",
        "b11",
        "a42",
        "b21",
        "a43",
        "b31",
        "a44",
        "b41",
        "te",
        "a41",
        "b12",
        "a42",
        "b22",
        "a43",
        "b32",
        "a44",
        "b42",
        "te",
        "a41",
        "b13",
        "a42",
        "b23",
        "a43",
        "b33",
        "a44",
        "b43",
        "te",
        "a41",
        "b14",
        "a42",
        "b24",
        "a43",
        "b34",
        "a44",
        "b44",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "n41",
        "n14",
        "n23",
        "n32",
        "n13",
        "n24",
        "n32",
        "n14",
        "n22",
        "n33",
        "n12",
        "n24",
        "n33",
        "n13",
        "n22",
        "n34",
        "n12",
        "n23",
        "n34",
        "n42",
        "n11",
        "n23",
        "n34",
        "n11",
        "n24",
        "n33",
        "n14",
        "n21",
        "n33",
        "n13",
        "n21",
        "n34",
        "n13",
        "n24",
        "n31",
        "n14",
        "n23",
        "n31",
        "n43",
        "n11",
        "n24",
        "n32",
        "n11",
        "n22",
        "n34",
        "n14",
        "n21",
        "n32",
        "n12",
        "n21",
        "n34",
        "n14",
        "n22",
        "n31",
        "n12",
        "n24",
        "n31",
        "n44",
        "n13",
        "n22",
        "n31",
        "n11",
        "n23",
        "n32",
        "n11",
        "n22",
        "n33",
        "n13",
        "n21",
        "n32",
        "n12",
        "n21",
        "n33",
        "n12",
        "n23",
        "n31",
        "tmp",
        "te",
        "te",
        "te",
        "te",
        "tmp",
        "tmp",
        "te",
        "te",
        "te",
        "te",
        "tmp",
        "tmp",
        "te",
        "te",
        "te",
        "te",
        "tmp",
        "tmp",
        "te",
        "te",
        "te",
        "te",
        "tmp",
        "tmp",
        "te",
        "te",
        "te",
        "te",
        "tmp",
        "tmp",
        "te",
        "te",
        "te",
        "te",
        "tmp",
        "x",
        "y",
        "z",
        "x",
        "te",
        "x",
        "te",
        "x",
        "te",
        "x",
        "te",
        "x",
        "te",
        "y",
        "te",
        "z",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "n23",
        "n34",
        "n42",
        "n24",
        "n33",
        "n42",
        "n24",
        "n32",
        "n43",
        "n22",
        "n34",
        "n43",
        "n23",
        "n32",
        "n44",
        "n22",
        "n33",
        "n44",
        "n14",
        "n33",
        "n42",
        "n13",
        "n34",
        "n42",
        "n14",
        "n32",
        "n43",
        "n12",
        "n34",
        "n43",
        "n13",
        "n32",
        "n44",
        "n12",
        "n33",
        "n44",
        "n13",
        "n24",
        "n42",
        "n14",
        "n23",
        "n42",
        "n14",
        "n22",
        "n43",
        "n12",
        "n24",
        "n43",
        "n13",
        "n22",
        "n44",
        "n12",
        "n23",
        "n44",
        "n14",
        "n23",
        "n32",
        "n13",
        "n24",
        "n32",
        "n14",
        "n22",
        "n33",
        "n12",
        "n24",
        "n33",
        "n13",
        "n22",
        "n34",
        "n12",
        "n23",
        "n34",
        "n11",
        "t11",
        "n21",
        "t12",
        "n31",
        "t13",
        "n41",
        "t14",
        "det",
        "det",
        "te",
        "t11",
        "detInv",
        "te",
        "n24",
        "n33",
        "n41",
        "n23",
        "n34",
        "n41",
        "n24",
        "n31",
        "n43",
        "n21",
        "n34",
        "n43",
        "n23",
        "n31",
        "n44",
        "n21",
        "n33",
        "n44",
        "detInv",
        "te",
        "n22",
        "n34",
        "n41",
        "n24",
        "n32",
        "n41",
        "n24",
        "n31",
        "n42",
        "n21",
        "n34",
        "n42",
        "n22",
        "n31",
        "n44",
        "n21",
        "n32",
        "n44",
        "detInv",
        "te",
        "n23",
        "n32",
        "n41",
        "n22",
        "n33",
        "n41",
        "n23",
        "n31",
        "n42",
        "n21",
        "n33",
        "n42",
        "n22",
        "n31",
        "n43",
        "n21",
        "n32",
        "n43",
        "detInv",
        "te",
        "t12",
        "detInv",
        "te",
        "n13",
        "n34",
        "n41",
        "n14",
        "n33",
        "n41",
        "n14",
        "n31",
        "n43",
        "n11",
        "n34",
        "n43",
        "n13",
        "n31",
        "n44",
        "n11",
        "n33",
        "n44",
        "detInv",
        "te",
        "n14",
        "n32",
        "n41",
        "n12",
        "n34",
        "n41",
        "n14",
        "n31",
        "n42",
        "n11",
        "n34",
        "n42",
        "n12",
        "n31",
        "n44",
        "n11",
        "n32",
        "n44",
        "detInv",
        "te",
        "n12",
        "n33",
        "n41",
        "n13",
        "n32",
        "n41",
        "n13",
        "n31",
        "n42",
        "n11",
        "n33",
        "n42",
        "n12",
        "n31",
        "n43",
        "n11",
        "n32",
        "n43",
        "detInv",
        "te",
        "t13",
        "detInv",
        "te",
        "n14",
        "n23",
        "n41",
        "n13",
        "n24",
        "n41",
        "n14",
        "n21",
        "n43",
        "n11",
        "n24",
        "n43",
        "n13",
        "n21",
        "n44",
        "n11",
        "n23",
        "n44",
        "detInv",
        "te",
        "n12",
        "n24",
        "n41",
        "n14",
        "n22",
        "n41",
        "n14",
        "n21",
        "n42",
        "n11",
        "n24",
        "n42",
        "n12",
        "n21",
        "n44",
        "n11",
        "n22",
        "n44",
        "detInv",
        "te",
        "n13",
        "n22",
        "n41",
        "n12",
        "n23",
        "n41",
        "n13",
        "n21",
        "n42",
        "n11",
        "n23",
        "n42",
        "n12",
        "n21",
        "n43",
        "n11",
        "n22",
        "n43",
        "detInv",
        "te",
        "t14",
        "detInv",
        "te",
        "n13",
        "n24",
        "n31",
        "n14",
        "n23",
        "n31",
        "n14",
        "n21",
        "n33",
        "n11",
        "n24",
        "n33",
        "n13",
        "n21",
        "n34",
        "n11",
        "n23",
        "n34",
        "detInv",
        "te",
        "n14",
        "n22",
        "n31",
        "n12",
        "n24",
        "n31",
        "n14",
        "n21",
        "n32",
        "n11",
        "n24",
        "n32",
        "n12",
        "n21",
        "n34",
        "n11",
        "n22",
        "n34",
        "detInv",
        "te",
        "n12",
        "n23",
        "n31",
        "n13",
        "n22",
        "n31",
        "n13",
        "n21",
        "n32",
        "n11",
        "n23",
        "n32",
        "n12",
        "n21",
        "n33",
        "n11",
        "n22",
        "n33",
        "detInv",
        "v",
        "v",
        "v",
        "v",
        "te",
        "x",
        "te",
        "y",
        "te",
        "z",
        "te",
        "x",
        "te",
        "y",
        "te",
        "z",
        "te",
        "x",
        "te",
        "y",
        "te",
        "z",
        "te",
        "x",
        "te",
        "y",
        "te",
        "z",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "scaleXSq",
        "scaleYSq",
        "scaleZSq",
        "x",
        "y",
        "z",
        "x",
        "x",
        "x",
        "x",
        "x",
        "y",
        "z",
        "theta",
        "theta",
        "theta",
        "c",
        "s",
        "s",
        "c",
        "theta",
        "theta",
        "theta",
        "c",
        "s",
        "s",
        "c",
        "theta",
        "theta",
        "theta",
        "c",
        "s",
        "s",
        "c",
        "axis",
        "angle",
        "angle",
        "angle",
        "c",
        "axis",
        "axis",
        "axis",
        "t",
        "x",
        "t",
        "y",
        "tx",
        "x",
        "c",
        "tx",
        "y",
        "s",
        "z",
        "tx",
        "z",
        "s",
        "y",
        "tx",
        "y",
        "s",
        "z",
        "ty",
        "y",
        "c",
        "ty",
        "z",
        "s",
        "x",
        "tx",
        "z",
        "s",
        "y",
        "ty",
        "z",
        "s",
        "x",
        "t",
        "z",
        "z",
        "c",
        "x",
        "y",
        "z",
        "x",
        "y",
        "z",
        "xy",
        "xz",
        "yx",
        "yz",
        "zx",
        "zy",
        "yx",
        "zx",
        "xy",
        "zy",
        "xz",
        "yz",
        "position",
        "quaternion",
        "scale",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "x",
        "x2",
        "x",
        "y2",
        "x",
        "z2",
        "y",
        "y2",
        "y",
        "z2",
        "z",
        "z2",
        "w",
        "x2",
        "w",
        "y2",
        "w",
        "z2",
        "scale",
        "scale",
        "scale",
        "te",
        "yy",
        "zz",
        "sx",
        "te",
        "xy",
        "wz",
        "sx",
        "te",
        "xz",
        "wy",
        "sx",
        "te",
        "te",
        "xy",
        "wz",
        "sy",
        "te",
        "xx",
        "zz",
        "sy",
        "te",
        "yz",
        "wx",
        "sy",
        "te",
        "te",
        "xz",
        "wy",
        "sz",
        "te",
        "yz",
        "wx",
        "sz",
        "te",
        "xx",
        "yy",
        "sz",
        "te",
        "te",
        "position",
        "te",
        "position",
        "te",
        "position",
        "te",
        "position",
        "quaternion",
        "scale",
        "_v1$5",
        "te",
        "te",
        "te",
        "_v1$5",
        "te",
        "te",
        "te",
        "_v1$5",
        "te",
        "te",
        "te",
        "det",
        "sx",
        "sx",
        "position",
        "te",
        "position",
        "te",
        "position",
        "te",
        "_m1$4",
        "sx",
        "sy",
        "sz",
        "_m1$4",
        "invSX",
        "_m1$4",
        "invSX",
        "_m1$4",
        "invSX",
        "_m1$4",
        "invSY",
        "_m1$4",
        "invSY",
        "_m1$4",
        "invSY",
        "_m1$4",
        "invSZ",
        "_m1$4",
        "invSZ",
        "_m1$4",
        "invSZ",
        "quaternion",
        "_m1$4",
        "scale",
        "sx",
        "scale",
        "sy",
        "scale",
        "sz",
        "left",
        "right",
        "top",
        "bottom",
        "near",
        "far",
        "coordinateSystem",
        "WebGLCoordinateSystem",
        "near",
        "right",
        "left",
        "near",
        "top",
        "bottom",
        "right",
        "left",
        "right",
        "left",
        "top",
        "bottom",
        "top",
        "bottom",
        "coordinateSystem",
        "WebGLCoordinateSystem",
        "c",
        "far",
        "near",
        "far",
        "near",
        "d",
        "far",
        "near",
        "far",
        "near",
        "coordinateSystem",
        "WebGPUCoordinateSystem",
        "c",
        "far",
        "far",
        "near",
        "d",
        "far",
        "near",
        "far",
        "near",
        "coordinateSystem",
        "te",
        "x",
        "te",
        "te",
        "a",
        "te",
        "te",
        "te",
        "y",
        "te",
        "b",
        "te",
        "te",
        "te",
        "te",
        "c",
        "te",
        "d",
        "te",
        "te",
        "te",
        "te",
        "left",
        "right",
        "top",
        "bottom",
        "near",
        "far",
        "coordinateSystem",
        "WebGLCoordinateSystem",
        "right",
        "left",
        "top",
        "bottom",
        "far",
        "near",
        "right",
        "left",
        "w",
        "top",
        "bottom",
        "h",
        "coordinateSystem",
        "WebGLCoordinateSystem",
        "z",
        "far",
        "near",
        "p",
        "zInv",
        "p",
        "coordinateSystem",
        "WebGPUCoordinateSystem",
        "z",
        "near",
        "p",
        "zInv",
        "p",
        "coordinateSystem",
        "te",
        "w",
        "te",
        "te",
        "te",
        "x",
        "te",
        "te",
        "h",
        "te",
        "te",
        "y",
        "te",
        "te",
        "te",
        "zInv",
        "te",
        "z",
        "te",
        "te",
        "te",
        "te",
        "matrix",
        "matrix",
        "i",
        "i",
        "te",
        "i",
        "me",
        "i",
        "array",
        "offset",
        "i",
        "i",
        "i",
        "array",
        "i",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "Vector3",
        "Matrix4",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Matrix4",
        "Quaternion",
        "x",
        "y",
        "z",
        "order",
        "Euler",
        "x",
        "y",
        "z",
        "order",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "x",
        "y",
        "z",
        "order",
        "x",
        "y",
        "z",
        "order",
        "euler",
        "euler",
        "euler",
        "euler",
        "euler",
        "m",
        "order",
        "update",
        "m",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "order",
        "clamp",
        "m13",
        "m13",
        "m23",
        "m33",
        "m12",
        "m11",
        "m32",
        "m22",
        "clamp",
        "m23",
        "m23",
        "m13",
        "m33",
        "m21",
        "m22",
        "m31",
        "m11",
        "clamp",
        "m32",
        "m32",
        "m31",
        "m33",
        "m12",
        "m22",
        "m21",
        "m11",
        "clamp",
        "m31",
        "m31",
        "m32",
        "m33",
        "m21",
        "m11",
        "m12",
        "m22",
        "clamp",
        "m21",
        "m21",
        "m23",
        "m22",
        "m31",
        "m11",
        "m13",
        "m33",
        "clamp",
        "m12",
        "m12",
        "m32",
        "m22",
        "m13",
        "m11",
        "m23",
        "m33",
        "order",
        "order",
        "update",
        "q",
        "order",
        "update",
        "_matrix$2",
        "q",
        "_matrix$2",
        "order",
        "update",
        "v",
        "order",
        "v",
        "v",
        "v",
        "order",
        "newOrder",
        "_quaternion$3",
        "_quaternion$3",
        "newOrder",
        "euler",
        "euler",
        "euler",
        "euler",
        "euler",
        "array",
        "array",
        "array",
        "array",
        "array",
        "array",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "callback",
        "callback",
        "Euler",
        "channel",
        "channel",
        "channel",
        "channel",
        "channel",
        "channel",
        "channel",
        "channel",
        "layers",
        "layers",
        "channel",
        "channel",
        "Vector3",
        "Quaternion",
        "Matrix4",
        "Vector3",
        "Vector3",
        "Vector3",
        "Quaternion",
        "Vector3",
        "Vector3",
        "Vector3",
        "EventDispatcher",
        "_object3DId",
        "generateUUID",
        "Object3D",
        "Vector3",
        "Euler",
        "Quaternion",
        "Vector3",
        "quaternion",
        "rotation",
        "rotation",
        "quaternion",
        "rotation",
        "onRotationChange",
        "quaternion",
        "onQuaternionChange",
        "position",
        "rotation",
        "quaternion",
        "scale",
        "Matrix4",
        "Matrix3",
        "Matrix4",
        "Matrix4",
        "Object3D",
        "Object3D",
        "Layers",
        "matrix",
        "matrix",
        "q",
        "q",
        "axis",
        "angle",
        "axis",
        "angle",
        "euler",
        "euler",
        "m",
        "m",
        "q",
        "q",
        "axis",
        "angle",
        "_q1",
        "axis",
        "angle",
        "_q1",
        "axis",
        "angle",
        "_q1",
        "axis",
        "angle",
        "_q1",
        "angle",
        "_xAxis",
        "angle",
        "angle",
        "_yAxis",
        "angle",
        "angle",
        "_zAxis",
        "angle",
        "axis",
        "distance",
        "_v1$4",
        "axis",
        "_v1$4",
        "distance",
        "distance",
        "_xAxis",
        "distance",
        "distance",
        "_yAxis",
        "distance",
        "distance",
        "_zAxis",
        "distance",
        "vector",
        "vector",
        "vector",
        "vector",
        "_m1$3",
        "x",
        "y",
        "z",
        "x",
        "_target",
        "x",
        "_target",
        "x",
        "y",
        "z",
        "_position$3",
        "_m1$3",
        "_position$3",
        "_target",
        "_m1$3",
        "_target",
        "_position$3",
        "_m1$3",
        "parent",
        "_m1$3",
        "parent",
        "_q1",
        "_m1$3",
        "_q1",
        "arguments",
        "i",
        "arguments",
        "i",
        "arguments",
        "i",
        "_addedEvent",
        "_childaddedEvent",
        "_childaddedEvent",
        "_childaddedEvent",
        "arguments",
        "i",
        "arguments",
        "i",
        "arguments",
        "i",
        "index",
        "index",
        "_removedEvent",
        "_childremovedEvent",
        "_childremovedEvent",
        "_childremovedEvent",
        "parent",
        "parent",
        "_m1$3",
        "_m1$3",
        "_m1$3",
        "_addedEvent",
        "_childaddedEvent",
        "_childaddedEvent",
        "_childaddedEvent",
        "id",
        "id",
        "name",
        "name",
        "name",
        "value",
        "name",
        "value",
        "i",
        "l",
        "i",
        "i",
        "child",
        "name",
        "value",
        "name",
        "value",
        "result",
        "name",
        "value",
        "result",
        "children",
        "i",
        "l",
        "i",
        "children",
        "i",
        "name",
        "value",
        "result",
        "result",
        "target",
        "target",
        "target",
        "_position$3",
        "target",
        "_scale$2",
        "target",
        "target",
        "_position$3",
        "_quaternion$2",
        "target",
        "target",
        "target",
        "target",
        "e",
        "e",
        "e",
        "callback",
        "callback",
        "children",
        "i",
        "l",
        "i",
        "children",
        "i",
        "callback",
        "callback",
        "callback",
        "children",
        "i",
        "l",
        "i",
        "children",
        "i",
        "callback",
        "callback",
        "parent",
        "callback",
        "parent",
        "parent",
        "callback",
        "force",
        "force",
        "force",
        "children",
        "i",
        "l",
        "i",
        "children",
        "i",
        "child",
        "force",
        "updateParents",
        "updateChildren",
        "updateParents",
        "parent",
        "parent",
        "updateChildren",
        "children",
        "i",
        "l",
        "i",
        "children",
        "i",
        "child",
        "meta",
        "meta",
        "meta",
        "isRootObject",
        "meta",
        "output",
        "bound",
        "bound",
        "bound",
        "bound",
        "bound",
        "bound",
        "bound",
        "meta",
        "meta",
        "library",
        "element",
        "library",
        "element",
        "library",
        "element",
        "element",
        "meta",
        "element",
        "meta",
        "meta",
        "serialize",
        "meta",
        "parameters",
        "parameters",
        "parameters",
        "shapes",
        "shapes",
        "i",
        "l",
        "i",
        "shapes",
        "i",
        "serialize",
        "meta",
        "shape",
        "serialize",
        "meta",
        "shapes",
        "serialize",
        "meta",
        "i",
        "l",
        "i",
        "uuids",
        "serialize",
        "meta",
        "i",
        "uuids",
        "serialize",
        "meta",
        "i",
        "i",
        "i",
        "meta",
        "i",
        "i",
        "i",
        "serialize",
        "meta",
        "animation",
        "isRootObject",
        "extractFromCache",
        "meta",
        "extractFromCache",
        "meta",
        "extractFromCache",
        "meta",
        "extractFromCache",
        "meta",
        "extractFromCache",
        "meta",
        "extractFromCache",
        "meta",
        "extractFromCache",
        "meta",
        "extractFromCache",
        "meta",
        "geometries",
        "output",
        "geometries",
        "materials",
        "output",
        "materials",
        "textures",
        "output",
        "textures",
        "images",
        "output",
        "images",
        "shapes",
        "output",
        "shapes",
        "skeletons",
        "output",
        "skeletons",
        "animations",
        "output",
        "animations",
        "nodes",
        "output",
        "nodes",
        "output",
        "output",
        "cache",
        "key",
        "cache",
        "cache",
        "key",
        "data",
        "values",
        "data",
        "values",
        "recursive",
        "recursive",
        "source",
        "recursive",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "recursive",
        "i",
        "source",
        "i",
        "source",
        "i",
        "child",
        "Object3D",
        "Vector3",
        "Object3D",
        "Object3D",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "a",
        "Vector3",
        "b",
        "Vector3",
        "c",
        "Vector3",
        "a",
        "b",
        "c",
        "a",
        "b",
        "c",
        "target",
        "target",
        "c",
        "b",
        "_v0$2",
        "a",
        "b",
        "target",
        "_v0$2",
        "target",
        "targetLengthSq",
        "target",
        "targetLengthSq",
        "target",
        "point",
        "a",
        "b",
        "c",
        "target",
        "_v0$2",
        "c",
        "a",
        "_v1$3",
        "b",
        "a",
        "_v2$2",
        "point",
        "a",
        "_v0$2",
        "_v0$2",
        "_v0$2",
        "_v1$3",
        "_v0$2",
        "_v2$2",
        "_v1$3",
        "_v1$3",
        "_v1$3",
        "_v2$2",
        "dot00",
        "dot11",
        "dot01",
        "dot01",
        "denom",
        "target",
        "denom",
        "dot11",
        "dot02",
        "dot01",
        "dot12",
        "invDenom",
        "dot00",
        "dot12",
        "dot01",
        "dot02",
        "invDenom",
        "target",
        "u",
        "v",
        "v",
        "u",
        "point",
        "a",
        "b",
        "c",
        "point",
        "a",
        "b",
        "c",
        "_v3$2",
        "_v3$2",
        "_v3$2",
        "_v3$2",
        "_v3$2",
        "point",
        "p1",
        "p2",
        "p3",
        "v1",
        "v2",
        "v3",
        "target",
        "point",
        "p1",
        "p2",
        "p3",
        "_v3$2",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "v1",
        "_v3$2",
        "target",
        "v2",
        "_v3$2",
        "target",
        "v3",
        "_v3$2",
        "target",
        "a",
        "b",
        "c",
        "direction",
        "_v0$2",
        "c",
        "b",
        "_v1$3",
        "a",
        "b",
        "_v0$2",
        "_v1$3",
        "direction",
        "a",
        "b",
        "c",
        "a",
        "b",
        "c",
        "points",
        "i0",
        "i1",
        "i2",
        "points",
        "i0",
        "points",
        "i1",
        "points",
        "i2",
        "attribute",
        "i0",
        "i1",
        "i2",
        "attribute",
        "i0",
        "attribute",
        "i1",
        "attribute",
        "i2",
        "triangle",
        "triangle",
        "triangle",
        "triangle",
        "_v0$2",
        "_v1$3",
        "_v0$2",
        "_v1$3",
        "target",
        "target",
        "target",
        "Triangle",
        "target",
        "target",
        "target",
        "point",
        "target",
        "Triangle",
        "point",
        "target",
        "point",
        "v1",
        "v2",
        "v3",
        "target",
        "Triangle",
        "point",
        "v1",
        "v2",
        "v3",
        "target",
        "point",
        "Triangle",
        "point",
        "direction",
        "Triangle",
        "direction",
        "box",
        "box",
        "p",
        "target",
        "_vab",
        "b",
        "a",
        "_vac",
        "c",
        "a",
        "_vap",
        "p",
        "a",
        "_vab",
        "_vap",
        "_vac",
        "_vap",
        "d1",
        "d2",
        "target",
        "a",
        "_vbp",
        "p",
        "b",
        "_vab",
        "_vbp",
        "_vac",
        "_vbp",
        "d3",
        "d4",
        "d3",
        "target",
        "b",
        "d1",
        "d4",
        "d3",
        "d2",
        "vc",
        "d1",
        "d3",
        "v",
        "d1",
        "d1",
        "d3",
        "target",
        "a",
        "_vab",
        "v",
        "_vcp",
        "p",
        "c",
        "_vab",
        "_vcp",
        "_vac",
        "_vcp",
        "d6",
        "d5",
        "d6",
        "target",
        "c",
        "d5",
        "d2",
        "d1",
        "d6",
        "vb",
        "d2",
        "d6",
        "w",
        "d2",
        "d2",
        "d6",
        "target",
        "a",
        "_vac",
        "w",
        "d3",
        "d6",
        "d5",
        "d4",
        "va",
        "d4",
        "d3",
        "d5",
        "d6",
        "_vbc",
        "c",
        "b",
        "w",
        "d4",
        "d3",
        "d4",
        "d3",
        "d5",
        "d6",
        "target",
        "b",
        "_vbc",
        "w",
        "va",
        "vb",
        "vc",
        "v",
        "vb",
        "denom",
        "w",
        "vc",
        "denom",
        "target",
        "a",
        "_vab",
        "v",
        "_vac",
        "w",
        "triangle",
        "triangle",
        "triangle",
        "triangle",
        "p",
        "q",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "p",
        "q",
        "p",
        "t",
        "t",
        "q",
        "t",
        "p",
        "q",
        "p",
        "t",
        "p",
        "r",
        "g",
        "b",
        "r",
        "g",
        "b",
        "r",
        "g",
        "b",
        "g",
        "b",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "r",
        "g",
        "b",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "hex",
        "colorSpace1",
        "SRGBColorSpace",
        "hex",
        "hex",
        "hex",
        "hex",
        "hex",
        "ColorManagement",
        "colorSpace1",
        "r",
        "g",
        "b",
        "colorSpace1",
        "ColorManagement",
        "r",
        "g",
        "b",
        "ColorManagement",
        "colorSpace1",
        "h",
        "s",
        "l",
        "colorSpace1",
        "ColorManagement",
        "h",
        "euclideanModulo",
        "h",
        "s",
        "clamp",
        "s",
        "l",
        "clamp",
        "l",
        "s",
        "l",
        "l",
        "l",
        "s",
        "l",
        "s",
        "l",
        "s",
        "l",
        "p",
        "hue2rgb",
        "q",
        "p",
        "h",
        "hue2rgb",
        "q",
        "p",
        "h",
        "hue2rgb",
        "q",
        "p",
        "h",
        "ColorManagement",
        "colorSpace1",
        "style",
        "colorSpace1",
        "SRGBColorSpace",
        "parseFloat",
        "style",
        "m",
        "style",
        "m",
        "m",
        "name",
        "color",
        "components",
        "handleAlpha",
        "color",
        "parseInt",
        "color",
        "parseInt",
        "color",
        "parseInt",
        "color",
        "colorSpace1",
        "color",
        "components",
        "handleAlpha",
        "color",
        "parseInt",
        "color",
        "parseInt",
        "color",
        "parseInt",
        "color",
        "colorSpace1",
        "color",
        "components",
        "handleAlpha",
        "color",
        "parseFloat",
        "color",
        "parseFloat",
        "color",
        "parseFloat",
        "color",
        "colorSpace1",
        "style",
        "m",
        "style",
        "m",
        "hex",
        "size",
        "parseInt",
        "hex",
        "parseInt",
        "hex",
        "parseInt",
        "hex",
        "colorSpace1",
        "size",
        "parseInt",
        "hex",
        "colorSpace1",
        "style",
        "style",
        "style",
        "style",
        "colorSpace1",
        "style",
        "colorSpace1",
        "SRGBColorSpace",
        "_colorKeywords",
        "style",
        "hex",
        "hex",
        "colorSpace1",
        "style",
        "color",
        "color",
        "color",
        "color",
        "color",
        "SRGBToLinear",
        "color",
        "SRGBToLinear",
        "color",
        "SRGBToLinear",
        "color",
        "color",
        "LinearToSRGB",
        "color",
        "LinearToSRGB",
        "color",
        "LinearToSRGB",
        "color",
        "colorSpace1",
        "SRGBColorSpace",
        "ColorManagement",
        "_color",
        "colorSpace1",
        "clamp",
        "_color",
        "clamp",
        "_color",
        "clamp",
        "_color",
        "colorSpace1",
        "SRGBColorSpace",
        "colorSpace1",
        "target",
        "colorSpace1",
        "ColorManagement",
        "ColorManagement",
        "_color",
        "colorSpace1",
        "_color",
        "_color",
        "_color",
        "r",
        "g",
        "b",
        "r",
        "g",
        "b",
        "min",
        "max",
        "min",
        "max",
        "hue",
        "saturation",
        "max",
        "min",
        "saturation",
        "lightness",
        "delta",
        "max",
        "min",
        "delta",
        "max",
        "min",
        "max",
        "r",
        "hue",
        "g",
        "b",
        "delta",
        "g",
        "b",
        "g",
        "hue",
        "b",
        "r",
        "delta",
        "b",
        "hue",
        "r",
        "g",
        "delta",
        "hue",
        "target",
        "hue",
        "target",
        "saturation",
        "target",
        "lightness",
        "target",
        "target",
        "colorSpace1",
        "ColorManagement",
        "ColorManagement",
        "_color",
        "colorSpace1",
        "target",
        "_color",
        "target",
        "_color",
        "target",
        "_color",
        "target",
        "colorSpace1",
        "SRGBColorSpace",
        "ColorManagement",
        "_color",
        "colorSpace1",
        "_color",
        "_color",
        "_color",
        "colorSpace1",
        "SRGBColorSpace",
        "colorSpace1",
        "r",
        "g",
        "b",
        "r",
        "g",
        "b",
        "h",
        "s",
        "l",
        "_hslA",
        "_hslA",
        "h",
        "_hslA",
        "s",
        "_hslA",
        "l",
        "color",
        "color",
        "color",
        "color",
        "color1",
        "color2",
        "color1",
        "color2",
        "color1",
        "color2",
        "color1",
        "color2",
        "s",
        "s",
        "s",
        "s",
        "color",
        "color",
        "color",
        "color",
        "color",
        "color",
        "color",
        "color",
        "s",
        "s",
        "s",
        "s",
        "color",
        "alpha",
        "color",
        "alpha",
        "color",
        "alpha",
        "color",
        "alpha",
        "color1",
        "color2",
        "alpha",
        "color1",
        "color2",
        "color1",
        "alpha",
        "color1",
        "color2",
        "color1",
        "alpha",
        "color1",
        "color2",
        "color1",
        "alpha",
        "color",
        "alpha",
        "_hslA",
        "color",
        "_hslB",
        "lerp",
        "_hslA",
        "_hslB",
        "alpha",
        "lerp",
        "_hslA",
        "_hslB",
        "alpha",
        "lerp",
        "_hslA",
        "_hslB",
        "alpha",
        "h",
        "s",
        "l",
        "v",
        "v",
        "v",
        "v",
        "m",
        "m",
        "e",
        "r",
        "e",
        "g",
        "e",
        "b",
        "e",
        "r",
        "e",
        "g",
        "e",
        "b",
        "e",
        "r",
        "e",
        "g",
        "e",
        "b",
        "c",
        "c",
        "c",
        "c",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "attribute",
        "index",
        "attribute",
        "index",
        "attribute",
        "index",
        "attribute",
        "index",
        "Color",
        "Color",
        "_colorKeywords",
        "EventDispatcher",
        "_materialId",
        "generateUUID",
        "NormalBlending",
        "FrontSide",
        "SrcAlphaFactor",
        "OneMinusSrcAlphaFactor",
        "AddEquation",
        "Color",
        "LessEqualDepth",
        "AlwaysStencilFunc",
        "KeepStencilOp",
        "KeepStencilOp",
        "KeepStencilOp",
        "value",
        "value",
        "value",
        "values",
        "values",
        "key",
        "values",
        "values",
        "key",
        "newValue",
        "key",
        "key",
        "currentValue",
        "key",
        "currentValue",
        "currentValue",
        "currentValue",
        "newValue",
        "currentValue",
        "currentValue",
        "newValue",
        "newValue",
        "currentValue",
        "newValue",
        "key",
        "newValue",
        "meta",
        "meta",
        "meta",
        "isRootObject",
        "meta",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "meta",
        "data",
        "meta",
        "data",
        "meta",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "meta",
        "data",
        "meta",
        "data",
        "data",
        "data",
        "meta",
        "data",
        "meta",
        "data",
        "meta",
        "data",
        "meta",
        "data",
        "meta",
        "data",
        "data",
        "meta",
        "data",
        "data",
        "meta",
        "data",
        "data",
        "meta",
        "data",
        "data",
        "data",
        "meta",
        "data",
        "data",
        "data",
        "meta",
        "data",
        "meta",
        "data",
        "meta",
        "data",
        "meta",
        "data",
        "meta",
        "data",
        "meta",
        "data",
        "meta",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "meta",
        "data",
        "data",
        "meta",
        "data",
        "data",
        "meta",
        "Infinity",
        "data",
        "data",
        "data",
        "data",
        "data",
        "NormalBlending",
        "data",
        "FrontSide",
        "data",
        "data",
        "data",
        "data",
        "SrcAlphaFactor",
        "data",
        "OneMinusSrcAlphaFactor",
        "data",
        "AddEquation",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "LessEqualDepth",
        "data",
        "data",
        "data",
        "data",
        "data",
        "AlwaysStencilFunc",
        "data",
        "data",
        "data",
        "KeepStencilOp",
        "data",
        "KeepStencilOp",
        "data",
        "KeepStencilOp",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "cache",
        "key",
        "cache",
        "cache",
        "key",
        "data",
        "values",
        "data",
        "values",
        "isRootObject",
        "extractFromCache",
        "meta",
        "extractFromCache",
        "meta",
        "textures",
        "data",
        "textures",
        "images",
        "data",
        "images",
        "data",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "srcPlanes",
        "srcPlanes",
        "dstPlanes",
        "n",
        "i",
        "n",
        "i",
        "dstPlanes",
        "i",
        "srcPlanes",
        "i",
        "dstPlanes",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "value",
        "value",
        "Material",
        "parameters",
        "Color",
        "Euler",
        "MultiplyOperation",
        "parameters",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "_generateTables",
        "ArrayBuffer",
        "Float32Array",
        "buffer",
        "Uint32Array",
        "buffer",
        "Uint32Array",
        "Uint32Array",
        "i",
        "i",
        "i",
        "e",
        "baseTable",
        "i",
        "baseTable",
        "i",
        "shiftTable",
        "i",
        "shiftTable",
        "i",
        "e",
        "baseTable",
        "i",
        "e",
        "baseTable",
        "i",
        "e",
        "shiftTable",
        "i",
        "e",
        "shiftTable",
        "i",
        "e",
        "e",
        "baseTable",
        "i",
        "e",
        "baseTable",
        "i",
        "e",
        "shiftTable",
        "i",
        "shiftTable",
        "i",
        "e",
        "baseTable",
        "i",
        "baseTable",
        "i",
        "shiftTable",
        "i",
        "shiftTable",
        "i",
        "baseTable",
        "i",
        "baseTable",
        "i",
        "shiftTable",
        "i",
        "shiftTable",
        "i",
        "Uint32Array",
        "Uint32Array",
        "Uint32Array",
        "i",
        "i",
        "i",
        "m",
        "m",
        "e",
        "m",
        "e",
        "mantissaTable",
        "i",
        "m",
        "e",
        "i",
        "i",
        "mantissaTable",
        "i",
        "i",
        "i",
        "i",
        "exponentTable",
        "i",
        "i",
        "exponentTable",
        "exponentTable",
        "i",
        "i",
        "exponentTable",
        "i",
        "i",
        "exponentTable",
        "i",
        "i",
        "i",
        "offsetTable",
        "i",
        "floatView",
        "uint32View",
        "baseTable",
        "shiftTable",
        "mantissaTable",
        "exponentTable",
        "offsetTable",
        "val",
        "val",
        "val",
        "clamp",
        "val",
        "_tables",
        "val",
        "_tables",
        "f",
        "_tables",
        "e",
        "f",
        "_tables",
        "e",
        "val",
        "val",
        "_tables",
        "_tables",
        "_tables",
        "m",
        "val",
        "_tables",
        "m",
        "_tables",
        "toHalfFloat",
        "fromHalfFloat",
        "Vector3",
        "Vector2",
        "array",
        "itemSize",
        "normalized",
        "array",
        "array",
        "itemSize",
        "array",
        "array",
        "itemSize",
        "normalized",
        "StaticDrawUsage",
        "FloatType",
        "value",
        "value",
        "warnOnce",
        "value",
        "value",
        "start",
        "count",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "index1",
        "attribute",
        "index2",
        "index1",
        "index2",
        "attribute",
        "i",
        "l",
        "i",
        "index1",
        "i",
        "attribute",
        "index2",
        "i",
        "array",
        "array",
        "m",
        "i",
        "l",
        "i",
        "_vector2$1",
        "i",
        "_vector2$1",
        "m",
        "i",
        "_vector2$1",
        "_vector2$1",
        "i",
        "l",
        "i",
        "_vector$9",
        "i",
        "_vector$9",
        "m",
        "i",
        "_vector$9",
        "_vector$9",
        "_vector$9",
        "m",
        "i",
        "l",
        "i",
        "_vector$9",
        "i",
        "_vector$9",
        "m",
        "i",
        "_vector$9",
        "_vector$9",
        "_vector$9",
        "m",
        "i",
        "l",
        "i",
        "_vector$9",
        "i",
        "_vector$9",
        "m",
        "i",
        "_vector$9",
        "_vector$9",
        "_vector$9",
        "m",
        "i",
        "l",
        "i",
        "_vector$9",
        "i",
        "_vector$9",
        "m",
        "i",
        "_vector$9",
        "_vector$9",
        "_vector$9",
        "value",
        "offset",
        "value",
        "offset",
        "index",
        "component",
        "index",
        "component",
        "value",
        "denormalize",
        "value",
        "value",
        "index",
        "component",
        "value",
        "value",
        "normalize",
        "value",
        "index",
        "component",
        "value",
        "index",
        "index",
        "x",
        "denormalize",
        "x",
        "x",
        "index",
        "x",
        "x",
        "normalize",
        "x",
        "index",
        "x",
        "index",
        "index",
        "y",
        "denormalize",
        "y",
        "y",
        "index",
        "y",
        "y",
        "normalize",
        "y",
        "index",
        "y",
        "index",
        "index",
        "z",
        "denormalize",
        "z",
        "z",
        "index",
        "z",
        "z",
        "normalize",
        "z",
        "index",
        "z",
        "index",
        "index",
        "w",
        "denormalize",
        "w",
        "w",
        "index",
        "w",
        "w",
        "normalize",
        "w",
        "index",
        "w",
        "index",
        "x",
        "y",
        "index",
        "x",
        "normalize",
        "x",
        "y",
        "normalize",
        "y",
        "index",
        "x",
        "index",
        "y",
        "index",
        "x",
        "y",
        "z",
        "index",
        "x",
        "normalize",
        "x",
        "y",
        "normalize",
        "y",
        "z",
        "normalize",
        "z",
        "index",
        "x",
        "index",
        "y",
        "index",
        "z",
        "index",
        "x",
        "y",
        "z",
        "w",
        "index",
        "x",
        "normalize",
        "x",
        "y",
        "normalize",
        "y",
        "z",
        "normalize",
        "z",
        "w",
        "normalize",
        "w",
        "index",
        "x",
        "index",
        "y",
        "index",
        "z",
        "index",
        "w",
        "callback",
        "callback",
        "data",
        "StaticDrawUsage",
        "data",
        "data",
        "BufferAttribute",
        "array",
        "itemSize",
        "normalized",
        "Int8Array",
        "array",
        "itemSize",
        "normalized",
        "BufferAttribute",
        "array",
        "itemSize",
        "normalized",
        "Uint8Array",
        "array",
        "itemSize",
        "normalized",
        "BufferAttribute",
        "array",
        "itemSize",
        "normalized",
        "Uint8ClampedArray",
        "array",
        "itemSize",
        "normalized",
        "BufferAttribute",
        "array",
        "itemSize",
        "normalized",
        "Int16Array",
        "array",
        "itemSize",
        "normalized",
        "BufferAttribute",
        "array",
        "itemSize",
        "normalized",
        "Uint16Array",
        "array",
        "itemSize",
        "normalized",
        "BufferAttribute",
        "array",
        "itemSize",
        "normalized",
        "Int32Array",
        "array",
        "itemSize",
        "normalized",
        "BufferAttribute",
        "array",
        "itemSize",
        "normalized",
        "Uint32Array",
        "array",
        "itemSize",
        "normalized",
        "BufferAttribute",
        "array",
        "itemSize",
        "normalized",
        "Uint16Array",
        "array",
        "itemSize",
        "normalized",
        "index",
        "fromHalfFloat",
        "index",
        "x",
        "denormalize",
        "x",
        "x",
        "index",
        "x",
        "x",
        "normalize",
        "x",
        "index",
        "toHalfFloat",
        "x",
        "index",
        "fromHalfFloat",
        "index",
        "y",
        "denormalize",
        "y",
        "y",
        "index",
        "y",
        "y",
        "normalize",
        "y",
        "index",
        "toHalfFloat",
        "y",
        "index",
        "fromHalfFloat",
        "index",
        "z",
        "denormalize",
        "z",
        "z",
        "index",
        "z",
        "z",
        "normalize",
        "z",
        "index",
        "toHalfFloat",
        "z",
        "index",
        "fromHalfFloat",
        "index",
        "w",
        "denormalize",
        "w",
        "w",
        "index",
        "w",
        "w",
        "normalize",
        "w",
        "index",
        "toHalfFloat",
        "w",
        "index",
        "x",
        "y",
        "index",
        "x",
        "normalize",
        "x",
        "y",
        "normalize",
        "y",
        "index",
        "toHalfFloat",
        "x",
        "index",
        "toHalfFloat",
        "y",
        "index",
        "x",
        "y",
        "z",
        "index",
        "x",
        "normalize",
        "x",
        "y",
        "normalize",
        "y",
        "z",
        "normalize",
        "z",
        "index",
        "toHalfFloat",
        "x",
        "index",
        "toHalfFloat",
        "y",
        "index",
        "toHalfFloat",
        "z",
        "index",
        "x",
        "y",
        "z",
        "w",
        "index",
        "x",
        "normalize",
        "x",
        "y",
        "normalize",
        "y",
        "z",
        "normalize",
        "z",
        "w",
        "normalize",
        "w",
        "index",
        "toHalfFloat",
        "x",
        "index",
        "toHalfFloat",
        "y",
        "index",
        "toHalfFloat",
        "z",
        "index",
        "toHalfFloat",
        "w",
        "BufferAttribute",
        "array",
        "itemSize",
        "normalized",
        "Float32Array",
        "array",
        "itemSize",
        "normalized",
        "Matrix4",
        "Object3D",
        "Vector3",
        "Box3",
        "Box3",
        "Vector3",
        "EventDispatcher",
        "_id$2",
        "generateUUID",
        "Infinity",
        "index",
        "index",
        "arrayNeedsUint32",
        "index",
        "Uint32BufferAttribute",
        "Uint16BufferAttribute",
        "index",
        "index",
        "name",
        "name",
        "name",
        "attribute",
        "name",
        "attribute",
        "name",
        "name",
        "name",
        "name",
        "start",
        "count",
        "materialIndex",
        "start",
        "count",
        "materialIndex",
        "start",
        "count",
        "start",
        "count",
        "matrix",
        "position",
        "position",
        "matrix",
        "position",
        "normal",
        "Matrix3",
        "matrix",
        "normal",
        "normalMatrix",
        "normal",
        "tangent",
        "tangent",
        "matrix",
        "tangent",
        "q",
        "_m1$2",
        "q",
        "_m1$2",
        "angle",
        "_m1$2",
        "angle",
        "_m1$2",
        "angle",
        "_m1$2",
        "angle",
        "_m1$2",
        "angle",
        "_m1$2",
        "angle",
        "_m1$2",
        "x",
        "y",
        "z",
        "_m1$2",
        "x",
        "y",
        "z",
        "_m1$2",
        "x",
        "y",
        "z",
        "_m1$2",
        "x",
        "y",
        "z",
        "_m1$2",
        "vector",
        "_obj",
        "vector",
        "_obj",
        "_obj",
        "_offset",
        "_offset",
        "_offset",
        "_offset",
        "points",
        "points",
        "i",
        "l",
        "i",
        "points",
        "i",
        "position",
        "point",
        "point",
        "point",
        "Float32BufferAttribute",
        "position",
        "Box3",
        "position",
        "position",
        "Vector3",
        "Infinity",
        "Infinity",
        "Infinity",
        "Vector3",
        "Infinity",
        "Infinity",
        "Infinity",
        "position",
        "position",
        "morphAttributesPosition",
        "morphAttributesPosition",
        "i",
        "il",
        "i",
        "morphAttributesPosition",
        "i",
        "_box$2",
        "morphAttribute",
        "_vector$8",
        "_box$2",
        "_vector$8",
        "_vector$8",
        "_box$2",
        "_vector$8",
        "_box$2",
        "_box$2",
        "isNaN",
        "isNaN",
        "isNaN",
        "Sphere",
        "position",
        "position",
        "Vector3",
        "Infinity",
        "position",
        "_box$2",
        "position",
        "morphAttributesPosition",
        "morphAttributesPosition",
        "i",
        "il",
        "i",
        "morphAttributesPosition",
        "i",
        "_boxMorphTargets",
        "morphAttribute",
        "_vector$8",
        "_box$2",
        "_boxMorphTargets",
        "_box$2",
        "_vector$8",
        "_vector$8",
        "_box$2",
        "_boxMorphTargets",
        "_box$2",
        "_vector$8",
        "_box$2",
        "_boxMorphTargets",
        "_box$2",
        "_boxMorphTargets",
        "_box$2",
        "center",
        "position",
        "i",
        "il",
        "i",
        "_vector$8",
        "position",
        "i",
        "maxRadiusSq",
        "maxRadiusSq",
        "center",
        "_vector$8",
        "morphAttributesPosition",
        "morphAttributesPosition",
        "i",
        "il",
        "i",
        "morphAttributesPosition",
        "i",
        "morphAttribute",
        "j",
        "jl",
        "j",
        "_vector$8",
        "morphAttribute",
        "j",
        "morphTargetsRelative",
        "_offset",
        "position",
        "j",
        "_vector$8",
        "_offset",
        "maxRadiusSq",
        "maxRadiusSq",
        "center",
        "_vector$8",
        "maxRadiusSq",
        "isNaN",
        "index",
        "attributes",
        "attributes",
        "attributes",
        "attributes",
        "attributes",
        "attributes",
        "BufferAttribute",
        "Float32Array",
        "positionAttribute",
        "i",
        "positionAttribute",
        "i",
        "tan1",
        "i",
        "Vector3",
        "tan2",
        "i",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector2",
        "Vector2",
        "Vector2",
        "Vector3",
        "Vector3",
        "a",
        "b",
        "c",
        "vA",
        "positionAttribute",
        "a",
        "vB",
        "positionAttribute",
        "b",
        "vC",
        "positionAttribute",
        "c",
        "uvA",
        "uvAttribute",
        "a",
        "uvB",
        "uvAttribute",
        "b",
        "uvC",
        "uvAttribute",
        "c",
        "vB",
        "vA",
        "vC",
        "vA",
        "uvB",
        "uvA",
        "uvC",
        "uvA",
        "uvB",
        "uvC",
        "uvC",
        "uvB",
        "isFinite",
        "r",
        "sdir",
        "vB",
        "uvC",
        "vC",
        "uvB",
        "r",
        "tdir",
        "vC",
        "uvB",
        "vB",
        "uvC",
        "r",
        "tan1",
        "a",
        "sdir",
        "tan1",
        "b",
        "sdir",
        "tan1",
        "c",
        "sdir",
        "tan2",
        "a",
        "tdir",
        "tan2",
        "b",
        "tdir",
        "tan2",
        "c",
        "tdir",
        "groups",
        "groups",
        "index",
        "groups",
        "i",
        "il",
        "i",
        "groups",
        "i",
        "group",
        "group",
        "start",
        "count",
        "j",
        "jl",
        "j",
        "handleTriangle",
        "index",
        "j",
        "index",
        "j",
        "index",
        "j",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "v",
        "n",
        "normalAttribute",
        "v",
        "n2",
        "n",
        "tan1",
        "v",
        "tmp",
        "t",
        "tmp",
        "n",
        "n",
        "t",
        "tmp2",
        "n2",
        "t",
        "tmp2",
        "tan2",
        "v",
        "test",
        "tangentAttribute",
        "v",
        "tmp",
        "tmp",
        "tmp",
        "w",
        "groups",
        "i",
        "il",
        "i",
        "groups",
        "i",
        "group",
        "group",
        "start",
        "count",
        "j",
        "jl",
        "j",
        "handleVertex",
        "index",
        "j",
        "handleVertex",
        "index",
        "j",
        "handleVertex",
        "index",
        "j",
        "positionAttribute",
        "normalAttribute",
        "normalAttribute",
        "BufferAttribute",
        "Float32Array",
        "positionAttribute",
        "normalAttribute",
        "normalAttribute",
        "i",
        "il",
        "i",
        "normalAttribute",
        "i",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "index",
        "index",
        "i",
        "il",
        "i",
        "index",
        "i",
        "index",
        "i",
        "index",
        "i",
        "pA",
        "positionAttribute",
        "vA",
        "pB",
        "positionAttribute",
        "vB",
        "pC",
        "positionAttribute",
        "vC",
        "cb",
        "pC",
        "pB",
        "ab",
        "pA",
        "pB",
        "cb",
        "ab",
        "nA",
        "normalAttribute",
        "vA",
        "nB",
        "normalAttribute",
        "vB",
        "nC",
        "normalAttribute",
        "vC",
        "nA",
        "cb",
        "nB",
        "cb",
        "nC",
        "cb",
        "normalAttribute",
        "vA",
        "nA",
        "nA",
        "nA",
        "normalAttribute",
        "vB",
        "nB",
        "nB",
        "nB",
        "normalAttribute",
        "vC",
        "nC",
        "nC",
        "nC",
        "positionAttribute",
        "i",
        "il",
        "i",
        "pA",
        "positionAttribute",
        "i",
        "pB",
        "positionAttribute",
        "i",
        "pC",
        "positionAttribute",
        "i",
        "cb",
        "pC",
        "pB",
        "ab",
        "pA",
        "pB",
        "cb",
        "ab",
        "normalAttribute",
        "i",
        "cb",
        "cb",
        "cb",
        "normalAttribute",
        "i",
        "cb",
        "cb",
        "cb",
        "normalAttribute",
        "i",
        "cb",
        "cb",
        "cb",
        "normalAttribute",
        "normals",
        "i",
        "il",
        "i",
        "_vector$8",
        "normals",
        "i",
        "_vector$8",
        "normals",
        "i",
        "_vector$8",
        "_vector$8",
        "_vector$8",
        "attribute",
        "indices",
        "attribute",
        "attribute",
        "attribute",
        "array",
        "indices",
        "itemSize",
        "indices",
        "i",
        "l",
        "i",
        "attribute",
        "index",
        "indices",
        "i",
        "attribute",
        "attribute",
        "index",
        "indices",
        "i",
        "itemSize",
        "j",
        "itemSize",
        "j",
        "array2",
        "index2",
        "array",
        "index",
        "BufferAttribute",
        "array2",
        "itemSize",
        "normalized",
        "BufferGeometry",
        "name",
        "attributes",
        "attributes",
        "name",
        "convertBufferAttribute",
        "attribute",
        "indices",
        "geometry2",
        "name",
        "newAttribute",
        "name",
        "morphAttributes",
        "morphAttributes",
        "name",
        "morphAttribute",
        "i",
        "il",
        "i",
        "morphAttribute",
        "i",
        "convertBufferAttribute",
        "attribute",
        "indices",
        "morphArray",
        "newAttribute",
        "geometry2",
        "name",
        "morphArray",
        "geometry2",
        "groups",
        "i",
        "l",
        "i",
        "groups",
        "i",
        "geometry2",
        "group",
        "group",
        "group",
        "geometry2",
        "data",
        "data",
        "data",
        "data",
        "key",
        "parameters",
        "parameters",
        "key",
        "data",
        "key",
        "parameters",
        "key",
        "data",
        "data",
        "index",
        "data",
        "index",
        "index",
        "key",
        "attributes",
        "attributes",
        "key",
        "data",
        "key",
        "attribute",
        "data",
        "key",
        "key",
        "attributeArray",
        "i",
        "il",
        "i",
        "attributeArray",
        "i",
        "array",
        "attribute",
        "data",
        "array",
        "morphAttributes",
        "key",
        "array",
        "hasMorphAttributes",
        "hasMorphAttributes",
        "data",
        "morphAttributes",
        "data",
        "groups",
        "data",
        "groups",
        "boundingSphere",
        "data",
        "boundingSphere",
        "boundingSphere",
        "data",
        "source",
        "source",
        "source",
        "index",
        "index",
        "data",
        "source",
        "name",
        "attributes",
        "attributes",
        "name",
        "name",
        "attribute",
        "data",
        "source",
        "name",
        "morphAttributes",
        "morphAttributes",
        "name",
        "morphAttribute",
        "i",
        "l",
        "i",
        "array",
        "morphAttribute",
        "i",
        "data",
        "name",
        "array",
        "source",
        "source",
        "groups",
        "i",
        "l",
        "i",
        "groups",
        "i",
        "group",
        "group",
        "group",
        "source",
        "boundingBox",
        "boundingBox",
        "source",
        "boundingSphere",
        "boundingSphere",
        "source",
        "source",
        "source",
        "Matrix4",
        "Ray",
        "Sphere",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector2",
        "Vector2",
        "Vector2",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Object3D",
        "geometry",
        "BufferGeometry",
        "material",
        "MeshBasicMaterial",
        "geometry",
        "material",
        "source",
        "recursive",
        "source",
        "recursive",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "geometry",
        "morphAttributes",
        "keys",
        "morphAttributes",
        "keys",
        "morphAttribute",
        "morphAttribute",
        "m",
        "ml",
        "m",
        "morphAttribute",
        "m",
        "m",
        "name",
        "m",
        "index",
        "target",
        "geometry",
        "geometry",
        "geometry",
        "target",
        "position",
        "index",
        "morphPosition",
        "morphInfluences",
        "_morphA",
        "morphPosition",
        "i",
        "il",
        "i",
        "morphInfluences",
        "i",
        "morphPosition",
        "i",
        "influence",
        "_tempA",
        "morphAttribute",
        "index",
        "morphTargetsRelative",
        "_morphA",
        "_tempA",
        "influence",
        "_morphA",
        "_tempA",
        "target",
        "influence",
        "target",
        "_morphA",
        "target",
        "raycaster",
        "intersects",
        "material",
        "geometry",
        "geometry",
        "_sphere$6",
        "geometry",
        "_sphere$6",
        "matrixWorld",
        "_ray$3",
        "raycaster",
        "raycaster",
        "_sphere$6",
        "_ray$3",
        "_ray$3",
        "_sphere$6",
        "_sphereHitAt",
        "_ray$3",
        "_sphereHitAt",
        "raycaster",
        "raycaster",
        "_inverseMatrix$3",
        "matrixWorld",
        "_ray$3",
        "raycaster",
        "_inverseMatrix$3",
        "geometry",
        "_ray$3",
        "geometry",
        "raycaster",
        "intersects",
        "_ray$3",
        "raycaster",
        "intersects",
        "rayLocalSpace",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "index",
        "material",
        "groups",
        "i",
        "il",
        "i",
        "groups",
        "i",
        "material",
        "group",
        "group",
        "drawRange",
        "index",
        "group",
        "group",
        "drawRange",
        "drawRange",
        "j",
        "jl",
        "j",
        "index",
        "j",
        "index",
        "j",
        "index",
        "j",
        "intersection",
        "checkGeometryIntersection",
        "groupMaterial",
        "raycaster",
        "rayLocalSpace",
        "uv",
        "uv1",
        "normal",
        "a",
        "b",
        "c",
        "intersection",
        "intersection",
        "j",
        "intersection",
        "group",
        "intersects",
        "intersection",
        "drawRange",
        "index",
        "drawRange",
        "drawRange",
        "i",
        "il",
        "i",
        "index",
        "i",
        "index",
        "i",
        "index",
        "i",
        "intersection",
        "checkGeometryIntersection",
        "material",
        "raycaster",
        "rayLocalSpace",
        "uv",
        "uv1",
        "normal",
        "a",
        "b",
        "c",
        "intersection",
        "intersection",
        "i",
        "intersects",
        "intersection",
        "position",
        "material",
        "groups",
        "i",
        "il",
        "i",
        "groups",
        "i",
        "material",
        "group",
        "group",
        "drawRange",
        "position",
        "group",
        "group",
        "drawRange",
        "drawRange",
        "j",
        "jl",
        "j",
        "j",
        "j",
        "intersection",
        "checkGeometryIntersection",
        "groupMaterial",
        "raycaster",
        "rayLocalSpace",
        "uv",
        "uv1",
        "normal",
        "a",
        "b",
        "c",
        "intersection",
        "intersection",
        "j",
        "intersection",
        "group",
        "intersects",
        "intersection",
        "drawRange",
        "position",
        "drawRange",
        "drawRange",
        "i",
        "il",
        "i",
        "i",
        "i",
        "intersection",
        "checkGeometryIntersection",
        "material",
        "raycaster",
        "rayLocalSpace",
        "uv",
        "uv1",
        "normal",
        "a",
        "b",
        "c",
        "intersection",
        "intersection",
        "i",
        "intersects",
        "intersection",
        "material",
        "raycaster",
        "ray",
        "pA",
        "pB",
        "pC",
        "point",
        "material",
        "BackSide",
        "intersect",
        "ray",
        "pC",
        "pB",
        "pA",
        "point",
        "intersect",
        "ray",
        "pA",
        "pB",
        "pC",
        "material",
        "FrontSide",
        "point",
        "intersect",
        "_intersectionPointWorld",
        "point",
        "_intersectionPointWorld",
        "raycaster",
        "_intersectionPointWorld",
        "distance",
        "raycaster",
        "distance",
        "raycaster",
        "distance",
        "_intersectionPointWorld",
        "material",
        "raycaster",
        "ray",
        "uv",
        "uv1",
        "normal",
        "a",
        "b",
        "c",
        "a",
        "_vA$1",
        "b",
        "_vB$1",
        "c",
        "_vC$1",
        "checkIntersection$1",
        "material",
        "raycaster",
        "ray",
        "_vA$1",
        "_vB$1",
        "_vC$1",
        "_intersectionPoint",
        "intersection",
        "uv",
        "_uvA$1",
        "uv",
        "a",
        "_uvB$1",
        "uv",
        "b",
        "_uvC$1",
        "uv",
        "c",
        "intersection",
        "Triangle",
        "_intersectionPoint",
        "_vA$1",
        "_vB$1",
        "_vC$1",
        "_uvA$1",
        "_uvB$1",
        "_uvC$1",
        "Vector2",
        "uv1",
        "_uvA$1",
        "uv1",
        "a",
        "_uvB$1",
        "uv1",
        "b",
        "_uvC$1",
        "uv1",
        "c",
        "intersection",
        "Triangle",
        "_intersectionPoint",
        "_vA$1",
        "_vB$1",
        "_vC$1",
        "_uvA$1",
        "_uvB$1",
        "_uvC$1",
        "Vector2",
        "normal",
        "_normalA",
        "normal",
        "a",
        "_normalB",
        "normal",
        "b",
        "_normalC",
        "normal",
        "c",
        "intersection",
        "Triangle",
        "_intersectionPoint",
        "_vA$1",
        "_vB$1",
        "_vC$1",
        "_normalA",
        "_normalB",
        "_normalC",
        "Vector3",
        "intersection",
        "ray",
        "intersection",
        "a",
        "b",
        "c",
        "Vector3",
        "Triangle",
        "_vA$1",
        "_vB$1",
        "_vC$1",
        "face",
        "intersection",
        "face",
        "intersection",
        "BufferGeometry",
        "width",
        "height",
        "depth",
        "widthSegments",
        "heightSegments",
        "depthSegments",
        "width",
        "height",
        "depth",
        "widthSegments",
        "heightSegments",
        "depthSegments",
        "widthSegments",
        "widthSegments",
        "heightSegments",
        "heightSegments",
        "depthSegments",
        "depthSegments",
        "buildPlane",
        "depth",
        "height",
        "width",
        "depthSegments",
        "heightSegments",
        "buildPlane",
        "depth",
        "height",
        "width",
        "depthSegments",
        "heightSegments",
        "buildPlane",
        "width",
        "depth",
        "height",
        "widthSegments",
        "depthSegments",
        "buildPlane",
        "width",
        "depth",
        "height",
        "widthSegments",
        "depthSegments",
        "buildPlane",
        "width",
        "height",
        "depth",
        "widthSegments",
        "heightSegments",
        "buildPlane",
        "width",
        "height",
        "depth",
        "widthSegments",
        "heightSegments",
        "indices",
        "Float32BufferAttribute",
        "vertices",
        "Float32BufferAttribute",
        "normals",
        "Float32BufferAttribute",
        "uvs",
        "u",
        "v",
        "w",
        "udir",
        "vdir",
        "width",
        "height",
        "depth",
        "gridX",
        "gridY",
        "materialIndex",
        "width",
        "gridX",
        "height",
        "gridY",
        "width",
        "height",
        "depth",
        "gridX",
        "gridY",
        "Vector3",
        "iy",
        "gridY1",
        "iy",
        "iy",
        "segmentHeight",
        "heightHalf",
        "ix",
        "gridX1",
        "ix",
        "ix",
        "segmentWidth",
        "widthHalf",
        "vector",
        "u",
        "x",
        "udir",
        "vector",
        "v",
        "y",
        "vdir",
        "vector",
        "w",
        "depthHalf",
        "vertices",
        "vector",
        "vector",
        "vector",
        "vector",
        "u",
        "vector",
        "v",
        "vector",
        "w",
        "depth",
        "normals",
        "vector",
        "vector",
        "vector",
        "uvs",
        "ix",
        "gridX",
        "uvs",
        "iy",
        "gridY",
        "vertexCounter",
        "iy",
        "gridY",
        "iy",
        "ix",
        "gridX",
        "ix",
        "numberOfVertices",
        "ix",
        "gridX1",
        "iy",
        "numberOfVertices",
        "ix",
        "gridX1",
        "iy",
        "numberOfVertices",
        "ix",
        "gridX1",
        "iy",
        "numberOfVertices",
        "ix",
        "gridX1",
        "iy",
        "indices",
        "a",
        "b",
        "d",
        "indices",
        "b",
        "c",
        "d",
        "groupCount",
        "scope",
        "groupStart",
        "groupCount",
        "materialIndex",
        "groupStart",
        "groupCount",
        "numberOfVertices",
        "vertexCounter",
        "source",
        "source",
        "source",
        "data",
        "BoxGeometry",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "src",
        "u",
        "src",
        "dst",
        "u",
        "p",
        "src",
        "u",
        "src",
        "u",
        "p",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "dst",
        "u",
        "p",
        "dst",
        "u",
        "p",
        "property",
        "property",
        "dst",
        "u",
        "p",
        "property",
        "dst",
        "u",
        "p",
        "property",
        "dst",
        "uniforms",
        "u",
        "uniforms",
        "u",
        "cloneUniforms",
        "uniforms",
        "u",
        "p",
        "tmp",
        "merged",
        "p",
        "tmp",
        "p",
        "merged",
        "src",
        "u",
        "src",
        "u",
        "dst",
        "src",
        "u",
        "dst",
        "renderer",
        "renderer",
        "currentRenderTarget",
        "renderer",
        "currentRenderTarget",
        "currentRenderTarget",
        "ColorManagement",
        "cloneUniforms",
        "mergeUniforms",
        "Material",
        "parameters",
        "default_vertex",
        "default_fragment",
        "parameters",
        "parameters",
        "source",
        "source",
        "source",
        "source",
        "cloneUniforms",
        "source",
        "cloneUniformsGroups",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "meta",
        "meta",
        "data",
        "data",
        "name",
        "name",
        "uniform",
        "value",
        "value",
        "data",
        "name",
        "value",
        "meta",
        "value",
        "value",
        "data",
        "name",
        "value",
        "value",
        "value",
        "data",
        "name",
        "value",
        "value",
        "value",
        "data",
        "name",
        "value",
        "value",
        "value",
        "data",
        "name",
        "value",
        "value",
        "value",
        "data",
        "name",
        "value",
        "value",
        "value",
        "data",
        "name",
        "value",
        "data",
        "name",
        "value",
        "data",
        "data",
        "data",
        "data",
        "data",
        "key",
        "key",
        "extensions",
        "key",
        "extensions",
        "data",
        "extensions",
        "data",
        "Object3D",
        "Matrix4",
        "Matrix4",
        "Matrix4",
        "WebGLCoordinateSystem",
        "source",
        "recursive",
        "source",
        "recursive",
        "source",
        "source",
        "source",
        "source",
        "target",
        "target",
        "force",
        "force",
        "updateParents",
        "updateChildren",
        "updateParents",
        "updateChildren",
        "Vector3",
        "Vector2",
        "Vector2",
        "Camera",
        "fov",
        "aspect",
        "near",
        "far",
        "fov",
        "near",
        "far",
        "aspect",
        "source",
        "recursive",
        "source",
        "recursive",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "focalLength",
        "focalLength",
        "RAD2DEG",
        "vExtentSlope",
        "DEG2RAD",
        "vExtentSlope",
        "RAD2DEG",
        "DEG2RAD",
        "distance",
        "minTarget",
        "maxTarget",
        "_v3$1",
        "minTarget",
        "_v3$1",
        "_v3$1",
        "distance",
        "_v3$1",
        "_v3$1",
        "maxTarget",
        "_v3$1",
        "_v3$1",
        "distance",
        "_v3$1",
        "distance",
        "target",
        "distance",
        "_minTarget",
        "_maxTarget",
        "target",
        "_maxTarget",
        "_minTarget",
        "fullWidth",
        "fullHeight",
        "x",
        "y",
        "width",
        "height",
        "fullWidth",
        "fullHeight",
        "fullWidth",
        "fullHeight",
        "x",
        "y",
        "width",
        "height",
        "near",
        "DEG2RAD",
        "top",
        "height",
        "width",
        "view",
        "view",
        "left",
        "view",
        "width",
        "fullWidth",
        "top",
        "view",
        "height",
        "fullHeight",
        "width",
        "view",
        "fullWidth",
        "height",
        "view",
        "fullHeight",
        "skew",
        "left",
        "near",
        "skew",
        "left",
        "left",
        "width",
        "top",
        "top",
        "height",
        "near",
        "meta",
        "meta",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "Object3D",
        "near",
        "far",
        "renderTarget",
        "renderTarget",
        "PerspectiveCamera",
        "fov",
        "aspect",
        "near",
        "far",
        "cameraPX",
        "cameraPX",
        "PerspectiveCamera",
        "fov",
        "aspect",
        "near",
        "far",
        "cameraNX",
        "cameraNX",
        "PerspectiveCamera",
        "fov",
        "aspect",
        "near",
        "far",
        "cameraPY",
        "cameraPY",
        "PerspectiveCamera",
        "fov",
        "aspect",
        "near",
        "far",
        "cameraNY",
        "cameraNY",
        "PerspectiveCamera",
        "fov",
        "aspect",
        "near",
        "far",
        "cameraPZ",
        "cameraPZ",
        "PerspectiveCamera",
        "fov",
        "aspect",
        "near",
        "far",
        "cameraNZ",
        "cameraNZ",
        "camera",
        "cameras",
        "camera",
        "coordinateSystem",
        "WebGLCoordinateSystem",
        "cameraPX",
        "cameraPX",
        "cameraNX",
        "cameraNX",
        "cameraPY",
        "cameraPY",
        "cameraNY",
        "cameraNY",
        "cameraPZ",
        "cameraPZ",
        "cameraNZ",
        "cameraNZ",
        "coordinateSystem",
        "WebGPUCoordinateSystem",
        "cameraPX",
        "cameraPX",
        "cameraNX",
        "cameraNX",
        "cameraPY",
        "cameraPY",
        "cameraNY",
        "cameraNY",
        "cameraPZ",
        "cameraPZ",
        "cameraNZ",
        "cameraNZ",
        "coordinateSystem",
        "camera",
        "cameras",
        "camera",
        "camera",
        "renderer",
        "scene",
        "renderer",
        "renderer",
        "renderer",
        "renderer",
        "renderer",
        "renderer",
        "renderer",
        "renderTarget",
        "renderTarget",
        "renderer",
        "renderTarget",
        "activeMipmapLevel",
        "renderer",
        "scene",
        "cameraPX",
        "renderer",
        "renderTarget",
        "activeMipmapLevel",
        "renderer",
        "scene",
        "cameraNX",
        "renderer",
        "renderTarget",
        "activeMipmapLevel",
        "renderer",
        "scene",
        "cameraPY",
        "renderer",
        "renderTarget",
        "activeMipmapLevel",
        "renderer",
        "scene",
        "cameraNY",
        "renderer",
        "renderTarget",
        "activeMipmapLevel",
        "renderer",
        "scene",
        "cameraPZ",
        "renderTarget",
        "generateMipmaps",
        "renderer",
        "renderTarget",
        "activeMipmapLevel",
        "renderer",
        "scene",
        "cameraNZ",
        "renderer",
        "currentRenderTarget",
        "currentActiveCubeFace",
        "currentActiveMipmapLevel",
        "renderer",
        "currentXrEnabled",
        "renderTarget",
        "Texture",
        "images",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "colorSpace1",
        "images",
        "images",
        "images",
        "mapping",
        "mapping",
        "mapping",
        "CubeReflectionMapping",
        "images",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "colorSpace1",
        "value",
        "value",
        "WebGLRenderTarget",
        "size",
        "options",
        "size",
        "size",
        "options",
        "size",
        "size",
        "image",
        "image",
        "image",
        "image",
        "image",
        "image",
        "CubeTexture",
        "images",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "LinearFilter",
        "renderer",
        "texture",
        "texture",
        "texture",
        "texture",
        "texture",
        "texture",
        "BoxGeometry",
        "ShaderMaterial",
        "cloneUniforms",
        "shader",
        "shader",
        "shader",
        "BackSide",
        "NoBlending",
        "material",
        "texture",
        "Mesh",
        "geometry",
        "material",
        "texture",
        "texture",
        "LinearMipmapLinearFilter",
        "texture",
        "LinearFilter",
        "CubeCamera",
        "camera",
        "renderer",
        "mesh",
        "texture",
        "currentMinFilter",
        "mesh",
        "mesh",
        "renderer",
        "color",
        "depth",
        "stencil",
        "renderer",
        "i",
        "i",
        "renderer",
        "i",
        "renderer",
        "color",
        "depth",
        "stencil",
        "renderer",
        "currentRenderTarget",
        "Vector3",
        "Vector3",
        "Matrix3",
        "normal",
        "Vector3",
        "constant",
        "normal",
        "constant",
        "normal",
        "constant",
        "normal",
        "constant",
        "x",
        "y",
        "z",
        "w",
        "x",
        "y",
        "z",
        "w",
        "normal",
        "point",
        "normal",
        "point",
        "a",
        "b",
        "c",
        "_vector1",
        "c",
        "b",
        "_vector2",
        "a",
        "b",
        "normal",
        "a",
        "plane",
        "plane",
        "plane",
        "inverseNormalLength",
        "inverseNormalLength",
        "point",
        "point",
        "sphere",
        "sphere",
        "sphere",
        "point",
        "target",
        "target",
        "point",
        "point",
        "line",
        "target",
        "line",
        "_vector1",
        "direction",
        "denominator",
        "line",
        "target",
        "line",
        "line",
        "denominator",
        "t",
        "t",
        "target",
        "line",
        "direction",
        "t",
        "line",
        "line",
        "line",
        "startSign",
        "endSign",
        "endSign",
        "startSign",
        "box",
        "box",
        "sphere",
        "sphere",
        "target",
        "target",
        "matrix",
        "optionalNormalMatrix",
        "optionalNormalMatrix",
        "_normalMatrix",
        "matrix",
        "_vector1",
        "matrix",
        "normalMatrix",
        "referencePoint",
        "normal",
        "offset",
        "offset",
        "plane",
        "plane",
        "plane",
        "Sphere",
        "Vector3",
        "p0",
        "Plane",
        "p1",
        "Plane",
        "p2",
        "Plane",
        "p3",
        "Plane",
        "p4",
        "Plane",
        "p5",
        "Plane",
        "p0",
        "p1",
        "p2",
        "p3",
        "p4",
        "p5",
        "p0",
        "p1",
        "p2",
        "p3",
        "p4",
        "p5",
        "planes",
        "p0",
        "planes",
        "p1",
        "planes",
        "p2",
        "planes",
        "p3",
        "planes",
        "p4",
        "planes",
        "p5",
        "frustum",
        "i",
        "i",
        "planes",
        "i",
        "frustum",
        "i",
        "m",
        "coordinateSystem",
        "WebGLCoordinateSystem",
        "m",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "planes",
        "me3",
        "me0",
        "me7",
        "me4",
        "me11",
        "me8",
        "me15",
        "me12",
        "planes",
        "me3",
        "me0",
        "me7",
        "me4",
        "me11",
        "me8",
        "me15",
        "me12",
        "planes",
        "me3",
        "me1",
        "me7",
        "me5",
        "me11",
        "me9",
        "me15",
        "me13",
        "planes",
        "me3",
        "me1",
        "me7",
        "me5",
        "me11",
        "me9",
        "me15",
        "me13",
        "planes",
        "me3",
        "me2",
        "me7",
        "me6",
        "me11",
        "me10",
        "me15",
        "me14",
        "coordinateSystem",
        "WebGLCoordinateSystem",
        "planes",
        "me3",
        "me2",
        "me7",
        "me6",
        "me11",
        "me10",
        "me15",
        "me14",
        "coordinateSystem",
        "WebGPUCoordinateSystem",
        "planes",
        "me2",
        "me6",
        "me10",
        "me14",
        "coordinateSystem",
        "_sphere$5",
        "geometry",
        "geometry",
        "_sphere$5",
        "geometry",
        "_sphere$5",
        "sprite",
        "_sphere$5",
        "_sphere$5",
        "_sphere$5",
        "sprite",
        "_sphere$5",
        "sphere",
        "sphere",
        "sphere",
        "i",
        "i",
        "planes",
        "i",
        "center",
        "distance",
        "negRadius",
        "box",
        "i",
        "i",
        "planes",
        "i",
        "_vector$7",
        "plane",
        "box",
        "box",
        "_vector$7",
        "plane",
        "box",
        "box",
        "_vector$7",
        "plane",
        "box",
        "box",
        "plane",
        "_vector$7",
        "point",
        "i",
        "i",
        "planes",
        "i",
        "point",
        "time",
        "frame",
        "animationLoop",
        "time",
        "frame",
        "requestId",
        "context",
        "onAnimationFrame",
        "isAnimating",
        "animationLoop",
        "requestId",
        "context",
        "onAnimationFrame",
        "isAnimating",
        "context",
        "requestId",
        "isAnimating",
        "callback",
        "animationLoop",
        "callback",
        "value",
        "context",
        "value",
        "gl",
        "attribute",
        "bufferType",
        "attribute",
        "attribute",
        "array",
        "gl",
        "gl",
        "bufferType",
        "buffer",
        "gl",
        "bufferType",
        "array",
        "usage",
        "attribute",
        "array",
        "Float32Array",
        "gl",
        "array",
        "Uint16Array",
        "attribute",
        "gl",
        "gl",
        "array",
        "Int16Array",
        "gl",
        "array",
        "Uint32Array",
        "gl",
        "array",
        "Int32Array",
        "gl",
        "array",
        "Int8Array",
        "gl",
        "array",
        "Uint8Array",
        "gl",
        "array",
        "Uint8ClampedArray",
        "gl",
        "array",
        "buffer",
        "array",
        "attribute",
        "size",
        "buffer",
        "attribute",
        "bufferType",
        "attribute",
        "attribute",
        "attribute",
        "gl",
        "bufferType",
        "buffer",
        "updateRange",
        "updateRanges",
        "gl",
        "bufferType",
        "array",
        "updateRanges",
        "updateRanges",
        "i",
        "l",
        "i",
        "updateRanges",
        "i",
        "gl",
        "bufferType",
        "array",
        "array",
        "attribute",
        "updateRange",
        "gl",
        "bufferType",
        "updateRange",
        "array",
        "array",
        "updateRange",
        "updateRange",
        "updateRange",
        "attribute",
        "attribute",
        "attribute",
        "attribute",
        "attribute",
        "buffers",
        "attribute",
        "attribute",
        "attribute",
        "attribute",
        "attribute",
        "buffers",
        "attribute",
        "data",
        "gl",
        "data",
        "buffers",
        "attribute",
        "attribute",
        "bufferType",
        "attribute",
        "attribute",
        "attribute",
        "attribute",
        "buffers",
        "attribute",
        "cached",
        "cached",
        "attribute",
        "buffers",
        "attribute",
        "attribute",
        "attribute",
        "attribute",
        "attribute",
        "buffers",
        "attribute",
        "data",
        "buffers",
        "attribute",
        "createBuffer",
        "attribute",
        "bufferType",
        "data",
        "attribute",
        "data",
        "attribute",
        "updateBuffer",
        "data",
        "attribute",
        "bufferType",
        "data",
        "attribute",
        "get",
        "remove",
        "update",
        "BufferGeometry",
        "width",
        "height",
        "widthSegments",
        "heightSegments",
        "width",
        "height",
        "widthSegments",
        "heightSegments",
        "width",
        "height",
        "widthSegments",
        "heightSegments",
        "gridX",
        "gridY",
        "width",
        "gridX",
        "height",
        "gridY",
        "iy",
        "gridY1",
        "iy",
        "iy",
        "segment_height",
        "height_half",
        "ix",
        "gridX1",
        "ix",
        "ix",
        "segment_width",
        "width_half",
        "vertices",
        "x",
        "y",
        "normals",
        "uvs",
        "ix",
        "gridX",
        "uvs",
        "iy",
        "gridY",
        "iy",
        "gridY",
        "iy",
        "ix",
        "gridX",
        "ix",
        "ix",
        "gridX1",
        "iy",
        "ix",
        "gridX1",
        "iy",
        "ix",
        "gridX1",
        "iy",
        "ix",
        "gridX1",
        "iy",
        "indices",
        "a",
        "b",
        "d",
        "indices",
        "b",
        "c",
        "d",
        "indices",
        "Float32BufferAttribute",
        "vertices",
        "Float32BufferAttribute",
        "normals",
        "Float32BufferAttribute",
        "uvs",
        "source",
        "source",
        "source",
        "data",
        "PlaneGeometry",
        "data",
        "data",
        "data",
        "data",
        "alphahash_fragment",
        "alphahash_pars_fragment",
        "alphamap_fragment",
        "alphamap_pars_fragment",
        "alphatest_fragment",
        "alphatest_pars_fragment",
        "aomap_fragment",
        "aomap_pars_fragment",
        "batching_pars_vertex",
        "batching_vertex",
        "begin_vertex",
        "beginnormal_vertex",
        "bsdfs",
        "iridescence_fragment",
        "bumpmap_pars_fragment",
        "clipping_planes_fragment",
        "clipping_planes_pars_fragment",
        "clipping_planes_pars_vertex",
        "clipping_planes_vertex",
        "color_fragment",
        "color_pars_fragment",
        "color_pars_vertex",
        "color_vertex",
        "common",
        "cube_uv_reflection_fragment",
        "defaultnormal_vertex",
        "displacementmap_pars_vertex",
        "displacementmap_vertex",
        "emissivemap_fragment",
        "emissivemap_pars_fragment",
        "colorspace_fragment",
        "colorspace_pars_fragment",
        "envmap_fragment",
        "envmap_common_pars_fragment",
        "envmap_pars_fragment",
        "envmap_pars_vertex",
        "envmap_physical_pars_fragment",
        "envmap_vertex",
        "fog_vertex",
        "fog_pars_vertex",
        "fog_fragment",
        "fog_pars_fragment",
        "gradientmap_pars_fragment",
        "lightmap_pars_fragment",
        "lights_lambert_fragment",
        "lights_lambert_pars_fragment",
        "lights_pars_begin",
        "lights_toon_fragment",
        "lights_toon_pars_fragment",
        "lights_phong_fragment",
        "lights_phong_pars_fragment",
        "lights_physical_fragment",
        "lights_physical_pars_fragment",
        "lights_fragment_begin",
        "lights_fragment_maps",
        "lights_fragment_end",
        "logdepthbuf_fragment",
        "logdepthbuf_pars_fragment",
        "logdepthbuf_pars_vertex",
        "logdepthbuf_vertex",
        "map_fragment",
        "map_pars_fragment",
        "map_particle_fragment",
        "map_particle_pars_fragment",
        "metalnessmap_fragment",
        "metalnessmap_pars_fragment",
        "morphinstance_vertex",
        "morphcolor_vertex",
        "morphnormal_vertex",
        "morphtarget_pars_vertex",
        "morphtarget_vertex",
        "normal_fragment_begin",
        "normal_fragment_maps",
        "normal_pars_fragment",
        "normal_pars_vertex",
        "normal_vertex",
        "normalmap_pars_fragment",
        "clearcoat_normal_fragment_begin",
        "clearcoat_normal_fragment_maps",
        "clearcoat_pars_fragment",
        "iridescence_pars_fragment",
        "opaque_fragment",
        "packing",
        "premultiplied_alpha_fragment",
        "project_vertex",
        "dithering_fragment",
        "dithering_pars_fragment",
        "roughnessmap_fragment",
        "roughnessmap_pars_fragment",
        "shadowmap_pars_fragment",
        "shadowmap_pars_vertex",
        "shadowmap_vertex",
        "shadowmask_pars_fragment",
        "skinbase_vertex",
        "skinning_pars_vertex",
        "skinning_vertex",
        "skinnormal_vertex",
        "specularmap_fragment",
        "specularmap_pars_fragment",
        "tonemapping_fragment",
        "tonemapping_pars_fragment",
        "transmission_fragment",
        "transmission_pars_fragment",
        "uv_pars_fragment",
        "uv_pars_vertex",
        "uv_vertex",
        "worldpos_vertex",
        "vertex$h",
        "fragment$h",
        "vertex$g",
        "fragment$g",
        "vertex$f",
        "fragment$f",
        "vertex$e",
        "fragment$e",
        "vertex$d",
        "fragment$d",
        "vertex$c",
        "fragment$c",
        "vertex$b",
        "fragment$b",
        "vertex$a",
        "fragment$a",
        "vertex$9",
        "fragment$9",
        "vertex$8",
        "fragment$8",
        "vertex$7",
        "fragment$7",
        "vertex$6",
        "fragment$6",
        "vertex$5",
        "fragment$5",
        "vertex$4",
        "fragment$4",
        "vertex$3",
        "fragment$3",
        "vertex$2",
        "fragment$2",
        "vertex$1",
        "fragment$1",
        "Color",
        "Matrix3",
        "Matrix3",
        "Matrix3",
        "Matrix3",
        "Matrix3",
        "Matrix3",
        "Matrix3",
        "Matrix3",
        "Vector2",
        "Matrix3",
        "Matrix3",
        "Matrix3",
        "Matrix3",
        "Color",
        "Color",
        "Matrix3",
        "Matrix3",
        "Color",
        "Vector2",
        "Matrix3",
        "Matrix3",
        "mergeUniforms",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "ShaderChunk",
        "ShaderChunk",
        "mergeUniforms",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "Color",
        "ShaderChunk",
        "ShaderChunk",
        "mergeUniforms",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "Color",
        "Color",
        "ShaderChunk",
        "ShaderChunk",
        "mergeUniforms",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "Color",
        "ShaderChunk",
        "ShaderChunk",
        "mergeUniforms",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "Color",
        "ShaderChunk",
        "ShaderChunk",
        "mergeUniforms",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "ShaderChunk",
        "ShaderChunk",
        "mergeUniforms",
        "UniformsLib",
        "UniformsLib",
        "ShaderChunk",
        "ShaderChunk",
        "mergeUniforms",
        "UniformsLib",
        "UniformsLib",
        "ShaderChunk",
        "ShaderChunk",
        "mergeUniforms",
        "UniformsLib",
        "UniformsLib",
        "ShaderChunk",
        "ShaderChunk",
        "mergeUniforms",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "UniformsLib",
        "ShaderChunk",
        "ShaderChunk",
        "mergeUniforms",
        "UniformsLib",
        "UniformsLib",
        "ShaderChunk",
        "ShaderChunk",
        "Matrix3",
        "ShaderChunk",
        "ShaderChunk",
        "Matrix3",
        "ShaderChunk",
        "ShaderChunk",
        "ShaderChunk",
        "ShaderChunk",
        "ShaderChunk",
        "ShaderChunk",
        "mergeUniforms",
        "UniformsLib",
        "UniformsLib",
        "Vector3",
        "ShaderChunk",
        "ShaderChunk",
        "mergeUniforms",
        "UniformsLib",
        "UniformsLib",
        "Color",
        "ShaderChunk",
        "ShaderChunk",
        "ShaderLib",
        "mergeUniforms",
        "ShaderLib",
        "Matrix3",
        "Matrix3",
        "Vector2",
        "Matrix3",
        "Matrix3",
        "Matrix3",
        "Color",
        "Matrix3",
        "Matrix3",
        "Matrix3",
        "Vector2",
        "Matrix3",
        "Color",
        "Color",
        "Matrix3",
        "Matrix3",
        "Vector2",
        "Matrix3",
        "ShaderChunk",
        "ShaderChunk",
        "Euler",
        "Matrix4",
        "renderer",
        "cubemaps",
        "cubeuvmaps",
        "state",
        "objects",
        "alpha",
        "premultipliedAlpha",
        "Color",
        "alpha",
        "scene",
        "scene",
        "scene",
        "background",
        "background",
        "scene",
        "background",
        "usePMREM",
        "cubeuvmaps",
        "cubemaps",
        "background",
        "background",
        "scene",
        "getBackground",
        "scene",
        "background",
        "setClear",
        "clearColor",
        "clearAlpha",
        "background",
        "background",
        "setClear",
        "background",
        "forceClear",
        "renderer",
        "environmentBlendMode",
        "state",
        "premultipliedAlpha",
        "environmentBlendMode",
        "state",
        "premultipliedAlpha",
        "renderer",
        "forceClear",
        "state",
        "state",
        "state",
        "renderer",
        "renderer",
        "renderer",
        "renderer",
        "renderList",
        "scene",
        "getBackground",
        "scene",
        "background",
        "background",
        "background",
        "CubeUVReflectionMapping",
        "boxMesh",
        "boxMesh",
        "Mesh",
        "BoxGeometry",
        "ShaderMaterial",
        "cloneUniforms",
        "ShaderLib",
        "ShaderLib",
        "ShaderLib",
        "BackSide",
        "boxMesh",
        "boxMesh",
        "boxMesh",
        "renderer",
        "scene",
        "camera",
        "camera",
        "boxMesh",
        "objects",
        "boxMesh",
        "_e1$1",
        "scene",
        "_e1$1",
        "_e1$1",
        "_e1$1",
        "background",
        "background",
        "_e1$1",
        "_e1$1",
        "boxMesh",
        "background",
        "boxMesh",
        "background",
        "background",
        "boxMesh",
        "scene",
        "boxMesh",
        "scene",
        "boxMesh",
        "_m1$1",
        "_e1$1",
        "boxMesh",
        "ColorManagement",
        "background",
        "SRGBTransfer",
        "currentBackground",
        "background",
        "currentBackgroundVersion",
        "background",
        "currentTonemapping",
        "renderer",
        "boxMesh",
        "currentBackground",
        "background",
        "currentBackgroundVersion",
        "background",
        "currentTonemapping",
        "renderer",
        "boxMesh",
        "renderList",
        "boxMesh",
        "boxMesh",
        "boxMesh",
        "background",
        "background",
        "planeMesh",
        "planeMesh",
        "Mesh",
        "PlaneGeometry",
        "ShaderMaterial",
        "cloneUniforms",
        "ShaderLib",
        "ShaderLib",
        "ShaderLib",
        "FrontSide",
        "planeMesh",
        "planeMesh",
        "objects",
        "planeMesh",
        "planeMesh",
        "background",
        "planeMesh",
        "scene",
        "planeMesh",
        "ColorManagement",
        "background",
        "SRGBTransfer",
        "background",
        "background",
        "planeMesh",
        "background",
        "currentBackground",
        "background",
        "currentBackgroundVersion",
        "background",
        "currentTonemapping",
        "renderer",
        "planeMesh",
        "currentBackground",
        "background",
        "currentBackgroundVersion",
        "background",
        "currentTonemapping",
        "renderer",
        "planeMesh",
        "renderList",
        "planeMesh",
        "planeMesh",
        "planeMesh",
        "color",
        "alpha",
        "color",
        "_rgb",
        "getUnlitUniformColorSpace",
        "renderer",
        "state",
        "_rgb",
        "_rgb",
        "_rgb",
        "alpha",
        "premultipliedAlpha",
        "clearColor",
        "color",
        "alpha",
        "clearColor",
        "color",
        "clearAlpha",
        "alpha",
        "setClear",
        "clearColor",
        "clearAlpha",
        "clearAlpha",
        "alpha",
        "clearAlpha",
        "alpha",
        "setClear",
        "clearColor",
        "clearAlpha",
        "render",
        "addToRenderList",
        "gl",
        "attributes",
        "gl",
        "gl",
        "createBindingState",
        "material",
        "program",
        "geometry",
        "index",
        "getBindingState",
        "geometry",
        "program",
        "material",
        "currentState",
        "state",
        "currentState",
        "state",
        "bindVertexArrayObject",
        "currentState",
        "updateBuffers",
        "needsUpdate",
        "geometry",
        "program",
        "index",
        "updateBuffers",
        "saveCache",
        "geometry",
        "program",
        "index",
        "index",
        "attributes",
        "index",
        "gl",
        "updateBuffers",
        "forceUpdate",
        "forceUpdate",
        "setupVertexAttributes",
        "material",
        "program",
        "geometry",
        "index",
        "gl",
        "gl",
        "attributes",
        "index",
        "gl",
        "vao",
        "gl",
        "vao",
        "vao",
        "gl",
        "vao",
        "geometry",
        "program",
        "material",
        "material",
        "bindingStates",
        "geometry",
        "programMap",
        "programMap",
        "bindingStates",
        "geometry",
        "programMap",
        "programMap",
        "program",
        "stateMap",
        "stateMap",
        "programMap",
        "program",
        "stateMap",
        "stateMap",
        "wireframe",
        "state",
        "state",
        "createBindingState",
        "createVertexArrayObject",
        "stateMap",
        "wireframe",
        "state",
        "state",
        "vao",
        "i",
        "maxVertexAttributes",
        "i",
        "newAttributes",
        "i",
        "enabledAttributes",
        "i",
        "attributeDivisors",
        "i",
        "newAttributes",
        "enabledAttributes",
        "attributeDivisors",
        "vao",
        "geometry",
        "program",
        "index",
        "currentState",
        "geometry",
        "program",
        "name",
        "programAttributes",
        "programAttributes",
        "name",
        "programAttribute",
        "cachedAttributes",
        "name",
        "geometryAttributes",
        "name",
        "geometryAttribute",
        "name",
        "geometryAttribute",
        "name",
        "geometryAttribute",
        "cachedAttribute",
        "cachedAttribute",
        "geometryAttribute",
        "geometryAttribute",
        "cachedAttribute",
        "geometryAttribute",
        "attributesNum",
        "currentState",
        "attributesNum",
        "currentState",
        "index",
        "geometry",
        "program",
        "index",
        "geometry",
        "program",
        "name",
        "programAttributes",
        "programAttributes",
        "name",
        "programAttribute",
        "attributes",
        "name",
        "attribute",
        "name",
        "attribute",
        "name",
        "attribute",
        "data",
        "attribute",
        "attribute",
        "attribute",
        "data",
        "attribute",
        "cache",
        "name",
        "data",
        "attributesNum",
        "currentState",
        "cache",
        "currentState",
        "attributesNum",
        "currentState",
        "index",
        "currentState",
        "newAttributes",
        "i",
        "il",
        "i",
        "newAttributes",
        "i",
        "attribute",
        "enableAttributeAndDivisor",
        "attribute",
        "attribute",
        "meshPerAttribute",
        "currentState",
        "currentState",
        "currentState",
        "newAttributes",
        "attribute",
        "enabledAttributes",
        "attribute",
        "gl",
        "attribute",
        "enabledAttributes",
        "attribute",
        "attributeDivisors",
        "attribute",
        "meshPerAttribute",
        "gl",
        "attribute",
        "meshPerAttribute",
        "attributeDivisors",
        "attribute",
        "meshPerAttribute",
        "currentState",
        "currentState",
        "enabledAttributes",
        "i",
        "il",
        "i",
        "enabledAttributes",
        "i",
        "newAttributes",
        "i",
        "gl",
        "i",
        "enabledAttributes",
        "i",
        "index",
        "size",
        "normalized",
        "stride",
        "offset",
        "integer",
        "integer",
        "gl",
        "index",
        "size",
        "stride",
        "offset",
        "gl",
        "index",
        "size",
        "normalized",
        "stride",
        "offset",
        "material",
        "program",
        "geometry",
        "initAttributes",
        "geometry",
        "program",
        "material",
        "name",
        "programAttributes",
        "programAttributes",
        "name",
        "programAttribute",
        "geometryAttributes",
        "name",
        "geometryAttribute",
        "name",
        "geometryAttribute",
        "name",
        "geometryAttribute",
        "geometryAttribute",
        "geometryAttribute",
        "geometryAttribute",
        "attributes",
        "geometryAttribute",
        "attribute",
        "attribute",
        "attribute",
        "attribute",
        "gl",
        "gl",
        "geometryAttribute",
        "IntType",
        "geometryAttribute",
        "geometryAttribute",
        "data",
        "geometryAttribute",
        "data",
        "i",
        "programAttribute",
        "i",
        "enableAttributeAndDivisor",
        "programAttribute",
        "i",
        "data",
        "geometry",
        "geometry",
        "data",
        "data",
        "i",
        "programAttribute",
        "i",
        "enableAttribute",
        "programAttribute",
        "i",
        "gl",
        "gl",
        "buffer",
        "i",
        "programAttribute",
        "i",
        "vertexAttribPointer",
        "programAttribute",
        "i",
        "size",
        "programAttribute",
        "normalized",
        "stride",
        "bytesPerElement",
        "offset",
        "size",
        "programAttribute",
        "i",
        "bytesPerElement",
        "integer",
        "geometryAttribute",
        "i",
        "programAttribute",
        "i",
        "enableAttributeAndDivisor",
        "programAttribute",
        "i",
        "geometryAttribute",
        "geometry",
        "geometry",
        "geometryAttribute",
        "geometryAttribute",
        "i",
        "programAttribute",
        "i",
        "enableAttribute",
        "programAttribute",
        "i",
        "gl",
        "gl",
        "buffer",
        "i",
        "programAttribute",
        "i",
        "vertexAttribPointer",
        "programAttribute",
        "i",
        "size",
        "programAttribute",
        "normalized",
        "size",
        "bytesPerElement",
        "size",
        "programAttribute",
        "i",
        "bytesPerElement",
        "integer",
        "materialDefaultAttributeValues",
        "materialDefaultAttributeValues",
        "name",
        "value",
        "value",
        "gl",
        "programAttribute",
        "value",
        "gl",
        "programAttribute",
        "value",
        "gl",
        "programAttribute",
        "value",
        "gl",
        "programAttribute",
        "value",
        "disableUnusedAttributes",
        "reset",
        "geometryId",
        "bindingStates",
        "bindingStates",
        "geometryId",
        "programId",
        "programMap",
        "programMap",
        "programId",
        "wireframe",
        "stateMap",
        "deleteVertexArrayObject",
        "stateMap",
        "wireframe",
        "stateMap",
        "wireframe",
        "programMap",
        "programId",
        "bindingStates",
        "geometryId",
        "geometry",
        "bindingStates",
        "geometry",
        "bindingStates",
        "geometry",
        "programId",
        "programMap",
        "programMap",
        "programId",
        "wireframe",
        "stateMap",
        "deleteVertexArrayObject",
        "stateMap",
        "wireframe",
        "stateMap",
        "wireframe",
        "programMap",
        "programId",
        "bindingStates",
        "geometry",
        "program",
        "geometryId",
        "bindingStates",
        "bindingStates",
        "geometryId",
        "programMap",
        "program",
        "programMap",
        "program",
        "wireframe",
        "stateMap",
        "deleteVertexArrayObject",
        "stateMap",
        "wireframe",
        "stateMap",
        "wireframe",
        "programMap",
        "program",
        "resetDefaultState",
        "forceUpdate",
        "currentState",
        "defaultState",
        "currentState",
        "defaultState",
        "bindVertexArrayObject",
        "currentState",
        "defaultState",
        "defaultState",
        "defaultState",
        "setup",
        "reset",
        "resetDefaultState",
        "dispose",
        "releaseStatesOfGeometry",
        "releaseStatesOfProgram",
        "initAttributes",
        "enableAttribute",
        "disableUnusedAttributes",
        "gl",
        "extensions",
        "info",
        "value",
        "mode",
        "value",
        "start",
        "count",
        "gl",
        "mode",
        "start",
        "count",
        "info",
        "count",
        "mode",
        "start",
        "count",
        "primcount",
        "primcount",
        "gl",
        "mode",
        "start",
        "count",
        "primcount",
        "info",
        "count",
        "mode",
        "primcount",
        "starts",
        "counts",
        "drawCount",
        "drawCount",
        "extensions",
        "extension",
        "mode",
        "starts",
        "counts",
        "drawCount",
        "i",
        "drawCount",
        "i",
        "elementCount",
        "counts",
        "i",
        "info",
        "elementCount",
        "mode",
        "starts",
        "counts",
        "drawCount",
        "primcount",
        "drawCount",
        "extensions",
        "extension",
        "i",
        "starts",
        "i",
        "renderInstances",
        "starts",
        "i",
        "counts",
        "i",
        "primcount",
        "i",
        "extension",
        "mode",
        "starts",
        "counts",
        "primcount",
        "drawCount",
        "i",
        "drawCount",
        "i",
        "elementCount",
        "counts",
        "i",
        "i",
        "primcount",
        "i",
        "info",
        "elementCount",
        "mode",
        "primcount",
        "i",
        "setMode",
        "render",
        "renderInstances",
        "renderMultiDraw",
        "renderMultiDrawInstances",
        "gl",
        "extensions",
        "parameters",
        "utils",
        "maxAnisotropy",
        "maxAnisotropy",
        "extensions",
        "extensions",
        "maxAnisotropy",
        "gl",
        "extension",
        "maxAnisotropy",
        "maxAnisotropy",
        "textureFormat",
        "textureFormat",
        "RGBAFormat",
        "utils",
        "textureFormat",
        "gl",
        "gl",
        "textureType",
        "textureType",
        "HalfFloatType",
        "extensions",
        "extensions",
        "textureType",
        "UnsignedByteType",
        "utils",
        "textureType",
        "gl",
        "gl",
        "textureType",
        "FloatType",
        "halfFloatSupportedByExt",
        "precision",
        "precision",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "precision",
        "precision",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "parameters",
        "parameters",
        "getMaxPrecision",
        "precision",
        "maxPrecision",
        "precision",
        "precision",
        "maxPrecision",
        "precision",
        "maxPrecision",
        "parameters",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "maxVertexTextures",
        "gl",
        "gl",
        "getMaxAnisotropy",
        "getMaxPrecision",
        "textureFormatReadable",
        "textureTypeReadable",
        "precision",
        "logarithmicDepthBuffer",
        "maxTextures",
        "maxVertexTextures",
        "maxTextureSize",
        "maxCubemapSize",
        "maxAttributes",
        "maxVertexUniforms",
        "maxVaryings",
        "maxFragmentUniforms",
        "vertexTextures",
        "maxSamples",
        "properties",
        "Plane",
        "Matrix3",
        "uniform",
        "planes",
        "enableLocalClipping",
        "planes",
        "enableLocalClipping",
        "numGlobalPlanes",
        "localClippingEnabled",
        "localClippingEnabled",
        "enableLocalClipping",
        "numGlobalPlanes",
        "planes",
        "enabled",
        "renderingShadows",
        "projectPlanes",
        "renderingShadows",
        "planes",
        "camera",
        "globalState",
        "projectPlanes",
        "planes",
        "camera",
        "material",
        "camera",
        "useCache",
        "material",
        "material",
        "material",
        "properties",
        "material",
        "localClippingEnabled",
        "planes",
        "planes",
        "renderingShadows",
        "clipShadows",
        "renderingShadows",
        "projectPlanes",
        "resetGlobalState",
        "renderingShadows",
        "numGlobalPlanes",
        "nGlobal",
        "materialProperties",
        "uniform",
        "dstArray",
        "dstArray",
        "projectPlanes",
        "planes",
        "camera",
        "lGlobal",
        "useCache",
        "i",
        "lGlobal",
        "i",
        "dstArray",
        "i",
        "globalState",
        "i",
        "materialProperties",
        "dstArray",
        "clipIntersection",
        "nGlobal",
        "uniform",
        "globalState",
        "uniform",
        "globalState",
        "uniform",
        "numGlobalPlanes",
        "scope",
        "numGlobalPlanes",
        "scope",
        "planes",
        "camera",
        "dstOffset",
        "skipTransform",
        "planes",
        "planes",
        "nPlanes",
        "dstArray",
        "uniform",
        "skipTransform",
        "dstArray",
        "dstOffset",
        "nPlanes",
        "camera",
        "viewNormalMatrix",
        "viewMatrix",
        "dstArray",
        "dstArray",
        "flatSize",
        "dstArray",
        "Float32Array",
        "flatSize",
        "i",
        "nPlanes",
        "i",
        "i4",
        "plane",
        "planes",
        "i",
        "viewMatrix",
        "viewNormalMatrix",
        "plane",
        "dstArray",
        "i4",
        "dstArray",
        "i4",
        "plane",
        "uniform",
        "dstArray",
        "uniform",
        "scope",
        "nPlanes",
        "scope",
        "dstArray",
        "renderer",
        "texture",
        "mapping",
        "mapping",
        "EquirectangularReflectionMapping",
        "texture",
        "CubeReflectionMapping",
        "mapping",
        "EquirectangularRefractionMapping",
        "texture",
        "CubeRefractionMapping",
        "texture",
        "texture",
        "texture",
        "texture",
        "texture",
        "mapping",
        "EquirectangularReflectionMapping",
        "mapping",
        "EquirectangularRefractionMapping",
        "cubemaps",
        "texture",
        "cubemaps",
        "texture",
        "mapTextureMapping",
        "cubemap",
        "texture",
        "texture",
        "image",
        "image",
        "WebGLCubeRenderTarget",
        "image",
        "renderTarget",
        "renderer",
        "texture",
        "cubemaps",
        "texture",
        "renderTarget",
        "texture",
        "onTextureDispose",
        "mapTextureMapping",
        "renderTarget",
        "texture",
        "texture",
        "texture",
        "onTextureDispose",
        "cubemaps",
        "texture",
        "cubemap",
        "cubemaps",
        "texture",
        "cubemap",
        "cubemaps",
        "get",
        "dispose",
        "Camera",
        "left",
        "right",
        "top",
        "bottom",
        "near",
        "far",
        "left",
        "right",
        "top",
        "bottom",
        "near",
        "far",
        "source",
        "recursive",
        "source",
        "recursive",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "fullWidth",
        "fullHeight",
        "x",
        "y",
        "width",
        "height",
        "fullWidth",
        "fullHeight",
        "x",
        "y",
        "width",
        "height",
        "cx",
        "dx",
        "cx",
        "dx",
        "cy",
        "dy",
        "cy",
        "dy",
        "left",
        "scaleW",
        "right",
        "left",
        "scaleW",
        "top",
        "scaleH",
        "bottom",
        "top",
        "scaleH",
        "left",
        "right",
        "top",
        "bottom",
        "meta",
        "meta",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "OrthographicCamera",
        "Color",
        "PHI",
        "Vector3",
        "PHI",
        "INV_PHI",
        "Vector3",
        "PHI",
        "INV_PHI",
        "Vector3",
        "INV_PHI",
        "PHI",
        "Vector3",
        "INV_PHI",
        "PHI",
        "Vector3",
        "PHI",
        "INV_PHI",
        "Vector3",
        "PHI",
        "INV_PHI",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "renderer",
        "renderer",
        "scene",
        "sigma",
        "near",
        "far",
        "_oldTarget",
        "_oldActiveCubeFace",
        "_oldActiveMipmapLevel",
        "_oldXrEnabled",
        "cubeUVRenderTarget",
        "scene",
        "near",
        "far",
        "cubeUVRenderTarget",
        "sigma",
        "cubeUVRenderTarget",
        "sigma",
        "cubeUVRenderTarget",
        "cubeUVRenderTarget",
        "cubeUVRenderTarget",
        "equirectangular",
        "renderTarget",
        "equirectangular",
        "renderTarget",
        "cubemap",
        "renderTarget",
        "cubemap",
        "renderTarget",
        "_getCubemapMaterial",
        "_getEquirectMaterial",
        "cubeSize",
        "cubeSize",
        "i",
        "i",
        "i",
        "outputTarget",
        "_oldTarget",
        "_oldActiveCubeFace",
        "_oldActiveMipmapLevel",
        "_oldXrEnabled",
        "outputTarget",
        "_setViewport",
        "outputTarget",
        "outputTarget",
        "outputTarget",
        "texture",
        "renderTarget",
        "texture",
        "CubeReflectionMapping",
        "texture",
        "CubeRefractionMapping",
        "texture",
        "texture",
        "texture",
        "texture",
        "_oldTarget",
        "_oldActiveCubeFace",
        "_oldActiveMipmapLevel",
        "_oldXrEnabled",
        "renderTarget",
        "texture",
        "cubeUVRenderTarget",
        "cubeUVRenderTarget",
        "cubeUVRenderTarget",
        "cubeUVRenderTarget",
        "LinearFilter",
        "LinearFilter",
        "HalfFloatType",
        "RGBAFormat",
        "LinearSRGBColorSpace",
        "_createRenderTarget",
        "width",
        "height",
        "width",
        "height",
        "_createRenderTarget",
        "width",
        "height",
        "_createPlanes",
        "_lodMax",
        "_getBlurShader",
        "_lodMax",
        "width",
        "height",
        "cubeUVRenderTarget",
        "material",
        "Mesh",
        "material",
        "tmpMesh",
        "_flatCamera",
        "scene",
        "near",
        "far",
        "cubeUVRenderTarget",
        "PerspectiveCamera",
        "fov",
        "aspect",
        "near",
        "far",
        "renderer",
        "renderer",
        "renderer",
        "_clearColor",
        "renderer",
        "NoToneMapping",
        "renderer",
        "MeshBasicMaterial",
        "BackSide",
        "Mesh",
        "BoxGeometry",
        "backgroundMaterial",
        "scene",
        "background",
        "background",
        "backgroundMaterial",
        "background",
        "scene",
        "useSolidColor",
        "backgroundMaterial",
        "_clearColor",
        "useSolidColor",
        "i",
        "i",
        "i",
        "col",
        "cubeCamera",
        "upSign",
        "i",
        "cubeCamera",
        "forwardSign",
        "i",
        "col",
        "cubeCamera",
        "upSign",
        "i",
        "cubeCamera",
        "forwardSign",
        "i",
        "cubeCamera",
        "upSign",
        "i",
        "cubeCamera",
        "forwardSign",
        "i",
        "_setViewport",
        "cubeUVRenderTarget",
        "col",
        "size",
        "i",
        "size",
        "size",
        "size",
        "renderer",
        "cubeUVRenderTarget",
        "useSolidColor",
        "renderer",
        "backgroundBox",
        "cubeCamera",
        "renderer",
        "scene",
        "cubeCamera",
        "backgroundBox",
        "backgroundBox",
        "renderer",
        "toneMapping",
        "renderer",
        "originalAutoClear",
        "scene",
        "background",
        "texture",
        "cubeUVRenderTarget",
        "texture",
        "CubeReflectionMapping",
        "texture",
        "CubeRefractionMapping",
        "isCubeTexture",
        "_getCubemapMaterial",
        "texture",
        "_getEquirectMaterial",
        "isCubeTexture",
        "Mesh",
        "material",
        "material",
        "uniforms",
        "texture",
        "_setViewport",
        "cubeUVRenderTarget",
        "size",
        "size",
        "renderer",
        "cubeUVRenderTarget",
        "renderer",
        "mesh",
        "_flatCamera",
        "cubeUVRenderTarget",
        "renderer",
        "renderer",
        "i",
        "n",
        "i",
        "i",
        "i",
        "i",
        "i",
        "_axisDirections",
        "n",
        "i",
        "_axisDirections",
        "cubeUVRenderTarget",
        "i",
        "i",
        "sigma",
        "poleAxis",
        "renderer",
        "autoClear",
        "cubeUVRenderTarget",
        "lodIn",
        "lodOut",
        "sigma",
        "poleAxis",
        "cubeUVRenderTarget",
        "pingPongRenderTarget",
        "lodIn",
        "lodOut",
        "sigma",
        "poleAxis",
        "pingPongRenderTarget",
        "cubeUVRenderTarget",
        "lodOut",
        "lodOut",
        "sigma",
        "poleAxis",
        "targetIn",
        "targetOut",
        "lodIn",
        "lodOut",
        "sigmaRadians",
        "direction",
        "poleAxis",
        "direction",
        "direction",
        "Mesh",
        "lodOut",
        "blurMaterial",
        "blurMaterial",
        "lodIn",
        "isFinite",
        "sigmaRadians",
        "pixels",
        "MAX_SAMPLES",
        "sigmaRadians",
        "radiansPerPixel",
        "isFinite",
        "sigmaRadians",
        "STANDARD_DEVIATIONS",
        "sigmaPixels",
        "MAX_SAMPLES",
        "samples",
        "MAX_SAMPLES",
        "sigmaRadians",
        "samples",
        "MAX_SAMPLES",
        "i",
        "MAX_SAMPLES",
        "i",
        "i",
        "sigmaPixels",
        "x",
        "x",
        "weights",
        "weight",
        "i",
        "sum",
        "weight",
        "i",
        "samples",
        "sum",
        "weight",
        "i",
        "weights",
        "i",
        "weights",
        "i",
        "weights",
        "i",
        "sum",
        "blurUniforms",
        "targetIn",
        "blurUniforms",
        "samples",
        "blurUniforms",
        "weights",
        "blurUniforms",
        "direction",
        "poleAxis",
        "blurUniforms",
        "poleAxis",
        "blurUniforms",
        "radiansPerPixel",
        "blurUniforms",
        "_lodMax",
        "lodIn",
        "lodOut",
        "outputSize",
        "lodOut",
        "_lodMax",
        "LOD_MIN",
        "lodOut",
        "_lodMax",
        "LOD_MIN",
        "outputSize",
        "_setViewport",
        "targetOut",
        "x",
        "y",
        "outputSize",
        "outputSize",
        "renderer",
        "targetOut",
        "renderer",
        "blurMesh",
        "_flatCamera",
        "lodMax",
        "lodMax",
        "LOD_MIN",
        "EXTRA_LOD_SIGMA",
        "i",
        "totalLods",
        "i",
        "lod",
        "sizeLods",
        "sizeLod",
        "sizeLod",
        "i",
        "lodMax",
        "LOD_MIN",
        "sigma",
        "EXTRA_LOD_SIGMA",
        "i",
        "lodMax",
        "LOD_MIN",
        "i",
        "sigma",
        "sigmas",
        "sigma",
        "sizeLod",
        "texelSize",
        "texelSize",
        "min",
        "min",
        "max",
        "min",
        "max",
        "max",
        "min",
        "min",
        "max",
        "max",
        "min",
        "max",
        "Float32Array",
        "positionSize",
        "vertices",
        "cubeFaces",
        "Float32Array",
        "uvSize",
        "vertices",
        "cubeFaces",
        "Float32Array",
        "faceIndexSize",
        "vertices",
        "cubeFaces",
        "face",
        "cubeFaces",
        "face",
        "face",
        "face",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "position",
        "coordinates",
        "positionSize",
        "vertices",
        "face",
        "uv",
        "uv1",
        "uvSize",
        "vertices",
        "face",
        "face",
        "face",
        "face",
        "face",
        "face",
        "face",
        "faceIndex",
        "fill",
        "faceIndexSize",
        "vertices",
        "face",
        "BufferGeometry",
        "planes",
        "BufferAttribute",
        "position",
        "positionSize",
        "planes",
        "BufferAttribute",
        "uv",
        "uvSize",
        "planes",
        "BufferAttribute",
        "faceIndex",
        "faceIndexSize",
        "lodPlanes",
        "planes",
        "lod",
        "LOD_MIN",
        "lod",
        "width",
        "height",
        "WebGLRenderTarget",
        "width",
        "height",
        "cubeUVRenderTarget",
        "CubeUVReflectionMapping",
        "cubeUVRenderTarget",
        "cubeUVRenderTarget",
        "cubeUVRenderTarget",
        "target",
        "x",
        "y",
        "width",
        "height",
        "target",
        "x",
        "y",
        "width",
        "height",
        "target",
        "x",
        "y",
        "width",
        "height",
        "lodMax",
        "width",
        "height",
        "Float32Array",
        "MAX_SAMPLES",
        "Vector3",
        "ShaderMaterial",
        "MAX_SAMPLES",
        "width",
        "height",
        "lodMax",
        "weights",
        "poleAxis",
        "_getCommonVertexShader",
        "NoBlending",
        "shaderMaterial",
        "ShaderMaterial",
        "_getCommonVertexShader",
        "NoBlending",
        "ShaderMaterial",
        "_getCommonVertexShader",
        "NoBlending",
        "renderer",
        "texture",
        "texture",
        "texture",
        "texture",
        "mapping",
        "EquirectangularReflectionMapping",
        "mapping",
        "EquirectangularRefractionMapping",
        "mapping",
        "CubeReflectionMapping",
        "mapping",
        "CubeRefractionMapping",
        "isEquirectMap",
        "isCubeMap",
        "cubeUVmaps",
        "texture",
        "renderTarget",
        "renderTarget",
        "texture",
        "texture",
        "currentPMREMVersion",
        "pmremGenerator",
        "pmremGenerator",
        "PMREMGenerator",
        "renderer",
        "renderTarget",
        "isEquirectMap",
        "pmremGenerator",
        "texture",
        "renderTarget",
        "pmremGenerator",
        "texture",
        "renderTarget",
        "renderTarget",
        "texture",
        "cubeUVmaps",
        "texture",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "texture",
        "isEquirectMap",
        "image",
        "image",
        "isCubeMap",
        "image",
        "isCubeTextureComplete",
        "image",
        "pmremGenerator",
        "pmremGenerator",
        "PMREMGenerator",
        "renderer",
        "renderTarget",
        "isEquirectMap",
        "pmremGenerator",
        "texture",
        "pmremGenerator",
        "texture",
        "renderTarget",
        "texture",
        "cubeUVmaps",
        "texture",
        "renderTarget",
        "texture",
        "onTextureDispose",
        "renderTarget",
        "texture",
        "image",
        "i",
        "length",
        "i",
        "image",
        "i",
        "count",
        "count",
        "length",
        "texture",
        "onTextureDispose",
        "cubeUVmaps",
        "texture",
        "cubemapUV",
        "cubeUVmaps",
        "texture",
        "cubemapUV",
        "cubeUVmaps",
        "pmremGenerator",
        "pmremGenerator",
        "pmremGenerator",
        "get",
        "dispose",
        "gl",
        "name",
        "extensions",
        "name",
        "extensions",
        "name",
        "name",
        "extension",
        "gl",
        "gl",
        "gl",
        "extension",
        "gl",
        "gl",
        "gl",
        "extension",
        "gl",
        "gl",
        "gl",
        "extension",
        "gl",
        "gl",
        "extension",
        "gl",
        "name",
        "extensions",
        "name",
        "extension",
        "extension",
        "name",
        "getExtension",
        "name",
        "getExtension",
        "getExtension",
        "getExtension",
        "getExtension",
        "getExtension",
        "getExtension",
        "name",
        "getExtension",
        "name",
        "extension",
        "warnOnce",
        "name",
        "extension",
        "gl",
        "attributes",
        "info",
        "bindingStates",
        "geometry",
        "attributes",
        "geometry",
        "name",
        "geometry",
        "attributes",
        "geometry",
        "name",
        "name",
        "geometry",
        "geometry",
        "name",
        "array",
        "i",
        "l",
        "i",
        "attributes",
        "array",
        "i",
        "geometry",
        "onGeometryDispose",
        "geometries",
        "geometry",
        "wireframeAttributes",
        "geometry",
        "attribute",
        "attributes",
        "attribute",
        "wireframeAttributes",
        "geometry",
        "bindingStates",
        "geometry",
        "geometry",
        "geometry",
        "info",
        "geometry",
        "geometries",
        "geometry",
        "geometry",
        "geometry",
        "onGeometryDispose",
        "geometries",
        "geometry",
        "info",
        "geometry",
        "geometry",
        "geometry",
        "name",
        "geometryAttributes",
        "attributes",
        "geometryAttributes",
        "name",
        "gl",
        "geometry",
        "name",
        "morphAttributes",
        "morphAttributes",
        "name",
        "array",
        "i",
        "l",
        "i",
        "attributes",
        "array",
        "i",
        "gl",
        "geometry",
        "geometry",
        "geometry",
        "geometryIndex",
        "geometryIndex",
        "version",
        "geometryIndex",
        "array",
        "i",
        "l",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "indices",
        "a",
        "b",
        "b",
        "c",
        "c",
        "a",
        "geometryPosition",
        "geometryPosition",
        "version",
        "geometryPosition",
        "array",
        "i",
        "l",
        "i",
        "i",
        "i",
        "i",
        "indices",
        "a",
        "b",
        "b",
        "c",
        "c",
        "a",
        "arrayNeedsUint32",
        "indices",
        "Uint32BufferAttribute",
        "Uint16BufferAttribute",
        "indices",
        "attribute",
        "version",
        "wireframeAttributes",
        "geometry",
        "previousAttribute",
        "attributes",
        "previousAttribute",
        "wireframeAttributes",
        "geometry",
        "attribute",
        "geometry",
        "wireframeAttributes",
        "geometry",
        "currentAttribute",
        "geometry",
        "geometryIndex",
        "currentAttribute",
        "geometryIndex",
        "updateWireframeAttribute",
        "geometry",
        "updateWireframeAttribute",
        "geometry",
        "wireframeAttributes",
        "geometry",
        "get",
        "update",
        "getWireframeAttribute",
        "gl",
        "extensions",
        "info",
        "value",
        "mode",
        "value",
        "value",
        "value",
        "bytesPerElement",
        "value",
        "start",
        "count",
        "gl",
        "mode",
        "count",
        "start",
        "bytesPerElement",
        "info",
        "count",
        "mode",
        "start",
        "count",
        "primcount",
        "primcount",
        "gl",
        "mode",
        "count",
        "start",
        "bytesPerElement",
        "primcount",
        "info",
        "count",
        "mode",
        "primcount",
        "starts",
        "counts",
        "drawCount",
        "drawCount",
        "extensions",
        "extension",
        "mode",
        "counts",
        "starts",
        "drawCount",
        "i",
        "drawCount",
        "i",
        "elementCount",
        "counts",
        "i",
        "info",
        "elementCount",
        "mode",
        "starts",
        "counts",
        "drawCount",
        "primcount",
        "drawCount",
        "extensions",
        "extension",
        "i",
        "starts",
        "i",
        "renderInstances",
        "starts",
        "i",
        "bytesPerElement",
        "counts",
        "i",
        "primcount",
        "i",
        "extension",
        "mode",
        "counts",
        "starts",
        "primcount",
        "drawCount",
        "i",
        "drawCount",
        "i",
        "elementCount",
        "counts",
        "i",
        "i",
        "primcount",
        "i",
        "info",
        "elementCount",
        "mode",
        "primcount",
        "i",
        "setMode",
        "setIndex",
        "render",
        "renderInstances",
        "renderMultiDraw",
        "renderMultiDrawInstances",
        "gl",
        "count",
        "mode",
        "instanceCount",
        "render",
        "mode",
        "gl",
        "render",
        "instanceCount",
        "count",
        "gl",
        "render",
        "instanceCount",
        "count",
        "gl",
        "render",
        "instanceCount",
        "count",
        "gl",
        "render",
        "instanceCount",
        "count",
        "gl",
        "render",
        "instanceCount",
        "count",
        "mode",
        "render",
        "render",
        "render",
        "render",
        "memory",
        "render",
        "reset",
        "update",
        "gl",
        "capabilities",
        "textures",
        "Vector4",
        "geometry",
        "program",
        "geometry",
        "geometry",
        "geometry",
        "morphAttribute",
        "morphAttribute",
        "morphTextures",
        "geometry",
        "entry",
        "entry",
        "morphTargetsCount",
        "entry",
        "entry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "hasMorphPosition",
        "vertexDataCount",
        "hasMorphNormals",
        "vertexDataCount",
        "hasMorphColors",
        "vertexDataCount",
        "geometry",
        "vertexDataCount",
        "width",
        "capabilities",
        "height",
        "width",
        "capabilities",
        "width",
        "capabilities",
        "Float32Array",
        "width",
        "height",
        "morphTargetsCount",
        "DataArrayTexture",
        "buffer",
        "width",
        "height",
        "morphTargetsCount",
        "texture",
        "FloatType",
        "texture",
        "vertexDataCount",
        "i",
        "morphTargetsCount",
        "i",
        "morphTargets",
        "i",
        "morphNormals",
        "i",
        "morphColors",
        "i",
        "width",
        "height",
        "i",
        "j",
        "morphTarget",
        "j",
        "j",
        "vertexDataStride",
        "hasMorphPosition",
        "morph",
        "morphTarget",
        "j",
        "buffer",
        "offset",
        "stride",
        "morph",
        "buffer",
        "offset",
        "stride",
        "morph",
        "buffer",
        "offset",
        "stride",
        "morph",
        "buffer",
        "offset",
        "stride",
        "hasMorphNormals",
        "morph",
        "morphNormal",
        "j",
        "buffer",
        "offset",
        "stride",
        "morph",
        "buffer",
        "offset",
        "stride",
        "morph",
        "buffer",
        "offset",
        "stride",
        "morph",
        "buffer",
        "offset",
        "stride",
        "hasMorphColors",
        "morph",
        "morphColor",
        "j",
        "buffer",
        "offset",
        "stride",
        "morph",
        "buffer",
        "offset",
        "stride",
        "morph",
        "buffer",
        "offset",
        "stride",
        "morph",
        "buffer",
        "offset",
        "stride",
        "morphColor",
        "morph",
        "entry",
        "morphTargetsCount",
        "texture",
        "Vector2",
        "width",
        "height",
        "morphTextures",
        "geometry",
        "entry",
        "texture",
        "morphTextures",
        "geometry",
        "geometry",
        "disposeTexture",
        "geometry",
        "disposeTexture",
        "program",
        "gl",
        "textures",
        "i",
        "objectInfluences",
        "i",
        "morphInfluencesSum",
        "objectInfluences",
        "i",
        "geometry",
        "morphInfluencesSum",
        "program",
        "gl",
        "morphBaseInfluence",
        "program",
        "gl",
        "objectInfluences",
        "program",
        "gl",
        "entry",
        "textures",
        "program",
        "gl",
        "entry",
        "update",
        "gl",
        "geometries",
        "attributes",
        "info",
        "info",
        "geometries",
        "geometry",
        "updateMap",
        "buffergeometry",
        "frame",
        "geometries",
        "buffergeometry",
        "updateMap",
        "buffergeometry",
        "frame",
        "onInstancedMeshDispose",
        "onInstancedMeshDispose",
        "updateMap",
        "frame",
        "attributes",
        "gl",
        "attributes",
        "gl",
        "updateMap",
        "frame",
        "updateMap",
        "skeleton",
        "frame",
        "skeleton",
        "updateMap",
        "skeleton",
        "frame",
        "buffergeometry",
        "updateMap",
        "instancedMesh",
        "onInstancedMeshDispose",
        "attributes",
        "instancedMesh",
        "instancedMesh",
        "attributes",
        "instancedMesh",
        "update",
        "dispose",
        "Texture",
        "width",
        "height",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "anisotropy",
        "format",
        "DepthFormat",
        "format",
        "DepthFormat",
        "format",
        "DepthStencilFormat",
        "format",
        "DepthFormat",
        "UnsignedIntType",
        "format",
        "DepthStencilFormat",
        "UnsignedInt248Type",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "width",
        "height",
        "magFilter",
        "magFilter",
        "NearestFilter",
        "minFilter",
        "minFilter",
        "NearestFilter",
        "source",
        "source",
        "source",
        "meta",
        "meta",
        "data",
        "data",
        "Texture",
        "DepthTexture",
        "DataArrayTexture",
        "Data3DTexture",
        "CubeTexture",
        "Float32Array",
        "Float32Array",
        "Float32Array",
        "array",
        "nBlocks",
        "blockSize",
        "array",
        "firstElem",
        "firstElem",
        "array",
        "nBlocks",
        "blockSize",
        "arrayCacheF32",
        "n",
        "r",
        "r",
        "Float32Array",
        "n",
        "arrayCacheF32",
        "n",
        "r",
        "nBlocks",
        "firstElem",
        "r",
        "i",
        "nBlocks",
        "i",
        "offset",
        "blockSize",
        "array",
        "i",
        "r",
        "offset",
        "r",
        "a",
        "b",
        "a",
        "b",
        "a",
        "i",
        "l",
        "i",
        "a",
        "i",
        "b",
        "i",
        "a",
        "b",
        "b",
        "i",
        "l",
        "i",
        "a",
        "i",
        "b",
        "i",
        "textures",
        "n",
        "arrayCacheI32",
        "n",
        "r",
        "r",
        "Int32Array",
        "n",
        "arrayCacheI32",
        "n",
        "r",
        "i",
        "n",
        "i",
        "r",
        "i",
        "textures",
        "r",
        "gl",
        "v",
        "cache",
        "v",
        "gl",
        "v",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "arraysEqual",
        "cache",
        "v",
        "gl",
        "v",
        "copyArray",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "arraysEqual",
        "cache",
        "v",
        "gl",
        "v",
        "copyArray",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "arraysEqual",
        "cache",
        "v",
        "gl",
        "v",
        "copyArray",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "elements",
        "arraysEqual",
        "cache",
        "v",
        "gl",
        "v",
        "copyArray",
        "cache",
        "v",
        "arraysEqual",
        "cache",
        "elements",
        "mat2array",
        "elements",
        "gl",
        "mat2array",
        "copyArray",
        "cache",
        "elements",
        "gl",
        "v",
        "v",
        "elements",
        "arraysEqual",
        "cache",
        "v",
        "gl",
        "v",
        "copyArray",
        "cache",
        "v",
        "arraysEqual",
        "cache",
        "elements",
        "mat3array",
        "elements",
        "gl",
        "mat3array",
        "copyArray",
        "cache",
        "elements",
        "gl",
        "v",
        "v",
        "elements",
        "arraysEqual",
        "cache",
        "v",
        "gl",
        "v",
        "copyArray",
        "cache",
        "v",
        "arraysEqual",
        "cache",
        "elements",
        "mat4array",
        "elements",
        "gl",
        "mat4array",
        "copyArray",
        "cache",
        "elements",
        "gl",
        "v",
        "cache",
        "v",
        "gl",
        "v",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "arraysEqual",
        "cache",
        "v",
        "gl",
        "v",
        "copyArray",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "arraysEqual",
        "cache",
        "v",
        "gl",
        "v",
        "copyArray",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "arraysEqual",
        "cache",
        "v",
        "gl",
        "v",
        "copyArray",
        "cache",
        "v",
        "gl",
        "v",
        "cache",
        "v",
        "gl",
        "v",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "arraysEqual",
        "cache",
        "v",
        "gl",
        "v",
        "copyArray",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "arraysEqual",
        "cache",
        "v",
        "gl",
        "v",
        "copyArray",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "gl",
        "v",
        "v",
        "v",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "cache",
        "v",
        "arraysEqual",
        "cache",
        "v",
        "gl",
        "v",
        "copyArray",
        "cache",
        "v",
        "gl",
        "v",
        "textures",
        "textures",
        "cache",
        "unit",
        "gl",
        "unit",
        "cache",
        "unit",
        "gl",
        "emptyShadowTexture",
        "LessEqualCompare",
        "emptyTexture2D",
        "emptyShadowTexture",
        "emptyTexture2D",
        "emptyTexture",
        "textures",
        "v",
        "emptyTexture2D",
        "unit",
        "gl",
        "v",
        "textures",
        "textures",
        "cache",
        "unit",
        "gl",
        "unit",
        "cache",
        "unit",
        "textures",
        "v",
        "empty3dTexture",
        "unit",
        "gl",
        "v",
        "textures",
        "textures",
        "cache",
        "unit",
        "gl",
        "unit",
        "cache",
        "unit",
        "textures",
        "v",
        "emptyCubeTexture",
        "unit",
        "gl",
        "v",
        "textures",
        "textures",
        "cache",
        "unit",
        "gl",
        "unit",
        "cache",
        "unit",
        "textures",
        "v",
        "emptyArrayTexture",
        "unit",
        "setValueV1f",
        "setValueV2f",
        "setValueV3f",
        "setValueV4f",
        "setValueM2",
        "setValueM3",
        "setValueM4",
        "setValueV1i",
        "setValueV2i",
        "setValueV3i",
        "setValueV4i",
        "setValueV1ui",
        "setValueV2ui",
        "setValueV3ui",
        "setValueV4ui",
        "setValueT1",
        "setValueT3D1",
        "setValueT6",
        "setValueT2DArray1",
        "gl",
        "v",
        "gl",
        "v",
        "gl",
        "v",
        "flatten",
        "v",
        "gl",
        "data",
        "gl",
        "v",
        "flatten",
        "v",
        "gl",
        "data",
        "gl",
        "v",
        "flatten",
        "v",
        "gl",
        "data",
        "gl",
        "v",
        "flatten",
        "v",
        "gl",
        "data",
        "gl",
        "v",
        "flatten",
        "v",
        "gl",
        "data",
        "gl",
        "v",
        "flatten",
        "v",
        "gl",
        "data",
        "gl",
        "v",
        "gl",
        "v",
        "gl",
        "v",
        "gl",
        "v",
        "gl",
        "v",
        "gl",
        "v",
        "gl",
        "v",
        "gl",
        "v",
        "gl",
        "v",
        "gl",
        "v",
        "gl",
        "v",
        "gl",
        "v",
        "gl",
        "v",
        "gl",
        "v",
        "gl",
        "v",
        "gl",
        "v",
        "gl",
        "v",
        "textures",
        "v",
        "allocTexUnits",
        "textures",
        "n",
        "arraysEqual",
        "cache",
        "units",
        "gl",
        "units",
        "copyArray",
        "cache",
        "units",
        "i",
        "n",
        "i",
        "textures",
        "v",
        "i",
        "emptyTexture",
        "units",
        "i",
        "gl",
        "v",
        "textures",
        "v",
        "allocTexUnits",
        "textures",
        "n",
        "arraysEqual",
        "cache",
        "units",
        "gl",
        "units",
        "copyArray",
        "cache",
        "units",
        "i",
        "n",
        "i",
        "textures",
        "v",
        "i",
        "empty3dTexture",
        "units",
        "i",
        "gl",
        "v",
        "textures",
        "v",
        "allocTexUnits",
        "textures",
        "n",
        "arraysEqual",
        "cache",
        "units",
        "gl",
        "units",
        "copyArray",
        "cache",
        "units",
        "i",
        "n",
        "i",
        "textures",
        "v",
        "i",
        "emptyCubeTexture",
        "units",
        "i",
        "gl",
        "v",
        "textures",
        "v",
        "allocTexUnits",
        "textures",
        "n",
        "arraysEqual",
        "cache",
        "units",
        "gl",
        "units",
        "copyArray",
        "cache",
        "units",
        "i",
        "n",
        "i",
        "textures",
        "v",
        "i",
        "emptyArrayTexture",
        "units",
        "i",
        "setValueV1fArray",
        "setValueV2fArray",
        "setValueV3fArray",
        "setValueV4fArray",
        "setValueM2Array",
        "setValueM3Array",
        "setValueM4Array",
        "setValueV1iArray",
        "setValueV2iArray",
        "setValueV3iArray",
        "setValueV4iArray",
        "setValueV1uiArray",
        "setValueV2uiArray",
        "setValueV3uiArray",
        "setValueV4uiArray",
        "setValueT1Array",
        "setValueT3DArray",
        "setValueT6Array",
        "setValueT2DArrayArray",
        "id",
        "activeInfo",
        "addr",
        "id",
        "addr",
        "activeInfo",
        "getSingularSetter",
        "activeInfo",
        "id",
        "activeInfo",
        "addr",
        "id",
        "addr",
        "activeInfo",
        "activeInfo",
        "getPureArraySetter",
        "activeInfo",
        "id",
        "id",
        "gl",
        "value",
        "textures",
        "seq",
        "i",
        "n",
        "i",
        "seq",
        "i",
        "u",
        "gl",
        "value",
        "u",
        "textures",
        "container",
        "uniformObject",
        "container",
        "uniformObject",
        "container",
        "uniformObject",
        "uniformObject",
        "activeInfo",
        "addr",
        "container",
        "activeInfo",
        "path",
        "RePathPart",
        "RePathPart",
        "path",
        "RePathPart",
        "match",
        "match",
        "match",
        "idIsIndex",
        "id",
        "id",
        "subscript",
        "subscript",
        "matchEnd",
        "pathLength",
        "addUniform",
        "container",
        "subscript",
        "SingleUniform",
        "id",
        "activeInfo",
        "addr",
        "PureArrayUniform",
        "id",
        "activeInfo",
        "addr",
        "container",
        "id",
        "next",
        "next",
        "StructuredUniform",
        "id",
        "addUniform",
        "container",
        "next",
        "container",
        "next",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "i",
        "n",
        "i",
        "gl",
        "program",
        "i",
        "gl",
        "program",
        "info",
        "parseUniform",
        "info",
        "addr",
        "gl",
        "name",
        "value",
        "textures",
        "name",
        "u",
        "u",
        "gl",
        "value",
        "textures",
        "gl",
        "name",
        "name",
        "v",
        "gl",
        "name",
        "v",
        "gl",
        "seq",
        "values",
        "textures",
        "seq",
        "i",
        "n",
        "i",
        "seq",
        "i",
        "values",
        "u",
        "v",
        "u",
        "gl",
        "v",
        "textures",
        "seq",
        "values",
        "seq",
        "i",
        "n",
        "i",
        "seq",
        "i",
        "u",
        "values",
        "r",
        "u",
        "r",
        "gl",
        "gl",
        "gl",
        "shader",
        "gl",
        "shader",
        "shader",
        "errorLine",
        "errorLine",
        "errorLine",
        "lines",
        "i",
        "to",
        "i",
        "i",
        "lines2",
        "line",
        "errorLine",
        "line",
        "lines",
        "i",
        "lines2",
        "colorSpace1",
        "ColorManagement",
        "ColorManagement",
        "ColorManagement",
        "colorSpace1",
        "workingPrimaries",
        "encodingPrimaries",
        "gamutMapping",
        "workingPrimaries",
        "P3Primaries",
        "encodingPrimaries",
        "Rec709Primaries",
        "gamutMapping",
        "workingPrimaries",
        "Rec709Primaries",
        "encodingPrimaries",
        "P3Primaries",
        "gamutMapping",
        "colorSpace1",
        "LinearSRGBColorSpace",
        "LinearDisplayP3ColorSpace",
        "gamutMapping",
        "SRGBColorSpace",
        "DisplayP3ColorSpace",
        "gamutMapping",
        "colorSpace1",
        "gamutMapping",
        "gl",
        "shader",
        "gl",
        "shader",
        "gl",
        "gl",
        "shader",
        "status",
        "errors",
        "errors",
        "errorMatches",
        "parseInt",
        "errorMatches",
        "errors",
        "handleSource",
        "gl",
        "shader",
        "errorLine",
        "errors",
        "functionName",
        "colorSpace1",
        "getEncodingComponents",
        "colorSpace1",
        "functionName",
        "components",
        "components",
        "functionName",
        "toneMapping",
        "toneMapping",
        "LinearToneMapping",
        "toneMappingName",
        "ReinhardToneMapping",
        "toneMappingName",
        "CineonToneMapping",
        "toneMappingName",
        "ACESFilmicToneMapping",
        "toneMappingName",
        "AgXToneMapping",
        "toneMappingName",
        "NeutralToneMapping",
        "toneMappingName",
        "CustomToneMapping",
        "toneMappingName",
        "toneMapping",
        "toneMappingName",
        "functionName",
        "toneMappingName",
        "Vector3",
        "ColorManagement",
        "_v0$1",
        "_v0$1",
        "_v0$1",
        "_v0$1",
        "r",
        "g",
        "b",
        "parameters",
        "parameters",
        "parameters",
        "chunks",
        "filterEmptyLine",
        "defines",
        "name",
        "defines",
        "defines",
        "name",
        "value",
        "chunks",
        "name",
        "value",
        "chunks",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "i",
        "n",
        "i",
        "gl",
        "program",
        "i",
        "info",
        "info",
        "gl",
        "locationSize",
        "info",
        "gl",
        "locationSize",
        "info",
        "gl",
        "locationSize",
        "attributes",
        "name",
        "info",
        "gl",
        "program",
        "name",
        "locationSize",
        "attributes",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "numSpotLightCoords",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "includePattern",
        "includeReplacer",
        "match",
        "include",
        "ShaderChunk",
        "include",
        "shaderChunkMap",
        "include",
        "newInclude",
        "ShaderChunk",
        "newInclude",
        "include",
        "newInclude",
        "include",
        "resolveIncludes",
        "unrollLoopPattern",
        "loopReplacer",
        "match",
        "start",
        "end",
        "snippet",
        "parseInt",
        "start",
        "i",
        "parseInt",
        "end",
        "i",
        "snippet",
        "i",
        "i",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "precisionstring",
        "parameters",
        "precisionstring",
        "parameters",
        "precisionstring",
        "precisionstring",
        "parameters",
        "parameters",
        "PCFShadowMap",
        "shadowMapTypeDefine",
        "parameters",
        "PCFSoftShadowMap",
        "shadowMapTypeDefine",
        "parameters",
        "VSMShadowMap",
        "shadowMapTypeDefine",
        "shadowMapTypeDefine",
        "parameters",
        "parameters",
        "parameters",
        "CubeReflectionMapping",
        "CubeRefractionMapping",
        "envMapTypeDefine",
        "CubeUVReflectionMapping",
        "envMapTypeDefine",
        "envMapTypeDefine",
        "parameters",
        "parameters",
        "parameters",
        "CubeRefractionMapping",
        "envMapModeDefine",
        "envMapModeDefine",
        "parameters",
        "parameters",
        "parameters",
        "MultiplyOperation",
        "envMapBlendingDefine",
        "MixOperation",
        "envMapBlendingDefine",
        "AddOperation",
        "envMapBlendingDefine",
        "envMapBlendingDefine",
        "parameters",
        "parameters",
        "imageHeight",
        "imageHeight",
        "imageHeight",
        "maxMip",
        "renderer",
        "cacheKey",
        "parameters",
        "bindingStates",
        "renderer",
        "parameters",
        "parameters",
        "parameters",
        "generateShadowMapTypeDefine",
        "parameters",
        "generateEnvMapTypeDefine",
        "parameters",
        "generateEnvMapModeDefine",
        "parameters",
        "generateEnvMapBlendingDefine",
        "parameters",
        "generateCubeUVSize",
        "parameters",
        "generateVertexExtensions",
        "parameters",
        "generateDefines",
        "defines",
        "gl",
        "parameters",
        "parameters",
        "parameters",
        "prefixVertex",
        "parameters",
        "parameters",
        "customDefines",
        "filterEmptyLine",
        "prefixVertex",
        "prefixVertex",
        "prefixFragment",
        "parameters",
        "parameters",
        "customDefines",
        "filterEmptyLine",
        "prefixFragment",
        "prefixFragment",
        "prefixVertex",
        "generatePrecision",
        "parameters",
        "parameters",
        "parameters",
        "customDefines",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "envMapModeDefine",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "shadowMapTypeDefine",
        "parameters",
        "parameters",
        "parameters",
        "filterEmptyLine",
        "prefixFragment",
        "generatePrecision",
        "parameters",
        "parameters",
        "parameters",
        "customDefines",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "envMapTypeDefine",
        "parameters",
        "envMapModeDefine",
        "parameters",
        "envMapBlendingDefine",
        "envMapCubeUVSize",
        "envMapCubeUVSize",
        "envMapCubeUVSize",
        "envMapCubeUVSize",
        "envMapCubeUVSize",
        "envMapCubeUVSize",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "shadowMapTypeDefine",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "NoToneMapping",
        "parameters",
        "NoToneMapping",
        "ShaderChunk",
        "parameters",
        "NoToneMapping",
        "getToneMappingFunction",
        "parameters",
        "parameters",
        "parameters",
        "ShaderChunk",
        "getTexelEncodingFunction",
        "parameters",
        "getLuminanceFunction",
        "parameters",
        "parameters",
        "filterEmptyLine",
        "vertexShader",
        "resolveIncludes",
        "vertexShader",
        "vertexShader",
        "replaceLightNums",
        "vertexShader",
        "parameters",
        "vertexShader",
        "replaceClippingPlaneNums",
        "vertexShader",
        "parameters",
        "fragmentShader",
        "resolveIncludes",
        "fragmentShader",
        "fragmentShader",
        "replaceLightNums",
        "fragmentShader",
        "parameters",
        "fragmentShader",
        "replaceClippingPlaneNums",
        "fragmentShader",
        "parameters",
        "vertexShader",
        "unrollLoops",
        "vertexShader",
        "fragmentShader",
        "unrollLoops",
        "fragmentShader",
        "parameters",
        "versionString",
        "prefixVertex",
        "customVertexExtensions",
        "prefixVertex",
        "prefixFragment",
        "parameters",
        "GLSL3",
        "parameters",
        "GLSL3",
        "prefixFragment",
        "versionString",
        "prefixVertex",
        "vertexShader",
        "versionString",
        "prefixFragment",
        "fragmentShader",
        "WebGLShader",
        "gl",
        "gl",
        "vertexGlsl",
        "WebGLShader",
        "gl",
        "gl",
        "fragmentGlsl",
        "gl",
        "program",
        "glVertexShader",
        "gl",
        "program",
        "glFragmentShader",
        "parameters",
        "gl",
        "program",
        "parameters",
        "parameters",
        "gl",
        "program",
        "gl",
        "program",
        "self1",
        "renderer",
        "gl",
        "program",
        "gl",
        "glVertexShader",
        "gl",
        "glFragmentShader",
        "gl",
        "program",
        "gl",
        "runnable",
        "renderer",
        "renderer",
        "gl",
        "program",
        "glVertexShader",
        "glFragmentShader",
        "getShaderErrors",
        "gl",
        "glVertexShader",
        "getShaderErrors",
        "gl",
        "glFragmentShader",
        "gl",
        "gl",
        "program",
        "gl",
        "self1",
        "self1",
        "programLog",
        "vertexErrors",
        "fragmentErrors",
        "programLog",
        "programLog",
        "vertexLog",
        "fragmentLog",
        "haveDiagnostics",
        "haveDiagnostics",
        "self1",
        "runnable",
        "programLog",
        "vertexLog",
        "prefixVertex",
        "fragmentLog",
        "prefixFragment",
        "gl",
        "glVertexShader",
        "gl",
        "glFragmentShader",
        "cachedUniforms",
        "WebGLUniforms",
        "gl",
        "program",
        "cachedAttributes",
        "fetchAttributeLocations",
        "gl",
        "program",
        "cachedUniforms",
        "onFirstUse",
        "cachedUniforms",
        "cachedAttributes",
        "onFirstUse",
        "cachedAttributes",
        "parameters",
        "programReady",
        "programReady",
        "gl",
        "program",
        "COMPLETION_STATUS_KHR",
        "programReady",
        "bindingStates",
        "gl",
        "program",
        "parameters",
        "parameters",
        "programIdCount",
        "cacheKey",
        "program",
        "glVertexShader",
        "glFragmentShader",
        "material",
        "material",
        "material",
        "vertexShader",
        "fragmentShader",
        "material",
        "materialShaders",
        "vertexShaderStage",
        "materialShaders",
        "vertexShaderStage",
        "vertexShaderStage",
        "materialShaders",
        "fragmentShaderStage",
        "materialShaders",
        "fragmentShaderStage",
        "fragmentShaderStage",
        "material",
        "material",
        "shaderStage",
        "materialShaders",
        "shaderStage",
        "shaderStage",
        "shaderStage",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "cache",
        "material",
        "cache",
        "material",
        "code",
        "cache",
        "code",
        "stage",
        "stage",
        "WebGLShaderStage",
        "code",
        "cache",
        "code",
        "stage",
        "stage",
        "code",
        "_id$1",
        "code",
        "renderer",
        "cubemaps",
        "cubeuvmaps",
        "extensions",
        "capabilities",
        "bindingStates",
        "clipping",
        "Layers",
        "WebGLShaderCache",
        "capabilities",
        "capabilities",
        "capabilities",
        "value",
        "_activeChannels",
        "value",
        "value",
        "value",
        "material",
        "lights",
        "shadows",
        "scene",
        "scene",
        "material",
        "scene",
        "material",
        "cubeuvmaps",
        "cubemaps",
        "material",
        "environment",
        "envMap",
        "envMap",
        "CubeUVReflectionMapping",
        "envMap",
        "shaderIDs",
        "material",
        "material",
        "precision",
        "capabilities",
        "material",
        "precision",
        "material",
        "material",
        "precision",
        "geometry",
        "geometry",
        "geometry",
        "morphAttribute",
        "morphAttribute",
        "geometry",
        "morphTextureStride",
        "geometry",
        "morphTextureStride",
        "geometry",
        "morphTextureStride",
        "shaderID",
        "ShaderLib",
        "shaderID",
        "vertexShader",
        "shader",
        "fragmentShader",
        "shader",
        "vertexShader",
        "material",
        "fragmentShader",
        "material",
        "_customShaders",
        "material",
        "customVertexShaderID",
        "_customShaders",
        "material",
        "customFragmentShaderID",
        "_customShaders",
        "material",
        "renderer",
        "material",
        "material",
        "envMap",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "HAS_ANISOTROPY",
        "material",
        "HAS_CLEARCOAT",
        "material",
        "HAS_CLEARCOAT",
        "material",
        "HAS_CLEARCOAT",
        "material",
        "HAS_IRIDESCENCE",
        "material",
        "HAS_IRIDESCENCE",
        "material",
        "HAS_SHEEN",
        "material",
        "HAS_SHEEN",
        "material",
        "material",
        "material",
        "material",
        "HAS_TRANSMISSION",
        "material",
        "HAS_TRANSMISSION",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "currentRenderTarget",
        "currentRenderTarget",
        "toneMapping",
        "renderer",
        "shaderID",
        "material",
        "material",
        "vertexShader",
        "fragmentShader",
        "material",
        "customVertexShaderID",
        "customFragmentShaderID",
        "material",
        "material",
        "precision",
        "IS_BATCHEDMESH",
        "IS_BATCHEDMESH",
        "IS_INSTANCEDMESH",
        "IS_INSTANCEDMESH",
        "IS_INSTANCEDMESH",
        "SUPPORTS_VERTEX_TEXTURES",
        "currentRenderTarget",
        "renderer",
        "currentRenderTarget",
        "currentRenderTarget",
        "LinearSRGBColorSpace",
        "material",
        "HAS_MAP",
        "HAS_MATCAP",
        "HAS_ENVMAP",
        "HAS_ENVMAP",
        "envMap",
        "envMapCubeUVHeight",
        "HAS_AOMAP",
        "HAS_LIGHTMAP",
        "HAS_BUMPMAP",
        "HAS_NORMALMAP",
        "SUPPORTS_VERTEX_TEXTURES",
        "HAS_DISPLACEMENTMAP",
        "HAS_EMISSIVEMAP",
        "HAS_NORMALMAP",
        "material",
        "ObjectSpaceNormalMap",
        "HAS_NORMALMAP",
        "material",
        "TangentSpaceNormalMap",
        "HAS_METALNESSMAP",
        "HAS_ROUGHNESSMAP",
        "HAS_ANISOTROPY",
        "HAS_ANISOTROPYMAP",
        "HAS_CLEARCOAT",
        "HAS_CLEARCOATMAP",
        "HAS_CLEARCOAT_NORMALMAP",
        "HAS_CLEARCOAT_ROUGHNESSMAP",
        "HAS_DISPERSION",
        "HAS_IRIDESCENCE",
        "HAS_IRIDESCENCEMAP",
        "HAS_IRIDESCENCE_THICKNESSMAP",
        "HAS_SHEEN",
        "HAS_SHEEN_COLORMAP",
        "HAS_SHEEN_ROUGHNESSMAP",
        "HAS_SPECULARMAP",
        "HAS_SPECULAR_COLORMAP",
        "HAS_SPECULAR_INTENSITYMAP",
        "HAS_TRANSMISSION",
        "HAS_TRANSMISSIONMAP",
        "HAS_THICKNESSMAP",
        "HAS_GRADIENTMAP",
        "material",
        "material",
        "NormalBlending",
        "material",
        "HAS_ALPHAMAP",
        "HAS_ALPHATEST",
        "HAS_ALPHAHASH",
        "material",
        "HAS_MAP",
        "getChannel",
        "material",
        "HAS_AOMAP",
        "getChannel",
        "material",
        "HAS_LIGHTMAP",
        "getChannel",
        "material",
        "HAS_BUMPMAP",
        "getChannel",
        "material",
        "HAS_NORMALMAP",
        "getChannel",
        "material",
        "HAS_DISPLACEMENTMAP",
        "getChannel",
        "material",
        "HAS_EMISSIVEMAP",
        "getChannel",
        "material",
        "HAS_METALNESSMAP",
        "getChannel",
        "material",
        "HAS_ROUGHNESSMAP",
        "getChannel",
        "material",
        "HAS_ANISOTROPYMAP",
        "getChannel",
        "material",
        "HAS_CLEARCOATMAP",
        "getChannel",
        "material",
        "HAS_CLEARCOAT_NORMALMAP",
        "getChannel",
        "material",
        "HAS_CLEARCOAT_ROUGHNESSMAP",
        "getChannel",
        "material",
        "HAS_IRIDESCENCEMAP",
        "getChannel",
        "material",
        "HAS_IRIDESCENCE_THICKNESSMAP",
        "getChannel",
        "material",
        "HAS_SHEEN_COLORMAP",
        "getChannel",
        "material",
        "HAS_SHEEN_ROUGHNESSMAP",
        "getChannel",
        "material",
        "HAS_SPECULARMAP",
        "getChannel",
        "material",
        "HAS_SPECULAR_COLORMAP",
        "getChannel",
        "material",
        "HAS_SPECULAR_INTENSITYMAP",
        "getChannel",
        "material",
        "HAS_TRANSMISSIONMAP",
        "getChannel",
        "material",
        "HAS_THICKNESSMAP",
        "getChannel",
        "material",
        "HAS_ALPHAMAP",
        "getChannel",
        "material",
        "geometry",
        "HAS_NORMALMAP",
        "HAS_ANISOTROPY",
        "material",
        "material",
        "geometry",
        "geometry",
        "geometry",
        "HAS_MAP",
        "HAS_ALPHAMAP",
        "fog",
        "material",
        "fog",
        "fog",
        "material",
        "material",
        "logarithmicDepthBuffer",
        "geometry",
        "geometry",
        "geometry",
        "morphTargetsCount",
        "morphTextureStride",
        "lights",
        "lights",
        "lights",
        "lights",
        "lights",
        "lights",
        "lights",
        "lights",
        "lights",
        "lights",
        "lights",
        "clipping",
        "clipping",
        "material",
        "renderer",
        "shadows",
        "renderer",
        "toneMapping",
        "HAS_MAP",
        "material",
        "ColorManagement",
        "material",
        "SRGBTransfer",
        "material",
        "material",
        "DoubleSide",
        "material",
        "BackSide",
        "material",
        "material",
        "material",
        "HAS_EXTENSIONS",
        "material",
        "extensions",
        "HAS_EXTENSIONS",
        "material",
        "IS_BATCHEDMESH",
        "extensions",
        "extensions",
        "material",
        "parameters",
        "_activeChannels",
        "parameters",
        "_activeChannels",
        "parameters",
        "_activeChannels",
        "_activeChannels",
        "parameters",
        "parameters",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "parameters",
        "name",
        "parameters",
        "array",
        "name",
        "array",
        "parameters",
        "name",
        "parameters",
        "getProgramCacheKeyParameters",
        "array",
        "parameters",
        "getProgramCacheKeyBooleans",
        "array",
        "parameters",
        "array",
        "renderer",
        "array",
        "parameters",
        "array",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "array",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "array",
        "_programLayers",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "parameters",
        "_programLayers",
        "array",
        "_programLayers",
        "material",
        "shaderIDs",
        "material",
        "shaderID",
        "ShaderLib",
        "shaderID",
        "uniforms",
        "UniformsUtils",
        "shader",
        "uniforms",
        "material",
        "uniforms",
        "parameters",
        "cacheKey",
        "programs",
        "p",
        "pl",
        "p",
        "programs",
        "p",
        "preexistingProgram",
        "cacheKey",
        "program",
        "preexistingProgram",
        "program",
        "program",
        "program",
        "WebGLProgram",
        "renderer",
        "cacheKey",
        "parameters",
        "bindingStates",
        "programs",
        "program",
        "program",
        "program",
        "program",
        "programs",
        "program",
        "programs",
        "i",
        "programs",
        "programs",
        "programs",
        "program",
        "material",
        "_customShaders",
        "material",
        "_customShaders",
        "getParameters",
        "getProgramCacheKey",
        "getUniforms",
        "acquireProgram",
        "releaseProgram",
        "releaseShaderCache",
        "programs",
        "dispose",
        "properties",
        "properties",
        "properties",
        "key",
        "value",
        "properties",
        "key",
        "value",
        "properties",
        "get",
        "remove",
        "update",
        "dispose",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "b",
        "a",
        "a",
        "b",
        "renderItemsIndex",
        "opaque",
        "transmissive",
        "transparent",
        "geometry",
        "material",
        "groupOrder",
        "z",
        "group",
        "renderItems",
        "renderItemsIndex",
        "renderItem",
        "renderItem",
        "geometry",
        "material",
        "groupOrder",
        "z",
        "group",
        "renderItems",
        "renderItemsIndex",
        "renderItem",
        "renderItem",
        "renderItem",
        "renderItem",
        "geometry",
        "renderItem",
        "material",
        "renderItem",
        "groupOrder",
        "renderItem",
        "renderItem",
        "z",
        "renderItem",
        "group",
        "renderItemsIndex",
        "renderItem",
        "geometry",
        "material",
        "groupOrder",
        "z",
        "group",
        "getNextRenderItem",
        "geometry",
        "material",
        "groupOrder",
        "z",
        "group",
        "material",
        "transmissive",
        "renderItem",
        "material",
        "transparent",
        "renderItem",
        "opaque",
        "renderItem",
        "geometry",
        "material",
        "groupOrder",
        "z",
        "group",
        "getNextRenderItem",
        "geometry",
        "material",
        "groupOrder",
        "z",
        "group",
        "material",
        "transmissive",
        "renderItem",
        "material",
        "transparent",
        "renderItem",
        "opaque",
        "renderItem",
        "customOpaqueSort",
        "customTransparentSort",
        "opaque",
        "opaque",
        "customOpaqueSort",
        "painterSortStable",
        "transmissive",
        "transmissive",
        "customTransparentSort",
        "reversePainterSortStable",
        "transparent",
        "transparent",
        "customTransparentSort",
        "reversePainterSortStable",
        "renderItems",
        "i",
        "il",
        "i",
        "renderItems",
        "i",
        "renderItem",
        "renderItem",
        "renderItem",
        "renderItem",
        "renderItem",
        "renderItem",
        "opaque",
        "transmissive",
        "transparent",
        "init",
        "push",
        "unshift",
        "finish",
        "sort",
        "scene",
        "renderCallDepth",
        "lists",
        "scene",
        "listArray",
        "WebGLRenderList",
        "lists",
        "scene",
        "renderCallDepth",
        "listArray",
        "WebGLRenderList",
        "listArray",
        "listArray",
        "renderCallDepth",
        "lists",
        "get",
        "dispose",
        "light",
        "lights",
        "light",
        "lights",
        "light",
        "light",
        "uniforms",
        "Vector3",
        "Color",
        "uniforms",
        "Vector3",
        "Vector3",
        "Color",
        "uniforms",
        "Vector3",
        "Color",
        "uniforms",
        "Vector3",
        "Color",
        "Color",
        "uniforms",
        "Color",
        "Vector3",
        "Vector3",
        "Vector3",
        "lights",
        "light",
        "uniforms",
        "uniforms",
        "light",
        "lights",
        "light",
        "lights",
        "light",
        "light",
        "uniforms",
        "Vector2",
        "uniforms",
        "Vector2",
        "uniforms",
        "Vector2",
        "lights",
        "light",
        "uniforms",
        "uniforms",
        "lightA",
        "lightB",
        "lightB",
        "lightA",
        "lightB",
        "lightA",
        "extensions",
        "UniformsCache",
        "ShadowUniformsCache",
        "i",
        "i",
        "state",
        "Vector3",
        "Vector3",
        "Matrix4",
        "Matrix4",
        "lights",
        "i",
        "i",
        "state",
        "i",
        "lights",
        "shadowCastingAndTexturingLightsFirst",
        "lights",
        "i",
        "l",
        "i",
        "lights",
        "i",
        "light",
        "light",
        "light",
        "light",
        "light",
        "light",
        "light",
        "r",
        "color",
        "intensity",
        "g",
        "color",
        "intensity",
        "b",
        "color",
        "intensity",
        "light",
        "j",
        "j",
        "state",
        "j",
        "light",
        "j",
        "intensity",
        "numLightProbes",
        "light",
        "cache",
        "light",
        "uniforms",
        "light",
        "light",
        "light",
        "light",
        "shadowCache",
        "light",
        "shadowUniforms",
        "shadow",
        "shadowUniforms",
        "shadow",
        "shadowUniforms",
        "shadow",
        "shadowUniforms",
        "shadow",
        "shadowUniforms",
        "shadow",
        "state",
        "directionalLength",
        "shadowUniforms",
        "state",
        "directionalLength",
        "shadowMap",
        "state",
        "directionalLength",
        "light",
        "numDirectionalShadows",
        "state",
        "directionalLength",
        "uniforms",
        "directionalLength",
        "light",
        "cache",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "color",
        "intensity",
        "uniforms",
        "distance",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "light",
        "uniforms",
        "light",
        "state",
        "spotLength",
        "uniforms",
        "light",
        "light",
        "state",
        "numSpotMaps",
        "light",
        "numSpotMaps",
        "shadow",
        "light",
        "light",
        "numSpotShadowsWithMaps",
        "state",
        "spotLength",
        "shadow",
        "light",
        "shadowCache",
        "light",
        "shadowUniforms",
        "shadow",
        "shadowUniforms",
        "shadow",
        "shadowUniforms",
        "shadow",
        "shadowUniforms",
        "shadow",
        "shadowUniforms",
        "shadow",
        "state",
        "spotLength",
        "shadowUniforms",
        "state",
        "spotLength",
        "shadowMap",
        "numSpotShadows",
        "spotLength",
        "light",
        "cache",
        "light",
        "uniforms",
        "color",
        "intensity",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "state",
        "rectAreaLength",
        "uniforms",
        "rectAreaLength",
        "light",
        "cache",
        "light",
        "uniforms",
        "light",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "light",
        "light",
        "shadowCache",
        "light",
        "shadowUniforms",
        "shadow",
        "shadowUniforms",
        "shadow",
        "shadowUniforms",
        "shadow",
        "shadowUniforms",
        "shadow",
        "shadowUniforms",
        "shadow",
        "shadowUniforms",
        "shadow",
        "shadowUniforms",
        "shadow",
        "state",
        "pointLength",
        "shadowUniforms",
        "state",
        "pointLength",
        "shadowMap",
        "state",
        "pointLength",
        "light",
        "numPointShadows",
        "state",
        "pointLength",
        "uniforms",
        "pointLength",
        "light",
        "cache",
        "light",
        "uniforms",
        "light",
        "intensity",
        "uniforms",
        "light",
        "intensity",
        "state",
        "hemiLength",
        "uniforms",
        "hemiLength",
        "rectAreaLength",
        "extensions",
        "state",
        "UniformsLib",
        "state",
        "UniformsLib",
        "state",
        "UniformsLib",
        "state",
        "UniformsLib",
        "state",
        "r",
        "state",
        "g",
        "state",
        "b",
        "state",
        "hash",
        "directionalLength",
        "hash",
        "pointLength",
        "hash",
        "spotLength",
        "hash",
        "rectAreaLength",
        "hash",
        "hemiLength",
        "hash",
        "numDirectionalShadows",
        "hash",
        "numPointShadows",
        "hash",
        "numSpotShadows",
        "hash",
        "numSpotMaps",
        "hash",
        "numLightProbes",
        "state",
        "directionalLength",
        "state",
        "spotLength",
        "state",
        "rectAreaLength",
        "state",
        "pointLength",
        "state",
        "hemiLength",
        "state",
        "numDirectionalShadows",
        "state",
        "numDirectionalShadows",
        "state",
        "numPointShadows",
        "state",
        "numPointShadows",
        "state",
        "numSpotShadows",
        "state",
        "numSpotShadows",
        "state",
        "numDirectionalShadows",
        "state",
        "numPointShadows",
        "state",
        "numSpotShadows",
        "numSpotMaps",
        "numSpotShadowsWithMaps",
        "state",
        "numSpotMaps",
        "state",
        "numSpotShadowsWithMaps",
        "state",
        "numLightProbes",
        "hash",
        "directionalLength",
        "hash",
        "pointLength",
        "hash",
        "spotLength",
        "hash",
        "rectAreaLength",
        "hash",
        "hemiLength",
        "hash",
        "numDirectionalShadows",
        "hash",
        "numPointShadows",
        "hash",
        "numSpotShadows",
        "hash",
        "numSpotMaps",
        "hash",
        "numLightProbes",
        "state",
        "nextVersion",
        "lights",
        "camera",
        "camera",
        "lights",
        "i",
        "l",
        "i",
        "lights",
        "i",
        "light",
        "state",
        "directionalLength",
        "uniforms",
        "light",
        "vector3",
        "light",
        "uniforms",
        "vector3",
        "uniforms",
        "viewMatrix",
        "directionalLength",
        "light",
        "state",
        "spotLength",
        "uniforms",
        "light",
        "uniforms",
        "viewMatrix",
        "uniforms",
        "light",
        "vector3",
        "light",
        "uniforms",
        "vector3",
        "uniforms",
        "viewMatrix",
        "spotLength",
        "light",
        "state",
        "rectAreaLength",
        "uniforms",
        "light",
        "uniforms",
        "viewMatrix",
        "matrix42",
        "matrix4",
        "light",
        "matrix4",
        "viewMatrix",
        "matrix42",
        "matrix4",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "matrix42",
        "uniforms",
        "matrix42",
        "rectAreaLength",
        "light",
        "state",
        "pointLength",
        "uniforms",
        "light",
        "uniforms",
        "viewMatrix",
        "pointLength",
        "light",
        "state",
        "hemiLength",
        "uniforms",
        "light",
        "uniforms",
        "viewMatrix",
        "hemiLength",
        "setup",
        "setupView",
        "state",
        "extensions",
        "WebGLLights",
        "extensions",
        "camera",
        "state",
        "camera",
        "lightsArray",
        "shadowsArray",
        "light",
        "lightsArray",
        "light",
        "shadowLight",
        "shadowsArray",
        "shadowLight",
        "lights",
        "lightsArray",
        "camera",
        "lights",
        "lightsArray",
        "camera",
        "lightsArray",
        "shadowsArray",
        "lights",
        "init",
        "state",
        "setupLights",
        "setupLightsView",
        "pushLight",
        "pushShadow",
        "extensions",
        "scene",
        "renderCallDepth",
        "renderStates",
        "scene",
        "renderStateArray",
        "renderState",
        "WebGLRenderState",
        "extensions",
        "renderStates",
        "scene",
        "renderState",
        "renderCallDepth",
        "renderStateArray",
        "renderState",
        "WebGLRenderState",
        "extensions",
        "renderStateArray",
        "renderState",
        "renderState",
        "renderStateArray",
        "renderCallDepth",
        "renderState",
        "renderStates",
        "get",
        "dispose",
        "Material",
        "parameters",
        "BasicDepthPacking",
        "parameters",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "Material",
        "parameters",
        "parameters",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "renderer",
        "objects",
        "capabilities",
        "Frustum",
        "Vector2",
        "Vector2",
        "Vector4",
        "MeshDepthMaterial",
        "RGBADepthPacking",
        "MeshDistanceMaterial",
        "capabilities",
        "FrontSide",
        "BackSide",
        "BackSide",
        "FrontSide",
        "DoubleSide",
        "DoubleSide",
        "ShaderMaterial",
        "Vector2",
        "vertex",
        "fragment",
        "shadowMaterialVertical",
        "shadowMaterialHorizontal",
        "BufferGeometry",
        "fullScreenTri",
        "BufferAttribute",
        "Float32Array",
        "Mesh",
        "fullScreenTri",
        "shadowMaterialVertical",
        "PCFShadowMap",
        "lights",
        "scene",
        "camera",
        "scope",
        "scope",
        "scope",
        "lights",
        "renderer",
        "renderer",
        "renderer",
        "renderer",
        "_state",
        "NoBlending",
        "_state",
        "_state",
        "_state",
        "_previousType",
        "VSMShadowMap",
        "VSMShadowMap",
        "_previousType",
        "VSMShadowMap",
        "VSMShadowMap",
        "lights",
        "i",
        "il",
        "i",
        "lights",
        "i",
        "light",
        "shadow",
        "light",
        "shadow",
        "shadow",
        "_shadowMapSize",
        "shadow",
        "shadow",
        "_shadowMapSize",
        "shadowFrameExtents",
        "_viewportSize",
        "shadow",
        "_shadowMapSize",
        "_maxTextureSize",
        "_shadowMapSize",
        "_maxTextureSize",
        "_shadowMapSize",
        "_maxTextureSize",
        "_viewportSize",
        "_maxTextureSize",
        "shadowFrameExtents",
        "_shadowMapSize",
        "_viewportSize",
        "shadowFrameExtents",
        "shadow",
        "_viewportSize",
        "_shadowMapSize",
        "_maxTextureSize",
        "_viewportSize",
        "_maxTextureSize",
        "shadowFrameExtents",
        "_shadowMapSize",
        "_viewportSize",
        "shadowFrameExtents",
        "shadow",
        "_viewportSize",
        "shadow",
        "toVSM",
        "fromVSM",
        "VSMShadowMap",
        "NearestFilter",
        "NearestFilter",
        "shadow",
        "shadow",
        "shadow",
        "WebGLRenderTarget",
        "_shadowMapSize",
        "_shadowMapSize",
        "pars",
        "shadow",
        "light",
        "shadow",
        "renderer",
        "shadow",
        "renderer",
        "shadow",
        "vp",
        "viewportCount",
        "vp",
        "shadow",
        "vp",
        "_viewport",
        "_viewportSize",
        "viewport",
        "_viewportSize",
        "viewport",
        "_viewportSize",
        "viewport",
        "_viewportSize",
        "viewport",
        "_state",
        "_viewport",
        "shadow",
        "light",
        "vp",
        "_frustum",
        "shadow",
        "renderObject",
        "scene",
        "camera",
        "shadow",
        "light",
        "shadow",
        "VSMShadowMap",
        "VSMPass",
        "shadow",
        "camera",
        "shadow",
        "_previousType",
        "scope",
        "renderer",
        "currentRenderTarget",
        "activeCubeFace",
        "activeMipmapLevel",
        "shadow",
        "camera",
        "objects",
        "fullScreenMesh",
        "shadowMaterialVertical",
        "shadow",
        "shadowMaterialVertical",
        "shadow",
        "shadowMaterialHorizontal",
        "shadow",
        "shadowMaterialVertical",
        "shadowMaterialHorizontal",
        "shadow",
        "shadow",
        "WebGLRenderTarget",
        "_shadowMapSize",
        "_shadowMapSize",
        "shadowMaterialVertical",
        "shadow",
        "shadowMaterialVertical",
        "shadow",
        "shadowMaterialVertical",
        "shadow",
        "renderer",
        "shadow",
        "renderer",
        "renderer",
        "camera",
        "geometry",
        "shadowMaterialVertical",
        "fullScreenMesh",
        "shadowMaterialHorizontal",
        "shadow",
        "shadowMaterialHorizontal",
        "shadow",
        "shadowMaterialHorizontal",
        "shadow",
        "renderer",
        "shadow",
        "renderer",
        "renderer",
        "camera",
        "geometry",
        "shadowMaterialHorizontal",
        "fullScreenMesh",
        "material",
        "light",
        "light",
        "customMaterial",
        "result",
        "customMaterial",
        "result",
        "light",
        "_distanceMaterial",
        "_depthMaterial",
        "renderer",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "result",
        "material",
        "_materialCache",
        "keyA",
        "materialsForVariant",
        "materialsForVariant",
        "_materialCache",
        "keyA",
        "materialsForVariant",
        "materialsForVariant",
        "keyB",
        "cachedMaterial",
        "cachedMaterial",
        "result",
        "materialsForVariant",
        "keyB",
        "cachedMaterial",
        "material",
        "onMaterialDispose",
        "result",
        "cachedMaterial",
        "result",
        "material",
        "result",
        "material",
        "VSMShadowMap",
        "result",
        "material",
        "material",
        "material",
        "result",
        "material",
        "material",
        "shadowSide",
        "material",
        "result",
        "material",
        "result",
        "material",
        "result",
        "material",
        "result",
        "material",
        "result",
        "material",
        "result",
        "material",
        "result",
        "material",
        "result",
        "material",
        "result",
        "material",
        "result",
        "material",
        "result",
        "material",
        "light",
        "result",
        "renderer",
        "result",
        "materialProperties",
        "light",
        "result",
        "camera",
        "shadowCamera",
        "light",
        "camera",
        "visible",
        "VSMShadowMap",
        "_frustum",
        "shadowCamera",
        "objects",
        "material",
        "geometry",
        "groups",
        "k",
        "kl",
        "k",
        "groups",
        "k",
        "material",
        "group",
        "groupMaterial",
        "groupMaterial",
        "getDepthMaterial",
        "groupMaterial",
        "light",
        "renderer",
        "camera",
        "shadowCamera",
        "geometry",
        "depthMaterial",
        "group",
        "renderer",
        "shadowCamera",
        "geometry",
        "depthMaterial",
        "group",
        "renderer",
        "camera",
        "shadowCamera",
        "geometry",
        "depthMaterial",
        "group",
        "material",
        "getDepthMaterial",
        "material",
        "light",
        "renderer",
        "camera",
        "shadowCamera",
        "geometry",
        "depthMaterial",
        "renderer",
        "shadowCamera",
        "geometry",
        "depthMaterial",
        "renderer",
        "camera",
        "shadowCamera",
        "geometry",
        "depthMaterial",
        "children",
        "i",
        "l",
        "i",
        "renderObject",
        "children",
        "i",
        "camera",
        "shadowCamera",
        "light",
        "material",
        "onMaterialDispose",
        "id",
        "_materialCache",
        "_materialCache",
        "id",
        "uuid",
        "cache",
        "cache",
        "uuid",
        "shadowMaterial",
        "cache",
        "uuid",
        "gl",
        "Vector4",
        "Vector4",
        "colorMask",
        "currentColorMask",
        "colorMask",
        "locked",
        "gl",
        "colorMask",
        "colorMask",
        "colorMask",
        "colorMask",
        "currentColorMask",
        "colorMask",
        "locked",
        "r",
        "g",
        "b",
        "a",
        "premultipliedAlpha",
        "premultipliedAlpha",
        "r",
        "a",
        "g",
        "a",
        "b",
        "a",
        "color",
        "r",
        "g",
        "b",
        "a",
        "currentColorClear",
        "color",
        "gl",
        "r",
        "g",
        "b",
        "a",
        "currentColorClear",
        "color",
        "locked",
        "currentColorMask",
        "currentColorClear",
        "depthTest",
        "depthTest",
        "enable",
        "gl",
        "disable",
        "gl",
        "depthMask",
        "currentDepthMask",
        "depthMask",
        "locked",
        "gl",
        "depthMask",
        "currentDepthMask",
        "depthMask",
        "depthFunc",
        "currentDepthFunc",
        "depthFunc",
        "depthFunc",
        "NeverDepth",
        "gl",
        "gl",
        "AlwaysDepth",
        "gl",
        "gl",
        "LessDepth",
        "gl",
        "gl",
        "LessEqualDepth",
        "gl",
        "gl",
        "EqualDepth",
        "gl",
        "gl",
        "GreaterEqualDepth",
        "gl",
        "gl",
        "GreaterDepth",
        "gl",
        "gl",
        "NotEqualDepth",
        "gl",
        "gl",
        "gl",
        "gl",
        "currentDepthFunc",
        "depthFunc",
        "locked",
        "depth",
        "currentDepthClear",
        "depth",
        "gl",
        "depth",
        "currentDepthClear",
        "depth",
        "locked",
        "currentDepthMask",
        "currentDepthFunc",
        "currentDepthClear",
        "stencilTest",
        "locked",
        "stencilTest",
        "enable",
        "gl",
        "disable",
        "gl",
        "stencilMask",
        "currentStencilMask",
        "stencilMask",
        "locked",
        "gl",
        "stencilMask",
        "currentStencilMask",
        "stencilMask",
        "stencilFunc",
        "stencilRef",
        "stencilMask",
        "currentStencilFunc",
        "stencilFunc",
        "currentStencilRef",
        "stencilRef",
        "currentStencilFuncMask",
        "stencilMask",
        "gl",
        "stencilFunc",
        "stencilRef",
        "stencilMask",
        "currentStencilFunc",
        "stencilFunc",
        "currentStencilRef",
        "stencilRef",
        "currentStencilFuncMask",
        "stencilMask",
        "stencilFail",
        "stencilZFail",
        "stencilZPass",
        "currentStencilFail",
        "stencilFail",
        "currentStencilZFail",
        "stencilZFail",
        "currentStencilZPass",
        "stencilZPass",
        "gl",
        "stencilFail",
        "stencilZFail",
        "stencilZPass",
        "currentStencilFail",
        "stencilFail",
        "currentStencilZFail",
        "stencilZFail",
        "currentStencilZPass",
        "stencilZPass",
        "locked",
        "stencil",
        "currentStencilClear",
        "stencil",
        "gl",
        "stencil",
        "currentStencilClear",
        "stencil",
        "locked",
        "currentStencilMask",
        "currentStencilFunc",
        "currentStencilRef",
        "currentStencilFuncMask",
        "currentStencilFail",
        "currentStencilZFail",
        "currentStencilZPass",
        "currentStencilClear",
        "ColorBuffer",
        "DepthBuffer",
        "StencilBuffer",
        "Color",
        "gl",
        "gl",
        "gl",
        "gl",
        "glVersion",
        "version",
        "parseFloat",
        "glVersion",
        "lineWidthAvailable",
        "version",
        "glVersion",
        "version",
        "parseFloat",
        "glVersion",
        "lineWidthAvailable",
        "version",
        "gl",
        "gl",
        "gl",
        "gl",
        "Vector4",
        "scissorParam",
        "Vector4",
        "viewportParam",
        "target",
        "count",
        "dimensions",
        "Uint8Array",
        "gl",
        "gl",
        "texture",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "i",
        "count",
        "i",
        "gl",
        "gl",
        "gl",
        "target",
        "gl",
        "dimensions",
        "gl",
        "gl",
        "data",
        "gl",
        "target",
        "i",
        "gl",
        "gl",
        "gl",
        "data",
        "texture",
        "emptyTextures",
        "gl",
        "createTexture",
        "gl",
        "gl",
        "emptyTextures",
        "gl",
        "createTexture",
        "gl",
        "gl",
        "emptyTextures",
        "gl",
        "createTexture",
        "gl",
        "gl",
        "emptyTextures",
        "gl",
        "createTexture",
        "gl",
        "gl",
        "colorBuffer",
        "depthBuffer",
        "stencilBuffer",
        "enable",
        "gl",
        "depthBuffer",
        "LessEqualDepth",
        "setFlipSided",
        "setCullFace",
        "CullFaceBack",
        "enable",
        "gl",
        "setBlending",
        "NoBlending",
        "id",
        "enabledCapabilities",
        "id",
        "gl",
        "id",
        "enabledCapabilities",
        "id",
        "id",
        "enabledCapabilities",
        "id",
        "gl",
        "id",
        "enabledCapabilities",
        "id",
        "target",
        "framebuffer",
        "currentBoundFramebuffers",
        "target",
        "framebuffer",
        "gl",
        "target",
        "framebuffer",
        "currentBoundFramebuffers",
        "target",
        "framebuffer",
        "target",
        "gl",
        "currentBoundFramebuffers",
        "gl",
        "framebuffer",
        "target",
        "gl",
        "currentBoundFramebuffers",
        "gl",
        "framebuffer",
        "renderTarget",
        "framebuffer",
        "renderTarget",
        "drawBuffers",
        "currentDrawbuffers",
        "framebuffer",
        "drawBuffers",
        "drawBuffers",
        "currentDrawbuffers",
        "framebuffer",
        "drawBuffers",
        "renderTarget",
        "drawBuffers",
        "textures",
        "drawBuffers",
        "gl",
        "textures",
        "i",
        "il",
        "i",
        "drawBuffers",
        "i",
        "gl",
        "i",
        "drawBuffers",
        "textures",
        "needsUpdate",
        "drawBuffers",
        "gl",
        "drawBuffers",
        "gl",
        "needsUpdate",
        "needsUpdate",
        "gl",
        "drawBuffers",
        "program",
        "currentProgram",
        "program",
        "gl",
        "program",
        "currentProgram",
        "program",
        "AddEquation",
        "gl",
        "SubtractEquation",
        "gl",
        "ReverseSubtractEquation",
        "gl",
        "equationToGL",
        "MinEquation",
        "gl",
        "equationToGL",
        "MaxEquation",
        "gl",
        "ZeroFactor",
        "gl",
        "OneFactor",
        "gl",
        "SrcColorFactor",
        "gl",
        "SrcAlphaFactor",
        "gl",
        "SrcAlphaSaturateFactor",
        "gl",
        "DstColorFactor",
        "gl",
        "DstAlphaFactor",
        "gl",
        "OneMinusSrcColorFactor",
        "gl",
        "OneMinusSrcAlphaFactor",
        "gl",
        "OneMinusDstColorFactor",
        "gl",
        "OneMinusDstAlphaFactor",
        "gl",
        "ConstantColorFactor",
        "gl",
        "OneMinusConstantColorFactor",
        "gl",
        "ConstantAlphaFactor",
        "gl",
        "OneMinusConstantAlphaFactor",
        "gl",
        "blending",
        "blendEquation",
        "blendSrc",
        "blendDst",
        "blendEquationAlpha",
        "blendSrcAlpha",
        "blendDstAlpha",
        "blendColor",
        "blendAlpha",
        "premultipliedAlpha",
        "blending",
        "NoBlending",
        "currentBlendingEnabled",
        "disable",
        "gl",
        "currentBlendingEnabled",
        "currentBlendingEnabled",
        "enable",
        "gl",
        "currentBlendingEnabled",
        "blending",
        "CustomBlending",
        "blending",
        "currentBlending",
        "premultipliedAlpha",
        "currentPremultipledAlpha",
        "currentBlendEquation",
        "AddEquation",
        "currentBlendEquationAlpha",
        "AddEquation",
        "gl",
        "gl",
        "currentBlendEquation",
        "AddEquation",
        "currentBlendEquationAlpha",
        "AddEquation",
        "premultipliedAlpha",
        "blending",
        "NormalBlending",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "AdditiveBlending",
        "gl",
        "gl",
        "gl",
        "SubtractiveBlending",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "MultiplyBlending",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "blending",
        "blending",
        "NormalBlending",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "AdditiveBlending",
        "gl",
        "gl",
        "gl",
        "SubtractiveBlending",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "MultiplyBlending",
        "gl",
        "gl",
        "gl",
        "blending",
        "currentBlendSrc",
        "currentBlendDst",
        "currentBlendSrcAlpha",
        "currentBlendDstAlpha",
        "currentBlendColor",
        "currentBlendAlpha",
        "currentBlending",
        "blending",
        "currentPremultipledAlpha",
        "premultipliedAlpha",
        "blendEquationAlpha",
        "blendEquationAlpha",
        "blendEquation",
        "blendSrcAlpha",
        "blendSrcAlpha",
        "blendSrc",
        "blendDstAlpha",
        "blendDstAlpha",
        "blendDst",
        "blendEquation",
        "currentBlendEquation",
        "blendEquationAlpha",
        "currentBlendEquationAlpha",
        "gl",
        "equationToGL",
        "blendEquation",
        "equationToGL",
        "blendEquationAlpha",
        "currentBlendEquation",
        "blendEquation",
        "currentBlendEquationAlpha",
        "blendEquationAlpha",
        "blendSrc",
        "currentBlendSrc",
        "blendDst",
        "currentBlendDst",
        "blendSrcAlpha",
        "currentBlendSrcAlpha",
        "blendDstAlpha",
        "currentBlendDstAlpha",
        "gl",
        "factorToGL",
        "blendSrc",
        "factorToGL",
        "blendDst",
        "factorToGL",
        "blendSrcAlpha",
        "factorToGL",
        "blendDstAlpha",
        "currentBlendSrc",
        "blendSrc",
        "currentBlendDst",
        "blendDst",
        "currentBlendSrcAlpha",
        "blendSrcAlpha",
        "currentBlendDstAlpha",
        "blendDstAlpha",
        "blendColor",
        "currentBlendColor",
        "blendAlpha",
        "currentBlendAlpha",
        "gl",
        "blendColor",
        "blendColor",
        "blendColor",
        "blendAlpha",
        "currentBlendColor",
        "blendColor",
        "currentBlendAlpha",
        "blendAlpha",
        "currentBlending",
        "blending",
        "currentPremultipledAlpha",
        "material",
        "frontFaceCW",
        "material",
        "DoubleSide",
        "disable",
        "gl",
        "enable",
        "gl",
        "material",
        "BackSide",
        "frontFaceCW",
        "flipSided",
        "flipSided",
        "setFlipSided",
        "flipSided",
        "material",
        "NormalBlending",
        "material",
        "setBlending",
        "NoBlending",
        "setBlending",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "depthBuffer",
        "material",
        "depthBuffer",
        "material",
        "depthBuffer",
        "material",
        "colorBuffer",
        "material",
        "material",
        "stencilBuffer",
        "stencilWrite",
        "stencilWrite",
        "stencilBuffer",
        "material",
        "stencilBuffer",
        "material",
        "material",
        "material",
        "stencilBuffer",
        "material",
        "material",
        "material",
        "setPolygonOffset",
        "material",
        "material",
        "material",
        "material",
        "enable",
        "gl",
        "disable",
        "gl",
        "flipSided",
        "currentFlipSided",
        "flipSided",
        "flipSided",
        "gl",
        "gl",
        "gl",
        "gl",
        "currentFlipSided",
        "flipSided",
        "cullFace",
        "cullFace",
        "CullFaceNone",
        "enable",
        "gl",
        "cullFace",
        "currentCullFace",
        "cullFace",
        "CullFaceBack",
        "gl",
        "gl",
        "cullFace",
        "CullFaceFront",
        "gl",
        "gl",
        "gl",
        "gl",
        "disable",
        "gl",
        "currentCullFace",
        "cullFace",
        "width",
        "width",
        "currentLineWidth",
        "lineWidthAvailable",
        "gl",
        "width",
        "currentLineWidth",
        "width",
        "polygonOffset",
        "factor",
        "units",
        "polygonOffset",
        "enable",
        "gl",
        "currentPolygonOffsetFactor",
        "factor",
        "currentPolygonOffsetUnits",
        "units",
        "gl",
        "factor",
        "units",
        "currentPolygonOffsetFactor",
        "factor",
        "currentPolygonOffsetUnits",
        "units",
        "disable",
        "gl",
        "scissorTest",
        "scissorTest",
        "enable",
        "gl",
        "disable",
        "gl",
        "webglSlot",
        "webglSlot",
        "webglSlot",
        "gl",
        "maxTextures",
        "currentTextureSlot",
        "webglSlot",
        "gl",
        "webglSlot",
        "currentTextureSlot",
        "webglSlot",
        "webglType",
        "webglTexture",
        "webglSlot",
        "webglSlot",
        "currentTextureSlot",
        "webglSlot",
        "gl",
        "maxTextures",
        "webglSlot",
        "currentTextureSlot",
        "currentBoundTextures",
        "webglSlot",
        "boundTexture",
        "boundTexture",
        "currentBoundTextures",
        "webglSlot",
        "boundTexture",
        "boundTexture",
        "webglType",
        "boundTexture",
        "webglTexture",
        "currentTextureSlot",
        "webglSlot",
        "gl",
        "webglSlot",
        "currentTextureSlot",
        "webglSlot",
        "gl",
        "webglType",
        "webglTexture",
        "emptyTextures",
        "webglType",
        "boundTexture",
        "webglType",
        "boundTexture",
        "webglTexture",
        "currentBoundTextures",
        "currentTextureSlot",
        "boundTexture",
        "boundTexture",
        "gl",
        "boundTexture",
        "boundTexture",
        "boundTexture",
        "gl",
        "gl",
        "arguments",
        "error",
        "error",
        "gl",
        "gl",
        "arguments",
        "error",
        "error",
        "gl",
        "gl",
        "arguments",
        "error",
        "error",
        "gl",
        "gl",
        "arguments",
        "error",
        "error",
        "gl",
        "gl",
        "arguments",
        "error",
        "error",
        "gl",
        "gl",
        "arguments",
        "error",
        "error",
        "gl",
        "gl",
        "arguments",
        "error",
        "error",
        "gl",
        "gl",
        "arguments",
        "error",
        "error",
        "gl",
        "gl",
        "arguments",
        "error",
        "error",
        "gl",
        "gl",
        "arguments",
        "error",
        "error",
        "scissor",
        "currentScissor",
        "scissor",
        "gl",
        "scissor",
        "scissor",
        "scissor",
        "scissor",
        "currentScissor",
        "scissor",
        "viewport",
        "currentViewport",
        "viewport",
        "gl",
        "viewport",
        "viewport",
        "viewport",
        "viewport",
        "currentViewport",
        "viewport",
        "uniformsGroup",
        "program",
        "uboProgramMap",
        "program",
        "mapping",
        "mapping",
        "uboProgramMap",
        "program",
        "mapping",
        "mapping",
        "uniformsGroup",
        "blockIndex",
        "blockIndex",
        "gl",
        "program",
        "uniformsGroup",
        "mapping",
        "uniformsGroup",
        "blockIndex",
        "uniformsGroup",
        "program",
        "uboProgramMap",
        "program",
        "mapping",
        "uniformsGroup",
        "uboBindings",
        "program",
        "blockIndex",
        "gl",
        "program",
        "blockIndex",
        "uniformsGroup",
        "uboBindings",
        "program",
        "blockIndex",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "enabledCapabilities",
        "currentTextureSlot",
        "currentBoundTextures",
        "currentBoundFramebuffers",
        "currentDrawbuffers",
        "defaultDrawbuffers",
        "currentProgram",
        "currentBlendingEnabled",
        "currentBlending",
        "currentBlendEquation",
        "currentBlendSrc",
        "currentBlendDst",
        "currentBlendEquationAlpha",
        "currentBlendSrcAlpha",
        "currentBlendDstAlpha",
        "currentBlendColor",
        "Color",
        "currentBlendAlpha",
        "currentPremultipledAlpha",
        "currentFlipSided",
        "currentCullFace",
        "currentLineWidth",
        "currentPolygonOffsetFactor",
        "currentPolygonOffsetUnits",
        "currentScissor",
        "gl",
        "gl",
        "currentViewport",
        "gl",
        "gl",
        "colorBuffer",
        "depthBuffer",
        "stencilBuffer",
        "colorBuffer",
        "depthBuffer",
        "stencilBuffer",
        "enable",
        "disable",
        "bindFramebuffer",
        "drawBuffers",
        "useProgram",
        "setBlending",
        "setMaterial",
        "setFlipSided",
        "setCullFace",
        "setLineWidth",
        "setPolygonOffset",
        "setScissorTest",
        "activeTexture",
        "bindTexture",
        "unbindTexture",
        "compressedTexImage2D",
        "compressedTexImage3D",
        "texImage2D",
        "texImage3D",
        "updateUBOMapping",
        "uniformBlockBinding",
        "texStorage2D",
        "texStorage3D",
        "texSubImage2D",
        "texSubImage3D",
        "compressedTexSubImage2D",
        "compressedTexSubImage3D",
        "scissor",
        "viewport",
        "reset",
        "texture",
        "aspect",
        "texture",
        "texture",
        "texture",
        "texture",
        "imageAspect",
        "aspect",
        "texture",
        "texture",
        "imageAspect",
        "aspect",
        "texture",
        "texture",
        "texture",
        "texture",
        "aspect",
        "imageAspect",
        "texture",
        "texture",
        "texture",
        "texture",
        "texture",
        "texture",
        "aspect",
        "texture",
        "texture",
        "texture",
        "texture",
        "imageAspect",
        "aspect",
        "texture",
        "aspect",
        "imageAspect",
        "texture",
        "texture",
        "texture",
        "texture",
        "texture",
        "texture",
        "imageAspect",
        "aspect",
        "texture",
        "texture",
        "texture",
        "texture",
        "texture",
        "texture",
        "texture",
        "texture",
        "texture",
        "texture",
        "width",
        "height",
        "format",
        "getTextureTypeByteLength",
        "format",
        "AlphaFormat",
        "width",
        "height",
        "LuminanceFormat",
        "width",
        "height",
        "LuminanceAlphaFormat",
        "width",
        "height",
        "RedFormat",
        "width",
        "height",
        "typeByteLength",
        "typeByteLength",
        "RedIntegerFormat",
        "width",
        "height",
        "typeByteLength",
        "typeByteLength",
        "RGFormat",
        "width",
        "height",
        "typeByteLength",
        "typeByteLength",
        "RGIntegerFormat",
        "width",
        "height",
        "typeByteLength",
        "typeByteLength",
        "RGBFormat",
        "width",
        "height",
        "typeByteLength",
        "typeByteLength",
        "RGBAFormat",
        "width",
        "height",
        "typeByteLength",
        "typeByteLength",
        "RGBAIntegerFormat",
        "width",
        "height",
        "typeByteLength",
        "typeByteLength",
        "RGB_S3TC_DXT1_Format",
        "RGBA_S3TC_DXT1_Format",
        "width",
        "height",
        "RGBA_S3TC_DXT3_Format",
        "RGBA_S3TC_DXT5_Format",
        "width",
        "height",
        "RGB_PVRTC_2BPPV1_Format",
        "RGBA_PVRTC_2BPPV1_Format",
        "width",
        "height",
        "RGB_PVRTC_4BPPV1_Format",
        "RGBA_PVRTC_4BPPV1_Format",
        "width",
        "height",
        "RGB_ETC1_Format",
        "RGB_ETC2_Format",
        "width",
        "height",
        "RGBA_ETC2_EAC_Format",
        "width",
        "height",
        "RGBA_ASTC_4x4_Format",
        "width",
        "height",
        "RGBA_ASTC_5x4_Format",
        "width",
        "height",
        "RGBA_ASTC_5x5_Format",
        "width",
        "height",
        "RGBA_ASTC_6x5_Format",
        "width",
        "height",
        "RGBA_ASTC_6x6_Format",
        "width",
        "height",
        "RGBA_ASTC_8x5_Format",
        "width",
        "height",
        "RGBA_ASTC_8x6_Format",
        "width",
        "height",
        "RGBA_ASTC_8x8_Format",
        "width",
        "height",
        "RGBA_ASTC_10x5_Format",
        "width",
        "height",
        "RGBA_ASTC_10x6_Format",
        "width",
        "height",
        "RGBA_ASTC_10x8_Format",
        "width",
        "height",
        "RGBA_ASTC_10x10_Format",
        "width",
        "height",
        "RGBA_ASTC_12x10_Format",
        "width",
        "height",
        "RGBA_ASTC_12x12_Format",
        "width",
        "height",
        "RGBA_BPTC_Format",
        "RGB_BPTC_SIGNED_Format",
        "RGB_BPTC_UNSIGNED_Format",
        "width",
        "height",
        "RED_RGTC1_Format",
        "SIGNED_RED_RGTC1_Format",
        "width",
        "height",
        "RED_GREEN_RGTC2_Format",
        "SIGNED_RED_GREEN_RGTC2_Format",
        "width",
        "height",
        "format",
        "UnsignedByteType",
        "ByteType",
        "UnsignedShortType",
        "ShortType",
        "HalfFloatType",
        "UnsignedShort4444Type",
        "UnsignedShort5551Type",
        "UnsignedIntType",
        "IntType",
        "FloatType",
        "UnsignedInt5999Type",
        "_gl",
        "extensions",
        "state",
        "properties",
        "capabilities",
        "utils",
        "info",
        "extensions",
        "extensions",
        "navigator",
        "navigator",
        "Vector2",
        "useOffscreenCanvas",
        "OffscreenCanvas",
        "OffscreenCanvas",
        "err",
        "width",
        "height",
        "useOffscreenCanvas",
        "OffscreenCanvas",
        "width",
        "height",
        "createElementNS",
        "image",
        "needsNewCanvas",
        "maxSize",
        "getDimensions",
        "image",
        "dimensions",
        "maxSize",
        "dimensions",
        "maxSize",
        "scale",
        "maxSize",
        "dimensions",
        "dimensions",
        "scale",
        "HTMLImageElement",
        "image",
        "HTMLImageElement",
        "HTMLCanvasElement",
        "image",
        "HTMLCanvasElement",
        "ImageBitmap",
        "image",
        "ImageBitmap",
        "VideoFrame",
        "image",
        "VideoFrame",
        "scale",
        "dimensions",
        "scale",
        "dimensions",
        "_canvas",
        "_canvas",
        "createCanvas",
        "width",
        "height",
        "needsNewCanvas",
        "createCanvas",
        "width",
        "height",
        "_canvas",
        "canvas",
        "width",
        "canvas",
        "height",
        "canvas",
        "context",
        "image",
        "width",
        "height",
        "dimensions",
        "dimensions",
        "width",
        "height",
        "canvas",
        "image",
        "dimensions",
        "dimensions",
        "image",
        "image",
        "texture",
        "texture",
        "texture",
        "NearestFilter",
        "texture",
        "LinearFilter",
        "target",
        "_gl",
        "target",
        "internalFormatName",
        "glFormat",
        "glType",
        "colorSpace1",
        "forceLinearTransfer",
        "internalFormatName",
        "_gl",
        "internalFormatName",
        "_gl",
        "internalFormatName",
        "internalFormatName",
        "glFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glFormat",
        "_gl",
        "forceLinearTransfer",
        "LinearTransfer",
        "ColorManagement",
        "colorSpace1",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "transfer",
        "SRGBTransfer",
        "_gl",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "glType",
        "_gl",
        "internalFormat",
        "_gl",
        "internalFormat",
        "_gl",
        "internalFormat",
        "_gl",
        "internalFormat",
        "_gl",
        "internalFormat",
        "_gl",
        "internalFormat",
        "_gl",
        "internalFormat",
        "_gl",
        "extensions",
        "internalFormat",
        "useStencil",
        "depthType",
        "useStencil",
        "depthType",
        "depthType",
        "UnsignedIntType",
        "depthType",
        "UnsignedInt248Type",
        "glInternalFormat",
        "_gl",
        "depthType",
        "FloatType",
        "glInternalFormat",
        "_gl",
        "depthType",
        "UnsignedShortType",
        "glInternalFormat",
        "_gl",
        "depthType",
        "depthType",
        "UnsignedIntType",
        "depthType",
        "UnsignedInt248Type",
        "glInternalFormat",
        "_gl",
        "depthType",
        "FloatType",
        "glInternalFormat",
        "_gl",
        "depthType",
        "UnsignedShortType",
        "glInternalFormat",
        "_gl",
        "glInternalFormat",
        "texture",
        "image",
        "textureNeedsGenerateMipmaps",
        "texture",
        "texture",
        "texture",
        "NearestFilter",
        "texture",
        "LinearFilter",
        "image",
        "image",
        "texture",
        "texture",
        "texture",
        "texture",
        "texture",
        "image",
        "texture",
        "onTextureDispose",
        "deallocateTexture",
        "texture",
        "texture",
        "_videoTextures",
        "texture",
        "renderTarget",
        "onRenderTargetDispose",
        "deallocateRenderTarget",
        "renderTarget",
        "texture",
        "properties",
        "texture",
        "textureProperties",
        "texture",
        "_sources",
        "source",
        "webglTextures",
        "webglTextures",
        "textureProperties",
        "webglTexture",
        "webglTexture",
        "deleteTexture",
        "texture",
        "webglTextures",
        "_sources",
        "source",
        "properties",
        "texture",
        "texture",
        "properties",
        "texture",
        "_gl",
        "textureProperties",
        "texture",
        "_sources",
        "source",
        "webglTextures",
        "textureProperties",
        "info",
        "renderTarget",
        "properties",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "i",
        "i",
        "renderTargetProperties",
        "i",
        "level",
        "renderTargetProperties",
        "i",
        "level",
        "_gl",
        "renderTargetProperties",
        "i",
        "level",
        "_gl",
        "renderTargetProperties",
        "i",
        "renderTargetProperties",
        "_gl",
        "renderTargetProperties",
        "i",
        "renderTargetProperties",
        "level",
        "renderTargetProperties",
        "level",
        "_gl",
        "renderTargetProperties",
        "level",
        "_gl",
        "renderTargetProperties",
        "renderTargetProperties",
        "_gl",
        "renderTargetProperties",
        "renderTargetProperties",
        "_gl",
        "renderTargetProperties",
        "renderTargetProperties",
        "i",
        "renderTargetProperties",
        "i",
        "renderTargetProperties",
        "i",
        "_gl",
        "renderTargetProperties",
        "i",
        "renderTargetProperties",
        "_gl",
        "renderTargetProperties",
        "renderTarget",
        "textures",
        "i",
        "il",
        "i",
        "properties",
        "textures",
        "i",
        "attachmentProperties",
        "_gl",
        "attachmentProperties",
        "info",
        "properties",
        "textures",
        "i",
        "properties",
        "renderTarget",
        "textureUnits",
        "textureUnit",
        "capabilities",
        "textureUnit",
        "capabilities",
        "textureUnits",
        "textureUnit",
        "texture",
        "array",
        "texture",
        "array",
        "texture",
        "array",
        "texture",
        "array",
        "texture",
        "array",
        "texture",
        "array",
        "texture",
        "array",
        "texture",
        "array",
        "texture",
        "array",
        "texture",
        "array",
        "texture",
        "array",
        "texture",
        "array",
        "texture",
        "array",
        "texture",
        "array",
        "texture",
        "array",
        "texture",
        "slot",
        "properties",
        "texture",
        "texture",
        "updateVideoTexture",
        "texture",
        "texture",
        "texture",
        "textureProperties",
        "texture",
        "texture",
        "image",
        "image",
        "uploadTexture",
        "textureProperties",
        "texture",
        "slot",
        "state",
        "_gl",
        "textureProperties",
        "_gl",
        "slot",
        "texture",
        "slot",
        "properties",
        "texture",
        "texture",
        "textureProperties",
        "texture",
        "uploadTexture",
        "textureProperties",
        "texture",
        "slot",
        "state",
        "_gl",
        "textureProperties",
        "_gl",
        "slot",
        "texture",
        "slot",
        "properties",
        "texture",
        "texture",
        "textureProperties",
        "texture",
        "uploadTexture",
        "textureProperties",
        "texture",
        "slot",
        "state",
        "_gl",
        "textureProperties",
        "_gl",
        "slot",
        "texture",
        "slot",
        "properties",
        "texture",
        "texture",
        "textureProperties",
        "texture",
        "uploadCubeTexture",
        "textureProperties",
        "texture",
        "slot",
        "state",
        "_gl",
        "textureProperties",
        "_gl",
        "slot",
        "RepeatWrapping",
        "_gl",
        "ClampToEdgeWrapping",
        "_gl",
        "MirroredRepeatWrapping",
        "_gl",
        "NearestFilter",
        "_gl",
        "NearestMipmapNearestFilter",
        "_gl",
        "NearestMipmapLinearFilter",
        "_gl",
        "LinearFilter",
        "_gl",
        "LinearMipmapNearestFilter",
        "_gl",
        "LinearMipmapLinearFilter",
        "_gl",
        "NeverCompare",
        "_gl",
        "AlwaysCompare",
        "_gl",
        "LessCompare",
        "_gl",
        "LessEqualCompare",
        "_gl",
        "EqualCompare",
        "_gl",
        "GreaterEqualCompare",
        "_gl",
        "GreaterCompare",
        "_gl",
        "NotEqualCompare",
        "_gl",
        "textureType",
        "texture",
        "texture",
        "FloatType",
        "extensions",
        "texture",
        "LinearFilter",
        "texture",
        "LinearMipmapNearestFilter",
        "texture",
        "NearestMipmapLinearFilter",
        "texture",
        "LinearMipmapLinearFilter",
        "texture",
        "LinearFilter",
        "texture",
        "LinearMipmapNearestFilter",
        "texture",
        "NearestMipmapLinearFilter",
        "texture",
        "LinearMipmapLinearFilter",
        "_gl",
        "textureType",
        "_gl",
        "wrappingToGL",
        "texture",
        "_gl",
        "textureType",
        "_gl",
        "wrappingToGL",
        "texture",
        "textureType",
        "_gl",
        "textureType",
        "_gl",
        "_gl",
        "textureType",
        "_gl",
        "wrappingToGL",
        "texture",
        "_gl",
        "textureType",
        "_gl",
        "filterToGL",
        "texture",
        "_gl",
        "textureType",
        "_gl",
        "filterToGL",
        "texture",
        "texture",
        "_gl",
        "textureType",
        "_gl",
        "_gl",
        "_gl",
        "textureType",
        "_gl",
        "compareToGL",
        "texture",
        "extensions",
        "texture",
        "NearestFilter",
        "texture",
        "NearestMipmapLinearFilter",
        "texture",
        "LinearMipmapLinearFilter",
        "texture",
        "FloatType",
        "extensions",
        "texture",
        "properties",
        "texture",
        "extensions",
        "_gl",
        "textureType",
        "extension",
        "texture",
        "capabilities",
        "properties",
        "texture",
        "texture",
        "textureProperties",
        "texture",
        "textureProperties",
        "textureProperties",
        "texture",
        "onTextureDispose",
        "texture",
        "_sources",
        "source",
        "webglTextures",
        "webglTextures",
        "_sources",
        "source",
        "webglTextures",
        "getTextureCacheKey",
        "texture",
        "textureCacheKey",
        "textureProperties",
        "webglTextures",
        "textureCacheKey",
        "webglTextures",
        "textureCacheKey",
        "_gl",
        "info",
        "forceUpload",
        "webglTextures",
        "textureCacheKey",
        "webglTextures",
        "textureProperties",
        "webglTexture",
        "webglTextures",
        "textureProperties",
        "webglTexture",
        "deleteTexture",
        "texture",
        "textureProperties",
        "textureCacheKey",
        "textureProperties",
        "webglTextures",
        "textureCacheKey",
        "forceUpload",
        "textureProperties",
        "texture",
        "slot",
        "_gl",
        "texture",
        "texture",
        "textureType",
        "_gl",
        "texture",
        "textureType",
        "_gl",
        "initTexture",
        "textureProperties",
        "texture",
        "texture",
        "state",
        "textureType",
        "textureProperties",
        "_gl",
        "slot",
        "properties",
        "source",
        "source",
        "sourceProperties",
        "forceUpload",
        "state",
        "_gl",
        "slot",
        "ColorManagement",
        "ColorManagement",
        "texture",
        "NoColorSpace",
        "ColorManagement",
        "texture",
        "texture",
        "NoColorSpace",
        "workingPrimaries",
        "texturePrimaries",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "texture",
        "_gl",
        "_gl",
        "texture",
        "_gl",
        "_gl",
        "texture",
        "_gl",
        "_gl",
        "unpackConversion",
        "resizeImage",
        "texture",
        "capabilities",
        "image",
        "verifyColorSpace",
        "texture",
        "image",
        "utils",
        "texture",
        "texture",
        "utils",
        "texture",
        "getInternalFormat",
        "texture",
        "glFormat",
        "glType",
        "texture",
        "texture",
        "setTextureParameters",
        "textureType",
        "texture",
        "texture",
        "texture",
        "sourceProperties",
        "forceUpload",
        "source",
        "getMipLevels",
        "texture",
        "image",
        "texture",
        "glInternalFormat",
        "getInternalDepthFormat",
        "texture",
        "DepthStencilFormat",
        "texture",
        "allocateMemory",
        "useTexStorage",
        "state",
        "_gl",
        "glInternalFormat",
        "image",
        "image",
        "state",
        "_gl",
        "glInternalFormat",
        "image",
        "image",
        "glFormat",
        "glType",
        "texture",
        "mipmaps",
        "useTexStorage",
        "allocateMemory",
        "state",
        "_gl",
        "levels",
        "glInternalFormat",
        "mipmaps",
        "mipmaps",
        "mipmaps",
        "i",
        "il",
        "i",
        "mipmap",
        "mipmaps",
        "i",
        "useTexStorage",
        "dataReady",
        "state",
        "_gl",
        "i",
        "mipmap",
        "mipmap",
        "glFormat",
        "glType",
        "mipmap",
        "state",
        "_gl",
        "i",
        "glInternalFormat",
        "mipmap",
        "mipmap",
        "glFormat",
        "glType",
        "mipmap",
        "texture",
        "useTexStorage",
        "allocateMemory",
        "state",
        "_gl",
        "levels",
        "glInternalFormat",
        "image",
        "image",
        "dataReady",
        "state",
        "_gl",
        "image",
        "image",
        "glFormat",
        "glType",
        "image",
        "state",
        "_gl",
        "glInternalFormat",
        "image",
        "image",
        "glFormat",
        "glType",
        "image",
        "texture",
        "texture",
        "useTexStorage",
        "allocateMemory",
        "state",
        "_gl",
        "levels",
        "glInternalFormat",
        "mipmaps",
        "mipmaps",
        "image",
        "mipmaps",
        "i",
        "il",
        "i",
        "mipmap",
        "mipmaps",
        "i",
        "texture",
        "RGBAFormat",
        "glFormat",
        "useTexStorage",
        "dataReady",
        "texture",
        "getByteLength",
        "mipmap",
        "mipmap",
        "texture",
        "texture",
        "layerIndex",
        "texture",
        "mipmap",
        "layerIndex",
        "layerByteLength",
        "mipmap",
        "layerIndex",
        "layerByteLength",
        "mipmap",
        "state",
        "_gl",
        "i",
        "layerIndex",
        "mipmap",
        "mipmap",
        "glFormat",
        "layerData",
        "texture",
        "state",
        "_gl",
        "i",
        "mipmap",
        "mipmap",
        "image",
        "glFormat",
        "mipmap",
        "state",
        "_gl",
        "i",
        "glInternalFormat",
        "mipmap",
        "mipmap",
        "image",
        "mipmap",
        "useTexStorage",
        "dataReady",
        "state",
        "_gl",
        "i",
        "mipmap",
        "mipmap",
        "image",
        "glFormat",
        "glType",
        "mipmap",
        "state",
        "_gl",
        "i",
        "glInternalFormat",
        "mipmap",
        "mipmap",
        "image",
        "glFormat",
        "glType",
        "mipmap",
        "useTexStorage",
        "allocateMemory",
        "state",
        "_gl",
        "levels",
        "glInternalFormat",
        "mipmaps",
        "mipmaps",
        "mipmaps",
        "i",
        "il",
        "i",
        "mipmap",
        "mipmaps",
        "i",
        "texture",
        "RGBAFormat",
        "glFormat",
        "useTexStorage",
        "dataReady",
        "state",
        "_gl",
        "i",
        "mipmap",
        "mipmap",
        "glFormat",
        "mipmap",
        "state",
        "_gl",
        "i",
        "glInternalFormat",
        "mipmap",
        "mipmap",
        "mipmap",
        "useTexStorage",
        "dataReady",
        "state",
        "_gl",
        "i",
        "mipmap",
        "mipmap",
        "glFormat",
        "glType",
        "mipmap",
        "state",
        "_gl",
        "i",
        "glInternalFormat",
        "mipmap",
        "mipmap",
        "glFormat",
        "glType",
        "mipmap",
        "texture",
        "useTexStorage",
        "allocateMemory",
        "state",
        "_gl",
        "levels",
        "glInternalFormat",
        "image",
        "image",
        "image",
        "dataReady",
        "texture",
        "getByteLength",
        "image",
        "image",
        "texture",
        "texture",
        "layerIndex",
        "texture",
        "image",
        "layerIndex",
        "layerByteLength",
        "image",
        "layerIndex",
        "layerByteLength",
        "image",
        "state",
        "_gl",
        "layerIndex",
        "image",
        "image",
        "glFormat",
        "glType",
        "layerData",
        "texture",
        "state",
        "_gl",
        "image",
        "image",
        "image",
        "glFormat",
        "glType",
        "image",
        "state",
        "_gl",
        "glInternalFormat",
        "image",
        "image",
        "image",
        "glFormat",
        "glType",
        "image",
        "texture",
        "useTexStorage",
        "allocateMemory",
        "state",
        "_gl",
        "levels",
        "glInternalFormat",
        "image",
        "image",
        "image",
        "dataReady",
        "state",
        "_gl",
        "image",
        "image",
        "image",
        "glFormat",
        "glType",
        "image",
        "state",
        "_gl",
        "glInternalFormat",
        "image",
        "image",
        "image",
        "glFormat",
        "glType",
        "image",
        "texture",
        "allocateMemory",
        "useTexStorage",
        "state",
        "_gl",
        "levels",
        "glInternalFormat",
        "image",
        "image",
        "image",
        "image",
        "i",
        "levels",
        "i",
        "state",
        "_gl",
        "i",
        "glInternalFormat",
        "width",
        "height",
        "glFormat",
        "glType",
        "width",
        "height",
        "mipmaps",
        "useTexStorage",
        "allocateMemory",
        "getDimensions",
        "mipmaps",
        "state",
        "_gl",
        "levels",
        "glInternalFormat",
        "dimensions",
        "dimensions",
        "mipmaps",
        "i",
        "il",
        "i",
        "mipmap",
        "mipmaps",
        "i",
        "useTexStorage",
        "dataReady",
        "state",
        "_gl",
        "i",
        "glFormat",
        "glType",
        "mipmap",
        "state",
        "_gl",
        "i",
        "glInternalFormat",
        "glFormat",
        "glType",
        "mipmap",
        "texture",
        "useTexStorage",
        "allocateMemory",
        "getDimensions",
        "image",
        "state",
        "_gl",
        "levels",
        "glInternalFormat",
        "dimensions",
        "dimensions",
        "dataReady",
        "state",
        "_gl",
        "glFormat",
        "glType",
        "image",
        "state",
        "_gl",
        "glInternalFormat",
        "glFormat",
        "glType",
        "image",
        "textureNeedsGenerateMipmaps",
        "texture",
        "generateMipmap",
        "textureType",
        "sourceProperties",
        "source",
        "texture",
        "texture",
        "texture",
        "textureProperties",
        "texture",
        "textureProperties",
        "texture",
        "slot",
        "texture",
        "initTexture",
        "textureProperties",
        "texture",
        "texture",
        "state",
        "_gl",
        "textureProperties",
        "_gl",
        "slot",
        "properties",
        "source",
        "source",
        "sourceProperties",
        "forceUpload",
        "state",
        "_gl",
        "slot",
        "ColorManagement",
        "ColorManagement",
        "texture",
        "NoColorSpace",
        "ColorManagement",
        "texture",
        "texture",
        "NoColorSpace",
        "workingPrimaries",
        "texturePrimaries",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "texture",
        "_gl",
        "_gl",
        "texture",
        "_gl",
        "_gl",
        "texture",
        "_gl",
        "_gl",
        "unpackConversion",
        "texture",
        "texture",
        "texture",
        "texture",
        "i",
        "i",
        "isCompressed",
        "isDataTexture",
        "cubeImage",
        "i",
        "resizeImage",
        "texture",
        "i",
        "capabilities",
        "cubeImage",
        "i",
        "isDataTexture",
        "texture",
        "i",
        "texture",
        "i",
        "cubeImage",
        "i",
        "verifyColorSpace",
        "texture",
        "cubeImage",
        "i",
        "cubeImage",
        "utils",
        "texture",
        "texture",
        "utils",
        "texture",
        "getInternalFormat",
        "texture",
        "glFormat",
        "glType",
        "texture",
        "texture",
        "sourceProperties",
        "forceUpload",
        "source",
        "getMipLevels",
        "texture",
        "image",
        "setTextureParameters",
        "_gl",
        "texture",
        "isCompressed",
        "useTexStorage",
        "allocateMemory",
        "state",
        "_gl",
        "levels",
        "glInternalFormat",
        "image",
        "image",
        "i",
        "i",
        "mipmaps",
        "cubeImage",
        "i",
        "j",
        "mipmaps",
        "j",
        "mipmaps",
        "j",
        "texture",
        "RGBAFormat",
        "glFormat",
        "useTexStorage",
        "dataReady",
        "state",
        "_gl",
        "i",
        "j",
        "mipmap",
        "mipmap",
        "glFormat",
        "mipmap",
        "state",
        "_gl",
        "i",
        "j",
        "glInternalFormat",
        "mipmap",
        "mipmap",
        "mipmap",
        "useTexStorage",
        "dataReady",
        "state",
        "_gl",
        "i",
        "j",
        "mipmap",
        "mipmap",
        "glFormat",
        "glType",
        "mipmap",
        "state",
        "_gl",
        "i",
        "j",
        "glInternalFormat",
        "mipmap",
        "mipmap",
        "glFormat",
        "glType",
        "mipmap",
        "mipmaps",
        "texture",
        "useTexStorage",
        "allocateMemory",
        "mipmaps",
        "levels",
        "getDimensions",
        "cubeImage",
        "state",
        "_gl",
        "levels",
        "glInternalFormat",
        "dimensions",
        "dimensions",
        "i",
        "i",
        "isDataTexture",
        "useTexStorage",
        "dataReady",
        "state",
        "_gl",
        "i",
        "cubeImage",
        "i",
        "cubeImage",
        "i",
        "glFormat",
        "glType",
        "cubeImage",
        "i",
        "state",
        "_gl",
        "i",
        "glInternalFormat",
        "cubeImage",
        "i",
        "cubeImage",
        "i",
        "glFormat",
        "glType",
        "cubeImage",
        "i",
        "j",
        "mipmaps",
        "j",
        "mipmaps",
        "j",
        "mipmap",
        "i",
        "useTexStorage",
        "dataReady",
        "state",
        "_gl",
        "i",
        "j",
        "mipmapImage",
        "mipmapImage",
        "glFormat",
        "glType",
        "mipmapImage",
        "state",
        "_gl",
        "i",
        "j",
        "glInternalFormat",
        "mipmapImage",
        "mipmapImage",
        "glFormat",
        "glType",
        "mipmapImage",
        "useTexStorage",
        "dataReady",
        "state",
        "_gl",
        "i",
        "glFormat",
        "glType",
        "cubeImage",
        "i",
        "state",
        "_gl",
        "i",
        "glInternalFormat",
        "glFormat",
        "glType",
        "cubeImage",
        "i",
        "j",
        "mipmaps",
        "j",
        "mipmaps",
        "j",
        "useTexStorage",
        "dataReady",
        "state",
        "_gl",
        "i",
        "j",
        "glFormat",
        "glType",
        "mipmap",
        "i",
        "state",
        "_gl",
        "i",
        "j",
        "glInternalFormat",
        "glFormat",
        "glType",
        "mipmap",
        "i",
        "textureNeedsGenerateMipmaps",
        "texture",
        "generateMipmap",
        "_gl",
        "sourceProperties",
        "source",
        "texture",
        "texture",
        "texture",
        "textureProperties",
        "texture",
        "framebuffer",
        "renderTarget",
        "texture",
        "attachment",
        "textureTarget",
        "level",
        "utils",
        "texture",
        "texture",
        "utils",
        "texture",
        "getInternalFormat",
        "texture",
        "glFormat",
        "glType",
        "texture",
        "properties",
        "renderTarget",
        "renderTargetProperties",
        "renderTarget",
        "level",
        "renderTarget",
        "level",
        "textureTarget",
        "_gl",
        "textureTarget",
        "_gl",
        "state",
        "textureTarget",
        "level",
        "glInternalFormat",
        "width",
        "height",
        "renderTarget",
        "glFormat",
        "glType",
        "state",
        "textureTarget",
        "level",
        "glInternalFormat",
        "width",
        "height",
        "glFormat",
        "glType",
        "state",
        "_gl",
        "framebuffer",
        "useMultisampledRTT",
        "renderTarget",
        "multisampledRTTExt",
        "_gl",
        "attachment",
        "textureTarget",
        "properties",
        "texture",
        "getRenderTargetSamples",
        "renderTarget",
        "textureTarget",
        "_gl",
        "textureTarget",
        "_gl",
        "textureTarget",
        "_gl",
        "_gl",
        "_gl",
        "attachment",
        "textureTarget",
        "properties",
        "texture",
        "level",
        "state",
        "_gl",
        "renderbuffer",
        "renderTarget",
        "isMultisample",
        "_gl",
        "_gl",
        "renderbuffer",
        "renderTarget",
        "renderTarget",
        "depthTexture",
        "depthTexture",
        "depthTexture",
        "getInternalDepthFormat",
        "renderTarget",
        "depthType",
        "renderTarget",
        "_gl",
        "_gl",
        "getRenderTargetSamples",
        "renderTarget",
        "useMultisampledRTT",
        "renderTarget",
        "isUseMultisampledRTT",
        "multisampledRTTExt",
        "_gl",
        "samples",
        "glInternalFormat",
        "renderTarget",
        "renderTarget",
        "isMultisample",
        "_gl",
        "_gl",
        "samples",
        "glInternalFormat",
        "renderTarget",
        "renderTarget",
        "_gl",
        "_gl",
        "glInternalFormat",
        "renderTarget",
        "renderTarget",
        "_gl",
        "_gl",
        "glAttachmentType",
        "_gl",
        "renderbuffer",
        "renderTarget",
        "i",
        "textures",
        "i",
        "textures",
        "i",
        "utils",
        "texture",
        "texture",
        "utils",
        "texture",
        "getInternalFormat",
        "texture",
        "glFormat",
        "glType",
        "texture",
        "getRenderTargetSamples",
        "renderTarget",
        "isMultisample",
        "useMultisampledRTT",
        "renderTarget",
        "_gl",
        "_gl",
        "samples",
        "glInternalFormat",
        "renderTarget",
        "renderTarget",
        "useMultisampledRTT",
        "renderTarget",
        "multisampledRTTExt",
        "_gl",
        "samples",
        "glInternalFormat",
        "renderTarget",
        "renderTarget",
        "_gl",
        "_gl",
        "glInternalFormat",
        "renderTarget",
        "renderTarget",
        "_gl",
        "_gl",
        "framebuffer",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "isCube",
        "state",
        "_gl",
        "framebuffer",
        "renderTarget",
        "renderTarget",
        "properties",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "setTexture2D",
        "renderTarget",
        "properties",
        "renderTarget",
        "getRenderTargetSamples",
        "renderTarget",
        "renderTarget",
        "DepthFormat",
        "useMultisampledRTT",
        "renderTarget",
        "multisampledRTTExt",
        "_gl",
        "_gl",
        "_gl",
        "webglDepthTexture",
        "samples",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "webglDepthTexture",
        "renderTarget",
        "DepthStencilFormat",
        "useMultisampledRTT",
        "renderTarget",
        "multisampledRTTExt",
        "_gl",
        "_gl",
        "_gl",
        "webglDepthTexture",
        "samples",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "webglDepthTexture",
        "renderTarget",
        "properties",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "renderTargetProperties",
        "isCube",
        "setupDepthTexture",
        "renderTargetProperties",
        "renderTarget",
        "isCube",
        "renderTargetProperties",
        "i",
        "i",
        "state",
        "_gl",
        "renderTargetProperties",
        "i",
        "renderTargetProperties",
        "i",
        "_gl",
        "setupRenderBufferStorage",
        "renderTargetProperties",
        "i",
        "renderTarget",
        "state",
        "_gl",
        "renderTargetProperties",
        "renderTargetProperties",
        "_gl",
        "setupRenderBufferStorage",
        "renderTargetProperties",
        "renderTarget",
        "state",
        "_gl",
        "renderTarget",
        "colorTexture",
        "depthTexture",
        "properties",
        "renderTarget",
        "colorTexture",
        "setupFrameBufferTexture",
        "renderTargetProperties",
        "renderTarget",
        "renderTarget",
        "_gl",
        "_gl",
        "depthTexture",
        "setupDepthRenderbuffer",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "properties",
        "renderTarget",
        "properties",
        "texture",
        "renderTarget",
        "onRenderTargetDispose",
        "renderTarget",
        "renderTarget",
        "textures",
        "isMultipleRenderTargets",
        "textureProperties",
        "textureProperties",
        "_gl",
        "textureProperties",
        "texture",
        "info",
        "isCube",
        "renderTargetProperties",
        "i",
        "i",
        "texture",
        "texture",
        "renderTargetProperties",
        "i",
        "level",
        "texture",
        "level",
        "renderTargetProperties",
        "i",
        "level",
        "_gl",
        "renderTargetProperties",
        "i",
        "_gl",
        "texture",
        "texture",
        "renderTargetProperties",
        "level",
        "texture",
        "level",
        "renderTargetProperties",
        "level",
        "_gl",
        "renderTargetProperties",
        "_gl",
        "isMultipleRenderTargets",
        "textures",
        "i",
        "il",
        "i",
        "properties",
        "textures",
        "i",
        "attachmentProperties",
        "attachmentProperties",
        "_gl",
        "info",
        "renderTarget",
        "useMultisampledRTT",
        "renderTarget",
        "renderTargetProperties",
        "_gl",
        "renderTargetProperties",
        "state",
        "_gl",
        "renderTargetProperties",
        "i",
        "textures",
        "i",
        "textures",
        "i",
        "renderTargetProperties",
        "i",
        "_gl",
        "_gl",
        "_gl",
        "renderTargetProperties",
        "i",
        "utils",
        "texture",
        "texture",
        "utils",
        "texture",
        "getInternalFormat",
        "texture",
        "glFormat",
        "glType",
        "texture",
        "renderTarget",
        "getRenderTargetSamples",
        "renderTarget",
        "_gl",
        "_gl",
        "samples",
        "glInternalFormat",
        "renderTarget",
        "renderTarget",
        "_gl",
        "_gl",
        "_gl",
        "i",
        "_gl",
        "renderTargetProperties",
        "i",
        "_gl",
        "_gl",
        "renderTarget",
        "renderTargetProperties",
        "_gl",
        "setupRenderBufferStorage",
        "renderTargetProperties",
        "renderTarget",
        "state",
        "_gl",
        "isCube",
        "state",
        "_gl",
        "textureProperties",
        "setTextureParameters",
        "_gl",
        "texture",
        "i",
        "i",
        "texture",
        "texture",
        "level",
        "texture",
        "level",
        "setupFrameBufferTexture",
        "renderTargetProperties",
        "i",
        "level",
        "renderTarget",
        "texture",
        "_gl",
        "_gl",
        "i",
        "level",
        "setupFrameBufferTexture",
        "renderTargetProperties",
        "i",
        "renderTarget",
        "texture",
        "_gl",
        "_gl",
        "i",
        "textureNeedsGenerateMipmaps",
        "texture",
        "generateMipmap",
        "_gl",
        "state",
        "isMultipleRenderTargets",
        "textures",
        "i",
        "il",
        "i",
        "textures",
        "i",
        "properties",
        "attachment",
        "state",
        "_gl",
        "attachmentProperties",
        "setTextureParameters",
        "_gl",
        "attachment",
        "setupFrameBufferTexture",
        "renderTargetProperties",
        "renderTarget",
        "attachment",
        "_gl",
        "i",
        "_gl",
        "textureNeedsGenerateMipmaps",
        "attachment",
        "generateMipmap",
        "_gl",
        "state",
        "_gl",
        "renderTarget",
        "renderTarget",
        "glTextureType",
        "renderTarget",
        "_gl",
        "_gl",
        "state",
        "glTextureType",
        "textureProperties",
        "setTextureParameters",
        "glTextureType",
        "texture",
        "texture",
        "texture",
        "level",
        "texture",
        "level",
        "setupFrameBufferTexture",
        "renderTargetProperties",
        "level",
        "renderTarget",
        "texture",
        "_gl",
        "glTextureType",
        "level",
        "setupFrameBufferTexture",
        "renderTargetProperties",
        "renderTarget",
        "texture",
        "_gl",
        "glTextureType",
        "textureNeedsGenerateMipmaps",
        "texture",
        "generateMipmap",
        "glTextureType",
        "state",
        "renderTarget",
        "setupDepthRenderbuffer",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "textures",
        "i",
        "il",
        "i",
        "textures",
        "i",
        "textureNeedsGenerateMipmaps",
        "texture",
        "renderTarget",
        "_gl",
        "_gl",
        "properties",
        "texture",
        "state",
        "target",
        "webglTexture",
        "generateMipmap",
        "target",
        "state",
        "renderTarget",
        "renderTarget",
        "useMultisampledRTT",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "_gl",
        "renderTarget",
        "_gl",
        "_gl",
        "properties",
        "renderTarget",
        "textures",
        "isMultipleRenderTargets",
        "i",
        "textures",
        "i",
        "state",
        "_gl",
        "renderTargetProperties",
        "_gl",
        "_gl",
        "_gl",
        "i",
        "_gl",
        "state",
        "_gl",
        "renderTargetProperties",
        "_gl",
        "_gl",
        "_gl",
        "i",
        "_gl",
        "state",
        "_gl",
        "renderTargetProperties",
        "state",
        "_gl",
        "renderTargetProperties",
        "i",
        "textures",
        "i",
        "renderTarget",
        "renderTarget",
        "mask",
        "_gl",
        "renderTarget",
        "renderTarget",
        "mask",
        "_gl",
        "isMultipleRenderTargets",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "renderTargetProperties",
        "i",
        "properties",
        "textures",
        "i",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "webglTexture",
        "_gl",
        "width",
        "height",
        "width",
        "height",
        "mask",
        "_gl",
        "supportsInvalidateFramebuffer",
        "invalidationArrayRead",
        "invalidationArrayDraw",
        "invalidationArrayRead",
        "_gl",
        "i",
        "renderTarget",
        "renderTarget",
        "invalidationArrayRead",
        "depthStyle",
        "invalidationArrayDraw",
        "depthStyle",
        "_gl",
        "_gl",
        "invalidationArrayDraw",
        "_gl",
        "_gl",
        "invalidationArrayRead",
        "state",
        "_gl",
        "state",
        "_gl",
        "isMultipleRenderTargets",
        "i",
        "textures",
        "i",
        "state",
        "_gl",
        "renderTargetProperties",
        "_gl",
        "_gl",
        "_gl",
        "i",
        "_gl",
        "renderTargetProperties",
        "i",
        "properties",
        "textures",
        "i",
        "state",
        "_gl",
        "renderTargetProperties",
        "_gl",
        "_gl",
        "_gl",
        "i",
        "_gl",
        "webglTexture",
        "state",
        "_gl",
        "renderTargetProperties",
        "renderTarget",
        "renderTarget",
        "supportsInvalidateFramebuffer",
        "renderTarget",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "depthStyle",
        "renderTarget",
        "capabilities",
        "renderTarget",
        "renderTarget",
        "properties",
        "renderTarget",
        "renderTarget",
        "extensions",
        "renderTargetProperties",
        "texture",
        "info",
        "_videoTextures",
        "texture",
        "frame",
        "_videoTextures",
        "texture",
        "frame",
        "texture",
        "texture",
        "image",
        "texture",
        "texture",
        "texture",
        "texture",
        "texture",
        "image",
        "colorSpace1",
        "LinearSRGBColorSpace",
        "colorSpace1",
        "NoColorSpace",
        "ColorManagement",
        "colorSpace1",
        "SRGBTransfer",
        "format",
        "RGBAFormat",
        "UnsignedByteType",
        "colorSpace1",
        "image",
        "image",
        "HTMLImageElement",
        "image",
        "HTMLImageElement",
        "_imageDimensions",
        "image",
        "image",
        "_imageDimensions",
        "image",
        "image",
        "VideoFrame",
        "image",
        "VideoFrame",
        "_imageDimensions",
        "image",
        "_imageDimensions",
        "image",
        "_imageDimensions",
        "image",
        "_imageDimensions",
        "image",
        "_imageDimensions",
        "allocateTextureUnit",
        "resetTextureUnits",
        "setTexture2D",
        "setTexture2DArray",
        "setTexture3D",
        "setTextureCube",
        "rebindTextures",
        "setupRenderTarget",
        "updateRenderTargetMipmap",
        "updateMultisampleRenderTarget",
        "setupDepthRenderbuffer",
        "setupFrameBufferTexture",
        "useMultisampledRTT",
        "gl",
        "extensions",
        "p",
        "colorSpace1",
        "NoColorSpace",
        "ColorManagement",
        "colorSpace1",
        "p",
        "UnsignedByteType",
        "gl",
        "p",
        "UnsignedShort4444Type",
        "gl",
        "p",
        "UnsignedShort5551Type",
        "gl",
        "p",
        "UnsignedInt5999Type",
        "gl",
        "p",
        "ByteType",
        "gl",
        "p",
        "ShortType",
        "gl",
        "p",
        "UnsignedShortType",
        "gl",
        "p",
        "IntType",
        "gl",
        "p",
        "UnsignedIntType",
        "gl",
        "p",
        "FloatType",
        "gl",
        "p",
        "HalfFloatType",
        "gl",
        "p",
        "AlphaFormat",
        "gl",
        "p",
        "RGBFormat",
        "gl",
        "p",
        "RGBAFormat",
        "gl",
        "p",
        "LuminanceFormat",
        "gl",
        "p",
        "LuminanceAlphaFormat",
        "gl",
        "p",
        "DepthFormat",
        "gl",
        "p",
        "DepthStencilFormat",
        "gl",
        "p",
        "RedFormat",
        "gl",
        "p",
        "RedIntegerFormat",
        "gl",
        "p",
        "RGFormat",
        "gl",
        "p",
        "RGIntegerFormat",
        "gl",
        "p",
        "RGBAIntegerFormat",
        "gl",
        "p",
        "RGB_S3TC_DXT1_Format",
        "p",
        "RGBA_S3TC_DXT1_Format",
        "p",
        "RGBA_S3TC_DXT3_Format",
        "p",
        "RGBA_S3TC_DXT5_Format",
        "transfer",
        "SRGBTransfer",
        "extension",
        "extensions",
        "extension",
        "p",
        "RGB_S3TC_DXT1_Format",
        "extension",
        "p",
        "RGBA_S3TC_DXT1_Format",
        "extension",
        "p",
        "RGBA_S3TC_DXT3_Format",
        "extension",
        "p",
        "RGBA_S3TC_DXT5_Format",
        "extension",
        "extension",
        "extensions",
        "extension",
        "p",
        "RGB_S3TC_DXT1_Format",
        "extension",
        "p",
        "RGBA_S3TC_DXT1_Format",
        "extension",
        "p",
        "RGBA_S3TC_DXT3_Format",
        "extension",
        "p",
        "RGBA_S3TC_DXT5_Format",
        "extension",
        "p",
        "RGB_PVRTC_4BPPV1_Format",
        "p",
        "RGB_PVRTC_2BPPV1_Format",
        "p",
        "RGBA_PVRTC_4BPPV1_Format",
        "p",
        "RGBA_PVRTC_2BPPV1_Format",
        "extension",
        "extensions",
        "extension",
        "p",
        "RGB_PVRTC_4BPPV1_Format",
        "extension",
        "p",
        "RGB_PVRTC_2BPPV1_Format",
        "extension",
        "p",
        "RGBA_PVRTC_4BPPV1_Format",
        "extension",
        "p",
        "RGBA_PVRTC_2BPPV1_Format",
        "extension",
        "p",
        "RGB_ETC1_Format",
        "p",
        "RGB_ETC2_Format",
        "p",
        "RGBA_ETC2_EAC_Format",
        "extension",
        "extensions",
        "extension",
        "p",
        "RGB_ETC1_Format",
        "p",
        "RGB_ETC2_Format",
        "transfer",
        "SRGBTransfer",
        "extension",
        "extension",
        "p",
        "RGBA_ETC2_EAC_Format",
        "transfer",
        "SRGBTransfer",
        "extension",
        "extension",
        "p",
        "RGBA_ASTC_4x4_Format",
        "p",
        "RGBA_ASTC_5x4_Format",
        "p",
        "RGBA_ASTC_5x5_Format",
        "p",
        "RGBA_ASTC_6x5_Format",
        "p",
        "RGBA_ASTC_6x6_Format",
        "p",
        "RGBA_ASTC_8x5_Format",
        "p",
        "RGBA_ASTC_8x6_Format",
        "p",
        "RGBA_ASTC_8x8_Format",
        "p",
        "RGBA_ASTC_10x5_Format",
        "p",
        "RGBA_ASTC_10x6_Format",
        "p",
        "RGBA_ASTC_10x8_Format",
        "p",
        "RGBA_ASTC_10x10_Format",
        "p",
        "RGBA_ASTC_12x10_Format",
        "p",
        "RGBA_ASTC_12x12_Format",
        "extension",
        "extensions",
        "extension",
        "p",
        "RGBA_ASTC_4x4_Format",
        "transfer",
        "SRGBTransfer",
        "extension",
        "extension",
        "p",
        "RGBA_ASTC_5x4_Format",
        "transfer",
        "SRGBTransfer",
        "extension",
        "extension",
        "p",
        "RGBA_ASTC_5x5_Format",
        "transfer",
        "SRGBTransfer",
        "extension",
        "extension",
        "p",
        "RGBA_ASTC_6x5_Format",
        "transfer",
        "SRGBTransfer",
        "extension",
        "extension",
        "p",
        "RGBA_ASTC_6x6_Format",
        "transfer",
        "SRGBTransfer",
        "extension",
        "extension",
        "p",
        "RGBA_ASTC_8x5_Format",
        "transfer",
        "SRGBTransfer",
        "extension",
        "extension",
        "p",
        "RGBA_ASTC_8x6_Format",
        "transfer",
        "SRGBTransfer",
        "extension",
        "extension",
        "p",
        "RGBA_ASTC_8x8_Format",
        "transfer",
        "SRGBTransfer",
        "extension",
        "extension",
        "p",
        "RGBA_ASTC_10x5_Format",
        "transfer",
        "SRGBTransfer",
        "extension",
        "extension",
        "p",
        "RGBA_ASTC_10x6_Format",
        "transfer",
        "SRGBTransfer",
        "extension",
        "extension",
        "p",
        "RGBA_ASTC_10x8_Format",
        "transfer",
        "SRGBTransfer",
        "extension",
        "extension",
        "p",
        "RGBA_ASTC_10x10_Format",
        "transfer",
        "SRGBTransfer",
        "extension",
        "extension",
        "p",
        "RGBA_ASTC_12x10_Format",
        "transfer",
        "SRGBTransfer",
        "extension",
        "extension",
        "p",
        "RGBA_ASTC_12x12_Format",
        "transfer",
        "SRGBTransfer",
        "extension",
        "extension",
        "p",
        "RGBA_BPTC_Format",
        "p",
        "RGB_BPTC_SIGNED_Format",
        "p",
        "RGB_BPTC_UNSIGNED_Format",
        "extension",
        "extensions",
        "extension",
        "p",
        "RGBA_BPTC_Format",
        "transfer",
        "SRGBTransfer",
        "extension",
        "extension",
        "p",
        "RGB_BPTC_SIGNED_Format",
        "extension",
        "p",
        "RGB_BPTC_UNSIGNED_Format",
        "extension",
        "p",
        "RED_RGTC1_Format",
        "p",
        "SIGNED_RED_RGTC1_Format",
        "p",
        "RED_GREEN_RGTC2_Format",
        "p",
        "SIGNED_RED_GREEN_RGTC2_Format",
        "extension",
        "extensions",
        "extension",
        "p",
        "RGBA_BPTC_Format",
        "extension",
        "p",
        "SIGNED_RED_RGTC1_Format",
        "extension",
        "p",
        "RED_GREEN_RGTC2_Format",
        "extension",
        "p",
        "SIGNED_RED_GREEN_RGTC2_Format",
        "extension",
        "p",
        "UnsignedInt248Type",
        "gl",
        "gl",
        "p",
        "gl",
        "p",
        "convert",
        "PerspectiveCamera",
        "array",
        "array",
        "Object3D",
        "Group",
        "Group",
        "Vector3",
        "Vector3",
        "Group",
        "Vector3",
        "Vector3",
        "inputSource",
        "inputSource",
        "inputSource",
        "hand",
        "inputjoint",
        "inputSource",
        "hand",
        "inputjoint",
        "inputSource",
        "inputSource",
        "inputSource",
        "inputSource",
        "frame",
        "referenceSpace",
        "inputSource",
        "frame",
        "hand",
        "inputSource",
        "handPose",
        "inputjoint",
        "inputSource",
        "frame",
        "inputjoint",
        "referenceSpace",
        "hand",
        "inputjoint",
        "jointPose",
        "joint",
        "jointPose",
        "joint",
        "joint",
        "joint",
        "joint",
        "joint",
        "joint",
        "jointPose",
        "joint",
        "jointPose",
        "hand",
        "hand",
        "indexTip",
        "thumbTip",
        "hand",
        "distance",
        "distanceToPinch",
        "threshold",
        "hand",
        "inputSource",
        "hand",
        "distance",
        "distanceToPinch",
        "threshold",
        "hand",
        "inputSource",
        "grip",
        "inputSource",
        "gripPose",
        "frame",
        "inputSource",
        "referenceSpace",
        "gripPose",
        "grip",
        "gripPose",
        "grip",
        "grip",
        "grip",
        "grip",
        "grip",
        "gripPose",
        "grip",
        "grip",
        "gripPose",
        "grip",
        "gripPose",
        "grip",
        "grip",
        "gripPose",
        "grip",
        "targetRay",
        "inputPose",
        "frame",
        "inputSource",
        "referenceSpace",
        "inputPose",
        "gripPose",
        "inputPose",
        "gripPose",
        "inputPose",
        "targetRay",
        "inputPose",
        "targetRay",
        "targetRay",
        "targetRay",
        "targetRay",
        "targetRay",
        "inputPose",
        "targetRay",
        "targetRay",
        "inputPose",
        "targetRay",
        "inputPose",
        "targetRay",
        "targetRay",
        "inputPose",
        "targetRay",
        "_moveEvent",
        "targetRay",
        "targetRay",
        "inputPose",
        "grip",
        "grip",
        "gripPose",
        "hand",
        "hand",
        "handPose",
        "hand",
        "inputjoint",
        "hand",
        "inputjoint",
        "Group",
        "joint",
        "joint",
        "hand",
        "inputjoint",
        "joint",
        "hand",
        "joint",
        "hand",
        "inputjoint",
        "renderer",
        "depthData",
        "renderState",
        "Texture",
        "renderer",
        "texture",
        "texProps",
        "depthData",
        "depthData",
        "renderState",
        "depthData",
        "renderState",
        "depthData",
        "depthData",
        "texture",
        "cameraXR",
        "cameraXR",
        "ShaderMaterial",
        "_occlusion_vertex",
        "_occlusion_fragment",
        "viewport",
        "viewport",
        "Mesh",
        "PlaneGeometry",
        "material",
        "EventDispatcher",
        "renderer",
        "gl",
        "WebXRDepthSensing",
        "gl",
        "Vector2",
        "PerspectiveCamera",
        "cameraL",
        "cameraL",
        "Vector4",
        "PerspectiveCamera",
        "cameraR",
        "cameraR",
        "Vector4",
        "cameraL",
        "cameraR",
        "ArrayCamera",
        "cameraXR",
        "cameraXR",
        "index",
        "controllers",
        "index",
        "controller",
        "controller",
        "WebXRController",
        "controllers",
        "index",
        "controller",
        "controller",
        "index",
        "controllers",
        "index",
        "controller",
        "controller",
        "WebXRController",
        "controllers",
        "index",
        "controller",
        "controller",
        "index",
        "controllers",
        "index",
        "controller",
        "controller",
        "WebXRController",
        "controllers",
        "index",
        "controller",
        "controller",
        "controllerInputSources",
        "controllerIndex",
        "controllers",
        "controllerIndex",
        "controller",
        "controller",
        "customReferenceSpace",
        "referenceSpace",
        "controller",
        "session",
        "onSessionEvent",
        "session",
        "onSessionEvent",
        "session",
        "onSessionEvent",
        "session",
        "onSessionEvent",
        "session",
        "onSessionEvent",
        "session",
        "onSessionEvent",
        "session",
        "onSessionEnd",
        "session",
        "onInputSourcesChange",
        "i",
        "controllers",
        "i",
        "controllerInputSources",
        "i",
        "inputSource",
        "controllerInputSources",
        "i",
        "controllers",
        "i",
        "inputSource",
        "_currentDepthNear",
        "_currentDepthFar",
        "depthSensing",
        "renderer",
        "initialRenderTarget",
        "glBaseLayer",
        "glProjLayer",
        "glBinding",
        "session",
        "newRenderTarget",
        "animation",
        "scope",
        "renderer",
        "currentPixelRatio",
        "renderer",
        "currentSize",
        "currentSize",
        "scope",
        "value",
        "framebufferScaleFactor",
        "value",
        "scope",
        "value",
        "referenceSpaceType",
        "value",
        "scope",
        "customReferenceSpace",
        "referenceSpace",
        "space",
        "customReferenceSpace",
        "space",
        "glProjLayer",
        "glProjLayer",
        "glBaseLayer",
        "glBinding",
        "xrFrame",
        "session",
        "value",
        "session",
        "value",
        "session",
        "initialRenderTarget",
        "renderer",
        "session",
        "onSessionEvent",
        "session",
        "onSessionEvent",
        "session",
        "onSessionEvent",
        "session",
        "onSessionEvent",
        "session",
        "onSessionEvent",
        "session",
        "onSessionEvent",
        "session",
        "onSessionEnd",
        "session",
        "onInputSourcesChange",
        "attributes",
        "gl",
        "currentPixelRatio",
        "renderer",
        "renderer",
        "currentSize",
        "session",
        "attributes",
        "attributes",
        "attributes",
        "framebufferScaleFactor",
        "glBaseLayer",
        "XRWebGLLayer",
        "session",
        "gl",
        "layerInit",
        "session",
        "glBaseLayer",
        "renderer",
        "renderer",
        "glBaseLayer",
        "glBaseLayer",
        "newRenderTarget",
        "WebGLRenderTarget",
        "glBaseLayer",
        "glBaseLayer",
        "RGBAFormat",
        "UnsignedByteType",
        "renderer",
        "attributes",
        "attributes",
        "glDepthFormat",
        "attributes",
        "gl",
        "gl",
        "depthFormat",
        "attributes",
        "DepthStencilFormat",
        "DepthFormat",
        "depthType",
        "attributes",
        "UnsignedInt248Type",
        "UnsignedIntType",
        "gl",
        "glDepthFormat",
        "framebufferScaleFactor",
        "glBinding",
        "XRWebGLBinding",
        "session",
        "gl",
        "glProjLayer",
        "glBinding",
        "projectionlayerInit",
        "session",
        "glProjLayer",
        "renderer",
        "renderer",
        "glProjLayer",
        "glProjLayer",
        "newRenderTarget",
        "WebGLRenderTarget",
        "glProjLayer",
        "glProjLayer",
        "RGBAFormat",
        "UnsignedByteType",
        "DepthTexture",
        "glProjLayer",
        "glProjLayer",
        "depthType",
        "depthFormat",
        "attributes",
        "renderer",
        "attributes",
        "glProjLayer",
        "newRenderTarget",
        "foveation",
        "customReferenceSpace",
        "referenceSpace",
        "session",
        "referenceSpaceType",
        "animation",
        "session",
        "animation",
        "scope",
        "scope",
        "session",
        "session",
        "depthSensing",
        "i",
        "i",
        "i",
        "controllerInputSources",
        "inputSource",
        "index",
        "controllerInputSources",
        "index",
        "controllers",
        "index",
        "inputSource",
        "i",
        "i",
        "i",
        "controllerInputSources",
        "inputSource",
        "controllerIndex",
        "i",
        "controllers",
        "i",
        "i",
        "controllerInputSources",
        "controllerInputSources",
        "inputSource",
        "controllerIndex",
        "i",
        "controllerInputSources",
        "i",
        "controllerInputSources",
        "i",
        "inputSource",
        "controllerIndex",
        "i",
        "controllerIndex",
        "controllers",
        "controllerIndex",
        "controller",
        "controller",
        "inputSource",
        "Vector3",
        "Vector3",
        "camera",
        "cameraL",
        "cameraR",
        "cameraLPos",
        "cameraL",
        "cameraRPos",
        "cameraR",
        "cameraLPos",
        "cameraRPos",
        "cameraL",
        "cameraR",
        "projL",
        "projL",
        "projL",
        "projL",
        "projL",
        "projL",
        "projL",
        "projL",
        "projL",
        "projL",
        "projR",
        "projR",
        "near",
        "leftFov",
        "near",
        "rightFov",
        "ipd",
        "leftFov",
        "rightFov",
        "zOffset",
        "leftFov",
        "cameraL",
        "camera",
        "camera",
        "camera",
        "camera",
        "xOffset",
        "camera",
        "zOffset",
        "camera",
        "camera",
        "camera",
        "camera",
        "camera",
        "camera",
        "near",
        "zOffset",
        "far",
        "zOffset",
        "left",
        "xOffset",
        "right",
        "ipd",
        "xOffset",
        "topFov",
        "far",
        "far2",
        "near2",
        "bottomFov",
        "far",
        "far2",
        "near2",
        "camera",
        "left2",
        "right2",
        "top2",
        "bottom2",
        "near2",
        "far2",
        "camera",
        "camera",
        "camera",
        "parent",
        "parent",
        "camera",
        "camera",
        "camera",
        "parent",
        "camera",
        "camera",
        "camera",
        "camera",
        "session",
        "depthSensing",
        "camera",
        "depthSensing",
        "camera",
        "depthSensing",
        "cameraXR",
        "cameraR",
        "cameraL",
        "camera",
        "cameraXR",
        "cameraR",
        "cameraL",
        "camera",
        "_currentDepthNear",
        "cameraXR",
        "_currentDepthFar",
        "cameraXR",
        "session",
        "cameraXR",
        "cameraXR",
        "_currentDepthNear",
        "cameraXR",
        "_currentDepthFar",
        "cameraXR",
        "cameraL",
        "_currentDepthNear",
        "cameraL",
        "_currentDepthFar",
        "cameraR",
        "_currentDepthNear",
        "cameraR",
        "_currentDepthFar",
        "cameraL",
        "cameraR",
        "camera",
        "camera",
        "cameraXR",
        "updateCamera",
        "cameraXR",
        "parent",
        "i",
        "cameras",
        "i",
        "updateCamera",
        "cameras",
        "i",
        "parent",
        "cameras",
        "setProjectionFromUnion",
        "cameraXR",
        "cameraL",
        "cameraR",
        "cameraXR",
        "cameraL",
        "updateUserCamera",
        "camera",
        "cameraXR",
        "parent",
        "camera",
        "cameraXR",
        "parent",
        "parent",
        "camera",
        "cameraXR",
        "camera",
        "parent",
        "camera",
        "camera",
        "cameraXR",
        "camera",
        "camera",
        "camera",
        "camera",
        "camera",
        "camera",
        "cameraXR",
        "camera",
        "cameraXR",
        "camera",
        "camera",
        "RAD2DEG",
        "camera",
        "camera",
        "cameraXR",
        "glProjLayer",
        "glBaseLayer",
        "foveation",
        "value",
        "foveation",
        "value",
        "glProjLayer",
        "glProjLayer",
        "value",
        "glBaseLayer",
        "glBaseLayer",
        "glBaseLayer",
        "value",
        "depthSensing",
        "depthSensing",
        "cameraXR",
        "time",
        "frame",
        "pose",
        "frame",
        "customReferenceSpace",
        "referenceSpace",
        "xrFrame",
        "frame",
        "pose",
        "pose",
        "glBaseLayer",
        "renderer",
        "newRenderTarget",
        "glBaseLayer",
        "renderer",
        "newRenderTarget",
        "views",
        "cameraXR",
        "cameraXR",
        "cameraXRNeedsUpdate",
        "i",
        "views",
        "i",
        "views",
        "i",
        "glBaseLayer",
        "viewport",
        "glBaseLayer",
        "view",
        "glBinding",
        "glProjLayer",
        "view",
        "viewport",
        "glSubImage",
        "i",
        "renderer",
        "newRenderTarget",
        "glSubImage",
        "glProjLayer",
        "glSubImage",
        "renderer",
        "newRenderTarget",
        "cameras",
        "i",
        "camera",
        "camera",
        "PerspectiveCamera",
        "camera",
        "i",
        "camera",
        "Vector4",
        "cameras",
        "i",
        "camera",
        "camera",
        "view",
        "camera",
        "camera",
        "camera",
        "camera",
        "camera",
        "view",
        "camera",
        "camera",
        "camera",
        "viewport",
        "viewport",
        "viewport",
        "viewport",
        "i",
        "cameraXR",
        "camera",
        "cameraXR",
        "cameraXR",
        "cameraXR",
        "cameraXR",
        "cameraXRNeedsUpdate",
        "cameraXR",
        "camera",
        "session",
        "enabledFeatures",
        "enabledFeatures",
        "glBinding",
        "views",
        "depthData",
        "depthData",
        "depthData",
        "depthSensing",
        "renderer",
        "depthData",
        "session",
        "i",
        "controllers",
        "i",
        "controllerInputSources",
        "i",
        "controllers",
        "i",
        "inputSource",
        "controller",
        "controller",
        "inputSource",
        "frame",
        "customReferenceSpace",
        "referenceSpace",
        "onAnimationFrameCallback",
        "onAnimationFrameCallback",
        "time",
        "frame",
        "frame",
        "scope",
        "frame",
        "xrFrame",
        "WebGLAnimation",
        "animation",
        "onAnimationFrame",
        "callback",
        "onAnimationFrameCallback",
        "callback",
        "Euler",
        "Matrix4",
        "renderer",
        "properties",
        "uniform",
        "uniform",
        "uniforms",
        "fog",
        "fog",
        "uniforms",
        "getUnlitUniformColorSpace",
        "renderer",
        "fog",
        "uniforms",
        "fog",
        "uniforms",
        "fog",
        "fog",
        "uniforms",
        "fog",
        "uniforms",
        "material",
        "pixelRatio",
        "height",
        "transmissionRenderTarget",
        "material",
        "refreshUniformsCommon",
        "uniforms",
        "material",
        "material",
        "refreshUniformsCommon",
        "uniforms",
        "material",
        "material",
        "refreshUniformsCommon",
        "uniforms",
        "material",
        "refreshUniformsToon",
        "uniforms",
        "material",
        "material",
        "refreshUniformsCommon",
        "uniforms",
        "material",
        "refreshUniformsPhong",
        "uniforms",
        "material",
        "material",
        "refreshUniformsCommon",
        "uniforms",
        "material",
        "refreshUniformsStandard",
        "uniforms",
        "material",
        "material",
        "refreshUniformsPhysical",
        "uniforms",
        "material",
        "transmissionRenderTarget",
        "material",
        "refreshUniformsCommon",
        "uniforms",
        "material",
        "refreshUniformsMatcap",
        "uniforms",
        "material",
        "material",
        "refreshUniformsCommon",
        "uniforms",
        "material",
        "material",
        "refreshUniformsCommon",
        "uniforms",
        "material",
        "refreshUniformsDistance",
        "uniforms",
        "material",
        "material",
        "refreshUniformsCommon",
        "uniforms",
        "material",
        "material",
        "refreshUniformsLine",
        "uniforms",
        "material",
        "material",
        "refreshUniformsDash",
        "uniforms",
        "material",
        "material",
        "refreshUniformsPoints",
        "uniforms",
        "material",
        "pixelRatio",
        "height",
        "material",
        "refreshUniformsSprites",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "material",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "uniforms",
        "material",
        "material",
        "BackSide",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "uniforms",
        "material",
        "material",
        "BackSide",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "properties",
        "material",
        "materialProperties",
        "materialProperties",
        "envMap",
        "uniforms",
        "envMap",
        "_e1",
        "envMapRotation",
        "_e1",
        "_e1",
        "_e1",
        "envMap",
        "envMap",
        "_e1",
        "_e1",
        "uniforms",
        "_m1",
        "_e1",
        "uniforms",
        "envMap",
        "envMap",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "pixelRatio",
        "height",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "pixelRatio",
        "uniforms",
        "height",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "transmissionRenderTarget",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "uniforms",
        "material",
        "material",
        "BackSide",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "transmissionRenderTarget",
        "uniforms",
        "transmissionRenderTarget",
        "transmissionRenderTarget",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "material",
        "material",
        "material",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "refreshTransformUniform",
        "material",
        "uniforms",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "properties",
        "material",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "refreshFogUniforms",
        "refreshMaterialUniforms",
        "gl",
        "info",
        "capabilities",
        "state",
        "gl",
        "gl",
        "uniformsGroup",
        "program",
        "program",
        "state",
        "uniformsGroup",
        "webglProgram",
        "uniformsGroup",
        "program",
        "buffers",
        "uniformsGroup",
        "buffer",
        "prepareUniformsGroup",
        "uniformsGroup",
        "buffer",
        "createBuffer",
        "uniformsGroup",
        "buffers",
        "uniformsGroup",
        "buffer",
        "uniformsGroup",
        "onUniformsGroupsDispose",
        "program",
        "state",
        "uniformsGroup",
        "webglProgram",
        "info",
        "updateList",
        "uniformsGroup",
        "frame",
        "updateBufferData",
        "uniformsGroup",
        "updateList",
        "uniformsGroup",
        "frame",
        "uniformsGroup",
        "allocateBindingPointIndex",
        "uniformsGroup",
        "bindingPointIndex",
        "gl",
        "uniformsGroup",
        "uniformsGroup",
        "gl",
        "gl",
        "buffer",
        "gl",
        "gl",
        "size",
        "usage",
        "gl",
        "gl",
        "gl",
        "gl",
        "bindingPointIndex",
        "buffer",
        "buffer",
        "i",
        "maxBindingPoints",
        "i",
        "allocatedBindingPoints",
        "i",
        "allocatedBindingPoints",
        "i",
        "i",
        "uniformsGroup",
        "buffers",
        "uniformsGroup",
        "uniformsGroup",
        "uniformsGroup",
        "gl",
        "gl",
        "buffer",
        "uniforms",
        "i",
        "il",
        "i",
        "uniforms",
        "i",
        "uniforms",
        "i",
        "uniforms",
        "i",
        "uniformArray",
        "j",
        "jl",
        "j",
        "uniformArray",
        "j",
        "hasUniformChanged",
        "uniform",
        "i",
        "j",
        "cache",
        "uniform",
        "uniform",
        "uniform",
        "uniform",
        "k",
        "values",
        "k",
        "values",
        "k",
        "getUniformSize",
        "value",
        "value",
        "value",
        "uniform",
        "value",
        "gl",
        "gl",
        "offset",
        "arrayOffset",
        "uniform",
        "value",
        "uniform",
        "value",
        "uniform",
        "value",
        "uniform",
        "value",
        "uniform",
        "uniform",
        "value",
        "uniform",
        "value",
        "uniform",
        "value",
        "uniform",
        "uniform",
        "value",
        "uniform",
        "value",
        "uniform",
        "value",
        "uniform",
        "value",
        "uniform",
        "arrayOffset",
        "arrayOffset",
        "info",
        "Float32Array",
        "gl",
        "gl",
        "offset",
        "uniform",
        "gl",
        "gl",
        "uniform",
        "index",
        "indexArray",
        "cache",
        "uniform",
        "index",
        "indexArray",
        "cache",
        "indexString",
        "value",
        "value",
        "cache",
        "indexString",
        "value",
        "cache",
        "indexString",
        "value",
        "cache",
        "indexString",
        "value",
        "value",
        "cachedObject",
        "value",
        "cache",
        "indexString",
        "value",
        "cachedObject",
        "value",
        "cachedObject",
        "value",
        "uniformsGroup",
        "uniformsGroup",
        "uniforms",
        "i",
        "l",
        "i",
        "uniforms",
        "i",
        "uniforms",
        "i",
        "uniforms",
        "i",
        "uniformArray",
        "j",
        "jl",
        "j",
        "uniformArray",
        "j",
        "uniform",
        "uniform",
        "uniform",
        "values",
        "k",
        "kl",
        "k",
        "values",
        "k",
        "getUniformSize",
        "value",
        "offset",
        "chunkSize",
        "chunkOffset",
        "info",
        "chunkOffset",
        "chunkPadding",
        "offset",
        "chunkPadding",
        "chunkStart",
        "chunkSize",
        "chunkStart",
        "info",
        "offset",
        "chunkSize",
        "chunkStart",
        "uniform",
        "Float32Array",
        "info",
        "Float32Array",
        "uniform",
        "offset",
        "offset",
        "info",
        "offset",
        "chunkSize",
        "chunkOffset",
        "offset",
        "chunkSize",
        "chunkOffset",
        "uniformsGroup",
        "offset",
        "uniformsGroup",
        "value",
        "value",
        "value",
        "info",
        "info",
        "value",
        "info",
        "info",
        "value",
        "value",
        "info",
        "info",
        "value",
        "info",
        "info",
        "value",
        "info",
        "info",
        "value",
        "info",
        "info",
        "value",
        "value",
        "info",
        "uniformsGroup",
        "onUniformsGroupsDispose",
        "allocatedBindingPoints",
        "uniformsGroup",
        "allocatedBindingPoints",
        "index",
        "gl",
        "buffers",
        "uniformsGroup",
        "buffers",
        "uniformsGroup",
        "updateList",
        "uniformsGroup",
        "id",
        "buffers",
        "gl",
        "buffers",
        "id",
        "allocatedBindingPoints",
        "buffers",
        "updateList",
        "bind",
        "update",
        "dispose",
        "parameters",
        "createCanvasElement",
        "context",
        "WebGLRenderingContext",
        "context",
        "WebGLRenderingContext",
        "_alpha",
        "context",
        "_alpha",
        "alpha",
        "Uint32Array",
        "Int32Array",
        "canvas",
        "SRGBColorSpace",
        "NoToneMapping",
        "Vector4",
        "Vector4",
        "Color",
        "canvas",
        "canvas",
        "Vector4",
        "_width",
        "_height",
        "Vector4",
        "_width",
        "_height",
        "Frustum",
        "Matrix4",
        "Vector3",
        "Vector4",
        "_currentRenderTarget",
        "_pixelRatio",
        "contextName",
        "contextAttributes",
        "canvas",
        "contextName",
        "contextAttributes",
        "canvas",
        "canvas",
        "REVISION",
        "canvas",
        "onContextLost",
        "canvas",
        "onContextRestore",
        "canvas",
        "onContextCreationError",
        "_gl",
        "_gl",
        "getContext",
        "contextName",
        "contextAttributes",
        "_gl",
        "getContext",
        "contextName",
        "error",
        "error",
        "error",
        "extensions",
        "WebGLExtensions",
        "_gl",
        "extensions",
        "utils",
        "WebGLUtils",
        "_gl",
        "extensions",
        "capabilities",
        "WebGLCapabilities",
        "_gl",
        "extensions",
        "parameters",
        "utils",
        "state",
        "WebGLState",
        "_gl",
        "info",
        "WebGLInfo",
        "_gl",
        "properties",
        "WebGLProperties",
        "textures",
        "WebGLTextures",
        "_gl",
        "extensions",
        "state",
        "properties",
        "capabilities",
        "utils",
        "info",
        "cubemaps",
        "WebGLCubeMaps",
        "_this",
        "cubeuvmaps",
        "WebGLCubeUVMaps",
        "_this",
        "attributes",
        "WebGLAttributes",
        "_gl",
        "bindingStates",
        "WebGLBindingStates",
        "_gl",
        "attributes",
        "geometries",
        "WebGLGeometries",
        "_gl",
        "attributes",
        "info",
        "bindingStates",
        "objects",
        "WebGLObjects",
        "_gl",
        "geometries",
        "attributes",
        "info",
        "morphtargets",
        "WebGLMorphtargets",
        "_gl",
        "capabilities",
        "textures",
        "clipping",
        "WebGLClipping",
        "properties",
        "programCache",
        "WebGLPrograms",
        "_this",
        "cubemaps",
        "cubeuvmaps",
        "extensions",
        "capabilities",
        "bindingStates",
        "clipping",
        "materials",
        "WebGLMaterials",
        "_this",
        "properties",
        "renderLists",
        "WebGLRenderLists",
        "renderStates",
        "WebGLRenderStates",
        "extensions",
        "background",
        "WebGLBackground",
        "_this",
        "cubemaps",
        "cubeuvmaps",
        "state",
        "objects",
        "_alpha",
        "premultipliedAlpha",
        "shadowMap",
        "WebGLShadowMap",
        "_this",
        "objects",
        "capabilities",
        "uniformsGroups",
        "WebGLUniformsGroups",
        "_gl",
        "info",
        "capabilities",
        "state",
        "bufferRenderer",
        "WebGLBufferRenderer",
        "_gl",
        "extensions",
        "info",
        "indexedBufferRenderer",
        "WebGLIndexedBufferRenderer",
        "_gl",
        "extensions",
        "info",
        "info",
        "programCache",
        "_this",
        "capabilities",
        "_this",
        "extensions",
        "_this",
        "properties",
        "_this",
        "renderLists",
        "_this",
        "shadowMap",
        "_this",
        "state",
        "_this",
        "info",
        "initGLContext",
        "WebXRManager",
        "_this",
        "_gl",
        "xr",
        "_gl",
        "_gl",
        "extensions",
        "extension",
        "extension",
        "extensions",
        "extension",
        "extension",
        "_pixelRatio",
        "value",
        "value",
        "_pixelRatio",
        "value",
        "_width",
        "_height",
        "target",
        "target",
        "_width",
        "_height",
        "width",
        "height",
        "updateStyle",
        "xr",
        "_width",
        "width",
        "_height",
        "height",
        "canvas",
        "width",
        "_pixelRatio",
        "canvas",
        "height",
        "_pixelRatio",
        "updateStyle",
        "canvas",
        "width",
        "canvas",
        "height",
        "width",
        "height",
        "target",
        "target",
        "_width",
        "_pixelRatio",
        "_height",
        "_pixelRatio",
        "width",
        "height",
        "pixelRatio",
        "_width",
        "width",
        "_height",
        "height",
        "_pixelRatio",
        "pixelRatio",
        "canvas",
        "width",
        "pixelRatio",
        "canvas",
        "height",
        "pixelRatio",
        "width",
        "height",
        "target",
        "target",
        "_currentViewport",
        "target",
        "target",
        "_viewport",
        "x",
        "y",
        "width",
        "height",
        "x",
        "_viewport",
        "x",
        "x",
        "x",
        "x",
        "_viewport",
        "x",
        "y",
        "width",
        "height",
        "state",
        "_currentViewport",
        "_viewport",
        "_pixelRatio",
        "target",
        "target",
        "_scissor",
        "x",
        "y",
        "width",
        "height",
        "x",
        "_scissor",
        "x",
        "x",
        "x",
        "x",
        "_scissor",
        "x",
        "y",
        "width",
        "height",
        "state",
        "_currentScissor",
        "_scissor",
        "_pixelRatio",
        "_scissorTest",
        "state",
        "_scissorTest",
        "method",
        "_opaqueSort",
        "method",
        "method",
        "_transparentSort",
        "method",
        "target",
        "target",
        "background",
        "background",
        "background",
        "arguments",
        "background",
        "background",
        "background",
        "arguments",
        "color",
        "depth",
        "stencil",
        "color",
        "_currentRenderTarget",
        "_currentRenderTarget",
        "isIntegerFormat",
        "targetFormat",
        "RGBAIntegerFormat",
        "targetFormat",
        "RGIntegerFormat",
        "targetFormat",
        "RedIntegerFormat",
        "isIntegerFormat",
        "_currentRenderTarget",
        "targetType",
        "UnsignedByteType",
        "targetType",
        "UnsignedIntType",
        "targetType",
        "UnsignedShortType",
        "targetType",
        "UnsignedInt248Type",
        "targetType",
        "UnsignedShort4444Type",
        "targetType",
        "UnsignedShort5551Type",
        "background",
        "background",
        "clearColor",
        "clearColor",
        "clearColor",
        "isUnsignedType",
        "uintClearColor",
        "r",
        "uintClearColor",
        "g",
        "uintClearColor",
        "b",
        "uintClearColor",
        "a",
        "_gl",
        "_gl",
        "uintClearColor",
        "intClearColor",
        "r",
        "intClearColor",
        "g",
        "intClearColor",
        "b",
        "intClearColor",
        "a",
        "_gl",
        "_gl",
        "intClearColor",
        "bits",
        "_gl",
        "depth",
        "bits",
        "_gl",
        "stencil",
        "bits",
        "_gl",
        "_gl",
        "bits",
        "canvas",
        "onContextLost",
        "canvas",
        "onContextRestore",
        "canvas",
        "onContextCreationError",
        "renderLists",
        "renderStates",
        "properties",
        "cubemaps",
        "cubeuvmaps",
        "objects",
        "bindingStates",
        "uniformsGroups",
        "programCache",
        "xr",
        "xr",
        "onXRSessionStart",
        "xr",
        "onXRSessionEnd",
        "animation",
        "_isContextLost",
        "_isContextLost",
        "info",
        "shadowMap",
        "shadowMap",
        "shadowMap",
        "shadowMap",
        "initGLContext",
        "info",
        "infoAutoReset",
        "shadowMap",
        "shadowMapEnabled",
        "shadowMap",
        "shadowMapAutoUpdate",
        "shadowMap",
        "shadowMapNeedsUpdate",
        "shadowMap",
        "shadowMapType",
        "material",
        "onMaterialDispose",
        "deallocateMaterial",
        "material",
        "material",
        "releaseMaterialProgramReferences",
        "material",
        "properties",
        "material",
        "material",
        "properties",
        "material",
        "programs",
        "programs",
        "program",
        "programCache",
        "program",
        "material",
        "programCache",
        "material",
        "camera",
        "scene",
        "geometry",
        "material",
        "group",
        "scene",
        "scene",
        "_emptyScene",
        "setProgram",
        "camera",
        "scene",
        "geometry",
        "material",
        "state",
        "material",
        "frontFaceCW",
        "geometry",
        "material",
        "index",
        "geometries",
        "geometry",
        "index",
        "rangeFactor",
        "geometry",
        "geometry",
        "drawRange",
        "rangeFactor",
        "drawRange",
        "drawRange",
        "rangeFactor",
        "group",
        "drawStart",
        "drawStart",
        "group",
        "rangeFactor",
        "drawEnd",
        "drawEnd",
        "group",
        "group",
        "rangeFactor",
        "index",
        "drawStart",
        "drawStart",
        "drawEnd",
        "drawEnd",
        "index",
        "position",
        "position",
        "drawStart",
        "drawStart",
        "drawEnd",
        "drawEnd",
        "position",
        "drawEnd",
        "drawStart",
        "drawCount",
        "drawCount",
        "Infinity",
        "bindingStates",
        "material",
        "program",
        "geometry",
        "index",
        "index",
        "attribute",
        "attributes",
        "index",
        "renderer",
        "indexedBufferRenderer",
        "renderer",
        "attribute",
        "material",
        "state",
        "material",
        "getTargetPixelRatio",
        "renderer",
        "_gl",
        "renderer",
        "_gl",
        "material",
        "lineWidth",
        "lineWidth",
        "state",
        "lineWidth",
        "getTargetPixelRatio",
        "renderer",
        "_gl",
        "renderer",
        "_gl",
        "renderer",
        "_gl",
        "renderer",
        "_gl",
        "renderer",
        "_gl",
        "renderer",
        "extensions",
        "index",
        "attributes",
        "index",
        "properties",
        "material",
        "i",
        "drawCount",
        "i",
        "uniforms",
        "_gl",
        "i",
        "renderer",
        "starts",
        "i",
        "bytesPerElement",
        "counts",
        "i",
        "renderer",
        "renderer",
        "drawStart",
        "drawCount",
        "geometry",
        "geometry",
        "geometry",
        "Infinity",
        "geometry",
        "maxInstanceCount",
        "renderer",
        "drawStart",
        "drawCount",
        "instanceCount",
        "renderer",
        "drawStart",
        "drawCount",
        "material",
        "scene",
        "material",
        "material",
        "DoubleSide",
        "material",
        "material",
        "BackSide",
        "material",
        "getProgram",
        "material",
        "scene",
        "material",
        "FrontSide",
        "material",
        "getProgram",
        "material",
        "scene",
        "material",
        "DoubleSide",
        "getProgram",
        "material",
        "scene",
        "scene",
        "camera",
        "targetScene",
        "targetScene",
        "targetScene",
        "scene",
        "currentRenderState",
        "renderStates",
        "targetScene",
        "currentRenderState",
        "camera",
        "renderStateStack",
        "currentRenderState",
        "targetScene",
        "camera",
        "currentRenderState",
        "currentRenderState",
        "scene",
        "targetScene",
        "scene",
        "camera",
        "currentRenderState",
        "currentRenderState",
        "currentRenderState",
        "scene",
        "material",
        "material",
        "i",
        "material",
        "i",
        "material",
        "i",
        "prepareMaterial",
        "material2",
        "targetScene",
        "materials",
        "material2",
        "prepareMaterial",
        "material",
        "targetScene",
        "materials",
        "material",
        "renderStateStack",
        "currentRenderState",
        "materials",
        "scene",
        "camera",
        "targetScene",
        "scene",
        "camera",
        "targetScene",
        "resolve",
        "materials",
        "material",
        "properties",
        "material",
        "materialProperties",
        "program",
        "materials",
        "material",
        "materials",
        "resolve",
        "scene",
        "setTimeout",
        "checkMaterialsReady",
        "extensions",
        "checkMaterialsReady",
        "setTimeout",
        "checkMaterialsReady",
        "time",
        "onAnimationFrameCallback",
        "onAnimationFrameCallback",
        "time",
        "animation",
        "animation",
        "WebGLAnimation",
        "animation",
        "onAnimationFrame",
        "animation",
        "callback",
        "onAnimationFrameCallback",
        "callback",
        "xr",
        "callback",
        "callback",
        "animation",
        "animation",
        "xr",
        "onXRSessionStart",
        "xr",
        "onXRSessionEnd",
        "scene",
        "camera",
        "camera",
        "camera",
        "_isContextLost",
        "scene",
        "scene",
        "camera",
        "camera",
        "camera",
        "xr",
        "xr",
        "xr",
        "xr",
        "camera",
        "camera",
        "xr",
        "scene",
        "scene",
        "_this",
        "scene",
        "camera",
        "_currentRenderTarget",
        "currentRenderState",
        "renderStates",
        "scene",
        "renderStateStack",
        "currentRenderState",
        "camera",
        "renderStateStack",
        "currentRenderState",
        "_projScreenMatrix",
        "camera",
        "camera",
        "_frustum",
        "_projScreenMatrix",
        "_localClippingEnabled",
        "_clippingEnabled",
        "clipping",
        "_localClippingEnabled",
        "currentRenderList",
        "renderLists",
        "scene",
        "renderListStack",
        "currentRenderList",
        "renderListStack",
        "currentRenderList",
        "xr",
        "xr",
        "_this",
        "depthSensingMesh",
        "projectObject",
        "depthSensingMesh",
        "camera",
        "Infinity",
        "_this",
        "projectObject",
        "scene",
        "camera",
        "_this",
        "currentRenderList",
        "_this",
        "currentRenderList",
        "_opaqueSort",
        "_transparentSort",
        "_renderBackground",
        "xr",
        "xr",
        "xr",
        "_renderBackground",
        "background",
        "currentRenderList",
        "scene",
        "_clippingEnabled",
        "clipping",
        "currentRenderState",
        "shadowMap",
        "shadowsArray",
        "scene",
        "camera",
        "_clippingEnabled",
        "clipping",
        "currentRenderList",
        "currentRenderList",
        "currentRenderState",
        "camera",
        "camera",
        "transmissiveObjects",
        "cameras",
        "i",
        "l",
        "i",
        "cameras",
        "i",
        "renderTransmissionPass",
        "opaqueObjects",
        "transmissiveObjects",
        "scene",
        "camera2",
        "_renderBackground",
        "background",
        "scene",
        "cameras",
        "i",
        "l",
        "i",
        "cameras",
        "i",
        "renderScene",
        "currentRenderList",
        "scene",
        "camera2",
        "camera2",
        "transmissiveObjects",
        "renderTransmissionPass",
        "opaqueObjects",
        "transmissiveObjects",
        "scene",
        "camera",
        "_renderBackground",
        "background",
        "scene",
        "renderScene",
        "currentRenderList",
        "scene",
        "camera",
        "_currentRenderTarget",
        "textures",
        "_currentRenderTarget",
        "textures",
        "_currentRenderTarget",
        "scene",
        "scene",
        "_this",
        "scene",
        "camera",
        "bindingStates",
        "_currentMaterialId",
        "_currentCamera",
        "renderStateStack",
        "renderStateStack",
        "currentRenderState",
        "renderStateStack",
        "renderStateStack",
        "_clippingEnabled",
        "clipping",
        "_this",
        "currentRenderState",
        "currentRenderState",
        "renderListStack",
        "renderListStack",
        "currentRenderList",
        "renderListStack",
        "renderListStack",
        "currentRenderList",
        "camera",
        "groupOrder",
        "sortObjects",
        "camera",
        "visible",
        "groupOrder",
        "camera",
        "currentRenderState",
        "currentRenderState",
        "_frustum",
        "sortObjects",
        "_vector4",
        "_projScreenMatrix",
        "objects",
        "material",
        "currentRenderList",
        "geometry",
        "material",
        "groupOrder",
        "_vector4",
        "_frustum",
        "objects",
        "sortObjects",
        "_vector4",
        "geometry",
        "geometry",
        "_vector4",
        "geometry",
        "_vector4",
        "_projScreenMatrix",
        "material",
        "geometry",
        "groups",
        "i",
        "l",
        "i",
        "groups",
        "i",
        "material",
        "group",
        "groupMaterial",
        "groupMaterial",
        "currentRenderList",
        "geometry",
        "groupMaterial",
        "groupOrder",
        "_vector4",
        "group",
        "material",
        "currentRenderList",
        "geometry",
        "material",
        "groupOrder",
        "_vector4",
        "children",
        "i",
        "l",
        "i",
        "projectObject",
        "children",
        "i",
        "camera",
        "groupOrder",
        "sortObjects",
        "currentRenderList",
        "scene",
        "camera",
        "viewport",
        "currentRenderList",
        "currentRenderList",
        "currentRenderList",
        "currentRenderState",
        "camera",
        "_clippingEnabled",
        "clipping",
        "_this",
        "camera",
        "viewport",
        "state",
        "_currentViewport",
        "viewport",
        "opaqueObjects",
        "renderObjects",
        "opaqueObjects",
        "scene",
        "camera",
        "transmissiveObjects",
        "renderObjects",
        "transmissiveObjects",
        "scene",
        "camera",
        "transparentObjects",
        "renderObjects",
        "transparentObjects",
        "scene",
        "camera",
        "state",
        "state",
        "state",
        "state",
        "opaqueObjects",
        "transmissiveObjects",
        "scene",
        "camera",
        "scene",
        "scene",
        "overrideMaterial",
        "currentRenderState",
        "camera",
        "currentRenderState",
        "camera",
        "WebGLRenderTarget",
        "extensions",
        "extensions",
        "HalfFloatType",
        "UnsignedByteType",
        "LinearMipmapLinearFilter",
        "stencil",
        "ColorManagement",
        "currentRenderState",
        "camera",
        "camera",
        "_currentViewport",
        "transmissionRenderTarget",
        "activeViewport",
        "activeViewport",
        "_this",
        "_this",
        "transmissionRenderTarget",
        "_this",
        "_currentClearColor",
        "_currentClearAlpha",
        "_this",
        "_currentClearAlpha",
        "_this",
        "_this",
        "_renderBackground",
        "background",
        "scene",
        "_this",
        "_this",
        "NoToneMapping",
        "camera",
        "camera",
        "camera",
        "currentRenderState",
        "camera",
        "_clippingEnabled",
        "clipping",
        "_this",
        "camera",
        "renderObjects",
        "opaqueObjects",
        "scene",
        "camera",
        "textures",
        "transmissionRenderTarget",
        "textures",
        "transmissionRenderTarget",
        "extensions",
        "transmissiveObjects",
        "i",
        "l",
        "i",
        "transmissiveObjects",
        "i",
        "renderItem",
        "renderItem",
        "renderItem",
        "renderItem",
        "material",
        "DoubleSide",
        "camera",
        "material",
        "material",
        "BackSide",
        "material",
        "renderObject",
        "scene",
        "camera",
        "geometry",
        "material",
        "group",
        "material",
        "currentSide",
        "material",
        "renderTargetNeedsUpdate",
        "renderTargetNeedsUpdate",
        "textures",
        "transmissionRenderTarget",
        "textures",
        "transmissionRenderTarget",
        "_this",
        "currentRenderTarget",
        "_this",
        "_currentClearColor",
        "_currentClearAlpha",
        "currentCameraViewport",
        "camera",
        "currentCameraViewport",
        "_this",
        "currentToneMapping",
        "renderList",
        "scene",
        "camera",
        "scene",
        "scene",
        "renderList",
        "i",
        "l",
        "i",
        "renderList",
        "i",
        "renderItem",
        "renderItem",
        "overrideMaterial",
        "renderItem",
        "overrideMaterial",
        "renderItem",
        "camera",
        "renderObject",
        "scene",
        "camera",
        "geometry",
        "material",
        "group",
        "scene",
        "camera",
        "geometry",
        "material",
        "group",
        "_this",
        "scene",
        "camera",
        "geometry",
        "material",
        "group",
        "camera",
        "material",
        "material",
        "DoubleSide",
        "material",
        "material",
        "BackSide",
        "material",
        "_this",
        "camera",
        "scene",
        "geometry",
        "material",
        "group",
        "material",
        "FrontSide",
        "material",
        "_this",
        "camera",
        "scene",
        "geometry",
        "material",
        "group",
        "material",
        "DoubleSide",
        "_this",
        "camera",
        "scene",
        "geometry",
        "material",
        "group",
        "_this",
        "scene",
        "camera",
        "geometry",
        "material",
        "group",
        "material",
        "scene",
        "scene",
        "scene",
        "_emptyScene",
        "properties",
        "material",
        "currentRenderState",
        "currentRenderState",
        "lights",
        "programCache",
        "material",
        "lights",
        "shadowsArray",
        "scene",
        "programCache",
        "parameters",
        "materialProperties",
        "materialProperties",
        "material",
        "scene",
        "materialProperties",
        "scene",
        "materialProperties",
        "material",
        "cubeuvmaps",
        "cubemaps",
        "material",
        "materialProperties",
        "materialProperties",
        "materialProperties",
        "material",
        "scene",
        "material",
        "programs",
        "material",
        "onMaterialDispose",
        "programs",
        "materialProperties",
        "programs",
        "programs",
        "programCacheKey",
        "program",
        "materialProperties",
        "program",
        "materialProperties",
        "lightsStateVersion",
        "updateCommonMaterialProperties",
        "material",
        "parameters",
        "program",
        "parameters",
        "programCache",
        "material",
        "material",
        "parameters",
        "_this",
        "program",
        "programCache",
        "parameters",
        "programCacheKey",
        "programs",
        "programCacheKey",
        "program",
        "materialProperties",
        "parameters",
        "materialProperties",
        "material",
        "material",
        "material",
        "uniforms",
        "clipping",
        "updateCommonMaterialProperties",
        "material",
        "parameters",
        "materialProperties",
        "materialNeedsLights",
        "material",
        "materialProperties",
        "lightsStateVersion",
        "materialProperties",
        "uniforms",
        "lights",
        "uniforms",
        "lights",
        "uniforms",
        "lights",
        "uniforms",
        "lights",
        "uniforms",
        "lights",
        "uniforms",
        "lights",
        "uniforms",
        "lights",
        "uniforms",
        "lights",
        "uniforms",
        "lights",
        "uniforms",
        "lights",
        "uniforms",
        "lights",
        "uniforms",
        "lights",
        "uniforms",
        "lights",
        "uniforms",
        "lights",
        "uniforms",
        "lights",
        "uniforms",
        "lights",
        "uniforms",
        "lights",
        "uniforms",
        "lights",
        "uniforms",
        "lights",
        "materialProperties",
        "program",
        "materialProperties",
        "program",
        "materialProperties",
        "materialProperties",
        "materialProperties",
        "materialProperties",
        "WebGLUniforms",
        "progUniforms",
        "materialProperties",
        "materialProperties",
        "material",
        "parameters",
        "properties",
        "material",
        "materialProperties",
        "parameters",
        "materialProperties",
        "parameters",
        "materialProperties",
        "parameters",
        "materialProperties",
        "parameters",
        "materialProperties",
        "parameters",
        "materialProperties",
        "parameters",
        "materialProperties",
        "parameters",
        "materialProperties",
        "parameters",
        "materialProperties",
        "parameters",
        "materialProperties",
        "parameters",
        "materialProperties",
        "parameters",
        "materialProperties",
        "parameters",
        "materialProperties",
        "parameters",
        "materialProperties",
        "parameters",
        "materialProperties",
        "parameters",
        "materialProperties",
        "parameters",
        "camera",
        "scene",
        "geometry",
        "material",
        "scene",
        "scene",
        "_emptyScene",
        "textures",
        "scene",
        "material",
        "scene",
        "_currentRenderTarget",
        "_this",
        "_currentRenderTarget",
        "_currentRenderTarget",
        "LinearSRGBColorSpace",
        "material",
        "cubeuvmaps",
        "cubemaps",
        "material",
        "environment",
        "material",
        "geometry",
        "geometry",
        "geometry",
        "material",
        "material",
        "geometry",
        "geometry",
        "geometry",
        "material",
        "_currentRenderTarget",
        "_currentRenderTarget",
        "toneMapping",
        "_this",
        "geometry",
        "geometry",
        "geometry",
        "morphAttribute",
        "morphAttribute",
        "properties",
        "material",
        "currentRenderState",
        "_clippingEnabled",
        "_localClippingEnabled",
        "camera",
        "_currentCamera",
        "camera",
        "_currentCamera",
        "material",
        "_currentMaterialId",
        "clipping",
        "material",
        "camera",
        "useCache",
        "material",
        "materialProperties",
        "materialProperties",
        "materialProperties",
        "lights",
        "needsProgramChange",
        "materialProperties",
        "colorSpace1",
        "needsProgramChange",
        "materialProperties",
        "needsProgramChange",
        "materialProperties",
        "needsProgramChange",
        "materialProperties",
        "needsProgramChange",
        "materialProperties",
        "needsProgramChange",
        "materialProperties",
        "needsProgramChange",
        "materialProperties",
        "needsProgramChange",
        "materialProperties",
        "needsProgramChange",
        "materialProperties",
        "needsProgramChange",
        "materialProperties",
        "needsProgramChange",
        "materialProperties",
        "needsProgramChange",
        "materialProperties",
        "needsProgramChange",
        "materialProperties",
        "needsProgramChange",
        "materialProperties",
        "envMap",
        "needsProgramChange",
        "material",
        "materialProperties",
        "fog",
        "needsProgramChange",
        "materialProperties",
        "materialProperties",
        "clipping",
        "materialProperties",
        "clipping",
        "needsProgramChange",
        "materialProperties",
        "vertexAlphas",
        "needsProgramChange",
        "materialProperties",
        "vertexTangents",
        "needsProgramChange",
        "materialProperties",
        "morphTargets",
        "needsProgramChange",
        "materialProperties",
        "morphNormals",
        "needsProgramChange",
        "materialProperties",
        "morphColors",
        "needsProgramChange",
        "materialProperties",
        "toneMapping",
        "needsProgramChange",
        "materialProperties",
        "morphTargetsCount",
        "needsProgramChange",
        "needsProgramChange",
        "materialProperties",
        "material",
        "materialProperties",
        "needsProgramChange",
        "program",
        "getProgram",
        "material",
        "scene",
        "program",
        "materialProperties",
        "state",
        "program",
        "refreshProgram",
        "refreshMaterial",
        "refreshLights",
        "material",
        "_currentMaterialId",
        "_currentMaterialId",
        "material",
        "refreshMaterial",
        "refreshProgram",
        "_currentCamera",
        "camera",
        "p_uniforms",
        "_gl",
        "camera",
        "p_uniforms",
        "_gl",
        "camera",
        "p_uniforms",
        "uCamPos",
        "uCamPos",
        "_gl",
        "_vector3",
        "camera",
        "capabilities",
        "p_uniforms",
        "_gl",
        "camera",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "p_uniforms",
        "_gl",
        "camera",
        "_currentCamera",
        "camera",
        "_currentCamera",
        "camera",
        "refreshMaterial",
        "refreshLights",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "_gl",
        "skeleton",
        "skeleton",
        "skeleton",
        "p_uniforms",
        "_gl",
        "skeleton",
        "textures",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "_gl",
        "textures",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "_gl",
        "textures",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "_gl",
        "textures",
        "geometry",
        "morphAttributes",
        "morphAttributes",
        "morphAttributes",
        "morphtargets",
        "geometry",
        "program",
        "refreshMaterial",
        "materialProperties",
        "materialProperties",
        "p_uniforms",
        "_gl",
        "material",
        "material",
        "m_uniforms",
        "envMap",
        "m_uniforms",
        "envMap",
        "envMap",
        "material",
        "material",
        "scene",
        "m_uniforms",
        "scene",
        "refreshMaterial",
        "p_uniforms",
        "_gl",
        "_this",
        "materialProperties",
        "markUniformsLightsNeedsUpdate",
        "m_uniforms",
        "refreshLights",
        "fog",
        "material",
        "materials",
        "m_uniforms",
        "fog",
        "materials",
        "m_uniforms",
        "material",
        "_pixelRatio",
        "_height",
        "currentRenderState",
        "camera",
        "WebGLUniforms",
        "_gl",
        "getUniformList",
        "materialProperties",
        "m_uniforms",
        "textures",
        "material",
        "material",
        "WebGLUniforms",
        "_gl",
        "getUniformList",
        "materialProperties",
        "m_uniforms",
        "textures",
        "material",
        "material",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "_gl",
        "material",
        "material",
        "material",
        "groups",
        "i",
        "l",
        "i",
        "groups",
        "i",
        "uniformsGroups",
        "group",
        "program",
        "uniformsGroups",
        "group",
        "program",
        "program",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "_currentActiveCubeFace",
        "_currentActiveMipmapLevel",
        "_currentRenderTarget",
        "renderTarget",
        "colorTexture",
        "depthTexture",
        "properties",
        "renderTarget",
        "colorTexture",
        "properties",
        "renderTarget",
        "depthTexture",
        "properties",
        "renderTarget",
        "renderTargetProperties",
        "renderTargetProperties",
        "depthTexture",
        "renderTargetProperties",
        "extensions",
        "renderTargetProperties",
        "renderTarget",
        "defaultFramebuffer",
        "properties",
        "renderTarget",
        "renderTargetProperties",
        "defaultFramebuffer",
        "renderTargetProperties",
        "defaultFramebuffer",
        "renderTarget",
        "activeCubeFace",
        "activeMipmapLevel",
        "_currentRenderTarget",
        "renderTarget",
        "_currentActiveCubeFace",
        "activeCubeFace",
        "_currentActiveMipmapLevel",
        "activeMipmapLevel",
        "renderTarget",
        "properties",
        "renderTarget",
        "renderTargetProperties",
        "state",
        "_gl",
        "useDefaultFramebuffer",
        "renderTargetProperties",
        "textures",
        "renderTarget",
        "renderTargetProperties",
        "textures",
        "renderTarget",
        "properties",
        "renderTarget",
        "properties",
        "renderTarget",
        "renderTarget",
        "texture",
        "texture",
        "texture",
        "isRenderTarget3D",
        "properties",
        "renderTarget",
        "renderTarget",
        "__webglFramebuffer",
        "activeCubeFace",
        "framebuffer",
        "__webglFramebuffer",
        "activeCubeFace",
        "activeMipmapLevel",
        "framebuffer",
        "__webglFramebuffer",
        "activeCubeFace",
        "isCube",
        "renderTarget",
        "textures",
        "renderTarget",
        "framebuffer",
        "properties",
        "renderTarget",
        "__webglFramebuffer",
        "framebuffer",
        "__webglFramebuffer",
        "activeMipmapLevel",
        "framebuffer",
        "__webglFramebuffer",
        "_currentViewport",
        "renderTarget",
        "_currentScissor",
        "renderTarget",
        "_currentScissorTest",
        "renderTarget",
        "_currentViewport",
        "_viewport",
        "_pixelRatio",
        "_currentScissor",
        "_scissor",
        "_pixelRatio",
        "_currentScissorTest",
        "_scissorTest",
        "state",
        "_gl",
        "framebuffer",
        "framebufferBound",
        "useDefaultFramebuffer",
        "state",
        "renderTarget",
        "framebuffer",
        "state",
        "_currentViewport",
        "state",
        "_currentScissor",
        "state",
        "_currentScissorTest",
        "isCube",
        "properties",
        "renderTarget",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "activeCubeFace",
        "textureProperties",
        "activeMipmapLevel",
        "isRenderTarget3D",
        "properties",
        "renderTarget",
        "activeCubeFace",
        "_gl",
        "_gl",
        "_gl",
        "textureProperties",
        "activeMipmapLevel",
        "layer",
        "_currentMaterialId",
        "renderTarget",
        "x",
        "y",
        "width",
        "height",
        "buffer",
        "activeCubeFaceIndex",
        "renderTarget",
        "renderTarget",
        "properties",
        "renderTarget",
        "renderTarget",
        "activeCubeFaceIndex",
        "framebuffer",
        "framebuffer",
        "activeCubeFaceIndex",
        "framebuffer",
        "state",
        "_gl",
        "framebuffer",
        "renderTarget",
        "texture",
        "texture",
        "capabilities",
        "textureFormat",
        "capabilities",
        "textureType",
        "x",
        "x",
        "renderTarget",
        "width",
        "y",
        "y",
        "renderTarget",
        "height",
        "_gl",
        "x",
        "y",
        "width",
        "height",
        "utils",
        "textureFormat",
        "utils",
        "textureType",
        "buffer",
        "_currentRenderTarget",
        "properties",
        "_currentRenderTarget",
        "state",
        "_gl",
        "framebuffer",
        "renderTarget",
        "x",
        "y",
        "width",
        "height",
        "buffer",
        "activeCubeFaceIndex",
        "renderTarget",
        "renderTarget",
        "properties",
        "renderTarget",
        "renderTarget",
        "activeCubeFaceIndex",
        "framebuffer",
        "framebuffer",
        "activeCubeFaceIndex",
        "framebuffer",
        "state",
        "_gl",
        "framebuffer",
        "renderTarget",
        "texture",
        "texture",
        "capabilities",
        "textureFormat",
        "capabilities",
        "textureType",
        "x",
        "x",
        "renderTarget",
        "width",
        "y",
        "y",
        "renderTarget",
        "height",
        "_gl",
        "_gl",
        "_gl",
        "glBuffer",
        "_gl",
        "_gl",
        "buffer",
        "_gl",
        "_gl",
        "x",
        "y",
        "width",
        "height",
        "utils",
        "textureFormat",
        "utils",
        "textureType",
        "_gl",
        "_gl",
        "_gl",
        "probeAsync",
        "_gl",
        "sync",
        "_gl",
        "_gl",
        "glBuffer",
        "_gl",
        "_gl",
        "buffer",
        "_gl",
        "glBuffer",
        "_gl",
        "sync",
        "buffer",
        "_currentRenderTarget",
        "properties",
        "_currentRenderTarget",
        "state",
        "_gl",
        "framebuffer",
        "texture",
        "position",
        "level",
        "texture",
        "warnOnce",
        "position",
        "arguments",
        "texture",
        "arguments",
        "level",
        "texture",
        "levelScale",
        "texture",
        "levelScale",
        "position",
        "position",
        "position",
        "position",
        "textures",
        "texture",
        "_gl",
        "_gl",
        "level",
        "x",
        "y",
        "width",
        "height",
        "state",
        "srcTexture",
        "dstTexture",
        "srcRegion",
        "dstPosition",
        "level",
        "srcTexture",
        "warnOnce",
        "dstPosition",
        "arguments",
        "srcTexture",
        "arguments",
        "dstTexture",
        "arguments",
        "level",
        "arguments",
        "srcRegion",
        "srcRegion",
        "width",
        "srcRegion",
        "srcRegion",
        "height",
        "srcRegion",
        "srcRegion",
        "minX",
        "srcRegion",
        "minY",
        "srcRegion",
        "width",
        "srcTexture",
        "height",
        "srcTexture",
        "minX",
        "minY",
        "dstPosition",
        "dstX",
        "dstPosition",
        "dstY",
        "dstPosition",
        "dstX",
        "dstY",
        "utils",
        "dstTexture",
        "utils",
        "dstTexture",
        "textures",
        "dstTexture",
        "_gl",
        "_gl",
        "dstTexture",
        "_gl",
        "_gl",
        "dstTexture",
        "_gl",
        "_gl",
        "dstTexture",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "srcTexture",
        "srcTexture",
        "level",
        "srcTexture",
        "_gl",
        "_gl",
        "image",
        "_gl",
        "_gl",
        "image",
        "_gl",
        "_gl",
        "minX",
        "_gl",
        "_gl",
        "minY",
        "srcTexture",
        "_gl",
        "_gl",
        "level",
        "dstX",
        "dstY",
        "width",
        "height",
        "glFormat",
        "glType",
        "image",
        "srcTexture",
        "_gl",
        "_gl",
        "level",
        "dstX",
        "dstY",
        "image",
        "image",
        "glFormat",
        "image",
        "_gl",
        "_gl",
        "level",
        "dstX",
        "dstY",
        "width",
        "height",
        "glFormat",
        "glType",
        "image",
        "_gl",
        "_gl",
        "currentUnpackRowLen",
        "_gl",
        "_gl",
        "currentUnpackImageHeight",
        "_gl",
        "_gl",
        "currentUnpackSkipPixels",
        "_gl",
        "_gl",
        "currentUnpackSkipRows",
        "_gl",
        "_gl",
        "currentUnpackSkipImages",
        "level",
        "dstTexture",
        "_gl",
        "_gl",
        "state",
        "srcTexture",
        "dstTexture",
        "srcRegion",
        "dstPosition",
        "level",
        "srcTexture",
        "warnOnce",
        "srcRegion",
        "arguments",
        "dstPosition",
        "arguments",
        "srcTexture",
        "arguments",
        "dstTexture",
        "arguments",
        "level",
        "arguments",
        "srcTexture",
        "srcTexture",
        "level",
        "srcTexture",
        "srcRegion",
        "width",
        "srcRegion",
        "srcRegion",
        "height",
        "srcRegion",
        "srcRegion",
        "depth",
        "srcRegion",
        "srcRegion",
        "minX",
        "srcRegion",
        "minY",
        "srcRegion",
        "minZ",
        "srcRegion",
        "width",
        "image",
        "height",
        "image",
        "depth",
        "image",
        "minX",
        "minY",
        "minZ",
        "dstPosition",
        "dstX",
        "dstPosition",
        "dstY",
        "dstPosition",
        "dstZ",
        "dstPosition",
        "dstX",
        "dstY",
        "dstZ",
        "utils",
        "dstTexture",
        "utils",
        "dstTexture",
        "dstTexture",
        "textures",
        "dstTexture",
        "glTarget",
        "_gl",
        "dstTexture",
        "dstTexture",
        "textures",
        "dstTexture",
        "glTarget",
        "_gl",
        "_gl",
        "_gl",
        "dstTexture",
        "_gl",
        "_gl",
        "dstTexture",
        "_gl",
        "_gl",
        "dstTexture",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "image",
        "_gl",
        "_gl",
        "image",
        "_gl",
        "_gl",
        "minX",
        "_gl",
        "_gl",
        "minY",
        "_gl",
        "_gl",
        "minZ",
        "srcTexture",
        "srcTexture",
        "_gl",
        "glTarget",
        "level",
        "dstX",
        "dstY",
        "dstZ",
        "width",
        "height",
        "depth",
        "glFormat",
        "glType",
        "image",
        "dstTexture",
        "_gl",
        "glTarget",
        "level",
        "dstX",
        "dstY",
        "dstZ",
        "width",
        "height",
        "depth",
        "glFormat",
        "image",
        "_gl",
        "glTarget",
        "level",
        "dstX",
        "dstY",
        "dstZ",
        "width",
        "height",
        "depth",
        "glFormat",
        "glType",
        "image",
        "_gl",
        "_gl",
        "currentUnpackRowLen",
        "_gl",
        "_gl",
        "currentUnpackImageHeight",
        "_gl",
        "_gl",
        "currentUnpackSkipPixels",
        "_gl",
        "_gl",
        "currentUnpackSkipRows",
        "_gl",
        "_gl",
        "currentUnpackSkipImages",
        "level",
        "dstTexture",
        "_gl",
        "glTarget",
        "state",
        "target",
        "properties",
        "target",
        "textures",
        "target",
        "texture",
        "texture",
        "textures",
        "texture",
        "texture",
        "textures",
        "texture",
        "texture",
        "texture",
        "textures",
        "texture",
        "textures",
        "texture",
        "state",
        "_currentActiveCubeFace",
        "_currentActiveMipmapLevel",
        "_currentRenderTarget",
        "state",
        "bindingStates",
        "__THREE_DEVTOOLS__",
        "__THREE_DEVTOOLS__",
        "CustomEvent",
        "WebGLCoordinateSystem",
        "colorSpace1",
        "colorSpace1",
        "gl",
        "colorSpace1",
        "DisplayP3ColorSpace",
        "gl",
        "ColorManagement",
        "LinearDisplayP3ColorSpace",
        "color",
        "density",
        "Color",
        "color",
        "density",
        "FogExp2",
        "color",
        "near",
        "far",
        "Color",
        "color",
        "near",
        "far",
        "Fog",
        "Object3D",
        "Euler",
        "Euler",
        "__THREE_DEVTOOLS__",
        "__THREE_DEVTOOLS__",
        "CustomEvent",
        "source",
        "recursive",
        "source",
        "recursive",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "meta",
        "meta",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "array",
        "stride",
        "array",
        "stride",
        "array",
        "array",
        "stride",
        "StaticDrawUsage",
        "generateUUID",
        "value",
        "value",
        "warnOnce",
        "value",
        "value",
        "start",
        "count",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "index1",
        "attribute",
        "index2",
        "index1",
        "index2",
        "attribute",
        "i",
        "l",
        "i",
        "index1",
        "i",
        "attribute",
        "index2",
        "i",
        "value",
        "offset",
        "value",
        "offset",
        "data",
        "data",
        "data",
        "generateUUID",
        "data",
        "data",
        "data",
        "array",
        "ib",
        "ib",
        "callback",
        "callback",
        "data",
        "data",
        "data",
        "generateUUID",
        "data",
        "data",
        "Uint32Array",
        "Vector3",
        "interleavedBuffer",
        "itemSize",
        "offset",
        "normalized",
        "interleavedBuffer",
        "itemSize",
        "offset",
        "normalized",
        "value",
        "value",
        "m",
        "i",
        "l",
        "i",
        "_vector$6",
        "i",
        "_vector$6",
        "m",
        "i",
        "_vector$6",
        "_vector$6",
        "_vector$6",
        "m",
        "i",
        "l",
        "i",
        "_vector$6",
        "i",
        "_vector$6",
        "m",
        "i",
        "_vector$6",
        "_vector$6",
        "_vector$6",
        "m",
        "i",
        "l",
        "i",
        "_vector$6",
        "i",
        "_vector$6",
        "m",
        "i",
        "_vector$6",
        "_vector$6",
        "_vector$6",
        "index",
        "component",
        "index",
        "component",
        "value",
        "denormalize",
        "value",
        "value",
        "index",
        "component",
        "value",
        "value",
        "normalize",
        "value",
        "index",
        "component",
        "value",
        "index",
        "x",
        "x",
        "normalize",
        "x",
        "index",
        "x",
        "index",
        "y",
        "y",
        "normalize",
        "y",
        "index",
        "y",
        "index",
        "z",
        "z",
        "normalize",
        "z",
        "index",
        "z",
        "index",
        "w",
        "w",
        "normalize",
        "w",
        "index",
        "w",
        "index",
        "index",
        "x",
        "denormalize",
        "x",
        "x",
        "index",
        "index",
        "y",
        "denormalize",
        "y",
        "y",
        "index",
        "index",
        "z",
        "denormalize",
        "z",
        "z",
        "index",
        "index",
        "w",
        "denormalize",
        "w",
        "w",
        "index",
        "x",
        "y",
        "index",
        "index",
        "x",
        "normalize",
        "x",
        "y",
        "normalize",
        "y",
        "index",
        "x",
        "index",
        "y",
        "index",
        "x",
        "y",
        "z",
        "index",
        "index",
        "x",
        "normalize",
        "x",
        "y",
        "normalize",
        "y",
        "z",
        "normalize",
        "z",
        "index",
        "x",
        "index",
        "y",
        "index",
        "z",
        "index",
        "x",
        "y",
        "z",
        "w",
        "index",
        "index",
        "x",
        "normalize",
        "x",
        "y",
        "normalize",
        "y",
        "z",
        "normalize",
        "z",
        "w",
        "normalize",
        "w",
        "index",
        "x",
        "index",
        "y",
        "index",
        "z",
        "index",
        "w",
        "data",
        "data",
        "i",
        "i",
        "i",
        "j",
        "j",
        "array",
        "index",
        "j",
        "BufferAttribute",
        "array",
        "data",
        "data",
        "data",
        "data",
        "data",
        "InterleavedBufferAttribute",
        "data",
        "data",
        "data",
        "i",
        "i",
        "i",
        "j",
        "j",
        "array",
        "index",
        "j",
        "array",
        "data",
        "data",
        "data",
        "data",
        "data",
        "Material",
        "parameters",
        "Color",
        "parameters",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector2",
        "Vector2",
        "Matrix4",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector2",
        "Vector2",
        "Vector2",
        "Object3D",
        "material",
        "SpriteMaterial",
        "_geometry",
        "_geometry",
        "BufferGeometry",
        "Float32Array",
        "InterleavedBuffer",
        "float32Array",
        "_geometry",
        "_geometry",
        "InterleavedBufferAttribute",
        "interleavedBuffer",
        "_geometry",
        "InterleavedBufferAttribute",
        "interleavedBuffer",
        "_geometry",
        "material",
        "Vector2",
        "raycaster",
        "intersects",
        "raycaster",
        "_worldScale",
        "_viewWorldMatrix",
        "raycaster",
        "raycaster",
        "_mvPosition",
        "raycaster",
        "_worldScale",
        "_mvPosition",
        "rotation",
        "cos",
        "rotation",
        "sin",
        "rotation",
        "transformVertex",
        "_vA",
        "_mvPosition",
        "center",
        "_worldScale",
        "sin",
        "cos",
        "transformVertex",
        "_vB",
        "_mvPosition",
        "center",
        "_worldScale",
        "sin",
        "cos",
        "transformVertex",
        "_vC",
        "_mvPosition",
        "center",
        "_worldScale",
        "sin",
        "cos",
        "_uvA",
        "_uvB",
        "_uvC",
        "raycaster",
        "_vA",
        "_vB",
        "_vC",
        "_intersectPoint",
        "intersect",
        "transformVertex",
        "_vB",
        "_mvPosition",
        "center",
        "_worldScale",
        "sin",
        "cos",
        "_uvB",
        "intersect",
        "raycaster",
        "_vA",
        "_vC",
        "_vB",
        "_intersectPoint",
        "intersect",
        "raycaster",
        "_intersectPoint",
        "distance",
        "raycaster",
        "distance",
        "raycaster",
        "intersects",
        "distance",
        "_intersectPoint",
        "Triangle",
        "_intersectPoint",
        "_vA",
        "_vB",
        "_vC",
        "_uvA",
        "_uvB",
        "_uvC",
        "Vector2",
        "source",
        "recursive",
        "source",
        "recursive",
        "source",
        "source",
        "source",
        "vertexPosition",
        "mvPosition",
        "center",
        "scale",
        "sin",
        "cos",
        "_alignedPosition",
        "vertexPosition",
        "center",
        "scale",
        "sin",
        "_rotatedPosition",
        "cos",
        "_alignedPosition",
        "sin",
        "_alignedPosition",
        "_rotatedPosition",
        "sin",
        "_alignedPosition",
        "cos",
        "_alignedPosition",
        "_rotatedPosition",
        "_alignedPosition",
        "vertexPosition",
        "mvPosition",
        "vertexPosition",
        "_rotatedPosition",
        "vertexPosition",
        "_rotatedPosition",
        "vertexPosition",
        "_viewWorldMatrix",
        "Vector3",
        "Vector3",
        "Object3D",
        "source",
        "source",
        "source",
        "levels",
        "i",
        "l",
        "i",
        "levels",
        "i",
        "level",
        "level",
        "level",
        "source",
        "distance",
        "hysteresis",
        "distance",
        "distance",
        "l",
        "l",
        "levels",
        "l",
        "distance",
        "levels",
        "l",
        "levels",
        "l",
        "distance",
        "hysteresis",
        "distance",
        "levels",
        "i",
        "l",
        "levels",
        "i",
        "l",
        "i",
        "levels",
        "i",
        "levels",
        "i",
        "levelDistance",
        "levelDistance",
        "levels",
        "i",
        "distance",
        "levelDistance",
        "levels",
        "i",
        "raycaster",
        "intersects",
        "levels",
        "_v1$2",
        "raycaster",
        "_v1$2",
        "distance",
        "raycaster",
        "intersects",
        "camera",
        "levels",
        "_v1$2",
        "camera",
        "_v2$1",
        "_v1$2",
        "_v2$1",
        "camera",
        "levels",
        "i",
        "l",
        "levels",
        "i",
        "l",
        "i",
        "levels",
        "i",
        "levels",
        "i",
        "levelDistance",
        "levelDistance",
        "levels",
        "i",
        "distance",
        "levelDistance",
        "levels",
        "i",
        "levels",
        "i",
        "i",
        "i",
        "l",
        "i",
        "levels",
        "i",
        "meta",
        "meta",
        "data",
        "data",
        "levels",
        "i",
        "l",
        "i",
        "levels",
        "i",
        "data",
        "level",
        "level",
        "level",
        "data",
        "Vector3",
        "Vector4",
        "Vector4",
        "Vector3",
        "Matrix4",
        "Vector3",
        "Sphere",
        "Matrix4",
        "Ray",
        "Mesh",
        "geometry",
        "material",
        "geometry",
        "material",
        "AttachedBindMode",
        "Matrix4",
        "Matrix4",
        "Box3",
        "geometry",
        "i",
        "positionAttribute",
        "i",
        "i",
        "_vertex",
        "_vertex",
        "Sphere",
        "geometry",
        "i",
        "positionAttribute",
        "i",
        "i",
        "_vertex",
        "_vertex",
        "source",
        "recursive",
        "source",
        "recursive",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "raycaster",
        "intersects",
        "material",
        "_sphere$4",
        "_sphere$4",
        "matrixWorld",
        "raycaster",
        "_sphere$4",
        "_inverseMatrix$2",
        "matrixWorld",
        "_ray$2",
        "raycaster",
        "_inverseMatrix$2",
        "_ray$2",
        "raycaster",
        "intersects",
        "_ray$2",
        "index",
        "target",
        "index",
        "target",
        "index",
        "target",
        "target",
        "skeleton",
        "bindMatrix",
        "skeleton",
        "bindMatrix",
        "bindMatrix",
        "bindMatrix",
        "bindMatrix",
        "Vector4",
        "skinWeight",
        "i",
        "l",
        "i",
        "vector",
        "skinWeight",
        "i",
        "vector",
        "scale",
        "Infinity",
        "vector",
        "scale",
        "vector",
        "skinWeight",
        "i",
        "vector",
        "vector",
        "vector",
        "vector",
        "force",
        "force",
        "AttachedBindMode",
        "DetachedBindMode",
        "index",
        "vector",
        "_skinIndex",
        "geometry",
        "index",
        "_skinWeight",
        "geometry",
        "index",
        "_basePosition",
        "vector",
        "vector",
        "i",
        "i",
        "_skinWeight",
        "i",
        "weight",
        "_skinIndex",
        "i",
        "_matrix4",
        "skeleton",
        "boneIndex",
        "skeleton",
        "boneIndex",
        "vector",
        "_vector3",
        "_basePosition",
        "_matrix4",
        "weight",
        "vector",
        "Object3D",
        "Texture",
        "data",
        "width",
        "height",
        "format",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "NearestFilter",
        "minFilter",
        "NearestFilter",
        "anisotropy",
        "colorSpace1",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "colorSpace1",
        "data",
        "width",
        "height",
        "Matrix4",
        "Matrix4",
        "bones",
        "boneInverses",
        "generateUUID",
        "bones",
        "boneInverses",
        "Float32Array",
        "bones",
        "boneInverses",
        "bones",
        "boneInverses",
        "i",
        "il",
        "i",
        "Matrix4",
        "i",
        "il",
        "i",
        "Matrix4",
        "i",
        "inverse",
        "i",
        "inverse",
        "i",
        "il",
        "i",
        "i",
        "bone",
        "bone",
        "i",
        "i",
        "il",
        "i",
        "i",
        "bone",
        "bone",
        "bone",
        "bone",
        "bone",
        "bone",
        "bone",
        "bone",
        "bone",
        "bone",
        "bone",
        "bone",
        "bone",
        "bones",
        "i",
        "il",
        "i",
        "bones",
        "i",
        "bones",
        "i",
        "_identityMatrix$1",
        "_offsetMatrix",
        "matrix",
        "boneInverses",
        "i",
        "_offsetMatrix",
        "boneMatrices",
        "i",
        "boneTexture",
        "boneTexture",
        "Skeleton",
        "size",
        "size",
        "size",
        "size",
        "Float32Array",
        "size",
        "size",
        "boneMatrices",
        "DataTexture",
        "boneMatrices",
        "size",
        "size",
        "RGBAFormat",
        "FloatType",
        "boneTexture",
        "boneMatrices",
        "boneTexture",
        "name",
        "i",
        "il",
        "i",
        "i",
        "bone",
        "name",
        "bone",
        "json",
        "bones",
        "json",
        "json",
        "i",
        "l",
        "i",
        "json",
        "i",
        "bones",
        "uuid",
        "bone",
        "uuid",
        "bone",
        "Bone",
        "bone",
        "Matrix4",
        "json",
        "i",
        "data",
        "bones",
        "i",
        "l",
        "i",
        "bones",
        "i",
        "data",
        "bone",
        "boneInverses",
        "i",
        "data",
        "boneInverse",
        "data",
        "BufferAttribute",
        "array",
        "itemSize",
        "normalized",
        "meshPerAttribute",
        "array",
        "itemSize",
        "normalized",
        "meshPerAttribute",
        "source",
        "source",
        "source",
        "data",
        "data",
        "data",
        "Matrix4",
        "Matrix4",
        "Box3",
        "Matrix4",
        "Mesh",
        "Sphere",
        "Mesh",
        "geometry",
        "material",
        "count",
        "geometry",
        "material",
        "InstancedBufferAttribute",
        "Float32Array",
        "count",
        "count",
        "i",
        "count",
        "i",
        "i",
        "_identity",
        "Box3",
        "geometry",
        "geometry",
        "i",
        "count",
        "i",
        "i",
        "_instanceLocalMatrix",
        "_box3",
        "geometry",
        "_instanceLocalMatrix",
        "_box3",
        "Sphere",
        "geometry",
        "geometry",
        "i",
        "count",
        "i",
        "i",
        "_instanceLocalMatrix",
        "_sphere$3",
        "geometry",
        "_instanceLocalMatrix",
        "_sphere$3",
        "source",
        "recursive",
        "source",
        "recursive",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "index",
        "color",
        "color",
        "index",
        "index",
        "matrix",
        "matrix",
        "index",
        "index",
        "objectInfluences",
        "index",
        "len",
        "i",
        "objectInfluences",
        "i",
        "objectInfluences",
        "i",
        "array",
        "dataIndex",
        "i",
        "raycaster",
        "intersects",
        "_mesh$1",
        "_mesh$1",
        "_mesh$1",
        "_sphere$3",
        "_sphere$3",
        "matrixWorld",
        "raycaster",
        "_sphere$3",
        "instanceId",
        "raycastTimes",
        "instanceId",
        "instanceId",
        "_instanceLocalMatrix",
        "_instanceWorldMatrix",
        "matrixWorld",
        "_instanceLocalMatrix",
        "_mesh$1",
        "_instanceWorldMatrix",
        "_mesh$1",
        "raycaster",
        "_instanceIntersects",
        "_instanceIntersects",
        "i",
        "l",
        "i",
        "_instanceIntersects",
        "i",
        "intersect",
        "instanceId",
        "intersect",
        "intersects",
        "intersect",
        "_instanceIntersects",
        "index",
        "color",
        "InstancedBufferAttribute",
        "Float32Array",
        "color",
        "index",
        "index",
        "matrix",
        "matrix",
        "index",
        "index",
        "objectInfluences",
        "DataTexture",
        "Float32Array",
        "len",
        "len",
        "RedFormat",
        "FloatType",
        "i",
        "objectInfluences",
        "i",
        "morphInfluencesSum",
        "objectInfluences",
        "i",
        "morphInfluencesSum",
        "len",
        "index",
        "array",
        "dataIndex",
        "morphBaseInfluence",
        "array",
        "objectInfluences",
        "dataIndex",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "b",
        "a",
        "drawRange",
        "z",
        "index",
        "pool",
        "pool",
        "pool",
        "item",
        "item",
        "drawRange",
        "item",
        "drawRange",
        "item",
        "z",
        "item",
        "index",
        "Matrix4",
        "Matrix4",
        "Matrix4",
        "Color",
        "Matrix4",
        "Frustum",
        "Box3",
        "Sphere",
        "Vector3",
        "Vector3",
        "Vector3",
        "MultiDrawRenderList",
        "Mesh",
        "src",
        "target",
        "targetOffset",
        "target",
        "src",
        "src",
        "target",
        "src",
        "i",
        "vertexCount",
        "i",
        "c",
        "itemSize",
        "c",
        "target",
        "i",
        "targetOffset",
        "c",
        "src",
        "i",
        "c",
        "target",
        "src",
        "targetOffset",
        "itemSize",
        "target",
        "Mesh",
        "maxInstanceCount",
        "maxVertexCount",
        "maxIndexCount",
        "maxVertexCount",
        "material",
        "BufferGeometry",
        "material",
        "maxInstanceCount",
        "maxVertexCount",
        "maxIndexCount",
        "Int32Array",
        "maxInstanceCount",
        "Int32Array",
        "maxInstanceCount",
        "size",
        "size",
        "size",
        "size",
        "Float32Array",
        "size",
        "size",
        "DataTexture",
        "matricesArray",
        "size",
        "size",
        "RGBAFormat",
        "FloatType",
        "matricesTexture",
        "size",
        "size",
        "Uint32Array",
        "size",
        "size",
        "DataTexture",
        "indirectArray",
        "size",
        "size",
        "RedIntegerFormat",
        "UnsignedIntType",
        "indirectTexture",
        "size",
        "size",
        "Float32Array",
        "size",
        "size",
        "DataTexture",
        "colorsArray",
        "size",
        "size",
        "RGBAFormat",
        "FloatType",
        "colorsTexture",
        "ColorManagement",
        "colorsTexture",
        "reference",
        "attributeName",
        "reference",
        "reference",
        "attributeName",
        "array",
        "maxVertexCount",
        "itemSize",
        "BufferAttribute",
        "dstArray",
        "itemSize",
        "normalized",
        "geometry",
        "attributeName",
        "dstAttribute",
        "reference",
        "maxVertexCount",
        "Uint32Array",
        "maxIndexCount",
        "Uint16Array",
        "maxIndexCount",
        "geometry",
        "BufferAttribute",
        "indexArray",
        "geometry",
        "geometry",
        "batchGeometry",
        "attributeName",
        "batchGeometry",
        "geometry",
        "attributeName",
        "attributeName",
        "geometry",
        "attributeName",
        "batchGeometry",
        "attributeName",
        "srcAttribute",
        "dstAttribute",
        "srcAttribute",
        "dstAttribute",
        "func",
        "func",
        "Box3",
        "boundingBox",
        "i",
        "geometryCount",
        "i",
        "drawInfo",
        "i",
        "drawInfo",
        "i",
        "i",
        "_matrix$1",
        "geometryId",
        "_box$1",
        "_matrix$1",
        "boundingBox",
        "_box$1",
        "Sphere",
        "boundingSphere",
        "drawInfo",
        "i",
        "l",
        "i",
        "drawInfo",
        "i",
        "drawInfo",
        "i",
        "i",
        "_matrix$1",
        "geometryId",
        "_sphere$2",
        "_matrix$1",
        "boundingSphere",
        "_sphere$2",
        "geometryId",
        "geometryId",
        "matricesTexture",
        "_identityMatrix",
        "matricesArray",
        "drawId",
        "matricesTexture",
        "colorsTexture",
        "_whiteColor",
        "colorsTexture",
        "drawId",
        "colorsTexture",
        "drawId",
        "geometry",
        "vertexCount",
        "indexCount",
        "geometry",
        "geometry",
        "lastRange",
        "reservedRanges",
        "reservedRanges",
        "vertexCount",
        "reservedRange",
        "geometry",
        "reservedRange",
        "vertexCount",
        "lastRange",
        "reservedRange",
        "reservedRange",
        "lastRange",
        "lastRange",
        "geometry",
        "index",
        "hasIndex",
        "indexCount",
        "reservedRange",
        "index",
        "reservedRange",
        "indexCount",
        "lastRange",
        "reservedRange",
        "reservedRange",
        "lastRange",
        "lastRange",
        "reservedRange",
        "reservedRange",
        "reservedRange",
        "reservedRange",
        "reservedRange",
        "reservedRanges",
        "reservedRange",
        "drawRanges",
        "hasIndex",
        "reservedRange",
        "reservedRange",
        "bounds",
        "Box3",
        "Sphere",
        "geometryId",
        "geometry",
        "geometryId",
        "geometryId",
        "geometry",
        "geometryId",
        "geometry",
        "batchGeometry",
        "batchGeometry",
        "geometry",
        "geometryId",
        "hasIndex",
        "srcIndex",
        "reservedRange",
        "geometry",
        "reservedRange",
        "reservedRange",
        "reservedRange",
        "attributeName",
        "batchGeometry",
        "geometry",
        "attributeName",
        "batchGeometry",
        "attributeName",
        "copyAttributeData",
        "srcAttribute",
        "dstAttribute",
        "vertexStart",
        "srcAttribute",
        "srcAttribute",
        "i",
        "l",
        "i",
        "vertexStart",
        "i",
        "c",
        "itemSize",
        "c",
        "dstAttribute",
        "index",
        "c",
        "dstAttribute",
        "dstAttribute",
        "vertexStart",
        "itemSize",
        "vertexCount",
        "itemSize",
        "hasIndex",
        "reservedRange",
        "i",
        "srcIndex",
        "i",
        "dstIndex",
        "indexStart",
        "i",
        "vertexStart",
        "srcIndex",
        "i",
        "srcIndex",
        "reservedRange",
        "i",
        "l",
        "i",
        "dstIndex",
        "indexStart",
        "i",
        "vertexStart",
        "dstIndex",
        "dstIndex",
        "indexStart",
        "reservedRange",
        "geometryId",
        "geometry",
        "bound",
        "geometry",
        "bound",
        "bound",
        "geometry",
        "bound",
        "geometry",
        "bound",
        "bound",
        "geometryId",
        "geometry",
        "drawRange",
        "hasIndex",
        "srcIndex",
        "posAttr",
        "geometryId",
        "geometryId",
        "target",
        "geometryId",
        "geometryId",
        "bound",
        "bound",
        "box",
        "geometry",
        "geometry",
        "geometryId",
        "drawRange",
        "drawRange",
        "drawRange",
        "i",
        "l",
        "i",
        "index",
        "iv",
        "index",
        "iv",
        "box",
        "_vector$5",
        "position",
        "iv",
        "bound",
        "target",
        "box",
        "target",
        "geometryId",
        "target",
        "geometryId",
        "geometryId",
        "bound",
        "bound",
        "sphere",
        "geometryId",
        "_box$1",
        "_box$1",
        "sphere",
        "geometry",
        "geometry",
        "geometryId",
        "drawRange",
        "drawRange",
        "drawRange",
        "i",
        "l",
        "i",
        "index",
        "iv",
        "index",
        "iv",
        "_vector$5",
        "position",
        "iv",
        "maxRadiusSq",
        "maxRadiusSq",
        "sphere",
        "_vector$5",
        "sphere",
        "maxRadiusSq",
        "bound",
        "target",
        "sphere",
        "target",
        "instanceId",
        "matrix",
        "instanceId",
        "drawInfo",
        "drawInfo",
        "instanceId",
        "matrix",
        "matricesArray",
        "instanceId",
        "matricesTexture",
        "instanceId",
        "matrix",
        "instanceId",
        "drawInfo",
        "drawInfo",
        "instanceId",
        "matrix",
        "matricesArray",
        "instanceId",
        "instanceId",
        "color",
        "instanceId",
        "drawInfo",
        "drawInfo",
        "instanceId",
        "color",
        "colorsArray",
        "instanceId",
        "colorsTexture",
        "instanceId",
        "color",
        "instanceId",
        "drawInfo",
        "drawInfo",
        "instanceId",
        "color",
        "colorsArray",
        "instanceId",
        "instanceId",
        "value",
        "instanceId",
        "drawInfo",
        "drawInfo",
        "instanceId",
        "drawInfo",
        "instanceId",
        "value",
        "drawInfo",
        "instanceId",
        "value",
        "instanceId",
        "instanceId",
        "drawInfo",
        "drawInfo",
        "instanceId",
        "drawInfo",
        "instanceId",
        "raycaster",
        "intersects",
        "_mesh",
        "_mesh",
        "batchGeometry",
        "_mesh",
        "batchGeometry",
        "_mesh",
        "_mesh",
        "Box3",
        "_mesh",
        "_mesh",
        "Sphere",
        "drawInfo",
        "i",
        "l",
        "i",
        "drawInfo",
        "i",
        "drawInfo",
        "i",
        "drawInfo",
        "i",
        "drawRanges",
        "geometryId",
        "_mesh",
        "drawRange",
        "drawRange",
        "i",
        "_mesh",
        "matrixWorld",
        "geometryId",
        "_mesh",
        "geometryId",
        "_mesh",
        "_mesh",
        "raycaster",
        "_batchIntersects",
        "_batchIntersects",
        "j",
        "l",
        "j",
        "_batchIntersects",
        "j",
        "intersect",
        "intersect",
        "i",
        "intersects",
        "intersect",
        "_batchIntersects",
        "_mesh",
        "_mesh",
        "_mesh",
        "_mesh",
        "Infinity",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "inf",
        "inf",
        "source",
        "bound",
        "bound",
        "bound",
        "bound",
        "bound",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "renderer",
        "scene",
        "camera",
        "geometry",
        "material",
        "geometry",
        "index",
        "index",
        "indirectTexture",
        "perObjectFrustumCulled",
        "_projScreenMatrix$2",
        "camera",
        "camera",
        "_frustum",
        "_projScreenMatrix$2",
        "renderer",
        "_invMatrixWorld",
        "_vector$5",
        "camera",
        "_invMatrixWorld",
        "_forward",
        "camera",
        "_invMatrixWorld",
        "drawInfo",
        "i",
        "l",
        "i",
        "drawInfo",
        "i",
        "drawInfo",
        "i",
        "drawInfo",
        "i",
        "i",
        "_matrix$1",
        "geometryId",
        "_sphere$2",
        "_matrix$1",
        "perObjectFrustumCulled",
        "culled",
        "_frustum",
        "_sphere$2",
        "culled",
        "_temp",
        "_sphere$2",
        "_vector$5",
        "_forward",
        "_renderList",
        "drawRanges",
        "geometryId",
        "z",
        "i",
        "_renderList",
        "customSort",
        "material",
        "sortTransparent",
        "sortOpaque",
        "customSort",
        "camera",
        "i",
        "l",
        "i",
        "i",
        "multiDrawStarts",
        "count",
        "item",
        "bytesPerElement",
        "multiDrawCounts",
        "count",
        "item",
        "indirectArray",
        "count",
        "item",
        "count",
        "_renderList",
        "drawInfo",
        "i",
        "l",
        "i",
        "drawInfo",
        "i",
        "drawInfo",
        "i",
        "drawInfo",
        "i",
        "perObjectFrustumCulled",
        "i",
        "_matrix$1",
        "geometryId",
        "_sphere$2",
        "_matrix$1",
        "culled",
        "_frustum",
        "_sphere$2",
        "culled",
        "drawRanges",
        "geometryId",
        "multiDrawStarts",
        "count",
        "bytesPerElement",
        "multiDrawCounts",
        "count",
        "indirectArray",
        "count",
        "i",
        "count",
        "indirectTexture",
        "count",
        "renderer",
        "camera",
        "shadowCamera",
        "geometry",
        "depthMaterial",
        "renderer",
        "shadowCamera",
        "geometry",
        "depthMaterial",
        "Material",
        "parameters",
        "Color",
        "parameters",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "Vector3",
        "Vector3",
        "Matrix4",
        "Ray",
        "Sphere",
        "Vector3",
        "Vector3",
        "Object3D",
        "geometry",
        "BufferGeometry",
        "material",
        "LineBasicMaterial",
        "geometry",
        "material",
        "source",
        "recursive",
        "source",
        "recursive",
        "source",
        "source",
        "source",
        "source",
        "geometry",
        "geometry",
        "positionAttribute",
        "i",
        "l",
        "i",
        "_vStart",
        "positionAttribute",
        "i",
        "_vEnd",
        "positionAttribute",
        "i",
        "lineDistances",
        "i",
        "lineDistances",
        "i",
        "lineDistances",
        "i",
        "_vStart",
        "_vEnd",
        "geometry",
        "Float32BufferAttribute",
        "lineDistances",
        "raycaster",
        "intersects",
        "raycaster",
        "geometry",
        "geometry",
        "geometry",
        "_sphere$1",
        "geometry",
        "_sphere$1",
        "matrixWorld",
        "_sphere$1",
        "threshold",
        "raycaster",
        "_sphere$1",
        "_inverseMatrix$1",
        "matrixWorld",
        "_ray$1",
        "raycaster",
        "_inverseMatrix$1",
        "threshold",
        "localThreshold",
        "localThreshold",
        "geometry",
        "geometry",
        "attributes",
        "index",
        "drawRange",
        "index",
        "drawRange",
        "drawRange",
        "end",
        "i",
        "l",
        "i",
        "step",
        "index",
        "i",
        "index",
        "i",
        "checkIntersection",
        "raycaster",
        "_ray$1",
        "localThresholdSq",
        "a",
        "b",
        "intersect",
        "intersects",
        "intersect",
        "index",
        "end",
        "index",
        "start",
        "checkIntersection",
        "raycaster",
        "_ray$1",
        "localThresholdSq",
        "a",
        "b",
        "intersect",
        "intersects",
        "intersect",
        "drawRange",
        "positionAttribute",
        "drawRange",
        "drawRange",
        "end",
        "i",
        "l",
        "i",
        "step",
        "checkIntersection",
        "raycaster",
        "_ray$1",
        "localThresholdSq",
        "i",
        "i",
        "intersect",
        "intersects",
        "intersect",
        "checkIntersection",
        "raycaster",
        "_ray$1",
        "localThresholdSq",
        "end",
        "start",
        "intersect",
        "intersects",
        "intersect",
        "geometry",
        "morphAttributes",
        "keys",
        "morphAttributes",
        "keys",
        "morphAttribute",
        "morphAttribute",
        "m",
        "ml",
        "m",
        "morphAttribute",
        "m",
        "m",
        "name",
        "m",
        "raycaster",
        "ray",
        "thresholdSq",
        "a",
        "b",
        "_vStart",
        "positionAttribute",
        "a",
        "_vEnd",
        "positionAttribute",
        "b",
        "ray",
        "_vStart",
        "_vEnd",
        "_intersectPointOnRay",
        "_intersectPointOnSegment",
        "distSq",
        "thresholdSq",
        "_intersectPointOnRay",
        "raycaster",
        "_intersectPointOnRay",
        "distance",
        "raycaster",
        "distance",
        "raycaster",
        "distance",
        "_intersectPointOnSegment",
        "a",
        "Vector3",
        "Vector3",
        "Line",
        "geometry",
        "material",
        "geometry",
        "material",
        "geometry",
        "geometry",
        "positionAttribute",
        "i",
        "l",
        "i",
        "_start",
        "positionAttribute",
        "i",
        "_end",
        "positionAttribute",
        "i",
        "lineDistances",
        "i",
        "i",
        "lineDistances",
        "i",
        "lineDistances",
        "i",
        "lineDistances",
        "i",
        "_start",
        "_end",
        "geometry",
        "Float32BufferAttribute",
        "lineDistances",
        "Line",
        "geometry",
        "material",
        "geometry",
        "material",
        "Material",
        "parameters",
        "Color",
        "parameters",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "Matrix4",
        "Ray",
        "Sphere",
        "Vector3",
        "Object3D",
        "geometry",
        "BufferGeometry",
        "material",
        "PointsMaterial",
        "geometry",
        "material",
        "source",
        "recursive",
        "source",
        "recursive",
        "source",
        "source",
        "source",
        "source",
        "raycaster",
        "intersects",
        "raycaster",
        "geometry",
        "geometry",
        "geometry",
        "_sphere",
        "geometry",
        "_sphere",
        "matrixWorld",
        "_sphere",
        "threshold",
        "raycaster",
        "_sphere",
        "_inverseMatrix",
        "matrixWorld",
        "_ray",
        "raycaster",
        "_inverseMatrix",
        "threshold",
        "localThreshold",
        "localThreshold",
        "geometry",
        "geometry",
        "attributes",
        "index",
        "drawRange",
        "index",
        "drawRange",
        "drawRange",
        "i",
        "il",
        "i",
        "index",
        "i",
        "_position$2",
        "positionAttribute",
        "a",
        "testPoint",
        "_position$2",
        "a",
        "localThresholdSq",
        "matrixWorld",
        "raycaster",
        "intersects",
        "drawRange",
        "positionAttribute",
        "drawRange",
        "drawRange",
        "i",
        "l",
        "i",
        "_position$2",
        "positionAttribute",
        "i",
        "testPoint",
        "_position$2",
        "i",
        "localThresholdSq",
        "matrixWorld",
        "raycaster",
        "intersects",
        "geometry",
        "morphAttributes",
        "keys",
        "morphAttributes",
        "keys",
        "morphAttribute",
        "morphAttribute",
        "m",
        "ml",
        "m",
        "morphAttribute",
        "m",
        "m",
        "name",
        "m",
        "point",
        "index",
        "localThresholdSq",
        "matrixWorld",
        "raycaster",
        "intersects",
        "_ray",
        "point",
        "rayPointDistanceSq",
        "localThresholdSq",
        "Vector3",
        "_ray",
        "point",
        "intersectPoint",
        "intersectPoint",
        "matrixWorld",
        "raycaster",
        "intersectPoint",
        "distance",
        "raycaster",
        "distance",
        "raycaster",
        "intersects",
        "distance",
        "rayPointDistanceSq",
        "intersectPoint",
        "index",
        "Texture",
        "video",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "video",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "minFilter",
        "minFilter",
        "LinearFilter",
        "magFilter",
        "magFilter",
        "LinearFilter",
        "scope",
        "video",
        "updateVideo",
        "video",
        "video",
        "updateVideo",
        "video",
        "hasVideoFrameCallback",
        "video",
        "video",
        "Texture",
        "width",
        "height",
        "NearestFilter",
        "NearestFilter",
        "Texture",
        "mipmaps",
        "width",
        "height",
        "format",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "anisotropy",
        "colorSpace1",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "colorSpace1",
        "width",
        "height",
        "mipmaps",
        "CompressedTexture",
        "mipmaps",
        "width",
        "height",
        "depth",
        "format",
        "mipmaps",
        "width",
        "height",
        "format",
        "depth",
        "ClampToEdgeWrapping",
        "layerIndex",
        "layerIndex",
        "CompressedTexture",
        "images",
        "format",
        "images",
        "images",
        "format",
        "CubeReflectionMapping",
        "images",
        "Texture",
        "canvas",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "canvas",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "u",
        "optionalTarget",
        "u",
        "t",
        "optionalTarget",
        "divisions",
        "d",
        "divisions",
        "d",
        "points",
        "d",
        "divisions",
        "points",
        "divisions",
        "d",
        "divisions",
        "d",
        "points",
        "d",
        "divisions",
        "points",
        "lengths",
        "lengths",
        "divisions",
        "divisions",
        "cache",
        "p",
        "divisions",
        "p",
        "current",
        "p",
        "divisions",
        "sum",
        "current",
        "last",
        "cache",
        "sum",
        "last",
        "current",
        "cache",
        "cache",
        "u",
        "distance",
        "arcLengths",
        "distance",
        "targetArcLength",
        "distance",
        "targetArcLength",
        "u",
        "arcLengths",
        "il",
        "il",
        "low",
        "high",
        "i",
        "low",
        "high",
        "low",
        "comparison",
        "arcLengths",
        "i",
        "targetArcLength",
        "comparison",
        "low",
        "i",
        "comparison",
        "high",
        "i",
        "high",
        "i",
        "i",
        "high",
        "arcLengths",
        "i",
        "targetArcLength",
        "i",
        "il",
        "arcLengths",
        "i",
        "arcLengths",
        "i",
        "lengthAfter",
        "lengthBefore",
        "targetArcLength",
        "lengthBefore",
        "segmentLength",
        "i",
        "segmentFraction",
        "il",
        "t",
        "t",
        "optionalTarget",
        "t",
        "delta",
        "t",
        "delta",
        "t1",
        "t1",
        "t2",
        "t2",
        "t1",
        "t2",
        "optionalTarget",
        "pt1",
        "Vector2",
        "Vector3",
        "tangent",
        "pt2",
        "pt1",
        "tangent",
        "u",
        "optionalTarget",
        "u",
        "t",
        "optionalTarget",
        "segments",
        "closed",
        "Vector3",
        "Vector3",
        "Matrix4",
        "i",
        "segments",
        "i",
        "i",
        "segments",
        "tangents",
        "i",
        "u",
        "Vector3",
        "normals",
        "Vector3",
        "binormals",
        "Vector3",
        "tangents",
        "tangents",
        "tangents",
        "tx",
        "min",
        "min",
        "tx",
        "normal",
        "ty",
        "min",
        "min",
        "ty",
        "normal",
        "tz",
        "min",
        "normal",
        "vec",
        "tangents",
        "normal",
        "normals",
        "tangents",
        "vec",
        "binormals",
        "tangents",
        "normals",
        "i",
        "segments",
        "i",
        "normals",
        "i",
        "normals",
        "i",
        "binormals",
        "i",
        "binormals",
        "i",
        "vec",
        "tangents",
        "i",
        "tangents",
        "i",
        "vec",
        "vec",
        "clamp",
        "tangents",
        "i",
        "tangents",
        "i",
        "normals",
        "i",
        "mat",
        "vec",
        "theta",
        "binormals",
        "i",
        "tangents",
        "i",
        "normals",
        "i",
        "closed",
        "clamp",
        "normals",
        "normals",
        "segments",
        "theta",
        "segments",
        "tangents",
        "vec",
        "normals",
        "normals",
        "segments",
        "theta",
        "theta",
        "i",
        "segments",
        "i",
        "normals",
        "i",
        "mat",
        "tangents",
        "i",
        "theta",
        "i",
        "binormals",
        "i",
        "tangents",
        "i",
        "normals",
        "i",
        "tangents",
        "normals",
        "binormals",
        "source",
        "source",
        "data",
        "data",
        "data",
        "json",
        "json",
        "Curve",
        "aX",
        "aY",
        "xRadius",
        "yRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aRotation",
        "aX",
        "aY",
        "xRadius",
        "yRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aRotation",
        "t",
        "optionalTarget",
        "Vector2",
        "deltaAngle",
        "deltaAngle",
        "deltaAngle",
        "twoPi",
        "deltaAngle",
        "twoPi",
        "deltaAngle",
        "twoPi",
        "deltaAngle",
        "samePoints",
        "deltaAngle",
        "deltaAngle",
        "twoPi",
        "samePoints",
        "deltaAngle",
        "twoPi",
        "deltaAngle",
        "twoPi",
        "deltaAngle",
        "deltaAngle",
        "twoPi",
        "t",
        "deltaAngle",
        "angle",
        "angle",
        "x",
        "y",
        "x",
        "tx",
        "cos",
        "ty",
        "sin",
        "y",
        "tx",
        "sin",
        "ty",
        "cos",
        "point",
        "x",
        "y",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "json",
        "json",
        "json",
        "json",
        "json",
        "json",
        "json",
        "json",
        "json",
        "json",
        "EllipseCurve",
        "aX",
        "aY",
        "aRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aX",
        "aY",
        "aRadius",
        "aRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "x0",
        "x1",
        "t0",
        "t1",
        "c0",
        "x0",
        "c1",
        "t0",
        "c2",
        "x0",
        "x1",
        "t0",
        "t1",
        "c3",
        "x0",
        "x1",
        "t0",
        "t1",
        "x0",
        "x1",
        "x2",
        "x3",
        "tension",
        "init",
        "x1",
        "x2",
        "tension",
        "x2",
        "x0",
        "tension",
        "x3",
        "x1",
        "x0",
        "x1",
        "x2",
        "x3",
        "dt0",
        "dt1",
        "dt2",
        "x1",
        "x0",
        "dt0",
        "x2",
        "x0",
        "dt0",
        "dt1",
        "x2",
        "x1",
        "dt1",
        "x2",
        "x1",
        "dt1",
        "x3",
        "x1",
        "dt1",
        "dt2",
        "x3",
        "x2",
        "dt2",
        "t1",
        "dt1",
        "t2",
        "dt1",
        "init",
        "x1",
        "x2",
        "t1",
        "t2",
        "t",
        "t",
        "t",
        "t2",
        "t",
        "c0",
        "c1",
        "t",
        "c2",
        "t2",
        "c3",
        "t3",
        "Vector3",
        "CubicPoly",
        "CubicPoly",
        "CubicPoly",
        "Curve",
        "points",
        "closed",
        "curveType",
        "tension",
        "points",
        "closed",
        "curveType",
        "tension",
        "t",
        "optionalTarget",
        "Vector3",
        "points",
        "l",
        "t",
        "p",
        "p",
        "intPoint",
        "intPoint",
        "intPoint",
        "intPoint",
        "l",
        "l",
        "weight",
        "intPoint",
        "l",
        "intPoint",
        "l",
        "weight",
        "intPoint",
        "p0",
        "points",
        "intPoint",
        "l",
        "tmp",
        "points",
        "points",
        "points",
        "p0",
        "tmp",
        "points",
        "intPoint",
        "l",
        "points",
        "intPoint",
        "l",
        "intPoint",
        "l",
        "p3",
        "points",
        "intPoint",
        "l",
        "tmp",
        "points",
        "l",
        "points",
        "l",
        "points",
        "l",
        "p3",
        "tmp",
        "p0",
        "p1",
        "pow",
        "p1",
        "p2",
        "pow",
        "p2",
        "p3",
        "pow",
        "dt1",
        "dt1",
        "dt0",
        "dt0",
        "dt1",
        "dt2",
        "dt2",
        "dt1",
        "px",
        "p0",
        "p1",
        "p2",
        "p3",
        "dt0",
        "dt1",
        "dt2",
        "py",
        "p0",
        "p1",
        "p2",
        "p3",
        "dt0",
        "dt1",
        "dt2",
        "pz",
        "p0",
        "p1",
        "p2",
        "p3",
        "dt0",
        "dt1",
        "dt2",
        "px",
        "p0",
        "p1",
        "p2",
        "p3",
        "py",
        "p0",
        "p1",
        "p2",
        "p3",
        "pz",
        "p0",
        "p1",
        "p2",
        "p3",
        "point",
        "px",
        "weight",
        "py",
        "weight",
        "pz",
        "weight",
        "point",
        "source",
        "source",
        "source",
        "i",
        "l",
        "i",
        "source",
        "i",
        "point",
        "source",
        "source",
        "source",
        "data",
        "i",
        "l",
        "i",
        "i",
        "data",
        "point",
        "data",
        "data",
        "data",
        "data",
        "json",
        "json",
        "json",
        "i",
        "l",
        "i",
        "json",
        "i",
        "Vector3",
        "point",
        "json",
        "json",
        "json",
        "t",
        "p0",
        "p1",
        "p2",
        "p3",
        "p2",
        "p0",
        "p3",
        "p1",
        "t",
        "t",
        "t",
        "t2",
        "p1",
        "p2",
        "v0",
        "v1",
        "t3",
        "p1",
        "p2",
        "v0",
        "v1",
        "t2",
        "v0",
        "t",
        "p1",
        "t",
        "p",
        "t",
        "k",
        "k",
        "p",
        "t",
        "p",
        "t",
        "t",
        "p",
        "t",
        "p",
        "t",
        "t",
        "p",
        "t",
        "p0",
        "p1",
        "p2",
        "QuadraticBezierP0",
        "t",
        "p0",
        "QuadraticBezierP1",
        "t",
        "p1",
        "QuadraticBezierP2",
        "t",
        "p2",
        "t",
        "p",
        "t",
        "k",
        "k",
        "k",
        "p",
        "t",
        "p",
        "t",
        "k",
        "k",
        "t",
        "p",
        "t",
        "p",
        "t",
        "t",
        "t",
        "p",
        "t",
        "p",
        "t",
        "t",
        "t",
        "p",
        "t",
        "p0",
        "p1",
        "p2",
        "p3",
        "CubicBezierP0",
        "t",
        "p0",
        "CubicBezierP1",
        "t",
        "p1",
        "CubicBezierP2",
        "t",
        "p2",
        "CubicBezierP3",
        "t",
        "p3",
        "Curve",
        "v0",
        "Vector2",
        "v1",
        "Vector2",
        "v2",
        "Vector2",
        "v3",
        "Vector2",
        "v0",
        "v1",
        "v2",
        "v3",
        "t",
        "optionalTarget",
        "Vector2",
        "point",
        "CubicBezier",
        "t",
        "v0",
        "v1",
        "v2",
        "v3",
        "CubicBezier",
        "t",
        "v0",
        "v1",
        "v2",
        "v3",
        "point",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "data",
        "data",
        "data",
        "data",
        "data",
        "json",
        "json",
        "json",
        "json",
        "json",
        "json",
        "Curve",
        "v0",
        "Vector3",
        "v1",
        "Vector3",
        "v2",
        "Vector3",
        "v3",
        "Vector3",
        "v0",
        "v1",
        "v2",
        "v3",
        "t",
        "optionalTarget",
        "Vector3",
        "point",
        "CubicBezier",
        "t",
        "v0",
        "v1",
        "v2",
        "v3",
        "CubicBezier",
        "t",
        "v0",
        "v1",
        "v2",
        "v3",
        "CubicBezier",
        "t",
        "v0",
        "v1",
        "v2",
        "v3",
        "point",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "data",
        "data",
        "data",
        "data",
        "data",
        "json",
        "json",
        "json",
        "json",
        "json",
        "json",
        "Curve",
        "v1",
        "Vector2",
        "v2",
        "Vector2",
        "v1",
        "v2",
        "t",
        "optionalTarget",
        "Vector2",
        "t",
        "point",
        "point",
        "point",
        "t",
        "point",
        "u",
        "optionalTarget",
        "u",
        "optionalTarget",
        "t",
        "optionalTarget",
        "Vector2",
        "optionalTarget",
        "u",
        "optionalTarget",
        "u",
        "optionalTarget",
        "source",
        "source",
        "source",
        "source",
        "data",
        "data",
        "data",
        "json",
        "json",
        "json",
        "json",
        "Curve",
        "v1",
        "Vector3",
        "v2",
        "Vector3",
        "v1",
        "v2",
        "t",
        "optionalTarget",
        "Vector3",
        "t",
        "point",
        "point",
        "point",
        "t",
        "point",
        "u",
        "optionalTarget",
        "u",
        "optionalTarget",
        "t",
        "optionalTarget",
        "Vector3",
        "optionalTarget",
        "u",
        "optionalTarget",
        "u",
        "optionalTarget",
        "source",
        "source",
        "source",
        "source",
        "data",
        "data",
        "data",
        "json",
        "json",
        "json",
        "json",
        "Curve",
        "v0",
        "Vector2",
        "v1",
        "Vector2",
        "v2",
        "Vector2",
        "v0",
        "v1",
        "v2",
        "t",
        "optionalTarget",
        "Vector2",
        "point",
        "QuadraticBezier",
        "t",
        "v0",
        "v1",
        "v2",
        "QuadraticBezier",
        "t",
        "v0",
        "v1",
        "v2",
        "point",
        "source",
        "source",
        "source",
        "source",
        "source",
        "data",
        "data",
        "data",
        "data",
        "json",
        "json",
        "json",
        "json",
        "json",
        "Curve",
        "v0",
        "Vector3",
        "v1",
        "Vector3",
        "v2",
        "Vector3",
        "v0",
        "v1",
        "v2",
        "t",
        "optionalTarget",
        "Vector3",
        "point",
        "QuadraticBezier",
        "t",
        "v0",
        "v1",
        "v2",
        "QuadraticBezier",
        "t",
        "v0",
        "v1",
        "v2",
        "QuadraticBezier",
        "t",
        "v0",
        "v1",
        "v2",
        "point",
        "source",
        "source",
        "source",
        "source",
        "source",
        "data",
        "data",
        "data",
        "data",
        "json",
        "json",
        "json",
        "json",
        "json",
        "Curve",
        "points",
        "points",
        "t",
        "optionalTarget",
        "Vector2",
        "points",
        "t",
        "p",
        "p",
        "intPoint",
        "points",
        "intPoint",
        "intPoint",
        "intPoint",
        "points",
        "intPoint",
        "points",
        "intPoint",
        "points",
        "points",
        "intPoint",
        "points",
        "intPoint",
        "points",
        "points",
        "intPoint",
        "point",
        "CatmullRom",
        "weight",
        "p0",
        "p1",
        "p2",
        "p3",
        "CatmullRom",
        "weight",
        "p0",
        "p1",
        "p2",
        "p3",
        "point",
        "source",
        "source",
        "source",
        "i",
        "l",
        "i",
        "source",
        "i",
        "point",
        "data",
        "i",
        "l",
        "i",
        "i",
        "data",
        "point",
        "data",
        "json",
        "json",
        "json",
        "i",
        "l",
        "i",
        "json",
        "i",
        "Vector2",
        "point",
        "ArcCurve",
        "CatmullRomCurve3",
        "CubicBezierCurve",
        "CubicBezierCurve3",
        "EllipseCurve",
        "LineCurve",
        "LineCurve3",
        "QuadraticBezierCurve",
        "QuadraticBezierCurve3",
        "SplineCurve",
        "Curve",
        "curve",
        "curve",
        "startPoint",
        "endPoint",
        "startPoint",
        "Curves",
        "lineType",
        "endPoint",
        "startPoint",
        "t",
        "optionalTarget",
        "t",
        "i",
        "curveLengths",
        "curveLengths",
        "i",
        "d",
        "curveLengths",
        "i",
        "d",
        "i",
        "curve",
        "segmentLength",
        "diff",
        "segmentLength",
        "curve",
        "u",
        "optionalTarget",
        "i",
        "lens",
        "lens",
        "i",
        "l",
        "i",
        "sums",
        "i",
        "lengths",
        "sums",
        "lengths",
        "lengths",
        "divisions",
        "i",
        "divisions",
        "i",
        "points",
        "i",
        "divisions",
        "points",
        "points",
        "points",
        "divisions",
        "i",
        "curves",
        "i",
        "curves",
        "i",
        "curve",
        "divisions",
        "curve",
        "curve",
        "curve",
        "divisions",
        "curve",
        "divisions",
        "curve",
        "resolution",
        "j",
        "pts",
        "j",
        "pts",
        "j",
        "last",
        "last",
        "point",
        "points",
        "point",
        "last",
        "point",
        "points",
        "points",
        "points",
        "points",
        "points",
        "points",
        "points",
        "source",
        "source",
        "source",
        "i",
        "l",
        "i",
        "source",
        "i",
        "curve",
        "source",
        "data",
        "data",
        "i",
        "l",
        "i",
        "i",
        "data",
        "curve",
        "data",
        "json",
        "json",
        "json",
        "json",
        "i",
        "l",
        "i",
        "json",
        "i",
        "Curves",
        "curve",
        "curve",
        "CurvePath",
        "points",
        "Vector2",
        "points",
        "points",
        "points",
        "points",
        "points",
        "points",
        "i",
        "l",
        "i",
        "points",
        "i",
        "points",
        "i",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "LineCurve",
        "Vector2",
        "x",
        "y",
        "curve",
        "x",
        "y",
        "aCPx",
        "aCPy",
        "aX",
        "aY",
        "QuadraticBezierCurve",
        "Vector2",
        "aCPx",
        "aCPy",
        "Vector2",
        "aX",
        "aY",
        "curve",
        "aX",
        "aY",
        "aCP1x",
        "aCP1y",
        "aCP2x",
        "aCP2y",
        "aX",
        "aY",
        "CubicBezierCurve",
        "Vector2",
        "aCP1x",
        "aCP1y",
        "Vector2",
        "aCP2x",
        "aCP2y",
        "Vector2",
        "aX",
        "aY",
        "curve",
        "aX",
        "aY",
        "pts",
        "pts",
        "SplineCurve",
        "npts",
        "curve",
        "pts",
        "pts",
        "aX",
        "aY",
        "aRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aX",
        "x0",
        "aY",
        "y0",
        "aRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aX",
        "aY",
        "aRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aX",
        "aY",
        "aRadius",
        "aRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aX",
        "aY",
        "xRadius",
        "yRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aRotation",
        "aX",
        "x0",
        "aY",
        "y0",
        "xRadius",
        "yRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aRotation",
        "aX",
        "aY",
        "xRadius",
        "yRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aRotation",
        "EllipseCurve",
        "aX",
        "aY",
        "xRadius",
        "yRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aRotation",
        "curve",
        "firstPoint",
        "firstPoint",
        "firstPoint",
        "curve",
        "curve",
        "lastPoint",
        "source",
        "source",
        "source",
        "data",
        "data",
        "json",
        "json",
        "json",
        "BufferGeometry",
        "points",
        "Vector2",
        "Vector2",
        "Vector2",
        "segments",
        "phiStart",
        "phiLength",
        "points",
        "segments",
        "phiStart",
        "phiLength",
        "segments",
        "segments",
        "phiLength",
        "clamp",
        "phiLength",
        "segments",
        "Vector3",
        "Vector2",
        "Vector3",
        "Vector3",
        "Vector3",
        "j",
        "points",
        "j",
        "j",
        "dx",
        "points",
        "j",
        "points",
        "j",
        "dy",
        "points",
        "j",
        "points",
        "j",
        "normal",
        "dy",
        "normal",
        "dx",
        "normal",
        "dy",
        "prevNormal",
        "normal",
        "normal",
        "initNormals",
        "normal",
        "normal",
        "normal",
        "points",
        "initNormals",
        "prevNormal",
        "prevNormal",
        "prevNormal",
        "dx",
        "points",
        "j",
        "points",
        "j",
        "dy",
        "points",
        "j",
        "points",
        "j",
        "normal",
        "dy",
        "normal",
        "dx",
        "normal",
        "dy",
        "curNormal",
        "normal",
        "normal",
        "prevNormal",
        "normal",
        "prevNormal",
        "normal",
        "prevNormal",
        "normal",
        "initNormals",
        "normal",
        "normal",
        "normal",
        "prevNormal",
        "curNormal",
        "i",
        "segments",
        "i",
        "phiStart",
        "i",
        "inverseSegments",
        "phiLength",
        "phi",
        "phi",
        "j",
        "points",
        "j",
        "vertex",
        "points",
        "j",
        "sin",
        "vertex",
        "points",
        "j",
        "vertex",
        "points",
        "j",
        "cos",
        "vertices",
        "vertex",
        "vertex",
        "vertex",
        "uv",
        "i",
        "segments",
        "uv",
        "j",
        "points",
        "uvs",
        "uv",
        "uv",
        "initNormals",
        "j",
        "sin",
        "initNormals",
        "j",
        "initNormals",
        "j",
        "cos",
        "normals",
        "x",
        "y",
        "z",
        "i",
        "segments",
        "i",
        "j",
        "points",
        "j",
        "j",
        "i",
        "points",
        "points",
        "points",
        "indices",
        "a",
        "b",
        "d",
        "indices",
        "c",
        "d",
        "b",
        "indices",
        "Float32BufferAttribute",
        "vertices",
        "Float32BufferAttribute",
        "uvs",
        "Float32BufferAttribute",
        "normals",
        "source",
        "source",
        "source",
        "data",
        "LatheGeometry",
        "data",
        "data",
        "data",
        "data",
        "LatheGeometry",
        "radius",
        "length",
        "capSegments",
        "radialSegments",
        "Path",
        "path",
        "length",
        "radius",
        "path",
        "length",
        "radius",
        "path",
        "capSegments",
        "radialSegments",
        "radius",
        "length",
        "capSegments",
        "radialSegments",
        "data",
        "CapsuleGeometry",
        "data",
        "data",
        "data",
        "data",
        "BufferGeometry",
        "radius",
        "segments",
        "thetaStart",
        "thetaLength",
        "radius",
        "segments",
        "thetaStart",
        "thetaLength",
        "segments",
        "segments",
        "Vector3",
        "Vector2",
        "vertices",
        "normals",
        "uvs",
        "s",
        "segments",
        "s",
        "i",
        "thetaStart",
        "s",
        "segments",
        "thetaLength",
        "vertex",
        "radius",
        "segment",
        "vertex",
        "radius",
        "segment",
        "vertices",
        "vertex",
        "vertex",
        "vertex",
        "normals",
        "uv",
        "vertices",
        "i",
        "radius",
        "uv",
        "vertices",
        "i",
        "radius",
        "uvs",
        "uv",
        "uv",
        "i",
        "segments",
        "i",
        "indices",
        "i",
        "i",
        "indices",
        "Float32BufferAttribute",
        "vertices",
        "Float32BufferAttribute",
        "normals",
        "Float32BufferAttribute",
        "uvs",
        "source",
        "source",
        "source",
        "data",
        "CircleGeometry",
        "data",
        "data",
        "data",
        "data",
        "BufferGeometry",
        "radiusTop",
        "radiusBottom",
        "height",
        "radialSegments",
        "heightSegments",
        "openEnded",
        "thetaStart",
        "thetaLength",
        "radiusTop",
        "radiusBottom",
        "height",
        "radialSegments",
        "heightSegments",
        "openEnded",
        "thetaStart",
        "thetaLength",
        "radialSegments",
        "radialSegments",
        "heightSegments",
        "heightSegments",
        "height",
        "generateTorso",
        "openEnded",
        "radiusTop",
        "generateCap",
        "radiusBottom",
        "generateCap",
        "indices",
        "Float32BufferAttribute",
        "vertices",
        "Float32BufferAttribute",
        "normals",
        "Float32BufferAttribute",
        "uvs",
        "Vector3",
        "Vector3",
        "radiusBottom",
        "radiusTop",
        "height",
        "y",
        "heightSegments",
        "y",
        "y",
        "heightSegments",
        "v",
        "radiusBottom",
        "radiusTop",
        "radiusTop",
        "x",
        "radialSegments",
        "x",
        "x",
        "radialSegments",
        "u",
        "thetaLength",
        "thetaStart",
        "theta",
        "theta",
        "vertex",
        "radius",
        "sinTheta",
        "vertex",
        "v",
        "height",
        "halfHeight",
        "vertex",
        "radius",
        "cosTheta",
        "vertices",
        "vertex",
        "vertex",
        "vertex",
        "normal",
        "sinTheta",
        "slope",
        "cosTheta",
        "normals",
        "normal",
        "normal",
        "normal",
        "uvs",
        "u",
        "v",
        "indexRow",
        "index",
        "indexArray",
        "indexRow",
        "x",
        "radialSegments",
        "x",
        "y",
        "heightSegments",
        "y",
        "indexArray",
        "y",
        "x",
        "indexArray",
        "y",
        "x",
        "indexArray",
        "y",
        "x",
        "indexArray",
        "y",
        "x",
        "indices",
        "a",
        "b",
        "d",
        "indices",
        "b",
        "c",
        "d",
        "groupCount",
        "scope",
        "groupStart",
        "groupCount",
        "groupStart",
        "groupCount",
        "top",
        "Vector2",
        "Vector3",
        "top",
        "radiusTop",
        "radiusBottom",
        "top",
        "x",
        "radialSegments",
        "x",
        "vertices",
        "halfHeight",
        "sign",
        "normals",
        "sign",
        "uvs",
        "index",
        "x",
        "radialSegments",
        "x",
        "x",
        "radialSegments",
        "u",
        "thetaLength",
        "thetaStart",
        "theta",
        "theta",
        "vertex",
        "radius",
        "sinTheta",
        "vertex",
        "halfHeight",
        "sign",
        "vertex",
        "radius",
        "cosTheta",
        "vertices",
        "vertex",
        "vertex",
        "vertex",
        "normals",
        "sign",
        "uv",
        "cosTheta",
        "uv",
        "sinTheta",
        "sign",
        "uvs",
        "uv",
        "uv",
        "index",
        "x",
        "radialSegments",
        "x",
        "centerIndexStart",
        "x",
        "centerIndexEnd",
        "x",
        "top",
        "indices",
        "i",
        "i",
        "c",
        "indices",
        "i",
        "i",
        "c",
        "groupCount",
        "scope",
        "groupStart",
        "groupCount",
        "top",
        "groupStart",
        "groupCount",
        "source",
        "source",
        "source",
        "data",
        "CylinderGeometry",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "CylinderGeometry",
        "radius",
        "height",
        "radialSegments",
        "heightSegments",
        "openEnded",
        "thetaStart",
        "thetaLength",
        "radius",
        "height",
        "radialSegments",
        "heightSegments",
        "openEnded",
        "thetaStart",
        "thetaLength",
        "radius",
        "height",
        "radialSegments",
        "heightSegments",
        "openEnded",
        "thetaStart",
        "thetaLength",
        "data",
        "ConeGeometry",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "BufferGeometry",
        "vertices",
        "indices",
        "radius",
        "detail",
        "vertices",
        "indices",
        "radius",
        "detail",
        "subdivide",
        "detail",
        "applyRadius",
        "radius",
        "generateUVs",
        "Float32BufferAttribute",
        "vertexBuffer",
        "Float32BufferAttribute",
        "vertexBuffer",
        "Float32BufferAttribute",
        "uvBuffer",
        "detail",
        "detail",
        "Vector3",
        "Vector3",
        "Vector3",
        "i",
        "indices",
        "i",
        "getVertexByIndex",
        "indices",
        "i",
        "a",
        "getVertexByIndex",
        "indices",
        "i",
        "b",
        "getVertexByIndex",
        "indices",
        "i",
        "c",
        "subdivideFace",
        "a",
        "b",
        "c",
        "detail",
        "a",
        "b",
        "c",
        "detail",
        "detail",
        "i",
        "cols",
        "i",
        "v",
        "i",
        "a",
        "c",
        "i",
        "cols",
        "b",
        "c",
        "i",
        "cols",
        "cols",
        "i",
        "j",
        "rows",
        "j",
        "j",
        "i",
        "cols",
        "v",
        "i",
        "j",
        "aj",
        "v",
        "i",
        "j",
        "aj",
        "bj",
        "j",
        "rows",
        "i",
        "cols",
        "i",
        "j",
        "cols",
        "i",
        "j",
        "j",
        "j",
        "pushVertex",
        "v",
        "i",
        "k",
        "pushVertex",
        "v",
        "i",
        "k",
        "pushVertex",
        "v",
        "i",
        "k",
        "pushVertex",
        "v",
        "i",
        "k",
        "pushVertex",
        "v",
        "i",
        "k",
        "pushVertex",
        "v",
        "i",
        "k",
        "radius",
        "Vector3",
        "i",
        "vertexBuffer",
        "i",
        "vertex",
        "vertexBuffer",
        "i",
        "vertex",
        "vertexBuffer",
        "i",
        "vertex",
        "vertexBuffer",
        "i",
        "vertex",
        "radius",
        "vertexBuffer",
        "i",
        "vertex",
        "vertexBuffer",
        "i",
        "vertex",
        "vertexBuffer",
        "i",
        "vertex",
        "Vector3",
        "i",
        "vertexBuffer",
        "i",
        "vertex",
        "vertexBuffer",
        "i",
        "vertex",
        "vertexBuffer",
        "i",
        "vertex",
        "vertexBuffer",
        "i",
        "azimuth",
        "vertex",
        "inclination",
        "vertex",
        "uvBuffer",
        "u",
        "v",
        "correctUVs",
        "correctSeam",
        "i",
        "uvBuffer",
        "i",
        "uvBuffer",
        "i",
        "uvBuffer",
        "i",
        "uvBuffer",
        "i",
        "x0",
        "x1",
        "x2",
        "x0",
        "x1",
        "x2",
        "max",
        "min",
        "x0",
        "uvBuffer",
        "i",
        "x1",
        "uvBuffer",
        "i",
        "x2",
        "uvBuffer",
        "i",
        "vertex",
        "vertexBuffer",
        "vertex",
        "vertex",
        "vertex",
        "index",
        "vertex",
        "index",
        "vertex",
        "vertices",
        "stride",
        "vertex",
        "vertices",
        "stride",
        "vertex",
        "vertices",
        "stride",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector2",
        "Vector2",
        "Vector2",
        "i",
        "vertexBuffer",
        "i",
        "j",
        "a",
        "vertexBuffer",
        "i",
        "vertexBuffer",
        "i",
        "vertexBuffer",
        "i",
        "b",
        "vertexBuffer",
        "i",
        "vertexBuffer",
        "i",
        "vertexBuffer",
        "i",
        "c",
        "vertexBuffer",
        "i",
        "vertexBuffer",
        "i",
        "vertexBuffer",
        "i",
        "uvA",
        "uvBuffer",
        "j",
        "uvBuffer",
        "j",
        "uvB",
        "uvBuffer",
        "j",
        "uvBuffer",
        "j",
        "uvC",
        "uvBuffer",
        "j",
        "uvBuffer",
        "j",
        "centroid",
        "a",
        "b",
        "c",
        "azimuth",
        "centroid",
        "correctUV",
        "uvA",
        "j",
        "a",
        "azi",
        "correctUV",
        "uvB",
        "j",
        "b",
        "azi",
        "correctUV",
        "uvC",
        "j",
        "c",
        "azi",
        "uv",
        "stride",
        "vector",
        "azimuth",
        "azimuth",
        "uv",
        "uvBuffer",
        "stride",
        "uv",
        "vector",
        "vector",
        "uvBuffer",
        "stride",
        "azimuth",
        "vector",
        "vector",
        "vector",
        "vector",
        "vector",
        "vector",
        "vector",
        "vector",
        "vector",
        "source",
        "source",
        "source",
        "data",
        "PolyhedronGeometry",
        "data",
        "data",
        "data",
        "data",
        "PolyhedronGeometry",
        "radius",
        "detail",
        "t",
        "r",
        "t",
        "r",
        "t",
        "r",
        "t",
        "r",
        "t",
        "r",
        "t",
        "r",
        "t",
        "r",
        "t",
        "r",
        "t",
        "t",
        "r",
        "t",
        "r",
        "t",
        "r",
        "t",
        "r",
        "vertices",
        "indices",
        "radius",
        "detail",
        "radius",
        "detail",
        "data",
        "DodecahedronGeometry",
        "data",
        "data",
        "Vector3",
        "Vector3",
        "Vector3",
        "Triangle",
        "BufferGeometry",
        "geometry",
        "thresholdAngle",
        "geometry",
        "thresholdAngle",
        "geometry",
        "precisionPoints",
        "DEG2RAD",
        "thresholdAngle",
        "geometry",
        "geometry",
        "indexAttr",
        "indexAttr",
        "positionAttr",
        "i",
        "indexCount",
        "i",
        "indexAttr",
        "indexArr",
        "indexAttr",
        "i",
        "indexArr",
        "indexAttr",
        "i",
        "indexArr",
        "indexAttr",
        "i",
        "indexArr",
        "i",
        "indexArr",
        "i",
        "indexArr",
        "i",
        "a",
        "positionAttr",
        "indexArr",
        "b",
        "positionAttr",
        "indexArr",
        "c",
        "positionAttr",
        "indexArr",
        "_triangle",
        "_normal",
        "hashes",
        "a",
        "precision",
        "a",
        "precision",
        "a",
        "precision",
        "hashes",
        "b",
        "precision",
        "b",
        "precision",
        "b",
        "precision",
        "hashes",
        "c",
        "precision",
        "c",
        "precision",
        "c",
        "precision",
        "hashes",
        "hashes",
        "hashes",
        "hashes",
        "hashes",
        "hashes",
        "j",
        "j",
        "j",
        "hashes",
        "j",
        "hashes",
        "jNext",
        "_triangle",
        "vertKeys",
        "j",
        "_triangle",
        "vertKeys",
        "jNext",
        "vecHash0",
        "vecHash1",
        "vecHash1",
        "vecHash0",
        "reverseHash",
        "edgeData",
        "edgeData",
        "reverseHash",
        "_normal",
        "edgeData",
        "reverseHash",
        "thresholdDot",
        "vertices",
        "v0",
        "v0",
        "v0",
        "vertices",
        "v1",
        "v1",
        "v1",
        "edgeData",
        "reverseHash",
        "hash",
        "edgeData",
        "edgeData",
        "hash",
        "indexArr",
        "j",
        "indexArr",
        "jNext",
        "_normal",
        "key",
        "edgeData",
        "edgeData",
        "key",
        "edgeData",
        "key",
        "_v0",
        "positionAttr",
        "index0",
        "_v1$1",
        "positionAttr",
        "index1",
        "vertices",
        "_v0",
        "_v0",
        "_v0",
        "vertices",
        "_v1$1",
        "_v1$1",
        "_v1$1",
        "Float32BufferAttribute",
        "vertices",
        "source",
        "source",
        "source",
        "Path",
        "points",
        "points",
        "generateUUID",
        "divisions",
        "i",
        "l",
        "i",
        "holesPts",
        "i",
        "i",
        "divisions",
        "holesPts",
        "divisions",
        "divisions",
        "divisions",
        "source",
        "source",
        "source",
        "i",
        "l",
        "i",
        "source",
        "i",
        "hole",
        "data",
        "data",
        "i",
        "l",
        "i",
        "i",
        "data",
        "hole",
        "data",
        "json",
        "json",
        "json",
        "json",
        "i",
        "l",
        "i",
        "json",
        "i",
        "Path",
        "hole",
        "data",
        "holeIndices",
        "dim",
        "holeIndices",
        "holeIndices",
        "hasHoles",
        "holeIndices",
        "dim",
        "data",
        "linkedList",
        "data",
        "outerLen",
        "dim",
        "outerNode",
        "outerNode",
        "outerNode",
        "triangles",
        "hasHoles",
        "outerNode",
        "eliminateHoles",
        "data",
        "holeIndices",
        "outerNode",
        "dim",
        "data",
        "dim",
        "minX",
        "maxX",
        "data",
        "minY",
        "maxY",
        "data",
        "i",
        "outerLen",
        "i",
        "dim",
        "x",
        "data",
        "i",
        "y",
        "data",
        "i",
        "x",
        "minX",
        "minX",
        "x",
        "y",
        "minY",
        "minY",
        "y",
        "x",
        "maxX",
        "maxX",
        "x",
        "y",
        "maxY",
        "maxY",
        "y",
        "invSize",
        "maxX",
        "minX",
        "maxY",
        "minY",
        "invSize",
        "invSize",
        "invSize",
        "earcutLinked",
        "outerNode",
        "triangles",
        "dim",
        "minX",
        "minY",
        "invSize",
        "triangles",
        "data",
        "start",
        "end",
        "dim",
        "clockwise",
        "clockwise",
        "signedArea",
        "data",
        "start",
        "end",
        "dim",
        "i",
        "start",
        "i",
        "end",
        "i",
        "dim",
        "last",
        "insertNode",
        "i",
        "data",
        "i",
        "data",
        "i",
        "last",
        "i",
        "end",
        "dim",
        "i",
        "start",
        "i",
        "dim",
        "last",
        "insertNode",
        "i",
        "data",
        "i",
        "data",
        "i",
        "last",
        "last",
        "equals",
        "last",
        "last",
        "removeNode",
        "last",
        "last",
        "last",
        "last",
        "start",
        "end",
        "start",
        "start",
        "end",
        "end",
        "start",
        "again",
        "p",
        "equals",
        "p",
        "p",
        "area",
        "p",
        "p",
        "p",
        "removeNode",
        "p",
        "p",
        "end",
        "p",
        "p",
        "p",
        "again",
        "p",
        "p",
        "again",
        "p",
        "end",
        "end",
        "ear",
        "triangles",
        "dim",
        "minX",
        "minY",
        "invSize",
        "ear",
        "invSize",
        "indexCurve",
        "ear",
        "minX",
        "minY",
        "invSize",
        "ear",
        "ear",
        "prev",
        "ear",
        "next",
        "ear",
        "invSize",
        "isEarHashed",
        "ear",
        "minX",
        "minY",
        "invSize",
        "isEar",
        "ear",
        "triangles",
        "prev",
        "dim",
        "triangles",
        "ear",
        "dim",
        "triangles",
        "next",
        "dim",
        "removeNode",
        "ear",
        "ear",
        "next",
        "stop",
        "next",
        "ear",
        "next",
        "ear",
        "stop",
        "earcutLinked",
        "filterPoints",
        "ear",
        "triangles",
        "dim",
        "minX",
        "minY",
        "invSize",
        "ear",
        "cureLocalIntersections",
        "filterPoints",
        "ear",
        "triangles",
        "dim",
        "earcutLinked",
        "ear",
        "triangles",
        "dim",
        "minX",
        "minY",
        "invSize",
        "splitEarcut",
        "ear",
        "triangles",
        "dim",
        "minX",
        "minY",
        "invSize",
        "ear",
        "ear",
        "ear",
        "area",
        "a",
        "b",
        "c",
        "a",
        "b",
        "c",
        "a",
        "b",
        "c",
        "ax",
        "bx",
        "ax",
        "cx",
        "ax",
        "cx",
        "bx",
        "cx",
        "bx",
        "cx",
        "ay",
        "by",
        "ay",
        "cy",
        "ay",
        "cy",
        "by",
        "cy",
        "by",
        "cy",
        "ax",
        "bx",
        "ax",
        "cx",
        "ax",
        "cx",
        "bx",
        "cx",
        "bx",
        "cx",
        "ay",
        "by",
        "ay",
        "cy",
        "ay",
        "cy",
        "by",
        "cy",
        "by",
        "cy",
        "c",
        "p",
        "a",
        "p",
        "x0",
        "p",
        "x1",
        "p",
        "y0",
        "p",
        "y1",
        "pointInTriangle",
        "ax",
        "ay",
        "bx",
        "by",
        "cx",
        "cy",
        "p",
        "p",
        "area",
        "p",
        "p",
        "p",
        "p",
        "p",
        "ear",
        "minX",
        "minY",
        "invSize",
        "ear",
        "ear",
        "area",
        "a",
        "b",
        "c",
        "a",
        "b",
        "c",
        "a",
        "b",
        "c",
        "ax",
        "bx",
        "ax",
        "cx",
        "ax",
        "cx",
        "bx",
        "cx",
        "bx",
        "cx",
        "ay",
        "by",
        "ay",
        "cy",
        "ay",
        "cy",
        "by",
        "cy",
        "by",
        "cy",
        "ax",
        "bx",
        "ax",
        "cx",
        "ax",
        "cx",
        "bx",
        "cx",
        "bx",
        "cx",
        "ay",
        "by",
        "ay",
        "cy",
        "ay",
        "cy",
        "by",
        "cy",
        "by",
        "cy",
        "zOrder",
        "x0",
        "y0",
        "minX",
        "minY",
        "invSize",
        "zOrder",
        "x1",
        "y1",
        "minX",
        "minY",
        "invSize",
        "ear",
        "ear",
        "p",
        "p",
        "minZ",
        "n",
        "n",
        "maxZ",
        "p",
        "x0",
        "p",
        "x1",
        "p",
        "y0",
        "p",
        "y1",
        "p",
        "a",
        "p",
        "c",
        "pointInTriangle",
        "ax",
        "ay",
        "bx",
        "by",
        "cx",
        "cy",
        "p",
        "p",
        "area",
        "p",
        "p",
        "p",
        "p",
        "p",
        "n",
        "x0",
        "n",
        "x1",
        "n",
        "y0",
        "n",
        "y1",
        "n",
        "a",
        "n",
        "c",
        "pointInTriangle",
        "ax",
        "ay",
        "bx",
        "by",
        "cx",
        "cy",
        "n",
        "n",
        "area",
        "n",
        "n",
        "n",
        "n",
        "n",
        "p",
        "p",
        "minZ",
        "p",
        "x0",
        "p",
        "x1",
        "p",
        "y0",
        "p",
        "y1",
        "p",
        "a",
        "p",
        "c",
        "pointInTriangle",
        "ax",
        "ay",
        "bx",
        "by",
        "cx",
        "cy",
        "p",
        "p",
        "area",
        "p",
        "p",
        "p",
        "p",
        "p",
        "n",
        "n",
        "maxZ",
        "n",
        "x0",
        "n",
        "x1",
        "n",
        "y0",
        "n",
        "y1",
        "n",
        "a",
        "n",
        "c",
        "pointInTriangle",
        "ax",
        "ay",
        "bx",
        "by",
        "cx",
        "cy",
        "n",
        "n",
        "area",
        "n",
        "n",
        "n",
        "n",
        "n",
        "start",
        "triangles",
        "dim",
        "p",
        "p",
        "equals",
        "a",
        "b",
        "intersects",
        "a",
        "p",
        "p",
        "b",
        "locallyInside",
        "a",
        "b",
        "locallyInside",
        "b",
        "a",
        "triangles",
        "a",
        "dim",
        "triangles",
        "p",
        "dim",
        "triangles",
        "b",
        "dim",
        "removeNode",
        "p",
        "removeNode",
        "p",
        "p",
        "start",
        "b",
        "p",
        "p",
        "p",
        "start",
        "filterPoints",
        "p",
        "start",
        "triangles",
        "dim",
        "minX",
        "minY",
        "invSize",
        "a",
        "b",
        "a",
        "a",
        "b",
        "isValidDiagonal",
        "a",
        "b",
        "splitPolygon",
        "a",
        "b",
        "a",
        "filterPoints",
        "a",
        "a",
        "c",
        "filterPoints",
        "c",
        "c",
        "earcutLinked",
        "a",
        "triangles",
        "dim",
        "minX",
        "minY",
        "invSize",
        "earcutLinked",
        "c",
        "triangles",
        "dim",
        "minX",
        "minY",
        "invSize",
        "b",
        "b",
        "a",
        "a",
        "a",
        "start",
        "data",
        "holeIndices",
        "outerNode",
        "dim",
        "i",
        "len",
        "holeIndices",
        "i",
        "len",
        "i",
        "start",
        "holeIndices",
        "i",
        "dim",
        "end",
        "i",
        "len",
        "holeIndices",
        "i",
        "dim",
        "data",
        "linkedList",
        "data",
        "start",
        "end",
        "dim",
        "queue",
        "getLeftmost",
        "queue",
        "compareX",
        "i",
        "i",
        "queue",
        "i",
        "outerNode",
        "eliminateHole",
        "queue",
        "i",
        "outerNode",
        "outerNode",
        "a",
        "b",
        "a",
        "b",
        "hole",
        "outerNode",
        "findHoleBridge",
        "hole",
        "outerNode",
        "bridge",
        "outerNode",
        "splitPolygon",
        "bridge",
        "hole",
        "filterPoints",
        "bridgeReverse",
        "bridgeReverse",
        "filterPoints",
        "bridge",
        "bridge",
        "hole",
        "outerNode",
        "Infinity",
        "hole",
        "hole",
        "hy",
        "p",
        "hy",
        "p",
        "p",
        "p",
        "p",
        "hy",
        "p",
        "p",
        "p",
        "p",
        "p",
        "x",
        "hx",
        "x",
        "qx",
        "qx",
        "x",
        "m",
        "p",
        "p",
        "p",
        "p",
        "x",
        "hx",
        "m",
        "p",
        "p",
        "p",
        "outerNode",
        "m",
        "m",
        "m",
        "p",
        "m",
        "hx",
        "p",
        "p",
        "mx",
        "hx",
        "p",
        "pointInTriangle",
        "hy",
        "my",
        "hx",
        "qx",
        "hy",
        "mx",
        "my",
        "hy",
        "my",
        "qx",
        "hx",
        "hy",
        "p",
        "p",
        "tan",
        "hy",
        "p",
        "hx",
        "p",
        "locallyInside",
        "p",
        "hole",
        "tan",
        "tanMin",
        "tan",
        "tanMin",
        "p",
        "m",
        "p",
        "m",
        "sectorContainsSector",
        "m",
        "p",
        "m",
        "p",
        "tanMin",
        "tan",
        "p",
        "p",
        "p",
        "stop",
        "m",
        "m",
        "p",
        "area",
        "m",
        "m",
        "p",
        "area",
        "p",
        "m",
        "m",
        "start",
        "minX",
        "minY",
        "invSize",
        "p",
        "p",
        "zOrder",
        "p",
        "p",
        "minX",
        "minY",
        "invSize",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "start",
        "p",
        "p",
        "sortLinked",
        "p",
        "p",
        "tail",
        "numMerges",
        "p",
        "numMerges",
        "q",
        "p",
        "pSize",
        "i",
        "i",
        "inSize",
        "i",
        "pSize",
        "q",
        "q",
        "q",
        "qSize",
        "inSize",
        "pSize",
        "qSize",
        "q",
        "pSize",
        "qSize",
        "q",
        "p",
        "q",
        "e",
        "p",
        "p",
        "p",
        "pSize",
        "e",
        "q",
        "q",
        "q",
        "qSize",
        "tail",
        "tail",
        "e",
        "e",
        "e",
        "tail",
        "tail",
        "e",
        "p",
        "q",
        "tail",
        "inSize",
        "numMerges",
        "x",
        "y",
        "minX",
        "minY",
        "invSize",
        "x",
        "x",
        "minX",
        "invSize",
        "y",
        "y",
        "minY",
        "invSize",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "y",
        "y",
        "y",
        "y",
        "y",
        "y",
        "y",
        "y",
        "y",
        "y",
        "y",
        "y",
        "x",
        "y",
        "start",
        "p",
        "leftmost",
        "p",
        "leftmost",
        "p",
        "leftmost",
        "leftmost",
        "p",
        "p",
        "p",
        "p",
        "start",
        "leftmost",
        "ax",
        "ay",
        "bx",
        "by",
        "cx",
        "cy",
        "px",
        "py",
        "cx",
        "px",
        "ay",
        "py",
        "ax",
        "px",
        "cy",
        "py",
        "ax",
        "px",
        "by",
        "py",
        "bx",
        "px",
        "ay",
        "py",
        "bx",
        "px",
        "cy",
        "py",
        "cx",
        "px",
        "by",
        "py",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "intersectsPolygon",
        "a",
        "b",
        "locallyInside",
        "a",
        "b",
        "locallyInside",
        "b",
        "a",
        "middleInside",
        "a",
        "b",
        "area",
        "a",
        "a",
        "b",
        "area",
        "a",
        "b",
        "b",
        "equals",
        "a",
        "b",
        "area",
        "a",
        "a",
        "a",
        "area",
        "b",
        "b",
        "b",
        "p",
        "q",
        "r",
        "q",
        "p",
        "r",
        "q",
        "q",
        "p",
        "r",
        "q",
        "p1",
        "p2",
        "p1",
        "p2",
        "p1",
        "p2",
        "p1",
        "q1",
        "p2",
        "q2",
        "sign",
        "area",
        "p1",
        "q1",
        "p2",
        "sign",
        "area",
        "p1",
        "q1",
        "q2",
        "sign",
        "area",
        "p2",
        "q2",
        "p1",
        "sign",
        "area",
        "p2",
        "q2",
        "q1",
        "o1",
        "o2",
        "o3",
        "o4",
        "o1",
        "onSegment",
        "p1",
        "p2",
        "q1",
        "o2",
        "onSegment",
        "p1",
        "q2",
        "q1",
        "o3",
        "onSegment",
        "p2",
        "p1",
        "q2",
        "o4",
        "onSegment",
        "p2",
        "q1",
        "q2",
        "p",
        "q",
        "r",
        "q",
        "p",
        "r",
        "q",
        "p",
        "r",
        "q",
        "p",
        "r",
        "q",
        "p",
        "r",
        "num",
        "num",
        "num",
        "a",
        "b",
        "p",
        "a",
        "p",
        "a",
        "p",
        "b",
        "p",
        "b",
        "intersects",
        "p",
        "p",
        "a",
        "b",
        "p",
        "p",
        "p",
        "a",
        "a",
        "b",
        "area",
        "a",
        "a",
        "a",
        "area",
        "a",
        "b",
        "a",
        "area",
        "a",
        "a",
        "b",
        "area",
        "a",
        "b",
        "a",
        "area",
        "a",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "p",
        "py",
        "p",
        "py",
        "p",
        "p",
        "px",
        "p",
        "p",
        "py",
        "p",
        "p",
        "p",
        "p",
        "inside",
        "inside",
        "p",
        "p",
        "p",
        "a",
        "inside",
        "a",
        "b",
        "Node",
        "a",
        "a",
        "a",
        "Node",
        "b",
        "b",
        "b",
        "a",
        "b",
        "a",
        "b",
        "b",
        "a",
        "a2",
        "an",
        "an",
        "a2",
        "b2",
        "a2",
        "a2",
        "b2",
        "bp",
        "b2",
        "b2",
        "bp",
        "b2",
        "i",
        "x",
        "y",
        "last",
        "Node",
        "i",
        "x",
        "y",
        "last",
        "p",
        "p",
        "p",
        "p",
        "p",
        "last",
        "p",
        "last",
        "last",
        "p",
        "last",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "i",
        "x",
        "y",
        "i",
        "x",
        "y",
        "data",
        "start",
        "end",
        "dim",
        "end",
        "dim",
        "i",
        "end",
        "i",
        "dim",
        "sum",
        "data",
        "j",
        "data",
        "i",
        "data",
        "i",
        "data",
        "j",
        "j",
        "i",
        "sum",
        "contour",
        "contour",
        "n",
        "q",
        "n",
        "p",
        "q",
        "a",
        "contour",
        "p",
        "contour",
        "q",
        "contour",
        "q",
        "contour",
        "p",
        "a",
        "pts",
        "ShapeUtils",
        "pts",
        "contour",
        "holes",
        "removeDupEndPts",
        "contour",
        "addContour",
        "vertices",
        "contour",
        "contour",
        "holes",
        "removeDupEndPts",
        "i",
        "holes",
        "i",
        "holeIndices",
        "holeIndex",
        "holeIndex",
        "holes",
        "i",
        "addContour",
        "vertices",
        "holes",
        "i",
        "Earcut",
        "vertices",
        "holeIndices",
        "i",
        "triangles",
        "i",
        "faces",
        "triangles",
        "i",
        "i",
        "faces",
        "points",
        "points",
        "l",
        "points",
        "l",
        "points",
        "points",
        "vertices",
        "contour",
        "i",
        "contour",
        "i",
        "vertices",
        "contour",
        "i",
        "vertices",
        "contour",
        "i",
        "BufferGeometry",
        "shapes",
        "Shape",
        "Vector2",
        "Vector2",
        "Vector2",
        "Vector2",
        "options",
        "shapes",
        "options",
        "shapes",
        "shapes",
        "shapes",
        "shapes",
        "shapes",
        "i",
        "l",
        "i",
        "shapes",
        "i",
        "addShape",
        "shape",
        "Float32BufferAttribute",
        "verticesArray",
        "Float32BufferAttribute",
        "uvArray",
        "shape",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "bevelThickness",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "WorldUVGenerator",
        "extrudePath",
        "extrudePts",
        "extrudePath",
        "steps",
        "extrudeByPath",
        "bevelEnabled",
        "splineTube",
        "extrudePath",
        "steps",
        "binormal",
        "Vector3",
        "normal",
        "Vector3",
        "position2",
        "Vector3",
        "bevelEnabled",
        "bevelSegments",
        "bevelThickness",
        "bevelSize",
        "bevelOffset",
        "shape",
        "curveSegments",
        "shapePoints",
        "shapePoints",
        "ShapeUtils",
        "vertices",
        "reverse",
        "vertices",
        "vertices",
        "holes",
        "h",
        "hl",
        "h",
        "holes",
        "h",
        "ShapeUtils",
        "ahole",
        "holes",
        "h",
        "ahole",
        "ShapeUtils",
        "vertices",
        "holes",
        "holes",
        "h",
        "hl",
        "h",
        "holes",
        "h",
        "vertices",
        "vertices",
        "ahole",
        "pt",
        "vec",
        "size",
        "vec",
        "pt",
        "vec",
        "size",
        "vertices",
        "faces",
        "inPt",
        "inPrev",
        "inNext",
        "inPt",
        "inPrev",
        "inPt",
        "inPrev",
        "inNext",
        "inPt",
        "inNext",
        "inPt",
        "v_prev_x",
        "v_prev_x",
        "v_prev_y",
        "v_prev_y",
        "v_prev_x",
        "v_next_y",
        "v_prev_y",
        "v_next_x",
        "collinear0",
        "v_prev_lensq",
        "v_next_x",
        "v_next_x",
        "v_next_y",
        "v_next_y",
        "inPrev",
        "v_prev_y",
        "v_prev_len",
        "inPrev",
        "v_prev_x",
        "v_prev_len",
        "inNext",
        "v_next_y",
        "v_next_len",
        "inNext",
        "v_next_x",
        "v_next_len",
        "ptNextShift_x",
        "ptPrevShift_x",
        "v_next_y",
        "ptNextShift_y",
        "ptPrevShift_y",
        "v_next_x",
        "v_prev_x",
        "v_next_y",
        "v_prev_y",
        "v_next_x",
        "v_trans_x",
        "ptPrevShift_x",
        "v_prev_x",
        "sf",
        "inPt",
        "v_trans_y",
        "ptPrevShift_y",
        "v_prev_y",
        "sf",
        "inPt",
        "v_trans_x",
        "v_trans_x",
        "v_trans_y",
        "v_trans_y",
        "v_trans_lensq",
        "Vector2",
        "v_trans_x",
        "v_trans_y",
        "shrink_by",
        "v_trans_lensq",
        "v_prev_x",
        "v_next_x",
        "direction_eq",
        "v_prev_x",
        "v_next_x",
        "direction_eq",
        "v_prev_y",
        "v_next_y",
        "direction_eq",
        "direction_eq",
        "v_trans_x",
        "v_prev_y",
        "v_trans_y",
        "v_prev_x",
        "shrink_by",
        "v_prev_lensq",
        "v_trans_x",
        "v_prev_x",
        "v_trans_y",
        "v_prev_y",
        "shrink_by",
        "v_prev_lensq",
        "Vector2",
        "v_trans_x",
        "shrink_by",
        "v_trans_y",
        "shrink_by",
        "contour",
        "il",
        "i",
        "i",
        "il",
        "i",
        "j",
        "k",
        "j",
        "il",
        "j",
        "k",
        "il",
        "k",
        "contourMovements",
        "i",
        "getBevelVec",
        "contour",
        "i",
        "contour",
        "j",
        "contour",
        "k",
        "contourMovements",
        "holes",
        "h",
        "hl",
        "h",
        "holes",
        "h",
        "oneHoleMovements",
        "ahole",
        "il",
        "i",
        "i",
        "il",
        "i",
        "j",
        "k",
        "j",
        "il",
        "j",
        "k",
        "il",
        "k",
        "oneHoleMovements",
        "i",
        "getBevelVec",
        "ahole",
        "i",
        "ahole",
        "j",
        "ahole",
        "k",
        "holesMovements",
        "oneHoleMovements",
        "verticesMovements",
        "verticesMovements",
        "oneHoleMovements",
        "b",
        "bevelSegments",
        "b",
        "b",
        "bevelSegments",
        "bevelThickness",
        "t",
        "bevelSize",
        "t",
        "bevelOffset",
        "contour",
        "i",
        "il",
        "i",
        "scalePt2",
        "contour",
        "i",
        "contourMovements",
        "i",
        "bs",
        "v",
        "vert",
        "vert",
        "z",
        "holes",
        "h",
        "hl",
        "h",
        "holes",
        "h",
        "oneHoleMovements",
        "holesMovements",
        "h",
        "ahole",
        "i",
        "il",
        "i",
        "scalePt2",
        "ahole",
        "i",
        "oneHoleMovements",
        "i",
        "bs",
        "v",
        "vert",
        "vert",
        "z",
        "bevelSize",
        "bevelOffset",
        "i",
        "vlen",
        "i",
        "bevelEnabled",
        "scalePt2",
        "vertices",
        "i",
        "verticesMovements",
        "i",
        "bs",
        "vertices",
        "i",
        "extrudeByPath",
        "v",
        "vert",
        "vert",
        "normal",
        "splineTube",
        "vert",
        "binormal",
        "splineTube",
        "vert",
        "position2",
        "extrudePts",
        "normal",
        "binormal",
        "v",
        "position2",
        "position2",
        "position2",
        "s",
        "steps",
        "s",
        "i",
        "vlen",
        "i",
        "bevelEnabled",
        "scalePt2",
        "vertices",
        "i",
        "verticesMovements",
        "i",
        "bs",
        "vertices",
        "i",
        "extrudeByPath",
        "v",
        "vert",
        "vert",
        "depth",
        "steps",
        "s",
        "normal",
        "splineTube",
        "s",
        "vert",
        "binormal",
        "splineTube",
        "s",
        "vert",
        "position2",
        "extrudePts",
        "s",
        "normal",
        "binormal",
        "v",
        "position2",
        "position2",
        "position2",
        "bevelSegments",
        "b",
        "b",
        "b",
        "bevelSegments",
        "bevelThickness",
        "t",
        "bevelSize",
        "t",
        "bevelOffset",
        "contour",
        "i",
        "il",
        "i",
        "scalePt2",
        "contour",
        "i",
        "contourMovements",
        "i",
        "bs",
        "v",
        "vert",
        "vert",
        "depth",
        "z",
        "holes",
        "h",
        "hl",
        "h",
        "holes",
        "h",
        "oneHoleMovements",
        "holesMovements",
        "h",
        "ahole",
        "i",
        "il",
        "i",
        "scalePt2",
        "ahole",
        "i",
        "oneHoleMovements",
        "i",
        "bs",
        "extrudeByPath",
        "v",
        "vert",
        "vert",
        "depth",
        "z",
        "v",
        "vert",
        "vert",
        "extrudePts",
        "steps",
        "extrudePts",
        "steps",
        "z",
        "buildLidFaces",
        "buildSideFaces",
        "verticesArray",
        "bevelEnabled",
        "vlen",
        "layer",
        "i",
        "flen",
        "i",
        "faces",
        "i",
        "f3",
        "face",
        "offset",
        "face",
        "offset",
        "face",
        "offset",
        "layer",
        "steps",
        "bevelSegments",
        "offset",
        "vlen",
        "layer",
        "i",
        "flen",
        "i",
        "faces",
        "i",
        "f3",
        "face",
        "offset",
        "face",
        "offset",
        "face",
        "offset",
        "i",
        "flen",
        "i",
        "faces",
        "i",
        "f3",
        "face",
        "face",
        "face",
        "i",
        "flen",
        "i",
        "faces",
        "i",
        "f3",
        "face",
        "vlen",
        "steps",
        "face",
        "vlen",
        "steps",
        "face",
        "vlen",
        "steps",
        "scope",
        "start",
        "verticesArray",
        "start",
        "verticesArray",
        "sidewalls",
        "contour",
        "layeroffset",
        "layeroffset",
        "contour",
        "holes",
        "h",
        "hl",
        "h",
        "holes",
        "h",
        "sidewalls",
        "ahole",
        "layeroffset",
        "layeroffset",
        "ahole",
        "scope",
        "start",
        "verticesArray",
        "start",
        "contour",
        "layeroffset",
        "contour",
        "i",
        "i",
        "k",
        "k",
        "contour",
        "steps",
        "bevelSegments",
        "s",
        "sl",
        "s",
        "vlen",
        "s",
        "vlen",
        "s",
        "layeroffset",
        "j",
        "slen1",
        "layeroffset",
        "k",
        "slen1",
        "layeroffset",
        "k",
        "slen2",
        "layeroffset",
        "j",
        "slen2",
        "f4",
        "a",
        "b",
        "c",
        "d",
        "x",
        "y",
        "z",
        "placeholder",
        "x",
        "placeholder",
        "y",
        "placeholder",
        "z",
        "a",
        "b",
        "c",
        "addVertex",
        "a",
        "addVertex",
        "b",
        "addVertex",
        "c",
        "verticesArray",
        "uvgen",
        "scope",
        "verticesArray",
        "nextIndex",
        "nextIndex",
        "nextIndex",
        "addUV",
        "uvs",
        "addUV",
        "uvs",
        "addUV",
        "uvs",
        "a",
        "b",
        "c",
        "d",
        "addVertex",
        "a",
        "addVertex",
        "b",
        "addVertex",
        "d",
        "addVertex",
        "b",
        "addVertex",
        "c",
        "addVertex",
        "d",
        "verticesArray",
        "uvgen",
        "scope",
        "verticesArray",
        "nextIndex",
        "nextIndex",
        "nextIndex",
        "nextIndex",
        "addUV",
        "uvs",
        "addUV",
        "uvs",
        "addUV",
        "uvs",
        "addUV",
        "uvs",
        "addUV",
        "uvs",
        "addUV",
        "uvs",
        "index",
        "verticesArray",
        "placeholder",
        "index",
        "verticesArray",
        "placeholder",
        "index",
        "verticesArray",
        "placeholder",
        "index",
        "vector2",
        "uvArray",
        "vector2",
        "uvArray",
        "vector2",
        "source",
        "source",
        "source",
        "toJSON$1",
        "shapes",
        "options",
        "data",
        "data",
        "shapes",
        "data",
        "j",
        "jl",
        "j",
        "shapes",
        "data",
        "j",
        "geometryShapes",
        "shape",
        "data",
        "extrudePath",
        "data",
        "Curves",
        "extrudePath",
        "extrudePath",
        "ExtrudeGeometry",
        "geometryShapes",
        "data",
        "geometry",
        "vertices",
        "indexA",
        "indexB",
        "indexC",
        "vertices",
        "indexA",
        "vertices",
        "indexA",
        "vertices",
        "indexB",
        "vertices",
        "indexB",
        "vertices",
        "indexC",
        "vertices",
        "indexC",
        "Vector2",
        "a_x",
        "a_y",
        "Vector2",
        "b_x",
        "b_y",
        "Vector2",
        "c_x",
        "c_y",
        "geometry",
        "vertices",
        "indexA",
        "indexB",
        "indexC",
        "indexD",
        "vertices",
        "indexA",
        "vertices",
        "indexA",
        "vertices",
        "indexA",
        "vertices",
        "indexB",
        "vertices",
        "indexB",
        "vertices",
        "indexB",
        "vertices",
        "indexC",
        "vertices",
        "indexC",
        "vertices",
        "indexC",
        "vertices",
        "indexD",
        "vertices",
        "indexD",
        "vertices",
        "indexD",
        "a_y",
        "b_y",
        "a_x",
        "b_x",
        "Vector2",
        "a_x",
        "a_z",
        "Vector2",
        "b_x",
        "b_z",
        "Vector2",
        "c_x",
        "c_z",
        "Vector2",
        "d_x",
        "d_z",
        "Vector2",
        "a_y",
        "a_z",
        "Vector2",
        "b_y",
        "b_z",
        "Vector2",
        "c_y",
        "c_z",
        "Vector2",
        "d_y",
        "d_z",
        "shapes",
        "options",
        "data",
        "data",
        "shapes",
        "shapes",
        "i",
        "l",
        "i",
        "shapes",
        "i",
        "data",
        "shape",
        "data",
        "shapes",
        "data",
        "options",
        "options",
        "data",
        "options",
        "data",
        "PolyhedronGeometry",
        "radius",
        "detail",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "vertices",
        "indices",
        "radius",
        "detail",
        "radius",
        "detail",
        "data",
        "IcosahedronGeometry",
        "data",
        "data",
        "PolyhedronGeometry",
        "radius",
        "detail",
        "vertices",
        "indices",
        "radius",
        "detail",
        "radius",
        "detail",
        "data",
        "OctahedronGeometry",
        "data",
        "data",
        "BufferGeometry",
        "innerRadius",
        "outerRadius",
        "thetaSegments",
        "phiSegments",
        "thetaStart",
        "thetaLength",
        "innerRadius",
        "outerRadius",
        "thetaSegments",
        "phiSegments",
        "thetaStart",
        "thetaLength",
        "thetaSegments",
        "thetaSegments",
        "phiSegments",
        "phiSegments",
        "outerRadius",
        "innerRadius",
        "phiSegments",
        "Vector3",
        "Vector2",
        "j",
        "phiSegments",
        "j",
        "i",
        "thetaSegments",
        "i",
        "thetaStart",
        "i",
        "thetaSegments",
        "thetaLength",
        "vertex",
        "radius",
        "segment",
        "vertex",
        "radius",
        "segment",
        "vertices",
        "vertex",
        "vertex",
        "vertex",
        "normals",
        "uv",
        "vertex",
        "outerRadius",
        "uv",
        "vertex",
        "outerRadius",
        "uvs",
        "uv",
        "uv",
        "radius",
        "radiusStep",
        "j",
        "phiSegments",
        "j",
        "j",
        "thetaSegments",
        "i",
        "thetaSegments",
        "i",
        "i",
        "thetaSegmentLevel",
        "segment",
        "thetaSegments",
        "segment",
        "thetaSegments",
        "segment",
        "indices",
        "a",
        "b",
        "d",
        "indices",
        "b",
        "c",
        "d",
        "indices",
        "Float32BufferAttribute",
        "vertices",
        "Float32BufferAttribute",
        "normals",
        "Float32BufferAttribute",
        "uvs",
        "source",
        "source",
        "source",
        "data",
        "RingGeometry",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "BufferGeometry",
        "shapes",
        "Shape",
        "Vector2",
        "Vector2",
        "Vector2",
        "curveSegments",
        "shapes",
        "curveSegments",
        "shapes",
        "addShape",
        "shapes",
        "i",
        "shapes",
        "i",
        "addShape",
        "shapes",
        "i",
        "groupStart",
        "groupCount",
        "i",
        "groupStart",
        "groupCount",
        "groupCount",
        "indices",
        "Float32BufferAttribute",
        "vertices",
        "Float32BufferAttribute",
        "normals",
        "Float32BufferAttribute",
        "uvs",
        "shape",
        "vertices",
        "shape",
        "curveSegments",
        "points",
        "points",
        "ShapeUtils",
        "shapeVertices",
        "shapeVertices",
        "shapeVertices",
        "shapeHoles",
        "i",
        "l",
        "i",
        "shapeHoles",
        "i",
        "ShapeUtils",
        "shapeHole",
        "shapeHoles",
        "i",
        "shapeHole",
        "ShapeUtils",
        "shapeVertices",
        "shapeHoles",
        "shapeHoles",
        "i",
        "l",
        "i",
        "shapeHoles",
        "i",
        "shapeVertices",
        "shapeVertices",
        "shapeHole",
        "shapeVertices",
        "i",
        "l",
        "i",
        "shapeVertices",
        "i",
        "vertices",
        "vertex",
        "vertex",
        "normals",
        "uvs",
        "vertex",
        "vertex",
        "faces",
        "i",
        "l",
        "i",
        "faces",
        "i",
        "face",
        "indexOffset",
        "face",
        "indexOffset",
        "face",
        "indexOffset",
        "indices",
        "a",
        "b",
        "c",
        "groupCount",
        "source",
        "source",
        "source",
        "toJSON",
        "shapes",
        "data",
        "data",
        "shapes",
        "data",
        "j",
        "jl",
        "j",
        "shapes",
        "data",
        "j",
        "geometryShapes",
        "shape",
        "ShapeGeometry",
        "geometryShapes",
        "data",
        "shapes",
        "data",
        "data",
        "shapes",
        "shapes",
        "i",
        "l",
        "i",
        "shapes",
        "i",
        "data",
        "shape",
        "data",
        "shapes",
        "data",
        "BufferGeometry",
        "radius",
        "widthSegments",
        "heightSegments",
        "phiStart",
        "phiLength",
        "thetaStart",
        "thetaLength",
        "radius",
        "widthSegments",
        "heightSegments",
        "phiStart",
        "phiLength",
        "thetaStart",
        "thetaLength",
        "widthSegments",
        "widthSegments",
        "heightSegments",
        "heightSegments",
        "thetaStart",
        "thetaLength",
        "Vector3",
        "Vector3",
        "iy",
        "heightSegments",
        "iy",
        "iy",
        "heightSegments",
        "iy",
        "thetaStart",
        "uOffset",
        "widthSegments",
        "iy",
        "heightSegments",
        "thetaEnd",
        "uOffset",
        "widthSegments",
        "ix",
        "widthSegments",
        "ix",
        "ix",
        "widthSegments",
        "vertex",
        "radius",
        "phiStart",
        "u",
        "phiLength",
        "thetaStart",
        "v",
        "thetaLength",
        "vertex",
        "radius",
        "thetaStart",
        "v",
        "thetaLength",
        "vertex",
        "radius",
        "phiStart",
        "u",
        "phiLength",
        "thetaStart",
        "v",
        "thetaLength",
        "vertices",
        "vertex",
        "vertex",
        "vertex",
        "normal",
        "vertex",
        "normals",
        "normal",
        "normal",
        "normal",
        "uvs",
        "u",
        "uOffset",
        "v",
        "verticesRow",
        "index",
        "grid",
        "verticesRow",
        "iy",
        "heightSegments",
        "iy",
        "ix",
        "widthSegments",
        "ix",
        "grid",
        "iy",
        "ix",
        "grid",
        "iy",
        "ix",
        "grid",
        "iy",
        "ix",
        "grid",
        "iy",
        "ix",
        "iy",
        "thetaStart",
        "indices",
        "a",
        "b",
        "d",
        "iy",
        "heightSegments",
        "thetaEnd",
        "indices",
        "b",
        "c",
        "d",
        "indices",
        "Float32BufferAttribute",
        "vertices",
        "Float32BufferAttribute",
        "normals",
        "Float32BufferAttribute",
        "uvs",
        "source",
        "source",
        "source",
        "data",
        "SphereGeometry",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "PolyhedronGeometry",
        "radius",
        "detail",
        "vertices",
        "indices",
        "radius",
        "detail",
        "radius",
        "detail",
        "data",
        "TetrahedronGeometry",
        "data",
        "data",
        "BufferGeometry",
        "radius",
        "tube",
        "radialSegments",
        "tubularSegments",
        "arc",
        "radius",
        "tube",
        "radialSegments",
        "tubularSegments",
        "arc",
        "radialSegments",
        "radialSegments",
        "tubularSegments",
        "tubularSegments",
        "Vector3",
        "Vector3",
        "Vector3",
        "j",
        "radialSegments",
        "j",
        "i",
        "tubularSegments",
        "i",
        "i",
        "tubularSegments",
        "arc",
        "j",
        "radialSegments",
        "vertex",
        "radius",
        "tube",
        "v",
        "u",
        "vertex",
        "radius",
        "tube",
        "v",
        "u",
        "vertex",
        "tube",
        "v",
        "vertices",
        "vertex",
        "vertex",
        "vertex",
        "center",
        "radius",
        "u",
        "center",
        "radius",
        "u",
        "normal",
        "vertex",
        "center",
        "normals",
        "normal",
        "normal",
        "normal",
        "uvs",
        "i",
        "tubularSegments",
        "uvs",
        "j",
        "radialSegments",
        "j",
        "radialSegments",
        "j",
        "i",
        "tubularSegments",
        "i",
        "tubularSegments",
        "j",
        "i",
        "tubularSegments",
        "j",
        "i",
        "tubularSegments",
        "j",
        "i",
        "tubularSegments",
        "j",
        "i",
        "indices",
        "a",
        "b",
        "d",
        "indices",
        "b",
        "c",
        "d",
        "indices",
        "Float32BufferAttribute",
        "vertices",
        "Float32BufferAttribute",
        "normals",
        "Float32BufferAttribute",
        "uvs",
        "source",
        "source",
        "source",
        "data",
        "TorusGeometry",
        "data",
        "data",
        "data",
        "data",
        "data",
        "BufferGeometry",
        "radius",
        "tube",
        "tubularSegments",
        "radialSegments",
        "p",
        "q",
        "radius",
        "tube",
        "tubularSegments",
        "radialSegments",
        "p",
        "q",
        "tubularSegments",
        "tubularSegments",
        "radialSegments",
        "radialSegments",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "i",
        "tubularSegments",
        "i",
        "i",
        "tubularSegments",
        "p",
        "calculatePositionOnCurve",
        "u",
        "p",
        "q",
        "radius",
        "P1",
        "calculatePositionOnCurve",
        "u",
        "p",
        "q",
        "radius",
        "P2",
        "T",
        "P2",
        "P1",
        "N",
        "P2",
        "P1",
        "B",
        "T",
        "N",
        "N",
        "B",
        "T",
        "B",
        "N",
        "j",
        "radialSegments",
        "j",
        "j",
        "radialSegments",
        "tube",
        "v",
        "tube",
        "v",
        "vertex",
        "P1",
        "cx",
        "N",
        "cy",
        "B",
        "vertex",
        "P1",
        "cx",
        "N",
        "cy",
        "B",
        "vertex",
        "P1",
        "cx",
        "N",
        "cy",
        "B",
        "vertices",
        "vertex",
        "vertex",
        "vertex",
        "normal",
        "vertex",
        "P1",
        "normals",
        "normal",
        "normal",
        "normal",
        "uvs",
        "i",
        "tubularSegments",
        "uvs",
        "j",
        "radialSegments",
        "j",
        "tubularSegments",
        "j",
        "i",
        "radialSegments",
        "i",
        "radialSegments",
        "j",
        "i",
        "radialSegments",
        "j",
        "i",
        "radialSegments",
        "j",
        "i",
        "radialSegments",
        "j",
        "i",
        "indices",
        "a",
        "b",
        "d",
        "indices",
        "b",
        "c",
        "d",
        "indices",
        "Float32BufferAttribute",
        "vertices",
        "Float32BufferAttribute",
        "normals",
        "Float32BufferAttribute",
        "uvs",
        "u",
        "p",
        "q",
        "radius",
        "position",
        "u",
        "u",
        "q",
        "p",
        "u",
        "quOverP",
        "position",
        "radius",
        "cs",
        "cu",
        "position",
        "radius",
        "cs",
        "su",
        "position",
        "radius",
        "quOverP",
        "source",
        "source",
        "source",
        "data",
        "TorusKnotGeometry",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "BufferGeometry",
        "path",
        "QuadraticBezierCurve3",
        "Vector3",
        "Vector3",
        "Vector3",
        "tubularSegments",
        "radius",
        "radialSegments",
        "closed",
        "path",
        "tubularSegments",
        "radius",
        "radialSegments",
        "closed",
        "path",
        "tubularSegments",
        "closed",
        "frames",
        "frames",
        "frames",
        "Vector3",
        "Vector3",
        "Vector2",
        "Vector3",
        "generateBufferData",
        "indices",
        "Float32BufferAttribute",
        "vertices",
        "Float32BufferAttribute",
        "normals",
        "Float32BufferAttribute",
        "uvs",
        "i",
        "tubularSegments",
        "i",
        "generateSegment",
        "i",
        "generateSegment",
        "closed",
        "tubularSegments",
        "generateUVs",
        "generateIndices",
        "i",
        "P",
        "path",
        "i",
        "tubularSegments",
        "P",
        "frames",
        "i",
        "frames",
        "i",
        "j",
        "radialSegments",
        "j",
        "j",
        "radialSegments",
        "v",
        "v",
        "normal",
        "cos",
        "N",
        "sin",
        "B",
        "normal",
        "cos",
        "N",
        "sin",
        "B",
        "normal",
        "cos",
        "N",
        "sin",
        "B",
        "normal",
        "normals",
        "normal",
        "normal",
        "normal",
        "vertex",
        "P",
        "radius",
        "normal",
        "vertex",
        "P",
        "radius",
        "normal",
        "vertex",
        "P",
        "radius",
        "normal",
        "vertices",
        "vertex",
        "vertex",
        "vertex",
        "j",
        "tubularSegments",
        "j",
        "i",
        "radialSegments",
        "i",
        "radialSegments",
        "j",
        "i",
        "radialSegments",
        "j",
        "i",
        "radialSegments",
        "j",
        "i",
        "radialSegments",
        "j",
        "i",
        "indices",
        "a",
        "b",
        "d",
        "indices",
        "b",
        "c",
        "d",
        "i",
        "tubularSegments",
        "i",
        "j",
        "radialSegments",
        "j",
        "uv",
        "i",
        "tubularSegments",
        "uv",
        "j",
        "radialSegments",
        "uvs",
        "uv",
        "uv",
        "source",
        "source",
        "source",
        "data",
        "data",
        "data",
        "TubeGeometry",
        "Curves",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "BufferGeometry",
        "geometry",
        "geometry",
        "geometry",
        "Vector3",
        "Vector3",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "groups",
        "groups",
        "indices",
        "groups",
        "o",
        "ol",
        "o",
        "groups",
        "o",
        "group",
        "group",
        "groupStart",
        "groupCount",
        "i",
        "l",
        "i",
        "j",
        "j",
        "indices",
        "i",
        "j",
        "indices",
        "i",
        "j",
        "start",
        "position",
        "index1",
        "end",
        "position",
        "index2",
        "isUniqueEdge",
        "start",
        "end",
        "edges",
        "vertices",
        "start",
        "start",
        "start",
        "vertices",
        "end",
        "end",
        "end",
        "geometry",
        "position",
        "i",
        "l",
        "i",
        "j",
        "j",
        "i",
        "j",
        "i",
        "j",
        "start",
        "position",
        "index1",
        "end",
        "position",
        "index2",
        "isUniqueEdge",
        "start",
        "end",
        "edges",
        "vertices",
        "start",
        "start",
        "start",
        "vertices",
        "end",
        "end",
        "end",
        "Float32BufferAttribute",
        "vertices",
        "source",
        "source",
        "source",
        "start",
        "end",
        "edges",
        "start",
        "start",
        "start",
        "end",
        "end",
        "end",
        "end",
        "end",
        "end",
        "start",
        "start",
        "start",
        "edges",
        "hash1",
        "edges",
        "hash2",
        "edges",
        "hash1",
        "edges",
        "hash2",
        "BoxGeometry",
        "CapsuleGeometry",
        "CircleGeometry",
        "ConeGeometry",
        "CylinderGeometry",
        "DodecahedronGeometry",
        "EdgesGeometry",
        "ExtrudeGeometry",
        "IcosahedronGeometry",
        "LatheGeometry",
        "OctahedronGeometry",
        "PlaneGeometry",
        "PolyhedronGeometry",
        "RingGeometry",
        "ShapeGeometry",
        "SphereGeometry",
        "TetrahedronGeometry",
        "TorusGeometry",
        "TorusKnotGeometry",
        "TubeGeometry",
        "WireframeGeometry",
        "Material",
        "parameters",
        "Color",
        "parameters",
        "source",
        "source",
        "source",
        "source",
        "ShaderMaterial",
        "parameters",
        "parameters",
        "Material",
        "parameters",
        "Color",
        "Color",
        "TangentSpaceNormalMap",
        "Vector2",
        "Euler",
        "parameters",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "MeshStandardMaterial",
        "parameters",
        "Vector2",
        "clamp",
        "reflectivity",
        "reflectivity",
        "reflectivity",
        "Color",
        "Infinity",
        "Color",
        "Color",
        "parameters",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "Material",
        "parameters",
        "Color",
        "Color",
        "Color",
        "TangentSpaceNormalMap",
        "Vector2",
        "Euler",
        "MultiplyOperation",
        "parameters",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "Material",
        "parameters",
        "Color",
        "Color",
        "TangentSpaceNormalMap",
        "Vector2",
        "parameters",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "Material",
        "parameters",
        "TangentSpaceNormalMap",
        "Vector2",
        "parameters",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "Material",
        "parameters",
        "Color",
        "Color",
        "TangentSpaceNormalMap",
        "Vector2",
        "Euler",
        "MultiplyOperation",
        "parameters",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "Material",
        "parameters",
        "Color",
        "TangentSpaceNormalMap",
        "Vector2",
        "parameters",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "LineBasicMaterial",
        "parameters",
        "parameters",
        "source",
        "source",
        "source",
        "source",
        "source",
        "array",
        "forceClone",
        "array",
        "forceClone",
        "array",
        "array",
        "array",
        "array",
        "ArrayBuffer",
        "DataView",
        "times",
        "i",
        "j",
        "times",
        "i",
        "times",
        "j",
        "times",
        "n",
        "i",
        "n",
        "i",
        "result",
        "i",
        "i",
        "result",
        "compareTime",
        "result",
        "values",
        "stride",
        "order",
        "values",
        "values",
        "nValues",
        "dstOffset",
        "nValues",
        "i",
        "order",
        "i",
        "stride",
        "j",
        "stride",
        "j",
        "result",
        "dstOffset",
        "values",
        "srcOffset",
        "j",
        "result",
        "jsonKeys",
        "times",
        "values",
        "valuePropertyName",
        "jsonKeys",
        "key",
        "key",
        "valuePropertyName",
        "key",
        "jsonKeys",
        "i",
        "key",
        "key",
        "valuePropertyName",
        "value",
        "value",
        "value",
        "key",
        "valuePropertyName",
        "value",
        "times",
        "key",
        "values",
        "values",
        "value",
        "key",
        "jsonKeys",
        "i",
        "key",
        "value",
        "value",
        "key",
        "valuePropertyName",
        "value",
        "times",
        "key",
        "value",
        "values",
        "values",
        "key",
        "jsonKeys",
        "i",
        "key",
        "value",
        "key",
        "valuePropertyName",
        "value",
        "times",
        "key",
        "values",
        "value",
        "key",
        "jsonKeys",
        "i",
        "key",
        "sourceClip",
        "name",
        "startFrame",
        "endFrame",
        "fps",
        "sourceClip",
        "clip",
        "name",
        "i",
        "clip",
        "i",
        "clip",
        "i",
        "track",
        "j",
        "track",
        "j",
        "track",
        "j",
        "fps",
        "frame",
        "startFrame",
        "frame",
        "endFrame",
        "times",
        "track",
        "j",
        "k",
        "valueSize",
        "k",
        "values",
        "track",
        "j",
        "valueSize",
        "k",
        "times",
        "track",
        "convertArray",
        "times",
        "track",
        "track",
        "convertArray",
        "values",
        "track",
        "tracks",
        "track",
        "clip",
        "tracks",
        "i",
        "clip",
        "i",
        "minStartTime",
        "clip",
        "i",
        "minStartTime",
        "clip",
        "i",
        "i",
        "clip",
        "i",
        "clip",
        "i",
        "minStartTime",
        "clip",
        "clip",
        "targetClip",
        "referenceFrame",
        "referenceClip",
        "targetClip",
        "fps",
        "fps",
        "fps",
        "referenceClip",
        "referenceFrame",
        "fps",
        "i",
        "numTracks",
        "i",
        "referenceClip",
        "i",
        "referenceTrack",
        "referenceTrackType",
        "referenceTrackType",
        "targetClip",
        "track",
        "track",
        "referenceTrack",
        "track",
        "referenceTrackType",
        "targetTrack",
        "referenceTrack",
        "referenceTrack",
        "referenceOffset",
        "referenceValueSize",
        "targetTrack",
        "targetTrack",
        "targetOffset",
        "targetValueSize",
        "referenceTrack",
        "referenceTime",
        "referenceTrack",
        "referenceValueSize",
        "referenceOffset",
        "referenceValue",
        "referenceTrack",
        "startIndex",
        "endIndex",
        "referenceTime",
        "referenceTrack",
        "lastIndex",
        "lastIndex",
        "referenceValueSize",
        "referenceOffset",
        "startIndex",
        "referenceValueSize",
        "referenceOffset",
        "referenceValue",
        "referenceTrack",
        "startIndex",
        "endIndex",
        "referenceTrack",
        "referenceValueSize",
        "referenceOffset",
        "interpolant",
        "referenceTime",
        "referenceValue",
        "interpolant",
        "startIndex",
        "endIndex",
        "referenceTrackType",
        "Quaternion",
        "referenceValue",
        "referenceQuat",
        "referenceValue",
        "targetTrack",
        "j",
        "numTimes",
        "j",
        "j",
        "targetValueSize",
        "targetOffset",
        "referenceTrackType",
        "Quaternion",
        "targetTrack",
        "valueStart",
        "referenceValue",
        "targetTrack",
        "valueStart",
        "targetValueSize",
        "targetOffset",
        "k",
        "valueEnd",
        "k",
        "targetTrack",
        "valueStart",
        "k",
        "referenceValue",
        "k",
        "targetClip",
        "AdditiveAnimationBlendMode",
        "targetClip",
        "convertArray",
        "isTypedArray",
        "getKeyframeOrder",
        "sortedArray",
        "flattenJSON",
        "subclip",
        "makeClipAdditive",
        "parameterPositions",
        "sampleValues",
        "sampleSize",
        "resultBuffer",
        "parameterPositions",
        "resultBuffer",
        "resultBuffer",
        "sampleValues",
        "sampleSize",
        "sampleValues",
        "sampleSize",
        "t",
        "pp",
        "i1",
        "pp",
        "i1",
        "t",
        "t1",
        "i1",
        "t1",
        "t",
        "t0",
        "i1",
        "pp",
        "i1",
        "i1",
        "i1",
        "giveUpAt",
        "t0",
        "t1",
        "t1",
        "pp",
        "i1",
        "t",
        "t1",
        "right",
        "pp",
        "t",
        "t0",
        "pp",
        "t",
        "t1global",
        "i1",
        "t0",
        "t1global",
        "i1",
        "t0",
        "i1",
        "giveUpAt",
        "t1",
        "t0",
        "t0",
        "pp",
        "i1",
        "t",
        "t0",
        "right",
        "i1",
        "i1",
        "i1",
        "right",
        "i1",
        "right",
        "t",
        "pp",
        "mid",
        "right",
        "mid",
        "i1",
        "mid",
        "t1",
        "pp",
        "i1",
        "t0",
        "pp",
        "i1",
        "t0",
        "t1",
        "i1",
        "pp",
        "i1",
        "i1",
        "i1",
        "i1",
        "t0",
        "t1",
        "i1",
        "t0",
        "t",
        "t1",
        "index",
        "index",
        "stride",
        "i",
        "stride",
        "i",
        "result",
        "i",
        "values",
        "offset",
        "i",
        "result",
        "Interpolant",
        "parameterPositions",
        "sampleValues",
        "sampleSize",
        "resultBuffer",
        "parameterPositions",
        "sampleValues",
        "sampleSize",
        "resultBuffer",
        "ZeroCurvatureEnding",
        "ZeroCurvatureEnding",
        "i1",
        "t0",
        "t1",
        "i1",
        "i1",
        "pp",
        "iPrev",
        "pp",
        "iNext",
        "tPrev",
        "ZeroSlopeEnding",
        "iPrev",
        "i1",
        "tPrev",
        "t0",
        "t1",
        "WrapAroundEnding",
        "iPrev",
        "pp",
        "tPrev",
        "t0",
        "pp",
        "iPrev",
        "pp",
        "iPrev",
        "iPrev",
        "i1",
        "tPrev",
        "t1",
        "tNext",
        "ZeroSlopeEnding",
        "iNext",
        "i1",
        "tNext",
        "t1",
        "t0",
        "WrapAroundEnding",
        "iNext",
        "tNext",
        "t1",
        "pp",
        "pp",
        "iNext",
        "i1",
        "tNext",
        "t0",
        "t1",
        "t0",
        "halfDt",
        "t0",
        "tPrev",
        "halfDt",
        "tNext",
        "t1",
        "iPrev",
        "stride",
        "iNext",
        "stride",
        "i1",
        "t0",
        "t",
        "t1",
        "i1",
        "stride",
        "o1",
        "stride",
        "t",
        "t0",
        "t1",
        "t0",
        "p",
        "p",
        "pp",
        "p",
        "wP",
        "ppp",
        "wP",
        "pp",
        "wP",
        "p",
        "wP",
        "ppp",
        "wP",
        "pp",
        "wP",
        "p",
        "wN",
        "ppp",
        "wN",
        "pp",
        "p",
        "wN",
        "ppp",
        "wN",
        "pp",
        "i",
        "stride",
        "i",
        "result",
        "i",
        "sP",
        "values",
        "oP",
        "i",
        "s0",
        "values",
        "o0",
        "i",
        "s1",
        "values",
        "o1",
        "i",
        "sN",
        "values",
        "oN",
        "i",
        "result",
        "Interpolant",
        "parameterPositions",
        "sampleValues",
        "sampleSize",
        "resultBuffer",
        "parameterPositions",
        "sampleValues",
        "sampleSize",
        "resultBuffer",
        "i1",
        "t0",
        "t",
        "t1",
        "i1",
        "stride",
        "offset1",
        "stride",
        "t",
        "t0",
        "t1",
        "t0",
        "weight1",
        "i",
        "stride",
        "i",
        "result",
        "i",
        "values",
        "offset0",
        "i",
        "weight0",
        "values",
        "offset1",
        "i",
        "weight1",
        "result",
        "Interpolant",
        "parameterPositions",
        "sampleValues",
        "sampleSize",
        "resultBuffer",
        "parameterPositions",
        "sampleValues",
        "sampleSize",
        "resultBuffer",
        "i1",
        "i1",
        "name",
        "times",
        "values",
        "interpolation",
        "name",
        "times",
        "times",
        "name",
        "name",
        "convertArray",
        "times",
        "convertArray",
        "values",
        "interpolation",
        "track",
        "track",
        "trackType",
        "json",
        "trackType",
        "track",
        "json",
        "track",
        "convertArray",
        "track",
        "convertArray",
        "track",
        "track",
        "interpolation",
        "track",
        "json",
        "interpolation",
        "json",
        "track",
        "json",
        "result",
        "DiscreteInterpolant",
        "result",
        "result",
        "LinearInterpolant",
        "result",
        "result",
        "CubicInterpolant",
        "result",
        "interpolation",
        "interpolation",
        "InterpolateDiscrete",
        "factoryMethod",
        "InterpolateLinear",
        "factoryMethod",
        "InterpolateSmooth",
        "factoryMethod",
        "factoryMethod",
        "interpolation",
        "message",
        "message",
        "factoryMethod",
        "InterpolateDiscrete",
        "InterpolateLinear",
        "InterpolateSmooth",
        "timeOffset",
        "timeOffset",
        "times",
        "i",
        "n",
        "i",
        "times",
        "i",
        "timeOffset",
        "timeScale",
        "timeScale",
        "times",
        "i",
        "n",
        "i",
        "times",
        "i",
        "timeScale",
        "startTime",
        "endTime",
        "times",
        "nKeys",
        "nKeys",
        "times",
        "startTime",
        "to",
        "times",
        "to",
        "endTime",
        "to",
        "to",
        "to",
        "nKeys",
        "to",
        "to",
        "to",
        "to",
        "times",
        "to",
        "stride",
        "to",
        "stride",
        "valueSize",
        "valueSize",
        "valid",
        "times",
        "nKeys",
        "valid",
        "i",
        "nKeys",
        "i",
        "times",
        "i",
        "currTime",
        "isNaN",
        "currTime",
        "i",
        "currTime",
        "valid",
        "prevTime",
        "prevTime",
        "currTime",
        "i",
        "currTime",
        "prevTime",
        "valid",
        "prevTime",
        "currTime",
        "values",
        "isTypedArray",
        "values",
        "values",
        "i",
        "n",
        "i",
        "values",
        "i",
        "isNaN",
        "value",
        "i",
        "value",
        "valid",
        "valid",
        "InterpolateSmooth",
        "times",
        "i",
        "lastIndex",
        "i",
        "times",
        "i",
        "times",
        "i",
        "time",
        "timeNext",
        "i",
        "time",
        "times",
        "smoothInterpolation",
        "i",
        "stride",
        "offset",
        "stride",
        "offset",
        "stride",
        "j",
        "stride",
        "j",
        "values",
        "offset",
        "j",
        "value",
        "values",
        "offsetP",
        "j",
        "value",
        "values",
        "offsetN",
        "j",
        "keep",
        "keep",
        "keep",
        "i",
        "writeIndex",
        "times",
        "writeIndex",
        "times",
        "i",
        "i",
        "stride",
        "writeIndex",
        "stride",
        "j",
        "stride",
        "j",
        "values",
        "writeOffset",
        "j",
        "values",
        "readOffset",
        "j",
        "writeIndex",
        "lastIndex",
        "times",
        "writeIndex",
        "times",
        "lastIndex",
        "lastIndex",
        "stride",
        "writeIndex",
        "stride",
        "j",
        "stride",
        "j",
        "values",
        "writeOffset",
        "j",
        "values",
        "readOffset",
        "j",
        "writeIndex",
        "writeIndex",
        "times",
        "times",
        "writeIndex",
        "values",
        "writeIndex",
        "stride",
        "times",
        "values",
        "TypedKeyframeTrack",
        "times",
        "values",
        "track",
        "track",
        "KeyframeTrack",
        "Float32Array",
        "KeyframeTrack",
        "Float32Array",
        "KeyframeTrack",
        "InterpolateLinear",
        "KeyframeTrack",
        "name",
        "times",
        "values",
        "name",
        "times",
        "values",
        "BooleanKeyframeTrack",
        "BooleanKeyframeTrack",
        "BooleanKeyframeTrack",
        "InterpolateDiscrete",
        "BooleanKeyframeTrack",
        "BooleanKeyframeTrack",
        "KeyframeTrack",
        "ColorKeyframeTrack",
        "KeyframeTrack",
        "NumberKeyframeTrack",
        "Interpolant",
        "parameterPositions",
        "sampleValues",
        "sampleSize",
        "resultBuffer",
        "parameterPositions",
        "sampleValues",
        "sampleSize",
        "resultBuffer",
        "i1",
        "t0",
        "t",
        "t1",
        "t",
        "t0",
        "t1",
        "t0",
        "i1",
        "stride",
        "offset",
        "stride",
        "offset",
        "end",
        "offset",
        "Quaternion",
        "result",
        "values",
        "offset",
        "stride",
        "values",
        "offset",
        "alpha",
        "result",
        "KeyframeTrack",
        "result",
        "QuaternionLinearInterpolant",
        "result",
        "QuaternionKeyframeTrack",
        "QuaternionKeyframeTrack",
        "KeyframeTrack",
        "name",
        "times",
        "values",
        "name",
        "times",
        "values",
        "StringKeyframeTrack",
        "StringKeyframeTrack",
        "StringKeyframeTrack",
        "InterpolateDiscrete",
        "StringKeyframeTrack",
        "StringKeyframeTrack",
        "KeyframeTrack",
        "VectorKeyframeTrack",
        "name",
        "duration",
        "tracks",
        "blendMode",
        "NormalAnimationBlendMode",
        "name",
        "tracks",
        "duration",
        "blendMode",
        "generateUUID",
        "json",
        "json",
        "json",
        "jsonTracks",
        "i",
        "n",
        "i",
        "tracks",
        "parseKeyframeTrack",
        "jsonTracks",
        "i",
        "frameTime",
        "json",
        "json",
        "tracks",
        "json",
        "clip",
        "json",
        "clip",
        "clip",
        "clip",
        "clip",
        "clip",
        "tracks",
        "clip",
        "clip",
        "clipTracks",
        "i",
        "n",
        "i",
        "tracks",
        "KeyframeTrack",
        "clipTracks",
        "i",
        "json",
        "name",
        "morphTargetSequence",
        "fps",
        "noLoop",
        "morphTargetSequence",
        "i",
        "numMorphTargets",
        "i",
        "times",
        "i",
        "numMorphTargets",
        "numMorphTargets",
        "i",
        "i",
        "numMorphTargets",
        "values",
        "getKeyframeOrder",
        "times",
        "times",
        "sortedArray",
        "times",
        "order",
        "values",
        "sortedArray",
        "values",
        "order",
        "noLoop",
        "times",
        "times",
        "numMorphTargets",
        "values",
        "values",
        "tracks",
        "NumberKeyframeTrack",
        "morphTargetSequence",
        "i",
        "times",
        "values",
        "fps",
        "name",
        "tracks",
        "objectOrClipArray",
        "name",
        "objectOrClipArray",
        "clipArray",
        "o",
        "o",
        "o",
        "i",
        "clipArray",
        "i",
        "clipArray",
        "i",
        "name",
        "clipArray",
        "i",
        "morphTargets",
        "fps",
        "noLoop",
        "morphTargets",
        "i",
        "il",
        "i",
        "morphTargets",
        "i",
        "morphTarget",
        "pattern",
        "parts",
        "parts",
        "parts",
        "animationToMorphTargets",
        "name",
        "animationMorphTargets",
        "animationToMorphTargets",
        "name",
        "animationMorphTargets",
        "animationMorphTargets",
        "morphTarget",
        "name",
        "animationToMorphTargets",
        "clips",
        "name",
        "animationToMorphTargets",
        "name",
        "fps",
        "noLoop",
        "clips",
        "animation",
        "bones",
        "animation",
        "trackType",
        "trackName",
        "animationKeys",
        "propertyName",
        "destTracks",
        "animationKeys",
        "flattenJSON",
        "animationKeys",
        "times",
        "values",
        "propertyName",
        "times",
        "destTracks",
        "trackType",
        "trackName",
        "times",
        "values",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "h",
        "hierarchyTracks",
        "h",
        "hierarchyTracks",
        "h",
        "animationKeys",
        "animationKeys",
        "animationKeys",
        "k",
        "k",
        "animationKeys",
        "k",
        "animationKeys",
        "k",
        "m",
        "animationKeys",
        "k",
        "m",
        "morphTargetNames",
        "animationKeys",
        "k",
        "m",
        "morphTargetName",
        "morphTargetNames",
        "m",
        "animationKeys",
        "k",
        "m",
        "animationKeys",
        "k",
        "times",
        "animationKey",
        "values",
        "animationKey",
        "morphTargetName",
        "tracks",
        "NumberKeyframeTrack",
        "morphTargetName",
        "times",
        "values",
        "duration",
        "morphTargetNames",
        "fps",
        "bones",
        "h",
        "addNonemptyTrack",
        "VectorKeyframeTrack",
        "boneName",
        "animationKeys",
        "tracks",
        "addNonemptyTrack",
        "QuaternionKeyframeTrack",
        "boneName",
        "animationKeys",
        "tracks",
        "addNonemptyTrack",
        "VectorKeyframeTrack",
        "boneName",
        "animationKeys",
        "tracks",
        "tracks",
        "clipName",
        "duration",
        "tracks",
        "blendMode",
        "clip",
        "tracks",
        "i",
        "n",
        "i",
        "i",
        "duration",
        "duration",
        "track",
        "track",
        "duration",
        "i",
        "i",
        "i",
        "i",
        "i",
        "valid",
        "valid",
        "i",
        "valid",
        "i",
        "i",
        "i",
        "i",
        "i",
        "tracks",
        "i",
        "tracks",
        "typeName",
        "typeName",
        "NumberKeyframeTrack",
        "VectorKeyframeTrack",
        "ColorKeyframeTrack",
        "QuaternionKeyframeTrack",
        "BooleanKeyframeTrack",
        "StringKeyframeTrack",
        "typeName",
        "json",
        "json",
        "getTrackTypeForValueTypeName",
        "json",
        "json",
        "flattenJSON",
        "json",
        "times",
        "values",
        "json",
        "times",
        "json",
        "values",
        "trackType",
        "trackType",
        "json",
        "trackType",
        "json",
        "json",
        "json",
        "json",
        "key",
        "file",
        "key",
        "file",
        "key",
        "key",
        "key",
        "key",
        "onLoad",
        "onProgress",
        "onError",
        "onLoad",
        "onProgress",
        "onError",
        "url",
        "itemsTotal",
        "isLoading",
        "scope",
        "scope",
        "url",
        "itemsLoaded",
        "itemsTotal",
        "isLoading",
        "url",
        "itemsLoaded",
        "scope",
        "scope",
        "url",
        "itemsLoaded",
        "itemsTotal",
        "itemsLoaded",
        "itemsTotal",
        "isLoading",
        "scope",
        "scope",
        "url",
        "scope",
        "scope",
        "url",
        "url",
        "urlModifier",
        "urlModifier",
        "url",
        "url",
        "transform",
        "urlModifier",
        "transform",
        "regex",
        "loader",
        "handlers",
        "regex",
        "loader",
        "regex",
        "handlers",
        "regex",
        "index",
        "handlers",
        "index",
        "file",
        "handlers",
        "i",
        "l",
        "i",
        "handlers",
        "i",
        "handlers",
        "i",
        "regex",
        "regex",
        "regex",
        "file",
        "loader",
        "LoadingManager",
        "manager",
        "manager",
        "manager",
        "DefaultLoadingManager",
        "url",
        "onProgress",
        "resolve",
        "reject",
        "scope",
        "url",
        "resolve",
        "onProgress",
        "reject",
        "crossOrigin",
        "crossOrigin",
        "value",
        "value",
        "path",
        "path",
        "resourcePath",
        "resourcePath",
        "requestHeader",
        "requestHeader",
        "Loader",
        "message",
        "response",
        "message",
        "response",
        "Loader",
        "manager",
        "manager",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "url",
        "url",
        "url",
        "url",
        "url",
        "url",
        "Cache",
        "url",
        "cached",
        "url",
        "setTimeout",
        "onLoad",
        "onLoad",
        "cached",
        "url",
        "cached",
        "loading",
        "url",
        "loading",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "loading",
        "url",
        "loading",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "Request",
        "url",
        "Headers",
        "fetch",
        "req",
        "response",
        "response",
        "response",
        "response",
        "ReadableStream",
        "response",
        "response",
        "response",
        "loading",
        "url",
        "response",
        "response",
        "response",
        "contentLength",
        "parseInt",
        "contentLength",
        "total",
        "ReadableStream",
        "controller",
        "readData",
        "reader",
        "done",
        "controller",
        "loaded",
        "value",
        "ProgressEvent",
        "callbacks",
        "i",
        "il",
        "i",
        "callbacks",
        "i",
        "callback",
        "callback",
        "controller",
        "value",
        "readData",
        "e",
        "controller",
        "e",
        "Response",
        "stream",
        "HttpError",
        "response",
        "response",
        "response",
        "response",
        "response",
        "responseType",
        "response",
        "response",
        "response",
        "text",
        "DOMParser",
        "parser",
        "text",
        "mimeType",
        "response",
        "mimeType",
        "response",
        "re",
        "mimeType",
        "exec",
        "exec",
        "exec",
        "TextDecoder",
        "label",
        "response",
        "ab",
        "decoder",
        "ab",
        "data",
        "Cache",
        "url",
        "data",
        "loading",
        "url",
        "loading",
        "url",
        "callbacks",
        "i",
        "il",
        "i",
        "callbacks",
        "i",
        "callback",
        "callback",
        "data",
        "err",
        "loading",
        "url",
        "callbacks",
        "url",
        "err",
        "loading",
        "url",
        "callbacks",
        "i",
        "il",
        "i",
        "callbacks",
        "i",
        "callback",
        "callback",
        "err",
        "url",
        "url",
        "url",
        "value",
        "value",
        "value",
        "value",
        "Loader",
        "manager",
        "manager",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "FileLoader",
        "loader",
        "loader",
        "loader",
        "loader",
        "url",
        "text",
        "onLoad",
        "scope",
        "text",
        "e",
        "onError",
        "onError",
        "e",
        "e",
        "scope",
        "url",
        "onProgress",
        "onError",
        "json",
        "i",
        "json",
        "i",
        "AnimationClip",
        "json",
        "i",
        "animations",
        "clip",
        "animations",
        "Loader",
        "manager",
        "manager",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "CompressedTexture",
        "FileLoader",
        "loader",
        "loader",
        "loader",
        "loader",
        "scope",
        "i",
        "loader",
        "url",
        "i",
        "buffer",
        "scope",
        "buffer",
        "images",
        "i",
        "texDatas",
        "texDatas",
        "texDatas",
        "texDatas",
        "loaded",
        "loaded",
        "texDatas",
        "texture",
        "LinearFilter",
        "texture",
        "images",
        "texture",
        "texDatas",
        "texture",
        "onLoad",
        "onLoad",
        "texture",
        "onProgress",
        "onError",
        "url",
        "url",
        "i",
        "il",
        "i",
        "loadTexture",
        "i",
        "loader",
        "url",
        "buffer",
        "scope",
        "buffer",
        "texDatas",
        "texDatas",
        "texDatas",
        "f",
        "faces",
        "f",
        "images",
        "f",
        "i",
        "texDatas",
        "i",
        "images",
        "f",
        "texDatas",
        "f",
        "texDatas",
        "i",
        "images",
        "f",
        "texDatas",
        "images",
        "f",
        "texDatas",
        "images",
        "f",
        "texDatas",
        "texture",
        "images",
        "texture",
        "texDatas",
        "texture",
        "texDatas",
        "texture",
        "texDatas",
        "texDatas",
        "texture",
        "LinearFilter",
        "texture",
        "texDatas",
        "texture",
        "onLoad",
        "onLoad",
        "texture",
        "onProgress",
        "onError",
        "texture",
        "Loader",
        "manager",
        "manager",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "url",
        "url",
        "url",
        "url",
        "Cache",
        "url",
        "cached",
        "scope",
        "url",
        "setTimeout",
        "onLoad",
        "onLoad",
        "cached",
        "scope",
        "url",
        "cached",
        "createElementNS",
        "removeEventListeners",
        "Cache",
        "url",
        "onLoad",
        "onLoad",
        "scope",
        "url",
        "removeEventListeners",
        "onError",
        "onError",
        "scope",
        "url",
        "scope",
        "url",
        "image",
        "onImageLoad",
        "image",
        "onImageError",
        "image",
        "onImageLoad",
        "image",
        "onImageError",
        "url",
        "image",
        "scope",
        "url",
        "image",
        "url",
        "image",
        "Loader",
        "manager",
        "manager",
        "urls",
        "onLoad",
        "onProgress",
        "onError",
        "CubeTexture",
        "texture",
        "SRGBColorSpace",
        "ImageLoader",
        "loader",
        "loader",
        "i",
        "loader",
        "urls",
        "i",
        "image",
        "texture",
        "i",
        "image",
        "loaded",
        "loaded",
        "texture",
        "onLoad",
        "onLoad",
        "texture",
        "onError",
        "i",
        "urls",
        "i",
        "loadTexture",
        "i",
        "texture",
        "Loader",
        "manager",
        "manager",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "DataTexture",
        "FileLoader",
        "loader",
        "loader",
        "loader",
        "loader",
        "scope",
        "loader",
        "url",
        "buffer",
        "texData",
        "scope",
        "buffer",
        "error",
        "onError",
        "onError",
        "error",
        "error",
        "texData",
        "texture",
        "texData",
        "texData",
        "texture",
        "texData",
        "texture",
        "texData",
        "texture",
        "texData",
        "texture",
        "texData",
        "texData",
        "ClampToEdgeWrapping",
        "texture",
        "texData",
        "texData",
        "ClampToEdgeWrapping",
        "texture",
        "texData",
        "texData",
        "LinearFilter",
        "texture",
        "texData",
        "texData",
        "LinearFilter",
        "texture",
        "texData",
        "texData",
        "texData",
        "texture",
        "texData",
        "texData",
        "texture",
        "texData",
        "texData",
        "texture",
        "texData",
        "texData",
        "texture",
        "texData",
        "texData",
        "texture",
        "texData",
        "texture",
        "LinearMipmapLinearFilter",
        "texData",
        "texture",
        "LinearFilter",
        "texData",
        "texture",
        "texData",
        "texture",
        "onLoad",
        "onLoad",
        "texture",
        "texData",
        "onProgress",
        "onError",
        "texture",
        "Loader",
        "manager",
        "manager",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "Texture",
        "ImageLoader",
        "loader",
        "loader",
        "loader",
        "url",
        "image",
        "texture",
        "image",
        "texture",
        "onLoad",
        "onLoad",
        "texture",
        "onProgress",
        "onError",
        "texture",
        "Object3D",
        "color",
        "intensity",
        "Color",
        "color",
        "intensity",
        "source",
        "recursive",
        "source",
        "recursive",
        "source",
        "source",
        "meta",
        "meta",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "Light",
        "skyColor",
        "groundColor",
        "intensity",
        "skyColor",
        "intensity",
        "Object3D",
        "Color",
        "groundColor",
        "source",
        "recursive",
        "source",
        "recursive",
        "source",
        "Matrix4",
        "Vector3",
        "Vector3",
        "camera",
        "camera",
        "Vector2",
        "Matrix4",
        "Frustum",
        "Vector2",
        "Vector4",
        "light",
        "_lightPositionWorld$1",
        "light",
        "shadowCamera",
        "_lightPositionWorld$1",
        "_lookTarget$1",
        "light",
        "shadowCamera",
        "_lookTarget$1",
        "shadowCamera",
        "_projScreenMatrix$1",
        "shadowCamera",
        "shadowCamera",
        "_projScreenMatrix$1",
        "shadowMatrix",
        "shadowMatrix",
        "_projScreenMatrix$1",
        "viewportIndex",
        "viewportIndex",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "LightShadow",
        "PerspectiveCamera",
        "light",
        "RAD2DEG",
        "light",
        "light",
        "camera",
        "fov",
        "camera",
        "aspect",
        "camera",
        "far",
        "camera",
        "camera",
        "fov",
        "camera",
        "aspect",
        "camera",
        "far",
        "camera",
        "light",
        "source",
        "source",
        "source",
        "Light",
        "color",
        "intensity",
        "distance",
        "angle",
        "penumbra",
        "decay",
        "color",
        "intensity",
        "Object3D",
        "Object3D",
        "distance",
        "angle",
        "penumbra",
        "decay",
        "SpotLightShadow",
        "power",
        "power",
        "source",
        "recursive",
        "source",
        "recursive",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "Matrix4",
        "Vector3",
        "Vector3",
        "LightShadow",
        "PerspectiveCamera",
        "Vector2",
        "Vector4",
        "Vector4",
        "Vector4",
        "Vector4",
        "Vector4",
        "Vector4",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "Vector3",
        "light",
        "viewportIndex",
        "light",
        "camera",
        "far",
        "camera",
        "camera",
        "far",
        "camera",
        "_lightPositionWorld",
        "light",
        "camera",
        "_lightPositionWorld",
        "_lookTarget",
        "camera",
        "_lookTarget",
        "viewportIndex",
        "camera",
        "viewportIndex",
        "camera",
        "_lookTarget",
        "camera",
        "shadowMatrix",
        "_lightPositionWorld",
        "_lightPositionWorld",
        "_lightPositionWorld",
        "_projScreenMatrix",
        "camera",
        "camera",
        "_projScreenMatrix",
        "Light",
        "color",
        "intensity",
        "distance",
        "decay",
        "color",
        "intensity",
        "distance",
        "decay",
        "PointLightShadow",
        "power",
        "power",
        "source",
        "recursive",
        "source",
        "recursive",
        "source",
        "source",
        "source",
        "LightShadow",
        "OrthographicCamera",
        "Light",
        "color",
        "intensity",
        "color",
        "intensity",
        "Object3D",
        "Object3D",
        "DirectionalLightShadow",
        "source",
        "source",
        "source",
        "source",
        "Light",
        "color",
        "intensity",
        "color",
        "intensity",
        "Light",
        "color",
        "intensity",
        "width",
        "height",
        "color",
        "intensity",
        "width",
        "height",
        "power",
        "power",
        "source",
        "source",
        "source",
        "source",
        "meta",
        "meta",
        "data",
        "data",
        "data",
        "i",
        "i",
        "Vector3",
        "coefficients",
        "i",
        "i",
        "i",
        "coefficients",
        "i",
        "i",
        "i",
        "i",
        "normal",
        "target",
        "normal",
        "normal",
        "normal",
        "target",
        "coeff",
        "target",
        "coeff",
        "y",
        "target",
        "coeff",
        "z",
        "target",
        "coeff",
        "x",
        "target",
        "coeff",
        "x",
        "y",
        "target",
        "coeff",
        "y",
        "z",
        "target",
        "coeff",
        "z",
        "z",
        "target",
        "coeff",
        "x",
        "z",
        "target",
        "coeff",
        "x",
        "x",
        "y",
        "y",
        "target",
        "normal",
        "target",
        "normal",
        "normal",
        "normal",
        "target",
        "coeff",
        "target",
        "coeff",
        "y",
        "target",
        "coeff",
        "z",
        "target",
        "coeff",
        "x",
        "target",
        "coeff",
        "x",
        "y",
        "target",
        "coeff",
        "y",
        "z",
        "target",
        "coeff",
        "z",
        "z",
        "target",
        "coeff",
        "x",
        "z",
        "target",
        "coeff",
        "x",
        "x",
        "y",
        "y",
        "target",
        "sh",
        "i",
        "i",
        "i",
        "sh",
        "i",
        "sh",
        "s",
        "i",
        "i",
        "i",
        "sh",
        "i",
        "s",
        "s",
        "i",
        "i",
        "i",
        "s",
        "sh",
        "alpha",
        "i",
        "i",
        "i",
        "sh",
        "i",
        "alpha",
        "sh",
        "i",
        "i",
        "i",
        "sh",
        "i",
        "sh",
        "sh",
        "array",
        "offset",
        "i",
        "i",
        "coefficients",
        "i",
        "array",
        "offset",
        "i",
        "array",
        "offset",
        "i",
        "i",
        "coefficients",
        "i",
        "array",
        "offset",
        "i",
        "array",
        "normal",
        "shBasis",
        "normal",
        "normal",
        "normal",
        "shBasis",
        "shBasis",
        "y",
        "shBasis",
        "z",
        "shBasis",
        "x",
        "shBasis",
        "x",
        "y",
        "shBasis",
        "y",
        "z",
        "shBasis",
        "z",
        "z",
        "shBasis",
        "x",
        "z",
        "shBasis",
        "x",
        "x",
        "y",
        "y",
        "Light",
        "sh",
        "SphericalHarmonics3",
        "intensity",
        "intensity",
        "sh",
        "source",
        "source",
        "source",
        "json",
        "json",
        "json",
        "meta",
        "meta",
        "data",
        "data",
        "Loader",
        "manager",
        "manager",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "FileLoader",
        "scope",
        "loader",
        "scope",
        "loader",
        "scope",
        "loader",
        "scope",
        "loader",
        "url",
        "text",
        "onLoad",
        "scope",
        "text",
        "e",
        "onError",
        "onError",
        "e",
        "e",
        "scope",
        "url",
        "onProgress",
        "onError",
        "json",
        "name",
        "textures",
        "name",
        "name",
        "textures",
        "name",
        "MaterialLoader",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "Color",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "material",
        "json",
        "json",
        "material",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "json",
        "material",
        "json",
        "material",
        "json",
        "json",
        "name",
        "json",
        "json",
        "name",
        "material",
        "name",
        "uniform",
        "material",
        "name",
        "getTexture",
        "uniform",
        "material",
        "name",
        "Color",
        "uniform",
        "material",
        "name",
        "Vector2",
        "uniform",
        "material",
        "name",
        "Vector3",
        "uniform",
        "material",
        "name",
        "Vector4",
        "uniform",
        "material",
        "name",
        "Matrix3",
        "uniform",
        "material",
        "name",
        "Matrix4",
        "uniform",
        "material",
        "name",
        "uniform",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "key",
        "json",
        "material",
        "key",
        "json",
        "key",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "json",
        "json",
        "json",
        "normalScale",
        "normalScale",
        "normalScale",
        "normalScale",
        "material",
        "Vector2",
        "normalScale",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "Vector2",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "json",
        "material",
        "getTexture",
        "json",
        "material",
        "value",
        "value",
        "materialLib",
        "array",
        "TextDecoder",
        "TextDecoder",
        "array",
        "array",
        "i",
        "il",
        "i",
        "s",
        "array",
        "i",
        "decodeURIComponent",
        "escape",
        "s",
        "e",
        "s",
        "url",
        "url",
        "index",
        "url",
        "index",
        "url",
        "path",
        "url",
        "url",
        "path",
        "url",
        "path",
        "path",
        "url",
        "url",
        "url",
        "url",
        "url",
        "url",
        "path",
        "url",
        "BufferGeometry",
        "Infinity",
        "source",
        "source",
        "source",
        "data",
        "data",
        "data",
        "Loader",
        "manager",
        "manager",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "FileLoader",
        "scope",
        "loader",
        "scope",
        "loader",
        "scope",
        "loader",
        "scope",
        "loader",
        "url",
        "text",
        "onLoad",
        "scope",
        "text",
        "e",
        "onError",
        "onError",
        "e",
        "e",
        "scope",
        "url",
        "onProgress",
        "onError",
        "json",
        "json",
        "uuid",
        "interleavedBufferMap",
        "uuid",
        "interleavedBufferMap",
        "uuid",
        "json",
        "interleavedBuffers",
        "uuid",
        "getArrayBuffer",
        "json",
        "interleavedBuffer",
        "getTypedArray",
        "interleavedBuffer",
        "buffer",
        "InterleavedBuffer",
        "array",
        "interleavedBuffer",
        "ib",
        "interleavedBuffer",
        "interleavedBufferMap",
        "uuid",
        "ib",
        "ib",
        "json",
        "uuid",
        "arrayBufferMap",
        "uuid",
        "arrayBufferMap",
        "uuid",
        "json",
        "arrayBuffers",
        "uuid",
        "Uint32Array",
        "arrayBuffer",
        "arrayBufferMap",
        "uuid",
        "ab",
        "ab",
        "json",
        "InstancedBufferGeometry",
        "BufferGeometry",
        "json",
        "index",
        "getTypedArray",
        "index",
        "index",
        "geometry",
        "BufferAttribute",
        "typedArray",
        "json",
        "key",
        "attributes",
        "attributes",
        "key",
        "attribute",
        "getInterleavedBuffer",
        "json",
        "attribute",
        "bufferAttribute",
        "InterleavedBufferAttribute",
        "interleavedBuffer",
        "attribute",
        "attribute",
        "attribute",
        "getTypedArray",
        "attribute",
        "attribute",
        "attribute",
        "InstancedBufferAttribute",
        "BufferAttribute",
        "bufferAttribute",
        "bufferAttributeConstr",
        "typedArray",
        "attribute",
        "attribute",
        "attribute",
        "bufferAttribute",
        "attribute",
        "attribute",
        "bufferAttribute",
        "attribute",
        "geometry",
        "key",
        "bufferAttribute",
        "json",
        "morphAttributes",
        "key",
        "morphAttributes",
        "morphAttributes",
        "key",
        "attributeArray",
        "i",
        "il",
        "i",
        "attributeArray",
        "i",
        "attribute",
        "getInterleavedBuffer",
        "json",
        "attribute",
        "bufferAttribute",
        "InterleavedBufferAttribute",
        "interleavedBuffer",
        "attribute",
        "attribute",
        "attribute",
        "getTypedArray",
        "attribute",
        "attribute",
        "bufferAttribute",
        "BufferAttribute",
        "typedArray",
        "attribute",
        "attribute",
        "attribute",
        "bufferAttribute",
        "attribute",
        "array",
        "bufferAttribute",
        "geometry",
        "key",
        "array",
        "json",
        "morphTargetsRelative",
        "geometry",
        "json",
        "json",
        "json",
        "groups",
        "groups",
        "i",
        "n",
        "i",
        "groups",
        "i",
        "geometry",
        "group",
        "group",
        "group",
        "json",
        "boundingSphere",
        "Vector3",
        "boundingSphere",
        "center",
        "boundingSphere",
        "geometry",
        "Sphere",
        "center",
        "boundingSphere",
        "json",
        "geometry",
        "json",
        "json",
        "geometry",
        "json",
        "geometry",
        "Loader",
        "manager",
        "manager",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "LoaderUtils",
        "url",
        "path",
        "FileLoader",
        "loader",
        "loader",
        "loader",
        "loader",
        "url",
        "text",
        "json",
        "text",
        "error",
        "onError",
        "onError",
        "error",
        "url",
        "error",
        "json",
        "metadata",
        "metadata",
        "metadata",
        "onError",
        "onError",
        "url",
        "url",
        "scope",
        "json",
        "onLoad",
        "onProgress",
        "onError",
        "url",
        "onProgress",
        "LoaderUtils",
        "url",
        "path",
        "FileLoader",
        "loader",
        "loader",
        "loader",
        "loader",
        "url",
        "onProgress",
        "text",
        "json",
        "metadata",
        "metadata",
        "metadata",
        "url",
        "scope",
        "json",
        "json",
        "onLoad",
        "json",
        "json",
        "json",
        "shapes",
        "json",
        "onLoad",
        "onLoad",
        "json",
        "images",
        "json",
        "textures",
        "json",
        "geometries",
        "materials",
        "textures",
        "animations",
        "json",
        "skeletons",
        "onLoad",
        "uuid",
        "images",
        "images",
        "uuid",
        "HTMLImageElement",
        "hasImages",
        "hasImages",
        "onLoad",
        "json",
        "json",
        "json",
        "json",
        "shapes",
        "json",
        "json",
        "images",
        "json",
        "textures",
        "json",
        "geometries",
        "materials",
        "textures",
        "animations",
        "json",
        "skeletons",
        "json",
        "json",
        "json",
        "i",
        "l",
        "i",
        "Shape",
        "json",
        "i",
        "shapes",
        "shape",
        "shape",
        "shapes",
        "json",
        "child",
        "child",
        "bones",
        "child",
        "child",
        "json",
        "json",
        "i",
        "l",
        "i",
        "Skeleton",
        "json",
        "i",
        "bones",
        "skeletons",
        "skeleton",
        "skeleton",
        "skeletons",
        "json",
        "shapes",
        "json",
        "BufferGeometryLoader",
        "json",
        "i",
        "l",
        "i",
        "json",
        "i",
        "data",
        "geometry",
        "bufferGeometryLoader",
        "data",
        "data",
        "Geometries",
        "geometry",
        "Geometries",
        "data",
        "data",
        "shapes",
        "data",
        "geometry",
        "data",
        "data",
        "geometry",
        "data",
        "data",
        "geometry",
        "data",
        "geometries",
        "data",
        "geometry",
        "geometries",
        "json",
        "textures",
        "json",
        "MaterialLoader",
        "loader",
        "textures",
        "json",
        "i",
        "l",
        "i",
        "json",
        "i",
        "cache",
        "data",
        "cache",
        "data",
        "loader",
        "data",
        "materials",
        "data",
        "cache",
        "data",
        "materials",
        "json",
        "json",
        "i",
        "json",
        "i",
        "json",
        "i",
        "AnimationClip",
        "data",
        "animations",
        "clip",
        "clip",
        "animations",
        "json",
        "onLoad",
        "url",
        "scope",
        "url",
        "loader",
        "url",
        "scope",
        "url",
        "scope",
        "url",
        "scope",
        "url",
        "image",
        "image",
        "url",
        "url",
        "scope",
        "url",
        "loadImage",
        "path",
        "image",
        "getTypedArray",
        "image",
        "image",
        "image",
        "image",
        "json",
        "json",
        "LoadingManager",
        "onLoad",
        "loader",
        "ImageLoader",
        "manager",
        "loader",
        "json",
        "i",
        "il",
        "i",
        "json",
        "i",
        "image",
        "url",
        "url",
        "j",
        "jl",
        "j",
        "url",
        "j",
        "deserializeImage",
        "currentUrl",
        "deserializedImage",
        "deserializedImage",
        "HTMLImageElement",
        "imageArray",
        "deserializedImage",
        "imageArray",
        "DataTexture",
        "deserializedImage",
        "deserializedImage",
        "deserializedImage",
        "images",
        "image",
        "Source",
        "imageArray",
        "deserializeImage",
        "image",
        "images",
        "image",
        "Source",
        "deserializedImage",
        "images",
        "json",
        "image",
        "image",
        "url",
        "url",
        "scope",
        "url",
        "loader",
        "path",
        "image",
        "getTypedArray",
        "image",
        "image",
        "image",
        "image",
        "json",
        "json",
        "loader",
        "ImageLoader",
        "loader",
        "json",
        "i",
        "il",
        "i",
        "json",
        "i",
        "image",
        "url",
        "url",
        "j",
        "jl",
        "j",
        "url",
        "j",
        "deserializeImage",
        "currentUrl",
        "deserializedImage",
        "deserializedImage",
        "HTMLImageElement",
        "imageArray",
        "deserializedImage",
        "imageArray",
        "DataTexture",
        "deserializedImage",
        "deserializedImage",
        "deserializedImage",
        "images",
        "image",
        "Source",
        "imageArray",
        "deserializeImage",
        "image",
        "images",
        "image",
        "Source",
        "deserializedImage",
        "images",
        "json",
        "images",
        "value",
        "value",
        "value",
        "value",
        "value",
        "json",
        "json",
        "i",
        "l",
        "i",
        "json",
        "i",
        "data",
        "data",
        "images",
        "data",
        "data",
        "images",
        "data",
        "source",
        "image",
        "texture",
        "CubeTexture",
        "image",
        "texture",
        "image",
        "image",
        "texture",
        "DataTexture",
        "texture",
        "Texture",
        "image",
        "texture",
        "texture",
        "source",
        "texture",
        "data",
        "data",
        "texture",
        "data",
        "data",
        "texture",
        "parseConstant",
        "data",
        "TEXTURE_MAPPING",
        "data",
        "texture",
        "data",
        "data",
        "texture",
        "data",
        "data",
        "texture",
        "data",
        "data",
        "texture",
        "data",
        "data",
        "texture",
        "data",
        "data",
        "texture",
        "parseConstant",
        "data",
        "TEXTURE_WRAPPING",
        "texture",
        "parseConstant",
        "data",
        "TEXTURE_WRAPPING",
        "data",
        "texture",
        "data",
        "data",
        "texture",
        "data",
        "data",
        "texture",
        "data",
        "data",
        "texture",
        "data",
        "data",
        "texture",
        "parseConstant",
        "data",
        "TEXTURE_FILTER",
        "data",
        "texture",
        "parseConstant",
        "data",
        "TEXTURE_FILTER",
        "data",
        "texture",
        "data",
        "data",
        "texture",
        "data",
        "data",
        "texture",
        "data",
        "data",
        "texture",
        "data",
        "data",
        "texture",
        "data",
        "data",
        "texture",
        "data",
        "data",
        "texture",
        "data",
        "textures",
        "data",
        "texture",
        "textures",
        "data",
        "geometries",
        "materials",
        "textures",
        "animations",
        "name",
        "geometries",
        "name",
        "name",
        "geometries",
        "name",
        "name",
        "name",
        "name",
        "name",
        "i",
        "l",
        "i",
        "name",
        "i",
        "materials",
        "uuid",
        "uuid",
        "array",
        "materials",
        "uuid",
        "array",
        "materials",
        "name",
        "name",
        "materials",
        "name",
        "uuid",
        "textures",
        "uuid",
        "uuid",
        "textures",
        "uuid",
        "data",
        "Scene",
        "data",
        "data",
        "Color",
        "data",
        "getTexture",
        "data",
        "data",
        "getTexture",
        "data",
        "data",
        "data",
        "Fog",
        "data",
        "data",
        "data",
        "data",
        "FogExp2",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "PerspectiveCamera",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "OrthographicCamera",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "AmbientLight",
        "data",
        "data",
        "DirectionalLight",
        "data",
        "data",
        "data",
        "PointLight",
        "data",
        "data",
        "data",
        "data",
        "RectAreaLight",
        "data",
        "data",
        "data",
        "data",
        "SpotLight",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "HemisphereLight",
        "data",
        "data",
        "data",
        "LightProbe",
        "data",
        "geometry",
        "getGeometry",
        "data",
        "material",
        "getMaterial",
        "data",
        "SkinnedMesh",
        "geometry",
        "material",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "geometry",
        "getGeometry",
        "data",
        "material",
        "getMaterial",
        "data",
        "Mesh",
        "geometry",
        "material",
        "geometry",
        "getGeometry",
        "data",
        "material",
        "getMaterial",
        "data",
        "data",
        "data",
        "data",
        "InstancedMesh",
        "geometry",
        "material",
        "count",
        "InstancedBufferAttribute",
        "Float32Array",
        "instanceMatrix",
        "instanceColor",
        "InstancedBufferAttribute",
        "Float32Array",
        "instanceColor",
        "instanceColor",
        "geometry",
        "getGeometry",
        "data",
        "material",
        "getMaterial",
        "data",
        "BatchedMesh",
        "data",
        "data",
        "data",
        "material",
        "geometry",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "bound",
        "Box3",
        "box",
        "bound",
        "box",
        "bound",
        "Sphere",
        "sphere",
        "bound",
        "sphere",
        "bound",
        "bound",
        "box",
        "bound",
        "sphere",
        "data",
        "data",
        "data",
        "data",
        "data",
        "getTexture",
        "data",
        "data",
        "getTexture",
        "data",
        "LOD",
        "Line",
        "getGeometry",
        "data",
        "getMaterial",
        "data",
        "LineLoop",
        "getGeometry",
        "data",
        "getMaterial",
        "data",
        "LineSegments",
        "getGeometry",
        "data",
        "getMaterial",
        "data",
        "Points",
        "getGeometry",
        "data",
        "getMaterial",
        "data",
        "Sprite",
        "getMaterial",
        "data",
        "Group",
        "Bone",
        "Object3D",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "i",
        "children",
        "i",
        "children",
        "i",
        "geometries",
        "materials",
        "textures",
        "animations",
        "data",
        "data",
        "i",
        "objectAnimations",
        "i",
        "objectAnimations",
        "i",
        "animations",
        "uuid",
        "data",
        "data",
        "data",
        "data",
        "l",
        "levels",
        "l",
        "levels",
        "l",
        "level",
        "child",
        "child",
        "level",
        "level",
        "skeletons",
        "skeletons",
        "child",
        "child",
        "child",
        "skeletons",
        "child",
        "skeleton",
        "child",
        "child",
        "skeleton",
        "child",
        "child",
        "child",
        "child",
        "child",
        "uuid",
        "target",
        "child",
        "target",
        "child",
        "Object3D",
        "UVMapping",
        "CubeReflectionMapping",
        "CubeRefractionMapping",
        "EquirectangularReflectionMapping",
        "EquirectangularRefractionMapping",
        "CubeUVReflectionMapping",
        "RepeatWrapping",
        "ClampToEdgeWrapping",
        "MirroredRepeatWrapping",
        "NearestFilter",
        "NearestMipmapNearestFilter",
        "NearestMipmapLinearFilter",
        "LinearFilter",
        "LinearMipmapNearestFilter",
        "LinearMipmapLinearFilter",
        "Loader",
        "manager",
        "manager",
        "createImageBitmap",
        "fetch",
        "options",
        "options",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "url",
        "url",
        "url",
        "url",
        "url",
        "url",
        "Cache",
        "url",
        "cached",
        "scope",
        "url",
        "cached",
        "cached",
        "imageBitmap",
        "onLoad",
        "onLoad",
        "imageBitmap",
        "scope",
        "url",
        "e",
        "onError",
        "onError",
        "e",
        "setTimeout",
        "onLoad",
        "onLoad",
        "cached",
        "scope",
        "url",
        "cached",
        "fetchOptions",
        "fetchOptions",
        "fetch",
        "url",
        "fetchOptions",
        "res",
        "res",
        "blob",
        "createImageBitmap",
        "blob",
        "scope",
        "imageBitmap",
        "Cache",
        "url",
        "imageBitmap",
        "onLoad",
        "onLoad",
        "imageBitmap",
        "scope",
        "url",
        "imageBitmap",
        "e",
        "onError",
        "onError",
        "e",
        "Cache",
        "url",
        "scope",
        "url",
        "scope",
        "url",
        "Cache",
        "url",
        "promise",
        "scope",
        "url",
        "_context",
        "_context",
        "_context",
        "value",
        "_context",
        "value",
        "Loader",
        "manager",
        "manager",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "FileLoader",
        "loader",
        "loader",
        "loader",
        "loader",
        "loader",
        "url",
        "buffer",
        "buffer",
        "AudioContext",
        "context",
        "bufferCopy",
        "audioBuffer",
        "onLoad",
        "audioBuffer",
        "handleError",
        "e",
        "handleError",
        "e",
        "onProgress",
        "onError",
        "e",
        "onError",
        "onError",
        "e",
        "e",
        "scope",
        "url",
        "Matrix4",
        "Matrix4",
        "Matrix4",
        "PerspectiveCamera",
        "PerspectiveCamera",
        "camera",
        "cache",
        "camera",
        "cache",
        "camera",
        "cache",
        "camera",
        "cache",
        "camera",
        "cache",
        "camera",
        "cache",
        "camera",
        "cache",
        "needsUpdate",
        "cache",
        "camera",
        "cache",
        "camera",
        "cache",
        "camera",
        "cache",
        "camera",
        "cache",
        "camera",
        "cache",
        "camera",
        "cache",
        "_projectionMatrix",
        "camera",
        "cache",
        "eyeSepHalf",
        "cache",
        "cache",
        "cache",
        "DEG2RAD",
        "cache",
        "cache",
        "_eyeLeft",
        "eyeSepHalf",
        "_eyeRight",
        "eyeSepHalf",
        "xmin",
        "ymax",
        "cache",
        "eyeSepOnProjection",
        "xmax",
        "ymax",
        "cache",
        "eyeSepOnProjection",
        "_projectionMatrix",
        "cache",
        "xmax",
        "xmin",
        "_projectionMatrix",
        "xmax",
        "xmin",
        "xmax",
        "xmin",
        "_projectionMatrix",
        "xmin",
        "ymax",
        "cache",
        "eyeSepOnProjection",
        "xmax",
        "ymax",
        "cache",
        "eyeSepOnProjection",
        "_projectionMatrix",
        "cache",
        "xmax",
        "xmin",
        "_projectionMatrix",
        "xmax",
        "xmin",
        "xmax",
        "xmin",
        "_projectionMatrix",
        "camera",
        "_eyeLeft",
        "camera",
        "_eyeRight",
        "autoStart",
        "autoStart",
        "now",
        "now",
        "diff",
        "newTime",
        "newTime",
        "diff",
        "diff",
        "performance",
        "performance",
        "Vector3",
        "Quaternion",
        "Vector3",
        "Vector3",
        "Object3D",
        "AudioContext",
        "Clock",
        "value",
        "value",
        "value",
        "value",
        "force",
        "force",
        "_position$1",
        "_quaternion$1",
        "_scale$1",
        "_orientation$1",
        "_quaternion$1",
        "listener",
        "listener",
        "_position$1",
        "endTime",
        "listener",
        "_position$1",
        "endTime",
        "listener",
        "_position$1",
        "endTime",
        "listener",
        "_orientation$1",
        "endTime",
        "listener",
        "_orientation$1",
        "endTime",
        "listener",
        "_orientation$1",
        "endTime",
        "listener",
        "up",
        "endTime",
        "listener",
        "up",
        "endTime",
        "listener",
        "up",
        "endTime",
        "listener",
        "_position$1",
        "_position$1",
        "_position$1",
        "listener",
        "_orientation$1",
        "_orientation$1",
        "_orientation$1",
        "up",
        "up",
        "up",
        "Object3D",
        "listener",
        "listener",
        "listener",
        "listener",
        "audioNode",
        "audioNode",
        "mediaElement",
        "mediaElement",
        "mediaStream",
        "mediaStream",
        "audioBuffer",
        "audioBuffer",
        "delay",
        "delay",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "i",
        "l",
        "i",
        "i",
        "i",
        "i",
        "l",
        "i",
        "i",
        "i",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "Vector3",
        "Quaternion",
        "Vector3",
        "Vector3",
        "Audio",
        "listener",
        "listener",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "coneInnerAngle",
        "coneOuterAngle",
        "coneOuterGain",
        "coneInnerAngle",
        "coneOuterAngle",
        "coneOuterGain",
        "force",
        "force",
        "_position",
        "_quaternion",
        "_scale",
        "_orientation",
        "_quaternion",
        "panner",
        "panner",
        "_position",
        "endTime",
        "panner",
        "_position",
        "endTime",
        "panner",
        "_position",
        "endTime",
        "panner",
        "_orientation",
        "endTime",
        "panner",
        "_orientation",
        "endTime",
        "panner",
        "_orientation",
        "endTime",
        "panner",
        "_position",
        "_position",
        "_position",
        "panner",
        "_orientation",
        "_orientation",
        "_orientation",
        "audio",
        "fftSize",
        "audio",
        "fftSize",
        "Uint8Array",
        "audio",
        "i",
        "data",
        "i",
        "value",
        "data",
        "i",
        "value",
        "data",
        "binding",
        "typeName",
        "valueSize",
        "binding",
        "valueSize",
        "typeName",
        "mixFunction",
        "mixFunctionAdditive",
        "setIdentity",
        "Float64Array",
        "valueSize",
        "mixFunction",
        "mixFunctionAdditive",
        "setIdentity",
        "valueSize",
        "mixFunction",
        "mixFunctionAdditive",
        "setIdentity",
        "Float64Array",
        "valueSize",
        "mixFunction",
        "mixFunctionAdditive",
        "setIdentity",
        "accuIndex",
        "weight",
        "accuIndex",
        "stride",
        "stride",
        "currentWeight",
        "i",
        "stride",
        "i",
        "buffer",
        "offset",
        "i",
        "buffer",
        "i",
        "currentWeight",
        "weight",
        "currentWeight",
        "weight",
        "weight",
        "currentWeight",
        "buffer",
        "offset",
        "mix",
        "stride",
        "currentWeight",
        "weight",
        "stride",
        "buffer",
        "offset",
        "weight",
        "stride",
        "weight",
        "accuIndex",
        "accuIndex",
        "stride",
        "stride",
        "weight",
        "stride",
        "buffer",
        "offset",
        "originalValueOffset",
        "weight",
        "stride",
        "weightAdditive",
        "buffer",
        "offset",
        "stride",
        "stride",
        "stride",
        "stride",
        "i",
        "e",
        "i",
        "buffer",
        "i",
        "buffer",
        "i",
        "stride",
        "binding",
        "buffer",
        "offset",
        "stride",
        "binding",
        "buffer",
        "originalValueOffset",
        "i",
        "e",
        "i",
        "buffer",
        "i",
        "buffer",
        "originalValueOffset",
        "i",
        "stride",
        "originalValueOffset",
        "startIndex",
        "i",
        "endIndex",
        "i",
        "i",
        "i",
        "i",
        "targetIndex",
        "i",
        "startIndex",
        "i",
        "buffer",
        "dstOffset",
        "srcOffset",
        "t",
        "stride",
        "t",
        "i",
        "stride",
        "i",
        "buffer",
        "dstOffset",
        "i",
        "buffer",
        "srcOffset",
        "i",
        "buffer",
        "dstOffset",
        "srcOffset",
        "t",
        "Quaternion",
        "buffer",
        "dstOffset",
        "buffer",
        "dstOffset",
        "buffer",
        "srcOffset",
        "t",
        "buffer",
        "dstOffset",
        "srcOffset",
        "t",
        "stride",
        "stride",
        "Quaternion",
        "buffer",
        "workOffset",
        "buffer",
        "dstOffset",
        "buffer",
        "srcOffset",
        "Quaternion",
        "buffer",
        "dstOffset",
        "buffer",
        "dstOffset",
        "buffer",
        "workOffset",
        "t",
        "buffer",
        "dstOffset",
        "srcOffset",
        "t",
        "stride",
        "t",
        "i",
        "stride",
        "i",
        "dstOffset",
        "i",
        "buffer",
        "j",
        "buffer",
        "j",
        "s",
        "buffer",
        "srcOffset",
        "i",
        "t",
        "buffer",
        "dstOffset",
        "srcOffset",
        "t",
        "stride",
        "i",
        "stride",
        "i",
        "dstOffset",
        "i",
        "buffer",
        "j",
        "buffer",
        "j",
        "buffer",
        "srcOffset",
        "i",
        "t",
        "_RESERVED_CHARS_RE",
        "_RESERVED_CHARS_RE",
        "_RESERVED_CHARS_RE",
        "_wordChar",
        "_wordCharOrDot",
        "_wordChar",
        "_wordChar",
        "_directoryRe",
        "_nodeRe",
        "_objectRe",
        "_propertyRe",
        "targetGroup",
        "path",
        "optionalParsedPath",
        "optionalParsedPath",
        "PropertyBinding",
        "path",
        "targetGroup",
        "targetGroup",
        "path",
        "parsedPath",
        "array",
        "offset",
        "firstValidIndex",
        "binding",
        "binding",
        "array",
        "offset",
        "array",
        "offset",
        "bindings",
        "i",
        "n",
        "i",
        "bindings",
        "i",
        "array",
        "offset",
        "bindings",
        "i",
        "n",
        "i",
        "bindings",
        "i",
        "bindings",
        "i",
        "n",
        "i",
        "bindings",
        "i",
        "rootNode",
        "path",
        "parsedPath",
        "path",
        "parsedPath",
        "PropertyBinding",
        "path",
        "PropertyBinding",
        "rootNode",
        "rootNode",
        "root",
        "path",
        "parsedPath",
        "root",
        "root",
        "PropertyBinding",
        "root",
        "path",
        "parsedPath",
        "PropertyBinding",
        "root",
        "path",
        "parsedPath",
        "name",
        "name",
        "_reservedRe",
        "trackName",
        "_trackRe",
        "trackName",
        "matches",
        "trackName",
        "matches",
        "matches",
        "matches",
        "matches",
        "matches",
        "results",
        "results",
        "lastDot",
        "lastDot",
        "results",
        "lastDot",
        "_supportedObjectNames",
        "objectName",
        "results",
        "results",
        "lastDot",
        "results",
        "objectName",
        "results",
        "results",
        "trackName",
        "results",
        "root",
        "nodeName",
        "nodeName",
        "nodeName",
        "nodeName",
        "nodeName",
        "nodeName",
        "root",
        "nodeName",
        "root",
        "root",
        "root",
        "root",
        "nodeName",
        "bone",
        "bone",
        "root",
        "children",
        "i",
        "children",
        "i",
        "children",
        "i",
        "childNode",
        "nodeName",
        "childNode",
        "nodeName",
        "childNode",
        "searchNodeSubtree",
        "childNode",
        "result",
        "result",
        "searchNodeSubtree",
        "root",
        "subTreeNode",
        "subTreeNode",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "source",
        "i",
        "n",
        "i",
        "buffer",
        "offset",
        "source",
        "i",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "dest",
        "i",
        "n",
        "i",
        "dest",
        "i",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "dest",
        "i",
        "n",
        "i",
        "dest",
        "i",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "dest",
        "i",
        "n",
        "i",
        "dest",
        "i",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "targetArray",
        "offset",
        "targetArray",
        "offset",
        "sourceArray",
        "offset",
        "sourceArray",
        "offset",
        "parsedPath",
        "parsedPath",
        "parsedPath",
        "targetObject",
        "targetObject",
        "PropertyBinding",
        "parsedPath",
        "targetObject",
        "targetObject",
        "objectName",
        "parsedPath",
        "objectName",
        "targetObject",
        "targetObject",
        "targetObject",
        "targetObject",
        "targetObject",
        "targetObject",
        "targetObject",
        "i",
        "targetObject",
        "i",
        "targetObject",
        "i",
        "objectIndex",
        "objectIndex",
        "i",
        "targetObject",
        "targetObject",
        "targetObject",
        "targetObject",
        "targetObject",
        "targetObject",
        "targetObject",
        "targetObject",
        "objectName",
        "targetObject",
        "targetObject",
        "objectName",
        "objectIndex",
        "targetObject",
        "objectIndex",
        "targetObject",
        "targetObject",
        "targetObject",
        "objectIndex",
        "targetObject",
        "propertyName",
        "nodeProperty",
        "parsedPath",
        "nodeName",
        "propertyName",
        "targetObject",
        "targetObject",
        "targetObject",
        "versioning",
        "targetObject",
        "versioning",
        "propertyIndex",
        "propertyName",
        "targetObject",
        "targetObject",
        "targetObject",
        "propertyIndex",
        "propertyIndex",
        "targetObject",
        "propertyIndex",
        "bindingType",
        "nodeProperty",
        "propertyIndex",
        "nodeProperty",
        "nodeProperty",
        "bindingType",
        "nodeProperty",
        "nodeProperty",
        "bindingType",
        "nodeProperty",
        "propertyName",
        "bindingType",
        "bindingType",
        "versioning",
        "PropertyBinding",
        "Composite",
        "PropertyBinding",
        "PropertyBinding",
        "PropertyBinding",
        "PropertyBinding",
        "PropertyBinding",
        "PropertyBinding",
        "PropertyBinding",
        "PropertyBinding",
        "PropertyBinding",
        "PropertyBinding",
        "PropertyBinding",
        "PropertyBinding",
        "PropertyBinding",
        "PropertyBinding",
        "PropertyBinding",
        "PropertyBinding",
        "PropertyBinding",
        "PropertyBinding",
        "PropertyBinding",
        "PropertyBinding",
        "generateUUID",
        "arguments",
        "indices",
        "arguments",
        "i",
        "n",
        "i",
        "indices",
        "arguments",
        "i",
        "i",
        "scope",
        "scope",
        "scope",
        "bindings",
        "objects",
        "arguments",
        "i",
        "n",
        "i",
        "arguments",
        "i",
        "indicesByUUID",
        "uuid",
        "index",
        "index",
        "nObjects",
        "indicesByUUID",
        "uuid",
        "index",
        "objects",
        "j",
        "m",
        "j",
        "bindings",
        "j",
        "PropertyBinding",
        "paths",
        "j",
        "parsedPaths",
        "j",
        "index",
        "nCachedObjects",
        "knownObject",
        "objects",
        "index",
        "nCachedObjects",
        "objects",
        "firstActiveIndex",
        "indicesByUUID",
        "lastCachedObject",
        "index",
        "objects",
        "index",
        "lastCachedObject",
        "indicesByUUID",
        "uuid",
        "firstActiveIndex",
        "objects",
        "firstActiveIndex",
        "j",
        "m",
        "j",
        "bindings",
        "j",
        "bindingsForPath",
        "firstActiveIndex",
        "bindingsForPath",
        "index",
        "bindingsForPath",
        "index",
        "lastCached",
        "binding",
        "binding",
        "PropertyBinding",
        "paths",
        "j",
        "parsedPaths",
        "j",
        "bindingsForPath",
        "firstActiveIndex",
        "binding",
        "objects",
        "index",
        "knownObject",
        "nCachedObjects",
        "bindings",
        "arguments",
        "i",
        "n",
        "i",
        "arguments",
        "i",
        "indicesByUUID",
        "uuid",
        "index",
        "index",
        "nCachedObjects",
        "nCachedObjects",
        "objects",
        "lastCachedIndex",
        "indicesByUUID",
        "firstActiveObject",
        "index",
        "objects",
        "index",
        "firstActiveObject",
        "indicesByUUID",
        "uuid",
        "lastCachedIndex",
        "objects",
        "lastCachedIndex",
        "j",
        "m",
        "j",
        "bindings",
        "j",
        "bindingsForPath",
        "lastCachedIndex",
        "bindingsForPath",
        "index",
        "bindingsForPath",
        "index",
        "firstActive",
        "bindingsForPath",
        "lastCachedIndex",
        "binding",
        "nCachedObjects",
        "bindings",
        "objects",
        "arguments",
        "i",
        "n",
        "i",
        "arguments",
        "i",
        "indicesByUUID",
        "uuid",
        "index",
        "indicesByUUID",
        "uuid",
        "index",
        "nCachedObjects",
        "nCachedObjects",
        "objects",
        "firstActiveIndex",
        "nObjects",
        "objects",
        "lastIndex",
        "indicesByUUID",
        "lastCachedObject",
        "index",
        "objects",
        "index",
        "lastCachedObject",
        "indicesByUUID",
        "lastObject",
        "firstActiveIndex",
        "objects",
        "firstActiveIndex",
        "lastObject",
        "objects",
        "j",
        "m",
        "j",
        "bindings",
        "j",
        "bindingsForPath",
        "firstActiveIndex",
        "bindingsForPath",
        "lastIndex",
        "bindingsForPath",
        "index",
        "lastCached",
        "bindingsForPath",
        "firstActiveIndex",
        "last",
        "bindingsForPath",
        "nObjects",
        "objects",
        "lastIndex",
        "lastIndex",
        "indicesByUUID",
        "lastObject",
        "index",
        "objects",
        "index",
        "lastObject",
        "objects",
        "j",
        "m",
        "j",
        "bindings",
        "j",
        "bindingsForPath",
        "index",
        "bindingsForPath",
        "lastIndex",
        "bindingsForPath",
        "nCachedObjects",
        "path",
        "parsedPath",
        "indicesByPath",
        "path",
        "index",
        "bindings",
        "index",
        "objects",
        "nObjects",
        "index",
        "bindings",
        "indicesByPath",
        "path",
        "index",
        "paths",
        "path",
        "parsedPaths",
        "parsedPath",
        "bindings",
        "bindingsForPath",
        "objects",
        "i",
        "n",
        "i",
        "objects",
        "i",
        "bindingsForPath",
        "i",
        "PropertyBinding",
        "path",
        "parsedPath",
        "bindingsForPath",
        "path",
        "indicesByPath",
        "path",
        "index",
        "bindings",
        "bindings",
        "lastBindingsIndex",
        "path",
        "lastBindingsIndex",
        "indicesByPath",
        "lastBindingsPath",
        "index",
        "bindings",
        "index",
        "lastBindings",
        "bindings",
        "parsedPaths",
        "index",
        "parsedPaths",
        "lastBindingsIndex",
        "parsedPaths",
        "paths",
        "index",
        "paths",
        "lastBindingsIndex",
        "paths",
        "mixer",
        "clip",
        "localRoot",
        "blendMode",
        "clip",
        "mixer",
        "clip",
        "localRoot",
        "blendMode",
        "clip",
        "tracks",
        "nTracks",
        "ZeroCurvatureEnding",
        "ZeroCurvatureEnding",
        "i",
        "nTracks",
        "i",
        "tracks",
        "i",
        "interpolants",
        "i",
        "interpolant",
        "interpolant",
        "interpolantSettings",
        "interpolantSettings",
        "interpolants",
        "nTracks",
        "LoopRepeat",
        "Infinity",
        "time",
        "time",
        "mode",
        "repetitions",
        "mode",
        "repetitions",
        "weight",
        "weight",
        "weight",
        "duration",
        "duration",
        "duration",
        "duration",
        "fadeOutAction",
        "duration",
        "warp",
        "fadeOutAction",
        "duration",
        "duration",
        "warp",
        "fadeOutAction",
        "fadeOutDuration",
        "fadeInDuration",
        "fadeInDuration",
        "fadeOutDuration",
        "fadeOutAction",
        "startEndRatio",
        "duration",
        "endStartRatio",
        "duration",
        "fadeInAction",
        "duration",
        "warp",
        "fadeInAction",
        "duration",
        "warp",
        "weightInterpolant",
        "weightInterpolant",
        "timeScale",
        "timeScale",
        "timeScale",
        "duration",
        "duration",
        "action",
        "action",
        "action",
        "duration",
        "duration",
        "startTimeScale",
        "endTimeScale",
        "duration",
        "mixer",
        "interpolant",
        "interpolant",
        "mixer",
        "interpolant",
        "interpolant",
        "interpolant",
        "times",
        "now",
        "times",
        "now",
        "duration",
        "values",
        "startTimeScale",
        "timeScale",
        "values",
        "endTimeScale",
        "timeScale",
        "timeScaleInterpolant",
        "timeScaleInterpolant",
        "time",
        "deltaTime",
        "timeDirection",
        "accuIndex",
        "time",
        "startTime",
        "time",
        "startTime",
        "timeDirection",
        "timeRunning",
        "timeDirection",
        "deltaTime",
        "deltaTime",
        "timeDirection",
        "timeRunning",
        "deltaTime",
        "time",
        "deltaTime",
        "time",
        "weight",
        "AdditiveAnimationBlendMode",
        "interpolants",
        "j",
        "m",
        "j",
        "interpolants",
        "j",
        "clipTime",
        "propertyMixers",
        "j",
        "weight",
        "NormalAnimationBlendMode",
        "interpolants",
        "j",
        "m",
        "j",
        "interpolants",
        "j",
        "clipTime",
        "propertyMixers",
        "j",
        "accuIndex",
        "weight",
        "time",
        "weight",
        "interpolant",
        "interpolant",
        "time",
        "weight",
        "interpolantValue",
        "time",
        "interpolant",
        "interpolantValue",
        "weight",
        "weight",
        "time",
        "timeScale",
        "interpolant",
        "interpolant",
        "time",
        "timeScale",
        "interpolantValue",
        "time",
        "interpolant",
        "timeScale",
        "timeScale",
        "timeScale",
        "timeScale",
        "deltaTime",
        "deltaTime",
        "loop",
        "LoopPingPong",
        "deltaTime",
        "loopCount",
        "time",
        "pingPong",
        "loopCount",
        "duration",
        "time",
        "time",
        "loop",
        "LoopOnce",
        "loopCount",
        "time",
        "duration",
        "time",
        "duration",
        "time",
        "time",
        "time",
        "time",
        "deltaTime",
        "loopCount",
        "deltaTime",
        "loopCount",
        "pingPong",
        "pingPong",
        "time",
        "duration",
        "time",
        "time",
        "duration",
        "time",
        "duration",
        "loopDelta",
        "loopCount",
        "loopDelta",
        "loopCount",
        "pending",
        "time",
        "deltaTime",
        "duration",
        "time",
        "deltaTime",
        "pending",
        "deltaTime",
        "atStart",
        "atStart",
        "pingPong",
        "pingPong",
        "loopCount",
        "time",
        "loopDelta",
        "time",
        "pingPong",
        "loopCount",
        "duration",
        "time",
        "time",
        "atStart",
        "atEnd",
        "pingPong",
        "pingPong",
        "settings",
        "ZeroSlopeEnding",
        "settings",
        "ZeroSlopeEnding",
        "atStart",
        "settings",
        "ZeroSlopeEnding",
        "ZeroCurvatureEnding",
        "settings",
        "WrapAroundEnding",
        "atEnd",
        "settings",
        "ZeroSlopeEnding",
        "ZeroCurvatureEnding",
        "settings",
        "WrapAroundEnding",
        "duration",
        "weightNow",
        "weightThen",
        "mixer",
        "interpolant",
        "interpolant",
        "mixer",
        "interpolant",
        "interpolant",
        "interpolant",
        "times",
        "now",
        "values",
        "weightNow",
        "times",
        "now",
        "duration",
        "values",
        "weightThen",
        "Float32Array",
        "EventDispatcher",
        "root",
        "root",
        "action",
        "prototypeAction",
        "action",
        "action",
        "tracks",
        "action",
        "action",
        "root",
        "bindingsByRoot",
        "rootUuid",
        "bindingsByName",
        "bindingsByName",
        "bindingsByRoot",
        "rootUuid",
        "bindingsByName",
        "i",
        "nTracks",
        "i",
        "tracks",
        "i",
        "track",
        "bindingsByName",
        "trackName",
        "binding",
        "binding",
        "bindings",
        "i",
        "binding",
        "binding",
        "bindings",
        "i",
        "binding",
        "binding",
        "binding",
        "binding",
        "rootUuid",
        "trackName",
        "prototypeAction",
        "prototypeAction",
        "i",
        "binding",
        "PropertyMixer",
        "PropertyBinding",
        "root",
        "trackName",
        "path",
        "track",
        "track",
        "binding",
        "binding",
        "rootUuid",
        "trackName",
        "bindings",
        "i",
        "binding",
        "interpolants",
        "i",
        "binding",
        "action",
        "action",
        "action",
        "action",
        "action",
        "clipUuid",
        "action",
        "actionsForClip",
        "actionsForClip",
        "action",
        "clipUuid",
        "rootUuid",
        "action",
        "bindings",
        "i",
        "n",
        "i",
        "bindings",
        "i",
        "binding",
        "binding",
        "binding",
        "action",
        "action",
        "action",
        "action",
        "bindings",
        "i",
        "n",
        "i",
        "bindings",
        "i",
        "binding",
        "binding",
        "binding",
        "action",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "action",
        "action",
        "index",
        "index",
        "action",
        "clipUuid",
        "rootUuid",
        "actionsByClip",
        "clipUuid",
        "actionsForClip",
        "actionsForClip",
        "action",
        "action",
        "actionsByClip",
        "clipUuid",
        "actionsForClip",
        "actionsForClip",
        "action",
        "knownActions",
        "knownActions",
        "action",
        "action",
        "actions",
        "actions",
        "action",
        "actionsForClip",
        "rootUuid",
        "action",
        "action",
        "actions",
        "actions",
        "action",
        "lastInactiveAction",
        "cacheIndex",
        "actions",
        "cacheIndex",
        "lastInactiveAction",
        "actions",
        "action",
        "action",
        "actionsByClip",
        "clipUuid",
        "actionsForClip",
        "knownActionsForClip",
        "knownActionsForClip",
        "action",
        "lastKnownAction",
        "byClipCacheIndex",
        "knownActionsForClip",
        "byClipCacheIndex",
        "lastKnownAction",
        "knownActionsForClip",
        "action",
        "actionsForClip",
        "action",
        "actionByRoot",
        "rootUuid",
        "knownActionsForClip",
        "actionsByClip",
        "clipUuid",
        "action",
        "action",
        "action",
        "bindings",
        "i",
        "n",
        "i",
        "bindings",
        "i",
        "binding",
        "binding",
        "action",
        "action",
        "actions",
        "lastActiveIndex",
        "action",
        "lastActiveIndex",
        "actions",
        "lastActiveIndex",
        "action",
        "firstInactiveAction",
        "prevIndex",
        "actions",
        "prevIndex",
        "firstInactiveAction",
        "action",
        "action",
        "actions",
        "firstInactiveIndex",
        "action",
        "firstInactiveIndex",
        "actions",
        "firstInactiveIndex",
        "action",
        "lastActiveAction",
        "prevIndex",
        "actions",
        "prevIndex",
        "lastActiveAction",
        "binding",
        "rootUuid",
        "trackName",
        "bindingsByRoot",
        "rootUuid",
        "bindingByName",
        "bindingByName",
        "bindingsByRoot",
        "rootUuid",
        "bindingByName",
        "bindingByName",
        "trackName",
        "binding",
        "binding",
        "bindings",
        "bindings",
        "binding",
        "binding",
        "binding",
        "propBinding",
        "propBinding",
        "bindingsByRoot",
        "rootUuid",
        "bindings",
        "bindings",
        "binding",
        "lastInactiveBinding",
        "cacheIndex",
        "bindings",
        "cacheIndex",
        "lastInactiveBinding",
        "bindings",
        "bindingByName",
        "trackName",
        "bindingByName",
        "bindingsByRoot",
        "rootUuid",
        "binding",
        "binding",
        "bindings",
        "lastActiveIndex",
        "binding",
        "lastActiveIndex",
        "bindings",
        "lastActiveIndex",
        "binding",
        "firstInactiveBinding",
        "prevIndex",
        "bindings",
        "prevIndex",
        "firstInactiveBinding",
        "binding",
        "binding",
        "bindings",
        "firstInactiveIndex",
        "binding",
        "firstInactiveIndex",
        "bindings",
        "firstInactiveIndex",
        "binding",
        "lastActiveBinding",
        "prevIndex",
        "bindings",
        "prevIndex",
        "lastActiveBinding",
        "interpolants",
        "lastActiveIndex",
        "interpolant",
        "interpolant",
        "LinearInterpolant",
        "Float32Array",
        "Float32Array",
        "_controlInterpolantsResultBuffer",
        "interpolant",
        "lastActiveIndex",
        "interpolants",
        "lastActiveIndex",
        "interpolant",
        "interpolant",
        "interpolant",
        "interpolant",
        "interpolants",
        "firstInactiveIndex",
        "interpolant",
        "firstInactiveIndex",
        "interpolants",
        "firstInactiveIndex",
        "interpolant",
        "lastActiveInterpolant",
        "prevIndex",
        "interpolants",
        "prevIndex",
        "lastActiveInterpolant",
        "clip",
        "optionalRoot",
        "blendMode",
        "optionalRoot",
        "root",
        "clip",
        "AnimationClip",
        "root",
        "clip",
        "clip",
        "clipObject",
        "clipObject",
        "clip",
        "clipUuid",
        "blendMode",
        "clipObject",
        "blendMode",
        "clipObject",
        "blendMode",
        "NormalAnimationBlendMode",
        "actionsForClip",
        "actionsForClip",
        "rootUuid",
        "existingAction",
        "existingAction",
        "blendMode",
        "existingAction",
        "prototypeAction",
        "actionsForClip",
        "clipObject",
        "clipObject",
        "prototypeAction",
        "clipObject",
        "AnimationAction",
        "clipObject",
        "optionalRoot",
        "blendMode",
        "newAction",
        "prototypeAction",
        "newAction",
        "clipUuid",
        "rootUuid",
        "newAction",
        "clip",
        "optionalRoot",
        "optionalRoot",
        "root",
        "clip",
        "AnimationClip",
        "root",
        "clip",
        "clip",
        "clipObject",
        "clipObject",
        "clip",
        "clipUuid",
        "actionsForClip",
        "actionsForClip",
        "rootUuid",
        "nActions",
        "i",
        "i",
        "actions",
        "i",
        "deltaTime",
        "deltaTime",
        "deltaTime",
        "deltaTime",
        "i",
        "nActions",
        "i",
        "actions",
        "i",
        "action",
        "time",
        "deltaTime",
        "timeDirection",
        "accuIndex",
        "i",
        "nBindings",
        "i",
        "bindings",
        "i",
        "accuIndex",
        "timeInSeconds",
        "i",
        "i",
        "i",
        "timeInSeconds",
        "clip",
        "clip",
        "actionsByClip",
        "clipUuid",
        "actionsForClip",
        "actionsForClip",
        "actionsToRemove",
        "i",
        "n",
        "i",
        "actionsToRemove",
        "i",
        "action",
        "action",
        "actions",
        "actions",
        "action",
        "action",
        "lastInactiveAction",
        "cacheIndex",
        "actions",
        "cacheIndex",
        "lastInactiveAction",
        "actions",
        "action",
        "actionsByClip",
        "clipUuid",
        "root",
        "root",
        "clipUuid",
        "actionsByClip",
        "actionsByClip",
        "clipUuid",
        "actionByRoot",
        "rootUuid",
        "action",
        "action",
        "action",
        "bindingsByRoot",
        "rootUuid",
        "bindingByName",
        "trackName",
        "bindingByName",
        "bindingByName",
        "trackName",
        "binding",
        "binding",
        "clip",
        "optionalRoot",
        "clip",
        "optionalRoot",
        "action",
        "action",
        "action",
        "value",
        "value",
        "Uniform",
        "EventDispatcher",
        "_id",
        "StaticDrawUsage",
        "uniform",
        "uniform",
        "uniform",
        "uniform",
        "index",
        "index",
        "name",
        "name",
        "value",
        "value",
        "source",
        "source",
        "source",
        "source",
        "uniformsSource",
        "i",
        "l",
        "i",
        "uniformsSource",
        "i",
        "uniformsSource",
        "i",
        "uniformsSource",
        "i",
        "j",
        "uniforms",
        "j",
        "uniforms",
        "j",
        "InterleavedBuffer",
        "array",
        "stride",
        "meshPerAttribute",
        "array",
        "stride",
        "meshPerAttribute",
        "source",
        "source",
        "source",
        "data",
        "data",
        "ib",
        "ib",
        "data",
        "data",
        "json",
        "json",
        "json",
        "buffer",
        "itemSize",
        "elementSize",
        "count",
        "buffer",
        "itemSize",
        "elementSize",
        "count",
        "value",
        "value",
        "buffer",
        "buffer",
        "elementSize",
        "elementSize",
        "itemSize",
        "itemSize",
        "count",
        "count",
        "Matrix4",
        "origin",
        "direction",
        "near",
        "far",
        "Infinity",
        "Ray",
        "origin",
        "direction",
        "near",
        "far",
        "Layers",
        "origin",
        "direction",
        "origin",
        "direction",
        "coords",
        "camera",
        "camera",
        "camera",
        "coords",
        "coords",
        "camera",
        "camera",
        "camera",
        "coords",
        "coords",
        "camera",
        "camera",
        "camera",
        "camera",
        "camera",
        "camera",
        "camera",
        "camera",
        "controller",
        "_matrix",
        "controller",
        "controller",
        "_matrix",
        "recursive",
        "intersects",
        "intersect",
        "intersects",
        "recursive",
        "intersects",
        "ascSort",
        "intersects",
        "objects",
        "recursive",
        "intersects",
        "objects",
        "i",
        "l",
        "i",
        "intersect",
        "objects",
        "i",
        "intersects",
        "recursive",
        "intersects",
        "ascSort",
        "intersects",
        "a",
        "b",
        "a",
        "b",
        "raycaster",
        "intersects",
        "recursive",
        "raycaster",
        "raycaster",
        "intersects",
        "result",
        "propagate",
        "propagate",
        "recursive",
        "children",
        "i",
        "l",
        "i",
        "intersect",
        "children",
        "i",
        "raycaster",
        "intersects",
        "radius",
        "phi",
        "theta",
        "radius",
        "phi",
        "theta",
        "radius",
        "phi",
        "theta",
        "radius",
        "phi",
        "theta",
        "other",
        "other",
        "other",
        "other",
        "EPS",
        "EPS",
        "v",
        "v",
        "v",
        "v",
        "x",
        "y",
        "z",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "x",
        "z",
        "clamp",
        "y",
        "radius",
        "theta",
        "y",
        "radius",
        "theta",
        "y",
        "radius",
        "theta",
        "y",
        "radius",
        "theta",
        "y",
        "other",
        "other",
        "other",
        "other",
        "v",
        "v",
        "v",
        "v",
        "x",
        "y",
        "z",
        "x",
        "x",
        "z",
        "z",
        "x",
        "z",
        "y",
        "n11",
        "n12",
        "n21",
        "n22",
        "Matrix2",
        "n11",
        "n11",
        "n12",
        "n21",
        "n22",
        "array",
        "offset",
        "i",
        "i",
        "i",
        "array",
        "i",
        "offset",
        "n11",
        "n12",
        "n21",
        "n22",
        "te",
        "n11",
        "te",
        "n12",
        "te",
        "n21",
        "te",
        "n22",
        "Vector2",
        "min",
        "Vector2",
        "Infinity",
        "Infinity",
        "max",
        "Vector2",
        "Infinity",
        "Infinity",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "points",
        "points",
        "i",
        "il",
        "i",
        "points",
        "i",
        "center",
        "size",
        "_vector$4",
        "size",
        "center",
        "halfSize",
        "center",
        "halfSize",
        "box",
        "box",
        "box",
        "Infinity",
        "Infinity",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "point",
        "point",
        "point",
        "vector",
        "vector",
        "vector",
        "scalar",
        "scalar",
        "scalar",
        "point",
        "point",
        "point",
        "point",
        "point",
        "box",
        "box",
        "box",
        "box",
        "box",
        "point",
        "target",
        "target",
        "point",
        "point",
        "box",
        "box",
        "box",
        "box",
        "box",
        "point",
        "target",
        "target",
        "point",
        "point",
        "point",
        "_vector$4",
        "point",
        "box",
        "box",
        "box",
        "box",
        "box",
        "box",
        "offset",
        "offset",
        "offset",
        "box",
        "box",
        "box",
        "Vector3",
        "Vector3",
        "start",
        "Vector3",
        "end",
        "Vector3",
        "start",
        "end",
        "start",
        "end",
        "start",
        "end",
        "line",
        "line",
        "line",
        "target",
        "target",
        "target",
        "target",
        "t",
        "target",
        "target",
        "t",
        "point",
        "clampToLine",
        "_startP",
        "point",
        "_startEnd",
        "_startEnd",
        "_startEnd",
        "_startEnd",
        "_startP",
        "startEnd_startP",
        "startEnd2",
        "clampToLine",
        "t",
        "clamp",
        "t",
        "t",
        "point",
        "clampToLine",
        "target",
        "point",
        "clampToLine",
        "target",
        "t",
        "matrix",
        "matrix",
        "matrix",
        "line",
        "line",
        "line",
        "Vector3",
        "Object3D",
        "light",
        "color",
        "light",
        "color",
        "BufferGeometry",
        "i",
        "l",
        "i",
        "j",
        "i",
        "l",
        "j",
        "l",
        "positions",
        "p1",
        "p1",
        "p2",
        "p2",
        "geometry",
        "Float32BufferAttribute",
        "positions",
        "LineBasicMaterial",
        "LineSegments",
        "geometry",
        "material",
        "coneLength",
        "coneWidth",
        "coneWidth",
        "coneLength",
        "_vector$3",
        "_vector$3",
        "Vector3",
        "Matrix4",
        "Matrix4",
        "LineSegments",
        "getBoneList",
        "BufferGeometry",
        "Color",
        "Color",
        "i",
        "bones",
        "i",
        "bones",
        "i",
        "bone",
        "bone",
        "vertices",
        "vertices",
        "colors",
        "color1",
        "color1",
        "color1",
        "colors",
        "color2",
        "color2",
        "color2",
        "geometry",
        "Float32BufferAttribute",
        "vertices",
        "geometry",
        "Float32BufferAttribute",
        "colors",
        "LineBasicMaterial",
        "geometry",
        "material",
        "bones",
        "force",
        "geometry",
        "_matrixWorldInv",
        "i",
        "bones",
        "i",
        "bones",
        "i",
        "bone",
        "bone",
        "_boneMatrix",
        "_matrixWorldInv",
        "bone",
        "_vector$2",
        "_boneMatrix",
        "position",
        "j",
        "_vector$2",
        "_vector$2",
        "_vector$2",
        "_boneMatrix",
        "_matrixWorldInv",
        "bone",
        "_vector$2",
        "_boneMatrix",
        "position",
        "j",
        "_vector$2",
        "_vector$2",
        "_vector$2",
        "j",
        "geometry",
        "force",
        "boneList",
        "i",
        "i",
        "boneList",
        "boneList",
        "getBoneList",
        "i",
        "boneList",
        "Mesh",
        "light",
        "sphereSize",
        "color",
        "SphereGeometry",
        "sphereSize",
        "MeshBasicMaterial",
        "geometry",
        "material",
        "light",
        "color",
        "Vector3",
        "Color",
        "Color",
        "Object3D",
        "light",
        "size",
        "color",
        "light",
        "light",
        "color",
        "OctahedronGeometry",
        "size",
        "geometry",
        "MeshBasicMaterial",
        "geometry",
        "Float32Array",
        "position",
        "geometry",
        "BufferAttribute",
        "colors",
        "Mesh",
        "geometry",
        "mesh",
        "_color1",
        "_color2",
        "colors",
        "i",
        "l",
        "i",
        "i",
        "l",
        "_color1",
        "_color2",
        "colors",
        "i",
        "color",
        "color",
        "color",
        "colors",
        "mesh",
        "_vector$1",
        "LineSegments",
        "size",
        "divisions",
        "color1",
        "color2",
        "color1",
        "Color",
        "color1",
        "color2",
        "Color",
        "color2",
        "divisions",
        "size",
        "divisions",
        "size",
        "halfSize",
        "i",
        "divisions",
        "i",
        "k",
        "step",
        "vertices",
        "halfSize",
        "k",
        "halfSize",
        "k",
        "vertices",
        "k",
        "halfSize",
        "k",
        "halfSize",
        "i",
        "center",
        "color1",
        "color2",
        "color",
        "colors",
        "j",
        "j",
        "color",
        "colors",
        "j",
        "j",
        "color",
        "colors",
        "j",
        "j",
        "color",
        "colors",
        "j",
        "j",
        "BufferGeometry",
        "geometry",
        "Float32BufferAttribute",
        "vertices",
        "geometry",
        "Float32BufferAttribute",
        "colors",
        "LineBasicMaterial",
        "geometry",
        "material",
        "LineSegments",
        "radius",
        "sectors",
        "rings",
        "divisions",
        "color1",
        "color2",
        "color1",
        "Color",
        "color1",
        "color2",
        "Color",
        "color2",
        "sectors",
        "i",
        "sectors",
        "i",
        "i",
        "sectors",
        "v",
        "radius",
        "v",
        "radius",
        "vertices",
        "vertices",
        "x",
        "z",
        "i",
        "color1",
        "color2",
        "colors",
        "color",
        "color",
        "color",
        "colors",
        "color",
        "color",
        "color",
        "i",
        "rings",
        "i",
        "i",
        "color1",
        "color2",
        "radius",
        "radius",
        "rings",
        "i",
        "j",
        "divisions",
        "j",
        "j",
        "divisions",
        "v",
        "r",
        "v",
        "r",
        "vertices",
        "x",
        "z",
        "colors",
        "color",
        "color",
        "color",
        "v",
        "j",
        "divisions",
        "x",
        "v",
        "r",
        "z",
        "v",
        "r",
        "vertices",
        "x",
        "z",
        "colors",
        "color",
        "color",
        "color",
        "BufferGeometry",
        "geometry",
        "Float32BufferAttribute",
        "vertices",
        "geometry",
        "Float32BufferAttribute",
        "colors",
        "LineBasicMaterial",
        "geometry",
        "material",
        "Vector3",
        "Vector3",
        "Vector3",
        "Object3D",
        "light",
        "size",
        "color",
        "light",
        "light",
        "color",
        "size",
        "size",
        "BufferGeometry",
        "geometry",
        "Float32BufferAttribute",
        "size",
        "size",
        "size",
        "size",
        "size",
        "size",
        "size",
        "size",
        "size",
        "size",
        "LineBasicMaterial",
        "Line",
        "geometry",
        "material",
        "geometry",
        "BufferGeometry",
        "geometry",
        "Float32BufferAttribute",
        "Line",
        "geometry",
        "material",
        "_v1",
        "_v2",
        "_v3",
        "_v2",
        "_v1",
        "_v2",
        "_v2",
        "_v3",
        "Vector3",
        "Camera",
        "LineSegments",
        "camera",
        "BufferGeometry",
        "LineBasicMaterial",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "addLine",
        "a",
        "b",
        "addPoint",
        "a",
        "addPoint",
        "b",
        "id",
        "vertices",
        "colors",
        "pointMap",
        "id",
        "pointMap",
        "id",
        "pointMap",
        "id",
        "vertices",
        "geometry",
        "Float32BufferAttribute",
        "vertices",
        "geometry",
        "Float32BufferAttribute",
        "colors",
        "geometry",
        "material",
        "camera",
        "camera",
        "pointMap",
        "Color",
        "Color",
        "Color",
        "Color",
        "Color",
        "colorFrustum",
        "colorCone",
        "colorUp",
        "colorTarget",
        "colorCross",
        "frustum",
        "cone",
        "up",
        "target",
        "cross",
        "geometry",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "frustum",
        "frustum",
        "frustum",
        "colorAttribute",
        "cone",
        "cone",
        "cone",
        "colorAttribute",
        "cone",
        "cone",
        "cone",
        "colorAttribute",
        "cone",
        "cone",
        "cone",
        "colorAttribute",
        "cone",
        "cone",
        "cone",
        "colorAttribute",
        "cone",
        "cone",
        "cone",
        "colorAttribute",
        "cone",
        "cone",
        "cone",
        "colorAttribute",
        "cone",
        "cone",
        "cone",
        "colorAttribute",
        "cone",
        "cone",
        "cone",
        "colorAttribute",
        "up",
        "up",
        "up",
        "colorAttribute",
        "up",
        "up",
        "up",
        "colorAttribute",
        "up",
        "up",
        "up",
        "colorAttribute",
        "up",
        "up",
        "up",
        "colorAttribute",
        "up",
        "up",
        "up",
        "colorAttribute",
        "up",
        "up",
        "up",
        "colorAttribute",
        "target",
        "target",
        "target",
        "colorAttribute",
        "target",
        "target",
        "target",
        "colorAttribute",
        "cross",
        "cross",
        "cross",
        "colorAttribute",
        "cross",
        "cross",
        "cross",
        "colorAttribute",
        "cross",
        "cross",
        "cross",
        "colorAttribute",
        "cross",
        "cross",
        "cross",
        "colorAttribute",
        "cross",
        "cross",
        "cross",
        "colorAttribute",
        "cross",
        "cross",
        "cross",
        "colorAttribute",
        "cross",
        "cross",
        "cross",
        "colorAttribute",
        "cross",
        "cross",
        "cross",
        "colorAttribute",
        "cross",
        "cross",
        "cross",
        "colorAttribute",
        "cross",
        "cross",
        "cross",
        "colorAttribute",
        "_camera",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "w",
        "h",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "w",
        "h",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "w",
        "h",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "w",
        "h",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "w",
        "h",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "w",
        "h",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "w",
        "h",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "w",
        "h",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "w",
        "h",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "w",
        "h",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "h",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "w",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "w",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "h",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "h",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "w",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "w",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "h",
        "setPoint",
        "pointMap",
        "geometry",
        "_camera",
        "h",
        "geometry",
        "point",
        "pointMap",
        "geometry",
        "camera",
        "x",
        "y",
        "z",
        "_vector",
        "x",
        "y",
        "z",
        "camera",
        "pointMap",
        "point",
        "points",
        "geometry",
        "points",
        "i",
        "l",
        "i",
        "position",
        "points",
        "i",
        "_vector",
        "_vector",
        "_vector",
        "Box3",
        "LineSegments",
        "color",
        "Uint16Array",
        "Float32Array",
        "BufferGeometry",
        "geometry",
        "BufferAttribute",
        "indices",
        "geometry",
        "BufferAttribute",
        "positions",
        "geometry",
        "LineBasicMaterial",
        "color",
        "_box",
        "_box",
        "_box",
        "_box",
        "position",
        "array",
        "max",
        "array",
        "max",
        "array",
        "max",
        "array",
        "min",
        "array",
        "max",
        "array",
        "max",
        "array",
        "min",
        "array",
        "min",
        "array",
        "max",
        "array",
        "max",
        "array",
        "min",
        "array",
        "max",
        "array",
        "max",
        "array",
        "max",
        "array",
        "min",
        "array",
        "min",
        "array",
        "max",
        "array",
        "min",
        "array",
        "min",
        "array",
        "min",
        "array",
        "min",
        "array",
        "max",
        "array",
        "min",
        "array",
        "min",
        "position",
        "source",
        "recursive",
        "source",
        "recursive",
        "source",
        "LineSegments",
        "box",
        "color",
        "Uint16Array",
        "BufferGeometry",
        "geometry",
        "BufferAttribute",
        "indices",
        "geometry",
        "Float32BufferAttribute",
        "positions",
        "geometry",
        "LineBasicMaterial",
        "color",
        "box",
        "force",
        "box",
        "box",
        "box",
        "force",
        "Line",
        "plane",
        "size",
        "hex",
        "BufferGeometry",
        "geometry",
        "Float32BufferAttribute",
        "positions",
        "geometry",
        "geometry",
        "LineBasicMaterial",
        "color",
        "plane",
        "size",
        "BufferGeometry",
        "geometry2",
        "Float32BufferAttribute",
        "positions2",
        "geometry2",
        "Mesh",
        "geometry2",
        "MeshBasicMaterial",
        "color",
        "force",
        "force",
        "Vector3",
        "Object3D",
        "dir",
        "Vector3",
        "origin",
        "Vector3",
        "length",
        "color",
        "headLength",
        "length",
        "headWidth",
        "headLength",
        "_lineGeometry",
        "_lineGeometry",
        "BufferGeometry",
        "_lineGeometry",
        "Float32BufferAttribute",
        "_coneGeometry",
        "CylinderGeometry",
        "_coneGeometry",
        "origin",
        "Line",
        "_lineGeometry",
        "LineBasicMaterial",
        "color",
        "Mesh",
        "_coneGeometry",
        "MeshBasicMaterial",
        "color",
        "dir",
        "length",
        "headLength",
        "headWidth",
        "dir",
        "dir",
        "dir",
        "_axis",
        "dir",
        "dir",
        "dir",
        "_axis",
        "radians",
        "length",
        "headLength",
        "length",
        "headWidth",
        "headLength",
        "length",
        "headLength",
        "headWidth",
        "headLength",
        "headWidth",
        "length",
        "color",
        "color",
        "color",
        "source",
        "source",
        "source",
        "source",
        "LineSegments",
        "size",
        "size",
        "size",
        "size",
        "BufferGeometry",
        "geometry",
        "Float32BufferAttribute",
        "vertices",
        "geometry",
        "Float32BufferAttribute",
        "colors",
        "LineBasicMaterial",
        "geometry",
        "material",
        "xAxisColor",
        "yAxisColor",
        "zAxisColor",
        "Color",
        "color",
        "xAxisColor",
        "color",
        "array",
        "color",
        "array",
        "color",
        "yAxisColor",
        "color",
        "array",
        "color",
        "array",
        "color",
        "zAxisColor",
        "color",
        "array",
        "color",
        "array",
        "Color",
        "x",
        "y",
        "Path",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "aCPx",
        "aCPy",
        "aX",
        "aY",
        "aCPx",
        "aCPy",
        "aX",
        "aY",
        "aCP1x",
        "aCP1y",
        "aCP2x",
        "aCP2y",
        "aX",
        "aY",
        "aCP1x",
        "aCP1y",
        "aCP2x",
        "aCP2y",
        "aX",
        "aY",
        "pts",
        "pts",
        "isCCW",
        "inSubpaths",
        "inSubpaths",
        "i",
        "l",
        "i",
        "inSubpaths",
        "i",
        "Shape",
        "tmpShape",
        "tmpPath",
        "shapes",
        "tmpShape",
        "shapes",
        "inPt",
        "inPolygon",
        "inPolygon",
        "polyLen",
        "q",
        "polyLen",
        "p",
        "q",
        "inPolygon",
        "p",
        "inPolygon",
        "q",
        "edgeHighPt",
        "edgeLowPt",
        "edgeHighPt",
        "edgeLowPt",
        "edgeDy",
        "edgeDy",
        "edgeLowPt",
        "inPolygon",
        "q",
        "edgeDx",
        "edgeDx",
        "edgeHighPt",
        "inPolygon",
        "p",
        "edgeDy",
        "edgeDy",
        "inPt",
        "edgeLowPt",
        "inPt",
        "edgeHighPt",
        "inPt",
        "edgeLowPt",
        "inPt",
        "edgeLowPt",
        "edgeDy",
        "inPt",
        "edgeLowPt",
        "edgeDx",
        "inPt",
        "edgeLowPt",
        "perpEdge",
        "perpEdge",
        "inside",
        "inside",
        "inPt",
        "edgeLowPt",
        "edgeHighPt",
        "inPt",
        "inPt",
        "edgeLowPt",
        "edgeLowPt",
        "inPt",
        "inPt",
        "edgeHighPt",
        "inside",
        "ShapeUtils",
        "subPaths",
        "subPaths",
        "tmpPath",
        "subPaths",
        "tmpShape",
        "Shape",
        "tmpShape",
        "tmpPath",
        "shapes",
        "tmpShape",
        "shapes",
        "isClockWise",
        "subPaths",
        "holesFirst",
        "isCCW",
        "holesFirst",
        "holesFirst",
        "newShapes",
        "mainIdx",
        "newShapeHoles",
        "mainIdx",
        "subPaths",
        "i",
        "l",
        "i",
        "tmpPath",
        "subPaths",
        "i",
        "tmpPoints",
        "tmpPath",
        "solid",
        "isClockWise",
        "tmpPoints",
        "solid",
        "isCCW",
        "solid",
        "solid",
        "solid",
        "holesFirst",
        "newShapes",
        "mainIdx",
        "mainIdx",
        "newShapes",
        "mainIdx",
        "Shape",
        "tmpPoints",
        "newShapes",
        "mainIdx",
        "tmpPath",
        "holesFirst",
        "mainIdx",
        "newShapeHoles",
        "mainIdx",
        "newShapeHoles",
        "mainIdx",
        "tmpPath",
        "tmpPoints",
        "newShapes",
        "toShapesNoHoles",
        "subPaths",
        "newShapes",
        "newShapes",
        "sIdx",
        "sLen",
        "sIdx",
        "betterShapeHoles",
        "sIdx",
        "newShapes",
        "sIdx",
        "sLen",
        "sIdx",
        "newShapeHoles",
        "sIdx",
        "hIdx",
        "sho",
        "hIdx",
        "sho",
        "hIdx",
        "s2Idx",
        "newShapes",
        "s2Idx",
        "isPointInsidePolygon",
        "ho",
        "newShapes",
        "s2Idx",
        "sIdx",
        "s2Idx",
        "toChange",
        "hole_unassigned",
        "hole_unassigned",
        "betterShapeHoles",
        "s2Idx",
        "ho",
        "ambiguous",
        "hole_unassigned",
        "betterShapeHoles",
        "sIdx",
        "ho",
        "toChange",
        "ambiguous",
        "newShapeHoles",
        "betterShapeHoles",
        "newShapes",
        "i",
        "il",
        "i",
        "tmpShape",
        "newShapes",
        "i",
        "shapes",
        "tmpShape",
        "tmpHoles",
        "newShapeHoles",
        "i",
        "tmpHoles",
        "j",
        "jl",
        "j",
        "tmpShape",
        "tmpHoles",
        "j",
        "shapes",
        "WebGLRenderTarget",
        "width",
        "height",
        "count",
        "options",
        "width",
        "height",
        "options",
        "__THREE_DEVTOOLS__",
        "__THREE_DEVTOOLS__",
        "CustomEvent",
        "REVISION",
        "REVISION",
        "require",
        "exports",
        "exports",
        "a",
        "a",
        "a",
        "a",
        "a",
        "exports",
        "a",
        "a",
        "exports",
        "source",
        "dest",
        "source",
        "key",
        "key",
        "key",
        "dest",
        "key",
        "dest",
        "key",
        "source",
        "key",
        "dest",
        "exports",
        "dest",
        "destName",
        "get",
        "dest",
        "destName",
        "get",
        "require",
        "exports",
        "require",
        "parcelHelpers",
        "exports",
        "parcelHelpers",
        "exports",
        "OrbitControls",
        "require",
        "_three",
        "_three",
        "_three",
        "_three",
        "domElement",
        "domElement",
        "_three",
        "_three",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "_three",
        "_three",
        "_three",
        "_three",
        "_three",
        "spherical",
        "spherical",
        "domElement",
        "domElement",
        "onKeyDown",
        "domElement",
        "onKeyDown",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "_changeEvent",
        "scope",
        "state",
        "STATE",
        "_three",
        "_three",
        "_three",
        "quat",
        "_three",
        "_three",
        "_three",
        "update",
        "deltaTime",
        "scope",
        "offset",
        "position",
        "scope",
        "offset",
        "quat",
        "spherical",
        "offset",
        "scope",
        "state",
        "STATE",
        "rotateLeft",
        "getAutoRotationAngle",
        "deltaTime",
        "scope",
        "spherical",
        "sphericalDelta",
        "scope",
        "spherical",
        "sphericalDelta",
        "scope",
        "spherical",
        "sphericalDelta",
        "spherical",
        "sphericalDelta",
        "scope",
        "scope",
        "isFinite",
        "min",
        "isFinite",
        "max",
        "min",
        "min",
        "twoPI",
        "min",
        "min",
        "twoPI",
        "max",
        "max",
        "twoPI",
        "max",
        "max",
        "twoPI",
        "min",
        "max",
        "spherical",
        "min",
        "max",
        "spherical",
        "spherical",
        "spherical",
        "min",
        "max",
        "min",
        "spherical",
        "max",
        "spherical",
        "spherical",
        "scope",
        "scope",
        "spherical",
        "spherical",
        "scope",
        "scope",
        "panOffset",
        "scope",
        "scope",
        "panOffset",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "performCursorZoom",
        "scope",
        "spherical",
        "clampDistance",
        "spherical",
        "spherical",
        "spherical",
        "clampDistance",
        "spherical",
        "scale",
        "zoomChanged",
        "prevRadius",
        "spherical",
        "offset",
        "spherical",
        "offset",
        "quatInverse",
        "position",
        "scope",
        "offset",
        "scope",
        "scope",
        "scope",
        "sphericalDelta",
        "scope",
        "sphericalDelta",
        "scope",
        "panOffset",
        "scope",
        "sphericalDelta",
        "panOffset",
        "scope",
        "performCursorZoom",
        "scope",
        "offset",
        "newRadius",
        "clampDistance",
        "prevRadius",
        "scale",
        "prevRadius",
        "newRadius",
        "scope",
        "dollyDirection",
        "radiusDelta",
        "scope",
        "zoomChanged",
        "radiusDelta",
        "scope",
        "_three",
        "mouse",
        "mouse",
        "mouseBefore",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scale",
        "scope",
        "zoomChanged",
        "prevZoom",
        "scope",
        "_three",
        "mouse",
        "mouse",
        "mouseAfter",
        "scope",
        "scope",
        "mouseAfter",
        "mouseBefore",
        "scope",
        "newRadius",
        "offset",
        "scope",
        "newRadius",
        "scope",
        "scope",
        "newRadius",
        "scope",
        "_ray",
        "scope",
        "_ray",
        "scope",
        "scope",
        "_ray",
        "TILT_LIMIT",
        "scope",
        "_plane",
        "scope",
        "scope",
        "_ray",
        "_plane",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scale",
        "prevZoom",
        "scope",
        "scope",
        "zoomChanged",
        "scale",
        "performCursorZoom",
        "zoomChanged",
        "lastPosition",
        "scope",
        "EPS",
        "lastQuaternion",
        "scope",
        "EPS",
        "lastTargetPosition",
        "scope",
        "EPS",
        "scope",
        "_changeEvent",
        "lastPosition",
        "scope",
        "lastQuaternion",
        "scope",
        "lastTargetPosition",
        "scope",
        "scope",
        "onContextMenu",
        "scope",
        "onPointerDown",
        "scope",
        "onPointerUp",
        "scope",
        "onMouseWheel",
        "scope",
        "onPointerMove",
        "scope",
        "onPointerUp",
        "scope",
        "interceptControlDown",
        "scope",
        "scope",
        "onKeyDown",
        "scope",
        "STATE",
        "_three",
        "_three",
        "_three",
        "_three",
        "_three",
        "_three",
        "_three",
        "_three",
        "_three",
        "_three",
        "_three",
        "_three",
        "_three",
        "_three",
        "deltaTime",
        "deltaTime",
        "scope",
        "deltaTime",
        "scope",
        "delta",
        "delta",
        "scope",
        "normalizedDelta",
        "angle",
        "sphericalDelta",
        "angle",
        "angle",
        "sphericalDelta",
        "angle",
        "_three",
        "panLeft",
        "distance",
        "objectMatrix",
        "v",
        "objectMatrix",
        "v",
        "distance",
        "panOffset",
        "v",
        "_three",
        "panUp",
        "distance",
        "objectMatrix",
        "scope",
        "v",
        "objectMatrix",
        "v",
        "objectMatrix",
        "v",
        "scope",
        "v",
        "v",
        "distance",
        "panOffset",
        "v",
        "_three",
        "pan",
        "deltaX",
        "deltaY",
        "scope",
        "scope",
        "scope",
        "offset",
        "position",
        "scope",
        "offset",
        "targetDistance",
        "scope",
        "panLeft",
        "deltaX",
        "targetDistance",
        "element",
        "scope",
        "panUp",
        "deltaY",
        "targetDistance",
        "element",
        "scope",
        "scope",
        "panLeft",
        "deltaX",
        "scope",
        "scope",
        "scope",
        "element",
        "scope",
        "panUp",
        "deltaY",
        "scope",
        "scope",
        "scope",
        "element",
        "scope",
        "scope",
        "dollyScale",
        "scope",
        "scope",
        "scale",
        "dollyScale",
        "scope",
        "dollyScale",
        "scope",
        "scope",
        "scale",
        "dollyScale",
        "scope",
        "x",
        "y",
        "scope",
        "performCursorZoom",
        "scope",
        "x",
        "rect",
        "y",
        "rect",
        "rect",
        "rect",
        "mouse",
        "dx",
        "w",
        "mouse",
        "dy",
        "h",
        "dollyDirection",
        "mouse",
        "mouse",
        "scope",
        "scope",
        "dist",
        "scope",
        "scope",
        "dist",
        "rotateStart",
        "updateZoomParameters",
        "dollyStart",
        "panStart",
        "rotateEnd",
        "rotateDelta",
        "rotateEnd",
        "rotateStart",
        "scope",
        "scope",
        "rotateLeft",
        "rotateDelta",
        "element",
        "rotateUp",
        "rotateDelta",
        "element",
        "rotateStart",
        "rotateEnd",
        "scope",
        "dollyEnd",
        "dollyDelta",
        "dollyEnd",
        "dollyStart",
        "dollyDelta",
        "dollyOut",
        "getZoomScale",
        "dollyDelta",
        "dollyDelta",
        "dollyIn",
        "getZoomScale",
        "dollyDelta",
        "dollyStart",
        "dollyEnd",
        "scope",
        "panEnd",
        "panDelta",
        "panEnd",
        "panStart",
        "scope",
        "pan",
        "panDelta",
        "panDelta",
        "panStart",
        "panEnd",
        "scope",
        "updateZoomParameters",
        "dollyIn",
        "getZoomScale",
        "dollyOut",
        "getZoomScale",
        "scope",
        "scope",
        "rotateUp",
        "scope",
        "scope",
        "pan",
        "scope",
        "needsUpdate",
        "scope",
        "rotateUp",
        "scope",
        "scope",
        "pan",
        "scope",
        "needsUpdate",
        "scope",
        "rotateLeft",
        "scope",
        "scope",
        "pan",
        "scope",
        "needsUpdate",
        "scope",
        "rotateLeft",
        "scope",
        "scope",
        "pan",
        "scope",
        "needsUpdate",
        "needsUpdate",
        "scope",
        "pointers",
        "rotateStart",
        "getSecondPointerPosition",
        "position",
        "position",
        "rotateStart",
        "x",
        "y",
        "pointers",
        "panStart",
        "getSecondPointerPosition",
        "position",
        "position",
        "panStart",
        "x",
        "y",
        "getSecondPointerPosition",
        "position",
        "position",
        "dx",
        "dx",
        "dy",
        "dy",
        "dollyStart",
        "distance",
        "scope",
        "handleTouchStartDolly",
        "scope",
        "handleTouchStartPan",
        "scope",
        "handleTouchStartDolly",
        "scope",
        "handleTouchStartRotate",
        "pointers",
        "rotateEnd",
        "getSecondPointerPosition",
        "position",
        "position",
        "rotateEnd",
        "x",
        "y",
        "rotateDelta",
        "rotateEnd",
        "rotateStart",
        "scope",
        "scope",
        "rotateLeft",
        "rotateDelta",
        "element",
        "rotateUp",
        "rotateDelta",
        "element",
        "rotateStart",
        "rotateEnd",
        "pointers",
        "panEnd",
        "getSecondPointerPosition",
        "position",
        "position",
        "panEnd",
        "x",
        "y",
        "panDelta",
        "panEnd",
        "panStart",
        "scope",
        "pan",
        "panDelta",
        "panDelta",
        "panStart",
        "panEnd",
        "getSecondPointerPosition",
        "position",
        "position",
        "dx",
        "dx",
        "dy",
        "dy",
        "dollyEnd",
        "distance",
        "dollyDelta",
        "dollyEnd",
        "dollyStart",
        "scope",
        "dollyOut",
        "dollyDelta",
        "dollyStart",
        "dollyEnd",
        "position",
        "position",
        "updateZoomParameters",
        "centerX",
        "centerY",
        "scope",
        "handleTouchMoveDolly",
        "scope",
        "handleTouchMovePan",
        "scope",
        "handleTouchMoveDolly",
        "scope",
        "handleTouchMoveRotate",
        "scope",
        "pointers",
        "scope",
        "scope",
        "onPointerMove",
        "scope",
        "onPointerUp",
        "isTrackingPointer",
        "addPointer",
        "onTouchStart",
        "onMouseDown",
        "scope",
        "onTouchMove",
        "onMouseMove",
        "removePointer",
        "pointers",
        "scope",
        "scope",
        "onPointerMove",
        "scope",
        "onPointerUp",
        "scope",
        "_endEvent",
        "state",
        "STATE",
        "pointers",
        "pointerPositions",
        "pointerId",
        "onTouchStart",
        "pointerId",
        "position",
        "position",
        "mouseAction",
        "scope",
        "mouseAction",
        "scope",
        "mouseAction",
        "scope",
        "mouseAction",
        "mouseAction",
        "_three",
        "scope",
        "handleMouseDownDolly",
        "state",
        "STATE",
        "_three",
        "scope",
        "handleMouseDownPan",
        "state",
        "STATE",
        "scope",
        "handleMouseDownRotate",
        "state",
        "STATE",
        "_three",
        "scope",
        "handleMouseDownRotate",
        "state",
        "STATE",
        "scope",
        "handleMouseDownPan",
        "state",
        "STATE",
        "state",
        "STATE",
        "state",
        "STATE",
        "scope",
        "_startEvent",
        "state",
        "STATE",
        "scope",
        "handleMouseMoveRotate",
        "STATE",
        "scope",
        "handleMouseMoveDolly",
        "STATE",
        "scope",
        "handleMouseMovePan",
        "scope",
        "scope",
        "state",
        "STATE",
        "scope",
        "_startEvent",
        "handleMouseWheel",
        "customWheelEvent",
        "scope",
        "_endEvent",
        "mode",
        "newEvent",
        "newEvent",
        "controlActive",
        "newEvent",
        "newEvent",
        "controlActive",
        "scope",
        "interceptControlUp",
        "controlActive",
        "scope",
        "interceptControlUp",
        "scope",
        "scope",
        "handleKeyDown",
        "trackPointer",
        "pointers",
        "scope",
        "_three",
        "scope",
        "handleTouchStartRotate",
        "state",
        "STATE",
        "_three",
        "scope",
        "handleTouchStartPan",
        "state",
        "STATE",
        "state",
        "STATE",
        "scope",
        "_three",
        "scope",
        "scope",
        "handleTouchStartDollyPan",
        "state",
        "STATE",
        "_three",
        "scope",
        "scope",
        "handleTouchStartDollyRotate",
        "state",
        "STATE",
        "state",
        "STATE",
        "state",
        "STATE",
        "state",
        "STATE",
        "scope",
        "_startEvent",
        "trackPointer",
        "state",
        "STATE",
        "scope",
        "handleTouchMoveRotate",
        "scope",
        "STATE",
        "scope",
        "handleTouchMovePan",
        "scope",
        "STATE",
        "scope",
        "scope",
        "handleTouchMoveDollyPan",
        "scope",
        "STATE",
        "scope",
        "scope",
        "handleTouchMoveDollyRotate",
        "scope",
        "state",
        "STATE",
        "scope",
        "pointers",
        "pointerPositions",
        "i",
        "pointers",
        "i",
        "pointers",
        "i",
        "pointers",
        "i",
        "i",
        "pointers",
        "i",
        "pointers",
        "i",
        "pointerPositions",
        "position",
        "position",
        "_three",
        "pointerPositions",
        "position",
        "position",
        "pointers",
        "pointers",
        "pointers",
        "pointerPositions",
        "pointerId",
        "scope",
        "onContextMenu",
        "scope",
        "onPointerDown",
        "scope",
        "onPointerUp",
        "scope",
        "onMouseWheel",
        "scope",
        "interceptControlDown",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "id",
        "bundleURL",
        "id",
        "value",
        "value",
        "getBundleURL",
        "bundleURL",
        "id",
        "value",
        "value",
        "err",
        "err",
        "matches",
        "getBaseURL",
        "matches",
        "url",
        "url",
        "url",
        "url",
        "matches",
        "matches",
        "exports",
        "getBundleURLCached",
        "exports",
        "getBaseURL",
        "exports",
        "getOrigin",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "require"
    ],
    "literals": [
        "'undefined'",
        "'undefined'",
        "'undefined'",
        "'undefined'",
        "'function'",
        "'undefined'",
        "'function'",
        "'function'",
        "'string'",
        "\"Cannot find module '\"",
        "\"'\"",
        "'MODULE_NOT_FOUND'",
        "'root'",
        "'object'",
        "'undefined'",
        "'function'",
        "\"2L15i\"",
        "\"d6ea1d42532a7575\"",
        "\"207a8fdfe82f28a0\"",
        "\"use strict\"",
        "\"__parcel__error__overlay__\"",
        "\"http\"",
        "\"localhost\"",
        "\"undefined\"",
        "\"https:\"",
        "\"localhost\"",
        "\"127.0.0.1\"",
        "\"0.0.0.0\"",
        "\"wss\"",
        "\"ws\"",
        "\"/__parcel_hmr\"",
        "\"://\"",
        "\":\"",
        "\"\"",
        "\"/\"",
        "\"undefined\"",
        "\"undefined\"",
        "'throw new Error(\"test\"); //# sourceURL=test.js'",
        "\"test.js\"",
        "\"update\"",
        "\"undefined\"",
        "\"css\"",
        "\"js\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"parcelhmraccept\"",
        "\"error\"",
        "\"\\uD83D\\uDEA8 [parcel]: \"",
        "\"\\n\"",
        "\"\\n\\n\"",
        "\"\\n\"",
        "\"undefined\"",
        "\"[parcel] \\uD83D\\uDEA8 Connection to the HMR server was lost\"",
        "\"[parcel] \\u2728 Error resolved\"",
        "\"div\"",
        "'<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">'",
        "${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}",
        "\"\"",
        "<div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          \\u{1F6A8} ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map((hint)=>\"<div>\\uD83D\\uDCA1 \" + hint + \"</div>\").join(\"\")}\n        </div>\n        ${diagnostic.documentation ? `<div>\\u{1F4DD} <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : \"\"}\n      </div>",
        "\"<div>\\uD83D\\uDCA1 \"",
        "\"</div>\"",
        "\"\"",
        "<div>\\u{1F4DD} <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>",
        "\"\"",
        "\"</div>\"",
        "\"reload\"",
        "\"href\"",
        "\"href\"",
        "\"?\"",
        "\"?\"",
        "'link[rel=\"stylesheet\"]'",
        "\"href\"",
        "\"localhost\"",
        "\"^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):\"",
        "\":\"",
        "\"js\"",
        "\"undefined\"",
        "\"script\"",
        "\"?t=\"",
        "\"esmodule\"",
        "\"module\"",
        "\"function\"",
        "\"esmodule\"",
        "\"?t=\"",
        "\"?t=\"",
        "\"undefined\"",
        "\"css\"",
        "\"js\"",
        "\"dV6cC\"",
        "\"@parcel/transformer-js/src/esmodule-helpers.js\"",
        "\"three\"",
        "\"three/examples/jsm/controls/OrbitControls.js\"",
        "\"../img/stars.jpg\"",
        "\"../img/sunmap.jpg\"",
        "\"../img/mercurymap.jpg\"",
        "\"../img/venusmap.jpg\"",
        "\"../img/earthMap1k.jpg\"",
        "\"../img/mars.jpg\"",
        "\"../img/jupitermap.jpg\"",
        "\"../img/saturnmap.jpg\"",
        "\"../img/saturnringcolor.png\"",
        "\"../img/uranusmap.jpg\"",
        "\"../img/uranusringcolour.jpg\"",
        "\"../img/neptunemap.jpg\"",
        "\"../img/plutomap.jpg\"",
        "\"resize\"",
        "\"three\"",
        "\"ktPTu\"",
        "\"three/examples/jsm/controls/OrbitControls.js\"",
        "\"7mqRv\"",
        "\"../img/stars.jpg\"",
        "\"2IYlH\"",
        "\"../img/sunmap.jpg\"",
        "\"hnzhn\"",
        "\"../img/mercurymap.jpg\"",
        "\"abGYH\"",
        "\"../img/venusmap.jpg\"",
        "\"13Whs\"",
        "\"../img/earthMap1k.jpg\"",
        "\"g7MLT\"",
        "\"../img/mars.jpg\"",
        "\"k8Zkt\"",
        "\"../img/jupitermap.jpg\"",
        "\"aoCD2\"",
        "\"../img/saturnmap.jpg\"",
        "\"iASAy\"",
        "\"../img/uranusmap.jpg\"",
        "\"lpiK9\"",
        "\"../img/uranusringcolour.jpg\"",
        "\"l6K4I\"",
        "\"../img/neptunemap.jpg\"",
        "\"7hdKj\"",
        "\"../img/plutomap.jpg\"",
        "\"3gAeJ\"",
        "\"@parcel/transformer-js/src/esmodule-helpers.js\"",
        "\"gkKU3\"",
        "\"../img/saturnringcolor.png\"",
        "\"5VuNt\"",
        "\"ktPTu\"",
        "\"@parcel/transformer-js/src/esmodule-helpers.js\"",
        "\"ACESFilmicToneMapping\"",
        "\"AddEquation\"",
        "\"AddOperation\"",
        "\"AdditiveAnimationBlendMode\"",
        "\"AdditiveBlending\"",
        "\"AgXToneMapping\"",
        "\"AlphaFormat\"",
        "\"AlwaysCompare\"",
        "\"AlwaysDepth\"",
        "\"AlwaysStencilFunc\"",
        "\"AmbientLight\"",
        "\"AnimationAction\"",
        "\"AnimationClip\"",
        "\"AnimationLoader\"",
        "\"AnimationMixer\"",
        "\"AnimationObjectGroup\"",
        "\"AnimationUtils\"",
        "\"ArcCurve\"",
        "\"ArrayCamera\"",
        "\"ArrowHelper\"",
        "\"AttachedBindMode\"",
        "\"Audio\"",
        "\"AudioAnalyser\"",
        "\"AudioContext\"",
        "\"AudioListener\"",
        "\"AudioLoader\"",
        "\"AxesHelper\"",
        "\"BackSide\"",
        "\"BasicDepthPacking\"",
        "\"BasicShadowMap\"",
        "\"BatchedMesh\"",
        "\"Bone\"",
        "\"BooleanKeyframeTrack\"",
        "\"Box2\"",
        "\"Box3\"",
        "\"Box3Helper\"",
        "\"BoxGeometry\"",
        "\"BoxHelper\"",
        "\"BufferAttribute\"",
        "\"BufferGeometry\"",
        "\"BufferGeometryLoader\"",
        "\"ByteType\"",
        "\"Cache\"",
        "\"Camera\"",
        "\"CameraHelper\"",
        "\"CanvasTexture\"",
        "\"CapsuleGeometry\"",
        "\"CatmullRomCurve3\"",
        "\"CineonToneMapping\"",
        "\"CircleGeometry\"",
        "\"ClampToEdgeWrapping\"",
        "\"Clock\"",
        "\"Color\"",
        "\"ColorKeyframeTrack\"",
        "\"ColorManagement\"",
        "\"CompressedArrayTexture\"",
        "\"CompressedCubeTexture\"",
        "\"CompressedTexture\"",
        "\"CompressedTextureLoader\"",
        "\"ConeGeometry\"",
        "\"ConstantAlphaFactor\"",
        "\"ConstantColorFactor\"",
        "\"CubeCamera\"",
        "\"CubeReflectionMapping\"",
        "\"CubeRefractionMapping\"",
        "\"CubeTexture\"",
        "\"CubeTextureLoader\"",
        "\"CubeUVReflectionMapping\"",
        "\"CubicBezierCurve\"",
        "\"CubicBezierCurve3\"",
        "\"CubicInterpolant\"",
        "\"CullFaceBack\"",
        "\"CullFaceFront\"",
        "\"CullFaceFrontBack\"",
        "\"CullFaceNone\"",
        "\"Curve\"",
        "\"CurvePath\"",
        "\"CustomBlending\"",
        "\"CustomToneMapping\"",
        "\"CylinderGeometry\"",
        "\"Cylindrical\"",
        "\"Data3DTexture\"",
        "\"DataArrayTexture\"",
        "\"DataTexture\"",
        "\"DataTextureLoader\"",
        "\"DataUtils\"",
        "\"DecrementStencilOp\"",
        "\"DecrementWrapStencilOp\"",
        "\"DefaultLoadingManager\"",
        "\"DepthFormat\"",
        "\"DepthStencilFormat\"",
        "\"DepthTexture\"",
        "\"DetachedBindMode\"",
        "\"DirectionalLight\"",
        "\"DirectionalLightHelper\"",
        "\"DiscreteInterpolant\"",
        "\"DisplayP3ColorSpace\"",
        "\"DodecahedronGeometry\"",
        "\"DoubleSide\"",
        "\"DstAlphaFactor\"",
        "\"DstColorFactor\"",
        "\"DynamicCopyUsage\"",
        "\"DynamicDrawUsage\"",
        "\"DynamicReadUsage\"",
        "\"EdgesGeometry\"",
        "\"EllipseCurve\"",
        "\"EqualCompare\"",
        "\"EqualDepth\"",
        "\"EqualStencilFunc\"",
        "\"EquirectangularReflectionMapping\"",
        "\"EquirectangularRefractionMapping\"",
        "\"Euler\"",
        "\"EventDispatcher\"",
        "\"ExtrudeGeometry\"",
        "\"FileLoader\"",
        "\"Float16BufferAttribute\"",
        "\"Float32BufferAttribute\"",
        "\"FloatType\"",
        "\"Fog\"",
        "\"FogExp2\"",
        "\"FramebufferTexture\"",
        "\"FrontSide\"",
        "\"Frustum\"",
        "\"GLBufferAttribute\"",
        "\"GLSL1\"",
        "\"GLSL3\"",
        "\"GreaterCompare\"",
        "\"GreaterDepth\"",
        "\"GreaterEqualCompare\"",
        "\"GreaterEqualDepth\"",
        "\"GreaterEqualStencilFunc\"",
        "\"GreaterStencilFunc\"",
        "\"GridHelper\"",
        "\"Group\"",
        "\"HalfFloatType\"",
        "\"HemisphereLight\"",
        "\"HemisphereLightHelper\"",
        "\"IcosahedronGeometry\"",
        "\"ImageBitmapLoader\"",
        "\"ImageLoader\"",
        "\"ImageUtils\"",
        "\"IncrementStencilOp\"",
        "\"IncrementWrapStencilOp\"",
        "\"InstancedBufferAttribute\"",
        "\"InstancedBufferGeometry\"",
        "\"InstancedInterleavedBuffer\"",
        "\"InstancedMesh\"",
        "\"Int16BufferAttribute\"",
        "\"Int32BufferAttribute\"",
        "\"Int8BufferAttribute\"",
        "\"IntType\"",
        "\"InterleavedBuffer\"",
        "\"InterleavedBufferAttribute\"",
        "\"Interpolant\"",
        "\"InterpolateDiscrete\"",
        "\"InterpolateLinear\"",
        "\"InterpolateSmooth\"",
        "\"InvertStencilOp\"",
        "\"KeepStencilOp\"",
        "\"KeyframeTrack\"",
        "\"LOD\"",
        "\"LatheGeometry\"",
        "\"Layers\"",
        "\"LessCompare\"",
        "\"LessDepth\"",
        "\"LessEqualCompare\"",
        "\"LessEqualDepth\"",
        "\"LessEqualStencilFunc\"",
        "\"LessStencilFunc\"",
        "\"Light\"",
        "\"LightProbe\"",
        "\"Line\"",
        "\"Line3\"",
        "\"LineBasicMaterial\"",
        "\"LineCurve\"",
        "\"LineCurve3\"",
        "\"LineDashedMaterial\"",
        "\"LineLoop\"",
        "\"LineSegments\"",
        "\"LinearDisplayP3ColorSpace\"",
        "\"LinearFilter\"",
        "\"LinearInterpolant\"",
        "\"LinearMipMapLinearFilter\"",
        "\"LinearMipMapNearestFilter\"",
        "\"LinearMipmapLinearFilter\"",
        "\"LinearMipmapNearestFilter\"",
        "\"LinearSRGBColorSpace\"",
        "\"LinearToneMapping\"",
        "\"LinearTransfer\"",
        "\"Loader\"",
        "\"LoaderUtils\"",
        "\"LoadingManager\"",
        "\"LoopOnce\"",
        "\"LoopPingPong\"",
        "\"LoopRepeat\"",
        "\"LuminanceAlphaFormat\"",
        "\"LuminanceFormat\"",
        "\"MOUSE\"",
        "\"Material\"",
        "\"MaterialLoader\"",
        "\"MathUtils\"",
        "\"Matrix2\"",
        "\"Matrix3\"",
        "\"Matrix4\"",
        "\"MaxEquation\"",
        "\"Mesh\"",
        "\"MeshBasicMaterial\"",
        "\"MeshDepthMaterial\"",
        "\"MeshDistanceMaterial\"",
        "\"MeshLambertMaterial\"",
        "\"MeshMatcapMaterial\"",
        "\"MeshNormalMaterial\"",
        "\"MeshPhongMaterial\"",
        "\"MeshPhysicalMaterial\"",
        "\"MeshStandardMaterial\"",
        "\"MeshToonMaterial\"",
        "\"MinEquation\"",
        "\"MirroredRepeatWrapping\"",
        "\"MixOperation\"",
        "\"MultiplyBlending\"",
        "\"MultiplyOperation\"",
        "\"NearestFilter\"",
        "\"NearestMipMapLinearFilter\"",
        "\"NearestMipMapNearestFilter\"",
        "\"NearestMipmapLinearFilter\"",
        "\"NearestMipmapNearestFilter\"",
        "\"NeutralToneMapping\"",
        "\"NeverCompare\"",
        "\"NeverDepth\"",
        "\"NeverStencilFunc\"",
        "\"NoBlending\"",
        "\"NoColorSpace\"",
        "\"NoToneMapping\"",
        "\"NormalAnimationBlendMode\"",
        "\"NormalBlending\"",
        "\"NotEqualCompare\"",
        "\"NotEqualDepth\"",
        "\"NotEqualStencilFunc\"",
        "\"NumberKeyframeTrack\"",
        "\"Object3D\"",
        "\"ObjectLoader\"",
        "\"ObjectSpaceNormalMap\"",
        "\"OctahedronGeometry\"",
        "\"OneFactor\"",
        "\"OneMinusConstantAlphaFactor\"",
        "\"OneMinusConstantColorFactor\"",
        "\"OneMinusDstAlphaFactor\"",
        "\"OneMinusDstColorFactor\"",
        "\"OneMinusSrcAlphaFactor\"",
        "\"OneMinusSrcColorFactor\"",
        "\"OrthographicCamera\"",
        "\"P3Primaries\"",
        "\"PCFShadowMap\"",
        "\"PCFSoftShadowMap\"",
        "\"PMREMGenerator\"",
        "\"Path\"",
        "\"PerspectiveCamera\"",
        "\"Plane\"",
        "\"PlaneGeometry\"",
        "\"PlaneHelper\"",
        "\"PointLight\"",
        "\"PointLightHelper\"",
        "\"Points\"",
        "\"PointsMaterial\"",
        "\"PolarGridHelper\"",
        "\"PolyhedronGeometry\"",
        "\"PositionalAudio\"",
        "\"PropertyBinding\"",
        "\"PropertyMixer\"",
        "\"QuadraticBezierCurve\"",
        "\"QuadraticBezierCurve3\"",
        "\"Quaternion\"",
        "\"QuaternionKeyframeTrack\"",
        "\"QuaternionLinearInterpolant\"",
        "\"RED_GREEN_RGTC2_Format\"",
        "\"RED_RGTC1_Format\"",
        "\"REVISION\"",
        "\"RGBADepthPacking\"",
        "\"RGBAFormat\"",
        "\"RGBAIntegerFormat\"",
        "\"RGBA_ASTC_10x10_Format\"",
        "\"RGBA_ASTC_10x5_Format\"",
        "\"RGBA_ASTC_10x6_Format\"",
        "\"RGBA_ASTC_10x8_Format\"",
        "\"RGBA_ASTC_12x10_Format\"",
        "\"RGBA_ASTC_12x12_Format\"",
        "\"RGBA_ASTC_4x4_Format\"",
        "\"RGBA_ASTC_5x4_Format\"",
        "\"RGBA_ASTC_5x5_Format\"",
        "\"RGBA_ASTC_6x5_Format\"",
        "\"RGBA_ASTC_6x6_Format\"",
        "\"RGBA_ASTC_8x5_Format\"",
        "\"RGBA_ASTC_8x6_Format\"",
        "\"RGBA_ASTC_8x8_Format\"",
        "\"RGBA_BPTC_Format\"",
        "\"RGBA_ETC2_EAC_Format\"",
        "\"RGBA_PVRTC_2BPPV1_Format\"",
        "\"RGBA_PVRTC_4BPPV1_Format\"",
        "\"RGBA_S3TC_DXT1_Format\"",
        "\"RGBA_S3TC_DXT3_Format\"",
        "\"RGBA_S3TC_DXT5_Format\"",
        "\"RGBDepthPacking\"",
        "\"RGBFormat\"",
        "\"RGBIntegerFormat\"",
        "\"RGB_BPTC_SIGNED_Format\"",
        "\"RGB_BPTC_UNSIGNED_Format\"",
        "\"RGB_ETC1_Format\"",
        "\"RGB_ETC2_Format\"",
        "\"RGB_PVRTC_2BPPV1_Format\"",
        "\"RGB_PVRTC_4BPPV1_Format\"",
        "\"RGB_S3TC_DXT1_Format\"",
        "\"RGDepthPacking\"",
        "\"RGFormat\"",
        "\"RGIntegerFormat\"",
        "\"RawShaderMaterial\"",
        "\"Ray\"",
        "\"Raycaster\"",
        "\"Rec709Primaries\"",
        "\"RectAreaLight\"",
        "\"RedFormat\"",
        "\"RedIntegerFormat\"",
        "\"ReinhardToneMapping\"",
        "\"RenderTarget\"",
        "\"RepeatWrapping\"",
        "\"ReplaceStencilOp\"",
        "\"ReverseSubtractEquation\"",
        "\"RingGeometry\"",
        "\"SIGNED_RED_GREEN_RGTC2_Format\"",
        "\"SIGNED_RED_RGTC1_Format\"",
        "\"SRGBColorSpace\"",
        "\"SRGBTransfer\"",
        "\"Scene\"",
        "\"ShaderChunk\"",
        "\"ShaderLib\"",
        "\"ShaderMaterial\"",
        "\"ShadowMaterial\"",
        "\"Shape\"",
        "\"ShapeGeometry\"",
        "\"ShapePath\"",
        "\"ShapeUtils\"",
        "\"ShortType\"",
        "\"Skeleton\"",
        "\"SkeletonHelper\"",
        "\"SkinnedMesh\"",
        "\"Source\"",
        "\"Sphere\"",
        "\"SphereGeometry\"",
        "\"Spherical\"",
        "\"SphericalHarmonics3\"",
        "\"SplineCurve\"",
        "\"SpotLight\"",
        "\"SpotLightHelper\"",
        "\"Sprite\"",
        "\"SpriteMaterial\"",
        "\"SrcAlphaFactor\"",
        "\"SrcAlphaSaturateFactor\"",
        "\"SrcColorFactor\"",
        "\"StaticCopyUsage\"",
        "\"StaticDrawUsage\"",
        "\"StaticReadUsage\"",
        "\"StereoCamera\"",
        "\"StreamCopyUsage\"",
        "\"StreamDrawUsage\"",
        "\"StreamReadUsage\"",
        "\"StringKeyframeTrack\"",
        "\"SubtractEquation\"",
        "\"SubtractiveBlending\"",
        "\"TOUCH\"",
        "\"TangentSpaceNormalMap\"",
        "\"TetrahedronGeometry\"",
        "\"Texture\"",
        "\"TextureLoader\"",
        "\"TextureUtils\"",
        "\"TorusGeometry\"",
        "\"TorusKnotGeometry\"",
        "\"Triangle\"",
        "\"TriangleFanDrawMode\"",
        "\"TriangleStripDrawMode\"",
        "\"TrianglesDrawMode\"",
        "\"TubeGeometry\"",
        "\"UVMapping\"",
        "\"Uint16BufferAttribute\"",
        "\"Uint32BufferAttribute\"",
        "\"Uint8BufferAttribute\"",
        "\"Uint8ClampedBufferAttribute\"",
        "\"Uniform\"",
        "\"UniformsGroup\"",
        "\"UniformsLib\"",
        "\"UniformsUtils\"",
        "\"UnsignedByteType\"",
        "\"UnsignedInt248Type\"",
        "\"UnsignedInt5999Type\"",
        "\"UnsignedIntType\"",
        "\"UnsignedShort4444Type\"",
        "\"UnsignedShort5551Type\"",
        "\"UnsignedShortType\"",
        "\"VSMShadowMap\"",
        "\"Vector2\"",
        "\"Vector3\"",
        "\"Vector4\"",
        "\"VectorKeyframeTrack\"",
        "\"VideoTexture\"",
        "\"WebGL3DRenderTarget\"",
        "\"WebGLArrayRenderTarget\"",
        "\"WebGLCoordinateSystem\"",
        "\"WebGLCubeRenderTarget\"",
        "\"WebGLMultipleRenderTargets\"",
        "\"WebGLRenderTarget\"",
        "\"WebGLRenderer\"",
        "\"WebGLUtils\"",
        "\"WebGPUCoordinateSystem\"",
        "\"WireframeGeometry\"",
        "\"WrapAroundEnding\"",
        "\"ZeroCurvatureEnding\"",
        "\"ZeroFactor\"",
        "\"ZeroSlopeEnding\"",
        "\"ZeroStencilOp\"",
        "\"createCanvasElement\"",
        "\"167\"",
        "\"attached\"",
        "\"detached\"",
        "\"\"",
        "\"srgb\"",
        "\"srgb-linear\"",
        "\"display-p3\"",
        "\"display-p3-linear\"",
        "\"linear\"",
        "\"srgb\"",
        "\"rec709\"",
        "\"p3\"",
        "\"100\"",
        "\"300 es\"",
        "\"00\"",
        "\"01\"",
        "\"02\"",
        "\"03\"",
        "\"04\"",
        "\"05\"",
        "\"06\"",
        "\"07\"",
        "\"08\"",
        "\"09\"",
        "\"0a\"",
        "\"0b\"",
        "\"0c\"",
        "\"0d\"",
        "\"0e\"",
        "\"0f\"",
        "\"10\"",
        "\"11\"",
        "\"12\"",
        "\"13\"",
        "\"14\"",
        "\"15\"",
        "\"16\"",
        "\"17\"",
        "\"18\"",
        "\"19\"",
        "\"1a\"",
        "\"1b\"",
        "\"1c\"",
        "\"1d\"",
        "\"1e\"",
        "\"1f\"",
        "\"20\"",
        "\"21\"",
        "\"22\"",
        "\"23\"",
        "\"24\"",
        "\"25\"",
        "\"26\"",
        "\"27\"",
        "\"28\"",
        "\"29\"",
        "\"2a\"",
        "\"2b\"",
        "\"2c\"",
        "\"2d\"",
        "\"2e\"",
        "\"2f\"",
        "\"30\"",
        "\"31\"",
        "\"32\"",
        "\"33\"",
        "\"34\"",
        "\"35\"",
        "\"36\"",
        "\"37\"",
        "\"38\"",
        "\"39\"",
        "\"3a\"",
        "\"3b\"",
        "\"3c\"",
        "\"3d\"",
        "\"3e\"",
        "\"3f\"",
        "\"40\"",
        "\"41\"",
        "\"42\"",
        "\"43\"",
        "\"44\"",
        "\"45\"",
        "\"46\"",
        "\"47\"",
        "\"48\"",
        "\"49\"",
        "\"4a\"",
        "\"4b\"",
        "\"4c\"",
        "\"4d\"",
        "\"4e\"",
        "\"4f\"",
        "\"50\"",
        "\"51\"",
        "\"52\"",
        "\"53\"",
        "\"54\"",
        "\"55\"",
        "\"56\"",
        "\"57\"",
        "\"58\"",
        "\"59\"",
        "\"5a\"",
        "\"5b\"",
        "\"5c\"",
        "\"5d\"",
        "\"5e\"",
        "\"5f\"",
        "\"60\"",
        "\"61\"",
        "\"62\"",
        "\"63\"",
        "\"64\"",
        "\"65\"",
        "\"66\"",
        "\"67\"",
        "\"68\"",
        "\"69\"",
        "\"6a\"",
        "\"6b\"",
        "\"6c\"",
        "\"6d\"",
        "\"6e\"",
        "\"6f\"",
        "\"70\"",
        "\"71\"",
        "\"72\"",
        "\"73\"",
        "\"74\"",
        "\"75\"",
        "\"76\"",
        "\"77\"",
        "\"78\"",
        "\"79\"",
        "\"7a\"",
        "\"7b\"",
        "\"7c\"",
        "\"7d\"",
        "\"7e\"",
        "\"7f\"",
        "\"80\"",
        "\"81\"",
        "\"82\"",
        "\"83\"",
        "\"84\"",
        "\"85\"",
        "\"86\"",
        "\"87\"",
        "\"88\"",
        "\"89\"",
        "\"8a\"",
        "\"8b\"",
        "\"8c\"",
        "\"8d\"",
        "\"8e\"",
        "\"8f\"",
        "\"90\"",
        "\"91\"",
        "\"92\"",
        "\"93\"",
        "\"94\"",
        "\"95\"",
        "\"96\"",
        "\"97\"",
        "\"98\"",
        "\"99\"",
        "\"9a\"",
        "\"9b\"",
        "\"9c\"",
        "\"9d\"",
        "\"9e\"",
        "\"9f\"",
        "\"a0\"",
        "\"a1\"",
        "\"a2\"",
        "\"a3\"",
        "\"a4\"",
        "\"a5\"",
        "\"a6\"",
        "\"a7\"",
        "\"a8\"",
        "\"a9\"",
        "\"aa\"",
        "\"ab\"",
        "\"ac\"",
        "\"ad\"",
        "\"ae\"",
        "\"af\"",
        "\"b0\"",
        "\"b1\"",
        "\"b2\"",
        "\"b3\"",
        "\"b4\"",
        "\"b5\"",
        "\"b6\"",
        "\"b7\"",
        "\"b8\"",
        "\"b9\"",
        "\"ba\"",
        "\"bb\"",
        "\"bc\"",
        "\"bd\"",
        "\"be\"",
        "\"bf\"",
        "\"c0\"",
        "\"c1\"",
        "\"c2\"",
        "\"c3\"",
        "\"c4\"",
        "\"c5\"",
        "\"c6\"",
        "\"c7\"",
        "\"c8\"",
        "\"c9\"",
        "\"ca\"",
        "\"cb\"",
        "\"cc\"",
        "\"cd\"",
        "\"ce\"",
        "\"cf\"",
        "\"d0\"",
        "\"d1\"",
        "\"d2\"",
        "\"d3\"",
        "\"d4\"",
        "\"d5\"",
        "\"d6\"",
        "\"d7\"",
        "\"d8\"",
        "\"d9\"",
        "\"da\"",
        "\"db\"",
        "\"dc\"",
        "\"dd\"",
        "\"de\"",
        "\"df\"",
        "\"e0\"",
        "\"e1\"",
        "\"e2\"",
        "\"e3\"",
        "\"e4\"",
        "\"e5\"",
        "\"e6\"",
        "\"e7\"",
        "\"e8\"",
        "\"e9\"",
        "\"ea\"",
        "\"eb\"",
        "\"ec\"",
        "\"ed\"",
        "\"ee\"",
        "\"ef\"",
        "\"f0\"",
        "\"f1\"",
        "\"f2\"",
        "\"f3\"",
        "\"f4\"",
        "\"f5\"",
        "\"f6\"",
        "\"f7\"",
        "\"f8\"",
        "\"f9\"",
        "\"fa\"",
        "\"fb\"",
        "\"fc\"",
        "\"fd\"",
        "\"fe\"",
        "\"ff\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"XYX\"",
        "\"YZY\"",
        "\"ZXZ\"",
        "\"XZX\"",
        "\"YXY\"",
        "\"ZYZ\"",
        "\"THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: \"",
        "\"Invalid component type.\"",
        "\"Invalid component type.\"",
        "\"index is out of range: \"",
        "\"index is out of range: \"",
        "\"http://www.w3.org/1999/xhtml\"",
        "\"canvas\"",
        "\"block\"",
        "Unsupported working color space, \"${colorSpace}\".",
        "\"undefined\"",
        "\"canvas\"",
        "\"2d\"",
        "\"THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons\"",
        "\"image/jpeg\"",
        "\"image/png\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"canvas\"",
        "\"2d\"",
        "\"THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.\"",
        "\"id\"",
        "\"string\"",
        "\"\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"THREE.Texture: Unable to serialize Texture.\"",
        "\"id\"",
        "\"\"",
        "\"string\"",
        "\"Texture\"",
        "\"Texture.toJSON\"",
        "\"dispose\"",
        "\"index is out of range: \"",
        "\"index is out of range: \"",
        "\"dispose\"",
        "\"XYZ\"",
        "\"YXZ\"",
        "\"ZXY\"",
        "\"ZYX\"",
        "\"YZX\"",
        "\"XZY\"",
        "\"THREE.Quaternion: .setFromEuler() encountered an unknown order: \"",
        "\"index is out of range: \"",
        "\"index is out of range: \"",
        "\"position\"",
        "\"XYZ\"",
        "\"YXZ\"",
        "\"ZXY\"",
        "\"ZYX\"",
        "\"YZX\"",
        "\"XZY\"",
        "\"THREE.Matrix4.makePerspective(): Invalid coordinate system: \"",
        "\"THREE.Matrix4.makeOrthographic(): Invalid coordinate system: \"",
        "\"XYZ\"",
        "\"YXZ\"",
        "\"ZXY\"",
        "\"ZYX\"",
        "\"YZX\"",
        "\"XZY\"",
        "\"THREE.Euler: .setFromRotationMatrix() encountered an unknown order: \"",
        "\"XYZ\"",
        "\"added\"",
        "\"removed\"",
        "\"childadded\"",
        "\"childremoved\"",
        "\"id\"",
        "\"\"",
        "\"Object3D\"",
        "\"THREE.Object3D.add: object can't be added as a child of itself.\"",
        "\"THREE.Object3D.add: object not an instance of THREE.Object3D.\"",
        "\"id\"",
        "\"name\"",
        "\"string\"",
        "\"Object\"",
        "\"Object3D.toJSON\"",
        "\"\"",
        "\"InstancedMesh\"",
        "\"BatchedMesh\"",
        "\"z\"",
        "\"w\"",
        "\"aliceblue\"",
        "\"antiquewhite\"",
        "\"aqua\"",
        "\"aquamarine\"",
        "\"azure\"",
        "\"beige\"",
        "\"bisque\"",
        "\"black\"",
        "\"blanchedalmond\"",
        "\"blue\"",
        "\"blueviolet\"",
        "\"brown\"",
        "\"burlywood\"",
        "\"cadetblue\"",
        "\"chartreuse\"",
        "\"chocolate\"",
        "\"coral\"",
        "\"cornflowerblue\"",
        "\"cornsilk\"",
        "\"crimson\"",
        "\"cyan\"",
        "\"darkblue\"",
        "\"darkcyan\"",
        "\"darkgoldenrod\"",
        "\"darkgray\"",
        "\"darkgreen\"",
        "\"darkgrey\"",
        "\"darkkhaki\"",
        "\"darkmagenta\"",
        "\"darkolivegreen\"",
        "\"darkorange\"",
        "\"darkorchid\"",
        "\"darkred\"",
        "\"darksalmon\"",
        "\"darkseagreen\"",
        "\"darkslateblue\"",
        "\"darkslategray\"",
        "\"darkslategrey\"",
        "\"darkturquoise\"",
        "\"darkviolet\"",
        "\"deeppink\"",
        "\"deepskyblue\"",
        "\"dimgray\"",
        "\"dimgrey\"",
        "\"dodgerblue\"",
        "\"firebrick\"",
        "\"floralwhite\"",
        "\"forestgreen\"",
        "\"fuchsia\"",
        "\"gainsboro\"",
        "\"ghostwhite\"",
        "\"gold\"",
        "\"goldenrod\"",
        "\"gray\"",
        "\"green\"",
        "\"greenyellow\"",
        "\"grey\"",
        "\"honeydew\"",
        "\"hotpink\"",
        "\"indianred\"",
        "\"indigo\"",
        "\"ivory\"",
        "\"khaki\"",
        "\"lavender\"",
        "\"lavenderblush\"",
        "\"lawngreen\"",
        "\"lemonchiffon\"",
        "\"lightblue\"",
        "\"lightcoral\"",
        "\"lightcyan\"",
        "\"lightgoldenrodyellow\"",
        "\"lightgray\"",
        "\"lightgreen\"",
        "\"lightgrey\"",
        "\"lightpink\"",
        "\"lightsalmon\"",
        "\"lightseagreen\"",
        "\"lightskyblue\"",
        "\"lightslategray\"",
        "\"lightslategrey\"",
        "\"lightsteelblue\"",
        "\"lightyellow\"",
        "\"lime\"",
        "\"limegreen\"",
        "\"linen\"",
        "\"magenta\"",
        "\"maroon\"",
        "\"mediumaquamarine\"",
        "\"mediumblue\"",
        "\"mediumorchid\"",
        "\"mediumpurple\"",
        "\"mediumseagreen\"",
        "\"mediumslateblue\"",
        "\"mediumspringgreen\"",
        "\"mediumturquoise\"",
        "\"mediumvioletred\"",
        "\"midnightblue\"",
        "\"mintcream\"",
        "\"mistyrose\"",
        "\"moccasin\"",
        "\"navajowhite\"",
        "\"navy\"",
        "\"oldlace\"",
        "\"olive\"",
        "\"olivedrab\"",
        "\"orange\"",
        "\"orangered\"",
        "\"orchid\"",
        "\"palegoldenrod\"",
        "\"palegreen\"",
        "\"paleturquoise\"",
        "\"palevioletred\"",
        "\"papayawhip\"",
        "\"peachpuff\"",
        "\"peru\"",
        "\"pink\"",
        "\"plum\"",
        "\"powderblue\"",
        "\"purple\"",
        "\"rebeccapurple\"",
        "\"red\"",
        "\"rosybrown\"",
        "\"royalblue\"",
        "\"saddlebrown\"",
        "\"salmon\"",
        "\"sandybrown\"",
        "\"seagreen\"",
        "\"seashell\"",
        "\"sienna\"",
        "\"silver\"",
        "\"skyblue\"",
        "\"slateblue\"",
        "\"slategray\"",
        "\"slategrey\"",
        "\"snow\"",
        "\"springgreen\"",
        "\"steelblue\"",
        "\"tan\"",
        "\"teal\"",
        "\"thistle\"",
        "\"tomato\"",
        "\"turquoise\"",
        "\"violet\"",
        "\"wheat\"",
        "\"white\"",
        "\"whitesmoke\"",
        "\"yellow\"",
        "\"yellowgreen\"",
        "\"number\"",
        "\"string\"",
        "\"THREE.Color: Alpha component of \"",
        "\" will be ignored.\"",
        "\"rgb\"",
        "\"rgba\"",
        "\"hsl\"",
        "\"hsla\"",
        "\"THREE.Color: Unknown color model \"",
        "\"THREE.Color: Invalid hex color \"",
        "\"THREE.Color: Unknown color \"",
        "\"000000\"",
        "color(${colorSpace1} ${r.toFixed(3)} ${g.toFixed(3)} ${b.toFixed(3)})",
        "rgb(${Math.round(r * 255)},${Math.round(g * 255)},${Math.round(b * 255)})",
        "\"id\"",
        "\"\"",
        "\"Material\"",
        "THREE.Material: parameter '${key}' has value of undefined.",
        "THREE.Material: '${key}' is not a property of THREE.${this.type}.",
        "\"string\"",
        "\"Material\"",
        "\"Material.toJSON\"",
        "\"\"",
        "\"round\"",
        "\"round\"",
        "\"dispose\"",
        "\"Material: onBuild() has been removed.\"",
        "\"Material: onBeforeRender() has been removed.\"",
        "\"MeshBasicMaterial\"",
        "\"round\"",
        "\"round\"",
        "\"THREE.DataUtils.toHalfFloat(): Value out of range.\"",
        "\"THREE.BufferAttribute: array should be a Typed Array.\"",
        "\"\"",
        "\"THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.\"",
        "\"\"",
        "\"id\"",
        "\"\"",
        "\"BufferGeometry\"",
        "\"position\"",
        "\"THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.\"",
        "'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.'",
        "\"THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.\"",
        "'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.'",
        "\"THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)\"",
        "\"tangent\"",
        "\"tangent\"",
        "\"tangent\"",
        "\"position\"",
        "\"normal\"",
        "\"normal\"",
        "\"THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.\"",
        "\"BufferGeometry\"",
        "\"BufferGeometry.toJSON\"",
        "\"\"",
        "\"dispose\"",
        "\"Mesh\"",
        "\"BoxGeometry\"",
        "\"z\"",
        "\"y\"",
        "\"x\"",
        "\"z\"",
        "\"y\"",
        "\"x\"",
        "\"x\"",
        "\"z\"",
        "\"y\"",
        "\"x\"",
        "\"z\"",
        "\"y\"",
        "\"x\"",
        "\"y\"",
        "\"z\"",
        "\"x\"",
        "\"y\"",
        "\"z\"",
        "\"position\"",
        "\"normal\"",
        "\"uv\"",
        "\"UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().\"",
        "\"void main() {\\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\"",
        "\"void main() {\\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\"",
        "\"ShaderMaterial\"",
        "\"color\"",
        "\"uv\"",
        "\"uv1\"",
        "\"t\"",
        "\"c\"",
        "\"v2\"",
        "\"v3\"",
        "\"v4\"",
        "\"m3\"",
        "\"m4\"",
        "\"Camera\"",
        "\"PerspectiveCamera\"",
        "\"CubeCamera\"",
        "\"THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: \"",
        "varying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}",
        "uniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}",
        "\"CubemapFromEquirect\"",
        "\"THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: \"",
        "\"THREE.WebGLAttributes: Unsupported buffer data format: \"",
        "\"THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.\"",
        "\"PlaneGeometry\"",
        "\"position\"",
        "\"normal\"",
        "\"uv\"",
        "\"#ifdef USE_ALPHAHASH\\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\"",
        "\"#ifdef USE_ALPHAHASH\\n\tconst float ALPHA_HASH_SCALE = 0.05;\\n\tfloat hash2D( vec2 value ) {\\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\t}\\n\tfloat hash3D( vec3 value ) {\\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\t}\\n\tfloat getAlphaHashThreshold( vec3 position ) {\\n\t\tfloat maxDeriv = max(\\n\t\t\tlength( dFdx( position.xyz ) ),\\n\t\t\tlength( dFdy( position.xyz ) )\\n\t\t);\\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\t\tvec2 pixScales = vec2(\\n\t\t\texp2( floor( log2( pixScale ) ) ),\\n\t\t\texp2( ceil( log2( pixScale ) ) )\\n\t\t);\\n\t\tvec2 alpha = vec2(\\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\\n\t\t);\\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\t\tvec3 cases = vec3(\\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\t\t);\\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\\n\t\t\t: cases.z;\\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\t}\\n#endif\"",
        "\"#ifdef USE_ALPHAMAP\\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\"",
        "\"#ifdef USE_ALPHAMAP\\n\tuniform sampler2D alphaMap;\\n#endif\"",
        "\"#ifdef USE_ALPHATEST\\n\t#ifdef ALPHA_TO_COVERAGE\\n\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\\n\tif ( diffuseColor.a == 0.0 ) discard;\\n\t#else\\n\tif ( diffuseColor.a < alphaTest ) discard;\\n\t#endif\\n#endif\"",
        "\"#ifdef USE_ALPHATEST\\n\tuniform float alphaTest;\\n#endif\"",
        "\"#ifdef USE_AOMAP\\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\t#if defined( USE_CLEARCOAT ) \\n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\t#endif\\n\t#if defined( USE_SHEEN ) \\n\t\tsheenSpecularIndirect *= ambientOcclusion;\\n\t#endif\\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\t#endif\\n#endif\"",
        "\"#ifdef USE_AOMAP\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n#endif\"",
        "\"#ifdef USE_BATCHING\\n\t#if ! defined( GL_ANGLE_multi_draw )\\n\t#define gl_DrawID _gl_DrawID\\n\tuniform int _gl_DrawID;\\n\t#endif\\n\tuniform highp sampler2D batchingTexture;\\n\tuniform highp usampler2D batchingIdTexture;\\n\tmat4 getBatchingMatrix( const in float i ) {\\n\t\tint size = textureSize( batchingTexture, 0 ).x;\\n\t\tint j = int( i ) * 4;\\n\t\tint x = j % size;\\n\t\tint y = j / size;\\n\t\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\t\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\t\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\t\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\t\treturn mat4( v1, v2, v3, v4 );\\n\t}\\n\tfloat getIndirectIndex( const in int i ) {\\n\t\tint size = textureSize( batchingIdTexture, 0 ).x;\\n\t\tint x = i % size;\\n\t\tint y = i / size;\\n\t\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\\n\t}\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\tuniform sampler2D batchingColorTexture;\\n\tvec3 getBatchingColor( const in float i ) {\\n\t\tint size = textureSize( batchingColorTexture, 0 ).x;\\n\t\tint j = int( i );\\n\t\tint x = j % size;\\n\t\tint y = j / size;\\n\t\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\\n\t}\\n#endif\"",
        "\"#ifdef USE_BATCHING\\n\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\\n#endif\"",
        "\"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\tvPosition = vec3( position );\\n#endif\"",
        "\"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\"",
        "\"float G_BlinnPhong_Implicit( ) {\\n\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\tfloat G = G_BlinnPhong_Implicit( );\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\treturn F * ( G * D );\\n} // validated\"",
        "\"#ifdef USE_IRIDESCENCE\\n\tconst mat3 XYZ_TO_REC709 = mat3(\\n\t\t 3.2404542, -0.9692660,  0.0556434,\\n\t\t-1.5371385,  1.8760108, -0.2040259,\\n\t\t-0.4985314,  0.0415560,  1.0572252\\n\t);\\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\t}\\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\t}\\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\t}\\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\t\txyz /= 1.0685e-7;\\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\t\treturn rgb;\\n\t}\\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\t\tvec3 I;\\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\t\tif ( cosTheta2Sq < 0.0 ) {\\n\t\t\treturn vec3( 1.0 );\\n\t\t}\\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\t\tfloat T121 = 1.0 - R12;\\n\t\tfloat phi12 = 0.0;\\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\t\tfloat phi21 = PI - phi12;\\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\t\tvec3 phi23 = vec3( 0.0 );\\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\t\tvec3 phi = vec3( phi21 ) + phi23;\\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\t\tvec3 r123 = sqrt( R123 );\\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\t\tvec3 C0 = R12 + Rs;\\n\t\tI = C0;\\n\t\tvec3 Cm = Rs - T121;\\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\\n\t\t\tCm *= r123;\\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\t\t\tI += Cm * Sm;\\n\t\t}\\n\t\treturn max( I, vec3( 0.0 ) );\\n\t}\\n#endif\"",
        "\"#ifdef USE_BUMPMAP\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\tvec2 dHdxy_fwd() {\\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\t\treturn vec2( dBx, dBy );\\n\t}\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\t\tvec3 vN = surf_norm;\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\t}\\n#endif\"",
        "\"#if NUM_CLIPPING_PLANES > 0\\n\tvec4 plane;\\n\t#ifdef ALPHA_TO_COVERAGE\\n\t\tfloat distanceToPlane, distanceGradient;\\n\t\tfloat clipOpacity = 1.0;\\n\t\t#pragma unroll_loop_start\\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\t\t\tplane = clippingPlanes[ i ];\\n\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\t\t\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\t\t\tif ( clipOpacity == 0.0 ) discard;\\n\t\t}\\n\t\t#pragma unroll_loop_end\\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\t\t\tfloat unionClipOpacity = 1.0;\\n\t\t\t#pragma unroll_loop_start\\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\t\t\t\tplane = clippingPlanes[ i ];\\n\t\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\t\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\t\t\t\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\t\t\t}\\n\t\t\t#pragma unroll_loop_end\\n\t\t\tclipOpacity *= 1.0 - unionClipOpacity;\\n\t\t#endif\\n\t\tdiffuseColor.a *= clipOpacity;\\n\t\tif ( diffuseColor.a == 0.0 ) discard;\\n\t#else\\n\t\t#pragma unroll_loop_start\\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\t\t\tplane = clippingPlanes[ i ];\\n\t\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\t\t}\\n\t\t#pragma unroll_loop_end\\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\t\t\tbool clipped = true;\\n\t\t\t#pragma unroll_loop_start\\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\t\t\t\tplane = clippingPlanes[ i ];\\n\t\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\t\t\t}\\n\t\t\t#pragma unroll_loop_end\\n\t\t\tif ( clipped ) discard;\\n\t\t#endif\\n\t#endif\\n#endif\"",
        "\"#if NUM_CLIPPING_PLANES > 0\\n\tvarying vec3 vClipPosition;\\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\"",
        "\"#if NUM_CLIPPING_PLANES > 0\\n\tvarying vec3 vClipPosition;\\n#endif\"",
        "\"#if NUM_CLIPPING_PLANES > 0\\n\tvClipPosition = - mvPosition.xyz;\\n#endif\"",
        "\"#if defined( USE_COLOR_ALPHA )\\n\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\tdiffuseColor.rgb *= vColor;\\n#endif\"",
        "\"#if defined( USE_COLOR_ALPHA )\\n\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\tvarying vec3 vColor;\\n#endif\"",
        "\"#if defined( USE_COLOR_ALPHA )\\n\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\tvarying vec3 vColor;\\n#endif\"",
        "\"#if defined( USE_COLOR_ALPHA )\\n\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\tvColor.xyz *= instanceColor.xyz;\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\\n\tvColor.xyz *= batchingColor.xyz;\\n#endif\"",
        "\"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\tfloat precisionSafeLength( vec3 v ) {\\n\t\tfloat maxComponent = max3( abs( v ) );\\n\t\treturn length( v / maxComponent ) * maxComponent;\\n\t}\\n#endif\\nstruct IncidentLight {\\n\tvec3 color;\\n\tvec3 direction;\\n\tbool visible;\\n};\\nstruct ReflectedLight {\\n\tvec3 directDiffuse;\\n\tvec3 directSpecular;\\n\tvec3 indirectDiffuse;\\n\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\tmat3 tmp;\\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\treturn tmp;\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\"",
        "\"#ifdef ENVMAP_TYPE_CUBE_UV\\n\t#define cubeUV_minMipLevel 4.0\\n\t#define cubeUV_minTileSize 16.0\\n\tfloat getFace( vec3 direction ) {\\n\t\tvec3 absDirection = abs( direction );\\n\t\tfloat face = - 1.0;\\n\t\tif ( absDirection.x > absDirection.z ) {\\n\t\t\tif ( absDirection.x > absDirection.y )\\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\t\t\telse\\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\t\t} else {\\n\t\t\tif ( absDirection.z > absDirection.y )\\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\t\t\telse\\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\t\t}\\n\t\treturn face;\\n\t}\\n\tvec2 getUV( vec3 direction, float face ) {\\n\t\tvec2 uv;\\n\t\tif ( face == 0.0 ) {\\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\t\t} else if ( face == 1.0 ) {\\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\t\t} else if ( face == 2.0 ) {\\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\t\t} else if ( face == 3.0 ) {\\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\t\t} else if ( face == 4.0 ) {\\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\t\t} else {\\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\t\t}\\n\t\treturn 0.5 * ( uv + 1.0 );\\n\t}\\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\t\tfloat face = getFace( direction );\\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\t\tfloat faceSize = exp2( mipInt );\\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\t\tif ( face > 2.0 ) {\\n\t\t\tuv.y += faceSize;\\n\t\t\tface -= 3.0;\\n\t\t}\\n\t\tuv.x += face * faceSize;\\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\t\t#ifdef texture2DGradEXT\\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\t\t#else\\n\t\t\treturn texture2D( envMap, uv ).rgb;\\n\t\t#endif\\n\t}\\n\t#define cubeUV_r0 1.0\\n\t#define cubeUV_m0 - 2.0\\n\t#define cubeUV_r1 0.8\\n\t#define cubeUV_m1 - 1.0\\n\t#define cubeUV_r4 0.4\\n\t#define cubeUV_m4 2.0\\n\t#define cubeUV_r5 0.305\\n\t#define cubeUV_m5 3.0\\n\t#define cubeUV_r6 0.21\\n\t#define cubeUV_m6 4.0\\n\tfloat roughnessToMip( float roughness ) {\\n\t\tfloat mip = 0.0;\\n\t\tif ( roughness >= cubeUV_r1 ) {\\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\t\t} else if ( roughness >= cubeUV_r4 ) {\\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\t\t} else if ( roughness >= cubeUV_r5 ) {\\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\t\t} else if ( roughness >= cubeUV_r6 ) {\\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\t\t} else {\\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\\n\t\treturn mip;\\n\t}\\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\t\tfloat mipF = fract( mip );\\n\t\tfloat mipInt = floor( mip );\\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\t\tif ( mipF == 0.0 ) {\\n\t\t\treturn vec4( color0, 1.0 );\\n\t\t} else {\\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\t\t}\\n\t}\\n#endif\"",
        "\"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\tmat3 bm = mat3( batchingMatrix );\\n\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\ttransformedNormal = bm * transformedNormal;\\n\t#ifdef USE_TANGENT\\n\t\ttransformedTangent = bm * transformedTangent;\\n\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\tmat3 im = mat3( instanceMatrix );\\n\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\ttransformedNormal = im * transformedNormal;\\n\t#ifdef USE_TANGENT\\n\t\ttransformedTangent = im * transformedTangent;\\n\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\t#ifdef FLIP_SIDED\\n\t\ttransformedTangent = - transformedTangent;\\n\t#endif\\n#endif\"",
        "\"#ifdef USE_DISPLACEMENTMAP\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n#endif\"",
        "\"#ifdef USE_DISPLACEMENTMAP\\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\"",
        "\"#ifdef USE_EMISSIVEMAP\\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\"",
        "\"#ifdef USE_EMISSIVEMAP\\n\tuniform sampler2D emissiveMap;\\n#endif\"",
        "\"gl_FragColor = linearToOutputTexel( gl_FragColor );\"",
        "\"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\"",
        "\"#ifdef USE_ENVMAP\\n\t#ifdef ENV_WORLDPOS\\n\t\tvec3 cameraToFrag;\\n\t\tif ( isOrthographic ) {\\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\t\t} else {\\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\t\t}\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#else\\n\t\tvec3 reflectVec = vReflect;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\t#else\\n\t\tvec4 envColor = vec4( 0.0 );\\n\t#endif\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\t#endif\\n#endif\"",
        "\"#ifdef USE_ENVMAP\\n\tuniform float envMapIntensity;\\n\tuniform float flipEnvMap;\\n\tuniform mat3 envMapRotation;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\t\\n#endif\"",
        "\"#ifdef USE_ENVMAP\\n\tuniform float reflectivity;\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\t\t#define ENV_WORLDPOS\\n\t#endif\\n\t#ifdef ENV_WORLDPOS\\n\t\tvarying vec3 vWorldPosition;\\n\t\tuniform float refractionRatio;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t#endif\\n#endif\"",
        "\"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\t\t#define ENV_WORLDPOS\\n\t#endif\\n\t#ifdef ENV_WORLDPOS\\n\t\t\\n\t\tvarying vec3 vWorldPosition;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t\tuniform float refractionRatio;\\n\t#endif\\n#endif\"",
        "\"#ifdef USE_ENVMAP\\n\t#ifdef ENV_WORLDPOS\\n\t\tvWorldPosition = worldPosition.xyz;\\n\t#else\\n\t\tvec3 cameraToVertex;\\n\t\tif ( isOrthographic ) {\\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\t\t} else {\\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\t\t}\\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#endif\\n#endif\"",
        "\"#ifdef USE_FOG\\n\tvFogDepth = - mvPosition.z;\\n#endif\"",
        "\"#ifdef USE_FOG\\n\tvarying float vFogDepth;\\n#endif\"",
        "\"#ifdef USE_FOG\\n\t#ifdef FOG_EXP2\\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\t#else\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\t#endif\\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\"",
        "\"#ifdef USE_FOG\\n\tuniform vec3 fogColor;\\n\tvarying float vFogDepth;\\n\t#ifdef FOG_EXP2\\n\t\tuniform float fogDensity;\\n\t#else\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n#endif\"",
        "\"#ifdef USE_GRADIENTMAP\\n\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\tfloat dotNL = dot( normal, lightDirection );\\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\t#ifdef USE_GRADIENTMAP\\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\\n\t#else\\n\t\tvec2 fw = fwidth( coord ) * 0.5;\\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\t#endif\\n}\"",
        "\"#ifdef USE_LIGHTMAP\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n#endif\"",
        "\"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\"",
        "\"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\tvec3 diffuseColor;\\n\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert\"",
        "\"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\tvec3 irradiance = ambientLightColor;\\n\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\tif ( cutoffDistance > 0.0 ) {\\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\t}\\n\treturn distanceFalloff;\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\tstruct DirectionalLight {\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t};\\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\t\tlight.color = directionalLight.color;\\n\t\tlight.direction = directionalLight.direction;\\n\t\tlight.visible = true;\\n\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\tstruct PointLight {\\n\t\tvec3 position;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t};\\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\t\tvec3 lVector = pointLight.position - geometryPosition;\\n\t\tlight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tlight.color = pointLight.color;\\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tstruct SpotLight {\\n\t\tvec3 position;\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tfloat coneCos;\\n\t\tfloat penumbraCos;\\n\t};\\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\t\tvec3 lVector = spotLight.position - geometryPosition;\\n\t\tlight.direction = normalize( lVector );\\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\t\tif ( spotAttenuation > 0.0 ) {\\n\t\t\tfloat lightDistance = length( lVector );\\n\t\t\tlight.color = spotLight.color * spotAttenuation;\\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\t\t} else {\\n\t\t\tlight.color = vec3( 0.0 );\\n\t\t\tlight.visible = false;\\n\t\t}\\n\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\tstruct RectAreaLight {\\n\t\tvec3 color;\\n\t\tvec3 position;\\n\t\tvec3 halfWidth;\\n\t\tvec3 halfHeight;\\n\t};\\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tstruct HemisphereLight {\\n\t\tvec3 direction;\\n\t\tvec3 skyColor;\\n\t\tvec3 groundColor;\\n\t};\\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\t\treturn irradiance;\\n\t}\\n#endif\"",
        "\"#ifdef USE_ENVMAP\\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\\n\t\t#else\\n\t\t\treturn vec3( 0.0 );\\n\t\t#endif\\n\t}\\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\\n\t\t\treturn envMapColor.rgb * envMapIntensity;\\n\t\t#else\\n\t\t\treturn vec3( 0.0 );\\n\t\t#endif\\n\t}\\n\t#ifdef USE_ANISOTROPY\\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\t\t\t#else\\n\t\t\t\treturn vec3( 0.0 );\\n\t\t\t#endif\\n\t\t}\\n\t#endif\\n#endif\"",
        "\"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\"",
        "\"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\"",
        "\"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\"",
        "\"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\tvec3 diffuseColor;\\n\tvec3 specularColor;\\n\tfloat specularShininess;\\n\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\"",
        "\"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\tmaterial.ior = ior;\\n\t#ifdef USE_SPECULAR\\n\t\tfloat specularIntensityFactor = specularIntensity;\\n\t\tvec3 specularColorFactor = specularColor;\\n\t\t#ifdef USE_SPECULAR_COLORMAP\\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\t\t#endif\\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\t\t#endif\\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\t#else\\n\t\tfloat specularIntensityFactor = 1.0;\\n\t\tvec3 specularColorFactor = vec3( 1.0 );\\n\t\tmaterial.specularF90 = 1.0;\\n\t#endif\\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\tmaterial.clearcoat = clearcoat;\\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\tmaterial.clearcoatF90 = 1.0;\\n\t#ifdef USE_CLEARCOATMAP\\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\t#endif\\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\t#endif\\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\tmaterial.clearcoatRoughness += geometryRoughness;\\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_DISPERSION\\n\tmaterial.dispersion = dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\tmaterial.iridescence = iridescence;\\n\tmaterial.iridescenceIOR = iridescenceIOR;\\n\t#ifdef USE_IRIDESCENCEMAP\\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\t#endif\\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\t#else\\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\tmaterial.sheenColor = sheenColor;\\n\t#ifdef USE_SHEEN_COLORMAP\\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\t#endif\\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\t#ifdef USE_ANISOTROPYMAP\\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\t#else\\n\t\tvec2 anisotropyV = anisotropyVector;\\n\t#endif\\n\tmaterial.anisotropy = length( anisotropyV );\\n\tif( material.anisotropy == 0.0 ) {\\n\t\tanisotropyV = vec2( 1.0, 0.0 );\\n\t} else {\\n\t\tanisotropyV /= material.anisotropy;\\n\t\tmaterial.anisotropy = saturate( material.anisotropy );\\n\t}\\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\"",
        "\"struct PhysicalMaterial {\\n\tvec3 diffuseColor;\\n\tfloat roughness;\\n\tvec3 specularColor;\\n\tfloat specularF90;\\n\tfloat dispersion;\\n\t#ifdef USE_CLEARCOAT\\n\t\tfloat clearcoat;\\n\t\tfloat clearcoatRoughness;\\n\t\tvec3 clearcoatF0;\\n\t\tfloat clearcoatF90;\\n\t#endif\\n\t#ifdef USE_IRIDESCENCE\\n\t\tfloat iridescence;\\n\t\tfloat iridescenceIOR;\\n\t\tfloat iridescenceThickness;\\n\t\tvec3 iridescenceFresnel;\\n\t\tvec3 iridescenceF0;\\n\t#endif\\n\t#ifdef USE_SHEEN\\n\t\tvec3 sheenColor;\\n\t\tfloat sheenRoughness;\\n\t#endif\\n\t#ifdef IOR\\n\t\tfloat ior;\\n\t#endif\\n\t#ifdef USE_TRANSMISSION\\n\t\tfloat transmission;\\n\t\tfloat transmissionAlpha;\\n\t\tfloat thickness;\\n\t\tfloat attenuationDistance;\\n\t\tvec3 attenuationColor;\\n\t#endif\\n\t#ifdef USE_ANISOTROPY\\n\t\tfloat anisotropy;\\n\t\tfloat alphaT;\\n\t\tvec3 anisotropyT;\\n\t\tvec3 anisotropyB;\\n\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\t\tfloat v = 0.5 / ( gv + gl );\\n\t\treturn saturate(v);\\n\t}\\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\t\tfloat a2 = alphaT * alphaB;\\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\t\thighp float v2 = dot( v, v );\\n\t\tfloat w2 = a2 / v2;\\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\t\tvec3 f0 = material.clearcoatF0;\\n\t\tfloat f90 = material.clearcoatF90;\\n\t\tfloat roughness = material.clearcoatRoughness;\\n\t\tfloat alpha = pow2( roughness );\\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\t\tfloat D = D_GGX( alpha, dotNH );\\n\t\treturn F * ( V * D );\\n\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\tvec3 f0 = material.specularColor;\\n\tfloat f90 = material.specularF90;\\n\tfloat roughness = material.roughness;\\n\tfloat alpha = pow2( roughness );\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\t#ifdef USE_IRIDESCENCE\\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\t#endif\\n\t#ifdef USE_ANISOTROPY\\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\t#else\\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\t\tfloat D = D_GGX( alpha, dotNH );\\n\t#endif\\n\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\tconst float LUT_SIZE = 64.0;\\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\tfloat dotNV = saturate( dot( N, V ) );\\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\tfloat l = length( f );\\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\tfloat x = dot( v1, v2 );\\n\tfloat y = abs( x );\\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\tfloat v = a / b;\\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\tvec3 lightNormal = cross( v1, v2 );\\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\tvec3 T1, T2;\\n\tT1 = normalize( V - N * dot( V, N ) );\\n\tT2 = - cross( N, T1 );\\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\tvec3 coords[ 4 ];\\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\tvec3 vectorFormFactor = vec3( 0.0 );\\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\tfloat alpha = pow2( roughness );\\n\tfloat invAlpha = 1.0 / alpha;\\n\tfloat cos2h = dotNH * dotNH;\\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\tfloat V = V_Neubelt( dotNV, dotNL );\\n\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat r2 = roughness * roughness;\\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\tvec4 r = roughness * c0 + c1;\\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\t#ifdef USE_IRIDESCENCE\\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\t#else\\n\t\tvec3 Fr = specularColor;\\n\t#endif\\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\tfloat Ess = fab.x + fab.y;\\n\tfloat Ems = 1.0 - Ess;\\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\tsingleScatter += FssEss;\\n\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\t\tvec3 normal = geometryNormal;\\n\t\tvec3 viewDir = geometryViewDir;\\n\t\tvec3 position = geometryPosition;\\n\t\tvec3 lightPos = rectAreaLight.position;\\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\t\tvec3 lightColor = rectAreaLight.color;\\n\t\tfloat roughness = material.roughness;\\n\t\tvec3 rectCoords[ 4 ];\\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\t\tvec4 t1 = texture2D( ltc_1, uv );\\n\t\tvec4 t2 = texture2D( ltc_2, uv );\\n\t\tmat3 mInv = mat3(\\n\t\t\tvec3( t1.x, 0, t1.y ),\\n\t\t\tvec3(    0, 1,    0 ),\\n\t\t\tvec3( t1.z, 0, t1.w )\\n\t\t);\\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifdef USE_CLEARCOAT\\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\t#endif\\n\t#ifdef USE_SHEEN\\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\t#endif\\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\t#ifdef USE_CLEARCOAT\\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\t#endif\\n\t#ifdef USE_SHEEN\\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\t#endif\\n\tvec3 singleScattering = vec3( 0.0 );\\n\tvec3 multiScattering = vec3( 0.0 );\\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\t#ifdef USE_IRIDESCENCE\\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\t#else\\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\t#endif\\n\tvec3 totalScattering = singleScattering + multiScattering;\\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_Physical\\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\"",
        "\"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\tif ( material.iridescenceThickness == 0.0 ) {\\n\t\tmaterial.iridescence = 0.0;\\n\t} else {\\n\t\tmaterial.iridescence = saturate( material.iridescence );\\n\t}\\n\tif ( material.iridescence > 0.0 ) {\\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tPointLight pointLight;\\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\tPointLightShadow pointLightShadow;\\n\t#endif\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\t\tpointLightShadow = pointLightShadows[ i ];\\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\t}\\n\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tSpotLight spotLight;\\n\tvec4 spotColor;\\n\tvec3 spotLightCoord;\\n\tbool inSpotLightMap;\\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\tSpotLightShadow spotLightShadow;\\n\t#endif\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\t\t#else\\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\t\t#endif\\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\t\t#endif\\n\t\t#undef SPOT_LIGHT_MAP_INDEX\\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\t\tspotLightShadow = spotLightShadows[ i ];\\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\t}\\n\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\tDirectionalLight directionalLight;\\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\tDirectionalLightShadow directionalLightShadow;\\n\t#endif\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\t}\\n\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\tRectAreaLight rectAreaLight;\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\t\trectAreaLight = rectAreaLights[ i ];\\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\t}\\n\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\tvec3 iblIrradiance = vec3( 0.0 );\\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\t#if defined( USE_LIGHT_PROBES )\\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\t#endif\\n\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\t\t#pragma unroll_loop_start\\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\t\t}\\n\t\t#pragma unroll_loop_end\\n\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\tvec3 radiance = vec3( 0.0 );\\n\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\"",
        "\"#if defined( RE_IndirectDiffuse )\\n\t#ifdef USE_LIGHTMAP\\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\t\tirradiance += lightMapIrradiance;\\n\t#endif\\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\t#ifdef USE_ANISOTROPY\\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\t#else\\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\t#endif\\n\t#ifdef USE_CLEARCOAT\\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\t#endif\\n#endif\"",
        "\"#if defined( RE_IndirectDiffuse )\\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\"",
        "\"#if defined( USE_LOGDEPTHBUF )\\n\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\"",
        "\"#if defined( USE_LOGDEPTHBUF )\\n\tuniform float logDepthBufFC;\\n\tvarying float vFragDepth;\\n\tvarying float vIsPerspective;\\n#endif\"",
        "\"#ifdef USE_LOGDEPTHBUF\\n\tvarying float vFragDepth;\\n\tvarying float vIsPerspective;\\n#endif\"",
        "\"#ifdef USE_LOGDEPTHBUF\\n\tvFragDepth = 1.0 + gl_Position.w;\\n\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n#endif\"",
        "\"#ifdef USE_MAP\\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\t#ifdef DECODE_VIDEO_TEXTURE\\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\t\\n\t#endif\\n\tdiffuseColor *= sampledDiffuseColor;\\n#endif\"",
        "\"#ifdef USE_MAP\\n\tuniform sampler2D map;\\n#endif\"",
        "\"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\t#if defined( USE_POINTS_UV )\\n\t\tvec2 uv = vUv;\\n\t#else\\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\t#endif\\n#endif\\n#ifdef USE_MAP\\n\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\"",
        "\"#if defined( USE_POINTS_UV )\\n\tvarying vec2 vUv;\\n#else\\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\t\tuniform mat3 uvTransform;\\n\t#endif\\n#endif\\n#ifdef USE_MAP\\n\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\tuniform sampler2D alphaMap;\\n#endif\"",
        "\"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\tmetalnessFactor *= texelMetalness.b;\\n#endif\"",
        "\"#ifdef USE_METALNESSMAP\\n\tuniform sampler2D metalnessMap;\\n#endif\"",
        "\"#ifdef USE_INSTANCING_MORPH\\n\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\t\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\\n\t}\\n#endif\"",
        "\"#if defined( USE_MORPHCOLORS )\\n\tvColor *= morphTargetBaseInfluence;\\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\t\t#if defined( USE_COLOR_ALPHA )\\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\t\t#elif defined( USE_COLOR )\\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\t\t#endif\\n\t}\\n#endif\"",
        "\"#ifdef USE_MORPHNORMALS\\n\tobjectNormal *= morphTargetBaseInfluence;\\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\t}\\n#endif\"",
        "\"#ifdef USE_MORPHTARGETS\\n\t#ifndef USE_INSTANCING_MORPH\\n\t\tuniform float morphTargetBaseInfluence;\\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\t#endif\\n\tuniform sampler2DArray morphTargetsTexture;\\n\tuniform ivec2 morphTargetsTextureSize;\\n\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\t\tint y = texelIndex / morphTargetsTextureSize.x;\\n\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\t}\\n#endif\"",
        "\"#ifdef USE_MORPHTARGETS\\n\ttransformed *= morphTargetBaseInfluence;\\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\t}\\n#endif\"",
        "\"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\tvec3 normal = normalize( vNormal );\\n\t#ifdef DOUBLE_SIDED\\n\t\tnormal *= faceDirection;\\n\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\t#ifdef USE_TANGENT\\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\t#else\\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\t\t#if defined( USE_NORMALMAP )\\n\t\t\tvNormalMapUv\\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\t\t\tvClearcoatNormalMapUv\\n\t\t#else\\n\t\t\tvUv\\n\t\t#endif\\n\t\t);\\n\t#endif\\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\t\ttbn[0] *= faceDirection;\\n\t\ttbn[1] *= faceDirection;\\n\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\t#ifdef USE_TANGENT\\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\t#else\\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\t#endif\\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\t\ttbn2[0] *= faceDirection;\\n\t\ttbn2[1] *= faceDirection;\\n\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\"",
        "\"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\t#ifdef FLIP_SIDED\\n\t\tnormal = - normal;\\n\t#endif\\n\t#ifdef DOUBLE_SIDED\\n\t\tnormal = normal * faceDirection;\\n\t#endif\\n\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\tmapN.xy *= normalScale;\\n\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\"",
        "\"#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n\t#ifdef USE_TANGENT\\n\t\tvarying vec3 vTangent;\\n\t\tvarying vec3 vBitangent;\\n\t#endif\\n#endif\"",
        "\"#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n\t#ifdef USE_TANGENT\\n\t\tvarying vec3 vTangent;\\n\t\tvarying vec3 vBitangent;\\n\t#endif\\n#endif\"",
        "\"#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n\t#ifdef USE_TANGENT\\n\t\tvTangent = normalize( transformedTangent );\\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\t#endif\\n#endif\"",
        "\"#ifdef USE_NORMALMAP\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( uv.st );\\n\t\tvec2 st1 = dFdy( uv.st );\\n\t\tvec3 N = surf_norm;\\n\t\tvec3 q1perp = cross( q1, N );\\n\t\tvec3 q0perp = cross( N, q0 );\\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\t\treturn mat3( T * scale, B * scale, N );\\n\t}\\n#endif\"",
        "\"#ifdef USE_CLEARCOAT\\n\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\"",
        "\"#ifdef USE_CLEARCOAT_NORMALMAP\\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\"",
        "\"#ifdef USE_CLEARCOATMAP\\n\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\tuniform sampler2D clearcoatNormalMap;\\n\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\"",
        "\"#ifdef USE_IRIDESCENCEMAP\\n\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\tuniform sampler2D iridescenceThicknessMap;\\n#endif\"",
        "\"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\"",
        "\"vec3 packNormalToRGB( const in vec3 normal ) {\\n\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\\nconst float Inv255 = 1. / 255.;\\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\\nvec4 packDepthToRGBA( const in float v ) {\\n\tif( v <= 0.0 )\\n\t\treturn vec4( 0., 0., 0., 0. );\\n\tif( v >= 1.0 )\\n\t\treturn vec4( 1., 1., 1., 1. );\\n\tfloat vuf;\\n\tfloat af = modf( v * PackFactors.a, vuf );\\n\tfloat bf = modf( vuf * ShiftRight8, vuf );\\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\\n\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\\n}\\nvec3 packDepthToRGB( const in float v ) {\\n\tif( v <= 0.0 )\\n\t\treturn vec3( 0., 0., 0. );\\n\tif( v >= 1.0 )\\n\t\treturn vec3( 1., 1., 1. );\\n\tfloat vuf;\\n\tfloat bf = modf( v * PackFactors.b, vuf );\\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\\n\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\\n}\\nvec2 packDepthToRG( const in float v ) {\\n\tif( v <= 0.0 )\\n\t\treturn vec2( 0., 0. );\\n\tif( v >= 1.0 )\\n\t\treturn vec2( 1., 1. );\\n\tfloat vuf;\\n\tfloat gf = modf( v * 256., vuf );\\n\treturn vec2( vuf * Inv255, gf );\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\treturn dot( v, UnpackFactors4 );\\n}\\nfloat unpackRGBToDepth( const in vec3 v ) {\\n\treturn dot( v, UnpackFactors3 );\\n}\\nfloat unpackRGToDepth( const in vec2 v ) {\\n\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\\n}\\nvec4 pack2HalfToRGBA( const in vec2 v ) {\\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( const in vec4 v ) {\\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\"",
        "\"#ifdef PREMULTIPLIED_ALPHA\\n\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\"",
        "\"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\"",
        "\"#ifdef DITHERING\\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\"",
        "\"#ifdef DITHERING\\n\tvec3 dithering( vec3 color ) {\\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\t\treturn color + dither_shift_RGB;\\n\t}\\n#endif\"",
        "\"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\troughnessFactor *= texelRoughness.g;\\n#endif\"",
        "\"#ifdef USE_ROUGHNESSMAP\\n\tuniform sampler2D roughnessMap;\\n#endif\"",
        "\"#if NUM_SPOT_LIGHT_COORDS > 0\\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\t\tstruct DirectionalLightShadow {\\n\t\t\tfloat shadowIntensity;\\n\t\t\tfloat shadowBias;\\n\t\t\tfloat shadowNormalBias;\\n\t\t\tfloat shadowRadius;\\n\t\t\tvec2 shadowMapSize;\\n\t\t};\\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\t\tstruct SpotLightShadow {\\n\t\t\tfloat shadowIntensity;\\n\t\t\tfloat shadowBias;\\n\t\t\tfloat shadowNormalBias;\\n\t\t\tfloat shadowRadius;\\n\t\t\tvec2 shadowMapSize;\\n\t\t};\\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\t\tstruct PointLightShadow {\\n\t\t\tfloat shadowIntensity;\\n\t\t\tfloat shadowBias;\\n\t\t\tfloat shadowNormalBias;\\n\t\t\tfloat shadowRadius;\\n\t\t\tvec2 shadowMapSize;\\n\t\t\tfloat shadowCameraNear;\\n\t\t\tfloat shadowCameraFar;\\n\t\t};\\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\t#endif\\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\t}\\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\t}\\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\t\tfloat occlusion = 1.0;\\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\t\tfloat hard_shadow = step( compare , distribution.x );\\n\t\tif (hard_shadow != 1.0 ) {\\n\t\t\tfloat distance = compare - distribution.x ;\\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\t\t}\\n\t\treturn occlusion;\\n\t}\\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tfloat shadow = 1.0;\\n\t\tshadowCoord.xyz /= shadowCoord.w;\\n\t\tshadowCoord.z += shadowBias;\\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\t\tif ( frustumTest ) {\\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\tfloat dx2 = dx0 / 2.0;\\n\t\t\tfloat dy2 = dy0 / 2.0;\\n\t\t\tfloat dx3 = dx1 / 2.0;\\n\t\t\tfloat dy3 = dy1 / 2.0;\\n\t\t\tshadow = (\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 17.0 );\\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx = texelSize.x;\\n\t\t\tfloat dy = texelSize.y;\\n\t\t\tvec2 uv = shadowCoord.xy;\\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\t\t\tuv -= f * texelSize;\\n\t\t\tshadow = (\\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\t\t\t\t\t f.x ) +\\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\t\t\t\t\t f.x ) +\\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\t\t\t\t\t f.y ) +\\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\t\t\t\t\t f.y ) +\\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\t\t\t\t\t\t  f.x ),\\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\t\t\t\t\t\t  f.x ),\\n\t\t\t\t\t f.y )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\t\t#else\\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\t\t#endif\\n\t\t}\\n\t\treturn mix( 1.0, shadow, shadowIntensity );\\n\t}\\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\t\tvec3 absV = abs( v );\\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\t\tabsV *= scaleToCube;\\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\t\tvec2 planar = v.xy;\\n\t\tfloat almostATexel = 1.5 * texelSizeY;\\n\t\tfloat almostOne = 1.0 - almostATexel;\\n\t\tif ( absV.z >= almostOne ) {\\n\t\t\tif ( v.z > 0.0 )\\n\t\t\t\tplanar.x = 4.0 - v.x;\\n\t\t} else if ( absV.x >= almostOne ) {\\n\t\t\tfloat signX = sign( v.x );\\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\\n\t\t} else if ( absV.y >= almostOne ) {\\n\t\t\tfloat signY = sign( v.y );\\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\t\t\tplanar.y = v.z * signY - 2.0;\\n\t\t}\\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\t}\\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\t\tfloat shadow = 1.0;\\n\t\tvec3 lightToPosition = shadowCoord.xyz;\\n\t\t\\n\t\tfloat lightToPositionLength = length( lightToPosition );\\n\t\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\\n\t\t\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\t\tdp += shadowBias;\\n\t\t\tvec3 bd3D = normalize( lightToPosition );\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\t\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\t\t\t\tshadow = (\\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\t\t\t\t) * ( 1.0 / 9.0 );\\n\t\t\t#else\\n\t\t\t\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\t\t\t#endif\\n\t\t}\\n\t\treturn mix( 1.0, shadow, shadowIntensity );\\n\t}\\n#endif\"",
        "\"#if NUM_SPOT_LIGHT_COORDS > 0\\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\t\tstruct DirectionalLightShadow {\\n\t\t\tfloat shadowIntensity;\\n\t\t\tfloat shadowBias;\\n\t\t\tfloat shadowNormalBias;\\n\t\t\tfloat shadowRadius;\\n\t\t\tvec2 shadowMapSize;\\n\t\t};\\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\t\tstruct SpotLightShadow {\\n\t\t\tfloat shadowIntensity;\\n\t\t\tfloat shadowBias;\\n\t\t\tfloat shadowNormalBias;\\n\t\t\tfloat shadowRadius;\\n\t\t\tvec2 shadowMapSize;\\n\t\t};\\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\t\tstruct PointLightShadow {\\n\t\t\tfloat shadowIntensity;\\n\t\t\tfloat shadowBias;\\n\t\t\tfloat shadowNormalBias;\\n\t\t\tfloat shadowRadius;\\n\t\t\tvec2 shadowMapSize;\\n\t\t\tfloat shadowCameraNear;\\n\t\t\tfloat shadowCameraFar;\\n\t\t};\\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\t#endif\\n#endif\"",
        "\"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\t\t#pragma unroll_loop_start\\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\t\t}\\n\t\t#pragma unroll_loop_end\\n\t#endif\\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\t\t#pragma unroll_loop_start\\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\t\t}\\n\t\t#pragma unroll_loop_end\\n\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\t\tshadowWorldPosition = worldPosition;\\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\t\t#endif\\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\t}\\n\t#pragma unroll_loop_end\\n#endif\"",
        "\"float getShadowMask() {\\n\tfloat shadow = 1.0;\\n\t#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\tDirectionalLightShadow directionalLight;\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\t\tdirectionalLight = directionalLightShadows[ i ];\\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#pragma unroll_loop_end\\n\t#endif\\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\tSpotLightShadow spotLight;\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\t\tspotLight = spotLightShadows[ i ];\\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\t}\\n\t#pragma unroll_loop_end\\n\t#endif\\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\tPointLightShadow pointLight;\\n\t#pragma unroll_loop_start\\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\t\tpointLight = pointLightShadows[ i ];\\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\t}\\n\t#pragma unroll_loop_end\\n\t#endif\\n\t#endif\\n\treturn shadow;\\n}\"",
        "\"#ifdef USE_SKINNING\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\"",
        "\"#ifdef USE_SKINNING\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\tuniform highp sampler2D boneTexture;\\n\tmat4 getBoneMatrix( const in float i ) {\\n\t\tint size = textureSize( boneTexture, 0 ).x;\\n\t\tint j = int( i ) * 4;\\n\t\tint x = j % size;\\n\t\tint y = j / size;\\n\t\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\t\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\t\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\t\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\t\treturn mat4( v1, v2, v3, v4 );\\n\t}\\n#endif\"",
        "\"#ifdef USE_SKINNING\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\"",
        "\"#ifdef USE_SKINNING\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\t#ifdef USE_TANGENT\\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\t#endif\\n#endif\"",
        "\"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\tspecularStrength = texelSpecular.r;\\n#else\\n\tspecularStrength = 1.0;\\n#endif\"",
        "\"#ifdef USE_SPECULARMAP\\n\tuniform sampler2D specularMap;\\n#endif\"",
        "\"#if defined( TONE_MAPPING )\\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\"",
        "\"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\tcolor *= toneMappingExposure;\\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\tcolor *= toneMappingExposure;\\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\tconst mat3 ACESInputMat = mat3(\\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\\n\t);\\n\tconst mat3 ACESOutputMat = mat3(\\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\\n\t);\\n\tcolor *= toneMappingExposure / 0.6;\\n\tcolor = ACESInputMat * color;\\n\tcolor = RRTAndODTFit( color );\\n\tcolor = ACESOutputMat * color;\\n\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\tvec3 x2 = x * x;\\n\tvec3 x4 = x2 * x2;\\n\treturn + 15.5 * x4 * x2\\n\t\t- 40.14 * x4 * x\\n\t\t+ 31.96 * x4\\n\t\t- 6.868 * x2 * x\\n\t\t+ 0.4298 * x2\\n\t\t+ 0.1191 * x\\n\t\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\tconst mat3 AgXInsetMatrix = mat3(\\n\t\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\t\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\t\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\t);\\n\tconst mat3 AgXOutsetMatrix = mat3(\\n\t\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\t\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\t\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\t);\\n\tconst float AgxMinEv = - 12.47393;\tconst float AgxMaxEv = 4.026069;\\n\tcolor *= toneMappingExposure;\\n\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\tcolor = AgXInsetMatrix * color;\\n\tcolor = max( color, 1e-10 );\tcolor = log2( color );\\n\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\tcolor = clamp( color, 0.0, 1.0 );\\n\tcolor = agxDefaultContrastApprox( color );\\n\tcolor = AgXOutsetMatrix * color;\\n\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\tcolor = clamp( color, 0.0, 1.0 );\\n\treturn color;\\n}\\nvec3 NeutralToneMapping( vec3 color ) {\\n\tconst float StartCompression = 0.8 - 0.04;\\n\tconst float Desaturation = 0.15;\\n\tcolor *= toneMappingExposure;\\n\tfloat x = min( color.r, min( color.g, color.b ) );\\n\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\\n\tcolor -= offset;\\n\tfloat peak = max( color.r, max( color.g, color.b ) );\\n\tif ( peak < StartCompression ) return color;\\n\tfloat d = 1. - StartCompression;\\n\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\\n\tcolor *= newPeak / peak;\\n\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\\n\treturn mix( color, vec3( newPeak ), g );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\"",
        "\"#ifdef USE_TRANSMISSION\\n\tmaterial.transmission = transmission;\\n\tmaterial.transmissionAlpha = 1.0;\\n\tmaterial.thickness = thickness;\\n\tmaterial.attenuationDistance = attenuationDistance;\\n\tmaterial.attenuationColor = attenuationColor;\\n\t#ifdef USE_TRANSMISSIONMAP\\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\t#endif\\n\t#ifdef USE_THICKNESSMAP\\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\t#endif\\n\tvec3 pos = vWorldPosition;\\n\tvec3 v = normalize( cameraPosition - pos );\\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\tvec4 transmitted = getIBLVolumeRefraction(\\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\\n\t\tmaterial.attenuationColor, material.attenuationDistance );\\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\"",
        "\"#ifdef USE_TRANSMISSION\\n\tuniform float transmission;\\n\tuniform float thickness;\\n\tuniform float attenuationDistance;\\n\tuniform vec3 attenuationColor;\\n\t#ifdef USE_TRANSMISSIONMAP\\n\t\tuniform sampler2D transmissionMap;\\n\t#endif\\n\t#ifdef USE_THICKNESSMAP\\n\t\tuniform sampler2D thicknessMap;\\n\t#endif\\n\tuniform vec2 transmissionSamplerSize;\\n\tuniform sampler2D transmissionSamplerMap;\\n\tuniform mat4 modelMatrix;\\n\tuniform mat4 projectionMatrix;\\n\tvarying vec3 vWorldPosition;\\n\tfloat w0( float a ) {\\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\t}\\n\tfloat w1( float a ) {\\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\t}\\n\tfloat w2( float a ){\\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\t}\\n\tfloat w3( float a ) {\\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\t}\\n\tfloat g0( float a ) {\\n\t\treturn w0( a ) + w1( a );\\n\t}\\n\tfloat g1( float a ) {\\n\t\treturn w2( a ) + w3( a );\\n\t}\\n\tfloat h0( float a ) {\\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\t}\\n\tfloat h1( float a ) {\\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\t}\\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\t\tuv = uv * texelSize.zw + 0.5;\\n\t\tvec2 iuv = floor( uv );\\n\t\tvec2 fuv = fract( uv );\\n\t\tfloat g0x = g0( fuv.x );\\n\t\tfloat g1x = g1( fuv.x );\\n\t\tfloat h0x = h0( fuv.x );\\n\t\tfloat h1x = h1( fuv.x );\\n\t\tfloat h0y = h0( fuv.y );\\n\t\tfloat h1y = h1( fuv.y );\\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\t}\\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\t\treturn mix( fSample, cSample, fract( lod ) );\\n\t}\\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\t\tvec3 modelScale;\\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\\n\t}\\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\t}\\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\t}\\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\t\tif ( isinf( attenuationDistance ) ) {\\n\t\t\treturn vec3( 1.0 );\\n\t\t} else {\\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\\n\t\t}\\n\t}\\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\t\tvec4 transmittedLight;\\n\t\tvec3 transmittance;\\n\t\t#ifdef USE_DISPERSION\\n\t\t\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\\n\t\t\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\\n\t\t\tfor ( int i = 0; i < 3; i ++ ) {\\n\t\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\\n\t\t\t\tvec3 refractedRayExit = position + transmissionRay;\\n\t\t\\n\t\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\t\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\t\t\t\trefractionCoords += 1.0;\\n\t\t\t\trefractionCoords /= 2.0;\\n\t\t\\n\t\t\t\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\\n\t\t\t\ttransmittedLight[ i ] = transmissionSample[ i ];\\n\t\t\t\ttransmittedLight.a += transmissionSample.a;\\n\t\t\t\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\\n\t\t\t}\\n\t\t\ttransmittedLight.a /= 3.0;\\n\t\t\\n\t\t#else\\n\t\t\\n\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\t\t\tvec3 refractedRayExit = position + transmissionRay;\\n\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\t\t\trefractionCoords += 1.0;\\n\t\t\trefractionCoords /= 2.0;\\n\t\t\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\t\t\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\t\t\\n\t\t#endif\\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\t}\\n#endif\"",
        "\"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\tuniform mat3 transmissionMapTransform;\\n\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\tuniform mat3 thicknessMapTransform;\\n\tvarying vec2 vThicknessMapUv;\\n#endif\"",
        "\"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\tuniform mat3 mapTransform;\\n\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\tuniform mat3 alphaMapTransform;\\n\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\tuniform mat3 lightMapTransform;\\n\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\tuniform mat3 aoMapTransform;\\n\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\tuniform mat3 bumpMapTransform;\\n\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\tuniform mat3 normalMapTransform;\\n\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\tuniform mat3 displacementMapTransform;\\n\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\tuniform mat3 emissiveMapTransform;\\n\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\tuniform mat3 metalnessMapTransform;\\n\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\tuniform mat3 roughnessMapTransform;\\n\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\tuniform mat3 anisotropyMapTransform;\\n\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\tuniform mat3 clearcoatMapTransform;\\n\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\tuniform mat3 clearcoatNormalMapTransform;\\n\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\tuniform mat3 clearcoatRoughnessMapTransform;\\n\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\tuniform mat3 sheenColorMapTransform;\\n\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\tuniform mat3 sheenRoughnessMapTransform;\\n\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\tuniform mat3 iridescenceMapTransform;\\n\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\tuniform mat3 iridescenceThicknessMapTransform;\\n\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\tuniform mat3 specularMapTransform;\\n\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\tuniform mat3 specularColorMapTransform;\\n\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\tuniform mat3 specularIntensityMapTransform;\\n\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\tuniform mat3 transmissionMapTransform;\\n\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\tuniform mat3 thicknessMapTransform;\\n\tvarying vec2 vThicknessMapUv;\\n#endif\"",
        "\"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\"",
        "\"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\t#ifdef USE_BATCHING\\n\t\tworldPosition = batchingMatrix * worldPosition;\\n\t#endif\\n\t#ifdef USE_INSTANCING\\n\t\tworldPosition = instanceMatrix * worldPosition;\\n\t#endif\\n\tworldPosition = modelMatrix * worldPosition;\\n#endif\"",
        "\"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\"",
        "\"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\tvec4 texColor = texture2D( t2D, vUv );\\n\t#ifdef DECODE_VIDEO_TEXTURE\\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\t#endif\\n\ttexColor.rgb *= backgroundIntensity;\\n\tgl_FragColor = texColor;\\n\t#include <tonemapping_fragment>\\n\t#include <colorspace_fragment>\\n}\"",
        "\"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\tvWorldDirection = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\tgl_Position.z = gl_Position.w;\\n}\"",
        "\"#ifdef ENVMAP_TYPE_CUBE\\n\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nuniform mat3 backgroundRotation;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\\n\t#else\\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\t#endif\\n\ttexColor.rgb *= backgroundIntensity;\\n\tgl_FragColor = texColor;\\n\t#include <tonemapping_fragment>\\n\t#include <colorspace_fragment>\\n}\"",
        "\"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\tvWorldDirection = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\tgl_Position.z = gl_Position.w;\\n}\"",
        "\"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\tgl_FragColor = texColor;\\n\tgl_FragColor.a *= opacity;\\n\t#include <tonemapping_fragment>\\n\t#include <colorspace_fragment>\\n}\"",
        "\"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <batching_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <morphinstance_vertex>\\n\t#ifdef USE_DISPLACEMENTMAP\\n\t\t#include <beginnormal_vertex>\\n\t\t#include <morphnormal_vertex>\\n\t\t#include <skinnormal_vertex>\\n\t#endif\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvHighPrecisionZW = gl_Position.zw;\\n}\"",
        "\"#if DEPTH_PACKING == 3200\\n\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\tvec4 diffuseColor = vec4( 1.0 );\\n\t#include <clipping_planes_fragment>\\n\t#if DEPTH_PACKING == 3200\\n\t\tdiffuseColor.a = opacity;\\n\t#endif\\n\t#include <map_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <alphahash_fragment>\\n\t#include <logdepthbuf_fragment>\\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\t#if DEPTH_PACKING == 3200\\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\t#elif DEPTH_PACKING == 3201\\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\t#elif DEPTH_PACKING == 3202\\n\t\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\\n\t#elif DEPTH_PACKING == 3203\\n\t\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\\n\t#endif\\n}\"",
        "\"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <batching_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <morphinstance_vertex>\\n\t#ifdef USE_DISPLACEMENTMAP\\n\t\t#include <beginnormal_vertex>\\n\t\t#include <morphnormal_vertex>\\n\t\t#include <skinnormal_vertex>\\n\t#endif\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvWorldPosition = worldPosition.xyz;\\n}\"",
        "\"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\tvec4 diffuseColor = vec4( 1.0 );\\n\t#include <clipping_planes_fragment>\\n\t#include <map_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <alphahash_fragment>\\n\tfloat dist = length( vWorldPosition - referencePosition );\\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\tdist = saturate( dist );\\n\tgl_FragColor = packDepthToRGBA( dist );\\n}\"",
        "\"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\tvWorldDirection = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n}\"",
        "\"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\tvec3 direction = normalize( vWorldDirection );\\n\tvec2 sampleUV = equirectUv( direction );\\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\t#include <tonemapping_fragment>\\n\t#include <colorspace_fragment>\\n}\"",
        "\"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvLineDistance = scale * lineDistance;\\n\t#include <uv_vertex>\\n\t#include <color_vertex>\\n\t#include <morphinstance_vertex>\\n\t#include <morphcolor_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <fog_vertex>\\n}\"",
        "\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <clipping_planes_fragment>\\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\t\tdiscard;\\n\t}\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\t#include <opaque_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <colorspace_fragment>\\n\t#include <fog_fragment>\\n\t#include <premultiplied_alpha_fragment>\\n}\"",
        "\"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <color_vertex>\\n\t#include <morphinstance_vertex>\\n\t#include <morphcolor_vertex>\\n\t#include <batching_vertex>\\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\t\t#include <beginnormal_vertex>\\n\t\t#include <morphnormal_vertex>\\n\t\t#include <skinbase_vertex>\\n\t\t#include <skinnormal_vertex>\\n\t\t#include <defaultnormal_vertex>\\n\t#endif\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <fog_vertex>\\n}\"",
        "\"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <clipping_planes_fragment>\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <alphahash_fragment>\\n\t#include <specularmap_fragment>\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\t#ifdef USE_LIGHTMAP\\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\t#else\\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\t#endif\\n\t#include <aomap_fragment>\\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\t#include <envmap_fragment>\\n\t#include <opaque_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <colorspace_fragment>\\n\t#include <fog_fragment>\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <dithering_fragment>\\n}\"",
        "\"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <color_vertex>\\n\t#include <morphinstance_vertex>\\n\t#include <morphcolor_vertex>\\n\t#include <batching_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <normal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <shadowmap_vertex>\\n\t#include <fog_vertex>\\n}\"",
        "\"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <clipping_planes_fragment>\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <alphahash_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <normal_fragment_begin>\\n\t#include <normal_fragment_maps>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_lambert_fragment>\\n\t#include <lights_fragment_begin>\\n\t#include <lights_fragment_maps>\\n\t#include <lights_fragment_end>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\t#include <opaque_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <colorspace_fragment>\\n\t#include <fog_fragment>\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <dithering_fragment>\\n}\"",
        "\"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <color_vertex>\\n\t#include <morphinstance_vertex>\\n\t#include <morphcolor_vertex>\\n\t#include <batching_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <normal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <fog_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n}\"",
        "\"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <clipping_planes_fragment>\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <alphahash_fragment>\\n\t#include <normal_fragment_begin>\\n\t#include <normal_fragment_maps>\\n\tvec3 viewDir = normalize( vViewPosition );\\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\tvec3 y = cross( viewDir, x );\\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\t#ifdef USE_MATCAP\\n\t\tvec4 matcapColor = texture2D( matcap, uv );\\n\t#else\\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\t#endif\\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\t#include <opaque_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <colorspace_fragment>\\n\t#include <fog_fragment>\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <dithering_fragment>\\n}\"",
        "\"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <batching_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphinstance_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <normal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\"",
        "\"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\\n\t#include <clipping_planes_fragment>\\n\t#include <logdepthbuf_fragment>\\n\t#include <normal_fragment_begin>\\n\t#include <normal_fragment_maps>\\n\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\\n\t#ifdef OPAQUE\\n\t\tgl_FragColor.a = 1.0;\\n\t#endif\\n}\"",
        "\"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <color_vertex>\\n\t#include <morphcolor_vertex>\\n\t#include <batching_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphinstance_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <normal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <shadowmap_vertex>\\n\t#include <fog_vertex>\\n}\"",
        "\"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <clipping_planes_fragment>\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <alphahash_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <normal_fragment_begin>\\n\t#include <normal_fragment_maps>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_phong_fragment>\\n\t#include <lights_fragment_begin>\\n\t#include <lights_fragment_maps>\\n\t#include <lights_fragment_end>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\t#include <opaque_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <colorspace_fragment>\\n\t#include <fog_fragment>\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <dithering_fragment>\\n}\"",
        "\"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <color_vertex>\\n\t#include <morphinstance_vertex>\\n\t#include <morphcolor_vertex>\\n\t#include <batching_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <normal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\"",
        "\"#define STANDARD\\n#ifdef PHYSICAL\\n\t#define IOR\\n\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\tuniform float specularIntensity;\\n\tuniform vec3 specularColor;\\n\t#ifdef USE_SPECULAR_COLORMAP\\n\t\tuniform sampler2D specularColorMap;\\n\t#endif\\n\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\t\tuniform sampler2D specularIntensityMap;\\n\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\tuniform float clearcoat;\\n\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_DISPERSION\\n\tuniform float dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\tuniform float iridescence;\\n\tuniform float iridescenceIOR;\\n\tuniform float iridescenceThicknessMinimum;\\n\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\tuniform vec3 sheenColor;\\n\tuniform float sheenRoughness;\\n\t#ifdef USE_SHEEN_COLORMAP\\n\t\tuniform sampler2D sheenColorMap;\\n\t#endif\\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\t\tuniform sampler2D sheenRoughnessMap;\\n\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\tuniform vec2 anisotropyVector;\\n\t#ifdef USE_ANISOTROPYMAP\\n\t\tuniform sampler2D anisotropyMap;\\n\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <clipping_planes_fragment>\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <alphahash_fragment>\\n\t#include <roughnessmap_fragment>\\n\t#include <metalnessmap_fragment>\\n\t#include <normal_fragment_begin>\\n\t#include <normal_fragment_maps>\\n\t#include <clearcoat_normal_fragment_begin>\\n\t#include <clearcoat_normal_fragment_maps>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_physical_fragment>\\n\t#include <lights_fragment_begin>\\n\t#include <lights_fragment_maps>\\n\t#include <lights_fragment_end>\\n\t#include <aomap_fragment>\\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\t#include <transmission_fragment>\\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\t#ifdef USE_SHEEN\\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\t#endif\\n\t#ifdef USE_CLEARCOAT\\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\t#endif\\n\t#include <opaque_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <colorspace_fragment>\\n\t#include <fog_fragment>\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <dithering_fragment>\\n}\"",
        "\"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <color_vertex>\\n\t#include <morphinstance_vertex>\\n\t#include <morphcolor_vertex>\\n\t#include <batching_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <normal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n\t#include <fog_vertex>\\n}\"",
        "\"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <clipping_planes_fragment>\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <alphahash_fragment>\\n\t#include <normal_fragment_begin>\\n\t#include <normal_fragment_maps>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_toon_fragment>\\n\t#include <lights_fragment_begin>\\n\t#include <lights_fragment_maps>\\n\t#include <lights_fragment_end>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\t#include <opaque_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <colorspace_fragment>\\n\t#include <fog_fragment>\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <dithering_fragment>\\n}\"",
        "\"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\tvarying vec2 vUv;\\n\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\t#ifdef USE_POINTS_UV\\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\t#endif\\n\t#include <color_vertex>\\n\t#include <morphinstance_vertex>\\n\t#include <morphcolor_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <project_vertex>\\n\tgl_PointSize = size;\\n\t#ifdef USE_SIZEATTENUATION\\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\t#endif\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <fog_vertex>\\n}\"",
        "\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <clipping_planes_fragment>\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_particle_fragment>\\n\t#include <color_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <alphahash_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\t#include <opaque_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <colorspace_fragment>\\n\t#include <fog_fragment>\\n\t#include <premultiplied_alpha_fragment>\\n}\"",
        "\"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\t#include <batching_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphinstance_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n\t#include <fog_vertex>\\n}\"",
        "\"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\t#include <logdepthbuf_fragment>\\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\t#include <tonemapping_fragment>\\n\t#include <colorspace_fragment>\\n\t#include <fog_fragment>\\n}\"",
        "\"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\tvec2 scale;\\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\t#ifndef USE_SIZEATTENUATION\\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\\n\t#endif\\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\tvec2 rotatedPosition;\\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\tmvPosition.xy += rotatedPosition;\\n\tgl_Position = projectionMatrix * mvPosition;\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <fog_vertex>\\n}\"",
        "\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <clipping_planes_fragment>\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <alphahash_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\t#include <opaque_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <colorspace_fragment>\\n\t#include <fog_fragment>\\n}\"",
        "\"additive\"",
        "\"alpha-blend\"",
        "\"BackgroundCubeMaterial\"",
        "\"normal\"",
        "\"uv\"",
        "\"envMap\"",
        "\"BackgroundMaterial\"",
        "\"normal\"",
        "\"map\"",
        "\"instanceMatrix\"",
        "\"instanceColor\"",
        "\"instanceMatrix\"",
        "\"instanceColor\"",
        "\"instanceMatrix\"",
        "\"instanceColor\"",
        "\"WEBGL_multi_draw\"",
        "\"WEBGL_multi_draw\"",
        "\"EXT_texture_filter_anisotropic\"",
        "\"EXT_texture_filter_anisotropic\"",
        "\"EXT_color_buffer_half_float\"",
        "\"EXT_color_buffer_float\"",
        "\"highp\"",
        "\"highp\"",
        "\"mediump\"",
        "\"mediump\"",
        "\"mediump\"",
        "\"lowp\"",
        "\"highp\"",
        "\"THREE.WebGLRenderer:\"",
        "\"not supported, using\"",
        "\"instead.\"",
        "\"dispose\"",
        "\"dispose\"",
        "\"OrthographicCamera\"",
        "\"PMREM.Background\"",
        "\"envMap\"",
        "\"latitudinal\"",
        "\"longitudinal\"",
        "\"latitudinal\"",
        "\"longitudinal\"",
        "\"blur direction must be either latitudinal or longitudinal!\"",
        "sigmaRadians, ${sigmaRadians}, is too large and will clip, as it requested ${samples} samples when the maximum is set to ${MAX_SAMPLES}",
        "\"envMap\"",
        "\"samples\"",
        "\"weights\"",
        "\"latitudinal\"",
        "\"latitudinal\"",
        "\"poleAxis\"",
        "\"dTheta\"",
        "\"mipInt\"",
        "\"position\"",
        "\"uv\"",
        "\"faceIndex\"",
        "\"PMREM.cubeUv\"",
        "\"SphericalGaussianBlur\"",
        "\"n\"",
        "\"CUBEUV_TEXEL_WIDTH\"",
        "\"CUBEUV_TEXEL_HEIGHT\"",
        "\"CUBEUV_MAX_MIP\"",
        "${lodMax}.0",
        "\"envMap\"",
        "\"samples\"",
        "\"weights\"",
        "\"latitudinal\"",
        "\"dTheta\"",
        "\"mipInt\"",
        "\"poleAxis\"",
        "precision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}",
        "\"EquirectangularToCubeUV\"",
        "\"envMap\"",
        "precision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}",
        "\"CubemapToCubeUV\"",
        "\"envMap\"",
        "\"flipEnvMap\"",
        "precision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}",
        "precision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}",
        "\"dispose\"",
        "\"dispose\"",
        "\"WEBGL_depth_texture\"",
        "\"WEBGL_depth_texture\"",
        "\"MOZ_WEBGL_depth_texture\"",
        "\"WEBKIT_WEBGL_depth_texture\"",
        "\"EXT_texture_filter_anisotropic\"",
        "\"EXT_texture_filter_anisotropic\"",
        "\"MOZ_EXT_texture_filter_anisotropic\"",
        "\"WEBKIT_EXT_texture_filter_anisotropic\"",
        "\"WEBGL_compressed_texture_s3tc\"",
        "\"WEBGL_compressed_texture_s3tc\"",
        "\"MOZ_WEBGL_compressed_texture_s3tc\"",
        "\"WEBKIT_WEBGL_compressed_texture_s3tc\"",
        "\"WEBGL_compressed_texture_pvrtc\"",
        "\"WEBGL_compressed_texture_pvrtc\"",
        "\"WEBKIT_WEBGL_compressed_texture_pvrtc\"",
        "\"EXT_color_buffer_float\"",
        "\"WEBGL_clip_cull_distance\"",
        "\"OES_texture_float_linear\"",
        "\"EXT_color_buffer_half_float\"",
        "\"WEBGL_multisampled_render_to_texture\"",
        "\"WEBGL_render_shared_exponent\"",
        "\"THREE.WebGLRenderer: \"",
        "\" extension not supported.\"",
        "\"dispose\"",
        "\"dispose\"",
        "\"WEBGL_multi_draw\"",
        "\"WEBGL_multi_draw\"",
        "\"THREE.WebGLInfo: Unknown draw mode:\"",
        "\"dispose\"",
        "\"dispose\"",
        "\"morphTexture\"",
        "\"morphTargetBaseInfluence\"",
        "\"morphTargetInfluences\"",
        "\"morphTargetsTexture\"",
        "\"morphTargetsTextureSize\"",
        "\"dispose\"",
        "\"dispose\"",
        "\"dispose\"",
        "\"DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat\"",
        "\"]\"",
        "\"[\"",
        "\"\\n\"",
        "${line === errorLine ? \">\" : \" \"} ${line}: ${lines[i]}",
        "\">\"",
        "\" \"",
        "\"\\n\"",
        "\"\"",
        "\"LinearDisplayP3ToLinearSRGB\"",
        "\"LinearSRGBToLinearDisplayP3\"",
        "\"LinearTransferOETF\"",
        "\"sRGBTransferOETF\"",
        "\"THREE.WebGLProgram: Unsupported color space:\"",
        "\"LinearTransferOETF\"",
        "\"\"",
        "\"\"",
        "\"\\n\\n\"",
        "\"\\n\\n\"",
        "vec4 ${functionName}( vec4 value ) { return ${components[0]}( ${components[1]}( value ) ); }",
        "\"Linear\"",
        "\"Reinhard\"",
        "\"OptimizedCineon\"",
        "\"ACESFilmic\"",
        "\"AgX\"",
        "\"Neutral\"",
        "\"Custom\"",
        "\"THREE.WebGLProgram: Unsupported toneMapping:\"",
        "\"Linear\"",
        "\"vec3 \"",
        "\"( vec3 color ) { return \"",
        "\"ToneMapping( color ); }\"",
        "\"float luminance( const in vec3 rgb ) {\"",
        "const vec3 weights = vec3( ${r}, ${g}, ${b} );",
        "\"\treturn dot( weights, rgb );\"",
        "\"}\"",
        "\"\\n\"",
        "\"#extension GL_ANGLE_clip_cull_distance : require\"",
        "\"\"",
        "\"#extension GL_ANGLE_multi_draw : require\"",
        "\"\"",
        "\"\\n\"",
        "\"#define \"",
        "\" \"",
        "\"\\n\"",
        "\"\"",
        "'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.'",
        "\"Can not resolve #include <\"",
        "\">\"",
        "\"\"",
        "\"[ \"",
        "\" ]\"",
        "precision ${parameters.precision} float;\n\tprecision ${parameters.precision} int;\n\tprecision ${parameters.precision} sampler2D;\n\tprecision ${parameters.precision} samplerCube;\n\tprecision ${parameters.precision} sampler3D;\n\tprecision ${parameters.precision} sampler2DArray;\n\tprecision ${parameters.precision} sampler2DShadow;\n\tprecision ${parameters.precision} samplerCubeShadow;\n\tprecision ${parameters.precision} sampler2DArrayShadow;\n\tprecision ${parameters.precision} isampler2D;\n\tprecision ${parameters.precision} isampler3D;\n\tprecision ${parameters.precision} isamplerCube;\n\tprecision ${parameters.precision} isampler2DArray;\n\tprecision ${parameters.precision} usampler2D;\n\tprecision ${parameters.precision} usampler3D;\n\tprecision ${parameters.precision} usamplerCube;\n\tprecision ${parameters.precision} usampler2DArray;",
        "\"highp\"",
        "\"\\n#define HIGH_PRECISION\"",
        "\"mediump\"",
        "\"\\n#define MEDIUM_PRECISION\"",
        "\"lowp\"",
        "\"\\n#define LOW_PRECISION\"",
        "\"SHADOWMAP_TYPE_BASIC\"",
        "\"SHADOWMAP_TYPE_PCF\"",
        "\"SHADOWMAP_TYPE_PCF_SOFT\"",
        "\"SHADOWMAP_TYPE_VSM\"",
        "\"ENVMAP_TYPE_CUBE\"",
        "\"ENVMAP_TYPE_CUBE\"",
        "\"ENVMAP_TYPE_CUBE_UV\"",
        "\"ENVMAP_MODE_REFLECTION\"",
        "\"ENVMAP_MODE_REFRACTION\"",
        "\"ENVMAP_BLENDING_NONE\"",
        "\"ENVMAP_BLENDING_MULTIPLY\"",
        "\"ENVMAP_BLENDING_MIX\"",
        "\"ENVMAP_BLENDING_ADD\"",
        "\"#version \"",
        "\"\\n\"",
        "\"\"",
        "\"#define SHADER_TYPE \"",
        "\"#define SHADER_NAME \"",
        "\"\\n\"",
        "\"\\n\"",
        "\"#define SHADER_TYPE \"",
        "\"#define SHADER_NAME \"",
        "\"\\n\"",
        "\"\\n\"",
        "\"#define SHADER_TYPE \"",
        "\"#define SHADER_NAME \"",
        "\"#define USE_CLIP_DISTANCE\"",
        "\"\"",
        "\"#define USE_BATCHING\"",
        "\"\"",
        "\"#define USE_BATCHING_COLOR\"",
        "\"\"",
        "\"#define USE_INSTANCING\"",
        "\"\"",
        "\"#define USE_INSTANCING_COLOR\"",
        "\"\"",
        "\"#define USE_INSTANCING_MORPH\"",
        "\"\"",
        "\"#define USE_FOG\"",
        "\"\"",
        "\"#define FOG_EXP2\"",
        "\"\"",
        "\"#define USE_MAP\"",
        "\"\"",
        "\"#define USE_ENVMAP\"",
        "\"\"",
        "\"#define \"",
        "\"\"",
        "\"#define USE_LIGHTMAP\"",
        "\"\"",
        "\"#define USE_AOMAP\"",
        "\"\"",
        "\"#define USE_BUMPMAP\"",
        "\"\"",
        "\"#define USE_NORMALMAP\"",
        "\"\"",
        "\"#define USE_NORMALMAP_OBJECTSPACE\"",
        "\"\"",
        "\"#define USE_NORMALMAP_TANGENTSPACE\"",
        "\"\"",
        "\"#define USE_DISPLACEMENTMAP\"",
        "\"\"",
        "\"#define USE_EMISSIVEMAP\"",
        "\"\"",
        "\"#define USE_ANISOTROPY\"",
        "\"\"",
        "\"#define USE_ANISOTROPYMAP\"",
        "\"\"",
        "\"#define USE_CLEARCOATMAP\"",
        "\"\"",
        "\"#define USE_CLEARCOAT_ROUGHNESSMAP\"",
        "\"\"",
        "\"#define USE_CLEARCOAT_NORMALMAP\"",
        "\"\"",
        "\"#define USE_IRIDESCENCEMAP\"",
        "\"\"",
        "\"#define USE_IRIDESCENCE_THICKNESSMAP\"",
        "\"\"",
        "\"#define USE_SPECULARMAP\"",
        "\"\"",
        "\"#define USE_SPECULAR_COLORMAP\"",
        "\"\"",
        "\"#define USE_SPECULAR_INTENSITYMAP\"",
        "\"\"",
        "\"#define USE_ROUGHNESSMAP\"",
        "\"\"",
        "\"#define USE_METALNESSMAP\"",
        "\"\"",
        "\"#define USE_ALPHAMAP\"",
        "\"\"",
        "\"#define USE_ALPHAHASH\"",
        "\"\"",
        "\"#define USE_TRANSMISSION\"",
        "\"\"",
        "\"#define USE_TRANSMISSIONMAP\"",
        "\"\"",
        "\"#define USE_THICKNESSMAP\"",
        "\"\"",
        "\"#define USE_SHEEN_COLORMAP\"",
        "\"\"",
        "\"#define USE_SHEEN_ROUGHNESSMAP\"",
        "\"\"",
        "\"#define MAP_UV \"",
        "\"\"",
        "\"#define ALPHAMAP_UV \"",
        "\"\"",
        "\"#define LIGHTMAP_UV \"",
        "\"\"",
        "\"#define AOMAP_UV \"",
        "\"\"",
        "\"#define EMISSIVEMAP_UV \"",
        "\"\"",
        "\"#define BUMPMAP_UV \"",
        "\"\"",
        "\"#define NORMALMAP_UV \"",
        "\"\"",
        "\"#define DISPLACEMENTMAP_UV \"",
        "\"\"",
        "\"#define METALNESSMAP_UV \"",
        "\"\"",
        "\"#define ROUGHNESSMAP_UV \"",
        "\"\"",
        "\"#define ANISOTROPYMAP_UV \"",
        "\"\"",
        "\"#define CLEARCOATMAP_UV \"",
        "\"\"",
        "\"#define CLEARCOAT_NORMALMAP_UV \"",
        "\"\"",
        "\"#define CLEARCOAT_ROUGHNESSMAP_UV \"",
        "\"\"",
        "\"#define IRIDESCENCEMAP_UV \"",
        "\"\"",
        "\"#define IRIDESCENCE_THICKNESSMAP_UV \"",
        "\"\"",
        "\"#define SHEEN_COLORMAP_UV \"",
        "\"\"",
        "\"#define SHEEN_ROUGHNESSMAP_UV \"",
        "\"\"",
        "\"#define SPECULARMAP_UV \"",
        "\"\"",
        "\"#define SPECULAR_COLORMAP_UV \"",
        "\"\"",
        "\"#define SPECULAR_INTENSITYMAP_UV \"",
        "\"\"",
        "\"#define TRANSMISSIONMAP_UV \"",
        "\"\"",
        "\"#define THICKNESSMAP_UV \"",
        "\"\"",
        "\"#define USE_TANGENT\"",
        "\"\"",
        "\"#define USE_COLOR\"",
        "\"\"",
        "\"#define USE_COLOR_ALPHA\"",
        "\"\"",
        "\"#define USE_UV1\"",
        "\"\"",
        "\"#define USE_UV2\"",
        "\"\"",
        "\"#define USE_UV3\"",
        "\"\"",
        "\"#define USE_POINTS_UV\"",
        "\"\"",
        "\"#define FLAT_SHADED\"",
        "\"\"",
        "\"#define USE_SKINNING\"",
        "\"\"",
        "\"#define USE_MORPHTARGETS\"",
        "\"\"",
        "\"#define USE_MORPHNORMALS\"",
        "\"\"",
        "\"#define USE_MORPHCOLORS\"",
        "\"\"",
        "\"#define MORPHTARGETS_TEXTURE_STRIDE \"",
        "\"\"",
        "\"#define MORPHTARGETS_COUNT \"",
        "\"\"",
        "\"#define DOUBLE_SIDED\"",
        "\"\"",
        "\"#define FLIP_SIDED\"",
        "\"\"",
        "\"#define USE_SHADOWMAP\"",
        "\"\"",
        "\"#define \"",
        "\"\"",
        "\"#define USE_SIZEATTENUATION\"",
        "\"\"",
        "\"#define USE_LIGHT_PROBES\"",
        "\"\"",
        "\"#define USE_LOGDEPTHBUF\"",
        "\"\"",
        "\"uniform mat4 modelMatrix;\"",
        "\"uniform mat4 modelViewMatrix;\"",
        "\"uniform mat4 projectionMatrix;\"",
        "\"uniform mat4 viewMatrix;\"",
        "\"uniform mat3 normalMatrix;\"",
        "\"uniform vec3 cameraPosition;\"",
        "\"uniform bool isOrthographic;\"",
        "\"#ifdef USE_INSTANCING\"",
        "\"\tattribute mat4 instanceMatrix;\"",
        "\"#endif\"",
        "\"#ifdef USE_INSTANCING_COLOR\"",
        "\"\tattribute vec3 instanceColor;\"",
        "\"#endif\"",
        "\"#ifdef USE_INSTANCING_MORPH\"",
        "\"\tuniform sampler2D morphTexture;\"",
        "\"#endif\"",
        "\"attribute vec3 position;\"",
        "\"attribute vec3 normal;\"",
        "\"attribute vec2 uv;\"",
        "\"#ifdef USE_UV1\"",
        "\"\tattribute vec2 uv1;\"",
        "\"#endif\"",
        "\"#ifdef USE_UV2\"",
        "\"\tattribute vec2 uv2;\"",
        "\"#endif\"",
        "\"#ifdef USE_UV3\"",
        "\"\tattribute vec2 uv3;\"",
        "\"#endif\"",
        "\"#ifdef USE_TANGENT\"",
        "\"\tattribute vec4 tangent;\"",
        "\"#endif\"",
        "\"#if defined( USE_COLOR_ALPHA )\"",
        "\"\tattribute vec4 color;\"",
        "\"#elif defined( USE_COLOR )\"",
        "\"\tattribute vec3 color;\"",
        "\"#endif\"",
        "\"#ifdef USE_SKINNING\"",
        "\"\tattribute vec4 skinIndex;\"",
        "\"\tattribute vec4 skinWeight;\"",
        "\"#endif\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"#define SHADER_TYPE \"",
        "\"#define SHADER_NAME \"",
        "\"#define USE_FOG\"",
        "\"\"",
        "\"#define FOG_EXP2\"",
        "\"\"",
        "\"#define ALPHA_TO_COVERAGE\"",
        "\"\"",
        "\"#define USE_MAP\"",
        "\"\"",
        "\"#define USE_MATCAP\"",
        "\"\"",
        "\"#define USE_ENVMAP\"",
        "\"\"",
        "\"#define \"",
        "\"\"",
        "\"#define \"",
        "\"\"",
        "\"#define \"",
        "\"\"",
        "\"#define CUBEUV_TEXEL_WIDTH \"",
        "\"\"",
        "\"#define CUBEUV_TEXEL_HEIGHT \"",
        "\"\"",
        "\"#define CUBEUV_MAX_MIP \"",
        "\".0\"",
        "\"\"",
        "\"#define USE_LIGHTMAP\"",
        "\"\"",
        "\"#define USE_AOMAP\"",
        "\"\"",
        "\"#define USE_BUMPMAP\"",
        "\"\"",
        "\"#define USE_NORMALMAP\"",
        "\"\"",
        "\"#define USE_NORMALMAP_OBJECTSPACE\"",
        "\"\"",
        "\"#define USE_NORMALMAP_TANGENTSPACE\"",
        "\"\"",
        "\"#define USE_EMISSIVEMAP\"",
        "\"\"",
        "\"#define USE_ANISOTROPY\"",
        "\"\"",
        "\"#define USE_ANISOTROPYMAP\"",
        "\"\"",
        "\"#define USE_CLEARCOAT\"",
        "\"\"",
        "\"#define USE_CLEARCOATMAP\"",
        "\"\"",
        "\"#define USE_CLEARCOAT_ROUGHNESSMAP\"",
        "\"\"",
        "\"#define USE_CLEARCOAT_NORMALMAP\"",
        "\"\"",
        "\"#define USE_DISPERSION\"",
        "\"\"",
        "\"#define USE_IRIDESCENCE\"",
        "\"\"",
        "\"#define USE_IRIDESCENCEMAP\"",
        "\"\"",
        "\"#define USE_IRIDESCENCE_THICKNESSMAP\"",
        "\"\"",
        "\"#define USE_SPECULARMAP\"",
        "\"\"",
        "\"#define USE_SPECULAR_COLORMAP\"",
        "\"\"",
        "\"#define USE_SPECULAR_INTENSITYMAP\"",
        "\"\"",
        "\"#define USE_ROUGHNESSMAP\"",
        "\"\"",
        "\"#define USE_METALNESSMAP\"",
        "\"\"",
        "\"#define USE_ALPHAMAP\"",
        "\"\"",
        "\"#define USE_ALPHATEST\"",
        "\"\"",
        "\"#define USE_ALPHAHASH\"",
        "\"\"",
        "\"#define USE_SHEEN\"",
        "\"\"",
        "\"#define USE_SHEEN_COLORMAP\"",
        "\"\"",
        "\"#define USE_SHEEN_ROUGHNESSMAP\"",
        "\"\"",
        "\"#define USE_TRANSMISSION\"",
        "\"\"",
        "\"#define USE_TRANSMISSIONMAP\"",
        "\"\"",
        "\"#define USE_THICKNESSMAP\"",
        "\"\"",
        "\"#define USE_TANGENT\"",
        "\"\"",
        "\"#define USE_COLOR\"",
        "\"\"",
        "\"#define USE_COLOR_ALPHA\"",
        "\"\"",
        "\"#define USE_UV1\"",
        "\"\"",
        "\"#define USE_UV2\"",
        "\"\"",
        "\"#define USE_UV3\"",
        "\"\"",
        "\"#define USE_POINTS_UV\"",
        "\"\"",
        "\"#define USE_GRADIENTMAP\"",
        "\"\"",
        "\"#define FLAT_SHADED\"",
        "\"\"",
        "\"#define DOUBLE_SIDED\"",
        "\"\"",
        "\"#define FLIP_SIDED\"",
        "\"\"",
        "\"#define USE_SHADOWMAP\"",
        "\"\"",
        "\"#define \"",
        "\"\"",
        "\"#define PREMULTIPLIED_ALPHA\"",
        "\"\"",
        "\"#define USE_LIGHT_PROBES\"",
        "\"\"",
        "\"#define DECODE_VIDEO_TEXTURE\"",
        "\"\"",
        "\"#define USE_LOGDEPTHBUF\"",
        "\"\"",
        "\"uniform mat4 viewMatrix;\"",
        "\"uniform vec3 cameraPosition;\"",
        "\"uniform bool isOrthographic;\"",
        "\"#define TONE_MAPPING\"",
        "\"\"",
        "\"tonemapping_pars_fragment\"",
        "\"\"",
        "\"toneMapping\"",
        "\"\"",
        "\"#define DITHERING\"",
        "\"\"",
        "\"#define OPAQUE\"",
        "\"\"",
        "\"colorspace_pars_fragment\"",
        "\"linearToOutputTexel\"",
        "\"#define DEPTH_PACKING \"",
        "\"\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"#version 300 es\\n\"",
        "\"#define attribute in\"",
        "\"#define varying out\"",
        "\"#define texture2D texture\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"#define varying in\"",
        "\"\"",
        "\"layout(location = 0) out highp vec4 pc_fragColor;\"",
        "\"\"",
        "\"#define gl_FragColor pc_fragColor\"",
        "\"#define gl_FragDepthEXT gl_FragDepth\"",
        "\"#define texture2D texture\"",
        "\"#define textureCube texture\"",
        "\"#define texture2DProj textureProj\"",
        "\"#define texture2DLodEXT textureLod\"",
        "\"#define texture2DProjLodEXT textureProjLod\"",
        "\"#define textureCubeLodEXT textureLod\"",
        "\"#define texture2DGradEXT textureGrad\"",
        "\"#define texture2DProjGradEXT textureProjGrad\"",
        "\"#define textureCubeGradEXT textureGrad\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"position\"",
        "\"function\"",
        "\"vertex\"",
        "\"fragment\"",
        "\"THREE.WebGLProgram: Shader Error \"",
        "\" - \"",
        "\"VALIDATE_STATUS \"",
        "\"\\n\\n\"",
        "\"Material Name: \"",
        "\"\\n\"",
        "\"Material Type: \"",
        "\"\\n\\n\"",
        "\"Program Info Log: \"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\"",
        "\"THREE.WebGLProgram: Program Info Log:\"",
        "\"\"",
        "\"\"",
        "\"depth\"",
        "\"distanceRGBA\"",
        "\"normal\"",
        "\"basic\"",
        "\"lambert\"",
        "\"phong\"",
        "\"toon\"",
        "\"physical\"",
        "\"physical\"",
        "\"matcap\"",
        "\"basic\"",
        "\"dashed\"",
        "\"points\"",
        "\"shadow\"",
        "\"sprite\"",
        "\"uv\"",
        "uv${value}",
        "\"THREE.WebGLProgram.getParameters:\"",
        "\"not supported, using\"",
        "\"instead.\"",
        "\"WEBGL_clip_cull_distance\"",
        "\"WEBGL_multi_draw\"",
        "\"KHR_parallel_shader_compile\"",
        "\"DirectionalLight\"",
        "\"SpotLight\"",
        "\"PointLight\"",
        "\"HemisphereLight\"",
        "\"RectAreaLight\"",
        "\"DirectionalLight\"",
        "\"SpotLight\"",
        "\"PointLight\"",
        "\"OES_texture_float_linear\"",
        "\"MeshDepthMaterial\"",
        "\"MeshDistanceMaterial\"",
        "\"void main() {\\n\tgl_Position = vec4( position, 1.0 );\\n}\"",
        "\"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\tconst float samples = float( VSM_SAMPLES );\\n\tfloat mean = 0.0;\\n\tfloat squared_mean = 0.0;\\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\t\tfloat uvOffset = uvStart + i * uvStride;\\n\t\t#ifdef HORIZONTAL_PASS\\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\t\t\tmean += distribution.x;\\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\t\t#else\\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\t\t\tmean += depth;\\n\t\t\tsquared_mean += depth * depth;\\n\t\t#endif\\n\t}\\n\tmean = mean / samples;\\n\tsquared_mean = squared_mean / samples;\\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\"",
        "\"position\"",
        "\"THREE.WebGLShadowMap:\"",
        "\"has no shadow.\"",
        "\".shadowMap\"",
        "\"dispose\"",
        "\"dispose\"",
        "\"WebGL\"",
        "\"OpenGL ES\"",
        "\"THREE.WebGLState: Invalid blending: \"",
        "\"THREE.WebGLState: Invalid blending: \"",
        "\"THREE.WebGLState:\"",
        "\"THREE.WebGLState:\"",
        "\"THREE.WebGLState:\"",
        "\"THREE.WebGLState:\"",
        "\"THREE.WebGLState:\"",
        "\"THREE.WebGLState:\"",
        "\"THREE.WebGLState:\"",
        "\"THREE.WebGLState:\"",
        "\"THREE.WebGLState:\"",
        "\"THREE.WebGLState:\"",
        "Unable to determine texture byte length for ${format} format.",
        "Unknown texture type ${type}.",
        "\"WEBGL_multisampled_render_to_texture\"",
        "\"WEBGL_multisampled_render_to_texture\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"2d\"",
        "\"canvas\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"2d\"",
        "\"THREE.WebGLRenderer: Texture has been resized from (\"",
        "\"x\"",
        "\") to (\"",
        "\"x\"",
        "\").\"",
        "\"data\"",
        "\"THREE.WebGLRenderer: Image in DataTexture is too big (\"",
        "\"x\"",
        "\").\"",
        "\"THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '\"",
        "\"'\"",
        "\"EXT_color_buffer_float\"",
        "\"DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.\"",
        "\"dispose\"",
        "\"dispose\"",
        "\"THREE.WebGLTextures: Trying to use \"",
        "\" texture units while this GPU supports only \"",
        "\"THREE.WebGLRenderer: Texture marked for update but no image data found.\"",
        "\"THREE.WebGLRenderer: Texture marked for update but image is incomplete\"",
        "\"OES_texture_float_linear\"",
        "\"THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.\"",
        "\"EXT_texture_filter_anisotropic\"",
        "\"OES_texture_float_linear\"",
        "\"EXT_texture_filter_anisotropic\"",
        "\"dispose\"",
        "\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\"",
        "\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\"",
        "\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\"",
        "\"Depth Texture with cube render targets is not supported\"",
        "\"renderTarget.depthTexture must be an instance of THREE.DepthTexture\"",
        "\"Unknown depthTexture format\"",
        "\"target.depthTexture not supported in Cube render targets\"",
        "\"dispose\"",
        "\"WEBGL_multisampled_render_to_texture\"",
        "\"THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.\"",
        "\"THREE.WebGLTextures: Unsupported texture color space:\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"WEBGL_compressed_texture_s3tc_srgb\"",
        "\"WEBGL_compressed_texture_s3tc\"",
        "\"WEBGL_compressed_texture_pvrtc\"",
        "\"WEBGL_compressed_texture_etc\"",
        "\"WEBGL_compressed_texture_astc\"",
        "\"EXT_texture_compression_bptc\"",
        "\"EXT_texture_compression_rgtc\"",
        "\"Group\"",
        "\"move\"",
        "\"connected\"",
        "\"disconnected\"",
        "\"visible-blurred\"",
        "\"index-finger-tip\"",
        "\"thumb-tip\"",
        "\"pinchend\"",
        "\"pinchstart\"",
        "void main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}",
        "uniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}",
        "\"local-floor\"",
        "\"select\"",
        "\"selectstart\"",
        "\"selectend\"",
        "\"squeeze\"",
        "\"squeezestart\"",
        "\"squeezeend\"",
        "\"end\"",
        "\"inputsourceschange\"",
        "\"sessionend\"",
        "\"THREE.WebXRManager: Cannot change framebuffer scale while presenting.\"",
        "\"THREE.WebXRManager: Cannot change reference space type while presenting.\"",
        "\"select\"",
        "\"selectstart\"",
        "\"selectend\"",
        "\"squeeze\"",
        "\"squeezestart\"",
        "\"squeezeend\"",
        "\"end\"",
        "\"inputsourceschange\"",
        "\"sessionstart\"",
        "\"depth-sensing\"",
        "\"planesdetected\"",
        "\"dispose\"",
        "\"THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.\"",
        "\"number\"",
        "\"boolean\"",
        "\"_\"",
        "\"number\"",
        "\"boolean\"",
        "\"number\"",
        "\"boolean\"",
        "\"number\"",
        "\"boolean\"",
        "\"THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.\"",
        "\"THREE.WebGLRenderer: Unsupported uniform value type.\"",
        "\"dispose\"",
        "\"default\"",
        "\"undefined\"",
        "\"THREE.WebGLRenderer: WebGL 1 is not supported since r163.\"",
        "\"setAttribute\"",
        "\"data-engine\"",
        "three.js r${REVISION}",
        "\"webglcontextlost\"",
        "\"webglcontextrestored\"",
        "\"webglcontextcreationerror\"",
        "\"webgl2\"",
        "\"Error creating WebGL context with your selected attributes.\"",
        "\"Error creating WebGL context.\"",
        "\"THREE.WebGLRenderer: \"",
        "\"WEBGL_lose_context\"",
        "\"WEBGL_lose_context\"",
        "\"THREE.WebGLRenderer: Can't change size while VR device is presenting.\"",
        "\"px\"",
        "\"px\"",
        "\"webglcontextlost\"",
        "\"webglcontextrestored\"",
        "\"webglcontextcreationerror\"",
        "\"sessionstart\"",
        "\"sessionend\"",
        "\"THREE.WebGLRenderer: Context Lost.\"",
        "\"THREE.WebGLRenderer: Context Restored.\"",
        "\"THREE.WebGLRenderer: A WebGL context could not be created. Reason: \"",
        "\"dispose\"",
        "\"WEBGL_multi_draw\"",
        "\"_gl_DrawID\"",
        "\"KHR_parallel_shader_compile\"",
        "\"undefined\"",
        "\"sessionstart\"",
        "\"sessionend\"",
        "\"THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.\"",
        "\"EXT_color_buffer_half_float\"",
        "\"EXT_color_buffer_float\"",
        "\"WEBGL_multisampled_render_to_texture\"",
        "\"dispose\"",
        "\"projectionMatrix\"",
        "\"viewMatrix\"",
        "\"logDepthBufFC\"",
        "\"isOrthographic\"",
        "\"bindMatrix\"",
        "\"bindMatrixInverse\"",
        "\"boneTexture\"",
        "\"batchingTexture\"",
        "\"batchingTexture\"",
        "\"batchingIdTexture\"",
        "\"batchingIdTexture\"",
        "\"batchingColorTexture\"",
        "\"batchingColorTexture\"",
        "\"receiveShadow\"",
        "\"toneMappingExposure\"",
        "\"center\"",
        "\"modelViewMatrix\"",
        "\"normalMatrix\"",
        "\"modelMatrix\"",
        "\"WEBGL_multisampled_render_to_texture\"",
        "\"THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided\"",
        "\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.\"",
        "\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.\"",
        "\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.\"",
        "\"THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.\"",
        "\"THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.\"",
        "\"THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.\"",
        "\"WebGLRenderer: copyFramebufferToTexture function signature has changed.\"",
        "\"WebGLRenderer: copyTextureToTexture function signature has changed.\"",
        "\"WebGLRenderer: copyTextureToTexture3D function signature has changed.\"",
        "\"THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.\"",
        "\"undefined\"",
        "\"observe\"",
        "\"display-p3\"",
        "\"srgb\"",
        "\"display-p3\"",
        "\"srgb\"",
        "\"\"",
        "\"FogExp2\"",
        "\"\"",
        "\"Fog\"",
        "\"Scene\"",
        "\"undefined\"",
        "\"observe\"",
        "\"THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.\"",
        "\"\"",
        "\"THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.\"",
        "\"THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.\"",
        "\"SpriteMaterial\"",
        "\"Sprite\"",
        "\"position\"",
        "\"uv\"",
        "'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.'",
        "\"LOD\"",
        "\"SkinnedMesh\"",
        "\"position\"",
        "\"position\"",
        "\"THREE.SkinnedMesh: Unrecognized bindMode: \"",
        "\"Bone\"",
        "\"THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.\"",
        "\"THREE.Skeleton: No bone found with UUID:\"",
        "\"Skeleton\"",
        "\"Skeleton.toJSON\"",
        "\"dispose\"",
        "'BatchedMesh: All geometries must consistently have \"index\".'",
        "BatchedMesh: Added geometry missing \"${attributeName}\". All geometries must have consistent attributes.",
        "\"BatchedMesh: All attributes must have a consistent itemSize and normalized value.\"",
        "\"BatchedMesh: Maximum item count reached.\"",
        "\"BatchedMesh: Maximum item count reached.\"",
        "\"position\"",
        "\"BatchedMesh: Reserved space request exceeds the maximum buffer size.\"",
        "\"BatchedMesh: Maximum geometry count reached.\"",
        "\"BatchedMesh: Reserved space not large enough for provided geometry.\"",
        "\"position\"",
        "\"LineBasicMaterial\"",
        "\"round\"",
        "\"round\"",
        "\"Line\"",
        "\"lineDistance\"",
        "\"THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.\"",
        "\"LineSegments\"",
        "\"lineDistance\"",
        "\"THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.\"",
        "\"LineLoop\"",
        "\"PointsMaterial\"",
        "\"Points\"",
        "\"requestVideoFrameCallback\"",
        "\"requestVideoFrameCallback\"",
        "\"Curve\"",
        "\"THREE.Curve: .getPoint() not implemented.\"",
        "\"Curve\"",
        "\"Curve.toJSON\"",
        "\"EllipseCurve\"",
        "\"ArcCurve\"",
        "\"centripetal\"",
        "\"CatmullRomCurve3\"",
        "\"centripetal\"",
        "\"chordal\"",
        "\"chordal\"",
        "\"catmullrom\"",
        "\"CubicBezierCurve\"",
        "\"CubicBezierCurve3\"",
        "\"LineCurve\"",
        "\"LineCurve3\"",
        "\"QuadraticBezierCurve\"",
        "\"QuadraticBezierCurve3\"",
        "\"SplineCurve\"",
        "\"CurvePath\"",
        "\"LineCurve\"",
        "\"LineCurve3\"",
        "\"Path\"",
        "\"LatheGeometry\"",
        "\"position\"",
        "\"uv\"",
        "\"normal\"",
        "\"CapsuleGeometry\"",
        "\"CircleGeometry\"",
        "\"position\"",
        "\"normal\"",
        "\"uv\"",
        "\"CylinderGeometry\"",
        "\"position\"",
        "\"normal\"",
        "\"uv\"",
        "\"ConeGeometry\"",
        "\"PolyhedronGeometry\"",
        "\"position\"",
        "\"normal\"",
        "\"uv\"",
        "\"DodecahedronGeometry\"",
        "\"EdgesGeometry\"",
        "\"position\"",
        "\"a\"",
        "\"b\"",
        "\"c\"",
        "${Math.round(a.x * precision)},${Math.round(a.y * precision)},${Math.round(a.z * precision)}",
        "${Math.round(b.x * precision)},${Math.round(b.y * precision)},${Math.round(b.z * precision)}",
        "${Math.round(c.x * precision)},${Math.round(c.y * precision)},${Math.round(c.z * precision)}",
        "${vecHash0}_${vecHash1}",
        "${vecHash1}_${vecHash0}",
        "\"position\"",
        "\"Shape\"",
        "\"ExtrudeGeometry\"",
        "\"position\"",
        "\"uv\"",
        "\"THREE.ExtrudeGeometry: vec does not exist\"",
        "\"IcosahedronGeometry\"",
        "\"OctahedronGeometry\"",
        "\"RingGeometry\"",
        "\"position\"",
        "\"normal\"",
        "\"uv\"",
        "\"ShapeGeometry\"",
        "\"position\"",
        "\"normal\"",
        "\"uv\"",
        "\"SphereGeometry\"",
        "\"position\"",
        "\"normal\"",
        "\"uv\"",
        "\"TetrahedronGeometry\"",
        "\"TorusGeometry\"",
        "\"position\"",
        "\"normal\"",
        "\"uv\"",
        "\"TorusKnotGeometry\"",
        "\"position\"",
        "\"normal\"",
        "\"uv\"",
        "\"TubeGeometry\"",
        "\"position\"",
        "\"normal\"",
        "\"uv\"",
        "\"WireframeGeometry\"",
        "\"position\"",
        "${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}",
        "${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}",
        "\"ShadowMaterial\"",
        "\"RawShaderMaterial\"",
        "\"STANDARD\"",
        "\"\"",
        "\"MeshStandardMaterial\"",
        "\"round\"",
        "\"round\"",
        "\"STANDARD\"",
        "\"\"",
        "\"STANDARD\"",
        "\"\"",
        "\"PHYSICAL\"",
        "\"\"",
        "\"MeshPhysicalMaterial\"",
        "\"reflectivity\"",
        "\"STANDARD\"",
        "\"\"",
        "\"PHYSICAL\"",
        "\"\"",
        "\"MeshPhongMaterial\"",
        "\"round\"",
        "\"round\"",
        "\"TOON\"",
        "\"\"",
        "\"MeshToonMaterial\"",
        "\"round\"",
        "\"round\"",
        "\"MeshNormalMaterial\"",
        "\"MeshLambertMaterial\"",
        "\"round\"",
        "\"round\"",
        "\"MATCAP\"",
        "\"\"",
        "\"MeshMatcapMaterial\"",
        "\"MATCAP\"",
        "\"\"",
        "\"LineDashedMaterial\"",
        "\"number\"",
        "\"bool\"",
        "\"string\"",
        "\"quaternion\"",
        "\"quaternion\"",
        "\"call to abstract method\"",
        "\"THREE.KeyframeTrack: track name is undefined\"",
        "\"THREE.KeyframeTrack: no keyframes in track named \"",
        "\"name\"",
        "\"times\"",
        "\"values\"",
        "\"unsupported interpolation for \"",
        "\" keyframe track named \"",
        "\"THREE.KeyframeTrack:\"",
        "\"THREE.KeyframeTrack: Invalid value size in track.\"",
        "\"THREE.KeyframeTrack: Track is empty.\"",
        "\"number\"",
        "\"THREE.KeyframeTrack: Time is not a valid number.\"",
        "\"THREE.KeyframeTrack: Out of order keys.\"",
        "\"THREE.KeyframeTrack: Value is not a valid number.\"",
        "\"bool\"",
        "\"color\"",
        "\"number\"",
        "\"quaternion\"",
        "\"string\"",
        "\"vector\"",
        "\"\"",
        "\"name\"",
        "\"duration\"",
        "\"tracks\"",
        "\"uuid\"",
        "\"blendMode\"",
        "\".morphTargetInfluences[\"",
        "\"]\"",
        "\"THREE.AnimationClip: No animation in JSONLoader data.\"",
        "\"default\"",
        "\".morphTargetInfluence[\"",
        "\"]\"",
        "\".bones[\"",
        "\"]\"",
        "\".position\"",
        "\"pos\"",
        "\".quaternion\"",
        "\"rot\"",
        "\".scale\"",
        "\"scl\"",
        "\"scalar\"",
        "\"double\"",
        "\"float\"",
        "\"number\"",
        "\"integer\"",
        "\"vector\"",
        "\"vector2\"",
        "\"vector3\"",
        "\"vector4\"",
        "\"color\"",
        "\"quaternion\"",
        "\"bool\"",
        "\"boolean\"",
        "\"string\"",
        "\"THREE.KeyframeTrack: Unsupported typeName: \"",
        "\"THREE.KeyframeTrack: track type undefined, can not parse\"",
        "\"value\"",
        "\"anonymous\"",
        "\"\"",
        "\"\"",
        "\"__DEFAULT\"",
        "\"\"",
        "\"include\"",
        "\"same-origin\"",
        "\"THREE.FileLoader: HTTP Status 0 received.\"",
        "\"undefined\"",
        "\"X-File-Size\"",
        "\"Content-Length\"",
        "\"progress\"",
        "fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}",
        "\"arraybuffer\"",
        "\"blob\"",
        "\"document\"",
        "\"json\"",
        "\"arraybuffer\"",
        "\"img\"",
        "\"load\"",
        "\"error\"",
        "\"load\"",
        "\"error\"",
        "\"data:\"",
        "\"arraybuffer\"",
        "\"Light\"",
        "\"HemisphereLight\"",
        "\"SpotLight\"",
        "\"PointLight\"",
        "\"DirectionalLight\"",
        "\"AmbientLight\"",
        "\"RectAreaLight\"",
        "\"THREE.MaterialLoader: Undefined texture\"",
        "\"number\"",
        "\"t\"",
        "\"c\"",
        "\"v2\"",
        "\"v3\"",
        "\"v4\"",
        "\"m3\"",
        "\"m4\"",
        "\"THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead.\"",
        "\"undefined\"",
        "\"\"",
        "\"/\"",
        "\"./\"",
        "\"string\"",
        "\"\"",
        "\"\"",
        "\"$1\"",
        "\"InstancedBufferGeometry\"",
        "\"\"",
        "\"THREE:ObjectLoader: Can't parse \"",
        "\".\"",
        "\"geometry\"",
        "\"THREE.ObjectLoader: Can't load \"",
        "\"THREE.ObjectLoader: Can't load \"",
        "\"\"",
        "\"geometry\"",
        "\"THREE.ObjectLoader: Can't load \"",
        "\"BufferGeometry\"",
        "\"InstancedBufferGeometry\"",
        "THREE.ObjectLoader: Unsupported geometry type \"${data.type}\"",
        "\"string\"",
        "\"string\"",
        "\"number\"",
        "\"THREE.ObjectLoader.parseTexture: Constant should be in numeric form.\"",
        "'THREE.ObjectLoader: No \"image\" specified for'",
        "\"THREE.ObjectLoader: Undefined image\"",
        "\"THREE.ObjectLoader: Undefined geometry\"",
        "\"THREE.ObjectLoader: Undefined material\"",
        "\"THREE.ObjectLoader: Undefined material\"",
        "\"THREE.ObjectLoader: Undefined texture\"",
        "\"Scene\"",
        "\"Fog\"",
        "\"FogExp2\"",
        "\"\"",
        "\"PerspectiveCamera\"",
        "\"OrthographicCamera\"",
        "\"AmbientLight\"",
        "\"DirectionalLight\"",
        "\"\"",
        "\"PointLight\"",
        "\"RectAreaLight\"",
        "\"SpotLight\"",
        "\"\"",
        "\"HemisphereLight\"",
        "\"LightProbe\"",
        "\"SkinnedMesh\"",
        "\"Mesh\"",
        "\"InstancedMesh\"",
        "\"BatchedMesh\"",
        "\"LOD\"",
        "\"Line\"",
        "\"LineLoop\"",
        "\"LineSegments\"",
        "\"PointCloud\"",
        "\"Points\"",
        "\"Sprite\"",
        "\"Group\"",
        "\"Bone\"",
        "\"LOD\"",
        "\"uuid\"",
        "\"THREE.ObjectLoader: No skeleton found with UUID:\"",
        "\"uuid\"",
        "\"undefined\"",
        "\"THREE.ImageBitmapLoader: createImageBitmap() not supported.\"",
        "\"undefined\"",
        "\"THREE.ImageBitmapLoader: fetch() not supported.\"",
        "\"none\"",
        "\"\"",
        "\"anonymous\"",
        "\"same-origin\"",
        "\"include\"",
        "\"none\"",
        "\"arraybuffer\"",
        "\"StereoCamera\"",
        "\"undefined\"",
        "\"AudioListener\"",
        "\"Audio\"",
        "\"empty\"",
        "\"audioNode\"",
        "\"mediaNode\"",
        "\"mediaStreamNode\"",
        "\"buffer\"",
        "\"THREE.Audio: Audio is already playing.\"",
        "\"THREE.Audio: this Audio has no playback control.\"",
        "\"THREE.Audio: this Audio has no playback control.\"",
        "\"THREE.Audio: this Audio has no playback control.\"",
        "\"THREE.Audio: this Audio has no playback control.\"",
        "\"THREE.Audio: this Audio has no playback control.\"",
        "\"THREE.Audio: this Audio has no playback control.\"",
        "\"HRTF\"",
        "\"quaternion\"",
        "\"string\"",
        "\"bool\"",
        "\"\\\\[\\\\]\\\\.:\\\\/\"",
        "\"[\"",
        "\"]\"",
        "\"g\"",
        "\"[^\"",
        "\"]\"",
        "\"[^\"",
        "\"\\\\.\"",
        "\"\"",
        "\"]\"",
        "\"WC\"",
        "\"WCOD\"",
        "\"WC\"",
        "\"WC\"",
        "\"^\"",
        "\"$\"",
        "\"material\"",
        "\"materials\"",
        "\"bones\"",
        "\"map\"",
        "\"_\"",
        "\"\"",
        "\"PropertyBinding: Cannot parse trackName: \"",
        "\".\"",
        "\"PropertyBinding: can not parse propertyName from trackName: \"",
        "\"\"",
        "\".\"",
        "\"THREE.PropertyBinding: No target node found for track: \"",
        "\".\"",
        "\"materials\"",
        "\"THREE.PropertyBinding: Can not bind to material as node does not have a material.\"",
        "\"THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.\"",
        "\"bones\"",
        "\"THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.\"",
        "\"map\"",
        "\"map\"",
        "\"THREE.PropertyBinding: Can not bind to material as node does not have a material.\"",
        "\"THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.\"",
        "\"THREE.PropertyBinding: Can not bind to objectName of node undefined.\"",
        "\"THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.\"",
        "\"THREE.PropertyBinding: Trying to update property for track: \"",
        "\".\"",
        "\" but it wasn't found.\"",
        "\"morphTargetInfluences\"",
        "\"THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.\"",
        "\"THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.\"",
        "\"THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.\"",
        "\"finished\"",
        "\"finished\"",
        "\"loop\"",
        "\"string\"",
        "\"string\"",
        "\"id\"",
        "\"\"",
        "\"dispose\"",
        "\"\"",
        "\"THREE.Raycaster: Unsupported camera type: \"",
        "\"SpotLightHelper\"",
        "\"position\"",
        "\"position\"",
        "\"color\"",
        "\"SkeletonHelper\"",
        "\"position\"",
        "\"position\"",
        "\"PointLightHelper\"",
        "\"HemisphereLightHelper\"",
        "\"position\"",
        "\"color\"",
        "\"color\"",
        "\"position\"",
        "\"color\"",
        "\"GridHelper\"",
        "\"position\"",
        "\"color\"",
        "\"PolarGridHelper\"",
        "\"DirectionalLightHelper\"",
        "\"position\"",
        "\"position\"",
        "\"n1\"",
        "\"n2\"",
        "\"n2\"",
        "\"n4\"",
        "\"n4\"",
        "\"n3\"",
        "\"n3\"",
        "\"n1\"",
        "\"f1\"",
        "\"f2\"",
        "\"f2\"",
        "\"f4\"",
        "\"f4\"",
        "\"f3\"",
        "\"f3\"",
        "\"f1\"",
        "\"n1\"",
        "\"f1\"",
        "\"n2\"",
        "\"f2\"",
        "\"n3\"",
        "\"f3\"",
        "\"n4\"",
        "\"f4\"",
        "\"p\"",
        "\"n1\"",
        "\"p\"",
        "\"n2\"",
        "\"p\"",
        "\"n3\"",
        "\"p\"",
        "\"n4\"",
        "\"u1\"",
        "\"u2\"",
        "\"u2\"",
        "\"u3\"",
        "\"u3\"",
        "\"u1\"",
        "\"c\"",
        "\"t\"",
        "\"p\"",
        "\"c\"",
        "\"cn1\"",
        "\"cn2\"",
        "\"cn3\"",
        "\"cn4\"",
        "\"cf1\"",
        "\"cf2\"",
        "\"cf3\"",
        "\"cf4\"",
        "\"position\"",
        "\"color\"",
        "\"CameraHelper\"",
        "\"color\"",
        "\"c\"",
        "\"t\"",
        "\"n1\"",
        "\"n2\"",
        "\"n3\"",
        "\"n4\"",
        "\"f1\"",
        "\"f2\"",
        "\"f3\"",
        "\"f4\"",
        "\"u1\"",
        "\"u2\"",
        "\"u3\"",
        "\"cf1\"",
        "\"cf2\"",
        "\"cf3\"",
        "\"cf4\"",
        "\"cn1\"",
        "\"cn2\"",
        "\"cn3\"",
        "\"cn4\"",
        "\"position\"",
        "\"position\"",
        "\"position\"",
        "\"BoxHelper\"",
        "\"THREE.BoxHelper: .update() has no longer arguments.\"",
        "\"position\"",
        "\"Box3Helper\"",
        "\"position\"",
        "\"PlaneHelper\"",
        "\"position\"",
        "\"ArrowHelper\"",
        "\"position\"",
        "\"position\"",
        "\"color\"",
        "\"AxesHelper\"",
        "\"ShapePath\"",
        "'THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the \"count\" parameter to enable MRT.'",
        "\"undefined\"",
        "\"register\"",
        "\"undefined\"",
        "\"WARNING: Multiple instances of Three.js being imported.\"",
        "\"@parcel/transformer-js/src/esmodule-helpers.js\"",
        "\"gkKU3\"",
        "\"gkKU3\"",
        "\"__esModule\"",
        "\"default\"",
        "\"__esModule\"",
        "\"7mqRv\"",
        "\"@parcel/transformer-js/src/esmodule-helpers.js\"",
        "\"OrbitControls\"",
        "\"three\"",
        "\"change\"",
        "\"start\"",
        "\"end\"",
        "\"none\"",
        "\"ArrowLeft\"",
        "\"ArrowUp\"",
        "\"ArrowRight\"",
        "\"ArrowDown\"",
        "\"keydown\"",
        "\"keydown\"",
        "\"WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.\"",
        "\"contextmenu\"",
        "\"pointerdown\"",
        "\"pointercancel\"",
        "\"wheel\"",
        "\"pointermove\"",
        "\"pointerup\"",
        "\"keydown\"",
        "\"keydown\"",
        "\"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"",
        "\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"",
        "\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"",
        "\"pointermove\"",
        "\"pointerup\"",
        "\"touch\"",
        "\"touch\"",
        "\"pointermove\"",
        "\"pointerup\"",
        "\"Control\"",
        "\"keyup\"",
        "\"Control\"",
        "\"keyup\"",
        "\"contextmenu\"",
        "\"pointerdown\"",
        "\"pointercancel\"",
        "\"wheel\"",
        "\"keydown\"",
        "\"three\"",
        "\"ktPTu\"",
        "\"@parcel/transformer-js/src/esmodule-helpers.js\"",
        "\"gkKU3\"",
        "\"2IYlH\"",
        "\"85574a2b5524feae\"",
        "\"2MSMO\"",
        "\"stars.a1d7fe60.jpg\"",
        "\"?\"",
        "\"85574a2b5524feae\"",
        "\"lgJ39\"",
        "\"lgJ39\"",
        "\"use strict\"",
        "\"\"",
        "\"/\"",
        "\"\"",
        "\"$1\"",
        "\"/\"",
        "\"\"",
        "\"Origin not found\"",
        "\"hnzhn\"",
        "\"b8a1de43e91a4fbe\"",
        "\"2MSMO\"",
        "\"sunmap.0e2aa9a8.jpg\"",
        "\"?\"",
        "\"b8a1de43e91a4fbe\"",
        "\"lgJ39\"",
        "\"abGYH\"",
        "\"9c51628bc9d7a3b1\"",
        "\"2MSMO\"",
        "\"mercurymap.11dc9ebb.jpg\"",
        "\"?\"",
        "\"9c51628bc9d7a3b1\"",
        "\"lgJ39\"",
        "\"13Whs\"",
        "\"2b02fc0f644a7a19\"",
        "\"2MSMO\"",
        "\"venusmap.137a5c1f.jpg\"",
        "\"?\"",
        "\"2b02fc0f644a7a19\"",
        "\"lgJ39\"",
        "\"g7MLT\"",
        "\"b6f4e9d6be2ec78d\"",
        "\"2MSMO\"",
        "\"earthmap1k.ea0d520b.jpg\"",
        "\"?\"",
        "\"b6f4e9d6be2ec78d\"",
        "\"lgJ39\"",
        "\"k8Zkt\"",
        "\"4896c1fe45bc18b8\"",
        "\"2MSMO\"",
        "\"mars.39828838.jpg\"",
        "\"?\"",
        "\"4896c1fe45bc18b8\"",
        "\"lgJ39\"",
        "\"aoCD2\"",
        "\"89b58ab304228b0b\"",
        "\"2MSMO\"",
        "\"jupitermap.b28bb4c7.jpg\"",
        "\"?\"",
        "\"89b58ab304228b0b\"",
        "\"lgJ39\"",
        "\"iASAy\"",
        "\"978735b372e19d46\"",
        "\"2MSMO\"",
        "\"saturnmap.cd77eee8.jpg\"",
        "\"?\"",
        "\"978735b372e19d46\"",
        "\"lgJ39\"",
        "\"lpiK9\"",
        "\"c3e0c9e069ac65e9\"",
        "\"2MSMO\"",
        "\"uranusmap.1d5ec85e.jpg\"",
        "\"?\"",
        "\"c3e0c9e069ac65e9\"",
        "\"lgJ39\"",
        "\"l6K4I\"",
        "\"bd638b07467a4b94\"",
        "\"2MSMO\"",
        "\"uranusringcolour.acc3c69f.jpg\"",
        "\"?\"",
        "\"bd638b07467a4b94\"",
        "\"lgJ39\"",
        "\"7hdKj\"",
        "\"7c55cac568598e7e\"",
        "\"2MSMO\"",
        "\"neptunemap.28e1bd52.jpg\"",
        "\"?\"",
        "\"7c55cac568598e7e\"",
        "\"lgJ39\"",
        "\"3gAeJ\"",
        "\"e4c4e8c7467875ce\"",
        "\"2MSMO\"",
        "\"plutomap.0b6f49c7.jpg\"",
        "\"?\"",
        "\"e4c4e8c7467875ce\"",
        "\"lgJ39\"",
        "\"5VuNt\"",
        "\"2cbbff37d6df037\"",
        "\"2MSMO\"",
        "\"saturnringcolor.25d2b970.png\"",
        "\"?\"",
        "\"2cbbff37d6df037\"",
        "\"lgJ39\"",
        "\"2L15i\"",
        "\"dV6cC\"",
        "\"dV6cC\"",
        "\"parcelRequire3d9d\""
    ],
    "variables": [
        "globalObject",
        "previousRequire",
        "cache",
        "nodeRequire",
        "currentRequire",
        "err",
        "res",
        "id",
        "i",
        "mainExports",
        "HMR_HOST",
        "HMR_PORT",
        "HMR_SECURE",
        "HMR_ENV_HASH",
        "HMR_USE_SSE",
        "OVERLAY_ID",
        "OldModule",
        "checkedAssets",
        "assetsToDispose",
        "assetsToAccept",
        "parent",
        "hostname",
        "port",
        "protocol",
        "ws",
        "extCtx",
        "supportsSourceURL",
        "data",
        "assets",
        "handled",
        "processedAssets",
        "i",
        "id",
        "i",
        "id",
        "stack",
        "overlay",
        "overlay",
        "overlay",
        "errorHTML",
        "stack",
        "modules",
        "parents",
        "k",
        "d",
        "dep",
        "href",
        "newLink",
        "cssTimeout",
        "links",
        "i",
        "href",
        "hostname",
        "servedFromHMRServer",
        "absolute",
        "script",
        "_document$head",
        "scriptsToRemove",
        "promises",
        "_hmrDownload",
        "_document$head2",
        "modules",
        "deps",
        "oldDeps",
        "id",
        "parents",
        "fn",
        "modules",
        "deps",
        "orphans",
        "parents",
        "parents",
        "accepted",
        "v",
        "a",
        "p",
        "modules",
        "cached",
        "cached",
        "cached",
        "assetsToAlsoAccept",
        "parcelHelpers",
        "_three",
        "_orbitControlsJs",
        "_starsJpg",
        "_starsJpgDefault",
        "_sunmapJpg",
        "_sunmapJpgDefault",
        "_mercurymapJpg",
        "_mercurymapJpgDefault",
        "_venusmapJpg",
        "_venusmapJpgDefault",
        "_earthMap1KJpg",
        "_earthMap1KJpgDefault",
        "_marsJpg",
        "_marsJpgDefault",
        "_jupitermapJpg",
        "_jupitermapJpgDefault",
        "_saturnmapJpg",
        "_saturnmapJpgDefault",
        "_saturnringcolorPng",
        "_saturnringcolorPngDefault",
        "_uranusmapJpg",
        "_uranusmapJpgDefault",
        "_uranusringcolourJpg",
        "_uranusringcolourJpgDefault",
        "_neptunemapJpg",
        "_neptunemapJpgDefault",
        "_plutomapJpg",
        "_plutomapJpgDefault",
        "renderer",
        "scene",
        "camera",
        "orbit",
        "ambientLight",
        "cubeTextureLoader",
        "textureLoader",
        "sunGeo",
        "sunMat",
        "sun",
        "geo",
        "mat",
        "mesh",
        "obj",
        "ringGeo",
        "ringMat",
        "ringMesh",
        "mercury",
        "venus",
        "saturn",
        "pointLight",
        "parcelHelpers",
        "REVISION",
        "MOUSE",
        "TOUCH",
        "CullFaceNone",
        "CullFaceBack",
        "CullFaceFront",
        "CullFaceFrontBack",
        "BasicShadowMap",
        "PCFShadowMap",
        "PCFSoftShadowMap",
        "VSMShadowMap",
        "FrontSide",
        "BackSide",
        "DoubleSide",
        "NoBlending",
        "NormalBlending",
        "AdditiveBlending",
        "SubtractiveBlending",
        "MultiplyBlending",
        "CustomBlending",
        "AddEquation",
        "SubtractEquation",
        "ReverseSubtractEquation",
        "MinEquation",
        "MaxEquation",
        "ZeroFactor",
        "OneFactor",
        "SrcColorFactor",
        "OneMinusSrcColorFactor",
        "SrcAlphaFactor",
        "OneMinusSrcAlphaFactor",
        "DstAlphaFactor",
        "OneMinusDstAlphaFactor",
        "DstColorFactor",
        "OneMinusDstColorFactor",
        "SrcAlphaSaturateFactor",
        "ConstantColorFactor",
        "OneMinusConstantColorFactor",
        "ConstantAlphaFactor",
        "OneMinusConstantAlphaFactor",
        "NeverDepth",
        "AlwaysDepth",
        "LessDepth",
        "LessEqualDepth",
        "EqualDepth",
        "GreaterEqualDepth",
        "GreaterDepth",
        "NotEqualDepth",
        "MultiplyOperation",
        "MixOperation",
        "AddOperation",
        "NoToneMapping",
        "LinearToneMapping",
        "ReinhardToneMapping",
        "CineonToneMapping",
        "ACESFilmicToneMapping",
        "CustomToneMapping",
        "AgXToneMapping",
        "NeutralToneMapping",
        "AttachedBindMode",
        "DetachedBindMode",
        "UVMapping",
        "CubeReflectionMapping",
        "CubeRefractionMapping",
        "EquirectangularReflectionMapping",
        "EquirectangularRefractionMapping",
        "CubeUVReflectionMapping",
        "RepeatWrapping",
        "ClampToEdgeWrapping",
        "MirroredRepeatWrapping",
        "NearestFilter",
        "NearestMipmapNearestFilter",
        "NearestMipMapNearestFilter",
        "NearestMipmapLinearFilter",
        "NearestMipMapLinearFilter",
        "LinearFilter",
        "LinearMipmapNearestFilter",
        "LinearMipMapNearestFilter",
        "LinearMipmapLinearFilter",
        "LinearMipMapLinearFilter",
        "UnsignedByteType",
        "ByteType",
        "ShortType",
        "UnsignedShortType",
        "IntType",
        "UnsignedIntType",
        "FloatType",
        "HalfFloatType",
        "UnsignedShort4444Type",
        "UnsignedShort5551Type",
        "UnsignedInt248Type",
        "UnsignedInt5999Type",
        "AlphaFormat",
        "RGBFormat",
        "RGBAFormat",
        "LuminanceFormat",
        "LuminanceAlphaFormat",
        "DepthFormat",
        "DepthStencilFormat",
        "RedFormat",
        "RedIntegerFormat",
        "RGFormat",
        "RGIntegerFormat",
        "RGBIntegerFormat",
        "RGBAIntegerFormat",
        "RGB_S3TC_DXT1_Format",
        "RGBA_S3TC_DXT1_Format",
        "RGBA_S3TC_DXT3_Format",
        "RGBA_S3TC_DXT5_Format",
        "RGB_PVRTC_4BPPV1_Format",
        "RGB_PVRTC_2BPPV1_Format",
        "RGBA_PVRTC_4BPPV1_Format",
        "RGBA_PVRTC_2BPPV1_Format",
        "RGB_ETC1_Format",
        "RGB_ETC2_Format",
        "RGBA_ETC2_EAC_Format",
        "RGBA_ASTC_4x4_Format",
        "RGBA_ASTC_5x4_Format",
        "RGBA_ASTC_5x5_Format",
        "RGBA_ASTC_6x5_Format",
        "RGBA_ASTC_6x6_Format",
        "RGBA_ASTC_8x5_Format",
        "RGBA_ASTC_8x6_Format",
        "RGBA_ASTC_8x8_Format",
        "RGBA_ASTC_10x5_Format",
        "RGBA_ASTC_10x6_Format",
        "RGBA_ASTC_10x8_Format",
        "RGBA_ASTC_10x10_Format",
        "RGBA_ASTC_12x10_Format",
        "RGBA_ASTC_12x12_Format",
        "RGBA_BPTC_Format",
        "RGB_BPTC_SIGNED_Format",
        "RGB_BPTC_UNSIGNED_Format",
        "RED_RGTC1_Format",
        "SIGNED_RED_RGTC1_Format",
        "RED_GREEN_RGTC2_Format",
        "SIGNED_RED_GREEN_RGTC2_Format",
        "LoopOnce",
        "LoopRepeat",
        "LoopPingPong",
        "InterpolateDiscrete",
        "InterpolateLinear",
        "InterpolateSmooth",
        "ZeroCurvatureEnding",
        "ZeroSlopeEnding",
        "WrapAroundEnding",
        "NormalAnimationBlendMode",
        "AdditiveAnimationBlendMode",
        "TrianglesDrawMode",
        "TriangleStripDrawMode",
        "TriangleFanDrawMode",
        "BasicDepthPacking",
        "RGBADepthPacking",
        "RGBDepthPacking",
        "RGDepthPacking",
        "TangentSpaceNormalMap",
        "ObjectSpaceNormalMap",
        "NoColorSpace",
        "SRGBColorSpace",
        "LinearSRGBColorSpace",
        "DisplayP3ColorSpace",
        "LinearDisplayP3ColorSpace",
        "LinearTransfer",
        "SRGBTransfer",
        "Rec709Primaries",
        "P3Primaries",
        "ZeroStencilOp",
        "KeepStencilOp",
        "ReplaceStencilOp",
        "IncrementStencilOp",
        "DecrementStencilOp",
        "IncrementWrapStencilOp",
        "DecrementWrapStencilOp",
        "InvertStencilOp",
        "NeverStencilFunc",
        "LessStencilFunc",
        "EqualStencilFunc",
        "LessEqualStencilFunc",
        "GreaterStencilFunc",
        "NotEqualStencilFunc",
        "GreaterEqualStencilFunc",
        "AlwaysStencilFunc",
        "NeverCompare",
        "LessCompare",
        "EqualCompare",
        "LessEqualCompare",
        "GreaterCompare",
        "NotEqualCompare",
        "GreaterEqualCompare",
        "AlwaysCompare",
        "StaticDrawUsage",
        "DynamicDrawUsage",
        "StreamDrawUsage",
        "StaticReadUsage",
        "DynamicReadUsage",
        "StreamReadUsage",
        "StaticCopyUsage",
        "DynamicCopyUsage",
        "StreamCopyUsage",
        "GLSL1",
        "GLSL3",
        "WebGLCoordinateSystem",
        "WebGPUCoordinateSystem",
        "listeners",
        "listeners",
        "listeners",
        "listenerArray",
        "index",
        "listeners",
        "listenerArray",
        "array",
        "i",
        "l",
        "_lut",
        "_seed",
        "DEG2RAD",
        "RAD2DEG",
        "d0",
        "d1",
        "d2",
        "d3",
        "uuid",
        "t",
        "cos",
        "sin",
        "c2",
        "s2",
        "c13",
        "s13",
        "c1_3",
        "s1_3",
        "c3_1",
        "s3_1",
        "MathUtils",
        "x",
        "y",
        "e",
        "length",
        "angle",
        "denominator",
        "theta",
        "dx",
        "dy",
        "c",
        "s",
        "x",
        "y",
        "te",
        "te",
        "me",
        "me",
        "ae",
        "be",
        "te",
        "a11",
        "a12",
        "a13",
        "a21",
        "a22",
        "a23",
        "a31",
        "a32",
        "a33",
        "b11",
        "b12",
        "b13",
        "b21",
        "b22",
        "b23",
        "b31",
        "b32",
        "b33",
        "te",
        "te",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "h",
        "i",
        "te",
        "n11",
        "n21",
        "n31",
        "n12",
        "n22",
        "n32",
        "n13",
        "n23",
        "n33",
        "t11",
        "t12",
        "t13",
        "det",
        "detInv",
        "tmp",
        "m",
        "m",
        "c",
        "s",
        "c",
        "s",
        "te",
        "me",
        "i",
        "i",
        "te",
        "_m3",
        "i",
        "TYPED_ARRAYS",
        "canvas",
        "_cache",
        "LINEAR_SRGB_TO_LINEAR_DISPLAY_P3",
        "LINEAR_DISPLAY_P3_TO_LINEAR_SRGB",
        "COLOR_SPACES",
        "SUPPORTED_WORKING_COLOR_SPACES",
        "ColorManagement",
        "sourceToReference",
        "targetFromReference",
        "_canvas",
        "canvas",
        "context",
        "canvas",
        "context",
        "imageData",
        "data",
        "i",
        "data",
        "i",
        "_sourceId",
        "isRootObject",
        "output",
        "data",
        "url",
        "i",
        "l",
        "_textureId",
        "isRootObject",
        "output",
        "x",
        "y",
        "z",
        "w",
        "e",
        "s",
        "angle",
        "x",
        "y",
        "z",
        "epsilon",
        "epsilon2",
        "te",
        "m11",
        "m12",
        "m13",
        "m21",
        "m22",
        "m23",
        "m31",
        "m32",
        "m33",
        "xx",
        "yy",
        "zz",
        "xy",
        "xz",
        "yz",
        "s",
        "e",
        "length",
        "image",
        "texture",
        "count",
        "i",
        "i",
        "il",
        "i",
        "il",
        "image",
        "x0",
        "y0",
        "z0",
        "w0",
        "x1",
        "y1",
        "z1",
        "w1",
        "s",
        "cos",
        "dir",
        "sqrSin",
        "sin",
        "len",
        "tDir",
        "f",
        "x0",
        "y0",
        "z0",
        "w0",
        "x1",
        "y1",
        "z1",
        "w1",
        "x",
        "y",
        "z",
        "order",
        "cos",
        "sin",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "halfAngle",
        "s",
        "te",
        "m11",
        "m12",
        "m13",
        "m21",
        "m22",
        "m23",
        "m31",
        "m32",
        "m33",
        "trace",
        "s",
        "s",
        "s",
        "s",
        "r",
        "angle",
        "t",
        "l",
        "qax",
        "qay",
        "qaz",
        "qaw",
        "qbx",
        "qby",
        "qbz",
        "qbw",
        "x",
        "y",
        "z",
        "w",
        "cosHalfTheta",
        "sqrSinHalfTheta",
        "s",
        "sinHalfTheta",
        "halfTheta",
        "ratioA",
        "ratioB",
        "theta1",
        "theta2",
        "x0",
        "r1",
        "r2",
        "x",
        "y",
        "z",
        "e",
        "x",
        "y",
        "z",
        "e",
        "w",
        "vx",
        "vy",
        "vz",
        "qx",
        "qy",
        "qz",
        "qw",
        "tx",
        "ty",
        "tz",
        "x",
        "y",
        "z",
        "e",
        "length",
        "ax",
        "ay",
        "az",
        "bx",
        "by",
        "bz",
        "denominator",
        "scalar",
        "denominator",
        "theta",
        "dx",
        "dy",
        "dz",
        "sinPhiRadius",
        "e",
        "sx",
        "sy",
        "sz",
        "theta",
        "u",
        "c",
        "_vector$c",
        "_quaternion$4",
        "i",
        "il",
        "i",
        "il",
        "i",
        "il",
        "halfSize",
        "geometry",
        "positionAttribute",
        "i",
        "l",
        "children",
        "i",
        "l",
        "min",
        "max",
        "axes",
        "_points",
        "_vector$b",
        "_box$4",
        "_v0$3",
        "_v1$7",
        "_v2$4",
        "_f0",
        "_f1",
        "_f2",
        "_center",
        "_extents",
        "_triangleNormal",
        "_testAxis",
        "i",
        "j",
        "r",
        "p0",
        "p1",
        "p2",
        "_box$3",
        "_v1$6",
        "_v2$3",
        "center",
        "maxRadiusSq",
        "i",
        "il",
        "radiusSum",
        "deltaLengthSq",
        "lengthSq",
        "length",
        "delta",
        "_vector$a",
        "_segCenter",
        "_segDir",
        "_diff",
        "_edge1",
        "_edge2",
        "_normal$1",
        "directionDistance",
        "directionDistance",
        "segExtent",
        "a01",
        "b0",
        "b1",
        "c",
        "det",
        "s0",
        "s1",
        "sqrDist",
        "extDet",
        "invDet",
        "tca",
        "d2",
        "radius2",
        "thc",
        "t0",
        "t1",
        "denominator",
        "t",
        "t",
        "distToPoint",
        "denominator",
        "tmin",
        "tmax",
        "tymin",
        "tymax",
        "tzmin",
        "tzmax",
        "invdirx",
        "invdiry",
        "invdirz",
        "origin",
        "DdN",
        "sign",
        "DdQxE2",
        "DdE1xQ",
        "QdN",
        "te",
        "te",
        "me",
        "te",
        "me",
        "me",
        "te",
        "me",
        "scaleX",
        "scaleY",
        "scaleZ",
        "te",
        "x",
        "y",
        "z",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "ae",
        "af",
        "be",
        "bf",
        "ce",
        "cf",
        "de",
        "df",
        "ce",
        "cf",
        "de",
        "df",
        "ae",
        "af",
        "be",
        "bf",
        "ac",
        "ad",
        "bc",
        "bd",
        "ac",
        "ad",
        "bc",
        "bd",
        "te",
        "ae",
        "be",
        "te",
        "a11",
        "a12",
        "a13",
        "a14",
        "a21",
        "a22",
        "a23",
        "a24",
        "a31",
        "a32",
        "a33",
        "a34",
        "a41",
        "a42",
        "a43",
        "a44",
        "b11",
        "b12",
        "b13",
        "b14",
        "b21",
        "b22",
        "b23",
        "b24",
        "b31",
        "b32",
        "b33",
        "b34",
        "b41",
        "b42",
        "b43",
        "b44",
        "te",
        "te",
        "n11",
        "n12",
        "n13",
        "n14",
        "n21",
        "n22",
        "n23",
        "n24",
        "n31",
        "n32",
        "n33",
        "n34",
        "n41",
        "n42",
        "n43",
        "n44",
        "te",
        "tmp",
        "te",
        "te",
        "n11",
        "n21",
        "n31",
        "n41",
        "n12",
        "n22",
        "n32",
        "n42",
        "n13",
        "n23",
        "n33",
        "n43",
        "n14",
        "n24",
        "n34",
        "n44",
        "t11",
        "t12",
        "t13",
        "t14",
        "det",
        "detInv",
        "te",
        "x",
        "y",
        "z",
        "te",
        "scaleXSq",
        "scaleYSq",
        "scaleZSq",
        "c",
        "s",
        "c",
        "s",
        "c",
        "s",
        "c",
        "s",
        "t",
        "x",
        "y",
        "z",
        "tx",
        "ty",
        "te",
        "x",
        "y",
        "z",
        "w",
        "x2",
        "y2",
        "z2",
        "xx",
        "xy",
        "xz",
        "yy",
        "yz",
        "zz",
        "wx",
        "wy",
        "wz",
        "sx",
        "sy",
        "sz",
        "te",
        "sx",
        "sy",
        "sz",
        "det",
        "invSX",
        "invSY",
        "invSZ",
        "te",
        "x",
        "y",
        "a",
        "b",
        "c",
        "d",
        "te",
        "w",
        "h",
        "p",
        "x",
        "y",
        "z",
        "zInv",
        "te",
        "me",
        "i",
        "i",
        "te",
        "_v1$5",
        "_m1$4",
        "_zero",
        "_one",
        "_x",
        "_y",
        "_z",
        "_matrix$2",
        "_quaternion$3",
        "te",
        "m11",
        "m12",
        "m13",
        "m21",
        "m22",
        "m23",
        "m31",
        "m32",
        "m33",
        "_object3DId",
        "_v1$4",
        "_q1",
        "_m1$3",
        "_target",
        "_position$3",
        "_scale$2",
        "_quaternion$2",
        "_xAxis",
        "_yAxis",
        "_zAxis",
        "_addedEvent",
        "_removedEvent",
        "_childaddedEvent",
        "_childremovedEvent",
        "position",
        "rotation",
        "quaternion",
        "scale",
        "parent",
        "i",
        "i",
        "index",
        "parent",
        "i",
        "l",
        "child",
        "children",
        "i",
        "l",
        "e",
        "children",
        "i",
        "l",
        "children",
        "i",
        "l",
        "parent",
        "children",
        "i",
        "l",
        "child",
        "parent",
        "children",
        "i",
        "l",
        "child",
        "isRootObject",
        "output",
        "parameters",
        "shapes",
        "i",
        "l",
        "shape",
        "uuids",
        "i",
        "l",
        "i",
        "i",
        "animation",
        "geometries",
        "materials",
        "textures",
        "images",
        "shapes",
        "skeletons",
        "animations",
        "nodes",
        "values",
        "data",
        "i",
        "child",
        "_v0$2",
        "_v1$3",
        "_v2$2",
        "_v3$2",
        "_vab",
        "_vac",
        "_vbc",
        "_vap",
        "_vbp",
        "_vcp",
        "targetLengthSq",
        "dot00",
        "dot01",
        "dot02",
        "dot11",
        "dot12",
        "denom",
        "invDenom",
        "u",
        "v",
        "a",
        "b",
        "c",
        "v",
        "w",
        "d1",
        "d2",
        "d3",
        "d4",
        "vc",
        "d5",
        "d6",
        "vb",
        "va",
        "denom",
        "_colorKeywords",
        "_hslA",
        "_hslB",
        "value",
        "r",
        "p",
        "q",
        "m",
        "color",
        "name",
        "components",
        "hex",
        "size",
        "hex",
        "r",
        "g",
        "b",
        "max",
        "min",
        "hue",
        "saturation",
        "lightness",
        "delta",
        "r",
        "g",
        "b",
        "h",
        "s",
        "l",
        "r",
        "g",
        "b",
        "e",
        "_color",
        "_materialId",
        "newValue",
        "currentValue",
        "isRootObject",
        "data",
        "values",
        "data",
        "textures",
        "images",
        "srcPlanes",
        "dstPlanes",
        "n",
        "i",
        "_tables",
        "buffer",
        "floatView",
        "uint32View",
        "baseTable",
        "shiftTable",
        "i",
        "e",
        "mantissaTable",
        "exponentTable",
        "offsetTable",
        "i",
        "m",
        "e",
        "i",
        "i",
        "i",
        "i",
        "f",
        "e",
        "m",
        "DataUtils",
        "_vector$9",
        "_vector2$1",
        "i",
        "l",
        "i",
        "l",
        "i",
        "l",
        "i",
        "l",
        "i",
        "l",
        "i",
        "l",
        "value",
        "x",
        "y",
        "z",
        "w",
        "data",
        "x",
        "y",
        "z",
        "w",
        "_id$2",
        "_m1$2",
        "_obj",
        "_offset",
        "_box$2",
        "_boxMorphTargets",
        "_vector$8",
        "position",
        "normal",
        "normalMatrix",
        "tangent",
        "position",
        "i",
        "l",
        "point",
        "position",
        "morphAttributesPosition",
        "i",
        "il",
        "morphAttribute",
        "position",
        "morphAttributesPosition",
        "center",
        "i",
        "il",
        "morphAttribute",
        "maxRadiusSq",
        "i",
        "il",
        "i",
        "il",
        "morphAttribute",
        "morphTargetsRelative",
        "j",
        "jl",
        "index",
        "attributes",
        "positionAttribute",
        "normalAttribute",
        "uvAttribute",
        "tangentAttribute",
        "tan1",
        "tan2",
        "i",
        "vA",
        "vB",
        "vC",
        "uvA",
        "uvB",
        "uvC",
        "sdir",
        "tdir",
        "r",
        "groups",
        "i",
        "il",
        "group",
        "start",
        "count",
        "j",
        "start",
        "jl",
        "tmp",
        "tmp2",
        "n",
        "n2",
        "t",
        "test",
        "w",
        "i",
        "il",
        "group",
        "start",
        "count",
        "j",
        "start",
        "jl",
        "index",
        "positionAttribute",
        "normalAttribute",
        "i",
        "il",
        "pA",
        "pB",
        "pC",
        "nA",
        "nB",
        "nC",
        "cb",
        "ab",
        "i",
        "il",
        "vA",
        "vB",
        "vC",
        "i",
        "il",
        "normals",
        "i",
        "il",
        "array",
        "itemSize",
        "normalized",
        "array2",
        "index",
        "index2",
        "i",
        "l",
        "j",
        "geometry2",
        "indices",
        "attributes",
        "attribute",
        "newAttribute",
        "morphAttributes",
        "morphArray",
        "morphAttribute",
        "i",
        "il",
        "attribute",
        "newAttribute",
        "groups",
        "i",
        "l",
        "group",
        "data",
        "parameters",
        "index",
        "attributes",
        "attribute",
        "morphAttributes",
        "hasMorphAttributes",
        "attributeArray",
        "array",
        "i",
        "il",
        "attribute",
        "groups",
        "boundingSphere",
        "data",
        "index",
        "attributes",
        "attribute",
        "morphAttributes",
        "array",
        "morphAttribute",
        "i",
        "l",
        "groups",
        "i",
        "l",
        "group",
        "boundingBox",
        "boundingSphere",
        "_inverseMatrix$3",
        "_ray$3",
        "_sphere$6",
        "_sphereHitAt",
        "_vA$1",
        "_vB$1",
        "_vC$1",
        "_tempA",
        "_morphA",
        "_uvA$1",
        "_uvB$1",
        "_uvC$1",
        "_normalA",
        "_normalB",
        "_normalC",
        "_intersectionPoint",
        "_intersectionPointWorld",
        "geometry",
        "morphAttributes",
        "keys",
        "morphAttribute",
        "m",
        "ml",
        "name",
        "geometry",
        "position",
        "morphPosition",
        "morphTargetsRelative",
        "morphInfluences",
        "i",
        "il",
        "influence",
        "morphAttribute",
        "geometry",
        "material",
        "matrixWorld",
        "intersection",
        "geometry",
        "material",
        "index",
        "position",
        "uv",
        "uv1",
        "normal",
        "groups",
        "drawRange",
        "i",
        "il",
        "group",
        "groupMaterial",
        "start",
        "end",
        "j",
        "start",
        "jl",
        "end",
        "a",
        "b",
        "c",
        "start",
        "end",
        "i",
        "start",
        "il",
        "end",
        "a",
        "b",
        "c",
        "i",
        "il",
        "group",
        "groupMaterial",
        "start",
        "end",
        "j",
        "start",
        "jl",
        "end",
        "a",
        "j",
        "b",
        "c",
        "start",
        "end",
        "i",
        "start",
        "il",
        "end",
        "a",
        "i",
        "b",
        "c",
        "intersect",
        "distance",
        "intersection",
        "face",
        "scope",
        "indices",
        "vertices",
        "normals",
        "uvs",
        "numberOfVertices",
        "groupStart",
        "segmentWidth",
        "segmentHeight",
        "widthHalf",
        "heightHalf",
        "depthHalf",
        "gridX1",
        "gridY1",
        "vertexCounter",
        "groupCount",
        "vector",
        "iy",
        "y",
        "ix",
        "x",
        "iy",
        "ix",
        "a",
        "b",
        "c",
        "d",
        "dst",
        "property",
        "merged",
        "u",
        "tmp",
        "dst",
        "u",
        "currentRenderTarget",
        "UniformsUtils",
        "default_vertex",
        "default_fragment",
        "data",
        "uniform",
        "value",
        "extensions",
        "_v3$1",
        "_minTarget",
        "_maxTarget",
        "vExtentSlope",
        "vExtentSlope",
        "near",
        "top",
        "height",
        "width",
        "left",
        "view",
        "fullWidth",
        "fullHeight",
        "skew",
        "data",
        "fov",
        "aspect",
        "cameraPX",
        "cameraNX",
        "cameraPY",
        "cameraNY",
        "cameraPZ",
        "cameraNZ",
        "coordinateSystem",
        "cameras",
        "cameraPX",
        "cameraNX",
        "cameraPY",
        "cameraNY",
        "cameraPZ",
        "cameraNZ",
        "cameras",
        "cameraPX",
        "cameraNX",
        "cameraPY",
        "cameraNY",
        "cameraPZ",
        "cameraNZ",
        "currentRenderTarget",
        "currentActiveCubeFace",
        "currentActiveMipmapLevel",
        "currentXrEnabled",
        "generateMipmaps",
        "image",
        "images",
        "shader",
        "geometry",
        "material",
        "mesh",
        "currentMinFilter",
        "camera",
        "currentRenderTarget",
        "i",
        "_vector1",
        "_vector2",
        "_normalMatrix",
        "normal",
        "inverseNormalLength",
        "direction",
        "denominator",
        "t",
        "startSign",
        "endSign",
        "normalMatrix",
        "referencePoint",
        "normal",
        "_sphere$5",
        "_vector$7",
        "planes",
        "planes",
        "i",
        "planes",
        "me",
        "me0",
        "me1",
        "me2",
        "me3",
        "me4",
        "me5",
        "me6",
        "me7",
        "me8",
        "me9",
        "me10",
        "me11",
        "me12",
        "me13",
        "me14",
        "me15",
        "geometry",
        "planes",
        "center",
        "negRadius",
        "i",
        "distance",
        "planes",
        "i",
        "plane",
        "planes",
        "i",
        "context",
        "isAnimating",
        "animationLoop",
        "requestId",
        "buffers",
        "array",
        "usage",
        "size",
        "buffer",
        "array",
        "updateRange",
        "updateRanges",
        "i",
        "l",
        "data",
        "cached",
        "data",
        "width_half",
        "height_half",
        "gridX",
        "gridY",
        "gridX1",
        "gridY1",
        "segment_width",
        "segment_height",
        "indices",
        "vertices",
        "normals",
        "uvs",
        "iy",
        "y",
        "ix",
        "x",
        "iy",
        "ix",
        "a",
        "b",
        "c",
        "d",
        "alphahash_fragment",
        "alphahash_pars_fragment",
        "alphamap_fragment",
        "alphamap_pars_fragment",
        "alphatest_fragment",
        "alphatest_pars_fragment",
        "aomap_fragment",
        "aomap_pars_fragment",
        "batching_pars_vertex",
        "batching_vertex",
        "begin_vertex",
        "beginnormal_vertex",
        "bsdfs",
        "iridescence_fragment",
        "bumpmap_pars_fragment",
        "clipping_planes_fragment",
        "clipping_planes_pars_fragment",
        "clipping_planes_pars_vertex",
        "clipping_planes_vertex",
        "color_fragment",
        "color_pars_fragment",
        "color_pars_vertex",
        "color_vertex",
        "common",
        "cube_uv_reflection_fragment",
        "defaultnormal_vertex",
        "displacementmap_pars_vertex",
        "displacementmap_vertex",
        "emissivemap_fragment",
        "emissivemap_pars_fragment",
        "colorspace_fragment",
        "colorspace_pars_fragment",
        "envmap_fragment",
        "envmap_common_pars_fragment",
        "envmap_pars_fragment",
        "envmap_pars_vertex",
        "envmap_vertex",
        "fog_vertex",
        "fog_pars_vertex",
        "fog_fragment",
        "fog_pars_fragment",
        "gradientmap_pars_fragment",
        "lightmap_pars_fragment",
        "lights_lambert_fragment",
        "lights_lambert_pars_fragment",
        "lights_pars_begin",
        "envmap_physical_pars_fragment",
        "lights_toon_fragment",
        "lights_toon_pars_fragment",
        "lights_phong_fragment",
        "lights_phong_pars_fragment",
        "lights_physical_fragment",
        "lights_physical_pars_fragment",
        "lights_fragment_begin",
        "lights_fragment_maps",
        "lights_fragment_end",
        "logdepthbuf_fragment",
        "logdepthbuf_pars_fragment",
        "logdepthbuf_pars_vertex",
        "logdepthbuf_vertex",
        "map_fragment",
        "map_pars_fragment",
        "map_particle_fragment",
        "map_particle_pars_fragment",
        "metalnessmap_fragment",
        "metalnessmap_pars_fragment",
        "morphinstance_vertex",
        "morphcolor_vertex",
        "morphnormal_vertex",
        "morphtarget_pars_vertex",
        "morphtarget_vertex",
        "normal_fragment_begin",
        "normal_fragment_maps",
        "normal_pars_fragment",
        "normal_pars_vertex",
        "normal_vertex",
        "normalmap_pars_fragment",
        "clearcoat_normal_fragment_begin",
        "clearcoat_normal_fragment_maps",
        "clearcoat_pars_fragment",
        "iridescence_pars_fragment",
        "opaque_fragment",
        "packing",
        "premultiplied_alpha_fragment",
        "project_vertex",
        "dithering_fragment",
        "dithering_pars_fragment",
        "roughnessmap_fragment",
        "roughnessmap_pars_fragment",
        "shadowmap_pars_fragment",
        "shadowmap_pars_vertex",
        "shadowmap_vertex",
        "shadowmask_pars_fragment",
        "skinbase_vertex",
        "skinning_pars_vertex",
        "skinning_vertex",
        "skinnormal_vertex",
        "specularmap_fragment",
        "specularmap_pars_fragment",
        "tonemapping_fragment",
        "tonemapping_pars_fragment",
        "transmission_fragment",
        "transmission_pars_fragment",
        "uv_pars_fragment",
        "uv_pars_vertex",
        "uv_vertex",
        "worldpos_vertex",
        "vertex$h",
        "fragment$h",
        "vertex$g",
        "fragment$g",
        "vertex$f",
        "fragment$f",
        "vertex$e",
        "fragment$e",
        "vertex$d",
        "fragment$d",
        "vertex$c",
        "fragment$c",
        "vertex$b",
        "fragment$b",
        "vertex$a",
        "fragment$a",
        "vertex$9",
        "fragment$9",
        "vertex$8",
        "fragment$8",
        "vertex$7",
        "fragment$7",
        "vertex$6",
        "fragment$6",
        "vertex$5",
        "fragment$5",
        "vertex$4",
        "fragment$4",
        "vertex$3",
        "fragment$3",
        "vertex$2",
        "fragment$2",
        "vertex$1",
        "fragment$1",
        "ShaderChunk",
        "UniformsLib",
        "ShaderLib",
        "_rgb",
        "_e1$1",
        "_m1$1",
        "clearColor",
        "clearAlpha",
        "planeMesh",
        "boxMesh",
        "currentBackground",
        "currentBackgroundVersion",
        "currentTonemapping",
        "background",
        "usePMREM",
        "forceClear",
        "background",
        "environmentBlendMode",
        "background",
        "maxVertexAttributes",
        "bindingStates",
        "defaultState",
        "currentState",
        "defaultState",
        "forceUpdate",
        "updateBuffers",
        "state",
        "wireframe",
        "programMap",
        "stateMap",
        "state",
        "newAttributes",
        "enabledAttributes",
        "attributeDivisors",
        "i",
        "cachedAttributes",
        "geometryAttributes",
        "attributesNum",
        "programAttributes",
        "programAttribute",
        "cachedAttribute",
        "geometryAttribute",
        "cache",
        "attributes",
        "attributesNum",
        "programAttributes",
        "programAttribute",
        "attribute",
        "data",
        "newAttributes",
        "i",
        "il",
        "newAttributes",
        "enabledAttributes",
        "attributeDivisors",
        "newAttributes",
        "enabledAttributes",
        "i",
        "il",
        "geometryAttributes",
        "programAttributes",
        "materialDefaultAttributeValues",
        "programAttribute",
        "geometryAttribute",
        "normalized",
        "size",
        "attribute",
        "buffer",
        "bytesPerElement",
        "integer",
        "data",
        "stride",
        "offset",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "value",
        "programMap",
        "stateMap",
        "programMap",
        "stateMap",
        "programMap",
        "stateMap",
        "mode",
        "extension",
        "elementCount",
        "i",
        "extension",
        "i",
        "elementCount",
        "i",
        "i",
        "maxAnisotropy",
        "extension",
        "halfFloatSupportedByExt",
        "precision",
        "maxPrecision",
        "logarithmicDepthBuffer",
        "maxTextures",
        "maxVertexTextures",
        "maxTextureSize",
        "maxCubemapSize",
        "maxAttributes",
        "maxVertexUniforms",
        "maxVaryings",
        "maxFragmentUniforms",
        "vertexTextures",
        "maxSamples",
        "scope",
        "globalState",
        "numGlobalPlanes",
        "localClippingEnabled",
        "renderingShadows",
        "plane",
        "viewNormalMatrix",
        "uniform",
        "enabled",
        "planes",
        "clipIntersection",
        "clipShadows",
        "materialProperties",
        "nGlobal",
        "lGlobal",
        "dstArray",
        "i",
        "nPlanes",
        "dstArray",
        "flatSize",
        "viewMatrix",
        "i",
        "i4",
        "dstOffset",
        "cubemaps",
        "mapping",
        "cubemap",
        "image",
        "renderTarget",
        "texture",
        "cubemap",
        "dx",
        "dy",
        "cx",
        "cy",
        "left",
        "right",
        "top",
        "bottom",
        "scaleW",
        "scaleH",
        "data",
        "LOD_MIN",
        "EXTRA_LOD_SIGMA",
        "MAX_SAMPLES",
        "_flatCamera",
        "_clearColor",
        "_oldTarget",
        "_oldActiveCubeFace",
        "_oldActiveMipmapLevel",
        "_oldXrEnabled",
        "PHI",
        "INV_PHI",
        "_axisDirections",
        "cubeUVRenderTarget",
        "i",
        "cubeUVRenderTarget",
        "width",
        "height",
        "cubeUVRenderTarget",
        "tmpMesh",
        "fov",
        "aspect",
        "cubeCamera",
        "upSign",
        "forwardSign",
        "renderer",
        "originalAutoClear",
        "toneMapping",
        "backgroundMaterial",
        "backgroundBox",
        "useSolidColor",
        "background",
        "i",
        "col",
        "size",
        "renderer",
        "isCubeTexture",
        "material",
        "mesh",
        "uniforms",
        "size",
        "renderer",
        "autoClear",
        "n",
        "i",
        "sigma",
        "poleAxis",
        "pingPongRenderTarget",
        "renderer",
        "blurMaterial",
        "STANDARD_DEVIATIONS",
        "blurMesh",
        "blurUniforms",
        "pixels",
        "radiansPerPixel",
        "sigmaPixels",
        "samples",
        "weights",
        "sum",
        "i",
        "x",
        "weight",
        "i",
        "outputSize",
        "x",
        "y",
        "lodPlanes",
        "sizeLods",
        "sigmas",
        "lod",
        "lodMax",
        "totalLods",
        "i",
        "sizeLod",
        "sigma",
        "texelSize",
        "min",
        "max",
        "uv1",
        "cubeFaces",
        "vertices",
        "positionSize",
        "uvSize",
        "faceIndexSize",
        "position",
        "uv",
        "faceIndex",
        "face",
        "x",
        "y",
        "coordinates",
        "fill",
        "planes",
        "cubeUVRenderTarget",
        "weights",
        "poleAxis",
        "shaderMaterial",
        "cubeUVmaps",
        "pmremGenerator",
        "mapping",
        "isEquirectMap",
        "isCubeMap",
        "renderTarget",
        "currentPMREMVersion",
        "image",
        "count",
        "length",
        "i",
        "texture",
        "cubemapUV",
        "extensions",
        "extension",
        "extension",
        "geometries",
        "wireframeAttributes",
        "geometry",
        "array",
        "i",
        "l",
        "attribute",
        "geometryAttributes",
        "morphAttributes",
        "array",
        "i",
        "l",
        "indices",
        "geometryIndex",
        "geometryPosition",
        "version",
        "array",
        "i",
        "l",
        "a",
        "b",
        "c",
        "array",
        "i",
        "l",
        "a",
        "b",
        "c",
        "attribute",
        "previousAttribute",
        "currentAttribute",
        "geometryIndex",
        "mode",
        "bytesPerElement",
        "extension",
        "elementCount",
        "i",
        "extension",
        "i",
        "elementCount",
        "i",
        "i",
        "memory",
        "render",
        "morphTextures",
        "morph",
        "objectInfluences",
        "morphAttribute",
        "morphTargetsCount",
        "entry",
        "hasMorphPosition",
        "hasMorphNormals",
        "hasMorphColors",
        "morphTargets",
        "morphNormals",
        "morphColors",
        "vertexDataCount",
        "width",
        "height",
        "buffer",
        "texture",
        "vertexDataStride",
        "i",
        "morphTarget",
        "morphNormal",
        "morphColor",
        "offset",
        "j",
        "stride",
        "morphInfluencesSum",
        "i",
        "morphBaseInfluence",
        "updateMap",
        "frame",
        "geometry",
        "buffergeometry",
        "skeleton",
        "instancedMesh",
        "data",
        "emptyTexture",
        "emptyShadowTexture",
        "emptyArrayTexture",
        "empty3dTexture",
        "emptyCubeTexture",
        "arrayCacheF32",
        "arrayCacheI32",
        "mat4array",
        "mat3array",
        "mat2array",
        "firstElem",
        "n",
        "r",
        "i",
        "offset",
        "i",
        "l",
        "i",
        "l",
        "r",
        "i",
        "cache",
        "cache",
        "cache",
        "cache",
        "cache",
        "elements",
        "cache",
        "elements",
        "cache",
        "elements",
        "cache",
        "cache",
        "cache",
        "cache",
        "cache",
        "cache",
        "cache",
        "cache",
        "cache",
        "unit",
        "emptyTexture2D",
        "cache",
        "unit",
        "cache",
        "unit",
        "cache",
        "unit",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "cache",
        "n",
        "units",
        "i",
        "cache",
        "n",
        "units",
        "i",
        "cache",
        "n",
        "units",
        "i",
        "cache",
        "n",
        "units",
        "i",
        "seq",
        "i",
        "n",
        "u",
        "RePathPart",
        "path",
        "pathLength",
        "match",
        "matchEnd",
        "id",
        "idIsIndex",
        "subscript",
        "next",
        "n",
        "i",
        "info",
        "addr",
        "u",
        "v",
        "i",
        "n",
        "u",
        "v",
        "r",
        "i",
        "n",
        "u",
        "shader",
        "COMPLETION_STATUS_KHR",
        "programIdCount",
        "lines",
        "lines2",
        "to",
        "i",
        "line",
        "workingPrimaries",
        "encodingPrimaries",
        "gamutMapping",
        "status",
        "errors",
        "errorMatches",
        "errorLine",
        "components",
        "toneMappingName",
        "_v0$1",
        "r",
        "g",
        "b",
        "chunks",
        "chunks",
        "value",
        "attributes",
        "n",
        "i",
        "info",
        "name",
        "locationSize",
        "numSpotLightCoords",
        "includePattern",
        "shaderChunkMap",
        "newInclude",
        "unrollLoopPattern",
        "i",
        "precisionstring",
        "shadowMapTypeDefine",
        "envMapTypeDefine",
        "envMapModeDefine",
        "envMapBlendingDefine",
        "imageHeight",
        "maxMip",
        "texelHeight",
        "texelWidth",
        "gl",
        "defines",
        "vertexShader",
        "fragmentShader",
        "shadowMapTypeDefine",
        "envMapTypeDefine",
        "envMapModeDefine",
        "envMapBlendingDefine",
        "envMapCubeUVSize",
        "customVertexExtensions",
        "customDefines",
        "program",
        "prefixVertex",
        "prefixFragment",
        "versionString",
        "vertexGlsl",
        "fragmentGlsl",
        "glVertexShader",
        "glFragmentShader",
        "programLog",
        "vertexLog",
        "fragmentLog",
        "runnable",
        "haveDiagnostics",
        "vertexErrors",
        "fragmentErrors",
        "cachedUniforms",
        "cachedAttributes",
        "programReady",
        "_id$1",
        "vertexShader",
        "fragmentShader",
        "vertexShaderStage",
        "fragmentShaderStage",
        "materialShaders",
        "materialShaders",
        "cache",
        "cache",
        "stage",
        "_programLayers",
        "_customShaders",
        "_activeChannels",
        "programs",
        "logarithmicDepthBuffer",
        "SUPPORTS_VERTEX_TEXTURES",
        "precision",
        "shaderIDs",
        "fog",
        "geometry",
        "environment",
        "envMap",
        "envMapCubeUVHeight",
        "shaderID",
        "morphAttribute",
        "morphTargetsCount",
        "morphTextureStride",
        "vertexShader",
        "fragmentShader",
        "customVertexShaderID",
        "customFragmentShaderID",
        "shader",
        "currentRenderTarget",
        "IS_INSTANCEDMESH",
        "IS_BATCHEDMESH",
        "HAS_MAP",
        "HAS_MATCAP",
        "HAS_ENVMAP",
        "HAS_AOMAP",
        "HAS_LIGHTMAP",
        "HAS_BUMPMAP",
        "HAS_NORMALMAP",
        "HAS_DISPLACEMENTMAP",
        "HAS_EMISSIVEMAP",
        "HAS_METALNESSMAP",
        "HAS_ROUGHNESSMAP",
        "HAS_ANISOTROPY",
        "HAS_CLEARCOAT",
        "HAS_DISPERSION",
        "HAS_IRIDESCENCE",
        "HAS_SHEEN",
        "HAS_TRANSMISSION",
        "HAS_ANISOTROPYMAP",
        "HAS_CLEARCOATMAP",
        "HAS_CLEARCOAT_NORMALMAP",
        "HAS_CLEARCOAT_ROUGHNESSMAP",
        "HAS_IRIDESCENCEMAP",
        "HAS_IRIDESCENCE_THICKNESSMAP",
        "HAS_SHEEN_COLORMAP",
        "HAS_SHEEN_ROUGHNESSMAP",
        "HAS_SPECULARMAP",
        "HAS_SPECULAR_COLORMAP",
        "HAS_SPECULAR_INTENSITYMAP",
        "HAS_TRANSMISSIONMAP",
        "HAS_THICKNESSMAP",
        "HAS_GRADIENTMAP",
        "HAS_ALPHAMAP",
        "HAS_ALPHATEST",
        "HAS_ALPHAHASH",
        "HAS_EXTENSIONS",
        "toneMapping",
        "NoToneMapping",
        "parameters",
        "array",
        "shaderID",
        "uniforms",
        "shader",
        "program",
        "p",
        "pl",
        "preexistingProgram",
        "i",
        "properties",
        "renderItems",
        "renderItemsIndex",
        "opaque",
        "transmissive",
        "transparent",
        "renderItem",
        "renderItem",
        "renderItem",
        "i",
        "renderItemsIndex",
        "il",
        "renderItem",
        "lists",
        "listArray",
        "lights",
        "uniforms",
        "lights",
        "uniforms",
        "nextVersion",
        "cache",
        "shadowCache",
        "state",
        "i",
        "vector3",
        "matrix4",
        "matrix42",
        "r",
        "g",
        "b",
        "i",
        "directionalLength",
        "pointLength",
        "spotLength",
        "rectAreaLength",
        "hemiLength",
        "numDirectionalShadows",
        "numPointShadows",
        "numSpotShadows",
        "numSpotMaps",
        "numSpotShadowsWithMaps",
        "numLightProbes",
        "i",
        "l",
        "light",
        "color",
        "intensity",
        "distance",
        "shadowMap",
        "j",
        "uniforms",
        "shadow",
        "shadowUniforms",
        "uniforms",
        "shadow",
        "shadowUniforms",
        "uniforms",
        "uniforms",
        "shadow",
        "shadowUniforms",
        "uniforms",
        "hash",
        "directionalLength",
        "pointLength",
        "spotLength",
        "rectAreaLength",
        "hemiLength",
        "viewMatrix",
        "i",
        "l",
        "light",
        "uniforms",
        "uniforms",
        "uniforms",
        "uniforms",
        "uniforms",
        "lights",
        "lightsArray",
        "shadowsArray",
        "state",
        "renderStates",
        "renderStateArray",
        "renderState",
        "vertex",
        "fragment",
        "_frustum",
        "_shadowMapSize",
        "_viewportSize",
        "_viewport",
        "_depthMaterial",
        "_distanceMaterial",
        "_materialCache",
        "_maxTextureSize",
        "shadowSide",
        "shadowMaterialVertical",
        "shadowMaterialHorizontal",
        "fullScreenTri",
        "fullScreenMesh",
        "scope",
        "_previousType",
        "currentRenderTarget",
        "activeCubeFace",
        "activeMipmapLevel",
        "_state",
        "toVSM",
        "fromVSM",
        "i",
        "il",
        "light",
        "shadow",
        "shadowFrameExtents",
        "pars",
        "viewportCount",
        "vp",
        "viewport",
        "geometry",
        "result",
        "customMaterial",
        "keyA",
        "keyB",
        "materialsForVariant",
        "cachedMaterial",
        "materialProperties",
        "visible",
        "geometry",
        "material",
        "groups",
        "k",
        "kl",
        "group",
        "groupMaterial",
        "depthMaterial",
        "depthMaterial",
        "children",
        "i",
        "l",
        "material",
        "cache",
        "uuid",
        "shadowMaterial",
        "locked",
        "color",
        "currentColorMask",
        "currentColorClear",
        "locked",
        "currentDepthMask",
        "currentDepthFunc",
        "currentDepthClear",
        "locked",
        "currentStencilMask",
        "currentStencilFunc",
        "currentStencilRef",
        "currentStencilFuncMask",
        "currentStencilFail",
        "currentStencilZFail",
        "currentStencilZPass",
        "currentStencilClear",
        "colorBuffer",
        "depthBuffer",
        "stencilBuffer",
        "uboBindings",
        "uboProgramMap",
        "enabledCapabilities",
        "currentBoundFramebuffers",
        "currentDrawbuffers",
        "defaultDrawbuffers",
        "currentProgram",
        "currentBlendingEnabled",
        "currentBlending",
        "currentBlendEquation",
        "currentBlendSrc",
        "currentBlendDst",
        "currentBlendEquationAlpha",
        "currentBlendSrcAlpha",
        "currentBlendDstAlpha",
        "currentBlendColor",
        "currentBlendAlpha",
        "currentPremultipledAlpha",
        "currentFlipSided",
        "currentCullFace",
        "currentLineWidth",
        "currentPolygonOffsetFactor",
        "currentPolygonOffsetUnits",
        "maxTextures",
        "lineWidthAvailable",
        "version",
        "glVersion",
        "currentTextureSlot",
        "currentBoundTextures",
        "scissorParam",
        "viewportParam",
        "currentScissor",
        "currentViewport",
        "data",
        "texture",
        "i",
        "emptyTextures",
        "drawBuffers",
        "defaultDrawbuffers",
        "needsUpdate",
        "textures",
        "i",
        "il",
        "equationToGL",
        "factorToGL",
        "flipSided",
        "stencilWrite",
        "boundTexture",
        "boundTexture",
        "mapping",
        "blockIndex",
        "mapping",
        "blockIndex",
        "imageAspect",
        "imageAspect",
        "typeByteLength",
        "TextureUtils",
        "multisampledRTTExt",
        "supportsInvalidateFramebuffer",
        "_imageDimensions",
        "_videoTextures",
        "_canvas",
        "_sources",
        "useOffscreenCanvas",
        "scale",
        "dimensions",
        "width",
        "height",
        "canvas",
        "context",
        "internalFormat",
        "glFormat",
        "transfer",
        "glInternalFormat",
        "texture",
        "renderTarget",
        "textureProperties",
        "source",
        "webglTextures",
        "webglTexture",
        "textureProperties",
        "source",
        "webglTextures",
        "renderTargetProperties",
        "i",
        "level",
        "level",
        "i",
        "textures",
        "i",
        "il",
        "attachmentProperties",
        "textureUnits",
        "textureUnit",
        "textureUnits",
        "array",
        "textureProperties",
        "image",
        "textureProperties",
        "textureProperties",
        "textureProperties",
        "wrappingToGL",
        "filterToGL",
        "compareToGL",
        "extension",
        "forceUpload",
        "source",
        "webglTextures",
        "textureCacheKey",
        "webglTexture",
        "textureType",
        "forceUpload",
        "source",
        "sourceProperties",
        "workingPrimaries",
        "texturePrimaries",
        "unpackConversion",
        "image",
        "glFormat",
        "glType",
        "glInternalFormat",
        "mipmap",
        "mipmaps",
        "useTexStorage",
        "allocateMemory",
        "dataReady",
        "levels",
        "i",
        "il",
        "i",
        "il",
        "layerByteLength",
        "layerData",
        "i",
        "il",
        "layerByteLength",
        "layerData",
        "width",
        "height",
        "i",
        "dimensions",
        "i",
        "il",
        "dimensions",
        "forceUpload",
        "source",
        "sourceProperties",
        "workingPrimaries",
        "texturePrimaries",
        "unpackConversion",
        "isCompressed",
        "isDataTexture",
        "cubeImage",
        "i",
        "image",
        "glFormat",
        "glType",
        "glInternalFormat",
        "useTexStorage",
        "allocateMemory",
        "dataReady",
        "levels",
        "mipmaps",
        "i",
        "j",
        "mipmap",
        "dimensions",
        "i",
        "j",
        "mipmap",
        "mipmapImage",
        "j",
        "mipmap",
        "glFormat",
        "glType",
        "glInternalFormat",
        "renderTargetProperties",
        "width",
        "height",
        "depthTexture",
        "depthType",
        "glInternalFormat",
        "glAttachmentType",
        "samples",
        "isUseMultisampledRTT",
        "textures",
        "i",
        "texture",
        "glFormat",
        "glType",
        "glInternalFormat",
        "samples",
        "isCube",
        "webglDepthTexture",
        "samples",
        "renderTargetProperties",
        "isCube",
        "i",
        "renderTargetProperties",
        "texture",
        "renderTargetProperties",
        "textureProperties",
        "textures",
        "isCube",
        "isMultipleRenderTargets",
        "i",
        "level",
        "level",
        "i",
        "il",
        "attachmentProperties",
        "i",
        "texture",
        "glFormat",
        "glType",
        "glInternalFormat",
        "samples",
        "i",
        "level",
        "i",
        "il",
        "attachment",
        "attachmentProperties",
        "glTextureType",
        "level",
        "textures",
        "i",
        "il",
        "texture",
        "target",
        "webglTexture",
        "invalidationArrayRead",
        "invalidationArrayDraw",
        "textures",
        "width",
        "height",
        "mask",
        "depthStyle",
        "renderTargetProperties",
        "isMultipleRenderTargets",
        "i",
        "i",
        "webglTexture",
        "i",
        "webglTexture",
        "depthStyle",
        "renderTargetProperties",
        "frame",
        "colorSpace1",
        "format",
        "extension",
        "transfer",
        "_moveEvent",
        "hand",
        "inputPose",
        "gripPose",
        "handPose",
        "targetRay",
        "grip",
        "hand",
        "jointPose",
        "joint",
        "indexTip",
        "thumbTip",
        "distance",
        "distanceToPinch",
        "threshold",
        "joint",
        "_occlusion_vertex",
        "_occlusion_fragment",
        "texture",
        "texProps",
        "viewport",
        "material",
        "scope",
        "session",
        "framebufferScaleFactor",
        "referenceSpace",
        "referenceSpaceType",
        "foveation",
        "customReferenceSpace",
        "pose",
        "glBinding",
        "glProjLayer",
        "glBaseLayer",
        "xrFrame",
        "depthSensing",
        "attributes",
        "initialRenderTarget",
        "newRenderTarget",
        "controllers",
        "controllerInputSources",
        "currentSize",
        "currentPixelRatio",
        "cameraL",
        "cameraR",
        "cameras",
        "cameraXR",
        "_currentDepthNear",
        "_currentDepthFar",
        "controller",
        "controller",
        "controller",
        "controllerIndex",
        "controller",
        "i",
        "inputSource",
        "layerInit",
        "depthFormat",
        "depthType",
        "glDepthFormat",
        "projectionlayerInit",
        "i",
        "inputSource",
        "index",
        "i",
        "inputSource",
        "controllerIndex",
        "i",
        "controller",
        "cameraLPos",
        "cameraRPos",
        "ipd",
        "projL",
        "projR",
        "near",
        "far",
        "topFov",
        "bottomFov",
        "leftFov",
        "rightFov",
        "left",
        "right",
        "zOffset",
        "xOffset",
        "near2",
        "far2",
        "left2",
        "right2",
        "top2",
        "bottom2",
        "parent",
        "cameras",
        "i",
        "onAnimationFrameCallback",
        "views",
        "cameraXRNeedsUpdate",
        "i",
        "view",
        "viewport",
        "glSubImage",
        "camera",
        "enabledFeatures",
        "depthData",
        "i",
        "inputSource",
        "controller",
        "animation",
        "_e1",
        "_m1",
        "materialProperties",
        "envMap",
        "envMapRotation",
        "light",
        "buffers",
        "updateList",
        "allocatedBindingPoints",
        "maxBindingPoints",
        "webglProgram",
        "buffer",
        "webglProgram",
        "frame",
        "bindingPointIndex",
        "buffer",
        "size",
        "usage",
        "i",
        "buffer",
        "uniforms",
        "cache",
        "i",
        "il",
        "uniformArray",
        "j",
        "jl",
        "uniform",
        "offset",
        "values",
        "arrayOffset",
        "k",
        "value",
        "info",
        "value",
        "indexString",
        "cachedObject",
        "uniforms",
        "offset",
        "chunkSize",
        "i",
        "l",
        "uniformArray",
        "j",
        "jl",
        "uniform",
        "values",
        "k",
        "kl",
        "value",
        "info",
        "chunkOffset",
        "chunkPadding",
        "chunkStart",
        "chunkOffset",
        "info",
        "uniformsGroup",
        "index",
        "parameters",
        "_alpha",
        "uintClearColor",
        "intClearColor",
        "currentRenderList",
        "currentRenderState",
        "renderListStack",
        "renderStateStack",
        "_this",
        "_isContextLost",
        "_currentActiveCubeFace",
        "_currentActiveMipmapLevel",
        "_currentRenderTarget",
        "_currentMaterialId",
        "_currentCamera",
        "_currentViewport",
        "_currentScissor",
        "_currentScissorTest",
        "_currentClearColor",
        "_currentClearAlpha",
        "_width",
        "_height",
        "_pixelRatio",
        "_opaqueSort",
        "_transparentSort",
        "_viewport",
        "_scissor",
        "_scissorTest",
        "_frustum",
        "_clippingEnabled",
        "_localClippingEnabled",
        "_projScreenMatrix",
        "_vector3",
        "_vector4",
        "_emptyScene",
        "_renderBackground",
        "_gl",
        "context",
        "contextAttributes",
        "contextName",
        "extensions",
        "capabilities",
        "state",
        "info",
        "properties",
        "textures",
        "cubemaps",
        "cubeuvmaps",
        "attributes",
        "geometries",
        "objects",
        "programCache",
        "materials",
        "renderLists",
        "renderStates",
        "clipping",
        "shadowMap",
        "background",
        "morphtargets",
        "bufferRenderer",
        "indexedBufferRenderer",
        "utils",
        "bindingStates",
        "uniformsGroups",
        "xr",
        "extension",
        "extension",
        "bits",
        "isIntegerFormat",
        "targetFormat",
        "targetType",
        "isUnsignedType",
        "clearColor",
        "a",
        "r",
        "g",
        "b",
        "infoAutoReset",
        "shadowMapEnabled",
        "shadowMapAutoUpdate",
        "shadowMapNeedsUpdate",
        "shadowMapType",
        "material",
        "programs",
        "frontFaceCW",
        "program",
        "index",
        "rangeFactor",
        "drawRange",
        "position",
        "drawStart",
        "drawEnd",
        "drawCount",
        "attribute",
        "renderer",
        "bufferRenderer",
        "lineWidth",
        "starts",
        "counts",
        "drawCount",
        "bytesPerElement",
        "uniforms",
        "i",
        "maxInstanceCount",
        "instanceCount",
        "materials",
        "material",
        "i",
        "material2",
        "materials",
        "materialProperties",
        "program",
        "onAnimationFrameCallback",
        "animation",
        "depthSensingMesh",
        "shadowsArray",
        "opaqueObjects",
        "transmissiveObjects",
        "cameras",
        "i",
        "l",
        "camera2",
        "i",
        "l",
        "camera2",
        "visible",
        "geometry",
        "material",
        "geometry",
        "material",
        "groups",
        "i",
        "l",
        "group",
        "groupMaterial",
        "children",
        "i",
        "l",
        "opaqueObjects",
        "transmissiveObjects",
        "transparentObjects",
        "overrideMaterial",
        "transmissionRenderTarget",
        "activeViewport",
        "currentRenderTarget",
        "currentToneMapping",
        "currentCameraViewport",
        "renderTargetNeedsUpdate",
        "i",
        "l",
        "renderItem",
        "geometry",
        "material",
        "group",
        "currentSide",
        "overrideMaterial",
        "i",
        "l",
        "renderItem",
        "geometry",
        "material",
        "group",
        "materialProperties",
        "lights",
        "shadowsArray",
        "lightsStateVersion",
        "parameters",
        "programCacheKey",
        "programs",
        "program",
        "uniforms",
        "progUniforms",
        "materialProperties",
        "fog",
        "environment",
        "colorSpace1",
        "envMap",
        "vertexAlphas",
        "vertexTangents",
        "morphTargets",
        "morphNormals",
        "morphColors",
        "toneMapping",
        "NoToneMapping",
        "morphAttribute",
        "morphTargetsCount",
        "materialProperties",
        "lights",
        "useCache",
        "needsProgramChange",
        "program",
        "refreshProgram",
        "refreshMaterial",
        "refreshLights",
        "p_uniforms",
        "m_uniforms",
        "uCamPos",
        "skeleton",
        "morphAttributes",
        "groups",
        "i",
        "l",
        "group",
        "renderTargetProperties",
        "renderTargetProperties",
        "useDefaultFramebuffer",
        "framebuffer",
        "isCube",
        "isRenderTarget3D",
        "renderTargetProperties",
        "texture",
        "__webglFramebuffer",
        "framebufferBound",
        "textureProperties",
        "textureProperties",
        "layer",
        "framebuffer",
        "texture",
        "textureFormat",
        "textureType",
        "framebuffer",
        "framebuffer",
        "texture",
        "textureFormat",
        "textureType",
        "glBuffer",
        "sync",
        "framebuffer",
        "levelScale",
        "width",
        "height",
        "x",
        "y",
        "width",
        "height",
        "minX",
        "minY",
        "dstX",
        "dstY",
        "glFormat",
        "glType",
        "currentUnpackRowLen",
        "currentUnpackImageHeight",
        "currentUnpackSkipPixels",
        "currentUnpackSkipRows",
        "currentUnpackSkipImages",
        "image",
        "width",
        "height",
        "depth",
        "minX",
        "minY",
        "minZ",
        "dstX",
        "dstY",
        "dstZ",
        "image",
        "glFormat",
        "glType",
        "glTarget",
        "currentUnpackRowLen",
        "currentUnpackImageHeight",
        "currentUnpackSkipPixels",
        "currentUnpackSkipRows",
        "currentUnpackSkipImages",
        "gl",
        "data",
        "i",
        "l",
        "array",
        "ib",
        "_vector$6",
        "i",
        "l",
        "i",
        "l",
        "i",
        "l",
        "value",
        "x",
        "y",
        "z",
        "w",
        "array",
        "i",
        "index",
        "j",
        "array",
        "i",
        "index",
        "j",
        "_geometry",
        "_intersectPoint",
        "_worldScale",
        "_mvPosition",
        "_alignedPosition",
        "_rotatedPosition",
        "_viewWorldMatrix",
        "_vA",
        "_vB",
        "_vC",
        "_uvA",
        "_uvB",
        "_uvC",
        "float32Array",
        "interleavedBuffer",
        "rotation",
        "sin",
        "cos",
        "center",
        "intersect",
        "distance",
        "_v1$2",
        "_v2$1",
        "levels",
        "i",
        "l",
        "level",
        "levels",
        "l",
        "levels",
        "i",
        "l",
        "levelDistance",
        "levels",
        "distance",
        "levels",
        "distance",
        "i",
        "l",
        "levelDistance",
        "data",
        "levels",
        "i",
        "l",
        "level",
        "_basePosition",
        "_skinIndex",
        "_skinWeight",
        "_vector3",
        "_matrix4",
        "_vertex",
        "_sphere$4",
        "_inverseMatrix$2",
        "_ray$2",
        "geometry",
        "positionAttribute",
        "i",
        "geometry",
        "positionAttribute",
        "i",
        "material",
        "matrixWorld",
        "vector",
        "skinWeight",
        "i",
        "l",
        "scale",
        "skeleton",
        "geometry",
        "i",
        "weight",
        "boneIndex",
        "_offsetMatrix",
        "_identityMatrix$1",
        "bones",
        "boneInverses",
        "i",
        "il",
        "i",
        "il",
        "inverse",
        "i",
        "il",
        "bone",
        "i",
        "il",
        "bone",
        "bones",
        "boneInverses",
        "boneMatrices",
        "boneTexture",
        "i",
        "il",
        "matrix",
        "size",
        "boneMatrices",
        "boneTexture",
        "i",
        "il",
        "bone",
        "i",
        "l",
        "uuid",
        "bone",
        "data",
        "bones",
        "boneInverses",
        "i",
        "l",
        "bone",
        "boneInverse",
        "data",
        "_instanceLocalMatrix",
        "_instanceWorldMatrix",
        "_instanceIntersects",
        "_box3",
        "_identity",
        "_mesh$1",
        "_sphere$3",
        "i",
        "geometry",
        "count",
        "i",
        "geometry",
        "count",
        "i",
        "objectInfluences",
        "array",
        "len",
        "dataIndex",
        "i",
        "matrixWorld",
        "raycastTimes",
        "instanceId",
        "i",
        "l",
        "intersect",
        "objectInfluences",
        "len",
        "array",
        "morphInfluencesSum",
        "i",
        "morphBaseInfluence",
        "dataIndex",
        "pool",
        "item",
        "_matrix$1",
        "_invMatrixWorld",
        "_identityMatrix",
        "_whiteColor",
        "_projScreenMatrix$2",
        "_frustum",
        "_box$1",
        "_sphere$2",
        "_vector$5",
        "_forward",
        "_temp",
        "_renderList",
        "_mesh",
        "_batchIntersects",
        "itemSize",
        "vertexCount",
        "i",
        "c",
        "size",
        "matricesArray",
        "matricesTexture",
        "size",
        "indirectArray",
        "indirectTexture",
        "size",
        "colorsArray",
        "colorsTexture",
        "geometry",
        "maxVertexCount",
        "maxIndexCount",
        "srcAttribute",
        "srcAttribute",
        "dstArray",
        "dstAttribute",
        "indexArray",
        "batchGeometry",
        "srcAttribute",
        "dstAttribute",
        "geometryCount",
        "boundingBox",
        "drawInfo",
        "i",
        "geometryId",
        "boundingSphere",
        "drawInfo",
        "i",
        "l",
        "geometryId",
        "drawId",
        "matricesTexture",
        "matricesArray",
        "colorsTexture",
        "reservedRange",
        "lastRange",
        "reservedRanges",
        "drawRanges",
        "bounds",
        "index",
        "hasIndex",
        "geometryId",
        "batchGeometry",
        "hasIndex",
        "dstIndex",
        "srcIndex",
        "reservedRange",
        "vertexStart",
        "vertexCount",
        "srcAttribute",
        "dstAttribute",
        "itemSize",
        "i",
        "l",
        "vertexCount",
        "index",
        "c",
        "indexStart",
        "i",
        "i",
        "l",
        "bound",
        "drawRange",
        "posAttr",
        "bound",
        "box",
        "geometry",
        "index",
        "position",
        "drawRange",
        "i",
        "l",
        "iv",
        "i",
        "bound",
        "sphere",
        "geometry",
        "index",
        "position",
        "drawRange",
        "maxRadiusSq",
        "i",
        "l",
        "iv",
        "i",
        "drawInfo",
        "matricesTexture",
        "matricesArray",
        "drawInfo",
        "matricesArray",
        "colorsTexture",
        "colorsArray",
        "drawInfo",
        "colorsArray",
        "drawInfo",
        "drawInfo",
        "drawInfo",
        "drawInfo",
        "drawRanges",
        "matrixWorld",
        "batchGeometry",
        "i",
        "l",
        "geometryId",
        "drawRange",
        "j",
        "l",
        "intersect",
        "index",
        "bytesPerElement",
        "drawInfo",
        "multiDrawStarts",
        "multiDrawCounts",
        "drawRanges",
        "perObjectFrustumCulled",
        "indirectTexture",
        "indirectArray",
        "count",
        "i",
        "l",
        "geometryId",
        "culled",
        "z",
        "customSort",
        "i",
        "l",
        "item",
        "i",
        "l",
        "geometryId",
        "culled",
        "_vStart",
        "_vEnd",
        "_inverseMatrix$1",
        "_ray$1",
        "_sphere$1",
        "_intersectPointOnRay",
        "_intersectPointOnSegment",
        "geometry",
        "positionAttribute",
        "lineDistances",
        "i",
        "l",
        "geometry",
        "matrixWorld",
        "threshold",
        "drawRange",
        "localThreshold",
        "localThresholdSq",
        "step",
        "index",
        "attributes",
        "positionAttribute",
        "start",
        "end",
        "i",
        "start",
        "l",
        "a",
        "b",
        "intersect",
        "a",
        "b",
        "intersect",
        "start",
        "end",
        "i",
        "start",
        "l",
        "intersect",
        "intersect",
        "geometry",
        "morphAttributes",
        "keys",
        "morphAttribute",
        "m",
        "ml",
        "name",
        "positionAttribute",
        "distSq",
        "distance",
        "_start",
        "_end",
        "geometry",
        "positionAttribute",
        "lineDistances",
        "i",
        "l",
        "_inverseMatrix",
        "_ray",
        "_sphere",
        "_position$2",
        "geometry",
        "matrixWorld",
        "threshold",
        "drawRange",
        "localThreshold",
        "localThresholdSq",
        "index",
        "attributes",
        "positionAttribute",
        "start",
        "end",
        "i",
        "start",
        "il",
        "end",
        "a",
        "start",
        "end",
        "i",
        "start",
        "l",
        "end",
        "geometry",
        "morphAttributes",
        "keys",
        "morphAttribute",
        "m",
        "ml",
        "name",
        "rayPointDistanceSq",
        "intersectPoint",
        "distance",
        "scope",
        "video",
        "hasVideoFrameCallback",
        "t",
        "points",
        "d",
        "points",
        "d",
        "lengths",
        "cache",
        "current",
        "last",
        "sum",
        "p",
        "arcLengths",
        "i",
        "il",
        "targetArcLength",
        "low",
        "high",
        "comparison",
        "lengthBefore",
        "lengthAfter",
        "segmentLength",
        "segmentFraction",
        "t",
        "delta",
        "t1",
        "t2",
        "pt1",
        "pt2",
        "tangent",
        "t",
        "normal",
        "tangents",
        "normals",
        "binormals",
        "vec",
        "mat",
        "i",
        "u",
        "min",
        "tx",
        "ty",
        "tz",
        "i",
        "theta",
        "theta",
        "i",
        "data",
        "point",
        "optionalTarget",
        "twoPi",
        "deltaAngle",
        "samePoints",
        "angle",
        "x",
        "y",
        "cos",
        "sin",
        "tx",
        "ty",
        "data",
        "c0",
        "c1",
        "c2",
        "c3",
        "t1",
        "t2",
        "t2",
        "t3",
        "tmp",
        "px",
        "py",
        "pz",
        "point",
        "optionalTarget",
        "points",
        "l",
        "p",
        "intPoint",
        "weight",
        "p0",
        "p3",
        "p1",
        "p2",
        "pow",
        "dt0",
        "dt1",
        "dt2",
        "i",
        "l",
        "point",
        "data",
        "i",
        "l",
        "point",
        "i",
        "l",
        "point",
        "v0",
        "v1",
        "t2",
        "t3",
        "k",
        "k",
        "k",
        "point",
        "optionalTarget",
        "v0",
        "v1",
        "v2",
        "v3",
        "data",
        "point",
        "optionalTarget",
        "v0",
        "v1",
        "v2",
        "v3",
        "data",
        "point",
        "optionalTarget",
        "data",
        "point",
        "optionalTarget",
        "data",
        "point",
        "optionalTarget",
        "v0",
        "v1",
        "v2",
        "data",
        "point",
        "optionalTarget",
        "v0",
        "v1",
        "v2",
        "data",
        "point",
        "optionalTarget",
        "points",
        "p",
        "intPoint",
        "weight",
        "p0",
        "p1",
        "p2",
        "p3",
        "i",
        "l",
        "point",
        "data",
        "i",
        "l",
        "point",
        "i",
        "l",
        "point",
        "Curves",
        "startPoint",
        "endPoint",
        "lineType",
        "d",
        "curveLengths",
        "i",
        "diff",
        "curve",
        "segmentLength",
        "u",
        "lens",
        "lengths",
        "sums",
        "i",
        "l",
        "points",
        "i",
        "points",
        "last",
        "i",
        "curves",
        "curve",
        "resolution",
        "pts",
        "j",
        "point",
        "i",
        "l",
        "curve",
        "data",
        "i",
        "l",
        "curve",
        "i",
        "l",
        "curve",
        "i",
        "l",
        "curve",
        "curve",
        "curve",
        "npts",
        "curve",
        "x0",
        "y0",
        "x0",
        "y0",
        "curve",
        "firstPoint",
        "lastPoint",
        "data",
        "indices",
        "vertices",
        "uvs",
        "initNormals",
        "normals",
        "inverseSegments",
        "vertex",
        "uv",
        "normal",
        "curNormal",
        "prevNormal",
        "dx",
        "dy",
        "j",
        "i",
        "phi",
        "sin",
        "cos",
        "j",
        "x",
        "y",
        "z",
        "i",
        "j",
        "a",
        "b",
        "c",
        "d",
        "path",
        "indices",
        "vertices",
        "normals",
        "uvs",
        "vertex",
        "uv",
        "s",
        "i",
        "segment",
        "i",
        "scope",
        "indices",
        "vertices",
        "normals",
        "uvs",
        "index",
        "indexArray",
        "halfHeight",
        "groupStart",
        "normal",
        "vertex",
        "groupCount",
        "slope",
        "y",
        "indexRow",
        "v",
        "radius",
        "x",
        "u",
        "theta",
        "sinTheta",
        "cosTheta",
        "x",
        "y",
        "a",
        "b",
        "c",
        "d",
        "centerIndexStart",
        "index",
        "uv",
        "vertex",
        "groupCount",
        "radius",
        "sign",
        "x",
        "centerIndexEnd",
        "index",
        "x",
        "u",
        "theta",
        "cosTheta",
        "sinTheta",
        "x",
        "c",
        "i",
        "vertexBuffer",
        "uvBuffer",
        "a",
        "b",
        "c",
        "i",
        "cols",
        "v",
        "i",
        "aj",
        "bj",
        "rows",
        "j",
        "i",
        "j",
        "k",
        "vertex",
        "i",
        "vertex",
        "i",
        "u",
        "v",
        "i",
        "x0",
        "x1",
        "x2",
        "max",
        "min",
        "stride",
        "a",
        "b",
        "c",
        "centroid",
        "uvA",
        "uvB",
        "uvC",
        "i",
        "j",
        "azi",
        "t",
        "r",
        "vertices",
        "indices",
        "_v0",
        "_v1$1",
        "_normal",
        "_triangle",
        "precisionPoints",
        "precision",
        "thresholdDot",
        "indexAttr",
        "positionAttr",
        "indexCount",
        "indexArr",
        "vertKeys",
        "hashes",
        "edgeData",
        "vertices",
        "i",
        "_triangle",
        "j",
        "jNext",
        "vecHash0",
        "vecHash1",
        "v0",
        "v1",
        "hash",
        "reverseHash",
        "holesPts",
        "i",
        "l",
        "i",
        "l",
        "hole",
        "data",
        "i",
        "l",
        "hole",
        "i",
        "l",
        "hole",
        "Earcut",
        "hasHoles",
        "outerLen",
        "outerNode",
        "triangles",
        "minX",
        "minY",
        "maxX",
        "maxY",
        "x",
        "y",
        "invSize",
        "i",
        "dim",
        "i",
        "last",
        "p",
        "start",
        "again",
        "stop",
        "ear",
        "prev",
        "next",
        "a",
        "b",
        "ear",
        "c",
        "ax",
        "bx",
        "cx",
        "ay",
        "by",
        "cy",
        "x0",
        "y0",
        "x1",
        "y1",
        "p",
        "a",
        "b",
        "ear",
        "c",
        "ax",
        "bx",
        "cx",
        "ay",
        "by",
        "cy",
        "x0",
        "y0",
        "x1",
        "y1",
        "minZ",
        "maxZ",
        "p",
        "n",
        "p",
        "start",
        "a",
        "b",
        "a",
        "start",
        "b",
        "c",
        "queue",
        "i",
        "len",
        "start",
        "end",
        "bridge",
        "bridgeReverse",
        "p",
        "outerNode",
        "qx",
        "m",
        "hx",
        "hy",
        "x",
        "stop",
        "m",
        "mx",
        "my",
        "tanMin",
        "Infinity",
        "tan",
        "p",
        "start",
        "i",
        "p",
        "q",
        "e",
        "tail",
        "numMerges",
        "pSize",
        "qSize",
        "inSize",
        "p",
        "start",
        "leftmost",
        "start",
        "o1",
        "o2",
        "o3",
        "o4",
        "p",
        "a",
        "p",
        "a",
        "inside",
        "px",
        "py",
        "a2",
        "b2",
        "an",
        "bp",
        "p",
        "sum",
        "i",
        "start",
        "j",
        "n",
        "a",
        "p",
        "q",
        "vertices",
        "holeIndices",
        "faces",
        "holeIndex",
        "i",
        "triangles",
        "i",
        "l",
        "i",
        "scope",
        "verticesArray",
        "uvArray",
        "i",
        "l",
        "shape",
        "placeholder",
        "curveSegments",
        "steps",
        "depth",
        "bevelEnabled",
        "bevelThickness",
        "bevelSize",
        "bevelOffset",
        "bevelSegments",
        "extrudePath",
        "uvgen",
        "extrudePts",
        "extrudeByPath",
        "splineTube",
        "binormal",
        "normal",
        "position2",
        "shapePoints",
        "vertices",
        "holes",
        "reverse",
        "h",
        "hl",
        "ahole",
        "faces",
        "contour",
        "vertices",
        "h",
        "hl",
        "ahole",
        "vlen",
        "flen",
        "v_trans_x",
        "v_trans_y",
        "shrink_by",
        "v_prev_x",
        "v_prev_y",
        "v_next_x",
        "v_next_y",
        "v_prev_lensq",
        "collinear0",
        "v_prev_len",
        "v_next_len",
        "ptPrevShift_x",
        "ptPrevShift_y",
        "ptNextShift_x",
        "ptNextShift_y",
        "sf",
        "v_trans_lensq",
        "direction_eq",
        "contourMovements",
        "i",
        "il",
        "j",
        "k",
        "holesMovements",
        "oneHoleMovements",
        "verticesMovements",
        "h",
        "hl",
        "ahole",
        "i",
        "il",
        "j",
        "k",
        "b",
        "t",
        "z",
        "bs",
        "i",
        "il",
        "vert",
        "h",
        "hl",
        "ahole",
        "i",
        "il",
        "vert",
        "bs",
        "i",
        "vert",
        "s",
        "i",
        "vert",
        "b",
        "t",
        "z",
        "bs",
        "i",
        "il",
        "vert",
        "h",
        "hl",
        "ahole",
        "i",
        "il",
        "vert",
        "start",
        "layer",
        "offset",
        "i",
        "face",
        "i",
        "face",
        "i",
        "face",
        "i",
        "face",
        "start",
        "layeroffset",
        "h",
        "hl",
        "ahole",
        "i",
        "j",
        "i",
        "k",
        "s",
        "sl",
        "slen1",
        "slen2",
        "a",
        "b",
        "c",
        "d",
        "nextIndex",
        "uvs",
        "nextIndex",
        "uvs",
        "data",
        "shapes",
        "options",
        "geometryShapes",
        "j",
        "jl",
        "shape",
        "extrudePath",
        "WorldUVGenerator",
        "a_x",
        "a_y",
        "b_x",
        "b_y",
        "c_x",
        "c_y",
        "a_x",
        "a_y",
        "a_z",
        "b_x",
        "b_y",
        "b_z",
        "c_x",
        "c_y",
        "c_z",
        "d_x",
        "d_y",
        "d_z",
        "i",
        "l",
        "shape",
        "t",
        "vertices",
        "indices",
        "vertices",
        "indices",
        "indices",
        "vertices",
        "normals",
        "uvs",
        "radius",
        "innerRadius",
        "radiusStep",
        "vertex",
        "uv",
        "j",
        "i",
        "segment",
        "j",
        "thetaSegmentLevel",
        "i",
        "segment",
        "a",
        "segment",
        "b",
        "c",
        "d",
        "indices",
        "vertices",
        "normals",
        "uvs",
        "groupStart",
        "groupCount",
        "i",
        "indexOffset",
        "points",
        "shapeVertices",
        "shapeHoles",
        "i",
        "l",
        "shapeHole",
        "faces",
        "i",
        "l",
        "shapeHole",
        "i",
        "l",
        "vertex",
        "i",
        "l",
        "face",
        "a",
        "b",
        "c",
        "data",
        "shapes",
        "geometryShapes",
        "j",
        "jl",
        "shape",
        "i",
        "l",
        "shape",
        "thetaEnd",
        "index",
        "grid",
        "vertex",
        "normal",
        "indices",
        "vertices",
        "normals",
        "uvs",
        "iy",
        "verticesRow",
        "v",
        "uOffset",
        "ix",
        "u",
        "iy",
        "ix",
        "a",
        "b",
        "c",
        "d",
        "vertices",
        "indices",
        "indices",
        "vertices",
        "normals",
        "uvs",
        "center",
        "vertex",
        "normal",
        "j",
        "i",
        "u",
        "v",
        "j",
        "i",
        "a",
        "b",
        "c",
        "d",
        "indices",
        "vertices",
        "normals",
        "uvs",
        "vertex",
        "normal",
        "P1",
        "P2",
        "B",
        "T",
        "N",
        "i",
        "u",
        "j",
        "v",
        "cx",
        "cy",
        "j",
        "i",
        "a",
        "b",
        "c",
        "d",
        "cu",
        "su",
        "quOverP",
        "cs",
        "frames",
        "vertex",
        "normal",
        "uv",
        "P",
        "vertices",
        "normals",
        "uvs",
        "indices",
        "i",
        "N",
        "B",
        "j",
        "v",
        "sin",
        "cos",
        "j",
        "i",
        "a",
        "b",
        "c",
        "d",
        "i",
        "j",
        "data",
        "vertices",
        "edges",
        "start",
        "end",
        "position",
        "indices",
        "groups",
        "o",
        "ol",
        "group",
        "groupStart",
        "groupCount",
        "i",
        "groupStart",
        "l",
        "j",
        "index1",
        "index2",
        "position",
        "i",
        "l",
        "j",
        "index1",
        "index2",
        "hash1",
        "hash2",
        "Geometries",
        "n",
        "result",
        "i",
        "nValues",
        "result",
        "i",
        "dstOffset",
        "srcOffset",
        "j",
        "i",
        "key",
        "value",
        "clip",
        "tracks",
        "i",
        "track",
        "valueSize",
        "times",
        "values",
        "j",
        "frame",
        "k",
        "minStartTime",
        "Infinity",
        "i",
        "i",
        "numTracks",
        "referenceTime",
        "i",
        "referenceTrack",
        "referenceTrackType",
        "targetTrack",
        "referenceOffset",
        "referenceValueSize",
        "targetOffset",
        "targetValueSize",
        "lastIndex",
        "referenceValue",
        "startIndex",
        "referenceOffset",
        "endIndex",
        "startIndex",
        "endIndex",
        "interpolant",
        "startIndex",
        "referenceOffset",
        "endIndex",
        "referenceQuat",
        "numTimes",
        "j",
        "valueStart",
        "valueEnd",
        "k",
        "AnimationUtils",
        "pp",
        "i1",
        "t1",
        "t0",
        "right",
        "giveUpAt",
        "t1global",
        "giveUpAt",
        "mid",
        "result",
        "values",
        "stride",
        "offset",
        "i",
        "pp",
        "iPrev",
        "iNext",
        "tPrev",
        "tNext",
        "halfDt",
        "stride",
        "result",
        "values",
        "stride",
        "o1",
        "o0",
        "oP",
        "oN",
        "wP",
        "wN",
        "p",
        "pp",
        "ppp",
        "sP",
        "s0",
        "s1",
        "sN",
        "i",
        "result",
        "values",
        "stride",
        "offset1",
        "offset0",
        "weight1",
        "weight0",
        "i",
        "trackType",
        "json",
        "interpolation",
        "factoryMethod",
        "message",
        "times",
        "i",
        "n",
        "times",
        "i",
        "n",
        "times",
        "nKeys",
        "to",
        "stride",
        "valid",
        "valueSize",
        "times",
        "values",
        "nKeys",
        "prevTime",
        "i",
        "currTime",
        "i",
        "n",
        "value",
        "times",
        "values",
        "stride",
        "smoothInterpolation",
        "lastIndex",
        "writeIndex",
        "i",
        "keep",
        "time",
        "timeNext",
        "offset",
        "offsetP",
        "offsetN",
        "j",
        "value",
        "readOffset",
        "writeOffset",
        "j",
        "readOffset",
        "writeOffset",
        "j",
        "times",
        "values",
        "TypedKeyframeTrack",
        "track",
        "result",
        "values",
        "stride",
        "alpha",
        "offset",
        "end",
        "tracks",
        "jsonTracks",
        "frameTime",
        "i",
        "n",
        "clip",
        "tracks",
        "clipTracks",
        "json",
        "i",
        "n",
        "numMorphTargets",
        "tracks",
        "i",
        "times",
        "values",
        "order",
        "clipArray",
        "objectOrClipArray",
        "o",
        "objectOrClipArray",
        "i",
        "animationToMorphTargets",
        "pattern",
        "i",
        "il",
        "morphTarget",
        "parts",
        "name",
        "animationMorphTargets",
        "clips",
        "addNonemptyTrack",
        "times",
        "values",
        "tracks",
        "clipName",
        "fps",
        "blendMode",
        "duration",
        "hierarchyTracks",
        "h",
        "animationKeys",
        "morphTargetNames",
        "k",
        "m",
        "times",
        "values",
        "m",
        "animationKey",
        "boneName",
        "clip",
        "tracks",
        "duration",
        "i",
        "n",
        "track",
        "i",
        "valid",
        "i",
        "i",
        "tracks",
        "i",
        "trackType",
        "times",
        "values",
        "Cache",
        "scope",
        "isLoading",
        "itemsLoaded",
        "itemsTotal",
        "urlModifier",
        "handlers",
        "index",
        "i",
        "l",
        "regex",
        "loader",
        "DefaultLoadingManager",
        "scope",
        "loading",
        "cached",
        "req",
        "mimeType",
        "responseType",
        "callbacks",
        "reader",
        "contentLength",
        "total",
        "lengthComputable",
        "loaded",
        "stream",
        "i",
        "il",
        "callback",
        "parser",
        "re",
        "exec",
        "label",
        "decoder",
        "callbacks",
        "i",
        "il",
        "callback",
        "callbacks",
        "i",
        "il",
        "callback",
        "scope",
        "loader",
        "animations",
        "i",
        "clip",
        "scope",
        "images",
        "texture",
        "loader",
        "loaded",
        "texDatas",
        "i",
        "il",
        "texDatas",
        "faces",
        "f",
        "i",
        "scope",
        "cached",
        "image",
        "texture",
        "loader",
        "loaded",
        "i",
        "scope",
        "texture",
        "loader",
        "texData",
        "texture",
        "loader",
        "data",
        "_projScreenMatrix$1",
        "_lightPositionWorld$1",
        "_lookTarget$1",
        "shadowCamera",
        "shadowMatrix",
        "camera",
        "fov",
        "aspect",
        "far",
        "_projScreenMatrix",
        "_lightPositionWorld",
        "_lookTarget",
        "camera",
        "shadowMatrix",
        "far",
        "data",
        "i",
        "i",
        "i",
        "x",
        "y",
        "z",
        "coeff",
        "x",
        "y",
        "z",
        "coeff",
        "i",
        "i",
        "i",
        "i",
        "i",
        "coefficients",
        "i",
        "coefficients",
        "i",
        "x",
        "y",
        "z",
        "data",
        "scope",
        "loader",
        "textures",
        "material",
        "uniform",
        "normalScale",
        "materialLib",
        "s",
        "i",
        "il",
        "index",
        "data",
        "scope",
        "loader",
        "interleavedBufferMap",
        "arrayBufferMap",
        "interleavedBuffers",
        "interleavedBuffer",
        "buffer",
        "array",
        "ib",
        "arrayBuffers",
        "arrayBuffer",
        "ab",
        "geometry",
        "index",
        "typedArray",
        "attributes",
        "attribute",
        "bufferAttribute",
        "interleavedBuffer",
        "typedArray",
        "bufferAttributeConstr",
        "morphAttributes",
        "attributeArray",
        "array",
        "i",
        "il",
        "attribute",
        "bufferAttribute",
        "interleavedBuffer",
        "typedArray",
        "morphTargetsRelative",
        "groups",
        "i",
        "n",
        "group",
        "boundingSphere",
        "center",
        "scope",
        "path",
        "loader",
        "json",
        "metadata",
        "scope",
        "path",
        "loader",
        "text",
        "json",
        "metadata",
        "animations",
        "shapes",
        "geometries",
        "images",
        "textures",
        "materials",
        "skeletons",
        "hasImages",
        "animations",
        "shapes",
        "geometries",
        "images",
        "textures",
        "materials",
        "skeletons",
        "shapes",
        "i",
        "l",
        "shape",
        "skeletons",
        "bones",
        "i",
        "l",
        "skeleton",
        "geometries",
        "bufferGeometryLoader",
        "i",
        "l",
        "geometry",
        "data",
        "cache",
        "materials",
        "loader",
        "i",
        "l",
        "data",
        "animations",
        "i",
        "data",
        "clip",
        "scope",
        "images",
        "loader",
        "url",
        "image",
        "path",
        "manager",
        "i",
        "il",
        "image",
        "url",
        "imageArray",
        "j",
        "jl",
        "currentUrl",
        "deserializedImage",
        "deserializedImage",
        "scope",
        "images",
        "loader",
        "url",
        "image",
        "path",
        "i",
        "il",
        "image",
        "url",
        "imageArray",
        "j",
        "jl",
        "currentUrl",
        "deserializedImage",
        "deserializedImage",
        "textures",
        "i",
        "l",
        "data",
        "source",
        "image",
        "texture",
        "array",
        "i",
        "l",
        "uuid",
        "geometry",
        "material",
        "count",
        "instanceMatrix",
        "instanceColor",
        "box",
        "sphere",
        "children",
        "i",
        "objectAnimations",
        "i",
        "uuid",
        "levels",
        "l",
        "level",
        "child",
        "skeleton",
        "uuid",
        "target",
        "TEXTURE_MAPPING",
        "TEXTURE_WRAPPING",
        "TEXTURE_FILTER",
        "scope",
        "cached",
        "fetchOptions",
        "promise",
        "_context",
        "scope",
        "loader",
        "bufferCopy",
        "context",
        "_eyeRight",
        "_eyeLeft",
        "_projectionMatrix",
        "cache",
        "needsUpdate",
        "eyeSepHalf",
        "eyeSepOnProjection",
        "ymax",
        "xmin",
        "xmax",
        "diff",
        "newTime",
        "_position$1",
        "_quaternion$1",
        "_scale$1",
        "_orientation$1",
        "listener",
        "up",
        "endTime",
        "source",
        "i",
        "l",
        "i",
        "l",
        "_position",
        "_quaternion",
        "_scale",
        "_orientation",
        "panner",
        "endTime",
        "value",
        "data",
        "i",
        "mixFunction",
        "mixFunctionAdditive",
        "setIdentity",
        "buffer",
        "stride",
        "offset",
        "currentWeight",
        "i",
        "mix",
        "buffer",
        "stride",
        "offset",
        "stride",
        "buffer",
        "offset",
        "weight",
        "weightAdditive",
        "binding",
        "originalValueOffset",
        "i",
        "stride",
        "e",
        "binding",
        "buffer",
        "stride",
        "originalValueOffset",
        "i",
        "stride",
        "e",
        "originalValueOffset",
        "originalValueOffset",
        "startIndex",
        "endIndex",
        "i",
        "startIndex",
        "startIndex",
        "targetIndex",
        "i",
        "i",
        "workOffset",
        "s",
        "i",
        "j",
        "i",
        "j",
        "_RESERVED_CHARS_RE",
        "_reservedRe",
        "_wordChar",
        "_wordCharOrDot",
        "_directoryRe",
        "_nodeRe",
        "_objectRe",
        "_propertyRe",
        "_trackRe",
        "_supportedObjectNames",
        "parsedPath",
        "firstValidIndex",
        "binding",
        "bindings",
        "i",
        "n",
        "bindings",
        "i",
        "n",
        "bindings",
        "i",
        "n",
        "matches",
        "results",
        "lastDot",
        "objectName",
        "bone",
        "searchNodeSubtree",
        "i",
        "childNode",
        "result",
        "subTreeNode",
        "source",
        "i",
        "n",
        "dest",
        "i",
        "n",
        "dest",
        "i",
        "n",
        "dest",
        "i",
        "n",
        "targetObject",
        "parsedPath",
        "objectName",
        "propertyName",
        "propertyIndex",
        "objectIndex",
        "i",
        "nodeProperty",
        "nodeName",
        "versioning",
        "bindingType",
        "indices",
        "i",
        "n",
        "scope",
        "objects",
        "indicesByUUID",
        "paths",
        "parsedPaths",
        "bindings",
        "nBindings",
        "knownObject",
        "nObjects",
        "nCachedObjects",
        "i",
        "n",
        "uuid",
        "index",
        "j",
        "m",
        "nBindings",
        "firstActiveIndex",
        "lastCachedObject",
        "j",
        "m",
        "nBindings",
        "bindingsForPath",
        "lastCached",
        "binding",
        "objects",
        "indicesByUUID",
        "bindings",
        "nBindings",
        "nCachedObjects",
        "i",
        "n",
        "uuid",
        "index",
        "lastCachedIndex",
        "firstActiveObject",
        "j",
        "m",
        "nBindings",
        "bindingsForPath",
        "firstActive",
        "binding",
        "objects",
        "indicesByUUID",
        "bindings",
        "nBindings",
        "nCachedObjects",
        "nObjects",
        "i",
        "n",
        "uuid",
        "index",
        "firstActiveIndex",
        "lastCachedObject",
        "lastIndex",
        "lastObject",
        "j",
        "m",
        "nBindings",
        "bindingsForPath",
        "lastCached",
        "last",
        "lastIndex",
        "lastObject",
        "j",
        "m",
        "nBindings",
        "bindingsForPath",
        "indicesByPath",
        "index",
        "bindings",
        "paths",
        "parsedPaths",
        "objects",
        "nObjects",
        "nCachedObjects",
        "bindingsForPath",
        "i",
        "nCachedObjects",
        "n",
        "indicesByPath",
        "index",
        "paths",
        "parsedPaths",
        "bindings",
        "lastBindingsIndex",
        "lastBindings",
        "lastBindingsPath",
        "tracks",
        "nTracks",
        "interpolants",
        "interpolantSettings",
        "i",
        "interpolant",
        "fadeInDuration",
        "fadeOutDuration",
        "startEndRatio",
        "endStartRatio",
        "weightInterpolant",
        "mixer",
        "now",
        "timeScale",
        "interpolant",
        "times",
        "values",
        "timeScaleInterpolant",
        "startTime",
        "timeRunning",
        "clipTime",
        "weight",
        "interpolants",
        "propertyMixers",
        "j",
        "m",
        "j",
        "m",
        "weight",
        "interpolant",
        "interpolantValue",
        "timeScale",
        "interpolant",
        "interpolantValue",
        "duration",
        "loop",
        "time",
        "loopCount",
        "pingPong",
        "loopDelta",
        "pending",
        "atStart",
        "settings",
        "mixer",
        "now",
        "interpolant",
        "times",
        "values",
        "_controlInterpolantsResultBuffer",
        "root",
        "tracks",
        "nTracks",
        "bindings",
        "interpolants",
        "rootUuid",
        "bindingsByRoot",
        "bindingsByName",
        "i",
        "track",
        "trackName",
        "binding",
        "path",
        "rootUuid",
        "clipUuid",
        "actionsForClip",
        "bindings",
        "i",
        "n",
        "binding",
        "bindings",
        "i",
        "n",
        "binding",
        "scope",
        "index",
        "actions",
        "actionsByClip",
        "actionsForClip",
        "knownActions",
        "actions",
        "lastInactiveAction",
        "cacheIndex",
        "clipUuid",
        "actionsByClip",
        "actionsForClip",
        "knownActionsForClip",
        "lastKnownAction",
        "byClipCacheIndex",
        "actionByRoot",
        "rootUuid",
        "bindings",
        "i",
        "n",
        "binding",
        "actions",
        "prevIndex",
        "lastActiveIndex",
        "firstInactiveAction",
        "actions",
        "prevIndex",
        "firstInactiveIndex",
        "lastActiveAction",
        "bindingsByRoot",
        "bindings",
        "bindingByName",
        "bindings",
        "propBinding",
        "rootUuid",
        "trackName",
        "bindingsByRoot",
        "bindingByName",
        "lastInactiveBinding",
        "cacheIndex",
        "bindings",
        "prevIndex",
        "lastActiveIndex",
        "firstInactiveBinding",
        "bindings",
        "prevIndex",
        "firstInactiveIndex",
        "lastActiveBinding",
        "interpolants",
        "lastActiveIndex",
        "interpolant",
        "interpolants",
        "prevIndex",
        "firstInactiveIndex",
        "lastActiveInterpolant",
        "root",
        "rootUuid",
        "clipObject",
        "clipUuid",
        "actionsForClip",
        "prototypeAction",
        "existingAction",
        "newAction",
        "root",
        "rootUuid",
        "clipObject",
        "clipUuid",
        "actionsForClip",
        "actions",
        "nActions",
        "i",
        "actions",
        "nActions",
        "time",
        "timeDirection",
        "accuIndex",
        "i",
        "action",
        "bindings",
        "nBindings",
        "i",
        "i",
        "actions",
        "clipUuid",
        "actionsByClip",
        "actionsForClip",
        "actionsToRemove",
        "i",
        "n",
        "action",
        "cacheIndex",
        "lastInactiveAction",
        "rootUuid",
        "actionsByClip",
        "actionByRoot",
        "action",
        "bindingsByRoot",
        "bindingByName",
        "binding",
        "action",
        "_id",
        "index",
        "uniformsSource",
        "i",
        "l",
        "uniforms",
        "j",
        "ib",
        "json",
        "_matrix",
        "i",
        "l",
        "propagate",
        "result",
        "children",
        "i",
        "l",
        "EPS",
        "i",
        "te",
        "_vector$4",
        "i",
        "il",
        "halfSize",
        "_startP",
        "_startEnd",
        "startEnd2",
        "startEnd_startP",
        "t",
        "t",
        "_vector$3",
        "geometry",
        "positions",
        "i",
        "j",
        "l",
        "p1",
        "p2",
        "material",
        "coneLength",
        "coneWidth",
        "_vector$2",
        "_boneMatrix",
        "_matrixWorldInv",
        "bones",
        "geometry",
        "vertices",
        "colors",
        "color1",
        "color2",
        "i",
        "bone",
        "material",
        "bones",
        "geometry",
        "position",
        "i",
        "j",
        "bone",
        "boneList",
        "i",
        "geometry",
        "material",
        "_vector$1",
        "_color1",
        "_color2",
        "geometry",
        "position",
        "colors",
        "mesh",
        "colors",
        "i",
        "l",
        "color",
        "center",
        "step",
        "halfSize",
        "vertices",
        "colors",
        "i",
        "j",
        "k",
        "color",
        "geometry",
        "material",
        "vertices",
        "colors",
        "i",
        "v",
        "x",
        "z",
        "color",
        "i",
        "color",
        "r",
        "j",
        "v",
        "x",
        "z",
        "geometry",
        "material",
        "_v1",
        "_v2",
        "_v3",
        "geometry",
        "material",
        "_vector",
        "_camera",
        "geometry",
        "material",
        "vertices",
        "colors",
        "pointMap",
        "colorFrustum",
        "colorCone",
        "colorUp",
        "colorTarget",
        "colorCross",
        "geometry",
        "colorAttribute",
        "geometry",
        "pointMap",
        "w",
        "h",
        "points",
        "position",
        "i",
        "l",
        "_box",
        "indices",
        "positions",
        "geometry",
        "min",
        "max",
        "position",
        "array",
        "indices",
        "positions",
        "geometry",
        "box",
        "color",
        "hex",
        "positions",
        "geometry",
        "positions2",
        "geometry2",
        "_axis",
        "_lineGeometry",
        "_coneGeometry",
        "radians",
        "vertices",
        "colors",
        "geometry",
        "material",
        "color",
        "array",
        "shapes",
        "i",
        "l",
        "tmpPath",
        "tmpShape",
        "polyLen",
        "inside",
        "p",
        "q",
        "edgeLowPt",
        "edgeHighPt",
        "edgeDx",
        "edgeDy",
        "perpEdge",
        "isClockWise",
        "subPaths",
        "solid",
        "tmpPath",
        "tmpShape",
        "shapes",
        "holesFirst",
        "betterShapeHoles",
        "newShapes",
        "newShapeHoles",
        "mainIdx",
        "tmpPoints",
        "i",
        "l",
        "ambiguous",
        "toChange",
        "sIdx",
        "sLen",
        "sIdx",
        "sLen",
        "sho",
        "hIdx",
        "ho",
        "hole_unassigned",
        "s2Idx",
        "tmpHoles",
        "i",
        "il",
        "j",
        "jl",
        "parcelHelpers",
        "_three",
        "_changeEvent",
        "_startEvent",
        "_endEvent",
        "_ray",
        "_plane",
        "TILT_LIMIT",
        "offset",
        "quat",
        "quatInverse",
        "lastPosition",
        "lastQuaternion",
        "lastTargetPosition",
        "twoPI",
        "position",
        "min",
        "max",
        "zoomChanged",
        "prevRadius",
        "newRadius",
        "prevRadius",
        "radiusDelta",
        "mouseBefore",
        "prevZoom",
        "mouseAfter",
        "prevZoom",
        "scope",
        "STATE",
        "state",
        "EPS",
        "spherical",
        "sphericalDelta",
        "scale",
        "panOffset",
        "rotateStart",
        "rotateEnd",
        "rotateDelta",
        "panStart",
        "panEnd",
        "panDelta",
        "dollyStart",
        "dollyEnd",
        "dollyDelta",
        "dollyDirection",
        "mouse",
        "performCursorZoom",
        "pointers",
        "pointerPositions",
        "controlActive",
        "normalizedDelta",
        "panLeft",
        "v",
        "panUp",
        "v",
        "pan",
        "offset",
        "element",
        "position",
        "targetDistance",
        "rect",
        "dx",
        "dy",
        "w",
        "h",
        "element",
        "needsUpdate",
        "position",
        "x",
        "y",
        "position",
        "x",
        "y",
        "position",
        "dx",
        "dy",
        "distance",
        "position",
        "x",
        "y",
        "element",
        "position",
        "x",
        "y",
        "position",
        "dx",
        "dy",
        "distance",
        "centerX",
        "centerY",
        "pointerId",
        "position",
        "mouseAction",
        "mode",
        "newEvent",
        "i",
        "i",
        "position",
        "pointerId",
        "bundleURL",
        "value",
        "matches",
        "matches"
    ],
    "comments": [
        "modules are defined as an array",
        "[ module function, map of requires ]",
        "",
        "map of requires is short require name -> numeric require",
        "",
        "anything defined in a previous bundle is accessed via the",
        "orig method which is the require for previous bundles",
        "eslint-disable no-undef",
        "eslint-enable no-undef",
        "Save the require from previous bundle to this closure if any",
        "Do not use `require` to prevent Webpack from trying to bundle this call",
        "if we cannot find the module within our internal map or",
        "cache jump to the current global require ie. the last bundle",
        "that was added to the page.",
        "If there are other bundles on this page the require from the",
        "previous one is saved to 'previousRequire'. Repeat this as",
        "many times as there are bundles until the module is found or",
        "we exhaust the require chain.",
        "Try the node require function if it exists.",
        "Expose entry point to Node, AMD or browser globals",
        "Based on https://github.com/ForbesLindesay/umd/blob/master/template.js",
        "CommonJS",
        "RequireJS",
        "<script>",
        "global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope",
        "::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;",
        ": {|[string]: boolean|}",
        ": Array<[ParcelRequire, string]>",
        ": Array<[ParcelRequire, string]>",
        "eslint-disable-next-line no-redeclare",
        "Web extension context",
        "Safari doesn't support sourceURL in error stacks.",
        "eval may also be disabled via CSP, so do a quick check.",
        "$FlowFixMe",
        ": {data: string, ...}",
        ": {|[string]: boolean|}",
        ": HMRMessage",
        "Remove error overlay if there is one",
        "Handle HMR Update",
        "Dispatch custom event so other runtimes (e.g React Refresh) are aware.",
        "Dispose all old assets.",
        ": {|[string]: boolean|}",
        "Run accept callbacks. This will also re-execute other disposed assets in topological order.",
        "Log parcel errors to console",
        "Render the fancy html overlay",
        "$FlowFixMe",
        ": Array<[ParcelRequire, string]>",
        "$FlowFixMe",
        "$FlowFixMe",
        "$FlowFixMe",
        "$FlowFixMe[incompatible-type]",
        ": string",
        "Worker scripts",
        "If sourceURL comments aren't supported in eval, we need to load",
        "the update from the dev server over HTTP so that stack traces",
        "are correct in errors/logs. This is much slower than eval, so",
        "we only do it if needed (currently just Safari).",
        "https://bugs.webkit.org/show_bug.cgi?id=137297",
        "This path is also taken if a CSP disallows eval.",
        "Web extension fix",
        ": ParcelRequire",
        ":  HMRAsset",
        "Remove dependencies that are removed and will become orphaned.",
        "This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.",
        "Global eval. We would use `new Function` here but browser",
        "support for source maps is better with eval.",
        "$FlowFixMe",
        "Collect dependencies that will become orphaned when this module is deleted.",
        "Delete the module. This must be done before deleting dependencies in case of circular dependencies.",
        "Now delete the orphans.",
        ": ParcelRequire",
        ": string",
        ": ?{ [string]: { [string]: string } }",
        "Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.",
        "If this parent accepts, stop traversing upward, but still consider siblings.",
        "Otherwise, queue the parents in the next level upward.",
        "If there are no parents, then we've reached an entry without accepting. Reload.",
        ": ParcelRequire",
        ": string",
        ": ?{ [string]: { [string]: string } }",
        "If we reached the root bundle without finding where the asset should go,",
        "there's nothing to do. Mark as \"accepted\" so we don't reload the page.",
        ": ParcelRequire",
        ": string",
        ": ParcelRequire",
        ": string",
        "Execute the module.",
        "Run the accept callbacks in the new version of the module.",
        "$FlowFixMe[method-unbinding]",
        "Instanciando o renderizador",
        "CRIANDO A CENA",
        "Criando a câmera",
        "CONTROLE DO MOUSE EM FORMA DE ORBITA",
        "LUX AMBIENTE DA CENA",
        "ADICIONANDO TEXTURA NO BACKGROUND DA CENA",
        "LOADER DE TEXTURAS",
        "CRIANDO O SOL",
        "FUNÇÃO PARA CRIAR PLANETAS",
        "PLANETS",
        "POINTLIGHT",
        "Parâmetros: cor, intensidade, distancia",
        "FUNÇÃO ANIMATE",
        "RESPONSIVIDADE",
        "Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.",
        "Make a copy, in case listeners are removed while iterating.",
        "http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136",
        ".toLowerCase() here flattens concatenated strings to save heap memory space.",
        "compute euclidean modulo of m % n",
        "https://en.wikipedia.org/wiki/Modulo_operation",
        "Linear mapping from range <a1, a2> to range <b1, b2>",
        "https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/",
        "https://en.wikipedia.org/wiki/Linear_interpolation",
        "http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/",
        "https://www.desmos.com/calculator/vcsjnyz7x4",
        "http://en.wikipedia.org/wiki/Smoothstep",
        "Random integer from <low, high> interval",
        "Random float from <low, high> interval",
        "Random float from <-range/2, range/2> interval",
        "Deterministic pseudo-random float in the interval [ 0, 1 ]",
        "Mulberry32 generator",
        "Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles",
        "rotations are applied to the axes in the order specified by 'order'",
        "rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'",
        "angles are in radians",
        "assumes min < max, componentwise",
        "computes the angle in radians with respect to the positive x-axis",
        "clamp, to handle numerical problems",
        "",
        "for 2D Transforms",
        "counterclockwise",
        "",
        "@__PURE__",
        "assumes larger values usually on last",
        "account for PRIMITIVE_RESTART_FIXED_INDEX, #24565",
        "@__PURE__",
        "@__PURE__",
        "assuming float",
        "cube texture",
        "texture",
        "default images",
        "images of DataTexture",
        "valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)",
        "indicates whether a texture belongs to a render target or not",
        "indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)",
        "http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm",
        "q is assumed to be normalized",
        "http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm",
        "assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)",
        "variables for result",
        "singularity found",
        "first check for identity matrix which must have +1 for all terms",
        "in leading diagonal and zero in other terms",
        "this singularity is identity matrix so angle = 0",
        "zero angle, arbitrary axis",
        "otherwise this singularity is angle = 180",
        "m11 is the largest diagonal term",
        "m22 is the largest diagonal term",
        "m33 is the largest diagonal term so base result on this",
        "return 180 deg rotation",
        "as we have reached here there are no singularities so we can handle normally",
        "used to normalize",
        "prevent divide by zero, should not happen if matrix is orthogonal and should be",
        "caught by singularity test above, but I've left it in just in case",
        "assumes min < max, componentwise",
        "In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers",
        "ensure image object is not shared, see #20328",
        "We're going to add .setXXX() methods for setting properties later.",
        "Users can still set in DataTexture3D directly.",
        "",
        "const texture = new THREE.DataTexture3D( data, width, height, depth );",
        "texture.anisotropy = 16;",
        "",
        "See #14839",
        "fuzz-free, array-based Quaternion SLERP operation",
        "Skip the Slerp for tiny steps to avoid numeric problems:",
        "Normalize in case we just did a lerp:",
        "http://www.mathworks.com/matlabcentral/fileexchange/",
        "20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/",
        "content/SpinCalc.m",
        "http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm",
        "assumes axis is normalized",
        "http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm",
        "assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)",
        "assumes direction vectors vFrom and vTo are normalized",
        "vFrom and vTo point in opposite directions",
        "crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3",
        "quaternion is assumed to have unit length",
        "from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm",
        "http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/",
        "normalize calls _onChangeCallback()",
        "sets this quaternion to a uniform random unit quaternnion",
        "Ken Shoemake",
        "Uniform random rotations",
        "D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.",
        "sprite.scale.set(x,y)",
        "quaternion q is assumed to have unit length",
        "t = 2 * cross( q.xyz, v );",
        "v + q.w * t + cross( q.xyz, t );",
        "input: THREE.Matrix4 affine matrix",
        "vector interpreted as a direction",
        "assumes min < max, componentwise",
        "TODO lengthSquared?",
        "reflect incident vector off plane orthogonal to normal",
        "normal is assumed to have unit length",
        "clamp, to handle numerical problems",
        "https://mathworld.wolfram.com/SpherePointPicking.html",
        "@__PURE__",
        "@__PURE__",
        "this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes",
        "Computes the world-axis-aligned bounding box of an object (including its children),",
        "accounting for both the object's, and children's, world transforms",
        "precise AABB computation based on vertex data requires at least a position attribute.",
        "instancing isn't supported so far and uses the normal (conservative) code path.",
        "object-level bounding box",
        "geometry-level bounding box",
        "This can potentially have a divide by zero if the box",
        "has a size dimension of 0.",
        "using 6 splitting planes to rule out intersections.",
        "Find the point on the AABB closest to the sphere center.",
        "If that point is inside the sphere, the AABB and sphere intersect.",
        "We compute the minimum and maximum dot product values. If those values",
        "are on the same side (back or front) of the plane, then there is no intersection.",
        "compute box center and extents",
        "translate triangle to aabb origin",
        "compute edge vectors for triangle",
        "test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb",
        "make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation",
        "axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)",
        "test 3 face normals from the aabb",
        "finally testing the face normal of the triangle",
        "use already existing triangle edge vectors here",
        "ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.",
        "transform of empty box is an empty box.",
        "NOTE: I am using a binary pattern to specify all 2^3 combinations below",
        "000",
        "001",
        "010",
        "011",
        "100",
        "101",
        "110",
        "111",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "triangle centered vertices",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "triangle edge vectors",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "project the aabb onto the separating axis",
        "project all 3 vertices of the triangle onto the separating axis",
        "actual test, basically see if either of the most extreme of the triangle points intersects r",
        "points of the projected triangle are outside the projected half-length of the aabb",
        "the axis is separating and we can exit",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "Empty sphere produces empty bounding box",
        "calculate the minimal sphere",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "point behind the ray",
        "from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h",
        "It returns the min distance between the ray and the segment",
        "defined by v0 and v1",
        "It can also set two optional targets :",
        "- The closest point on the ray",
        "- The closest point on the segment",
        "The ray and segment are not parallel.",
        "region 0",
        "Minimum at interior points of ray and segment.",
        "region 1",
        "region 5",
        "region 4",
        "region 3",
        "region 2",
        "Ray and segment are parallel.",
        "t0 = first intersect point - entrance on front of sphere",
        "t1 = second intersect point - exit point on back of sphere",
        "test to see if t1 is behind the ray - if so, return null",
        "test to see if t0 is behind the ray:",
        "if it is, the ray is inside the sphere, so return the second exit point scaled by t1,",
        "in order to always return an intersect point that is in front of the ray.",
        "else t0 is in front of the ray, so return the first collision point scaled by t0",
        "line is coplanar, return origin",
        "Null is preferable to undefined since undefined means.... it is undefined",
        "Return if the ray never intersects the plane",
        "check if the ray lies on the plane first",
        "ray origin is behind the plane (and is pointing behind it)",
        "return point closest to the ray (positive side)",
        "Compute the offset origin, edges, and normal.",
        "from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h",
        "Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,",
        "E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by",
        "|Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))",
        "|Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))",
        "|Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)",
        "b1 < 0, no intersection",
        "b2 < 0, no intersection",
        "b1+b2 > 1, no intersection",
        "Line intersects triangle, check if ray does.",
        "t < 0, no intersection",
        "Ray intersects triangle.",
        "this method does not support reflection matrices",
        "bottom row",
        "last column",
        "eye and target are in the same position",
        "up and z are parallel",
        "TODO: make this more efficient",
        "( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )",
        "based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm",
        "Based on http://www.gamedev.net/reference/articles/article1199.asp",
        "if determine is negative, we need to invert one scale",
        "scale the rotation part",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)",
        "WARNING: this discards revolution information -bhouston",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "checked by the renderer",
        "assumes axis is normalized",
        "assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)",
        "assumes q is normalized",
        "rotate object on axis in object space",
        "axis is assumed to be normalized",
        "rotate object on axis in world space",
        "axis is assumed to be normalized",
        "method assumes no rotated parent",
        "translate object by distance along axis in object space",
        "axis is assumed to be normalized",
        "This method does not support objects having non-uniformly-scaled parent(s)",
        "adds object as a child of this, while maintaining the object's world transform",
        "Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)",
        "make sure descendants are updated if required",
        "make sure descendants are updated",
        "meta is a string when called from JSON.stringify",
        "meta is a hash used to collect geometries, materials.",
        "not providing it implies that this is the root object",
        "being serialized.",
        "initialize meta obj",
        "standard Object3D serialization",
        "object specific properties",
        "",
        "",
        "",
        "extract data from the cache hash",
        "remove metadata on each item",
        "and return as array",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "static/instance method to calculate barycentric coordinates",
        "based on: http://www.blackpawn.com/texts/pointinpoly/default.html",
        "collinear or singular triangle",
        "barycentric coordinates must always sum to 1",
        "if the triangle is degenerate then we can't contain a point",
        "strictly front facing",
        "algorithm thanks to Real-Time Collision Detection by Christer Ericson,",
        "published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,",
        "under the accompanying license; see chapter 5.1.5 for detailed explanation.",
        "basically, we're distinguishing which of the voronoi regions of the triangle",
        "the point lies in with the minimum amount of redundant computation.",
        "vertex region of A; barycentric coords (1, 0, 0)",
        "vertex region of B; barycentric coords (0, 1, 0)",
        "edge region of AB; barycentric coords (1-v, v, 0)",
        "vertex region of C; barycentric coords (0, 0, 1)",
        "edge region of AC; barycentric coords (1-w, 0, w)",
        "edge region of BC; barycentric coords (0, 1-w, w)",
        "edge region of BC",
        "face region",
        "u = va * denom",
        "r is THREE.Color, hex or string",
        "h,s,l ranges are in 0.0 - 1.0",
        "rgb / hsl",
        "rgb(255,0,0) rgba(255,0,0,0.5)",
        "rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)",
        "hsl(120,50%,50%) hsla(120,50%,50%,0.5)",
        "hex color",
        "#ff0",
        "#ff0000",
        "color keywords",
        "red",
        "unknown color",
        "h,s,l ranges are in 0.0 - 1.0",
        "Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).",
        "@__PURE__",
        "override the renderer's default precision for this material",
        "standard Material serialization",
        "rotation (SpriteMaterial)",
        "TODO: Copied from Object3D.toJSON",
        "@deprecated, r166",
        "@deprecated, r166",
        "emissive",
        "Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf",
        "@__PURE__",
        "float32 to float16 helpers",
        "very small number (0, -0)",
        "small number (denorm)",
        "normal number",
        "large number (Infinity, -Infinity)",
        "stay (NaN, Infinity, -Infinity)",
        "float16 to float32 helpers",
        "zero pad mantissa bits",
        "zero exponent",
        "normalized",
        "decrement exponent",
        "clear leading 1 bit",
        "adjust bias",
        "float32 to float16",
        "float16 to float32",
        "@__PURE__",
        "@__PURE__",
        "@deprecated, r159",
        "Matching BufferAttribute constructor, do not normalize the array.",
        "",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "rotate geometry around world x-axis",
        "rotate geometry around world y-axis",
        "rotate geometry around world z-axis",
        "translate geometry",
        "scale geometry",
        "process morph attributes if present",
        "first, find the center of the bounding sphere",
        "process morph attributes if present",
        "second, try to find a boundingSphere with a radius smaller than the",
        "boundingSphere of the boundingBox: sqrt(3) smaller in the best case",
        "process morph attributes if present",
        "based on http://www.terathon.com/code/tangent.html",
        "(per vertex tangents)",
        "silently ignore degenerate uv triangles having coincident or colinear vertices",
        "Gram-Schmidt orthogonalize",
        "Calculate handedness",
        "reset existing normals to zero",
        "indexed elements",
        "non-indexed elements (unconnected triangle soup)",
        "",
        "attributes",
        "morph attributes",
        "morphAttribute: array of Float32BufferAttributes",
        "groups",
        "standard BufferGeometry serialization",
        "for simplicity the code assumes attributes are not shared across geometries, see #15811",
        "reset",
        "used for storing cloned, shared data",
        "name",
        "index",
        "attributes",
        "morph attributes",
        "morphAttribute: array of Float32BufferAttributes",
        "groups",
        "bounding box",
        "bounding sphere",
        "draw range",
        "user data",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "test with bounding sphere in world space",
        "check distance from ray origin to bounding sphere",
        "convert ray to local space of mesh",
        "test with bounding box in local space",
        "test for intersections with geometry",
        "indexed buffer geometry",
        "triangle number in indexed buffer semantics",
        "triangle number in indexed buffer semantics",
        "non-indexed buffer geometry",
        "triangle number in non-indexed buffer semantics",
        "triangle number in non-indexed buffer semantics",
        "segments",
        "buffers",
        "helper variables",
        "build each side of the box geometry",
        "px",
        "nx",
        "py",
        "ny",
        "pz",
        "nz",
        "build geometry",
        "generate vertices, normals and uvs",
        "set values to correct vector component",
        "now apply vector to vertex buffer",
        "set values to correct vector component",
        "now apply vector to normal buffer",
        "uvs",
        "counters",
        "indices",
        "1. you need three indices to draw a single face",
        "2. a single segment consists of two faces",
        "3. so we need to generate six (2*3) indices per segment",
        "faces",
        "increase counter",
        "add a group to the geometry. this will ensure multi material support",
        "calculate new start value for groups",
        "update total number of vertices",
        "https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398",
        "https://github.com/mrdoob/three.js/issues/27868",
        "Legacy",
        "set to use scene fog",
        "set to use scene lights",
        "set to use user-defined clipping planes",
        "set to use vertex shader multi_draw / enable gl_DrawID",
        "When rendered geometry doesn't include these attributes but the material does,",
        "use these default values in WebGL. This avoids errors when buffer data is missing.",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "width of the film (default in millimeters)",
        "horizontal film offset (same unit as gauge)",
        "see {@link http://www.bobatkins.com/photography/technical/field_of_view.html}",
        "film not completely covered in portrait format (aspect < 1)",
        "film not completely covered in landscape format (aspect > 1)",
        "negative fov is not an error",
        "mipmaps are generated during the last call of render()",
        "at this point, all sides of the cube render target are defined",
        "By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)",
        "in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,",
        "in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.",
        "three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped",
        "and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture",
        "as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).",
        "glsl",
        "glsl",
        "Avoid blurred poles",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "normal is assumed to be normalized",
        "Q: should an error be thrown if normal is zero (e.g. degenerate plane)?",
        "Note: will lead to a divide by zero if the plane is invalid.",
        "line is coplanar, return origin",
        "Unsure if this is the correct method to handle this case.",
        "Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.",
        "@__PURE__",
        "@__PURE__",
        "corner at max distance",
        "@deprecated, r159",
        "Not using update ranges",
        "@deprecated, r159",
        "reset range",
        "",
        "",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "use PMREM if the user wants to blur the background",
        "buffers might not be writable which is required to ensure a correct clear",
        "add \"envMap\" material property so the renderer can evaluate it like for built-in materials",
        "accommodate left-handed frame",
        "environment maps which are not cube render targets or PMREMs follow a different convention",
        "push to the pre-sorted opaque render list",
        "add \"map\" material property so the renderer can evaluate it like for built-in materials",
        "push to the pre-sorted opaque render list",
        "for backward compatibility on non-VAO support browser",
        "TODO Attribute may not be available on context restore",
        "check for integer attributes",
        "for backward-compatibility",
        "",
        "Edge and Chrome Mac < 52 (#9513)",
        "enable state of previous frame - the clipping code has to",
        "run another frame in order to reset the state:",
        "there's no local clipping",
        "there's no global clipping",
        "ensure unique state",
        "image not yet ready. try the conversion next frame",
        "The standard deviations (radians) associated with the extra mips. These are",
        "chosen to approximate a Trowbridge-Reitz distribution function times the",
        "geometric shadowing function. These sigma values squared must match the",
        "variance #defines in cube_uv_reflection_fragment.glsl.js.",
        "The maximum length of the blur for loop. Smaller sigmas will use fewer",
        "samples and exit early, but not recompile the shader.",
        "@__PURE__",
        "@__PURE__",
        "Golden Ratio",
        "Vertices of a dodecahedron (except the opposites, which represent the",
        "same axis), used as axis directions evenly spread on a sphere.",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "private interface",
        "Number of standard deviations at which to cut off the discrete approximation.",
        "glsl",
        "glsl",
        "glsl",
        "glsl",
        "equirect/cube map to cubeUV conversion",
        "image not yet ready. try the conversion next frame",
        "",
        "Updating index buffer in VAO now. See WebGLBindingStates.",
        "morph targets",
        "Updating index buffer in VAO now. See WebGLBindingStates",
        "",
        "",
        "if the attribute is obsolete, create a new one",
        "",
        "the following encodes morph targets into an array of data textures. Each layer represents a single morph target.",
        "fill buffer",
        "",
        "Update once per frame",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "--- Utilities ---",
        "Array Caches (provide typed arrays for temporary by size)",
        "Float32Array caches used for uploading Matrix uniforms",
        "Flattening for arrays of vectors and matrices",
        "unoptimized: ! isNaN( firstElem )",
        "see http://jacksondunstan.com/articles/983",
        "Texture unit allocation",
        "--- Setters ---",
        "Note: Defining these methods externally, because they come in a bunch",
        "and this way their names minify.",
        "Single scalar",
        "Single float vector (from flat array or THREE.VectorN)",
        "Single matrix (from flat array or THREE.MatrixN)",
        "Single integer / boolean",
        "Single integer / boolean vector (from flat array or THREE.VectorN)",
        "Single unsigned integer",
        "Single unsigned integer vector (from flat array or THREE.VectorN)",
        "Single texture (2D / Cube)",
        "#28670",
        "Helper to pick the right setter for the singular case",
        "FLOAT",
        "_VEC2",
        "_VEC3",
        "_VEC4",
        "_MAT2",
        "_MAT3",
        "_MAT4",
        "INT, BOOL",
        "_VEC2",
        "_VEC3",
        "_VEC4",
        "UINT",
        "_VEC2",
        "_VEC3",
        "_VEC4",
        "Array of scalars",
        "Array of vectors (from flat array or array of THREE.VectorN)",
        "Array of matrices (from flat array or array of THREE.MatrixN)",
        "Array of integer / boolean",
        "Array of integer / boolean vectors (from flat array)",
        "Array of unsigned integer",
        "Array of unsigned integer vectors (from flat array)",
        "Array of textures (2D / 3D / Cube / 2DArray)",
        "Helper to pick the right setter for a pure (bottom-level) array",
        "FLOAT",
        "_VEC2",
        "_VEC3",
        "_VEC4",
        "_MAT2",
        "_MAT3",
        "_MAT4",
        "INT, BOOL",
        "_VEC2",
        "_VEC3",
        "_VEC4",
        "UINT",
        "_VEC2",
        "_VEC3",
        "_VEC4",
        "--- Uniform Classes ---",
        "this.path = activeInfo.name; // DEBUG",
        "this.path = activeInfo.name; // DEBUG",
        "--- Top-level ---",
        "Parser - builds up the property tree from the path strings",
        "extracts",
        "- the identifier (member name or array index)",
        "- followed by an optional right bracket (found when array index)",
        "- followed by an optional left bracket or dot (type of subscript)",
        "",
        "Note: These portions can be read in a non-overlapping fashion and",
        "allow straightforward parsing of the hierarchy that WebGL encodes",
        "in the uniform names.",
        "reset RegExp object, because of the early exit of a previous run",
        "convert to integer",
        "bare name or \"pure\" bottom-level array \"[0]\" suffix",
        "step into inner node / create it in case it doesn't exist",
        "Root Container",
        "note: always updating when .needsUpdate is undefined",
        "From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/",
        "--enable-privileged-webgl-extension",
        "console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );",
        "@__PURE__",
        "console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );",
        "Resolve Includes",
        "Unroll Loops",
        "",
        "TODO Send this event to Three.js DevTools",
        "console.log( 'WebGLProgram', cacheKey );",
        "",
        "",
        "GLSL 3.0 conversion for built-in materials and ShaderMaterial",
        "console.log( '*VERTEX*', vertexGlsl );",
        "console.log( '*FRAGMENT*', fragmentGlsl );",
        "Force a particular attribute to index 0.",
        "programs with morphTargets displace position out of attribute 0",
        "check for link errors",
        "default error reporting",
        "Clean up",
        "Crashes in iOS9 and iOS10. #18402",
        "gl.detachShader( program, glVertexShader );",
        "gl.detachShader( program, glFragmentShader );",
        "set up caching for uniform locations",
        "Populates cachedUniforms and cachedAttributes",
        "set up caching for attribute locations",
        "Populates cachedAttributes and cachedUniforms",
        "indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,",
        "flag the program as ready immediately. It may cause a stall when it's first used.",
        "free resource",
        "",
        "heuristics to create shader parameters according to lights in the scene",
        "(not to blow over maxLights budget)",
        "",
        "",
        "",
        "",
        "the usage of getChannel() determines the active texture channels for this shader",
        "Check if code has been already compiled",
        "Remove from unordered set",
        "Free WebGL resources",
        "Exposed for resource monitoring & error feedback via renderer.info:",
        "Clear references from inactive renderItems in the list",
        "ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]",
        "make sure the lightMatrix is up to date",
        "TODO : do it if required only",
        "extract local rotation of light to derive width/height half vectors",
        "Set GL state for depth map.",
        "check for shadow map type changes",
        "render depth map",
        "do blur pass for VSM",
        "vertical pass",
        "horizontal pass",
        "in this case we need a unique material instance reflecting the",
        "appropriate state",
        "make sure to remove the unique distance/depth materials used for shadow map rendering",
        "set to invalid state",
        "",
        "4 is required to match default unpack alignment of 4.",
        "init",
        "",
        "gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER",
        "custom blending",
        "",
        "texture",
        "",
        "bind shader specific block index to global block point",
        "",
        "reset state",
        "reset internals",
        "https://registry.khronos.org/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml",
        "https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/",
        "https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_pvrtc/",
        "https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc/",
        "https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/",
        "https://registry.khronos.org/webgl/extensions/EXT_texture_compression_bptc/",
        "https://registry.khronos.org/webgl/extensions/EXT_texture_compression_rgtc/",
        "maps WebglTexture objects to instances of Source",
        "cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,",
        "also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!",
        "Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).",
        "Ignore any errors",
        "Use OffscreenCanvas when available. Specially needed in web workers",
        "eslint-disable-next-line compat/compat",
        "handle case if texture exceeds max size",
        "only perform resize if necessary",
        "only perform resize for certain image types",
        "cube textures can't reuse the same canvas",
        "user-defined mipmaps",
        "texture without mipmaps (only base level)",
        "",
        "",
        "check if it's necessary to remove the WebGLTexture object",
        "the WebGLTexture object is not used anymore, remove it",
        "remove the weak map entry if no WebGLTexture uses the source anymore",
        "",
        "",
        "verify extension",
        "create Source <-> WebGLTextures mapping if necessary",
        "check if there is already a WebGLTexture object for the given texture parameters",
        "if not, create a new instance of WebGLTexture",
        "create new entry",
        "when a new instance of WebGLTexture was created, a texture upload is required",
        "even if the image contents are identical",
        "every time the texture cache key changes, it's necessary to check if an instance of",
        "WebGLTexture can be deleted in order to avoid a memory leak.",
        "store references to cache key and WebGLTexture object",
        "",
        "use manually created mipmaps if available",
        "if there are no manual mipmaps",
        "set 0 level mipmap and then use GL to generate other mipmap levels",
        "regular Texture (image, video, canvas)",
        "use manually created mipmaps if available",
        "if there are no manual mipmaps",
        "set 0 level mipmap and then use GL to generate other mipmap levels",
        "TODO: Uniformly handle mipmap definitions",
        "Normal textures and compressed cube textures define base level + mips with their mipmap array",
        "Uncompressed cube textures use their mipmap array only for mips (no base level)",
        "We assume images for cube map have the same size.",
        "Render targets",
        "Setup storage for target texture and bind it to correct framebuffer",
        "Setup storage for internal depth/stencil buffers and bind to correct framebuffer",
        "retrieve the depth attachment types",
        "set up the attachment",
        "Setup resources for a Depth Texture for a FBO (needs an extension)",
        "upload an empty depth texture with framebuffer size",
        "Setup GL resources for a non-texture depth buffer",
        "rebind framebuffer with external textures",
        "Set up GL resources for the render target",
        "Setup framebuffer",
        "Setup color buffer",
        "Setup depth and stencil buffers",
        "If MRT we need to remove FBO attachments",
        "resolving stencil is slow with a D3D backend. disable it for all transmission render targets (see #27799)",
        "If MRT since pre-blit we removed the FBO we need to reconstruct the attachments",
        "Check the last frame we updated the VideoTexture",
        "sRGB",
        "in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format",
        "if intrinsic data are not available, fallback to width/height",
        "",
        "WebGL2 formats.",
        "S3TC",
        "PVRTC",
        "ETC",
        "ASTC",
        "BPTC",
        "RGTC",
        "",
        "if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)",
        "Initialize hand with joints when connected",
        "Update the joints groups with the XRJoint poses",
        "The transform of this joint will be updated with the joint pose on each frame",
        "Custom events",
        "Check pinchz",
        "Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it",
        "private method",
        "Set default foveation to maximum.",
        "",
        "",
        "",
        "restore framebuffer/rendering state",
        "",
        "TODO Remove this when possible, see #23278",
        "Notify disconnected",
        "Notify connected",
        "Assign input source a controller that currently has no input source",
        "If all controllers do currently receive input we ignore new ones",
        "",
        "VR systems will have identical far and near planes, and",
        "most likely identical top and bottom frustum extents.",
        "Use the left camera for these values.",
        "Calculate the new camera's position offset from the",
        "left camera. xOffset should be roughly half `ipd`.",
        "TODO: Better way to apply this offset?",
        "Find the union of the frustum values of the cameras and scale",
        "the values so that the near plane's position does not change in world space,",
        "although must now be relative to the new union camera.",
        "Note that the new renderState won't apply until the next frame. See #18320",
        "update projection matrix for proper view frustum culling",
        "assume single camera setup (AR)",
        "update user camera and its children",
        "0 = no foveation = full resolution",
        "1 = maximum foveation = the edges render at lower resolution",
        "Animation Loop",
        "check if it's necessary to rebuild cameraXR's camera list",
        "For side-by-side projection, we only produce a single texture for both eyes.",
        "",
        "",
        "@__PURE__",
        "@__PURE__",
        "#15581",
        "accommodate left-handed frame",
        "environment maps which are not cube render targets or PMREMs follow a different convention",
        "to prevent pow( 0.0, 0.0 )",
        "uniforms.envMap.value = material.envMap; // part of uniforms common",
        "also part of uniforms common",
        "binding points are global whereas block indices are per shader program",
        "ensure to update the binding points/block indices mapping for this program",
        "update UBO once per frame",
        "the setup of an UBO is independent of a particular shader program but global",
        "TODO add integer and struct support",
        "manually converting 3x3 to 3x4",
        "cache entry does not exist so far",
        "compare current value with cached entry",
        "determine total buffer size according to the STD140 layout",
        "Hint: STD140 is the only supported layout in WebGL 2",
        "global buffer offset in bytes",
        "size of a chunk in bytes",
        "offset in the current chunk",
        "required padding to match boundary",
        "the start position in the current chunk for the data",
        "Check for chunk overflow",
        "Add padding and adjust offset",
        "the following two properties will be used for partial buffer updates",
        "Update the global offset",
        "ensure correct final padding",
        "",
        "bytes",
        "determine sizes according to STD140",
        "float/int/bool",
        "vec2",
        "vec3",
        "evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes",
        "vec4",
        "mat3 (in STD140 a 3x3 matrix is represented as 3x4)",
        "mat4",
        "render() can be called from within a callback triggered by another render.",
        "We track this so that the nested render call gets its list and state isolated from the parent render call.",
        "public properties",
        "Debug configuration container",
        "clearing",
        "scene graph",
        "user-defined clipping",
        "physically based shading",
        "tone mapping",
        "internal properties",
        "internal state cache",
        "",
        "frustum",
        "clipping",
        "camera matrices cache",
        "initialize",
        "OffscreenCanvas does not have setAttribute, see #22811",
        "event listeners must be registered before WebGL context is created, see #12753",
        "xr",
        "API",
        "Clearing",
        "check if we're trying to clear an integer target",
        "use the appropriate clear functions to clear the target if it's a signed",
        "or unsigned integer target",
        "",
        "Events",
        "Buffer deallocation",
        "Buffer rendering",
        "renderBufferDirect second parameter used to be fog (could be null)",
        "",
        "",
        "",
        "",
        "Not using Line*Material",
        "Compile",
        "gather lights from both the target scene and the new object that will be added to the scene.",
        "Only initialize materials in the new scene, not the targetScene.",
        "compileAsync",
        "Wait for all the materials in the new object to indicate that they're",
        "ready to be used before resolving the promise.",
        "remove any programs that report they're ready to use from the list",
        "once the list of compiling materials is empty, call the callback",
        "if some materials are still not ready, wait a bit and check again",
        "If we can check the compilation status of the materials without",
        "blocking then do so right away.",
        "Otherwise start by waiting a bit to give the materials we just",
        "initialized a chance to finish.",
        "Animation Loop",
        "Rendering",
        "update scene graph",
        "update camera matrices and frustum",
        "use XR camera for rendering",
        "",
        "",
        "",
        "render scene",
        "",
        "resolve multisample renderbuffers to a single-sample texture if necessary",
        "Generate mipmap if we're using any kind of mipmap filtering",
        "",
        "_gl.finish();",
        "Ensure depth buffer writing is enabled so it can be cleared on next render",
        "",
        "Turn off the features which can affect the frag color for opaque objects pass.",
        "Otherwise they are applied twice in opaque objects pass and transmission objects pass.",
        "Remove viewport from camera to avoid nested render calls resetting viewport to it (e.g Reflector).",
        "Transmission render pass requires viewport to match the transmissionRenderTarget.",
        "scene could be a Mesh, Line, Points, ...",
        "always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change",
        "new material",
        "early out if program and light state is identical",
        "store the light setup it was created for",
        "wire up the material to this renderer's lighting state",
        "TODO (abelnation): add area lights shadow info to uniforms",
        "scene could be a Mesh, Line, Points, ...",
        "we might want to call this function with some ClippingGroup",
        "object instead of the material, once it becomes feasible",
        "(#8465, #8379)",
        "",
        "",
        "common camera uniforms",
        "consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067",
        "lighting uniforms depend on the camera so enforce an update",
        "now, in case this material supports lights - or later, when",
        "the next material that does gets activated:",
        "set to true on material change",
        "remains set until update done",
        "skinning and morph target uniforms must be set even if material didn't change",
        "auto-setting of texture unit for bone and morph texture must go before other textures",
        "otherwise textures used for skinning and morphing can take over texture units reserved for other material textures",
        "https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512",
        "the current material requires lighting info",
        "note: all lighting uniforms are always set correctly",
        "they simply reference the renderer's state for their",
        "values",
        "",
        "use the current material's .needsUpdate flags to set",
        "the GL state when required",
        "refresh uniforms common to several materials",
        "common matrices",
        "UBOs",
        "If uniforms are marked as clean, they don't need to be loaded to the GPU.",
        "The multisample_render_to_texture extension doesn't work properly if there",
        "are midframe flushes and an external depth buffer. Disable use of the extension.",
        "We need to make sure to rebind the framebuffer.",
        "Color and depth texture must be rebound in order for the swapchain to update.",
        "reset current material to ensure correct uniform bindings",
        "the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)",
        "restore framebuffer of current render target if necessary",
        "the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)",
        "check if the commands have finished every 8 ms",
        "restore framebuffer of current render target if necessary",
        "support previous signature with position first",
        "@deprecated, r165",
        "support previous signature with dstPosition first",
        "@deprecated, r165",
        "As another texture upload may have changed pixelStorei",
        "parameters, make sure they are correct for the dstTexture",
        "Generate mipmaps only when copying level 0",
        "support previous signature with source box first",
        "@deprecated, r165",
        "Generate mipmaps only when copying level 0",
        "@deprecated, r159",
        "generate UUID for array buffer if necessary",
        "",
        "@__PURE__",
        "de-interleave data and save it as an ordinary buffer attribute for now",
        "save as true interleaved attribute",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "check first triangle",
        "check second triangle",
        "compute position in camera space",
        "to check if rotation is not zero",
        "transform to world space",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "test with bounding sphere in world space",
        "convert ray to local space of skinned mesh",
        "test with bounding box in local space",
        "test for intersections with geometry",
        "do something reasonable",
        "@__PURE__",
        "@__PURE__",
        "calculate inverse bone matrices if necessary",
        "handle special case",
        "recover the bind-time world matrices",
        "compute the local matrices, positions, rotations and scales",
        "flatten bone matrices to array",
        "compute the offset between the current and the original transform",
        "layout (1 matrix = 4 pixels)",
        "RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)",
        "with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)",
        "16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)",
        "32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)",
        "64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)",
        "4 pixels needed for 1 matrix",
        "4 floats per RGBA pixel",
        "copy current values",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "All influences + the baseInfluenceSum",
        "Skip the baseInfluenceSum at the beginning",
        "test with bounding sphere first",
        "now test each instance",
        "calculate the world matrix for each instance",
        "the mesh represents this single instance",
        "process the result of raycast",
        "morphBaseInfluence + all influences",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@TODO: SkinnedMesh support?",
        "@TODO: geometry.groups support?",
        "@TODO: geometry.drawRange support?",
        "@TODO: geometry.morphAttributes support?",
        "@TODO: Support uniform parameter per geometry",
        "@TODO: Add an \"optimize\" function to pack geometry and remove data gaps",
        "copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"",
        "use the component getters and setters if the array data cannot",
        "be copied directly",
        "faster copy approach using typed array set function",
        "stores visible, active, and geometry id per object",
        "geometry information",
        "Local matrix per geometry by using data texture",
        "layout (1 matrix = 4 pixels)",
        "RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)",
        "with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)",
        "16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)",
        "32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)",
        "64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)",
        "4 pixels needed for 1 matrix",
        "4 floats per RGBA pixel",
        "4 floats per RGBA pixel initialized to white",
        "Reserve last u16 index for primitive restart.",
        "Make sure the geometry is compatible with the existing combined geometry attributes",
        "check to ensure the geometries are using consistent attributes and indices",
        "ensure we're not over geometry",
        "initialize the matrix",
        "ensure we're not over geometry",
        "get the necessary range fo the geometry",
        "update id",
        "add the reserved range and draw range objects",
        "update the geometry",
        "copy geometry over",
        "copy attribute data",
        "fill the rest in with zeroes",
        "copy index",
        "copy index data over",
        "fill the rest in with zeroes",
        "store the bounding boxes",
        "set drawRange count",
        "deleteGeometry( geometryId ) {\n\n\t\t// TODO: delete geometry and associated instances\n\n\t}",
        "deleteInstance( instanceId ) {\n\n\t\t// Note: User needs to call optimize() afterward to pack the data.\n\n\t\tconst drawInfo = this._drawInfo;\n\t\tif ( instanceId >= drawInfo.length || drawInfo[ instanceId ].active === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tdrawInfo[ instanceId ].active = false;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}",
        "get bounding box and compute it if it doesn't exist",
        "compute bounding box",
        "get bounding sphere and compute it if it doesn't exist",
        "compute bounding sphere",
        "@TODO: Map geometryId to index of the arrays because",
        "optimize() can make geometryId mismatch the index",
        "@TODO: Map id to index of the arrays because",
        "optimize() can make id mismatch the index",
        "if the geometry is out of range, not active, or visibility state",
        "does not change then return early",
        "return early if the geometry is out of range or not active",
        "iterate over each geometry",
        "ge the intersects",
        "add batch id to the intersects",
        "Assuming the geometry is not shared with other meshes",
        ", _group",
        "if visibility has not changed and frustum culling and object sorting is not required",
        "then skip iterating over all items",
        "the indexed version of the multi draw function requires specifying the start",
        "offset in bytes.",
        "prepare the frustum in the local frame",
        "get the camera position in the local frame",
        "get the bounds in world space",
        "determine whether the batched geometry is within the frustum",
        "get the distance from camera used for sorting",
        "Sort the draw ranges and prep for rendering",
        "determine whether the batched geometry is within the frustum",
        "get the bounds in world space",
        ", group",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "we assume non-indexed geometry",
        "Checking boundingSphere distance to ray",
        "",
        "Move back to world space for distance calculation",
        "What do we want? intersection point on the ray or on the segment??",
        "point: raycaster.ray.at( distance ),",
        "@__PURE__",
        "@__PURE__",
        "we assume non-indexed geometry",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "Checking boundingSphere distance to ray",
        "",
        "no flipping for cube textures",
        "(also flipping doesn't work for compressed textures )",
        "can't generate mipmaps for compressed textures",
        "mips must be embedded in DDS files",
        "Virtual base class method to overwrite and implement in subclasses",
        "- t [0 .. 1]",
        "Get point at relative position in curve according to arc length",
        "- u [0 .. 1]",
        "Get sequence of points using getPoint( t )",
        "Get sequence of points using getPointAt( u )",
        "Get total curve arc length",
        "Get list of cumulative segment lengths",
        "{ sums: cache, sum: sum }; Sum is in the last element.",
        "Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant",
        "The targeted u distance value to get",
        "binary search for the index with largest value smaller than target u distance",
        "less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats",
        "DONE",
        "we could get finer grain at lengths, or use simple interpolation between two points",
        "determine where we are between the 'before' and 'after' points",
        "add that fractional amount to t",
        "Returns a unit vector tangent at t",
        "In case any sub curve does not implement its tangent derivation,",
        "2 points a small delta apart will be used to find its gradient",
        "which seems to give a reasonable approximation",
        "Capping in case of danger",
        "see http://www.cs.indiana.edu/pub/techreports/TR425.pdf",
        "compute the tangent vectors for each segment on the curve",
        "select an initial normal vector perpendicular to the first tangent vector,",
        "and in the direction of the minimum tangent xyz component",
        "compute the slowly-varying normal and binormal vectors for each segment on the curve",
        "clamp for floating pt errors",
        "if the curve is closed, postprocess the vectors so the first and last normal vectors are the same",
        "twist a little...",
        "ensures that deltaAngle is 0 .. 2 PI",
        "Rotate the point about the center of the ellipse.",
        "Based on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.",
        "compute tangents when parameterized in [t1,t2]",
        "rescale tangents for parametrization in [0,1]",
        "",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "4 points (p1 & p2 defined below)",
        "extrapolate first point",
        "extrapolate last point",
        "init Centripetal / Chordal Catmull-Rom",
        "safety check for repeated points",
        "",
        "",
        "Line curve is linear, so we can overwrite default getPointAt",
        "Line curve is linear, so we can overwrite default getPointAt",
        "#__PURE__",
        "Automatically closes the path",
        "Add a line curve if start and end of lines are not connected",
        "To get accurate point with reference to",
        "entire path distance at time t,",
        "following has to be done:",
        "1. Length of each sub path have to be known",
        "2. Locate and identify type of curve",
        "3. Get t for the curve",
        "4. Return curve.getPointAt(t')",
        "To think about boundaries points.",
        "loop where sum != 0, sum > d , sum+1 <d",
        "We cannot use the default THREE.Curve getPoint() with getLength() because in",
        "THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath",
        "getPoint() depends on getLength",
        "cacheLengths must be recalculated.",
        "Compute lengths and cache them",
        "We cannot overwrite getLengths() because UtoT mapping uses it.",
        "We use cache values if curves and cache array are same length",
        "Get length of sub-curve",
        "Push sums into cached array",
        "ensures no consecutive points are duplicates",
        "TODO consider referencing vectors instead of copying?",
        "Array of Vector",
        "if a previous curve is present, attempt to join",
        "clamp phiLength so it's in range of [ 0, 2PI ]",
        "buffers",
        "helper variables",
        "pre-compute normals for initial \"meridian\"",
        "generate vertices, uvs and normals",
        "vertex",
        "uv",
        "normal",
        "indices",
        "faces",
        "build geometry",
        "buffers",
        "helper variables",
        "center point",
        "vertex",
        "normal",
        "uvs",
        "indices",
        "build geometry",
        "buffers",
        "helper variables",
        "generate geometry",
        "build geometry",
        "this will be used to calculate the normal",
        "generate vertices, normals and uvs",
        "calculate the radius of the current row",
        "vertex",
        "normal",
        "uv",
        "save index of vertex in respective row",
        "now save vertices of the row in our index array",
        "generate indices",
        "we use the index array to access the correct indices",
        "faces",
        "update group counter",
        "add a group to the geometry. this will ensure multi material support",
        "calculate new start value for groups",
        "save the index of the first center vertex",
        "first we generate the center vertex data of the cap.",
        "because the geometry needs one set of uvs per face,",
        "we must generate a center vertex per face/segment",
        "vertex",
        "normal",
        "uv",
        "increase index",
        "save the index of the last center vertex",
        "now we generate the surrounding vertices, normals and uvs",
        "vertex",
        "normal",
        "uv",
        "increase index",
        "generate indices",
        "face top",
        "face bottom",
        "add a group to the geometry. this will ensure multi material support",
        "calculate new start value for groups",
        "default buffer data",
        "the subdivision creates the vertex buffer data",
        "all vertices should lie on a conceptual sphere with a given radius",
        "finally, create the uv data",
        "build non-indexed geometry",
        "flat normals",
        "smooth normals",
        "helper functions",
        "iterate over all faces and apply a subdivision with the given detail value",
        "get the vertices of the face",
        "perform subdivision",
        "we use this multidimensional array as a data structure for creating the subdivision",
        "construct all of the vertices for this subdivision",
        "construct all of the faces",
        "iterate over the entire buffer and apply the radius to each vertex",
        "handle case when face straddles the seam, see #3269",
        "uv data of a single face",
        "0.9 is somewhat arbitrary",
        "Angle around the Y axis, counter-clockwise when looking from above.",
        "Angle above the XZ plane.",
        "(±1, ±1, ±1)",
        "(0, ±1/φ, ±φ)",
        "(±1/φ, ±φ, 0)",
        "(±φ, 0, ±1/φ)",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "create hashes for the edge from the vertices",
        "skip degenerate triangles",
        "iterate over every edge",
        "get the first and next vertex making up the edge",
        "if we found a sibling edge add it into the vertex array if",
        "it meets the angle threshold and delete the edge from the map.",
        "if we've already got an edge here then skip adding a new one",
        "iterate over all remaining, unmatched edges and add them to the vertex array",
        "get points of shape and holes (keypoints based on segments parameter)",
        "if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox",
        "minX, minY and invSize are later used to transform coords into integers for z-order calculation",
        "create a circular doubly linked list from polygon points in the specified winding order",
        "eliminate colinear or duplicate points",
        "main ear slicing loop which triangulates a polygon (given as a linked list)",
        "interlink polygon nodes in z-order",
        "iterate through ears, slicing them one by one",
        "cut off the triangle",
        "skipping the next vertex leads to less sliver triangles",
        "if we looped through the whole remaining polygon and can't find any more ears",
        "try filtering points and slicing again",
        "as a last resort, try splitting the remaining polygon into two",
        "check whether a polygon node forms a valid ear with adjacent nodes",
        "reflex, can't be an ear",
        "now make sure we don't have other points inside the potential ear",
        "triangle bbox; min & max are calculated like this for speed",
        "reflex, can't be an ear",
        "triangle bbox; min & max are calculated like this for speed",
        "z-order range for the current triangle bbox;",
        "look for points inside the triangle in both directions",
        "look for remaining points in decreasing z-order",
        "look for remaining points in increasing z-order",
        "go through all polygon nodes and cure small local self-intersections",
        "remove two nodes involved",
        "try splitting polygon into two and triangulate them independently",
        "look for a valid diagonal that divides the polygon into two",
        "split the polygon in two by the diagonal",
        "filter colinear points around the cuts",
        "run earcut on each half",
        "link every hole into the outer loop, producing a single-ring polygon without holes",
        "process holes from left to right",
        "find a bridge between vertices that connects hole with an outer ring and link it",
        "filter collinear points around the cuts",
        "David Eberly's algorithm for finding a bridge between hole and outer polygon",
        "find a segment intersected by a ray from the hole's leftmost point to the left;",
        "segment's endpoint with lesser x will be potential connection point",
        "hole touches outer segment; pick leftmost endpoint",
        "look for points inside the triangle of hole point, segment intersection and endpoint;",
        "if there are no points found, we have a valid connection;",
        "otherwise choose the point of the minimum angle with the ray as connection point",
        "tangential",
        "whether sector in vertex m contains sector in vertex p in the same coordinates",
        "interlink polygon nodes in z-order",
        "Simon Tatham's linked list merge sort algorithm",
        "http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html",
        "z-order of a point given coords and inverse of the longer side of data bbox",
        "coords are transformed into non-negative 15-bit integer range",
        "find the leftmost node of a polygon ring",
        "check if a point lies within a convex triangle",
        "check if a diagonal between two polygon nodes is valid (lies in polygon interior)",
        "dones't intersect other edges",
        "locally visible",
        "does not create opposite-facing sectors",
        "special zero-length case",
        "signed area of a triangle",
        "check if two points are equal",
        "check if two segments intersect",
        "general case",
        "p1, q1 and p2 are collinear and p2 lies on p1q1",
        "p1, q1 and q2 are collinear and q2 lies on p1q1",
        "p2, q2 and p1 are collinear and p1 lies on p2q2",
        "p2, q2 and q1 are collinear and q1 lies on p2q2",
        "for collinear points p, q, r, check if point q lies on segment pr",
        "check if a polygon diagonal intersects any polygon segments",
        "check if a polygon diagonal is locally inside the polygon",
        "check if the middle point of a polygon diagonal is inside the polygon",
        "link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;",
        "if one belongs to the outer ring and another to a hole, it merges it into a single ring",
        "create a node and optionally link it with previous one (in a circular doubly linked list)",
        "vertex index in coordinates array",
        "vertex coordinates",
        "previous and next vertex nodes in a polygon ring",
        "z-order curve value",
        "previous and next nodes in z-order",
        "indicates whether this is a steiner point",
        "calculate area of the contour polygon",
        "flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]",
        "array of hole indices",
        "final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]",
        "",
        "",
        "",
        "build geometry",
        "functions",
        "options",
        "",
        "bevels not supported for path extrusion",
        "SETUP TNB variables",
        "TODO1 - have a .isClosed in spline?",
        "console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);",
        "Safeguards if bevels are not enabled",
        "Variables initialization",
        "Maybe we should also check if holes are in the opposite direction, just to be safe ...",
        "Vertices",
        "vertices has all points but contour has only points of circumference",
        "Find directions for point movement",
        "computes for inPt the corresponding point inPt' on a new contour",
        "shifted by 1 unit (length of normalized vector) to the left",
        "if we walk along contour clockwise, this new contour is outside the old one",
        "",
        "inPt' is the intersection of the two lines parallel to the two",
        "adjacent edges of inPt at a distance of 1 unit on the left side.",
        "resulting translation vector for inPt",
        "good reading for geometry algorithms (here: line-line intersection)",
        "http://geomalgorithms.com/a05-_intersect-1.html",
        "check for collinear edges",
        "not collinear",
        "length of vectors for normalizing",
        "shift adjacent points by unit vectors to the left",
        "scaling factor for v_prev to intersection point",
        "vector from inPt to intersection point",
        "Don't normalize!, otherwise sharp corners become ugly",
        "but prevent crazy spikes",
        "handle special case of collinear edges",
        "assumes: opposite",
        "console.log(\"Warning: lines are a straight sequence\");",
        "console.log(\"Warning: lines are a straight spike\");",
        "(j)---(i)---(k)",
        "console.log('i,j,k', i, j , k)",
        "(j)---(i)---(k)",
        "Loop bevelSegments, 1 for the front, 1 for the back",
        "for ( b = bevelSegments; b > 0; b -- ) {",
        "contract shape",
        "expand holes",
        "Back facing vertices",
        "v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );",
        "Add stepped vertices...",
        "Including front facing vertices",
        "v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );",
        "Add bevel segments planes",
        "for ( b = 1; b <= bevelSegments; b ++ ) {",
        "contract shape",
        "expand holes",
        "Faces",
        "Top and bottom faces",
        "Sides faces",
        "Internal functions",
        "steps + 1",
        "Bottom faces",
        "Top faces",
        "Bottom faces",
        "Top faces",
        "Create faces for the z-sides of the shape",
        ", true",
        "console.log('b', i,j, i-1, k,vertices.length);",
        "buffers",
        "some helper variables",
        "generate vertices, normals and uvs",
        "values are generate from the inside of the ring to the outside",
        "vertex",
        "normal",
        "uv",
        "increase the radius for next row of vertices",
        "indices",
        "faces",
        "build geometry",
        "buffers",
        "helper variables",
        "allow single and array values for \"shapes\" parameter",
        "enables MultiMaterial support",
        "build geometry",
        "helper functions",
        "check direction of vertices",
        "join vertices of inner and outer paths to a single array",
        "vertices, normals, uvs",
        "world uvs",
        "indices",
        "buffers",
        "generate vertices, normals and uvs",
        "special case for the poles",
        "vertex",
        "normal",
        "uv",
        "indices",
        "build geometry",
        "buffers",
        "helper variables",
        "generate vertices, normals and uvs",
        "vertex",
        "normal",
        "uv",
        "generate indices",
        "indices",
        "faces",
        "build geometry",
        "buffers",
        "helper variables",
        "generate vertices, normals and uvs",
        "the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment",
        "now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.",
        "these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions",
        "calculate orthonormal basis",
        "normalize B, N. T can be ignored, we don't use it",
        "now calculate the vertices. they are nothing more than an extrusion of the torus curve.",
        "because we extrude a shape in the xy-plane, there is no need to calculate a z-value.",
        "now calculate the final vertex position.",
        "first we orient the extrusion with our basis vectors, then we add it to the current position on the curve",
        "normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)",
        "uv",
        "generate indices",
        "indices",
        "faces",
        "build geometry",
        "this function calculates the current position on the torus curve",
        "expose internals",
        "helper variables",
        "buffer",
        "create buffer data",
        "build geometry",
        "functions",
        "if the geometry is not closed, generate the last row of vertices and normals",
        "at the regular position on the given path",
        "",
        "if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)",
        "uvs are generated in a separate function.",
        "this makes it easy compute correct values for closed geometries",
        "finally create faces",
        "we use getPointAt to sample evenly distributed points from the given path",
        "retrieve corresponding normal and binormal",
        "generate normals and vertices for the current segment",
        "normal",
        "vertex",
        "faces",
        "This only works for built-in curves (e.g. CatmullRomCurve3).",
        "User defined curves or instances of CurvePath will not be deserialized.",
        "buffer",
        "helper variables",
        "indexed BufferGeometry",
        "create a data structure that contains all edges without duplicates",
        "non-indexed BufferGeometry",
        "three edges per triangle, an edge is represented as (index1, index2)",
        "e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)",
        "build geometry",
        "coincident edge",
        "#__PURE__",
        "diffuse",
        "diffuse",
        "diffuse",
        "diffuse",
        "converts an array to a specific type",
        "let 'undefined' and 'null' pass",
        "create typed array",
        "create Array",
        "returns an array by which times and values can be sorted",
        "uses the array previously returned by 'getKeyframeOrder' to sort data",
        "function for parsing AOS keyframe formats",
        "no data",
        "no data",
        "push all elements",
        "...assume THREE.Math-ish",
        "otherwise push as-is",
        "find minimum .times value across all tracks in the trimmed clip",
        "shift all tracks such that clip begins at t=0",
        "Make each track's values relative to the values at the reference frame",
        "Skip this track if it's non-numeric",
        "Find the track in the target clip whose name and type matches the reference track",
        "Find the value to subtract out of the track",
        "Reference frame is earlier than the first keyframe, so just use the first keyframe",
        "Reference frame is after the last keyframe, so just use the last keyframe",
        "Interpolate to the reference value",
        "Conjugate the quaternion",
        "Subtract the reference value from all of the track values",
        "Multiply the conjugate for quaternion track types",
        "Subtract each value for all other numeric track types",
        "- See http://jsperf.com/comparison-to-undefined/3",
        "- slower code:",
        "-",
        "- \t\t\t\tif ( t >= t1 || t1 === undefined ) {",
        "after end",
        "this loop",
        "prepare binary search on the right side of the index",
        "- slower code:",
        "-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {",
        "looping?",
        "+ 1, using the scan for the details",
        "linear reverse scan",
        "before start",
        "this loop",
        "prepare binary search on the left side of the index",
        "linear scan",
        "binary search",
        "check boundary cases, again",
        "seek",
        "validate_interval",
        "copies a sample value to the result buffer",
        "Template methods for derived classes:",
        "implementations shall return this.resultBuffer",
        "empty",
        "f'(t0) = 0",
        "use the other end of the curve",
        "f''(t0) = 0 a.k.a. Natural Spline",
        "f'(tN) = 0",
        "use the other end of the curve",
        "f''(tN) = 0, a.k.a. Natural Spline",
        "evaluate polynomials",
        "combine data linearly",
        ", t0, t, t1",
        "Serialization (in static context, because of constructor invocation",
        "and automatic invocation of .toJSON):",
        "derived classes can define a static toJSON method",
        "by default, we assume the data can be serialized as-is",
        "mandatory",
        "fall back to default, unless the default itself is messed up",
        "fatal, in this case",
        "move all keyframes either forwards or backwards in time",
        "scale all keyframe times by a factor (useful for frame <-> seconds conversions)",
        "removes keyframes before and after animation without changing any values within the range [startTime, endTime].",
        "IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values",
        "inclusive -> exclusive bound",
        "empty tracks are forbidden, so keep at least one keyframe",
        "ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable",
        "removes equivalent sequential keys as common in morph target sequences",
        "(0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)",
        "times or values may be shared with other tracks, so overwriting is unsafe",
        "remove adjacent keyframes scheduled at the same time",
        "remove unnecessary keyframes same as their neighbors",
        "in-place compaction",
        "flush last keyframe (compaction looks ahead)",
        "Interpolant argument to constructor is not saved, so copy the factory method directly.",
        "No interpolation parameter because only InterpolateDiscrete is valid.",
        "ValueBufferType is inherited",
        "DefaultInterpolation is inherited;",
        "No interpolation parameter because only InterpolateDiscrete is valid.",
        "this means it should figure out its duration by scanning the tracks",
        "if there is a key at the first frame, duplicate it as the",
        "last frame as well for perfect loop.",
        "tested with https://regex101.com/ on trick sequences",
        "such flamingo_flyA_003, flamingo_run1_003, crdeath0059",
        "sort morph target names into animation groups based",
        "patterns like Walk_001, Walk_002, Run_001, Run_002",
        "parse the animation.hierarchy format",
        "only return track if there are actually keys.",
        "empty keys are filtered out, so check again",
        "automatic length determination in AnimationClip.",
        "skip empty tracks",
        "process morph targets",
        "figure out all morph targets used in this track",
        "create a track for each morph target with all zero",
        "morphTargetInfluences except for the keys in which",
        "the morphTarget is named.",
        "...assume skeletal animation",
        "derived classes can define a static parse method",
        "by default, we assume a constructor compatible with the base",
        "console.log( 'THREE.Cache', 'Adding key:', key );",
        "console.log( 'THREE.Cache', 'Checking key:', key );",
        "Refer to #5689 for the reason why we don't set .onStart",
        "in the constructor",
        "see #17920",
        "@__PURE__",
        "Check if request is duplicate",
        "Initialise array for duplicate requests",
        "create request",
        "record states ( avoid data race )",
        "start the fetch",
        "Some browsers return HTTP Status 0 when using non-http protocol",
        "e.g. 'file://' or 'data://'. Handle as success.",
        "Workaround: Checking if response.body === undefined for Alipay browser #23548",
        "Nginx needs X-File-Size check",
        "https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content",
        "periodically read data into the new stream tracking while download progress",
        "sniff encoding",
        "Add to cache only on HTTP success, so that we do not cache",
        "error response bodies as proper responses to requests.",
        "Abort errors and other errors are handled the same",
        "When onLoad was called and url was deleted in `loading`",
        "compressed cubemap texture stored in a single DDS file",
        "presumably...",
        "Empty here in base class; some subclasses override.",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "compute the light's luminous power (in lumens) from its intensity (in candela)",
        "by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)",
        "set the light's intensity (in candela) from the desired luminous power (in lumens)",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "These viewports map a cube-map onto a 2D texture with the",
        "following orientation:",
        "",
        "xzXZ",
        "y Y",
        "",
        "X - Positive x direction",
        "x - Negative x direction",
        "Y - Positive y direction",
        "y - Negative y direction",
        "Z - Positive z direction",
        "z - Negative z direction",
        "positive X",
        "negative X",
        "positive Z",
        "negative Z",
        "positive Y",
        "negative Y",
        "compute the light's luminous power (in lumens) from its intensity (in candela)",
        "for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)",
        "set the light's intensity (in candela) from the desired luminous power (in lumens)",
        "compute the light's luminous power (in lumens) from its intensity (in nits)",
        "set the light's intensity (in nits) from the desired luminous power (in lumens)",
        "3-band SH defined by 9 coefficients",
        "get the radiance in the direction of the normal",
        "target is a Vector3",
        "normal is assumed to be unit length",
        "band 0",
        "band 1",
        "band 2",
        "get the irradiance (radiance convolved with cosine lobe) in the direction of the normal",
        "target is a Vector3",
        "https://graphics.stanford.edu/papers/envmap/envmap.pdf",
        "normal is assumed to be unit length",
        "band 0",
        "π * 0.282095",
        "band 1",
        "( 2 * π / 3 ) * 0.488603",
        "band 2",
        "( π / 4 ) * 1.092548",
        "( π / 4 ) * 0.315392 * 3",
        "( π / 4 ) * 0.546274",
        "evaluate the basis functions",
        "shBasis is an Array[ 9 ]",
        "normal is assumed to be unit length",
        "band 0",
        "band 1",
        "band 2",
        "TODO: Move this bit to Light.fromJSON();",
        "Shader Material",
        "for PointsMaterial",
        "maps",
        "Blender exporter used to export a scalar. See #7459",
        "Avoid the String.fromCharCode.apply(null, array) shortcut, which",
        "throws a \"maximum call stack size exceeded\" error for large arrays.",
        "Implicitly assumes little-endian.",
        "merges multi-byte utf-8 characters.",
        "Invalid URL",
        "Host Relative URL",
        "Absolute URL http://,https://,//",
        "Data URI",
        "Blob URL",
        "Relative URL",
        "",
        "generate bone lookup table",
        "create skeletons",
        "MultiMaterial",
        "load array of images e.g CubeTexture",
        "special case: handle array of data textures for cube textures",
        "load single image",
        "load array of images e.g CubeTexture",
        "special case: handle array of data textures for cube textures",
        "load single image",
        "textures can have undefined image data",
        "If cached is a promise, wait for it to resolve",
        "If cached is not a promise (i.e., it's already an imageBitmap)",
        "Create a copy of the buffer. The `decodeAudioData` method",
        "detaches the buffer when complete, preventing reuse.",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "Off-axis stereoscopic effect based on",
        "http://paulbourke.net/stereographics/stereorender/",
        "translate xOffset",
        "for left eye",
        "for right eye",
        "see #10732",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "private",
        "code path for Chrome (see #14393)",
        "update current progress",
        "ensure _progress does not exceed duration with looped audios",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "code path for Chrome and Firefox (see #14393)",
        "buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]",
        "",
        "interpolators can use .buffer as their .result",
        "the data then goes to 'incoming'",
        "",
        "'accu0' and 'accu1' are used frame-interleaved for",
        "the cumulative result and are compared to detect",
        "changes",
        "",
        "'orig' stores the original state of the property",
        "",
        "'add' is used for additive cumulative results",
        "",
        "'work' is optional and is only present for quaternion types. It is used",
        "to store intermediate quaternion multiplication results",
        "Use the regular mix function and for additive on these types,",
        "additive is not relevant for non-numeric types",
        "accumulate data in the 'incoming' region into 'accu<i>'",
        "note: happily accumulating nothing when weight = 0, the caller knows",
        "the weight and shouldn't have made the call in the first place",
        "accuN := incoming * weight",
        "accuN := accuN + incoming * weight",
        "accumulate data in the 'incoming' region into 'add'",
        "add = identity",
        "add := add + incoming * weight",
        "apply the state of 'accu<i>' to the binding when accus differ",
        "accuN := accuN + original * ( 1 - cumulativeWeight )",
        "accuN := accuN + additive accuN",
        "value has changed -> update scene graph",
        "remember the state of the bound property and copy it to both accus",
        "accu[0..1] := orig -- initially detect changes against the original",
        "Add to identity for additive",
        "apply the state previously taken via 'saveOriginalState' to the binding",
        "mix functions",
        "Store result in intermediate buffer offset",
        "Slerp to the intermediate result",
        "Characters [].:/ are reserved for track binding syntax.",
        "Attempts to allow node names from any language. ES5's `\\w` regexp matches",
        "only latin characters, and the unicode \\p{L} is not yet supported. So",
        "instead, we exclude reserved characters and match everything else.",
        "Parent directories, delimited by '/' or ':'. Currently unused, but must",
        "be matched to parse the rest of the track name.",
        "@__PURE__",
        "Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.",
        "@__PURE__",
        "Object on target node, and accessor. May not contain reserved",
        "characters. Accessor may contain any character except closing bracket.",
        "@__PURE__",
        "Property and accessor. May not contain reserved characters. Accessor may",
        "contain any non-bracket characters.",
        "@__PURE__",
        "bind all binding",
        "and only call .getValue on the first",
        "Note: This class uses a State pattern on a per-method basis:",
        "'bind' sets 'this.getValue' / 'setValue' and shadows the",
        "prototype version of these methods with one that represents",
        "the bound state. When the property is not found, the methods",
        "become no-ops.",
        "initial state of these methods that calls 'bind'",
        "directoryName: matches[ 1 ], // (tschw) currently unused",
        "Object names must be checked against an allowlist. Otherwise, there",
        "is no way to parse 'foo.bar.baz': 'baz' must be a property, but",
        "'bar' could be the objectName, or part of a nodeName (which can",
        "include '.' characters).",
        "search into skeleton bones.",
        "search into node subtree.",
        "these are used to \"bind\" a nonexistent property",
        "Getters",
        "Direct",
        "EntireArray",
        "ArrayElement",
        "HasToFromArray",
        "create getter / setter pair for a property in the scene graph",
        "set fail state so we can just 'return' on error",
        "ensure there is a value node",
        "special cases were we need to reach deeper into the hierarchy to get the face materials....",
        "potential future optimization: skip this if propertyIndex is already an integer",
        "and convert the integer string to a true integer.",
        "support resolving morphTarget names into indices.",
        "resolve property",
        "determine versioning scheme",
        "determine how the property gets bound",
        "access a sub element of the property array (only primitives are supported right now)",
        "potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.",
        "support resolving morphTarget names into indices.",
        "must use copy for Object3D.Euler/Quaternion",
        "select getter / setter",
        "back to the prototype version of getValue / setValue",
        "note: avoiding to mutate the shape of 'this' via 'delete'",
        "Direct",
        "EntireArray",
        "ArrayElement",
        "HasToFromArray",
        "cached objects followed by the active ones",
        "threshold",
        "note: read by PropertyBinding.Composite",
        "for bookkeeping",
        "inside: string",
        "inside: { we don't care, here }",
        "inside: Array< PropertyBinding >",
        "inside: indices in these arrays",
        "unknown object -> add it to the ACTIVE region",
        "accounting is done, now do the same for all bindings",
        "move existing object to the ACTIVE region",
        "accounting is done, now do the same for all bindings",
        "since we do not bother to create new bindings",
        "for objects that are cached, the binding may",
        "or may not exist",
        "else the object is already where we want it to be",
        "for arguments",
        "move existing object into the CACHED region",
        "accounting is done, now do the same for all bindings",
        "for arguments",
        "remove & forget",
        "object is cached, shrink the CACHED region",
        "last cached object takes this object's place",
        "last object goes to the activated slot and pop",
        "accounting is done, now do the same for all bindings",
        "object is active, just swap with the last and pop",
        "accounting is done, now do the same for all bindings",
        "cached or active",
        "if object is known",
        "for arguments",
        "Internal interface used by befriended PropertyBinding.Composite:",
        "returns an array of bindings for the given path that is changed",
        "according to the contained objects in the group",
        "tells the group to forget about a property path and no longer",
        "update the array previously obtained with 'subscribe_'",
        "bound by the mixer",
        "inside: PropertyMixer (managed by the mixer)",
        "for the memory manager",
        "for the memory manager",
        "global mixer time when the action is to be started",
        "it's set back to 'null' upon start of the action",
        "scaled local time of the action",
        "gets clamped or wrapped to 0..clip.duration according to loop",
        "no. of repetitions when looping",
        "true -> zero effective time scale",
        "false -> zero effective weight",
        "keep feeding the last frame?",
        "for smooth interpolation w/o separate",
        "clips for start, loop and end",
        "State & Scheduling",
        "restart clip",
        "forget previous loops",
        "forget scheduling",
        "return true when play has been called",
        "Weight",
        "set the weight stopping any scheduled fading",
        "although .enabled = false yields an effective weight of zero, this",
        "method does *not* change .enabled, because it would be confusing",
        "note: same logic as when updated at runtime",
        "return the weight considering fading and .enabled",
        "Time Scale Control",
        "set the time scale stopping any scheduled warping",
        "although .paused = true yields an effective time scale of zero, this",
        "method does *not* change .paused, because it would be confusing",
        "return the time scale considering warping and .paused",
        "Object Accessors",
        "Interna",
        "called by the mixer",
        "call ._updateWeight() to update ._effectiveWeight",
        "check for scheduled start of action",
        "unschedule",
        "apply time scale and advance time",
        "note: _updateTime may disable the action resulting in",
        "an effective weight of 0",
        "faded out, disable",
        "motion has halted, pause",
        "warp done - apply final time scale",
        "just started",
        "just started",
        "when looping in reverse direction, the initial",
        "transition through zero counts as a repetition,",
        "so leave loopCount at -1",
        "wrap around",
        "signed",
        "have to stop (switch state, clamp time, fire event)",
        "keep running",
        "entering the last round",
        "invert time for the \"pong round\"",
        "assuming for LoopOnce atStart == atEnd == true",
        "existing binding, make sure the cache knows",
        "this action has been forgotten by the cache, but the user",
        "appears to be still using it -> rebind",
        "increment reference counts / sort out state",
        "decrement reference counts / sort out state",
        "Memory manager",
        "'nActiveActions' followed by inactive ones",
        "inside:",
        "{",
        "knownActions: Array< AnimationAction > - used as prototypes",
        "actionByRoot: AnimationAction - lookup",
        "}",
        "'nActiveBindings' followed by inactive ones",
        "inside: Map< name, PropertyMixer >",
        "same game as above",
        "Memory management for AnimationAction objects",
        "[ active actions |  inactive actions  ]",
        "[  active actions >| inactive actions ]",
        "s        a",
        "<-swap->",
        "a        s",
        "[  active actions  | inactive actions ]",
        "[ active actions |< inactive actions  ]",
        "a        s",
        "<-swap->",
        "s        a",
        "Memory management for PropertyMixer objects",
        "Memory management of Interpolants for weight and time scale",
        "return an action for a clip optionally using a custom root target",
        "object (this method allocates a lot of dynamic memory in case a",
        "previously unknown clip/root combination is specified)",
        "we know the clip, so we don't have to parse all",
        "the bindings again but can just copy",
        "also, take the clip from the prototype action",
        "clip must be known when specified via string",
        "allocate all resources required to run it",
        "and make the action known to the memory manager",
        "get an existing action",
        "deactivates all previously scheduled actions",
        "advance the time and update apply the animation",
        "run active actions",
        "update scene graph",
        "Allows you to seek to a specific time in an animation.",
        "Zero out time attribute for AnimationMixer object;",
        "Zero out time attribute for all associated AnimationAction objects.",
        "Update used to set exact time. Returns \"this\" AnimationMixer object.",
        "return this mixer's root target object",
        "free all resources specific to a particular clip",
        "note: just calling _removeInactiveAction would mess up the",
        "iteration state and also require updating the state we can",
        "just throw away",
        "free all resources specific to a particular root target object",
        "remove a targeted clip from the cache",
        "@__PURE__",
        "direction is assumed to be normalized (for accurate distance calculations)",
        "direction is assumed to be normalized (for accurate distance calculations)",
        "set origin in plane of camera",
        "polar angle",
        "azimuthal angle",
        "restrict phi to be between EPS and PI-EPS",
        "distance from the origin to a point in the x-z plane",
        "counterclockwise angle in the x-z plane measured in radians from the positive z-axis",
        "height above the x-z plane",
        "@__PURE__",
        "this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes",
        "This can potentially have a divide by zero if the box",
        "has a size dimension of 0.",
        "using 4 splitting planes to rule out intersections",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "update the local matrix based on the parent and light target transforms",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );",
        "const d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "create the sectors",
        "create the rings",
        "first vertex",
        "second vertex",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "@__PURE__",
        "near",
        "far",
        "sides",
        "cone",
        "up",
        "target",
        "cross",
        "colors",
        "near",
        "n1, n2",
        "n2, n4",
        "n4, n3",
        "n3, n1",
        "far",
        "f1, f2",
        "f2, f4",
        "f4, f3",
        "f3, f1",
        "sides",
        "n1, f1",
        "n2, f2",
        "n3, f3",
        "n4, f4",
        "cone",
        "p, n1",
        "p, n2",
        "p, n3",
        "p, n4",
        "up",
        "u1, u2",
        "u2, u3",
        "u3, u1",
        "target",
        "c, t",
        "p, c",
        "cross",
        "cn1, cn2",
        "cn3, cn4",
        "cf1, cf2",
        "cf3, cf4",
        "we need just camera projection matrix inverse",
        "world matrix must be identity",
        "center / target",
        "near",
        "far",
        "up",
        "cross",
        "@__PURE__",
        "5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z",
        "@__PURE__",
        "dir is assumed to be normalized",
        "dir is assumed to be normalized",
        "see #17458",
        "inPt on polygon contour => immediate success    or",
        "toggling of inside/outside at every single! intersection point of an edge",
        "with the horizontal line through inPt, left of inPt",
        "not counting lowerY endpoints of edges and whole edges on that line",
        "not parallel",
        "inPt is on contour ?",
        "continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!",
        "inPt is on contour ?",
        "true intersection left of inPt",
        "parallel or collinear",
        "parallel",
        "edge lies on the same horizontal line as inPt",
        "inPt: Point on contour !",
        "continue;",
        "console.log(\"Holes first\", holesFirst);",
        "console.log('cw', i);",
        "only Holes? -> probably all Shapes with wrong orientation",
        "console.log(\"shape\", shapes);",
        "OrbitControls performs orbiting, dollying (zooming), and panning.",
        "Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).",
        "",
        "Orbit - left mouse / touch: one-finger move",
        "Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish",
        "Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move",
        "disable touch scroll",
        "Set to false to disable this control",
        "\"target\" sets the location of focus, where the object orbits around",
        "Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect",
        "How far you can dolly in and out ( PerspectiveCamera only )",
        "How far you can zoom in and out ( OrthographicCamera only )",
        "Limit camera target within a spherical area around the cursor",
        "How far you can orbit vertically, upper and lower limits.",
        "Range is 0 to Math.PI radians.",
        "radians",
        "radians",
        "How far you can orbit horizontally, upper and lower limits.",
        "If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )",
        "radians",
        "radians",
        "Set to true to enable damping (inertia)",
        "If damping is enabled, you must call controls.update() in your animation loop",
        "This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.",
        "Set to false to disable zooming",
        "Set to false to disable rotating",
        "Set to false to disable panning",
        "if false, pan orthogonal to world-space direction camera.up",
        "pixels moved per arrow key push",
        "Set to true to automatically rotate around the target",
        "If auto-rotate is enabled, you must call controls.update() in your animation loop",
        "30 seconds per orbit when fps is 60",
        "The four arrow keys",
        "Mouse buttons",
        "Touch fingers",
        "for reset",
        "the target DOM element for key events",
        "",
        "public methods",
        "",
        "this method is exposed, but perhaps it would be better if we can make it private...",
        "so camera.up is the orbit axis",
        "rotate offset to \"y-axis-is-up\" space",
        "angle from z-axis around y-axis",
        "restrict theta to be between desired limits",
        "restrict phi to be between desired limits",
        "move target to panned location",
        "Limit the target distance from the cursor to create a sphere around the center of interest",
        "adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera",
        "we adjust zoom later in these cases",
        "rotate offset back to \"camera-up-vector-is-up\" space",
        "adjust camera position",
        "move the camera down the pointer ray",
        "this method avoids floating point error",
        "adjust the ortho camera position based on zoom changes",
        "handle the placement of the target",
        "position the orbit target in front of the new camera position",
        "get the ray and translation plane to compute target",
        "if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid",
        "extremely large values",
        "update condition is:",
        "min(camera displacement, camera rotation in radians)^2 > EPS",
        "using small-angle approximation cos(x/2) = 1 - x^2 / 8",
        "offscreen canvas compatibility",
        "scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?",
        "",
        "internals",
        "",
        "current position in spherical coordinates",
        "get X column of objectMatrix",
        "deltaX and deltaY are in pixels; right and down are positive",
        "perspective",
        "half of the fov is center to top of screen",
        "we use only clientHeight here so aspect ratio does not distort speed",
        "orthographic",
        "camera neither orthographic nor perspective",
        "",
        "event callbacks - update the object state",
        "",
        "yes, height",
        "prevent the browser from scrolling on cursor keys",
        "yes, height",
        "",
        "event handlers - FSM: listen for events and reset state",
        "",
        "",
        "",
        "minimal placeholder event - allows state correction on pointer-up",
        "minimal wheel event altered to meet delta-zoom demand",
        "detect if event was triggered by pinching",
        "offscreen canvas compatibility",
        "offscreen canvas compatibility",
        "",
        "offscreen canvas compatibility",
        "force an update at start",
        "The first two stack frames will be this function and getBundleURLCached.",
        "Use the 3rd one, which will be a runtime in the original bundle.",
        "TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.",
        "# sourceMappingURL=index.e82f28a0.js.map"
    ],
    "docstrings": [
        "* @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT",
        "* https://github.com/mrdoob/eventdispatcher.js/",
        "* Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm",
        "* Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.",
        "* Uniform Utilities",
        "* Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.",
        "* Calculates the focal length from the current .fov and .filmGauge.",
        "* Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.",
        "* Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Copies the result into the target Vector2, where x is width and y is height.",
        "* Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.",
        "* Uniforms library for shared webgl shaders",
        "* This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view",
        "* Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).",
        "* Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported equirectangular image size is 64 x 32.",
        "* Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported cube size is 16 x 16.",
        "* Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.",
        "* Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.",
        "* Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.",
        "* This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.",
        "* Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *",
        "* Given the width, height, format, and type of a texture. Determines how many\n * bytes must be used to represent the texture.",
        "* Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765",
        "* Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}",
        "* Callback for custom error reporting.\n\t\t\t * @type {?Function}",
        "* Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n *",
        "* Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5",
        "* Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.",
        "* Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve",
        "************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n *************************************************************",
        "* Port from https://github.com/mapbox/earcut (v2.2.4)",
        "* Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }",
        "* Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *",
        "* Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.",
        "*\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.",
        "* A Track of Boolean keyframe values.",
        "* A Track of keyframe values that represent color.",
        "* A Track of numeric keyframe values.",
        "* Spherical linear unit quaternion interpolant.",
        "* A Track of quaternion keyframe values.",
        "* A Track that interpolates Strings",
        "* A Track of vectored keyframe values.",
        "* Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().",
        "* Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().",
        "* Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf",
        "* Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}",
        "*\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.",
        "* Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\n * theta (the azimuthal angle) is measured from the positive z-axis.",
        "* Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system",
        "*\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html"
    ],
    "functions": [
        "newRequire",
        "localRequire",
        "resolve",
        "Module",
        "Module",
        "getHostname",
        "getPort",
        "removeErrorOverlay",
        "createErrorOverlay",
        "fullReload",
        "getParents",
        "updateLink",
        "reloadCSS",
        "hmrDownload",
        "hmrApplyUpdates",
        "hmrApply",
        "hmrDelete",
        "hmrAcceptCheck",
        "hmrAcceptCheckOne",
        "hmrDispose",
        "hmrAccept",
        "createPlanet",
        "animate",
        "addEventListener",
        "hasEventListener",
        "removeEventListener",
        "dispatchEvent",
        "generateUUID",
        "clamp",
        "euclideanModulo",
        "mapLinear",
        "inverseLerp",
        "lerp",
        "damp",
        "pingpong",
        "smoothstep",
        "smootherstep",
        "randInt",
        "randFloat",
        "randFloatSpread",
        "seededRandom",
        "degToRad",
        "radToDeg",
        "isPowerOfTwo",
        "ceilPowerOfTwo",
        "floorPowerOfTwo",
        "setQuaternionFromProperEuler",
        "denormalize",
        "normalize",
        "width",
        "width",
        "height",
        "height",
        "setScalar",
        "setX",
        "setY",
        "setComponent",
        "getComponent",
        "clone",
        "copy",
        "add",
        "addScalar",
        "addVectors",
        "addScaledVector",
        "sub",
        "subScalar",
        "subVectors",
        "multiply",
        "multiplyScalar",
        "divide",
        "divideScalar",
        "applyMatrix3",
        "min",
        "max",
        "clamp",
        "clampScalar",
        "clampLength",
        "floor",
        "ceil",
        "round",
        "roundToZero",
        "negate",
        "dot",
        "cross",
        "lengthSq",
        "length",
        "manhattanLength",
        "normalize",
        "angle",
        "angleTo",
        "distanceTo",
        "distanceToSquared",
        "manhattanDistanceTo",
        "setLength",
        "lerp",
        "lerpVectors",
        "equals",
        "fromArray",
        "toArray",
        "fromBufferAttribute",
        "rotateAround",
        "random",
        "identity",
        "copy",
        "extractBasis",
        "setFromMatrix4",
        "multiply",
        "premultiply",
        "multiplyMatrices",
        "multiplyScalar",
        "determinant",
        "invert",
        "transpose",
        "getNormalMatrix",
        "transposeIntoArray",
        "setUvTransform",
        "scale",
        "rotate",
        "translate",
        "makeTranslation",
        "makeRotation",
        "makeScale",
        "equals",
        "fromArray",
        "toArray",
        "clone",
        "arrayNeedsUint32",
        "getTypedArray",
        "createElementNS",
        "createCanvasElement",
        "warnOnce",
        "probeAsync",
        "probe",
        "workingColorSpace",
        "workingColorSpace",
        "SRGBToLinear",
        "LinearToSRGB",
        "getDataURL",
        "sRGBToLinear",
        "needsUpdate",
        "toJSON",
        "serializeImage",
        "image",
        "image",
        "updateMatrix",
        "clone",
        "copy",
        "toJSON",
        "dispose",
        "transformUv",
        "needsUpdate",
        "needsPMREMUpdate",
        "width",
        "width",
        "height",
        "height",
        "setScalar",
        "setX",
        "setY",
        "setZ",
        "setW",
        "setComponent",
        "getComponent",
        "clone",
        "copy",
        "add",
        "addScalar",
        "addVectors",
        "addScaledVector",
        "sub",
        "subScalar",
        "subVectors",
        "multiply",
        "multiplyScalar",
        "applyMatrix4",
        "divideScalar",
        "setAxisAngleFromQuaternion",
        "setAxisAngleFromRotationMatrix",
        "setFromMatrixPosition",
        "min",
        "max",
        "clamp",
        "clampScalar",
        "clampLength",
        "floor",
        "ceil",
        "round",
        "roundToZero",
        "negate",
        "dot",
        "lengthSq",
        "length",
        "manhattanLength",
        "normalize",
        "setLength",
        "lerp",
        "lerpVectors",
        "equals",
        "fromArray",
        "toArray",
        "fromBufferAttribute",
        "random",
        "texture",
        "texture",
        "setSize",
        "clone",
        "copy",
        "dispose",
        "addLayerUpdate",
        "clearLayerUpdates",
        "slerpFlat",
        "multiplyQuaternionsFlat",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "w",
        "w",
        "clone",
        "copy",
        "setFromEuler",
        "setFromAxisAngle",
        "setFromRotationMatrix",
        "setFromUnitVectors",
        "angleTo",
        "rotateTowards",
        "identity",
        "invert",
        "conjugate",
        "dot",
        "lengthSq",
        "length",
        "normalize",
        "multiply",
        "premultiply",
        "multiplyQuaternions",
        "slerp",
        "slerpQuaternions",
        "random",
        "equals",
        "fromArray",
        "toArray",
        "fromBufferAttribute",
        "toJSON",
        "_onChange",
        "_onChangeCallback",
        "setScalar",
        "setX",
        "setY",
        "setZ",
        "setComponent",
        "getComponent",
        "clone",
        "copy",
        "add",
        "addScalar",
        "addVectors",
        "addScaledVector",
        "sub",
        "subScalar",
        "subVectors",
        "multiply",
        "multiplyScalar",
        "multiplyVectors",
        "applyEuler",
        "applyAxisAngle",
        "applyMatrix3",
        "applyNormalMatrix",
        "applyMatrix4",
        "applyQuaternion",
        "project",
        "unproject",
        "transformDirection",
        "divide",
        "divideScalar",
        "min",
        "max",
        "clamp",
        "clampScalar",
        "clampLength",
        "floor",
        "ceil",
        "round",
        "roundToZero",
        "negate",
        "dot",
        "lengthSq",
        "length",
        "manhattanLength",
        "normalize",
        "setLength",
        "lerp",
        "lerpVectors",
        "cross",
        "crossVectors",
        "projectOnVector",
        "projectOnPlane",
        "reflect",
        "angleTo",
        "distanceTo",
        "distanceToSquared",
        "manhattanDistanceTo",
        "setFromSpherical",
        "setFromSphericalCoords",
        "setFromCylindrical",
        "setFromCylindricalCoords",
        "setFromMatrixPosition",
        "setFromMatrixScale",
        "setFromMatrixColumn",
        "setFromMatrix3Column",
        "setFromEuler",
        "setFromColor",
        "equals",
        "fromArray",
        "toArray",
        "fromBufferAttribute",
        "random",
        "randomDirection",
        "setFromArray",
        "setFromBufferAttribute",
        "setFromPoints",
        "setFromCenterAndSize",
        "setFromObject",
        "clone",
        "copy",
        "makeEmpty",
        "isEmpty",
        "getCenter",
        "getSize",
        "expandByPoint",
        "expandByVector",
        "expandByScalar",
        "expandByObject",
        "containsPoint",
        "containsBox",
        "getParameter",
        "intersectsBox",
        "intersectsSphere",
        "intersectsPlane",
        "intersectsTriangle",
        "clampPoint",
        "distanceToPoint",
        "getBoundingSphere",
        "intersect",
        "union",
        "applyMatrix4",
        "translate",
        "equals",
        "satForAxes",
        "setFromPoints",
        "copy",
        "isEmpty",
        "makeEmpty",
        "containsPoint",
        "distanceToPoint",
        "intersectsSphere",
        "intersectsBox",
        "intersectsPlane",
        "clampPoint",
        "getBoundingBox",
        "applyMatrix4",
        "translate",
        "expandByPoint",
        "union",
        "equals",
        "clone",
        "copy",
        "at",
        "lookAt",
        "recast",
        "closestPointToPoint",
        "distanceToPoint",
        "distanceSqToPoint",
        "distanceSqToSegment",
        "intersectSphere",
        "intersectsSphere",
        "distanceToPlane",
        "intersectPlane",
        "intersectsPlane",
        "intersectBox",
        "intersectsBox",
        "intersectTriangle",
        "applyMatrix4",
        "equals",
        "clone",
        "identity",
        "clone",
        "copy",
        "copyPosition",
        "setFromMatrix3",
        "extractBasis",
        "makeBasis",
        "extractRotation",
        "makeRotationFromEuler",
        "makeRotationFromQuaternion",
        "lookAt",
        "multiply",
        "premultiply",
        "multiplyMatrices",
        "multiplyScalar",
        "determinant",
        "transpose",
        "setPosition",
        "invert",
        "scale",
        "getMaxScaleOnAxis",
        "makeTranslation",
        "makeRotationX",
        "makeRotationY",
        "makeRotationZ",
        "makeRotationAxis",
        "makeScale",
        "makeShear",
        "compose",
        "decompose",
        "makePerspective",
        "makeOrthographic",
        "equals",
        "fromArray",
        "toArray",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "order",
        "order",
        "clone",
        "copy",
        "setFromRotationMatrix",
        "setFromQuaternion",
        "setFromVector3",
        "reorder",
        "equals",
        "fromArray",
        "toArray",
        "_onChange",
        "_onChangeCallback",
        "enable",
        "enableAll",
        "toggle",
        "disable",
        "disableAll",
        "test",
        "isEnabled",
        "onRotationChange",
        "onQuaternionChange",
        "onBeforeShadow",
        "onAfterShadow",
        "onBeforeRender",
        "onAfterRender",
        "applyMatrix4",
        "applyQuaternion",
        "setRotationFromAxisAngle",
        "setRotationFromEuler",
        "setRotationFromMatrix",
        "setRotationFromQuaternion",
        "rotateOnAxis",
        "rotateOnWorldAxis",
        "rotateX",
        "rotateY",
        "rotateZ",
        "translateOnAxis",
        "translateX",
        "translateY",
        "translateZ",
        "localToWorld",
        "worldToLocal",
        "lookAt",
        "add",
        "remove",
        "removeFromParent",
        "clear",
        "attach",
        "getObjectById",
        "getObjectByName",
        "getObjectByProperty",
        "getObjectsByProperty",
        "getWorldPosition",
        "getWorldQuaternion",
        "getWorldScale",
        "getWorldDirection",
        "raycast",
        "traverse",
        "traverseVisible",
        "traverseAncestors",
        "updateMatrix",
        "updateMatrixWorld",
        "updateWorldMatrix",
        "toJSON",
        "serialize",
        "extractFromCache",
        "clone",
        "copy",
        "getNormal",
        "getBarycoord",
        "containsPoint",
        "getInterpolation",
        "isFrontFacing",
        "setFromPointsAndIndices",
        "setFromAttributeAndIndices",
        "clone",
        "copy",
        "getArea",
        "getMidpoint",
        "getNormal",
        "getPlane",
        "getBarycoord",
        "getInterpolation",
        "containsPoint",
        "isFrontFacing",
        "intersectsBox",
        "closestPointToPoint",
        "equals",
        "hue2rgb",
        "setScalar",
        "setHex",
        "setRGB",
        "setHSL",
        "setStyle",
        "handleAlpha",
        "setColorName",
        "clone",
        "copy",
        "copySRGBToLinear",
        "copyLinearToSRGB",
        "convertSRGBToLinear",
        "convertLinearToSRGB",
        "getHex",
        "getHexString",
        "getHSL",
        "getRGB",
        "getStyle",
        "offsetHSL",
        "add",
        "addColors",
        "addScalar",
        "sub",
        "multiply",
        "multiplyScalar",
        "lerp",
        "lerpColors",
        "lerpHSL",
        "setFromVector3",
        "applyMatrix3",
        "equals",
        "fromArray",
        "toArray",
        "fromBufferAttribute",
        "toJSON",
        "alphaTest",
        "alphaTest",
        "onBeforeCompile",
        "customProgramCacheKey",
        "setValues",
        "toJSON",
        "extractFromCache",
        "clone",
        "copy",
        "dispose",
        "needsUpdate",
        "onBuild",
        "onBeforeRender",
        "copy",
        "_generateTables",
        "toHalfFloat",
        "fromHalfFloat",
        "onUploadCallback",
        "needsUpdate",
        "updateRange",
        "setUsage",
        "addUpdateRange",
        "clearUpdateRanges",
        "copy",
        "copyAt",
        "copyArray",
        "applyMatrix3",
        "applyMatrix4",
        "applyNormalMatrix",
        "transformDirection",
        "getComponent",
        "setComponent",
        "getX",
        "setX",
        "getY",
        "setY",
        "getZ",
        "setZ",
        "getW",
        "setW",
        "setXY",
        "setXYZ",
        "setXYZW",
        "onUpload",
        "clone",
        "toJSON",
        "getX",
        "setX",
        "getY",
        "setY",
        "getZ",
        "setZ",
        "getW",
        "setW",
        "setXY",
        "setXYZ",
        "setXYZW",
        "getIndex",
        "setIndex",
        "getAttribute",
        "setAttribute",
        "deleteAttribute",
        "hasAttribute",
        "addGroup",
        "clearGroups",
        "setDrawRange",
        "applyMatrix4",
        "applyQuaternion",
        "rotateX",
        "rotateY",
        "rotateZ",
        "translate",
        "scale",
        "lookAt",
        "center",
        "setFromPoints",
        "computeBoundingBox",
        "computeBoundingSphere",
        "computeTangents",
        "handleTriangle",
        "handleVertex",
        "computeVertexNormals",
        "normalizeNormals",
        "toNonIndexed",
        "convertBufferAttribute",
        "toJSON",
        "clone",
        "copy",
        "dispose",
        "copy",
        "updateMorphTargets",
        "getVertexPosition",
        "raycast",
        "_computeIntersections",
        "checkIntersection$1",
        "checkGeometryIntersection",
        "buildPlane",
        "copy",
        "fromJSON",
        "cloneUniforms",
        "mergeUniforms",
        "cloneUniformsGroups",
        "getUnlitUniformColorSpace",
        "copy",
        "toJSON",
        "copy",
        "getWorldDirection",
        "updateMatrixWorld",
        "updateWorldMatrix",
        "clone",
        "copy",
        "setFocalLength",
        "getFocalLength",
        "getEffectiveFOV",
        "getFilmWidth",
        "getFilmHeight",
        "getViewBounds",
        "getViewSize",
        "setViewOffset",
        "clearViewOffset",
        "updateProjectionMatrix",
        "toJSON",
        "updateCoordinateSystem",
        "update",
        "images",
        "images",
        "fromEquirectangularTexture",
        "clear",
        "setComponents",
        "setFromNormalAndCoplanarPoint",
        "setFromCoplanarPoints",
        "copy",
        "normalize",
        "negate",
        "distanceToPoint",
        "distanceToSphere",
        "projectPoint",
        "intersectLine",
        "intersectsLine",
        "intersectsBox",
        "intersectsSphere",
        "coplanarPoint",
        "applyMatrix4",
        "translate",
        "equals",
        "clone",
        "copy",
        "setFromProjectionMatrix",
        "intersectsObject",
        "intersectsSprite",
        "intersectsSphere",
        "intersectsBox",
        "containsPoint",
        "clone",
        "WebGLAnimation",
        "onAnimationFrame",
        "WebGLAttributes",
        "createBuffer",
        "updateBuffer",
        "get",
        "remove",
        "update",
        "copy",
        "fromJSON",
        "WebGLBackground",
        "getBackground",
        "render",
        "addToRenderList",
        "setClear",
        "WebGLBindingStates",
        "setup",
        "createVertexArrayObject",
        "bindVertexArrayObject",
        "deleteVertexArrayObject",
        "getBindingState",
        "createBindingState",
        "needsUpdate",
        "saveCache",
        "initAttributes",
        "enableAttribute",
        "enableAttributeAndDivisor",
        "disableUnusedAttributes",
        "vertexAttribPointer",
        "setupVertexAttributes",
        "dispose",
        "releaseStatesOfGeometry",
        "releaseStatesOfProgram",
        "reset",
        "resetDefaultState",
        "WebGLBufferRenderer",
        "setMode",
        "render",
        "renderInstances",
        "renderMultiDraw",
        "renderMultiDrawInstances",
        "WebGLCapabilities",
        "getMaxAnisotropy",
        "textureFormatReadable",
        "textureTypeReadable",
        "getMaxPrecision",
        "WebGLClipping",
        "resetGlobalState",
        "projectPlanes",
        "WebGLCubeMaps",
        "mapTextureMapping",
        "get",
        "onTextureDispose",
        "dispose",
        "copy",
        "setViewOffset",
        "clearViewOffset",
        "updateProjectionMatrix",
        "toJSON",
        "fromScene",
        "fromEquirectangular",
        "fromCubemap",
        "compileCubemapShader",
        "compileEquirectangularShader",
        "dispose",
        "_setSize",
        "_dispose",
        "_cleanup",
        "_fromTexture",
        "_allocateTargets",
        "_compileMaterial",
        "_sceneToCubeUV",
        "_textureToCubeUV",
        "_applyPMREM",
        "_blur",
        "_halfBlur",
        "_createPlanes",
        "_createRenderTarget",
        "_setViewport",
        "_getBlurShader",
        "_getEquirectMaterial",
        "_getCubemapMaterial",
        "_getCommonVertexShader",
        "WebGLCubeUVMaps",
        "get",
        "isCubeTextureComplete",
        "onTextureDispose",
        "dispose",
        "WebGLExtensions",
        "getExtension",
        "WebGLGeometries",
        "onGeometryDispose",
        "get",
        "update",
        "updateWireframeAttribute",
        "getWireframeAttribute",
        "WebGLIndexedBufferRenderer",
        "setMode",
        "setIndex",
        "render",
        "renderInstances",
        "renderMultiDraw",
        "renderMultiDrawInstances",
        "WebGLInfo",
        "update",
        "reset",
        "WebGLMorphtargets",
        "update",
        "disposeTexture",
        "WebGLObjects",
        "update",
        "dispose",
        "onInstancedMeshDispose",
        "copy",
        "toJSON",
        "flatten",
        "arraysEqual",
        "copyArray",
        "allocTexUnits",
        "setValueV1f",
        "setValueV2f",
        "setValueV3f",
        "setValueV4f",
        "setValueM2",
        "setValueM3",
        "setValueM4",
        "setValueV1i",
        "setValueV2i",
        "setValueV3i",
        "setValueV4i",
        "setValueV1ui",
        "setValueV2ui",
        "setValueV3ui",
        "setValueV4ui",
        "setValueT1",
        "setValueT3D1",
        "setValueT6",
        "setValueT2DArray1",
        "getSingularSetter",
        "setValueV1fArray",
        "setValueV2fArray",
        "setValueV3fArray",
        "setValueV4fArray",
        "setValueM2Array",
        "setValueM3Array",
        "setValueM4Array",
        "setValueV1iArray",
        "setValueV2iArray",
        "setValueV3iArray",
        "setValueV4iArray",
        "setValueV1uiArray",
        "setValueV2uiArray",
        "setValueV3uiArray",
        "setValueV4uiArray",
        "setValueT1Array",
        "setValueT3DArray",
        "setValueT6Array",
        "setValueT2DArrayArray",
        "getPureArraySetter",
        "setValue",
        "addUniform",
        "parseUniform",
        "setValue",
        "setOptional",
        "upload",
        "seqWithValue",
        "WebGLShader",
        "handleSource",
        "getEncodingComponents",
        "getShaderErrors",
        "getTexelEncodingFunction",
        "getToneMappingFunction",
        "getLuminanceFunction",
        "generateVertexExtensions",
        "generateDefines",
        "fetchAttributeLocations",
        "filterEmptyLine",
        "replaceLightNums",
        "replaceClippingPlaneNums",
        "resolveIncludes",
        "includeReplacer",
        "unrollLoops",
        "loopReplacer",
        "generatePrecision",
        "generateShadowMapTypeDefine",
        "generateEnvMapTypeDefine",
        "generateEnvMapModeDefine",
        "generateEnvMapBlendingDefine",
        "generateCubeUVSize",
        "WebGLProgram",
        "onFirstUse",
        "update",
        "remove",
        "getVertexShaderID",
        "getFragmentShaderID",
        "dispose",
        "_getShaderCacheForMaterial",
        "_getShaderStage",
        "WebGLPrograms",
        "getChannel",
        "getParameters",
        "getProgramCacheKey",
        "getProgramCacheKeyParameters",
        "getProgramCacheKeyBooleans",
        "getUniforms",
        "acquireProgram",
        "releaseProgram",
        "releaseShaderCache",
        "dispose",
        "WebGLProperties",
        "get",
        "remove",
        "update",
        "dispose",
        "painterSortStable",
        "reversePainterSortStable",
        "WebGLRenderList",
        "init",
        "getNextRenderItem",
        "push",
        "unshift",
        "sort",
        "finish",
        "WebGLRenderLists",
        "get",
        "dispose",
        "UniformsCache",
        "ShadowUniformsCache",
        "shadowCastingAndTexturingLightsFirst",
        "WebGLLights",
        "setup",
        "setupView",
        "WebGLRenderState",
        "init",
        "pushLight",
        "pushShadow",
        "setupLights",
        "setupLightsView",
        "WebGLRenderStates",
        "get",
        "dispose",
        "copy",
        "copy",
        "WebGLShadowMap",
        "VSMPass",
        "getDepthMaterial",
        "renderObject",
        "onMaterialDispose",
        "WebGLState",
        "ColorBuffer",
        "DepthBuffer",
        "StencilBuffer",
        "createTexture",
        "enable",
        "disable",
        "bindFramebuffer",
        "drawBuffers",
        "useProgram",
        "setBlending",
        "setMaterial",
        "setFlipSided",
        "setCullFace",
        "setLineWidth",
        "setPolygonOffset",
        "setScissorTest",
        "activeTexture",
        "bindTexture",
        "unbindTexture",
        "compressedTexImage2D",
        "compressedTexImage3D",
        "texSubImage2D",
        "texSubImage3D",
        "compressedTexSubImage2D",
        "compressedTexSubImage3D",
        "texStorage2D",
        "texStorage3D",
        "texImage2D",
        "texImage3D",
        "scissor",
        "viewport",
        "updateUBOMapping",
        "uniformBlockBinding",
        "reset",
        "contain",
        "cover",
        "fill",
        "getByteLength",
        "getTextureTypeByteLength",
        "WebGLTextures",
        "createCanvas",
        "resizeImage",
        "textureNeedsGenerateMipmaps",
        "generateMipmap",
        "getInternalFormat",
        "getInternalDepthFormat",
        "getMipLevels",
        "onTextureDispose",
        "onRenderTargetDispose",
        "deallocateTexture",
        "deleteTexture",
        "deallocateRenderTarget",
        "resetTextureUnits",
        "allocateTextureUnit",
        "getTextureCacheKey",
        "setTexture2D",
        "setTexture2DArray",
        "setTexture3D",
        "setTextureCube",
        "setTextureParameters",
        "initTexture",
        "uploadTexture",
        "uploadCubeTexture",
        "setupFrameBufferTexture",
        "setupRenderBufferStorage",
        "setupDepthTexture",
        "setupDepthRenderbuffer",
        "rebindTextures",
        "setupRenderTarget",
        "updateRenderTargetMipmap",
        "updateMultisampleRenderTarget",
        "getRenderTargetSamples",
        "useMultisampledRTT",
        "updateVideoTexture",
        "verifyColorSpace",
        "getDimensions",
        "WebGLUtils",
        "convert",
        "getHandSpace",
        "getTargetRaySpace",
        "getGripSpace",
        "dispatchEvent",
        "connect",
        "disconnect",
        "update",
        "_getHandJoint",
        "init",
        "getMesh",
        "reset",
        "getDepthTexture",
        "onSessionEvent",
        "onSessionEnd",
        "onInputSourcesChange",
        "setProjectionFromUnion",
        "updateCamera",
        "updateUserCamera",
        "onAnimationFrame",
        "WebGLMaterials",
        "refreshTransformUniform",
        "refreshFogUniforms",
        "refreshMaterialUniforms",
        "refreshUniformsCommon",
        "refreshUniformsLine",
        "refreshUniformsDash",
        "refreshUniformsPoints",
        "refreshUniformsSprites",
        "refreshUniformsPhong",
        "refreshUniformsToon",
        "refreshUniformsStandard",
        "refreshUniformsPhysical",
        "refreshUniformsMatcap",
        "refreshUniformsDistance",
        "WebGLUniformsGroups",
        "bind",
        "update",
        "createBuffer",
        "allocateBindingPointIndex",
        "updateBufferData",
        "hasUniformChanged",
        "prepareUniformsGroup",
        "getUniformSize",
        "onUniformsGroupsDispose",
        "dispose",
        "getTargetPixelRatio",
        "getContext",
        "initGLContext",
        "onContextLost",
        "onContextRestore",
        "onContextCreationError",
        "onMaterialDispose",
        "deallocateMaterial",
        "releaseMaterialProgramReferences",
        "prepareMaterial",
        "checkMaterialsReady",
        "onAnimationFrame",
        "onXRSessionStart",
        "onXRSessionEnd",
        "projectObject",
        "renderScene",
        "renderTransmissionPass",
        "renderObjects",
        "renderObject",
        "getProgram",
        "getUniformList",
        "updateCommonMaterialProperties",
        "setProgram",
        "markUniformsLightsNeedsUpdate",
        "materialNeedsLights",
        "coordinateSystem",
        "outputColorSpace",
        "outputColorSpace",
        "clone",
        "toJSON",
        "clone",
        "toJSON",
        "copy",
        "toJSON",
        "onUploadCallback",
        "needsUpdate",
        "updateRange",
        "setUsage",
        "addUpdateRange",
        "clearUpdateRanges",
        "copy",
        "copyAt",
        "clone",
        "onUpload",
        "toJSON",
        "count",
        "array",
        "needsUpdate",
        "applyMatrix4",
        "applyNormalMatrix",
        "transformDirection",
        "getComponent",
        "setComponent",
        "setX",
        "setY",
        "setZ",
        "setW",
        "getX",
        "getY",
        "getZ",
        "getW",
        "setXY",
        "setXYZ",
        "setXYZW",
        "clone",
        "toJSON",
        "copy",
        "raycast",
        "copy",
        "transformVertex",
        "copy",
        "addLevel",
        "getCurrentLevel",
        "getObjectForDistance",
        "raycast",
        "update",
        "toJSON",
        "computeBoundingBox",
        "computeBoundingSphere",
        "copy",
        "raycast",
        "getVertexPosition",
        "bind",
        "pose",
        "normalizeSkinWeights",
        "updateMatrixWorld",
        "applyBoneTransform",
        "init",
        "calculateInverses",
        "pose",
        "update",
        "clone",
        "computeBoneTexture",
        "getBoneByName",
        "dispose",
        "fromJSON",
        "toJSON",
        "copy",
        "toJSON",
        "computeBoundingBox",
        "computeBoundingSphere",
        "copy",
        "getColorAt",
        "getMatrixAt",
        "getMorphAt",
        "raycast",
        "setColorAt",
        "setMatrixAt",
        "setMorphAt",
        "updateMorphTargets",
        "dispose",
        "sortOpaque",
        "sortTransparent",
        "push",
        "reset",
        "copyAttributeData",
        "maxInstanceCount",
        "_initMatricesTexture",
        "_initIndirectTexture",
        "_initColorsTexture",
        "_initializeGeometry",
        "_validateGeometry",
        "setCustomSort",
        "computeBoundingBox",
        "computeBoundingSphere",
        "addInstance",
        "addGeometry",
        "setGeometryAt",
        "getBoundingBoxAt",
        "getBoundingSphereAt",
        "setMatrixAt",
        "getMatrixAt",
        "setColorAt",
        "getColorAt",
        "setVisibleAt",
        "getVisibleAt",
        "raycast",
        "copy",
        "dispose",
        "onBeforeRender",
        "onBeforeShadow",
        "copy",
        "copy",
        "computeLineDistances",
        "raycast",
        "updateMorphTargets",
        "checkIntersection",
        "computeLineDistances",
        "copy",
        "copy",
        "raycast",
        "updateMorphTargets",
        "testPoint",
        "updateVideo",
        "clone",
        "update",
        "addLayerUpdate",
        "clearLayerUpdates",
        "getPoint",
        "getPointAt",
        "getPoints",
        "getSpacedPoints",
        "getLength",
        "getLengths",
        "updateArcLengths",
        "getUtoTmapping",
        "getTangent",
        "getTangentAt",
        "computeFrenetFrames",
        "clone",
        "copy",
        "toJSON",
        "fromJSON",
        "getPoint",
        "copy",
        "toJSON",
        "fromJSON",
        "CubicPoly",
        "init",
        "getPoint",
        "copy",
        "toJSON",
        "fromJSON",
        "CatmullRom",
        "QuadraticBezierP0",
        "QuadraticBezierP1",
        "QuadraticBezierP2",
        "QuadraticBezier",
        "CubicBezierP0",
        "CubicBezierP1",
        "CubicBezierP2",
        "CubicBezierP3",
        "CubicBezier",
        "getPoint",
        "copy",
        "toJSON",
        "fromJSON",
        "getPoint",
        "copy",
        "toJSON",
        "fromJSON",
        "getPoint",
        "getPointAt",
        "getTangent",
        "getTangentAt",
        "copy",
        "toJSON",
        "fromJSON",
        "getPoint",
        "getPointAt",
        "getTangent",
        "getTangentAt",
        "copy",
        "toJSON",
        "fromJSON",
        "getPoint",
        "copy",
        "toJSON",
        "fromJSON",
        "getPoint",
        "copy",
        "toJSON",
        "fromJSON",
        "getPoint",
        "copy",
        "toJSON",
        "fromJSON",
        "add",
        "closePath",
        "getPoint",
        "getLength",
        "updateArcLengths",
        "getCurveLengths",
        "getSpacedPoints",
        "getPoints",
        "copy",
        "toJSON",
        "fromJSON",
        "setFromPoints",
        "moveTo",
        "lineTo",
        "quadraticCurveTo",
        "bezierCurveTo",
        "splineThru",
        "arc",
        "absarc",
        "ellipse",
        "absellipse",
        "copy",
        "toJSON",
        "fromJSON",
        "copy",
        "fromJSON",
        "fromJSON",
        "copy",
        "fromJSON",
        "generateTorso",
        "generateCap",
        "copy",
        "fromJSON",
        "fromJSON",
        "subdivide",
        "subdivideFace",
        "applyRadius",
        "generateUVs",
        "correctSeam",
        "pushVertex",
        "getVertexByIndex",
        "correctUVs",
        "correctUV",
        "azimuth",
        "inclination",
        "copy",
        "fromJSON",
        "fromJSON",
        "copy",
        "getPointsHoles",
        "extractPoints",
        "copy",
        "toJSON",
        "fromJSON",
        "linkedList",
        "filterPoints",
        "earcutLinked",
        "isEar",
        "isEarHashed",
        "cureLocalIntersections",
        "splitEarcut",
        "eliminateHoles",
        "compareX",
        "eliminateHole",
        "findHoleBridge",
        "sectorContainsSector",
        "indexCurve",
        "sortLinked",
        "zOrder",
        "getLeftmost",
        "pointInTriangle",
        "isValidDiagonal",
        "area",
        "equals",
        "intersects",
        "onSegment",
        "sign",
        "intersectsPolygon",
        "locallyInside",
        "middleInside",
        "splitPolygon",
        "insertNode",
        "removeNode",
        "Node",
        "signedArea",
        "area",
        "isClockWise",
        "triangulateShape",
        "removeDupEndPts",
        "addContour",
        "addShape",
        "scalePt2",
        "getBevelVec",
        "buildLidFaces",
        "buildSideFaces",
        "sidewalls",
        "v",
        "f3",
        "f4",
        "addVertex",
        "addUV",
        "copy",
        "toJSON",
        "fromJSON",
        "toJSON$1",
        "fromJSON",
        "fromJSON",
        "copy",
        "fromJSON",
        "addShape",
        "copy",
        "toJSON",
        "fromJSON",
        "toJSON",
        "copy",
        "fromJSON",
        "fromJSON",
        "copy",
        "fromJSON",
        "calculatePositionOnCurve",
        "copy",
        "fromJSON",
        "generateBufferData",
        "generateSegment",
        "generateIndices",
        "generateUVs",
        "copy",
        "toJSON",
        "fromJSON",
        "copy",
        "isUniqueEdge",
        "copy",
        "copy",
        "anisotropy",
        "anisotropy",
        "clearcoat",
        "clearcoat",
        "iridescence",
        "iridescence",
        "dispersion",
        "dispersion",
        "sheen",
        "sheen",
        "transmission",
        "transmission",
        "copy",
        "copy",
        "copy",
        "copy",
        "copy",
        "copy",
        "copy",
        "convertArray",
        "isTypedArray",
        "getKeyframeOrder",
        "compareTime",
        "sortedArray",
        "flattenJSON",
        "subclip",
        "makeClipAdditive",
        "evaluate",
        "getSettings_",
        "copySampleValue_",
        "interpolate_",
        "intervalChanged_",
        "intervalChanged_",
        "interpolate_",
        "interpolate_",
        "interpolate_",
        "toJSON",
        "InterpolantFactoryMethodDiscrete",
        "InterpolantFactoryMethodLinear",
        "InterpolantFactoryMethodSmooth",
        "setInterpolation",
        "getInterpolation",
        "getValueSize",
        "shift",
        "scale",
        "trim",
        "validate",
        "optimize",
        "clone",
        "interpolate_",
        "InterpolantFactoryMethodLinear",
        "parse",
        "toJSON",
        "CreateFromMorphTargetSequence",
        "findByName",
        "CreateClipsFromMorphTargetSequences",
        "parseAnimation",
        "resetDuration",
        "trim",
        "validate",
        "optimize",
        "clone",
        "toJSON",
        "getTrackTypeForValueTypeName",
        "parseKeyframeTrack",
        "load",
        "loadAsync",
        "parse",
        "setCrossOrigin",
        "setWithCredentials",
        "setPath",
        "setResourcePath",
        "setRequestHeader",
        "load",
        "start",
        "readData",
        "setResponseType",
        "setMimeType",
        "load",
        "parse",
        "load",
        "loadTexture",
        "load",
        "onImageLoad",
        "onImageError",
        "removeEventListeners",
        "load",
        "loadTexture",
        "load",
        "load",
        "dispose",
        "copy",
        "toJSON",
        "copy",
        "getViewportCount",
        "getFrustum",
        "updateMatrices",
        "getViewport",
        "getFrameExtents",
        "dispose",
        "copy",
        "clone",
        "toJSON",
        "updateMatrices",
        "copy",
        "power",
        "power",
        "dispose",
        "copy",
        "updateMatrices",
        "power",
        "power",
        "dispose",
        "copy",
        "dispose",
        "copy",
        "power",
        "power",
        "copy",
        "toJSON",
        "zero",
        "getAt",
        "getIrradianceAt",
        "add",
        "addScaledSH",
        "scale",
        "lerp",
        "equals",
        "copy",
        "clone",
        "fromArray",
        "toArray",
        "getBasisAt",
        "copy",
        "fromJSON",
        "toJSON",
        "load",
        "parse",
        "getTexture",
        "setTextures",
        "createMaterialFromType",
        "decodeText",
        "extractUrlBase",
        "resolveURL",
        "copy",
        "toJSON",
        "load",
        "parse",
        "getInterleavedBuffer",
        "getArrayBuffer",
        "load",
        "loadAsync",
        "parse",
        "parseAsync",
        "parseShapes",
        "parseSkeletons",
        "parseGeometries",
        "parseMaterials",
        "parseAnimations",
        "parseImages",
        "loadImage",
        "deserializeImage",
        "parseImagesAsync",
        "deserializeImage",
        "parseTextures",
        "parseConstant",
        "parseObject",
        "getGeometry",
        "getMaterial",
        "getTexture",
        "bindSkeletons",
        "bindLightTargets",
        "setOptions",
        "load",
        "getContext",
        "setContext",
        "load",
        "handleError",
        "update",
        "start",
        "stop",
        "getElapsedTime",
        "getDelta",
        "now",
        "getInput",
        "removeFilter",
        "getFilter",
        "setFilter",
        "getMasterVolume",
        "setMasterVolume",
        "updateMatrixWorld",
        "getOutput",
        "setNodeSource",
        "setMediaElementSource",
        "setMediaStreamSource",
        "setBuffer",
        "play",
        "pause",
        "stop",
        "connect",
        "disconnect",
        "getFilters",
        "setFilters",
        "setDetune",
        "getDetune",
        "getFilter",
        "setFilter",
        "setPlaybackRate",
        "getPlaybackRate",
        "onEnded",
        "getLoop",
        "setLoop",
        "setLoopStart",
        "setLoopEnd",
        "getVolume",
        "setVolume",
        "connect",
        "disconnect",
        "getOutput",
        "getRefDistance",
        "setRefDistance",
        "getRolloffFactor",
        "setRolloffFactor",
        "getDistanceModel",
        "setDistanceModel",
        "getMaxDistance",
        "setMaxDistance",
        "setDirectionalCone",
        "updateMatrixWorld",
        "getFrequencyData",
        "getAverageFrequency",
        "accumulate",
        "accumulateAdditive",
        "apply",
        "saveOriginalState",
        "restoreOriginalState",
        "_setAdditiveIdentityNumeric",
        "_setAdditiveIdentityQuaternion",
        "_setAdditiveIdentityOther",
        "_select",
        "_slerp",
        "_slerpAdditive",
        "_lerp",
        "_lerpAdditive",
        "getValue",
        "setValue",
        "bind",
        "unbind",
        "create",
        "sanitizeNodeName",
        "parseTrackName",
        "findNode",
        "_getValue_unavailable",
        "_setValue_unavailable",
        "_getValue_direct",
        "_getValue_array",
        "_getValue_arrayElement",
        "_getValue_toArray",
        "_setValue_direct",
        "_setValue_direct_setNeedsUpdate",
        "_setValue_direct_setMatrixWorldNeedsUpdate",
        "_setValue_array",
        "_setValue_array_setNeedsUpdate",
        "_setValue_array_setMatrixWorldNeedsUpdate",
        "_setValue_arrayElement",
        "_setValue_arrayElement_setNeedsUpdate",
        "_setValue_arrayElement_setMatrixWorldNeedsUpdate",
        "_setValue_fromArray",
        "_setValue_fromArray_setNeedsUpdate",
        "_setValue_fromArray_setMatrixWorldNeedsUpdate",
        "_getValue_unbound",
        "_setValue_unbound",
        "bind",
        "unbind",
        "total",
        "inUse",
        "bindingsPerObject",
        "add",
        "remove",
        "uncache",
        "subscribe_",
        "unsubscribe_",
        "play",
        "stop",
        "reset",
        "isRunning",
        "isScheduled",
        "startAt",
        "setLoop",
        "setEffectiveWeight",
        "getEffectiveWeight",
        "fadeIn",
        "fadeOut",
        "crossFadeFrom",
        "crossFadeTo",
        "stopFading",
        "setEffectiveTimeScale",
        "getEffectiveTimeScale",
        "setDuration",
        "syncWith",
        "halt",
        "warp",
        "stopWarping",
        "getMixer",
        "getClip",
        "getRoot",
        "_update",
        "_updateWeight",
        "_updateTimeScale",
        "_updateTime",
        "_setEndings",
        "_scheduleFading",
        "_bindAction",
        "_activateAction",
        "_deactivateAction",
        "_initMemoryManager",
        "total",
        "inUse",
        "total",
        "inUse",
        "total",
        "inUse",
        "_isActiveAction",
        "_addInactiveAction",
        "_removeInactiveAction",
        "_removeInactiveBindingsForAction",
        "_lendAction",
        "_takeBackAction",
        "_addInactiveBinding",
        "_removeInactiveBinding",
        "_lendBinding",
        "_takeBackBinding",
        "_lendControlInterpolant",
        "_takeBackControlInterpolant",
        "clipAction",
        "existingAction",
        "stopAllAction",
        "update",
        "setTime",
        "getRoot",
        "uncacheClip",
        "uncacheRoot",
        "uncacheAction",
        "clone",
        "add",
        "remove",
        "setName",
        "setUsage",
        "dispose",
        "copy",
        "clone",
        "copy",
        "clone",
        "toJSON",
        "needsUpdate",
        "setBuffer",
        "setType",
        "setItemSize",
        "setCount",
        "setFromCamera",
        "setFromXRController",
        "intersectObject",
        "intersectObjects",
        "ascSort",
        "intersect",
        "copy",
        "makeSafe",
        "setFromVector3",
        "setFromCartesianCoords",
        "clone",
        "copy",
        "setFromVector3",
        "setFromCartesianCoords",
        "clone",
        "identity",
        "fromArray",
        "setFromPoints",
        "setFromCenterAndSize",
        "clone",
        "copy",
        "makeEmpty",
        "isEmpty",
        "getCenter",
        "getSize",
        "expandByPoint",
        "expandByVector",
        "expandByScalar",
        "containsPoint",
        "containsBox",
        "getParameter",
        "intersectsBox",
        "clampPoint",
        "distanceToPoint",
        "intersect",
        "union",
        "translate",
        "equals",
        "copy",
        "getCenter",
        "delta",
        "distanceSq",
        "distance",
        "at",
        "closestPointToPointParameter",
        "closestPointToPoint",
        "applyMatrix4",
        "equals",
        "clone",
        "dispose",
        "update",
        "updateMatrixWorld",
        "dispose",
        "getBoneList",
        "dispose",
        "update",
        "dispose",
        "update",
        "dispose",
        "dispose",
        "dispose",
        "update",
        "addLine",
        "addPoint",
        "setColors",
        "update",
        "dispose",
        "setPoint",
        "update",
        "setFromObject",
        "copy",
        "dispose",
        "updateMatrixWorld",
        "dispose",
        "updateMatrixWorld",
        "dispose",
        "setDirection",
        "setLength",
        "setColor",
        "copy",
        "dispose",
        "setColors",
        "dispose",
        "moveTo",
        "lineTo",
        "quadraticCurveTo",
        "bezierCurveTo",
        "splineThru",
        "toShapes",
        "toShapesNoHoles",
        "isPointInsidePolygon",
        "texture",
        "getAutoRotationAngle",
        "getZoomScale",
        "rotateLeft",
        "rotateUp",
        "dollyOut",
        "dollyIn",
        "updateZoomParameters",
        "clampDistance",
        "handleMouseDownRotate",
        "handleMouseDownDolly",
        "handleMouseDownPan",
        "handleMouseMoveRotate",
        "handleMouseMoveDolly",
        "handleMouseMovePan",
        "handleMouseWheel",
        "handleKeyDown",
        "handleTouchStartRotate",
        "handleTouchStartPan",
        "handleTouchStartDolly",
        "handleTouchStartDollyPan",
        "handleTouchStartDollyRotate",
        "handleTouchMoveRotate",
        "handleTouchMovePan",
        "handleTouchMoveDolly",
        "handleTouchMoveDollyPan",
        "handleTouchMoveDollyRotate",
        "onPointerDown",
        "onPointerMove",
        "onPointerUp",
        "onMouseDown",
        "onMouseMove",
        "onMouseWheel",
        "customWheelEvent",
        "interceptControlDown",
        "interceptControlUp",
        "onKeyDown",
        "onTouchStart",
        "onTouchMove",
        "onContextMenu",
        "addPointer",
        "removePointer",
        "isTrackingPointer",
        "trackPointer",
        "getSecondPointerPosition",
        "getBundleURLCached",
        "getBundleURL",
        "getBaseURL",
        "getOrigin"
    ],
    "classes": [
        "EventDispatcher",
        "Vector2",
        "Matrix3",
        "ImageUtils",
        "Source",
        "Texture",
        "Vector4",
        "RenderTarget",
        "WebGLRenderTarget",
        "DataArrayTexture",
        "WebGLArrayRenderTarget",
        "Data3DTexture",
        "WebGL3DRenderTarget",
        "Quaternion",
        "Vector3",
        "Box3",
        "Sphere",
        "Ray",
        "Matrix4",
        "Euler",
        "Layers",
        "Object3D",
        "Triangle",
        "Color",
        "Material",
        "MeshBasicMaterial",
        "BufferAttribute",
        "Int8BufferAttribute",
        "Uint8BufferAttribute",
        "Uint8ClampedBufferAttribute",
        "Int16BufferAttribute",
        "Uint16BufferAttribute",
        "Int32BufferAttribute",
        "Uint32BufferAttribute",
        "Float16BufferAttribute",
        "Float32BufferAttribute",
        "BufferGeometry",
        "Mesh",
        "BoxGeometry",
        "ShaderMaterial",
        "Camera",
        "PerspectiveCamera",
        "CubeCamera",
        "CubeTexture",
        "WebGLCubeRenderTarget",
        "Plane",
        "Frustum",
        "PlaneGeometry",
        "OrthographicCamera",
        "PMREMGenerator",
        "DepthTexture",
        "SingleUniform",
        "PureArrayUniform",
        "StructuredUniform",
        "WebGLUniforms",
        "WebGLShaderCache",
        "WebGLShaderStage",
        "MeshDepthMaterial",
        "MeshDistanceMaterial",
        "ArrayCamera",
        "Group",
        "WebXRController",
        "WebXRDepthSensing",
        "WebXRManager",
        "WebGLRenderer",
        "FogExp2",
        "Fog",
        "Scene",
        "InterleavedBuffer",
        "InterleavedBufferAttribute",
        "SpriteMaterial",
        "Sprite",
        "LOD",
        "SkinnedMesh",
        "Bone",
        "DataTexture",
        "Skeleton",
        "InstancedBufferAttribute",
        "InstancedMesh",
        "MultiDrawRenderList",
        "BatchedMesh",
        "LineBasicMaterial",
        "Line",
        "LineSegments",
        "LineLoop",
        "PointsMaterial",
        "Points",
        "VideoTexture",
        "FramebufferTexture",
        "CompressedTexture",
        "CompressedArrayTexture",
        "CompressedCubeTexture",
        "CanvasTexture",
        "Curve",
        "EllipseCurve",
        "ArcCurve",
        "CatmullRomCurve3",
        "CubicBezierCurve",
        "CubicBezierCurve3",
        "LineCurve",
        "LineCurve3",
        "QuadraticBezierCurve",
        "QuadraticBezierCurve3",
        "SplineCurve",
        "CurvePath",
        "Path",
        "LatheGeometry",
        "CapsuleGeometry",
        "CircleGeometry",
        "CylinderGeometry",
        "ConeGeometry",
        "PolyhedronGeometry",
        "DodecahedronGeometry",
        "EdgesGeometry",
        "Shape",
        "ShapeUtils",
        "ExtrudeGeometry",
        "IcosahedronGeometry",
        "OctahedronGeometry",
        "RingGeometry",
        "ShapeGeometry",
        "SphereGeometry",
        "TetrahedronGeometry",
        "TorusGeometry",
        "TorusKnotGeometry",
        "TubeGeometry",
        "WireframeGeometry",
        "ShadowMaterial",
        "RawShaderMaterial",
        "MeshStandardMaterial",
        "MeshPhysicalMaterial",
        "MeshPhongMaterial",
        "MeshToonMaterial",
        "MeshNormalMaterial",
        "MeshLambertMaterial",
        "MeshMatcapMaterial",
        "LineDashedMaterial",
        "Interpolant",
        "CubicInterpolant",
        "LinearInterpolant",
        "DiscreteInterpolant",
        "KeyframeTrack",
        "BooleanKeyframeTrack",
        "ColorKeyframeTrack",
        "NumberKeyframeTrack",
        "QuaternionLinearInterpolant",
        "QuaternionKeyframeTrack",
        "StringKeyframeTrack",
        "VectorKeyframeTrack",
        "AnimationClip",
        "LoadingManager",
        "Loader",
        "HttpError",
        "FileLoader",
        "AnimationLoader",
        "CompressedTextureLoader",
        "ImageLoader",
        "CubeTextureLoader",
        "DataTextureLoader",
        "TextureLoader",
        "Light",
        "HemisphereLight",
        "LightShadow",
        "SpotLightShadow",
        "SpotLight",
        "PointLightShadow",
        "PointLight",
        "DirectionalLightShadow",
        "DirectionalLight",
        "AmbientLight",
        "RectAreaLight",
        "SphericalHarmonics3",
        "LightProbe",
        "MaterialLoader",
        "LoaderUtils",
        "InstancedBufferGeometry",
        "BufferGeometryLoader",
        "ObjectLoader",
        "ImageBitmapLoader",
        "AudioContext",
        "AudioLoader",
        "StereoCamera",
        "Clock",
        "AudioListener",
        "Audio",
        "PositionalAudio",
        "AudioAnalyser",
        "PropertyMixer",
        "Composite",
        "PropertyBinding",
        "AnimationObjectGroup",
        "AnimationAction",
        "AnimationMixer",
        "Uniform",
        "UniformsGroup",
        "InstancedInterleavedBuffer",
        "GLBufferAttribute",
        "Raycaster",
        "Spherical",
        "Cylindrical",
        "Matrix2",
        "Box2",
        "Line3",
        "SpotLightHelper",
        "SkeletonHelper",
        "PointLightHelper",
        "HemisphereLightHelper",
        "GridHelper",
        "PolarGridHelper",
        "DirectionalLightHelper",
        "CameraHelper",
        "BoxHelper",
        "Box3Helper",
        "PlaneHelper",
        "ArrowHelper",
        "AxesHelper",
        "ShapePath",
        "WebGLMultipleRenderTargets",
        "OrbitControls"
    ]
}