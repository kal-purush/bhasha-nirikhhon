{
    "identifiers": [
        "org",
        "sonarsource",
        "sonarlint",
        "ls",
        "java",
        "net",
        "URI",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Optional",
        "java",
        "util",
        "java",
        "util",
        "stream",
        "Collectors",
        "org",
        "eclipse",
        "lsp4j",
        "jsonrpc",
        "CompletableFutures",
        "org",
        "sonarsource",
        "sonarlint",
        "core",
        "rpc",
        "protocol",
        "client",
        "hotspot",
        "RaisedHotspotDto",
        "org",
        "sonarsource",
        "sonarlint",
        "core",
        "rpc",
        "protocol",
        "client",
        "issue",
        "RaisedFindingDto",
        "org",
        "sonarsource",
        "sonarlint",
        "ls",
        "SonarLintExtendedLanguageClient",
        "GetJavaConfigResponse",
        "org",
        "sonarsource",
        "sonarlint",
        "ls",
        "file",
        "OpenFilesCache",
        "org",
        "sonarsource",
        "sonarlint",
        "ls",
        "file",
        "VersionedOpenFile",
        "org",
        "sonarsource",
        "sonarlint",
        "ls",
        "folders",
        "WorkspaceFolderWrapper",
        "org",
        "sonarsource",
        "sonarlint",
        "ls",
        "folders",
        "WorkspaceFoldersManager",
        "org",
        "sonarsource",
        "sonarlint",
        "ls",
        "java",
        "JavaConfigCache",
        "org",
        "sonarsource",
        "sonarlint",
        "ls",
        "log",
        "LanguageClientLogger",
        "org",
        "sonarsource",
        "sonarlint",
        "ls",
        "notebooks",
        "NotebookDiagnosticPublisher",
        "org",
        "sonarsource",
        "sonarlint",
        "ls",
        "notebooks",
        "OpenNotebooksCache",
        "org",
        "sonarsource",
        "sonarlint",
        "ls",
        "settings",
        "SettingsManager",
        "java",
        "lang",
        "format",
        "java",
        "util",
        "identity",
        "clientLogger",
        "workspaceFoldersManager",
        "javaConfigCache",
        "settingsManager",
        "issuesCache",
        "securityHotspotsCache",
        "diagnosticPublisher",
        "openNotebooksCache",
        "notebookDiagnosticPublisher",
        "openFilesCache",
        "clientLogger",
        "workspaceFoldersManager",
        "javaConfigCache",
        "settingsManager",
        "issuesCache",
        "securityHotspotsCache",
        "diagnosticPublisher",
        "openNotebooksCache",
        "notebookDiagnosticPublisher",
        "openFilesCache",
        "clientLogger",
        "clientLogger",
        "workspaceFoldersManager",
        "workspaceFoldersManager",
        "javaConfigCache",
        "javaConfigCache",
        "settingsManager",
        "settingsManager",
        "issuesCache",
        "issuesCache",
        "securityHotspotsCache",
        "securityHotspotsCache",
        "diagnosticPublisher",
        "diagnosticPublisher",
        "openNotebooksCache",
        "openNotebooksCache",
        "notebookDiagnosticPublisher",
        "notebookDiagnosticPublisher",
        "openFilesCache",
        "openFilesCache",
        "f",
        "issuesCache",
        "clear",
        "f",
        "securityHotspotsCache",
        "clear",
        "f",
        "diagnosticPublisher",
        "publishDiagnostics",
        "f",
        "javaFiles",
        "javaFilesWithConfig",
        "javaFiles",
        "forEach",
        "uri",
        "openFile",
        "javaConfigOpt",
        "javaConfigCache",
        "getOrFetch",
        "uri",
        "javaConfigOpt",
        "isEmpty",
        "clientLogger",
        "debug",
        "format",
        "uri",
        "clearIssueCacheAndPublishEmptyDiagnostics",
        "uri",
        "javaFilesWithConfig",
        "put",
        "uri",
        "javaConfigOpt",
        "get",
        "javaFilesWithConfig",
        "issuesByFileUri",
        "issuesCache",
        "reportIssues",
        "issuesByFileUri",
        "issuesByFileUri",
        "forEach",
        "uri",
        "issues",
        "diagnosticPublisher",
        "publishDiagnostics",
        "uri",
        "notebookDiagnosticPublisher",
        "cleanupDiagnosticsForCellsWithoutIssues",
        "uri",
        "openNotebooksCache",
        "getFile",
        "uri",
        "ifPresent",
        "notebook",
        "notebookDiagnosticPublisher",
        "publishNotebookDiagnostics",
        "uri",
        "notebook",
        "hotspotsByFileUri",
        "securityHotspotsCache",
        "reportHotspots",
        "hotspotsByFileUri",
        "hotspotsByFileUri",
        "forEach",
        "uri",
        "issues",
        "diagnosticPublisher",
        "publishHotspots",
        "uri",
        "notebookDiagnosticPublisher",
        "cleanupDiagnosticsForCellsWithoutIssues",
        "uri",
        "openNotebooksCache",
        "getFile",
        "uri",
        "ifPresent",
        "notebook",
        "notebookDiagnosticPublisher",
        "publishNotebookDiagnostics",
        "uri",
        "notebook",
        "configurationScopeId",
        "filesToAnalyzeUris",
        "workspaceFolder",
        "workspaceFoldersManager",
        "getFolder",
        "URI",
        "create",
        "configurationScopeId",
        "settings",
        "workspaceFolder",
        "WorkspaceFolderWrapper",
        "getSettings",
        "orElseGet",
        "CompletableFutures",
        "computeAsync",
        "c",
        "settingsManager",
        "getCurrentDefaultFolderSettings",
        "join",
        "javaFiles",
        "filesToAnalyzeUris",
        "stream",
        "openFilesCache",
        "getFile",
        "Optional",
        "isPresent",
        "Optional",
        "get",
        "VersionedOpenFile",
        "isJava",
        "collect",
        "Collectors",
        "toMap",
        "VersionedOpenFile",
        "getUri",
        "identity",
        "javaConfigs",
        "collectJavaFilesWithConfig",
        "javaFiles",
        "extraProperties",
        "extraProperties",
        "putAll",
        "settings",
        "getAnalyzerProperties",
        "extraProperties",
        "putAll",
        "javaConfigCache",
        "configureJavaProperties",
        "filesToAnalyzeUris",
        "javaConfigs",
        "pathToCompileCommands",
        "settings",
        "getPathToCompileCommands",
        "pathToCompileCommands",
        "extraProperties",
        "put",
        "pathToCompileCommands",
        "extraProperties"
    ],
    "literals": [
        "\"Analysis of Java file \\\"%s\\\" may not show all issues because SonarLint\"",
        "\" was unable to query project configuration (classpath, source level, ...)\"",
        "\"sonar.cfamily.compile-commands\""
    ],
    "variables": [
        "clientLogger",
        "workspaceFoldersManager",
        "javaConfigCache",
        "settingsManager",
        "issuesCache",
        "securityHotspotsCache",
        "diagnosticPublisher",
        "openNotebooksCache",
        "notebookDiagnosticPublisher",
        "openFilesCache"
    ],
    "comments": [],
    "docstrings": [
        "* SonarLint Language Server\n * Copyright (C) 2009-2024 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."
    ],
    "functions": [
        "AnalysisHelper",
        "clearIssueCacheAndPublishEmptyDiagnostics",
        "collectJavaFilesWithConfig",
        "handleIssues",
        "handleHotspots",
        "getInferredAnalysisProperties"
    ],
    "classes": [
        "AnalysisHelper"
    ]
}