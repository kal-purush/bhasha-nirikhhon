{
    "identifiers": [
        "com",
        "isp",
        "backend",
        "domain",
        "country",
        "service",
        "com",
        "fasterxml",
        "jackson",
        "databind",
        "JsonNode",
        "com",
        "fasterxml",
        "jackson",
        "databind",
        "ObjectMapper",
        "com",
        "isp",
        "backend",
        "domain",
        "country",
        "dto",
        "response",
        "DailyWeatherResponse",
        "com",
        "isp",
        "backend",
        "domain",
        "country",
        "dto",
        "response",
        "LocationResponse",
        "com",
        "isp",
        "backend",
        "domain",
        "country",
        "dto",
        "response",
        "WeatherResponse",
        "com",
        "isp",
        "backend",
        "domain",
        "country",
        "entity",
        "Country",
        "com",
        "isp",
        "backend",
        "domain",
        "country",
        "mapper",
        "WeatherMapper",
        "com",
        "isp",
        "backend",
        "domain",
        "country",
        "repository",
        "CountryRepository",
        "com",
        "isp",
        "backend",
        "exception",
        "openApi",
        "OpenWeatherSearchFailedException",
        "com",
        "isp",
        "backend",
        "exception",
        "schedule",
        "CountryNotFoundException",
        "com",
        "isp",
        "backend",
        "s3",
        "constant",
        "S3BucketDirectory",
        "com",
        "isp",
        "backend",
        "s3",
        "service",
        "S3ImageService",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Value",
        "org",
        "springframework",
        "stereotype",
        "Service",
        "org",
        "springframework",
        "web",
        "client",
        "RestTemplate",
        "java",
        "io",
        "java",
        "text",
        "DecimalFormat",
        "java",
        "time",
        "java",
        "time",
        "format",
        "DateTimeFormatter",
        "java",
        "time",
        "format",
        "TextStyle",
        "java",
        "util",
        "Service",
        "Autowired",
        "countryRepository",
        "Value",
        "weatherApiKey",
        "restTemplate",
        "Autowired",
        "s3ImageService",
        "Override",
        "city",
        "findCountry",
        "countryRepository",
        "findIdByCity",
        "city",
        "findCountry",
        "isPresent",
        "findCountry",
        "country",
        "locationDTO",
        "locationDTO",
        "setLatitude",
        "country",
        "getLatitude",
        "locationDTO",
        "setLongitude",
        "country",
        "getLongitude",
        "locationDTO",
        "Override",
        "city",
        "findCountry",
        "findCountryByCity",
        "city",
        "country",
        "findCountry",
        "get",
        "latitude",
        "country",
        "getLatitude",
        "longitude",
        "country",
        "getLongitude",
        "url",
        "format",
        "latitude",
        "longitude",
        "weatherApiKey",
        "jsonResponse",
        "restTemplate",
        "getForObject",
        "url",
        "objectMapper",
        "weatherResponse",
        "rootNode",
        "objectMapper",
        "readTree",
        "jsonResponse",
        "weatherNode",
        "rootNode",
        "path",
        "get",
        "weatherResponse",
        "setMain",
        "weatherNode",
        "path",
        "asText",
        "descriptionId",
        "weatherNode",
        "path",
        "asText",
        "descriptionTranslation",
        "WeatherMapper",
        "getWeatherDescriptionTranslation",
        "descriptionId",
        "weatherResponse",
        "setDescription",
        "descriptionTranslation",
        "icon",
        "weatherNode",
        "path",
        "asText",
        "weatherResponse",
        "setIconUrl",
        "s3ImageService",
        "get",
        "S3BucketDirectory",
        "WEATHER",
        "getDirectory",
        "icon",
        "mainNode",
        "rootNode",
        "path",
        "weatherResponse",
        "setTemp",
        "convertToCelsius",
        "mainNode",
        "path",
        "asDouble",
        "weatherResponse",
        "setTempMin",
        "convertToCelsius",
        "mainNode",
        "path",
        "asDouble",
        "weatherResponse",
        "setTempMax",
        "convertToCelsius",
        "mainNode",
        "path",
        "asDouble",
        "timezoneOffset",
        "rootNode",
        "path",
        "asInt",
        "weatherResponse",
        "setLocalTime",
        "getLocalTime",
        "timezoneOffset",
        "e",
        "e",
        "printStackTrace",
        "weatherResponse",
        "Override",
        "city",
        "requestedTime",
        "findCountry",
        "findCountryByCity",
        "city",
        "country",
        "findCountry",
        "get",
        "latitude",
        "country",
        "getLatitude",
        "longitude",
        "country",
        "getLongitude",
        "weeklyWeather",
        "url",
        "format",
        "latitude",
        "longitude",
        "weatherApiKey",
        "jsonResponse",
        "restTemplate",
        "getForObject",
        "url",
        "objectMapper",
        "rootNode",
        "objectMapper",
        "readTree",
        "jsonResponse",
        "forecastList",
        "rootNode",
        "path",
        "dailyWeatherMap",
        "forecast",
        "forecastList",
        "dateTime",
        "forecast",
        "path",
        "asText",
        "localDateTime",
        "LocalDateTime",
        "parse",
        "dateTime",
        "DateTimeFormatter",
        "ofPattern",
        "localDateTime",
        "toLocalTime",
        "equals",
        "requestedTime",
        "dateString",
        "localDateTime",
        "toLocalDate",
        "toString",
        "temperature",
        "forecast",
        "path",
        "path",
        "asDouble",
        "dailyWeatherMap",
        "containsKey",
        "dateString",
        "iconCode",
        "forecast",
        "path",
        "get",
        "path",
        "asText",
        "iconUrl",
        "format",
        "s3ImageService",
        "get",
        "S3BucketDirectory",
        "WEATHER",
        "getDirectory",
        "iconCode",
        "dailyWeather",
        "dailyWeather",
        "setDate",
        "parseDayOfWeek",
        "dateString",
        "dailyWeather",
        "setTemp",
        "convertToCelsius",
        "temperature",
        "dailyWeather",
        "setIconUrl",
        "iconUrl",
        "dailyWeatherMap",
        "put",
        "dateString",
        "dailyWeather",
        "weeklyWeather",
        "addAll",
        "dailyWeatherMap",
        "values",
        "weeklyWeather",
        "sort",
        "Comparator",
        "comparing",
        "DailyWeatherResponse",
        "getDate",
        "e",
        "e",
        "printStackTrace",
        "weeklyWeather",
        "Override",
        "city",
        "findCountry",
        "countryRepository",
        "findIdByCity",
        "city",
        "findCountry",
        "isPresent",
        "findCountry",
        "timezoneOffset",
        "now",
        "Instant",
        "now",
        "offset",
        "ZoneOffset",
        "ofTotalSeconds",
        "timezoneOffset",
        "localDateTime",
        "LocalDateTime",
        "ofInstant",
        "now",
        "offset",
        "formatter",
        "DateTimeFormatter",
        "ofPattern",
        "localDateTime",
        "format",
        "formatter",
        "kelvin",
        "celsius",
        "kelvin",
        "df",
        "df",
        "format",
        "celsius",
        "dateString",
        "localDate",
        "LocalDate",
        "parse",
        "dateString",
        "dayOfWeek",
        "localDate",
        "getDayOfWeek",
        "weekDay",
        "dayOfWeek",
        "getDisplayName",
        "TextStyle",
        "FULL",
        "Locale",
        "KOREAN",
        "dateString",
        "weekDay"
    ],
    "literals": [
        "\"${api-key.open-weather}\"",
        "\"http://api.openweathermap.org/data/2.5/weather?lat=%f&lon=%f&appid=%s\"",
        "\"weather\"",
        "\"main\"",
        "\"id\"",
        "\"icon\"",
        "\".png\"",
        "\"main\"",
        "\"temp\"",
        "\"temp_min\"",
        "\"temp_max\"",
        "\"timezone\"",
        "\"http://api.openweathermap.org/data/2.5/forecast?lat=%f&lon=%f&appid=%s\"",
        "\"list\"",
        "\"dt_txt\"",
        "\"yyyy-MM-dd HH:mm:ss\"",
        "\"main\"",
        "\"temp\"",
        "\"weather\"",
        "\"icon\"",
        "\".png\"",
        "\"yyyy/MM/dd HH:mm:ss\"",
        "\"#.##\"",
        "\",\""
    ],
    "variables": [
        "countryRepository",
        "weatherApiKey",
        "s3ImageService"
    ],
    "comments": [
        "ID 값 가져오기",
        "날씨 설명",
        "각 날짜의 날씨 정보를 저장할 맵",
        "예측 시간 정보",
        "요청된 시간대의 온도만 고려",
        "온도 정보",
        "해당 날짜의 온도 정보를 저장 (동일한 시간대에 여러 데이터가 있을 경우, 가장 첫 번째 데이터를 사용)",
        "아이콘 URL 가져오기"
    ],
    "docstrings": [
        "여행지 좌표 찾기 *",
        "여행지의 날씨 정보 가져오기 *",
        "한 주의 날씨 정보 조회 *",
        "도시이름으로 나라 찾기 *",
        "현지 시간으로 변환 *",
        "온도를 섭씨로 변환 *",
        "날짜 문자열에서 요일을 파싱 *"
    ],
    "functions": [
        "findLocationByCity",
        "WeatherResponse",
        "getCurrentWeather",
        "getWeeklyWeather",
        "findCountryByCity",
        "getLocalTime",
        "convertToCelsius",
        "parseDayOfWeek"
    ],
    "classes": [
        "CountryServiceImpl"
    ]
}