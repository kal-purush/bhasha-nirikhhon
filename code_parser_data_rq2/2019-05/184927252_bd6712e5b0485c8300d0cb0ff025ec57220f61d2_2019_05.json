{
    "identifiers": [
        "React",
        "API",
        "history",
        "React",
        "randomGenerator",
        "randomGenerator",
        "i",
        "randomOne",
        "i",
        "array",
        "i",
        "randomTwo",
        "i",
        "array",
        "array",
        "array",
        "chefSkill",
        "time",
        "orders",
        "r",
        "API",
        "r",
        "r",
        "r",
        "incomingData",
        "r",
        "orders",
        "i",
        "randomOrder",
        "i",
        "randomOrder",
        "i",
        "dayData",
        "dayData",
        "dayData",
        "dayData",
        "burgersSold",
        "randomOrder",
        "i",
        "dayData",
        "dayData",
        "dayData",
        "dayData",
        "hotDogsSold",
        "dayData",
        "DayOver",
        "burgersSold",
        "hotDogsSold",
        "DayOver",
        "burgersSold",
        "hotDogsSold",
        "API",
        "dayData",
        "burgers",
        "hotdogs",
        "burgers",
        "hotdogs",
        "burgerSales",
        "hotdogSales",
        "burgers",
        "hotdogs",
        "totalSales",
        "testingCode"
    ],
    "literals": [
        "'react'",
        "\"../utils/API\"",
        "\"../history\"",
        "\"burger\"",
        "\"hotdog\"",
        "\"burger\"",
        "\"hotdog\"",
        "\"Total burgers sold: \"",
        "\"Total hot-dogs sold: \"",
        "\"The total sales are: $\""
    ],
    "variables": [
        "array",
        "randomOne",
        "randomTwo",
        "i",
        "i",
        "incomingData",
        "dayData",
        "randomOrder",
        "burgersSold",
        "hotDogsSold",
        "i",
        "burgerSales",
        "hotdogSales",
        "totalSales"
    ],
    "comments": [
        "get starting balance from db",
        "sorts the array randomly",
        "console.log(randomOrder);",
        "the loop is not ending whenever it gets over the length of the array.",
        "console.log(randomOrder[i]);",
        "update db with newBalance",
        "pass in id, restaurant data",
        "DayGoesBy(chefSkill, time, orders, randomEvent());",
        "DayGoesBy(chefSkill, time, orderEasy);",
        "DayGoesBy(chefSkill, time, orderTest);"
    ],
    "docstrings": [],
    "functions": [
        "randomArray",
        "randomGenerator",
        "DayGoesBy",
        "DayOver"
    ],
    "classes": [
        "testingCode"
    ]
}