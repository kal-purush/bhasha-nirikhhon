{
    "identifiers": [
        "org",
        "broadinstitute",
        "hellbender",
        "tools",
        "funcotator",
        "org",
        "apache",
        "commons",
        "lang3",
        "Pair",
        "org",
        "broadinstitute",
        "hellbender",
        "utils",
        "Utils",
        "java",
        "util",
        "java",
        "util",
        "stream",
        "Collectors",
        "aliasMap",
        "aliasMap",
        "Utils",
        "nonNull",
        "aliasMap",
        "aliasMap",
        "aliasMap",
        "entrySet",
        "stream",
        "collect",
        "Collectors",
        "toMap",
        "Entry",
        "getKey",
        "e",
        "createAliasList",
        "aliasMap",
        "e",
        "getKey",
        "x1",
        "x2",
        "LinkedHashMap",
        "columnNameToAliasMap",
        "columnName",
        "result",
        "result",
        "add",
        "columnName",
        "result",
        "addAll",
        "columnNameToAliasMap",
        "get",
        "columnName",
        "result",
        "fieldName",
        "txToFuncotationMap",
        "txId",
        "Utils",
        "nonNull",
        "fieldName",
        "Utils",
        "nonNull",
        "txToFuncotationMap",
        "Utils",
        "nonNull",
        "txId",
        "aliasMap",
        "keySet",
        "contains",
        "fieldName",
        "candidateFieldNames",
        "aliasMap",
        "get",
        "fieldName",
        "funcotationFieldNames",
        "txToFuncotationMap",
        "getFieldNames",
        "txId",
        "candidateFieldNames",
        "stream",
        "funcotationFieldNames",
        "contains",
        "findFirst",
        "orElse",
        "txToFuncotationMap",
        "txId",
        "aliasMap",
        "keySet",
        "stream",
        "k",
        "Pair",
        "of",
        "k",
        "findFieldNameInFuncotations",
        "k",
        "txToFuncotationMap",
        "txId",
        "collect",
        "Collectors",
        "toMap",
        "Pair",
        "getLeft",
        "Pair",
        "getRight",
        "x1",
        "x2",
        "LinkedHashMap",
        "aliasMap",
        "keySet"
    ],
    "literals": [
        "\"Should not be able to have duplicate field names.\"",
        "\"\"",
        "\"\"",
        "\"Should not be able to have duplicate field names.\""
    ],
    "variables": [
        "aliasMap"
    ],
    "comments": [
        "Take all of the aliases and prepend the key to list of values.",
        "Make sure that the column name itself is at the front of the alias list."
    ],
    "docstrings": [
        "* Class for managing aliases and querying {@link Funcotation} to determine fields.\n *\n * Typically, you would use this to map output columns to input funcotation fields for tsv generation.",
        "* Maps a field name to a list of alternate field names.\n     *\n     * For example, \"CONTIG\" -> [\"CONTIG\", \"chr\", \"Chromsome\", \"contig\"]",
        "*\n     * @param aliasMap key name to list of potential alternate key names.  No need to include the key name itself in\n     *                 the value list.",
        "* Search the given funcotations (derived from the funoctation map and transcript key) for the highest priority alias that\n     *  appears for the given field name.\n     *\n     * Notes:\n     * - This method assumes that the funcotation map has the same fields regardless of allele.\n     *\n     * @param fieldName field name for which to find an alias in the given funcotations.  Never {@code null}\n     * @param txToFuncotationMap {@link FuncotationMap} to search for field names.  Never {@code null}\n     * @param txId transcript ID to use in the search.   Never {@code null}\n     * @return the highest priority alias field name found in the funcotation map.\n     *  Returns empty string (\"\") if nothing is found.",
        "* Create a mapping that links the fields of this alias provider to the funcotation fields in the given\n     *  {@link FuncotationMap}.\n     *\n     * @param txToFuncotationMap Never {@code null}\n     * @param txId Transcript ID.  Never {@code null}\n     * @return A mapping of the fields in this alias provider to the funcotation fields contained in the FuncotationMap,\n     * transcript ID pairing.  The keys will be the same keys from the alias map that this instance was initialized with.\n     * Value for a given key will be empty string (\"\") if no matching funcotation field exists.\n     * Never {@code null}",
        "* Get the fields that have aliases.\n     *\n     * @return Never {@code null}"
    ],
    "functions": [
        "AliasProvider",
        "createAliasList",
        "findFieldNameInFuncotations",
        "createColumnNameToFieldNameMap",
        "getFields"
    ],
    "classes": [
        "AliasProvider"
    ]
}