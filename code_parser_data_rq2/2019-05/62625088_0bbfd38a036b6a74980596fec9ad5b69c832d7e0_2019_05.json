{
    "identifiers": [
        "com",
        "couchbase",
        "client",
        "dcp",
        "util",
        "com",
        "couchbase",
        "client",
        "core",
        "time",
        "Delay",
        "java",
        "time",
        "Duration",
        "java",
        "util",
        "Objects",
        "requireNonNull",
        "TimeProvider",
        "delay",
        "cooldownNanos",
        "attempt",
        "lastEventNanos",
        "clock",
        "backoffStrategy",
        "cooldown",
        "backoffStrategy",
        "cooldown",
        "nanoTime",
        "delay",
        "cooldown",
        "clock",
        "delay",
        "requireNonNull",
        "delay",
        "clock",
        "requireNonNull",
        "clock",
        "cooldownNanos",
        "cooldown",
        "toNanos",
        "lastEventNanos",
        "clock",
        "nanoTime",
        "cooldownNanos",
        "now",
        "clock",
        "nanoTime",
        "nanosSinceLastEvent",
        "now",
        "lastEventNanos",
        "cooldownElapsed",
        "nanosSinceLastEvent",
        "cooldownNanos",
        "cooldownElapsed",
        "attempt",
        "lastEventNanos",
        "now",
        "Duration",
        "ZERO",
        "delayNanos",
        "delay",
        "unit",
        "toNanos",
        "delay",
        "calculate",
        "attempt",
        "lastEventNanos",
        "now",
        "delayNanos",
        "Duration",
        "ofNanos",
        "delayNanos"
    ],
    "literals": [],
    "variables": [
        "delay",
        "cooldownNanos",
        "attempt",
        "lastEventNanos",
        "clock"
    ],
    "comments": [
        "start cool"
    ],
    "docstrings": [
        "* Copyright 2019 Couchbase, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* A stateful wrapper around a {@link Delay}. Manages the retry counter\n * and automatically resets it to zero after a cooldown duration.",
        "* Enables setting the \"current time\" from test code.\n   * Simpler than {@link java.time.Clock} and doesn't require a mock.",
        "* Returns the next delay in the backoff sequence.\n   * <p>\n   * If the cooldown duration has elapsed since the previous delay returned by this method,\n   * the backoff sequence is reset and this method returns a duration of zero."
    ],
    "functions": [
        "nanoTime",
        "AdaptiveDelay",
        "AdaptiveDelay",
        "Duration",
        "calculate"
    ],
    "classes": [
        "AdaptiveDelay"
    ]
}