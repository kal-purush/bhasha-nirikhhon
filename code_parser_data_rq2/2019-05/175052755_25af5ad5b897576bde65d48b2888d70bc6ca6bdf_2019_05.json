{
    "identifiers": [
        "require",
        "require",
        "obj",
        "obj",
        "require",
        "options",
        "globalVariable",
        "options",
        "router",
        "router",
        "req",
        "res",
        "req",
        "req",
        "globalVariable",
        "usernameV",
        "repositoryV",
        "err",
        "documents",
        "documents",
        "typeOf",
        "value",
        "err",
        "res",
        "res",
        "res",
        "value",
        "router",
        "cors",
        "req",
        "res",
        "req",
        "req",
        "req",
        "typeOf",
        "note",
        "globalVariable",
        "note",
        "note",
        "err",
        "item",
        "item",
        "globalVariable",
        "note",
        "err",
        "result",
        "err",
        "res",
        "res",
        "result",
        "item",
        "note",
        "currentPRs",
        "allPRs",
        "pos",
        "keyCountPRS",
        "pos",
        "newMap",
        "allPRs",
        "pos",
        "pos",
        "pos",
        "keyCount",
        "pos",
        "currentPRs",
        "pos",
        "newMap",
        "ID",
        "needToAdd",
        "currentPRs",
        "pos",
        "pos",
        "needToAdd",
        "pos",
        "allPRs",
        "keyCountPRS",
        "pos",
        "needToAdd",
        "pos",
        "globalVariable",
        "item",
        "allPRs",
        "needToAdd",
        "res",
        "res",
        "router",
        "req",
        "res",
        "req",
        "globalVariable",
        "username",
        "err",
        "err",
        "res",
        "err",
        "res"
    ],
    "literals": [
        "\"express\"",
        "'mongodb'",
        "' '",
        "'cors'",
        "'/db'",
        "\"5cb258ad77fcbc46f49f6020\"",
        "'username'",
        "'repository'",
        "\"Could not find username in repository specificed\"",
        "'Content-Type'",
        "'application/json'",
        "'/addToDB'",
        "\"username\"",
        "\"repository\"",
        "'error'",
        "'An error has occurred'",
        "\"Updated Database\"",
        "\"Updated Database\"",
        "'error'",
        "\":  Username exists\"",
        "'error'",
        "\"Username exists\"",
        "'/removeFromDB/:username'",
        "'removed from DB'"
    ],
    "variables": [
        "router",
        "ObjectID",
        "cors",
        "globalVariable",
        "usernameV",
        "repositoryV",
        "id",
        "value",
        "note",
        "allPRs",
        "currentPRs",
        "keyCount",
        "keyCountPRS",
        "newMap",
        "pos",
        "needToAdd",
        "pos",
        "ID",
        "pos",
        "username"
    ],
    "comments": [
        "Gets mongodb id",
        "const passport = require('passport');",
        "require('../config/passport');",
        "LocalStrategy = require('passport-local').Strategy; //./database_route.js",
        "const Sequelize = require('sequelize');",
        "const jwebtoken = require('jsonwebtoken');",
        "const jwtSecret = require('../config/jwtConfig')",
        "router.get(() => {\n\tres.status(404).send(\"Sorry, can't find that!\");\n\tres.redirect('/404.html');\n});",
        "router.get('/', function(req, res) {\n    res.send('GET handler for /database_route.');\n});\n\nrouter.post('/', function(req, res) {\n    res.send('POST handler for /database_route.');\n});",
        "var format = req.query.format;",
        "const objNote = { 'username' : usernameV, 'repository' : repositoryV };",
        "console.log(usernameV + \" wot \" + repositoryV);",
        "console.log(typeOf(repositoryV));",
        "console.log(\"ITEM: \" + item);",
        "console.log(allPRs[pos].id);",
        "console.log(currentPRs[pos].id + \" NOT IN ALLPRS\");",
        "console.log(needToAdd[pos]);",
        "console.log(allPRs);",
        "res.send('added to DB');"
    ],
    "docstrings": [],
    "functions": [
        "typeOf",
        "initAssessmentRoutes"
    ],
    "classes": []
}