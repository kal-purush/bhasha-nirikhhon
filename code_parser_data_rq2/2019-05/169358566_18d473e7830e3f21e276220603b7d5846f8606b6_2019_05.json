{
    "identifiers": [
        "argparse",
        "json",
        "datetime",
        "math",
        "logging",
        "logger_level",
        "datetime",
        "datetime",
        "now",
        "strftime",
        "logging",
        "Formatter",
        "log_format",
        "logging",
        "FileHandler",
        "log_file",
        "file_handler",
        "setLevel",
        "logging",
        "WARNING",
        "file_handler",
        "setFormatter",
        "formatter",
        "logging",
        "StreamHandler",
        "console_handler",
        "setLevel",
        "logging",
        "DEBUG",
        "console_handler",
        "setFormatter",
        "formatter",
        "logging",
        "getLogger",
        "logger",
        "setLevel",
        "logging",
        "DEBUG",
        "logger",
        "addHandler",
        "file_handler",
        "logger",
        "addHandler",
        "console_handler",
        "logger_level",
        "logger",
        "setLevel",
        "logging",
        "CRITICAL",
        "console_handler",
        "setLevel",
        "logging",
        "CRITICAL",
        "file_handler",
        "setLevel",
        "logging",
        "CRITICAL",
        "logger_level",
        "logger",
        "setLevel",
        "logging",
        "ERROR",
        "console_handler",
        "setLevel",
        "logging",
        "ERROR",
        "file_handler",
        "setLevel",
        "logging",
        "ERROR",
        "logger_level",
        "logger",
        "setLevel",
        "logging",
        "WARNING",
        "console_handler",
        "setLevel",
        "logging",
        "WARNING",
        "file_handler",
        "setLevel",
        "logging",
        "WARNING",
        "logger_level",
        "logger",
        "setLevel",
        "logging",
        "DEBUG",
        "console_handler",
        "setLevel",
        "logging",
        "DEBUG",
        "file_handler",
        "setLevel",
        "logging",
        "WARNING",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "parse_args",
        "filename",
        "open",
        "filename",
        "file",
        "json",
        "load",
        "file",
        "FileNotFoundError",
        "logging",
        "error",
        "logging",
        "debug",
        "logging",
        "debug",
        "exit",
        "data",
        "data",
        "key",
        "value",
        "data",
        "items",
        "datetime",
        "datetime",
        "strptime",
        "value",
        "datetime",
        "datetime",
        "strptime",
        "value",
        "ValueError",
        "logging",
        "warning",
        "key",
        "logging",
        "debug",
        "key",
        "value",
        "rental_end",
        "rental_start",
        "days",
        "logging",
        "warning",
        "key",
        "logging",
        "debug",
        "rental_end",
        "rental_start",
        "days",
        "value",
        "value",
        "math",
        "sqrt",
        "value",
        "value",
        "value",
        "data",
        "filename",
        "data",
        "open",
        "filename",
        "file",
        "json",
        "dump",
        "data",
        "file",
        "parse_cmd_arguments",
        "init_logger",
        "ARGS",
        "debug",
        "load_rentals_file",
        "ARGS",
        "input",
        "calculate_additional_fields",
        "DATA",
        "save_to_json",
        "ARGS",
        "output",
        "DATA_W_AF"
    ],
    "literals": [
        "'%(asctime)s %(filename)s:%(lineno)-3d %(levelname)s %(message)s'",
        "'%Y-%m-%d'",
        "'.log'",
        "'0'",
        "'1'",
        "'2'",
        "'3'",
        "'Process some integers.'",
        "'-i'",
        "'--input'",
        "'input JSON file'",
        "'-o'",
        "'--output'",
        "'ouput JSON file'",
        "'-d'",
        "'--debug'",
        "'debugger level selection'",
        "'0'",
        "'Input json file was not found'",
        "'Error at load_rentals_file(ARGS.input)'",
        "'Script stops when encountering this error'",
        "'rental_start'",
        "'%m/%d/%y'",
        "'rental_end'",
        "'%m/%d/%y'",
        "f\"a rental date for {key} does not match format m/d/y\"",
        "f'change or add rental date for {key}: {value}'",
        "f'rental end is before rental start for {key}'",
        "'rental end must be after rental start'",
        "'total_days'",
        "'total_price'",
        "'total_days'",
        "'price_per_day'",
        "'sqrt_total_price'",
        "'total_price'",
        "'unit_cost'",
        "'total_price'",
        "'units_rented'",
        "'w'",
        "\"__main__\""
    ],
    "variables": [
        "log_format",
        "log_file",
        "formatter",
        "file_handler",
        "console_handler",
        "logger",
        "parser",
        "data",
        "rental_start",
        "rental_end",
        "value",
        "value",
        "value",
        "value",
        "ARGS",
        "DATA",
        "DATA_W_AF"
    ],
    "comments": [
        "added disable=logging-fstring-interpolation to .pylintrc",
        "if I got more information from the client and found out that the rental",
        "start and end days had just been reversed, then I would add extra code",
        "to switch these values and then supply the additional values. Until that",
        "is clear from the client, although this change may be logical, it feels",
        "like I would be overstepping my bounds."
    ],
    "docstrings": [
        "'''\nReturns total price paid for individual rentals\n'''",
        "'''initializes logging'''",
        "'''\n    parses command line arguments\n\n    to run this script on command line, you need to include input and output:\n    python charges_calc.py -i source.json -o out.json\n    '''",
        "'''loads the input json file'''",
        "'''\n    adds additional calculations to data for total_days, total_price,\n    sqrt_total_price and unit_cost\n    '''",
        "'''saves to a json file'''"
    ],
    "functions": [
        "init_logger",
        "parse_cmd_arguments",
        "load_rentals_file",
        "calculate_additional_fields",
        "save_to_json"
    ],
    "classes": []
}