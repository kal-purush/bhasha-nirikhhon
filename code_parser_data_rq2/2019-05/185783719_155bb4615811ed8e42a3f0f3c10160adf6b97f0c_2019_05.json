{
    "identifiers": [
        "os",
        "platform",
        "random",
        "subprocess",
        "time",
        "multiprocessing",
        "Pipe",
        "threading",
        "gym",
        "gym",
        "error",
        "spaces",
        "utils",
        "gym",
        "utils",
        "seeding",
        "py4j",
        "java_gateway",
        "CallbackServerParameters",
        "GatewayParameters",
        "JavaGateway",
        "get_field",
        "gym_fightingice",
        "gym_fightingice",
        "envs",
        "gym_ai",
        "GymAI",
        "gym_fightingice",
        "envs",
        "gym_ai_display",
        "GymAIDisplay",
        "gym_fightingice",
        "envs",
        "Machete",
        "Machete",
        "env",
        "env",
        "manager",
        "runGame",
        "env",
        "game_to_start",
        "NotImplementedError",
        "gym",
        "Env",
        "freq_restart_java",
        "env_config",
        "java_env_path",
        "port",
        "auto_start_up",
        "frameskip",
        "display",
        "p2_server",
        "_actions",
        "split",
        "spaces",
        "Box",
        "low",
        "high",
        "shape",
        "spaces",
        "Discrete",
        "len",
        "action_strs",
        "subprocess",
        "check_output",
        "shell",
        "java_version",
        "ModuleNotFoundError",
        "java_env_path",
        "os",
        "getcwd",
        "java_env_path",
        "os",
        "path",
        "join",
        "java_env_path",
        "os",
        "path",
        "join",
        "java_env_path",
        "os",
        "path",
        "join",
        "java_env_path",
        "os",
        "path",
        "join",
        "start_lib_path",
        "os",
        "path",
        "join",
        "start_lib_path",
        "platform",
        "system",
        "os_name",
        "startswith",
        "os_name",
        "startswith",
        "os",
        "path",
        "join",
        "java_env_path",
        "system_name",
        "os",
        "path",
        "join",
        "start_system_lib_path",
        "os",
        "path",
        "exists",
        "start_jar_path",
        "os",
        "path",
        "exists",
        "start_data_path",
        "os",
        "path",
        "exists",
        "start_lib_path",
        "os",
        "path",
        "exists",
        "start_system_lib_path",
        "auto_start_up",
        "format",
        "java_env_path",
        "FileExistsError",
        "error_message",
        "start_up",
        "port",
        "port",
        "port_for",
        "port_for",
        "select_random",
        "ImportError",
        "os",
        "path",
        "join",
        "java_env_path",
        "os",
        "path",
        "join",
        "java_ai_path",
        "format",
        "start_jar_path",
        "lwjgl_path",
        "natives_path",
        "lib_path",
        "ai_path",
        "freq_restart_java",
        "frameskip",
        "display",
        "p2_server",
        "format",
        "java_env_path",
        "port",
        "open",
        "os",
        "devnull",
        "subprocess",
        "Popen",
        "start_up_str",
        "port",
        "time",
        "sleep",
        "JavaGateway",
        "gateway_parameters",
        "GatewayParameters",
        "port",
        "port",
        "callback_server_parameters",
        "CallbackServerParameters",
        "port",
        "gateway",
        "get_callback_server",
        "get_listening_port",
        "gateway",
        "java_gateway_server",
        "resetCallbackClient",
        "gateway",
        "java_gateway_server",
        "getCallbackClient",
        "getAddress",
        "python_port",
        "gateway",
        "entry_point",
        "p1_server",
        "p1_server",
        "display",
        "GymAIDisplay",
        "gateway",
        "p1_client",
        "frameskip",
        "GymAIDisplay",
        "gateway",
        "p2_client",
        "frameskip",
        "GymAI",
        "gateway",
        "p1_client",
        "frameskip",
        "GymAI",
        "gateway",
        "p2_client",
        "frameskip",
        "manager",
        "registerAI",
        "p1",
        "manager",
        "registerAI",
        "p2",
        "manager",
        "createGame",
        "freq_restart_java",
        "target",
        "game_thread",
        "name",
        "args",
        "game",
        "start",
        "p2_server",
        "p1_server",
        "p1_client",
        "Pipe",
        "_p2_server",
        "p2_client",
        "Pipe",
        "_p2_server",
        "gateway",
        "close_callback_server",
        "gateway",
        "close",
        "gateway",
        "java_env",
        "kill",
        "java_env",
        "p2_server",
        "game_started",
        "_close_gateway",
        "_close_java_game",
        "_start_java_game",
        "_start_gateway",
        "round_num",
        "freq_restart_java",
        "_close_gateway",
        "_close_java_game",
        "_start_java_game",
        "SystemExit",
        "_start_gateway",
        "p2_server",
        "round_num",
        "round_num",
        "freq_restart_java",
        "time",
        "sleep",
        "pipe",
        "send",
        "round_num",
        "pipe",
        "recv",
        "obs",
        "action",
        "game_started",
        "reset",
        "pipe",
        "send",
        "action",
        "pipe",
        "recv",
        "new_obs",
        "reward",
        "done",
        "mode",
        "game_started",
        "p2_server",
        "_close_java_game",
        "env",
        "env",
        "reset",
        "done",
        "env",
        "step",
        "random",
        "randint",
        "FightingiceEnv_TwoPlayer",
        "env1",
        "build_pipe_and_return_p2",
        "FightingiceEnv_TwoPlayer",
        "p2_server",
        "p2_server",
        "target",
        "play_thread",
        "name",
        "args",
        "env1",
        "target",
        "play_thread",
        "name",
        "args",
        "env2",
        "t1",
        "start",
        "t2",
        "start",
        "t1",
        "join",
        "t2",
        "join"
    ],
    "literals": [
        "\"Please IGNORE the Exception above because of restart java game\"",
        "\"Come soon later\"",
        "'render.modes'",
        "'human'",
        "\"AIR AIR_A AIR_B AIR_D_DB_BA AIR_D_DB_BB AIR_D_DF_FA AIR_D_DF_FB AIR_DA AIR_DB AIR_F_D_DFA AIR_F_D_DFB AIR_FA AIR_FB AIR_GUARD AIR_GUARD_RECOV AIR_RECOV AIR_UA AIR_UB BACK_JUMP BACK_STEP CHANGE_DOWN CROUCH CROUCH_A CROUCH_B CROUCH_FA CROUCH_FB CROUCH_GUARD CROUCH_GUARD_RECOV CROUCH_RECOV DASH DOWN FOR_JUMP FORWARD_WALK JUMP LANDING NEUTRAL RISE STAND STAND_A STAND_B STAND_D_DB_BA STAND_D_DB_BB STAND_D_DF_FA STAND_D_DF_FB STAND_D_DF_FC STAND_F_D_DFA STAND_F_D_DFB STAND_FA STAND_FB STAND_GUARD STAND_GUARD_RECOV STAND_RECOV THROW_A THROW_B THROW_HIT THROW_SUFFER\"",
        "\" \"",
        "'java -version 2>&1 | awk -F[\\\\\\\"_] \\'NR==1{print $2}\\''",
        "b\"\\n\"",
        "\"Java is not installed\"",
        "\"FightingICE.jar\"",
        "\"data\"",
        "\"lib\"",
        "\"lwjgl\"",
        "\"*\"",
        "\"*\"",
        "\"Linux\"",
        "\"linux\"",
        "\"Darwin\"",
        "\"macos\"",
        "\"windows\"",
        "\"lib\"",
        "\"natives\"",
        "\"*\"",
        "\"FightingICE is not installed in {}\"",
        "\"Pass port=[your_port] when make env, or install port_for to set startup port automatically, maybe pip install port_for can help\"",
        "\"data\"",
        "\"ai\"",
        "\"*\"",
        "\"{}:{}:{}:{}:{}\"",
        "\"Start java env in {} and port {}\"",
        "'w'",
        "\"java\"",
        "\"-cp\"",
        "\"Main\"",
        "\"--port\"",
        "\"--py4j\"",
        "\"--fastmode\"",
        "\"--grey-bg\"",
        "\"--inverted-player\"",
        "\"1\"",
        "\"--mute\"",
        "\"--limithp\"",
        "\"20\"",
        "\"20\"",
        "\"Must call build_pipe_and_return_p2 and also make p2 env after gym.make() but before env.reset()\"",
        "\"P1\"",
        "\"P2\"",
        "\"ZEN\"",
        "\"ZEN\"",
        "\"P1\"",
        "\"P2\"",
        "\"game_thread\"",
        "\"Can not build pipe again if env is used as p2 (p2_server set)\"",
        "\"Can not restart game\"",
        "\"reset\"",
        "\"pre_game_crashed\"",
        "\"step\"",
        "'human'",
        "\"__main__\"",
        "\"play_thread1\"",
        "\"play_thread2\"",
        "\"finish\""
    ],
    "variables": [
        "env",
        "game_started",
        "env",
        "game_started",
        "metadata",
        "_actions",
        "action_strs",
        "observation_space",
        "action_space",
        "java_version",
        "java_env_path",
        "java_env_path",
        "start_jar_path",
        "start_data_path",
        "start_lib_path",
        "lwjgl_path",
        "lib_path",
        "os_name",
        "system_name",
        "system_name",
        "system_name",
        "start_system_lib_path",
        "natives_path",
        "error_message",
        "port",
        "port",
        "java_ai_path",
        "ai_path",
        "start_up_str",
        "game_started",
        "round_num",
        "freq_restart_java",
        "frameskip",
        "display",
        "p2_server",
        "devnull",
        "java_env",
        "gateway",
        "python_port",
        "manager",
        "pipe",
        "p1",
        "p2",
        "p1",
        "p2",
        "game_to_start",
        "game",
        "game_started",
        "round_num",
        "game_started",
        "pipe",
        "round_num",
        "game_started",
        "obs",
        "new_obs",
        "reward",
        "done",
        "info",
        "obs",
        "done",
        "new_obs",
        "reward",
        "done",
        "_",
        "env1",
        "p2_server",
        "env2",
        "t1",
        "t2"
    ],
    "comments": [
        "first check java can be run",
        "second check if FightingIce is installed correct",
        "select one random port for java env",
        "start game",
        ", stdout=devnull, stderr=devnull)",
        "self.java_env = subprocess.Popen([\"java\", \"-cp\", \"/home/myt/gym-fightingice/gym_fightingice/FightingICE.jar:/home/myt/gym-fightingice/gym_fightingice/lib/lwjgl/*:/home/myt/gym-fightingice/gym_fightingice/lib/natives/linux/*:/home/myt/gym-fightingice/gym_fightingice/lib/*\", \"Main\", \"--port\", str(self.free_port), \"--py4j\", \"--c1\", \"ZEN\", \"--c2\", \"ZEN\",\"--fastmode\", \"--grey-bg\", \"--inverted-player\", \"1\", \"--mute\"])",
        "sleep 3s for java starting, if your machine is slow, make it longer",
        "auto select callback server port and reset it in java env",
        "check if pipe built",
        "Must call this function after \"gym.make()\" but before \"env.reset()\"",
        "create pipe between gym_env_api and python_ai for java env",
        "p2_server should not be used in this env but another",
        "p2_server is returned to build a gym env for p2",
        "self.pipe.close()",
        "del self.pipe",
        "start java game if game is not started",
        "to provide crash, restart java game in some freq",
        "3 is for round in one game",
        "p2 wait 10s",
        "just reset is anything ok",
        "check if game is running, if not try restart",
        "when restart, dict will contain crash info, agent should do something, it is a BUG in this version",
        "no need"
    ],
    "docstrings": [],
    "functions": [
        "game_thread",
        "start_up",
        "_start_java_game",
        "_start_gateway",
        "build_pipe_and_return_p2",
        "_close_gateway",
        "_close_java_game",
        "reset",
        "step",
        "render",
        "close",
        "play_thread"
    ],
    "classes": [
        "FightingiceEnv_TwoPlayer"
    ]
}