{
    "identifiers": [
        "cv2",
        "numpy",
        "np",
        "pyzbar",
        "pyzbar",
        "decode",
        "image",
        "cv2",
        "cvtColor",
        "image",
        "cv2",
        "COLOR_BGR2GRAY",
        "decode",
        "gray_img",
        "obj",
        "barcode",
        "obj",
        "polygon",
        "obj",
        "rect",
        "np",
        "array",
        "points",
        "np",
        "int32",
        "pts",
        "reshape",
        "cv2",
        "polylines",
        "image",
        "pts",
        "obj",
        "data",
        "decode",
        "obj",
        "barcodeData",
        "barcodeType",
        "cv2",
        "putText",
        "image",
        "x",
        "y",
        "cv2",
        "FONT_HERSHEY_SIMPLEX",
        "input",
        "choice",
        "cv2",
        "VideoCapture",
        "cap",
        "read",
        "decoder",
        "image",
        "cv2",
        "imshow",
        "image",
        "cv2",
        "waitKey",
        "code",
        "ord",
        "cap",
        "release",
        "cv2",
        "destroyAllWindows",
        "input",
        "cv2",
        "imread",
        "img_path",
        "cv2",
        "QRCodeDetector",
        "detector",
        "detectAndDecode",
        "img",
        "bbox",
        "i",
        "len",
        "bbox",
        "cv2",
        "polylines",
        "img",
        "np",
        "int32",
        "bbox",
        "data",
        "cv2",
        "imshow",
        "img",
        "cv2",
        "waitKey",
        "cv2",
        "destroyAllWindows"
    ],
    "literals": [
        "\"utf-8\"",
        "\"Data: \"",
        "\" | Type: \"",
        "\"1. Scan via image\\n2. Scan via WebCam\\nChoice: \"",
        "\"Image\"",
        "\"q\"",
        "\"Enter Image Path: \"",
        "f\"Data: {data}\"",
        "\"Image\"",
        "\"QR Code not detected\""
    ],
    "variables": [
        "gray_img",
        "barcode",
        "points",
        "x",
        "y",
        "w",
        "h",
        "pts",
        "pts",
        "barcodeData",
        "barcodeType",
        "choice",
        "cap",
        "ret",
        "image",
        "code",
        "img_path",
        "img",
        "detector",
        "data",
        "bbox",
        "_"
    ],
    "comments": [
        "OpenCV library for image processing.",
        "Function from the pyzbar library to decode barcodes and QR codes",
        "Converts the loaded image from BGR color space to grayscale",
        "Uses the decode function from pyzbar to detect and decode any barcodes or QR codes in the grayscale image",
        "Retrieves the polygon points that outline the detected barcode",
        "Retrieves the rectangle coordinates (x, y, width, height) that bound the detected barcode",
        "Converts the polygon points to a NumPy array of type int32",
        "Reshapes the points array to a format suitable for drawing the polygon with OpenCV functions",
        "Draws the polygon on the original image in green color with a thickness of 3 pixels",
        "Decodes the barcode data from the object and converts it to a UTF-8 string",
        "Extracts the barcode type from the object",
        "Creates a string containing the decoded data and barcode type",
        "Displays the string information (data and type) on the image",
        "Captures video frames from the webcam",
        "Displays the processed frames with highlighted barcodes and decoded data",
        "Waits for a key press (q in this case) to terminate the webcam capture",
        "Prompts the user to enter the file path of the image containing the QR code",
        "Loads the image specified by the img_path into a NumPy array named img",
        "Creates an instance of the QRCodeDetector class from OpenCV",
        "Detects and decodes QR codes within the image"
    ],
    "docstrings": [],
    "functions": [
        "decoder"
    ],
    "classes": []
}