{
    "identifiers": [
        "process",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "express",
        "multer",
        "Redis",
        "process",
        "process",
        "app",
        "cors",
        "app",
        "express",
        "path",
        "__dirname",
        "app",
        "express",
        "app",
        "express",
        "process",
        "app",
        "session",
        "sessionOptions",
        "app",
        "passport",
        "app",
        "passport",
        "passport",
        "LocalStrategy",
        "User",
        "passport",
        "User",
        "passport",
        "User",
        "process",
        "mongoose",
        "dburl",
        "err",
        "err",
        "cloudinary",
        "process",
        "process",
        "process",
        "B2",
        "process",
        "process",
        "process",
        "splitFileIntoChunks",
        "filePath",
        "chunkSize",
        "fs",
        "filePath",
        "currentIndex",
        "fileBuffer",
        "fileBuffer",
        "currentIndex",
        "currentIndex",
        "chunkSize",
        "chunks",
        "chunk",
        "currentIndex",
        "chunkSize",
        "chunks",
        "uploadChunkToCloudinary",
        "chunk",
        "Readable",
        "stream",
        "chunk",
        "stream",
        "resolve",
        "reject",
        "stream",
        "cloudinary",
        "error",
        "result",
        "error",
        "reject",
        "error",
        "resolve",
        "result",
        "result",
        "result",
        "error",
        "error",
        "uploadChunkToB2",
        "chunk",
        "filename",
        "b2",
        "b2",
        "b2BucketId",
        "uploadUrlResponse",
        "uploadUrlResponse",
        "path",
        "filename",
        "ext",
        "contentType",
        "contentType",
        "contentType",
        "contentType",
        "encodeURIComponent",
        "filename",
        "axios",
        "uploadUrl",
        "chunk",
        "authorizationToken",
        "contentType",
        "encodedFileName",
        "crypto",
        "chunk",
        "response",
        "error",
        "error",
        "error",
        "error",
        "uploadChunkToUpstashRedis",
        "chunk",
        "filename",
        "filename",
        "redis",
        "chunkKey",
        "chunk",
        "chunkKey",
        "error",
        "error",
        "distributeChunks",
        "chunks",
        "uploadChunkToCloudinary",
        "uploadChunkToB2",
        "uploadChunkToUpstashRedis",
        "chunks",
        "chunk",
        "services",
        "globalChunkIndex",
        "services",
        "globalChunkIndex",
        "service",
        "service",
        "app",
        "upload",
        "req",
        "res",
        "req",
        "splitFileIntoChunks",
        "filePath",
        "chunkSize",
        "chunks",
        "fs",
        "filePath",
        "crypto",
        "fileBuffer",
        "path",
        "req",
        "distributeChunks",
        "chunks",
        "distributeChunk",
        "func",
        "chunk",
        "filename",
        "uploadedChunks",
        "uploadedPath",
        "File",
        "req",
        "uploadedChunks",
        "chunkSize",
        "fs",
        "filePath",
        "checkSum",
        "fileExtension",
        "file",
        "req",
        "Category",
        "typeOfFile",
        "file",
        "fs",
        "filePath",
        "Category",
        "typeOfFile",
        "res",
        "cat",
        "error",
        "error",
        "res",
        "app",
        "req",
        "res",
        "Category",
        "res",
        "retrieveChunkFromCloudinary",
        "publicId",
        "publicId",
        "cloudinary",
        "publicId",
        "result",
        "result",
        "result",
        "result",
        "axios",
        "fileUrl",
        "response",
        "error",
        "error",
        "error",
        "error",
        "retrieveChunkFromB2",
        "fileId",
        "b2",
        "b2",
        "Buffer",
        "response",
        "error",
        "error",
        "error",
        "error",
        "retrieveChunkFromUpstashRedis",
        "filename",
        "filename",
        "redis",
        "chunkKey",
        "Buffer",
        "chunk",
        "error",
        "error",
        "reassembleChunks",
        "file",
        "file",
        "service",
        "retrieveChunkFromCloudinary",
        "path",
        "service",
        "retrieveChunkFromB2",
        "path",
        "service",
        "retrieveChunkFromUpstashRedis",
        "path",
        "chunkPromises",
        "Buffer",
        "reassembledFile",
        "app",
        "req",
        "res",
        "req",
        "File",
        "fileId",
        "file",
        "res",
        "reassembleChunks",
        "file",
        "file",
        "contentType",
        "contentType",
        "contentType",
        "contentType",
        "res",
        "contentType",
        "file",
        "reassembledFile",
        "res",
        "reassembledFile",
        "error",
        "error",
        "res",
        "app",
        "req",
        "res",
        "req",
        "User",
        "User",
        "newUser",
        "password",
        "registeredUser",
        "req",
        "registeredUser",
        "err",
        "err",
        "err",
        "res",
        "err",
        "res",
        "registeredUser",
        "registeredUser",
        "registeredUser",
        "error",
        "error",
        "res",
        "error",
        "app",
        "req",
        "res",
        "next",
        "passport",
        "err",
        "user",
        "info",
        "err",
        "res",
        "user",
        "res",
        "info",
        "req",
        "user",
        "err",
        "err",
        "res",
        "res",
        "req",
        "res",
        "next",
        "app",
        "req",
        "res",
        "req",
        "res",
        "req",
        "res",
        "app",
        "req",
        "res",
        "req",
        "err",
        "err",
        "res",
        "err",
        "res",
        "app",
        "req",
        "res",
        "res",
        "path",
        "__dirname",
        "app"
    ],
    "literals": [
        "\"production\"",
        "'dotenv'",
        "\"express\"",
        "\"mongoose\"",
        "'cors'",
        "'express-session'",
        "'passport'",
        "\"passport-local\"",
        "\"./models/User\"",
        "\"multer\"",
        "'fs'",
        "'crypto'",
        "'path'",
        "\"./models/File\"",
        "'cloudinary'",
        "'backblaze-b2'",
        "'axios'",
        "'@upstash/redis'",
        "\"./models/Category\"",
        "'stream'",
        "'uploads/'",
        "'http://localhost:5173'",
        "'../Front-End/dist'",
        "'Connected to MongoDB Atlas'",
        "'Connection error'",
        "'raw'",
        "'Error uploading to Cloudinary:'",
        "'Failed to upload chunk to Cloudinary'",
        "'application/octet-stream'",
        "'.mp4'",
        "'video/mp4'",
        "'.avi'",
        "'video/x-msvideo'",
        "'.mkv'",
        "'video/x-matroska'",
        "'.mov'",
        "'video/quicktime'",
        "'Authorization'",
        "'Content-Type'",
        "'X-Bz-File-Name'",
        "'X-Bz-Content-Sha1'",
        "'sha1'",
        "'hex'",
        "'Error uploading to Backblaze B2:'",
        "'Failed to upload chunk to Backblaze B2'",
        "chunk:${filename}",
        "'Error uploading to Upstash Redis:'",
        "'Failed to upload chunk to Upstash Redis'",
        "'Cloudinary'",
        "'Backblaze B2'",
        "'Upstash Redis'",
        "chunk_${globalChunkIndex++}",
        "\"/api/uploadFile\"",
        "'fileUpload'",
        "'sha256'",
        "'hex'",
        "'files'",
        "'File uploaded and chunked successfully'",
        "'Error during upload:'",
        "'Error during file upload'",
        "'/api/getCategory'",
        "\"files\"",
        "Retrieving chunk from Cloudinary for public_id: ${publicId}",
        "'raw'",
        "'Cloudinary result:'",
        "'Chunk not found in Cloudinary'",
        "'arraybuffer'",
        "'Error retrieving from Cloudinary:'",
        "'Error retrieving from Cloudinary:'",
        "'Failed to retrieve chunk from Cloudinary'",
        "'Error retrieving from Backblaze B2:'",
        "'Failed to retrieve chunk from Backblaze B2'",
        "${filename}",
        "'Error retrieving from Upstash Redis:'",
        "'Failed to retrieve chunk from Upstash Redis'",
        "'Cloudinary'",
        "'Backblaze B2'",
        "'Upstash Redis'",
        "'/api/retrieveFile/:fileId'",
        "'File not found'",
        "'application/octet-stream'",
        "'.pdf'",
        "'application/pdf'",
        "'.jpg'",
        "'.jpeg'",
        "'image/jpeg'",
        "'.png'",
        "'image/png'",
        "'.mp4'",
        "'video/mp4'",
        "'Content-Type'",
        "'Content-Disposition'",
        "attachment; filename=\"${file.name}\"",
        "'Content-Length'",
        "'Error retrieving file:'",
        "'Failed to retrieve file'",
        "'/api/signup'",
        "'Error during login:'",
        "'Login failed'",
        "\"You are  logged In after signup\"",
        "'Successful'",
        "'Error during registration:'",
        "'Failed'",
        "'/api/login'",
        "'local'",
        "'Internal server error'",
        "'Login failed'",
        "'Internal server error'",
        "'Login successful'",
        "'/api/isLoggedIn'",
        "\"You are logged In\"",
        "\"You are not logged in\"",
        "'/api/logout'",
        "'Logout failed'",
        "'Logout successful'",
        "'*'",
        "'../Front-End/dist'",
        "'index.html'",
        "\"App is listening\""
    ],
    "variables": [
        "express",
        "mongoose",
        "cors",
        "session",
        "passport",
        "LocalStrategy",
        "User",
        "multer",
        "fs",
        "crypto",
        "path",
        "File",
        "cloudinary",
        "B2",
        "axios",
        "Category",
        "app",
        "upload",
        "redis",
        "sessionOptions",
        "dburl",
        "b2",
        "b2BucketId",
        "splitFileIntoChunks",
        "fileBuffer",
        "chunks",
        "currentIndex",
        "chunk",
        "uploadChunkToCloudinary",
        "stream",
        "result",
        "uploadChunkToB2",
        "uploadUrlResponse",
        "uploadUrl",
        "authorizationToken",
        "ext",
        "contentType",
        "encodedFileName",
        "response",
        "uploadChunkToUpstashRedis",
        "chunkKey",
        "globalChunkIndex",
        "distributeChunks",
        "services",
        "service",
        "filename",
        "filePath",
        "chunkSize",
        "chunks",
        "fileBuffer",
        "checkSum",
        "fileExtension",
        "distributeChunk",
        "uploadedChunks",
        "uploadedPath",
        "file",
        "typeOfFile",
        "cat",
        "data",
        "retrieveChunkFromCloudinary",
        "result",
        "fileUrl",
        "response",
        "retrieveChunkFromB2",
        "response",
        "retrieveChunkFromUpstashRedis",
        "chunkKey",
        "chunk",
        "reassembleChunks",
        "chunkPromises",
        "reassembledFile",
        "fileId",
        "file",
        "reassembledFile",
        "contentType",
        "newUser",
        "registeredUser"
    ],
    "comments": [
        "Upstash Redis configuration",
        "Adjust path as necessary",
        "CLOUDINARY",
        "BACKBLAZE B2",
        "Function to split file into chunks",
        "Store this in your database",
        "Log the full error object",
        "Default",
        "Function to upload chunk to Upstash Redis",
        "Return the key for later retrieval",
        "Function to distribute chunks to different services",
        "Increment the global counter for each chunk",
        "---------------------",
        "Sequential upload of chunks",
        "FILE RETRIEVAL",
        "Retrieve resource metadata from Cloudinary",
        "Debugging the result",
        "Fetch the actual file content from the secure URL",
        "Enhanced error handling",
        "Ensure authorization",
        "File content",
        "Convert chunk to Buffer for reassembly",
        "---------------------------------------------",
        "Wait for all chunk promises to resolve",
        "Set the appropriate content type based on the file extension",
        "Default",
        "Add other cases as needed",
        "'Content-Disposition': `attachment; filename=\"${file.name}${file.fileExtension}\"`, // Include file extension",
        "Using req.login as a Promise",
        "Send response here after successful login",
        "Adjust path as necessary"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}