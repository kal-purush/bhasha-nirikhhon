{
    "identifiers": [
        "greenfoot",
        "f",
        "l",
        "r",
        "s",
        "firstName",
        "f",
        "lastName",
        "l",
        "mySeatX",
        "r",
        "mySeatY",
        "s",
        "portraitFile",
        "f",
        "toLowerCase",
        "l",
        "toLowerCase",
        "standingFile",
        "firstName",
        "toLowerCase",
        "lastName",
        "toLowerCase",
        "soundFile",
        "f",
        "toLowerCase",
        "l",
        "toLowerCase",
        "setImage",
        "portraitFile",
        "sitting",
        "firstName",
        "lastName",
        "mySeatX",
        "mySeatY",
        "portraitFile",
        "firstName",
        "toLowerCase",
        "lastName",
        "toLowerCase",
        "standingFile",
        "firstName",
        "toLowerCase",
        "lastName",
        "toLowerCase",
        "soundFile",
        "firstName",
        "toLowerCase",
        "lastName",
        "toLowerCase",
        "setImage",
        "sitting",
        "Greenfoot",
        "mouseClicked",
        "sitting",
        "setImage",
        "getName",
        "sayName",
        "myHobby",
        "circleClass",
        "sitDown",
        "firstName",
        "lastName",
        "setLocation",
        "Greenfoot",
        "delay",
        "i",
        "i",
        "i",
        "setLocation",
        "i",
        "Greenfoot",
        "delay",
        "i",
        "i",
        "i",
        "setLocation",
        "i",
        "Greenfoot",
        "delay",
        "i",
        "i",
        "i",
        "setLocation",
        "i",
        "Greenfoot",
        "delay",
        "i",
        "i",
        "i",
        "setLocation",
        "i",
        "Greenfoot",
        "delay",
        "Greenfoot",
        "delay",
        "returnToSeat",
        "s",
        "s"
    ],
    "literals": [
        "\".jpg\"",
        "\"-standing.jpg\"",
        "\".wav\"",
        "\"Arpit\"",
        "\"Jena\"",
        "\".jpg\"",
        "\"-standing.jpg\"",
        "\".wav\"",
        "\"arpitsitting.png\"",
        "\"arpitstanding.png\"",
        "\"\"",
        "\"arpitnoise.mp3\"",
        "\"I like to go to the gym\"",
        "\"My name is \"",
        "\" \""
    ],
    "variables": [],
    "comments": [
        "(World, Actor, GreenfootImage, Greenfoot and MouseInfo)",
        "Make sure to name your image files firstlast.jpg, all lowercase!!!",
        "Make sure to name your sound files firstlast.wav, all lowercase!!!",
        "imgFile=firstName.toLowerCase()+ lastName.toLowerCase()+\".jpg\";",
        "Add your action code here.",
        "if (sitting){",
        "Print a blank line to create space between any student output.",
        "Create a \"special method for your class and put the call here.  You can twirl your image, resize it, move it around, change transparancy, or a",
        "combination of all of those types of actions, or more. Make sure to save the original image if you manipulate it, so that you can put it back.",
        "Call the sitDown() method to move back  to your seat",
        "Kilgore Trount's special method... Please write one of your own. You can use this, but please modify it and be creative.",
        "move right",
        "move back",
        "move left",
        "move Forward"
    ],
    "docstrings": [
        "* The ArpitJena class can be used as a model for your own class that represents you and your seating location in AP CSA\n * \n * @author Mr. Kaehms\n * @version 2.0 Aug 13, 2019\n * @version 3.0 July 21, 2020",
        "* Constructor for the ArpitJena class.\n     * Constructors are special methods with the same exact name as the class name.  \n     * Constructors to not have return types.\n     * Constructors can be overloaded. This means we can call a constructor with different sets of parameter\n     *  lists to initalize for different conditions (depending on what constructors have been written.\n     * @param String f (firstname)\n     * @param String l (lastname)\n     * @param int r (row of seating arrangement)\n     * @param int s (seat number within row seating arrangement)\n     *",
        "* Default constructor, if you don't pass in a name and seating location\n     * Pay attention to how the row and seat variables set the location of the image.  1,1 is the first cell in the upper left\n     * of the classroom.",
        "* Act - do whatever the ArpitJena actor wants to do. This method is called whenever\n     * the 'Act' or 'Run' button gets pressed in the environment.",
        "* Prints the first and last name to the console",
        "* This method needs to allow the user to interact with the student through a question and answer interface, and provide\n     * some mechanism that allows the student to sit down once the Q&A session ends.  You can use this basic model, or come up\n     * with some additional class and object that represents a blackboard, or a talking cartoon bubble etc. If you provide extra\n     * classes, make sure to fully document so other students can use the same interface.",
        "* This is a local method specific to the ArpitJena class used to animate the character once the image is clicked on.\n     * You should write your own methods to perform your own animation for your character/avatar.",
        "* myHobby is one of the interfaces provided.  \n     * An interface is just a contract for the methods that you will implement in your code.  The College Board no longer\n     * tests on abstract classes and interfaces, but it is good to know about them"
    ],
    "functions": [
        "ArpitJena",
        "ArpitJena",
        "act",
        "getName",
        "circleClass",
        "myHobby"
    ],
    "classes": [
        "ArpitJena"
    ]
}