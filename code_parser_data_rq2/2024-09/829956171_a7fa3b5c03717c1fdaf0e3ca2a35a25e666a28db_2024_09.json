{
    "identifiers": [
        "top",
        "cutexingluo",
        "tools",
        "basepackage",
        "top",
        "cutexingluo",
        "tools",
        "basepackage",
        "baseimpl",
        "XTAround",
        "java",
        "util",
        "concurrent",
        "Callable",
        "java",
        "util",
        "Consumer",
        "java",
        "util",
        "java",
        "util",
        "Supplier",
        "BaseCallableSupplier",
        "inCatch",
        "inCatch",
        "getCatchSupplier",
        "e",
        "e",
        "inCatch",
        "getCatchSupplier",
        "inCatch",
        "get",
        "inCatch",
        "getCatchRetSupplier",
        "inCatch",
        "get",
        "canRunTask",
        "inCatch",
        "XTAround",
        "getTrySupplierByCallable",
        "getCallable",
        "canRunTask",
        "inCatch",
        "canRunTask",
        "inCatch",
        "XTAround",
        "getTryCallable",
        "getCallable",
        "canRunTask",
        "inCatch",
        "canRunTask",
        "inCatch",
        "XTAround",
        "getTryRetSupplierByCallable",
        "getCallable",
        "canRunTask",
        "inCatch",
        "canRunTask",
        "inCatch",
        "XTAround",
        "getTryRetCallable",
        "getCallable",
        "canRunTask",
        "inCatch"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "---------------------inner------------------------",
        "---------------------inner-run------------------------"
    ],
    "docstrings": [
        "* Callable Supplier 公用方法接口\n *\n * @author XingTian\n * @version 1.0.0\n * @date 2024/9/27 17:28\n * @since 1.1.5",
        "* 得到 Supplier",
        "* 得到 Supplier\n     *\n     * @param inCatch 异常处理处理",
        "* 得到 Supplier\n     *\n     * @param inCatch 异常处理处理, 返回值",
        "* 得到 Supplier\n     *\n     * <p>所有异常封装为 RuntimeException , 并抛出</p>",
        "* 得到 Callable",
        "* 得到 Callable\n     *\n     * @param inCatch 异常处理处理",
        "* 得到 Callable\n     *\n     * @param inCatch 异常处理处理, 返回值",
        "* try-catch 包围 执行方法\n     *\n     * @param canRunTask 是否可以运行任务\n     * @param inCatch    捕获异常\n     * @since 1.0.4",
        "* try-catch 包围 执行方法\n     *\n     * @param canRunTask 是否可以运行任务\n     * @param inCatch    捕获异常\n     * @since 1.0.4",
        "* try-catch 包围 执行方法\n     *\n     * @param canRunTask 是否可以运行任务\n     * @param inCatch    捕获异常\n     * @since 1.1.5",
        "* try-catch 包围 执行方法\n     *\n     * @param canRunTask 是否可以运行任务\n     * @param inCatch    捕获异常\n     * @since 1.1.5"
    ],
    "functions": [
        "getSupplier",
        "getCatchSupplier",
        "getCatchRetSupplier",
        "getSupplierRuntime",
        "getCallable",
        "getCatchCallable",
        "getCatchRetCallable",
        "getTrySupplier",
        "getTryCallable",
        "getTryRetSupplier",
        "getTryRetCallable"
    ],
    "classes": []
}