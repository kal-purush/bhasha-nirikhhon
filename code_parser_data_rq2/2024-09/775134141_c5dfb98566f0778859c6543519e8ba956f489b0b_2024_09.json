{
    "identifiers": [
        "POST",
        "NextRequest",
        "ServerError",
        "serverContainer",
        "saveActualImplementation",
        "Builder",
        "SERVER_SERVICE_KEYS",
        "Auth",
        "User",
        "UserRepository",
        "VoterRepository",
        "UserType",
        "AuthError",
        "describe",
        "saveActualImplementation",
        "serverContainer",
        "it",
        "UserType",
        "jest",
        "jest",
        "jest",
        "serverContainer",
        "key",
        "key",
        "SERVER_SERVICE_KEYS",
        "Builder",
        "user",
        "key",
        "SERVER_SERVICE_KEYS",
        "Builder",
        "user",
        "awardAndUpdateVoterRegistrationBadgeAndAction",
        "key",
        "SERVER_SERVICE_KEYS",
        "Builder",
        "insertVoterRegistrationInfo",
        "getActualService",
        "key",
        "NextRequest",
        "registerBody",
        "POST",
        "request",
        "expect",
        "response",
        "containerSpy",
        "it",
        "jest",
        "serverContainer",
        "key",
        "key",
        "SERVER_SERVICE_KEYS",
        "Builder",
        "getActualService",
        "key",
        "NextRequest",
        "registerBody",
        "POST",
        "request",
        "expect",
        "response",
        "containerSpy",
        "it",
        "UserType",
        "jest",
        "serverContainer",
        "key",
        "key",
        "SERVER_SERVICE_KEYS",
        "Builder",
        "user",
        "key",
        "SERVER_SERVICE_KEYS",
        "Builder",
        "ServerError",
        "getActualService",
        "key",
        "NextRequest",
        "registerBody",
        "POST",
        "request",
        "expect",
        "response",
        "response",
        "expect",
        "responseBody",
        "containerSpy",
        "it",
        "UserType",
        "jest",
        "serverContainer",
        "key",
        "key",
        "SERVER_SERVICE_KEYS",
        "Builder",
        "user",
        "getActualService",
        "key",
        "NextRequest",
        "registerBody",
        "POST",
        "request",
        "expect",
        "response",
        "containerSpy",
        "it",
        "UserType",
        "jest",
        "serverContainer",
        "key",
        "key",
        "SERVER_SERVICE_KEYS",
        "Builder",
        "user",
        "getActualService",
        "key",
        "NextRequest",
        "registerBody",
        "POST",
        "request",
        "expect",
        "response",
        "containerSpy"
    ],
    "literals": [
        "'@/app/api/register-to-vote/route'",
        "'next/server'",
        "'@/errors/server-error'",
        "'@/services/server/container'",
        "'@/utils/test/save-actual-implementation'",
        "'builder-pattern'",
        "'@/services/server/keys'",
        "'@/services/server/auth/auth'",
        "'@/model/types/user'",
        "'@/services/server/user-repository/user-repository'",
        "'@/services/server/voter-registration-repository/voter-registration'",
        "'luxon'",
        "'@/model/enums/user-type'",
        "'@supabase/supabase-js'",
        "'POST'",
        "'get'",
        "'takes voter registration information, calls /registertovote api, updates completed task, awards badge, and updates user'",
        "'0'",
        "'user@example.com'",
        "'User'",
        "'0'",
        "'test-invite-code'",
        "'get'",
        "'0'",
        "'FL'",
        "'Davie'",
        "'2161 SW 152 Ter'",
        "'John'",
        "'Doe'",
        "'09/20/2003'",
        "'33027'",
        "'test@me.com'",
        "'yes'",
        "'yes'",
        "'Democrat'",
        "'123'",
        "'https://challenge.8by8.us/register-to-vote'",
        "'POST'",
        "'calls the route with a null user'",
        "'get'",
        "'0'",
        "'FL'",
        "'Davie'",
        "'2161 SW 152 Ter'",
        "'John'",
        "'Doe'",
        "'09/20/2003'",
        "'33027'",
        "'test@me.come'",
        "'yes'",
        "'yes'",
        "'Democrat'",
        "'123'",
        "'https://challenge.8by8.us/register-to-vote'",
        "'POST'",
        "'calls the route and throws a server error'",
        "'0'",
        "'user@example.com'",
        "'User'",
        "'0'",
        "'test-invite-code'",
        "'get'",
        "'User already exists.'",
        "'0'",
        "'FL'",
        "'Davie'",
        "'2161 SW 152 Ter'",
        "'John'",
        "'Doe'",
        "'09/20/2003'",
        "'33027'",
        "'test@me.com'",
        "'yes'",
        "'yes'",
        "'Democrat'",
        "'123'",
        "'https://challenge.8by8.us/register-to-vote'",
        "'POST'",
        "'User already exists.'",
        "'calls the route with faulty data in the register body, causing the /registertovote api fetch to fail'",
        "'0'",
        "'user@example.com'",
        "'User'",
        "'0'",
        "'test-invite-code'",
        "'get'",
        "'0'",
        "'FL'",
        "'Davie'",
        "'2161 SW 152 Ter'",
        "'John'",
        "'Doe'",
        "'09/20/2003'",
        "'33027'",
        "'test@me.come'",
        "'InvalidData'",
        "'InvalidData'",
        "'Democrat'",
        "'123'",
        "'https://challenge.8by8.us/register-to-vote'",
        "'POST'",
        "'calls the route with invalid register body, causing the parsing to fail'",
        "'0'",
        "'user@example.com'",
        "'User'",
        "'0'",
        "'test-invite-code'",
        "'get'",
        "'0'",
        "'Davie'",
        "'2161 SW 152 Ter'",
        "'John'",
        "'Doe'",
        "'09/20/2003'",
        "'33027'",
        "'test@me.come'",
        "'InvalidData'",
        "'InvalidData'",
        "'Democrat'",
        "'123'",
        "'https://challenge.8by8.us/register-to-vote'",
        "'POST'"
    ],
    "variables": [
        "getActualService",
        "user",
        "insertVoterRegistrationInfo",
        "awardAndUpdateVoterRegistrationBadgeAndAction",
        "containerSpy",
        "registerBody",
        "request",
        "response",
        "containerSpy",
        "registerBody",
        "request",
        "response",
        "user",
        "containerSpy",
        "registerBody",
        "request",
        "response",
        "responseBody",
        "user",
        "containerSpy",
        "registerBody",
        "request",
        "response",
        "user",
        "containerSpy",
        "registerBody",
        "request",
        "response"
    ],
    "comments": [
        "mising state key"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}