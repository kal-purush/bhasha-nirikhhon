{
    "identifiers": [
        "unittest",
        "unittest",
        "mock",
        "patch",
        "MagicMock",
        "src",
        "data_fetcher",
        "EBirdDataFetcher",
        "src",
        "data_processor",
        "EBirdDataProcessor",
        "src",
        "visualizer",
        "EBirdVisualizer",
        "src",
        "text_formatter",
        "TextFormatter",
        "unittest",
        "TestCase",
        "patch",
        "patch",
        "patch",
        "patch",
        "patch",
        "patch",
        "patch",
        "mock_expander",
        "mock_write",
        "mock_header",
        "mock_pyplot",
        "mock_button",
        "mock_selectbox",
        "mock_text_input",
        "mock_expander",
        "return_value",
        "__enter__",
        "MagicMock",
        "patch",
        "EBirdDataFetcher",
        "mock_get_observations",
        "patch",
        "EBirdDataProcessor",
        "mock_process",
        "MagicMock",
        "patch",
        "EBirdVisualizer",
        "mock_plot",
        "MagicMock",
        "patch",
        "TextFormatter",
        "mock_descriptions",
        "src",
        "app",
        "mock_get_observations",
        "assert_called_once_with",
        "region_code",
        "mock_process",
        "assert_called_once",
        "mock_plot",
        "assert_called_once",
        "mock_descriptions",
        "assert_called_once",
        "mock_pyplot",
        "assert_called",
        "mock_header",
        "assert_called",
        "unittest",
        "main"
    ],
    "literals": [
        "\"streamlit.text_input\"",
        "\"streamlit.selectbox\"",
        "\"streamlit.button\"",
        "\"streamlit.pyplot\"",
        "\"streamlit.header\"",
        "\"streamlit.write\"",
        "\"streamlit.expander\"",
        "\"fake_ebird_api_key\"",
        "\"fake_openai_api_key\"",
        "\"US-NY\"",
        "\"get_recent_observations\"",
        "\"comName\"",
        "\"American Robin\"",
        "\"howMany\"",
        "\"comName\"",
        "\"Blue Jay\"",
        "\"howMany\"",
        "\"process_observations\"",
        "\"plot_recent_observations\"",
        "\"get_species_descriptions\"",
        "\"American Robin\"",
        "\"A common North American bird.\"",
        "\"Blue Jay\"",
        "\"A colorful bird known for its intelligence.\"",
        "\"US-NY\"",
        "\"__main__\""
    ],
    "variables": [
        "mock_text_input",
        "side_effect",
        "mock_selectbox",
        "return_value",
        "mock_button",
        "return_value",
        "return_value",
        "mock_get_observations",
        "return_value",
        "mock_process",
        "return_value",
        "mock_plot",
        "return_value",
        "mock_descriptions",
        "return_value"
    ],
    "comments": [
        "Mock user inputs",
        "Mock the data fetcher",
        "Mock the data processor",
        "Mock the visualizer",
        "Mock the text formatter",
        "Import and run the app",
        "noqa",
        "Assert that the mocked functions were called"
    ],
    "docstrings": [],
    "functions": [
        "test_app_flow"
    ],
    "classes": [
        "TestApp"
    ]
}