{
    "identifiers": [
        "chromadb",
        "app",
        "server",
        "langgraph",
        "checkpoint",
        "sqlite",
        "SqliteSaver",
        "sqlite3",
        "langchain",
        "schema",
        "HumanMessage",
        "langchain_core",
        "messages",
        "HumanMessage",
        "langchain_community",
        "tools",
        "tavily_search",
        "TavilySearchResults",
        "os",
        "langgraph",
        "prebuilt",
        "create_react_agent",
        "getpass",
        "os",
        "langchain_core",
        "messages",
        "HumanMessage",
        "SystemMessage",
        "langchain_openai",
        "ChatOpenAI",
        "ChatOpenAI",
        "base_url",
        "api_key",
        "model",
        "json",
        "collections",
        "Counter",
        "file_path",
        "open",
        "file_path",
        "encoding",
        "file",
        "json",
        "load",
        "file",
        "data",
        "data",
        "Counter",
        "data",
        "word",
        "count",
        "word",
        "count",
        "word_counter",
        "items",
        "count",
        "sorted",
        "filtered_word_count",
        "items",
        "key",
        "x",
        "x",
        "reverse",
        "sorted_word_count",
        "word_count",
        "word",
        "count",
        "word_count",
        "formatted_output",
        "word",
        "count",
        "formatted_output",
        "load_json",
        "file_path",
        "count_word_frequency",
        "data",
        "format_word_frequency",
        "word_count",
        "data",
        "key",
        "value",
        "data",
        "items",
        "formatted_data",
        "key",
        "value",
        "formatted_data",
        "data",
        "entry",
        "data",
        "formatted_data",
        "entry",
        "entry",
        "formatted_data",
        "file_path",
        "open",
        "file_path",
        "encoding",
        "file",
        "json",
        "load",
        "file",
        "data",
        "load_json",
        "emotion_data_path",
        "load_json",
        "daily_comment_counts_path",
        "format_emotion_data",
        "emotion_data",
        "format_daily_comment_counts",
        "daily_comment_counts",
        "formatted_emotion_data",
        "formatted_daily_comments",
        "formatted_output",
        "final_output",
        "content",
        "HumanMessage",
        "content",
        "prompt",
        "model",
        "user_message",
        "response",
        "content",
        "report_maker",
        "final_output",
        "user_input",
        "chat_history",
        "join",
        "user",
        "bot",
        "user",
        "bot",
        "chat_history",
        "formatted_history",
        "user_input",
        "HumanMessage",
        "content",
        "prompt",
        "model",
        "user_message",
        "content",
        "chat_history",
        "append",
        "user_input",
        "ai_response",
        "chat_history",
        "ai_response",
        "gradio",
        "gr",
        "report_maker",
        "final_output",
        "gr",
        "Blocks",
        "gr",
        "Markdown",
        "gr",
        "Textbox",
        "label",
        "value",
        "initial_report",
        "lines",
        "gr",
        "Chatbot",
        "label",
        "height",
        "gr",
        "Textbox",
        "label",
        "placeholder",
        "gr",
        "Button",
        "gr",
        "State",
        "user_input",
        "chat_history",
        "continue_conversation",
        "user_input",
        "chat_history",
        "updated_history",
        "updated_history",
        "chat_button",
        "click",
        "on_continue_conversation",
        "inputs",
        "user_message_input",
        "chat_history",
        "outputs",
        "chatbot",
        "chat_history",
        "user_message_input",
        "launch",
        "gradio_interface"
    ],
    "literals": [
        "\"https://spark-api-open.xf-yun.com/v1\"",
        "\"your_api_key\"",
        "\"generalv3.5\"",
        "'r'",
        "'utf-8'",
        "\"词频统计结果：\\n\"",
        "f\"{word}：{count}\\n\"",
        "'sample.txt.washed.json'",
        "\"情绪评论统计：\\n\"",
        "f\"{key}：{value}\\n\"",
        "\"\\n每日评论统计：\\n\"",
        "f\"日期：{entry['date']}，评论数量：{entry['comment_count']}\\n\"",
        "'date'",
        "'comment_count'",
        "'r'",
        "'utf-8'",
        "'emotion_data(1).json'",
        "'daily_comment_counts(1).json'",
        "f'''\n    你是一个评论区分析助手，你将根据用户提供的评论统计数据、词频分析结果和关键词分析，为产品改进和市场策略提供建议。请根据用户提供的数据进行详细分析，并按照指定格式输出结果\n\n#格式：\n情绪分析结果：\n1、总体情绪分析\n2、正面情绪分析\n3、负面情绪分析\n4、中性情绪分析\n\n每日评论趋势分析：\n1、热点评论时间段\n2、评论量增加或减少的原因\n3、关键词分析：\n\n主要关键词：\n列出频率最高的关键词，并解释其背后的用户需求或关注点\n负面关键词：\n列出负面情绪中频率较高的关键词，并分析其对用户体验的影响\n\n产品建议：\n基于情绪分析的建议\n基于词频和关键词分析的建议\n综合建议\n\n#注意：\n不要输出情绪评论统计、每日评论数量、关键词数量，直接输出报告\n\n#示例输入：\n情绪评论统计：\n正面情绪评论数量：160\n负面情绪评论数量：35\n中性情绪评论数量：7\n\n每日评论统计：\n日期：2024-05-26，评论数量：2\n日期：2024-05-27，评论数量：4\n...\n（更多日期和评论数量）\n\n词频统计结果：\n喜欢：55\n内容：47\n包装：45\n发货：33\n...\n（更多词频统计）\n\n#示例输出：\n情绪分析结果：\n\n总体情绪分析：总体来说，评论区情绪以正面为主，占总评论量的70%以上，表明大多数用户对产品体验较为满意。\n正面情绪分析：正面评论主要集中在“喜欢”、“好看”、“值得”等关键词，说明用户对产品设计和价值感到满意。\n负面情绪分析：负面评论占比约为15%，主要涉及“发货”问题和“包装”质量等，表明在物流和包装方面存在一定的用户不满。\n中性情绪分析：中性评论数量较少，占总量的不到5%，可能表示一些用户对产品体验没有特别的感受或是持观望态度。\n每日评论趋势分析：\n\n热点评论时间段：7月7日至7月14日为评论高峰期，可能与产品活动或促销相关。\n评论量增加或减少的原因：7月7日的评论量激增，可能与当天的促销活动或新品发布相关；7月15日之后评论量有所下降，可能是活动结束或产品关注度减弱导致。\n关键词分析：\n\n主要关键词：\n\n“喜欢”（55次）：用户对产品的整体设计、使用体验感到满意，产品的视觉吸引力较强。\n“内容”（47次）：可能反映出用户对产品的实质内容（如说明书、附加资料等）的重视，表明需要继续丰富产品内容。\n“包装”（45次）：虽然高频出现，但其中夹杂了正面和负面的反馈，需要在包装设计和质量上作进一步改进。\n负面关键词：\n\n“发货”（33次）：与物流和交付时间相关的负面评论较多，需要加强供应链和物流管理，减少发货延迟。\n“瑕疵”（6次）：表明用户对产品质量有一定不满，可能涉及细节处理或材料问题，建议提高产品质量控制标准。\n产品建议：\n\n基于情绪分析的建议：\n加强物流环节的管理，减少发货延迟；优化包装质量，减少负面评论和用户不满。\n\n基于词频和关键词分析的建议：\n\n强化产品设计和内容质量，突出用户喜欢的设计元素和内容丰富度。\n解决负面情绪集中反映的问题，如提升包装质量和优化发货流程。\n综合建议：\n考虑在未来的促销活动中更好地利用用户的正面情绪反馈，扩大宣传力度；同时，针对用户反馈的负面意见（特别是物流和包装方面），制定相应的改进计划，以提升整体用户满意度。\n\n以下是输入\n'''",
        "\"\\n\"",
        "f\"用户: {user}\\nAI: {bot}\"",
        "f\"之前的聊天记录是：\\n{formatted_history}\\n你需要结合之前的聊天记录，回答的问题是：{user_input}\"",
        "\"这里是您的初始输入数据...\"",
        "\"### ❤AI报告\"",
        "\"生成的报告\"",
        "\"你还可以问我更多关于评论的问题\"",
        "\"你的问题\"",
        "\"在这里输入你的问题\"",
        "\"发送\"",
        "\"\""
    ],
    "variables": [
        "model",
        "data",
        "word_counter",
        "filtered_word_count",
        "sorted_word_count",
        "formatted_output",
        "file_path",
        "data",
        "word_count",
        "formatted_output",
        "formatted_data",
        "formatted_data",
        "data",
        "emotion_data_path",
        "daily_comment_counts_path",
        "emotion_data",
        "daily_comment_counts",
        "formatted_emotion_data",
        "formatted_daily_comments",
        "final_output",
        "prompt",
        "user_message",
        "response",
        "formatted_history",
        "prompt",
        "user_message",
        "ai_response",
        "initial_content",
        "initial_report",
        "report_output",
        "chatbot",
        "user_message_input",
        "chat_button",
        "chat_history",
        "updated_history",
        "ai_response"
    ],
    "comments": [
        "假设 HumanMessage 来自 langchain",
        "创建实例",
        "加载 JSON 文件内容到一个变量中",
        "统计词频并格式化输出，去掉词频小于4的词",
        "使用 Counter 统计词频",
        "过滤掉词频小于4的词",
        "将统计结果转换为按词频排序的列表",
        "将词频统计结果格式化为指定格式",
        "文件路径",
        "加载 JSON 数据",
        "统计词频",
        "格式化输出并保存到变量",
        "格式化数据的函数",
        "加载 JSON 文件内容到一个变量中",
        "Define the load_json function within this file as well.",
        "文件路径",
        "加载 JSON 数据",
        "格式化数据并保存在变量中",
        "格式化聊天记录为自然语言文本",
        "构建提示语句",
        "创建一个 HumanMessage 对象",
        "调用模型生成回复",
        "更新聊天记录",
        "返回更新后的聊天记录和 AI 的回复",
        "生成初始报告内容",
        "定义 Gradio 界面",
        "报告输出区域",
        "聊天区域",
        "全局变量：存储聊天历史记录",
        "继续对话",
        "设置事件处理",
        "启动 Gradio 界面",
        "运行界面"
    ],
    "docstrings": [
        "\"\"\"# 接入Langchain\"\"\"",
        "\"\"\"#数据处理\"\"\"",
        "\"\"\"# 生成报告\n获取：\n好评差评数量\n数据分析（浏览量）\n产品名称与描述\n关键词云\n\n\n输出：\n针对评论区的总结报告\n\n\"\"\"",
        "\"\"\"#多轮对话\"\"\"",
        "\"\"\"# 前端\"\"\""
    ],
    "functions": [
        "load_json",
        "count_word_frequency",
        "format_word_frequency",
        "format_emotion_data",
        "format_daily_comment_counts",
        "load_json",
        "report_maker",
        "continue_conversation",
        "gradio_interface",
        "on_continue_conversation"
    ],
    "classes": []
}