{
    "identifiers": [
        "os",
        "flask",
        "Flask",
        "render_template",
        "jsonify",
        "flask_socketio",
        "SocketIO",
        "emit",
        "numpy",
        "np",
        "pymongo",
        "MongoClient",
        "bson",
        "ObjectId",
        "logging",
        "dotenv",
        "load_dotenv",
        "load_dotenv",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "INFO",
        "Flask",
        "app",
        "config",
        "os",
        "getenv",
        "SocketIO",
        "app",
        "cors_allowed_origins",
        "MongoClient",
        "os",
        "getenv",
        "client",
        "os",
        "getenv",
        "db",
        "os",
        "getenv",
        "app",
        "route",
        "render_template",
        "socketio",
        "on",
        "data",
        "max",
        "data",
        "data",
        "data",
        "np",
        "random",
        "randint",
        "min_val",
        "max_val",
        "size",
        "size",
        "collection",
        "insert_one",
        "random_array",
        "tolist",
        "inserted_id",
        "emit",
        "random_array",
        "tolist",
        "array_id",
        "size",
        "broadcast",
        "e",
        "logging",
        "error",
        "e",
        "emit",
        "e",
        "app",
        "route",
        "methods",
        "collection",
        "find",
        "jsonify",
        "arr",
        "arr",
        "arrays",
        "e",
        "logging",
        "error",
        "e",
        "jsonify",
        "e",
        "app",
        "route",
        "methods",
        "array_id",
        "collection",
        "find_one",
        "ObjectId",
        "array_id",
        "array",
        "jsonify",
        "array",
        "len",
        "array",
        "jsonify",
        "e",
        "logging",
        "error",
        "array_id",
        "e",
        "jsonify",
        "e",
        "os",
        "getenv",
        "socketio",
        "run",
        "app",
        "debug",
        "os",
        "getenv",
        "lower",
        "port",
        "port"
    ],
    "literals": [
        "'SECRET_KEY'",
        "'SECRET_KEY'",
        "'default_secret_key'",
        "\"*\"",
        "'MONGO_URI'",
        "'mongodb://localhost:27017/'",
        "'DB_NAME'",
        "'random_arrays'",
        "'COLLECTION_NAME'",
        "'arrays'",
        "'/'",
        "'index.html'",
        "'generate_array'",
        "'size'",
        "'min'",
        "'max'",
        "'array'",
        "'new_array'",
        "'array'",
        "'id'",
        "'total_size'",
        "f\"Error generating array: {str(e)}\"",
        "'error'",
        "'message'",
        "'/get_arrays'",
        "'GET'",
        "'_id'",
        "'_id'",
        "f\"Error retrieving array IDs: {str(e)}\"",
        "'error'",
        "'/get_array/<array_id>'",
        "'GET'",
        "'_id'",
        "'array'",
        "'array'",
        "'total_size'",
        "'array'",
        "'error'",
        "'Array not found'",
        "f\"Error retrieving array {array_id}: {str(e)}\"",
        "'error'",
        "'__main__'",
        "'PORT'",
        "'DEBUG'",
        "'False'",
        "'true'"
    ],
    "variables": [
        "app",
        "socketio",
        "client",
        "db",
        "collection",
        "size",
        "min_val",
        "max_val",
        "random_array",
        "array_id",
        "arrays",
        "array",
        "port"
    ],
    "comments": [
        "Load environment variables and set up logging",
        "Initialize Flask app and SocketIO",
        "MongoDB connection"
    ],
    "docstrings": [
        "\"\"\"Render the main page.\"\"\"",
        "\"\"\"Generate a random array and broadcast it to all clients.\"\"\"",
        "\"\"\"Retrieve all array IDs from the database.\"\"\"",
        "\"\"\"Retrieve a specific array from the database.\"\"\""
    ],
    "functions": [
        "index",
        "generate_array",
        "get_arrays",
        "get_array"
    ],
    "classes": []
}