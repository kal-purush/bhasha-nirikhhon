{
    "identifiers": [
        "globby",
        "Options",
        "os",
        "path",
        "arePathsEqual",
        "dirPath",
        "recursive",
        "limit",
        "path",
        "dirPath",
        "process",
        "path",
        "absolutePath",
        "arePathsEqual",
        "absolutePath",
        "root",
        "isRoot",
        "root",
        "os",
        "arePathsEqual",
        "absolutePath",
        "homeDir",
        "isHomeDir",
        "homeDir",
        "dir",
        "dir",
        "dirPath",
        "recursive",
        "recursive",
        "dirsToIgnore",
        "recursive",
        "globbyLevelByLevel",
        "limit",
        "options",
        "globby",
        "options",
        "limit",
        "files",
        "files",
        "limit",
        "limit",
        "options",
        "globbingProcess",
        "queue",
        "results",
        "limit",
        "queue",
        "globby",
        "pattern",
        "options",
        "file",
        "filesAtLevel",
        "results",
        "limit",
        "results",
        "file",
        "file",
        "queue",
        "file",
        "results",
        "limit",
        "_",
        "reject",
        "setTimeout",
        "reject",
        "globbingProcess",
        "timeoutPromise",
        "error",
        "results"
    ],
    "literals": [
        "\"globby\"",
        "\"os\"",
        "\"path\"",
        "\"../../utils/path-helpers\"",
        "string",
        "string",
        "\"win32\"",
        "\"/\"",
        "\"node_modules\"",
        "\"__pycache__\"",
        "\"env\"",
        "\"venv\"",
        "\"target/dependency\"",
        "\"build/dependencies\"",
        "\"dist\"",
        "\"out\"",
        "\"bundle\"",
        "\"vendor\"",
        "\"tmp\"",
        "\"temp\"",
        "\"deps\"",
        "\"pkg\"",
        "\"Pods\"",
        "\".*\"",
        "**/${dir}/**",
        "\"*\"",
        "string",
        "string",
        "\"*\"",
        "\"/\"",
        "${file}*",
        "string",
        "\"Globbing timeout\"",
        "\"Globbing timed out, returning partial results\""
    ],
    "variables": [
        "absolutePath",
        "root",
        "isRoot",
        "homeDir",
        "isHomeDir",
        "dirsToIgnore",
        "options",
        "files",
        "results",
        "queue",
        "globbingProcess",
        "pattern",
        "filesAtLevel",
        "timeoutPromise"
    ],
    "comments": [
        "Do not allow listing files in root or home directory, which Claude tends to want to do when the user's prompt is vague.",
        "'!**/.*' excludes hidden directories, while '!**/.*/**' excludes only their contents. This way we are at least aware of the existence of hidden directories.",
        "do not ignore hidden files/directories",
        "Append a / on any directories matched (/ is used on windows as well, so dont use path.sep)",
        "globby ignores any files that are gitignored",
        "just in case there is no gitignore, we ignore sensible defaults",
        "true by default, false means it will list directories on their own too",
        "Breadth-first traversal of directory structure level by level up to a limit:\n   - Queue-based approach ensures proper breadth-first traversal\n   - Processes directory patterns level by level\n   - Captures a representative sample of the directory structure up to the limit\n   - Minimizes risk of missing deeply nested files\n\n- Notes:\n   - Relies on globby to mark directories with /\n   - Potential for loops if symbolic links reference back to parent (we could use followSymlinks: false but that may not be ideal for some projects and it's pointless if they're not using symlinks wrong)\n   - Timeout mechanism prevents infinite loops",
        "Timeout after 10 seconds and return partial results"
    ],
    "docstrings": [
        "* globs all files in one dir, ** globs files in nested directories"
    ],
    "functions": [
        "listFiles",
        "globbyLevelByLevel"
    ],
    "classes": []
}