{
    "identifiers": [
        "time",
        "typing",
        "Optional",
        "psycopg2",
        "sqlalchemy",
        "psycopg2",
        "extras",
        "execute_values",
        "sqlalchemy",
        "create_engine",
        "NullPool",
        "text",
        "Optional",
        "sqlalchemy",
        "engine",
        "Engine",
        "connect_str",
        "engine",
        "create_engine",
        "connect_str",
        "poolclass",
        "NullPool",
        "psycopg2",
        "OperationalError",
        "e",
        "format",
        "e",
        "time",
        "sleep",
        "db_conn",
        "donors",
        "d",
        "editor_id",
        "d",
        "donors",
        "db_conn",
        "connection",
        "cursor",
        "cursor",
        "execute_values",
        "cursor",
        "query",
        "row_id",
        "row_id",
        "musicbrainz_row_ids",
        "fetch",
        "r",
        "r",
        "r",
        "r",
        "results",
        "donor",
        "donors",
        "donor",
        "amount",
        "donor",
        "currency",
        "donor",
        "payment_date",
        "isoformat",
        "lb_users",
        "get",
        "donor",
        "editor_id",
        "user",
        "user",
        "user",
        "donor",
        "editor_name",
        "donors_with_flair",
        "append",
        "donation",
        "donors_with_flair",
        "meb_conn",
        "db_conn",
        "count",
        "offset",
        "meb_conn",
        "execute",
        "text",
        "query",
        "count",
        "offset",
        "results",
        "all",
        "get_flairs_for_donors",
        "db_conn",
        "donors",
        "meb_conn",
        "db_conn",
        "count",
        "offset",
        "meb_conn",
        "execute",
        "text",
        "query",
        "count",
        "offset",
        "results",
        "all",
        "get_flairs_for_donors",
        "db_conn",
        "donors",
        "meb_conn",
        "musicbrainz_row_id",
        "meb_conn",
        "execute",
        "text",
        "query",
        "musicbrainz_row_id",
        "result",
        "first",
        "row",
        "row",
        "is_donor"
    ],
    "literals": [
        "\"Couldn't establish connection to db: {}\"",
        "\"Sleeping 2 seconds and trying again...\"",
        "\"musicbrainz_id\"",
        "\"flair\"",
        "\"amount\"",
        "\"currency\"",
        "\"donation_time\"",
        "\"is_listenbrainz_user\"",
        "\"musicbrainz_id\"",
        "\"musicbrainz_id\"",
        "\"flair\"",
        "\"flair\"",
        "\"is_listenbrainz_user\"",
        "\"musicbrainz_id\"",
        "\"flair\"",
        "\"count\"",
        "\"offset\"",
        "\"count\"",
        "\"offset\"",
        "\"SELECT EXISTS(SELECT 1 FROM payment WHERE editor_id = :editor_id) AS is_donor\"",
        "\"editor_id\""
    ],
    "variables": [
        "engine",
        "engine",
        "musicbrainz_row_ids",
        "query",
        "results",
        "lb_users",
        "donors_with_flair",
        "donation",
        "user",
        "donation",
        "donation",
        "donation",
        "donation",
        "donation",
        "donation",
        "query",
        "results",
        "donors",
        "query",
        "results",
        "donors",
        "query",
        "result",
        "row"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"Initializes database connection using the specified Flask app.\"\"\"",
        "\"\"\" Get flairs for donors. \"\"\"",
        "\"\"\"\n            SELECT u.musicbrainz_row_id\n                 , u.musicbrainz_id\n                 , us.flair\n              FROM \"user\" u\n         LEFT JOIN user_setting us\n                ON us.user_id = u.id\n             WHERE EXISTS(\n                    SELECT 1\n                      FROM (VALUES %s) AS t(editor_id)\n                     WHERE u.musicbrainz_row_id = t.editor_id \n             )\n        \"\"\"",
        "\"\"\" Get a list of recent donors with their flairs \"\"\"",
        "\"\"\"\n        SELECT editor_name\n             , editor_id\n             , amount\n             , currency\n             , payment_date\n          FROM payment\n         WHERE editor_id IS NOT NULL\n           AND is_donation = 't'\n      ORDER BY payment_date DESC\n         LIMIT :count\n        OFFSET :offset\n    \"\"\"",
        "\"\"\" Get a list of biggest donors with their flairs \"\"\"",
        "\"\"\"\n        SELECT editor_name\n             , editor_id\n             , currency\n             , sum(amount) as amount\n             , max(payment_date) AS payment_date\n          FROM payment\n         WHERE editor_id IS NOT NULL\n           AND is_donation = 't'\n      GROUP BY editor_name\n             , editor_id\n             , currency\n      ORDER BY amount DESC\n         LIMIT :count\n        OFFSET :offset\n    \"\"\"",
        "\"\"\" Check if the user with the given musicbrainz row id is a donor \"\"\""
    ],
    "functions": [
        "init_meb_db_connection",
        "get_flairs_for_donors",
        "get_recent_donors",
        "get_biggest_donors",
        "is_user_donor"
    ],
    "classes": []
}