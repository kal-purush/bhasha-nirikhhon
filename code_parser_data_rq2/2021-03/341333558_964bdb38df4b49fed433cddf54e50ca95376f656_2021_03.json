{
    "identifiers": [
        "KnexModuleOptions",
        "Knex",
        "DEFAULT_CONNECTION_NAME",
        "Observable",
        "delay",
        "retryWhen",
        "scan",
        "v4",
        "uuid",
        "Logger",
        "Type",
        "CircularDependencyException",
        "Logger",
        "entity",
        "connection",
        "DEFAULT_CONNECTION_NAME",
        "entity",
        "entity",
        "CircularDependencyException",
        "getConnectionPrefix",
        "connection",
        "connectionPrefix",
        "entity",
        "connection",
        "DEFAULT_CONNECTION_NAME",
        "DEFAULT_CONNECTION_NAME",
        "connection",
        "Knex",
        "connection",
        "connection",
        "DEFAULT_CONNECTION_NAME",
        "connection",
        "connection",
        "Knex",
        "connection",
        "connection",
        "DEFAULT_CONNECTION_NAME",
        "connection",
        "DEFAULT_CONNECTION_NAME",
        "connection",
        "connection",
        "connection",
        "DEFAULT_CONNECTION_NAME",
        "connection",
        "connection",
        "retryAttempts",
        "retryDelay",
        "source",
        "source",
        "source",
        "retryWhen",
        "e",
        "e",
        "scan",
        "errorCount",
        "error",
        "logger",
        "errorCount",
        "error",
        "errorCount",
        "retryAttempts",
        "error",
        "errorCount",
        "delay",
        "retryDelay",
        "options",
        "options",
        "options",
        "options",
        "DEFAULT_CONNECTION_NAME",
        "generateString",
        "uuid"
    ],
    "literals": [
        "\"../interfaces\"",
        "'knex'",
        "'../knex.constants'",
        "\"rxjs\"",
        "'rxjs/operators'",
        "'uuid'",
        "\"@nestjs/common\"",
        "\"../exceptions/circular-dependency.exception\"",
        "'KnexModule'",
        "string",
        "'@InjectModel()'",
        "${connectionPrefix}${entity.name}Repository",
        "string",
        "string",
        "'string'",
        "${connection}Connection",
        "${connection.name}Connection",
        "string",
        "string",
        "''",
        "'string'",
        "'_'",
        "''",
        "'_'",
        "Unable to connect to the database. Retrying (${errorCount +\n                1})..."
    ],
    "variables": [
        "logger",
        "connectionPrefix",
        "generateString"
    ],
    "comments": [],
    "docstrings": [
        "* This function generates an injection token for an Repostiory\n * @param {Function} This parameter can either be a Repostiory\n * @param {string} [connection='default'] Connection name\n * @returns {string} The Entity injection token",
        "* This function returns a Connection prefix based on the connection name\n * @param {KnexModuleOptions | string} [connection='default'] This optional parameter is either\n * a KnexModuleOptions or a string.\n * @returns {string | Function} The Connection injection token."
    ],
    "functions": [
        "getModelToken",
        "getConnectionToken",
        "getConnectionPrefix",
        "handleRetry",
        "getConnectionName"
    ],
    "classes": []
}