{
    "identifiers": [
        "os",
        "numpy",
        "np",
        "h2oaicore",
        "models",
        "CustomModel",
        "CustomModel",
        "staticmethod",
        "accuracy",
        "time_tolerance",
        "interpretability",
        "kwargs",
        "kwargs",
        "X",
        "y",
        "sample_weight",
        "eval_set",
        "sample_weight_eval_set",
        "kwargs",
        "os",
        "environ",
        "x",
        "AssertionError",
        "x",
        "KeyError",
        "set_model_properties",
        "model",
        "features",
        "X",
        "names",
        "importances",
        "len",
        "X",
        "names",
        "iterations",
        "X",
        "kwargs",
        "os",
        "environ",
        "x",
        "AssertionError",
        "x",
        "KeyError",
        "np",
        "random",
        "randint",
        "X",
        "nrows",
        "CustomModel",
        "staticmethod",
        "accuracy",
        "time_tolerance",
        "interpretability",
        "kwargs",
        "kwargs",
        "X",
        "y",
        "sample_weight",
        "eval_set",
        "sample_weight_eval_set",
        "kwargs",
        "os",
        "environ",
        "x",
        "AssertionError",
        "x",
        "KeyError",
        "set_model_properties",
        "model",
        "features",
        "X",
        "names",
        "importances",
        "len",
        "X",
        "names",
        "iterations",
        "X",
        "kwargs",
        "os",
        "environ",
        "x",
        "AssertionError",
        "x",
        "KeyError",
        "np",
        "random",
        "randint",
        "X",
        "nrows"
    ],
    "literals": [
        "'CUDA_VISIBLE_DEVICES'",
        "''",
        "f'CUDA_VISIBLE_DEVICES = {x} should not be set.'",
        "'CUDA_VISIBLE_DEVICES'",
        "''",
        "f'CUDA_VISIBLE_DEVICES = {x} should not be set.'",
        "'CUDA_VISIBLE_DEVICES'",
        "''",
        "f'CUDA_VISIBLE_DEVICES = {x} should not be set.'",
        "'CUDA_VISIBLE_DEVICES'",
        "''",
        "f'CUDA_VISIBLE_DEVICES = {x} should not be set.'"
    ],
    "variables": [
        "_regression",
        "_binary",
        "_multiclass",
        "_can_use_gpu",
        "_get_gpu_lock",
        "x",
        "x",
        "_regression",
        "_binary",
        "_multiclass",
        "_can_use_gpu",
        "_get_gpu_lock",
        "x",
        "x"
    ],
    "comments": [
        "WIP",
        "if enabled, will use special job scheduler for GPUs",
        "whether to lock GPUs for this model before fit and predict",
        "Not sure if we need the same model again, blending may work with only one model type, too.",
        "WIP",
        "if enabled, will use special job scheduler for GPUs",
        "whether to lock GPUs for this model before fit and predict"
    ],
    "docstrings": [
        "\"\"\"\n        Returns: dt.Frame, np.ndarray or pd.DataFrame, containing predictions (target values or class probabilities)\n        Shape: (K, c) where c = 1 for regression or binary classification, and c>=3 for multi-class problems.\n        \"\"\"",
        "\"\"\"\n        Returns: dt.Frame, np.ndarray or pd.DataFrame, containing predictions (target values or class probabilities)\n        Shape: (K, c) where c = 1 for regression or binary classification, and c>=3 for multi-class problems.\n        \"\"\""
    ],
    "functions": [
        "do_acceptance_test",
        "set_default_params",
        "mutate_params",
        "fit",
        "predict",
        "do_acceptance_test",
        "set_default_params",
        "mutate_params",
        "fit",
        "predict"
    ],
    "classes": [
        "CustomGpuCheck",
        "CustomGpuCheck2"
    ]
}