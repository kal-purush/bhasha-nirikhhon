{
    "identifiers": [
        "keyValue",
        "KubeDocument",
        "baseProvisionerType",
        "createDebug",
        "templates",
        "setByPath",
        "createDebug",
        "createApplyMixin",
        "templates",
        "name",
        "chart",
        "repo",
        "configs",
        "templates",
        "name",
        "configs",
        "createValuesConfig",
        "name",
        "template",
        "volumeName",
        "createValuesConfig",
        "template",
        "container",
        "volumeName",
        "volumePath",
        "container",
        "container",
        "volumePath",
        "secrets",
        "templates",
        "name",
        "secrets",
        "createSecretValues",
        "name",
        "template",
        "volumeName",
        "createSecretValues",
        "template",
        "container",
        "volumeName",
        "volumePath",
        "container",
        "container",
        "volumePath",
        "processor",
        "jobStatus",
        "phase",
        "phase",
        "processor",
        "processor",
        "phase",
        "jobStatus",
        "templates",
        "name",
        "componentLabels",
        "createKustomizationConfigs",
        "name",
        "template",
        "volumeName",
        "createKustomizationConfigs",
        "template",
        "container",
        "volumeName",
        "volumePath",
        "container",
        "container",
        "volumePath",
        "name",
        "clusterAdmin",
        "accountFile",
        "serviceAccountName",
        "configs",
        "key",
        "configs",
        "key",
        "regex",
        "configs",
        "key",
        "configs",
        "key",
        "setByPath",
        "configs",
        "key",
        "value",
        "configs"
    ],
    "literals": [
        "'@c6o/kubeclient-contracts'",
        "'../index'",
        "'debug'",
        "'../templates/'",
        "'lodash'",
        "'@helmengine:createApply'",
        "'../'",
        "Applying Helm Engine to ${this.documentHelper.name}",
        "\"helm\"",
        "\"install\"",
        "\"--namespace\"",
        "\"--repo\"",
        "'Installing configuration values'",
        "${name}-values",
        "\"/opt/config\"",
        "\"-f\"",
        "${volumePath}/values.yaml",
        "'Installing secret configuration values'",
        "${name}-secret-values",
        "\"/opt/configs/secrets\"",
        "\"-f\"",
        "${volumePath}/values.yaml",
        "'Creating Helm Installation Job'",
        "Ensure ${this.documentHelper.name} installation finishes",
        "'Pod'",
        "'job-name'",
        "'Succeeded'",
        "'Failed'",
        "\"Install Job Failed\"",
        "'Failed'",
        "\"Installation Job Failed\"",
        "'Installing Post Render Processor'",
        "${name}-kustomize",
        "\"/opt/kustomize\"",
        "'postrender.sh'",
        "'postrender.sh'",
        "'kustomization.yaml'",
        "'kustomization.yaml'",
        "\"--post-renderer\"",
        "${volumePath}/postrender.sh",
        "${name}-helm-installer",
        "'Setting up installer service account'",
        "'clusterServiceAccount.yaml'",
        "'serviceAccount.yaml'",
        "../../k8s/${accountFile}",
        "'Processing templates'",
        "'Processing configs templates'",
        "'Processing secrets templates'",
        "':'",
        "'.'"
    ],
    "variables": [
        "debug",
        "createApplyMixin",
        "createValuesConfig",
        "volumeName",
        "volumePath",
        "template",
        "container",
        "createSecretValues",
        "volumeName",
        "volumePath",
        "template",
        "container",
        "jobStatus",
        "createKustomizationConfigs",
        "volumeName",
        "volumePath",
        "template",
        "container",
        "serviceAccountName",
        "clusterAdmin",
        "accountFile",
        "regex",
        "value"
    ],
    "comments": [
        "From parent AppEngine",
        "Create values config file",
        "Add volume mount based on config values",
        "Load mounted values",
        "Add values to command.",
        "Create values config file",
        "Add volume mount based on config values",
        "Load mounted values",
        "Add values to command.",
        "Create values config file",
        "Add volume mount based on config values",
        "This chmod makes the file executable",
        "mount post-render configurations",
        "Add --post-renderer to helm command line args.",
        "Setup service account for job",
        "Same as AppEngine process templates",
        "Handles several special case config options, like \"$PUBLIC_FQDN\""
    ],
    "docstrings": [
        "* Create Job resource with base Helm install command.",
        "* Save provisioner configs parameters to mountable \"values.yaml\"\n     * and apply to helm CLI.",
        "* Save provisioner secrets parameters to mountable \"values.yaml\"\n     * and apply to helm CLI.",
        "* Apply Job to the cluster.  This will schedule the helm command to execute.",
        "* Monitor Job progress, wait till completed.\n     * \n     * NOTE: this does not mean the service is Ready.\n     * TODO: we should add startupProbs to handle this properly.",
        "* Helm runs a post-render script to apply commonLabels and set ownerDocument\n     * This function create the kustomize script and configuration.",
        "* Helm Job must have specific access to the cluster.  This creates a service account\n     * the job will run under.  By default, a cluster account with access to just the namespace\n     * is created.  If the application requests 'clusterAdmin: true', a clusterServiceAccount\n     * will be created instead.",
        "* Expand configuration key names to be object paths.\n     * \n     * For example:\n     *  foo:bar: dummyval\n     *  becomes\n     *    foo:\n     *      bar: dummyval\n     * \n     * @param configs\n     * @returns"
    ],
    "functions": [
        "createApply",
        "setupJobCommand",
        "applyValuesConfig",
        "applySecretValuesConfig",
        "applyJob",
        "ensureJobFinished",
        "applyPostRenderConfig",
        "applyServiceAccount",
        "processTemplates",
        "expandConfigs"
    ],
    "classes": []
}