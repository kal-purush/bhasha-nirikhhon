{
    "identifiers": [
        "io",
        "helidon",
        "security",
        "providers",
        "httpsign",
        "java",
        "net",
        "URI",
        "java",
        "nio",
        "file",
        "Paths",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Optional",
        "java",
        "util",
        "TreeMap",
        "io",
        "helidon",
        "common",
        "configurable",
        "Resource",
        "io",
        "helidon",
        "common",
        "pki",
        "KeyConfig",
        "io",
        "helidon",
        "security",
        "SecurityEnvironment",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "hamcrest",
        "CoreMatchers",
        "containsString",
        "org",
        "hamcrest",
        "CoreMatchers",
        "equalTo",
        "org",
        "hamcrest",
        "CoreMatchers",
        "org",
        "hamcrest",
        "MatcherAssert",
        "assertThat",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "fail",
        "Test",
        "validSignature",
        "testValid",
        "validSignature",
        "Test",
        "validSignature",
        "testValid",
        "validSignature",
        "Test",
        "validSignature",
        "testValid",
        "validSignature",
        "Test",
        "validSignature",
        "testValid",
        "validSignature",
        "Test",
        "validSignature",
        "testValid",
        "validSignature",
        "Test",
        "validSignature",
        "testValid",
        "validSignature",
        "Test",
        "invalidSignature",
        "httpSignature",
        "HttpSignature",
        "fromHeader",
        "invalidSignature",
        "validate",
        "httpSignature",
        "validate",
        "validate",
        "ifPresentOrElse",
        "msg",
        "assertThat",
        "msg",
        "containsString",
        "fail",
        "Test",
        "invalidSignature",
        "httpSignature",
        "HttpSignature",
        "fromHeader",
        "invalidSignature",
        "validate",
        "httpSignature",
        "validate",
        "validate",
        "ifPresentOrElse",
        "msg",
        "assertThat",
        "msg",
        "containsString",
        "fail",
        "Test",
        "headers",
        "CASE_INSENSITIVE_ORDER",
        "headers",
        "put",
        "of",
        "headers",
        "put",
        "of",
        "headers",
        "put",
        "of",
        "env",
        "buildSecurityEnv",
        "headers",
        "outboundDef",
        "OutboundTargetDefinition",
        "builder",
        "privateKeyConfig",
        "KeyConfig",
        "keystoreBuilder",
        "keystore",
        "Resource",
        "create",
        "Paths",
        "get",
        "keystorePassphrase",
        "toCharArray",
        "keyAlias",
        "build",
        "signedHeaders",
        "SignedHeadersConfig",
        "builder",
        "defaultConfig",
        "SignedHeadersConfig",
        "HeadersConfig",
        "create",
        "of",
        "build",
        "build",
        "signature",
        "HttpSignature",
        "sign",
        "env",
        "outboundDef",
        "assertThat",
        "signature",
        "getBase64Signature",
        "Test",
        "headers",
        "CASE_INSENSITIVE_ORDER",
        "headers",
        "put",
        "of",
        "headers",
        "put",
        "of",
        "headers",
        "put",
        "of",
        "env",
        "buildSecurityEnv",
        "headers",
        "outboundDef",
        "OutboundTargetDefinition",
        "builder",
        "hmacSecret",
        "signedHeaders",
        "SignedHeadersConfig",
        "builder",
        "defaultConfig",
        "SignedHeadersConfig",
        "HeadersConfig",
        "create",
        "of",
        "build",
        "build",
        "signature",
        "HttpSignature",
        "sign",
        "env",
        "outboundDef",
        "assertThat",
        "signature",
        "getBase64Signature",
        "Test",
        "env",
        "SecurityEnvironment",
        "builder",
        "targetUri",
        "URI",
        "create",
        "build",
        "outboundDef",
        "OutboundTargetDefinition",
        "builder",
        "hmacSecret",
        "signedHeaders",
        "SignedHeadersConfig",
        "builder",
        "defaultConfig",
        "SignedHeadersConfig",
        "HeadersConfig",
        "create",
        "of",
        "build",
        "build",
        "HttpSignature",
        "sign",
        "env",
        "outboundDef",
        "path",
        "headers",
        "SecurityEnvironment",
        "builder",
        "path",
        "path",
        "headers",
        "headers",
        "build",
        "Test",
        "signature",
        "HttpSignature",
        "fromHeader",
        "signature",
        "validate",
        "ifPresent",
        "Assertions",
        "fail",
        "headers",
        "CASE_INSENSITIVE_ORDER",
        "headers",
        "put",
        "of",
        "headers",
        "put",
        "of",
        "headers",
        "put",
        "of",
        "inboundClientDef",
        "InboundClientDefinition",
        "builder",
        "principalName",
        "publicKeyConfig",
        "KeyConfig",
        "keystoreBuilder",
        "keystore",
        "Resource",
        "create",
        "Paths",
        "get",
        "keystorePassphrase",
        "toCharArray",
        "certAlias",
        "build",
        "build",
        "signature",
        "validate",
        "buildSecurityEnv",
        "headers",
        "inboundClientDef",
        "of",
        "ifPresent",
        "Assertions",
        "fail",
        "Test",
        "signature",
        "HttpSignature",
        "fromHeader",
        "signature",
        "validate",
        "ifPresent",
        "Assertions",
        "fail",
        "headers",
        "CASE_INSENSITIVE_ORDER",
        "headers",
        "put",
        "of",
        "headers",
        "put",
        "of",
        "headers",
        "put",
        "of",
        "env",
        "buildSecurityEnv",
        "headers",
        "inboundClientDef",
        "InboundClientDefinition",
        "builder",
        "principalName",
        "hmacSecret",
        "build",
        "signature",
        "validate",
        "env",
        "inboundClientDef",
        "of",
        "ifPresent",
        "Assertions",
        "fail",
        "validSignature",
        "httpSignature",
        "HttpSignature",
        "fromHeader",
        "validSignature",
        "assertThat",
        "httpSignature",
        "getAlgorithm",
        "assertThat",
        "httpSignature",
        "getKeyId",
        "assertThat",
        "httpSignature",
        "getBase64Signature",
        "assertThat",
        "httpSignature",
        "getHeaders",
        "equalTo",
        "of"
    ],
    "literals": [
        "\"keyId=\\\"rsa-key-1\\\",algorithm=\\\"rsa-sha256\\\",\"",
        "\"headers=\\\"(request-target) host date digest content-length\\\",\"",
        "\"signature=\\\"Base64(RSA-SHA256(signing string))\\\"\"",
        "\"keyId=\\\"rsa-key-1\\\",algorithm=\\\"rsa-sha256\\\",\"",
        "\"headers=\\\"(request-target) host date digest content-length\\\",\"",
        "\"signature=\\\"Base64(RSA-SHA256(signing string))\\\",hurhur=\\\"ignored\\\"\"",
        "\"keyId=\\\"rsa-key-1\\\",algorithm=\\\"hamc-sha256\\\",\"",
        "\"headers=\\\"(request-target) host date digest content-length\\\",\"",
        "\"signature=\\\"Base64(RSA-SHA256(signing string))\\\",algorithm=\\\"rsa-sha256\\\"\"",
        "\"keyId=\\\"rsa-key-1\\\",algorithm=\\\"hamc-sha256\\\",\"",
        "\"headers=\\\"(request-target) host date digest content-length\\\",\"",
        "\"signature=\\\"Base64(RSA-SHA256(signing string))\\\",algorithm=\\\"rsa-sha256\\\",abcd\"",
        "\"keyId=\\\"rsa-key-1\\\",algorithm=\\\"hamc-sha256\\\",\"",
        "\"headers=\\\"(request-target) host date digest content-length\\\",\"",
        "\"signature=\\\"Base64(RSA-SHA256(signing string))\\\",algorithm=\\\"rsa-sha256\\\",abcd=\"",
        "\"keyId=\\\"rsa-key-1\\\",algorithm=\\\"hamc-sha256\\\",\"",
        "\"headers=\\\"(request-target) host date digest content-length\\\",\"",
        "\"signature=\\\"Base64(RSA-SHA256(signing string))\\\",algorithm=\\\"rsa-sha256\\\",abcd=\\\"asf\"",
        "\"keyId=\\\"rsa-key-1\\\",algorithm=\\\"hamc-sha256\\\",\"",
        "\"headers=(request-target) host date digest content-length\\\",\"",
        "\"signature=\\\"Base64(RSA-SHA256(signing string))\\\",algorithm=\\\"rsa-sha256\\\",abcd=\\\"asf\"",
        "\"signature is a mandatory\"",
        "\"Should have failed validation\"",
        "\"This is a wrong signature\"",
        "\"keyId is a mandatory\"",
        "\"Should have failed validation\"",
        "\"DATE\"",
        "\"Thu, 08 Jun 2014 18:32:30 GMT\"",
        "\"Authorization\"",
        "\"basic dXNlcm5hbWU6cGFzc3dvcmQ=\"",
        "\"host\"",
        "\"example.org\"",
        "\"/my/resource\"",
        "\"rsa-key-12345\"",
        "\"src/test/resources/keystore.p12\"",
        "\"password\"",
        "\"myPrivateKey\"",
        "\"date\"",
        "\"host\"",
        "\"(request-target)\"",
        "\"authorization\"",
        "\"Rm5PjuUdJ927esGQ2gm/6QBEM9IM7J5qSZuP8NV8+GXUfboUV6ST2EYLYniFGt5/3BO/2+vqQdqezdTVPr/JCwqBx\"",
        "\"+9T9ZynG7YqRjKvXzcmvQOu5vQmCK5x/HR0fXU41Pjq+jywsD0k6KdxF6TWr6tvWRbwFet+YSb0088o\"",
        "\"/65Xeqghw7s0vShf7jPZsaaIHnvM9SjWgix9VvpdEn4NDvqhebieVD3Swb1VG5+/7ECQ9VAlX30U5\"",
        "\"/jQ5hPO3yuvRlg5kkMjJiN7tf/68If/5O2Z4H+7VmW0b1U69/JoOQJA0av1gCX7HVfa\"",
        "\"/YTCxIK4UFiI6h963q2x7LSkqhdWGA==\"",
        "\"DATE\"",
        "\"Thu, 08 Jun 2014 18:32:30 GMT\"",
        "\"Authorization\"",
        "\"basic dXNlcm5hbWU6cGFzc3dvcmQ=\"",
        "\"host\"",
        "\"example.org\"",
        "\"/my/resource\"",
        "\"myServiceKeyId\"",
        "\"MyPasswordForHmac\"",
        "\"date\"",
        "\"host\"",
        "\"(request-target)\"",
        "\"authorization\"",
        "\"0BcQq9TckrtGvlpHiMxNqMq0vW6dPVTGVDUVDrGwZyI=\"",
        "\"http://localhost/test/path\"",
        "\"myServiceKeyId\"",
        "\"MyPasswordForHmac\"",
        "\"date\"",
        "\"host\"",
        "\"keyId=\\\"rsa-key-12345\\\",algorithm=\\\"rsa-sha256\\\",headers=\\\"date \"",
        "\"host (request-target) authorization\\\",\"",
        "\"signature=\\\"Rm5PjuUdJ927esGQ2gm/6QBEM9IM7J5qSZuP8NV8+GXUf\"",
        "\"boUV6ST2EYLYniFGt5/3BO/2+vqQdqezdTVPr/JCwqBx+9T9ZynG7YqRj\"",
        "\"KvXzcmvQOu5vQmCK5x/HR0fXU41Pjq+jywsD0k6KdxF6TWr6tvWRbwFet\"",
        "\"+YSb0088o/65Xeqghw7s0vShf7jPZsaaIHnvM9SjWgix9VvpdEn4NDvqh\"",
        "\"ebieVD3Swb1VG5+/7ECQ9VAlX30U5/jQ5hPO3yuvRlg5kkMjJiN7tf/68\"",
        "\"If/5O2Z4H+7VmW0b1U69/JoOQJA0av1gCX7HVfa/YTCxIK4UFiI6h963q\"",
        "\"2x7LSkqhdWGA==\\\"\"",
        "\"DATE\"",
        "\"Thu, 08 Jun 2014 18:32:30 GMT\"",
        "\"Authorization\"",
        "\"basic dXNlcm5hbWU6cGFzc3dvcmQ=\"",
        "\"host\"",
        "\"example.org\"",
        "\"rsa-key-12345\"",
        "\"theService\"",
        "\"src/test/resources/keystore.p12\"",
        "\"password\"",
        "\"service_cert\"",
        "\"/my/resource\"",
        "\"date\"",
        "\"keyId=\\\"myServiceKeyId\\\",algorithm=\\\"hmac-sha256\\\",headers=\\\"date host (request-target) authorization\\\",\"",
        "\"signature=\\\"0BcQq9TckrtGvlpHiMxNqMq0vW6dPVTGVDUVDrGwZyI=\\\"\"",
        "\"DATE\"",
        "\"Thu, 08 Jun 2014 18:32:30 GMT\"",
        "\"Authorization\"",
        "\"basic dXNlcm5hbWU6cGFzc3dvcmQ=\"",
        "\"host\"",
        "\"example.org\"",
        "\"/my/resource\"",
        "\"myServiceKeyId\"",
        "\"theService\"",
        "\"MyPasswordForHmac\"",
        "\"date\"",
        "\"rsa-sha256\"",
        "\"rsa-key-1\"",
        "\"Base64(RSA-SHA256(signing string))\"",
        "\"(request-target)\"",
        "\"host\"",
        "\"date\"",
        "\"digest\"",
        "\"content-length\""
    ],
    "variables": [],
    "comments": [
        "missing quotes for headers",
        "just make sure this does not throw an exception for missing headers"
    ],
    "docstrings": [
        "* Copyright (c) 2018, 2021 Oracle and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Unit test for {@link HttpSignature}."
    ],
    "functions": [
        "testValid",
        "testValidInvalidComponent",
        "testValidRepeatedComponent",
        "testValidInvalidLastComponent1",
        "testValidInvalidLastComponent2",
        "testValidInvalidLastComponent3",
        "testInvalid1",
        "testInvalid2",
        "testSignRsa",
        "testSignHmac",
        "testSignHmacAddHeaders",
        "SecurityEnvironment",
        "buildSecurityEnv",
        "testVerifyRsa",
        "testVerifyHmac",
        "testValid"
    ],
    "classes": [
        "HttpSignatureTestOld"
    ]
}