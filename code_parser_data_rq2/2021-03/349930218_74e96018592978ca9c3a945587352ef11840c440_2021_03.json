{
    "identifiers": [
        "ExpressSpringApplicationImpl",
        "Logger",
        "AbstractProperties",
        "Properties",
        "MiddleWare",
        "Spring",
        "IPropertiesFile",
        "MapType",
        "express",
        "https",
        "Application",
        "Application",
        "Logger",
        "Application",
        "Application",
        "Spring",
        "properties",
        "properties",
        "properties",
        "properties",
        "Properties",
        "MiddleWare",
        "baseUrl",
        "baseUrl",
        "level",
        "Spring",
        "level",
        "Spring",
        "express",
        "path",
        "path",
        "sslOpts",
        "sslOpts",
        "sslOpts",
        "sslOpts",
        "sslOpts",
        "sslOpts",
        "https",
        "port",
        "gateway",
        "ExpressSpringApp",
        "gateway",
        "port",
        "port",
        "gateway",
        "ExpressSpringApp",
        "gateway",
        "port"
    ],
    "literals": [
        "\"./Interfaces\"",
        "\"logger20js-ts\"",
        "\"lib-utils-ts/src/file/Properties\"",
        "\"./MiddleWare\"",
        "\"./Spring\"",
        "\"lib-utils-ts/src/Interface\"",
        "\"express\"",
        "\"https\"",
        "\"./Application\"",
        "string",
        "\"/v1\"",
        "string",
        "string",
        "\"baseUrl\"",
        "\"httpProtocol\"",
        "\"httpProtocol\"",
        "\"gateway\"",
        "\"gateway\"",
        "\"loggerParser \"",
        "\"loggerParser\"",
        "\"[%hours{yellow}] %T{w?yellow;e?red;d?green}/%name - %error\"",
        "\"logEnabledColorize\"",
        "\"saveLog\"",
        "string",
        "string",
        "\"gateway\"",
        "string",
        "\"Not implemented !\"",
        "\"pagesDirectory\"",
        "string",
        "string",
        "string",
        "string",
        "\"sslPfx\"",
        "\"sslPfx\"",
        "\"sslPassphrase\"",
        "\"sslCert\"",
        "\"sslCertKey\"",
        "\"sslCacert\"",
        "\"sslCacert\"",
        "\"httpsProtocol\"",
        "\"sslPort\"",
        "string",
        "\"gateway\"",
        "\"0.0.0.0\"",
        "string",
        "string",
        "\"SSL/TLS server has been started : %s:%s\"",
        "\"httpProtocol\"",
        "\"port\"",
        "string",
        "\"gateway\"",
        "\"0.0.0.0\"",
        "\"server has been started : %s:%s\""
    ],
    "variables": [
        "sslOpts",
        "port",
        "gateway",
        "sslOpts",
        "port",
        "gateway"
    ],
    "comments": [
        "minimal Configuration"
    ],
    "docstrings": [
        "*\n     * STEP 0",
        "*\n     * STEP 1\n     * Initialize all middleware before initialize initPages methods\n     * see MiddleWare Class",
        "*\n     * STEP 2",
        "**\n     *  STEP 3\n     * EndPoint for launch APP http or https"
    ],
    "functions": [
        "setBaseUrl",
        "getBaseUrl",
        "setMockDefaultUserAccess",
        "getMockDefaultUserAccess",
        "getApp",
        "getMiddleWare",
        "loadProperties",
        "config",
        "initPages",
        "getSSlOpts",
        "sslProtocol",
        "listen"
    ],
    "classes": []
}