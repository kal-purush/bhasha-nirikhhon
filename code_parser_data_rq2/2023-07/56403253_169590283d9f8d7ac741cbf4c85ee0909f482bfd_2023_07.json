{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Microsoft",
        "Boogie",
        "Microsoft",
        "Dafny",
        "LanguageServer",
        "CounterExampleGeneration",
        "Model",
        "Func",
        "DafnyModel",
        "model",
        "name",
        "arity",
        "argsToSkip",
        "argsToSkip",
        "argsToSkip",
        "func",
        "model",
        "Model",
        "MkFunc",
        "name",
        "arity",
        "argsToSkip",
        "Model",
        "FuncTuple",
        "ModelFuncTupleWrapper",
        "func",
        "Result",
        "Args",
        "argsToSkip",
        "Model",
        "Element",
        "element",
        "ConvertFuncTuple",
        "func",
        "AppWithResult",
        "element",
        "ModelFuncTupleWrapper",
        "Model",
        "Element",
        "element",
        "func",
        "AppsWithResult",
        "element",
        "Select",
        "ConvertFuncTuple",
        "ModelFuncTupleWrapper",
        "func",
        "Apps",
        "Select",
        "ConvertFuncTuple",
        "Model",
        "Element",
        "func",
        "GetConstant",
        "Model",
        "Element",
        "Model",
        "Element",
        "element",
        "element",
        "func",
        "AppWithArg",
        "argsToSkip",
        "element",
        "app",
        "Result",
        "index",
        "Model",
        "Element",
        "element",
        "ConvertFuncTuple",
        "func",
        "AppWithArg",
        "argsToSkip",
        "index",
        "element",
        "Model",
        "Element",
        "Model",
        "Element",
        "first",
        "Model",
        "Element",
        "second",
        "first",
        "second",
        "func",
        "AppsWithArgs",
        "argsToSkip",
        "first",
        "argsToSkip",
        "second",
        "ToList",
        "apps",
        "Any",
        "apps",
        "First",
        "Result",
        "ModelFuncTupleWrapper",
        "i",
        "Model",
        "Element",
        "element",
        "func",
        "AppsWithArg",
        "i",
        "argsToSkip",
        "element",
        "Select",
        "ConvertFuncTuple",
        "ModelFuncTupleWrapper",
        "i0",
        "Model",
        "Element",
        "element0",
        "i1",
        "Model",
        "Element",
        "element1",
        "func",
        "AppsWithArgs",
        "i0",
        "argsToSkip",
        "element0",
        "i1",
        "argsToSkip",
        "element1",
        "Select",
        "ConvertFuncTuple",
        "DafnyModel",
        "model",
        "names",
        "arity",
        "arity",
        "model",
        "Model",
        "HasFunc",
        "name",
        "model",
        "Model",
        "HasFunc",
        "name",
        "id",
        "id",
        "name",
        "id",
        "ModelFuncWrapper",
        "model",
        "name",
        "arity",
        "func",
        "model",
        "Model",
        "Functions",
        "names",
        "Contains",
        "func",
        "Name",
        "func",
        "Arity",
        "func",
        "Arity",
        "arity",
        "func",
        "Arity",
        "Value",
        "arity",
        "app",
        "func",
        "Apps",
        "result",
        "func",
        "AddApp",
        "app",
        "Result",
        "app",
        "Args",
        "offset",
        "result",
        "func",
        "Else",
        "func",
        "Else",
        "result",
        "Model",
        "Element",
        "Empty",
        "Model",
        "Element",
        "Model",
        "Func",
        "Model",
        "Element",
        "Model",
        "Element",
        "Model",
        "Func",
        "func",
        "Model",
        "Element",
        "res",
        "Model",
        "Element",
        "args",
        "Args",
        "args",
        "EmptyArgs",
        "Func",
        "func",
        "Result",
        "res"
    ],
    "literals": [
        "\"[\"",
        "\"]\"",
        "\"#\"",
        "\"#\""
    ],
    "variables": [
        "func",
        "argsToSkip",
        "Apps",
        "app",
        "apps",
        "name",
        "id",
        "result",
        "offset",
        "EmptyArgs",
        "Func",
        "Result",
        "Args"
    ],
    "comments": [
        "Copyright by the contributors to the Dafny Project",
        "SPDX-License-Identifier: MIT",
        "The wrapper acts exactly like Model.Func in Boogie except that it skips first N arguments of a function application.",
        "This means that the behavior of ModelFuncWrapper is independent of the polymorphism encoding mode in Boogie",
        "provided the argsToSkip argument is passed correctly during initialization.",
        "",
        "The reason this is a wrapper rather than a subclass is to prevent the use of functionality that might be added to",
        "the base class in the future unless it is explicitly supported here and because the creation of Model.Func",
        "objects in Boogie is tied to updates to various fields in the Model itself (see MkFunc method)",
        "</summary>",
        "Create a new function that merges together the applications of all functions with the given name and arity",
        "at least equal to <param name=\"arity\"></param>",
        "</summary>",
        "Coming up with a new name if the ideal one is reserved",
        "this removes type arguments when TypeEncodingMethod == Bpl.CoreOptions.TypeEncoding.Arguments"
    ],
    "docstrings": [
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "ModelFuncWrapper",
        "ModelFuncTupleWrapper",
        "ConvertFuncTuple",
        "ModelFuncTupleWrapper",
        "AppWithResult",
        "AppsWithResult",
        "GetConstant",
        "OptEval",
        "ModelFuncTupleWrapper",
        "AppWithArg",
        "OptEval",
        "AppsWithArg",
        "AppsWithArgs",
        "ModelFuncWrapper",
        "MergeFunctions",
        "ModelFuncTupleWrapper"
    ],
    "classes": [
        "ModelFuncWrapper",
        "ModelFuncTupleWrapper"
    ]
}