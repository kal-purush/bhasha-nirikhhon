{
    "identifiers": [
        "task",
        "types",
        "formatEther",
        "constants",
        "ERC20",
        "TokenBridge",
        "YellowToken",
        "task",
        "types",
        "taskArgs",
        "ethers",
        "TokenBridgeFactory",
        "taskArgs",
        "taskArgs",
        "taskArgs",
        "TokenBridge",
        "TokenBridge",
        "taskArgs",
        "ethers",
        "taskArgs",
        "Token",
        "Token",
        "TokenBridge",
        "tx",
        "task",
        "taskArgs",
        "ethers",
        "taskArgs",
        "TokenBridge",
        "taskArgs",
        "taskArgs",
        "taskArgs",
        "taskArgs",
        "task",
        "types",
        "taskArgs",
        "ethers",
        "taskArgs",
        "taskArgs",
        "Signer",
        "ethers",
        "taskArgs",
        "TokenBridge",
        "ethers",
        "tokenAddress",
        "taskArgs",
        "Token",
        "taskArgs",
        "taskArgs",
        "Token",
        "Signer",
        "TokenBridge",
        "allowance",
        "amount",
        "Token",
        "TokenBridge",
        "amount",
        "TokenBridge",
        "remoteChainId",
        "receiver",
        "amount",
        "formatEther",
        "nativeFeeBN",
        "amount",
        "receiver",
        "remoteChainId",
        "Signer",
        "nativeBalance",
        "nativeFeeBN",
        "TokenBridge",
        "remoteChainId",
        "receiver",
        "amount",
        "constants",
        "nativeFeeBN",
        "tx",
        "tx"
    ],
    "literals": [
        "'@nomicfoundation/hardhat-toolbox'",
        "'hardhat/config'",
        "'ethers/lib/utils'",
        "'ethers'",
        "'../../typechain-types'",
        "string",
        "string",
        "'deployBridge'",
        "'Deploys Root Token Bridge'",
        "'endpointAddress'",
        "'The address of LZ Endpoint on the chain'",
        "'tokenAddress'",
        "'The address of the Token to bridge'",
        "'isRoot'",
        "'Whether the bridge is root or child (default - child)'",
        "'TokenBridge'",
        "Token Bridge was deployed at ${TokenBridge.address}",
        "'\\nGranting minter role to the bridge'",
        "'YellowToken'",
        "'Minter role was granted to the bridge'",
        "string",
        "string",
        "'addTrustedRemote'",
        "'Adds a trusted remote address to the bridge'",
        "'bridgeAddress'",
        "'The address of the Token Bridge'",
        "'remoteChainId'",
        "'The chainId of the remote bridge'",
        "'remoteAddress'",
        "'The address of the remote bridge'",
        "'TokenBridge'",
        "Added trusted remote address ${taskArgs.remoteAddress} from chain ${taskArgs.remoteChainId}",
        "string",
        "string",
        "'bridgeToken'",
        "'Bridges token (registered at the bridge) from active chain to the supplied chain'",
        "'receiver'",
        "'The address to receive tokens on the other chain (default - sender address)'",
        "''",
        "'amount'",
        "'The amount of tokens to bridge (without decimals)'",
        "'bridgeAddress'",
        "'The address of the Token Bridge'",
        "'remoteChainId'",
        "'The chainId of the remote bridge'",
        "'TokenBridge'",
        "'ERC20'",
        "'Checking allowance'",
        "'Allowance not enough! Approving more tokens for the bridge'",
        "'Allowance is enough!\\n'",
        "'0x'",
        "${formatEther(\n        nativeFeeBN,\n      )} of native fees is needed to bridge ${amount} to ${receiver} on chain ${remoteChainId}\\n",
        "'Checking native balance'",
        "'Native balance not enough!'",
        "'Native balance is enough!\\n'",
        "'Bridging tokens'",
        "'0x'",
        "'Bridge token' transaction was mined: ${tx.hash}",
        "'Wait for configured number of blocks for transfer to be finalized'"
    ],
    "variables": [
        "TokenBridgeFactory",
        "TokenBridge",
        "Token",
        "tx",
        "TokenBridge",
        "Signer",
        "TokenBridge",
        "tokenAddress",
        "Token",
        "amount",
        "receiver",
        "remoteChainId",
        "allowance",
        "nativeFeeBN",
        "nativeBalance",
        "tx"
    ],
    "comments": [
        "TODO: change to task connecting both bridges. A mapping between LZ chain ids to network names is needed",
        "transform task args",
        "check allowance",
        "calculate fee",
        "check native balance",
        "bridge tokens"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}