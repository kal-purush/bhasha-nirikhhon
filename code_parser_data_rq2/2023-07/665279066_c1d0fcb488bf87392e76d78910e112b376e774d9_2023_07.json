{
    "identifiers": [
        "form",
        "FormData",
        "parseInt",
        "form",
        "parseInt",
        "form",
        "isNaN",
        "dividend",
        "isNaN",
        "divider",
        "divider",
        "dividend",
        "divider",
        "result",
        "dividend",
        "divider",
        "result",
        "dividend",
        "divider",
        "error",
        "result",
        "error"
    ],
    "literals": [
        "\"[data-form]\"",
        "\"[data-result]\"",
        "\"submit\"",
        "\"Input is not a number\"",
        "\"Cant divide by zero\"",
        "\"Something critical went wrong, Please refresh the page\""
    ],
    "variables": [
        "form",
        "result",
        "entries",
        "dividend",
        "divider"
    ],
    "comments": [
        "Scenario: Validation when values are missing",
        "GIVEN that the submit button is pressed",
        "WHEN either or both inputs are empty",
        "THEN the divisions should not be done",
        "AND the following should be displayed: “Division not performed.",
        "Both values are required in inputs. Try again”.",
        "Scenario: An invalid division should log an error in the console",
        "GIVEN that the submit button is pressed",
        "WHEN 20 is entered into the first input",
        "AND -3 is entered into the second input",
        "THEN the division should not be done",
        "AND the following should be displayed: “Division not performed.",
        "Invalid number provided. Try again”.",
        "AND an error should be logged in the browser console that shows the call stack",
        "BUT tline'he program should not crash entirely",
        "Scenario: Providing anything that is not a number should crash the program",
        "GIVEN that the submit button is pressed",
        "WHEN ‘YOLO’ is entered into the first input",
        "AND ‘+++’ is entered into the second input",
        "THEN the entire screen should be replaced with “Something",
        "critical went wrong. Please reload the page",
        "AND an error should be logged in the browser console that shows the call stack.",
        "scripts.js",
        "eslint linebreak-style: ['error', 'windows']",
        "Get the form",
        "Get the form results",
        "Setup Event listener",
        "Disable default form behaviour",
        "Get form data from form when event is triggered",
        "Try Catch if event listner fails",
        "Check divide by NaN",
        "Check divide by zero",
        "Run Divide function",
        "Catch error and console log error"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}