{
    "identifiers": [
        "asyncio",
        "typing",
        "Awaitable",
        "Callable",
        "Literal",
        "Union",
        "contextlib",
        "contextmanager",
        "httpx",
        "prefect",
        "get_client",
        "prefect",
        "client",
        "schemas",
        "responses",
        "MinimalConcurrencyLimitResponse",
        "prefect",
        "events",
        "Event",
        "RelatedResource",
        "emit_event",
        "prefect",
        "_internal",
        "concurrency",
        "api",
        "create_call",
        "from_sync",
        "prefect",
        "_internal",
        "concurrency",
        "event_loop",
        "get_running_loop",
        "prefect",
        "utilities",
        "math",
        "clamped_poisson_interval",
        "fn",
        "Callable",
        "Awaitable",
        "httpx",
        "Response",
        "args",
        "max_retry_seconds",
        "retryable_status_codes",
        "kwargs",
        "httpx",
        "Response",
        "try_count",
        "fn",
        "args",
        "kwargs",
        "exc",
        "exc",
        "response",
        "status_code",
        "retryable_status_codes",
        "clamped_poisson_interval",
        "min",
        "try_count",
        "max_retry_seconds",
        "asyncio",
        "sleep",
        "retry_seconds",
        "exc",
        "response",
        "names",
        "slots",
        "MinimalConcurrencyLimitResponse",
        "get_client",
        "client",
        "wait_for_successful_response",
        "client",
        "increment_concurrency_slots",
        "names",
        "names",
        "slots",
        "slots",
        "retryable_status_codes",
        "_response_to_minimal_concurrency_limit_response",
        "response",
        "names",
        "slots",
        "MinimalConcurrencyLimitResponse",
        "get_client",
        "client",
        "client",
        "release_concurrency_slots",
        "names",
        "names",
        "slots",
        "slots",
        "_response_to_minimal_concurrency_limit_response",
        "response",
        "phase",
        "Union",
        "Literal",
        "Literal",
        "primary_limit",
        "MinimalConcurrencyLimitResponse",
        "related_limits",
        "MinimalConcurrencyLimitResponse",
        "slots",
        "follows",
        "Union",
        "Event",
        "Union",
        "Event",
        "primary_limit",
        "id",
        "primary_limit",
        "name",
        "slots",
        "primary_limit",
        "limit",
        "RelatedResource",
        "__root__",
        "limit",
        "id",
        "limit",
        "related_limits",
        "emit_event",
        "phase",
        "resource",
        "resource",
        "related",
        "related",
        "follows",
        "follows",
        "contextmanager",
        "names",
        "Union",
        "occupy",
        "isinstance",
        "names",
        "names",
        "call_async_function",
        "acquire_concurrency_slots",
        "names",
        "occupy",
        "limit",
        "limits",
        "emit_concurrency_event",
        "limit",
        "limits",
        "occupy",
        "limit",
        "id",
        "call_async_function",
        "release_concurrency_slots",
        "names",
        "occupy",
        "limit",
        "limits",
        "emit_concurrency_event",
        "limit",
        "limits",
        "occupy",
        "concurrency_limit_events",
        "limit",
        "id",
        "fn",
        "args",
        "kwargs",
        "get_running_loop",
        "create_call",
        "fn",
        "args",
        "kwargs",
        "loop",
        "from_sync",
        "call_soon_in_loop_thread",
        "call",
        "result",
        "call",
        "response",
        "httpx",
        "Response",
        "MinimalConcurrencyLimitResponse",
        "MinimalConcurrencyLimitResponse",
        "parse_obj",
        "obj_",
        "obj_",
        "response",
        "json"
    ],
    "literals": [
        "\"acquired\"",
        "\"released\"",
        "\"prefect.resource.id\"",
        "f\"prefect.concurrency-limit.{primary_limit.id}\"",
        "\"prefect.resource.name\"",
        "\"slots-acquired\"",
        "\"limit\"",
        "\"prefect.resource.id\"",
        "f\"prefect.concurrency-limit.{limit.id}\"",
        "\"prefect.resource.role\"",
        "\"concurrency_limit\"",
        "f\"prefect.concurrency-limit.{phase}\"",
        "\"acquired\"",
        "\"released\""
    ],
    "variables": [
        "try_count",
        "retry_seconds",
        "response",
        "retry_seconds",
        "response",
        "response",
        "resource",
        "related",
        "names",
        "limits",
        "concurrency_limit_events",
        "concurrency_limit_events",
        "loop",
        "call"
    ],
    "comments": [
        "TODO: This should handle a `Retry-After` header instead of",
        "always using a clamped exponential backoff."
    ],
    "docstrings": [
        "\"\"\"Given a callable `fn`, call it with `*args` and `**kwargs` and retry on\n    `retryable_status_codes` until a 2xx status code is returned. Uses an\n    exponential backoff with a max of `max_retry_seconds` seconds.\"\"\"",
        "\"\"\"A context manager to acquire, hold, and release concurrency slots of the\n    concurrency limits given in `names`.\n\n    Args:\n        names: The names of the concurrency limits to acquire slots from.\n        occupy: The number of slots to acquire and holf from each limit.\n    \"\"\""
    ],
    "functions": [
        "wait_for_successful_response",
        "acquire_concurrency_slots",
        "release_concurrency_slots",
        "emit_concurrency_event",
        "concurrency",
        "call_async_function",
        "_response_to_minimal_concurrency_limit_response"
    ],
    "classes": []
}