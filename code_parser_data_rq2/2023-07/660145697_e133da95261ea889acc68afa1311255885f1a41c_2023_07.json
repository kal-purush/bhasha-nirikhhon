{
    "identifiers": [
        "rish",
        "leets",
        "grind",
        "medium",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "asteroids",
        "stack",
        "x",
        "asteroids",
        "x",
        "stack",
        "isEmpty",
        "stack",
        "peek",
        "stack",
        "push",
        "x",
        "undefeated",
        "stack",
        "isEmpty",
        "stack",
        "peek",
        "a",
        "stack",
        "peek",
        "b",
        "abs",
        "x",
        "undefeated",
        "a",
        "b",
        "a",
        "b",
        "stack",
        "pop",
        "a",
        "b",
        "undefeated",
        "stack",
        "push",
        "x",
        "stack",
        "stream",
        "mapToInt",
        "intValue",
        "toArray",
        "asteroids",
        "j",
        "x",
        "asteroids",
        "x",
        "j",
        "asteroids",
        "j",
        "asteroids",
        "j",
        "abs",
        "x",
        "j",
        "j",
        "x",
        "asteroids",
        "j",
        "asteroids",
        "j",
        "x",
        "asteroids",
        "j",
        "abs",
        "x",
        "j",
        "ans",
        "j",
        "arraycopy",
        "asteroids",
        "ans",
        "j",
        "ans",
        "args",
        "arr",
        "Arrays",
        "toString",
        "asteroidCollision2",
        "arr"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "new asteroid is defeated",
        "Other asteroid is defeated"
    ],
    "docstrings": [
        "* Daily Challenge!\n * \n * Problem #: 735\n * Problem link: https://leetcode.com/problems/asteroid-collision/\n * \n * Date Attempted: 20/07/2023\n * \n * @author Rishabh Soni\n *",
        "* Basic approach : Using stack\n     * \n     * Push right moving or non-colliding elements to stack. For left moving\n     * element, pop stack and push result.\n     *",
        "* Optimized approach: In-place modification instead of using stack\n     * \n     * Convert the previous stack logic into this by using a pointer to track\n     * previous asteroid.\n     *"
    ],
    "functions": [
        "asteroidCollision",
        "asteroidCollision2",
        "main"
    ],
    "classes": [
        "AsteroidCollisions"
    ]
}