{
    "identifiers": [
        "com",
        "sparta",
        "communityback",
        "exception",
        "com",
        "sparta",
        "communityback",
        "dto",
        "ResultResponseDto",
        "com",
        "sparta",
        "communityback",
        "dto",
        "StatusResponseDto",
        "lombok",
        "slf4j",
        "Slf4j",
        "org",
        "springframework",
        "http",
        "HttpStatus",
        "org",
        "springframework",
        "http",
        "ResponseEntity",
        "org",
        "springframework",
        "security",
        "access",
        "AuthorizationServiceException",
        "org",
        "springframework",
        "web",
        "bind",
        "MethodArgumentNotValidException",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "ExceptionHandler",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "RestControllerAdvice",
        "Slf4j",
        "topic",
        "RestControllerAdvice",
        "ExceptionHandler",
        "ex",
        "restApiException",
        "HttpStatus",
        "BAD_REQUEST",
        "value",
        "ex",
        "getMessage",
        "ResponseEntity",
        "badRequest",
        "body",
        "restApiException",
        "ExceptionHandler",
        "ex",
        "sb",
        "ex",
        "getFieldErrors",
        "forEach",
        "e",
        "sb",
        "append",
        "e",
        "getDefaultMessage",
        "append",
        "sb",
        "setLength",
        "sb",
        "length",
        "restApiException",
        "HttpStatus",
        "BAD_REQUEST",
        "value",
        "sb",
        "toString",
        "ResponseEntity",
        "badRequest",
        "body",
        "restApiException",
        "ExceptionHandler",
        "ex",
        "restApiException",
        "HttpStatus",
        "NOT_FOUND",
        "value",
        "ex",
        "getMessage",
        "restApiException",
        "HttpStatus",
        "NOT_FOUND",
        "ExceptionHandler",
        "ex",
        "restApiException",
        "HttpStatus",
        "UNAUTHORIZED",
        "value",
        "ex",
        "getMessage",
        "restApiException",
        "HttpStatus",
        "UNAUTHORIZED",
        "ExceptionHandler",
        "ex",
        "restApiException",
        "HttpStatus",
        "BAD_REQUEST",
        "value",
        "ex",
        "getMessage",
        "restApiException",
        "HttpStatus",
        "BAD_REQUEST"
    ],
    "literals": [
        "\"Global exception\"",
        "\" / \""
    ],
    "variables": [],
    "comments": [
        "IllegalArgumentException 처리",
        "MethodArgumentNotValidException (requestDto에서 valid 관련해서 생기는 예외) 처리",
        "",
        "StatusCodesResponseDto restApiException = new StatusCodesResponseDto(",
        "HttpStatus.BAD_REQUEST.value(),",
        "ex.getFieldError().getDefaultMessage());",
        "notfound에 body값이 들어가지않음",
        "unauthorized가 없음...",
        "unauthorized가 없음..."
    ],
    "docstrings": [],
    "functions": [
        "handleException",
        "handleException",
        "handleException",
        "handleException",
        "handleException"
    ],
    "classes": [
        "GlobalExceptionHandler"
    ]
}