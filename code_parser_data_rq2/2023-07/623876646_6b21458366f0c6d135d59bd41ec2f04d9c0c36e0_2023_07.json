{
    "identifiers": [
        "jax",
        "numpy",
        "jnp",
        "numpy",
        "np",
        "pandas",
        "pd",
        "plotly",
        "express",
        "px",
        "plotly",
        "graph_objects",
        "go",
        "lcm",
        "entry_point",
        "get_lcm_function",
        "consumption_function",
        "grid",
        "work_status",
        "consumption_function",
        "wealth",
        "w",
        "work_status",
        "work_status",
        "w",
        "grid",
        "model",
        "model_solution",
        "model_params",
        "period",
        "lagged_retirement",
        "model",
        "get_lcm_function",
        "model",
        "model",
        "targets",
        "simulate_model",
        "model_params",
        "vf_arr_list",
        "model_solution",
        "period",
        "initial_states",
        "jnp",
        "linspace",
        "start",
        "model",
        "stop",
        "model",
        "num",
        "grid_size",
        "jnp",
        "repeat",
        "lagged_retirement",
        "repeats",
        "grid_size",
        "simulation_results",
        "analytical_data",
        "numerical_data",
        "grid",
        "n_periods",
        "pd",
        "DataFrame",
        "np",
        "array",
        "analytical_data",
        "T",
        "columns",
        "i",
        "i",
        "n_periods",
        "pd",
        "DataFrame",
        "numerical_data",
        "T",
        "columns",
        "i",
        "i",
        "n_periods",
        "pd",
        "concat",
        "analytical",
        "numerical",
        "axis",
        "keys",
        "names",
        "reset_index",
        "pd",
        "wide_to_long",
        "plot_data",
        "stubnames",
        "i",
        "j",
        "reset_index",
        "set_index",
        "sort_index",
        "np",
        "tile",
        "grid",
        "n_periods",
        "plot_data",
        "reset_index",
        "plot_data",
        "model",
        "analytical_consumption_fct",
        "lcm_solution",
        "work_status",
        "model_params",
        "period",
        "model",
        "model",
        "model",
        "np",
        "linspace",
        "grid_start",
        "grid_stop",
        "grid_size",
        "go",
        "Figure",
        "analytical_consumption_fct",
        "compute_analytical_consumption",
        "consumption_function",
        "analytical_consumption_fct",
        "period",
        "work_status",
        "work_status",
        "grid",
        "grid",
        "fig",
        "add_trace",
        "go",
        "Scatter",
        "x",
        "grid",
        "y",
        "analytical_consumption",
        "mode",
        "name",
        "lcm_solution",
        "compute_numerical_consumption",
        "model",
        "model",
        "model_solution",
        "lcm_solution",
        "model_params",
        "model_params",
        "period",
        "period",
        "lagged_retirement",
        "work_status",
        "fig",
        "add_trace",
        "go",
        "Scatter",
        "x",
        "grid",
        "y",
        "numerical_consumption",
        "mode",
        "name",
        "fig",
        "update_layout",
        "title",
        "period",
        "xaxis_title",
        "yaxis_title",
        "fig",
        "analytical_consumption",
        "numerical_consumption",
        "grid",
        "len",
        "analytical_consumption",
        "prepare_plotting_data",
        "analytical_data",
        "analytical_consumption",
        "numerical_data",
        "numerical_consumption",
        "grid",
        "grid",
        "n_periods",
        "n_periods",
        "px",
        "scatter",
        "plot_data",
        "reset_index",
        "x",
        "y",
        "color",
        "animation_frame",
        "fig",
        "update_layout",
        "title",
        "xaxis_title",
        "yaxis_title",
        "xaxis",
        "plot_data",
        "max",
        "yaxis",
        "plot_data",
        "max",
        "fig",
        "analytical_solution",
        "numerical_solution",
        "grid",
        "len",
        "analytical_solution",
        "state",
        "agent_states",
        "prepare_plotting_data",
        "analytical_data",
        "analytical_solution",
        "state",
        "numerical_data",
        "numerical_solution",
        "state",
        "grid",
        "grid",
        "n_periods",
        "n_periods",
        "px",
        "line",
        "plot_data",
        "x",
        "y",
        "color",
        "animation_frame",
        "figure",
        "update_layout",
        "title",
        "state",
        "capitalize",
        "xaxis_title",
        "yaxis_title",
        "xaxis",
        "plot_data",
        "max",
        "yaxis",
        "plot_data",
        "max",
        "figure",
        "figs"
    ],
    "literals": [
        "\"states\"",
        "\"wealth\"",
        "\"n_points\"",
        "\"simulate\"",
        "\"wealth\"",
        "\"states\"",
        "\"wealth\"",
        "\"start\"",
        "\"states\"",
        "\"wealth\"",
        "\"stop\"",
        "\"lagged_retirement\"",
        "\"choices\"",
        "\"consumption\"",
        "f\"value{i}\"",
        "f\"value{i}\"",
        "\"analytical\"",
        "\"numerical\"",
        "\"calculation_procedure\"",
        "\"wealth_index\"",
        "\"value\"",
        "\"calculation_procedure\"",
        "\"wealth_index\"",
        "\"period\"",
        "\"calculation_procedure\"",
        "\"period\"",
        "\"wealth_index\"",
        "\"wealth\"",
        "\"states\"",
        "\"wealth\"",
        "\"start\"",
        "\"states\"",
        "\"wealth\"",
        "\"stop\"",
        "\"states\"",
        "\"wealth\"",
        "\"n_points\"",
        "\"markers\"",
        "\"Analytical consumption function\"",
        "\"markers\"",
        "\"Simulated consumption function\"",
        "f\"Consumption function for period {period}\"",
        "\"Wealth\"",
        "\"Consumption\"",
        "\"period\"",
        "\"value\"",
        "\"calculation_procedure\"",
        "\"wealth\"",
        "\"Consumption profiles\"",
        "\"Period\"",
        "\"Consumption\"",
        "\"range\"",
        "\"period\"",
        "\"range\"",
        "\"value\"",
        "\"worker\"",
        "\"worker\"",
        "\"retired\"",
        "\"wealth\"",
        "\"value\"",
        "\"calculation_procedure\"",
        "\"period\"",
        "f\"Value function {state.capitalize()}\"",
        "\"Wealth\"",
        "\"Value\"",
        "\"range\"",
        "\"wealth\"",
        "\"range\"",
        "\"value\""
    ],
    "variables": [
        "grid_size",
        "simulate_model",
        "_",
        "simulation_results",
        "analytical",
        "numerical",
        "plot_data",
        "plot_data",
        "plot_data",
        "plot_data",
        "grid_start",
        "grid_stop",
        "grid_size",
        "grid",
        "fig",
        "analytical_consumption",
        "numerical_consumption",
        "n_periods",
        "plot_data",
        "fig",
        "figs",
        "n_periods",
        "agent_states",
        "plot_data",
        "figure",
        "figs",
        "state"
    ],
    "comments": [
        "Prepare Data for Plotting",
        "Plot Data",
        "Prepare Data for Plotting"
    ],
    "docstrings": [
        "\"\"\"Compute consumption values for a given grid.\n\n    Args:\n        consumption_function (callable): Consumption function.\n        grid (np.ndarray): Grid of wealth values.\n        work_status (bool): Whether the agent is working or not.\n\n    Returns:\n        list: Consumption values for the given grid.\n\n    \"\"\"",
        "\"\"\"Simulate consumption values given numerical model solution.\n\n    Args:\n        model (dict): Model specification.\n        model_solution (list): Numerical model solution.\n        model_params (dict): Model parameters.\n        period (int): Period for which to compute consumption.\n        lagged_retirement (float, optional): Lagged retirement status.\n\n    Returns:\n        list: Consumption values for the given grid.\n\n    \"\"\"",
        "\"\"\"Prepare data for plotting.\n\n    Args:\n        analytical_data (list): Analytical consumption values.\n        numerical_data (numpy.ndarray): Numerical consumption values.\n        grid (list): Grid of wealth values.\n        n_periods (int): Number of periods.\n\n    Returns:\n        pd.DataFrame: Data for plotting.\n\n    \"\"\"",
        "\"\"\"Plot the consumption function for a given period.\n\n    Plots consumption function depending on wealth for a given period.\n\n    Args:\n        model (dict): Model specification.\n        analytical_consumption_fct (callable, optional): Analytical consumption\n            function. Defaults to None.\n        lcm_solution (list, optional): Numerical model solution.\n            Defaults to None.\n        work_status (bool, optional): Whether the agent is working or not.\n            Defaults to True.\n        model_params (dict, optional): Model parameters. Defaults to None.\n        period (int, optional): Period for which to compute consumption. Defaults to 0.\n\n    Returns:\n        go.Figure: Plotly figure.\n\n    \"\"\"",
        "\"\"\"Plot consumption profiles for a given grid.\n\n    Args:\n        analytical_consumption (list): Analytical consumption values.\n        numerical_consumption (list): Numerical consumption values.\n        grid (list): Grid of wealth values.\n\n    \"\"\"",
        "\"\"\"Plot value functions.\n\n    Args:\n        analytical_solution (dict): Analytical value array.\n        numerical_solution (dict): Numerical value array.\n        grid (list): Grid of wealth values.\n\n    Returns:\n        go.Figure: Plotly figure.\n\n    \"\"\""
    ],
    "functions": [
        "compute_analytical_consumption",
        "compute_numerical_consumption",
        "prepare_plotting_data",
        "plot_consumption_function",
        "plot_consumption_profiles",
        "plot_value_functions"
    ],
    "classes": []
}