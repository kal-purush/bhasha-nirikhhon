{
    "identifiers": [
        "require",
        "require",
        "extractNameAndFavoriteFridge1",
        "fs",
        "csv",
        "data",
        "data",
        "data",
        "results",
        "name",
        "favoriteFridge1",
        "results",
        "entry",
        "entry",
        "entry",
        "output",
        "fs",
        "header",
        "outputString",
        "err",
        "err",
        "err",
        "output",
        "extractItemsAndTotalCost",
        "fs",
        "csv",
        "data",
        "data",
        "data",
        "parseFloat",
        "data",
        "isNaN",
        "cost",
        "cost",
        "name",
        "name",
        "name",
        "results",
        "name",
        "results",
        "name",
        "name",
        "results",
        "name",
        "person",
        "items",
        "person",
        "cost",
        "results",
        "entry",
        "entry",
        "entry",
        "entry",
        "totalCost",
        "output",
        "fs",
        "header",
        "content",
        "err",
        "err",
        "err",
        "output",
        "updateCSV",
        "currentDate",
        "targetDate",
        "fs",
        "csv",
        "data",
        "FavoriteFridge1",
        "data",
        "FavoriteFridge2",
        "updatedData",
        "data",
        "updatedData",
        "data",
        "data",
        "output",
        "fs",
        "header",
        "content",
        "err",
        "err",
        "err",
        "extractNameAndFavoriteFridge1",
        "extractItemsAndTotalCost",
        "updateCSV"
    ],
    "literals": [
        "'fs'",
        "'csv-parser'",
        "'fileA.csv'",
        "'Name'",
        "'FavoriteFridge1'",
        "'data'",
        "'end'",
        "${entry.name}, ${entry.favoriteFridge1}",
        "'\\n'",
        "'***************Task 1****************\\n'",
        "'fileB.csv'",
        "'Task 1 complete! Results saved to fileB.csv'",
        "'fileA.csv'",
        "'Name'",
        "'FavoriteFridge1'",
        "'Items'",
        "'Cost'",
        "'FavoriteFridge2'",
        "'data'",
        "'Jill'",
        "'Candice'",
        "'Alycia'",
        "'end'",
        "${entry.name}, Items: ${entry.items.join(', ')}, Total Cost: ${totalCost}",
        "', '",
        "'\\n*************Task 2**************\\n'",
        "'\\n'",
        "'fileB.csv'",
        "'Task 2 complete! Results saved to fileB.csv'",
        "'2019-01-13T03:00:00'",
        "'fileA.csv'",
        "'data'",
        "'end'",
        "','",
        "'\\n***********Task 3**********\\n'",
        "'\\n'",
        "'fileB.csv'",
        "'Task 3 - updated! Results saved to fileB.csv'"
    ],
    "variables": [
        "fs",
        "csv",
        "extractNameAndFavoriteFridge1",
        "results",
        "name",
        "favoriteFridge1",
        "output",
        "outputString",
        "header",
        "extractItemsAndTotalCost",
        "results",
        "name",
        "items",
        "cost",
        "person",
        "output",
        "totalCost",
        "header",
        "content",
        "updateCSV",
        "currentDate",
        "targetDate",
        "updatedData",
        "data",
        "output",
        "header",
        "content"
    ],
    "comments": [
        "npm init -y",
        "npm install csv-parser fs",
        "the csv-parser is to read whereas fs is to write",
        "For more details: https://www.npmjs.com/package/csv-parser",
        "1. Write a script that extracts and lists Name and FavoriteFridge1.",
        "extracting the headers we need",
        "formatted output",
        "Join the array elements with newline characters",
        "2. Write a script that will extract and list Jill, Candice, and Alyciaâ€™s items and create a column for total cost.",
        "3. Write a script that can be used to update the CSV to change all FavoriteFridge1 to FavoriteFridge2 at 11pm on Sunday 12 January 2019.",
        "11pm on Sunday 12 January 2019 in UTC",
        "new array for csv file"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}