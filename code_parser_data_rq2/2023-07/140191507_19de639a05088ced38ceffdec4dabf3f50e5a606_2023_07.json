{
    "identifiers": [
        "typing",
        "TYPE_CHECKING",
        "Any",
        "Callable",
        "Generic",
        "Literal",
        "Optional",
        "Tuple",
        "Type",
        "TypeVar",
        "Union",
        "cast",
        "get_type_hints",
        "overload",
        "django",
        "forms",
        "django",
        "http",
        "HttpRequest",
        "HttpResponse",
        "JsonResponse",
        "django",
        "urls",
        "URLPattern",
        "path",
        "registry",
        "forms",
        "FormGroup",
        "FormGroup",
        "serialization",
        "create_schema",
        "serialize",
        "TypeVar",
        "bound",
        "HttpRequest",
        "TypeVar",
        "bound",
        "Union",
        "Any",
        "TypeVar",
        "bound",
        "Enum",
        "TypeVar",
        "TypeVar",
        "TypeVar",
        "TypeVar",
        "TypeVar",
        "TypeVar",
        "bound",
        "Union",
        "forms",
        "Form",
        "forms",
        "ModelForm",
        "Any",
        "forms",
        "BaseFormSet",
        "forms",
        "BaseInlineFormSet",
        "FormGroup",
        "TYPE_CHECKING",
        "Tuple",
        "Callable",
        "TForm",
        "Callable",
        "TForm",
        "TResponse",
        "Union",
        "THttpRequest",
        "TPermission",
        "Literal",
        "Union",
        "TResponse",
        "HttpResponse",
        "cls",
        "Type",
        "item",
        "Any",
        "Any",
        "item",
        "item",
        "cls",
        "Type",
        "item",
        "Any",
        "Any",
        "item",
        "registry",
        "type_registry",
        "registry",
        "type_registry",
        "item",
        "RPCRequestHolder",
        "cls",
        "Type",
        "item",
        "Any",
        "Any",
        "item",
        "InputOutputHolder",
        "Union",
        "Callable",
        "THttpRequest",
        "TForm",
        "TResponse",
        "Callable",
        "THttpRequest",
        "TResponse",
        "Callable",
        "THttpRequest",
        "InputOutput",
        "TForm",
        "TResponse",
        "forms",
        "Form",
        "args",
        "Any",
        "kwargs",
        "Any",
        "kwargs",
        "pop",
        "args",
        "kwargs",
        "Generic",
        "THttpRequest",
        "TContext",
        "TFirst",
        "TSecond",
        "TQuerySet",
        "context_provider",
        "Callable",
        "THttpRequest",
        "TFirst",
        "TSecond",
        "TContext",
        "authentication",
        "Callable",
        "HttpRequest",
        "Union",
        "THttpRequest",
        "Enum",
        "Literal",
        "context_provider",
        "authentication",
        "context_provider",
        "url_path",
        "url_path",
        "URLPattern",
        "arg_name",
        "arg_type",
        "get_type_hints",
        "context_provider",
        "items",
        "arg_name",
        "instance",
        "append",
        "arg_name",
        "url_args",
        "append",
        "arg_type",
        "arg_name",
        "url_args_as_params",
        "append",
        "arg_type",
        "arg_name",
        "url_args",
        "url_path",
        "join",
        "url_args",
        "context_provider",
        "Union",
        "Callable",
        "THttpRequest",
        "TContext",
        "TSubcontext",
        "Callable",
        "THttpRequest",
        "TContext",
        "TFirst",
        "TSubcontext",
        "Callable",
        "THttpRequest",
        "TContext",
        "TFirst",
        "TSecond",
        "TSubcontext",
        "request",
        "THttpRequest",
        "args",
        "Any",
        "kwargs",
        "Any",
        "Any",
        "context_provider",
        "request",
        "context_provider",
        "request",
        "args",
        "kwargs",
        "context_provider",
        "__annotations__",
        "context_provider",
        "RPCContext",
        "THttpRequest",
        "TSubcontext",
        "TFirst",
        "TSecond",
        "inner_context_provider",
        "authentication",
        "overload",
        "view",
        "Union",
        "Callable",
        "THttpRequest",
        "TContext",
        "TResponse",
        "Callable",
        "THttpRequest",
        "TResponse",
        "context_provider",
        "Optional",
        "Callable",
        "THttpRequest",
        "TFirst",
        "TSecond",
        "TContext",
        "URLPattern",
        "overload",
        "view",
        "Union",
        "Callable",
        "THttpRequest",
        "TContext",
        "TForm",
        "TResponse",
        "Callable",
        "THttpRequest",
        "TForm",
        "TResponse",
        "context_provider",
        "Optional",
        "Callable",
        "THttpRequest",
        "TFirst",
        "TSecond",
        "TContext",
        "URLPattern",
        "view",
        "Union",
        "Callable",
        "THttpRequest",
        "TContext",
        "TResponse",
        "Callable",
        "THttpRequest",
        "TResponse",
        "Callable",
        "THttpRequest",
        "TContext",
        "TForm",
        "TResponse",
        "Callable",
        "THttpRequest",
        "TForm",
        "TResponse",
        "context_provider",
        "Optional",
        "Callable",
        "THttpRequest",
        "TFirst",
        "TSecond",
        "TContext",
        "URLPattern",
        "get_type_hints",
        "view",
        "create_schema",
        "return_type",
        "registry",
        "definitions_registry",
        "Optional",
        "Type",
        "forms",
        "BaseForm",
        "get_type_hints",
        "view",
        "get",
        "get_type_hints",
        "view",
        "values",
        "issubclass",
        "form_type",
        "form_type",
        "create_schema",
        "form_type",
        "registry",
        "definitions_registry",
        "form_type",
        "EmptyForm",
        "issubclass",
        "context_type",
        "requires_context",
        "issubclass",
        "form_class",
        "forms",
        "ModelForm",
        "issubclass",
        "form_class",
        "Meta",
        "model",
        "context_type",
        "request",
        "THttpRequest",
        "args",
        "Any",
        "kwargs",
        "Any",
        "Any",
        "authentication",
        "request",
        "authentication_check",
        "JsonResponse",
        "status",
        "safe",
        "isinstance",
        "authentication_check",
        "Enum",
        "JsonResponse",
        "authentication_check",
        "name",
        "status",
        "safe",
        "authentication_check",
        "Any",
        "requires_context",
        "context_provider",
        "request",
        "args",
        "kwargs",
        "context_provider",
        "context_provider",
        "request",
        "args",
        "kwargs",
        "requires_instance",
        "context",
        "is_empty_form",
        "get_type_hints",
        "form_class",
        "extra_args",
        "request",
        "issubclass",
        "form_type_hints",
        "get",
        "HttpRequest",
        "form_class",
        "data",
        "request",
        "POST",
        "request",
        "method",
        "form_kwargs",
        "EmptyForm",
        "data",
        "request",
        "method",
        "form",
        "is_valid",
        "view",
        "request",
        "context",
        "form",
        "form_type",
        "view",
        "request",
        "context",
        "forms",
        "ValidationError",
        "error",
        "hasattr",
        "error",
        "JsonResponse",
        "error",
        "message_dict",
        "status",
        "safe",
        "JsonResponse",
        "error",
        "message",
        "status",
        "safe",
        "serialize",
        "response",
        "return_schema",
        "JsonResponse",
        "data",
        "safe",
        "form",
        "errors",
        "isinstance",
        "form",
        "forms",
        "BaseFormSet",
        "FormGroup",
        "field_name",
        "error",
        "error",
        "field_errors",
        "field_name",
        "field_errors",
        "form",
        "errors",
        "get_json_data",
        "items",
        "JsonResponse",
        "errors",
        "status",
        "safe",
        "HttpResponse",
        "status",
        "view",
        "url_path",
        "view",
        "requires_context",
        "no_context_url_path",
        "view",
        "is_empty_form",
        "url_name",
        "registry",
        "value_registry",
        "form_class",
        "registry",
        "type_registry",
        "form_class",
        "url_name",
        "registry",
        "type_registry",
        "return_type",
        "registry",
        "rpc_registry",
        "no_context_url_path",
        "input_name",
        "output_name",
        "url_args_as_params",
        "requires_context",
        "issubclass",
        "form_class",
        "FormGroup",
        "issubclass",
        "form_class",
        "forms",
        "BaseForm",
        "path",
        "url_path",
        "wrapped_view",
        "name",
        "url_name",
        "route",
        "view",
        "Union",
        "Callable",
        "THttpRequest",
        "TContext",
        "TResponse",
        "URLPattern",
        "get_type_hints",
        "view",
        "create_schema",
        "return_type",
        "registry",
        "definitions_registry",
        "request",
        "THttpRequest",
        "args",
        "Any",
        "kwargs",
        "Any",
        "Any",
        "authentication",
        "request",
        "authentication_check",
        "JsonResponse",
        "status",
        "safe",
        "isinstance",
        "authentication_check",
        "Enum",
        "JsonResponse",
        "authentication_check",
        "name",
        "status",
        "safe",
        "authentication_check",
        "context_provider",
        "request",
        "args",
        "kwargs",
        "view",
        "request",
        "context",
        "serialize",
        "return_value",
        "return_schema",
        "JsonResponse",
        "data",
        "safe",
        "view",
        "url_path",
        "view",
        "url_name",
        "registry",
        "type_registry",
        "return_type",
        "registry",
        "rpc_registry",
        "no_context_url_path",
        "input_name",
        "output_name",
        "url_args_as_params",
        "path",
        "url_path",
        "wrapped_view",
        "name",
        "url_name",
        "route",
        "Generic",
        "THttpRequest",
        "authentication",
        "Callable",
        "HttpRequest",
        "Union",
        "THttpRequest",
        "Enum",
        "Literal",
        "authentication",
        "url_path",
        "URLPattern",
        "Tuple",
        "view",
        "TView",
        "THttpRequest",
        "TForm",
        "TResponse",
        "URLPattern",
        "get_type_hints",
        "view",
        "create_schema",
        "return_type",
        "registry",
        "definitions_registry",
        "Optional",
        "Type",
        "forms",
        "BaseForm",
        "get_type_hints",
        "view",
        "get",
        "form_type",
        "issubclass",
        "form_type",
        "create_schema",
        "form_type",
        "registry",
        "definitions_registry",
        "form_type",
        "EmptyForm",
        "request",
        "THttpRequest",
        "args",
        "Any",
        "kwargs",
        "Any",
        "Any",
        "authentication",
        "request",
        "authentication_check",
        "JsonResponse",
        "status",
        "safe",
        "isinstance",
        "authentication_check",
        "Enum",
        "JsonResponse",
        "authentication_check",
        "name",
        "status",
        "safe",
        "authentication_check",
        "is_empty_form",
        "get_type_hints",
        "form_class",
        "request",
        "issubclass",
        "form_type_hints",
        "get",
        "HttpRequest",
        "form_class",
        "data",
        "request",
        "POST",
        "request",
        "method",
        "form_kwargs",
        "EmptyForm",
        "data",
        "request",
        "method",
        "form",
        "is_valid",
        "view",
        "request",
        "kwargs",
        "form",
        "form",
        "isinstance",
        "response",
        "HttpResponse",
        "response",
        "forms",
        "ValidationError",
        "error",
        "hasattr",
        "error",
        "JsonResponse",
        "error",
        "message_dict",
        "status",
        "safe",
        "JsonResponse",
        "error",
        "message",
        "status",
        "safe",
        "serialize",
        "response",
        "return_schema",
        "JsonResponse",
        "data",
        "safe",
        "form",
        "errors",
        "isinstance",
        "form",
        "forms",
        "BaseFormSet",
        "FormGroup",
        "field_name",
        "error",
        "error",
        "field_errors",
        "field_name",
        "field_errors",
        "form",
        "errors",
        "get_json_data",
        "items",
        "JsonResponse",
        "errors",
        "status",
        "safe",
        "HttpResponse",
        "status",
        "view",
        "url_path",
        "view",
        "is_empty_form",
        "url_name",
        "registry",
        "type_registry",
        "form_type",
        "registry",
        "value_registry",
        "form_class",
        "url_name",
        "registry",
        "type_registry",
        "return_type",
        "registry",
        "rpc_registry",
        "url_path",
        "input_name",
        "output_name",
        "url_args_as_params",
        "issubclass",
        "form_class",
        "FormGroup",
        "issubclass",
        "form_class",
        "forms",
        "BaseForm",
        "path",
        "url_path",
        "wrapped_view",
        "name",
        "url_name",
        "route",
        "context_provider",
        "Union",
        "Callable",
        "THttpRequest",
        "TContext",
        "Callable",
        "THttpRequest",
        "TFirst",
        "TContext",
        "Callable",
        "THttpRequest",
        "TFirst",
        "TSecond",
        "TContext",
        "RPCContext",
        "THttpRequest",
        "TContext",
        "TFirst",
        "TSecond",
        "cast",
        "Callable",
        "THttpRequest",
        "TFirst",
        "TSecond",
        "TContext",
        "context_provider",
        "RPCContext",
        "THttpRequest",
        "TContext",
        "TFirst",
        "TSecond",
        "casted_context_provider",
        "authentication",
        "context",
        "authentication",
        "Callable",
        "HttpRequest",
        "Union",
        "THttpRequest",
        "Enum",
        "Literal",
        "RPC",
        "THttpRequest",
        "RPC",
        "THttpRequest",
        "authentication"
    ],
    "literals": [
        "\"THttpRequest\"",
        "\"TQuerySet\"",
        "\"TPermission\"",
        "\"TFirst\"",
        "\"TSecond\"",
        "\"TContext\"",
        "\"TSubcontext\"",
        "\"TResponse\"",
        "\"TForm\"",
        "\"RPCResponse\"",
        "\"RPCRequest\"",
        "\"RPCPermission\"",
        "\"RPCPermission\"",
        "\"InputOutput\"",
        "\"instance\"",
        "f\"api/functional-rpc-{context_provider.__name__}/\"",
        "f\"/{self.url_path}\"",
        "\"request\"",
        "\"return\"",
        "\"queryset\"",
        "f\"<{arg_type.__name__}:{arg_name}>\"",
        "\"/\"",
        "\"/\"",
        "\"RPCContext[THttpRequest, TSubcontext, TFirst, TSecond, None]\"",
        "\"return\"",
        "\"form\"",
        "\"Missing form argument\"",
        "\"UNAUTHORIZED\"",
        "\"instance\"",
        "\"request\"",
        "\"request\"",
        "\"POST\"",
        "\"POST\"",
        "\"error_dict\"",
        "\"__all__\"",
        "\"message\"",
        "\"\"",
        "f\"rpc_{view.__name__}\"",
        "f\"{self.url_path}rpc_{view.__name__}/\"",
        "f\"{self.no_context_url_path}rpc_{view.__name__}/\"",
        "f\"{url_name}_input\"",
        "f\"{url_name}_output\"",
        "\"url\"",
        "f\"/{self.no_context_url_path}\"",
        "\"input\"",
        "\"output\"",
        "\"params\"",
        "\"type\"",
        "\"form_group\"",
        "\"form\"",
        "\"form_set\"",
        "\"return\"",
        "\"UNAUTHORIZED\"",
        "f\"rpc_{view.__name__}\"",
        "f\"{self.url_path}rpc_{view.__name__}/\"",
        "f\"{url_name}_output\"",
        "\"url\"",
        "f\"/{self.no_context_url_path}\"",
        "\"input\"",
        "\"output\"",
        "\"params\"",
        "\"type\"",
        "\"form\"",
        "\"api/functional-rpc/\"",
        "f\"/{self.url_path}\"",
        "\"return\"",
        "\"form\"",
        "\"Missing form argument\"",
        "\"UNAUTHORIZED\"",
        "\"request\"",
        "\"request\"",
        "\"POST\"",
        "\"POST\"",
        "\"error_dict\"",
        "\"__all__\"",
        "\"message\"",
        "\"\"",
        "f\"rpc_{view.__name__}\"",
        "f\"{self.url_path}rpc_{view.__name__}/\"",
        "f\"{url_name}_input\"",
        "f\"{url_name}_output\"",
        "\"url\"",
        "f\"/{self.url_path}\"",
        "\"input\"",
        "\"output\"",
        "\"params\"",
        "\"type\"",
        "\"form_group\"",
        "\"form\"",
        "\"form_set\""
    ],
    "variables": [
        "THttpRequest",
        "TQuerySet",
        "TPermission",
        "TFirst",
        "TSecond",
        "TContext",
        "TSubcontext",
        "TResponse",
        "TForm",
        "InputOutput",
        "RPCRequest",
        "RPCResponse",
        "permissions",
        "content",
        "TView",
        "context_provider",
        "authentication",
        "url_path",
        "no_context_url_path",
        "url",
        "routes",
        "instance",
        "url_args",
        "url_args_as_params",
        "inner_context_provider",
        "__annotations__",
        "inner_context_provider",
        "return_type",
        "return_schema",
        "form_type",
        "context_type",
        "is_empty_form",
        "form_class",
        "requires_context",
        "requires_instance",
        "authentication_check",
        "request",
        "extra_args",
        "context",
        "extra_args",
        "context",
        "form_type_hints",
        "form_kwargs",
        "form",
        "form",
        "response",
        "data",
        "errors",
        "url_name",
        "url_path",
        "input_name",
        "input_name",
        "input_name",
        "input_name",
        "output_name",
        "output_name",
        "url_name",
        "route",
        "return_type",
        "return_schema",
        "authentication_check",
        "request",
        "context",
        "return_value",
        "data",
        "url_name",
        "url_path",
        "input_name",
        "output_name",
        "output_name",
        "url_name",
        "route",
        "authentication",
        "url_path",
        "url",
        "routes",
        "url_args_as_params",
        "return_type",
        "return_schema",
        "form_type",
        "is_empty_form",
        "form_class",
        "authentication_check",
        "request",
        "form_type_hints",
        "form_kwargs",
        "form",
        "form",
        "response",
        "data",
        "errors",
        "url_name",
        "url_path",
        "input_name",
        "input_name",
        "input_name",
        "input_name",
        "output_name",
        "output_name",
        "url_name",
        "route",
        "casted_context_provider",
        "context"
    ],
    "comments": [
        "type: ignore[call-arg]",
        "type: ignore[arg-type]",
        "type: ignore[attr-defined]",
        "type: ignore[call-arg]",
        "type: ignore[call-arg]",
        "type: ignore[assignment]",
        "type: ignore[arg-type, call-arg]",
        "TODO: this should be code + message, not just messages.",
        "But types will then need to be updated.",
        "type: ignore[assignment]",
        "type: ignore[assignment]",
        "TODO: merge  RPCContext.rpc() with RPC.__call__()  they are virtually",
        "identical. Except wrapped_view here needs to inject the context.",
        "And url in the registry is self.no_context_url_path",
        "type: ignore[call-arg]",
        "input_name = f\"{url_name}_input\"",
        "registry.type_registry[input_name] = None",
        "Some forms use positional arguments, like AuthenticationForm so",
        "we can't assume the first argument is the POST data.",
        "type: ignore",
        "type: ignore[call-arg]",
        "TODO: this should be code + message, not just messages.",
        "But types will then need to be updated.",
        "type: ignore[assignment]",
        "type: ignore[assignment]",
        "self.rpcs.append(context)"
    ],
    "docstrings": [],
    "functions": [
        "__class_getitem__",
        "__class_getitem__",
        "__class_getitem__",
        "context",
        "inner_context_provider",
        "process",
        "process",
        "process",
        "wrapped_view",
        "rpc",
        "wrapped_view",
        "__call__",
        "wrapped_view",
        "context",
        "create_rpc"
    ],
    "classes": [
        "RPCResponse",
        "RPCRequest",
        "RPCRequestHolder",
        "InputOutput",
        "InputOutputHolder",
        "EmptyForm",
        "RPCContext",
        "RPC"
    ]
}