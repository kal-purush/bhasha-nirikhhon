{
    "identifiers": [
        "re",
        "pathlib",
        "Path",
        "mkdocs_gen_files",
        "file_path",
        "open",
        "file_path",
        "f",
        "f",
        "read",
        "re",
        "search",
        "all_regex",
        "contents",
        "re",
        "DOTALL",
        "match",
        "match",
        "group",
        "all_str",
        "translate",
        "ord",
        "c",
        "c",
        "all_str",
        "strip",
        "split",
        "path",
        "PATHS_TO_PARSE",
        "Path",
        "path",
        "Path",
        "src_path",
        "parts",
        "with_suffix",
        "src_path",
        "with_suffix",
        "as_posix",
        "replace",
        "get_elements_from_all",
        "src_path",
        "Path",
        "doc_path",
        "with_suffix",
        "mkdocs_gen_files",
        "open",
        "doc_path_function",
        "f",
        "identifier",
        "file",
        "f",
        "mkdocs_gen_files",
        "set_edit_path",
        "doc_path_function",
        "Path",
        "src_path"
    ],
    "literals": [
        "'dynamiqs/utils/operators.py'",
        "'dynamiqs/utils/states.py'",
        "'dynamiqs/utils/utils.py'",
        "'dynamiqs/utils/tensor_types.py'",
        "'dynamiqs/utils/wigners.py'",
        "'r'",
        "r'__all__ = \\[([^\\]]+)\\]'",
        "' \\'\"\\n'",
        "','",
        "','",
        "'python_api'",
        "''",
        "''",
        "'/'",
        "'.'",
        "'.md'",
        "'w'",
        "f'::: {identifier}.{function}'",
        "'..'"
    ],
    "variables": [
        "PATHS_TO_PARSE",
        "contents",
        "all_regex",
        "match",
        "all_str",
        "all_str",
        "src_path",
        "doc_path",
        "identifier",
        "doc_path_function"
    ],
    "comments": [
        "capture list assigned to __all__ with a regular expression (the `[^\\]]+` part",
        "of the regex matches one or more characters that are not the closing bracket)",
        "re.DOTALL matches newlines",
        "extract first group from the match (the part inside the brackets)",
        "remove all whitespaces, newlines and single or double quotes",
        "strip the trailing comma (for multiline __all__ definitions) and split",
        "generate a documentation file for each function of each file",
        "start with e.g. 'dynamiqs/utils/operators.py'",
        "convert to e.g 'python_api/utils/operators'",
        "convert to e.g 'dynamiqs.utils.operators'",
        "loop over all functions in file",
        "convert to e.g 'python_api/utils/operators/eye.md'",
        "create the function page"
    ],
    "docstrings": [
        "\"\"\"Automatically generate the Python API documentation pages by parsing the public\nfunctions from `__all__`.\"\"\"",
        "\"\"\"Parse a file to find all elements of the `__all__` attribute.\"\"\""
    ],
    "functions": [
        "get_elements_from_all"
    ],
    "classes": []
}