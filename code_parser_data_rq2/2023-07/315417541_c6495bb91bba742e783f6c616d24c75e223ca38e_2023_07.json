{
    "identifiers": [
        "Collections",
        "Generic",
        "Diagnostics",
        "CodeAnalysis",
        "Linq",
        "Threading",
        "Microsoft",
        "AspNetCore",
        "Http",
        "Microsoft",
        "AspNetCore",
        "Routing",
        "Microsoft",
        "Azure",
        "WebJobs",
        "Rpc",
        "Core",
        "Internal",
        "Microsoft",
        "Extensions",
        "DependencyInjection",
        "Microsoft",
        "Extensions",
        "Primitives",
        "Microsoft",
        "Azure",
        "WebJobs",
        "Script",
        "Grpc",
        "EndpointDataSource",
        "EndpointDataSource",
        "Endpoint",
        "IScriptHostManager",
        "scriptHostManager",
        "_scriptHostManager",
        "scriptHostManager",
        "_scriptHostManager",
        "ActiveHostChanged",
        "OnHostChanged",
        "IReadOnlyList",
        "Endpoint",
        "ThrowIfDisposed",
        "EnsureEndpointsInitialized",
        "_endpoints",
        "ThrowIfDisposed",
        "EnsureChangeTokenInitialized",
        "_consumerChangeToken",
        "_lock",
        "_disposed",
        "_scriptHostManager",
        "ActiveHostChanged",
        "OnHostChanged",
        "_disposed",
        "_changeTokenRegistrations",
        "Count",
        "disposables",
        "disposables",
        "AddRange",
        "_changeTokenRegistrations",
        "_changeTokenRegistrations",
        "disposables",
        "disposable",
        "disposables",
        "disposable",
        "Dispose",
        "_cts",
        "Dispose",
        "Endpoint",
        "endpoint",
        "RequestDelegate",
        "CreateDelegate",
        "RequestDelegate",
        "next",
        "IServiceProvider",
        "services",
        "next",
        "context",
        "RequestServices",
        "services",
        "CreateAsyncScope",
        "context",
        "RequestServices",
        "scope",
        "ServiceProvider",
        "next",
        "context",
        "context",
        "RequestServices",
        "original",
        "endpoint",
        "RouteEndpoint",
        "route",
        "endpoint",
        "_extensionServices",
        "InvalidOperationException",
        "RouteEndpoint",
        "CreateDelegate",
        "route",
        "RequestDelegate",
        "services",
        "route",
        "RoutePattern",
        "route",
        "Order",
        "route",
        "Metadata",
        "route",
        "DisplayName",
        "MemberNotNull",
        "nameof",
        "_consumerChangeToken",
        "_consumerChangeToken",
        "_lock",
        "_consumerChangeToken",
        "CreateChangeTokenUnsynchronized",
        "collectionChanged",
        "MemberNotNull",
        "nameof",
        "_consumerChangeToken",
        "collectionChanged",
        "collectionChanged",
        "_changeTokenRegistrations",
        "dataSource",
        "_dataSources",
        "_changeTokenRegistrations",
        "Add",
        "ChangeToken",
        "OnChange",
        "dataSource",
        "GetChangeToken",
        "OnEndpointsChange",
        "collectionChanged",
        "_cts",
        "cts",
        "_consumerChangeToken",
        "CancellationChangeToken",
        "cts",
        "Token",
        "sender",
        "ActiveHostChangedEventArgs",
        "args",
        "_lock",
        "_dataSources",
        "Clear",
        "args",
        "NewHost",
        "Services",
        "services",
        "_extensionServices",
        "services",
        "WebJobsRpcEndpointDataSource",
        "services",
        "GetService",
        "WebJobsRpcEndpointDataSource",
        "Empty",
        "WebJobsRpcEndpointDataSource",
        "_dataSources",
        "AddRange",
        "sources",
        "_extensionServices",
        "OnEndpointsChange",
        "collectionChanged",
        "collectionChanged",
        "_lock",
        "_disposed",
        "oldTokenSource",
        "_cts",
        "oldChangeTokenRegistrations",
        "_changeTokenRegistrations",
        "oldTokenSource",
        "CreateChangeTokenUnsynchronized",
        "collectionChanged",
        "_endpoints",
        "CreateEndpointsUnsynchronized",
        "collectionChanged",
        "oldChangeTokenRegistrations",
        "registration",
        "oldChangeTokenRegistrations",
        "registration",
        "Dispose",
        "oldTokenSource",
        "Cancel",
        "MemberNotNull",
        "nameof",
        "_endpoints",
        "Endpoint",
        "dataSource",
        "_dataSources",
        "endpoints",
        "AddRange",
        "dataSource",
        "Endpoints",
        "Select",
        "WrapEndpoint",
        "_endpoints",
        "endpoints",
        "MemberNotNull",
        "nameof",
        "_endpoints",
        "_endpoints",
        "_lock",
        "_endpoints",
        "EnsureChangeTokenInitialized",
        "CreateEndpointsUnsynchronized",
        "_disposed",
        "ObjectDisposedException",
        "nameof",
        "ExtensionsCompositeEndpointDataSource"
    ],
    "literals": [
        "\"Trying to register extension endpoints, but no extension IServiceProvider available.\""
    ],
    "variables": [
        "_lock",
        "_dataSources",
        "IScriptHostManager",
        "_scriptHostManager",
        "IServiceProvider",
        "_extensionServices",
        "_endpoints",
        "IChangeToken",
        "_consumerChangeToken",
        "CancellationTokenSource",
        "_cts",
        "_changeTokenRegistrations",
        "_disposed",
        "Endpoints",
        "disposables",
        "IServiceProvider",
        "original",
        "AsyncServiceScope",
        "scope",
        "IServiceProvider",
        "services",
        "CancellationTokenSource",
        "cts",
        "sources",
        "CancellationTokenSource",
        "oldTokenSource",
        "oldChangeTokenRegistrations",
        "endpoints"
    ],
    "comments": [
        "Copyright (c) .NET Foundation. All rights reserved.",
        "Licensed under the MIT License. See License.txt in the project root for license information.",
        "Endpoint data source which composes all the WebJobs extension data sources together.",
        "</summary>",
        "<remarks>",
        "Implementation is adapted from <see cref=\"CompositeEndpointDataSource\"/>.",
        "https://github.com/dotnet/aspnetcore/blob/main/src/Http/Routing/src/CompositeEndpointDataSource.cs.",
        "</remarks>",
        "<inheritdoc />",
        "<inheritdoc />",
        "<inheritdoc />",
        "Dispose everything outside of the lock in case a registration is blocking on HandleChange completing",
        "on another thread or something.",
        "Incoming HttpContext has the gRPC script host services. Create a scope",
        "for the JobHost services and swap out the contexts request services.",
        "We only wrap URL-routeable endpoints (ie: RouteEndpoint).",
        "This is our first time initializing the change token, so the collection has \"changed\" from nothing.",
        "Prevent consumers from re-registering callback to in-flight events as that can",
        "cause a stack overflow.",
        "Example:",
        "1. B registers A.",
        "2. A fires event causing B's callback to get called.",
        "3. B executes some code in its callback, but needs to re-register callback",
        "in the same callback.",
        "Don't create a new change token if no one is listening.",
        "We have to hook to any OnChange callbacks before caching endpoints,",
        "otherwise we might miss changes that occurred to one of the _dataSources after caching.",
        "Don't update endpoints if no one has read them yet.",
        "Refresh the endpoints from data source so that callbacks can get the latest endpoints.",
        "Disposing registrations can block on user defined code on running on other threads that could try to acquire the _lock.",
        "Raise consumer callbacks. Any new callback registration would happen on the new token created in earlier step.",
        "Avoid raising callbacks inside a lock.",
        "Only cache _endpoints after everything succeeds without throwing.",
        "We don't want to create a negative cache which would cause 404s when there should be 500s.",
        "Defer initialization to avoid doing lots of reflection on startup.",
        "Now that we're caching the _enpoints, we're responsible for keeping them up-to-date even if the caller",
        "hasn't started listening for changes themselves yet.",
        "Note: we can't use DataSourceDependentCache here because we also need to handle a list of change",
        "tokens, which is a complication most of our code doesn't have."
    ],
    "docstrings": [
        "<summary>"
    ],
    "functions": [
        "ExtensionsCompositeEndpointDataSource",
        "IChangeToken",
        "GetChangeToken",
        "Dispose",
        "Endpoint",
        "WrapEndpoint",
        "EnsureChangeTokenInitialized",
        "CreateChangeTokenUnsynchronized",
        "OnHostChanged",
        "OnEndpointsChange",
        "CreateEndpointsUnsynchronized",
        "EnsureEndpointsInitialized",
        "ThrowIfDisposed"
    ],
    "classes": [
        "ExtensionsCompositeEndpointDataSource"
    ]
}