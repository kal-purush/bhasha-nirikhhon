{
    "identifiers": [
        "sqlalchemy",
        "engine",
        "create_engine",
        "pyhive",
        "tests",
        "sqlalchemy_test_case",
        "SqlAlchemyTestCase",
        "pyhive",
        "tests",
        "sqlalchemy_test_case",
        "with_engine_connection",
        "sqlalchemy",
        "exc",
        "NoSuchTableError",
        "DatabaseError",
        "sqlalchemy",
        "schema",
        "MetaData",
        "Table",
        "Column",
        "sqlalchemy",
        "types",
        "sqlalchemy",
        "sql",
        "text",
        "sqlalchemy",
        "types",
        "Decimal",
        "unittest",
        "contextlib",
        "unittest",
        "TestCase",
        "SqlAlchemyTestCase",
        "create_engine",
        "format",
        "id",
        "assertRaises",
        "ValueError",
        "create_engine",
        "with_engine_connection",
        "engine",
        "connection",
        "Table",
        "MetaData",
        "autoload_with",
        "engine",
        "assertEqual",
        "len",
        "one_row_complex",
        "c",
        "assertIsInstance",
        "one_row_complex",
        "c",
        "Column",
        "connection",
        "execute",
        "one_row_complex",
        "select",
        "fetchall",
        "assertEqual",
        "len",
        "rows",
        "assertEqual",
        "rows",
        "Decimal",
        "assertIsInstance",
        "one_row_complex",
        "c",
        "types",
        "assertIsInstance",
        "one_row_complex",
        "c",
        "tinyint",
        "types",
        "assertIsInstance",
        "one_row_complex",
        "c",
        "smallint",
        "types",
        "assertIsInstance",
        "one_row_complex",
        "c",
        "types",
        "assertIsInstance",
        "one_row_complex",
        "c",
        "bigint",
        "types",
        "BigInteger",
        "assertIsInstance",
        "one_row_complex",
        "c",
        "types",
        "assertIsInstance",
        "one_row_complex",
        "c",
        "types",
        "assertIsInstance",
        "one_row_complex",
        "c",
        "assertIsInstance",
        "one_row_complex",
        "c",
        "timestamp",
        "types",
        "NullType",
        "assertIsInstance",
        "one_row_complex",
        "c",
        "binary",
        "types",
        "VARBINARY",
        "assertIsInstance",
        "one_row_complex",
        "c",
        "array",
        "types",
        "NullType",
        "assertIsInstance",
        "one_row_complex",
        "c",
        "types",
        "NullType",
        "assertIsInstance",
        "one_row_complex",
        "c",
        "types",
        "NullType",
        "assertIsInstance",
        "one_row_complex",
        "c",
        "types",
        "NullType",
        "with_engine_connection",
        "engine",
        "connection",
        "assertRaises",
        "NoSuchTableError",
        "Table",
        "MetaData",
        "autoload_with",
        "engine",
        "assertRaises",
        "DatabaseError",
        "Table",
        "MetaData",
        "schema",
        "autoload_with",
        "engine",
        "create_engine",
        "contextlib",
        "closing",
        "engine",
        "connect",
        "connection",
        "assertEqual",
        "connection",
        "execute",
        "text",
        "scalar",
        "engine",
        "dispose",
        "with_engine_connection",
        "engine",
        "connection",
        "Table",
        "MetaData",
        "Column",
        "fake_table",
        "select",
        "where",
        "fake_table",
        "c",
        "current_timestamp",
        "compile",
        "engine",
        "assertIn",
        "query",
        "assertIn",
        "query",
        "assertNotIn",
        "query",
        "assertNotIn",
        "query"
    ],
    "literals": [
        "'trino+pyhive://localhost:18080/hive/default?source={}'",
        "'trino+pyhive://localhost:18080/hive/default/what'",
        "'one_row_complex'",
        "'a string'",
        "'1970-01-01 00:00:00.000'",
        "b'123'",
        "\"1\"",
        "\"3\"",
        "'0.1'",
        "'this_does_not_exist'",
        "'this_does_not_exist'",
        "\"also_does_not_exist\"",
        "'trino+pyhive://localhost:18080/hive'",
        "'SELECT 1 AS foobar FROM one_row'",
        "'select'",
        "'current_timestamp'",
        "'a'",
        "'\"select\"'",
        "'\"current_timestamp\"'",
        "'`select`'",
        "'`current_timestamp`'"
    ],
    "variables": [
        "one_row_complex",
        "rows",
        "engine",
        "fake_table",
        "query"
    ],
    "comments": [
        "Presto ignores the union column",
        "Use keywords for the table/column name"
    ],
    "docstrings": [
        "\"\"\"reflecttable should be able to fill in a table from the name\"\"\"",
        "\"\"\"reflecttable should throw an exception on an invalid table\"\"\"",
        "\"\"\"Trino uses double quotes, not backticks\"\"\""
    ],
    "functions": [
        "create_engine",
        "test_bad_format",
        "test_reflect_select",
        "test_reflect_no_such_table",
        "test_url_default",
        "test_reserved_words"
    ],
    "classes": [
        "TestSqlAlchemyTrino"
    ]
}