{
    "identifiers": [
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "assertEquals",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "assertTrue",
        "ai",
        "starwhale",
        "mlops",
        "common",
        "PageParams",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "dataset",
        "DatasetService",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "dataset",
        "bo",
        "DatasetQuery",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "dataset",
        "mapper",
        "DatasetMapper",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "dataset",
        "po",
        "DatasetEntity",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "job",
        "JobService",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "job",
        "JobType",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "job",
        "ModelServingService",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "job",
        "mapper",
        "JobMapper",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "job",
        "po",
        "JobEntity",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "job",
        "status",
        "JobStatus",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "job",
        "step",
        "mapper",
        "StepMapper",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "job",
        "step",
        "po",
        "StepEntity",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "job",
        "step",
        "status",
        "StepStatus",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "model",
        "ModelService",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "model",
        "bo",
        "ModelQuery",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "model",
        "mapper",
        "ModelMapper",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "model",
        "mapper",
        "ModelVersionMapper",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "model",
        "po",
        "ModelEntity",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "model",
        "po",
        "ModelVersionEntity",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "project",
        "bo",
        "Project",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "project",
        "mapper",
        "ProjectMapper",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "project",
        "po",
        "ProjectEntity",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "runtime",
        "RuntimeService",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "runtime",
        "RuntimeTestConstants",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "runtime",
        "bo",
        "RuntimeQuery",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "runtime",
        "mapper",
        "RuntimeMapper",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "runtime",
        "mapper",
        "RuntimeVersionMapper",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "runtime",
        "po",
        "RuntimeEntity",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "runtime",
        "po",
        "RuntimeVersionEntity",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "task",
        "TaskService",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "task",
        "mapper",
        "TaskMapper",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "task",
        "po",
        "TaskEntity",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "task",
        "status",
        "TaskStatus",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "user",
        "mapper",
        "UserMapper",
        "ai",
        "starwhale",
        "mlops",
        "domain",
        "user",
        "po",
        "UserEntity",
        "ai",
        "starwhale",
        "mlops",
        "schedule",
        "k8s",
        "K8sJobTemplate",
        "ai",
        "starwhale",
        "mlops",
        "schedule",
        "k8s",
        "ResourceEventHolder",
        "com",
        "github",
        "pagehelper",
        "autoconfigure",
        "PageHelperAutoConfiguration",
        "io",
        "micrometer",
        "core",
        "instrument",
        "simple",
        "SimpleMeterRegistry",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeEach",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "mybatis",
        "spring",
        "boot",
        "test",
        "autoconfigure",
        "MybatisTest",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "boot",
        "autoconfigure",
        "ImportAutoConfiguration",
        "org",
        "springframework",
        "boot",
        "test",
        "autoconfigure",
        "jdbc",
        "AutoConfigureTestDatabase",
        "org",
        "springframework",
        "context",
        "annotation",
        "ComponentScan",
        "org",
        "springframework",
        "context",
        "annotation",
        "FilterType",
        "org",
        "springframework",
        "context",
        "annotation",
        "Import",
        "MybatisTest",
        "ComponentScan",
        "basePackages",
        "excludeFilters",
        "ComponentScan",
        "Filter",
        "FilterType",
        "ASSIGNABLE_TYPE",
        "value",
        "ImportAutoConfiguration",
        "Import",
        "AutoConfigureTestDatabase",
        "replace",
        "AutoConfigureTestDatabase",
        "Replace",
        "NONE",
        "Autowired",
        "jobService",
        "Autowired",
        "jobMapper",
        "Autowired",
        "stepMapper",
        "Autowired",
        "taskService",
        "Autowired",
        "taskMapper",
        "Autowired",
        "modelService",
        "Autowired",
        "modelMapper",
        "Autowired",
        "modelVersionMapper",
        "Autowired",
        "runtimeService",
        "Autowired",
        "runtimeMapper",
        "Autowired",
        "runtimeVersionMapper",
        "Autowired",
        "datasetService",
        "Autowired",
        "datasetMapper",
        "Autowired",
        "projectMapper",
        "Autowired",
        "userMapper",
        "userName",
        "projectName",
        "BeforeEach",
        "userEntity",
        "UserEntity",
        "builder",
        "userName",
        "userName",
        "userPwd",
        "userPwdSalt",
        "userEnabled",
        "build",
        "userMapper",
        "insert",
        "userEntity",
        "entity",
        "ProjectEntity",
        "builder",
        "projectName",
        "projectName",
        "ownerId",
        "userEntity",
        "getId",
        "privacy",
        "Project",
        "Privacy",
        "PUBLIC",
        "getValue",
        "isDefault",
        "build",
        "projectMapper",
        "insert",
        "entity",
        "Test",
        "userId",
        "userMapper",
        "findByName",
        "userName",
        "getId",
        "projectId",
        "projectMapper",
        "findByNameForUpdateAndOwner",
        "projectName",
        "userId",
        "getId",
        "i",
        "i",
        "i",
        "res",
        "modelMapper",
        "insert",
        "ModelEntity",
        "builder",
        "modelName",
        "format",
        "i",
        "projectId",
        "projectId",
        "ownerId",
        "userId",
        "build",
        "assertTrue",
        "res",
        "page",
        "modelService",
        "listModel",
        "ModelQuery",
        "builder",
        "projectUrl",
        "projectName",
        "owner",
        "userName",
        "build",
        "PageParams",
        "builder",
        "pageNum",
        "pageSize",
        "build",
        "assertEquals",
        "page",
        "getSize",
        "assertEquals",
        "page",
        "getTotal",
        "page",
        "modelService",
        "listModel",
        "ModelQuery",
        "builder",
        "projectUrl",
        "projectName",
        "owner",
        "userName",
        "build",
        "PageParams",
        "builder",
        "pageNum",
        "pageSize",
        "build",
        "assertEquals",
        "page",
        "getSize",
        "assertEquals",
        "page",
        "getTotal",
        "Test",
        "userId",
        "userMapper",
        "findByName",
        "userName",
        "getId",
        "projectId",
        "projectMapper",
        "findByNameForUpdateAndOwner",
        "projectName",
        "userId",
        "getId",
        "i",
        "i",
        "i",
        "res",
        "runtimeMapper",
        "insert",
        "RuntimeEntity",
        "builder",
        "runtimeName",
        "format",
        "i",
        "projectId",
        "projectId",
        "ownerId",
        "userId",
        "build",
        "assertTrue",
        "res",
        "page",
        "runtimeService",
        "listRuntime",
        "RuntimeQuery",
        "builder",
        "projectUrl",
        "projectName",
        "owner",
        "userName",
        "build",
        "PageParams",
        "builder",
        "pageNum",
        "pageSize",
        "build",
        "assertEquals",
        "page",
        "getSize",
        "assertEquals",
        "page",
        "getTotal",
        "page",
        "runtimeService",
        "listRuntime",
        "RuntimeQuery",
        "builder",
        "projectUrl",
        "projectName",
        "owner",
        "userName",
        "build",
        "PageParams",
        "builder",
        "pageNum",
        "pageSize",
        "build",
        "assertEquals",
        "page",
        "getSize",
        "assertEquals",
        "page",
        "getTotal",
        "Test",
        "userId",
        "userMapper",
        "findByName",
        "userName",
        "getId",
        "projectId",
        "projectMapper",
        "findByNameForUpdateAndOwner",
        "projectName",
        "userId",
        "getId",
        "i",
        "i",
        "i",
        "res",
        "datasetMapper",
        "insert",
        "DatasetEntity",
        "builder",
        "datasetName",
        "format",
        "i",
        "projectId",
        "projectId",
        "ownerId",
        "userId",
        "build",
        "assertTrue",
        "res",
        "page",
        "datasetService",
        "listDataset",
        "DatasetQuery",
        "builder",
        "projectUrl",
        "projectName",
        "owner",
        "userName",
        "build",
        "PageParams",
        "builder",
        "pageNum",
        "pageSize",
        "build",
        "assertEquals",
        "page",
        "getSize",
        "assertEquals",
        "page",
        "getTotal",
        "page",
        "datasetService",
        "listDataset",
        "DatasetQuery",
        "builder",
        "projectUrl",
        "projectName",
        "owner",
        "userName",
        "build",
        "PageParams",
        "builder",
        "pageNum",
        "pageSize",
        "build",
        "assertEquals",
        "page",
        "getSize",
        "assertEquals",
        "page",
        "getTotal",
        "Test",
        "userId",
        "userMapper",
        "findByName",
        "userName",
        "getId",
        "projectId",
        "projectMapper",
        "findByNameForUpdateAndOwner",
        "projectName",
        "userId",
        "getId",
        "model",
        "ModelEntity",
        "builder",
        "modelName",
        "format",
        "projectId",
        "projectId",
        "ownerId",
        "userId",
        "build",
        "assertTrue",
        "modelMapper",
        "insert",
        "model",
        "modelVersion",
        "ModelVersionEntity",
        "builder",
        "modelId",
        "model",
        "getId",
        "versionName",
        "ownerId",
        "userId",
        "jobs",
        "build",
        "assertTrue",
        "modelVersionMapper",
        "insert",
        "modelVersion",
        "runtime",
        "RuntimeEntity",
        "builder",
        "runtimeName",
        "format",
        "projectId",
        "projectId",
        "ownerId",
        "userId",
        "build",
        "assertTrue",
        "runtimeMapper",
        "insert",
        "runtime",
        "runtimeVersion",
        "RuntimeVersionEntity",
        "builder",
        "runtimeId",
        "runtime",
        "getId",
        "versionName",
        "ownerId",
        "userId",
        "versionTag",
        "versionMeta",
        "RuntimeTestConstants",
        "MANIFEST_WITH_BUILTIN_IMAGE",
        "storagePath",
        "build",
        "assertTrue",
        "runtimeVersionMapper",
        "insert",
        "runtimeVersion",
        "i",
        "i",
        "i",
        "res",
        "jobMapper",
        "addJob",
        "JobEntity",
        "builder",
        "name",
        "format",
        "i",
        "jobUuid",
        "format",
        "i",
        "modelVersionId",
        "modelVersion",
        "getId",
        "runtimeVersionId",
        "runtimeVersion",
        "getId",
        "JobType",
        "EVALUATION",
        "jobStatus",
        "JobStatus",
        "CREATED",
        "resultOutputPath",
        "projectId",
        "projectId",
        "ownerId",
        "userId",
        "isDeleted",
        "build",
        "assertTrue",
        "res",
        "page",
        "jobService",
        "listJobs",
        "projectName",
        "PageParams",
        "builder",
        "pageNum",
        "pageSize",
        "build",
        "assertEquals",
        "page",
        "getSize",
        "assertEquals",
        "page",
        "getTotal",
        "page",
        "jobService",
        "listJobs",
        "projectName",
        "PageParams",
        "builder",
        "pageNum",
        "pageSize",
        "build",
        "assertEquals",
        "page",
        "getSize",
        "assertEquals",
        "page",
        "getTotal",
        "Test",
        "userId",
        "userMapper",
        "findByName",
        "userName",
        "getId",
        "projectId",
        "projectMapper",
        "findByNameForUpdateAndOwner",
        "projectName",
        "userId",
        "getId",
        "model",
        "ModelEntity",
        "builder",
        "modelName",
        "format",
        "projectId",
        "projectId",
        "ownerId",
        "userId",
        "build",
        "assertTrue",
        "modelMapper",
        "insert",
        "model",
        "modelVersion",
        "ModelVersionEntity",
        "builder",
        "modelId",
        "model",
        "getId",
        "versionName",
        "ownerId",
        "userId",
        "jobs",
        "build",
        "assertTrue",
        "modelVersionMapper",
        "insert",
        "modelVersion",
        "job",
        "JobEntity",
        "builder",
        "name",
        "jobUuid",
        "modelVersionId",
        "modelVersion",
        "getId",
        "runtimeVersionId",
        "JobType",
        "EVALUATION",
        "jobStatus",
        "JobStatus",
        "CREATED",
        "resultOutputPath",
        "projectId",
        "projectId",
        "ownerId",
        "userId",
        "isDeleted",
        "build",
        "assertTrue",
        "jobMapper",
        "addJob",
        "job",
        "step",
        "StepEntity",
        "builder",
        "jobId",
        "job",
        "getId",
        "name",
        "status",
        "StepStatus",
        "CREATED",
        "uuid",
        "concurrency",
        "taskNum",
        "poolInfo",
        "build",
        "assertTrue",
        "stepMapper",
        "save",
        "step",
        "i",
        "i",
        "i",
        "res",
        "taskMapper",
        "addTask",
        "TaskEntity",
        "builder",
        "stepId",
        "step",
        "getId",
        "taskUuid",
        "format",
        "i",
        "taskStatus",
        "TaskStatus",
        "CREATED",
        "taskRequest",
        "build",
        "assertTrue",
        "res",
        "page",
        "taskService",
        "listTasks",
        "job",
        "getJobUuid",
        "PageParams",
        "builder",
        "pageNum",
        "pageSize",
        "build",
        "assertEquals",
        "page",
        "getSize",
        "assertEquals",
        "page",
        "getTotal",
        "page",
        "taskService",
        "listTasks",
        "job",
        "getJobUuid",
        "PageParams",
        "builder",
        "pageNum",
        "pageSize",
        "build",
        "assertEquals",
        "page",
        "getSize",
        "assertEquals",
        "page",
        "getTotal"
    ],
    "literals": [
        "\"ai.starwhale.mlops.common\"",
        "\"ai.starwhale.mlops.domain\"",
        "\"ai.starwhale.mlops.datastore\"",
        "\"ai.starwhale.mlops.reporting\"",
        "\"ai.starwhale.mlops.resulting\"",
        "\"ai.starwhale.mlops.configuration.security\"",
        "\"user-test\"",
        "\"project-test\"",
        "\"123456\"",
        "\"123456\"",
        "\"model-%d\"",
        "\"rt-%d\"",
        "\"ds-%d\"",
        "\"model-%d\"",
        "\"model-version-1\"",
        "\"mnist.evaluator:MNISTInference.cmp:\\n\"",
        "\"- cls_name: ''\\n\"",
        "\"  concurrency: 1\\n\"",
        "\"  needs: []\\n\"",
        "\"  resources: []\\n\"",
        "\"  name: mnist.evaluator:MNISTInference.ppl\\n\"",
        "\"  replicas: 1\\n\"",
        "\"- cls_name: ''\\n\"",
        "\"  concurrency: 1\\n\"",
        "\"  needs:\\n\"",
        "\"  - mnist.evaluator:MNISTInference.ppl\\n\"",
        "\"  resources:\\n\"",
        "\"  - type: cpu \\n\"",
        "\"    request: 0.1\\n\"",
        "\"    limit: 0.1\\n\"",
        "\"  - type: nvidia.com/gpu \\n\"",
        "\"    request: 1\\n\"",
        "\"    limit: 1\\n\"",
        "\"  - type: memory \\n\"",
        "\"    request: 1\\n\"",
        "\"    limit: 1\\n\"",
        "\"  name: mnist.evaluator:MNISTInference.cmp\\n\"",
        "\"  replicas: 1\\n\"",
        "\"rt-%d\"",
        "\"rt-version-1\"",
        "\"v1\"",
        "\"path\"",
        "\"job-%d\"",
        "\"uuid-%d\"",
        "\"path\"",
        "\"model-%d\"",
        "\"model-version-1\"",
        "\"mnist.evaluator:MNISTInference.cmp:\\n\"",
        "\"- cls_name: ''\\n\"",
        "\"  concurrency: 1\\n\"",
        "\"  needs: []\\n\"",
        "\"  resources: []\\n\"",
        "\"  name: mnist.evaluator:MNISTInference.ppl\\n\"",
        "\"  replicas: 1\\n\"",
        "\"- cls_name: ''\\n\"",
        "\"  concurrency: 1\\n\"",
        "\"  needs:\\n\"",
        "\"  - mnist.evaluator:MNISTInference.ppl\\n\"",
        "\"  resources:\\n\"",
        "\"  - type: cpu \\n\"",
        "\"    request: 0.1\\n\"",
        "\"    limit: 0.1\\n\"",
        "\"  - type: nvidia.com/gpu \\n\"",
        "\"    request: 1\\n\"",
        "\"    limit: 1\\n\"",
        "\"  - type: memory \\n\"",
        "\"    request: 1\\n\"",
        "\"    limit: 1\\n\"",
        "\"  name: mnist.evaluator:MNISTInference.cmp\\n\"",
        "\"  replicas: 1\\n\"",
        "\"job-1\"",
        "\"uuid-1\"",
        "\"path\"",
        "\"step-1\"",
        "\"uuid-step-1\"",
        "\"\"",
        "\"uuid-%d\"",
        "\"request\""
    ],
    "variables": [
        "jobService",
        "jobMapper",
        "stepMapper",
        "taskService",
        "taskMapper",
        "modelService",
        "modelMapper",
        "modelVersionMapper",
        "runtimeService",
        "runtimeMapper",
        "runtimeVersionMapper",
        "datasetService",
        "datasetMapper",
        "projectMapper",
        "userMapper"
    ],
    "comments": [
        "no.1",
        "no.2",
        "no.1",
        "no.2",
        "no.1",
        "no.2",
        "prepare data",
        "no.1",
        "no.2",
        "prepare data",
        "no.1",
        "no.2"
    ],
    "docstrings": [
        "* Copyright 2022 Starwhale, Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "before",
        "testModelList",
        "testRuntimeList",
        "testDatasetList",
        "testJobList",
        "testTaskList"
    ],
    "classes": [
        "PageTest"
    ]
}