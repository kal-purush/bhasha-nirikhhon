{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "gulp",
        "fs",
        "paths",
        "i",
        "i",
        "files",
        "i",
        "file",
        "files",
        "i",
        "file",
        "filePath",
        "paths",
        "file",
        "fileInfo",
        "fs",
        "filePath",
        "fileInfo",
        "dirs",
        "file",
        "files",
        "fs",
        "paths",
        "dirs",
        "i",
        "i",
        "files",
        "i",
        "file",
        "files",
        "i",
        "path",
        "file",
        "jsonFiles",
        "file",
        "jsonFiles",
        "gulp",
        "paths",
        "plumber",
        "jsoncombine",
        "data",
        "data",
        "gulp",
        "paths"
    ],
    "literals": [
        "'gulp'",
        "'path'",
        "'../utils/options'",
        "'../utils/paths'",
        "'gulp-plumber'",
        "'fs'",
        "'json-test'",
        "'.'",
        "'.json'",
        "'**/pages.json'",
        "'pages.json'",
        "'DATA'"
    ],
    "variables": [
        "gulp",
        "path",
        "options",
        "paths",
        "plumber",
        "fs",
        "files",
        "dirs",
        "file",
        "filePath",
        "fileInfo",
        "jsonFiles"
    ],
    "comments": [
        "var notify\t\t= require( 'gulp-notify' );",
        "var jsonlint\t= require( 'gulp-jsonlint' );",
        "var jsoncombine\t= require( 'gulp-jsoncombine' );",
        "var concatjson\t= require( 'gulp-concat-json' );",
        "console.log(paths.src.json);",
        "var files = fs.readdirSync(paths.src.json);",
        "var jsonFiles = fs.readdirSync(paths.src.json);\n\tvar jsonFolder = [];\n\t\n\tconsole.log(jsonFiles);\n\t\n\tvar fileName = null;",
        "console.log(dirs);",
        "console.log(files);",
        "console.log(path.basename( file, '.json' ));",
        "console.log(path.extname( file ));",
        "[",
        "paths.src.json + 'fr/pages.json',",
        "paths.src.json + 'en/pages.json',",
        "paths.src.json + 'ex/pages.json'",
        "]",
        "gulp.src( [",
        "paths.src.json + 'fr/pages.json',",
        "paths.src.json + 'en/pages.json',",
        "paths.src.json + 'ex/pages.json'",
        "] )",
        "gulp.src( paths.src.json + '**/pages.json' )",
        "gulp.src( [\n\t\t\tpaths.src.json + 'fr/pages.json',\n\t\t\tpaths.src.json + 'en/pages.json',\n\t\t\tpaths.src.json + 'ex/pages.json'\n\t\t] )\n\t\t.pipe( plumber() )\n\t\t.pipe( concatjson( 'pages.json' ) )\n\t\t.pipe( gulp.dest( paths.src.json ) );",
        "for ( var i=0; i<jsonFiles.length; i++ ) {\n\t\tfileName = jsonFiles[i];\n\t\t\n\t\tif ( fileName.indexOf('.') == -1 )\n\t\t\tjsonFolder.push(fileName);\n\t}\n\tconsole.log(jsonFolder);",
        "var jsonFiles\t= fs.readdir(paths.src.json);",
        "for ( var i=0; i<jsonFiles.length; i++ ) {",
        "}",
        "function getFiles(dir,files_){",
        "files_ = files_ || [];",
        "if (typeof files_ === 'undefined') files_=[];",
        "var files = fs.readdirSync(dir);",
        "for ( var i in files ) {",
        "if (!files.hasOwnProperty(i)) continue;",
        "var name = dir+'/'+files[i];",
        "if (fs.statSync(name).isDirectory()){",
        "getFiles(name,files_);",
        "} else {",
        "files_.push(name);",
        "}",
        "}",
        "return files_;",
        "}",
        "console.log(getFiles('path/to/dir'))"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}