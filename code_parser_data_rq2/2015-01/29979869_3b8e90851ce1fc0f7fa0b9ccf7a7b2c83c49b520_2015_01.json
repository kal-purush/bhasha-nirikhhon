{
    "identifiers": [
        "require",
        "require",
        "require",
        "ListPaginator",
        "db",
        "query",
        "events",
        "db",
        "query",
        "util",
        "ListPaginator",
        "events",
        "ListPaginator",
        "db",
        "query",
        "db",
        "query",
        "query",
        "ListPaginator",
        "ListPaginator",
        "count",
        "count",
        "count",
        "err",
        "docs",
        "err",
        "err",
        "docs",
        "rows",
        "count",
        "docs",
        "docs",
        "rows",
        "nextStartDoc",
        "nextStartDoc",
        "docs",
        "count",
        "docs",
        "e",
        "e",
        "Paginator",
        "db",
        "view",
        "query",
        "events",
        "db",
        "view",
        "query",
        "util",
        "Paginator",
        "events",
        "Paginator",
        "db",
        "view",
        "query",
        "db",
        "view",
        "query",
        "query",
        "Paginator",
        "database",
        "doc",
        "view",
        "query",
        "callback",
        "database",
        "async",
        "retbody",
        "cback",
        "dmesg",
        "database",
        "doc",
        "view",
        "query",
        "err",
        "body",
        "err",
        "err",
        "err",
        "err",
        "dmesg",
        "err",
        "err",
        "dmesg",
        "retbody",
        "body",
        "body",
        "body",
        "reason",
        "body",
        "body",
        "reason",
        "body",
        "dmesg",
        "reason",
        "dmesg",
        "retbody",
        "body",
        "cback",
        "errdone",
        "callback",
        "retbody",
        "Paginator",
        "count",
        "count",
        "count",
        "couchForce",
        "err",
        "docs",
        "err",
        "err",
        "docs",
        "rows",
        "count",
        "docs",
        "docs",
        "rows",
        "nextStartDoc",
        "nextStartDoc",
        "docs",
        "count",
        "docs",
        "e",
        "e",
        "exports",
        "ListPaginator",
        "exports",
        "Paginator"
    ],
    "literals": [
        "'events'",
        "'util'",
        "'async'",
        "'end'",
        "'error'",
        "'rows'",
        "'rows'",
        "'error'",
        "\" ?\"",
        "\" retrying...\"",
        "\" skipping...\"",
        "\"object\"",
        "\"\"",
        "\"object\"",
        "\"body is \"",
        "\"..\"",
        "\"body.rows is not an instanceof Array, is a \"",
        "\"..\"",
        "\" invalid response :|\"",
        "\" ok !\"",
        "'end'",
        "'error'",
        "'rows'",
        "'rows'",
        "'error'"
    ],
    "variables": [
        "events",
        "util",
        "async",
        "ListPaginator",
        "rows",
        "nextStartDoc",
        "Paginator",
        "couchForce",
        "retbody",
        "dmesg",
        "reason",
        "rows",
        "nextStartDoc"
    ],
    "comments": [
        "",
        "Pagination algorithm from guide.couchdb.org://",
        "",
        "- Request 'count' + 1 rows from the view",
        "",
        "- Emit 'count' rows, store + 1 row as next _startkey and _startkey_docid",
        "",
        "- Use the _next_* values to query the subsequent pages",
        "",
        "- http://docs.couchdb.org/en/latest/couchapp/views/pagination.html#views-pagination",
        "",
        "Read last docs in db",
        "404",
        "break the loop",
        "all done !",
        "Read last docs in db",
        "this.db.view(this.view._design, this.view._view, this.query, function(err, docs) {",
        "}.bind(this));"
    ],
    "docstrings": [
        "* Paginator\n * @param db nano Object\n * @param query Object",
        "* Paginator\n * @param db nano Object\n * @param view Object  define the view {_design : \"\", _view:\"\"}\n * @param query Object",
        "*\n* couchForce doest not callbacks until it gets the view error-less\n*\n*"
    ],
    "functions": [],
    "classes": []
}