{
    "identifiers": [
        "numpy",
        "np",
        "ephem",
        "np",
        "loadtxt",
        "np",
        "recfromcsv",
        "np",
        "zeros",
        "data_j2000",
        "shape",
        "observers",
        "shape",
        "dtype",
        "ii",
        "observer",
        "observers",
        "jj",
        "ra",
        "dec",
        "data_j2000",
        "ephem",
        "FixedBody",
        "np",
        "radians",
        "ra",
        "np",
        "radians",
        "dec",
        "ephem",
        "Observer",
        "np",
        "radians",
        "observer",
        "np",
        "radians",
        "observer",
        "observer",
        "observer",
        "body",
        "compute",
        "obs",
        "np",
        "degrees",
        "body",
        "az",
        "body",
        "alt",
        "results",
        "ii",
        "data_j2000",
        "shape",
        "jj",
        "az",
        "results",
        "ii",
        "data_j2000",
        "shape",
        "jj",
        "alt",
        "np",
        "savetxt",
        "results",
        "fmt"
    ],
    "literals": [
        "'../initial_coords.txt'",
        "'../observers.txt'",
        "'az'",
        "'float64'",
        "'alt'",
        "'float64'",
        "'2000'",
        "'az'",
        "'alt'",
        "'coords_fk5_to_horizontal.txt'",
        "\"%20.15f\""
    ],
    "variables": [
        "data_j2000",
        "observers",
        "results",
        "body",
        "body",
        "_ra",
        "body",
        "_dec",
        "obs",
        "obs",
        "lon",
        "obs",
        "lat",
        "obs",
        "elevation",
        "obs",
        "epoch",
        "obs",
        "date",
        "az",
        "alt"
    ],
    "comments": [
        "Read in initial coordinates and the observers.",
        "For now just process one observer and 10 positions to compare against pyast",
        "import IPython; IPython.embed(); 1/0",
        "We'll store the results here",
        "We need to create a \"Body\" in pyephem, which represents the coordinate",
        "http://stackoverflow.com/questions/11169523/how-to-compute-alt-az-for-given-galactic-coordinate-glon-glat-with-pyephem",
        "body._epoch = 'eq.epoch'",
        "Set observer parameters",
        "Compute alt / az of the body for that observer"
    ],
    "docstrings": [
        "\"\"\"Convert FK5 J2000 to / from horizontal coordinate system\"\"\""
    ],
    "functions": [],
    "classes": []
}