{
    "identifiers": [
        "lively",
        "require",
        "setting",
        "lively",
        "setting",
        "setting",
        "setting",
        "lively",
        "setting",
        "lively",
        "setting",
        "lively",
        "users",
        "setup",
        "lively",
        "world",
        "world",
        "ea",
        "ea",
        "ea",
        "ea",
        "setup",
        "ea",
        "textSetup",
        "lively",
        "tabSize",
        "lively",
        "tabSize",
        "lively",
        "lively",
        "lively",
        "ed",
        "lively",
        "lively",
        "focused",
        "focused",
        "focused",
        "editor",
        "handler",
        "editor",
        "handler",
        "editor",
        "handler",
        "editor",
        "editor",
        "handler",
        "UserAgent",
        "UserAgent",
        "handler",
        "handler",
        "Global",
        "keyboardHandler",
        "editor",
        "options",
        "editor",
        "kbd",
        "lively",
        "HashHandler",
        "iyGoToCharHandler",
        "iyGoToCharHandler",
        "data",
        "hashId",
        "key",
        "keyCode",
        "debug",
        "show",
        "hashId",
        "key",
        "hashId",
        "key",
        "key",
        "hashId",
        "key",
        "hashId",
        "key",
        "editor",
        "key",
        "debug",
        "show",
        "key",
        "editor",
        "iyGoToCharHandler",
        "options",
        "key",
        "iyGoToCharHandler",
        "editor",
        "debug",
        "show",
        "editor",
        "iyGoToCharHandler",
        "editor",
        "debug",
        "show",
        "editor",
        "editor",
        "iyGoToCharHandler",
        "ed",
        "options",
        "ed",
        "sel",
        "options",
        "sel",
        "options",
        "sel",
        "ed",
        "options",
        "foundRange",
        "options",
        "sel",
        "ed",
        "ed",
        "sel",
        "hasSel",
        "start",
        "foundRange",
        "end",
        "foundRange",
        "start",
        "options",
        "foundRange",
        "end",
        "options",
        "foundRange",
        "foundRange",
        "start",
        "end",
        "sel",
        "newRange",
        "options",
        "editor",
        "iyGoToCharHandler",
        "editor",
        "args",
        "iyGoToChar",
        "editor",
        "keyboardHandler",
        "iyGoToChar",
        "keyboardHandler",
        "iyGoToCharBackwards",
        "keyboardHandler",
        "keyboardHandler",
        "Config",
        "_codeEditor",
        "_codeEditor",
        "e",
        "users",
        "kbd",
        "e",
        "e",
        "e",
        "lively",
        "_codeEditor",
        "lively",
        "emacsKeys",
        "_codeEditor",
        "setupEmacsKeyboardHandler",
        "e",
        "emacsKeys",
        "emacsKeys",
        "kbd",
        "ed",
        "ed",
        "sel",
        "ed",
        "sel",
        "sel",
        "sel",
        "sel",
        "ed",
        "ed",
        "sel",
        "ed",
        "sel",
        "p",
        "ed",
        "p",
        "ed",
        "ed",
        "ed",
        "editor",
        "editor",
        "editor",
        "ed",
        "$world",
        "$world",
        "win",
        "win",
        "win",
        "focus",
        "focus",
        "focus",
        "div",
        "div",
        "ratio",
        "div",
        "newRatio",
        "browser",
        "browser",
        "alert",
        "win",
        "div",
        "ratio",
        "div",
        "newRatio",
        "ed",
        "args",
        "codeEditor",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "ext",
        "m",
        "ed",
        "ed",
        "ed",
        "ed",
        "ed",
        "undoneRe",
        "text",
        "replacement",
        "text",
        "undoneRe",
        "doneRe",
        "text",
        "replacement",
        "text",
        "doneRe",
        "ed",
        "replacement",
        "ed",
        "ed",
        "ed",
        "ed",
        "todoInFrontRe",
        "text",
        "replacement",
        "text",
        "todoInFrontRe",
        "replacement",
        "text",
        "todoInFrontRe",
        "ed",
        "replacement",
        "ed",
        "codeEditor",
        "ed",
        "codeEditor",
        "codeEditor",
        "ed",
        "kbd",
        "shiftCmdPrefix",
        "keys",
        "command",
        "binding",
        "keys",
        "command",
        "binding",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "bind",
        "cmdLPrefix",
        "kbd",
        "bind",
        "cmdLPrefix",
        "kbd",
        "bind",
        "cmdLPrefix",
        "kbd",
        "bind",
        "cmdLPrefix",
        "kbd",
        "kbd",
        "kbd",
        "bind",
        "cmdLPrefix",
        "kbd",
        "bind",
        "cmdLPrefix",
        "kbd",
        "bind",
        "cmdLPrefix",
        "kbd",
        "kbd",
        "bind",
        "cmdLPrefix",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "kbd",
        "bind",
        "cmdLPrefix",
        "kbd",
        "bind",
        "cmdLPrefix",
        "kbd",
        "bind",
        "cmdLPrefix",
        "kbd",
        "bind",
        "cmdLPrefix",
        "kbd",
        "bind",
        "cmdLPrefix",
        "kbd",
        "bind",
        "cmdLPrefix",
        "kbd",
        "bind",
        "kbd",
        "kbd",
        "bind",
        "cmdLPrefix",
        "kbd",
        "bind",
        "cmdLPrefix",
        "kbd",
        "bind",
        "cmdLPrefix",
        "kbd",
        "bind",
        "cmdLPrefix",
        "Global",
        "kbd",
        "interactiveCommands",
        "lively",
        "configCustomizations",
        "ensureCodeEditorPreferences",
        "lively"
    ],
    "literals": [
        "'lively.ide.codeeditor.BetterConfig'",
        "'lively.Traits'",
        "'lively.ide.commands.default'",
        "'maxStatusMessages'",
        "'lively.ide.CodeEditor'",
        "\"defaultCodeFontSize\"",
        "\"style.fontSize\"",
        "\"aceDefaultTheme\"",
        "\"chrome\"",
        "\"style.them\"",
        "\"aceSystemCodeBrowserTheme\"",
        "\"chrome\"",
        "\"aceDefaultLineWrapping\"",
        "\"style.lineWrapping\"",
        "\"defaultSCBSourcePaneToListPaneRatio\"",
        "\"defaultSCBExtent\"",
        "\"codeEditorUserKeySetup\"",
        "'defaultTabSize'",
        "\"lively.ide.CodeEditor\"",
        "'lively.ide.codeeditor.ace'",
        "'ace/mode/text'",
        "\"ace/mode/behaviour/cstyle\"",
        "\"ace/mode/behaviour\"",
        "'m-x'",
        "'win'",
        "'mac'",
        "\"ace/keyboard/hash_handler\"",
        "\"hashId: %s, key: %s\"",
        "'esc'",
        "'backspace'",
        "'null'",
        "'input was %s and not %s, exiting'",
        "'iygotochar installed'",
        "'iygotochar uninstalled'",
        "'moveForwardTo'",
        "'forEach'",
        "'iyGoToChar'",
        "'iyGoToCharBackwards'",
        "\"CMD-.\"",
        "\"iyGoToChar\"",
        "\"CMD-,\"",
        "\"iyGoToCharBackwards\"",
        "\"codeEditorUserKeySetup\"",
        "\"keybinding\"",
        "'ace/keyboard/emacs'",
        "'markword'",
        "'forEach'",
        "'jumpToMark'",
        "'pushMark'",
        "\"dividercomment\"",
        "\"-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\"",
        "\"toogleSCBSizing\"",
        "\"ObjectInspector\"",
        "'divider'",
        "'Currently not in a SCB!'",
        "'fixTextScale'",
        "\"toggleTodoMarker\"",
        "'[X]'",
        "'[ ]'",
        "\"addOrRemoveTodoMarker\"",
        "'$1$2'",
        "'$1[ ] $2'",
        "'returnorcommandlineinput'",
        "\"\\n\"",
        "'mac'",
        "'S-CMD-'",
        "'S-C-'",
        "'l '",
        "\"C-Up\"",
        "'gotoPrevParagraph'",
        "\"C-Down\"",
        "'gotoNextParagraph'",
        "\"M-g\"",
        "'null'",
        "\"M-g g\"",
        "'gotoline'",
        "\"M-g n\"",
        "'gotoNextErrorOrWarning'",
        "\"M-g p\"",
        "'gotoPrevErrorOrWarning'",
        "\"CMD-2\"",
        "\"pushMark\"",
        "\"CMD-3\"",
        "\"jumpToMark\"",
        "\"S-M-2\"",
        "\"markword\"",
        "\"C-x C-u\"",
        "\"touppercase\"",
        "\"C-x C-l\"",
        "\"tolowercase\"",
        "\"C-M-P\"",
        "\"addCursorAbove\"",
        "\"C-M-N\"",
        "\"addCursorBelow\"",
        "\"C-CMD-Up\"",
        "\"movelinesup\"",
        "\"C-CMD-P\"",
        "\"movelinesup\"",
        "\"C-CMD-Down\"",
        "\"movelinesdown\"",
        "\"C-CMD-N\"",
        "\"movelinesdown\"",
        "\"C-c j\"",
        "\"joinLineAbove\"",
        "\"C-c S-j\"",
        "\"joinLineBelow\"",
        "'C-c p'",
        "\"duplicateLine\"",
        "'C-c CMD-j'",
        "\"curlyBlockOneLine\"",
        "\"c a r\"",
        "\"alignSelection\"",
        "\"j s s t r\"",
        "\"stringifySelection\"",
        "\"d i f f\"",
        "\"openDiffer\"",
        "\"m o d e\"",
        "\"changeTextMode\"",
        "'C-c C-t'",
        "\"runtests\"",
        "'S-F6'",
        "\"toogleSCBSizing\"",
        "\"l t\"",
        "\"toggleLineWrapping\"",
        "\"/ d\"",
        "\"dividercomment\"",
        "\"/ b\"",
        "\"commentBox\"",
        "\"C-x C-e\"",
        "\"printit\"",
        "\"x b\"",
        "\"evalAll\"",
        "\"CMD-i\"",
        "\"printInspect\"",
        "\"CMD-g\"",
        "\"doAutoEvalPrintItComments\"",
        "\"C-h k\"",
        "\"describeKey\"",
        "\"C-x h\"",
        "\"selectall\"",
        "\"C-c C-S-,\"",
        "\"selectAllLikeThis\"",
        "\"CMD-f\"",
        "'moveForwardToMatching'",
        "\"CMD-b\"",
        "'moveBackwardToMatching'",
        "\"S-CMD-f\"",
        "'selectToMatchingForward'",
        "\"S-CMD-b\"",
        "'selectToMatchingBackward'",
        "\"f i x\"",
        "'fixTextScale'",
        "\"d a t e\"",
        "'insertDate'",
        "\"b r o w s e\"",
        "'browseURLOrPathInWebBrowser'",
        "\"d a t e\"",
        "'insertDate'",
        "\"s-o\"",
        "'doBrowseAtPointOrRegion'",
        "\"s n i p\"",
        "'browseSnippets'",
        "\"S-CMD-c\"",
        "'browseSnippets'",
        "\"M-q\"",
        "'fitTextToColumn'",
        "\"w t\"",
        "'cleanupWhitespace'",
        "\"x m l p\"",
        "'prettyPrintHTMLAndXML'",
        "\"t d\"",
        "'toggleTodoMarker'",
        "\"t n\"",
        "'addOrRemoveTodoMarker'",
        "'lively.ide.openIframe'",
        "\"cmd-s-l i f r a m e\"",
        "'lively.ide.codeSearch'",
        "\"cmd-s-l Shift-g\"",
        "'lively.ide.CommandLineInterface.doGrepSearch'",
        "\"cmd-s-l g\"",
        "'improvedJavaScriptEval'"
    ],
    "variables": [
        "setup",
        "eds",
        "tabSize",
        "focused",
        "debug",
        "kbd",
        "HashHandler",
        "iyGoToCharHandler",
        "sel",
        "foundRange",
        "hasSel",
        "start",
        "end",
        "newRange",
        "e",
        "kbd",
        "kbd",
        "sel",
        "sel",
        "p",
        "win",
        "focus",
        "browser",
        "div",
        "ratio",
        "newRatio",
        "div",
        "ratio",
        "newRatio",
        "m",
        "ext",
        "text",
        "undoneRe",
        "doneRe",
        "replacement",
        "text",
        "text",
        "todoInFrontRe",
        "replacement",
        "text",
        "shiftCmdPrefix",
        "cmdLPrefix",
        "binding"
    ],
    "comments": [
        "Config.addOption(\"textDebugging\", true,",
        "\"used in text impl to enable / disable debugging and warnings\",",
        "'lively.morphic.text');",
        "{name: \"aceWorkspaceTheme\", value: \"tomorrow_night\"},",
        "{name: \"aceTextEditorTheme\", value: \"tomorrow_night\", set: \"style.theme\"},",
        "make paren behavior the default in all modes:",
        "FIXME just overwriting $behaviour property in mode prototype isn't",
        "enough because the mode constructor unfortunately sets the behavior",
        "directly. So we also delete the ownProperty behavior in attach",
        "replace \"Null-Behavior\" only",
        "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-",
        "debugging:",
        "handler.handleKeyboard = handler.handleKeyboard.getOriginal().wrap(function(proceed, data, hashId, key, keyCode) {",
        "// show(data.keyChain);",
        "// disconnect(data, 'keyChain', Global, 'show', {",
        "//     updater: function($upd, val) { keyChains.push(val); $upd(val) },",
        "//     varMapping: {keyChains: keyChains}",
        "// });",
        "// var keyChainEnter = data.keyChain.length > 0 && data.keyChain;",
        "// if (keyChainEnter) debugger",
        "show(\"data %s, hashId %s, key %s, keyCode %s\", data, hashId, key, keyCode);",
        "if (data.keyChain) debugger;",
        "// if (data.keyChain && hashId === 1 && keyCode === -1) debugger;",
        "// if (hashId === 1 && keyCode === 67) debugger;",
        "var result = proceed(data, hashId, key, keyCode);",
        "// var keyChainExit = data.keyChain.length > 0 && data.keyChain;",
        "// (keyChainExit || keyChainEnter) && show(\"keyChain enter: %s, exit: %s, command: %o\",",
        "// keyChainEnter, keyChainExit, result);",
        "// show(\"%s -> %o\", data.keyChain, result)",
        "return result;",
        "});",
        "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-",
        "first invocation: if a key is pressed remember this char as the char",
        "to search for",
        "subsequent invocations: when the same char is pressed, move to the",
        "next found location of that char, other wise deactivate this mode",
        "shift key or raw event",
        "shift = hashId 4",
        "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-",
        "we have our own version of exec",
        "if (codeEditor.hasRobertsKeys) return;",
        "------------------",
        "key command setup",
        "------------------",
        "sel.selectToPosition(range.start);",
        "sel.setRange(ace.require('ace/range').Range.fromPoints(range.start, sel.lead), true);",
        "hack: get currently active system browser and do \"run test command\"",
        "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-",
        "FIXME",
        "-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-",
        "todo",
        "commandline",
        "lines",
        "SCb",
        "evaluation",
        "re-apply to be able to use count arg",
        "kbd.bindKeys({\"Return\": 'returnorcommandlineinput'});",
        "bind commands to default keys",
        "lively.Config.set('showImprovedJavaScriptEvalErrors', true);",
        "end of module"
    ],
    "docstrings": [],
    "functions": [
        "ensureCodeEditorPreferences",
        "codeEditor",
        "setupEmacsKeyboardHandler",
        "iyGoToChar",
        "iyGoToCharBackwards",
        "bind"
    ],
    "classes": []
}