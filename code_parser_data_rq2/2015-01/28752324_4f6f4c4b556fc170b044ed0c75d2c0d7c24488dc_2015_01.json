{
    "identifiers": [
        "com",
        "team2994",
        "frc",
        "com",
        "team2994",
        "frc",
        "test",
        "AnalogMenu",
        "com",
        "team2994",
        "frc",
        "test",
        "BaseMenu",
        "com",
        "team2994",
        "frc",
        "test",
        "DigitalIOClockMenu",
        "com",
        "team2994",
        "frc",
        "test",
        "DigitalIOEncoderMenu",
        "com",
        "team2994",
        "frc",
        "test",
        "DigitalIOMenu",
        "com",
        "team2994",
        "frc",
        "test",
        "DigitalIOStateMenu",
        "com",
        "team2994",
        "frc",
        "test",
        "DigitalMenu",
        "com",
        "team2994",
        "frc",
        "test",
        "PWMMenu",
        "com",
        "team2994",
        "frc",
        "test",
        "RelayMenu",
        "com",
        "team2994",
        "frc",
        "test",
        "SolenoidMenu",
        "com",
        "team2994",
        "frc",
        "test",
        "TopMenu",
        "edu",
        "wpi",
        "first",
        "wpilibj",
        "DoubleSolenoid",
        "edu",
        "wpi",
        "first",
        "wpilibj",
        "DriverStation",
        "edu",
        "wpi",
        "first",
        "wpilibj",
        "DriverStationLCD",
        "edu",
        "wpi",
        "first",
        "wpilibj",
        "SimpleRobot",
        "edu",
        "wpi",
        "first",
        "wpilibj",
        "Timer",
        "driverStation",
        "driverStation",
        "driverStation",
        "driverStation",
        "loaded",
        "loading",
        "armDown",
        "Subsystems",
        "lcd",
        "clear",
        "Subsystems",
        "lcd",
        "DriverStationLCD",
        "Line",
        "kUser1",
        "Constants",
        "ROBOT_TYPES",
        "Subsystems",
        "ROBOT_TYPE",
        "Subsystems",
        "lcd",
        "updateLCD",
        "Subsystems",
        "initRobot",
        "Subsystems",
        "robotDrive",
        "setExpiration",
        "Constants",
        "LOOP_PERIOD",
        "Subsystems",
        "leftDriveEncoder",
        "setReverseDirection",
        "driverStation",
        "isEnabled",
        "Subsystems",
        "rightWinch",
        "Subsystems",
        "leftWinch",
        "loaded",
        "loading",
        "loading",
        "Subsystems",
        "winchSwitch",
        "get",
        "Subsystems",
        "rightWinch",
        "Subsystems",
        "leftWinch",
        "Subsystems",
        "loadingTimer",
        "stop",
        "Subsystems",
        "loadingTimer",
        "reset",
        "loaded",
        "loading",
        "Subsystems",
        "loadingTimer",
        "get",
        "Subsystems",
        "rightWinch",
        "Subsystems",
        "leftWinch",
        "Subsystems",
        "loadingTimer",
        "stop",
        "Subsystems",
        "loadingTimer",
        "reset",
        "loaded",
        "loading",
        "loaded",
        "Subsystems",
        "rightWinch",
        "Constants",
        "WINCH_FWD",
        "Subsystems",
        "leftWinch",
        "Constants",
        "WINCH_FWD",
        "Subsystems",
        "loadingTimer",
        "start",
        "loading",
        "loaded",
        "Subsystems",
        "rightWinch",
        "Constants",
        "WINCH_FWD",
        "Subsystems",
        "leftWinch",
        "Constants",
        "WINCH_FWD",
        "i",
        "i",
        "i",
        "driverStation",
        "isOperatorControl",
        "Subsystems",
        "robotDrive",
        "arcadeDrive",
        "Subsystems",
        "rightStick",
        "getY",
        "Subsystems",
        "rightStick",
        "getX",
        "Timer",
        "delay",
        "Subsystems",
        "rightWinch",
        "Subsystems",
        "leftWinch",
        "loaded",
        "speed",
        "dist",
        "Subsystems",
        "leftDriveEncoder",
        "reset",
        "Subsystems",
        "leftDriveEncoder",
        "start",
        "reading",
        "dist",
        "abs",
        "dist",
        "Subsystems",
        "lcd",
        "DriverStationLCD",
        "Line",
        "kUser2",
        "Subsystems",
        "leftDriveEncoder",
        "get",
        "Subsystems",
        "lcd",
        "updateLCD",
        "Subsystems",
        "robotDrive",
        "drive",
        "speed",
        "driverStation",
        "isAutonomous",
        "reading",
        "dist",
        "reading",
        "abs",
        "Subsystems",
        "leftDriveEncoder",
        "get",
        "Subsystems",
        "lcd",
        "DriverStationLCD",
        "Line",
        "kUser3",
        "reading",
        "Subsystems",
        "lcd",
        "updateLCD",
        "Subsystems",
        "robotDrive",
        "drive",
        "Subsystems",
        "leftDriveEncoder",
        "stop",
        "Subsystems",
        "robotDrive",
        "setSafetyEnabled",
        "loaded",
        "Subsystems",
        "winchSwitch",
        "get",
        "loading",
        "Subsystems",
        "intake",
        "Subsystems",
        "rightWinch",
        "Subsystems",
        "leftWinch",
        "drive",
        "Constants",
        "AUTO_DRIVE_SPEED",
        "Constants",
        "SHOT_POSN_DIST",
        "Subsystems",
        "arm",
        "DoubleSolenoid",
        "Value",
        "kForward",
        "Timer",
        "delay",
        "launchCatapult",
        "Timer",
        "delay",
        "driverStation",
        "getDigitalIn",
        "initiateLoad",
        "Subsystems",
        "intake",
        "Constants",
        "INTAKE_COLLECT",
        "checkLoad",
        "drive",
        "Constants",
        "AUTO_DRIVE_SPEED",
        "Constants",
        "SHOT_POSN_DIST",
        "Timer",
        "delay",
        "Subsystems",
        "intake",
        "Subsystems",
        "arm",
        "DoubleSolenoid",
        "Value",
        "kReverse",
        "Timer",
        "delay",
        "drive",
        "Constants",
        "AUTO_DRIVE_SPEED",
        "Constants",
        "SHOT_POSN_DIST",
        "Subsystems",
        "arm",
        "DoubleSolenoid",
        "Value",
        "kForward",
        "Timer",
        "delay",
        "launchCatapult",
        "drive",
        "Constants",
        "AUTO_DRIVE_SPEED",
        "Constants",
        "INTO_ZONE_DIST",
        "Constants",
        "SHOT_POSN_DIST",
        "Subsystems",
        "intake",
        "Subsystems",
        "rightWinch",
        "Subsystems",
        "leftWinch",
        "Subsystems",
        "robotDrive",
        "setSafetyEnabled",
        "loaded",
        "Subsystems",
        "winchSwitch",
        "get",
        "loading",
        "Subsystems",
        "intake",
        "Subsystems",
        "rightWinch",
        "Subsystems",
        "leftWinch",
        "drive",
        "Constants",
        "AUTO_DRIVE_SPEED",
        "Constants",
        "SHOT_POSN_DIST",
        "Subsystems",
        "arm",
        "DoubleSolenoid",
        "Value",
        "kForward",
        "Timer",
        "delay",
        "launchCatapult",
        "Timer",
        "delay",
        "drive",
        "Constants",
        "AUTO_DRIVE_SPEED",
        "Constants",
        "INTO_ZONE_DIST",
        "Constants",
        "SHOT_POSN_DIST",
        "Subsystems",
        "intake",
        "Subsystems",
        "rightWinch",
        "Subsystems",
        "leftWinch",
        "Subsystems",
        "leftStick",
        "getEvent",
        "Constants",
        "BUTTON_SHIFT",
        "ButtonEntry",
        "EVENT_OPENED",
        "Subsystems",
        "shifters",
        "DoubleSolenoid",
        "Value",
        "kForward",
        "Subsystems",
        "leftStick",
        "getEvent",
        "Constants",
        "BUTTON_SHIFT",
        "ButtonEntry",
        "EVENT_CLOSED",
        "Subsystems",
        "shifters",
        "DoubleSolenoid",
        "Value",
        "kReverse",
        "Subsystems",
        "robotDrive",
        "arcadeDrive",
        "Subsystems",
        "rightStick",
        "getY",
        "Subsystems",
        "rightStick",
        "getX",
        "Subsystems",
        "gamepad",
        "getEvent",
        "Constants",
        "BUTTON_LOAD",
        "ButtonEntry",
        "EVENT_CLOSED",
        "initiateLoad",
        "loading",
        "checkLoad",
        "Subsystems",
        "gamepad",
        "getEvent",
        "Constants",
        "BUTTON_SHOOT",
        "ButtonEntry",
        "EVENT_CLOSED",
        "launchCatapult",
        "Subsystems",
        "gamepad",
        "getEvent",
        "Constants",
        "BUTTON_ARM",
        "ButtonEntry",
        "EVENT_CLOSED",
        "armDown",
        "Subsystems",
        "arm",
        "DoubleSolenoid",
        "Value",
        "kReverse",
        "armDown",
        "Subsystems",
        "gamepad",
        "getEvent",
        "Constants",
        "BUTTON_ARM",
        "ButtonEntry",
        "EVENT_CLOSED",
        "Subsystems",
        "arm",
        "DoubleSolenoid",
        "Value",
        "kForward",
        "armDown",
        "Subsystems",
        "gamepad",
        "getDPadEvent",
        "Constants",
        "BUTTON_INTAKE_COLLECT",
        "ButtonEntry",
        "EVENT_CLOSED",
        "Subsystems",
        "intake",
        "Constants",
        "INTAKE_COLLECT",
        "Subsystems",
        "gamepad",
        "getDPadEvent",
        "Constants",
        "BUTTON_INTAKE_COLLECT",
        "ButtonEntry",
        "EVENT_OPENED",
        "Subsystems",
        "intake",
        "Subsystems",
        "gamepad",
        "getDPadEvent",
        "Constants",
        "BUTTON_INTAKE_EJECT",
        "ButtonEntry",
        "EVENT_CLOSED",
        "Subsystems",
        "intake",
        "Constants",
        "INTAKE_EJECT",
        "Subsystems",
        "gamepad",
        "getDPadEvent",
        "Constants",
        "BUTTON_INTAKE_EJECT",
        "ButtonEntry",
        "EVENT_OPENED",
        "Subsystems",
        "intake",
        "Subsystems",
        "gamepad",
        "getEvent",
        "Constants",
        "BUTTON_PASS",
        "ButtonEntry",
        "EVENT_CLOSED",
        "Subsystems",
        "ejectTimer",
        "start",
        "Subsystems",
        "eject",
        "DoubleSolenoid",
        "Value",
        "kForward",
        "Subsystems",
        "ejectTimer",
        "get",
        "Constants",
        "EJECT_WAIT",
        "Subsystems",
        "ejectTimer",
        "stop",
        "Subsystems",
        "ejectTimer",
        "reset",
        "Subsystems",
        "eject",
        "DoubleSolenoid",
        "Value",
        "kReverse",
        "Subsystems",
        "leftStick",
        "enableButton",
        "Constants",
        "BUTTON_SHIFT",
        "Subsystems",
        "gamepad",
        "enableButton",
        "Constants",
        "BUTTON_LOAD",
        "Subsystems",
        "gamepad",
        "enableButton",
        "Constants",
        "BUTTON_SHOOT",
        "Subsystems",
        "gamepad",
        "enableButton",
        "Constants",
        "BUTTON_ARM",
        "Subsystems",
        "gamepad",
        "enableButton",
        "Constants",
        "BUTTON_PASS",
        "Subsystems",
        "intake",
        "Subsystems",
        "rightWinch",
        "Subsystems",
        "leftWinch",
        "Subsystems",
        "arm",
        "DoubleSolenoid",
        "Value",
        "kReverse",
        "Subsystems",
        "robotDrive",
        "setSafetyEnabled",
        "clock",
        "sanity",
        "bigSanity",
        "loading",
        "loaded",
        "Subsystems",
        "winchSwitch",
        "get",
        "registerButtons",
        "Subsystems",
        "gamepad",
        "update",
        "Subsystems",
        "leftStick",
        "update",
        "Subsystems",
        "compressor",
        "start",
        "driverStation",
        "isOperatorControl",
        "driverStation",
        "isEnabled",
        "clock",
        "start",
        "handleDriverInputs",
        "handleShooter",
        "handleArm",
        "clock",
        "get",
        "Constants",
        "LOOP_PERIOD",
        "clock",
        "reset",
        "sanity",
        "sanity",
        "bigSanity",
        "sanity",
        "Subsystems",
        "lcd",
        "DriverStationLCD",
        "Line",
        "kUser3",
        "bigSanity",
        "Subsystems",
        "gamepad",
        "update",
        "Subsystems",
        "leftStick",
        "update",
        "Subsystems",
        "lcd",
        "updateLCD",
        "Subsystems",
        "intake",
        "Subsystems",
        "rightWinch",
        "Subsystems",
        "leftWinch",
        "Subsystems",
        "ROBOT_TYPE",
        "Constants",
        "PLY_BOY",
        "testPlyBoy",
        "testRobot",
        "Subsystems",
        "shifters",
        "DoubleSolenoid",
        "Value",
        "kForward",
        "Subsystems",
        "leftDriveEncoder",
        "start",
        "Subsystems",
        "leftDriveEncoder",
        "reset",
        "start",
        "Subsystems",
        "leftDriveEncoder",
        "get",
        "driverStation",
        "isTest",
        "Subsystems",
        "rightStick",
        "getRawButton",
        "Subsystems",
        "robotDrive",
        "arcadeDrive",
        "Subsystems",
        "rightStick",
        "getY",
        "Subsystems",
        "rightStick",
        "getX",
        "Subsystems",
        "robotDrive",
        "arcadeDrive",
        "Subsystems",
        "rightStick",
        "getY",
        "Subsystems",
        "rightStick",
        "getX",
        "Subsystems",
        "gamepad",
        "getEvent",
        "ButtonEntry",
        "EVENT_CLOSED",
        "start",
        "Subsystems",
        "leftDriveEncoder",
        "get",
        "Subsystems",
        "lcd",
        "DriverStationLCD",
        "Line",
        "kUser3",
        "Subsystems",
        "leftDriveEncoder",
        "get",
        "start",
        "Subsystems",
        "lcd",
        "updateLCD",
        "Subsystems",
        "gamepad",
        "update",
        "currentMenu",
        "BaseMenu",
        "TOP",
        "newMenu",
        "BaseMenu",
        "TOP",
        "menus",
        "BaseMenu",
        "NUM_MENU_TYPE",
        "menus",
        "BaseMenu",
        "TOP",
        "menus",
        "BaseMenu",
        "ANALOG",
        "menus",
        "BaseMenu",
        "DIGITAL_TOP",
        "menus",
        "BaseMenu",
        "SOLENOID",
        "menus",
        "BaseMenu",
        "DIGITAL_PWM",
        "menus",
        "BaseMenu",
        "DIGITAL_IO",
        "menus",
        "BaseMenu",
        "DIGITAL_RELAY",
        "menus",
        "BaseMenu",
        "DIGITAL_IO_STATE",
        "menus",
        "BaseMenu",
        "DIGITAL_IO_CLOCK",
        "menus",
        "BaseMenu",
        "DIGITAL_IO_ENCODER",
        "menus",
        "currentMenu",
        "updateDisplay",
        "Subsystems",
        "gamepad",
        "update",
        "sanity",
        "driverStation",
        "isTest",
        "Subsystems",
        "gamepad",
        "getDPadEvent",
        "Gamepad",
        "DPAD_DIRECTION_UP",
        "ButtonEntry",
        "EVENT_CLOSED",
        "menus",
        "currentMenu",
        "handleIndexUp",
        "Subsystems",
        "gamepad",
        "getDPadEvent",
        "Gamepad",
        "DPAD_DIRECTION_DOWN",
        "ButtonEntry",
        "EVENT_CLOSED",
        "menus",
        "currentMenu",
        "handleIndexDown",
        "Subsystems",
        "gamepad",
        "getDPadEvent",
        "Gamepad",
        "DPAD_DIRECTION_LEFT",
        "ButtonEntry",
        "EVENT_CLOSED",
        "newMenu",
        "menus",
        "currentMenu",
        "handleSelectLeft",
        "Subsystems",
        "gamepad",
        "getDPadEvent",
        "Gamepad",
        "DPAD_DIRECTION_RIGHT",
        "ButtonEntry",
        "EVENT_CLOSED",
        "newMenu",
        "menus",
        "currentMenu",
        "handleSelectRight",
        "newMenu",
        "currentMenu",
        "menus",
        "newMenu",
        "setCallingMenu",
        "currentMenu",
        "newMenu",
        "currentMenu",
        "menus",
        "newMenu",
        "updateDisplay",
        "currentMenu",
        "newMenu",
        "menus",
        "BaseMenu",
        "DIGITAL_PWM",
        "setSpeed",
        "Subsystems",
        "gamepad",
        "getRightY",
        "Subsystems",
        "gamepad",
        "update",
        "menus",
        "currentMenu",
        "updateDisplay",
        "Subsystems",
        "lcd",
        "DriverStationLCD",
        "Line",
        "kUser6",
        "sanity",
        "Subsystems",
        "lcd",
        "updateLCD",
        "sanity",
        "Timer",
        "delay",
        "i",
        "i",
        "BaseMenu",
        "NUM_MENU_TYPE",
        "i",
        "menu",
        "menus",
        "i",
        "menu",
        "cleanup"
    ],
    "literals": [
        "\"initial=\"",
        "\"reading=\"",
        "\"\"",
        "\"lde: \"",
        "\"Sanity: \""
    ],
    "variables": [
        "driverStation",
        "loaded",
        "loading",
        "armDown"
    ],
    "comments": [
        "m_ds already points to the DriverStation from the RobotBase class;",
        "Print an I'M ALIVE message before anything else. NOTHING ABOVE THIS LINE.",
        "initialize the subsystems",
        "Set the expiration to 1.5 times the loop speed.",
        "CheckLoad",
        "----> If yes, makes sure the state of the motors and variables is correct.",
        "the motor is shut off as soon as possible.",
        "Switch is normally closed",
        "Stop and reset the timer",
        "Did the timer expire? Yikes shut down the winch",
        "Stop and reset the timer",
        "InitiateLoad",
        "Start a timer",
        "LaunchCatapult",
        "The encoder.Reset() method seems not to set Get() values back to zero,",
        "so we use a variable to capture the initial value.",
        "Start moving the robot",
        "Test Autonomous",
        "STEP 1: Set all of the states.",
        "SAFETY AND SANITY - SET ALL TO ZERO",
        "STEP 2: Move forward to optimum shooting position",
        "STEP 3: Drop the arm for a clean shot",
        "Ken",
        "STEP 4: Launch the catapult",
        "Ken",
        "STEP 5: Start the intake motor and backup to our origin position to pick up another ball",
        "STEP 6: Shut off the intake, bring up the arm and move to shooting position",
        "Step 7: drop the arm for a clean shot and shoot",
        "UNTESTED KICKED OFF FIELD",
        "Ken",
        "Get us fully into the zone for 5 points",
        "SAFETY AND SANITY - SET ALL TO ZERO",
        "Real Autonomous",
        "STEP 1: Set all of the states.",
        "SAFETY AND SANITY - SET ALL TO ZERO",
        "STEP 2: Move forward to optimum shooting position",
        "STEP 3: Drop the arm for a clean shot",
        "Ken",
        "STEP 4: Launch the catapult",
        "Ken",
        "Get us fully into the zone for 5 points",
        "SAFETY AND SANITY - SET ALL TO ZERO",
        "HandleDriverInputs",
        "----> ASSUMES kForward = high gear",
        "Shift into high gear.",
        "Shift into low gear.",
        "HandleShooter",
        "----> ASSUMES positive values = collecting",
        "HandleArm",
        "----> ASSUMES kForward on DoubleSolenoid is the down position.",
        "HandleEject",
        "RegisterButtons",
        "Code to be run during the remaining 2:20 of the match (after Autonomous())",
        "",
        "OperatorControl",
        "SAFETY AND SANITY - SET ALL TO ZERO",
        "add an IsEnabled???",
        "SAFETY AND SANITY - SET ALL TO ZERO",
        "The test program is organized as a set of hierarchical menus that are",
        "displayed on the LCD on the driver station. Each menu is either a set",
        "of submenus or is a menu controlling the use of a port (or ports) on",
        "one of the IO modules plugged into the cRIO.",
        "See base.h for a description of the test menu hierarchy",
        "Simplified User's guide:",
        "dpad up   : move the cursor up one menu item",
        "dpad down : move the cursor down one menu item",
        "dpad left : decrement the value in the selected menu item or",
        "return to the previous menu if the menu item is \"Back\"",
        "dpad right: increment the value in the selected menu item or",
        "enter a submenu (as appropriate)",
        "gamepad right joystick: control the configured and enabled PWM ports",
        "(Top->Digital->PWM)",
        "Write out the TOP menu for the first time",
        "Initialize the button states on the gamepad",
        "Loop counter to ensure that the program us running (debug helper",
        "that can be removed when things get more stable)",
        "The dpad \"up\" button is used to move the menu pointer up one line",
        "on the LCD display",
        "The dpad \"down\" button is used to move the menu pointer down one line",
        "on the LCD display",
        "The dpad left button is used to exit a submenu when the menu pointer",
        "points to the \"back\" menu item and to decrease a value (where",
        "appropriate) on any other menu item.",
        "Theoretically, both the select buttons could be pressed in the",
        "same 10 msec window. However, if using the dpad on the game",
        "game controller this is physically impossible so we don't",
        "need to worry about a previous value of newMenu being",
        "overwritten in the next bit of code.",
        "The dpad right button is used to enter a submenu when the menu pointer",
        "points to a submenu item and to increase a value (where  appropriate)",
        "on any other menu item.",
        "Handle change from one menu to a sub menu",
        "When we enter a menu we need to set the record the",
        "menu to return to. We do *not* want to do this when",
        "returning from a menu to its calling menu.",
        "Handle change from one menu to another",
        "Set the motor speed(s) (if any have been enabled via the Digital PWM menu)",
        "Update gamepad button states",
        "Update the display (we do this on every loop pass because some menus",
        "(analog, for example) need to have values updated even when there are",
        "no dpad events to handle)",
        "Dump the sanity time value to the LCD",
        "Run the loop every 50 msec (20 times per second)"
    ],
    "docstrings": [
        "* Main Class for the Robot!!!!!!",
        "* Checks if the winch switch has been pressed.",
        "* Should be called every tick of an operator control loop to ensure that",
        "* Begins a load of the catapult by running the winch motor.",
        "* If in the correct state to launch (loaded), launches the catapult.",
        "* Code to be run autonomously for the first ten (10) seconds of the match.",
        "* Launch catapult",
        "* Drive robot forward ENCODER_DIST ticks.",
        "* Drive motors according to joystick values",
        "* Shift (Button 7 on left joystick)",
        "* Manage winch motor state.",
        "* Toggles collection and eject mode (Gamepad button 4)",
        "* Manage solenoids for arm up-down",
        "* Handle intake motors",
        "* Handle eject piston.",
        "* Register all the buttons required",
        "* Calls all the above methods",
        "TODO: Investigate. At least year's (GTR East) competition, we reached the conclusion that disabling this was \n\t\t * the only way we could get out robot code to work (reliably). Should this be set to false?",
        "* Run the test program"
    ],
    "functions": [
        "AstechzRobot",
        "robotInit",
        "checkLoad",
        "initiateLoad",
        "launchCatapult",
        "drive",
        "TestAutonomous",
        "autonomous",
        "handleDriverInputs",
        "handleShooter",
        "handleArm",
        "handleEject",
        "registerButtons",
        "operatorControl",
        "test",
        "testRobot",
        "testPlyBoy"
    ],
    "classes": [
        "AstechzRobot"
    ]
}