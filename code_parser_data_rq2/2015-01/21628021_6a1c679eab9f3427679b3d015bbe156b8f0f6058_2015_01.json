{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "express",
        "process",
        "http",
        "app",
        "port",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "__dirname",
        "checkEncoderQueue",
        "args",
        "config",
        "args",
        "process",
        "err",
        "err",
        "err",
        "err",
        "require",
        "server",
        "io",
        "io",
        "socket",
        "debug",
        "require",
        "process",
        "twitterRestClient",
        "twitter",
        "process",
        "process",
        "process",
        "process",
        "knoxClient",
        "knox",
        "process",
        "process",
        "process",
        "process",
        "i",
        "i",
        "pegMap",
        "i",
        "i",
        "process",
        "require",
        "SerialPort",
        "process",
        "process",
        "serialPort",
        "serialPort",
        "serialReceived",
        "data",
        "data",
        "i",
        "codes",
        "i",
        "codes",
        "i",
        "io",
        "pegMap",
        "pegCode",
        "pegCode",
        "process",
        "require",
        "require",
        "url",
        "process",
        "dbClient",
        "redis",
        "redisURL",
        "redisURL",
        "dbClient",
        "redisURL",
        "dbClient",
        "e",
        "r",
        "r",
        "r",
        "pegMap",
        "data",
        "app",
        "bodyParser",
        "app",
        "bodyParser",
        "app",
        "bodyParser",
        "app",
        "__dirname",
        "app",
        "app",
        "app",
        "require",
        "app",
        "require",
        "app",
        "express",
        "__dirname",
        "app",
        "req",
        "res",
        "getNextId",
        "id",
        "res",
        "id",
        "app",
        "req",
        "res",
        "getNextId",
        "id",
        "res",
        "pegMap",
        "app",
        "req",
        "res",
        "req",
        "dbClient",
        "newMap",
        "redis",
        "pegMap",
        "newMap",
        "debug",
        "res",
        "app",
        "req",
        "res",
        "getNextId",
        "id",
        "id",
        "res",
        "id",
        "res",
        "app",
        "req",
        "res",
        "serialReceived",
        "pegMap",
        "req",
        "res",
        "app",
        "req",
        "res",
        "req",
        "req",
        "data",
        "data",
        "data",
        "dbClient",
        "dropId",
        "data",
        "redis",
        "dbClient",
        "e",
        "r",
        "r",
        "r",
        "idData",
        "dropId",
        "idData",
        "dropId",
        "dbClient",
        "idData",
        "redis",
        "dropId",
        "res",
        "app",
        "req",
        "res",
        "req",
        "req",
        "addTweetToDrop",
        "dropId",
        "userName",
        "res",
        "app",
        "req",
        "res",
        "req",
        "pngData",
        "Buffer",
        "pngData",
        "PNG",
        "buffer",
        "png",
        "pixelData",
        "uploadFrameQueue",
        "pixelData",
        "req",
        "req",
        "encoderItem",
        "req",
        "encoderItem",
        "req",
        "encoderItem",
        "req",
        "encoderItem",
        "req",
        "encoderItem",
        "req",
        "encoderItem",
        "uploadFrameQueue",
        "encoderQueue",
        "encoderItem",
        "debug",
        "res",
        "encoderQueue",
        "debug",
        "encoderQueue",
        "encoderQueue",
        "encoderQueue",
        "encoderQueue",
        "TMP_GIF_PATH",
        "puckId",
        "encoder",
        "GIFEncoder",
        "width",
        "height",
        "encoder",
        "fs",
        "outputFile",
        "encoder",
        "debug",
        "puckId",
        "outputFile",
        "encoder",
        "encoder",
        "fps",
        "encoder",
        "encodeFrame",
        "encoderQueue",
        "encoderQueue",
        "encoderQueue",
        "encoderQueue",
        "debug",
        "frameCount",
        "framesRemaining",
        "frameCount",
        "encoder",
        "pixelData",
        "framesRemaining",
        "encoder",
        "encoder",
        "encoderQueue",
        "encoderFinished",
        "puckId",
        "debug",
        "puckId",
        "checkEncoderQueue",
        "encodeFrame",
        "puckId",
        "postAllTweetsForDrop",
        "puckId",
        "encoderQueue",
        "encoder",
        "startEncoding",
        "setTimeout",
        "checkEncoderQueue",
        "id",
        "id",
        "knoxClient",
        "TMP_GIF_PATH",
        "gifName",
        "gifName",
        "err",
        "res",
        "debug",
        "gifName",
        "config",
        "postTweet",
        "id",
        "_callback",
        "dbClient",
        "e",
        "r",
        "r",
        "r",
        "data",
        "data",
        "lastIndex",
        "data",
        "data",
        "lastIndex",
        "_callback",
        "nextId",
        "_callback",
        "dropId",
        "userName",
        "dbClient",
        "dropId",
        "e",
        "r",
        "r",
        "r",
        "runData",
        "userName",
        "dbClient",
        "dropId",
        "runData",
        "redis",
        "i",
        "encoderQueue",
        "i",
        "encoderQueue",
        "i",
        "dropId",
        "encoding",
        "encoding",
        "postTweet",
        "dropId",
        "userName",
        "dropId",
        "dbClient",
        "dropId",
        "e",
        "r",
        "r",
        "r",
        "i",
        "runData",
        "i",
        "postTweet",
        "dropId",
        "runData",
        "i",
        "dropId",
        "userName",
        "debug",
        "dropId",
        "userName"
    ],
    "literals": [
        "'./config'",
        "'crypto'",
        "'http'",
        "'path'",
        "'express'",
        "'fs'",
        "'sys'",
        "'body-parser'",
        "'knox'",
        "'request'",
        "'png-js'",
        "'gifencoder'",
        "'/tmp/'",
        "'uncaughtException'",
        "'png-js'",
        "'socket.io'",
        "'transports'",
        "'websocket'",
        "'connection'",
        "'Viewport Connected.'",
        "'node-twitter'",
        "\"serialport\"",
        "'data'",
        "'peg'",
        "'pegId'",
        "'raw'",
        "'redis'",
        "'url'",
        "\":\"",
        "'pegMap'",
        "'map'",
        "'50mb'",
        "'views'",
        "'/views'",
        "'view engine'",
        "'html'",
        "'view engine'",
        "'mustache'",
        "'html'",
        "'hogan-middleware'",
        "'mustache'",
        "'hogan-middleware'",
        "'/public'",
        "'/'",
        "'live.mustache'",
        "'js'",
        "'live'",
        "'nextId'",
        "'/calibrate'",
        "'calibrate.mustache'",
        "'js'",
        "'calibrate'",
        "'pegMap'",
        "'/save-calibration'",
        "'pegMap'",
        "'map'",
        "\"Peg map updated.\"",
        "'thanks.'",
        "'/next-id'",
        "'All out of IDs'",
        "'/peg-hit'",
        "'success!'",
        "'/save-run'",
        "'twitter'",
        "'allIds'",
        "'ids'",
        "'last'",
        "'allIds'",
        "\"Couldn't find drop ID in the list of all ids: \"",
        "'saved.'",
        "'/tweet-run'",
        "'success!'",
        "'/upload'",
        "\"\"",
        "'base64'",
        "'Adding frame to queue.'",
        "'success!'",
        "\"startEncoding() - Nothing to encode..\"",
        "'.gif'",
        "\"Starting new GIF encoder for id: \"",
        "\", \"",
        "\"Encoding GIF frame: \"",
        "\" of \"",
        "\"Finished encoding GIF for id: \"",
        "'.gif'",
        "'File uploaded to S3: '",
        "'allIds'",
        "'ids'",
        "'last'",
        "'ids'",
        "'ids'",
        "'TODO: Hit the twitter api, puck: '",
        "', user: '"
    ],
    "variables": [
        "config",
        "crypto",
        "http",
        "path",
        "express",
        "app",
        "port",
        "server",
        "fs",
        "sys",
        "bodyParser",
        "knox",
        "request",
        "PNG",
        "GIFEncoder",
        "TMP_GIF_PATH",
        "dbClient",
        "knoxClient",
        "encoder",
        "serialData",
        "pegMap",
        "uploadFrameQueue",
        "encoderQueue",
        "io",
        "twitter",
        "twitterRestClient",
        "i",
        "SerialPort",
        "serialPort",
        "codes",
        "i",
        "pegCode",
        "redis",
        "url",
        "redisURL",
        "data",
        "newMap",
        "dropId",
        "data",
        "idData",
        "dropId",
        "userName",
        "pngData",
        "pngData",
        "buffer",
        "png",
        "encoderItem",
        "puckId",
        "width",
        "height",
        "fps",
        "outputFile",
        "puckId",
        "pixelData",
        "frameCount",
        "framesRemaining",
        "gifName",
        "data",
        "lastIndex",
        "nextId",
        "runData",
        "encoding",
        "i",
        "runData",
        "i"
    ],
    "comments": [
        "Start checking the GIF encoder queue, this function starts a loop that will",
        "persist as long as the server is running.",
        "Hopefully this never happens..",
        "console.log(\"Node NOT Exiting...\");",
        "Start websocket server.",
        "Only use websocket (prevent fallback to XHR polling which I've seen happen",
        "sometimes for no apparent reason, even when connecting to localhost)",
        "Stub for socket connections.",
        "ignore pegmap in offline mode.",
        "create empty array for tweets..",
        "Add the drop",
        "Update the 'last' uid in the id list",
        "Parse PNG data and add the frame to the GIF encoder.",
        "Store this frame in the current queue of images.",
        "Note: If there was ever more than one board connected to the",
        "server, this could cause problems because the uploadFrameQueue",
        "doesn't keep track of the dropID, this system assumes only one",
        "client at a time.",
        "0 for repeat, -1 for no-repeat",
        "frame delay in ms",
        "get rid of the 0-th item in the queue",
        "start watchign the queue again.",
        "keep going..",
        "do nothing, check again in a bit.",
        "TODO: Actually DO the tweeting.",
        "debug('TODO: TWEET SOMETHING FOR ID: ' + dropId + ', recipient: ' + userName);",
        "Save twitter ID into the list for this run.",
        "Check the encoderQueue to see if this drop",
        "is currently being encoded.",
        "Only tweet if the drop is done encoding.",
        "function getGif(req, res) {\n  http.get('http://plin-co.s3.amazonaws.com/' + req.params[0] + '.gif', function(proxyRes) {\n    if (proxyRes.statusCode === 200) {\n      proxyRes.pipe(res);\n    } else {\n      return res.render('404.mustache');\n    }\n  });\n}\n\n\nfunction getPng(req, res) {\n  http.get('http://plin-co.s3.amazonaws.com/' + req.params[0] + '.png', function(proxyRes) {\n    if (proxyRes.statusCode === 200) {\n      proxyRes.pipe(res);\n    } else {\n      return res.render('404.mustache');\n    }\n  });\n}"
    ],
    "docstrings": [
        "* Wrapper for console output, muted if config.DEBUG is not enabled.",
        "* Event handler for serial data.",
        "* Default end point to load game.",
        "* Default end point to load game.",
        "* Default end point to load game.",
        "* End-point for getting the next available drop id.",
        "* Debug end-point for creating fake peg hits.",
        "* Saves the non-image data for a given drop (peg timings).",
        "* Post a tweet for a drop.  If the drop is still being encoded,\n * the tweet will occur when encoding is finished.",
        "* Handle image upload.",
        "* Start encoding the contents of the encoder queue.",
        "* Encode one frame from the encoder queue.",
        "* Called when a GIF is done being encoded for a drop.",
        "* Check the encoder queue and start encoding if it's not empty.",
        "* Save a GIF to S3.",
        "* Return the next available UID.",
        "* Add a twitter username to a given dropId.\n * \n * If the drop GIF is currently being encoded, the tweet will not be \n * sent out until the encoding is finished.",
        "* Post all tweets for a given drop.\n * Currently only called when the GIF is done encoding.",
        "* Hit the twitter API and post a tweet for a given drop."
    ],
    "functions": [
        "debug",
        "serialReceived",
        "startEncoding",
        "encodeFrame",
        "encoderFinished",
        "checkEncoderQueue",
        "saveGIF",
        "getNextId",
        "addTweetToDrop",
        "postAllTweetsForDrop",
        "postTweet"
    ],
    "classes": []
}