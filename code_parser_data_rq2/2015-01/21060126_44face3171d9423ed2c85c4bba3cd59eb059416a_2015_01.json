{
    "identifiers": [
        "ts",
        "path",
        "utils",
        "ts",
        "fileName",
        "content",
        "fileName",
        "fileName",
        "content",
        "fileName",
        "minChar",
        "limChar",
        "newText",
        "fileName",
        "isOpen",
        "settings",
        "ts",
        "fileName",
        "fileName",
        "position",
        "fileName",
        "index",
        "LanguageServiceHost",
        "baseDir",
        "defaultLibFileName",
        "ts",
        "fileName",
        "fileName",
        "content",
        "createScriptInfo",
        "fileName",
        "content",
        "fileNameToScript",
        "fileName",
        "script",
        "fileName",
        "fileNameToScript",
        "fileName",
        "fileNameToScript",
        "fileName",
        "content",
        "fileNameToScript",
        "fileName",
        "script",
        "script",
        "content",
        "fileName",
        "fileName",
        "minChar",
        "limChar",
        "newText",
        "fileNameToScript",
        "fileName",
        "script",
        "script",
        "minChar",
        "limChar",
        "newText",
        "fileName",
        "fileName",
        "isOpen",
        "fileNameToScript",
        "fileName",
        "script",
        "script",
        "isOpen",
        "fileName",
        "settings",
        "ts",
        "compilationSettings",
        "utils",
        "settings",
        "fileName",
        "fileNameToScript",
        "fileName",
        "script",
        "script",
        "fileName",
        "position",
        "fileNameToScript",
        "fileName",
        "script",
        "script",
        "position",
        "position",
        "fileName",
        "index",
        "fileNameToScript",
        "fileName",
        "script",
        "script",
        "index",
        "ts",
        "compilationSettings",
        "fileNameToScript",
        "fileName",
        "fileNameToScript",
        "fileName",
        "script",
        "script",
        "fileName",
        "fileNameToScript",
        "fileName",
        "script",
        "script",
        "fileName",
        "ts",
        "fileNameToScript",
        "fileName",
        "script",
        "getScriptSnapShot",
        "script",
        "baseDir",
        "defaultLibFileName",
        "addScript",
        "removeScript",
        "removeAll",
        "updateScript",
        "editScript",
        "getIndexFromPosition",
        "getPositionFromIndex",
        "getScriptContent",
        "setCompilationSettings",
        "setScriptIsOpen",
        "getCompilationSettings",
        "getScriptFileNames",
        "getScriptVersion",
        "getScriptIsOpen",
        "getScriptSnapshot",
        "getCurrentDirectory",
        "getDefaultLibFilename",
        "val",
        "ts",
        "newContent",
        "minChar",
        "limChar",
        "newText",
        "line",
        "ch",
        "position",
        "fileName",
        "content",
        "isOpen",
        "ts",
        "_lineStartIsDirty",
        "_lineStarts",
        "ts",
        "content",
        "_lineStartIsDirty",
        "_lineStarts",
        "newContent",
        "content",
        "newContent",
        "_lineStartIsDirty",
        "editRanges",
        "version",
        "minChar",
        "limChar",
        "newText",
        "content",
        "minChar",
        "content",
        "limChar",
        "content",
        "prefix",
        "middle",
        "suffix",
        "_lineStartIsDirty",
        "editRanges",
        "ts",
        "ts",
        "minChar",
        "limChar",
        "newText",
        "version",
        "line",
        "ch",
        "getLineStarts",
        "line",
        "ch",
        "position",
        "position",
        "position",
        "content",
        "RangeError",
        "getLineStarts",
        "utils",
        "lineStarts",
        "position",
        "lineNumber",
        "lineNumber",
        "lineNumber",
        "lineNumber",
        "position",
        "lineStarts",
        "lineNumber",
        "fileName",
        "content",
        "version",
        "isOpen",
        "val",
        "isOpen",
        "val",
        "editRanges",
        "getLineStarts",
        "updateContent",
        "editContent",
        "getPositionFromLine",
        "getLineAndColForPositon",
        "scriptInfo",
        "ts",
        "scriptInfo",
        "scriptInfo",
        "scriptInfo",
        "scriptInfo",
        "oldSnapshot",
        "ts",
        "ts",
        "oldSnapshot",
        "scriptVersion",
        "version",
        "ts",
        "editRanges",
        "version",
        "scriptVersion",
        "initialEditRangeIndex",
        "editRanges",
        "initialEditRangeIndex",
        "ts",
        "entries",
        "start",
        "end",
        "textSnapshot",
        "start",
        "end",
        "textSnapshot",
        "getChangeRange",
        "lineStarts",
        "version",
        "LanguageServiceHost"
    ],
    "literals": [
        "'use strict'",
        "'typescript'",
        "'path'",
        "'./utils'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'No script with name \\''",
        "'\\''",
        "string",
        "string",
        "'No script with name \\''",
        "'\\''",
        "string",
        "'No script with name \\''",
        "'\\''",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "''",
        "'0'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'Argument out of range: position'"
    ],
    "variables": [
        "compilationSettings",
        "fileNameToScript",
        "script",
        "script",
        "script",
        "script",
        "script",
        "script",
        "script",
        "script",
        "script",
        "script",
        "version",
        "editRanges",
        "_lineStarts",
        "_lineStartIsDirty",
        "prefix",
        "middle",
        "newText",
        "suffix",
        "lineStarts",
        "lineNumber",
        "lineStarts",
        "textSnapshot",
        "version",
        "editRanges",
        "scriptVersion",
        "initialEditRangeIndex",
        "entries"
    ],
    "comments": [
        "Copyright 2013-2014 Fran√ßois de Campredon",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "ts.Logger implementation",
        "LanguageServiceHost implementation",
        "ts.LanguageServiceHost implementation",
        "Apply edits",
        "Store edit range + new length of script",
        "Update version #"
    ],
    "docstrings": [
        "* add a script to the host\n     * \n     * @param fileName the absolute path of the file\n     * @param content the file content",
        "* remove a script from the host\n     * \n     * @param fileName the absolute path of the file",
        "* remove all script from the host\n     * \n     * @param fileName the absolute path of the file",
        "* update a script\n     * \n     * @param fileName the absolute path of the file\n     * @param content the new file content",
        "* edit a script\n     * \n     * @param fileName the absolute path of the file\n     * @param minChar the index in the file content where the edition begins\n     * @param limChar the index  in the file content where the edition ends\n     * @param newText the text inserted",
        "* set 'open' status of a script\n     * \n     * @param fileName the absolute path of the file\n     * @param isOpen open status",
        "* the the language service host compilation settings\n     * \n     * @param the settings to be applied to the host",
        "* retrieve the content of a given script\n     * \n     * @param fileName the absolute path of the file",
        "* return an index from a positon in line/char\n     * \n     * @param path the path of the file\n     * @param position the position",
        "* return a positon in line/char from an index\n     * \n     * @param path the path of the file\n     * @param index the index",
        "* compilationSettings",
        "* a map associating file absolute path to ScriptInfo",
        "* add a script to the host\n         * \n         * @param fileName the absolute path of the file\n         * @param content the file content",
        "* remove a script from the host\n         * \n         * @param fileName the absolute path of the file",
        "* remove all script from the host\n         * \n         * @param fileName the absolute path of the file",
        "* update a script\n         * \n         * @param fileName the absolute path of the file\n         * @param content the new file content",
        "* edit a script\n         * \n         * @param fileName the absolute path of the file\n         * @param minChar the index in the file content where the edition begins\n         * @param limChar the index  in the file content where the edition ends\n         * @param newText the text inserted",
        "* set 'open' status of a script\n         * \n         * @param fileName the absolute path of the file\n         * @param isOpen open status",
        "* the the language service host compilation settings\n         * \n         * @param the settings to be applied to the host",
        "* retrieve the content of a given script\n         * \n         * @param fileName the absolute path of the file",
        "* return an index from a positon in line/char\n         * \n         * @param path the path of the file\n         * @param position the position",
        "* return a positon in line/char from an index\n         * \n         * @param path the path of the file\n         * @param index the index",
        "* Manage a script in the language service host",
        "* update the content of the script\n         * \n         * @param newContent the new script content",
        "* edit the script content\n         * \n         * @param minChar the index in the file content where the edition begins\n         * @param limChar the index  in the file content where the edition ends\n         * @param newText the text inserted",
        "* return an index position from line an character position\n         * \n         * @param line line number\n         * @param character charecter poisiton in the line",
        "* return line and chararacter position from index position\n         * \n         * @param position"
    ],
    "functions": [
        "create",
        "addScript",
        "removeScript",
        "removeAll",
        "updateScript",
        "editScript",
        "setScriptIsOpen",
        "setCompilationSettings",
        "getScriptContent",
        "getIndexFromPosition",
        "getPositionFromIndex",
        "getCompilationSettings",
        "getScriptFileNames",
        "getScriptVersion",
        "getScriptIsOpen",
        "getScriptSnapshot",
        "getCurrentDirectory",
        "getDefaultLibFilename",
        "createScriptInfo",
        "getLineStarts",
        "updateContent",
        "editContent",
        "getPositionFromLine",
        "getLineAndColForPositon",
        "getScriptSnapShot",
        "getChangeRange"
    ],
    "classes": []
}