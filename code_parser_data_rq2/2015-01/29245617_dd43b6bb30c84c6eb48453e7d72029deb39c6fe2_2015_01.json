{
    "identifiers": [
        "org",
        "bit",
        "conn",
        "java",
        "sql",
        "Connection",
        "java",
        "sql",
        "DriverManager",
        "java",
        "sql",
        "ResultSet",
        "java",
        "sql",
        "SQLException",
        "java",
        "sql",
        "Statement",
        "java",
        "util",
        "java",
        "util",
        "Iterator",
        "java",
        "util",
        "org",
        "bit",
        "mail",
        "Mail",
        "conn",
        "DRIVER",
        "SUM_NAME",
        "ERROR_CODE_RECORD_NOT_EXISTED",
        "ERROR_CODE_DATABASE_NOT_EXISTED",
        "ERROR_CODE_DATABASE_ALREADY_EXISTED",
        "ERROR_CODE_TALBE_NOT_EXISTED",
        "ERROR_CODE_TABLE_ALREADY_EXISTED",
        "SPAM_DICT_TABLE_NAME",
        "NORMAL_DICT_TABLE_NAME",
        "MAIL_TABLE_NAME",
        "statement",
        "url",
        "user",
        "password",
        "url",
        "user",
        "password",
        "url",
        "url",
        "user",
        "user",
        "password",
        "password",
        "Class",
        "forName",
        "DRIVER",
        "e",
        "e",
        "printStackTrace",
        "conn",
        "DriverManager",
        "getConnection",
        "url",
        "user",
        "password",
        "e",
        "e",
        "printStackTrace",
        "conn",
        "Override",
        "conn",
        "getConnection",
        "createStatement",
        "statement",
        "conn",
        "createStatement",
        "statement",
        "executeUpdate",
        "createStatement",
        "statement",
        "close",
        "conn",
        "close",
        "e",
        "e",
        "printStackTrace",
        "Override",
        "conn",
        "getConnection",
        "createSpamDictStatement",
        "SPAM_DICT_TABLE_NAME",
        "createNormalDictStatement",
        "NORMAL_DICT_TABLE_NAME",
        "addSumRecordInSpamDict",
        "SPAM_DICT_TABLE_NAME",
        "SUM_NAME",
        "addSumRecordInNormalDict",
        "NORMAL_DICT_TABLE_NAME",
        "SUM_NAME",
        "statement",
        "conn",
        "createStatement",
        "statement",
        "executeUpdate",
        "createSpamDictStatement",
        "statement",
        "executeUpdate",
        "createNormalDictStatement",
        "statement",
        "executeUpdate",
        "addSumRecordInNormalDict",
        "statement",
        "executeUpdate",
        "addSumRecordInSpamDict",
        "statement",
        "close",
        "conn",
        "close",
        "e",
        "e",
        "printStackTrace",
        "Override",
        "conn",
        "getConnection",
        "createStatement",
        "MAIL_TABLE_NAME",
        "statement",
        "conn",
        "createStatement",
        "statement",
        "executeUpdate",
        "createStatement",
        "statement",
        "close",
        "conn",
        "close",
        "e",
        "e",
        "printStackTrace",
        "Override",
        "tag",
        "isInsert",
        "wordlist",
        "conn",
        "getConnection",
        "worditer",
        "wordlist",
        "iterator",
        "tableName",
        "tag",
        "SPAM_DICT_TABLE_NAME",
        "NORMAL_DICT_TABLE_NAME",
        "rs",
        "thisWord",
        "hashResult",
        "statement",
        "conn",
        "createStatement",
        "rs",
        "statement",
        "executeQuery",
        "SUM_NAME",
        "tableName",
        "hashResult",
        "put",
        "SUM_NAME",
        "rs",
        "getInt",
        "e1",
        "e1",
        "printStackTrace",
        "worditer",
        "hasNext",
        "thisWord",
        "worditer",
        "next",
        "rs",
        "statement",
        "executeQuery",
        "thisWord",
        "tableName",
        "hashResult",
        "put",
        "thisWord",
        "rs",
        "getInt",
        "e",
        "e",
        "getErrorCode",
        "ERROR_CODE_RECORD_NOT_EXISTED",
        "printf",
        "thisWord",
        "isInsert",
        "insert",
        "tag",
        "thisWord",
        "e",
        "printStackTrace",
        "statement",
        "close",
        "conn",
        "close",
        "e",
        "e",
        "printStackTrace",
        "hashResult",
        "tag",
        "word",
        "tableName",
        "tag",
        "SPAM_DICT_TABLE_NAME",
        "NORMAL_DICT_TABLE_NAME",
        "insertStatement",
        "tableName",
        "word",
        "addSumRecord",
        "tableName",
        "SUM_NAME",
        "statement",
        "executeUpdate",
        "insertStatement",
        "statement",
        "executeUpdate",
        "addSumRecord",
        "e",
        "word",
        "word",
        "e",
        "printStackTrace",
        "Override",
        "tag",
        "word",
        "worditer",
        "word",
        "iterator",
        "conn",
        "getConnection",
        "statement",
        "conn",
        "createStatement",
        "worditer",
        "hasNext",
        "insert",
        "tag",
        "worditer",
        "next",
        "e",
        "e",
        "printStackTrace",
        "statement",
        "close",
        "conn",
        "close",
        "e",
        "e",
        "printStackTrace",
        "tag",
        "word",
        "tableName",
        "tag",
        "SPAM_DICT_TABLE_NAME",
        "NORMAL_DICT_TABLE_NAME",
        "deleteStatement",
        "tableName",
        "word",
        "statement",
        "conn",
        "createStatement",
        "statement",
        "execute",
        "deleteStatement",
        "e",
        "word",
        "e",
        "printStackTrace",
        "Override",
        "tag",
        "word",
        "worditer",
        "word",
        "iterator",
        "conn",
        "getConnection",
        "statement",
        "conn",
        "createStatement",
        "e",
        "e",
        "printStackTrace",
        "worditer",
        "hasNext",
        "tag",
        "worditer",
        "next",
        "statement",
        "close",
        "conn",
        "close",
        "e",
        "e",
        "printStackTrace",
        "Override",
        "mail",
        "Override",
        "mail",
        "Override",
        "mail"
    ],
    "literals": [
        "\"com.mysql.jdbc.Driver\"",
        "\"^S^U^M^\"",
        "\"Spam_Dictionary\"",
        "\"Normal_Dictionary\"",
        "\"Mail\"",
        "\"Database connection success\"",
        "\"Datavase connection failure\"",
        "\"CREATE DATABASE Spam_Data\"",
        "\"create database failed\"",
        "\"CREATE TABLE \"",
        "\" (\"",
        "\"Spam_word TEXT UNIQUE NOT NULL,\"",
        "\"Spam_frequency INTEGER NOT NULL\"",
        "\")\"",
        "\"CREATE TABLE \"",
        "\" (\"",
        "\"Normal_word TEXT UNIQUE NOT NULL,\"",
        "\"Normal_frequency INTEGER NOT NULL\"",
        "\")\"",
        "\"INSERT INTO\"",
        "\"values(\"",
        "\" , 0)\"",
        "\"INSERT INTO\"",
        "\"values(\"",
        "\" , 0)\"",
        "\"create table dict failed\"",
        "\"CREATE TABLE \"",
        "\" (\"",
        "\"Mail_ID INTERGER PRIMARY KEY,\"",
        "\"Mail_content TEXT,\"",
        "\"Mail_tag BOOL,\"",
        "\"Mail_author TEXT,\"",
        "\"Mail_subject TEXT,\"",
        "\"Mail_date DATE\"",
        "\")\"",
        "\"create table mail failed\"",
        "\"SELECT Dict_frequency WHERE Dict_word == \"",
        "\" FROM \"",
        "\"Get sum error\"",
        "\"SELECT Dict_frequency WHERE Dict_word == \"",
        "\" FROM \"",
        "\"no word : \"",
        "\"statment or conn close failed when query\"",
        "\"INSERT INTO \"",
        "\" (Dict_word, Dict_frequency) VALUES ('\"",
        "\"', 1)\"",
        "\"ON DUPLICATE KEY UPDATE Dict_frequency = Dict_frequency + 1\"",
        "\"UPDATE \"",
        "\"SET Dict_frequency = Dict_frequency + 1 \"",
        "\"where Dict_word == \"",
        "\"Insert \"",
        "\" Failed\"",
        "\"create statement failed when insert a list of words\"",
        "\"close failed when insert a list of words\"",
        "\"INSERT INTO \"",
        "\" (Dict_word, Dict_frequency) VALUES ('\"",
        "\"', 0)\"",
        "\"ON DUPLICATE KEY UPDATE Dict_frequency = Dict_frquency - 1\"",
        "\"fail to delete \"",
        "\"statement create failed when delete a list of words\"",
        "\"Statment or conn close failed when delete a list of words\""
    ],
    "variables": [
        "conn",
        "statement",
        "url",
        "user",
        "password"
    ],
    "comments": [
        "I don't need to use insert()",
        "if the mail is spam",
        "FIXME index here is not standard",
        "if no this word",
        "sum ++",
        "TODO Auto-generated method stub",
        "TODO Auto-generated method stub",
        "TODO Auto-generated method stub"
    ],
    "docstrings": [
        "* Driver of Mysql is:com.mysql.jdbc.Driver\n\t *",
        "hen creating database",
        "* CREATE DATABASE Spam_Data\n\t *",
        "* CREATE TABLE Spam_Dictionary(\n\t * \t\tDict_word TEXT UNIQUE NOT NULL,\n\t * \t\tDict_frequency INTEGER UNSIGNED NOT NULL;\n\t * );\n\t * \n\t * CREATE TABLE Normal_Dictionary(\n\t * \t\tDict_word TEXT UNIQUE NOT NULL,\n\t * \t\tDict_frequency INTEGER UNSIGNED NOT NULL;\n\t * );\n\t * \n\t * INSERT INTO Spam_Dictionary values(\"^S^U^M^\",0);\n\t * \n\t * INSERT INTO Normal_Dcitionary values(\"^S^U^M^\",0);\n\t * \n\t * the first item contains the sum frequency of all words\n\t *",
        "* CREATE TABLE Mail(\n\t * \t\tMail_ID INTERGER PRIMARY KEY,\n\t * \t\tMail_content TEXT,\n\t * \t\tMail_tag BOOL,\n\t * \t\tMail_author TEXT,\n\t * \t\tMail_subject TEXT,\n\t * \t\tMail_date DATE\n\t * );\n\t *",
        "* \n\t * SELECT Dict_frequency WHERE Dict_word == $word FROM $TABLENAME;\n\t * \n\t * Query frequency of each words from Dict database \n\t * @param tag query from `spam_dict` or `normal_dict` ,true stands for `spam_dict`\n\t * @param isInsert whether to insert a new word if not exists in database\n\t * @param wordlist words prepared to query\n\t * @return a hashmap of <word,frequency>,and includes SUM item \n\t *",
        "* INSERT INTO $tableName (Dict_word,Dict_frequency) VALUES ('$word',1)\n\t * \t\tON DUPLICATE KEY UPDATE Dict_frequecy = Dict_frquency + 1;\n\t * \n\t * It's lucky that MySQL supports duplication detectation.If the word exists,Dict_frequency ++;if not, create a new record.\n\t * It works automatically!\n\t * @param tag insert into `spam_dict` or `normal_dict` ,true stands for `spam_dict`\n\t *",
        "* Insert a list of words.\n\t *",
        "* INSERT INTO $tableName (Dict_word,Dict_frequency) VALUES ('$word',0)\n\t * \t\tON DUPLICATE KEY UPDATE Dict_frequecy = Dict_frquency - 1; \n\t * \n\t * It's impossible to delete a word directly.\n\t * This method only supports \"frequency --\"\n\t * \"delete\" means \"delete all words in a certain mail from database\"\n\t *",
        "* Mail database \n\t *"
    ],
    "functions": [
        "MysqlAccess",
        "Connection",
        "getConnection",
        "createDatabase",
        "createTableDict",
        "createTableMail",
        "query",
        "insert",
        "insert",
        "insert",
        "modify"
    ],
    "classes": [
        "MysqlAccess"
    ]
}