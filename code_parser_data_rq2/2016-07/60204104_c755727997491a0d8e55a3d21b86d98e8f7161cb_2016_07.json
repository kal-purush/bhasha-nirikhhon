{
    "identifiers": [
        "com",
        "netflix",
        "dynomitemanager",
        "sidecore",
        "aws",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "com",
        "amazonaws",
        "auth",
        "AWSCredentials",
        "com",
        "amazonaws",
        "auth",
        "AWSCredentialsProvider",
        "com",
        "amazonaws",
        "auth",
        "BasicSessionCredentials",
        "com",
        "amazonaws",
        "auth",
        "STSAssumeRoleSessionCredentialsProvider",
        "com",
        "google",
        "inject",
        "Inject",
        "com",
        "netflix",
        "dynomitemanager",
        "identity",
        "InstanceEnvIdentity",
        "com",
        "netflix",
        "dynomitemanager",
        "sidecore",
        "IConfiguration",
        "com",
        "netflix",
        "dynomitemanager",
        "sidecore",
        "ICredential",
        "AWS_ROLE_ASSUMPTION_SESSION_NAME",
        "cred",
        "config",
        "insEnvIdentity",
        "stsSessionCredentialsProvider",
        "Inject",
        "cred",
        "config",
        "insEnvIdentity",
        "cred",
        "cred",
        "config",
        "config",
        "insEnvIdentity",
        "insEnvIdentity",
        "Override",
        "stsSessionCredentialsProvider",
        "stsSessionCredentialsProvider",
        "roleArn",
        "insEnvIdentity",
        "isClassic",
        "roleArn",
        "config",
        "getVpcAWSRoleAssumptionArn",
        "roleArn",
        "config",
        "getClassicAWSRoleAssumptionArn",
        "roleArn",
        "roleArn",
        "isEmpty",
        "stsSessionCredentialsProvider",
        "cred",
        "getAwsCredentialProvider",
        "roleArn",
        "AWS_ROLE_ASSUMPTION_SESSION_NAME",
        "ex",
        "ex",
        "getLocalizedMessage",
        "ex",
        "stsSessionCredentialsProvider"
    ],
    "literals": [
        "\"AwsRoleAssumptionSession\"",
        "\"Role ARN is null or empty probably due to missing config entry\"",
        "\"Exception in getting handle to AWS Security Token Service (STS).  Msg: \""
    ],
    "variables": [
        "cred",
        "config",
        "insEnvIdentity",
        "stsSessionCredentialsProvider"
    ],
    "comments": [
        "Env is EC2 classic --> IAM assumed role for VPC created",
        "Env is VPC --> IAM assumed role for EC2 classic created",
        ""
    ],
    "docstrings": [
        "*  Create the assumed IAM role based on the environment.\n\t\t\t\t\t *  For example, if the current environment is VPC, \n\t\t\t\t\t *  then the assumed role is for EC2 classic, and vice versa.",
        "*  Get handle to an implementation that uses AWS Security Token Service (STS) to create temporary, \n\t\t\t\t\t *  short-lived session with explicit refresh for session/token expiration."
    ],
    "functions": [
        "AwsRoleAssumptionCredential",
        "AWSCredentialsProvider",
        "getAwsCredentialProvider"
    ],
    "classes": [
        "AwsRoleAssumptionCredential"
    ]
}