{
    "identifiers": [
        "socket",
        "urlparse",
        "argus",
        "action_manager",
        "argus",
        "exceptions",
        "argus",
        "util",
        "requests",
        "winrm",
        "exceptions",
        "winrm_exceptions",
        "util",
        "LOG",
        "BaseActionManager",
        "client",
        "config",
        "os_type",
        "util",
        "WINDOWS",
        "WindowsActionManager",
        "client",
        "config",
        "os_type",
        "uri",
        "location",
        "LOG",
        "debug",
        "uri",
        "location",
        "format",
        "uri",
        "location",
        "_client",
        "run_command_with_retry",
        "cmd",
        "count",
        "util",
        "RETRY_COUNT",
        "delay",
        "util",
        "RETRY_DELAY",
        "command_type",
        "util",
        "POWERSHELL",
        "resource_location",
        "location",
        "_conf",
        "argus",
        "resources",
        "base_resource",
        "endswith",
        "urlparse",
        "urljoin",
        "_conf",
        "argus",
        "resources",
        "urlparse",
        "urljoin",
        "base_resource",
        "resource_location",
        "download",
        "uri",
        "location",
        "resource_location",
        "parameters",
        "script_type",
        "LOG",
        "debug",
        "resource_location",
        "parameters",
        "script_type",
        "util",
        "BAT_SCRIPT",
        "util",
        "CMD",
        "format",
        "resource_location",
        "split",
        "download_resource",
        "resource_location",
        "instance_location",
        "format",
        "instance_location",
        "parameters",
        "_client",
        "run_command_with_retry",
        "cmd",
        "count",
        "util",
        "RETRY_COUNT",
        "delay",
        "util",
        "RETRY_DELAY",
        "command_type",
        "script_type",
        "resource_location",
        "parameters",
        "_execute_resource_script",
        "resource_location",
        "resource_location",
        "parameters",
        "parameters",
        "script_type",
        "util",
        "POWERSHELL_SCRIPT_BYPASS",
        "resource_location",
        "parameters",
        "_execute_resource_script",
        "resource_location",
        "resource_location",
        "parameters",
        "parameters",
        "script_type",
        "util",
        "BAT_SCRIPT",
        "LOG",
        "info",
        "download_resource",
        "service_type",
        "LOG",
        "debug",
        "format",
        "build",
        "_conf",
        "argus",
        "build",
        "arch",
        "_conf",
        "argus",
        "arch",
        "LOG",
        "info",
        "installer",
        "service_type",
        "format",
        "service_type",
        "installer",
        "execute_powershell_resource_script",
        "resource_location",
        "parameters",
        "parameters",
        "exceptions",
        "ArgusError",
        "LOG",
        "debug",
        "_deploy_using_scheduled_task",
        "installer",
        "service_type",
        "installer",
        "service_type",
        "format",
        "service_type",
        "installer",
        "execute_cmd_resource_script",
        "resource_script",
        "parameters",
        "format",
        "resource_location",
        "split",
        "download_resource",
        "resource_location",
        "cmd",
        "LOG",
        "debug",
        "cmd",
        "_client",
        "run_remote_cmd",
        "cmd",
        "command_type",
        "util",
        "POWERSHELL_SCRIPT_BYPASS",
        "socket",
        "error",
        "winrm_exceptions",
        "WinRMTransportError",
        "winrm_exceptions",
        "InvalidCredentialsError",
        "requests",
        "ConnectionError",
        "requests",
        "Timeout",
        "LOG",
        "debug",
        "LOG",
        "info",
        "wait_boot_completion",
        "repo_url",
        "location",
        "LOG",
        "info",
        "repo_url",
        "location",
        "format",
        "repo_url",
        "location",
        "_client",
        "run_command_with_retry",
        "cmd",
        "count",
        "util",
        "RETRY_COUNT",
        "delay",
        "util",
        "RETRY_DELAY",
        "command_type",
        "util",
        "CMD",
        "_client",
        "run_command_until_condition",
        "wait_cmd",
        "strip",
        "retry_count",
        "util",
        "RETRY_COUNT",
        "delay",
        "util",
        "RETRY_DELAY",
        "command_type",
        "util",
        "POWERSHELL",
        "searched_paths",
        "test_cmd",
        "format",
        "path",
        "path",
        "searched_paths",
        "check_cmd",
        "check_cmds",
        "_client",
        "run_command_until_condition",
        "check_cmd",
        "strip",
        "retry_count",
        "util",
        "RETRY_COUNT",
        "delay",
        "util",
        "RETRY_DELAY",
        "command_type",
        "util",
        "POWERSHELL",
        "LOG",
        "info",
        "_conf",
        "openstack",
        "image_username",
        "format",
        "username",
        "_client",
        "run_command_until_condition",
        "wait_cmd",
        "stdout",
        "stdout",
        "strip",
        "username",
        "retry_count",
        "util",
        "RETRY_COUNT",
        "delay",
        "util",
        "RETRY_DELAY",
        "command_type",
        "util",
        "POWERSHELL",
        "LOG",
        "debug",
        "_os_type"
    ],
    "literals": [
        "\"Downloading from %s to %s \"",
        "\"Invoke-WebRequest -Uri {} \"",
        "\"-OutFile {}\"",
        "\"/\"",
        "\"resources/\"",
        "\"Executing resource script %s with this parameters %s\"",
        "r\"C:\\{}\"",
        "'/'",
        "\"{} {}\"",
        "\"\"",
        "\"\"",
        "\"Retrieve an installation script for CloudbaseInit.\"",
        "\"windows/installCBinit.ps1\"",
        "r\"C:\\installCBinit.ps1\"",
        "\"Installing Cloudbase-Init ...\"",
        "\"CloudbaseInitSetup_{build}_{arch}.msi\"",
        "\"Run the downloaded installation script \"",
        "\"using the installer %r with service %r.\"",
        "'-serviceType {} -installer {}'",
        "'windows/installCBinit.ps1'",
        "\"Cannot install, deploying using a scheduled task.\"",
        "'windows/schedule_installer.bat'",
        "'-serviceeType {} -installer {}'",
        "\"windows/sysprep.ps1\"",
        "r\"C:\\{}\"",
        "'/'",
        "\"Running %s \"",
        "\"Currently rebooting...\"",
        "\"Wait for the machine to finish rebooting ...\"",
        "\"Cloning from %s to %s\"",
        "\"git clone {} {}\"",
        "'(Get-Service | where -Property Name '",
        "'-match cloudbase-init).Status'",
        "'Stopped'",
        "'Test-Path {}'",
        "'True'",
        "\"Waiting for boot completion...\"",
        "'(Get-WmiObject Win32_Account | '",
        "'where -Property Name -contains {0}).Name'",
        "\"Prepare something specific for OS Type %s\""
    ],
    "variables": [
        "LOG",
        "cmd",
        "base_resource",
        "base_resource",
        "uri",
        "script_type",
        "instance_location",
        "cmd",
        "installer",
        "parameters",
        "resource_script",
        "parameters",
        "resource_location",
        "cmd",
        "cmd",
        "wait_cmd",
        "test_cmd",
        "check_cmds",
        "username",
        "wait_cmd"
    ],
    "comments": [
        "Copyright 2016 Cloudbase Solutions Srl",
        "All Rights Reserved.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\"); you may",
        "not use this file except in compliance with the License. You may obtain",
        "a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT",
        "WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the",
        "License for the specific language governing permissions and limitations",
        "under the License.",
        "TODO(cpopa): the service type is specific to each scenario,",
        "find a way to pass it",
        "This can happen for multiple reasons,",
        "but one of them is the fact that the installer",
        "can't be installed through WinRM on some OSes",
        "for whatever reason. In this case, we're falling back",
        "to use a scheduled task.",
        "After executing sysprep.ps1 the instance will reboot and",
        "it is normal to have conectivity issues during that time.",
        "Knowing this we have to except this kind of errors.",
        "This fixes errors that stops scenarios from getting",
        "created on different windows images.",
        "We don't have anythong specific for the base"
    ],
    "docstrings": [
        "\"\"\"Download the resource locatet at a specific uri in the location.\n\n        :param uri:\n            Remote url where the data is found.\n\n        :param location:\n            Path from the instance in which we should download the\n            remote resouce.\n        \"\"\"",
        "\"\"\"Download the resource in the specified location\n\n        :param resource_script:\n            Is relative to the /argus/resources/ directory.\n        :param location:\n            The location on the instance.\n        \"\"\"",
        "\"\"\"Run a resource script with with the specific parameters.\"\"\"",
        "\"\"\"Execute a powershell resource script.\"\"\"",
        "\"\"\"Execute a .bat resource script.\"\"\"",
        "\"\"\"Get instalation script for CloudbaseInit.\"\"\"",
        "\"\"\"Run the installation script for CloudbaseInit.\"\"\"",
        "\"\"\"Clone from an remote repo to a specific location on the instance.\n\n        :param repo_url:\n            The remote repo url.\n        :param location:\n            Specific location on the instance.\n        \"\"\"",
        "\"\"\"Wait if the CloudBase Init Service to stop.\"\"\"",
        "\"\"\"Check if the CloudBase Init service started.\n\n        :param searched_paths:\n            Paths to files that should exist if the hearbeat patch is\n            aplied.\n        \"\"\"",
        "\"\"\"Wait for a resonable amount of time the instance to boot.\"\"\"",
        "\"\"\"Prepare some OS specific resources.\"\"\""
    ],
    "functions": [
        "download",
        "download_resource",
        "_execute_resource_script",
        "execute_powershell_resource_script",
        "execute_cmd_resource_script",
        "get_installation_script",
        "install_cbinit",
        "_deploy_using_scheduled_task",
        "sysprep",
        "git_clone",
        "wait_cbinit_service",
        "check_cbinit_service",
        "wait_boot_completion",
        "specific_prepare"
    ],
    "classes": [
        "WindowsActionManager"
    ]
}