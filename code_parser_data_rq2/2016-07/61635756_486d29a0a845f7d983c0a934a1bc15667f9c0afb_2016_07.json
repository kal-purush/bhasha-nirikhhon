{
    "identifiers": [
        "data_collector",
        "java",
        "io",
        "FileWriter",
        "java",
        "io",
        "java",
        "util",
        "Iterator",
        "org",
        "apache",
        "jena",
        "query",
        "QuerySolution",
        "org",
        "apache",
        "jena",
        "query",
        "ResultSet",
        "org",
        "apache",
        "jena",
        "rdf",
        "model",
        "RDFNode",
        "org",
        "apache",
        "jena",
        "rdf",
        "model",
        "Resource",
        "query",
        "QueryExecutor",
        "queryExecutor",
        "DBPEDIA_SPARQL_ENDPOINT",
        "args",
        "rs",
        "getBookDataSet",
        "exportDataToCSV",
        "rs",
        "e",
        "e",
        "printStackTrace",
        "rs",
        "writer",
        "writer",
        "append",
        "writer",
        "append",
        "writer",
        "append",
        "writer",
        "append",
        "writer",
        "append",
        "writer",
        "append",
        "writer",
        "append",
        "writer",
        "append",
        "writer",
        "append",
        "writer",
        "append",
        "writer",
        "append",
        "writer",
        "append",
        "bookURI",
        "bookName",
        "authorName",
        "authorMovement",
        "bookGenre",
        "bookAbstract",
        "rs",
        "hasNext",
        "result",
        "rs",
        "next",
        "variables",
        "result",
        "varNames",
        "variables",
        "hasNext",
        "variables",
        "next",
        "value",
        "result",
        "get",
        "bookName",
        "value",
        "getLexicalForm",
        "authorName",
        "value",
        "getLexicalForm",
        "bookGenre",
        "value",
        "getLexicalForm",
        "bookAbstract",
        "value",
        "getLexicalForm",
        "bookURI",
        "value",
        "getURI",
        "authorMovement",
        "value",
        "getLexicalForm",
        "writer",
        "append",
        "bookURI",
        "bookName",
        "authorName",
        "authorMovement",
        "bookGenre",
        "bookAbstract",
        "writer",
        "flush",
        "writer",
        "close",
        "query",
        "queryExecutor",
        "executeSelectSparqlQuery",
        "query",
        "DBPEDIA_SPARQL_ENDPOINT"
    ],
    "literals": [
        "\"http://dbpedia.org/sparql\"",
        "\"bookDataSet.csv\"",
        "\"Book URI\"",
        "\"Book name\"",
        "\"Author name\"",
        "\"Author movement\"",
        "\"Book genre\"",
        "\"Book abstract\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"bookName\"",
        "\"authorName\"",
        "\"bookGenre\"",
        "\"bookAbstract\"",
        "\"bookURI\"",
        "\"authorMovement\"",
        "\"#\"",
        "\"#\"",
        "\"#\"",
        "\"#\"",
        "\"#\"",
        "\"\\n\"",
        "\"the end :)\"",
        "\"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX dbpedia: <http://dbpedia.org/resource/> PREFIX ontology: <http://dbpedia.org/ontology/> select distinct ?bookURI ?bookName ?authorName ?authorMovement ?bookGenre ?bookAbstract where { ?bookURI rdf:type ontology:Book . ?bookURI  ontology:author ?author . ?bookURI  ontology:abstract ?bookAbstract . ?bookURI  ontology:literaryGenre ?genre . ?bookURI rdfs:label ?bookName . ?author rdfs:label ?authorName . ?author ontology:movement ?movement . ?genre rdfs:label ?bookGenre . ?movement rdfs:label ?authorMovement . FILTER (lang(?authorName) = \\\"en\\\" && lang(?bookName) = \\\"en\\\" && lang(?bookAbstract) = \\\"en\\\" && lang(?authorMovement) = \\\"en\\\" && lang(?bookGenre) = \\\"en\\\")  }\""
    ],
    "variables": [],
    "comments": [
        "TODO Auto-generated catch block"
    ],
    "docstrings": [],
    "functions": [
        "main",
        "exportDataToCSV",
        "ResultSet",
        "getBookDataSet"
    ],
    "classes": [
        "DataCollector"
    ]
}