{
    "identifiers": [
        "com",
        "dersommer",
        "samples",
        "java8",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "stream",
        "Collectors",
        "java",
        "util",
        "stream",
        "IntStream",
        "java",
        "util",
        "stream",
        "Stream",
        "org",
        "junit",
        "Assert",
        "org",
        "junit",
        "Test",
        "com",
        "dersommer",
        "samples",
        "java8",
        "dto",
        "Person",
        "com",
        "dersommer",
        "samples",
        "java8",
        "dto",
        "PersonFactory",
        "Test",
        "people",
        "PersonFactory",
        "generateList",
        "Assert",
        "assertNotNull",
        "people",
        "stream",
        "people",
        "stream",
        "Assert",
        "assertEquals",
        "stream",
        "count",
        "IntStream",
        "forEach",
        "i",
        "people",
        "forEach",
        "Test",
        "people",
        "PersonFactory",
        "generateList",
        "Assert",
        "assertNotNull",
        "people",
        "stream",
        "people",
        "stream",
        "count",
        "p",
        "people",
        "p",
        "getRank",
        "count",
        "filtered",
        "stream",
        "p",
        "p",
        "getRank",
        "collect",
        "Collectors",
        "toList",
        "Assert",
        "assertEquals",
        "count",
        "filtered",
        "size",
        "IntStream",
        "forEach",
        "i",
        "format",
        "filtered",
        "size",
        "filtered",
        "forEach",
        "Test",
        "people",
        "PersonFactory",
        "generateList",
        "Assert",
        "assertNotNull",
        "people",
        "duplicated",
        "people",
        "stream",
        "flatMap",
        "p",
        "add",
        "p",
        "add",
        "p",
        "stream",
        "collect",
        "Collectors",
        "toList",
        "Assert",
        "assertEquals",
        "people",
        "size",
        "duplicated",
        "size",
        "peopleCopy",
        "people",
        "stream",
        "distinct",
        "sorted",
        "p1",
        "p2",
        "p1",
        "getName",
        "compareTo",
        "p2",
        "getName",
        "collect",
        "Collectors",
        "toList",
        "filtered",
        "duplicated",
        "stream",
        "distinct",
        "sorted",
        "p1",
        "p2",
        "p1",
        "getName",
        "compareTo",
        "p2",
        "getName",
        "collect",
        "Collectors",
        "toList",
        "Assert",
        "assertEquals",
        "peopleCopy",
        "size",
        "filtered",
        "size",
        "IntStream",
        "peopleCopy",
        "size",
        "forEach",
        "i",
        "Assert",
        "assertTrue",
        "peopleCopy",
        "get",
        "i",
        "equals",
        "filtered",
        "get",
        "i",
        "IntStream",
        "forEach",
        "i",
        "format",
        "filtered",
        "size",
        "filtered",
        "forEach"
    ],
    "literals": [
        "\"-\"",
        "\"-\"",
        "\"\"",
        "\"Filtered = %d items\"",
        "\"-\"",
        "\"\"",
        "\"Filtered = %d items\""
    ],
    "variables": [],
    "comments": [
        "Collections implement stream method. Returns a sequential Stream with this collection as its source.",
        "Print the contents, using a method reference",
        "Collections implement stream method. Returns a sequential Stream with this collection as its source.",
        "Old school count. If we were searching for building a",
        "filtered list in this method, we would need a new list instance",
        "New",
        "Print the contents, using a method reference",
        "First, generate another list, using streams, of course",
        "flatMap is a mapping function that may return one or more results, in a list.",
        "After that, the results can be reduced or collected",
        "Order both lists, and apply a common filter, distinct()",
        "Variables must be final or immutable to be captured inside the stream",
        "some operations that run in parallel can't change the value of",
        "variables from the external scope inside the stream",
        "That is why we need \"peopleCopy\"",
        "Print the contents, using a method reference"
    ],
    "docstrings": [],
    "functions": [
        "test001_IntroduceStream",
        "test002_IntroduceFilter",
        "test003_FilterRemoveDuplicatesWithDistinct"
    ],
    "classes": [
        "StreamFilterTest"
    ]
}