{
    "identifiers": [
        "yargs",
        "TypeDoc",
        "writeFileSync",
        "mkdirSync",
        "path",
        "kebabCase",
        "prettier",
        "renderInline",
        "renderMarkdownInline",
        "TypeDoc",
        "text",
        "childType",
        "generateType",
        "childType",
        "text",
        "text",
        "generateType",
        "text",
        "text",
        "signature",
        "param",
        "param",
        "param",
        "param",
        "param",
        "paramText",
        "param",
        "paramText",
        "paramText",
        "generateType",
        "param",
        "text",
        "signature",
        "text",
        "generateType",
        "signature",
        "text",
        "text",
        "text",
        "text",
        "arg",
        "generateType",
        "arg",
        "text",
        "text",
        "generateType",
        "generateType",
        "value",
        "value",
        "text",
        "apisToGenerate",
        "format",
        "text",
        "bracketsRegexp",
        "match",
        "content",
        "apisToGenerate",
        "content",
        "content",
        "kebabCase",
        "content",
        "format",
        "content",
        "url",
        "url",
        "content",
        "api",
        "apisToGenerate",
        "api",
        "acc",
        "propertyReflection",
        "acc",
        "propertyReflection",
        "hasDefaultValue",
        "headers",
        "api",
        "propertyReflection",
        "propertyReflection",
        "propertyReflection",
        "linkify",
        "comment",
        "apisToGenerate",
        "propertyReflection",
        "name",
        "name",
        "name",
        "name",
        "comment",
        "comment",
        "defaultTag",
        "defaultValue",
        "escapeCell",
        "defaultTag",
        "escapeCell",
        "generateType",
        "propertyReflection",
        "hasDefaultValue",
        "text",
        "name",
        "defaultValue",
        "escapeCell",
        "description",
        "text",
        "name",
        "escapeCell",
        "description",
        "text",
        "api",
        "api",
        "api",
        "api",
        "api",
        "api",
        "apisToGenerate",
        "api",
        "linkify",
        "api",
        "apisToGenerate",
        "generateImportStatement",
        "api",
        "generateProperties",
        "api",
        "apisToGenerate",
        "filename",
        "data",
        "prettierConfigPath",
        "prettier",
        "filename",
        "prettierConfigPath",
        "prettierConfig",
        "filename",
        "prettierConfigPath",
        "writeFileSync",
        "filename",
        "prettier",
        "data",
        "prettierConfig",
        "filename",
        "reflection",
        "TypeDoc",
        "reflection",
        "child",
        "child",
        "TypeDoc",
        "project",
        "TypeDoc",
        "apisToGenerate",
        "project",
        "TypeDoc",
        "allEvents",
        "linkify",
        "apisToGenerate",
        "events",
        "renderMarkdownInline",
        "description",
        "events",
        "argv",
        "path",
        "argv",
        "mkdirSync",
        "outputDirectory",
        "path",
        "__dirname",
        "path",
        "workspaceRoot",
        "TypeDoc",
        "app",
        "TypeDoc",
        "app",
        "TypeDoc",
        "app",
        "app",
        "apisToGenerate",
        "apiName",
        "project",
        "apiName",
        "TypeDoc",
        "reflection",
        "apiName",
        "reflection",
        "reflection",
        "findProperties",
        "reflection",
        "kebabCase",
        "reflection",
        "generateMarkdown",
        "api",
        "apisToGenerate",
        "reflection",
        "reflection",
        "reflection",
        "linkify",
        "reflection",
        "apisToGenerate",
        "api",
        "propertyReflection",
        "propertyReflection",
        "linkify",
        "comment",
        "apisToGenerate",
        "propertyReflection",
        "renderMarkdownInline",
        "description",
        "generateType",
        "propertyReflection",
        "response",
        "writePrettifiedFile",
        "path",
        "outputDirectory",
        "slug",
        "json",
        "prettierConfigPath",
        "api",
        "writePrettifiedFile",
        "path",
        "outputDirectory",
        "slug",
        "markdown",
        "prettierConfigPath",
        "writePrettifiedFile",
        "path",
        "outputDirectory",
        "slug",
        "slug",
        "slug",
        "prettierConfigPath",
        "api",
        "extractEvents",
        "project",
        "apisToGenerate",
        "writePrettifiedFile",
        "path",
        "workspaceRoot",
        "events",
        "prettierConfigPath",
        "yargs",
        "command",
        "command",
        "run"
    ],
    "literals": [
        "'yargs'",
        "'typedoc'",
        "'fs'",
        "'path'",
        "'lodash/kebabCase'",
        "'prettier'",
        "'../../node_modules/@material-ui/monorepo/docs/src/modules/utils/parseMarkdown'",
        "string",
        "string",
        "'union'",
        "'('",
        "''",
        "' | '",
        "${text})",
        "'intrinsic'",
        "'literal'",
        "${type.value}",
        "'array'",
        "${generateType(type.elementType)}[]",
        "'reflection'",
        "'('",
        "''",
        "'('",
        "...${param.name}",
        "'?'",
        "'?'",
        "${paramText}: ${generateType(param.type)}",
        "', '",
        "')'",
        "=> ${generateType(signature.type)}",
        "${text})",
        "'reference'",
        "<",
        "', '",
        ">",
        "'indexedAccess'",
        "${generateType(type.objectType)}[${generateType(type.indexType)}]",
        "''",
        "'&lt;'",
        "'&gt;'",
        "'\\\\|'",
        "'<br />'",
        "'markdown'",
        "'html'",
        "string",
        "string",
        "/api/data-grid/${kebabCase(content)}/",
        "'markdown'",
        "[${content}](${url})",
        "<a href=\"${url}\">${content}</a>",
        "'default'",
        "| Name | Type | Default | Description |\n|:-----|:-----|:--------|:------------|",
        "| Name | Type | Description |\n|:-----|:-----|:------------|",
        "## Properties\\n\\n${headers}\\n",
        "''",
        "'markdown'",
        "<span class=\"prop-name optional\">${name}<sup><abbr title=\"optional\">?</abbr></sup></span>",
        "<span class=\"prop-name\">${name}</span>",
        "''",
        "'default'",
        "<span class=\"prop-default\">${escapeCell(defaultTag.text)}</span>",
        "<span class=\"prop-type\">${escapeCell(\n      generateType(propertyReflection.type),\n    )}</span>",
        "| ${name} | ${type} | ${defaultValue} | ${escapeCell(description)} |\\n",
        "| ${name} | ${type} | ${escapeCell(description)} |\\n",
        "'GridApi'",
        "\\`\\`\\`js\nimport { ${api.name} } from '@material-ui/x-grid';\n\\`\\`\\",
        "\\`\\`\\`js\nimport { ${api.name} } from '@material-ui/x-grid';\n// or\nimport { ${api.name} } from '@material-ui/data-grid';\n\\`\\`\\",
        "# ${api.name} Interface",
        "''",
        "<p class=\"description\">${linkify(api.description || '', apisToGenerate, 'html')}</p>",
        "''",
        "'html'",
        "''",
        "'## Import'",
        "''",
        "''",
        "'\\n'",
        "string",
        "string",
        "string",
        "Could not resolve config for '${filename}' using prettier config path '${prettierConfigPath}'.",
        "'utf8'",
        "string",
        "string",
        "''",
        "'html'",
        "string",
        "'../../'",
        "'prettier.config.js'",
        "'packages/grid/data-grid/src/index.ts'",
        "'**/*.test.ts'",
        "'packages/grid/data-grid/tsconfig.json'",
        "'GridApi'",
        "'GridColDef'",
        "'GridCellParams'",
        "'GridRowParams'",
        "'GridSelectionApi'",
        "'GridFilterApi'",
        "Could not find reflection for \"${apiName}\".",
        "'GridApi'",
        "'html'",
        "''",
        "'html'",
        "${slug}.json",
        "'Built JSON file for'",
        "${slug}.md",
        "${slug}.js",
        "import React from 'react';\nimport MarkdownDocs from 'docs/src/modules/components/MarkdownDocs';\nimport { prepareMarkdown } from 'docs/src/modules/utils/parseMarkdown';\n\nconst pageFilename = 'api/${slug}';\nconst requireRaw = require.context('!raw-loader!./', false, /\\\\/${slug}\\\\.md$/);\n\nexport default function Page({ docs }) {\n  return <MarkdownDocs docs={docs} />;\n}\n\nPage.getInitialProps = () => {\n  const { demos, docs } = prepareMarkdown({ pageFilename, requireRaw });\n  return { demos, docs };\n};",
        "'Built API docs for'",
        "'docs/src/pages/components/data-grid/events/events.json'",
        "'Built events file'",
        "'$0 <outputDirectory>'",
        "'generates API docs'",
        "'outputDirectory'",
        "'directory where the markdown is written to'",
        "'string'"
    ],
    "variables": [
        "text",
        "signature",
        "text",
        "paramText",
        "text",
        "bracketsRegexp",
        "url",
        "hasDefaultValue",
        "headers",
        "text",
        "name",
        "comment",
        "description",
        "defaultValue",
        "defaultTag",
        "prettierConfig",
        "events",
        "allEvents",
        "description",
        "outputDirectory",
        "workspaceRoot",
        "prettierConfigPath",
        "app",
        "project",
        "apisToGenerate",
        "reflection",
        "api",
        "slug",
        "markdown",
        "json",
        "comment",
        "description",
        "response",
        "events"
    ],
    "comments": [
        "Based on https://github.com/TypeStrong/typedoc-default-themes/blob/master/src/default/partials/type.hbs",
        "TODO: Check if interface was exported",
        "eslint-disable-next-line no-console",
        "eslint-disable-next-line no-console",
        "eslint-disable-next-line no-console"
    ],
    "docstrings": [],
    "functions": [
        "generateType",
        "escapeCell",
        "linkify",
        "generateProperties",
        "generateImportStatement",
        "generateMarkdown",
        "writePrettifiedFile",
        "findProperties",
        "extractEvents",
        "run"
    ],
    "classes": []
}