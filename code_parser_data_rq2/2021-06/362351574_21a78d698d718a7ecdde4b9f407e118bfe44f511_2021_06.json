{
    "identifiers": [
        "unittest",
        "mock",
        "patch",
        "streamlit",
        "st",
        "streamlit",
        "errors",
        "StreamlitAPIException",
        "tests",
        "testutil",
        "testutil",
        "DeltaGeneratorTestCase",
        "st",
        "beta_columns",
        "column",
        "columns",
        "column",
        "st",
        "write",
        "get_all_deltas_from_queue",
        "all_deltas",
        "all_deltas",
        "all_deltas",
        "assertEqual",
        "len",
        "all_deltas",
        "assertEqual",
        "horizontal_block",
        "add_block",
        "horizontal",
        "total_weight",
        "st",
        "beta_columns",
        "column",
        "columns",
        "column",
        "st",
        "write",
        "get_all_deltas_from_queue",
        "all_deltas",
        "all_deltas",
        "all_deltas",
        "assertEqual",
        "len",
        "all_deltas",
        "assertEqual",
        "horizontal_block",
        "add_block",
        "horizontal",
        "total_weight",
        "assertEqual",
        "columns_blocks",
        "add_block",
        "column",
        "weight",
        "assertEqual",
        "columns_blocks",
        "add_block",
        "column",
        "weight",
        "assertEqual",
        "columns_blocks",
        "add_block",
        "column",
        "weight",
        "st",
        "beta_columns",
        "column",
        "columns",
        "column",
        "get_all_deltas_from_queue",
        "all_deltas",
        "all_deltas",
        "assertEqual",
        "len",
        "all_deltas",
        "assertEqual",
        "len",
        "columns_blocks",
        "assertEqual",
        "horizontal_block",
        "add_block",
        "horizontal",
        "total_weight",
        "assertEqual",
        "columns_blocks",
        "add_block",
        "column",
        "weight",
        "assertEqual",
        "columns_blocks",
        "add_block",
        "column",
        "weight",
        "assertEqual",
        "columns_blocks",
        "add_block",
        "column",
        "weight",
        "testutil",
        "DeltaGeneratorTestCase",
        "assertRaises",
        "st",
        "beta_expander",
        "st",
        "beta_expander",
        "expander",
        "get_delta_from_queue",
        "assertEqual",
        "expander_block",
        "add_block",
        "expandable",
        "label",
        "assertEqual",
        "expander_block",
        "add_block",
        "expandable",
        "expanded"
    ],
    "literals": [
        "\"Hello\"",
        "\"Hello\"",
        "\"label\"",
        "\"label\""
    ],
    "variables": [
        "columns",
        "all_deltas",
        "horizontal_block",
        "columns_blocks",
        "widgets",
        "columns",
        "all_deltas",
        "horizontal_block",
        "columns_blocks",
        "widgets",
        "columns",
        "all_deltas",
        "horizontal_block",
        "columns_blocks",
        "expander",
        "expander",
        "expander_block"
    ],
    "comments": [
        "7 elements will be created: 1 horizontal block, 3 columns, 3 markdown",
        "7 elements will be created: 1 horizontal block, 3 columns, 3 markdown",
        "4 elements will be created: 1 horizontal block, 3 columns"
    ],
    "docstrings": [
        "\"\"\"Test columns.\"\"\"",
        "\"\"\"Test that it works correctly when spec is int\"\"\"",
        "\"\"\"Test that it works correctly when spec is list of ints\"\"\"",
        "\"\"\"Test that it works correctly when spec is list of floats or ints\"\"\"",
        "\"\"\"Test that label is required\"\"\"",
        "\"\"\"Test that it can be called with no params\"\"\""
    ],
    "functions": [
        "test_equal_width_columns",
        "test_not_equal_width_int_columns",
        "test_not_equal_width_float_columns",
        "test_label_required",
        "test_just_label"
    ],
    "classes": [
        "ColumnsTest",
        "ExpanderTest"
    ]
}