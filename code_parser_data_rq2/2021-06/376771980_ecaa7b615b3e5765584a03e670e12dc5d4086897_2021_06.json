{
    "identifiers": [
        "require",
        "require",
        "require",
        "readData",
        "filename",
        "resolve",
        "reject",
        "fs",
        "filename",
        "err",
        "data",
        "err",
        "err",
        "reject",
        "err",
        "resolve",
        "data",
        "process",
        "files",
        "process",
        "file",
        "files",
        "path",
        "file",
        "path",
        "file",
        "name",
        "name",
        "ext",
        "file",
        "new_name",
        "readData",
        "file",
        "complied",
        "gccx",
        "fileData",
        "e",
        "e",
        "complied",
        "match",
        "matches",
        "match",
        "complied",
        "complied",
        "match",
        "replaced",
        "fs",
        "new_name",
        "complied",
        "err",
        "err",
        "err"
    ],
    "literals": [
        "\"gccx\"",
        "\"fs\"",
        "\"path\"",
        "'utf8'",
        "'empty file list'",
        "\"GCCX\"",
        "\"g\"",
        "${name.slice(0, name.lastIndexOf('.'))}_dist${ext}",
        "'.'",
        "'file'",
        "'==>'",
        "''",
        "\"GCCX[ \\n\\t]*/\\\\*[^*]*\\\\*/\"",
        "\"gims\"",
        "\"GCCX[ \\n\\t]*/\\\\*\"",
        "\"gims\"",
        "\"\"",
        "\"*/\"",
        "\"\""
    ],
    "variables": [
        "gccx",
        "fs",
        "path",
        "readData",
        "files",
        "patten",
        "name",
        "ext",
        "new_name",
        "fileData",
        "complied",
        "matches",
        "replaced"
    ],
    "comments": [
        "import gccx from \"gccx\";",
        "console.log('gccx', gccx);",
        "const patten = /\\/\\*[^*]*\\*\\//gims;",
        "const patten = /[a-z]\\s/gims;",
        "const patten = /GCCX\\s/gims;",
        "console.log(complied);",
        "console.log(replaced);",
        "console.log(complied);"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}