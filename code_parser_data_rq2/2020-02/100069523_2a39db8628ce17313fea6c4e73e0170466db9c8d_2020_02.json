{
    "identifiers": [
        "com",
        "sandpolis",
        "server",
        "vanilla",
        "gen",
        "java",
        "nio",
        "file",
        "StandardOpenOption",
        "READ",
        "java",
        "nio",
        "file",
        "StandardOpenOption",
        "WRITE",
        "java",
        "io",
        "java",
        "nio",
        "BufferOverflowException",
        "java",
        "nio",
        "ByteOrder",
        "java",
        "nio",
        "channels",
        "FileChannel",
        "java",
        "nio",
        "channels",
        "FileChannel",
        "MapMode",
        "java",
        "nio",
        "file",
        "Path",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "com",
        "sandpolis",
        "core",
        "instance",
        "Core",
        "com",
        "sandpolis",
        "core",
        "proto",
        "util",
        "Generator",
        "GenConfig",
        "com",
        "sandpolis",
        "core",
        "proto",
        "util",
        "Generator",
        "MicroConfig",
        "com",
        "sandpolis",
        "core",
        "soi",
        "Build",
        "SO_Build",
        "log",
        "LoggerFactory",
        "getLogger",
        "config",
        "archiveExtension",
        "config",
        "archiveExtension",
        "Override",
        "output",
        "inject",
        "output",
        "soi_build",
        "Core",
        "SO_BUILD",
        "toByteArray",
        "inject",
        "output",
        "soi_client",
        "config",
        "getMicro",
        "toByteArray",
        "binary",
        "placeholder",
        "replacement",
        "placeholder",
        "placeholder",
        "placeholder",
        "placeholder",
        "replacement",
        "length",
        "placeholder",
        "length",
        "BYTES",
        "ch",
        "FileChannel",
        "open",
        "binary",
        "READ",
        "WRITE",
        "buffer",
        "ch",
        "MapMode",
        "READ_WRITE",
        "ch",
        "position",
        "ch",
        "size",
        "order",
        "ByteOrder",
        "nativeOrder",
        "buffer",
        "mark",
        "find",
        "buffer",
        "remaining",
        "placeholder",
        "length",
        "i",
        "i",
        "placeholder",
        "length",
        "i",
        "buffer",
        "get",
        "placeholder",
        "i",
        "buffer",
        "reset",
        "buffer",
        "position",
        "buffer",
        "position",
        "mark",
        "find",
        "buffer",
        "position",
        "buffer",
        "position",
        "placeholder",
        "length",
        "log",
        "debug",
        "replacement",
        "length",
        "toHexString",
        "buffer",
        "position",
        "buffer",
        "putInt",
        "replacement",
        "length",
        "buffer",
        "put",
        "replacement",
        "gc",
        "soi_build",
        "soi_client"
    ],
    "literals": [
        "\"The first four bytes of the placeholder must be 0\"",
        "\"Writing {} bytes at: 0x{}\"",
        "\"Failed to find placeholder in binary\""
    ],
    "variables": [],
    "comments": [
        "============================================================================//",
        "//",
        "Copyright Â© 2015 - 2020 Subterranean Security               //",
        "//",
        "This source file is subject to the terms of the Mozilla Public License    //",
        "version 2. You may not use this file except in compliance with the MPL    //",
        "as published by the Mozilla Foundation at:                                //",
        "//",
        "https://mozilla.org/MPL/2.0                                             //",
        "//",
        "=========================================================S A N D P O L I S==//",
        "TODO get stub according to platform/architecture",
        "TODO maybe the com.sandpolis.gradle.soi plugin should take care of this?",
        "Inject the client configuration",
        "TODO return actual output",
        "Check the first four bytes of the placeholder",
        "Check the replacement buffer size",
        "Return to the start of the placeholder",
        "Overwrite!",
        "Placeholder not found",
        "Since it's not possible to explicitly unmap files yet, signalling the garbage",
        "collector is the best we can do."
    ],
    "docstrings": [
        "* Generates a <b>com.sandpolis.client.micro</b> stub.\n *\n * @author cilki\n * @since 6.1.0",
        "* Replace the first occurrence of the placeholder in the binary file with the\n\t * given replacement. This method uses a standard needle/haystack linear search\n\t * algorithm with backtracking.\n\t *\n\t * <p>\n\t * The first four bytes of the placeholder must be zero and will become the size\n\t * of the replacement buffer. Therefore, the replacement length must be no\n\t * greater than four less than the length of the placeholder.\n\t *\n\t * @param binary      The binary file to process\n\t * @param placeholder The unique placeholder\n\t * @param replacement The payload buffer\n\t * @throws IOException",
        "* A placeholder for the unsigned bytes of a serialized {@link SO_Build}.\n\t *\n\t * <p>\n\t * Note: synchronized with util/resources.hh in\n\t * <b>com.sandpolis.client.micro</b>.",
        "* A placeholder for the unsigned bytes of a serialized {@link MicroConfig}.\n\t *\n\t * <p>\n\t * Note: synchronized with util/resources.hh in\n\t * <b>com.sandpolis.client.micro</b>."
    ],
    "functions": [
        "MicroGen",
        "generate",
        "inject"
    ],
    "classes": [
        "MicroGen"
    ]
}