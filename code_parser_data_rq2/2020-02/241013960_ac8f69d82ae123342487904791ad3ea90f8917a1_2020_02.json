{
    "identifiers": [
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "pandas",
        "pd",
        "matplotlib",
        "cm",
        "mpl_toolkits",
        "mplot3d",
        "axes3d",
        "Axes3D",
        "a",
        "np",
        "random",
        "seed",
        "SEED",
        "pf",
        "f",
        "c",
        "N",
        "gamma",
        "pf",
        "f",
        "c",
        "N",
        "gamma",
        "np",
        "zeros",
        "N",
        "N",
        "c",
        "N",
        "i",
        "N",
        "i",
        "N",
        "pf",
        "i",
        "min",
        "c",
        "i",
        "c",
        "i",
        "pf",
        "i",
        "c",
        "i",
        "pf",
        "i",
        "min",
        "c",
        "i",
        "Jt",
        "i",
        "pf",
        "i",
        "Jt",
        "i",
        "Jt",
        "k",
        "status",
        "status",
        "status",
        "np",
        "mean",
        "r",
        "i",
        "k",
        "N",
        "pf",
        "gamma",
        "pf",
        "i",
        "gamma",
        "R",
        "mr",
        "np",
        "zeros_like",
        "f",
        "parked",
        "i",
        "N",
        "i",
        "N",
        "park",
        "f",
        "i",
        "pf",
        "prob_estimate",
        "i",
        "status",
        "calc_costs",
        "c",
        "i",
        "Jt",
        "i",
        "park",
        "mr",
        "pf",
        "prob_estimate",
        "i",
        "status",
        "mr",
        "i",
        "ACTIONS",
        "action",
        "action",
        "park",
        "i",
        "c",
        "i",
        "c",
        "i",
        "i",
        "cost",
        "np",
        "linspace",
        "myrange",
        "myrange",
        "dtype",
        "np",
        "zeros_like",
        "myN",
        "np",
        "zeros",
        "N",
        "co",
        "len",
        "c",
        "co",
        "myrange",
        "c",
        "np",
        "random",
        "rand",
        "N",
        "pf",
        "np",
        "zeros_like",
        "pf",
        "np",
        "where",
        "pf",
        "np",
        "argmin",
        "c",
        "pd",
        "concat",
        "pd",
        "DataFrame",
        "c",
        "pd",
        "DataFrame",
        "pf",
        "pd",
        "DataFrame",
        "f",
        "axis",
        "f",
        "Driver",
        "pf",
        "f",
        "c",
        "N",
        "gamma",
        "driver",
        "park",
        "plt",
        "figure",
        "plt",
        "plot",
        "np",
        "array",
        "myN",
        "c",
        "plt",
        "show",
        "data"
    ],
    "literals": [
        "'park'",
        "'move right'",
        "'iteration'",
        "'action chosen is'",
        "'Parked at location'",
        "'with cost'",
        "'Cost of every spot is:\\n'",
        "'Probability of every spot being free is:\\n'",
        "'Whether every spot is actually free or not:\\n'",
        "'\\n\\n'"
    ],
    "variables": [
        "myrange",
        "b",
        "a",
        "TRAVEL",
        "SEED",
        "ACTIONS",
        "pf",
        "f",
        "c",
        "N",
        "gamma",
        "Jt",
        "Jt",
        "Jt",
        "i",
        "Jt",
        "i",
        "r",
        "R",
        "i",
        "i",
        "park",
        "mr",
        "action",
        "parked",
        "status",
        "action",
        "status",
        "i",
        "i",
        "Jt",
        "action",
        "action",
        "i",
        "status",
        "i",
        "action",
        "parked",
        "cost",
        "myN",
        "costs",
        "gamma",
        "N",
        "c",
        "c",
        "co",
        "pf",
        "f",
        "f",
        "f",
        "data",
        "driver",
        "costs",
        "fig"
    ],
    "comments": [
        "variable travelling cost (in terms of time index)",
        "random parking cost",
        "<-- Note the capitalization!",
        "CONSTANTS",
        "travelling cost",
        "initialize cost array",
        "print('Current optimal costs matrix is:\\n',Jt)",
        "time/parking spot index",
        "park",
        "move right",
        "move right",
        "while loop boolean",
        "define status array",
        "at garage",
        "park",
        "any other spot",
        "if free",
        "compare cost with optimal cost of right and left",
        "park if better than or equal to both",
        "else cost of current spot cost is not better than optimal of right",
        "move right",
        "else current spot is not free",
        "move right",
        "if action is to park",
        "set boolean to stop while loop",
        "else move right",
        "increment time index",
        "number of parking spaces (without garage)",
        "PF = pf = np.random.rand(myrange)",
        "F = np.random.randint(0, 2, myrange)",
        "F = np.zeros_like(PF,int)",
        "F[np.where(PF>0.5)]=1",
        "for i in range(len(myN)):",
        "space actually free or not",
        "f = np.random.randint(0, 2, N)",
        "f = F[:i+1].copy()",
        "probability of space being free",
        "pf = PF[:i+1].copy()",
        "space actually free or not",
        "Plot the surface."
    ],
    "docstrings": [],
    "functions": [
        "calc_costs",
        "prob_estimate",
        "park"
    ],
    "classes": [
        "Driver"
    ]
}