{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "log4js",
        "log4js",
        "query",
        "options",
        "ok",
        "ko",
        "Iota",
        "query",
        "options",
        "data",
        "data",
        "ok",
        "ok",
        "data",
        "error",
        "error",
        "ko",
        "error",
        "query",
        "ok",
        "ko",
        "encivQuery",
        "query",
        "options",
        "data",
        "data",
        "newData",
        "newData",
        "options",
        "ok",
        "data",
        "options",
        "options",
        "error",
        "error",
        "ko",
        "error",
        "iota",
        "table",
        "ok",
        "ko",
        "Iota",
        "iota",
        "encivInfo",
        "table",
        "doc",
        "doc",
        "encivInfo",
        "table",
        "doc",
        "ok",
        "doc",
        "err",
        "err",
        "ko",
        "err",
        "encivInfo",
        "createOneInTable",
        "query",
        "update",
        "query",
        "query",
        "query",
        "Iota",
        "query",
        "ok",
        "ko",
        "Iota",
        "query",
        "update",
        "result",
        "result",
        "query",
        "update",
        "ok",
        "err",
        "err",
        "ko",
        "err",
        "encivInfo",
        "updateOne",
        "query",
        "update",
        "query",
        "query",
        "query",
        "Iota",
        "query",
        "ok",
        "ko",
        "Iota",
        "query",
        "update",
        "result",
        "result",
        "result",
        "query",
        "update",
        "ok",
        "err",
        "err",
        "ko",
        "err",
        "encivInfo",
        "replaceOne",
        "query",
        "overWriter",
        "ok",
        "ko",
        "Iota",
        "query",
        "viewers",
        "cloneDeep",
        "viewer",
        "overWriter",
        "newViewer",
        "Iota",
        "newViewer",
        "err",
        "err",
        "ko",
        "err",
        "ok",
        "newViewer",
        "viewers",
        "viewers",
        "viewers",
        "cloneDeep",
        "viewers",
        "mergeWithVerbose",
        "viewerObj",
        "viewer",
        "overWriteViewerInfo",
        "viewerObj",
        "Iota",
        "viewerObj",
        "viewerObj",
        "ok",
        "viewerObj",
        "db",
        "table",
        "query",
        "inListifier",
        "ok",
        "ko",
        "cloneDeep",
        "query",
        "begin",
        "begin",
        "maxInList",
        "inListifier",
        "inListifier",
        "q",
        "inList",
        "encivQueryAll",
        "q",
        "table",
        "encivTableify",
        "db",
        "table",
        "docs",
        "begin",
        "maxInList",
        "ok",
        "table",
        "err",
        "err",
        "ko",
        "err",
        "db",
        "table",
        "docs",
        "db",
        "table",
        "db",
        "table",
        "docs",
        "doc",
        "db",
        "table",
        "doc",
        "db",
        "table",
        "doc",
        "doc",
        "showShallowDiff",
        "db",
        "table",
        "doc",
        "doc",
        "doc",
        "db",
        "table",
        "db",
        "table",
        "table",
        "YYYY_MM_DD",
        "ok",
        "ko",
        "Iota",
        "into_Db_add_Table_of_docs_matching_Query_with_List_segments_applied_by_InListifer",
        "encivInfo",
        "YYYY_MM_DD",
        "into_Db_add_Table_of_docs_matching_Query_with_List_segments_applied_by_InListifer",
        "encivInfo",
        "YYYY_MM_DD",
        "into_Db_add_Table_of_docs_matching_Query_with_List_segments_applied_by_InListifer",
        "encivInfo",
        "YYYY_MM_DD",
        "ok",
        "err",
        "ko",
        "err",
        "MongoModels",
        "encivInfo",
        "init",
        "encivInfo",
        "disconnect",
        "encivInfo"
    ],
    "literals": [
        "\"use strict\"",
        "'iota'",
        "'lodash/cloneDeep'",
        "'mongo-models'",
        "'./showShallowDiff'",
        "'log4js'",
        "\"node\"",
        "'stderr'",
        "'err'",
        "'DEBUG'",
        "\"encivQuery caught error\"",
        "\"encivQueryAll caught error\"",
        "\"create viewer caught error:\"",
        "\"string\"",
        "\"encivInfo.updateOne did nothing\"",
        "\"encivInfo updateOne caught error\"",
        "\"string\"",
        "\"encivInfo.replaceOne returned\"",
        "\"encivInfo replaceOne caught error\"",
        "\"create viewer caught error:\"",
        "\"found multiple viewers with the same path, updating the first one\"",
        "\"gatherAll caught error\"",
        "\"encivTableify _id already present no differences found\"",
        "\"2020-01-01\"",
        "'viewers'",
        "\"bp_info.stage_id\"",
        "\"bp_info.election_date\"",
        "'recorders'",
        "\"bp_info.candidate_stage_result_id\"",
        "\"bp_info.election_date\"",
        "'participants'",
        "\"component.participant.bp_info.election_date\""
    ],
    "variables": [
        "Iota",
        "cloneDeep",
        "MongoModels",
        "showShallowDiff",
        "log4js",
        "encivInfo",
        "data",
        "options",
        "data",
        "newData",
        "doc",
        "result",
        "result",
        "viewers",
        "newViewer",
        "viewerObj",
        "viewerObj",
        "maxInList",
        "begin",
        "q",
        "inList",
        "docs"
    ],
    "comments": [
        "Iota uses logger",
        "object properties are always strings",
        "create the new race",
        "update the race",
        "the max in a mongo query is really limited by the size of the entire query doc, but that's 16M",
        "inListifier: (q,list)=>q.bp_stage=list but list and inListifier might be undefined"
    ],
    "docstrings": [],
    "functions": [
        "encivQuery",
        "encivQueryAll",
        "createOneInTable",
        "updateOne",
        "replaceOne",
        "updateOrCreateIota",
        "into_Db_add_Table_of_docs_matching_Query_with_List_segments_applied_by_InListifer",
        "encivTableify",
        "init",
        "disconnect"
    ],
    "classes": []
}