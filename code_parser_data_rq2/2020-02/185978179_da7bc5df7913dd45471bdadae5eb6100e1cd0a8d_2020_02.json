{
    "identifiers": [
        "getDMMF",
        "DMMFClass",
        "DMMF",
        "path",
        "lowerCase",
        "Dataloader",
        "printStack",
        "PrismaClientKnownRequestError",
        "PrismaClientUnknownRequestError",
        "PrismaClientInitializationError",
        "PrismaClientRustPanicError",
        "stripAnsi",
        "unpack",
        "makeDocument",
        "getOperation",
        "NodeEngine",
        "EngineConfig",
        "Document",
        "getDMMF",
        "schema",
        "NewPrismaClient",
        "rawDmmf",
        "client",
        "users",
        "doc",
        "DMMF",
        "DMMFClass",
        "doc",
        "path",
        "__dirname",
        "path",
        "__dirname",
        "NodeEngine",
        "PrismaClientFetcher",
        "NodeEngine",
        "acc",
        "mapping",
        "lowerCase",
        "mapping",
        "client",
        "makeDocument",
        "operation",
        "args",
        "onfulfilled",
        "onrejected",
        "requestPromise",
        "requestPromise",
        "actionName",
        "mapping",
        "requestPromise",
        "onfulfilled",
        "onrejected",
        "onrejected",
        "requestPromise",
        "requestPromise",
        "actionName",
        "mapping",
        "requestPromise",
        "onrejected",
        "onfinally",
        "requestPromise",
        "requestPromise",
        "actionName",
        "mapping",
        "requestPromise",
        "onfinally",
        "clientImplementation",
        "acc",
        "lowerCaseModel",
        "client",
        "acc",
        "acc",
        "mapping",
        "lowerCase",
        "mapping",
        "mapping",
        "acc",
        "denyList",
        "actionName",
        "getOperation",
        "actionName",
        "acc",
        "actionName",
        "args",
        "clients",
        "lowerCaseModel",
        "acc",
        "acc",
        "lowerCaseModel",
        "acc",
        "properties",
        "prisma",
        "enableDebug",
        "hooks",
        "prisma",
        "enableDebug",
        "hooks",
        "Dataloader",
        "requests",
        "requests",
        "r",
        "r",
        "queries",
        "dataPath",
        "collectTimestamps",
        "collectTimestamps",
        "collectTimestamps",
        "collectTimestamps",
        "collectTimestamps",
        "collectTimestamps",
        "collectTimestamps",
        "collectTimestamps",
        "collectTimestamps",
        "collectTimestamps",
        "result",
        "dataPath",
        "rootField",
        "isList",
        "collectTimestamps",
        "collectTimestamps",
        "unpackResult",
        "e",
        "callsite",
        "printStack",
        "clientMethod",
        "e",
        "stack",
        "e",
        "e",
        "PrismaClientKnownRequestError",
        "message",
        "e",
        "e",
        "e",
        "PrismaClientUnknownRequestError",
        "PrismaClientUnknownRequestError",
        "message",
        "e",
        "PrismaClientInitializationError",
        "PrismaClientInitializationError",
        "message",
        "e",
        "PrismaClientRustPanicError",
        "PrismaClientRustPanicError",
        "message",
        "e",
        "PrismaClientKnownRequestError",
        "e",
        "e",
        "e",
        "e",
        "PrismaClientRustPanicError",
        "e",
        "e",
        "PrismaClientUnknownRequestError",
        "PrismaClientUnknownRequestError",
        "e",
        "e",
        "PrismaClientInitializationError",
        "PrismaClientInitializationError",
        "e",
        "e",
        "PrismaClientRustPanicError",
        "PrismaClientRustPanicError",
        "e",
        "message",
        "stripAnsi",
        "message",
        "message",
        "data",
        "path",
        "rootField",
        "isList",
        "data",
        "data",
        "data",
        "rootField",
        "getPath",
        "rootField",
        "getPath",
        "path",
        "p",
        "p",
        "p",
        "unpack",
        "getPath",
        "startName",
        "startName",
        "process",
        "name",
        "process",
        "start",
        "end",
        "end",
        "start",
        "end",
        "start",
        "diff",
        "diff",
        "nanoseconds",
        "milliseconds",
        "results",
        "results",
        "acc",
        "record",
        "record",
        "acc",
        "name",
        "acc",
        "name",
        "acc",
        "name",
        "record",
        "acc",
        "name",
        "record",
        "acc",
        "results",
        "results",
        "main"
    ],
    "literals": [
        "'./generation/getDMMF'",
        "'./runtime/dmmf'",
        "'./runtime/dmmf-types'",
        "'path'",
        "'./runtime'",
        "'./generation/utils'",
        "'@prisma/engine-core/dist/NodeEngine'",
        "'./runtime/query'",
        "datasource db {\n  provider = \"sqlite\"\n  url      = \"file:dev.db\"\n  default  = true\n}\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\n/// User model comment\nmodel User {\n  id    String  @default(uuid()) @id\n  email String  @unique\n  /// name comment\n  name  String?\n  posts Post[]\n}\n\nmodel Post {\n  id        String   @default(cuid()) @id\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  published Boolean\n  title     String\n  content   String?\n  author    User?\n}\n\nenum Role {\n  USER\n  ADMIN\n}",
        "'../fixtures/blog/prisma/schema.prisma'",
        "'../fixtures/blog/prisma/'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'Pre-prismaClientConnect'",
        "'Post-prismaClientConnect'",
        "'Pre-engine_request'",
        "'Post-engine_request'",
        "'Pre-unpack'",
        "'Post-unpack'",
        "'pretty'",
        "'select'",
        "'include'",
        "'-'"
    ],
    "variables": [
        "schema",
        "rawDmmf",
        "client",
        "users",
        "clients",
        "lowerCaseModel",
        "client",
        "requestPromise",
        "clientImplementation",
        "properties",
        "lowerCaseModel",
        "denyList",
        "actionName",
        "rootField",
        "operation",
        "queries",
        "query",
        "result",
        "unpackResult",
        "message",
        "getPath",
        "diff",
        "nanoseconds",
        "milliseconds",
        "results",
        "name"
    ],
    "comments": [
        "const dmmf = new DMMFClass(rawDmmf)",
        "Object.defineProperties(this, properties)",
        "TODO: More elaborate logic to only batch certain queries together",
        "We should e.g. make sure, that findOne queries are batched together"
    ],
    "docstrings": [
        "* @private",
        "* Disconnect from the database"
    ],
    "functions": [
        "main",
        "connect",
        "runDisconnect",
        "disconnect",
        "bootstrapClient",
        "request",
        "sanitizeMessage",
        "unpack",
        "record",
        "elapsed",
        "addResults",
        "getResults"
    ],
    "classes": [
        "NewPrismaClient",
        "PrismaClientFetcher",
        "CollectTimestamps"
    ]
}