{
    "identifiers": [
        "IMixerProtocol",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage",
        "emptyMixerMessage"
    ],
    "literals": [
        "'../MixerProtocolInterface'",
        "'EMBER'",
        "'Lawo Ruby'",
        "\"master\"",
        "'CH'",
        "'#2f2f2f'",
        "'Ruby.Sources.${channel}.Fader.Motor dB Value'",
        "'real'",
        "''",
        "'real'",
        "'Ruby.Sources.${channel}.Fader.Motor dB Value'",
        "'real'",
        "''",
        "'real'"
    ],
    "variables": [
        "LawoRuby"
    ],
    "comments": [
        "master (ignores mixers faderlevel, and use faderlevel as gain preset),",
        "client (use feedback from mixers fader level)",
        "some OSC protocols needs channels to be 01, 02 etc.",
        "Bypass ping when pingTime is zero"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}