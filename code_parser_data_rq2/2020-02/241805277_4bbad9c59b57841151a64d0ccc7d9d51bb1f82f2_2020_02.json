{
    "identifiers": [
        "Linq",
        "Net",
        "Http",
        "Text",
        "Threading",
        "Tasks",
        "Newtonsoft",
        "Json",
        "Newtonsoft",
        "Json",
        "Linq",
        "Vigilantes",
        "Dapr",
        "Extensions",
        "JsonSerializerSettings",
        "NullValueHandling",
        "NullValueHandling",
        "Ignore",
        "Environment",
        "GetEnvironmentVariable",
        "Concurrency",
        "FIRST_WRITE",
        "LAST_WRITE",
        "Consistency",
        "EVENTUAL",
        "STRONG",
        "RetryPattern",
        "EXPONENTIAL",
        "LINEAR",
        "HttpResponseMessage",
        "T",
        "T",
        "value",
        "storeName",
        "key",
        "HttpClient",
        "httpClient",
        "eTag",
        "Concurrency",
        "concurrency",
        "Consistency",
        "consistency",
        "retryInterval",
        "retryThreshold",
        "RetryPattern",
        "retryPattern",
        "T",
        "key",
        "key",
        "value",
        "value",
        "etag",
        "eTag",
        "options",
        "concurrency",
        "concurrency",
        "concurrency",
        "Concurrency",
        "FIRST_WRITE",
        "consistency",
        "consistency",
        "consistency",
        "Consistency",
        "EVENTUAL",
        "retryPolicy",
        "interval",
        "retryInterval",
        "threshold",
        "retryThreshold",
        "pattern",
        "retryPattern",
        "retryPattern",
        "RetryPattern",
        "EXPONENTIAL",
        "JsonConvert",
        "SerializeObject",
        "daprState",
        "Formatting",
        "JsonSerializerSettings",
        "StringContent",
        "json",
        "Encoding",
        "UTF8",
        "httpClient",
        "PostAsync",
        "DefaultHttpPort",
        "StatePath",
        "storeName",
        "content",
        "T",
        "T",
        "value",
        "storeName",
        "key",
        "HttpClient",
        "httpClient",
        "Consistency",
        "consistency",
        "T",
        "consistency",
        "Empty",
        "consistency",
        "Consistency",
        "EVENTUAL",
        "httpClient",
        "GetAsync",
        "DefaultHttpPort",
        "StatePath",
        "storeName",
        "key",
        "consistencyParam",
        "response",
        "Content",
        "ReadAsStringAsync",
        "IsNullOrEmpty",
        "json",
        "JToken",
        "Parse",
        "json",
        "jToken",
        "Type",
        "JTokenType",
        "JTokenType",
        "JsonSerializer",
        "Create",
        "JsonSerializerSettings",
        "Populate",
        "jToken",
        "CreateReader",
        "value",
        "value",
        "jToken",
        "Value",
        "T",
        "response",
        "Headers",
        "ETag",
        "Tag",
        "Replace",
        "Empty",
        "response",
        "Headers",
        "FirstOrDefault",
        "h",
        "Key",
        "Equals",
        "StringComparison",
        "CurrentCultureIgnoreCase",
        "Value",
        "FirstOrDefault"
    ],
    "literals": [
        "\"/v1.0/state/\"",
        "\"DAPR_HTTP_PORT\"",
        "\"3500\"",
        "\"first-write\"",
        "\"last-write\"",
        "\"eventual\"",
        "\"strong\"",
        "\"exponential\"",
        "\"linear\"",
        "\"application/json\"",
        "\"eventual\"",
        "\"strong\"",
        "\"ETag\""
    ],
    "variables": [
        "JsonSerializerSettings",
        "JsonSerializerSettings",
        "StatePath",
        "DefaultHttpPort",
        "daprState",
        "json",
        "content",
        "consistencyParam",
        "response",
        "json",
        "jToken"
    ],
    "comments": [
        "This check is required because Dapr doesn't currently return etags correctly. Per the spec they should be quoted, but dapr isn't doing that.",
        "Because of this, they don't show up in the standard headers but rather a custom header."
    ],
    "docstrings": [],
    "functions": [
        "DaprHttpSaveStateAsync",
        "DaprHttpLoadStateAsync"
    ],
    "classes": [
        "StateExtensions"
    ]
}