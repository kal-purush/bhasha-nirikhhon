{
    "identifiers": [
        "common",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileOutputStream",
        "java",
        "io",
        "java",
        "io",
        "InputStream",
        "java",
        "net",
        "MalformedURLException",
        "java",
        "net",
        "URL",
        "java",
        "nio",
        "channels",
        "Channels",
        "java",
        "nio",
        "channels",
        "ReadableByteChannel",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "nio",
        "file",
        "InvalidPathException",
        "java",
        "nio",
        "file",
        "Path",
        "java",
        "nio",
        "file",
        "Paths",
        "java",
        "util",
        "Objects",
        "java",
        "util",
        "logging",
        "Level",
        "java",
        "util",
        "logging",
        "Logger",
        "path",
        "Objects",
        "requireNonNull",
        "path",
        "p",
        "Paths",
        "get",
        "path",
        "Files",
        "exists",
        "p",
        "Files",
        "createDirectory",
        "p",
        "url",
        "last",
        "max",
        "url",
        "lastIndexOf",
        "url",
        "lastIndexOf",
        "url",
        "substring",
        "last",
        "url",
        "dest",
        "downloadAndSaveFile",
        "url",
        "dest",
        "url",
        "dest",
        "name",
        "urlObj",
        "url",
        "name",
        "name",
        "isEmpty",
        "name",
        "urlObj",
        "getFile",
        "file",
        "dest",
        "name",
        "absolutePath",
        "file",
        "getAbsolutePath",
        "file",
        "exists",
        "Logger",
        "getLogger",
        "getName",
        "log",
        "Level",
        "SEVERE",
        "absolutePath",
        "url",
        "inStream",
        "urlObj",
        "openStream",
        "rbcObj",
        "Channels",
        "newChannel",
        "inStream",
        "fOutStream",
        "absolutePath",
        "fOutStream",
        "getChannel",
        "transferFrom",
        "rbcObj",
        "MAX_VALUE",
        "Logger",
        "getLogger",
        "getName",
        "log",
        "Level",
        "INFO",
        "absolutePath",
        "url",
        "ex",
        "Logger",
        "getLogger",
        "getName",
        "log",
        "Level",
        "SEVERE",
        "ex",
        "ex",
        "Logger",
        "getLogger",
        "getName",
        "log",
        "Level",
        "SEVERE",
        "ex",
        "ex",
        "Logger",
        "getLogger",
        "getName",
        "log",
        "Level",
        "SEVERE",
        "ex"
    ],
    "literals": [
        "\"path of image directory cannot be null\"",
        "\"/\"",
        "\"\\\\\"",
        "\"File: {0} saved from: {1}\"",
        "\"File: {0} saved from: {1}\"",
        "\"Invalid Path\"",
        "\"Incorrect URL\"",
        "\"IO Exception\""
    ],
    "variables": [],
    "comments": [
        "if name is null use the name in url"
    ],
    "docstrings": [
        "* simple utility class for some File IO functionality\n *\n * @author Shariar",
        "* create a directory in a given path\n     *\n     * @param path of directory\n     * @throws IOException",
        "* get the name of a file from URL. look for last instance of / or \\ and\n     * remove everything before it including / or \\. IMPORTANT - only useful if\n     * the name of the file is in the last bit of the URL.\n     *\n     * @param url - path of file\n     * @return only the name of file with out \\ or /",
        "* download a file from given URL and save it at destination directory.\n     *\n     * @param url - path of remote file.\n     * @param dest - path of directory to save file, must end with '/' or '\\\\'.\n     * @return true if file is saved.",
        "* download a file from given URL and save it at destination directory.\n     *\n     * @param url - path of remote file.\n     * @param dest - path of directory to save file, must end with '/' or '\\\\'.\n     * @param name - name of the file to save.\n     * @return true if file is saved."
    ],
    "functions": [
        "createDirectory",
        "getFileName",
        "downloadAndSaveFile",
        "downloadAndSaveFile"
    ],
    "classes": [
        "FileUtility"
    ]
}