{
    "identifiers": [
        "$",
        "item",
        "item",
        "item",
        "item",
        "item",
        "item",
        "item",
        "element",
        "options",
        "$",
        "element",
        "element",
        "element",
        "options",
        "options",
        "$",
        "$",
        "options",
        "TagsInput",
        "TagsInput",
        "item",
        "dontPushVal",
        "item",
        "item",
        "item",
        "item",
        "item",
        "item",
        "items",
        "i",
        "items",
        "i",
        "items",
        "i",
        "dontPushVal",
        "item",
        "item",
        "item",
        "$",
        "item",
        "item",
        "itemValue",
        "item",
        "$",
        "htmlEncode",
        "tagClass",
        "htmlEncode",
        "itemText",
        "$tag",
        "item",
        "$tag",
        "$tag",
        "$",
        "escape",
        "itemValue",
        "$",
        "htmlEncode",
        "itemText",
        "$option",
        "item",
        "$option",
        "itemValue",
        "$option",
        "dontPushVal",
        "$",
        "item",
        "item",
        "dontPushVal",
        "item",
        "item",
        "$",
        "other",
        "other",
        "item",
        "item",
        "$",
        "other",
        "other",
        "item",
        "item",
        "$",
        "$",
        "item",
        "$",
        "$",
        "item",
        "item",
        "dontPushVal",
        "$",
        "item",
        "$",
        "$",
        "$",
        "$",
        "$tag",
        "item",
        "item",
        "item",
        "$tag",
        "$tag",
        "htmlEncode",
        "tagClass",
        "$tag",
        "htmlEncode",
        "itemText",
        "$",
        "$",
        "item",
        "option",
        "itemValue",
        "$",
        "item",
        "item",
        "val",
        "options",
        "$",
        "defaultOptions",
        "options",
        "makeOptionItemFunction",
        "makeOptionItemFunction",
        "makeOptionItemFunction",
        "typeahead",
        "typeahead",
        "$",
        "makeOptionFunction",
        "typeahead",
        "query",
        "process",
        "items",
        "i",
        "items",
        "i",
        "items",
        "i",
        "text",
        "items",
        "i",
        "texts",
        "text",
        "process",
        "texts",
        "typeahead",
        "query",
        "$",
        "data",
        "data",
        "processItems",
        "$",
        "data",
        "processItems",
        "text",
        "text",
        "text",
        "text",
        "texts",
        "texts",
        "text",
        "text",
        "regex",
        "$",
        "$",
        "$",
        "doGetCaretPosition",
        "$input",
        "$inputWrapper",
        "prev",
        "prev",
        "doGetCaretPosition",
        "$input",
        "$inputWrapper",
        "next",
        "next",
        "$inputWrapper",
        "$input",
        "$prevTag",
        "$prevTag",
        "$inputWrapper",
        "$input",
        "$inputWrapper",
        "$input",
        "$nextTag",
        "$nextTag",
        "$inputWrapper",
        "$input",
        "$input",
        "$input",
        "$input",
        "$input",
        "$",
        "$",
        "defaultOptions",
        "$",
        "$",
        "elt",
        "elt",
        "container",
        "elt",
        "elt",
        "$",
        "elt",
        "$",
        "arg1",
        "arg2",
        "$",
        "tagsinput",
        "tagsinput",
        "TagsInput",
        "arg1",
        "$",
        "tagsinput",
        "results",
        "tagsinput",
        "$",
        "$",
        "$",
        "$",
        "tagsinput",
        "arg1",
        "arg2",
        "retVal",
        "results",
        "retVal",
        "arg1",
        "results",
        "results",
        "results",
        "results",
        "$",
        "TagsInput",
        "options",
        "key",
        "options",
        "key",
        "options",
        "key",
        "options",
        "key",
        "item",
        "item",
        "propertyName",
        "options",
        "key",
        "options",
        "key",
        "options",
        "key",
        "options",
        "key",
        "value",
        "$",
        "value",
        "value",
        "htmlEncodeContainer",
        "value",
        "oField",
        "oField",
        "oSel",
        "oField",
        "iCaretPos",
        "oSel",
        "oField",
        "oField",
        "iCaretPos",
        "oField",
        "iCaretPos",
        "$",
        "$"
    ],
    "literals": [
        "\"use strict\"",
        "'label label-info'",
        "'SELECT'",
        "'multiple'",
        "'<div class=\"bootstrap-tagsinput\"></div>'",
        "'<input size=\"1\" type=\"text\" />'",
        "\"object\"",
        "\"Can't add objects when itemValue option is not set\"",
        "\"string\"",
        "'INPUT'",
        "','",
        "'<span class=\"tag '",
        "'\">'",
        "'<span data-role=\"remove\"></span></span>'",
        "'item'",
        "' '",
        "'option[value=\"'",
        "'\"]'",
        "'<option selected>'",
        "'</option>'",
        "'item'",
        "'value'",
        "'bootstrap-tagsinput-max'",
        "'itemAdded'",
        "\"object\"",
        "'.tag'",
        "'item'",
        "'option'",
        "'item'",
        "'bootstrap-tagsinput-max'",
        "'itemRemoved'",
        "'.tag'",
        "'option'",
        "'.tag'",
        "'item'",
        "'class'",
        "'tag '",
        "'option'",
        "'item'",
        "'value'",
        "'change'",
        "'itemValue'",
        "'itemText'",
        "'tagClass'",
        "'source'",
        "'('",
        "')'",
        "'gi'",
        "\"<strong>$1</strong>\"",
        "'click'",
        "'keydown'",
        "'input'",
        "'item'",
        "'item'",
        "''",
        "'size'",
        "'click'",
        "'[data-role=remove]'",
        "'.tag'",
        "'item'",
        "'INPUT'",
        "'option'",
        "'value'",
        "'keypress'",
        "'input'",
        "'click'",
        "'[50role=remove]'",
        "'tagsinput'",
        "'tagsinput'",
        "'tagsinput'",
        "'SELECT'",
        "'option'",
        "'selected'",
        "'selected'",
        "'string'",
        "'function'",
        "'function'",
        "'<div />'",
        "''",
        "'character'",
        "'0'",
        "\"input[data-role=tagsinput], select[multiple][data-role=tagsinput]\""
    ],
    "variables": [
        "defaultOptions",
        "items",
        "i",
        "itemValue",
        "itemText",
        "tagClass",
        "$tag",
        "$option",
        "$tag",
        "item",
        "itemValue",
        "itemText",
        "tagClass",
        "option",
        "val",
        "typeahead",
        "texts",
        "i",
        "text",
        "data",
        "regex",
        "$input",
        "$inputWrapper",
        "prev",
        "next",
        "$prevTag",
        "$nextTag",
        "elt",
        "container",
        "results",
        "tagsinput",
        "retVal",
        "propertyName",
        "value",
        "htmlEncodeContainer",
        "iCaretPos",
        "oSel"
    ],
    "comments": [
        "Ignore falsey values, except false",
        "Throw an error when trying to add an object while the itemValue option was not set",
        "Ignore strings only containg whitespace",
        "If SELECT but not multiple, remove current tag",
        "Ignore items allready added",
        "register item in internal array and map",
        "add a tag element",
        "add <option /> if item represents a value not present in one of the <select />'s options",
        "Add class when reached maxTags",
        "Remove class when reached maxTags",
        "Update tag's class and inner text",
        "Returns the items added as tags",
        "Assembly value by retrieving the value of each item, and set it on the element.",
        "When itemValue is set, freeInput should always be false",
        "for backwards compatibility, self.options.source is deprecated",
        "support for Angular promises",
        "support for functions and jquery promises",
        "BACKSPACE",
        "DELETE",
        "LEFT ARROW",
        "Try to move the input before the previous tag",
        "LEFT ARROW",
        "Try to move the input before the previous tag",
        "Remove icon clicked",
        "Only add existing value as tags when using strings as tags",
        "Unbind events",
        "Register JQuery plugin",
        "Initialize a new tags input",
        "Init tags from $(this).val()",
        "Invoke function on existing tags input",
        "Return the results from the invoked function calls",
        "Most options support both a string or number as well as a function as",
        "option value. This function makes sure that the option with the given",
        "key in the given options is wrapped in a function",
        "HtmlEncodes the given value",
        "Returns the position of the caret in the given input field",
        "http://flightschool.acylt.com/devnotes/caret-position-woes/"
    ],
    "docstrings": [],
    "functions": [
        "TagsInput",
        "processItems",
        "makeOptionItemFunction",
        "makeOptionFunction",
        "htmlEncode",
        "doGetCaretPosition"
    ],
    "classes": []
}