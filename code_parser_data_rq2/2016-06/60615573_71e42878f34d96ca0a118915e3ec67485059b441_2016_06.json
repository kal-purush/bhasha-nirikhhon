{
    "identifiers": [
        "require",
        "mongoose",
        "require",
        "mongoose",
        "err",
        "err",
        "mongoose",
        "Schema",
        "userSchema",
        "name",
        "name",
        "userSchema",
        "today",
        "age",
        "userSchema",
        "next",
        "err",
        "next",
        "err",
        "mongoose",
        "userSchema",
        "User",
        "bob",
        "bob",
        "bob",
        "User",
        "user",
        "user",
        "user",
        "user",
        "user",
        "err",
        "err",
        "require",
        "express",
        "app"
    ],
    "literals": [
        "'server test'",
        "'mongoose'",
        "'bluebird'",
        "'mongodb://artoo:niki@ds019123.mlab.com:19123/artoo_corso'",
        "'Ciao '",
        "' da '",
        "'Io ho '",
        "' anni '",
        "'save'",
        "'Utente '",
        "' salvato il '",
        "'Nome troppo corto'",
        "'User'",
        "'Bob Doe'",
        "'01'",
        "'anna'",
        "'Bob Doe'",
        "'Bob1'",
        "'Doe1'",
        "'salvataggio riuscito'",
        "'express'",
        "'database online'"
    ],
    "variables": [
        "mongoose",
        "Schema",
        "userSchema",
        "today",
        "age",
        "err",
        "User",
        "bob",
        "express",
        "app"
    ],
    "comments": [
        "var settings = require('server/exercises/users');  uso il file settings.json che contiene url di collegamento al db",
        "importiamo le promise di angular in mongodb grazie a bluebird",
        "setto lo schema del db",
        "campo usato per salvare la data di creazione dell user",
        "middlewares",
        "condizione per entrare nel salvataggio",
        "inserendo una condizione posso stoppare il salvataggio",
        "console.log(bob);      bob.id restituisce id dell user",
        "bob.save().then(() =>{\n    console.log('utente salvato');\n}).catch((err) =>{\n   console.error('errore salvataggio' +err); \n});",
        "var query = User.find(); permette di storare il database in una query e riusarla",
        "find viene usato per la creazione di query",
        "findOne si ferma alla prima ricerca del campo {age: 43} e rispetto alla find restituisce un oggetto",
        "findById ('01') permette di cercare un campo del db tramite ID",
        "lettura da un database",
        "quando  ritorno una promessa( save ritorna una promessa) posso concatenarla con un then"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}