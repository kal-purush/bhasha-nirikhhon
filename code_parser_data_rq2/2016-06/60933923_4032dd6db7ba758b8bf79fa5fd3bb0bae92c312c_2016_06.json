{
    "identifiers": [
        "modules",
        "moduleId",
        "installedModules",
        "moduleId",
        "installedModules",
        "moduleId",
        "installedModules",
        "moduleId",
        "moduleId",
        "modules",
        "moduleId",
        "__webpack_require__",
        "__webpack_require__",
        "modules",
        "__webpack_require__",
        "installedModules",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "setImmediate",
        "f",
        "f",
        "define",
        "define",
        "define",
        "f",
        "g",
        "g",
        "g",
        "g",
        "g",
        "f",
        "e",
        "t",
        "n",
        "r",
        "o",
        "u",
        "n",
        "o",
        "t",
        "o",
        "require",
        "require",
        "u",
        "a",
        "require",
        "o",
        "i",
        "i",
        "o",
        "o",
        "f",
        "f",
        "n",
        "o",
        "t",
        "o",
        "l",
        "e",
        "t",
        "o",
        "e",
        "s",
        "n",
        "n",
        "e",
        "l",
        "l",
        "e",
        "t",
        "n",
        "r",
        "n",
        "o",
        "require",
        "require",
        "o",
        "r",
        "o",
        "s",
        "r",
        "o",
        "s",
        "_dereq_",
        "exports",
        "href",
        "attributes",
        "link",
        "href",
        "link",
        "key",
        "attributes",
        "attributes",
        "key",
        "attributes",
        "key",
        "link",
        "key",
        "value",
        "head",
        "link",
        "cssText",
        "attributes",
        "style",
        "key",
        "attributes",
        "attributes",
        "key",
        "attributes",
        "key",
        "style",
        "key",
        "value",
        "style",
        "style",
        "cssText",
        "style",
        "cssText",
        "head",
        "style",
        "style",
        "head",
        "style",
        "style",
        "cssText",
        "style",
        "cssText",
        "head",
        "style",
        "_dereq_",
        "exports",
        "draining",
        "currentQueue",
        "queue",
        "currentQueue",
        "queue",
        "queueIndex",
        "queue",
        "drainQueue",
        "draining",
        "setTimeout",
        "cleanUpNextTick",
        "draining",
        "queue",
        "len",
        "currentQueue",
        "queue",
        "queue",
        "queueIndex",
        "len",
        "currentQueue",
        "currentQueue",
        "queueIndex",
        "queueIndex",
        "len",
        "queue",
        "currentQueue",
        "draining",
        "clearTimeout",
        "timeout",
        "process",
        "fun",
        "arguments",
        "arguments",
        "i",
        "arguments",
        "i",
        "args",
        "i",
        "arguments",
        "i",
        "queue",
        "Item",
        "fun",
        "args",
        "queue",
        "draining",
        "setTimeout",
        "drainQueue",
        "fun",
        "array",
        "fun",
        "array",
        "Item",
        "process",
        "process",
        "process",
        "process",
        "process",
        "process",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "name",
        "process",
        "process",
        "dir",
        "process",
        "_dereq_",
        "exports",
        "exports",
        "_dereq_",
        "exports",
        "log",
        "exports",
        "formatArgs",
        "exports",
        "save",
        "exports",
        "load",
        "exports",
        "useColors",
        "exports",
        "chrome",
        "chrome",
        "chrome",
        "localstorage",
        "exports",
        "navigator",
        "parseInt",
        "exports",
        "v",
        "v",
        "args",
        "useColors",
        "useColors",
        "args",
        "useColors",
        "exports",
        "useColors",
        "args",
        "args",
        "args",
        "c",
        "args",
        "args",
        "match",
        "match",
        "index",
        "match",
        "lastC",
        "index",
        "args",
        "lastC",
        "c",
        "args",
        "arguments",
        "namespaces",
        "namespaces",
        "exports",
        "exports",
        "namespaces",
        "e",
        "r",
        "exports",
        "e",
        "r",
        "exports",
        "load",
        "e",
        "_dereq_",
        "exports",
        "exports",
        "debug",
        "exports",
        "coerce",
        "exports",
        "disable",
        "exports",
        "enable",
        "exports",
        "enabled",
        "exports",
        "_dereq_",
        "exports",
        "exports",
        "exports",
        "exports",
        "prevColor",
        "exports",
        "disabled",
        "curr",
        "prevTime",
        "curr",
        "ms",
        "prevTime",
        "curr",
        "prevTime",
        "curr",
        "exports",
        "selectColor",
        "arguments",
        "args",
        "exports",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "match",
        "format",
        "match",
        "match",
        "index",
        "exports",
        "format",
        "formatter",
        "args",
        "index",
        "match",
        "formatter",
        "val",
        "args",
        "index",
        "index",
        "match",
        "exports",
        "args",
        "exports",
        "args",
        "enabled",
        "exports",
        "logFn",
        "args",
        "enabled",
        "exports",
        "enabled",
        "disabled",
        "fn",
        "fn",
        "namespaces",
        "exports",
        "namespaces",
        "namespaces",
        "split",
        "i",
        "len",
        "i",
        "split",
        "i",
        "namespaces",
        "split",
        "i",
        "namespaces",
        "exports",
        "namespaces",
        "exports",
        "namespaces",
        "exports",
        "name",
        "i",
        "len",
        "exports",
        "i",
        "len",
        "i",
        "exports",
        "i",
        "name",
        "i",
        "len",
        "exports",
        "i",
        "len",
        "i",
        "exports",
        "i",
        "name",
        "val",
        "val",
        "val",
        "val",
        "val",
        "_dereq_",
        "exports",
        "s",
        "m",
        "h",
        "d",
        "val",
        "options",
        "options",
        "options",
        "val",
        "parse",
        "val",
        "options",
        "val",
        "val",
        "match",
        "parseFloat",
        "match",
        "match",
        "n",
        "y",
        "n",
        "d",
        "n",
        "h",
        "n",
        "m",
        "n",
        "s",
        "n",
        "ms",
        "ms",
        "d",
        "ms",
        "d",
        "ms",
        "h",
        "ms",
        "h",
        "ms",
        "m",
        "ms",
        "m",
        "ms",
        "s",
        "ms",
        "s",
        "ms",
        "ms",
        "plural",
        "ms",
        "d",
        "plural",
        "ms",
        "h",
        "plural",
        "ms",
        "m",
        "plural",
        "ms",
        "s",
        "ms",
        "ms",
        "n",
        "name",
        "ms",
        "n",
        "ms",
        "n",
        "ms",
        "n",
        "name",
        "ms",
        "n",
        "name",
        "_dereq_",
        "exports",
        "_dereq_",
        "val",
        "val",
        "val",
        "val",
        "to",
        "key",
        "key",
        "val",
        "val",
        "hasOwnProperty",
        "to",
        "key",
        "to",
        "key",
        "to",
        "key",
        "key",
        "hasOwnProperty",
        "to",
        "key",
        "isObj",
        "val",
        "to",
        "key",
        "val",
        "to",
        "key",
        "assign",
        "to",
        "key",
        "key",
        "to",
        "to",
        "to",
        "key",
        "hasOwnProperty",
        "key",
        "assignKey",
        "to",
        "key",
        "i",
        "symbols",
        "i",
        "propIsEnumerable",
        "symbols",
        "i",
        "assignKey",
        "to",
        "symbols",
        "i",
        "to",
        "deepAssign",
        "target",
        "target",
        "toObject",
        "target",
        "s",
        "arguments",
        "s",
        "assign",
        "target",
        "arguments",
        "s",
        "target",
        "_dereq_",
        "exports",
        "x",
        "x",
        "x",
        "_dereq_",
        "exports",
        "t",
        "n",
        "r",
        "i",
        "e",
        "t",
        "e",
        "n",
        "r",
        "n",
        "gt",
        "e",
        "n",
        "t",
        "e",
        "e",
        "t",
        "n",
        "t",
        "r",
        "e",
        "t",
        "it",
        "r",
        "w",
        "at",
        "r",
        "e",
        "t",
        "F",
        "t",
        "gt",
        "t",
        "e",
        "st",
        "t",
        "E",
        "e",
        "e",
        "R",
        "e",
        "e",
        "x",
        "b",
        "t",
        "m",
        "t",
        "v",
        "n",
        "t",
        "r",
        "ft",
        "n",
        "t",
        "r",
        "e",
        "t",
        "E",
        "e",
        "t",
        "e",
        "e",
        "e",
        "e",
        "e",
        "Y",
        "i",
        "i",
        "t",
        "t",
        "r",
        "e",
        "e",
        "t",
        "r",
        "n",
        "e",
        "f",
        "e",
        "n",
        "e",
        "c",
        "e",
        "e",
        "ut",
        "e",
        "e",
        "$",
        "t",
        "e",
        "e",
        "G",
        "G",
        "e",
        "p",
        "ht",
        "st",
        "e",
        "n",
        "E",
        "e",
        "u",
        "u",
        "o",
        "j",
        "vt",
        "e",
        "t",
        "U",
        "n",
        "e",
        "t",
        "Z",
        "n",
        "n",
        "e",
        "t",
        "P",
        "e",
        "t",
        "nt",
        "nt",
        "e",
        "X",
        "Q",
        "e",
        "pt",
        "e",
        "s",
        "tt",
        "e",
        "e",
        "d",
        "Z",
        "e",
        "h",
        "lt",
        "e",
        "Y",
        "e",
        "e",
        "e",
        "I",
        "t",
        "n",
        "t",
        "e",
        "I",
        "t",
        "S",
        "e",
        "n",
        "I",
        "t",
        "gt",
        "e",
        "u",
        "e",
        "e",
        "e",
        "t",
        "at",
        "e",
        "r",
        "rt",
        "e",
        "w",
        "r",
        "r",
        "t",
        "o",
        "e",
        "o",
        "e",
        "u",
        "e",
        "o",
        "r",
        "j",
        "x",
        "I",
        "e",
        "I",
        "e",
        "t",
        "u",
        "e",
        "u",
        "e",
        "o",
        "e",
        "u",
        "r",
        "r",
        "n",
        "e",
        "t",
        "n",
        "e",
        "i",
        "n",
        "i",
        "n",
        "b",
        "e",
        "t",
        "t",
        "e",
        "t",
        "r",
        "T",
        "T",
        "r",
        "r",
        "r",
        "r",
        "r",
        "r",
        "r",
        "yt",
        "e",
        "e",
        "yt",
        "e",
        "yt",
        "M",
        "_",
        "e",
        "t",
        "e",
        "t",
        "e",
        "A",
        "L",
        "e",
        "t",
        "A",
        "t",
        "r",
        "i",
        "s",
        "i",
        "n",
        "r",
        "i",
        "N",
        "e",
        "n",
        "k",
        "e",
        "n",
        "L",
        "t",
        "n",
        "t",
        "n",
        "e",
        "t",
        "n",
        "n",
        "O",
        "n",
        "C",
        "n",
        "t",
        "t",
        "e",
        "t",
        "n",
        "t",
        "e",
        "n",
        "t",
        "n",
        "e",
        "t",
        "t",
        "t",
        "t",
        "t",
        "C",
        "B",
        "S",
        "j",
        "e",
        "e",
        "e",
        "C",
        "B",
        "e",
        "j",
        "B",
        "B",
        "B",
        "B",
        "n",
        "H",
        "H",
        "e",
        "Q",
        "S",
        "h",
        "V",
        "t",
        "t",
        "t",
        "t",
        "e",
        "setTimeout",
        "e",
        "M",
        "_",
        "rt",
        "e",
        "t",
        "C",
        "t",
        "e",
        "dt",
        "e",
        "t",
        "it",
        "dt",
        "rt",
        "e",
        "t",
        "e",
        "s",
        "e",
        "s",
        "r",
        "dt",
        "e",
        "t",
        "it",
        "rt",
        "j",
        "Q",
        "L",
        "B",
        "t",
        "e",
        "CustomEvent",
        "h",
        "t",
        "e",
        "t",
        "R",
        "e",
        "t",
        "t",
        "c",
        "t",
        "z",
        "e",
        "t",
        "t",
        "n",
        "t",
        "r",
        "R",
        "t",
        "e",
        "CustomEvent",
        "h",
        "U",
        "t",
        "n",
        "e",
        "t",
        "e",
        "r",
        "i",
        "e",
        "n",
        "r",
        "e",
        "l",
        "e",
        "e",
        "f",
        "e",
        "e",
        "e",
        "e",
        "t",
        "s",
        "e",
        "n",
        "r",
        "n",
        "n",
        "r",
        "i",
        "CustomEvent",
        "h",
        "i",
        "n",
        "i",
        "n",
        "i",
        "n",
        "t",
        "r",
        "i",
        "i",
        "f",
        "i",
        "i",
        "l",
        "i",
        "t",
        "i",
        "t",
        "e",
        "t",
        "u",
        "e",
        "h",
        "i",
        "s",
        "i",
        "r",
        "n",
        "o",
        "n",
        "e",
        "t",
        "u",
        "k",
        "B",
        "t",
        "H",
        "S",
        "h",
        "V",
        "S",
        "s",
        "S",
        "s",
        "Q",
        "Z",
        "e",
        "t",
        "e",
        "n",
        "t",
        "s",
        "t",
        "s",
        "r",
        "tt",
        "t",
        "i",
        "r",
        "i",
        "n",
        "et",
        "t",
        "i",
        "n",
        "i",
        "r",
        "i",
        "f",
        "r",
        "i",
        "n",
        "i",
        "et",
        "t",
        "i",
        "n",
        "i",
        "r",
        "i",
        "l",
        "i",
        "n",
        "i",
        "r",
        "et",
        "t",
        "i",
        "n",
        "i",
        "r",
        "i",
        "c",
        "et",
        "e",
        "t",
        "n",
        "r",
        "i",
        "s",
        "e",
        "t",
        "n",
        "r",
        "i",
        "o",
        "s",
        "e",
        "lt",
        "o",
        "tt",
        "e",
        "e",
        "i",
        "s",
        "o",
        "s",
        "t",
        "i",
        "s",
        "n",
        "t",
        "n",
        "r",
        "n",
        "t",
        "r",
        "n",
        "i",
        "t",
        "r",
        "c",
        "t",
        "K",
        "K",
        "H",
        "nt",
        "e",
        "t",
        "e",
        "t",
        "e",
        "n",
        "r",
        "t",
        "e",
        "n",
        "H",
        "r",
        "r",
        "u",
        "a",
        "u",
        "i",
        "r",
        "u",
        "i",
        "n",
        "i",
        "e",
        "n",
        "i",
        "t",
        "s",
        "i",
        "Y",
        "s",
        "i",
        "o",
        "R",
        "s",
        "i",
        "o",
        "i",
        "s",
        "i",
        "i",
        "o",
        "ut",
        "o",
        "ut",
        "u",
        "nt",
        "n",
        "$",
        "J",
        "d",
        "$",
        "$",
        "$",
        "J",
        "d",
        "n",
        "ct",
        "o",
        "n",
        "ct",
        "u",
        "n",
        "p",
        "ht",
        "n",
        "ht",
        "n",
        "e",
        "t",
        "W",
        "n",
        "arguments",
        "e",
        "x",
        "b",
        "t",
        "m",
        "v",
        "t",
        "i",
        "s",
        "t",
        "r",
        "t",
        "t",
        "o",
        "o",
        "ft",
        "i",
        "t",
        "Y",
        "n",
        "o",
        "it",
        "r",
        "w",
        "s",
        "r",
        "B",
        "e",
        "q",
        "e",
        "at",
        "t",
        "n",
        "it",
        "t",
        "w",
        "n",
        "e",
        "ot",
        "t",
        "E",
        "t",
        "x",
        "b",
        "m",
        "c",
        "x",
        "b",
        "v",
        "c",
        "mt",
        "t",
        "g",
        "c",
        "x",
        "y",
        "c",
        "t",
        "f",
        "n",
        "l",
        "c",
        "n",
        "l",
        "r",
        "T",
        "N",
        "s",
        "a",
        "f",
        "r",
        "a",
        "c",
        "f",
        "x",
        "b",
        "v",
        "l",
        "mt",
        "l",
        "h",
        "b",
        "f",
        "m",
        "v",
        "c",
        "E",
        "E",
        "E",
        "f",
        "l",
        "t",
        "l",
        "i",
        "w",
        "h",
        "N",
        "s",
        "s",
        "D",
        "B",
        "st",
        "n",
        "E",
        "o",
        "i",
        "_dereq_",
        "exports",
        "val",
        "val",
        "val",
        "val",
        "target",
        "source",
        "toObject",
        "target",
        "s",
        "arguments",
        "s",
        "arguments",
        "s",
        "key",
        "hasOwnProperty",
        "key",
        "to",
        "key",
        "key",
        "symbols",
        "i",
        "symbols",
        "i",
        "propIsEnumerable",
        "symbols",
        "i",
        "to",
        "symbols",
        "i",
        "symbols",
        "i",
        "to",
        "_dereq_",
        "exports",
        "names",
        "names",
        "name",
        "performance",
        "performance",
        "name",
        "performance",
        "performance",
        "dateNow",
        "dateNow",
        "navigationStart",
        "present",
        "performance",
        "present",
        "performance",
        "present",
        "present",
        "performance",
        "present",
        "present",
        "present",
        "_dereq_",
        "exports",
        "root",
        "setImmediate",
        "setImmediate",
        "fn",
        "setTimeoutFunc",
        "fn",
        "fn",
        "thisArg",
        "fn",
        "thisArg",
        "arguments",
        "value",
        "value",
        "fn",
        "fn",
        "doResolve",
        "fn",
        "bind",
        "resolve",
        "bind",
        "reject",
        "deferred",
        "deferred",
        "asap",
        "me",
        "deferred",
        "deferred",
        "cb",
        "me",
        "deferred",
        "deferred",
        "me",
        "ret",
        "cb",
        "me",
        "e",
        "deferred",
        "e",
        "deferred",
        "ret",
        "newValue",
        "newValue",
        "newValue",
        "newValue",
        "newValue",
        "newValue",
        "then",
        "doResolve",
        "bind",
        "then",
        "newValue",
        "bind",
        "resolve",
        "bind",
        "reject",
        "newValue",
        "finale",
        "e",
        "reject",
        "e",
        "newValue",
        "newValue",
        "finale",
        "i",
        "len",
        "i",
        "handle",
        "i",
        "onFulfilled",
        "onRejected",
        "resolve",
        "reject",
        "onFulfilled",
        "onFulfilled",
        "onRejected",
        "onRejected",
        "resolve",
        "reject",
        "fn",
        "onFulfilled",
        "onRejected",
        "fn",
        "value",
        "done",
        "done",
        "onFulfilled",
        "value",
        "reason",
        "done",
        "done",
        "onRejected",
        "reason",
        "ex",
        "done",
        "done",
        "onRejected",
        "ex",
        "onRejected",
        "onRejected",
        "onFulfilled",
        "onRejected",
        "resolve",
        "reject",
        "handle",
        "me",
        "Handler",
        "onFulfilled",
        "onRejected",
        "resolve",
        "reject",
        "arguments",
        "isArray",
        "arguments",
        "arguments",
        "arguments",
        "resolve",
        "reject",
        "args",
        "resolve",
        "args",
        "i",
        "val",
        "val",
        "val",
        "val",
        "val",
        "then",
        "then",
        "val",
        "val",
        "res",
        "i",
        "val",
        "reject",
        "args",
        "i",
        "val",
        "remaining",
        "resolve",
        "args",
        "ex",
        "reject",
        "ex",
        "i",
        "args",
        "i",
        "res",
        "i",
        "args",
        "i",
        "value",
        "value",
        "value",
        "value",
        "value",
        "resolve",
        "resolve",
        "value",
        "value",
        "resolve",
        "reject",
        "reject",
        "value",
        "values",
        "resolve",
        "reject",
        "values",
        "i",
        "len",
        "i",
        "values",
        "i",
        "resolve",
        "reject",
        "_setImmediateFn",
        "fn",
        "asap",
        "fn",
        "root",
        "root",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "exports",
        "interval",
        "delay",
        "fn",
        "ctx",
        "now",
        "data",
        "raf",
        "loop",
        "data",
        "data",
        "raf",
        "loop",
        "now",
        "start",
        "delay",
        "fn",
        "ctx",
        "start",
        "now",
        "exports",
        "clearInterval",
        "data",
        "raf",
        "data",
        "_dereq_",
        "exports",
        "exports",
        "fallback",
        "fn",
        "curr",
        "prev",
        "setTimeout",
        "fn",
        "ms",
        "prev",
        "curr",
        "req",
        "exports",
        "id",
        "cancel",
        "id",
        "_dereq_",
        "exports",
        "perf",
        "perf",
        "perf",
        "perf",
        "_dereq_",
        "exports",
        "raw",
        "s",
        "s",
        "getKeyValueChunks",
        "raw",
        "trim",
        "item",
        "item",
        "item",
        "pos",
        "item",
        "pos",
        "obj",
        "key",
        "val",
        "obj",
        "raw",
        "offset",
        "raw",
        "nextSplit",
        "raw",
        "sep",
        "offset",
        "nextSplit",
        "nextSplit",
        "raw",
        "chunk",
        "raw",
        "offset",
        "nextSplit",
        "hasUnclosedUrl",
        "chunk",
        "chunk",
        "offset",
        "nextSplit",
        "chunks",
        "chunk",
        "chunk",
        "offset",
        "nextSplit",
        "chunks",
        "obj",
        "obj",
        "key",
        "key",
        "obj",
        "key",
        "stringify",
        "parse",
        "parse",
        "stringify",
        "normalize",
        "_dereq_",
        "exports",
        "THREE",
        "onError",
        "devices",
        "i",
        "devices",
        "i",
        "devices",
        "i",
        "PositionSensorVRDevice",
        "vrInputs",
        "devices",
        "i",
        "vrInputs",
        "onError",
        "onError",
        "navigator",
        "navigator",
        "gotVRDevices",
        "i",
        "vrInputs",
        "i",
        "vrInputs",
        "i",
        "vrInput",
        "state",
        "state",
        "state",
        "state",
        "scope",
        "i",
        "vrInputs",
        "i",
        "vrInputs",
        "i",
        "vrInput",
        "vrInput",
        "vrInput",
        "vrInput",
        "vrInputs",
        "_dereq_",
        "exports",
        "THREE",
        "renderer",
        "onError",
        "devices",
        "i",
        "devices",
        "i",
        "devices",
        "i",
        "HMDVRDevice",
        "vrHMD",
        "devices",
        "i",
        "vrHMD",
        "onError",
        "onError",
        "navigator",
        "navigator",
        "gotVRDevices",
        "width",
        "height",
        "renderer",
        "width",
        "height",
        "renderer",
        "canvas",
        "fullscreenchange",
        "isFullscreen",
        "vrHMD",
        "isFullscreen",
        "canvas",
        "canvas",
        "vrHMD",
        "canvas",
        "canvas",
        "vrHMD",
        "THREE",
        "cameraL",
        "THREE",
        "cameraR",
        "scene",
        "camera",
        "vrHMD",
        "vrHMD",
        "vrHMD",
        "eyeTranslationL",
        "eyeParamsL",
        "eyeTranslationR",
        "eyeParamsR",
        "eyeFOVL",
        "eyeParamsL",
        "eyeFOVR",
        "eyeParamsR",
        "scene",
        "scene",
        "scene",
        "renderer",
        "renderer",
        "renderer",
        "camera",
        "camera",
        "cameraL",
        "fovToProjection",
        "eyeFOVL",
        "camera",
        "camera",
        "cameraR",
        "fovToProjection",
        "eyeFOVR",
        "camera",
        "camera",
        "camera",
        "cameraL",
        "cameraL",
        "cameraL",
        "camera",
        "cameraR",
        "cameraR",
        "cameraR",
        "cameraL",
        "eyeTranslationL",
        "cameraR",
        "eyeTranslationR",
        "renderer",
        "size",
        "size",
        "renderer",
        "size",
        "size",
        "renderer",
        "scene",
        "cameraL",
        "renderer",
        "size",
        "size",
        "size",
        "renderer",
        "size",
        "size",
        "size",
        "renderer",
        "scene",
        "cameraR",
        "renderer",
        "renderer",
        "scene",
        "camera",
        "fov",
        "fov",
        "fov",
        "fov",
        "fov",
        "pxscale",
        "fov",
        "fov",
        "fov",
        "fov",
        "pyscale",
        "pxscale",
        "pyscale",
        "pxoffset",
        "pyoffset",
        "fov",
        "rightHanded",
        "zNear",
        "zFar",
        "rightHanded",
        "rightHanded",
        "rightHanded",
        "zNear",
        "zNear",
        "zNear",
        "zFar",
        "zFar",
        "zFar",
        "rightHanded",
        "THREE",
        "mobj",
        "fovToNDCScaleOffset",
        "fov",
        "m",
        "scaleAndOffset",
        "m",
        "m",
        "scaleAndOffset",
        "handednessScale",
        "m",
        "m",
        "m",
        "scaleAndOffset",
        "m",
        "scaleAndOffset",
        "handednessScale",
        "m",
        "m",
        "m",
        "m",
        "zFar",
        "zNear",
        "zFar",
        "handednessScale",
        "m",
        "zFar",
        "zNear",
        "zNear",
        "zFar",
        "m",
        "m",
        "m",
        "handednessScale",
        "m",
        "mobj",
        "mobj",
        "fov",
        "rightHanded",
        "zNear",
        "zFar",
        "fov",
        "DEG2RAD",
        "fov",
        "DEG2RAD",
        "fov",
        "DEG2RAD",
        "fov",
        "DEG2RAD",
        "fovPortToProjection",
        "fovPort",
        "rightHanded",
        "zNear",
        "zFar",
        "_dereq_",
        "exports",
        "THREE",
        "THREE",
        "url",
        "readyCallback",
        "progressCallback",
        "failCallback",
        "XMLHttpRequest",
        "request",
        "request",
        "request",
        "request",
        "request",
        "readyCallbackFunc",
        "readyCallback",
        "parse",
        "request",
        "url",
        "failCallback",
        "failCallback",
        "url",
        "request",
        "progressCallback",
        "length",
        "length",
        "request",
        "progressCallback",
        "length",
        "request",
        "request",
        "url",
        "request",
        "alert",
        "text",
        "callBack",
        "url",
        "COLLADA",
        "DOMParser",
        "text",
        "callBack",
        "callBack",
        "readyCallbackFunc",
        "url",
        "url",
        "parts",
        "baseUrl",
        "parts",
        "parts",
        "parseAsset",
        "setUpConversion",
        "images",
        "parseLib",
        "_Image",
        "materials",
        "parseLib",
        "Material",
        "effects",
        "parseLib",
        "Effect",
        "geometries",
        "parseLib",
        "Geometry",
        "cameras",
        "parseLib",
        "Camera",
        "lights",
        "parseLib",
        "Light",
        "controllers",
        "parseLib",
        "Controller",
        "animations",
        "parseLib",
        "Animation",
        "visualScenes",
        "parseLib",
        "VisualScene",
        "kinematicsModels",
        "parseLib",
        "KinematicsModel",
        "morphs",
        "skins",
        "visualScene",
        "parseScene",
        "scene",
        "THREE",
        "i",
        "visualScene",
        "i",
        "scene",
        "createSceneGraph",
        "visualScene",
        "i",
        "scene",
        "colladaUnit",
        "createAnimations",
        "kinematicsModel",
        "parseKinematicsModel",
        "createKinematics",
        "scene",
        "morphs",
        "skins",
        "animData",
        "kinematics",
        "images",
        "materials",
        "cameras",
        "lights",
        "effects",
        "geometries",
        "controllers",
        "animations",
        "visualScenes",
        "visualScene",
        "visualScene",
        "kinematicsModels",
        "kinematicsModel",
        "callBack",
        "callBack",
        "result",
        "result",
        "shading",
        "preferredShading",
        "shading",
        "COLLADA",
        "elements",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "meter",
        "colladaUnit",
        "parseFloat",
        "meter",
        "colladaUp",
        "child",
        "q",
        "classSpec",
        "prefix",
        "COLLADA",
        "q",
        "elements",
        "j",
        "elementsLength",
        "j",
        "elements",
        "j",
        "classSpec",
        "element",
        "daeElement",
        "daeElement",
        "daeElement",
        "prefix",
        "i",
        "lib",
        "daeElement",
        "daeElement",
        "lib",
        "COLLADA",
        "sceneElement",
        "sceneElement",
        "visualScenes",
        "url",
        "url",
        "COLLADA",
        "kinematicsModelElement",
        "kinematicsModelElement",
        "kinematicsModels",
        "url",
        "url",
        "animData",
        "recurseHierarchy",
        "scene",
        "node",
        "visualScene",
        "node",
        "n",
        "n",
        "newData",
        "n",
        "n",
        "n",
        "node",
        "node",
        "animData",
        "newData",
        "n",
        "i",
        "il",
        "i",
        "newData",
        "newData",
        "n",
        "i",
        "newData",
        "node",
        "i",
        "il",
        "i",
        "recurseHierarchy",
        "node",
        "i",
        "d",
        "j",
        "jl",
        "j",
        "newData",
        "newData",
        "start",
        "id",
        "animations",
        "animations",
        "id",
        "ID",
        "ID",
        "animation",
        "i",
        "animation",
        "i",
        "animation",
        "i",
        "sampler",
        "start",
        "start",
        "sampler",
        "end",
        "end",
        "sampler",
        "frames",
        "frames",
        "sampler",
        "start",
        "end",
        "frames",
        "ID",
        "geometry",
        "ctrl",
        "ctrl",
        "InstanceController",
        "controllers",
        "ctrl",
        "ctrl",
        "morphCtrl",
        "morphCtrl",
        "morphCtrl",
        "i",
        "morph",
        "i",
        "morph",
        "i",
        "geometries",
        "target_id",
        "daeGeometry",
        "daeGeometry",
        "daeGeometry",
        "daeGeometry",
        "target",
        "geometry",
        "geometry",
        "target",
        "geometry",
        "geometry",
        "geometry",
        "ctrl",
        "applyBindShape",
        "controllers",
        "ctrl",
        "skinCtrl",
        "skinCtrl",
        "ctrl",
        "ctrl",
        "skinCtrl",
        "visualScene",
        "ctrl",
        "applyBindShape",
        "applyBindShape",
        "applyBindShape",
        "geometry",
        "geometry",
        "applyBindShape",
        "i",
        "geometry",
        "i",
        "geometry",
        "i",
        "skin",
        "node",
        "bones",
        "frame",
        "parent",
        "node",
        "node",
        "THREE",
        "node",
        "node",
        "THREE",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "channel",
        "frame",
        "m",
        "THREE",
        "node",
        "m",
        "node",
        "m",
        "frame",
        "node",
        "m",
        "parent",
        "node",
        "parent",
        "node",
        "bones",
        "node",
        "i",
        "node",
        "i",
        "setupSkeleton",
        "node",
        "i",
        "bones",
        "frame",
        "node",
        "bones",
        "skin",
        "i",
        "bones",
        "i",
        "bones",
        "i",
        "bone",
        "j",
        "skin",
        "j",
        "bone",
        "skin",
        "j",
        "found",
        "j",
        "found",
        "skin",
        "found",
        "bone",
        "inv",
        "bone",
        "THREE",
        "bone",
        "bone",
        "inv",
        "bone",
        "THREE",
        "bone",
        "bone",
        "bone",
        "j",
        "skin",
        "j",
        "k",
        "skin",
        "j",
        "k",
        "skin",
        "j",
        "k",
        "w",
        "found",
        "bone",
        "w",
        "bone",
        "bone",
        "THREE",
        "bone",
        "skeleton",
        "parentid",
        "node",
        "bone",
        "node",
        "bone",
        "parentid",
        "bone",
        "node",
        "THREE",
        "THREE",
        "THREE",
        "bone",
        "data",
        "data",
        "data",
        "bone",
        "data",
        "data",
        "data",
        "bone",
        "data",
        "data",
        "data",
        "bone",
        "data",
        "data",
        "data",
        "data",
        "bone",
        "i",
        "node",
        "walk",
        "node",
        "node",
        "i",
        "walk",
        "skeleton",
        "geometry",
        "skeleton",
        "skinController",
        "setupSkeleton",
        "skeleton",
        "bones",
        "setupSkinningMatrices",
        "bones",
        "skinController",
        "THREE",
        "i",
        "geometry",
        "i",
        "skinned",
        "THREE",
        "i",
        "i",
        "bones",
        "i",
        "bones",
        "i",
        "j",
        "bones",
        "i",
        "j",
        "bones",
        "i",
        "j",
        "w",
        "w",
        "geometry",
        "vidx",
        "skinned",
        "vidx",
        "v",
        "o",
        "v",
        "o",
        "v",
        "o",
        "v",
        "bones",
        "i",
        "s",
        "v",
        "weight",
        "s",
        "v",
        "weight",
        "s",
        "v",
        "weight",
        "i",
        "geometry",
        "i",
        "geometry",
        "i",
        "skinned",
        "i",
        "geometry",
        "instanceCtrl",
        "frame",
        "controllers",
        "instanceCtrl",
        "frame",
        "frame",
        "frame",
        "skinController",
        "skinController",
        "instanceCtrl",
        "instanceCtrl",
        "calcAnimationBounds",
        "visualScene",
        "instanceCtrl",
        "visualScene",
        "instanceCtrl",
        "flattenSkeleton",
        "skeleton",
        "skinController",
        "i",
        "joints",
        "i",
        "j",
        "bonelist",
        "j",
        "bonelist",
        "j",
        "joints",
        "i",
        "sortedbones",
        "i",
        "bonelist",
        "j",
        "i",
        "sortedbones",
        "i",
        "j",
        "sortedbones",
        "j",
        "sortedbones",
        "i",
        "sortedbones",
        "j",
        "sortedbones",
        "i",
        "j",
        "THREE",
        "i",
        "i",
        "geometry",
        "i",
        "geometry",
        "i",
        "skinController",
        "skinController",
        "i",
        "weights",
        "i",
        "THREE",
        "weights",
        "i",
        "weights",
        "i",
        "weights",
        "i",
        "weights",
        "i",
        "weights",
        "i",
        "weights",
        "i",
        "weights",
        "i",
        "weights",
        "i",
        "THREE",
        "weights",
        "i",
        "weights",
        "i",
        "weights",
        "i",
        "weights",
        "i",
        "weights",
        "i",
        "weights",
        "i",
        "weights",
        "i",
        "weights",
        "i",
        "skinIndices",
        "indicies",
        "skinWeights",
        "weight",
        "geometry",
        "skinIndices",
        "geometry",
        "skinWeights",
        "geometry",
        "sortedbones",
        "animationBounds",
        "animationBounds",
        "j",
        "sortedbones",
        "j",
        "animationdata",
        "sortedbones",
        "j",
        "sortedbones",
        "j",
        "animationBounds",
        "sortedbones",
        "skinToBindPose",
        "geometry",
        "skeleton",
        "skinController",
        "frame",
        "frame",
        "animationBounds",
        "frame",
        "setupSkeleton",
        "skeleton",
        "bones",
        "frame",
        "setupSkinningMatrices",
        "bones",
        "skinController",
        "i",
        "bones",
        "i",
        "j",
        "animationdata",
        "j",
        "animationdata",
        "j",
        "bones",
        "i",
        "key",
        "frame",
        "key",
        "bones",
        "i",
        "frame",
        "bones",
        "i",
        "key",
        "THREE",
        "THREE",
        "THREE",
        "key",
        "data",
        "data",
        "data",
        "key",
        "data",
        "data",
        "data",
        "key",
        "data",
        "data",
        "data",
        "key",
        "data",
        "animationdata",
        "j",
        "key",
        "geometry",
        "animationdata",
        "kinematicsModel",
        "kinematicsModel",
        "kinematics",
        "jointIndex",
        "parentVisualElement",
        "parentVisualElement",
        "visualScene",
        "parentVisualElementId",
        "kinematicsModel",
        "jointIndex",
        "scene",
        "node",
        "node",
        "parentVisualElementId",
        "jointMap",
        "jointIndex",
        "node",
        "colladaNode",
        "joint",
        "joint",
        "kinematics",
        "kinematicsModel",
        "kinematicsModel",
        "jointIndex",
        "jointMap",
        "jointIndex",
        "jointData",
        "jointData",
        "jointIndex",
        "jointIndex",
        "value",
        "jointMap",
        "jointIndex",
        "jointData",
        "jointData",
        "value",
        "joint",
        "value",
        "joint",
        "jointIndex",
        "value",
        "joint",
        "joint",
        "joint",
        "jointIndex",
        "jointData",
        "joint",
        "jointData",
        "THREE",
        "i",
        "i",
        "transforms",
        "i",
        "transforms",
        "i",
        "transform",
        "transform",
        "jointIndex",
        "joint",
        "matrix",
        "m1",
        "axis",
        "THREE",
        "value",
        "matrix",
        "m1",
        "axis",
        "value",
        "axis",
        "value",
        "axis",
        "value",
        "joint",
        "THREE",
        "transform",
        "matrix",
        "transform",
        "matrix",
        "m1",
        "transform",
        "transform",
        "transform",
        "matrix",
        "m1",
        "transform",
        "transform",
        "matrix",
        "elementsFloat32Arr",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "threejsNode",
        "threejsNode",
        "elementsRowMajor",
        "threejsNode",
        "threejsNode",
        "threejsNode",
        "threejsNode",
        "jointIndex",
        "COLLADA",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "child",
        "child",
        "parseInt",
        "axis",
        "COLLADA",
        "visualTarget",
        "visualTargetElement",
        "visualTargetElement",
        "_addToMap",
        "jointIndex",
        "parentVisualElement",
        "node",
        "parent",
        "THREE",
        "i",
        "i",
        "node",
        "i",
        "controllers",
        "node",
        "i",
        "controller",
        "geometries",
        "controller",
        "InstanceGeometry",
        "inst_geom",
        "controller",
        "inst_geom",
        "node",
        "i",
        "node",
        "inst_geom",
        "skinned",
        "skinController",
        "node",
        "i",
        "controllers",
        "controller",
        "controllers",
        "controller",
        "morphController",
        "second",
        "second",
        "geometries",
        "second",
        "InstanceGeometry",
        "inst_geom",
        "second",
        "inst_geom",
        "node",
        "i",
        "node",
        "inst_geom",
        "geometries",
        "controller",
        "InstanceGeometry",
        "inst_geom",
        "controller",
        "inst_geom",
        "node",
        "i",
        "node",
        "inst_geom",
        "morphController",
        "node",
        "i",
        "i",
        "i",
        "node",
        "i",
        "node",
        "i",
        "instance_geometry",
        "geometries",
        "instance_geometry",
        "geometry",
        "geometry",
        "geometry",
        "obj",
        "obj",
        "geometry",
        "instance_materials",
        "j",
        "j",
        "instance_materials",
        "j",
        "instance_materials",
        "j",
        "materials",
        "instance_material",
        "mat",
        "effects",
        "effect_id",
        "shader",
        "geometry",
        "instance_material",
        "double_sided_materials",
        "material3js",
        "_copied_material",
        "THREE",
        "double_sided_materials",
        "instance_material",
        "_copied_material",
        "material3js",
        "double_sided_materials",
        "instance_material",
        "material3js",
        "material3js",
        "material3js",
        "used_materials",
        "instance_material",
        "num_materials",
        "used_materials_array",
        "material3js",
        "first_material",
        "material3js",
        "first_material",
        "mat",
        "mat",
        "mat",
        "mat",
        "num_materials",
        "first_material",
        "THREE",
        "geometry",
        "THREE",
        "THREE",
        "geometry",
        "num_materials",
        "material",
        "THREE",
        "used_materials_array",
        "skinController",
        "applySkin",
        "geom",
        "skinController",
        "geom",
        "material",
        "material",
        "material",
        "material",
        "mesh",
        "THREE",
        "geom",
        "material",
        "mesh",
        "skins",
        "skins",
        "mesh",
        "morphController",
        "createMorph",
        "geom",
        "morphController",
        "material",
        "mesh",
        "THREE",
        "geom",
        "material",
        "mesh",
        "morphs",
        "morphs",
        "mesh",
        "geom",
        "mesh",
        "THREE",
        "geom",
        "mesh",
        "THREE",
        "geom",
        "material",
        "obj",
        "mesh",
        "i",
        "i",
        "node",
        "i",
        "node",
        "i",
        "cameras",
        "instance_camera",
        "THREE",
        "cparams",
        "parseFloat",
        "cparams",
        "parseFloat",
        "cparams",
        "parseFloat",
        "cparams",
        "obj",
        "cam",
        "i",
        "i",
        "node",
        "i",
        "node",
        "i",
        "lights",
        "instance_light",
        "lparams",
        "lparams",
        "lparams",
        "lparams",
        "lparams",
        "lparams",
        "lparams",
        "light",
        "THREE",
        "color",
        "intensity",
        "distance",
        "light",
        "light",
        "THREE",
        "color",
        "intensity",
        "distance",
        "light",
        "THREE",
        "color",
        "intensity",
        "distance",
        "angle",
        "exponent",
        "light",
        "light",
        "THREE",
        "color",
        "light",
        "obj",
        "light",
        "obj",
        "node",
        "node",
        "obj",
        "node",
        "obj",
        "node",
        "obj",
        "node",
        "obj",
        "obj",
        "obj",
        "obj",
        "options",
        "obj",
        "obj",
        "delta",
        "obj",
        "delta",
        "obj",
        "obj",
        "delta",
        "i",
        "i",
        "node",
        "i",
        "obj",
        "createSceneGraph",
        "node",
        "i",
        "node",
        "obj",
        "skin",
        "id",
        "i",
        "skin",
        "i",
        "skin",
        "i",
        "id",
        "i",
        "id",
        "COLLADA",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "attObj",
        "attObj",
        "id",
        "nodes",
        "i",
        "node",
        "id",
        "animations",
        "animations",
        "id",
        "i",
        "animation",
        "i",
        "animation",
        "i",
        "animation",
        "i",
        "channel",
        "id",
        "node",
        "sampler",
        "channel",
        "sampler",
        "startTime",
        "startTime",
        "sampler",
        "endTime",
        "endTime",
        "sampler",
        "channels",
        "channel",
        "channels",
        "node",
        "startTime",
        "node",
        "endTime",
        "channels",
        "node",
        "i",
        "node",
        "i",
        "node",
        "i",
        "j",
        "sampler",
        "j",
        "sampler",
        "j",
        "sampler",
        "j",
        "minT",
        "minT",
        "t1",
        "t0",
        "minT",
        "node",
        "t",
        "i",
        "i",
        "node",
        "i",
        "node",
        "i",
        "animated",
        "channel",
        "channel",
        "THREE",
        "i",
        "i",
        "node",
        "i",
        "node",
        "i",
        "animated",
        "transform",
        "channel",
        "channel",
        "j",
        "j",
        "sampler",
        "j",
        "sampler",
        "j",
        "t",
        "value",
        "sampler",
        "j",
        "value",
        "value",
        "THREE",
        "matrix",
        "matrix",
        "value",
        "matrix",
        "matrix",
        "transform",
        "matrix",
        "matrix",
        "transform",
        "matrix",
        "matrix",
        "transform",
        "matrix",
        "node",
        "node",
        "node",
        "node",
        "i",
        "il",
        "i",
        "node",
        "i",
        "channel",
        "channel",
        "sampler",
        "node",
        "channel",
        "channel",
        "member",
        "channel",
        "j",
        "jl",
        "j",
        "member",
        "j",
        "getConvertedIndex",
        "channel",
        "j",
        "member",
        "getConvertedMember",
        "channel",
        "transform",
        "sids",
        "fullSid",
        "sids",
        "fullSid",
        "input",
        "j",
        "jl",
        "j",
        "input",
        "j",
        "sampler",
        "transform",
        "j",
        "member",
        "findKey",
        "keys",
        "time",
        "key",
        "key",
        "Key",
        "time",
        "findTimeNdx",
        "keys",
        "time",
        "keys",
        "timeNdx",
        "keys",
        "timeNdx",
        "key",
        "key",
        "fullSid",
        "transform",
        "member",
        "data",
        "channel",
        "node",
        "i",
        "sids",
        "i",
        "sids",
        "i",
        "j",
        "keys",
        "j",
        "keys",
        "j",
        "key",
        "sid",
        "interpolateKeys",
        "keys",
        "key",
        "j",
        "sid",
        "node",
        "keys",
        "node",
        "sids",
        "keys",
        "time",
        "keys",
        "i",
        "il",
        "retVal",
        "i",
        "keys",
        "i",
        "key",
        "time",
        "retVal",
        "key",
        "key",
        "time",
        "retVal",
        "keys",
        "time",
        "keys",
        "i",
        "il",
        "ndx",
        "i",
        "keys",
        "i",
        "key",
        "time",
        "ndx",
        "i",
        "ndx",
        "keys",
        "key",
        "ndx",
        "fullSid",
        "getPrevKeyWith",
        "keys",
        "fullSid",
        "ndx",
        "ndx",
        "getNextKeyWith",
        "keys",
        "fullSid",
        "ndx",
        "prevKey",
        "nextKey",
        "key",
        "prevKey",
        "nextKey",
        "prevKey",
        "prevKey",
        "fullSid",
        "nextKey",
        "fullSid",
        "prevTarget",
        "prevTarget",
        "data",
        "prevData",
        "prevData",
        "data",
        "i",
        "prevData",
        "i",
        "data",
        "i",
        "prevData",
        "i",
        "nextData",
        "i",
        "prevData",
        "i",
        "scale",
        "data",
        "prevData",
        "nextData",
        "prevData",
        "scale",
        "key",
        "fullSid",
        "prevTarget",
        "prevTarget",
        "data",
        "keys",
        "fullSid",
        "ndx",
        "ndx",
        "keys",
        "ndx",
        "keys",
        "ndx",
        "key",
        "fullSid",
        "key",
        "keys",
        "fullSid",
        "ndx",
        "ndx",
        "ndx",
        "ndx",
        "ndx",
        "keys",
        "ndx",
        "ndx",
        "keys",
        "ndx",
        "key",
        "fullSid",
        "key",
        "_Image",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "Controller",
        "element",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "Skin",
        "child",
        "child",
        "Morph",
        "child",
        "child",
        "Morph",
        "element",
        "element",
        "element",
        "i",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "Source",
        "child",
        "sources",
        "source",
        "source",
        "inputs",
        "child",
        "child",
        "i",
        "i",
        "inputs",
        "i",
        "inputs",
        "i",
        "sources",
        "input",
        "input",
        "source",
        "source",
        "Morph",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "inputs",
        "Input",
        "child",
        "inputs",
        "Skin",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "_floats",
        "child",
        "getConvertedMat4",
        "f",
        "Source",
        "child",
        "sources",
        "src",
        "src",
        "joints",
        "child",
        "weights",
        "child",
        "child",
        "joints",
        "sources",
        "weights",
        "sources",
        "Skin",
        "element",
        "sources",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "Input",
        "child",
        "sources",
        "input",
        "input",
        "source",
        "input",
        "source",
        "Skin",
        "element",
        "sources",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "inputs",
        "Input",
        "child",
        "v",
        "_ints",
        "child",
        "vcount",
        "_ints",
        "child",
        "i",
        "vcount",
        "i",
        "vcount",
        "i",
        "j",
        "numBones",
        "j",
        "k",
        "inputs",
        "k",
        "inputs",
        "k",
        "v",
        "index",
        "input",
        "input",
        "influence",
        "value",
        "influence",
        "sources",
        "input",
        "value",
        "vertex_weights",
        "influence",
        "index",
        "inputs",
        "j",
        "vertex_weights",
        "j",
        "vertex_weights",
        "j",
        "i",
        "vertex_weights",
        "THREE",
        "VisualScene",
        "id",
        "recursive",
        "i",
        "i",
        "i",
        "id",
        "recursive",
        "node",
        "node",
        "VisualScene",
        "sid",
        "recursive",
        "i",
        "i",
        "i",
        "sid",
        "recursive",
        "node",
        "node",
        "VisualScene",
        "element",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "Node",
        "child",
        "THREE",
        "Node",
        "transformSid",
        "i",
        "i",
        "i",
        "channel",
        "parts",
        "parts",
        "sid",
        "sid",
        "dotSyntax",
        "parts",
        "sid",
        "sid",
        "parts",
        "member",
        "parts",
        "arrSyntax",
        "arrIndices",
        "sid",
        "sid",
        "arrIndices",
        "j",
        "arrIndices",
        "j",
        "arrIndices",
        "j",
        "parseInt",
        "arrIndices",
        "j",
        "sid",
        "transformSid",
        "channel",
        "sid",
        "dotSyntax",
        "arrSyntax",
        "arrIndices",
        "channel",
        "Node",
        "id",
        "recursive",
        "id",
        "recursive",
        "i",
        "i",
        "i",
        "id",
        "recursive",
        "n",
        "n",
        "Node",
        "sid",
        "recursive",
        "sid",
        "recursive",
        "i",
        "i",
        "i",
        "sid",
        "recursive",
        "n",
        "n",
        "Node",
        "sid",
        "i",
        "i",
        "i",
        "sid",
        "i",
        "Node",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "THREE",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "Node",
        "child",
        "InstanceCamera",
        "child",
        "InstanceController",
        "child",
        "InstanceGeometry",
        "child",
        "InstanceLight",
        "child",
        "url",
        "child",
        "getLibraryNode",
        "url",
        "iNode",
        "Node",
        "iNode",
        "Transform",
        "child",
        "child",
        "getChannelsForNode",
        "bakeAnimations",
        "Node",
        "i",
        "i",
        "i",
        "Transform",
        "element",
        "element",
        "element",
        "_floats",
        "element",
        "Transform",
        "getConvertedMat4",
        "THREE",
        "fixCoords",
        "THREE",
        "fixCoords",
        "THREE",
        "Transform",
        "THREE",
        "matrix",
        "matrix",
        "matrix",
        "m1",
        "matrix",
        "m1",
        "matrix",
        "Transform",
        "data",
        "member",
        "member",
        "data",
        "member",
        "member",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "member",
        "member",
        "member",
        "propName",
        "data",
        "member",
        "member",
        "members",
        "member",
        "member",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "member",
        "member",
        "members",
        "member",
        "member",
        "data",
        "data",
        "data",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "THREE",
        "data",
        "InstanceController",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "child",
        "child",
        "j",
        "instances",
        "j",
        "instances",
        "j",
        "InstanceMaterial",
        "instance",
        "InstanceMaterial",
        "element",
        "element",
        "element",
        "InstanceGeometry",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "child",
        "j",
        "instances",
        "j",
        "instances",
        "j",
        "InstanceMaterial",
        "instance",
        "Geometry",
        "element",
        "element",
        "extractDoubleSided",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "Mesh",
        "child",
        "geometry",
        "geometry",
        "Mesh",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "_source",
        "child",
        "Vertices",
        "child",
        "LineStrips",
        "child",
        "Triangles",
        "child",
        "Polygons",
        "child",
        "Polylist",
        "child",
        "THREE",
        "sources",
        "i",
        "vertexData",
        "i",
        "getConvertedVec3",
        "vertexData",
        "i",
        "i",
        "i",
        "i",
        "primitive",
        "primitive",
        "Mesh",
        "primitive",
        "geom",
        "primitive",
        "LineStrips",
        "geom",
        "primitive",
        "primitive",
        "j",
        "j",
        "inputs",
        "j",
        "input",
        "inputs",
        "j",
        "input",
        "maxOffset",
        "maxOffset",
        "offset",
        "offset",
        "maxOffset",
        "input",
        "texture_sets",
        "input",
        "pCount",
        "pList",
        "pCount",
        "pList",
        "pCount",
        "i",
        "p",
        "primitive",
        "vcount",
        "primitive",
        "primitive",
        "vcIndex",
        "primitive",
        "vcount",
        "p",
        "maxOffset",
        "j",
        "j",
        "vcount",
        "j",
        "k",
        "k",
        "inputs",
        "k",
        "input",
        "inputs",
        "k",
        "source",
        "sources",
        "input",
        "index",
        "p",
        "i",
        "j",
        "maxOffset",
        "input",
        "numParams",
        "source",
        "idx32",
        "index",
        "numParams",
        "input",
        "vs",
        "index",
        "ns",
        "getConvertedVec3",
        "source",
        "idx32",
        "ts",
        "ts",
        "ts",
        "input",
        "ts",
        "input",
        "ts",
        "input",
        "THREE",
        "source",
        "idx32",
        "source",
        "idx32",
        "cs",
        "THREE",
        "source",
        "idx32",
        "source",
        "idx32",
        "source",
        "idx32",
        "ns",
        "input",
        "input",
        "source",
        "sources",
        "input",
        "numParams",
        "source",
        "vs",
        "ndx",
        "len",
        "ndx",
        "ns",
        "getConvertedVec3",
        "source",
        "vs",
        "ndx",
        "numParams",
        "geom",
        "ts",
        "ts",
        "input",
        "input",
        "texture_sets",
        "input",
        "source",
        "sources",
        "input",
        "numParams",
        "source",
        "vs",
        "ndx",
        "len",
        "ndx",
        "idx32",
        "vs",
        "ndx",
        "numParams",
        "ts",
        "input",
        "ts",
        "input",
        "ts",
        "input",
        "THREE",
        "source",
        "idx32",
        "source",
        "idx32",
        "cs",
        "input",
        "input",
        "source",
        "sources",
        "input",
        "numParams",
        "source",
        "vs",
        "ndx",
        "len",
        "ndx",
        "idx32",
        "vs",
        "ndx",
        "numParams",
        "cs",
        "THREE",
        "source",
        "idx32",
        "source",
        "idx32",
        "source",
        "idx32",
        "vcount",
        "faces",
        "THREE",
        "vs",
        "vs",
        "vs",
        "ns",
        "cs",
        "cs",
        "THREE",
        "vcount",
        "faces",
        "THREE",
        "vs",
        "vs",
        "vs",
        "ns",
        "ns",
        "ns",
        "ns",
        "cs",
        "cs",
        "cs",
        "cs",
        "THREE",
        "faces",
        "THREE",
        "vs",
        "vs",
        "vs",
        "ns",
        "ns",
        "ns",
        "ns",
        "cs",
        "cs",
        "cs",
        "cs",
        "THREE",
        "vcount",
        "options",
        "cs",
        "cs",
        "THREE",
        "k",
        "k",
        "vcount",
        "faces",
        "THREE",
        "vs",
        "vs",
        "k",
        "vs",
        "k",
        "ns",
        "ns",
        "ns",
        "k",
        "ns",
        "k",
        "clr",
        "faces",
        "faces",
        "ndx",
        "len",
        "ndx",
        "face",
        "faces",
        "ndx",
        "face",
        "primitive",
        "geom",
        "face",
        "k",
        "k",
        "texture_sets",
        "k",
        "uv",
        "ts",
        "texture_sets",
        "k",
        "vcount",
        "uvArr",
        "uv",
        "uv",
        "ndx",
        "uv",
        "ndx",
        "vcount",
        "ndx",
        "uvArr",
        "uv",
        "uv",
        "uv",
        "uvArr",
        "uv",
        "uv",
        "uv",
        "uvArr",
        "uv",
        "uv",
        "uv",
        "geom",
        "k",
        "geom",
        "k",
        "geom",
        "k",
        "uvArr",
        "vcount",
        "geom",
        "i",
        "maxOffset",
        "vcount",
        "THREE",
        "Polygons",
        "vertices",
        "i",
        "i",
        "i",
        "vertices",
        "i",
        "vertices",
        "Polygons",
        "element",
        "element",
        "_attr_as_int",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "Input",
        "element",
        "i",
        "_ints",
        "child",
        "_ints",
        "child",
        "Polygons",
        "Polylist",
        "Polygons",
        "Polylist",
        "Polylist",
        "Polygons",
        "LineStrips",
        "Polygons",
        "LineStrips",
        "LineStrips",
        "Polygons",
        "Triangles",
        "Polygons",
        "Triangles",
        "Triangles",
        "Accessor",
        "element",
        "element",
        "_attr_as_int",
        "element",
        "_attr_as_int",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "param",
        "child",
        "param",
        "child",
        "param",
        "Vertices",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "Input",
        "element",
        "i",
        "input",
        "input",
        "Input",
        "element",
        "element",
        "element",
        "_attr_as_int",
        "element",
        "_attr_as_int",
        "element",
        "id",
        "id",
        "Source",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "_bools",
        "child",
        "child",
        "_floats",
        "child",
        "child",
        "_ints",
        "child",
        "child",
        "_strings",
        "child",
        "child",
        "j",
        "child",
        "j",
        "child",
        "j",
        "Accessor",
        "child",
        "j",
        "Source",
        "param",
        "j",
        "j",
        "j",
        "j",
        "getConvertedMat4",
        "s",
        "result",
        "m",
        "param",
        "result",
        "Material",
        "element",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "InstanceEffect",
        "element",
        "i",
        "THREE",
        "ColorOrTexture",
        "ColorOrTexture",
        "ColorOrTexture",
        "element",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "_floats",
        "child",
        "THREE",
        "rgba",
        "rgba",
        "rgba",
        "rgba",
        "child",
        "child",
        "child",
        "ColorOrTexture",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "parseFloat",
        "child",
        "child",
        "child",
        "child",
        "parseInt",
        "child",
        "child",
        "child",
        "effect",
        "effect",
        "Shader",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "child",
        "ColorOrTexture",
        "child",
        "child",
        "bumpType",
        "bumpType",
        "ColorOrTexture",
        "child",
        "bumpType",
        "ColorOrTexture",
        "child",
        "bumpType",
        "ColorOrTexture",
        "child",
        "ColorOrTexture",
        "child",
        "child",
        "f",
        "child",
        "parseFloat",
        "f",
        "Shader",
        "transparencyLevel",
        "transparent",
        "props",
        "props",
        "transparencyLevel",
        "prop",
        "prop",
        "prop",
        "cot",
        "ColorOrTexture",
        "cot",
        "cot",
        "samplerId",
        "surfaceId",
        "surfaceId",
        "surfaceId",
        "surface",
        "images",
        "surface",
        "image",
        "baseUrl",
        "image",
        "THREE",
        "url",
        "loader",
        "texture",
        "loader",
        "url",
        "texture",
        "THREE",
        "loadTextureImage",
        "texture",
        "url",
        "texture",
        "cot",
        "THREE",
        "THREE",
        "texture",
        "cot",
        "THREE",
        "THREE",
        "texture",
        "cot",
        "texture",
        "cot",
        "texture",
        "cot",
        "texture",
        "cot",
        "props",
        "keys",
        "prop",
        "texture",
        "prop",
        "props",
        "prop",
        "transparent",
        "prop",
        "props",
        "cot",
        "props",
        "prop",
        "cot",
        "props",
        "prop",
        "prop",
        "props",
        "prop",
        "prop",
        "props",
        "prop",
        "props",
        "options",
        "props",
        "THREE",
        "props",
        "prop",
        "prop",
        "props",
        "options",
        "props",
        "preferredShading",
        "props",
        "THREE",
        "THREE",
        "props",
        "props",
        "props",
        "props",
        "props",
        "props",
        "props",
        "THREE",
        "props",
        "THREE",
        "props",
        "THREE",
        "props",
        "effect",
        "effect",
        "Surface",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "child",
        "child",
        "child",
        "effect",
        "effect",
        "Sampler2D",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "child",
        "child",
        "child",
        "child",
        "child",
        "child",
        "child",
        "Effect",
        "Effect",
        "element",
        "element",
        "element",
        "extractDoubleSided",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "child",
        "Effect",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "sid",
        "Surface",
        "child",
        "sid",
        "Sampler2D",
        "child",
        "child",
        "Effect",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "child",
        "technique",
        "child",
        "child",
        "_Image",
        "child",
        "images",
        "_image",
        "_image",
        "child",
        "technique",
        "Effect",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "Shader",
        "child",
        "child",
        "child",
        "Effect",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "child",
        "Effect",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "element",
        "InstanceEffect",
        "element",
        "element",
        "Animation",
        "element",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "Animation",
        "child",
        "src",
        "anim",
        "src",
        "anim",
        "src",
        "j",
        "anim",
        "j",
        "anim",
        "j",
        "anim",
        "j",
        "Source",
        "child",
        "src",
        "src",
        "Sampler",
        "child",
        "Channel",
        "child",
        "animation",
        "animation",
        "Channel",
        "element",
        "element",
        "element",
        "parts",
        "parts",
        "sid",
        "sid",
        "dotSyntax",
        "parts",
        "sid",
        "parts",
        "parts",
        "arrSyntax",
        "sid",
        "arrIndices",
        "j",
        "arrIndices",
        "j",
        "arrIndices",
        "j",
        "parseInt",
        "arrIndices",
        "j",
        "arrIndices",
        "sid",
        "sid",
        "dotSyntax",
        "arrSyntax",
        "animation",
        "animation",
        "Sampler",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "Input",
        "child",
        "Sampler",
        "i",
        "i",
        "i",
        "input",
        "input",
        "source",
        "source",
        "source",
        "source",
        "input",
        "i",
        "i",
        "i",
        "i",
        "Sampler",
        "ndx",
        "member",
        "data",
        "ndx",
        "data",
        "ndx",
        "i",
        "i",
        "data",
        "i",
        "ndx",
        "i",
        "fixCoords",
        "data",
        "fixCoords",
        "data",
        "fixCoords",
        "data",
        "data",
        "ndx",
        "member",
        "data",
        "getConvertedTranslation",
        "member",
        "data",
        "data",
        "time",
        "time",
        "Key",
        "fullSid",
        "transform",
        "member",
        "data",
        "fullSid",
        "member",
        "transform",
        "data",
        "Key",
        "opt_sid",
        "i",
        "i",
        "i",
        "opt_sid",
        "target",
        "opt_sid",
        "target",
        "target",
        "target",
        "Key",
        "fullSid",
        "i",
        "i",
        "i",
        "fullSid",
        "i",
        "Key",
        "fullSid",
        "i",
        "i",
        "i",
        "fullSid",
        "Key",
        "nextKey",
        "time",
        "i",
        "l",
        "i",
        "i",
        "nextKey",
        "target",
        "target",
        "nextTarget",
        "time",
        "nextKey",
        "nextTarget",
        "target",
        "scale",
        "scale",
        "scale",
        "scale",
        "prevData",
        "data",
        "j",
        "prevData",
        "j",
        "data",
        "j",
        "prevData",
        "j",
        "nextData",
        "j",
        "prevData",
        "j",
        "scale",
        "data",
        "prevData",
        "nextData",
        "prevData",
        "scale",
        "data",
        "target",
        "target",
        "data",
        "target",
        "Camera",
        "element",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "child",
        "Camera",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "j",
        "technique",
        "j",
        "technique",
        "j",
        "technique",
        "j",
        "k",
        "perspective",
        "k",
        "perspective",
        "k",
        "param",
        "param",
        "param",
        "param",
        "param",
        "param",
        "technique",
        "j",
        "k",
        "orthographic",
        "k",
        "orthographic",
        "k",
        "param",
        "param",
        "param",
        "param",
        "param",
        "param",
        "InstanceCamera",
        "element",
        "element",
        "Light",
        "element",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "child",
        "child",
        "Light",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "j",
        "light",
        "j",
        "light",
        "j",
        "child",
        "_floats",
        "child",
        "THREE",
        "rgba",
        "rgba",
        "rgba",
        "rgba",
        "parseFloat",
        "child",
        "parseFloat",
        "child",
        "f",
        "f",
        "Light",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "parseFloat",
        "child",
        "InstanceLight",
        "element",
        "element",
        "KinematicsModel",
        "element",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "child",
        "KinematicsModel",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "element",
        "i",
        "Joint",
        "child",
        "Link",
        "child",
        "THREE",
        "Joint",
        "element",
        "element",
        "element",
        "THREE",
        "element",
        "_floats",
        "axisElement",
        "getConvertedVec3",
        "_axis",
        "element",
        "parseFloat",
        "element",
        "element",
        "parseFloat",
        "element",
        "min",
        "max",
        "i",
        "jointTypes",
        "i",
        "jointTypes",
        "i",
        "element",
        "jointElement",
        "Link",
        "element",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "Attachment",
        "child",
        "Transform",
        "child",
        "Attachment",
        "element",
        "element",
        "i",
        "element",
        "i",
        "element",
        "i",
        "child",
        "child",
        "Link",
        "child",
        "Transform",
        "child",
        "element",
        "element",
        "sources",
        "id",
        "sources",
        "id",
        "sources",
        "id",
        "Source",
        "id",
        "element",
        "sources",
        "id",
        "nsPrefix",
        "nsPrefix",
        "_strings",
        "raw",
        "i",
        "l",
        "i",
        "data",
        "raw",
        "i",
        "raw",
        "i",
        "data",
        "_strings",
        "raw",
        "i",
        "l",
        "i",
        "data",
        "parseFloat",
        "raw",
        "i",
        "data",
        "_strings",
        "raw",
        "i",
        "l",
        "i",
        "data",
        "parseInt",
        "raw",
        "i",
        "data",
        "_trimString",
        "element",
        "name",
        "defaultValue",
        "element",
        "name",
        "parseFloat",
        "element",
        "name",
        "defaultValue",
        "element",
        "name",
        "defaultValue",
        "element",
        "name",
        "parseInt",
        "element",
        "name",
        "defaultValue",
        "element",
        "name",
        "defaultValue",
        "element",
        "name",
        "element",
        "name",
        "defaultValue",
        "f",
        "num",
        "f",
        "s",
        "num",
        "s",
        "s",
        "num",
        "num",
        "f",
        "parts",
        "parts",
        "parts",
        "num",
        "parts",
        "num",
        "parts",
        "parts",
        "texture",
        "url",
        "THREE",
        "loader",
        "url",
        "image",
        "texture",
        "image",
        "texture",
        "obj",
        "element",
        "obj",
        "element",
        "node",
        "node",
        "parseInt",
        "node",
        "obj",
        "options",
        "colladaUp",
        "options",
        "upConversion",
        "colladaUp",
        "upConversion",
        "options",
        "upConversion",
        "options",
        "upConversion",
        "options",
        "data",
        "sign",
        "options",
        "colladaUp",
        "options",
        "upConversion",
        "data",
        "data",
        "sign",
        "data",
        "data",
        "tmp",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "tmp",
        "data",
        "data",
        "data",
        "data",
        "sign",
        "tmp",
        "data",
        "data",
        "sign",
        "data",
        "data",
        "tmp",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "tmp",
        "data",
        "data",
        "data",
        "data",
        "sign",
        "tmp",
        "axis",
        "data",
        "options",
        "colladaUp",
        "options",
        "data",
        "axis",
        "data",
        "upConversion",
        "data",
        "data",
        "data",
        "upConversion",
        "upConversion",
        "data",
        "data",
        "data",
        "upConversion",
        "data",
        "data",
        "data",
        "data",
        "offset",
        "data",
        "offset",
        "data",
        "offset",
        "data",
        "offset",
        "fixCoords",
        "arr",
        "THREE",
        "arr",
        "arr",
        "arr",
        "data",
        "options",
        "data",
        "data",
        "data",
        "fixCoords",
        "arr",
        "data",
        "arr",
        "data",
        "arr",
        "data",
        "arr",
        "arr",
        "data",
        "data",
        "data",
        "fixCoords",
        "arr",
        "data",
        "arr",
        "data",
        "arr",
        "data",
        "arr",
        "arr",
        "data",
        "data",
        "data",
        "fixCoords",
        "arr",
        "data",
        "arr",
        "data",
        "arr",
        "data",
        "arr",
        "arr",
        "data",
        "data",
        "data",
        "fixCoords",
        "arr",
        "data",
        "arr",
        "data",
        "arr",
        "data",
        "arr",
        "arr",
        "data",
        "data",
        "data",
        "fixCoords",
        "arr",
        "data",
        "arr",
        "data",
        "arr",
        "data",
        "arr",
        "arr",
        "data",
        "data",
        "data",
        "fixCoords",
        "arr",
        "data",
        "arr",
        "data",
        "arr",
        "data",
        "arr",
        "arr",
        "data",
        "data",
        "data",
        "fixCoords",
        "arr",
        "data",
        "arr",
        "data",
        "arr",
        "data",
        "arr",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "index",
        "index",
        "index",
        "index",
        "getConvertedMember",
        "members",
        "index",
        "index",
        "indices",
        "index",
        "index",
        "member",
        "options",
        "member",
        "upConversion",
        "member",
        "member",
        "upConversion",
        "member",
        "member",
        "upConversion",
        "member",
        "member",
        "member",
        "load",
        "parse",
        "setPreferredShading",
        "applySkin",
        "geometries",
        "options",
        "_dereq_",
        "exports",
        "THREE",
        "manager",
        "manager",
        "manager",
        "THREE",
        "THREE",
        "THREE",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "THREE",
        "loader",
        "loader",
        "url",
        "text",
        "onLoad",
        "scope",
        "text",
        "onProgress",
        "onError",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "text",
        "text",
        "i",
        "lines",
        "i",
        "lines",
        "i",
        "line",
        "line",
        "line",
        "line",
        "line",
        "pos",
        "line",
        "pos",
        "line",
        "key",
        "key",
        "pos",
        "line",
        "pos",
        "value",
        "value",
        "key",
        "info",
        "value",
        "materialsInfo",
        "value",
        "info",
        "info",
        "key",
        "key",
        "key",
        "value",
        "delimiter_pattern",
        "info",
        "key",
        "parseFloat",
        "ss",
        "parseFloat",
        "ss",
        "parseFloat",
        "ss",
        "info",
        "key",
        "value",
        "THREE",
        "materialCreator",
        "materialCreator",
        "materialCreator",
        "materialsInfo",
        "materialCreator",
        "THREE",
        "baseUrl",
        "options",
        "baseUrl",
        "options",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "value",
        "value",
        "value",
        "value",
        "materialsInfo",
        "materialsInfo",
        "materialsInfo",
        "materialsInfo",
        "mn",
        "materialsInfo",
        "materialsInfo",
        "mn",
        "converted",
        "mn",
        "covmat",
        "prop",
        "mat",
        "mat",
        "prop",
        "prop",
        "lprop",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "save",
        "save",
        "covmat",
        "lprop",
        "value",
        "converted",
        "mn",
        "mn",
        "materialName",
        "materialName",
        "mn",
        "index",
        "mn",
        "mn",
        "index",
        "index",
        "materialName",
        "materialName",
        "materialName",
        "materialName",
        "materialName",
        "materialName",
        "materialName",
        "prop",
        "mat",
        "mat",
        "prop",
        "value",
        "prop",
        "THREE",
        "value",
        "THREE",
        "value",
        "value",
        "parseFloat",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "materialName",
        "THREE",
        "materialName",
        "url",
        "mapping",
        "onLoad",
        "onProgress",
        "onError",
        "THREE",
        "url",
        "THREE",
        "loader",
        "loader",
        "THREE",
        "manager",
        "loader",
        "loader",
        "texture",
        "loader",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "mapping",
        "texture",
        "mapping",
        "texture",
        "THREE",
        "THREE",
        "_dereq_",
        "exports",
        "THREE",
        "manager",
        "manager",
        "manager",
        "THREE",
        "THREE",
        "THREE",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "THREE",
        "scope",
        "loader",
        "loader",
        "url",
        "text",
        "onLoad",
        "scope",
        "text",
        "onProgress",
        "onError",
        "value",
        "value",
        "materials",
        "materials",
        "text",
        "name",
        "name",
        "geometry",
        "material",
        "objects",
        "value",
        "parseInt",
        "value",
        "index",
        "index",
        "index",
        "vertices",
        "value",
        "parseInt",
        "value",
        "index",
        "index",
        "index",
        "normals",
        "value",
        "parseInt",
        "value",
        "index",
        "index",
        "index",
        "uvs",
        "a",
        "b",
        "c",
        "vertices",
        "a",
        "vertices",
        "a",
        "vertices",
        "a",
        "vertices",
        "b",
        "vertices",
        "b",
        "vertices",
        "b",
        "vertices",
        "c",
        "vertices",
        "c",
        "vertices",
        "c",
        "a",
        "b",
        "c",
        "normals",
        "a",
        "normals",
        "a",
        "normals",
        "a",
        "normals",
        "b",
        "normals",
        "b",
        "normals",
        "b",
        "normals",
        "c",
        "normals",
        "c",
        "normals",
        "c",
        "a",
        "b",
        "c",
        "uvs",
        "a",
        "uvs",
        "a",
        "uvs",
        "b",
        "uvs",
        "b",
        "uvs",
        "c",
        "uvs",
        "c",
        "a",
        "b",
        "c",
        "d",
        "ua",
        "ub",
        "uc",
        "ud",
        "na",
        "nb",
        "nc",
        "nd",
        "parseVertexIndex",
        "a",
        "parseVertexIndex",
        "b",
        "parseVertexIndex",
        "c",
        "d",
        "addVertex",
        "ia",
        "ib",
        "ic",
        "id",
        "parseVertexIndex",
        "d",
        "addVertex",
        "ia",
        "ib",
        "id",
        "addVertex",
        "ib",
        "ic",
        "id",
        "ua",
        "ia",
        "parseUVIndex",
        "ua",
        "ib",
        "parseUVIndex",
        "ub",
        "ic",
        "parseUVIndex",
        "uc",
        "d",
        "addUV",
        "ia",
        "ib",
        "ic",
        "id",
        "parseUVIndex",
        "ud",
        "addUV",
        "ia",
        "ib",
        "id",
        "addUV",
        "ib",
        "ic",
        "id",
        "na",
        "ia",
        "parseNormalIndex",
        "na",
        "ib",
        "parseNormalIndex",
        "nb",
        "ic",
        "parseNormalIndex",
        "nc",
        "d",
        "addNormal",
        "ia",
        "ib",
        "ic",
        "id",
        "parseNormalIndex",
        "nd",
        "addNormal",
        "ia",
        "ib",
        "id",
        "addNormal",
        "ib",
        "ic",
        "id",
        "addObject",
        "text",
        "i",
        "lines",
        "i",
        "lines",
        "i",
        "line",
        "line",
        "line",
        "line",
        "result",
        "vertex_pattern",
        "line",
        "vertices",
        "parseFloat",
        "result",
        "parseFloat",
        "result",
        "parseFloat",
        "result",
        "result",
        "normal_pattern",
        "line",
        "normals",
        "parseFloat",
        "result",
        "parseFloat",
        "result",
        "parseFloat",
        "result",
        "result",
        "uv_pattern",
        "line",
        "uvs",
        "parseFloat",
        "result",
        "parseFloat",
        "result",
        "result",
        "face_pattern1",
        "line",
        "addFace",
        "result",
        "result",
        "result",
        "result",
        "result",
        "face_pattern2",
        "line",
        "addFace",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "face_pattern3",
        "line",
        "addFace",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "face_pattern4",
        "line",
        "addFace",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "object_pattern",
        "line",
        "result",
        "foundObjects",
        "foundObjects",
        "name",
        "addObject",
        "name",
        "line",
        "line",
        "line",
        "result",
        "smoothing_pattern",
        "line",
        "result",
        "result",
        "line",
        "THREE",
        "objects",
        "i",
        "l",
        "i",
        "objects",
        "i",
        "THREE",
        "buffergeometry",
        "THREE",
        "Float32Array",
        "geometry",
        "geometry",
        "buffergeometry",
        "THREE",
        "Float32Array",
        "geometry",
        "buffergeometry",
        "geometry",
        "buffergeometry",
        "THREE",
        "Float32Array",
        "geometry",
        "material",
        "material",
        "material",
        "THREE",
        "material",
        "material",
        "THREE",
        "THREE",
        "THREE",
        "buffergeometry",
        "material",
        "mesh",
        "container",
        "mesh",
        "container",
        "_dereq_",
        "exports",
        "define",
        "define",
        "define",
        "THREE",
        "exports",
        "THREE",
        "x",
        "x",
        "x",
        "x",
        "target",
        "target",
        "target",
        "target",
        "arguments",
        "i",
        "n",
        "i",
        "arguments",
        "i",
        "nextSource",
        "nextSource",
        "nextSource",
        "nextSource",
        "nextSource",
        "keysArray",
        "nextIndex",
        "len",
        "nextIndex",
        "keysArray",
        "nextIndex",
        "nextSource",
        "nextKey",
        "desc",
        "desc",
        "to",
        "nextKey",
        "nextSource",
        "nextKey",
        "to",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "color",
        "arguments",
        "arguments",
        "color",
        "THREE",
        "THREE",
        "value",
        "value",
        "THREE",
        "value",
        "value",
        "value",
        "value",
        "value",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "hex",
        "hex",
        "hex",
        "hex",
        "hex",
        "hex",
        "r",
        "g",
        "b",
        "r",
        "g",
        "b",
        "p",
        "q",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "p",
        "q",
        "p",
        "t",
        "t",
        "q",
        "t",
        "p",
        "q",
        "p",
        "t",
        "p",
        "h",
        "s",
        "l",
        "h",
        "THREE",
        "h",
        "s",
        "THREE",
        "s",
        "l",
        "THREE",
        "l",
        "s",
        "l",
        "l",
        "l",
        "s",
        "l",
        "s",
        "l",
        "s",
        "l",
        "p",
        "hue2rgb",
        "q",
        "p",
        "h",
        "hue2rgb",
        "q",
        "p",
        "h",
        "hue2rgb",
        "q",
        "p",
        "h",
        "style",
        "parseFloat",
        "style",
        "m",
        "style",
        "m",
        "m",
        "name",
        "color",
        "components",
        "parseInt",
        "color",
        "parseInt",
        "color",
        "parseInt",
        "color",
        "handleAlpha",
        "color",
        "color",
        "components",
        "parseInt",
        "color",
        "parseInt",
        "color",
        "parseInt",
        "color",
        "handleAlpha",
        "color",
        "color",
        "components",
        "parseFloat",
        "color",
        "parseInt",
        "color",
        "parseInt",
        "color",
        "handleAlpha",
        "color",
        "h",
        "s",
        "l",
        "m",
        "style",
        "m",
        "hex",
        "size",
        "parseInt",
        "hex",
        "hex",
        "parseInt",
        "hex",
        "hex",
        "parseInt",
        "hex",
        "hex",
        "size",
        "parseInt",
        "hex",
        "hex",
        "parseInt",
        "hex",
        "hex",
        "parseInt",
        "hex",
        "hex",
        "style",
        "style",
        "THREE",
        "style",
        "hex",
        "hex",
        "style",
        "color",
        "color",
        "color",
        "color",
        "color",
        "gammaFactor",
        "gammaFactor",
        "gammaFactor",
        "color",
        "gammaFactor",
        "color",
        "gammaFactor",
        "color",
        "gammaFactor",
        "color",
        "gammaFactor",
        "gammaFactor",
        "gammaFactor",
        "gammaFactor",
        "gammaFactor",
        "color",
        "safeInverse",
        "color",
        "safeInverse",
        "color",
        "safeInverse",
        "r",
        "r",
        "g",
        "g",
        "b",
        "b",
        "optionalTarget",
        "optionalTarget",
        "r",
        "g",
        "b",
        "r",
        "g",
        "b",
        "min",
        "max",
        "min",
        "max",
        "hue",
        "saturation",
        "max",
        "min",
        "saturation",
        "lightness",
        "delta",
        "max",
        "min",
        "delta",
        "max",
        "min",
        "max",
        "r",
        "hue",
        "g",
        "b",
        "delta",
        "g",
        "b",
        "g",
        "hue",
        "b",
        "r",
        "delta",
        "b",
        "hue",
        "r",
        "g",
        "delta",
        "hue",
        "hsl",
        "hue",
        "hsl",
        "saturation",
        "hsl",
        "lightness",
        "hsl",
        "h",
        "s",
        "l",
        "hsl",
        "h",
        "hsl",
        "s",
        "hsl",
        "l",
        "hsl",
        "hsl",
        "hsl",
        "color",
        "color",
        "color",
        "color",
        "color1",
        "color2",
        "color1",
        "color2",
        "color1",
        "color2",
        "color1",
        "color2",
        "s",
        "s",
        "s",
        "s",
        "color",
        "color",
        "color",
        "color",
        "s",
        "s",
        "s",
        "s",
        "color",
        "alpha",
        "color",
        "alpha",
        "color",
        "alpha",
        "color",
        "alpha",
        "c",
        "c",
        "c",
        "c",
        "array",
        "offset",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "array",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "THREE",
        "THREE",
        "x",
        "y",
        "z",
        "w",
        "x",
        "y",
        "z",
        "w",
        "w",
        "THREE",
        "THREE",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "x",
        "y",
        "z",
        "w",
        "x",
        "y",
        "z",
        "w",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "euler",
        "update",
        "euler",
        "THREE",
        "euler",
        "euler",
        "euler",
        "euler",
        "euler",
        "euler",
        "euler",
        "order",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "order",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "order",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "order",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "order",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "order",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "update",
        "axis",
        "angle",
        "angle",
        "halfAngle",
        "axis",
        "s",
        "axis",
        "s",
        "axis",
        "s",
        "halfAngle",
        "m",
        "m",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "m11",
        "m22",
        "m33",
        "trace",
        "s",
        "trace",
        "s",
        "m32",
        "m23",
        "s",
        "m13",
        "m31",
        "s",
        "m21",
        "m12",
        "s",
        "m11",
        "m22",
        "m11",
        "m33",
        "s",
        "m11",
        "m22",
        "m33",
        "m32",
        "m23",
        "s",
        "s",
        "m12",
        "m21",
        "s",
        "m13",
        "m31",
        "s",
        "m22",
        "m33",
        "s",
        "m22",
        "m11",
        "m33",
        "m13",
        "m31",
        "s",
        "m12",
        "m21",
        "s",
        "s",
        "m23",
        "m32",
        "s",
        "s",
        "m33",
        "m11",
        "m22",
        "m21",
        "m12",
        "s",
        "m13",
        "m31",
        "s",
        "m23",
        "m32",
        "s",
        "s",
        "vFrom",
        "vTo",
        "v1",
        "v1",
        "THREE",
        "r",
        "vFrom",
        "vTo",
        "r",
        "EPS",
        "r",
        "vFrom",
        "vFrom",
        "v1",
        "vFrom",
        "vFrom",
        "v1",
        "vFrom",
        "vFrom",
        "v1",
        "vFrom",
        "vTo",
        "v1",
        "v1",
        "v1",
        "r",
        "v",
        "v",
        "v",
        "v",
        "v",
        "l",
        "l",
        "l",
        "l",
        "l",
        "l",
        "l",
        "q",
        "p",
        "p",
        "q",
        "p",
        "q",
        "a",
        "b",
        "a",
        "a",
        "a",
        "a",
        "b",
        "b",
        "b",
        "b",
        "qax",
        "qbw",
        "qaw",
        "qbx",
        "qay",
        "qbz",
        "qaz",
        "qby",
        "qay",
        "qbw",
        "qaw",
        "qby",
        "qaz",
        "qbx",
        "qax",
        "qbz",
        "qaz",
        "qbw",
        "qaw",
        "qbz",
        "qax",
        "qby",
        "qay",
        "qbx",
        "qaw",
        "qbw",
        "qax",
        "qbx",
        "qay",
        "qby",
        "qaz",
        "qbz",
        "qb",
        "t",
        "t",
        "t",
        "qb",
        "w",
        "qb",
        "x",
        "qb",
        "y",
        "qb",
        "z",
        "qb",
        "cosHalfTheta",
        "qb",
        "qb",
        "qb",
        "qb",
        "cosHalfTheta",
        "cosHalfTheta",
        "qb",
        "cosHalfTheta",
        "w",
        "x",
        "y",
        "z",
        "cosHalfTheta",
        "cosHalfTheta",
        "sinHalfTheta",
        "w",
        "x",
        "y",
        "z",
        "sinHalfTheta",
        "cosHalfTheta",
        "t",
        "halfTheta",
        "sinHalfTheta",
        "t",
        "halfTheta",
        "sinHalfTheta",
        "w",
        "ratioA",
        "ratioB",
        "x",
        "ratioA",
        "ratioB",
        "y",
        "ratioA",
        "ratioB",
        "z",
        "ratioA",
        "ratioB",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "array",
        "offset",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "array",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "callback",
        "callback",
        "THREE",
        "qa",
        "qb",
        "qm",
        "t",
        "qm",
        "qa",
        "qb",
        "t",
        "dst",
        "dstOffset",
        "src0",
        "srcOffset0",
        "src1",
        "srcOffset1",
        "t",
        "src0",
        "srcOffset0",
        "src0",
        "srcOffset0",
        "src0",
        "srcOffset0",
        "src0",
        "srcOffset0",
        "src1",
        "srcOffset1",
        "src1",
        "srcOffset1",
        "src1",
        "srcOffset1",
        "src1",
        "srcOffset1",
        "w0",
        "w1",
        "x0",
        "x1",
        "y0",
        "y1",
        "z0",
        "z1",
        "t",
        "x0",
        "x1",
        "y0",
        "y1",
        "z0",
        "z1",
        "w0",
        "w1",
        "cos",
        "cos",
        "cos",
        "sqrSin",
        "sqrSin",
        "sin",
        "cos",
        "dir",
        "s",
        "s",
        "len",
        "sin",
        "t",
        "t",
        "len",
        "sin",
        "t",
        "dir",
        "x0",
        "x0",
        "s",
        "x1",
        "tDir",
        "y0",
        "y0",
        "s",
        "y1",
        "tDir",
        "z0",
        "z0",
        "s",
        "z1",
        "tDir",
        "w0",
        "w0",
        "s",
        "w1",
        "tDir",
        "s",
        "t",
        "x0",
        "x0",
        "y0",
        "y0",
        "z0",
        "z0",
        "w0",
        "w0",
        "x0",
        "f",
        "y0",
        "f",
        "z0",
        "f",
        "w0",
        "f",
        "dst",
        "dstOffset",
        "x0",
        "dst",
        "dstOffset",
        "y0",
        "dst",
        "dstOffset",
        "z0",
        "dst",
        "dstOffset",
        "w0",
        "THREE",
        "x",
        "y",
        "x",
        "y",
        "THREE",
        "THREE",
        "value",
        "value",
        "value",
        "value",
        "x",
        "y",
        "x",
        "y",
        "scalar",
        "scalar",
        "scalar",
        "x",
        "x",
        "y",
        "y",
        "index",
        "value",
        "index",
        "value",
        "value",
        "index",
        "index",
        "index",
        "index",
        "v",
        "v",
        "v",
        "v",
        "w",
        "w",
        "v",
        "w",
        "v",
        "v",
        "s",
        "s",
        "s",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "v",
        "s",
        "v",
        "s",
        "v",
        "s",
        "v",
        "w",
        "w",
        "v",
        "w",
        "v",
        "v",
        "s",
        "s",
        "s",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "v",
        "v",
        "v",
        "scalar",
        "isFinite",
        "scalar",
        "scalar",
        "scalar",
        "v",
        "v",
        "v",
        "scalar",
        "scalar",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "clampScalar",
        "minVal",
        "maxVal",
        "min",
        "min",
        "THREE",
        "max",
        "THREE",
        "min",
        "minVal",
        "minVal",
        "max",
        "maxVal",
        "maxVal",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "length",
        "length",
        "v",
        "v",
        "v",
        "angle",
        "angle",
        "angle",
        "v",
        "v",
        "v",
        "v",
        "v",
        "dx",
        "dx",
        "dy",
        "dy",
        "length",
        "length",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "v1",
        "v2",
        "alpha",
        "v2",
        "v1",
        "alpha",
        "v1",
        "v",
        "v",
        "v",
        "array",
        "offset",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "array",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "attribute",
        "index",
        "offset",
        "offset",
        "offset",
        "index",
        "index",
        "attribute",
        "offset",
        "attribute",
        "index",
        "attribute",
        "index",
        "center",
        "angle",
        "angle",
        "angle",
        "center",
        "center",
        "x",
        "c",
        "y",
        "s",
        "center",
        "x",
        "s",
        "y",
        "c",
        "center",
        "THREE",
        "x",
        "y",
        "z",
        "x",
        "y",
        "z",
        "THREE",
        "THREE",
        "x",
        "y",
        "z",
        "x",
        "y",
        "z",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "index",
        "value",
        "index",
        "value",
        "value",
        "value",
        "index",
        "index",
        "index",
        "index",
        "v",
        "v",
        "v",
        "v",
        "v",
        "w",
        "w",
        "v",
        "w",
        "v",
        "v",
        "v",
        "s",
        "s",
        "s",
        "s",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "v",
        "s",
        "v",
        "s",
        "v",
        "s",
        "v",
        "s",
        "v",
        "w",
        "w",
        "v",
        "w",
        "v",
        "v",
        "v",
        "s",
        "s",
        "s",
        "s",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "v",
        "w",
        "w",
        "v",
        "w",
        "v",
        "v",
        "v",
        "scalar",
        "isFinite",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "applyEuler",
        "euler",
        "euler",
        "THREE",
        "quaternion",
        "quaternion",
        "THREE",
        "quaternion",
        "euler",
        "applyAxisAngle",
        "axis",
        "angle",
        "quaternion",
        "quaternion",
        "THREE",
        "quaternion",
        "axis",
        "angle",
        "m",
        "m",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "m",
        "m",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "m",
        "m",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "d",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "d",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "d",
        "q",
        "q",
        "q",
        "q",
        "q",
        "qw",
        "x",
        "qy",
        "z",
        "qz",
        "y",
        "qw",
        "y",
        "qz",
        "x",
        "qx",
        "z",
        "qw",
        "z",
        "qx",
        "y",
        "qy",
        "x",
        "qx",
        "x",
        "qy",
        "y",
        "qz",
        "z",
        "ix",
        "qw",
        "iw",
        "qx",
        "iy",
        "qz",
        "iz",
        "qy",
        "iy",
        "qw",
        "iw",
        "qy",
        "iz",
        "qx",
        "ix",
        "qz",
        "iz",
        "qw",
        "iw",
        "qz",
        "ix",
        "qy",
        "iy",
        "qx",
        "project",
        "camera",
        "matrix",
        "matrix",
        "THREE",
        "matrix",
        "camera",
        "matrix",
        "camera",
        "matrix",
        "unproject",
        "camera",
        "matrix",
        "matrix",
        "THREE",
        "matrix",
        "camera",
        "matrix",
        "camera",
        "matrix",
        "m",
        "m",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "v",
        "v",
        "v",
        "v",
        "scalar",
        "scalar",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "clampScalar",
        "minVal",
        "maxVal",
        "min",
        "min",
        "THREE",
        "max",
        "THREE",
        "min",
        "minVal",
        "minVal",
        "minVal",
        "max",
        "maxVal",
        "maxVal",
        "maxVal",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "length",
        "length",
        "v",
        "v",
        "v",
        "v",
        "length",
        "length",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "v1",
        "v2",
        "alpha",
        "v2",
        "v1",
        "alpha",
        "v1",
        "v",
        "w",
        "w",
        "v",
        "w",
        "y",
        "v",
        "z",
        "v",
        "z",
        "v",
        "x",
        "v",
        "x",
        "v",
        "y",
        "v",
        "a",
        "b",
        "a",
        "a",
        "a",
        "b",
        "b",
        "b",
        "ay",
        "bz",
        "az",
        "by",
        "az",
        "bx",
        "ax",
        "bz",
        "ax",
        "by",
        "ay",
        "bx",
        "projectOnVector",
        "vector",
        "v1",
        "v1",
        "THREE",
        "v1",
        "vector",
        "dot",
        "v1",
        "v1",
        "dot",
        "projectOnPlane",
        "planeNormal",
        "v1",
        "v1",
        "THREE",
        "v1",
        "planeNormal",
        "v1",
        "reflect",
        "normal",
        "v1",
        "v1",
        "THREE",
        "v1",
        "normal",
        "normal",
        "v",
        "v",
        "v",
        "THREE",
        "theta",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "dx",
        "dx",
        "dy",
        "dy",
        "dz",
        "dz",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "sx",
        "sy",
        "sz",
        "index",
        "matrix",
        "index",
        "matrix",
        "me",
        "offset",
        "me",
        "offset",
        "me",
        "offset",
        "v",
        "v",
        "v",
        "v",
        "array",
        "offset",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "array",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "attribute",
        "index",
        "offset",
        "offset",
        "offset",
        "index",
        "index",
        "attribute",
        "offset",
        "attribute",
        "index",
        "attribute",
        "index",
        "attribute",
        "index",
        "THREE",
        "x",
        "y",
        "z",
        "w",
        "x",
        "y",
        "z",
        "w",
        "w",
        "THREE",
        "THREE",
        "x",
        "y",
        "z",
        "w",
        "x",
        "y",
        "z",
        "w",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "w",
        "w",
        "index",
        "value",
        "index",
        "value",
        "value",
        "value",
        "value",
        "index",
        "index",
        "index",
        "index",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "w",
        "w",
        "v",
        "w",
        "v",
        "v",
        "v",
        "v",
        "s",
        "s",
        "s",
        "s",
        "s",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "v",
        "s",
        "v",
        "s",
        "v",
        "s",
        "v",
        "s",
        "v",
        "s",
        "v",
        "w",
        "w",
        "v",
        "w",
        "v",
        "v",
        "v",
        "v",
        "s",
        "s",
        "s",
        "s",
        "s",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "scalar",
        "isFinite",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "m",
        "m",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "w",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "w",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "w",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "w",
        "scalar",
        "scalar",
        "q",
        "q",
        "q",
        "q",
        "s",
        "q",
        "s",
        "q",
        "s",
        "q",
        "s",
        "m",
        "m",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "m12",
        "m21",
        "epsilon",
        "m13",
        "m31",
        "epsilon",
        "m23",
        "m32",
        "epsilon",
        "m12",
        "m21",
        "epsilon2",
        "m13",
        "m31",
        "epsilon2",
        "m23",
        "m32",
        "epsilon2",
        "m11",
        "m22",
        "m33",
        "epsilon2",
        "angle",
        "m11",
        "m22",
        "m33",
        "m12",
        "m21",
        "m13",
        "m31",
        "m23",
        "m32",
        "xx",
        "yy",
        "xx",
        "zz",
        "xx",
        "epsilon",
        "x",
        "y",
        "z",
        "x",
        "xx",
        "y",
        "xy",
        "x",
        "z",
        "xz",
        "x",
        "yy",
        "zz",
        "yy",
        "epsilon",
        "x",
        "y",
        "z",
        "y",
        "yy",
        "x",
        "xy",
        "y",
        "z",
        "yz",
        "y",
        "zz",
        "epsilon",
        "x",
        "y",
        "z",
        "z",
        "zz",
        "x",
        "xz",
        "z",
        "y",
        "yz",
        "z",
        "x",
        "y",
        "z",
        "angle",
        "m32",
        "m23",
        "m32",
        "m23",
        "m13",
        "m31",
        "m13",
        "m31",
        "m21",
        "m12",
        "m21",
        "m12",
        "s",
        "s",
        "m32",
        "m23",
        "s",
        "m13",
        "m31",
        "s",
        "m21",
        "m12",
        "s",
        "m11",
        "m22",
        "m33",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "clampScalar",
        "minVal",
        "maxVal",
        "min",
        "min",
        "THREE",
        "max",
        "THREE",
        "min",
        "minVal",
        "minVal",
        "minVal",
        "minVal",
        "max",
        "maxVal",
        "maxVal",
        "maxVal",
        "maxVal",
        "min",
        "max",
        "v",
        "v",
        "v",
        "v",
        "v",
        "length",
        "length",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "v1",
        "v2",
        "alpha",
        "v2",
        "v1",
        "alpha",
        "v1",
        "v",
        "v",
        "v",
        "v",
        "v",
        "array",
        "offset",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "array",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "attribute",
        "index",
        "offset",
        "offset",
        "offset",
        "index",
        "index",
        "attribute",
        "offset",
        "attribute",
        "index",
        "attribute",
        "index",
        "attribute",
        "index",
        "attribute",
        "index",
        "THREE",
        "x",
        "y",
        "z",
        "order",
        "x",
        "y",
        "z",
        "order",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "x",
        "y",
        "z",
        "order",
        "x",
        "y",
        "z",
        "order",
        "euler",
        "euler",
        "euler",
        "euler",
        "euler",
        "m",
        "order",
        "update",
        "THREE",
        "m",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "order",
        "order",
        "order",
        "clamp",
        "m13",
        "m13",
        "m23",
        "m33",
        "m12",
        "m11",
        "m32",
        "m22",
        "order",
        "clamp",
        "m23",
        "m23",
        "m13",
        "m33",
        "m21",
        "m22",
        "m31",
        "m11",
        "order",
        "clamp",
        "m32",
        "m32",
        "m31",
        "m33",
        "m12",
        "m22",
        "m21",
        "m11",
        "order",
        "clamp",
        "m31",
        "m31",
        "m32",
        "m33",
        "m21",
        "m11",
        "m12",
        "m22",
        "order",
        "clamp",
        "m21",
        "m21",
        "m23",
        "m22",
        "m31",
        "m11",
        "m13",
        "m33",
        "order",
        "clamp",
        "m12",
        "m12",
        "m32",
        "m22",
        "m13",
        "m11",
        "m23",
        "m33",
        "order",
        "order",
        "update",
        "q",
        "order",
        "update",
        "matrix",
        "matrix",
        "THREE",
        "matrix",
        "q",
        "matrix",
        "order",
        "update",
        "v",
        "order",
        "v",
        "v",
        "v",
        "order",
        "THREE",
        "newOrder",
        "q",
        "q",
        "newOrder",
        "euler",
        "euler",
        "euler",
        "euler",
        "euler",
        "array",
        "array",
        "array",
        "array",
        "array",
        "array",
        "array",
        "offset",
        "array",
        "array",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "optionalResult",
        "optionalResult",
        "optionalResult",
        "THREE",
        "callback",
        "callback",
        "THREE",
        "start",
        "end",
        "start",
        "start",
        "THREE",
        "end",
        "end",
        "THREE",
        "THREE",
        "THREE",
        "start",
        "end",
        "start",
        "end",
        "line",
        "line",
        "line",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "t",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "t",
        "THREE",
        "THREE",
        "point",
        "clampToLine",
        "startP",
        "point",
        "startEnd",
        "startEnd",
        "startEnd",
        "startEnd",
        "startP",
        "startEnd_startP",
        "startEnd2",
        "clampToLine",
        "t",
        "THREE",
        "t",
        "t",
        "point",
        "clampToLine",
        "optionalTarget",
        "point",
        "clampToLine",
        "optionalTarget",
        "THREE",
        "result",
        "t",
        "matrix",
        "matrix",
        "matrix",
        "line",
        "line",
        "line",
        "THREE",
        "min",
        "max",
        "min",
        "min",
        "THREE",
        "Infinity",
        "Infinity",
        "max",
        "max",
        "THREE",
        "Infinity",
        "Infinity",
        "THREE",
        "THREE",
        "min",
        "max",
        "min",
        "max",
        "points",
        "points",
        "i",
        "il",
        "i",
        "points",
        "i",
        "THREE",
        "center",
        "size",
        "v1",
        "size",
        "center",
        "halfSize",
        "center",
        "halfSize",
        "box",
        "box",
        "box",
        "Infinity",
        "Infinity",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "point",
        "point",
        "point",
        "vector",
        "vector",
        "vector",
        "scalar",
        "scalar",
        "scalar",
        "point",
        "point",
        "point",
        "point",
        "point",
        "box",
        "box",
        "box",
        "box",
        "box",
        "point",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "point",
        "point",
        "box",
        "box",
        "box",
        "box",
        "box",
        "point",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "point",
        "THREE",
        "point",
        "v1",
        "point",
        "clampedPoint",
        "point",
        "box",
        "box",
        "box",
        "box",
        "box",
        "box",
        "offset",
        "offset",
        "offset",
        "box",
        "box",
        "box",
        "THREE",
        "min",
        "max",
        "min",
        "min",
        "THREE",
        "Infinity",
        "Infinity",
        "Infinity",
        "max",
        "max",
        "THREE",
        "Infinity",
        "Infinity",
        "Infinity",
        "THREE",
        "THREE",
        "min",
        "max",
        "min",
        "max",
        "array",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "array",
        "i",
        "il",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "x",
        "minX",
        "minX",
        "x",
        "y",
        "minY",
        "minY",
        "y",
        "z",
        "minZ",
        "minZ",
        "z",
        "x",
        "maxX",
        "maxX",
        "x",
        "y",
        "maxY",
        "maxY",
        "y",
        "z",
        "maxZ",
        "maxZ",
        "z",
        "minX",
        "minY",
        "minZ",
        "maxX",
        "maxY",
        "maxZ",
        "points",
        "points",
        "i",
        "il",
        "i",
        "points",
        "i",
        "THREE",
        "center",
        "size",
        "v1",
        "size",
        "center",
        "halfSize",
        "center",
        "halfSize",
        "box",
        "box",
        "THREE",
        "node",
        "node",
        "geometry",
        "geometry",
        "geometry",
        "box",
        "geometry",
        "box",
        "node",
        "scope",
        "box",
        "box",
        "box",
        "box",
        "Infinity",
        "Infinity",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "point",
        "point",
        "point",
        "vector",
        "vector",
        "vector",
        "scalar",
        "scalar",
        "scalar",
        "point",
        "point",
        "point",
        "point",
        "point",
        "point",
        "point",
        "box",
        "box",
        "box",
        "box",
        "box",
        "box",
        "box",
        "point",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "point",
        "point",
        "point",
        "box",
        "box",
        "box",
        "box",
        "box",
        "box",
        "box",
        "intersectsSphere",
        "sphere",
        "closestPoint",
        "closestPoint",
        "THREE",
        "sphere",
        "closestPoint",
        "closestPoint",
        "sphere",
        "sphere",
        "sphere",
        "plane",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "point",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "point",
        "THREE",
        "point",
        "v1",
        "point",
        "clampedPoint",
        "point",
        "THREE",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "result",
        "v1",
        "result",
        "box",
        "box",
        "box",
        "box",
        "box",
        "box",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "matrix",
        "points",
        "matrix",
        "points",
        "matrix",
        "points",
        "matrix",
        "points",
        "matrix",
        "points",
        "matrix",
        "points",
        "matrix",
        "points",
        "matrix",
        "points",
        "matrix",
        "points",
        "offset",
        "offset",
        "offset",
        "box",
        "box",
        "box",
        "THREE",
        "Float32Array",
        "arguments",
        "THREE",
        "THREE",
        "n11",
        "n12",
        "n13",
        "n21",
        "n22",
        "n23",
        "n31",
        "n32",
        "n33",
        "te",
        "n11",
        "te",
        "n12",
        "te",
        "n13",
        "te",
        "n21",
        "te",
        "n22",
        "te",
        "n23",
        "te",
        "n31",
        "te",
        "n32",
        "te",
        "n33",
        "m",
        "m",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "array",
        "offset",
        "length",
        "v1",
        "v1",
        "THREE",
        "offset",
        "offset",
        "length",
        "length",
        "array",
        "i",
        "length",
        "i",
        "j",
        "v1",
        "array",
        "j",
        "v1",
        "v1",
        "array",
        "j",
        "array",
        "applyToBuffer",
        "buffer",
        "offset",
        "length",
        "v1",
        "v1",
        "THREE",
        "offset",
        "offset",
        "length",
        "length",
        "buffer",
        "buffer",
        "i",
        "length",
        "i",
        "j",
        "v1",
        "buffer",
        "j",
        "v1",
        "buffer",
        "j",
        "v1",
        "buffer",
        "j",
        "v1",
        "buffer",
        "v1",
        "v1",
        "v1",
        "buffer",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "a",
        "e",
        "i",
        "a",
        "f",
        "h",
        "b",
        "d",
        "i",
        "b",
        "f",
        "g",
        "c",
        "d",
        "h",
        "c",
        "e",
        "g",
        "matrix",
        "throwOnDegenerate",
        "matrix",
        "te",
        "me",
        "me",
        "me",
        "me",
        "te",
        "me",
        "me",
        "me",
        "me",
        "te",
        "me",
        "me",
        "me",
        "me",
        "te",
        "me",
        "me",
        "me",
        "me",
        "te",
        "me",
        "me",
        "me",
        "me",
        "te",
        "me",
        "me",
        "me",
        "me",
        "te",
        "me",
        "me",
        "me",
        "me",
        "te",
        "me",
        "me",
        "me",
        "me",
        "te",
        "me",
        "me",
        "me",
        "me",
        "me",
        "te",
        "me",
        "te",
        "me",
        "te",
        "det",
        "throwOnDegenerate",
        "msg",
        "msg",
        "det",
        "tmp",
        "m",
        "m",
        "m",
        "m",
        "tmp",
        "tmp",
        "m",
        "m",
        "m",
        "m",
        "tmp",
        "tmp",
        "m",
        "m",
        "m",
        "m",
        "tmp",
        "array",
        "offset",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "m",
        "m",
        "r",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "array",
        "array",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "THREE",
        "Float32Array",
        "arguments",
        "THREE",
        "THREE",
        "n11",
        "n12",
        "n13",
        "n14",
        "n21",
        "n22",
        "n23",
        "n24",
        "n31",
        "n32",
        "n33",
        "n34",
        "n41",
        "n42",
        "n43",
        "n44",
        "te",
        "n11",
        "te",
        "n12",
        "te",
        "n13",
        "te",
        "n14",
        "te",
        "n21",
        "te",
        "n22",
        "te",
        "n23",
        "te",
        "n24",
        "te",
        "n31",
        "te",
        "n32",
        "te",
        "n33",
        "te",
        "n34",
        "te",
        "n41",
        "te",
        "n42",
        "te",
        "n43",
        "te",
        "n44",
        "THREE",
        "m",
        "m",
        "m",
        "m",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "xAxis",
        "yAxis",
        "zAxis",
        "xAxis",
        "te",
        "te",
        "te",
        "yAxis",
        "te",
        "te",
        "te",
        "zAxis",
        "te",
        "te",
        "te",
        "xAxis",
        "yAxis",
        "zAxis",
        "xAxis",
        "yAxis",
        "zAxis",
        "xAxis",
        "yAxis",
        "zAxis",
        "xAxis",
        "yAxis",
        "zAxis",
        "m",
        "v1",
        "v1",
        "THREE",
        "m",
        "v1",
        "me",
        "me",
        "me",
        "v1",
        "me",
        "me",
        "me",
        "v1",
        "me",
        "me",
        "me",
        "te",
        "me",
        "scaleX",
        "te",
        "me",
        "scaleX",
        "te",
        "me",
        "scaleX",
        "te",
        "me",
        "scaleY",
        "te",
        "me",
        "scaleY",
        "te",
        "me",
        "scaleY",
        "te",
        "me",
        "scaleZ",
        "te",
        "me",
        "scaleZ",
        "te",
        "me",
        "scaleZ",
        "euler",
        "euler",
        "THREE",
        "euler",
        "euler",
        "euler",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "euler",
        "a",
        "e",
        "a",
        "f",
        "b",
        "e",
        "b",
        "f",
        "te",
        "c",
        "e",
        "te",
        "c",
        "f",
        "te",
        "d",
        "te",
        "af",
        "be",
        "d",
        "te",
        "ae",
        "bf",
        "d",
        "te",
        "b",
        "c",
        "te",
        "bf",
        "ae",
        "d",
        "te",
        "be",
        "af",
        "d",
        "te",
        "a",
        "c",
        "euler",
        "c",
        "e",
        "c",
        "f",
        "d",
        "e",
        "d",
        "f",
        "te",
        "ce",
        "df",
        "b",
        "te",
        "de",
        "b",
        "cf",
        "te",
        "a",
        "d",
        "te",
        "a",
        "f",
        "te",
        "a",
        "e",
        "te",
        "b",
        "te",
        "cf",
        "b",
        "de",
        "te",
        "df",
        "ce",
        "b",
        "te",
        "a",
        "c",
        "euler",
        "c",
        "e",
        "c",
        "f",
        "d",
        "e",
        "d",
        "f",
        "te",
        "ce",
        "df",
        "b",
        "te",
        "a",
        "f",
        "te",
        "de",
        "cf",
        "b",
        "te",
        "cf",
        "de",
        "b",
        "te",
        "a",
        "e",
        "te",
        "df",
        "ce",
        "b",
        "te",
        "a",
        "d",
        "te",
        "b",
        "te",
        "a",
        "c",
        "euler",
        "a",
        "e",
        "a",
        "f",
        "b",
        "e",
        "b",
        "f",
        "te",
        "c",
        "e",
        "te",
        "be",
        "d",
        "af",
        "te",
        "ae",
        "d",
        "bf",
        "te",
        "c",
        "f",
        "te",
        "bf",
        "d",
        "ae",
        "te",
        "af",
        "d",
        "be",
        "te",
        "d",
        "te",
        "b",
        "c",
        "te",
        "a",
        "c",
        "euler",
        "a",
        "c",
        "a",
        "d",
        "b",
        "c",
        "b",
        "d",
        "te",
        "c",
        "e",
        "te",
        "bd",
        "ac",
        "f",
        "te",
        "bc",
        "f",
        "ad",
        "te",
        "f",
        "te",
        "a",
        "e",
        "te",
        "b",
        "e",
        "te",
        "d",
        "e",
        "te",
        "ad",
        "f",
        "bc",
        "te",
        "ac",
        "bd",
        "f",
        "euler",
        "a",
        "c",
        "a",
        "d",
        "b",
        "c",
        "b",
        "d",
        "te",
        "c",
        "e",
        "te",
        "f",
        "te",
        "d",
        "e",
        "te",
        "ac",
        "f",
        "bd",
        "te",
        "a",
        "e",
        "te",
        "ad",
        "f",
        "bc",
        "te",
        "bc",
        "f",
        "ad",
        "te",
        "b",
        "e",
        "te",
        "bd",
        "f",
        "ac",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "q",
        "q",
        "q",
        "q",
        "q",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "x",
        "x2",
        "x",
        "y2",
        "x",
        "z2",
        "y",
        "y2",
        "y",
        "z2",
        "z",
        "z2",
        "w",
        "x2",
        "w",
        "y2",
        "w",
        "z2",
        "te",
        "yy",
        "zz",
        "te",
        "xy",
        "wz",
        "te",
        "xz",
        "wy",
        "te",
        "xy",
        "wz",
        "te",
        "xx",
        "zz",
        "te",
        "yz",
        "wx",
        "te",
        "xz",
        "wy",
        "te",
        "yz",
        "wx",
        "te",
        "xx",
        "yy",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "eye",
        "target",
        "up",
        "x",
        "x",
        "THREE",
        "y",
        "y",
        "THREE",
        "z",
        "z",
        "THREE",
        "z",
        "eye",
        "target",
        "z",
        "z",
        "x",
        "up",
        "z",
        "x",
        "z",
        "x",
        "up",
        "z",
        "y",
        "z",
        "x",
        "te",
        "x",
        "te",
        "y",
        "te",
        "z",
        "te",
        "x",
        "te",
        "y",
        "te",
        "z",
        "te",
        "x",
        "te",
        "y",
        "te",
        "z",
        "m",
        "n",
        "n",
        "m",
        "n",
        "m",
        "a",
        "b",
        "a",
        "b",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "te",
        "a11",
        "b11",
        "a12",
        "b21",
        "a13",
        "b31",
        "a14",
        "b41",
        "te",
        "a11",
        "b12",
        "a12",
        "b22",
        "a13",
        "b32",
        "a14",
        "b42",
        "te",
        "a11",
        "b13",
        "a12",
        "b23",
        "a13",
        "b33",
        "a14",
        "b43",
        "te",
        "a11",
        "b14",
        "a12",
        "b24",
        "a13",
        "b34",
        "a14",
        "b44",
        "te",
        "a21",
        "b11",
        "a22",
        "b21",
        "a23",
        "b31",
        "a24",
        "b41",
        "te",
        "a21",
        "b12",
        "a22",
        "b22",
        "a23",
        "b32",
        "a24",
        "b42",
        "te",
        "a21",
        "b13",
        "a22",
        "b23",
        "a23",
        "b33",
        "a24",
        "b43",
        "te",
        "a21",
        "b14",
        "a22",
        "b24",
        "a23",
        "b34",
        "a24",
        "b44",
        "te",
        "a31",
        "b11",
        "a32",
        "b21",
        "a33",
        "b31",
        "a34",
        "b41",
        "te",
        "a31",
        "b12",
        "a32",
        "b22",
        "a33",
        "b32",
        "a34",
        "b42",
        "te",
        "a31",
        "b13",
        "a32",
        "b23",
        "a33",
        "b33",
        "a34",
        "b43",
        "te",
        "a31",
        "b14",
        "a32",
        "b24",
        "a33",
        "b34",
        "a34",
        "b44",
        "te",
        "a41",
        "b11",
        "a42",
        "b21",
        "a43",
        "b31",
        "a44",
        "b41",
        "te",
        "a41",
        "b12",
        "a42",
        "b22",
        "a43",
        "b32",
        "a44",
        "b42",
        "te",
        "a41",
        "b13",
        "a42",
        "b23",
        "a43",
        "b33",
        "a44",
        "b43",
        "te",
        "a41",
        "b14",
        "a42",
        "b24",
        "a43",
        "b34",
        "a44",
        "b44",
        "a",
        "b",
        "r",
        "a",
        "b",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "array",
        "offset",
        "length",
        "v1",
        "v1",
        "THREE",
        "offset",
        "offset",
        "length",
        "length",
        "array",
        "i",
        "length",
        "i",
        "j",
        "v1",
        "array",
        "j",
        "v1",
        "v1",
        "array",
        "j",
        "array",
        "applyToBuffer",
        "buffer",
        "offset",
        "length",
        "v1",
        "v1",
        "THREE",
        "offset",
        "offset",
        "length",
        "length",
        "buffer",
        "buffer",
        "i",
        "length",
        "i",
        "j",
        "v1",
        "buffer",
        "j",
        "v1",
        "buffer",
        "j",
        "v1",
        "buffer",
        "j",
        "v1",
        "buffer",
        "v1",
        "v1",
        "v1",
        "buffer",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "n41",
        "n14",
        "n23",
        "n32",
        "n13",
        "n24",
        "n32",
        "n14",
        "n22",
        "n33",
        "n12",
        "n24",
        "n33",
        "n13",
        "n22",
        "n34",
        "n12",
        "n23",
        "n34",
        "n42",
        "n11",
        "n23",
        "n34",
        "n11",
        "n24",
        "n33",
        "n14",
        "n21",
        "n33",
        "n13",
        "n21",
        "n34",
        "n13",
        "n24",
        "n31",
        "n14",
        "n23",
        "n31",
        "n43",
        "n11",
        "n24",
        "n32",
        "n11",
        "n22",
        "n34",
        "n14",
        "n21",
        "n32",
        "n12",
        "n21",
        "n34",
        "n14",
        "n22",
        "n31",
        "n12",
        "n24",
        "n31",
        "n44",
        "n13",
        "n22",
        "n31",
        "n11",
        "n23",
        "n32",
        "n11",
        "n22",
        "n33",
        "n13",
        "n21",
        "n32",
        "n12",
        "n21",
        "n33",
        "n12",
        "n23",
        "n31",
        "tmp",
        "te",
        "te",
        "te",
        "te",
        "tmp",
        "tmp",
        "te",
        "te",
        "te",
        "te",
        "tmp",
        "tmp",
        "te",
        "te",
        "te",
        "te",
        "tmp",
        "tmp",
        "te",
        "te",
        "te",
        "te",
        "tmp",
        "tmp",
        "te",
        "te",
        "te",
        "te",
        "tmp",
        "tmp",
        "te",
        "te",
        "te",
        "te",
        "tmp",
        "array",
        "offset",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "v1",
        "v1",
        "THREE",
        "v1",
        "te",
        "te",
        "te",
        "v",
        "te",
        "v",
        "te",
        "v",
        "te",
        "v",
        "m",
        "throwOnInvertible",
        "m",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "te",
        "n23",
        "n34",
        "n42",
        "n24",
        "n33",
        "n42",
        "n24",
        "n32",
        "n43",
        "n22",
        "n34",
        "n43",
        "n23",
        "n32",
        "n44",
        "n22",
        "n33",
        "n44",
        "te",
        "n14",
        "n33",
        "n42",
        "n13",
        "n34",
        "n42",
        "n14",
        "n32",
        "n43",
        "n12",
        "n34",
        "n43",
        "n13",
        "n32",
        "n44",
        "n12",
        "n33",
        "n44",
        "te",
        "n13",
        "n24",
        "n42",
        "n14",
        "n23",
        "n42",
        "n14",
        "n22",
        "n43",
        "n12",
        "n24",
        "n43",
        "n13",
        "n22",
        "n44",
        "n12",
        "n23",
        "n44",
        "te",
        "n14",
        "n23",
        "n32",
        "n13",
        "n24",
        "n32",
        "n14",
        "n22",
        "n33",
        "n12",
        "n24",
        "n33",
        "n13",
        "n22",
        "n34",
        "n12",
        "n23",
        "n34",
        "te",
        "n24",
        "n33",
        "n41",
        "n23",
        "n34",
        "n41",
        "n24",
        "n31",
        "n43",
        "n21",
        "n34",
        "n43",
        "n23",
        "n31",
        "n44",
        "n21",
        "n33",
        "n44",
        "te",
        "n13",
        "n34",
        "n41",
        "n14",
        "n33",
        "n41",
        "n14",
        "n31",
        "n43",
        "n11",
        "n34",
        "n43",
        "n13",
        "n31",
        "n44",
        "n11",
        "n33",
        "n44",
        "te",
        "n14",
        "n23",
        "n41",
        "n13",
        "n24",
        "n41",
        "n14",
        "n21",
        "n43",
        "n11",
        "n24",
        "n43",
        "n13",
        "n21",
        "n44",
        "n11",
        "n23",
        "n44",
        "te",
        "n13",
        "n24",
        "n31",
        "n14",
        "n23",
        "n31",
        "n14",
        "n21",
        "n33",
        "n11",
        "n24",
        "n33",
        "n13",
        "n21",
        "n34",
        "n11",
        "n23",
        "n34",
        "te",
        "n22",
        "n34",
        "n41",
        "n24",
        "n32",
        "n41",
        "n24",
        "n31",
        "n42",
        "n21",
        "n34",
        "n42",
        "n22",
        "n31",
        "n44",
        "n21",
        "n32",
        "n44",
        "te",
        "n14",
        "n32",
        "n41",
        "n12",
        "n34",
        "n41",
        "n14",
        "n31",
        "n42",
        "n11",
        "n34",
        "n42",
        "n12",
        "n31",
        "n44",
        "n11",
        "n32",
        "n44",
        "te",
        "n12",
        "n24",
        "n41",
        "n14",
        "n22",
        "n41",
        "n14",
        "n21",
        "n42",
        "n11",
        "n24",
        "n42",
        "n12",
        "n21",
        "n44",
        "n11",
        "n22",
        "n44",
        "te",
        "n14",
        "n22",
        "n31",
        "n12",
        "n24",
        "n31",
        "n14",
        "n21",
        "n32",
        "n11",
        "n24",
        "n32",
        "n12",
        "n21",
        "n34",
        "n11",
        "n22",
        "n34",
        "te",
        "n23",
        "n32",
        "n41",
        "n22",
        "n33",
        "n41",
        "n23",
        "n31",
        "n42",
        "n21",
        "n33",
        "n42",
        "n22",
        "n31",
        "n43",
        "n21",
        "n32",
        "n43",
        "te",
        "n12",
        "n33",
        "n41",
        "n13",
        "n32",
        "n41",
        "n13",
        "n31",
        "n42",
        "n11",
        "n33",
        "n42",
        "n12",
        "n31",
        "n43",
        "n11",
        "n32",
        "n43",
        "te",
        "n13",
        "n22",
        "n41",
        "n12",
        "n23",
        "n41",
        "n13",
        "n21",
        "n42",
        "n11",
        "n23",
        "n42",
        "n12",
        "n21",
        "n43",
        "n11",
        "n22",
        "n43",
        "te",
        "n12",
        "n23",
        "n31",
        "n13",
        "n22",
        "n31",
        "n13",
        "n21",
        "n32",
        "n11",
        "n23",
        "n32",
        "n12",
        "n21",
        "n33",
        "n11",
        "n22",
        "n33",
        "n11",
        "te",
        "n21",
        "te",
        "n31",
        "te",
        "n41",
        "te",
        "det",
        "throwOnInvertible",
        "msg",
        "msg",
        "det",
        "v",
        "v",
        "v",
        "v",
        "te",
        "x",
        "te",
        "y",
        "te",
        "z",
        "te",
        "x",
        "te",
        "y",
        "te",
        "z",
        "te",
        "x",
        "te",
        "y",
        "te",
        "z",
        "te",
        "x",
        "te",
        "y",
        "te",
        "z",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "scaleXSq",
        "scaleYSq",
        "scaleZSq",
        "x",
        "y",
        "z",
        "x",
        "y",
        "z",
        "theta",
        "theta",
        "theta",
        "c",
        "s",
        "s",
        "c",
        "theta",
        "theta",
        "theta",
        "c",
        "s",
        "s",
        "c",
        "theta",
        "theta",
        "theta",
        "c",
        "s",
        "s",
        "c",
        "axis",
        "angle",
        "angle",
        "angle",
        "c",
        "axis",
        "axis",
        "axis",
        "t",
        "x",
        "t",
        "y",
        "tx",
        "x",
        "c",
        "tx",
        "y",
        "s",
        "z",
        "tx",
        "z",
        "s",
        "y",
        "tx",
        "y",
        "s",
        "z",
        "ty",
        "y",
        "c",
        "ty",
        "z",
        "s",
        "x",
        "tx",
        "z",
        "s",
        "y",
        "ty",
        "z",
        "s",
        "x",
        "t",
        "z",
        "z",
        "c",
        "x",
        "y",
        "z",
        "x",
        "y",
        "z",
        "position",
        "quaternion",
        "scale",
        "quaternion",
        "scale",
        "position",
        "position",
        "quaternion",
        "scale",
        "vector",
        "vector",
        "THREE",
        "matrix",
        "matrix",
        "THREE",
        "vector",
        "te",
        "te",
        "te",
        "vector",
        "te",
        "te",
        "te",
        "vector",
        "te",
        "te",
        "te",
        "det",
        "sx",
        "sx",
        "position",
        "te",
        "position",
        "te",
        "position",
        "te",
        "matrix",
        "sx",
        "sy",
        "sz",
        "matrix",
        "invSX",
        "matrix",
        "invSX",
        "matrix",
        "invSX",
        "matrix",
        "invSY",
        "matrix",
        "invSY",
        "matrix",
        "invSY",
        "matrix",
        "invSZ",
        "matrix",
        "invSZ",
        "matrix",
        "invSZ",
        "quaternion",
        "matrix",
        "scale",
        "sx",
        "scale",
        "sy",
        "scale",
        "sz",
        "left",
        "right",
        "bottom",
        "top",
        "near",
        "far",
        "near",
        "right",
        "left",
        "near",
        "top",
        "bottom",
        "right",
        "left",
        "right",
        "left",
        "top",
        "bottom",
        "top",
        "bottom",
        "far",
        "near",
        "far",
        "near",
        "far",
        "near",
        "far",
        "near",
        "te",
        "x",
        "te",
        "te",
        "a",
        "te",
        "te",
        "te",
        "y",
        "te",
        "b",
        "te",
        "te",
        "te",
        "te",
        "c",
        "te",
        "d",
        "te",
        "te",
        "te",
        "te",
        "fov",
        "aspect",
        "near",
        "far",
        "near",
        "THREE",
        "fov",
        "ymax",
        "ymin",
        "aspect",
        "ymax",
        "aspect",
        "xmin",
        "xmax",
        "ymin",
        "ymax",
        "near",
        "far",
        "left",
        "right",
        "top",
        "bottom",
        "near",
        "far",
        "right",
        "left",
        "top",
        "bottom",
        "far",
        "near",
        "right",
        "left",
        "w",
        "top",
        "bottom",
        "h",
        "far",
        "near",
        "p",
        "te",
        "w",
        "te",
        "te",
        "te",
        "x",
        "te",
        "te",
        "h",
        "te",
        "te",
        "y",
        "te",
        "te",
        "te",
        "p",
        "te",
        "z",
        "te",
        "te",
        "te",
        "te",
        "matrix",
        "matrix",
        "i",
        "i",
        "te",
        "i",
        "me",
        "i",
        "array",
        "array",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "THREE",
        "origin",
        "direction",
        "origin",
        "origin",
        "THREE",
        "direction",
        "direction",
        "THREE",
        "THREE",
        "THREE",
        "origin",
        "direction",
        "origin",
        "direction",
        "ray",
        "ray",
        "ray",
        "t",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "t",
        "v",
        "v",
        "THREE",
        "t",
        "t",
        "v1",
        "point",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "point",
        "result",
        "directionDistance",
        "result",
        "result",
        "directionDistance",
        "point",
        "point",
        "THREE",
        "point",
        "v1",
        "point",
        "directionDistance",
        "point",
        "v1",
        "directionDistance",
        "v1",
        "point",
        "THREE",
        "THREE",
        "THREE",
        "v0",
        "v1",
        "optionalPointOnRay",
        "optionalPointOnSegment",
        "segCenter",
        "v0",
        "v1",
        "segDir",
        "v1",
        "v0",
        "diff",
        "segCenter",
        "v0",
        "v1",
        "segDir",
        "diff",
        "diff",
        "segDir",
        "diff",
        "a01",
        "a01",
        "det",
        "s0",
        "a01",
        "b1",
        "b0",
        "s1",
        "a01",
        "b0",
        "b1",
        "extDet",
        "segExtent",
        "det",
        "s0",
        "s1",
        "extDet",
        "s1",
        "extDet",
        "det",
        "s0",
        "invDet",
        "s1",
        "invDet",
        "sqrDist",
        "s0",
        "s0",
        "a01",
        "s1",
        "b0",
        "s1",
        "a01",
        "s0",
        "s1",
        "b1",
        "c",
        "s1",
        "segExtent",
        "s0",
        "a01",
        "s1",
        "b0",
        "sqrDist",
        "s0",
        "s0",
        "s1",
        "s1",
        "b1",
        "c",
        "s1",
        "segExtent",
        "s0",
        "a01",
        "s1",
        "b0",
        "sqrDist",
        "s0",
        "s0",
        "s1",
        "s1",
        "b1",
        "c",
        "s1",
        "extDet",
        "s0",
        "a01",
        "segExtent",
        "b0",
        "s1",
        "s0",
        "segExtent",
        "segExtent",
        "b1",
        "segExtent",
        "sqrDist",
        "s0",
        "s0",
        "s1",
        "s1",
        "b1",
        "c",
        "s1",
        "extDet",
        "s0",
        "s1",
        "segExtent",
        "b1",
        "segExtent",
        "sqrDist",
        "s1",
        "s1",
        "b1",
        "c",
        "s0",
        "a01",
        "segExtent",
        "b0",
        "s1",
        "s0",
        "segExtent",
        "segExtent",
        "b1",
        "segExtent",
        "sqrDist",
        "s0",
        "s0",
        "s1",
        "s1",
        "b1",
        "c",
        "s1",
        "a01",
        "segExtent",
        "segExtent",
        "s0",
        "a01",
        "s1",
        "b0",
        "sqrDist",
        "s0",
        "s0",
        "s1",
        "s1",
        "b1",
        "c",
        "optionalPointOnRay",
        "optionalPointOnRay",
        "s0",
        "optionalPointOnSegment",
        "optionalPointOnSegment",
        "segDir",
        "s1",
        "segCenter",
        "sqrDist",
        "THREE",
        "sphere",
        "optionalTarget",
        "v1",
        "sphere",
        "v1",
        "v1",
        "v1",
        "tca",
        "tca",
        "sphere",
        "sphere",
        "d2",
        "radius2",
        "radius2",
        "d2",
        "tca",
        "thc",
        "tca",
        "thc",
        "t0",
        "t1",
        "t0",
        "t1",
        "optionalTarget",
        "t0",
        "optionalTarget",
        "sphere",
        "sphere",
        "sphere",
        "plane",
        "plane",
        "denominator",
        "plane",
        "plane",
        "plane",
        "denominator",
        "t",
        "t",
        "plane",
        "optionalTarget",
        "plane",
        "t",
        "t",
        "optionalTarget",
        "plane",
        "plane",
        "distToPoint",
        "plane",
        "denominator",
        "distToPoint",
        "box",
        "optionalTarget",
        "invdirx",
        "tmin",
        "box",
        "origin",
        "invdirx",
        "tmax",
        "box",
        "origin",
        "invdirx",
        "tmin",
        "box",
        "origin",
        "invdirx",
        "tmax",
        "box",
        "origin",
        "invdirx",
        "invdiry",
        "tymin",
        "box",
        "origin",
        "invdiry",
        "tymax",
        "box",
        "origin",
        "invdiry",
        "tymin",
        "box",
        "origin",
        "invdiry",
        "tymax",
        "box",
        "origin",
        "invdiry",
        "tmin",
        "tymax",
        "tymin",
        "tmax",
        "tymin",
        "tmin",
        "tmin",
        "tmin",
        "tmin",
        "tymin",
        "tymax",
        "tmax",
        "tmax",
        "tmax",
        "tmax",
        "tymax",
        "invdirz",
        "tzmin",
        "box",
        "origin",
        "invdirz",
        "tzmax",
        "box",
        "origin",
        "invdirz",
        "tzmin",
        "box",
        "origin",
        "invdirz",
        "tzmax",
        "box",
        "origin",
        "invdirz",
        "tmin",
        "tzmax",
        "tzmin",
        "tmax",
        "tzmin",
        "tmin",
        "tmin",
        "tmin",
        "tmin",
        "tzmin",
        "tzmax",
        "tmax",
        "tmax",
        "tmax",
        "tmax",
        "tzmax",
        "tmax",
        "tmin",
        "tmin",
        "tmax",
        "optionalTarget",
        "THREE",
        "box",
        "box",
        "v",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "a",
        "b",
        "c",
        "backfaceCulling",
        "optionalTarget",
        "edge1",
        "b",
        "a",
        "edge2",
        "c",
        "a",
        "normal",
        "edge1",
        "edge2",
        "normal",
        "DdN",
        "backfaceCulling",
        "sign",
        "DdN",
        "sign",
        "DdN",
        "DdN",
        "diff",
        "a",
        "sign",
        "edge2",
        "diff",
        "edge2",
        "DdQxE2",
        "sign",
        "edge1",
        "diff",
        "DdE1xQ",
        "DdQxE2",
        "DdE1xQ",
        "DdN",
        "sign",
        "diff",
        "normal",
        "QdN",
        "QdN",
        "DdN",
        "optionalTarget",
        "matrix4",
        "matrix4",
        "matrix4",
        "ray",
        "ray",
        "ray",
        "THREE",
        "center",
        "radius",
        "center",
        "center",
        "THREE",
        "radius",
        "radius",
        "THREE",
        "THREE",
        "center",
        "radius",
        "center",
        "radius",
        "THREE",
        "points",
        "optionalCenter",
        "optionalCenter",
        "center",
        "optionalCenter",
        "box",
        "points",
        "center",
        "points",
        "i",
        "il",
        "i",
        "maxRadiusSq",
        "maxRadiusSq",
        "center",
        "points",
        "i",
        "maxRadiusSq",
        "sphere",
        "sphere",
        "sphere",
        "point",
        "point",
        "point",
        "point",
        "sphere",
        "sphere",
        "sphere",
        "radiusSum",
        "radiusSum",
        "box",
        "box",
        "plane",
        "plane",
        "plane",
        "point",
        "optionalTarget",
        "point",
        "optionalTarget",
        "THREE",
        "result",
        "point",
        "deltaLengthSq",
        "result",
        "result",
        "result",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "box",
        "box",
        "box",
        "matrix",
        "matrix",
        "matrix",
        "offset",
        "offset",
        "sphere",
        "sphere",
        "sphere",
        "THREE",
        "p0",
        "p1",
        "p2",
        "p3",
        "p4",
        "p5",
        "p0",
        "p0",
        "THREE",
        "p1",
        "p1",
        "THREE",
        "p2",
        "p2",
        "THREE",
        "p3",
        "p3",
        "THREE",
        "p4",
        "p4",
        "THREE",
        "p5",
        "p5",
        "THREE",
        "THREE",
        "THREE",
        "p0",
        "p1",
        "p2",
        "p3",
        "p4",
        "p5",
        "planes",
        "p0",
        "planes",
        "p1",
        "planes",
        "p2",
        "planes",
        "p3",
        "planes",
        "p4",
        "planes",
        "p5",
        "frustum",
        "i",
        "i",
        "planes",
        "i",
        "frustum",
        "i",
        "m",
        "m",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "planes",
        "me3",
        "me0",
        "me7",
        "me4",
        "me11",
        "me8",
        "me15",
        "me12",
        "planes",
        "me3",
        "me0",
        "me7",
        "me4",
        "me11",
        "me8",
        "me15",
        "me12",
        "planes",
        "me3",
        "me1",
        "me7",
        "me5",
        "me11",
        "me9",
        "me15",
        "me13",
        "planes",
        "me3",
        "me1",
        "me7",
        "me5",
        "me11",
        "me9",
        "me15",
        "me13",
        "planes",
        "me3",
        "me2",
        "me7",
        "me6",
        "me11",
        "me10",
        "me15",
        "me14",
        "planes",
        "me3",
        "me2",
        "me7",
        "me6",
        "me11",
        "me10",
        "me15",
        "me14",
        "THREE",
        "geometry",
        "geometry",
        "sphere",
        "geometry",
        "sphere",
        "sphere",
        "sphere",
        "sphere",
        "sphere",
        "i",
        "i",
        "planes",
        "i",
        "center",
        "distance",
        "negRadius",
        "THREE",
        "THREE",
        "box",
        "i",
        "i",
        "planes",
        "i",
        "p1",
        "plane",
        "box",
        "box",
        "p2",
        "plane",
        "box",
        "box",
        "p1",
        "plane",
        "box",
        "box",
        "p2",
        "plane",
        "box",
        "box",
        "p1",
        "plane",
        "box",
        "box",
        "p2",
        "plane",
        "box",
        "box",
        "plane",
        "p1",
        "plane",
        "p2",
        "d1",
        "d2",
        "point",
        "i",
        "i",
        "planes",
        "i",
        "point",
        "THREE",
        "normal",
        "constant",
        "normal",
        "normal",
        "THREE",
        "constant",
        "constant",
        "THREE",
        "THREE",
        "normal",
        "constant",
        "normal",
        "constant",
        "x",
        "y",
        "z",
        "w",
        "x",
        "y",
        "z",
        "w",
        "normal",
        "point",
        "normal",
        "point",
        "THREE",
        "THREE",
        "a",
        "b",
        "c",
        "v1",
        "c",
        "b",
        "v2",
        "a",
        "b",
        "normal",
        "a",
        "plane",
        "plane",
        "plane",
        "inverseNormalLength",
        "inverseNormalLength",
        "point",
        "point",
        "sphere",
        "sphere",
        "sphere",
        "point",
        "optionalTarget",
        "point",
        "optionalTarget",
        "point",
        "point",
        "optionalTarget",
        "point",
        "optionalTarget",
        "THREE",
        "result",
        "perpendicularMagnitude",
        "THREE",
        "line",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "line",
        "v1",
        "direction",
        "denominator",
        "line",
        "result",
        "line",
        "line",
        "denominator",
        "t",
        "t",
        "result",
        "direction",
        "t",
        "line",
        "line",
        "line",
        "line",
        "startSign",
        "endSign",
        "endSign",
        "startSign",
        "box",
        "box",
        "sphere",
        "sphere",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "THREE",
        "THREE",
        "THREE",
        "matrix",
        "optionalNormalMatrix",
        "optionalNormalMatrix",
        "m1",
        "matrix",
        "v1",
        "normalMatrix",
        "v2",
        "newCoplanarPoint",
        "matrix",
        "newNormal",
        "newCoplanarPoint",
        "offset",
        "offset",
        "plane",
        "plane",
        "plane",
        "THREE",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "uuid",
        "i",
        "i",
        "uuid",
        "i",
        "rnd",
        "rnd",
        "r",
        "rnd",
        "rnd",
        "rnd",
        "uuid",
        "i",
        "chars",
        "i",
        "r",
        "r",
        "uuid",
        "value",
        "min",
        "max",
        "min",
        "max",
        "value",
        "n",
        "m",
        "n",
        "m",
        "m",
        "m",
        "x",
        "a1",
        "a2",
        "b1",
        "b2",
        "b1",
        "x",
        "a1",
        "b2",
        "b1",
        "a2",
        "a1",
        "x",
        "min",
        "max",
        "x",
        "min",
        "x",
        "max",
        "x",
        "x",
        "min",
        "max",
        "min",
        "x",
        "x",
        "x",
        "x",
        "min",
        "max",
        "x",
        "min",
        "x",
        "max",
        "x",
        "x",
        "min",
        "max",
        "min",
        "x",
        "x",
        "x",
        "x",
        "x",
        "low",
        "high",
        "low",
        "high",
        "low",
        "low",
        "high",
        "low",
        "high",
        "low",
        "degrees",
        "degrees",
        "degreeToRadiansFactor",
        "radians",
        "radians",
        "radianToDegreesFactor",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "THREE",
        "points",
        "points",
        "a",
        "i",
        "a",
        "i",
        "i",
        "a",
        "i",
        "a",
        "i",
        "a",
        "i",
        "k",
        "point",
        "k",
        "intPoint",
        "point",
        "weight",
        "point",
        "intPoint",
        "c",
        "intPoint",
        "intPoint",
        "intPoint",
        "c",
        "intPoint",
        "c",
        "intPoint",
        "intPoint",
        "c",
        "intPoint",
        "intPoint",
        "pa",
        "c",
        "pb",
        "c",
        "pc",
        "c",
        "pd",
        "c",
        "w2",
        "weight",
        "weight",
        "w3",
        "weight",
        "w2",
        "v3",
        "interpolate",
        "pa",
        "pb",
        "pc",
        "pd",
        "weight",
        "w2",
        "w3",
        "v3",
        "interpolate",
        "pa",
        "pb",
        "pc",
        "pd",
        "weight",
        "w2",
        "w3",
        "v3",
        "interpolate",
        "pa",
        "pb",
        "pc",
        "pd",
        "weight",
        "w2",
        "w3",
        "v3",
        "i",
        "i",
        "l",
        "i",
        "p",
        "i",
        "coords",
        "i",
        "p",
        "p",
        "p",
        "coords",
        "nSubDivisions",
        "THREE",
        "THREE",
        "chunkLengths",
        "nSubDivisions",
        "nSubDivisions",
        "nSamples",
        "nSubDivisions",
        "oldPosition",
        "i",
        "i",
        "nSamples",
        "i",
        "index",
        "i",
        "nSamples",
        "position",
        "index",
        "tmpVec",
        "position",
        "totalLength",
        "tmpVec",
        "oldPosition",
        "oldPosition",
        "position",
        "point",
        "index",
        "intPoint",
        "point",
        "intPoint",
        "oldIntPoint",
        "chunkLengths",
        "intPoint",
        "totalLength",
        "oldIntPoint",
        "intPoint",
        "chunkLengths",
        "chunkLengths",
        "totalLength",
        "chunkLengths",
        "totalLength",
        "samplingCoef",
        "THREE",
        "newpoints",
        "tmpVec",
        "i",
        "i",
        "i",
        "realDistance",
        "sl",
        "i",
        "sl",
        "i",
        "sampling",
        "samplingCoef",
        "realDistance",
        "sl",
        "indexCurrent",
        "i",
        "indexNext",
        "i",
        "j",
        "j",
        "sampling",
        "j",
        "index",
        "indexCurrent",
        "j",
        "sampling",
        "indexNext",
        "indexCurrent",
        "position",
        "index",
        "newpoints",
        "tmpVec",
        "position",
        "newpoints",
        "tmpVec",
        "i",
        "newpoints",
        "p0",
        "p1",
        "p2",
        "p3",
        "t",
        "t2",
        "t3",
        "p2",
        "p0",
        "p3",
        "p1",
        "p1",
        "p2",
        "v0",
        "v1",
        "t3",
        "p1",
        "p2",
        "v0",
        "v1",
        "t2",
        "v0",
        "t",
        "p1",
        "THREE",
        "a",
        "b",
        "c",
        "a",
        "a",
        "THREE",
        "b",
        "b",
        "THREE",
        "c",
        "c",
        "THREE",
        "THREE",
        "THREE",
        "a",
        "b",
        "c",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "c",
        "b",
        "v0",
        "a",
        "b",
        "result",
        "v0",
        "result",
        "resultLengthSq",
        "result",
        "resultLengthSq",
        "result",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "point",
        "a",
        "b",
        "c",
        "optionalTarget",
        "v0",
        "c",
        "a",
        "v1",
        "b",
        "a",
        "v2",
        "point",
        "a",
        "v0",
        "v0",
        "v0",
        "v1",
        "v0",
        "v2",
        "v1",
        "v1",
        "v1",
        "v2",
        "dot00",
        "dot11",
        "dot01",
        "dot01",
        "optionalTarget",
        "THREE",
        "denom",
        "result",
        "denom",
        "dot11",
        "dot02",
        "dot01",
        "dot12",
        "invDenom",
        "dot00",
        "dot12",
        "dot01",
        "dot02",
        "invDenom",
        "result",
        "u",
        "v",
        "v",
        "u",
        "THREE",
        "THREE",
        "point",
        "a",
        "b",
        "c",
        "THREE",
        "point",
        "a",
        "b",
        "c",
        "v1",
        "result",
        "result",
        "result",
        "result",
        "THREE",
        "THREE",
        "a",
        "b",
        "c",
        "a",
        "b",
        "c",
        "points",
        "i0",
        "i1",
        "i2",
        "points",
        "i0",
        "points",
        "i1",
        "points",
        "i2",
        "triangle",
        "triangle",
        "triangle",
        "triangle",
        "THREE",
        "THREE",
        "v0",
        "v1",
        "v0",
        "v1",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "optionalTarget",
        "THREE",
        "optionalTarget",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "point",
        "optionalTarget",
        "THREE",
        "point",
        "optionalTarget",
        "point",
        "THREE",
        "point",
        "triangle",
        "triangle",
        "triangle",
        "triangle",
        "THREE",
        "parameterPositions",
        "sampleValues",
        "sampleSize",
        "resultBuffer",
        "parameterPositions",
        "resultBuffer",
        "resultBuffer",
        "sampleValues",
        "sampleSize",
        "sampleValues",
        "sampleSize",
        "THREE",
        "THREE",
        "t",
        "pp",
        "i1",
        "pp",
        "i1",
        "t",
        "t1",
        "i1",
        "t1",
        "t",
        "t0",
        "i1",
        "pp",
        "i1",
        "i1",
        "t",
        "t0",
        "i1",
        "giveUpAt",
        "t0",
        "t1",
        "t1",
        "pp",
        "i1",
        "t",
        "t1",
        "right",
        "pp",
        "t",
        "t0",
        "pp",
        "t",
        "t1global",
        "i1",
        "t0",
        "t1global",
        "i1",
        "t0",
        "t",
        "t1",
        "i1",
        "giveUpAt",
        "t1",
        "t0",
        "t0",
        "pp",
        "i1",
        "t",
        "t0",
        "right",
        "i1",
        "i1",
        "i1",
        "right",
        "i1",
        "right",
        "t",
        "pp",
        "mid",
        "right",
        "mid",
        "i1",
        "mid",
        "t1",
        "pp",
        "i1",
        "t0",
        "pp",
        "i1",
        "t0",
        "t",
        "t1",
        "t1",
        "i1",
        "pp",
        "i1",
        "i1",
        "t0",
        "t",
        "i1",
        "i1",
        "t0",
        "t1",
        "i1",
        "t0",
        "t",
        "t1",
        "index",
        "index",
        "stride",
        "i",
        "stride",
        "i",
        "result",
        "i",
        "values",
        "offset",
        "i",
        "result",
        "i1",
        "t0",
        "t",
        "t1",
        "i1",
        "t0",
        "t1",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "parameterPositions",
        "sampleValues",
        "sampleSize",
        "resultBuffer",
        "THREE",
        "parameterPositions",
        "sampleValues",
        "sampleSize",
        "resultBuffer",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "i1",
        "t0",
        "t1",
        "i1",
        "i1",
        "pp",
        "iPrev",
        "pp",
        "iNext",
        "tPrev",
        "THREE",
        "iPrev",
        "i1",
        "tPrev",
        "t0",
        "t1",
        "THREE",
        "iPrev",
        "pp",
        "tPrev",
        "t0",
        "pp",
        "iPrev",
        "pp",
        "iPrev",
        "iPrev",
        "i1",
        "tPrev",
        "t1",
        "tNext",
        "THREE",
        "iNext",
        "i1",
        "tNext",
        "t1",
        "t0",
        "THREE",
        "iNext",
        "tNext",
        "t1",
        "pp",
        "pp",
        "iNext",
        "i1",
        "tNext",
        "t0",
        "t1",
        "t0",
        "halfDt",
        "t0",
        "tPrev",
        "halfDt",
        "tNext",
        "t1",
        "iPrev",
        "stride",
        "iNext",
        "stride",
        "i1",
        "t0",
        "t",
        "t1",
        "i1",
        "stride",
        "o1",
        "stride",
        "t",
        "t0",
        "t1",
        "t0",
        "p",
        "p",
        "pp",
        "p",
        "wP",
        "ppp",
        "wP",
        "pp",
        "wP",
        "p",
        "wP",
        "ppp",
        "wP",
        "pp",
        "wP",
        "p",
        "wN",
        "ppp",
        "wN",
        "pp",
        "p",
        "wN",
        "ppp",
        "wN",
        "pp",
        "i",
        "stride",
        "i",
        "result",
        "i",
        "sP",
        "values",
        "oP",
        "i",
        "s0",
        "values",
        "o0",
        "i",
        "s1",
        "values",
        "o1",
        "i",
        "sN",
        "values",
        "oN",
        "i",
        "result",
        "THREE",
        "parameterPositions",
        "sampleValues",
        "sampleSize",
        "resultBuffer",
        "THREE",
        "parameterPositions",
        "sampleValues",
        "sampleSize",
        "resultBuffer",
        "THREE",
        "THREE",
        "THREE",
        "i1",
        "t0",
        "t",
        "t1",
        "i1",
        "THREE",
        "parameterPositions",
        "sampleValues",
        "sampleSize",
        "resultBuffer",
        "THREE",
        "parameterPositions",
        "sampleValues",
        "sampleSize",
        "resultBuffer",
        "THREE",
        "THREE",
        "THREE",
        "i1",
        "t0",
        "t",
        "t1",
        "i1",
        "stride",
        "offset1",
        "stride",
        "t",
        "t0",
        "t1",
        "t0",
        "weight1",
        "i",
        "stride",
        "i",
        "result",
        "i",
        "values",
        "offset0",
        "i",
        "weight0",
        "values",
        "offset1",
        "i",
        "weight1",
        "result",
        "THREE",
        "parameterPositions",
        "sampleValues",
        "sampleSize",
        "resultBuffer",
        "THREE",
        "parameterPositions",
        "sampleValues",
        "sampleSize",
        "resultBuffer",
        "THREE",
        "THREE",
        "THREE",
        "i1",
        "t0",
        "t",
        "t1",
        "i1",
        "stride",
        "t",
        "t0",
        "t1",
        "t0",
        "offset",
        "stride",
        "offset",
        "end",
        "offset",
        "THREE",
        "result",
        "values",
        "offset",
        "stride",
        "values",
        "offset",
        "alpha",
        "result",
        "THREE",
        "autoStart",
        "autoStart",
        "autoStart",
        "THREE",
        "THREE",
        "performance",
        "performance",
        "diff",
        "newTime",
        "newTime",
        "diff",
        "diff",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "listener",
        "listeners",
        "listeners",
        "listeners",
        "listener",
        "listeners",
        "listener",
        "listener",
        "listeners",
        "listeners",
        "listener",
        "listener",
        "listeners",
        "listenerArray",
        "listenerArray",
        "listener",
        "index",
        "listenerArray",
        "index",
        "listeners",
        "listenerArray",
        "listenerArray",
        "i",
        "length",
        "i",
        "array",
        "i",
        "listenerArray",
        "i",
        "i",
        "length",
        "i",
        "array",
        "i",
        "THREE",
        "THREE",
        "THREE",
        "channel",
        "channel",
        "channel",
        "channel",
        "channel",
        "channel",
        "channel",
        "channel",
        "layers",
        "layers",
        "THREE",
        "THREE",
        "origin",
        "direction",
        "near",
        "far",
        "THREE",
        "origin",
        "direction",
        "near",
        "far",
        "Infinity",
        "a",
        "b",
        "a",
        "b",
        "raycaster",
        "intersects",
        "recursive",
        "raycaster",
        "intersects",
        "recursive",
        "children",
        "i",
        "l",
        "i",
        "intersectObject",
        "children",
        "i",
        "raycaster",
        "intersects",
        "THREE",
        "THREE",
        "origin",
        "direction",
        "origin",
        "direction",
        "coords",
        "camera",
        "camera",
        "THREE",
        "camera",
        "coords",
        "coords",
        "camera",
        "camera",
        "THREE",
        "coords",
        "coords",
        "camera",
        "camera",
        "recursive",
        "intersectObject",
        "intersects",
        "recursive",
        "intersects",
        "ascSort",
        "intersects",
        "objects",
        "recursive",
        "objects",
        "intersects",
        "objects",
        "i",
        "l",
        "i",
        "intersectObject",
        "objects",
        "i",
        "intersects",
        "recursive",
        "intersects",
        "ascSort",
        "intersects",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "quaternion",
        "rotation",
        "rotation",
        "quaternion",
        "rotation",
        "onRotationChange",
        "quaternion",
        "onQuaternionChange",
        "position",
        "rotation",
        "quaternion",
        "scale",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "matrix",
        "matrix",
        "axis",
        "angle",
        "axis",
        "angle",
        "euler",
        "euler",
        "m",
        "m",
        "q",
        "q",
        "THREE",
        "axis",
        "angle",
        "q1",
        "axis",
        "angle",
        "q1",
        "THREE",
        "angle",
        "v1",
        "angle",
        "THREE",
        "angle",
        "v1",
        "angle",
        "THREE",
        "angle",
        "v1",
        "angle",
        "THREE",
        "axis",
        "distance",
        "v1",
        "axis",
        "v1",
        "distance",
        "THREE",
        "distance",
        "v1",
        "distance",
        "THREE",
        "distance",
        "v1",
        "distance",
        "THREE",
        "distance",
        "v1",
        "distance",
        "vector",
        "vector",
        "THREE",
        "vector",
        "vector",
        "m1",
        "THREE",
        "vector",
        "m1",
        "vector",
        "m1",
        "arguments",
        "i",
        "arguments",
        "i",
        "arguments",
        "i",
        "THREE",
        "arguments",
        "i",
        "arguments",
        "i",
        "arguments",
        "i",
        "index",
        "index",
        "id",
        "id",
        "name",
        "name",
        "name",
        "value",
        "name",
        "value",
        "i",
        "l",
        "i",
        "i",
        "child",
        "name",
        "value",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "THREE",
        "THREE",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "position",
        "result",
        "scale",
        "result",
        "THREE",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "quaternion",
        "result",
        "quaternion",
        "THREE",
        "THREE",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "position",
        "quaternion",
        "result",
        "result",
        "THREE",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "quaternion",
        "result",
        "quaternion",
        "callback",
        "callback",
        "children",
        "i",
        "l",
        "i",
        "children",
        "i",
        "callback",
        "callback",
        "callback",
        "children",
        "i",
        "l",
        "i",
        "children",
        "i",
        "callback",
        "callback",
        "parent",
        "callback",
        "parent",
        "parent",
        "callback",
        "force",
        "force",
        "force",
        "i",
        "l",
        "i",
        "i",
        "force",
        "meta",
        "meta",
        "isRootObject",
        "meta",
        "output",
        "meta",
        "meta",
        "meta",
        "meta",
        "meta",
        "meta",
        "i",
        "i",
        "i",
        "meta",
        "isRootObject",
        "extractFromCache",
        "meta",
        "extractFromCache",
        "meta",
        "extractFromCache",
        "meta",
        "extractFromCache",
        "meta",
        "geometries",
        "output",
        "geometries",
        "materials",
        "output",
        "materials",
        "textures",
        "output",
        "textures",
        "images",
        "output",
        "images",
        "output",
        "output",
        "cache",
        "key",
        "cache",
        "cache",
        "key",
        "data",
        "values",
        "data",
        "values",
        "recursive",
        "recursive",
        "source",
        "recursive",
        "recursive",
        "recursive",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "recursive",
        "i",
        "source",
        "i",
        "source",
        "i",
        "child",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "a",
        "b",
        "c",
        "normal",
        "color",
        "materialIndex",
        "a",
        "b",
        "c",
        "normal",
        "THREE",
        "normal",
        "THREE",
        "normal",
        "normal",
        "color",
        "THREE",
        "color",
        "THREE",
        "color",
        "color",
        "materialIndex",
        "materialIndex",
        "THREE",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "i",
        "il",
        "i",
        "i",
        "source",
        "i",
        "source",
        "i",
        "il",
        "i",
        "i",
        "source",
        "i",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "THREE",
        "value",
        "value",
        "value",
        "value",
        "source",
        "source",
        "source",
        "source",
        "source",
        "index1",
        "attribute",
        "index2",
        "index1",
        "index2",
        "attribute",
        "i",
        "l",
        "i",
        "index1",
        "i",
        "attribute",
        "index2",
        "i",
        "array",
        "array",
        "colors",
        "colors",
        "i",
        "l",
        "i",
        "colors",
        "i",
        "color",
        "i",
        "color",
        "THREE",
        "array",
        "offset",
        "color",
        "array",
        "offset",
        "color",
        "array",
        "offset",
        "color",
        "indices",
        "indices",
        "i",
        "l",
        "i",
        "indices",
        "i",
        "array",
        "offset",
        "index",
        "array",
        "offset",
        "index",
        "array",
        "offset",
        "index",
        "vectors",
        "vectors",
        "i",
        "l",
        "i",
        "vectors",
        "i",
        "vector",
        "i",
        "vector",
        "THREE",
        "array",
        "offset",
        "vector",
        "array",
        "offset",
        "vector",
        "vectors",
        "vectors",
        "i",
        "l",
        "i",
        "vectors",
        "i",
        "vector",
        "i",
        "vector",
        "THREE",
        "array",
        "offset",
        "vector",
        "array",
        "offset",
        "vector",
        "array",
        "offset",
        "vector",
        "vectors",
        "vectors",
        "i",
        "l",
        "i",
        "vectors",
        "i",
        "vector",
        "i",
        "vector",
        "THREE",
        "array",
        "offset",
        "vector",
        "array",
        "offset",
        "vector",
        "array",
        "offset",
        "vector",
        "array",
        "offset",
        "vector",
        "value",
        "offset",
        "offset",
        "offset",
        "value",
        "offset",
        "index",
        "index",
        "index",
        "x",
        "index",
        "x",
        "index",
        "index",
        "index",
        "y",
        "index",
        "y",
        "index",
        "index",
        "index",
        "z",
        "index",
        "z",
        "index",
        "index",
        "index",
        "w",
        "index",
        "w",
        "index",
        "x",
        "y",
        "index",
        "index",
        "x",
        "index",
        "y",
        "index",
        "x",
        "y",
        "z",
        "index",
        "index",
        "x",
        "index",
        "y",
        "index",
        "z",
        "index",
        "x",
        "y",
        "z",
        "w",
        "index",
        "index",
        "x",
        "index",
        "y",
        "index",
        "z",
        "index",
        "w",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "Int8Array",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "Uint8Array",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "Uint8ClampedArray",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "Int16Array",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "Uint16Array",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "Int32Array",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "Uint32Array",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "Float32Array",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "Float64Array",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "meshPerAttribute",
        "THREE",
        "array",
        "itemSize",
        "meshPerAttribute",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "THREE",
        "array",
        "stride",
        "THREE",
        "array",
        "stride",
        "THREE",
        "THREE",
        "value",
        "value",
        "value",
        "value",
        "source",
        "source",
        "source",
        "source",
        "source",
        "index1",
        "attribute",
        "index2",
        "index1",
        "index2",
        "attribute",
        "i",
        "l",
        "i",
        "index1",
        "i",
        "attribute",
        "index2",
        "i",
        "value",
        "offset",
        "offset",
        "offset",
        "value",
        "offset",
        "THREE",
        "array",
        "stride",
        "meshPerAttribute",
        "THREE",
        "array",
        "stride",
        "meshPerAttribute",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "THREE",
        "interleavedBuffer",
        "itemSize",
        "offset",
        "THREE",
        "interleavedBuffer",
        "itemSize",
        "offset",
        "THREE",
        "THREE",
        "index",
        "x",
        "index",
        "x",
        "index",
        "y",
        "index",
        "y",
        "index",
        "z",
        "index",
        "z",
        "index",
        "w",
        "index",
        "w",
        "index",
        "index",
        "index",
        "index",
        "index",
        "index",
        "index",
        "index",
        "index",
        "x",
        "y",
        "index",
        "index",
        "index",
        "x",
        "index",
        "y",
        "index",
        "x",
        "y",
        "z",
        "index",
        "index",
        "index",
        "x",
        "index",
        "y",
        "index",
        "z",
        "index",
        "x",
        "y",
        "z",
        "w",
        "index",
        "index",
        "index",
        "x",
        "index",
        "y",
        "index",
        "z",
        "index",
        "w",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "matrix",
        "THREE",
        "matrix",
        "i",
        "il",
        "i",
        "i",
        "vertex",
        "matrix",
        "i",
        "il",
        "i",
        "i",
        "face",
        "normalMatrix",
        "face",
        "j",
        "jl",
        "j",
        "face",
        "j",
        "normalMatrix",
        "rotateX",
        "angle",
        "m1",
        "m1",
        "THREE",
        "m1",
        "angle",
        "m1",
        "rotateY",
        "angle",
        "m1",
        "m1",
        "THREE",
        "m1",
        "angle",
        "m1",
        "rotateZ",
        "angle",
        "m1",
        "m1",
        "THREE",
        "m1",
        "angle",
        "m1",
        "translate",
        "x",
        "y",
        "z",
        "m1",
        "m1",
        "THREE",
        "m1",
        "x",
        "y",
        "z",
        "m1",
        "scale",
        "x",
        "y",
        "z",
        "m1",
        "m1",
        "THREE",
        "m1",
        "x",
        "y",
        "z",
        "m1",
        "lookAt",
        "vector",
        "obj",
        "obj",
        "THREE",
        "obj",
        "vector",
        "obj",
        "obj",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "attributes",
        "attributes",
        "attributes",
        "attributes",
        "attributes",
        "attributes",
        "attributes",
        "attributes",
        "attributes",
        "uvs2",
        "i",
        "positions",
        "i",
        "j",
        "scope",
        "THREE",
        "positions",
        "i",
        "positions",
        "i",
        "positions",
        "i",
        "normals",
        "tempNormals",
        "THREE",
        "normals",
        "i",
        "normals",
        "i",
        "normals",
        "i",
        "colors",
        "scope",
        "THREE",
        "colors",
        "i",
        "colors",
        "i",
        "colors",
        "i",
        "uvs",
        "tempUVs",
        "THREE",
        "uvs",
        "j",
        "uvs",
        "j",
        "uvs2",
        "tempUVs2",
        "THREE",
        "uvs2",
        "j",
        "uvs2",
        "j",
        "a",
        "b",
        "c",
        "normals",
        "tempNormals",
        "a",
        "tempNormals",
        "b",
        "tempNormals",
        "c",
        "colors",
        "scope",
        "a",
        "scope",
        "b",
        "scope",
        "c",
        "THREE",
        "a",
        "b",
        "c",
        "vertexNormals",
        "vertexColors",
        "scope",
        "face",
        "uvs",
        "scope",
        "tempUVs",
        "a",
        "tempUVs",
        "b",
        "tempUVs",
        "c",
        "uvs2",
        "scope",
        "tempUVs2",
        "a",
        "tempUVs2",
        "b",
        "tempUVs2",
        "c",
        "indices",
        "geometry",
        "groups",
        "i",
        "groups",
        "i",
        "groups",
        "i",
        "group",
        "group",
        "start",
        "count",
        "j",
        "jl",
        "j",
        "addFace",
        "indices",
        "j",
        "indices",
        "j",
        "indices",
        "j",
        "i",
        "indices",
        "i",
        "addFace",
        "indices",
        "i",
        "indices",
        "i",
        "indices",
        "i",
        "i",
        "positions",
        "i",
        "addFace",
        "i",
        "i",
        "i",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "offset",
        "offset",
        "offset",
        "offset",
        "radius",
        "radius",
        "THREE",
        "matrix",
        "s",
        "s",
        "center",
        "s",
        "s",
        "center",
        "s",
        "s",
        "center",
        "matrix",
        "THREE",
        "THREE",
        "f",
        "fl",
        "f",
        "f",
        "face",
        "face",
        "face",
        "cb",
        "vC",
        "vB",
        "ab",
        "vA",
        "vB",
        "cb",
        "ab",
        "cb",
        "face",
        "cb",
        "areaWeighted",
        "areaWeighted",
        "areaWeighted",
        "vertices",
        "v",
        "vl",
        "v",
        "vl",
        "v",
        "vertices",
        "v",
        "THREE",
        "areaWeighted",
        "THREE",
        "THREE",
        "f",
        "fl",
        "f",
        "fl",
        "f",
        "face",
        "f",
        "vA",
        "face",
        "vB",
        "face",
        "vC",
        "face",
        "cb",
        "vC",
        "vB",
        "ab",
        "vA",
        "vB",
        "cb",
        "ab",
        "vertices",
        "face",
        "cb",
        "vertices",
        "face",
        "cb",
        "vertices",
        "face",
        "cb",
        "f",
        "fl",
        "f",
        "fl",
        "f",
        "face",
        "f",
        "vertices",
        "face",
        "face",
        "vertices",
        "face",
        "face",
        "vertices",
        "face",
        "face",
        "v",
        "vl",
        "v",
        "vl",
        "v",
        "vertices",
        "v",
        "f",
        "fl",
        "f",
        "fl",
        "f",
        "face",
        "f",
        "face",
        "vertexNormals",
        "vertexNormals",
        "vertices",
        "face",
        "vertexNormals",
        "vertices",
        "face",
        "vertexNormals",
        "vertices",
        "face",
        "vertexNormals",
        "vertices",
        "face",
        "vertexNormals",
        "vertices",
        "face",
        "vertexNormals",
        "vertices",
        "face",
        "f",
        "fl",
        "f",
        "fl",
        "f",
        "face",
        "f",
        "face",
        "face",
        "face",
        "face",
        "face",
        "face",
        "face",
        "i",
        "il",
        "face",
        "i",
        "il",
        "i",
        "face",
        "i",
        "face",
        "i",
        "face",
        "i",
        "face",
        "i",
        "face",
        "i",
        "THREE",
        "tmpGeo",
        "i",
        "il",
        "i",
        "il",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "f",
        "fl",
        "f",
        "fl",
        "f",
        "faceNormal",
        "THREE",
        "vertexNormals",
        "THREE",
        "THREE",
        "THREE",
        "dstNormalsFace",
        "faceNormal",
        "dstNormalsVertex",
        "vertexNormals",
        "i",
        "tmpGeo",
        "i",
        "tmpGeo",
        "tmpGeo",
        "f",
        "fl",
        "f",
        "fl",
        "f",
        "face",
        "f",
        "faceNormal",
        "morphNormals",
        "f",
        "vertexNormals",
        "morphNormals",
        "f",
        "faceNormal",
        "face",
        "vertexNormals",
        "face",
        "vertexNormals",
        "face",
        "vertexNormals",
        "face",
        "f",
        "fl",
        "f",
        "fl",
        "f",
        "face",
        "f",
        "face",
        "face",
        "face",
        "face",
        "vertices",
        "i",
        "il",
        "i",
        "i",
        "d",
        "vertices",
        "i",
        "vertices",
        "i",
        "i",
        "d",
        "THREE",
        "THREE",
        "geometry",
        "matrix",
        "materialIndexOffset",
        "geometry",
        "THREE",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "materialIndexOffset",
        "materialIndexOffset",
        "matrix",
        "normalMatrix",
        "THREE",
        "matrix",
        "vertices2",
        "i",
        "il",
        "i",
        "vertices2",
        "i",
        "vertex",
        "matrix",
        "vertexCopy",
        "matrix",
        "vertices1",
        "vertexCopy",
        "i",
        "il",
        "faces2",
        "i",
        "il",
        "i",
        "faces2",
        "i",
        "face",
        "face",
        "faceCopy",
        "THREE",
        "face",
        "vertexOffset",
        "face",
        "vertexOffset",
        "face",
        "vertexOffset",
        "faceCopy",
        "face",
        "normalMatrix",
        "faceCopy",
        "normalMatrix",
        "faceVertexNormals",
        "j",
        "jl",
        "j",
        "normal",
        "faceVertexNormals",
        "j",
        "normalMatrix",
        "normal",
        "normalMatrix",
        "faceCopy",
        "normal",
        "faceCopy",
        "face",
        "faceVertexColors",
        "j",
        "jl",
        "j",
        "color",
        "faceVertexColors",
        "j",
        "faceCopy",
        "color",
        "faceCopy",
        "face",
        "materialIndexOffset",
        "faces1",
        "faceCopy",
        "i",
        "il",
        "uvs2",
        "i",
        "il",
        "i",
        "uvs2",
        "i",
        "uv",
        "uv",
        "j",
        "jl",
        "j",
        "uvCopy",
        "uv",
        "j",
        "uvs1",
        "uvCopy",
        "mesh",
        "mesh",
        "THREE",
        "mesh",
        "mesh",
        "mesh",
        "mesh",
        "mesh",
        "precisionPoints",
        "i",
        "il",
        "i",
        "il",
        "i",
        "v",
        "i",
        "key",
        "v",
        "precision",
        "v",
        "precision",
        "v",
        "precision",
        "verticesMap",
        "key",
        "verticesMap",
        "key",
        "i",
        "unique",
        "i",
        "changes",
        "i",
        "unique",
        "changes",
        "i",
        "changes",
        "verticesMap",
        "key",
        "i",
        "il",
        "i",
        "il",
        "i",
        "face",
        "i",
        "face",
        "changes",
        "face",
        "face",
        "changes",
        "face",
        "face",
        "changes",
        "face",
        "indices",
        "face",
        "face",
        "face",
        "n",
        "n",
        "indices",
        "n",
        "indices",
        "n",
        "dupIndex",
        "n",
        "faceIndicesToRemove",
        "i",
        "i",
        "faceIndicesToRemove",
        "i",
        "i",
        "faceIndicesToRemove",
        "i",
        "idx",
        "j",
        "jl",
        "j",
        "jl",
        "j",
        "j",
        "idx",
        "unique",
        "unique",
        "diff",
        "faces",
        "i",
        "length",
        "i",
        "faces",
        "i",
        "i",
        "a",
        "b",
        "a",
        "b",
        "faces",
        "materialIndexSort",
        "uvs1",
        "uvs1",
        "length",
        "newUvs1",
        "uvs2",
        "uvs2",
        "length",
        "newUvs2",
        "i",
        "length",
        "i",
        "faces",
        "i",
        "newUvs1",
        "newUvs1",
        "uvs1",
        "id",
        "newUvs2",
        "newUvs2",
        "uvs2",
        "id",
        "newUvs1",
        "newUvs1",
        "newUvs2",
        "newUvs2",
        "data",
        "data",
        "data",
        "key",
        "parameters",
        "parameters",
        "key",
        "data",
        "key",
        "parameters",
        "key",
        "data",
        "i",
        "i",
        "i",
        "vertices",
        "vertex",
        "vertex",
        "vertex",
        "i",
        "i",
        "i",
        "i",
        "face",
        "face",
        "face",
        "face",
        "face",
        "face",
        "faceType",
        "setBit",
        "faceType",
        "faceType",
        "setBit",
        "faceType",
        "hasMaterial",
        "faceType",
        "setBit",
        "faceType",
        "hasFaceUv",
        "faceType",
        "setBit",
        "faceType",
        "hasFaceVertexUv",
        "faceType",
        "setBit",
        "faceType",
        "hasFaceNormal",
        "faceType",
        "setBit",
        "faceType",
        "hasFaceVertexNormal",
        "faceType",
        "setBit",
        "faceType",
        "hasFaceColor",
        "faceType",
        "setBit",
        "faceType",
        "hasFaceVertexColor",
        "faces",
        "faceType",
        "faces",
        "face",
        "face",
        "face",
        "faces",
        "face",
        "hasFaceVertexUv",
        "i",
        "faces",
        "getUvIndex",
        "faceVertexUvs",
        "getUvIndex",
        "faceVertexUvs",
        "getUvIndex",
        "faceVertexUvs",
        "hasFaceNormal",
        "faces",
        "getNormalIndex",
        "face",
        "hasFaceVertexNormal",
        "face",
        "faces",
        "getNormalIndex",
        "vertexNormals",
        "getNormalIndex",
        "vertexNormals",
        "getNormalIndex",
        "vertexNormals",
        "hasFaceColor",
        "faces",
        "getColorIndex",
        "face",
        "hasFaceVertexColor",
        "face",
        "faces",
        "getColorIndex",
        "vertexColors",
        "getColorIndex",
        "vertexColors",
        "getColorIndex",
        "vertexColors",
        "value",
        "position",
        "enabled",
        "enabled",
        "value",
        "position",
        "value",
        "position",
        "normal",
        "normal",
        "normal",
        "normal",
        "normalsHash",
        "hash",
        "normalsHash",
        "hash",
        "normalsHash",
        "hash",
        "normals",
        "normals",
        "normal",
        "normal",
        "normal",
        "normalsHash",
        "hash",
        "color",
        "color",
        "color",
        "color",
        "colorsHash",
        "hash",
        "colorsHash",
        "hash",
        "colorsHash",
        "hash",
        "colors",
        "colors",
        "color",
        "colorsHash",
        "hash",
        "uv",
        "uv",
        "uv",
        "uvsHash",
        "hash",
        "uvsHash",
        "hash",
        "uvsHash",
        "hash",
        "uvs",
        "uvs",
        "uv",
        "uv",
        "uvsHash",
        "hash",
        "data",
        "data",
        "vertices",
        "data",
        "normals",
        "colors",
        "data",
        "colors",
        "uvs",
        "data",
        "uvs",
        "data",
        "faces",
        "data",
        "THREE",
        "source",
        "source",
        "vertices",
        "i",
        "il",
        "i",
        "vertices",
        "i",
        "source",
        "faces",
        "i",
        "il",
        "i",
        "faces",
        "i",
        "source",
        "i",
        "il",
        "i",
        "source",
        "i",
        "i",
        "i",
        "faceVertexUvs",
        "j",
        "jl",
        "j",
        "faceVertexUvs",
        "j",
        "uvs",
        "k",
        "kl",
        "k",
        "uvs",
        "k",
        "uvsCopy",
        "uv",
        "i",
        "uvsCopy",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "geometry",
        "geometry",
        "i",
        "faces",
        "i",
        "faces",
        "i",
        "face",
        "materialIndex",
        "materialIndex",
        "face",
        "group",
        "group",
        "i",
        "group",
        "groups",
        "group",
        "group",
        "i",
        "materialIndex",
        "group",
        "group",
        "i",
        "group",
        "groups",
        "group",
        "groups",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "faceVertexUvs",
        "faceVertexUvs",
        "faceVertexUvs",
        "faceVertexUvs",
        "geometry",
        "morphTargets",
        "morphTargetsLength",
        "morphTargetsPosition",
        "i",
        "morphTargetsLength",
        "i",
        "morphTargetsPosition",
        "i",
        "morphTargetsPosition",
        "geometry",
        "morphNormals",
        "morphNormalsLength",
        "morphTargetsNormal",
        "i",
        "morphNormalsLength",
        "i",
        "morphTargetsNormal",
        "i",
        "morphTargetsNormal",
        "geometry",
        "geometry",
        "skinIndices",
        "vertices",
        "skinWeights",
        "vertices",
        "i",
        "faces",
        "i",
        "faces",
        "i",
        "vertices",
        "face",
        "vertices",
        "face",
        "vertices",
        "face",
        "face",
        "vertexNormals",
        "vertexNormals",
        "vertexNormals",
        "vertexNormals",
        "face",
        "normal",
        "normal",
        "normal",
        "face",
        "vertexColors",
        "vertexColors",
        "vertexColors",
        "vertexColors",
        "face",
        "color",
        "color",
        "color",
        "hasFaceVertexUv",
        "faceVertexUvs",
        "i",
        "vertexUvs",
        "vertexUvs",
        "vertexUvs",
        "vertexUvs",
        "i",
        "THREE",
        "THREE",
        "THREE",
        "hasFaceVertexUv2",
        "faceVertexUvs",
        "i",
        "vertexUvs",
        "vertexUvs",
        "vertexUvs",
        "vertexUvs",
        "i",
        "THREE",
        "THREE",
        "THREE",
        "j",
        "morphTargetsLength",
        "j",
        "morphTargets",
        "j",
        "morphTargetsPosition",
        "j",
        "morphTarget",
        "face",
        "morphTarget",
        "face",
        "morphTarget",
        "face",
        "j",
        "morphNormalsLength",
        "j",
        "morphNormals",
        "j",
        "i",
        "morphTargetsNormal",
        "j",
        "morphNormal",
        "morphNormal",
        "morphNormal",
        "hasSkinIndices",
        "skinIndices",
        "face",
        "skinIndices",
        "face",
        "skinIndices",
        "face",
        "hasSkinWeights",
        "skinWeights",
        "face",
        "skinWeights",
        "face",
        "skinWeights",
        "face",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "Infinity",
        "THREE",
        "THREE",
        "index",
        "index",
        "name",
        "attribute",
        "attribute",
        "THREE",
        "attribute",
        "THREE",
        "name",
        "THREE",
        "arguments",
        "arguments",
        "name",
        "attribute",
        "name",
        "attribute",
        "name",
        "name",
        "name",
        "name",
        "start",
        "count",
        "materialIndex",
        "start",
        "count",
        "materialIndex",
        "materialIndex",
        "start",
        "count",
        "start",
        "count",
        "matrix",
        "position",
        "matrix",
        "position",
        "position",
        "normal",
        "THREE",
        "matrix",
        "normalMatrix",
        "normal",
        "normal",
        "rotateX",
        "angle",
        "m1",
        "m1",
        "THREE",
        "m1",
        "angle",
        "m1",
        "rotateY",
        "angle",
        "m1",
        "m1",
        "THREE",
        "m1",
        "angle",
        "m1",
        "rotateZ",
        "angle",
        "m1",
        "m1",
        "THREE",
        "m1",
        "angle",
        "m1",
        "translate",
        "x",
        "y",
        "z",
        "m1",
        "m1",
        "THREE",
        "m1",
        "x",
        "y",
        "z",
        "m1",
        "scale",
        "x",
        "y",
        "z",
        "m1",
        "m1",
        "THREE",
        "m1",
        "x",
        "y",
        "z",
        "m1",
        "lookAt",
        "vector",
        "obj",
        "obj",
        "THREE",
        "obj",
        "vector",
        "obj",
        "obj",
        "offset",
        "offset",
        "offset",
        "offset",
        "THREE",
        "THREE",
        "THREE",
        "geometry",
        "THREE",
        "geometry",
        "positions",
        "geometry",
        "colors",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "THREE",
        "geometry",
        "lineDistances",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "THREE",
        "geometry",
        "THREE",
        "geometry",
        "THREE",
        "geometry",
        "direct",
        "geometry",
        "direct",
        "geometry",
        "direct",
        "geometry",
        "direct",
        "geometry",
        "direct",
        "geometry",
        "direct",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "direct",
        "geometry",
        "attribute",
        "attribute",
        "geometry",
        "attribute",
        "geometry",
        "geometry",
        "attribute",
        "attribute",
        "geometry",
        "attribute",
        "geometry",
        "geometry",
        "attribute",
        "attribute",
        "geometry",
        "attribute",
        "geometry",
        "geometry",
        "attribute",
        "attribute",
        "geometry",
        "attribute",
        "geometry",
        "geometry",
        "attribute",
        "attribute",
        "geometry",
        "attribute",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "THREE",
        "geometry",
        "geometry",
        "geometry",
        "Float32Array",
        "geometry",
        "THREE",
        "positions",
        "geometry",
        "geometry",
        "Float32Array",
        "geometry",
        "THREE",
        "normals",
        "geometry",
        "geometry",
        "Float32Array",
        "geometry",
        "THREE",
        "colors",
        "geometry",
        "geometry",
        "Float32Array",
        "geometry",
        "THREE",
        "uvs",
        "geometry",
        "geometry",
        "Float32Array",
        "geometry",
        "THREE",
        "uvs2",
        "geometry",
        "geometry",
        "geometry",
        "Uint32Array",
        "Uint16Array",
        "TypeArray",
        "geometry",
        "THREE",
        "indices",
        "geometry",
        "geometry",
        "name",
        "geometry",
        "geometry",
        "name",
        "morphTargets",
        "i",
        "l",
        "i",
        "morphTargets",
        "i",
        "THREE",
        "morphTarget",
        "array",
        "attribute",
        "morphTarget",
        "name",
        "array",
        "geometry",
        "THREE",
        "geometry",
        "skinIndices",
        "geometry",
        "geometry",
        "THREE",
        "geometry",
        "skinWeights",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "THREE",
        "THREE",
        "positions",
        "positions",
        "positions",
        "positions",
        "isNaN",
        "isNaN",
        "isNaN",
        "THREE",
        "THREE",
        "THREE",
        "positions",
        "box",
        "positions",
        "box",
        "center",
        "positions",
        "i",
        "il",
        "i",
        "vector",
        "positions",
        "i",
        "maxRadiusSq",
        "maxRadiusSq",
        "center",
        "vector",
        "maxRadiusSq",
        "isNaN",
        "attributes",
        "attributes",
        "attributes",
        "THREE",
        "Float32Array",
        "positions",
        "attributes",
        "array",
        "i",
        "il",
        "i",
        "array",
        "i",
        "attributes",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "index",
        "index",
        "groups",
        "indices",
        "groups",
        "j",
        "jl",
        "j",
        "groups",
        "j",
        "group",
        "group",
        "start",
        "count",
        "i",
        "il",
        "i",
        "vA",
        "indices",
        "i",
        "vB",
        "indices",
        "i",
        "vC",
        "indices",
        "i",
        "pA",
        "positions",
        "vA",
        "pB",
        "positions",
        "vB",
        "pC",
        "positions",
        "vC",
        "cb",
        "pC",
        "pB",
        "ab",
        "pA",
        "pB",
        "cb",
        "ab",
        "normals",
        "vA",
        "cb",
        "normals",
        "vA",
        "cb",
        "normals",
        "vA",
        "cb",
        "normals",
        "vB",
        "cb",
        "normals",
        "vB",
        "cb",
        "normals",
        "vB",
        "cb",
        "normals",
        "vC",
        "cb",
        "normals",
        "vC",
        "cb",
        "normals",
        "vC",
        "cb",
        "positions",
        "i",
        "il",
        "i",
        "pA",
        "positions",
        "i",
        "pB",
        "positions",
        "i",
        "pC",
        "positions",
        "i",
        "cb",
        "pC",
        "pB",
        "ab",
        "pA",
        "pB",
        "cb",
        "ab",
        "normals",
        "i",
        "cb",
        "normals",
        "i",
        "cb",
        "normals",
        "i",
        "cb",
        "normals",
        "i",
        "cb",
        "normals",
        "i",
        "cb",
        "normals",
        "i",
        "cb",
        "normals",
        "i",
        "cb",
        "normals",
        "i",
        "cb",
        "normals",
        "i",
        "cb",
        "attributes",
        "geometry",
        "offset",
        "geometry",
        "THREE",
        "geometry",
        "offset",
        "offset",
        "key",
        "attributes",
        "geometry",
        "key",
        "attributes",
        "key",
        "attribute1",
        "geometry",
        "key",
        "attribute2",
        "attribute2",
        "attributeSize",
        "offset",
        "i",
        "attributeArray2",
        "i",
        "j",
        "attributeArray1",
        "j",
        "attributeArray2",
        "i",
        "normals",
        "i",
        "il",
        "i",
        "x",
        "normals",
        "i",
        "y",
        "normals",
        "i",
        "z",
        "normals",
        "i",
        "n",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "normals",
        "i",
        "n",
        "normals",
        "i",
        "n",
        "normals",
        "i",
        "n",
        "THREE",
        "name",
        "attributes",
        "attributes",
        "name",
        "attribute",
        "attribute",
        "array",
        "indices",
        "itemSize",
        "indices",
        "i",
        "l",
        "i",
        "index",
        "indices",
        "i",
        "itemSize",
        "j",
        "itemSize",
        "j",
        "array2",
        "index2",
        "array",
        "index",
        "geometry2",
        "name",
        "THREE",
        "array2",
        "itemSize",
        "geometry2",
        "data",
        "data",
        "data",
        "key",
        "parameters",
        "parameters",
        "key",
        "data",
        "key",
        "parameters",
        "key",
        "data",
        "data",
        "index",
        "index",
        "data",
        "index",
        "array",
        "key",
        "attributes",
        "attributes",
        "key",
        "attribute",
        "data",
        "key",
        "attribute",
        "attribute",
        "array",
        "groups",
        "data",
        "groups",
        "boundingSphere",
        "data",
        "boundingSphere",
        "boundingSphere",
        "data",
        "THREE",
        "source",
        "source",
        "index",
        "index",
        "source",
        "name",
        "attributes",
        "attributes",
        "name",
        "name",
        "attribute",
        "source",
        "groups",
        "i",
        "l",
        "i",
        "groups",
        "i",
        "group",
        "group",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "start",
        "count",
        "instances",
        "start",
        "count",
        "instances",
        "THREE",
        "source",
        "source",
        "index",
        "index",
        "source",
        "name",
        "attributes",
        "attributes",
        "name",
        "name",
        "attribute",
        "source",
        "groups",
        "i",
        "l",
        "i",
        "groups",
        "i",
        "group",
        "group",
        "group",
        "THREE",
        "THREE",
        "THREE",
        "value",
        "value",
        "THREE",
        "THREE",
        "callback",
        "callback",
        "THREE",
        "name",
        "duration",
        "tracks",
        "name",
        "THREE",
        "tracks",
        "duration",
        "duration",
        "THREE",
        "THREE",
        "tracks",
        "i",
        "n",
        "i",
        "i",
        "duration",
        "duration",
        "track",
        "track",
        "duration",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "THREE",
        "json",
        "json",
        "json",
        "jsonTracks",
        "i",
        "n",
        "i",
        "tracks",
        "THREE",
        "jsonTracks",
        "i",
        "frameTime",
        "THREE",
        "json",
        "json",
        "tracks",
        "clip",
        "clip",
        "clip",
        "clip",
        "tracks",
        "clipTracks",
        "i",
        "n",
        "i",
        "tracks",
        "THREE",
        "clipTracks",
        "i",
        "json",
        "name",
        "morphTargetSequence",
        "fps",
        "morphTargetSequence",
        "i",
        "numMorphTargets",
        "i",
        "times",
        "i",
        "numMorphTargets",
        "numMorphTargets",
        "i",
        "i",
        "numMorphTargets",
        "values",
        "THREE",
        "times",
        "times",
        "THREE",
        "times",
        "order",
        "values",
        "THREE",
        "values",
        "order",
        "times",
        "times",
        "numMorphTargets",
        "values",
        "values",
        "tracks",
        "THREE",
        "morphTargetSequence",
        "i",
        "times",
        "values",
        "fps",
        "THREE",
        "name",
        "tracks",
        "clipArray",
        "name",
        "i",
        "clipArray",
        "i",
        "clipArray",
        "i",
        "name",
        "clipArray",
        "i",
        "morphTargets",
        "fps",
        "morphTargets",
        "i",
        "il",
        "i",
        "morphTargets",
        "i",
        "morphTarget",
        "pattern",
        "parts",
        "parts",
        "parts",
        "animationToMorphTargets",
        "name",
        "animationMorphTargets",
        "animationToMorphTargets",
        "name",
        "animationMorphTargets",
        "animationMorphTargets",
        "morphTarget",
        "name",
        "animationToMorphTargets",
        "clips",
        "THREE",
        "name",
        "animationToMorphTargets",
        "name",
        "fps",
        "clips",
        "animation",
        "bones",
        "nodeName",
        "animation",
        "trackType",
        "trackName",
        "animationKeys",
        "propertyName",
        "destTracks",
        "animationKeys",
        "THREE",
        "animationKeys",
        "times",
        "values",
        "propertyName",
        "times",
        "destTracks",
        "trackType",
        "trackName",
        "times",
        "values",
        "animation",
        "animation",
        "animation",
        "animation",
        "h",
        "hierarchyTracks",
        "h",
        "hierarchyTracks",
        "h",
        "animationKeys",
        "animationKeys",
        "animationKeys",
        "k",
        "animationKeys",
        "k",
        "animationKeys",
        "k",
        "m",
        "animationKeys",
        "k",
        "m",
        "morphTargetNames",
        "animationKeys",
        "k",
        "m",
        "morphTargetName",
        "morphTargetNames",
        "m",
        "animationKeys",
        "k",
        "m",
        "animationKeys",
        "k",
        "times",
        "animationKey",
        "values",
        "animationKey",
        "morphTargetName",
        "tracks",
        "THREE",
        "morphTargetName",
        "times",
        "values",
        "duration",
        "morphTargetNames",
        "fps",
        "bones",
        "h",
        "addNonemptyTrack",
        "THREE",
        "boneName",
        "animationKeys",
        "tracks",
        "addNonemptyTrack",
        "THREE",
        "boneName",
        "animationKeys",
        "tracks",
        "addNonemptyTrack",
        "THREE",
        "boneName",
        "animationKeys",
        "tracks",
        "tracks",
        "THREE",
        "clipName",
        "duration",
        "tracks",
        "clip",
        "THREE",
        "root",
        "root",
        "THREE",
        "THREE",
        "clip",
        "optionalRoot",
        "optionalRoot",
        "root",
        "clip",
        "clip",
        "clip",
        "clip",
        "clipName",
        "clip",
        "clipName",
        "actionsForClip",
        "actionsForClip",
        "rootUuid",
        "existingAction",
        "existingAction",
        "prototypeAction",
        "actionsForClip",
        "clipObject",
        "prototypeAction",
        "clip",
        "clipName",
        "clip",
        "clipObject",
        "clipObject",
        "THREE",
        "clipObject",
        "optionalRoot",
        "newAction",
        "prototypeAction",
        "newAction",
        "clipName",
        "rootUuid",
        "newAction",
        "clip",
        "optionalRoot",
        "optionalRoot",
        "root",
        "clip",
        "clip",
        "clip",
        "clipName",
        "actionsForClip",
        "actionsForClip",
        "rootUuid",
        "i",
        "nActions",
        "i",
        "actions",
        "i",
        "i",
        "nBindings",
        "i",
        "bindings",
        "i",
        "deltaTime",
        "deltaTime",
        "deltaTime",
        "deltaTime",
        "i",
        "nActions",
        "i",
        "actions",
        "i",
        "action",
        "action",
        "time",
        "deltaTime",
        "timeDirection",
        "accuIndex",
        "i",
        "nBindings",
        "i",
        "bindings",
        "i",
        "accuIndex",
        "clip",
        "clip",
        "actionsByClip",
        "clipName",
        "actionsForClip",
        "actionsForClip",
        "actionsToRemove",
        "i",
        "n",
        "i",
        "actionsToRemove",
        "i",
        "action",
        "action",
        "actions",
        "actions",
        "action",
        "action",
        "lastInactiveAction",
        "cacheIndex",
        "actions",
        "cacheIndex",
        "lastInactiveAction",
        "actions",
        "action",
        "actionsByClip",
        "clipName",
        "root",
        "root",
        "clipName",
        "actionsByClip",
        "actionsByClip",
        "clipName",
        "actionByRoot",
        "rootUuid",
        "action",
        "action",
        "action",
        "bindingsByRoot",
        "rootUuid",
        "bindingByName",
        "trackName",
        "bindingByName",
        "bindingByName",
        "trackName",
        "binding",
        "binding",
        "clip",
        "optionalRoot",
        "clip",
        "optionalRoot",
        "action",
        "action",
        "action",
        "THREE",
        "THREE",
        "THREE",
        "mixer",
        "clip",
        "localRoot",
        "mixer",
        "clip",
        "localRoot",
        "clip",
        "tracks",
        "nTracks",
        "THREE",
        "THREE",
        "i",
        "nTracks",
        "i",
        "tracks",
        "i",
        "interpolants",
        "i",
        "interpolant",
        "interpolant",
        "interpolantSettings",
        "interpolantSettings",
        "interpolants",
        "nTracks",
        "THREE",
        "Infinity",
        "THREE",
        "THREE",
        "time",
        "time",
        "mode",
        "repetitions",
        "mode",
        "repetitions",
        "weight",
        "weight",
        "weight",
        "duration",
        "duration",
        "duration",
        "duration",
        "fadeOutAction",
        "duration",
        "warp",
        "fadeOutAction",
        "duration",
        "duration",
        "warp",
        "fadeOutAction",
        "fadeOutDuration",
        "fadeInDuration",
        "fadeInDuration",
        "fadeOutDuration",
        "fadeOutAction",
        "startEndRatio",
        "duration",
        "endStartRatio",
        "duration",
        "fadeInAction",
        "duration",
        "warp",
        "fadeInAction",
        "duration",
        "warp",
        "weightInterpolant",
        "weightInterpolant",
        "timeScale",
        "timeScale",
        "timeScale",
        "duration",
        "duration",
        "action",
        "action",
        "action",
        "duration",
        "duration",
        "startTimeScale",
        "endTimeScale",
        "duration",
        "mixer",
        "interpolant",
        "interpolant",
        "mixer",
        "interpolant",
        "interpolant",
        "interpolant",
        "times",
        "now",
        "times",
        "now",
        "duration",
        "values",
        "startTimeScale",
        "timeScale",
        "values",
        "endTimeScale",
        "timeScale",
        "timeScaleInterpolant",
        "timeScaleInterpolant",
        "time",
        "deltaTime",
        "timeDirection",
        "accuIndex",
        "startTime",
        "time",
        "startTime",
        "timeDirection",
        "timeRunning",
        "timeDirection",
        "deltaTime",
        "timeDirection",
        "timeRunning",
        "deltaTime",
        "time",
        "deltaTime",
        "time",
        "weight",
        "interpolants",
        "j",
        "m",
        "j",
        "interpolants",
        "j",
        "clipTime",
        "propertyMixers",
        "j",
        "accuIndex",
        "weight",
        "time",
        "weight",
        "interpolant",
        "interpolant",
        "time",
        "weight",
        "interpolantValue",
        "time",
        "interpolant",
        "interpolantValue",
        "weight",
        "weight",
        "time",
        "timeScale",
        "interpolant",
        "interpolant",
        "time",
        "timeScale",
        "interpolantValue",
        "time",
        "interpolant",
        "timeScale",
        "timeScale",
        "timeScale",
        "timeScale",
        "deltaTime",
        "deltaTime",
        "deltaTime",
        "time",
        "loop",
        "THREE",
        "loopCount",
        "time",
        "duration",
        "time",
        "duration",
        "time",
        "time",
        "deltaTime",
        "THREE",
        "pingPong",
        "THREE",
        "loopCount",
        "deltaTime",
        "loopCount",
        "pingPong",
        "pingPong",
        "time",
        "duration",
        "time",
        "time",
        "duration",
        "time",
        "duration",
        "loopDelta",
        "loopCount",
        "loopDelta",
        "loopCount",
        "pending",
        "time",
        "deltaTime",
        "duration",
        "deltaTime",
        "pending",
        "deltaTime",
        "atStart",
        "atStart",
        "pingPong",
        "pingPong",
        "loopCount",
        "loopDelta",
        "loop",
        "THREE",
        "loopCount",
        "time",
        "duration",
        "time",
        "time",
        "time",
        "atStart",
        "atEnd",
        "pingPong",
        "pingPong",
        "settings",
        "THREE",
        "settings",
        "THREE",
        "atStart",
        "settings",
        "THREE",
        "THREE",
        "settings",
        "THREE",
        "atEnd",
        "settings",
        "THREE",
        "THREE",
        "settings",
        "THREE",
        "duration",
        "weightNow",
        "weightThen",
        "mixer",
        "interpolant",
        "interpolant",
        "mixer",
        "interpolant",
        "interpolant",
        "interpolant",
        "times",
        "now",
        "values",
        "weightNow",
        "times",
        "now",
        "duration",
        "values",
        "weightThen",
        "THREE",
        "action",
        "prototypeAction",
        "action",
        "action",
        "tracks",
        "action",
        "action",
        "root",
        "bindingsByRoot",
        "rootUuid",
        "bindingsByName",
        "bindingsByName",
        "bindingsByRoot",
        "rootUuid",
        "bindingsByName",
        "i",
        "nTracks",
        "i",
        "tracks",
        "i",
        "track",
        "bindingsByName",
        "trackName",
        "binding",
        "bindings",
        "i",
        "binding",
        "binding",
        "bindings",
        "i",
        "binding",
        "binding",
        "binding",
        "binding",
        "rootUuid",
        "trackName",
        "prototypeAction",
        "prototypeAction",
        "i",
        "binding",
        "THREE",
        "THREE",
        "root",
        "trackName",
        "path",
        "track",
        "track",
        "binding",
        "binding",
        "rootUuid",
        "trackName",
        "bindings",
        "i",
        "binding",
        "interpolants",
        "i",
        "binding",
        "action",
        "action",
        "action",
        "action",
        "action",
        "clipName",
        "action",
        "actionsForClip",
        "actionsForClip",
        "action",
        "clipName",
        "rootUuid",
        "action",
        "bindings",
        "i",
        "n",
        "i",
        "bindings",
        "i",
        "binding",
        "binding",
        "binding",
        "action",
        "action",
        "action",
        "action",
        "bindings",
        "i",
        "n",
        "i",
        "bindings",
        "i",
        "binding",
        "binding",
        "binding",
        "action",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "action",
        "action",
        "index",
        "index",
        "action",
        "clipName",
        "rootUuid",
        "actionsByClip",
        "clipName",
        "actionsForClip",
        "actionsForClip",
        "action",
        "action",
        "actionsByClip",
        "clipName",
        "actionsForClip",
        "actionsForClip",
        "action",
        "knownActions",
        "knownActions",
        "action",
        "action",
        "actions",
        "actions",
        "action",
        "actionsForClip",
        "rootUuid",
        "action",
        "action",
        "actions",
        "actions",
        "action",
        "lastInactiveAction",
        "cacheIndex",
        "actions",
        "cacheIndex",
        "lastInactiveAction",
        "actions",
        "action",
        "action",
        "actionsByClip",
        "clipName",
        "actionsForClip",
        "knownActionsForClip",
        "knownActionsForClip",
        "action",
        "lastKnownAction",
        "byClipCacheIndex",
        "knownActionsForClip",
        "byClipCacheIndex",
        "lastKnownAction",
        "knownActionsForClip",
        "action",
        "actionsForClip",
        "actions",
        "actionByRoot",
        "rootUuid",
        "knownActionsForClip",
        "actionsByClip",
        "clipName",
        "action",
        "action",
        "action",
        "bindings",
        "i",
        "n",
        "i",
        "bindings",
        "i",
        "binding",
        "binding",
        "action",
        "action",
        "actions",
        "lastActiveIndex",
        "action",
        "lastActiveIndex",
        "actions",
        "lastActiveIndex",
        "action",
        "firstInactiveAction",
        "prevIndex",
        "actions",
        "prevIndex",
        "firstInactiveAction",
        "action",
        "action",
        "actions",
        "firstInactiveIndex",
        "action",
        "firstInactiveIndex",
        "actions",
        "firstInactiveIndex",
        "action",
        "lastActiveAction",
        "prevIndex",
        "actions",
        "prevIndex",
        "lastActiveAction",
        "binding",
        "rootUuid",
        "trackName",
        "bindingsByRoot",
        "rootUuid",
        "bindingByName",
        "bindingByName",
        "bindingsByRoot",
        "rootUuid",
        "bindingByName",
        "bindingByName",
        "trackName",
        "binding",
        "binding",
        "bindings",
        "bindings",
        "binding",
        "binding",
        "binding",
        "propBinding",
        "propBinding",
        "bindingsByRoot",
        "rootUuid",
        "bindings",
        "bindings",
        "binding",
        "lastInactiveBinding",
        "cacheIndex",
        "bindings",
        "cacheIndex",
        "lastInactiveBinding",
        "bindings",
        "bindingByName",
        "trackName",
        "_",
        "bindingByName",
        "bindingsByRoot",
        "rootUuid",
        "binding",
        "binding",
        "bindings",
        "lastActiveIndex",
        "binding",
        "lastActiveIndex",
        "bindings",
        "lastActiveIndex",
        "binding",
        "firstInactiveBinding",
        "prevIndex",
        "bindings",
        "prevIndex",
        "firstInactiveBinding",
        "binding",
        "binding",
        "bindings",
        "firstInactiveIndex",
        "binding",
        "firstInactiveIndex",
        "bindings",
        "firstInactiveIndex",
        "binding",
        "lastActiveBinding",
        "prevIndex",
        "bindings",
        "prevIndex",
        "lastActiveBinding",
        "interpolants",
        "lastActiveIndex",
        "interpolant",
        "interpolant",
        "THREE",
        "Float32Array",
        "Float32Array",
        "interpolant",
        "lastActiveIndex",
        "interpolants",
        "lastActiveIndex",
        "interpolant",
        "interpolant",
        "interpolant",
        "interpolant",
        "interpolants",
        "firstInactiveIndex",
        "interpolant",
        "firstInactiveIndex",
        "interpolants",
        "firstInactiveIndex",
        "interpolant",
        "lastActiveInterpolant",
        "prevIndex",
        "interpolants",
        "prevIndex",
        "lastActiveInterpolant",
        "Float32Array",
        "THREE",
        "var_args",
        "THREE",
        "arguments",
        "indices",
        "arguments",
        "i",
        "n",
        "i",
        "indices",
        "arguments",
        "i",
        "i",
        "scope",
        "scope",
        "scope",
        "THREE",
        "THREE",
        "var_args",
        "objects",
        "bindings",
        "arguments",
        "i",
        "n",
        "i",
        "arguments",
        "i",
        "indicesByUUID",
        "uuid",
        "index",
        "index",
        "nObjects",
        "indicesByUUID",
        "uuid",
        "index",
        "objects",
        "j",
        "m",
        "j",
        "bindings",
        "j",
        "THREE",
        "paths",
        "j",
        "parsedPaths",
        "j",
        "index",
        "nCachedObjects",
        "objects",
        "index",
        "nCachedObjects",
        "objects",
        "firstActiveIndex",
        "indicesByUUID",
        "lastCachedObject",
        "index",
        "objects",
        "index",
        "lastCachedObject",
        "indicesByUUID",
        "uuid",
        "firstActiveIndex",
        "objects",
        "firstActiveIndex",
        "j",
        "m",
        "j",
        "bindings",
        "j",
        "bindingsForPath",
        "firstActiveIndex",
        "bindingsForPath",
        "index",
        "bindingsForPath",
        "index",
        "lastCached",
        "binding",
        "binding",
        "THREE",
        "paths",
        "j",
        "parsedPaths",
        "j",
        "bindingsForPath",
        "firstActiveIndex",
        "binding",
        "objects",
        "index",
        "knownObject",
        "nCachedObjects",
        "var_args",
        "objects",
        "bindings",
        "arguments",
        "i",
        "n",
        "i",
        "arguments",
        "i",
        "indicesByUUID",
        "uuid",
        "index",
        "index",
        "nCachedObjects",
        "nCachedObjects",
        "objects",
        "lastCachedIndex",
        "indicesByUUID",
        "firstActiveObject",
        "index",
        "objects",
        "index",
        "firstActiveObject",
        "indicesByUUID",
        "uuid",
        "lastCachedIndex",
        "objects",
        "lastCachedIndex",
        "j",
        "m",
        "j",
        "bindings",
        "j",
        "bindingsForPath",
        "lastCachedIndex",
        "bindingsForPath",
        "index",
        "bindingsForPath",
        "index",
        "firstActive",
        "bindingsForPath",
        "lastCachedIndex",
        "binding",
        "nCachedObjects",
        "var_args",
        "objects",
        "bindings",
        "arguments",
        "i",
        "n",
        "i",
        "arguments",
        "i",
        "indicesByUUID",
        "uuid",
        "index",
        "indicesByUUID",
        "uuid",
        "index",
        "nCachedObjects",
        "nCachedObjects",
        "objects",
        "firstActiveIndex",
        "nObjects",
        "objects",
        "lastIndex",
        "indicesByUUID",
        "lastCachedObject",
        "index",
        "objects",
        "index",
        "lastCachedObject",
        "indicesByUUID",
        "lastObject",
        "firstActiveIndex",
        "objects",
        "firstActiveIndex",
        "lastObject",
        "objects",
        "j",
        "m",
        "j",
        "bindings",
        "j",
        "bindingsForPath",
        "firstActiveIndex",
        "bindingsForPath",
        "lastIndex",
        "bindingsForPath",
        "index",
        "lastCached",
        "bindingsForPath",
        "firstActiveIndex",
        "last",
        "bindingsForPath",
        "nObjects",
        "objects",
        "lastIndex",
        "indicesByUUID",
        "lastObject",
        "index",
        "objects",
        "index",
        "lastObject",
        "objects",
        "j",
        "m",
        "j",
        "bindings",
        "j",
        "bindingsForPath",
        "index",
        "bindingsForPath",
        "lastIndex",
        "bindingsForPath",
        "nCachedObjects",
        "path",
        "parsedPath",
        "indicesByPath",
        "path",
        "index",
        "bindings",
        "index",
        "objects",
        "nObjects",
        "index",
        "bindings",
        "indicesByPath",
        "path",
        "index",
        "paths",
        "path",
        "parsedPaths",
        "parsedPath",
        "bindings",
        "bindingsForPath",
        "objects",
        "i",
        "n",
        "i",
        "objects",
        "i",
        "bindingsForPath",
        "i",
        "THREE",
        "path",
        "parsedPath",
        "bindingsForPath",
        "path",
        "indicesByPath",
        "path",
        "index",
        "bindings",
        "bindings",
        "lastBindingsIndex",
        "path",
        "lastBindingsIndex",
        "indicesByPath",
        "lastBindingsPath",
        "index",
        "bindings",
        "index",
        "lastBindings",
        "bindings",
        "parsedPaths",
        "index",
        "parsedPaths",
        "lastBindingsIndex",
        "parsedPaths",
        "paths",
        "index",
        "paths",
        "lastBindingsIndex",
        "paths",
        "THREE",
        "array",
        "to",
        "THREE",
        "array",
        "array",
        "array",
        "to",
        "array",
        "to",
        "array",
        "forceClone",
        "array",
        "forceClone",
        "array",
        "array",
        "array",
        "array",
        "ArrayBuffer",
        "DataView",
        "times",
        "i",
        "j",
        "times",
        "i",
        "times",
        "j",
        "times",
        "n",
        "i",
        "n",
        "i",
        "result",
        "i",
        "i",
        "result",
        "compareTime",
        "result",
        "values",
        "stride",
        "order",
        "values",
        "values",
        "nValues",
        "dstOffset",
        "nValues",
        "i",
        "order",
        "i",
        "stride",
        "j",
        "stride",
        "j",
        "result",
        "dstOffset",
        "values",
        "srcOffset",
        "j",
        "result",
        "jsonKeys",
        "times",
        "values",
        "valuePropertyName",
        "jsonKeys",
        "key",
        "key",
        "valuePropertyName",
        "key",
        "jsonKeys",
        "i",
        "key",
        "key",
        "valuePropertyName",
        "value",
        "value",
        "value",
        "key",
        "valuePropertyName",
        "value",
        "times",
        "key",
        "values",
        "values",
        "value",
        "key",
        "jsonKeys",
        "i",
        "key",
        "value",
        "value",
        "key",
        "valuePropertyName",
        "value",
        "times",
        "key",
        "value",
        "values",
        "values",
        "key",
        "jsonKeys",
        "i",
        "key",
        "value",
        "key",
        "valuePropertyName",
        "value",
        "times",
        "key",
        "values",
        "value",
        "key",
        "jsonKeys",
        "i",
        "key",
        "THREE",
        "name",
        "times",
        "values",
        "interpolation",
        "name",
        "times",
        "times",
        "name",
        "name",
        "THREE",
        "times",
        "THREE",
        "values",
        "interpolation",
        "THREE",
        "THREE",
        "Float32Array",
        "Float32Array",
        "THREE",
        "result",
        "THREE",
        "result",
        "result",
        "THREE",
        "result",
        "result",
        "THREE",
        "result",
        "interpolation",
        "interpolation",
        "THREE",
        "factoryMethod",
        "THREE",
        "factoryMethod",
        "THREE",
        "factoryMethod",
        "factoryMethod",
        "interpolation",
        "message",
        "message",
        "factoryMethod",
        "THREE",
        "THREE",
        "THREE",
        "timeOffset",
        "timeOffset",
        "times",
        "i",
        "n",
        "i",
        "times",
        "i",
        "timeOffset",
        "timeScale",
        "timeScale",
        "times",
        "i",
        "n",
        "i",
        "times",
        "i",
        "timeScale",
        "startTime",
        "endTime",
        "times",
        "nKeys",
        "nKeys",
        "times",
        "startTime",
        "to",
        "times",
        "to",
        "endTime",
        "to",
        "to",
        "to",
        "nKeys",
        "to",
        "to",
        "to",
        "to",
        "THREE",
        "times",
        "to",
        "THREE",
        "stride",
        "to",
        "stride",
        "valueSize",
        "valueSize",
        "valid",
        "times",
        "nKeys",
        "valid",
        "i",
        "nKeys",
        "i",
        "times",
        "i",
        "currTime",
        "isNaN",
        "currTime",
        "i",
        "currTime",
        "valid",
        "prevTime",
        "prevTime",
        "currTime",
        "i",
        "currTime",
        "prevTime",
        "valid",
        "prevTime",
        "currTime",
        "values",
        "THREE",
        "values",
        "values",
        "i",
        "n",
        "i",
        "values",
        "i",
        "isNaN",
        "value",
        "i",
        "value",
        "valid",
        "valid",
        "times",
        "i",
        "n",
        "i",
        "times",
        "i",
        "times",
        "i",
        "time",
        "timeNext",
        "i",
        "time",
        "time",
        "i",
        "stride",
        "offset",
        "stride",
        "offset",
        "stride",
        "j",
        "stride",
        "j",
        "values",
        "offset",
        "j",
        "value",
        "values",
        "offsetP",
        "j",
        "value",
        "values",
        "offsetN",
        "j",
        "keep",
        "keep",
        "i",
        "writeIndex",
        "times",
        "writeIndex",
        "times",
        "i",
        "i",
        "stride",
        "writeIndex",
        "stride",
        "j",
        "stride",
        "j",
        "values",
        "writeOffset",
        "j",
        "values",
        "readOffset",
        "j",
        "writeIndex",
        "writeIndex",
        "times",
        "THREE",
        "times",
        "writeIndex",
        "THREE",
        "values",
        "writeIndex",
        "stride",
        "THREE",
        "json",
        "json",
        "THREE",
        "json",
        "json",
        "THREE",
        "json",
        "times",
        "values",
        "json",
        "times",
        "json",
        "values",
        "trackType",
        "trackType",
        "json",
        "trackType",
        "json",
        "json",
        "json",
        "json",
        "track",
        "track",
        "trackType",
        "json",
        "trackType",
        "track",
        "json",
        "track",
        "THREE",
        "track",
        "THREE",
        "track",
        "track",
        "interpolation",
        "track",
        "json",
        "interpolation",
        "json",
        "track",
        "json",
        "typeName",
        "typeName",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "typeName",
        "THREE",
        "rootNode",
        "path",
        "parsedPath",
        "path",
        "parsedPath",
        "THREE",
        "path",
        "THREE",
        "rootNode",
        "rootNode",
        "rootNode",
        "THREE",
        "THREE",
        "getValue_unbound",
        "targetArray",
        "offset",
        "targetArray",
        "offset",
        "getValue_unbound",
        "sourceArray",
        "offset",
        "sourceArray",
        "offset",
        "parsedPath",
        "parsedPath",
        "parsedPath",
        "targetObject",
        "targetObject",
        "THREE",
        "parsedPath",
        "targetObject",
        "targetObject",
        "objectName",
        "parsedPath",
        "objectName",
        "targetObject",
        "targetObject",
        "targetObject",
        "targetObject",
        "targetObject",
        "targetObject",
        "targetObject",
        "i",
        "targetObject",
        "i",
        "targetObject",
        "i",
        "objectIndex",
        "objectIndex",
        "i",
        "targetObject",
        "objectName",
        "targetObject",
        "targetObject",
        "objectName",
        "objectIndex",
        "targetObject",
        "objectIndex",
        "targetObject",
        "targetObject",
        "targetObject",
        "objectIndex",
        "targetObject",
        "propertyName",
        "nodeProperty",
        "parsedPath",
        "nodeName",
        "propertyName",
        "targetObject",
        "targetObject",
        "versioning",
        "targetObject",
        "targetObject",
        "versioning",
        "targetObject",
        "propertyIndex",
        "propertyName",
        "targetObject",
        "targetObject",
        "i",
        "i",
        "targetObject",
        "i",
        "propertyIndex",
        "propertyIndex",
        "i",
        "bindingType",
        "nodeProperty",
        "propertyIndex",
        "nodeProperty",
        "nodeProperty",
        "bindingType",
        "nodeProperty",
        "nodeProperty",
        "bindingType",
        "nodeProperty",
        "propertyName",
        "bindingType",
        "bindingType",
        "versioning",
        "THREE",
        "THREE",
        "THREE",
        "getValue_direct",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "getValue_array",
        "buffer",
        "offset",
        "source",
        "i",
        "n",
        "i",
        "buffer",
        "offset",
        "source",
        "i",
        "getValue_arrayElement",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "getValue_toArray",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "setValue_direct",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "setValue_direct_setNeedsUpdate",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "setValue_direct_setMatrixWorldNeedsUpdate",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "setValue_array",
        "buffer",
        "offset",
        "dest",
        "i",
        "n",
        "i",
        "dest",
        "i",
        "buffer",
        "offset",
        "setValue_array_setNeedsUpdate",
        "buffer",
        "offset",
        "dest",
        "i",
        "n",
        "i",
        "dest",
        "i",
        "buffer",
        "offset",
        "setValue_array_setMatrixWorldNeedsUpdate",
        "buffer",
        "offset",
        "dest",
        "i",
        "n",
        "i",
        "dest",
        "i",
        "buffer",
        "offset",
        "setValue_arrayElement",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "setValue_arrayElement_setNeedsUpdate",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "setValue_arrayElement_setMatrixWorldNeedsUpdate",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "setValue_fromArray",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "setValue_fromArray_setNeedsUpdate",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "setValue_fromArray_setMatrixWorldNeedsUpdate",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "THREE",
        "targetGroup",
        "path",
        "optionalParsedPath",
        "optionalParsedPath",
        "THREE",
        "path",
        "targetGroup",
        "targetGroup",
        "path",
        "parsedPath",
        "THREE",
        "THREE",
        "array",
        "offset",
        "firstValidIndex",
        "binding",
        "binding",
        "array",
        "offset",
        "array",
        "offset",
        "bindings",
        "i",
        "n",
        "i",
        "bindings",
        "i",
        "array",
        "offset",
        "bindings",
        "i",
        "n",
        "i",
        "bindings",
        "i",
        "bindings",
        "i",
        "n",
        "i",
        "bindings",
        "i",
        "THREE",
        "root",
        "path",
        "parsedPath",
        "root",
        "THREE",
        "THREE",
        "root",
        "path",
        "parsedPath",
        "THREE",
        "root",
        "path",
        "parsedPath",
        "THREE",
        "trackName",
        "re",
        "trackName",
        "matches",
        "trackName",
        "matches",
        "re",
        "re",
        "matches",
        "matches",
        "matches",
        "matches",
        "matches",
        "results",
        "results",
        "trackName",
        "results",
        "THREE",
        "root",
        "nodeName",
        "nodeName",
        "nodeName",
        "nodeName",
        "nodeName",
        "nodeName",
        "nodeName",
        "root",
        "nodeName",
        "root",
        "root",
        "root",
        "skeleton",
        "i",
        "skeleton",
        "i",
        "skeleton",
        "i",
        "bone",
        "nodeName",
        "bone",
        "searchSkeleton",
        "root",
        "bone",
        "bone",
        "root",
        "children",
        "i",
        "children",
        "i",
        "children",
        "i",
        "childNode",
        "nodeName",
        "childNode",
        "nodeName",
        "childNode",
        "searchNodeSubtree",
        "childNode",
        "result",
        "result",
        "searchNodeSubtree",
        "root",
        "subTreeNode",
        "subTreeNode",
        "THREE",
        "binding",
        "typeName",
        "valueSize",
        "binding",
        "valueSize",
        "typeName",
        "mixFunction",
        "bufferType",
        "mixFunction",
        "mixFunction",
        "bufferType",
        "valueSize",
        "mixFunction",
        "THREE",
        "THREE",
        "accuIndex",
        "weight",
        "accuIndex",
        "stride",
        "stride",
        "currentWeight",
        "i",
        "stride",
        "i",
        "buffer",
        "offset",
        "i",
        "buffer",
        "i",
        "currentWeight",
        "weight",
        "currentWeight",
        "weight",
        "weight",
        "currentWeight",
        "buffer",
        "offset",
        "mix",
        "stride",
        "currentWeight",
        "accuIndex",
        "accuIndex",
        "stride",
        "stride",
        "weight",
        "stride",
        "buffer",
        "offset",
        "originalValueOffset",
        "weight",
        "stride",
        "stride",
        "stride",
        "i",
        "e",
        "i",
        "buffer",
        "i",
        "buffer",
        "i",
        "stride",
        "binding",
        "buffer",
        "offset",
        "stride",
        "binding",
        "buffer",
        "originalValueOffset",
        "i",
        "e",
        "i",
        "buffer",
        "i",
        "buffer",
        "originalValueOffset",
        "i",
        "stride",
        "originalValueOffset",
        "buffer",
        "dstOffset",
        "srcOffset",
        "t",
        "stride",
        "t",
        "i",
        "stride",
        "i",
        "buffer",
        "dstOffset",
        "i",
        "buffer",
        "srcOffset",
        "i",
        "buffer",
        "dstOffset",
        "srcOffset",
        "t",
        "stride",
        "THREE",
        "buffer",
        "dstOffset",
        "buffer",
        "dstOffset",
        "buffer",
        "srcOffset",
        "t",
        "buffer",
        "dstOffset",
        "srcOffset",
        "t",
        "stride",
        "t",
        "i",
        "stride",
        "i",
        "dstOffset",
        "i",
        "buffer",
        "j",
        "buffer",
        "j",
        "s",
        "buffer",
        "srcOffset",
        "i",
        "t",
        "THREE",
        "name",
        "times",
        "values",
        "THREE",
        "name",
        "times",
        "values",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "name",
        "times",
        "values",
        "interpolation",
        "THREE",
        "name",
        "times",
        "values",
        "interpolation",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "name",
        "times",
        "values",
        "interpolation",
        "THREE",
        "name",
        "times",
        "values",
        "interpolation",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "result",
        "THREE",
        "result",
        "THREE",
        "name",
        "times",
        "values",
        "interpolation",
        "THREE",
        "name",
        "times",
        "values",
        "interpolation",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "name",
        "times",
        "values",
        "interpolation",
        "THREE",
        "name",
        "times",
        "values",
        "interpolation",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "listener",
        "THREE",
        "listener",
        "listener",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "file",
        "THREE",
        "buffer",
        "file",
        "buffer",
        "THREE",
        "audioNode",
        "audioNode",
        "THREE",
        "audioBuffer",
        "audioBuffer",
        "buffer",
        "scope",
        "buffer",
        "scope",
        "scope",
        "scope",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "value",
        "value",
        "value",
        "value",
        "value",
        "THREE",
        "value",
        "value",
        "THREE",
        "THREE",
        "THREE",
        "value",
        "value",
        "THREE",
        "THREE",
        "value",
        "value",
        "THREE",
        "THREE",
        "audio",
        "fftSize",
        "audio",
        "fftSize",
        "fftSize",
        "Uint8Array",
        "audio",
        "THREE",
        "THREE",
        "THREE",
        "context",
        "context",
        "THREE",
        "file",
        "XMLHttpRequest",
        "request",
        "file",
        "request",
        "request",
        "e",
        "scope",
        "buffer",
        "scope",
        "buffer",
        "scope",
        "i",
        "scope",
        "i",
        "scope",
        "i",
        "scope",
        "scope",
        "request",
        "THREE",
        "callback",
        "callback",
        "callback",
        "THREE",
        "listener",
        "THREE",
        "listener",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "value",
        "value",
        "THREE",
        "THREE",
        "value",
        "value",
        "THREE",
        "THREE",
        "value",
        "value",
        "THREE",
        "THREE",
        "value",
        "value",
        "THREE",
        "THREE",
        "THREE",
        "updateMatrixWorld",
        "force",
        "THREE",
        "force",
        "position",
        "position",
        "position",
        "position",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "value",
        "value",
        "THREE",
        "THREE",
        "value",
        "value",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "updateMatrixWorld",
        "force",
        "THREE",
        "force",
        "position",
        "quaternion",
        "scale",
        "orientation",
        "quaternion",
        "listener",
        "position",
        "position",
        "position",
        "listener",
        "orientation",
        "orientation",
        "orientation",
        "up",
        "up",
        "up",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "quaternion",
        "result",
        "quaternion",
        "THREE",
        "THREE",
        "vector",
        "m1",
        "vector",
        "m1",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "THREE",
        "near",
        "far",
        "cubeResolution",
        "THREE",
        "THREE",
        "fov",
        "aspect",
        "near",
        "far",
        "cameraPX",
        "cameraPX",
        "THREE",
        "cameraPX",
        "THREE",
        "fov",
        "aspect",
        "near",
        "far",
        "cameraNX",
        "cameraNX",
        "THREE",
        "cameraNX",
        "THREE",
        "fov",
        "aspect",
        "near",
        "far",
        "cameraPY",
        "cameraPY",
        "THREE",
        "cameraPY",
        "THREE",
        "fov",
        "aspect",
        "near",
        "far",
        "cameraNY",
        "cameraNY",
        "THREE",
        "cameraNY",
        "THREE",
        "fov",
        "aspect",
        "near",
        "far",
        "cameraPZ",
        "cameraPZ",
        "THREE",
        "cameraPZ",
        "THREE",
        "fov",
        "aspect",
        "near",
        "far",
        "cameraNZ",
        "cameraNZ",
        "THREE",
        "cameraNZ",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "cubeResolution",
        "cubeResolution",
        "options",
        "renderer",
        "scene",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "renderer",
        "scene",
        "cameraPX",
        "renderTarget",
        "renderTarget",
        "renderer",
        "scene",
        "cameraNX",
        "renderTarget",
        "renderTarget",
        "renderer",
        "scene",
        "cameraPY",
        "renderTarget",
        "renderTarget",
        "renderer",
        "scene",
        "cameraNY",
        "renderTarget",
        "renderTarget",
        "renderer",
        "scene",
        "cameraPZ",
        "renderTarget",
        "renderTarget",
        "generateMipmaps",
        "renderTarget",
        "renderer",
        "scene",
        "cameraNZ",
        "renderTarget",
        "renderer",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "left",
        "right",
        "top",
        "bottom",
        "near",
        "far",
        "THREE",
        "left",
        "right",
        "top",
        "bottom",
        "near",
        "near",
        "far",
        "far",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "cx",
        "dx",
        "cx",
        "dx",
        "cy",
        "dy",
        "cy",
        "dy",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "meta",
        "THREE",
        "meta",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "THREE",
        "fov",
        "aspect",
        "near",
        "far",
        "THREE",
        "fov",
        "fov",
        "aspect",
        "aspect",
        "near",
        "near",
        "far",
        "far",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "focalLength",
        "frameHeight",
        "frameHeight",
        "frameHeight",
        "THREE",
        "frameHeight",
        "focalLength",
        "THREE",
        "fullWidth",
        "fullHeight",
        "x",
        "y",
        "width",
        "height",
        "fullWidth",
        "fullHeight",
        "x",
        "y",
        "width",
        "height",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "fov",
        "top",
        "aspect",
        "bottom",
        "aspect",
        "top",
        "right",
        "left",
        "top",
        "bottom",
        "left",
        "width",
        "left",
        "width",
        "top",
        "height",
        "top",
        "height",
        "fov",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "meta",
        "THREE",
        "meta",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "update",
        "camera",
        "focalLength",
        "camera",
        "fov",
        "camera",
        "aspect",
        "camera",
        "near",
        "camera",
        "far",
        "camera",
        "needsUpdate",
        "focalLength",
        "camera",
        "fov",
        "camera",
        "aspect",
        "camera",
        "near",
        "camera",
        "far",
        "camera",
        "camera",
        "eyeSep",
        "near",
        "focalLength",
        "near",
        "THREE",
        "fov",
        "eyeLeft",
        "eyeSep",
        "eyeRight",
        "eyeSep",
        "xmin",
        "ymax",
        "aspect",
        "eyeSepOnProjection",
        "xmax",
        "ymax",
        "aspect",
        "eyeSepOnProjection",
        "projectionMatrix",
        "near",
        "xmax",
        "xmin",
        "projectionMatrix",
        "xmax",
        "xmin",
        "xmax",
        "xmin",
        "projectionMatrix",
        "xmin",
        "ymax",
        "aspect",
        "eyeSepOnProjection",
        "xmax",
        "ymax",
        "aspect",
        "eyeSepOnProjection",
        "projectionMatrix",
        "near",
        "xmax",
        "xmin",
        "projectionMatrix",
        "xmax",
        "xmin",
        "xmax",
        "xmin",
        "projectionMatrix",
        "camera",
        "eyeLeft",
        "camera",
        "eyeRight",
        "THREE",
        "color",
        "intensity",
        "THREE",
        "THREE",
        "color",
        "intensity",
        "intensity",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "THREE",
        "meta",
        "THREE",
        "meta",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "THREE",
        "camera",
        "camera",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "color",
        "intensity",
        "THREE",
        "color",
        "intensity",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "color",
        "intensity",
        "THREE",
        "color",
        "intensity",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "THREE",
        "skyColor",
        "groundColor",
        "intensity",
        "THREE",
        "skyColor",
        "intensity",
        "THREE",
        "groundColor",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "THREE",
        "color",
        "intensity",
        "distance",
        "decay",
        "THREE",
        "color",
        "intensity",
        "distance",
        "distance",
        "decay",
        "decay",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "color",
        "intensity",
        "distance",
        "angle",
        "exponent",
        "decay",
        "THREE",
        "color",
        "intensity",
        "THREE",
        "distance",
        "distance",
        "angle",
        "angle",
        "exponent",
        "exponent",
        "decay",
        "decay",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "key",
        "file",
        "key",
        "file",
        "key",
        "key",
        "key",
        "key",
        "THREE",
        "THREE",
        "THREE",
        "url",
        "url",
        "parts",
        "parts",
        "parts",
        "materials",
        "texturePath",
        "crossOrigin",
        "i",
        "materials",
        "i",
        "array",
        "i",
        "materials",
        "i",
        "texturePath",
        "crossOrigin",
        "array",
        "m",
        "texturePath",
        "crossOrigin",
        "color",
        "color",
        "THREE",
        "textureLoader",
        "textureLoader",
        "THREE",
        "materialLoader",
        "materialLoader",
        "THREE",
        "path",
        "repeat",
        "offset",
        "wrap",
        "anisotropy",
        "texturePath",
        "path",
        "THREE",
        "fullPath",
        "loader",
        "texture",
        "loader",
        "fullPath",
        "textureLoader",
        "crossOrigin",
        "texture",
        "textureLoader",
        "fullPath",
        "repeat",
        "texture",
        "repeat",
        "repeat",
        "texture",
        "THREE",
        "repeat",
        "texture",
        "THREE",
        "offset",
        "texture",
        "offset",
        "wrap",
        "wrap",
        "texture",
        "THREE",
        "wrap",
        "texture",
        "THREE",
        "wrap",
        "texture",
        "THREE",
        "wrap",
        "texture",
        "THREE",
        "anisotropy",
        "texture",
        "anisotropy",
        "THREE",
        "textures",
        "uuid",
        "texture",
        "uuid",
        "THREE",
        "name",
        "m",
        "m",
        "name",
        "name",
        "json",
        "value",
        "json",
        "THREE",
        "value",
        "json",
        "color",
        "value",
        "json",
        "color",
        "value",
        "json",
        "color",
        "value",
        "json",
        "value",
        "value",
        "json",
        "value",
        "json",
        "json",
        "loadTexture",
        "value",
        "m",
        "m",
        "m",
        "m",
        "json",
        "loadTexture",
        "value",
        "m",
        "m",
        "m",
        "m",
        "json",
        "loadTexture",
        "value",
        "m",
        "m",
        "m",
        "m",
        "json",
        "loadTexture",
        "value",
        "m",
        "m",
        "m",
        "m",
        "json",
        "value",
        "json",
        "loadTexture",
        "value",
        "m",
        "m",
        "m",
        "m",
        "json",
        "value",
        "value",
        "json",
        "loadTexture",
        "value",
        "m",
        "m",
        "m",
        "m",
        "json",
        "loadTexture",
        "value",
        "m",
        "m",
        "m",
        "m",
        "json",
        "THREE",
        "json",
        "THREE",
        "json",
        "value",
        "json",
        "name",
        "value",
        "value",
        "json",
        "THREE",
        "value",
        "json",
        "THREE",
        "name",
        "value",
        "json",
        "json",
        "json",
        "json",
        "json",
        "json",
        "materialLoader",
        "textures",
        "materialLoader",
        "json",
        "THREE",
        "regex",
        "loader",
        "regex",
        "loader",
        "file",
        "handlers",
        "i",
        "l",
        "i",
        "handlers",
        "i",
        "handlers",
        "i",
        "regex",
        "file",
        "loader",
        "THREE",
        "manager",
        "manager",
        "manager",
        "THREE",
        "THREE",
        "THREE",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "url",
        "url",
        "THREE",
        "url",
        "cached",
        "onLoad",
        "setTimeout",
        "onLoad",
        "cached",
        "cached",
        "XMLHttpRequest",
        "request",
        "request",
        "url",
        "request",
        "THREE",
        "url",
        "response",
        "onLoad",
        "onLoad",
        "response",
        "scope",
        "url",
        "onLoad",
        "onLoad",
        "response",
        "scope",
        "url",
        "onError",
        "onError",
        "scope",
        "url",
        "onProgress",
        "request",
        "onProgress",
        "request",
        "onError",
        "onError",
        "scope",
        "url",
        "request",
        "request",
        "request",
        "scope",
        "url",
        "request",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "THREE",
        "manager",
        "manager",
        "manager",
        "THREE",
        "THREE",
        "THREE",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "THREE",
        "loader",
        "url",
        "text",
        "onLoad",
        "THREE",
        "text",
        "text",
        "onProgress",
        "onError",
        "THREE",
        "manager",
        "manager",
        "manager",
        "THREE",
        "THREE",
        "THREE",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "url",
        "url",
        "THREE",
        "url",
        "cached",
        "scope",
        "url",
        "onLoad",
        "setTimeout",
        "onLoad",
        "cached",
        "scope",
        "url",
        "scope",
        "url",
        "cached",
        "image",
        "THREE",
        "url",
        "onLoad",
        "onLoad",
        "scope",
        "url",
        "onProgress",
        "image",
        "onProgress",
        "image",
        "onError",
        "onError",
        "scope",
        "url",
        "image",
        "scope",
        "url",
        "image",
        "url",
        "image",
        "value",
        "value",
        "value",
        "value",
        "THREE",
        "manager",
        "manager",
        "manager",
        "manager",
        "manager",
        "THREE",
        "THREE",
        "THREE",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "THREE",
        "url",
        "THREE",
        "loader",
        "loader",
        "url",
        "text",
        "text",
        "json",
        "metadata",
        "metadata",
        "url",
        "url",
        "scope",
        "json",
        "texturePath",
        "onLoad",
        "onProgress",
        "onError",
        "value",
        "value",
        "json",
        "texturePath",
        "THREE",
        "json",
        "json",
        "parseModel",
        "scale",
        "parseSkin",
        "parseMorphing",
        "scale",
        "parseAnimations",
        "geometry",
        "geometry",
        "scale",
        "value",
        "position",
        "value",
        "position",
        "json",
        "json",
        "json",
        "json",
        "json",
        "i",
        "i",
        "json",
        "i",
        "json",
        "i",
        "nUvLayers",
        "i",
        "i",
        "nUvLayers",
        "i",
        "geometry",
        "i",
        "offset",
        "zLength",
        "vertices",
        "offset",
        "zLength",
        "vertex",
        "THREE",
        "vertex",
        "vertices",
        "offset",
        "scale",
        "vertex",
        "vertices",
        "offset",
        "scale",
        "vertex",
        "vertices",
        "offset",
        "scale",
        "geometry",
        "vertex",
        "offset",
        "zLength",
        "faces",
        "offset",
        "zLength",
        "faces",
        "offset",
        "isQuad",
        "isBitSet",
        "hasMaterial",
        "isBitSet",
        "hasFaceVertexUv",
        "isBitSet",
        "hasFaceNormal",
        "isBitSet",
        "hasFaceVertexNormal",
        "isBitSet",
        "hasFaceColor",
        "isBitSet",
        "hasFaceVertexColor",
        "isBitSet",
        "isQuad",
        "faceA",
        "THREE",
        "faceA",
        "faces",
        "offset",
        "faceA",
        "faces",
        "offset",
        "faceA",
        "faces",
        "offset",
        "faceB",
        "THREE",
        "faceB",
        "faces",
        "offset",
        "faceB",
        "faces",
        "offset",
        "faceB",
        "faces",
        "offset",
        "offset",
        "hasMaterial",
        "materialIndex",
        "faces",
        "offset",
        "faceA",
        "materialIndex",
        "faceB",
        "materialIndex",
        "fi",
        "geometry",
        "hasFaceVertexUv",
        "i",
        "i",
        "nUvLayers",
        "i",
        "uvLayer",
        "json",
        "i",
        "geometry",
        "i",
        "fi",
        "geometry",
        "i",
        "fi",
        "j",
        "j",
        "j",
        "uvIndex",
        "faces",
        "offset",
        "u",
        "uvLayer",
        "uvIndex",
        "v",
        "uvLayer",
        "uvIndex",
        "uv",
        "THREE",
        "u",
        "v",
        "j",
        "geometry",
        "i",
        "fi",
        "uv",
        "j",
        "geometry",
        "i",
        "fi",
        "uv",
        "hasFaceNormal",
        "normalIndex",
        "faces",
        "offset",
        "faceA",
        "normals",
        "normalIndex",
        "normals",
        "normalIndex",
        "normals",
        "normalIndex",
        "faceB",
        "faceA",
        "hasFaceVertexNormal",
        "i",
        "i",
        "i",
        "normalIndex",
        "faces",
        "offset",
        "normal",
        "THREE",
        "normals",
        "normalIndex",
        "normals",
        "normalIndex",
        "normals",
        "normalIndex",
        "i",
        "faceA",
        "normal",
        "i",
        "faceB",
        "normal",
        "hasFaceColor",
        "colorIndex",
        "faces",
        "offset",
        "hex",
        "colors",
        "colorIndex",
        "faceA",
        "hex",
        "faceB",
        "hex",
        "hasFaceVertexColor",
        "i",
        "i",
        "i",
        "colorIndex",
        "faces",
        "offset",
        "hex",
        "colors",
        "colorIndex",
        "i",
        "faceA",
        "THREE",
        "hex",
        "i",
        "faceB",
        "THREE",
        "hex",
        "geometry",
        "faceA",
        "geometry",
        "faceB",
        "face",
        "THREE",
        "face",
        "faces",
        "offset",
        "face",
        "faces",
        "offset",
        "face",
        "faces",
        "offset",
        "hasMaterial",
        "materialIndex",
        "faces",
        "offset",
        "face",
        "materialIndex",
        "fi",
        "geometry",
        "hasFaceVertexUv",
        "i",
        "i",
        "nUvLayers",
        "i",
        "uvLayer",
        "json",
        "i",
        "geometry",
        "i",
        "fi",
        "j",
        "j",
        "j",
        "uvIndex",
        "faces",
        "offset",
        "u",
        "uvLayer",
        "uvIndex",
        "v",
        "uvLayer",
        "uvIndex",
        "uv",
        "THREE",
        "u",
        "v",
        "geometry",
        "i",
        "fi",
        "uv",
        "hasFaceNormal",
        "normalIndex",
        "faces",
        "offset",
        "face",
        "normals",
        "normalIndex",
        "normals",
        "normalIndex",
        "normals",
        "normalIndex",
        "hasFaceVertexNormal",
        "i",
        "i",
        "i",
        "normalIndex",
        "faces",
        "offset",
        "normal",
        "THREE",
        "normals",
        "normalIndex",
        "normals",
        "normalIndex",
        "normals",
        "normalIndex",
        "face",
        "normal",
        "hasFaceColor",
        "colorIndex",
        "faces",
        "offset",
        "face",
        "colors",
        "colorIndex",
        "hasFaceVertexColor",
        "i",
        "i",
        "i",
        "colorIndex",
        "faces",
        "offset",
        "face",
        "THREE",
        "colors",
        "colorIndex",
        "geometry",
        "face",
        "json",
        "json",
        "json",
        "json",
        "i",
        "l",
        "i",
        "influencesPerVertex",
        "json",
        "i",
        "influencesPerVertex",
        "json",
        "i",
        "influencesPerVertex",
        "json",
        "i",
        "influencesPerVertex",
        "json",
        "i",
        "geometry",
        "THREE",
        "x",
        "y",
        "z",
        "w",
        "json",
        "json",
        "i",
        "l",
        "i",
        "influencesPerVertex",
        "json",
        "i",
        "influencesPerVertex",
        "json",
        "i",
        "influencesPerVertex",
        "json",
        "i",
        "influencesPerVertex",
        "json",
        "i",
        "geometry",
        "THREE",
        "a",
        "b",
        "c",
        "d",
        "geometry",
        "json",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "scale",
        "json",
        "json",
        "i",
        "l",
        "i",
        "geometry",
        "i",
        "geometry",
        "i",
        "json",
        "i",
        "geometry",
        "i",
        "geometry",
        "i",
        "json",
        "i",
        "srcVertices",
        "v",
        "vl",
        "v",
        "THREE",
        "vertex",
        "srcVertices",
        "v",
        "scale",
        "vertex",
        "srcVertices",
        "v",
        "scale",
        "vertex",
        "srcVertices",
        "v",
        "scale",
        "dstVertices",
        "vertex",
        "json",
        "json",
        "geometry",
        "json",
        "faces",
        "i",
        "l",
        "i",
        "faces",
        "i",
        "morphColors",
        "i",
        "json",
        "animations",
        "json",
        "json",
        "json",
        "animations",
        "animations",
        "json",
        "animations",
        "json",
        "i",
        "animations",
        "i",
        "THREE",
        "animations",
        "i",
        "geometry",
        "clip",
        "outputAnimations",
        "clip",
        "geometry",
        "THREE",
        "geometry",
        "outputAnimations",
        "outputAnimations",
        "morphAnimationClips",
        "outputAnimations",
        "geometry",
        "outputAnimations",
        "json",
        "json",
        "geometry",
        "THREE",
        "json",
        "texturePath",
        "geometry",
        "materials",
        "THREE",
        "onLoad",
        "onProgress",
        "onError",
        "onLoad",
        "onProgress",
        "onError",
        "url",
        "itemsTotal",
        "isLoading",
        "scope",
        "scope",
        "url",
        "itemsLoaded",
        "itemsTotal",
        "isLoading",
        "url",
        "itemsLoaded",
        "scope",
        "scope",
        "url",
        "itemsLoaded",
        "itemsTotal",
        "itemsLoaded",
        "itemsTotal",
        "isLoading",
        "scope",
        "scope",
        "url",
        "scope",
        "scope",
        "url",
        "THREE",
        "THREE",
        "THREE",
        "manager",
        "manager",
        "manager",
        "THREE",
        "THREE",
        "THREE",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "THREE",
        "scope",
        "loader",
        "url",
        "text",
        "onLoad",
        "scope",
        "text",
        "onProgress",
        "onError",
        "json",
        "THREE",
        "json",
        "Int8Array",
        "Uint8Array",
        "Uint8ClampedArray",
        "Int16Array",
        "Uint16Array",
        "Int32Array",
        "Uint32Array",
        "Float32Array",
        "Float64Array",
        "index",
        "TYPED_ARRAYS",
        "index",
        "index",
        "geometry",
        "THREE",
        "typedArray",
        "json",
        "key",
        "attributes",
        "attributes",
        "key",
        "TYPED_ARRAYS",
        "attribute",
        "attribute",
        "geometry",
        "key",
        "THREE",
        "typedArray",
        "attribute",
        "json",
        "json",
        "json",
        "groups",
        "groups",
        "i",
        "n",
        "i",
        "groups",
        "i",
        "geometry",
        "group",
        "group",
        "group",
        "json",
        "boundingSphere",
        "THREE",
        "boundingSphere",
        "center",
        "boundingSphere",
        "geometry",
        "THREE",
        "center",
        "boundingSphere",
        "geometry",
        "THREE",
        "manager",
        "manager",
        "manager",
        "THREE",
        "THREE",
        "THREE",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "THREE",
        "scope",
        "loader",
        "url",
        "text",
        "onLoad",
        "scope",
        "text",
        "onProgress",
        "onError",
        "value",
        "value",
        "name",
        "textures",
        "name",
        "name",
        "textures",
        "name",
        "json",
        "THREE",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "material",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "json",
        "normalScale",
        "normalScale",
        "normalScale",
        "normalScale",
        "material",
        "THREE",
        "normalScale",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "material",
        "THREE",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "material",
        "json",
        "json",
        "json",
        "i",
        "l",
        "i",
        "material",
        "json",
        "i",
        "material",
        "THREE",
        "manager",
        "manager",
        "manager",
        "THREE",
        "THREE",
        "THREE",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "url",
        "url",
        "THREE",
        "scope",
        "loader",
        "url",
        "text",
        "scope",
        "text",
        "onLoad",
        "onProgress",
        "onError",
        "value",
        "value",
        "value",
        "value",
        "json",
        "onLoad",
        "json",
        "json",
        "onLoad",
        "onLoad",
        "json",
        "images",
        "json",
        "textures",
        "json",
        "geometries",
        "materials",
        "json",
        "json",
        "json",
        "json",
        "onLoad",
        "onLoad",
        "json",
        "json",
        "THREE",
        "THREE",
        "json",
        "i",
        "l",
        "i",
        "json",
        "i",
        "data",
        "geometry",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "data",
        "geometry",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "geometry",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "geometry",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "geometry",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "geometry",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "geometry",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "geometry",
        "THREE",
        "data",
        "data",
        "geometry",
        "THREE",
        "data",
        "data",
        "geometry",
        "THREE",
        "data",
        "data",
        "geometry",
        "THREE",
        "data",
        "data",
        "geometry",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "geometry",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "data",
        "geometry",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "geometry",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "geometry",
        "bufferGeometryLoader",
        "data",
        "geometry",
        "geometryLoader",
        "data",
        "data",
        "geometry",
        "data",
        "data",
        "geometry",
        "data",
        "geometries",
        "data",
        "geometry",
        "geometries",
        "json",
        "textures",
        "json",
        "THREE",
        "loader",
        "textures",
        "json",
        "i",
        "l",
        "i",
        "loader",
        "json",
        "i",
        "materials",
        "material",
        "material",
        "materials",
        "json",
        "i",
        "json",
        "i",
        "THREE",
        "json",
        "i",
        "animations",
        "clip",
        "animations",
        "json",
        "onLoad",
        "url",
        "scope",
        "url",
        "loader",
        "url",
        "scope",
        "url",
        "json",
        "json",
        "THREE",
        "onLoad",
        "THREE",
        "manager",
        "loader",
        "json",
        "i",
        "l",
        "i",
        "json",
        "i",
        "image",
        "image",
        "scope",
        "image",
        "images",
        "image",
        "loadImage",
        "path",
        "images",
        "json",
        "images",
        "value",
        "value",
        "value",
        "value",
        "THREE",
        "value",
        "json",
        "json",
        "i",
        "l",
        "i",
        "json",
        "i",
        "data",
        "data",
        "images",
        "data",
        "data",
        "THREE",
        "images",
        "data",
        "texture",
        "texture",
        "data",
        "data",
        "texture",
        "data",
        "data",
        "texture",
        "parseConstant",
        "data",
        "data",
        "texture",
        "THREE",
        "data",
        "data",
        "data",
        "texture",
        "THREE",
        "data",
        "data",
        "data",
        "texture",
        "parseConstant",
        "data",
        "data",
        "texture",
        "parseConstant",
        "data",
        "data",
        "texture",
        "data",
        "data",
        "texture",
        "parseConstant",
        "data",
        "texture",
        "parseConstant",
        "data",
        "textures",
        "data",
        "texture",
        "textures",
        "THREE",
        "data",
        "geometries",
        "materials",
        "name",
        "geometries",
        "name",
        "name",
        "geometries",
        "name",
        "name",
        "name",
        "materials",
        "name",
        "name",
        "materials",
        "name",
        "data",
        "THREE",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "THREE",
        "data",
        "data",
        "THREE",
        "data",
        "data",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "THREE",
        "data",
        "data",
        "data",
        "getGeometry",
        "data",
        "getMaterial",
        "data",
        "geometry",
        "geometry",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "THREE",
        "getGeometry",
        "data",
        "getMaterial",
        "data",
        "data",
        "THREE",
        "getGeometry",
        "data",
        "getMaterial",
        "data",
        "THREE",
        "getMaterial",
        "data",
        "THREE",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "matrix",
        "data",
        "matrix",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "child",
        "data",
        "data",
        "child",
        "geometries",
        "materials",
        "data",
        "data",
        "l",
        "levels",
        "l",
        "levels",
        "l",
        "level",
        "child",
        "child",
        "level",
        "THREE",
        "manager",
        "manager",
        "manager",
        "THREE",
        "THREE",
        "THREE",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "THREE",
        "THREE",
        "loader",
        "loader",
        "loader",
        "url",
        "image",
        "texture",
        "image",
        "texture",
        "onLoad",
        "onLoad",
        "texture",
        "onProgress",
        "onError",
        "texture",
        "value",
        "value",
        "value",
        "value",
        "THREE",
        "manager",
        "manager",
        "manager",
        "THREE",
        "THREE",
        "THREE",
        "urls",
        "onLoad",
        "onProgress",
        "onError",
        "THREE",
        "THREE",
        "loader",
        "loader",
        "i",
        "loader",
        "urls",
        "i",
        "image",
        "texture",
        "i",
        "image",
        "loaded",
        "loaded",
        "texture",
        "onLoad",
        "onLoad",
        "texture",
        "onError",
        "i",
        "urls",
        "i",
        "loadTexture",
        "i",
        "texture",
        "value",
        "value",
        "value",
        "value",
        "THREE",
        "THREE",
        "manager",
        "manager",
        "manager",
        "THREE",
        "THREE",
        "THREE",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "THREE",
        "THREE",
        "loader",
        "loader",
        "url",
        "buffer",
        "scope",
        "buffer",
        "texData",
        "texData",
        "texture",
        "texData",
        "texData",
        "texture",
        "texData",
        "texture",
        "texData",
        "texture",
        "texData",
        "texture",
        "texData",
        "texData",
        "THREE",
        "texture",
        "texData",
        "texData",
        "THREE",
        "texture",
        "texData",
        "texData",
        "THREE",
        "texture",
        "texData",
        "texData",
        "THREE",
        "texture",
        "texData",
        "texData",
        "texData",
        "texture",
        "texData",
        "texData",
        "texture",
        "texData",
        "texData",
        "texture",
        "texData",
        "texData",
        "texture",
        "THREE",
        "texture",
        "onLoad",
        "onLoad",
        "texture",
        "texData",
        "onProgress",
        "onError",
        "texture",
        "THREE",
        "manager",
        "manager",
        "manager",
        "THREE",
        "THREE",
        "THREE",
        "url",
        "onLoad",
        "onProgress",
        "onError",
        "THREE",
        "texture",
        "images",
        "THREE",
        "loader",
        "loader",
        "i",
        "loader",
        "url",
        "i",
        "buffer",
        "scope",
        "buffer",
        "images",
        "i",
        "texDatas",
        "texDatas",
        "texDatas",
        "texDatas",
        "loaded",
        "loaded",
        "texDatas",
        "texture",
        "THREE",
        "texture",
        "texDatas",
        "texture",
        "onLoad",
        "onLoad",
        "texture",
        "onProgress",
        "onError",
        "url",
        "url",
        "i",
        "il",
        "i",
        "loadTexture",
        "i",
        "loader",
        "url",
        "buffer",
        "scope",
        "buffer",
        "texDatas",
        "texDatas",
        "texDatas",
        "f",
        "faces",
        "f",
        "images",
        "f",
        "i",
        "texDatas",
        "i",
        "images",
        "f",
        "texDatas",
        "f",
        "texDatas",
        "i",
        "images",
        "f",
        "texDatas",
        "images",
        "f",
        "texDatas",
        "images",
        "f",
        "texDatas",
        "texture",
        "texDatas",
        "texture",
        "texDatas",
        "texture",
        "texDatas",
        "texDatas",
        "texture",
        "THREE",
        "texture",
        "texDatas",
        "texture",
        "onLoad",
        "onLoad",
        "texture",
        "onProgress",
        "onError",
        "texture",
        "value",
        "value",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "value",
        "value",
        "value",
        "values",
        "values",
        "key",
        "values",
        "values",
        "key",
        "newValue",
        "key",
        "key",
        "currentValue",
        "key",
        "currentValue",
        "THREE",
        "currentValue",
        "newValue",
        "currentValue",
        "THREE",
        "newValue",
        "THREE",
        "currentValue",
        "newValue",
        "key",
        "key",
        "newValue",
        "key",
        "newValue",
        "meta",
        "meta",
        "isRoot",
        "meta",
        "data",
        "data",
        "data",
        "THREE",
        "data",
        "data",
        "data",
        "THREE",
        "data",
        "THREE",
        "data",
        "data",
        "THREE",
        "data",
        "meta",
        "THREE",
        "data",
        "meta",
        "THREE",
        "data",
        "meta",
        "THREE",
        "data",
        "meta",
        "data",
        "THREE",
        "data",
        "meta",
        "data",
        "THREE",
        "data",
        "meta",
        "data",
        "data",
        "THREE",
        "data",
        "meta",
        "THREE",
        "data",
        "meta",
        "THREE",
        "data",
        "meta",
        "THREE",
        "data",
        "meta",
        "THREE",
        "data",
        "meta",
        "data",
        "data",
        "data",
        "THREE",
        "data",
        "THREE",
        "data",
        "THREE",
        "data",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "cache",
        "key",
        "cache",
        "cache",
        "key",
        "data",
        "values",
        "data",
        "values",
        "isRoot",
        "extractFromCache",
        "meta",
        "extractFromCache",
        "meta",
        "textures",
        "data",
        "textures",
        "images",
        "data",
        "images",
        "data",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "parameters",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "THREE",
        "parameters",
        "THREE",
        "parameters",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "THREE",
        "materials",
        "THREE",
        "materials",
        "materials",
        "THREE",
        "THREE",
        "meta",
        "materials",
        "i",
        "l",
        "i",
        "materials",
        "i",
        "meta",
        "material",
        "output",
        "material",
        "output",
        "output",
        "i",
        "i",
        "material",
        "i",
        "material",
        "material",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "parameters",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "meta",
        "THREE",
        "meta",
        "data",
        "data",
        "data",
        "data",
        "THREE",
        "parameters",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "image",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "THREE",
        "THREE",
        "image",
        "image",
        "THREE",
        "mapping",
        "mapping",
        "THREE",
        "wrapS",
        "wrapS",
        "THREE",
        "wrapT",
        "wrapT",
        "THREE",
        "magFilter",
        "magFilter",
        "THREE",
        "minFilter",
        "minFilter",
        "THREE",
        "anisotropy",
        "anisotropy",
        "format",
        "format",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "value",
        "value",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "meta",
        "meta",
        "meta",
        "image",
        "image",
        "canvas",
        "image",
        "canvas",
        "canvas",
        "image",
        "canvas",
        "image",
        "canvas",
        "image",
        "image",
        "image",
        "canvas",
        "canvas",
        "canvas",
        "canvas",
        "image",
        "image",
        "THREE",
        "meta",
        "image",
        "meta",
        "image",
        "image",
        "getDataURL",
        "image",
        "output",
        "image",
        "meta",
        "output",
        "output",
        "uv",
        "THREE",
        "uv",
        "uv",
        "uv",
        "uv",
        "THREE",
        "uv",
        "uv",
        "uv",
        "THREE",
        "uv",
        "uv",
        "THREE",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "THREE",
        "uv",
        "uv",
        "uv",
        "THREE",
        "uv",
        "uv",
        "THREE",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "canvas",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "THREE",
        "canvas",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "images",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "mapping",
        "mapping",
        "mapping",
        "THREE",
        "THREE",
        "images",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "images",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "THREE",
        "mipmaps",
        "width",
        "height",
        "format",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "anisotropy",
        "THREE",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "width",
        "height",
        "mipmaps",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "data",
        "width",
        "height",
        "format",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "anisotropy",
        "THREE",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "data",
        "width",
        "height",
        "magFilter",
        "magFilter",
        "THREE",
        "minFilter",
        "minFilter",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "video",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "THREE",
        "video",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "requestAnimationFrame",
        "update",
        "video",
        "video",
        "scope",
        "update",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "geometry",
        "geometry",
        "THREE",
        "material",
        "material",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "raycast",
        "raycaster",
        "intersects",
        "raycaster",
        "geometry",
        "geometry",
        "sphere",
        "geometry",
        "sphere",
        "matrixWorld",
        "raycaster",
        "sphere",
        "inverseMatrix",
        "matrixWorld",
        "ray",
        "raycaster",
        "inverseMatrix",
        "threshold",
        "localThreshold",
        "localThreshold",
        "THREE",
        "point",
        "index",
        "ray",
        "point",
        "rayPointDistanceSq",
        "localThresholdSq",
        "ray",
        "point",
        "intersectPoint",
        "matrixWorld",
        "raycaster",
        "intersectPoint",
        "distance",
        "raycaster",
        "distance",
        "raycaster",
        "intersects",
        "distance",
        "rayPointDistanceSq",
        "intersectPoint",
        "index",
        "geometry",
        "THREE",
        "geometry",
        "geometry",
        "attributes",
        "index",
        "index",
        "indices",
        "i",
        "il",
        "i",
        "indices",
        "i",
        "position",
        "positions",
        "a",
        "testPoint",
        "position",
        "a",
        "positions",
        "i",
        "l",
        "i",
        "position",
        "positions",
        "i",
        "testPoint",
        "position",
        "i",
        "geometry",
        "vertices",
        "i",
        "l",
        "i",
        "testPoint",
        "vertices",
        "i",
        "i",
        "THREE",
        "THREE",
        "geometry",
        "material",
        "mode",
        "mode",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "geometry",
        "geometry",
        "THREE",
        "material",
        "material",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "raycast",
        "raycaster",
        "intersects",
        "raycaster",
        "precision",
        "precision",
        "geometry",
        "geometry",
        "sphere",
        "geometry",
        "sphere",
        "matrixWorld",
        "raycaster",
        "sphere",
        "inverseMatrix",
        "matrixWorld",
        "ray",
        "raycaster",
        "inverseMatrix",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "geometry",
        "THREE",
        "geometry",
        "geometry",
        "attributes",
        "index",
        "index",
        "indices",
        "i",
        "l",
        "i",
        "step",
        "indices",
        "i",
        "indices",
        "i",
        "vStart",
        "positions",
        "a",
        "vEnd",
        "positions",
        "b",
        "ray",
        "vStart",
        "vEnd",
        "interRay",
        "interSegment",
        "distSq",
        "precisionSq",
        "interRay",
        "raycaster",
        "interRay",
        "distance",
        "raycaster",
        "distance",
        "raycaster",
        "intersects",
        "distance",
        "interSegment",
        "i",
        "positions",
        "i",
        "l",
        "i",
        "step",
        "vStart",
        "positions",
        "i",
        "vEnd",
        "positions",
        "i",
        "ray",
        "vStart",
        "vEnd",
        "interRay",
        "interSegment",
        "distSq",
        "precisionSq",
        "interRay",
        "raycaster",
        "interRay",
        "distance",
        "raycaster",
        "distance",
        "raycaster",
        "intersects",
        "distance",
        "interSegment",
        "i",
        "geometry",
        "THREE",
        "geometry",
        "vertices",
        "i",
        "nbVertices",
        "i",
        "step",
        "ray",
        "vertices",
        "i",
        "vertices",
        "i",
        "interRay",
        "interSegment",
        "distSq",
        "precisionSq",
        "interRay",
        "raycaster",
        "interRay",
        "distance",
        "raycaster",
        "distance",
        "raycaster",
        "intersects",
        "distance",
        "interSegment",
        "i",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "geometry",
        "geometry",
        "THREE",
        "material",
        "material",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "value",
        "value",
        "THREE",
        "m",
        "ml",
        "m",
        "m",
        "m",
        "THREE",
        "name",
        "name",
        "name",
        "name",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "point",
        "p1",
        "p2",
        "p3",
        "uv1",
        "uv2",
        "uv3",
        "THREE",
        "point",
        "p1",
        "p2",
        "p3",
        "barycoord",
        "uv1",
        "barycoord",
        "uv2",
        "barycoord",
        "uv3",
        "barycoord",
        "uv1",
        "uv2",
        "uv3",
        "uv1",
        "raycaster",
        "ray",
        "pA",
        "pB",
        "pC",
        "point",
        "material",
        "THREE",
        "intersect",
        "ray",
        "pC",
        "pB",
        "pA",
        "point",
        "intersect",
        "ray",
        "pA",
        "pB",
        "pC",
        "material",
        "THREE",
        "point",
        "intersect",
        "intersectionPointWorld",
        "point",
        "intersectionPointWorld",
        "raycaster",
        "intersectionPointWorld",
        "distance",
        "raycaster",
        "distance",
        "raycaster",
        "distance",
        "intersectionPointWorld",
        "raycaster",
        "ray",
        "positions",
        "uvs",
        "a",
        "b",
        "c",
        "vA",
        "positions",
        "a",
        "vB",
        "positions",
        "b",
        "vC",
        "positions",
        "c",
        "checkIntersection",
        "raycaster",
        "ray",
        "vA",
        "vB",
        "vC",
        "intersectionPoint",
        "intersection",
        "uvs",
        "uvA",
        "uvs",
        "a",
        "uvB",
        "uvs",
        "b",
        "uvC",
        "uvs",
        "c",
        "intersection",
        "uvIntersection",
        "intersectionPoint",
        "vA",
        "vB",
        "vC",
        "uvA",
        "uvB",
        "uvC",
        "intersection",
        "THREE",
        "a",
        "b",
        "c",
        "THREE",
        "vA",
        "vB",
        "vC",
        "intersection",
        "a",
        "intersection",
        "raycast",
        "raycaster",
        "intersects",
        "material",
        "geometry",
        "geometry",
        "sphere",
        "geometry",
        "sphere",
        "matrixWorld",
        "raycaster",
        "sphere",
        "inverseMatrix",
        "matrixWorld",
        "ray",
        "raycaster",
        "inverseMatrix",
        "geometry",
        "ray",
        "geometry",
        "geometry",
        "THREE",
        "geometry",
        "geometry",
        "attributes",
        "attributes",
        "uvs",
        "attributes",
        "index",
        "index",
        "indices",
        "i",
        "l",
        "i",
        "a",
        "indices",
        "i",
        "b",
        "indices",
        "i",
        "c",
        "indices",
        "i",
        "intersection",
        "checkBufferGeometryIntersection",
        "raycaster",
        "ray",
        "positions",
        "uvs",
        "a",
        "b",
        "c",
        "intersection",
        "intersection",
        "i",
        "intersects",
        "intersection",
        "positions",
        "i",
        "l",
        "i",
        "a",
        "i",
        "b",
        "a",
        "c",
        "a",
        "intersection",
        "checkBufferGeometryIntersection",
        "raycaster",
        "ray",
        "positions",
        "uvs",
        "a",
        "b",
        "c",
        "intersection",
        "intersection",
        "a",
        "intersects",
        "intersection",
        "geometry",
        "THREE",
        "material",
        "THREE",
        "isFaceMaterial",
        "material",
        "geometry",
        "geometry",
        "geometry",
        "faceVertexUvs",
        "uvs",
        "faceVertexUvs",
        "faces",
        "f",
        "fl",
        "f",
        "faces",
        "f",
        "isFaceMaterial",
        "materials",
        "face",
        "material",
        "faceMaterial",
        "fvA",
        "vertices",
        "face",
        "fvB",
        "vertices",
        "face",
        "fvC",
        "vertices",
        "face",
        "faceMaterial",
        "geometry",
        "vA",
        "vB",
        "vC",
        "morphTargets",
        "t",
        "tl",
        "t",
        "morphInfluences",
        "t",
        "influence",
        "morphTargets",
        "t",
        "vA",
        "tempA",
        "targets",
        "face",
        "fvA",
        "influence",
        "vB",
        "tempB",
        "targets",
        "face",
        "fvB",
        "influence",
        "vC",
        "tempC",
        "targets",
        "face",
        "fvC",
        "influence",
        "vA",
        "fvA",
        "vB",
        "fvB",
        "vC",
        "fvC",
        "fvA",
        "vA",
        "fvB",
        "vB",
        "fvC",
        "vC",
        "intersection",
        "checkIntersection",
        "raycaster",
        "ray",
        "fvA",
        "fvB",
        "fvC",
        "intersectionPoint",
        "intersection",
        "uvs",
        "uvs",
        "f",
        "uvA",
        "uvs_f",
        "uvB",
        "uvs_f",
        "uvC",
        "uvs_f",
        "intersection",
        "uvIntersection",
        "intersectionPoint",
        "fvA",
        "fvB",
        "fvC",
        "uvA",
        "uvB",
        "uvC",
        "intersection",
        "face",
        "intersection",
        "f",
        "intersects",
        "intersection",
        "THREE",
        "THREE",
        "skin",
        "THREE",
        "skin",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "THREE",
        "bones",
        "boneInverses",
        "useVertexTexture",
        "useVertexTexture",
        "useVertexTexture",
        "THREE",
        "bones",
        "bones",
        "bones",
        "size",
        "THREE",
        "size",
        "size",
        "size",
        "size",
        "size",
        "Float32Array",
        "THREE",
        "THREE",
        "THREE",
        "Float32Array",
        "boneInverses",
        "boneInverses",
        "boneInverses",
        "b",
        "bl",
        "b",
        "THREE",
        "THREE",
        "b",
        "bl",
        "b",
        "THREE",
        "b",
        "inverse",
        "b",
        "inverse",
        "THREE",
        "b",
        "bl",
        "b",
        "bone",
        "b",
        "bone",
        "bone",
        "b",
        "b",
        "bl",
        "b",
        "bone",
        "b",
        "bone",
        "bone",
        "bone",
        "bone",
        "bone",
        "bone",
        "bone",
        "bone",
        "bone",
        "bone",
        "bone",
        "bone",
        "THREE",
        "THREE",
        "update",
        "b",
        "bl",
        "b",
        "b",
        "b",
        "offsetMatrix",
        "matrix",
        "b",
        "offsetMatrix",
        "b",
        "THREE",
        "THREE",
        "THREE",
        "geometry",
        "material",
        "useVertexTexture",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "THREE",
        "b",
        "bl",
        "b",
        "gbone",
        "b",
        "bone",
        "THREE",
        "bones",
        "bone",
        "bone",
        "gbone",
        "bone",
        "gbone",
        "bone",
        "gbone",
        "gbone",
        "bone",
        "gbone",
        "b",
        "bl",
        "b",
        "gbone",
        "b",
        "gbone",
        "gbone",
        "bones",
        "gbone",
        "bones",
        "b",
        "bones",
        "b",
        "THREE",
        "bones",
        "useVertexTexture",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "skeleton",
        "bindMatrix",
        "skeleton",
        "bindMatrix",
        "bindMatrix",
        "bindMatrix",
        "bindMatrix",
        "THREE",
        "THREE",
        "THREE",
        "i",
        "i",
        "i",
        "sw",
        "scale",
        "Infinity",
        "sw",
        "scale",
        "sw",
        "THREE",
        "THREE",
        "i",
        "skinWeight",
        "i",
        "vec",
        "skinWeight",
        "i",
        "vec",
        "skinWeight",
        "i",
        "vec",
        "skinWeight",
        "i",
        "vec",
        "skinWeight",
        "i",
        "vec",
        "scale",
        "Infinity",
        "vec",
        "scale",
        "vec",
        "skinWeight",
        "i",
        "vec",
        "vec",
        "vec",
        "vec",
        "THREE",
        "force",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "distance",
        "distance",
        "distance",
        "distance",
        "distance",
        "l",
        "levels",
        "l",
        "distance",
        "levels",
        "l",
        "levels",
        "l",
        "distance",
        "THREE",
        "distance",
        "levels",
        "i",
        "l",
        "i",
        "distance",
        "levels",
        "i",
        "levels",
        "i",
        "THREE",
        "THREE",
        "raycast",
        "raycaster",
        "intersects",
        "matrixPosition",
        "raycaster",
        "matrixPosition",
        "distance",
        "raycaster",
        "intersects",
        "THREE",
        "THREE",
        "THREE",
        "update",
        "camera",
        "levels",
        "v1",
        "camera",
        "v2",
        "v1",
        "v2",
        "levels",
        "levels",
        "i",
        "l",
        "i",
        "distance",
        "levels",
        "i",
        "levels",
        "i",
        "levels",
        "i",
        "i",
        "l",
        "i",
        "levels",
        "i",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "levels",
        "i",
        "l",
        "i",
        "levels",
        "i",
        "level",
        "level",
        "THREE",
        "meta",
        "THREE",
        "meta",
        "data",
        "levels",
        "i",
        "l",
        "i",
        "levels",
        "i",
        "data",
        "level",
        "level",
        "data",
        "THREE",
        "Uint16Array",
        "Float32Array",
        "Float32Array",
        "THREE",
        "geometry",
        "THREE",
        "indices",
        "geometry",
        "THREE",
        "vertices",
        "geometry",
        "THREE",
        "uvs",
        "Sprite",
        "material",
        "THREE",
        "geometry",
        "material",
        "material",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "raycast",
        "raycaster",
        "intersects",
        "matrixPosition",
        "raycaster",
        "matrixPosition",
        "distanceSq",
        "guessSizeSq",
        "intersects",
        "distanceSq",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "texture",
        "size",
        "distance",
        "blending",
        "color",
        "THREE",
        "THREE",
        "texture",
        "texture",
        "size",
        "distance",
        "blending",
        "color",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "texture",
        "size",
        "distance",
        "blending",
        "color",
        "opacity",
        "size",
        "size",
        "distance",
        "distance",
        "opacity",
        "opacity",
        "color",
        "color",
        "THREE",
        "blending",
        "blending",
        "THREE",
        "distance",
        "distance",
        "distance",
        "texture",
        "size",
        "distance",
        "opacity",
        "color",
        "blending",
        "THREE",
        "f",
        "f",
        "fl",
        "f",
        "flare",
        "f",
        "flare",
        "vecX",
        "flare",
        "flare",
        "vecY",
        "flare",
        "flare",
        "flare",
        "flare",
        "flare",
        "flare",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "i",
        "l",
        "i",
        "source",
        "i",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "color",
        "near",
        "far",
        "THREE",
        "color",
        "near",
        "near",
        "far",
        "far",
        "THREE",
        "THREE",
        "THREE",
        "color",
        "density",
        "THREE",
        "color",
        "density",
        "density",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "uniforms",
        "u",
        "uniforms",
        "u",
        "uniforms",
        "u",
        "p",
        "tmp",
        "merged",
        "p",
        "tmp",
        "p",
        "merged",
        "uniforms_src",
        "u",
        "uniforms_src",
        "uniforms_dst",
        "u",
        "p",
        "uniforms_src",
        "u",
        "uniforms_src",
        "u",
        "p",
        "parameter_src",
        "THREE",
        "parameter_src",
        "THREE",
        "parameter_src",
        "THREE",
        "parameter_src",
        "THREE",
        "parameter_src",
        "THREE",
        "parameter_src",
        "THREE",
        "parameter_src",
        "THREE",
        "uniforms_dst",
        "u",
        "p",
        "parameter_src",
        "parameter_src",
        "uniforms_dst",
        "u",
        "p",
        "parameter_src",
        "uniforms_dst",
        "u",
        "p",
        "parameter_src",
        "uniforms_dst",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "Float32Array",
        "_canvas",
        "THREE",
        "THREE",
        "THREE",
        "_canvas",
        "_canvas",
        "THREE",
        "_width",
        "_height",
        "THREE",
        "_width",
        "_height",
        "THREE",
        "THREE",
        "THREE",
        "_infoRender",
        "_infoMemory",
        "_alpha",
        "_depth",
        "_stencil",
        "_antialias",
        "_premultipliedAlpha",
        "_preserveDrawingBuffer",
        "_gl",
        "_context",
        "_canvas",
        "attributes",
        "_canvas",
        "attributes",
        "_gl",
        "_canvas",
        "_canvas",
        "onContextLost",
        "error",
        "error",
        "THREE",
        "_gl",
        "extensions",
        "extensions",
        "extensions",
        "extensions",
        "extensions",
        "extensions",
        "extensions",
        "THREE",
        "THREE",
        "_gl",
        "extensions",
        "parameters",
        "THREE",
        "_gl",
        "extensions",
        "paramThreeToGL",
        "THREE",
        "THREE",
        "_gl",
        "properties",
        "THREE",
        "capabilities",
        "THREE",
        "programCache",
        "THREE",
        "_gl",
        "extensions",
        "_infoRender",
        "THREE",
        "_gl",
        "extensions",
        "_infoRender",
        "_currentRenderTarget",
        "_pixelRatio",
        "r",
        "g",
        "b",
        "a",
        "_premultipliedAlpha",
        "r",
        "a",
        "g",
        "a",
        "b",
        "a",
        "state",
        "r",
        "g",
        "b",
        "a",
        "state",
        "state",
        "_currentScissor",
        "_scissor",
        "_pixelRatio",
        "state",
        "_currentViewport",
        "_viewport",
        "_pixelRatio",
        "glClearColor",
        "_clearColor",
        "_clearColor",
        "_clearColor",
        "_clearAlpha",
        "_currentProgram",
        "_currentCamera",
        "_currentGeometryProgram",
        "_currentMaterialId",
        "state",
        "setDefaultGLState",
        "_gl",
        "capabilities",
        "extensions",
        "properties",
        "state",
        "THREE",
        "_lights",
        "objects",
        "shadowMap",
        "THREE",
        "sprites",
        "THREE",
        "lensFlares",
        "_gl",
        "_gl",
        "extensions",
        "getMaxAnisotropy",
        "value",
        "value",
        "extensions",
        "extension",
        "value",
        "_gl",
        "extension",
        "value",
        "value",
        "capabilities",
        "_pixelRatio",
        "value",
        "value",
        "_pixelRatio",
        "value",
        "_viewport",
        "_viewport",
        "_width",
        "_height",
        "width",
        "height",
        "updateStyle",
        "_width",
        "width",
        "_height",
        "height",
        "_canvas",
        "width",
        "_pixelRatio",
        "_canvas",
        "height",
        "_pixelRatio",
        "updateStyle",
        "_canvas",
        "width",
        "_canvas",
        "height",
        "width",
        "height",
        "x",
        "y",
        "width",
        "height",
        "state",
        "_viewport",
        "x",
        "y",
        "width",
        "height",
        "x",
        "y",
        "width",
        "height",
        "state",
        "_scissor",
        "x",
        "y",
        "width",
        "height",
        "state",
        "_scissorTest",
        "_clearColor",
        "color",
        "alpha",
        "_clearColor",
        "color",
        "_clearAlpha",
        "alpha",
        "alpha",
        "glClearColor",
        "_clearColor",
        "_clearColor",
        "_clearColor",
        "_clearAlpha",
        "_clearAlpha",
        "alpha",
        "_clearAlpha",
        "alpha",
        "glClearColor",
        "_clearColor",
        "_clearColor",
        "_clearColor",
        "_clearAlpha",
        "color",
        "depth",
        "stencil",
        "color",
        "color",
        "bits",
        "_gl",
        "depth",
        "depth",
        "bits",
        "_gl",
        "stencil",
        "stencil",
        "bits",
        "_gl",
        "_gl",
        "bits",
        "renderTarget",
        "color",
        "depth",
        "stencil",
        "renderTarget",
        "color",
        "depth",
        "stencil",
        "resetGLState",
        "_canvas",
        "onContextLost",
        "resetGLState",
        "setDefaultGLState",
        "properties",
        "texture",
        "onTextureDispose",
        "deallocateTexture",
        "texture",
        "_infoMemory",
        "renderTarget",
        "onRenderTargetDispose",
        "deallocateRenderTarget",
        "renderTarget",
        "_infoMemory",
        "material",
        "onMaterialDispose",
        "deallocateMaterial",
        "material",
        "texture",
        "properties",
        "texture",
        "texture",
        "textureProperties",
        "_gl",
        "textureProperties",
        "textureProperties",
        "_gl",
        "textureProperties",
        "properties",
        "texture",
        "renderTarget",
        "properties",
        "renderTarget",
        "properties",
        "renderTarget",
        "renderTarget",
        "textureProperties",
        "_gl",
        "textureProperties",
        "renderTarget",
        "THREE",
        "i",
        "i",
        "_gl",
        "renderTargetProperties",
        "i",
        "_gl",
        "renderTargetProperties",
        "i",
        "_gl",
        "renderTargetProperties",
        "_gl",
        "renderTargetProperties",
        "properties",
        "renderTarget",
        "properties",
        "renderTarget",
        "material",
        "releaseMaterialProgramReference",
        "material",
        "properties",
        "material",
        "material",
        "properties",
        "material",
        "material",
        "programInfo",
        "programCache",
        "programInfo",
        "program",
        "material",
        "state",
        "properties",
        "buffers",
        "buffers",
        "_gl",
        "buffers",
        "buffers",
        "_gl",
        "buffers",
        "buffers",
        "_gl",
        "buffers",
        "buffers",
        "_gl",
        "program",
        "_gl",
        "_gl",
        "buffers",
        "_gl",
        "_gl",
        "_gl",
        "state",
        "attributes",
        "_gl",
        "attributes",
        "_gl",
        "_gl",
        "_gl",
        "buffers",
        "material",
        "material",
        "material",
        "THREE",
        "i",
        "l",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "nx",
        "array",
        "i",
        "ny",
        "array",
        "i",
        "nz",
        "array",
        "i",
        "nx",
        "array",
        "i",
        "ny",
        "array",
        "i",
        "nz",
        "array",
        "i",
        "nx",
        "array",
        "i",
        "ny",
        "array",
        "i",
        "nz",
        "_gl",
        "_gl",
        "_gl",
        "state",
        "attributes",
        "_gl",
        "attributes",
        "_gl",
        "material",
        "_gl",
        "_gl",
        "buffers",
        "_gl",
        "_gl",
        "_gl",
        "state",
        "attributes",
        "_gl",
        "attributes",
        "_gl",
        "material",
        "THREE",
        "_gl",
        "_gl",
        "buffers",
        "_gl",
        "_gl",
        "_gl",
        "state",
        "attributes",
        "_gl",
        "attributes",
        "_gl",
        "state",
        "_gl",
        "_gl",
        "camera",
        "fog",
        "geometry",
        "material",
        "group",
        "setMaterial",
        "material",
        "setProgram",
        "camera",
        "fog",
        "material",
        "geometry",
        "program",
        "material",
        "geometryProgram",
        "_currentGeometryProgram",
        "_currentGeometryProgram",
        "geometryProgram",
        "updateBuffers",
        "morphTargetInfluences",
        "morphTargetInfluences",
        "i",
        "l",
        "i",
        "morphTargetInfluences",
        "i",
        "activeInfluences",
        "influence",
        "i",
        "activeInfluences",
        "absNumericalSort",
        "activeInfluences",
        "activeInfluences",
        "geometry",
        "activeInfluences",
        "i",
        "l",
        "i",
        "activeInfluences",
        "i",
        "morphInfluences",
        "i",
        "influence",
        "influence",
        "influence",
        "material",
        "morphAttributes",
        "geometry",
        "i",
        "morphAttributes",
        "index",
        "material",
        "morphAttributes",
        "geometry",
        "i",
        "morphAttributes",
        "index",
        "material",
        "geometry",
        "i",
        "material",
        "geometry",
        "i",
        "program",
        "uniforms",
        "_gl",
        "uniforms",
        "morphInfluences",
        "updateBuffers",
        "geometry",
        "geometry",
        "material",
        "index",
        "objects",
        "geometry",
        "index",
        "renderer",
        "indexedBufferRenderer",
        "renderer",
        "index",
        "renderer",
        "bufferRenderer",
        "updateBuffers",
        "setupVertexAttributes",
        "material",
        "program",
        "geometry",
        "index",
        "_gl",
        "_gl",
        "objects",
        "index",
        "index",
        "dataCount",
        "index",
        "position",
        "dataCount",
        "position",
        "geometry",
        "geometry",
        "group",
        "group",
        "group",
        "group",
        "Infinity",
        "dataStart",
        "rangeStart",
        "groupStart",
        "dataStart",
        "dataCount",
        "rangeStart",
        "rangeCount",
        "groupStart",
        "groupCount",
        "drawEnd",
        "drawStart",
        "THREE",
        "material",
        "state",
        "material",
        "getTargetPixelRatio",
        "renderer",
        "_gl",
        "THREE",
        "renderer",
        "_gl",
        "THREE",
        "renderer",
        "_gl",
        "THREE",
        "renderer",
        "_gl",
        "THREE",
        "material",
        "lineWidth",
        "lineWidth",
        "state",
        "lineWidth",
        "getTargetPixelRatio",
        "THREE",
        "renderer",
        "_gl",
        "renderer",
        "_gl",
        "THREE",
        "renderer",
        "_gl",
        "geometry",
        "THREE",
        "geometry",
        "renderer",
        "geometry",
        "drawStart",
        "drawCount",
        "renderer",
        "drawStart",
        "drawCount",
        "material",
        "program",
        "geometry",
        "startIndex",
        "geometry",
        "THREE",
        "extension",
        "extensions",
        "extension",
        "startIndex",
        "startIndex",
        "state",
        "geometry",
        "program",
        "material",
        "name",
        "programAttributes",
        "programAttributes",
        "name",
        "programAttribute",
        "geometryAttributes",
        "name",
        "geometryAttribute",
        "geometryAttribute",
        "objects",
        "geometryAttribute",
        "geometryAttribute",
        "THREE",
        "geometryAttribute",
        "data",
        "geometryAttribute",
        "data",
        "THREE",
        "state",
        "programAttribute",
        "data",
        "extension",
        "geometry",
        "geometry",
        "data",
        "data",
        "state",
        "programAttribute",
        "_gl",
        "_gl",
        "buffer",
        "_gl",
        "programAttribute",
        "size",
        "_gl",
        "stride",
        "data",
        "startIndex",
        "stride",
        "offset",
        "data",
        "geometryAttribute",
        "THREE",
        "state",
        "programAttribute",
        "geometryAttribute",
        "extension",
        "geometry",
        "geometry",
        "geometryAttribute",
        "geometryAttribute",
        "state",
        "programAttribute",
        "_gl",
        "_gl",
        "buffer",
        "_gl",
        "programAttribute",
        "size",
        "_gl",
        "startIndex",
        "size",
        "materialDefaultAttributeValues",
        "materialDefaultAttributeValues",
        "name",
        "value",
        "value",
        "_gl",
        "programAttribute",
        "value",
        "_gl",
        "programAttribute",
        "value",
        "_gl",
        "programAttribute",
        "value",
        "_gl",
        "programAttribute",
        "value",
        "state",
        "a",
        "b",
        "b",
        "a",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "b",
        "a",
        "a",
        "b",
        "scene",
        "camera",
        "renderTarget",
        "forceClear",
        "camera",
        "THREE",
        "scene",
        "_currentGeometryProgram",
        "_currentMaterialId",
        "_currentCamera",
        "scene",
        "scene",
        "camera",
        "camera",
        "camera",
        "camera",
        "_projScreenMatrix",
        "camera",
        "camera",
        "_frustum",
        "_projScreenMatrix",
        "lights",
        "opaqueObjectsLastIndex",
        "transparentObjectsLastIndex",
        "sprites",
        "lensFlares",
        "projectObject",
        "scene",
        "camera",
        "opaqueObjects",
        "opaqueObjectsLastIndex",
        "transparentObjects",
        "transparentObjectsLastIndex",
        "_this",
        "opaqueObjects",
        "painterSortStable",
        "transparentObjects",
        "reversePainterSortStable",
        "setupLights",
        "lights",
        "camera",
        "shadowMap",
        "scene",
        "camera",
        "_infoRender",
        "_infoRender",
        "_infoRender",
        "_infoRender",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "forceClear",
        "scene",
        "scene",
        "renderObjects",
        "opaqueObjects",
        "camera",
        "fog",
        "overrideMaterial",
        "renderObjects",
        "transparentObjects",
        "camera",
        "fog",
        "overrideMaterial",
        "state",
        "THREE",
        "renderObjects",
        "opaqueObjects",
        "camera",
        "fog",
        "renderObjects",
        "transparentObjects",
        "camera",
        "fog",
        "spritePlugin",
        "scene",
        "camera",
        "lensFlarePlugin",
        "scene",
        "camera",
        "_currentViewport",
        "renderTarget",
        "renderTarget",
        "texture",
        "isPowerOfTwo",
        "renderTarget",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "updateRenderTargetMipmap",
        "renderTarget",
        "state",
        "state",
        "state",
        "geometry",
        "material",
        "z",
        "group",
        "material",
        "array",
        "transparentObjects",
        "index",
        "transparentObjectsLastIndex",
        "array",
        "opaqueObjects",
        "index",
        "opaqueObjectsLastIndex",
        "array",
        "index",
        "renderItem",
        "renderItem",
        "renderItem",
        "renderItem",
        "geometry",
        "renderItem",
        "material",
        "renderItem",
        "_vector3",
        "renderItem",
        "group",
        "renderItem",
        "geometry",
        "material",
        "_vector3",
        "group",
        "array",
        "renderItem",
        "camera",
        "camera",
        "THREE",
        "lights",
        "THREE",
        "_frustum",
        "sprites",
        "THREE",
        "lensFlares",
        "THREE",
        "_this",
        "_vector3",
        "_vector3",
        "_projScreenMatrix",
        "pushRenderItem",
        "_vector3",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "_frustum",
        "material",
        "_this",
        "_vector3",
        "_vector3",
        "_projScreenMatrix",
        "objects",
        "material",
        "THREE",
        "geometry",
        "material",
        "groups",
        "i",
        "l",
        "i",
        "groups",
        "i",
        "materials",
        "group",
        "groupMaterial",
        "pushRenderItem",
        "geometry",
        "groupMaterial",
        "_vector3",
        "group",
        "pushRenderItem",
        "geometry",
        "material",
        "_vector3",
        "children",
        "i",
        "l",
        "i",
        "projectObject",
        "children",
        "i",
        "camera",
        "renderList",
        "camera",
        "fog",
        "overrideMaterial",
        "renderList",
        "i",
        "l",
        "i",
        "renderList",
        "i",
        "renderItem",
        "renderItem",
        "overrideMaterial",
        "renderItem",
        "overrideMaterial",
        "renderItem",
        "camera",
        "THREE",
        "setMaterial",
        "material",
        "setProgram",
        "camera",
        "fog",
        "material",
        "_currentGeometryProgram",
        "_this",
        "program",
        "material",
        "_this",
        "camera",
        "fog",
        "geometry",
        "material",
        "group",
        "material",
        "fog",
        "properties",
        "material",
        "programCache",
        "material",
        "_lights",
        "fog",
        "programCache",
        "material",
        "parameters",
        "materialProperties",
        "program",
        "material",
        "onMaterialDispose",
        "program",
        "code",
        "releaseMaterialProgramReference",
        "material",
        "parameters",
        "programChange",
        "programChange",
        "parameters",
        "THREE",
        "parameters",
        "materialProperties",
        "material",
        "THREE",
        "shader",
        "shader",
        "shader",
        "materialProperties",
        "material",
        "material",
        "material",
        "material",
        "material",
        "materialProperties",
        "program",
        "programCache",
        "material",
        "parameters",
        "code",
        "materialProperties",
        "program",
        "material",
        "program",
        "program",
        "material",
        "material",
        "i",
        "_this",
        "i",
        "attributes",
        "i",
        "material",
        "material",
        "material",
        "i",
        "_this",
        "i",
        "attributes",
        "i",
        "material",
        "materialProperties",
        "materialProperties",
        "materialProperties",
        "u",
        "uniforms",
        "uniformLocations",
        "u",
        "location",
        "materialProperties",
        "materialProperties",
        "u",
        "location",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "materialProperties",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "materialProperties",
        "materialProperties",
        "j",
        "jl",
        "j",
        "materialProperties",
        "j",
        "uniform",
        "materialProperties",
        "material",
        "setMaterialFaces",
        "material",
        "material",
        "state",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "state",
        "THREE",
        "state",
        "material",
        "state",
        "material",
        "state",
        "material",
        "state",
        "material",
        "state",
        "material",
        "material",
        "material",
        "material",
        "material",
        "THREE",
        "state",
        "_gl",
        "state",
        "_gl",
        "state",
        "material",
        "THREE",
        "camera",
        "fog",
        "material",
        "_usedTextureUnits",
        "properties",
        "material",
        "materialProperties",
        "material",
        "materialProperties",
        "materialProperties",
        "_lights",
        "material",
        "material",
        "initMaterial",
        "material",
        "fog",
        "material",
        "materialProperties",
        "program",
        "materialProperties",
        "program",
        "_currentProgram",
        "_gl",
        "program",
        "_currentProgram",
        "program",
        "refreshProgram",
        "refreshMaterial",
        "refreshLights",
        "material",
        "_currentMaterialId",
        "_currentMaterialId",
        "material",
        "refreshMaterial",
        "refreshProgram",
        "camera",
        "_currentCamera",
        "_gl",
        "p_uniforms",
        "camera",
        "capabilities",
        "_gl",
        "p_uniforms",
        "camera",
        "camera",
        "_currentCamera",
        "_currentCamera",
        "camera",
        "refreshMaterial",
        "refreshLights",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "p_uniforms",
        "_vector3",
        "camera",
        "_gl",
        "p_uniforms",
        "_vector3",
        "_vector3",
        "_vector3",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "camera",
        "material",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "capabilities",
        "p_uniforms",
        "getTextureUnit",
        "_gl",
        "p_uniforms",
        "textureUnit",
        "_this",
        "textureUnit",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "refreshMaterial",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "markUniformsLightsNeedsUpdate",
        "m_uniforms",
        "refreshLights",
        "fog",
        "material",
        "refreshUniformsFog",
        "m_uniforms",
        "fog",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "THREE",
        "refreshUniformsCommon",
        "m_uniforms",
        "material",
        "material",
        "THREE",
        "refreshUniformsLine",
        "m_uniforms",
        "material",
        "material",
        "THREE",
        "refreshUniformsLine",
        "m_uniforms",
        "material",
        "refreshUniformsDash",
        "m_uniforms",
        "material",
        "material",
        "THREE",
        "refreshUniformsPoints",
        "m_uniforms",
        "material",
        "material",
        "THREE",
        "refreshUniformsLambert",
        "m_uniforms",
        "material",
        "material",
        "THREE",
        "refreshUniformsPhong",
        "m_uniforms",
        "material",
        "material",
        "THREE",
        "refreshUniformsStandard",
        "m_uniforms",
        "material",
        "material",
        "THREE",
        "m_uniforms",
        "camera",
        "m_uniforms",
        "camera",
        "m_uniforms",
        "material",
        "material",
        "THREE",
        "m_uniforms",
        "material",
        "loadUniformsGeneric",
        "materialProperties",
        "loadUniformsMatrices",
        "p_uniforms",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "materialProperties",
        "updateDynamicUniforms",
        "materialProperties",
        "camera",
        "program",
        "uniforms",
        "camera",
        "uniforms",
        "j",
        "jl",
        "j",
        "uniforms",
        "j",
        "uniform",
        "onUpdateCallback",
        "onUpdateCallback",
        "uniform",
        "camera",
        "dynamicUniforms",
        "uniforms",
        "j",
        "loadUniformsGeneric",
        "dynamicUniforms",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uvScaleMap",
        "material",
        "material",
        "uvScaleMap",
        "material",
        "material",
        "uvScaleMap",
        "material",
        "material",
        "uvScaleMap",
        "material",
        "material",
        "uvScaleMap",
        "material",
        "material",
        "uvScaleMap",
        "material",
        "material",
        "uvScaleMap",
        "material",
        "material",
        "uvScaleMap",
        "material",
        "material",
        "uvScaleMap",
        "material",
        "uvScaleMap",
        "uvScaleMap",
        "THREE",
        "uvScaleMap",
        "uvScaleMap",
        "uvScaleMap",
        "uvScaleMap",
        "uniforms",
        "offset",
        "offset",
        "repeat",
        "repeat",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "THREE",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "_pixelRatio",
        "uniforms",
        "_canvas",
        "uniforms",
        "material",
        "material",
        "material",
        "material",
        "uniforms",
        "offset",
        "offset",
        "repeat",
        "repeat",
        "uniforms",
        "fog",
        "uniforms",
        "fog",
        "fog",
        "THREE",
        "uniforms",
        "fog",
        "uniforms",
        "fog",
        "fog",
        "THREE",
        "uniforms",
        "fog",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "uniforms",
        "_gl",
        "uniforms",
        "uniforms",
        "_gl",
        "uniforms",
        "textureUnit",
        "capabilities",
        "textureUnit",
        "capabilities",
        "_usedTextureUnits",
        "textureUnit",
        "uniforms",
        "uniforms",
        "j",
        "jl",
        "j",
        "uniforms",
        "j",
        "uniform",
        "uniform",
        "uniform",
        "uniforms",
        "j",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "value",
        "_gl",
        "location",
        "value",
        "value",
        "value",
        "_gl",
        "location",
        "value",
        "value",
        "value",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "value",
        "_gl",
        "location",
        "value",
        "value",
        "value",
        "_gl",
        "location",
        "value",
        "value",
        "value",
        "value",
        "_gl",
        "location",
        "value",
        "value",
        "value",
        "i",
        "value",
        "i",
        "propertyName",
        "uniform",
        "uniform",
        "propertyName",
        "location",
        "i",
        "propertyName",
        "value",
        "i",
        "propertyName",
        "property",
        "_gl",
        "locationProperty",
        "valueProperty",
        "_gl",
        "locationProperty",
        "valueProperty",
        "_gl",
        "locationProperty",
        "valueProperty",
        "valueProperty",
        "_gl",
        "locationProperty",
        "valueProperty",
        "valueProperty",
        "valueProperty",
        "_gl",
        "locationProperty",
        "valueProperty",
        "valueProperty",
        "valueProperty",
        "valueProperty",
        "_gl",
        "locationProperty",
        "valueProperty",
        "valueProperty",
        "valueProperty",
        "_gl",
        "locationProperty",
        "valueProperty",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "uniform",
        "uniform",
        "Float32Array",
        "value",
        "value",
        "i",
        "il",
        "i",
        "i2",
        "uniform",
        "i2",
        "value",
        "i",
        "uniform",
        "i2",
        "value",
        "i",
        "_gl",
        "location",
        "uniform",
        "uniform",
        "uniform",
        "Float32Array",
        "value",
        "value",
        "i",
        "il",
        "i",
        "i3",
        "uniform",
        "i3",
        "value",
        "i",
        "uniform",
        "i3",
        "value",
        "i",
        "uniform",
        "i3",
        "value",
        "i",
        "_gl",
        "location",
        "uniform",
        "uniform",
        "uniform",
        "Float32Array",
        "value",
        "value",
        "i",
        "il",
        "i",
        "i4",
        "uniform",
        "i4",
        "value",
        "i",
        "uniform",
        "i4",
        "value",
        "i",
        "uniform",
        "i4",
        "value",
        "i",
        "uniform",
        "i4",
        "value",
        "i",
        "_gl",
        "location",
        "uniform",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "uniform",
        "uniform",
        "Float32Array",
        "value",
        "value",
        "i",
        "il",
        "i",
        "value",
        "i",
        "uniform",
        "i",
        "_gl",
        "location",
        "uniform",
        "_gl",
        "location",
        "value",
        "uniform",
        "uniform",
        "Float32Array",
        "value",
        "value",
        "i",
        "il",
        "i",
        "value",
        "i",
        "uniform",
        "i",
        "_gl",
        "location",
        "uniform",
        "texture",
        "value",
        "textureUnit",
        "getTextureUnit",
        "_gl",
        "location",
        "textureUnit",
        "texture",
        "texture",
        "THREE",
        "texture",
        "texture",
        "setCubeTexture",
        "texture",
        "textureUnit",
        "texture",
        "THREE",
        "setCubeTextureDynamic",
        "texture",
        "textureUnit",
        "texture",
        "THREE",
        "_this",
        "texture",
        "textureUnit",
        "_this",
        "texture",
        "textureUnit",
        "uniform",
        "uniform",
        "uniform",
        "i",
        "il",
        "i",
        "uniform",
        "i",
        "getTextureUnit",
        "_gl",
        "location",
        "uniform",
        "uniform",
        "i",
        "il",
        "i",
        "texture",
        "uniform",
        "i",
        "textureUnit",
        "uniform",
        "i",
        "texture",
        "texture",
        "THREE",
        "texture",
        "texture",
        "setCubeTexture",
        "texture",
        "textureUnit",
        "texture",
        "THREE",
        "_this",
        "texture",
        "textureUnit",
        "texture",
        "THREE",
        "setCubeTextureDynamic",
        "texture",
        "textureUnit",
        "_this",
        "texture",
        "textureUnit",
        "lights",
        "camera",
        "camera",
        "_lights",
        "l",
        "ll",
        "lights",
        "l",
        "ll",
        "l",
        "light",
        "lights",
        "l",
        "color",
        "light",
        "intensity",
        "light",
        "distance",
        "light",
        "light",
        "THREE",
        "r",
        "color",
        "intensity",
        "g",
        "color",
        "intensity",
        "b",
        "color",
        "intensity",
        "light",
        "THREE",
        "lightCache",
        "light",
        "uniforms",
        "light",
        "light",
        "uniforms",
        "light",
        "_vector3",
        "light",
        "uniforms",
        "_vector3",
        "uniforms",
        "viewMatrix",
        "uniforms",
        "light",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "_lights",
        "shadowsLength",
        "light",
        "_lights",
        "directionalLength",
        "light",
        "_lights",
        "directionalLength",
        "light",
        "_lights",
        "directionalLength",
        "uniforms",
        "light",
        "THREE",
        "lightCache",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "viewMatrix",
        "uniforms",
        "color",
        "intensity",
        "uniforms",
        "distance",
        "uniforms",
        "light",
        "_vector3",
        "light",
        "uniforms",
        "_vector3",
        "uniforms",
        "viewMatrix",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "light",
        "uniforms",
        "light",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "_lights",
        "shadowsLength",
        "light",
        "_lights",
        "spotLength",
        "light",
        "_lights",
        "spotLength",
        "light",
        "_lights",
        "spotLength",
        "uniforms",
        "light",
        "THREE",
        "lightCache",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "viewMatrix",
        "uniforms",
        "light",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "light",
        "uniforms",
        "light",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "_lights",
        "shadowsLength",
        "light",
        "_lights",
        "pointLength",
        "light",
        "_lights",
        "pointLength",
        "_lights",
        "pointLength",
        "THREE",
        "_vector3",
        "light",
        "_lights",
        "pointLength",
        "_vector3",
        "_lights",
        "pointLength",
        "uniforms",
        "light",
        "THREE",
        "lightCache",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "viewMatrix",
        "uniforms",
        "uniforms",
        "light",
        "intensity",
        "uniforms",
        "light",
        "intensity",
        "_lights",
        "hemiLength",
        "uniforms",
        "_lights",
        "r",
        "_lights",
        "g",
        "_lights",
        "b",
        "_lights",
        "directionalLength",
        "_lights",
        "spotLength",
        "_lights",
        "pointLength",
        "_lights",
        "hemiLength",
        "_lights",
        "shadowsLength",
        "_lights",
        "directionalLength",
        "pointLength",
        "spotLength",
        "hemiLength",
        "shadowsLength",
        "cullFace",
        "frontFaceDirection",
        "cullFace",
        "THREE",
        "state",
        "_gl",
        "frontFaceDirection",
        "THREE",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "cullFace",
        "THREE",
        "_gl",
        "_gl",
        "cullFace",
        "THREE",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "state",
        "_gl",
        "textureType",
        "texture",
        "isPowerOfTwoImage",
        "isPowerOfTwoImage",
        "_gl",
        "textureType",
        "_gl",
        "paramThreeToGL",
        "texture",
        "_gl",
        "textureType",
        "_gl",
        "paramThreeToGL",
        "texture",
        "_gl",
        "textureType",
        "_gl",
        "paramThreeToGL",
        "texture",
        "_gl",
        "textureType",
        "_gl",
        "paramThreeToGL",
        "texture",
        "_gl",
        "textureType",
        "_gl",
        "_gl",
        "_gl",
        "textureType",
        "_gl",
        "_gl",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "texture",
        "_gl",
        "textureType",
        "_gl",
        "filterFallback",
        "texture",
        "_gl",
        "textureType",
        "_gl",
        "filterFallback",
        "texture",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "texture",
        "extension",
        "extensions",
        "extension",
        "texture",
        "THREE",
        "extensions",
        "texture",
        "THREE",
        "extensions",
        "texture",
        "properties",
        "texture",
        "_gl",
        "textureType",
        "extension",
        "texture",
        "_this",
        "properties",
        "texture",
        "texture",
        "textureProperties",
        "texture",
        "slot",
        "textureProperties",
        "textureProperties",
        "texture",
        "onTextureDispose",
        "textureProperties",
        "_gl",
        "_infoMemory",
        "state",
        "_gl",
        "slot",
        "state",
        "_gl",
        "textureProperties",
        "_gl",
        "_gl",
        "texture",
        "_gl",
        "_gl",
        "texture",
        "_gl",
        "_gl",
        "texture",
        "clampToMaxSize",
        "texture",
        "capabilities",
        "textureNeedsPowerOfTwo",
        "texture",
        "isPowerOfTwo",
        "image",
        "image",
        "makePowerOfTwo",
        "image",
        "isPowerOfTwo",
        "image",
        "paramThreeToGL",
        "texture",
        "paramThreeToGL",
        "texture",
        "setTextureParameters",
        "_gl",
        "texture",
        "isPowerOfTwoImage",
        "texture",
        "texture",
        "THREE",
        "mipmaps",
        "isPowerOfTwoImage",
        "mipmaps",
        "i",
        "il",
        "i",
        "mipmap",
        "mipmaps",
        "i",
        "state",
        "_gl",
        "i",
        "glFormat",
        "mipmap",
        "mipmap",
        "glFormat",
        "glType",
        "mipmap",
        "texture",
        "state",
        "_gl",
        "glFormat",
        "image",
        "image",
        "glFormat",
        "glType",
        "image",
        "texture",
        "THREE",
        "mipmaps",
        "i",
        "il",
        "i",
        "mipmap",
        "mipmaps",
        "i",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "state",
        "glFormat",
        "state",
        "_gl",
        "i",
        "glFormat",
        "mipmap",
        "mipmap",
        "mipmap",
        "state",
        "_gl",
        "i",
        "glFormat",
        "mipmap",
        "mipmap",
        "glFormat",
        "glType",
        "mipmap",
        "mipmaps",
        "isPowerOfTwoImage",
        "mipmaps",
        "i",
        "il",
        "i",
        "mipmap",
        "mipmaps",
        "i",
        "state",
        "_gl",
        "i",
        "glFormat",
        "glFormat",
        "glType",
        "mipmap",
        "texture",
        "state",
        "_gl",
        "glFormat",
        "glFormat",
        "glType",
        "image",
        "texture",
        "isPowerOfTwoImage",
        "_gl",
        "_gl",
        "textureProperties",
        "texture",
        "texture",
        "texture",
        "texture",
        "texture",
        "slot",
        "properties",
        "texture",
        "texture",
        "textureProperties",
        "texture",
        "texture",
        "image",
        "texture",
        "image",
        "texture",
        "uploadTexture",
        "textureProperties",
        "texture",
        "slot",
        "state",
        "_gl",
        "slot",
        "state",
        "_gl",
        "textureProperties",
        "image",
        "maxSize",
        "image",
        "maxSize",
        "image",
        "maxSize",
        "maxSize",
        "image",
        "image",
        "canvas",
        "image",
        "scale",
        "canvas",
        "image",
        "scale",
        "canvas",
        "context",
        "image",
        "image",
        "image",
        "canvas",
        "canvas",
        "image",
        "image",
        "canvas",
        "canvas",
        "image",
        "canvas",
        "image",
        "image",
        "THREE",
        "image",
        "THREE",
        "image",
        "texture",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "image",
        "image",
        "HTMLImageElement",
        "image",
        "HTMLCanvasElement",
        "canvas",
        "THREE",
        "image",
        "canvas",
        "THREE",
        "image",
        "canvas",
        "context",
        "image",
        "canvas",
        "canvas",
        "image",
        "image",
        "canvas",
        "canvas",
        "image",
        "canvas",
        "image",
        "texture",
        "slot",
        "properties",
        "texture",
        "texture",
        "texture",
        "textureProperties",
        "texture",
        "textureProperties",
        "texture",
        "onTextureDispose",
        "textureProperties",
        "_gl",
        "_infoMemory",
        "state",
        "_gl",
        "slot",
        "state",
        "_gl",
        "textureProperties",
        "_gl",
        "_gl",
        "texture",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "i",
        "i",
        "_this",
        "isCompressed",
        "isDataTexture",
        "cubeImage",
        "i",
        "clampToMaxSize",
        "texture",
        "i",
        "capabilities",
        "cubeImage",
        "i",
        "isDataTexture",
        "texture",
        "i",
        "texture",
        "i",
        "cubeImage",
        "isPowerOfTwo",
        "image",
        "paramThreeToGL",
        "texture",
        "paramThreeToGL",
        "texture",
        "setTextureParameters",
        "_gl",
        "texture",
        "isPowerOfTwoImage",
        "i",
        "i",
        "isCompressed",
        "isDataTexture",
        "state",
        "_gl",
        "i",
        "glFormat",
        "cubeImage",
        "i",
        "cubeImage",
        "i",
        "glFormat",
        "glType",
        "cubeImage",
        "i",
        "state",
        "_gl",
        "i",
        "glFormat",
        "glFormat",
        "glType",
        "cubeImage",
        "i",
        "cubeImage",
        "i",
        "mipmaps",
        "j",
        "jl",
        "j",
        "mipmap",
        "mipmaps",
        "j",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "state",
        "glFormat",
        "state",
        "_gl",
        "i",
        "j",
        "glFormat",
        "mipmap",
        "mipmap",
        "mipmap",
        "state",
        "_gl",
        "i",
        "j",
        "glFormat",
        "mipmap",
        "mipmap",
        "glFormat",
        "glType",
        "mipmap",
        "texture",
        "isPowerOfTwoImage",
        "_gl",
        "_gl",
        "textureProperties",
        "texture",
        "texture",
        "texture",
        "texture",
        "state",
        "_gl",
        "slot",
        "state",
        "_gl",
        "textureProperties",
        "texture",
        "slot",
        "state",
        "_gl",
        "slot",
        "state",
        "_gl",
        "properties",
        "texture",
        "framebuffer",
        "renderTarget",
        "attachment",
        "textureTarget",
        "paramThreeToGL",
        "renderTarget",
        "paramThreeToGL",
        "renderTarget",
        "state",
        "textureTarget",
        "glFormat",
        "renderTarget",
        "renderTarget",
        "glFormat",
        "glType",
        "_gl",
        "_gl",
        "framebuffer",
        "_gl",
        "_gl",
        "attachment",
        "textureTarget",
        "properties",
        "renderTarget",
        "_gl",
        "_gl",
        "renderbuffer",
        "renderTarget",
        "_gl",
        "_gl",
        "renderbuffer",
        "renderTarget",
        "renderTarget",
        "_gl",
        "_gl",
        "_gl",
        "renderTarget",
        "renderTarget",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "renderbuffer",
        "renderTarget",
        "renderTarget",
        "_gl",
        "_gl",
        "_gl",
        "renderTarget",
        "renderTarget",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "renderbuffer",
        "_gl",
        "_gl",
        "_gl",
        "renderTarget",
        "renderTarget",
        "_gl",
        "_gl",
        "renderTarget",
        "properties",
        "renderTarget",
        "renderTarget",
        "THREE",
        "isCube",
        "renderTargetProperties",
        "i",
        "i",
        "_gl",
        "_gl",
        "renderTargetProperties",
        "i",
        "renderTargetProperties",
        "i",
        "_gl",
        "setupRenderBufferStorage",
        "renderTargetProperties",
        "i",
        "renderTarget",
        "_gl",
        "_gl",
        "renderTargetProperties",
        "renderTargetProperties",
        "_gl",
        "setupRenderBufferStorage",
        "renderTargetProperties",
        "renderTarget",
        "_gl",
        "_gl",
        "renderTarget",
        "properties",
        "renderTarget",
        "properties",
        "renderTarget",
        "renderTarget",
        "onRenderTargetDispose",
        "textureProperties",
        "_gl",
        "_infoMemory",
        "renderTarget",
        "THREE",
        "THREE",
        "renderTarget",
        "THREE",
        "renderTarget",
        "isCube",
        "renderTargetProperties",
        "i",
        "i",
        "renderTargetProperties",
        "i",
        "_gl",
        "renderTargetProperties",
        "_gl",
        "isCube",
        "state",
        "_gl",
        "textureProperties",
        "setTextureParameters",
        "_gl",
        "renderTarget",
        "isTargetPowerOfTwo",
        "i",
        "i",
        "setupFrameBufferTexture",
        "renderTargetProperties",
        "i",
        "renderTarget",
        "_gl",
        "_gl",
        "i",
        "renderTarget",
        "isTargetPowerOfTwo",
        "_gl",
        "_gl",
        "state",
        "_gl",
        "state",
        "_gl",
        "textureProperties",
        "setTextureParameters",
        "_gl",
        "renderTarget",
        "isTargetPowerOfTwo",
        "setupFrameBufferTexture",
        "renderTargetProperties",
        "renderTarget",
        "_gl",
        "_gl",
        "renderTarget",
        "isTargetPowerOfTwo",
        "_gl",
        "_gl",
        "state",
        "_gl",
        "renderTarget",
        "setupDepthRenderbuffer",
        "renderTarget",
        "renderTarget",
        "_currentRenderTarget",
        "renderTarget",
        "renderTarget",
        "properties",
        "renderTarget",
        "setupRenderTarget",
        "renderTarget",
        "renderTarget",
        "THREE",
        "renderTarget",
        "properties",
        "renderTarget",
        "isCube",
        "framebuffer",
        "renderTargetProperties",
        "renderTarget",
        "framebuffer",
        "renderTargetProperties",
        "_currentScissor",
        "renderTarget",
        "_currentScissorTest",
        "renderTarget",
        "_currentViewport",
        "renderTarget",
        "framebuffer",
        "_currentScissor",
        "_scissor",
        "_pixelRatio",
        "_currentScissorTest",
        "_scissorTest",
        "_currentViewport",
        "_viewport",
        "_pixelRatio",
        "_currentFramebuffer",
        "framebuffer",
        "_gl",
        "_gl",
        "framebuffer",
        "_currentFramebuffer",
        "framebuffer",
        "state",
        "_currentScissor",
        "state",
        "_currentScissorTest",
        "state",
        "_currentViewport",
        "isCube",
        "properties",
        "renderTarget",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "renderTarget",
        "textureProperties",
        "renderTarget",
        "x",
        "y",
        "width",
        "height",
        "buffer",
        "renderTarget",
        "THREE",
        "properties",
        "renderTarget",
        "framebuffer",
        "framebuffer",
        "_currentFramebuffer",
        "_gl",
        "_gl",
        "framebuffer",
        "restore",
        "renderTarget",
        "texture",
        "THREE",
        "paramThreeToGL",
        "texture",
        "_gl",
        "_gl",
        "texture",
        "THREE",
        "paramThreeToGL",
        "texture",
        "_gl",
        "_gl",
        "texture",
        "THREE",
        "extensions",
        "texture",
        "THREE",
        "extensions",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "x",
        "y",
        "width",
        "height",
        "paramThreeToGL",
        "texture",
        "paramThreeToGL",
        "texture",
        "buffer",
        "restore",
        "_gl",
        "_gl",
        "_currentFramebuffer",
        "renderTarget",
        "renderTarget",
        "THREE",
        "_gl",
        "_gl",
        "properties",
        "renderTarget",
        "state",
        "target",
        "texture",
        "_gl",
        "target",
        "state",
        "target",
        "f",
        "f",
        "THREE",
        "f",
        "THREE",
        "f",
        "THREE",
        "_gl",
        "_gl",
        "p",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "extension",
        "extensions",
        "extension",
        "p",
        "THREE",
        "extension",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "extension",
        "extensions",
        "extension",
        "p",
        "THREE",
        "extension",
        "p",
        "THREE",
        "extension",
        "p",
        "THREE",
        "extension",
        "p",
        "THREE",
        "extension",
        "extension",
        "extensions",
        "extension",
        "p",
        "THREE",
        "extension",
        "p",
        "THREE",
        "extension",
        "p",
        "THREE",
        "extension",
        "p",
        "THREE",
        "extension",
        "extension",
        "extensions",
        "extension",
        "p",
        "THREE",
        "extension",
        "extension",
        "extensions",
        "extension",
        "p",
        "THREE",
        "extension",
        "p",
        "THREE",
        "extension",
        "THREE",
        "width",
        "height",
        "options",
        "THREE",
        "width",
        "height",
        "THREE",
        "width",
        "height",
        "THREE",
        "width",
        "height",
        "options",
        "options",
        "options",
        "options",
        "THREE",
        "THREE",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "THREE",
        "THREE",
        "width",
        "height",
        "width",
        "height",
        "width",
        "height",
        "width",
        "height",
        "width",
        "height",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "THREE",
        "THREE",
        "width",
        "height",
        "options",
        "THREE",
        "width",
        "height",
        "options",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "_gl",
        "extensions",
        "_infoRender",
        "value",
        "mode",
        "value",
        "start",
        "count",
        "_gl",
        "mode",
        "start",
        "count",
        "_infoRender",
        "_infoRender",
        "count",
        "mode",
        "_gl",
        "_infoRender",
        "count",
        "geometry",
        "extensions",
        "extension",
        "geometry",
        "position",
        "THREE",
        "count",
        "position",
        "extension",
        "mode",
        "count",
        "geometry",
        "count",
        "position",
        "extension",
        "mode",
        "count",
        "geometry",
        "_infoRender",
        "_infoRender",
        "count",
        "geometry",
        "mode",
        "_gl",
        "_infoRender",
        "geometry",
        "count",
        "setMode",
        "render",
        "renderInstances",
        "THREE",
        "_gl",
        "extensions",
        "_infoRender",
        "value",
        "mode",
        "value",
        "index",
        "index",
        "Uint32Array",
        "extensions",
        "_gl",
        "size",
        "_gl",
        "size",
        "start",
        "count",
        "_gl",
        "mode",
        "count",
        "start",
        "size",
        "_infoRender",
        "_infoRender",
        "count",
        "mode",
        "_gl",
        "_infoRender",
        "count",
        "geometry",
        "start",
        "count",
        "extensions",
        "extension",
        "extension",
        "mode",
        "count",
        "start",
        "size",
        "geometry",
        "_infoRender",
        "_infoRender",
        "count",
        "geometry",
        "mode",
        "_gl",
        "_infoRender",
        "geometry",
        "count",
        "setMode",
        "setIndex",
        "render",
        "renderInstances",
        "THREE",
        "gl",
        "name",
        "extensions",
        "name",
        "extensions",
        "name",
        "name",
        "extension",
        "gl",
        "gl",
        "gl",
        "extension",
        "gl",
        "gl",
        "gl",
        "extension",
        "gl",
        "gl",
        "extension",
        "gl",
        "extension",
        "gl",
        "name",
        "extension",
        "name",
        "extensions",
        "name",
        "extension",
        "extension",
        "THREE",
        "gl",
        "extensions",
        "parameters",
        "precision",
        "precision",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "precision",
        "precision",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "getMaxPrecision",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "extensions",
        "getMaxPrecision",
        "_maxPrecision",
        "_maxPrecision",
        "_maxPrecision",
        "extensions",
        "THREE",
        "gl",
        "properties",
        "info",
        "geometries",
        "geometry",
        "geometries",
        "geometry",
        "geometry",
        "onGeometryDispose",
        "geometry",
        "THREE",
        "buffergeometry",
        "geometry",
        "geometry",
        "THREE",
        "geometry",
        "geometry",
        "THREE",
        "buffergeometry",
        "geometry",
        "geometries",
        "geometry",
        "buffergeometry",
        "info",
        "buffergeometry",
        "geometries",
        "geometry",
        "buffergeometry",
        "deleteAttribute",
        "buffergeometry",
        "deleteAttributes",
        "buffergeometry",
        "geometry",
        "onGeometryDispose",
        "geometries",
        "geometry",
        "properties",
        "geometry",
        "property",
        "deleteAttribute",
        "property",
        "properties",
        "geometry",
        "properties",
        "buffergeometry",
        "bufferproperty",
        "deleteAttribute",
        "bufferproperty",
        "properties",
        "buffergeometry",
        "info",
        "attribute",
        "attribute",
        "THREE",
        "properties",
        "attribute",
        "properties",
        "attribute",
        "attribute",
        "getAttributeBuffer",
        "attribute",
        "buffer",
        "gl",
        "buffer",
        "removeAttributeBuffer",
        "attribute",
        "attributes",
        "name",
        "attributes",
        "deleteAttribute",
        "attributes",
        "name",
        "attribute",
        "attribute",
        "THREE",
        "properties",
        "attribute",
        "properties",
        "attribute",
        "get",
        "THREE",
        "light",
        "lights",
        "light",
        "lights",
        "light",
        "light",
        "uniforms",
        "THREE",
        "THREE",
        "THREE",
        "uniforms",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "uniforms",
        "THREE",
        "THREE",
        "THREE",
        "uniforms",
        "THREE",
        "THREE",
        "THREE",
        "lights",
        "light",
        "uniforms",
        "uniforms",
        "THREE",
        "gl",
        "properties",
        "info",
        "THREE",
        "gl",
        "properties",
        "info",
        "geometries",
        "THREE",
        "geometry",
        "geometry",
        "geometry",
        "index",
        "updateAttribute",
        "index",
        "gl",
        "name",
        "attributes",
        "updateAttribute",
        "attributes",
        "name",
        "gl",
        "geometry",
        "name",
        "morphAttributes",
        "morphAttributes",
        "name",
        "array",
        "i",
        "l",
        "i",
        "updateAttribute",
        "array",
        "i",
        "gl",
        "geometry",
        "attribute",
        "bufferType",
        "attribute",
        "THREE",
        "attribute",
        "attribute",
        "properties",
        "data",
        "attributeProperties",
        "createBuffer",
        "attributeProperties",
        "data",
        "bufferType",
        "attributeProperties",
        "data",
        "updateBuffer",
        "attributeProperties",
        "data",
        "bufferType",
        "attributeProperties",
        "data",
        "bufferType",
        "attributeProperties",
        "gl",
        "gl",
        "bufferType",
        "attributeProperties",
        "data",
        "gl",
        "gl",
        "gl",
        "bufferType",
        "data",
        "usage",
        "attributeProperties",
        "data",
        "attributeProperties",
        "data",
        "bufferType",
        "gl",
        "bufferType",
        "attributeProperties",
        "data",
        "data",
        "gl",
        "bufferType",
        "data",
        "data",
        "gl",
        "bufferType",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "attributeProperties",
        "data",
        "attribute",
        "attribute",
        "THREE",
        "properties",
        "attribute",
        "properties",
        "attribute",
        "geometry",
        "properties",
        "geometry",
        "property",
        "property",
        "geometry",
        "geometry",
        "attributes",
        "index",
        "index",
        "array",
        "i",
        "l",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "checkEdge",
        "edges",
        "a",
        "b",
        "indices",
        "a",
        "b",
        "checkEdge",
        "edges",
        "b",
        "c",
        "indices",
        "b",
        "c",
        "checkEdge",
        "edges",
        "c",
        "a",
        "indices",
        "c",
        "a",
        "attributes",
        "array",
        "i",
        "l",
        "i",
        "i",
        "i",
        "i",
        "indices",
        "a",
        "b",
        "b",
        "c",
        "c",
        "a",
        "position",
        "Uint32Array",
        "Uint16Array",
        "THREE",
        "TypeArray",
        "indices",
        "updateAttribute",
        "attribute",
        "gl",
        "property",
        "attribute",
        "attribute",
        "edges",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "b",
        "tmp",
        "edges",
        "a",
        "edges",
        "a",
        "b",
        "b",
        "b",
        "getAttributeBuffer",
        "getWireframeAttribute",
        "update",
        "THREE",
        "extensions",
        "parameters",
        "rendererExtensions",
        "extensions",
        "extensions",
        "extensions",
        "parameters",
        "parameters",
        "parameters",
        "extensions",
        "parameters",
        "rendererExtensions",
        "extensions",
        "rendererExtensions",
        "extensions",
        "parameters",
        "rendererExtensions",
        "chunks",
        "filterEmptyLine",
        "defines",
        "name",
        "defines",
        "defines",
        "name",
        "value",
        "chunks",
        "name",
        "value",
        "chunks",
        "gl",
        "program",
        "identifiers",
        "gl",
        "program",
        "gl",
        "i",
        "n",
        "i",
        "gl",
        "program",
        "i",
        "info",
        "gl",
        "program",
        "name",
        "structRe",
        "name",
        "matches",
        "matches",
        "matches",
        "uniforms",
        "structName",
        "uniformsStruct",
        "uniformsStruct",
        "uniforms",
        "structName",
        "uniformsStruct",
        "structProperty",
        "location",
        "matches",
        "arrayStructRe",
        "name",
        "matches",
        "matches",
        "matches",
        "matches",
        "uniforms",
        "arrayName",
        "uniformsArray",
        "uniformsArray",
        "uniforms",
        "arrayName",
        "uniformsArray",
        "arrayIndex",
        "uniformsArrayIndex",
        "uniformsArrayIndex",
        "uniformsArray",
        "arrayIndex",
        "uniformsArrayIndex",
        "arrayProperty",
        "location",
        "matches",
        "arrayRe",
        "name",
        "matches",
        "matches",
        "uniforms",
        "arrayName",
        "location",
        "uniforms",
        "name",
        "location",
        "uniforms",
        "gl",
        "program",
        "identifiers",
        "gl",
        "program",
        "gl",
        "i",
        "n",
        "i",
        "gl",
        "program",
        "i",
        "info",
        "attributes",
        "name",
        "gl",
        "program",
        "name",
        "attributes",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "match",
        "start",
        "end",
        "snippet",
        "parseInt",
        "start",
        "i",
        "parseInt",
        "end",
        "i",
        "unroll",
        "snippet",
        "i",
        "unroll",
        "pattern",
        "replace",
        "WebGLProgram",
        "renderer",
        "code",
        "material",
        "parameters",
        "renderer",
        "material",
        "material",
        "material",
        "material",
        "parameters",
        "THREE",
        "shadowMapTypeDefine",
        "parameters",
        "THREE",
        "shadowMapTypeDefine",
        "parameters",
        "material",
        "THREE",
        "THREE",
        "envMapTypeDefine",
        "THREE",
        "THREE",
        "envMapTypeDefine",
        "THREE",
        "envMapTypeDefine",
        "material",
        "THREE",
        "THREE",
        "envMapModeDefine",
        "material",
        "THREE",
        "envMapBlendingDefine",
        "THREE",
        "envMapBlendingDefine",
        "THREE",
        "envMapBlendingDefine",
        "renderer",
        "renderer",
        "generateExtensions",
        "extensions",
        "parameters",
        "renderer",
        "generateDefines",
        "defines",
        "gl",
        "material",
        "THREE",
        "prefixVertex",
        "prefixFragment",
        "prefixVertex",
        "parameters",
        "parameters",
        "material",
        "customDefines",
        "parameters",
        "renderer",
        "renderer",
        "gammaFactorDefine",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "envMapModeDefine",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "shadowMapTypeDefine",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "renderer",
        "filterEmptyLine",
        "prefixFragment",
        "customExtensions",
        "parameters",
        "parameters",
        "material",
        "customDefines",
        "parameters",
        "parameters",
        "renderer",
        "renderer",
        "gammaFactorDefine",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "envMapTypeDefine",
        "parameters",
        "envMapModeDefine",
        "parameters",
        "envMapBlendingDefine",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "shadowMapTypeDefine",
        "parameters",
        "parameters",
        "parameters",
        "renderer",
        "parameters",
        "renderer",
        "filterEmptyLine",
        "vertexShader",
        "replaceLightNums",
        "vertexShader",
        "parameters",
        "fragmentShader",
        "replaceLightNums",
        "fragmentShader",
        "parameters",
        "material",
        "THREE",
        "vertexShader",
        "unrollLoops",
        "vertexShader",
        "fragmentShader",
        "unrollLoops",
        "fragmentShader",
        "prefixVertex",
        "vertexShader",
        "prefixFragment",
        "fragmentShader",
        "THREE",
        "gl",
        "gl",
        "vertexGlsl",
        "THREE",
        "gl",
        "gl",
        "fragmentGlsl",
        "gl",
        "program",
        "glVertexShader",
        "gl",
        "program",
        "glFragmentShader",
        "material",
        "gl",
        "program",
        "material",
        "parameters",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "glVertexShader",
        "gl",
        "glFragmentShader",
        "gl",
        "program",
        "gl",
        "runnable",
        "gl",
        "gl",
        "program",
        "gl",
        "programLog",
        "vertexLog",
        "fragmentLog",
        "programLog",
        "programLog",
        "vertexLog",
        "fragmentLog",
        "haveDiagnostics",
        "haveDiagnostics",
        "runnable",
        "material",
        "programLog",
        "vertexLog",
        "prefixVertex",
        "fragmentLog",
        "prefixFragment",
        "gl",
        "glVertexShader",
        "gl",
        "glFragmentShader",
        "cachedUniforms",
        "cachedUniforms",
        "fetchUniformLocations",
        "gl",
        "program",
        "cachedUniforms",
        "cachedAttributes",
        "cachedAttributes",
        "fetchAttributeLocations",
        "gl",
        "program",
        "cachedAttributes",
        "gl",
        "program",
        "programIdCount",
        "code",
        "program",
        "glVertexShader",
        "glFragmentShader",
        "THREE",
        "renderer",
        "capabilities",
        "capabilities",
        "capabilities",
        "nVertexUniforms",
        "THREE",
        "maxBones",
        "maxBones",
        "maxBones",
        "maxBones",
        "maxBones",
        "material",
        "lights",
        "fog",
        "shaderIDs",
        "material",
        "allocateBones",
        "renderer",
        "material",
        "precision",
        "capabilities",
        "material",
        "precision",
        "material",
        "material",
        "precision",
        "shaderID",
        "precision",
        "capabilities",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "fog",
        "material",
        "fog",
        "THREE",
        "material",
        "THREE",
        "material",
        "capabilities",
        "material",
        "maxBones",
        "capabilities",
        "material",
        "material",
        "renderer",
        "renderer",
        "lights",
        "lights",
        "lights",
        "lights",
        "lights",
        "renderer",
        "lights",
        "renderer",
        "material",
        "material",
        "THREE",
        "material",
        "THREE",
        "parameters",
        "material",
        "parameters",
        "parameters",
        "chunks",
        "parameters",
        "chunks",
        "material",
        "chunks",
        "material",
        "material",
        "name",
        "material",
        "chunks",
        "name",
        "chunks",
        "material",
        "name",
        "i",
        "parameterNames",
        "i",
        "parameterNames",
        "i",
        "chunks",
        "parameterName",
        "chunks",
        "parameters",
        "parameterName",
        "chunks",
        "material",
        "parameters",
        "code",
        "programs",
        "p",
        "pl",
        "p",
        "programs",
        "p",
        "programInfo",
        "code",
        "program",
        "programInfo",
        "program",
        "program",
        "program",
        "THREE",
        "renderer",
        "code",
        "material",
        "parameters",
        "programs",
        "program",
        "program",
        "program",
        "program",
        "programs",
        "program",
        "programs",
        "i",
        "programs",
        "programs",
        "programs",
        "program",
        "programs",
        "THREE",
        "properties",
        "uuid",
        "properties",
        "uuid",
        "properties",
        "properties",
        "THREE",
        "i",
        "lines",
        "i",
        "lines",
        "i",
        "i",
        "lines",
        "i",
        "lines",
        "WebGLShader",
        "gl",
        "gl",
        "gl",
        "shader",
        "gl",
        "shader",
        "gl",
        "shader",
        "gl",
        "gl",
        "shader",
        "gl",
        "gl",
        "shader",
        "addLineNumbers",
        "shader",
        "THREE",
        "_renderer",
        "_lights",
        "_objects",
        "_renderer",
        "_renderer",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "_MorphingFlag",
        "_SkinningFlag",
        "_NumberOfMaterialVariants",
        "_NumberOfMaterialVariants",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "depthShader",
        "THREE",
        "THREE",
        "distanceShader",
        "i",
        "_NumberOfMaterialVariants",
        "i",
        "i",
        "_MorphingFlag",
        "i",
        "_SkinningFlag",
        "THREE",
        "depthUniforms",
        "depthShader",
        "depthShader",
        "useMorphing",
        "useSkinning",
        "depthMaterial",
        "_depthMaterials",
        "i",
        "depthMaterial",
        "THREE",
        "distanceUniforms",
        "distanceShader",
        "distanceShader",
        "useMorphing",
        "useSkinning",
        "distanceMaterial",
        "_distanceMaterials",
        "i",
        "distanceMaterial",
        "THREE",
        "THREE",
        "scene",
        "camera",
        "scope",
        "scope",
        "scope",
        "_state",
        "_state",
        "_gl",
        "_state",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "scope",
        "THREE",
        "_gl",
        "_gl",
        "_state",
        "_state",
        "_lights",
        "shadows",
        "i",
        "il",
        "i",
        "shadows",
        "i",
        "light",
        "shadow",
        "shadow",
        "light",
        "THREE",
        "faceCount",
        "isPointLight",
        "shadowMapSize",
        "shadowMapSize",
        "cube2DViewPorts",
        "vpWidth",
        "vpHeight",
        "vpWidth",
        "vpHeight",
        "cube2DViewPorts",
        "vpHeight",
        "vpWidth",
        "vpHeight",
        "cube2DViewPorts",
        "vpWidth",
        "vpHeight",
        "vpWidth",
        "vpHeight",
        "cube2DViewPorts",
        "vpWidth",
        "vpHeight",
        "vpWidth",
        "vpHeight",
        "cube2DViewPorts",
        "vpWidth",
        "vpWidth",
        "vpHeight",
        "cube2DViewPorts",
        "vpWidth",
        "vpWidth",
        "vpHeight",
        "faceCount",
        "isPointLight",
        "shadow",
        "THREE",
        "THREE",
        "THREE",
        "shadow",
        "THREE",
        "shadowMapSize",
        "shadowMapSize",
        "pars",
        "light",
        "THREE",
        "shadowCamera",
        "shadowMapSize",
        "shadowMapSize",
        "shadowCamera",
        "shadow",
        "shadow",
        "_lightPositionWorld",
        "light",
        "shadowCamera",
        "_lightPositionWorld",
        "_renderer",
        "shadowMap",
        "_renderer",
        "face",
        "faceCount",
        "face",
        "isPointLight",
        "_lookTarget",
        "shadowCamera",
        "_lookTarget",
        "cubeDirections",
        "face",
        "shadowCamera",
        "cubeUps",
        "face",
        "shadowCamera",
        "_lookTarget",
        "cube2DViewPorts",
        "face",
        "_state",
        "vpDimensions",
        "_lookTarget",
        "light",
        "shadowCamera",
        "_lookTarget",
        "shadowCamera",
        "shadowCamera",
        "shadowCamera",
        "shadowMatrix",
        "shadowMatrix",
        "shadowCamera",
        "shadowMatrix",
        "shadowCamera",
        "_projScreenMatrix",
        "shadowCamera",
        "shadowCamera",
        "_frustum",
        "_projScreenMatrix",
        "_renderList",
        "projectObject",
        "scene",
        "camera",
        "shadowCamera",
        "_renderList",
        "j",
        "jl",
        "j",
        "_renderList",
        "j",
        "_objects",
        "material",
        "THREE",
        "geometry",
        "material",
        "groups",
        "k",
        "kl",
        "k",
        "groups",
        "k",
        "materials",
        "group",
        "groupMaterial",
        "getDepthMaterial",
        "groupMaterial",
        "isPointLight",
        "_lightPositionWorld",
        "_renderer",
        "shadowCamera",
        "geometry",
        "depthMaterial",
        "group",
        "getDepthMaterial",
        "material",
        "isPointLight",
        "_lightPositionWorld",
        "_renderer",
        "shadowCamera",
        "geometry",
        "depthMaterial",
        "_renderer",
        "_renderer",
        "_renderer",
        "_renderer",
        "clearColor",
        "clearAlpha",
        "_state",
        "_gl",
        "scope",
        "THREE",
        "_gl",
        "_gl",
        "_renderer",
        "scope",
        "material",
        "isPointLight",
        "lightPositionWorld",
        "isPointLight",
        "materialVariants",
        "_distanceMaterials",
        "customMaterial",
        "customMaterial",
        "geometry",
        "geometry",
        "material",
        "THREE",
        "material",
        "useMorphing",
        "variantIndex",
        "_MorphingFlag",
        "useSkinning",
        "variantIndex",
        "_SkinningFlag",
        "newMaterial",
        "materialVariants",
        "variantIndex",
        "newMaterial",
        "customMaterial",
        "newMaterial",
        "material",
        "newMaterial",
        "material",
        "newMaterial",
        "material",
        "isPointLight",
        "newMaterial",
        "newMaterial",
        "lightPositionWorld",
        "newMaterial",
        "camera",
        "shadowCamera",
        "camera",
        "THREE",
        "THREE",
        "THREE",
        "_frustum",
        "material",
        "shadowCamera",
        "_renderList",
        "children",
        "i",
        "l",
        "i",
        "projectObject",
        "children",
        "i",
        "camera",
        "shadowCamera",
        "THREE",
        "gl",
        "extensions",
        "paramThreeToGL",
        "THREE",
        "Uint8Array",
        "Uint8Array",
        "Uint8Array",
        "gl",
        "gl",
        "THREE",
        "THREE",
        "THREE",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "newAttributes",
        "i",
        "l",
        "i",
        "newAttributes",
        "i",
        "attribute",
        "newAttributes",
        "attribute",
        "enabledAttributes",
        "attribute",
        "gl",
        "attribute",
        "enabledAttributes",
        "attribute",
        "attributeDivisors",
        "attribute",
        "extensions",
        "extension",
        "attribute",
        "attributeDivisors",
        "attribute",
        "attribute",
        "meshPerAttribute",
        "extension",
        "newAttributes",
        "attribute",
        "enabledAttributes",
        "attribute",
        "gl",
        "attribute",
        "enabledAttributes",
        "attribute",
        "attributeDivisors",
        "attribute",
        "meshPerAttribute",
        "extension",
        "attribute",
        "meshPerAttribute",
        "attributeDivisors",
        "attribute",
        "meshPerAttribute",
        "enabledAttributes",
        "i",
        "l",
        "i",
        "enabledAttributes",
        "i",
        "newAttributes",
        "i",
        "gl",
        "i",
        "enabledAttributes",
        "i",
        "id",
        "capabilities",
        "id",
        "gl",
        "id",
        "capabilities",
        "id",
        "id",
        "capabilities",
        "id",
        "gl",
        "id",
        "capabilities",
        "id",
        "compressedTextureFormats",
        "compressedTextureFormats",
        "extensions",
        "extensions",
        "extensions",
        "gl",
        "gl",
        "i",
        "formats",
        "i",
        "compressedTextureFormats",
        "formats",
        "i",
        "compressedTextureFormats",
        "blending",
        "blendEquation",
        "blendSrc",
        "blendDst",
        "blendEquationAlpha",
        "blendSrcAlpha",
        "blendDstAlpha",
        "blending",
        "THREE",
        "gl",
        "gl",
        "blending",
        "currentBlending",
        "blending",
        "THREE",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "blending",
        "THREE",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "blending",
        "THREE",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "currentBlending",
        "blending",
        "blending",
        "THREE",
        "blendEquationAlpha",
        "blendEquationAlpha",
        "blendEquation",
        "blendSrcAlpha",
        "blendSrcAlpha",
        "blendSrc",
        "blendDstAlpha",
        "blendDstAlpha",
        "blendDst",
        "blendEquation",
        "currentBlendEquation",
        "blendEquationAlpha",
        "currentBlendEquationAlpha",
        "gl",
        "paramThreeToGL",
        "blendEquation",
        "paramThreeToGL",
        "blendEquationAlpha",
        "currentBlendEquation",
        "blendEquation",
        "currentBlendEquationAlpha",
        "blendEquationAlpha",
        "blendSrc",
        "currentBlendSrc",
        "blendDst",
        "currentBlendDst",
        "blendSrcAlpha",
        "currentBlendSrcAlpha",
        "blendDstAlpha",
        "currentBlendDstAlpha",
        "gl",
        "paramThreeToGL",
        "blendSrc",
        "paramThreeToGL",
        "blendDst",
        "paramThreeToGL",
        "blendSrcAlpha",
        "paramThreeToGL",
        "blendDstAlpha",
        "currentBlendSrc",
        "blendSrc",
        "currentBlendDst",
        "blendDst",
        "currentBlendSrcAlpha",
        "blendSrcAlpha",
        "currentBlendDstAlpha",
        "blendDstAlpha",
        "currentBlendEquation",
        "currentBlendSrc",
        "currentBlendDst",
        "currentBlendEquationAlpha",
        "currentBlendSrcAlpha",
        "currentBlendDstAlpha",
        "depthFunc",
        "currentDepthFunc",
        "depthFunc",
        "depthFunc",
        "depthFunc",
        "THREE",
        "gl",
        "gl",
        "THREE",
        "gl",
        "gl",
        "THREE",
        "gl",
        "gl",
        "THREE",
        "gl",
        "gl",
        "THREE",
        "gl",
        "gl",
        "THREE",
        "gl",
        "gl",
        "THREE",
        "gl",
        "gl",
        "THREE",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "currentDepthFunc",
        "depthFunc",
        "depthTest",
        "depthTest",
        "gl",
        "gl",
        "depthWrite",
        "currentDepthWrite",
        "depthWrite",
        "gl",
        "depthWrite",
        "currentDepthWrite",
        "depthWrite",
        "colorWrite",
        "currentColorWrite",
        "colorWrite",
        "gl",
        "colorWrite",
        "colorWrite",
        "colorWrite",
        "colorWrite",
        "currentColorWrite",
        "colorWrite",
        "stencilFunc",
        "stencilRef",
        "stencilMask",
        "currentStencilFunc",
        "stencilFunc",
        "currentStencilRef",
        "stencilRef",
        "currentStencilMask",
        "stencilMask",
        "gl",
        "stencilFunc",
        "stencilRef",
        "stencilMask",
        "currentStencilFunc",
        "stencilFunc",
        "currentStencilRef",
        "stencilRef",
        "currentStencilMask",
        "stencilMask",
        "stencilFail",
        "stencilZFail",
        "stencilZPass",
        "currentStencilFail",
        "stencilFail",
        "currentStencilZFail",
        "stencilZFail",
        "currentStencilZPass",
        "stencilZPass",
        "gl",
        "stencilFail",
        "stencilZFail",
        "stencilZPass",
        "currentStencilFail",
        "stencilFail",
        "currentStencilZFail",
        "stencilZFail",
        "currentStencilZPass",
        "stencilZPass",
        "stencilTest",
        "stencilTest",
        "gl",
        "gl",
        "stencilWrite",
        "currentStencilWrite",
        "stencilWrite",
        "gl",
        "stencilWrite",
        "currentStencilWrite",
        "stencilWrite",
        "flipSided",
        "currentFlipSided",
        "flipSided",
        "flipSided",
        "gl",
        "gl",
        "gl",
        "gl",
        "currentFlipSided",
        "flipSided",
        "width",
        "width",
        "currentLineWidth",
        "gl",
        "width",
        "currentLineWidth",
        "width",
        "polygonOffset",
        "factor",
        "units",
        "polygonOffset",
        "gl",
        "gl",
        "polygonOffset",
        "currentPolygonOffsetFactor",
        "factor",
        "currentPolygonOffsetUnits",
        "units",
        "gl",
        "factor",
        "units",
        "currentPolygonOffsetFactor",
        "factor",
        "currentPolygonOffsetUnits",
        "units",
        "currentScissorTest",
        "scissorTest",
        "currentScissorTest",
        "scissorTest",
        "scissorTest",
        "gl",
        "gl",
        "webglSlot",
        "webglSlot",
        "webglSlot",
        "gl",
        "maxTextures",
        "currentTextureSlot",
        "webglSlot",
        "gl",
        "webglSlot",
        "currentTextureSlot",
        "webglSlot",
        "webglType",
        "webglTexture",
        "currentTextureSlot",
        "_this",
        "currentBoundTextures",
        "currentTextureSlot",
        "boundTexture",
        "boundTexture",
        "currentBoundTextures",
        "currentTextureSlot",
        "boundTexture",
        "boundTexture",
        "webglType",
        "boundTexture",
        "webglTexture",
        "gl",
        "webglType",
        "webglTexture",
        "boundTexture",
        "webglType",
        "boundTexture",
        "webglTexture",
        "gl",
        "gl",
        "arguments",
        "error",
        "error",
        "gl",
        "gl",
        "arguments",
        "error",
        "error",
        "r",
        "g",
        "b",
        "a",
        "color",
        "r",
        "g",
        "b",
        "a",
        "currentClearColor",
        "color",
        "gl",
        "r",
        "g",
        "b",
        "a",
        "currentClearColor",
        "color",
        "depth",
        "currentClearDepth",
        "depth",
        "gl",
        "depth",
        "currentClearDepth",
        "depth",
        "stencil",
        "currentClearStencil",
        "stencil",
        "gl",
        "stencil",
        "currentClearStencil",
        "stencil",
        "scissor",
        "currentScissor",
        "scissor",
        "gl",
        "scissor",
        "scissor",
        "scissor",
        "scissor",
        "currentScissor",
        "scissor",
        "viewport",
        "currentViewport",
        "viewport",
        "gl",
        "viewport",
        "viewport",
        "viewport",
        "viewport",
        "currentViewport",
        "viewport",
        "i",
        "enabledAttributes",
        "i",
        "enabledAttributes",
        "i",
        "gl",
        "i",
        "enabledAttributes",
        "i",
        "capabilities",
        "compressedTextureFormats",
        "currentBlending",
        "currentColorWrite",
        "currentDepthWrite",
        "currentStencilWrite",
        "currentFlipSided",
        "THREE",
        "renderer",
        "flares",
        "renderer",
        "renderer",
        "Float32Array",
        "Uint16Array",
        "vertexBuffer",
        "gl",
        "elementBuffer",
        "gl",
        "gl",
        "gl",
        "vertexBuffer",
        "gl",
        "gl",
        "vertices",
        "gl",
        "gl",
        "gl",
        "elementBuffer",
        "gl",
        "gl",
        "faces",
        "gl",
        "tempTexture",
        "gl",
        "occlusionTexture",
        "gl",
        "state",
        "gl",
        "tempTexture",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "state",
        "gl",
        "occlusionTexture",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "hasVertexTexture",
        "gl",
        "gl",
        "hasVertexTexture",
        "shader",
        "shader",
        "program",
        "createProgram",
        "shader",
        "attributes",
        "gl",
        "program",
        "gl",
        "program",
        "uniforms",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "scene",
        "camera",
        "viewport",
        "flares",
        "THREE",
        "viewport",
        "viewport",
        "viewport",
        "viewport",
        "viewport",
        "THREE",
        "size",
        "invAspect",
        "size",
        "THREE",
        "THREE",
        "program",
        "init",
        "gl",
        "program",
        "state",
        "state",
        "attributes",
        "state",
        "attributes",
        "state",
        "gl",
        "uniforms",
        "gl",
        "uniforms",
        "gl",
        "gl",
        "vertexBuffer",
        "gl",
        "attributes",
        "gl",
        "gl",
        "attributes",
        "gl",
        "gl",
        "gl",
        "elementBuffer",
        "state",
        "gl",
        "state",
        "flares",
        "i",
        "l",
        "i",
        "size",
        "viewport",
        "scale",
        "size",
        "invAspect",
        "size",
        "flares",
        "i",
        "tempPosition",
        "flare",
        "flare",
        "flare",
        "tempPosition",
        "camera",
        "tempPosition",
        "camera",
        "screenPosition",
        "tempPosition",
        "screenPositionPixels",
        "screenPosition",
        "halfViewportWidth",
        "halfViewportWidth",
        "screenPositionPixels",
        "screenPosition",
        "halfViewportHeight",
        "halfViewportHeight",
        "hasVertexTexture",
        "screenPositionPixels",
        "screenPositionPixels",
        "viewport",
        "screenPositionPixels",
        "screenPositionPixels",
        "viewport",
        "state",
        "gl",
        "state",
        "gl",
        "state",
        "gl",
        "state",
        "gl",
        "tempTexture",
        "gl",
        "gl",
        "gl",
        "viewport",
        "screenPositionPixels",
        "viewport",
        "screenPositionPixels",
        "gl",
        "uniforms",
        "gl",
        "uniforms",
        "scale",
        "scale",
        "gl",
        "uniforms",
        "screenPosition",
        "screenPosition",
        "screenPosition",
        "state",
        "gl",
        "state",
        "gl",
        "gl",
        "gl",
        "gl",
        "state",
        "gl",
        "state",
        "gl",
        "occlusionTexture",
        "gl",
        "gl",
        "gl",
        "viewport",
        "screenPositionPixels",
        "viewport",
        "screenPositionPixels",
        "gl",
        "uniforms",
        "state",
        "gl",
        "state",
        "gl",
        "state",
        "gl",
        "tempTexture",
        "gl",
        "gl",
        "gl",
        "flare",
        "screenPosition",
        "flare",
        "flare",
        "flare",
        "flare",
        "gl",
        "uniforms",
        "state",
        "gl",
        "flare",
        "j",
        "jl",
        "j",
        "flare",
        "j",
        "sprite",
        "sprite",
        "screenPosition",
        "sprite",
        "screenPosition",
        "sprite",
        "screenPosition",
        "sprite",
        "size",
        "sprite",
        "sprite",
        "viewport",
        "scale",
        "size",
        "invAspect",
        "scale",
        "size",
        "gl",
        "uniforms",
        "screenPosition",
        "screenPosition",
        "screenPosition",
        "gl",
        "uniforms",
        "scale",
        "scale",
        "gl",
        "uniforms",
        "sprite",
        "gl",
        "uniforms",
        "sprite",
        "gl",
        "uniforms",
        "sprite",
        "sprite",
        "sprite",
        "state",
        "sprite",
        "sprite",
        "sprite",
        "sprite",
        "renderer",
        "sprite",
        "gl",
        "gl",
        "gl",
        "state",
        "gl",
        "state",
        "gl",
        "state",
        "renderer",
        "shader",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "renderer",
        "gl",
        "fragmentShader",
        "prefix",
        "shader",
        "gl",
        "vertexShader",
        "prefix",
        "shader",
        "gl",
        "fragmentShader",
        "gl",
        "vertexShader",
        "gl",
        "program",
        "fragmentShader",
        "gl",
        "program",
        "vertexShader",
        "gl",
        "program",
        "program",
        "THREE",
        "renderer",
        "sprites",
        "renderer",
        "renderer",
        "THREE",
        "THREE",
        "THREE",
        "Float32Array",
        "Uint16Array",
        "vertexBuffer",
        "gl",
        "elementBuffer",
        "gl",
        "gl",
        "gl",
        "vertexBuffer",
        "gl",
        "gl",
        "vertices",
        "gl",
        "gl",
        "gl",
        "elementBuffer",
        "gl",
        "gl",
        "faces",
        "gl",
        "program",
        "createProgram",
        "attributes",
        "gl",
        "program",
        "gl",
        "program",
        "uniforms",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "canvas",
        "canvas",
        "canvas",
        "context",
        "context",
        "texture",
        "THREE",
        "canvas",
        "texture",
        "scene",
        "camera",
        "sprites",
        "program",
        "init",
        "gl",
        "program",
        "state",
        "state",
        "attributes",
        "state",
        "attributes",
        "state",
        "state",
        "gl",
        "state",
        "gl",
        "gl",
        "gl",
        "vertexBuffer",
        "gl",
        "attributes",
        "gl",
        "gl",
        "attributes",
        "gl",
        "gl",
        "gl",
        "elementBuffer",
        "gl",
        "uniforms",
        "camera",
        "state",
        "gl",
        "gl",
        "uniforms",
        "scene",
        "fog",
        "gl",
        "uniforms",
        "fog",
        "fog",
        "fog",
        "fog",
        "THREE",
        "gl",
        "uniforms",
        "fog",
        "gl",
        "uniforms",
        "fog",
        "gl",
        "uniforms",
        "oldFogType",
        "sceneFogType",
        "fog",
        "THREE",
        "gl",
        "uniforms",
        "fog",
        "gl",
        "uniforms",
        "oldFogType",
        "sceneFogType",
        "gl",
        "uniforms",
        "oldFogType",
        "sceneFogType",
        "sprites",
        "i",
        "l",
        "i",
        "sprites",
        "i",
        "sprite",
        "camera",
        "sprite",
        "sprite",
        "sprite",
        "sprites",
        "painterSortStable",
        "sprites",
        "i",
        "l",
        "i",
        "sprites",
        "i",
        "sprite",
        "gl",
        "uniforms",
        "material",
        "gl",
        "uniforms",
        "sprite",
        "sprite",
        "spritePosition",
        "spriteRotation",
        "spriteScale",
        "scale",
        "spriteScale",
        "scale",
        "spriteScale",
        "scene",
        "material",
        "fogType",
        "sceneFogType",
        "oldFogType",
        "fogType",
        "gl",
        "uniforms",
        "fogType",
        "oldFogType",
        "fogType",
        "material",
        "gl",
        "uniforms",
        "material",
        "material",
        "gl",
        "uniforms",
        "material",
        "material",
        "gl",
        "uniforms",
        "gl",
        "uniforms",
        "gl",
        "uniforms",
        "material",
        "gl",
        "uniforms",
        "material",
        "material",
        "material",
        "gl",
        "uniforms",
        "material",
        "gl",
        "uniforms",
        "scale",
        "state",
        "material",
        "material",
        "material",
        "material",
        "state",
        "material",
        "state",
        "material",
        "material",
        "material",
        "material",
        "renderer",
        "material",
        "renderer",
        "texture",
        "gl",
        "gl",
        "gl",
        "state",
        "gl",
        "renderer",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "vertexShader",
        "renderer",
        "gl",
        "fragmentShader",
        "renderer",
        "gl",
        "vertexShader",
        "gl",
        "fragmentShader",
        "gl",
        "program",
        "vertexShader",
        "gl",
        "program",
        "fragmentShader",
        "gl",
        "program",
        "program",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "b",
        "a",
        "b",
        "a",
        "THREE",
        "box",
        "box",
        "THREE",
        "box",
        "box",
        "sphere",
        "sphere",
        "THREE",
        "vector",
        "vector",
        "a",
        "a",
        "THREE",
        "m",
        "m",
        "q",
        "q",
        "vector",
        "vector",
        "vector",
        "vector",
        "a",
        "a",
        "v",
        "v",
        "vector",
        "vector",
        "v",
        "angle",
        "angle",
        "angle",
        "axis",
        "angle",
        "THREE",
        "line",
        "line",
        "THREE",
        "vector",
        "vector",
        "THREE",
        "box",
        "box",
        "plane",
        "plane",
        "sphere",
        "sphere",
        "THREE",
        "m",
        "m",
        "m",
        "m",
        "index",
        "matrix",
        "index",
        "matrix",
        "THREE",
        "a",
        "b",
        "c",
        "d",
        "normal",
        "color",
        "materialIndex",
        "THREE",
        "a",
        "b",
        "c",
        "normal",
        "color",
        "materialIndex",
        "THREE",
        "value",
        "value",
        "name",
        "name",
        "value",
        "distance",
        "axis",
        "axis",
        "distance",
        "value",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "geometry",
        "material",
        "geometry",
        "material",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "THREE",
        "THREE",
        "index",
        "index",
        "start",
        "count",
        "indexOffset",
        "indexOffset",
        "start",
        "count",
        "THREE",
        "value",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "parameters",
        "parameters",
        "THREE",
        "parameters",
        "parameters",
        "THREE",
        "parameters",
        "THREE",
        "value",
        "THREE",
        "value",
        "value",
        "THREE",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "THREE",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "THREE",
        "geometry1",
        "geometry2",
        "materialIndexOffset",
        "geometry2",
        "THREE",
        "geometry2",
        "geometry2",
        "matrix",
        "geometry2",
        "geometry2",
        "geometry2",
        "geometry1",
        "geometry2",
        "matrix",
        "materialIndexOffset",
        "geometry",
        "geometry",
        "THREE",
        "url",
        "mapping",
        "onLoad",
        "onError",
        "THREE",
        "loader",
        "loader",
        "url",
        "onLoad",
        "onError",
        "mapping",
        "texture",
        "mapping",
        "texture",
        "urls",
        "mapping",
        "onLoad",
        "onError",
        "THREE",
        "loader",
        "loader",
        "urls",
        "onLoad",
        "onError",
        "mapping",
        "texture",
        "mapping",
        "texture",
        "THREE",
        "vector",
        "camera",
        "vector",
        "camera",
        "vector",
        "camera",
        "vector",
        "camera",
        "vector",
        "camera",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "t",
        "p0",
        "p1",
        "p2",
        "t",
        "p1",
        "p0",
        "t",
        "p2",
        "p1",
        "t",
        "p0",
        "p1",
        "p2",
        "p3",
        "p0",
        "t",
        "t",
        "p1",
        "t",
        "t",
        "t",
        "p1",
        "t",
        "t",
        "p2",
        "t",
        "t",
        "t",
        "p2",
        "t",
        "t",
        "p3",
        "t",
        "p0",
        "p1",
        "p2",
        "p3",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "h00",
        "h10",
        "h01",
        "h11",
        "p0",
        "p1",
        "p2",
        "p3",
        "t",
        "p2",
        "p0",
        "p3",
        "p1",
        "t",
        "t",
        "t",
        "t2",
        "p1",
        "p2",
        "v0",
        "v1",
        "t3",
        "p1",
        "p2",
        "v0",
        "v1",
        "t2",
        "v0",
        "t",
        "p1",
        "THREE",
        "geometry",
        "materials",
        "THREE",
        "materials",
        "i",
        "l",
        "i",
        "group",
        "THREE",
        "geometry",
        "materials",
        "i",
        "group",
        "child",
        "parent",
        "scene",
        "child",
        "parent",
        "parent",
        "child",
        "scene",
        "child",
        "child",
        "scene",
        "parent",
        "THREE",
        "matrixWorldInverse",
        "parent",
        "child",
        "matrixWorldInverse",
        "scene",
        "child",
        "parent",
        "child",
        "THREE",
        "contour",
        "contour",
        "n",
        "q",
        "n",
        "p",
        "q",
        "a",
        "contour",
        "p",
        "contour",
        "q",
        "contour",
        "q",
        "contour",
        "p",
        "a",
        "contour",
        "u",
        "v",
        "w",
        "n",
        "verts",
        "ax",
        "contour",
        "verts",
        "u",
        "ay",
        "contour",
        "verts",
        "u",
        "bx",
        "contour",
        "verts",
        "v",
        "by",
        "contour",
        "verts",
        "v",
        "cx",
        "contour",
        "verts",
        "w",
        "cy",
        "contour",
        "verts",
        "w",
        "bx",
        "ax",
        "cy",
        "ay",
        "by",
        "ay",
        "cx",
        "ax",
        "aX",
        "cx",
        "bx",
        "aY",
        "cy",
        "by",
        "bX",
        "ax",
        "cx",
        "bY",
        "ay",
        "cy",
        "cX",
        "bx",
        "ax",
        "cY",
        "by",
        "ay",
        "p",
        "p",
        "n",
        "p",
        "px",
        "contour",
        "verts",
        "p",
        "py",
        "contour",
        "verts",
        "p",
        "px",
        "ax",
        "py",
        "ay",
        "px",
        "bx",
        "py",
        "by",
        "px",
        "cx",
        "py",
        "cy",
        "apx",
        "px",
        "ax",
        "apy",
        "py",
        "ay",
        "bpx",
        "px",
        "bx",
        "bpy",
        "py",
        "by",
        "cpx",
        "px",
        "cx",
        "cpy",
        "py",
        "cy",
        "aCROSSbp",
        "aX",
        "bpy",
        "aY",
        "bpx",
        "cCROSSap",
        "cX",
        "apy",
        "cY",
        "apx",
        "bCROSScp",
        "bX",
        "cpy",
        "bY",
        "cpx",
        "aCROSSbp",
        "bCROSScp",
        "cCROSSap",
        "contour",
        "indices",
        "contour",
        "n",
        "THREE",
        "contour",
        "v",
        "v",
        "n",
        "v",
        "verts",
        "v",
        "v",
        "v",
        "v",
        "n",
        "v",
        "verts",
        "v",
        "n",
        "v",
        "nv",
        "v",
        "nv",
        "nv",
        "count",
        "indices",
        "vertIndices",
        "result",
        "u",
        "v",
        "nv",
        "u",
        "u",
        "v",
        "u",
        "nv",
        "v",
        "v",
        "w",
        "v",
        "nv",
        "w",
        "w",
        "snip",
        "contour",
        "u",
        "v",
        "w",
        "nv",
        "verts",
        "a",
        "verts",
        "u",
        "b",
        "verts",
        "v",
        "c",
        "verts",
        "w",
        "result",
        "contour",
        "a",
        "contour",
        "b",
        "contour",
        "c",
        "vertIndices",
        "verts",
        "u",
        "verts",
        "v",
        "verts",
        "w",
        "s",
        "v",
        "t",
        "v",
        "t",
        "nv",
        "s",
        "t",
        "verts",
        "s",
        "verts",
        "t",
        "nv",
        "count",
        "nv",
        "indices",
        "vertIndices",
        "result",
        "contour",
        "holes",
        "inSegPt1",
        "inSegPt2",
        "inOtherPt",
        "inSegPt1",
        "inSegPt2",
        "inSegPt1",
        "inSegPt2",
        "inSegPt1",
        "inOtherPt",
        "inOtherPt",
        "inSegPt2",
        "inSegPt2",
        "inOtherPt",
        "inOtherPt",
        "inSegPt1",
        "inSegPt1",
        "inSegPt2",
        "inSegPt1",
        "inOtherPt",
        "inOtherPt",
        "inSegPt2",
        "inSegPt2",
        "inOtherPt",
        "inOtherPt",
        "inSegPt1",
        "inSeg1Pt1",
        "inSeg1Pt2",
        "inSeg2Pt1",
        "inSeg2Pt2",
        "inExcludeAdjacentSegs",
        "inSeg1Pt2",
        "inSeg1Pt1",
        "inSeg1Pt2",
        "inSeg1Pt1",
        "inSeg2Pt2",
        "inSeg2Pt1",
        "inSeg2Pt2",
        "inSeg2Pt1",
        "inSeg1Pt1",
        "inSeg2Pt1",
        "inSeg1Pt1",
        "inSeg2Pt1",
        "seg1dy",
        "seg2dx",
        "seg1dx",
        "seg2dy",
        "seg1dy",
        "seg1seg2dx",
        "seg1dx",
        "seg1seg2dy",
        "limit",
        "limit",
        "perpSeg1",
        "perpSeg1",
        "limit",
        "perpSeg2",
        "seg2dy",
        "seg1seg2dx",
        "seg2dx",
        "seg1seg2dy",
        "perpSeg2",
        "perpSeg2",
        "limit",
        "perpSeg1",
        "perpSeg1",
        "limit",
        "perpSeg2",
        "seg2dy",
        "seg1seg2dx",
        "seg2dx",
        "seg1seg2dy",
        "perpSeg2",
        "perpSeg2",
        "limit",
        "perpSeg2",
        "inExcludeAdjacentSegs",
        "perpSeg1",
        "perpSeg1",
        "limit",
        "inSeg1Pt1",
        "perpSeg2",
        "limit",
        "inExcludeAdjacentSegs",
        "perpSeg1",
        "perpSeg1",
        "limit",
        "inSeg1Pt2",
        "perpSeg1",
        "inSeg2Pt1",
        "perpSeg1",
        "limit",
        "inSeg2Pt2",
        "perpSeg2",
        "limit",
        "inSeg1Pt1",
        "factorSeg1",
        "seg1dx",
        "inSeg1Pt1",
        "factorSeg1",
        "seg1dy",
        "perpSeg1",
        "seg2dy",
        "seg1seg2dx",
        "seg2dx",
        "seg1seg2dy",
        "seg1dx",
        "seg1dy",
        "seg2dx",
        "seg2dy",
        "seg1Pt",
        "seg2Pt",
        "inSeg1Pt1",
        "inSeg2Pt1",
        "inSeg1Pt1",
        "inSeg2Pt1",
        "inSeg1Pt1",
        "seg1Pt",
        "point_in_segment_2D_colin",
        "inSeg2Pt1",
        "inSeg2Pt2",
        "inSeg1Pt1",
        "inSeg1Pt1",
        "seg2Pt",
        "point_in_segment_2D_colin",
        "inSeg1Pt1",
        "inSeg1Pt2",
        "inSeg2Pt1",
        "inSeg2Pt1",
        "seg1dx",
        "inSeg1Pt1",
        "inSeg1Pt2",
        "seg1min",
        "inSeg1Pt1",
        "seg1minVal",
        "inSeg1Pt1",
        "seg1max",
        "inSeg1Pt2",
        "seg1maxVal",
        "inSeg1Pt2",
        "seg1min",
        "inSeg1Pt2",
        "seg1minVal",
        "inSeg1Pt2",
        "seg1max",
        "inSeg1Pt1",
        "seg1maxVal",
        "inSeg1Pt1",
        "inSeg2Pt1",
        "inSeg2Pt2",
        "seg2min",
        "inSeg2Pt1",
        "seg2minVal",
        "inSeg2Pt1",
        "seg2max",
        "inSeg2Pt2",
        "seg2maxVal",
        "inSeg2Pt2",
        "seg2min",
        "inSeg2Pt2",
        "seg2minVal",
        "inSeg2Pt2",
        "seg2max",
        "inSeg2Pt1",
        "seg2maxVal",
        "inSeg2Pt1",
        "inSeg1Pt1",
        "inSeg1Pt2",
        "seg1min",
        "inSeg1Pt1",
        "seg1minVal",
        "inSeg1Pt1",
        "seg1max",
        "inSeg1Pt2",
        "seg1maxVal",
        "inSeg1Pt2",
        "seg1min",
        "inSeg1Pt2",
        "seg1minVal",
        "inSeg1Pt2",
        "seg1max",
        "inSeg1Pt1",
        "seg1maxVal",
        "inSeg1Pt1",
        "inSeg2Pt1",
        "inSeg2Pt2",
        "seg2min",
        "inSeg2Pt1",
        "seg2minVal",
        "inSeg2Pt1",
        "seg2max",
        "inSeg2Pt2",
        "seg2maxVal",
        "inSeg2Pt2",
        "seg2min",
        "inSeg2Pt2",
        "seg2minVal",
        "inSeg2Pt2",
        "seg2max",
        "inSeg2Pt1",
        "seg2maxVal",
        "inSeg2Pt1",
        "seg1minVal",
        "seg2minVal",
        "seg1maxVal",
        "seg2minVal",
        "seg1maxVal",
        "seg2minVal",
        "inExcludeAdjacentSegs",
        "seg2min",
        "seg1maxVal",
        "seg2maxVal",
        "seg2min",
        "seg1max",
        "seg2min",
        "seg2max",
        "seg1minVal",
        "seg2maxVal",
        "seg1minVal",
        "seg2maxVal",
        "inExcludeAdjacentSegs",
        "seg1min",
        "seg1maxVal",
        "seg2maxVal",
        "seg1min",
        "seg1max",
        "seg1min",
        "seg2max",
        "inVertex",
        "inLegFromPt",
        "inLegToPt",
        "inOtherPt",
        "inLegFromPt",
        "inVertex",
        "inLegFromPt",
        "inVertex",
        "inLegToPt",
        "inVertex",
        "inLegToPt",
        "inVertex",
        "inOtherPt",
        "inVertex",
        "inOtherPt",
        "inVertex",
        "legFromPtX",
        "legToPtY",
        "legFromPtY",
        "legToPtX",
        "legFromPtX",
        "otherPtY",
        "legFromPtY",
        "otherPtX",
        "from2toAngle",
        "otherPtX",
        "legToPtY",
        "otherPtY",
        "legToPtX",
        "from2toAngle",
        "from2otherAngle",
        "other2toAngle",
        "from2otherAngle",
        "other2toAngle",
        "from2otherAngle",
        "contour",
        "holes",
        "contour",
        "inShapeIdx",
        "inHoleIdx",
        "shape",
        "inShapeIdx",
        "prevShapeIdx",
        "prevShapeIdx",
        "lastShapeIdx",
        "inShapeIdx",
        "nextShapeIdx",
        "lastShapeIdx",
        "nextShapeIdx",
        "isPointInsideAngle",
        "shape",
        "inShapeIdx",
        "shape",
        "prevShapeIdx",
        "shape",
        "nextShapeIdx",
        "hole",
        "inHoleIdx",
        "insideAngle",
        "hole",
        "inHoleIdx",
        "prevHoleIdx",
        "prevHoleIdx",
        "lastHoleIdx",
        "inHoleIdx",
        "nextHoleIdx",
        "lastHoleIdx",
        "nextHoleIdx",
        "insideAngle",
        "isPointInsideAngle",
        "hole",
        "inHoleIdx",
        "hole",
        "prevHoleIdx",
        "hole",
        "nextHoleIdx",
        "shape",
        "inShapeIdx",
        "insideAngle",
        "inShapePt",
        "inHolePt",
        "sIdx",
        "sIdx",
        "shape",
        "sIdx",
        "nextIdx",
        "sIdx",
        "nextIdx",
        "shape",
        "intersection",
        "intersect_segments_2D",
        "inShapePt",
        "inHolePt",
        "shape",
        "sIdx",
        "shape",
        "nextIdx",
        "intersection",
        "inShapePt",
        "inHolePt",
        "ihIdx",
        "ihIdx",
        "indepHoles",
        "ihIdx",
        "chkHole",
        "holes",
        "indepHoles",
        "ihIdx",
        "hIdx",
        "hIdx",
        "chkHole",
        "hIdx",
        "nextIdx",
        "hIdx",
        "nextIdx",
        "chkHole",
        "intersection",
        "intersect_segments_2D",
        "inShapePt",
        "inHolePt",
        "chkHole",
        "hIdx",
        "chkHole",
        "nextIdx",
        "intersection",
        "holes",
        "h",
        "hl",
        "h",
        "indepHoles",
        "h",
        "indepHoles",
        "indepHoles",
        "counter",
        "counter",
        "indepHoles",
        "shapeIndex",
        "minShapeIndex",
        "shapeIndex",
        "shape",
        "shapeIndex",
        "shapePt",
        "shape",
        "shapeIndex",
        "holeIndex",
        "h",
        "indepHoles",
        "h",
        "holeIdx",
        "indepHoles",
        "h",
        "cutKey",
        "shapePt",
        "shapePt",
        "holeIdx",
        "failedCuts",
        "cutKey",
        "hole",
        "holes",
        "holeIdx",
        "h2",
        "hole",
        "h2",
        "holePt",
        "hole",
        "h2",
        "isCutLineInsideAngles",
        "shapeIndex",
        "h2",
        "intersectsShapeEdge",
        "shapePt",
        "holePt",
        "intersectsHoleEdge",
        "shapePt",
        "holePt",
        "holeIndex",
        "h2",
        "indepHoles",
        "h",
        "tmpShape1",
        "shape",
        "shapeIndex",
        "tmpShape2",
        "shape",
        "shapeIndex",
        "tmpHole1",
        "hole",
        "holeIndex",
        "tmpHole2",
        "hole",
        "holeIndex",
        "shape",
        "tmpShape1",
        "tmpHole1",
        "tmpHole2",
        "tmpShape2",
        "minShapeIndex",
        "shapeIndex",
        "holeIndex",
        "failedCuts",
        "cutKey",
        "holeIndex",
        "shape",
        "contour",
        "holes",
        "h",
        "hl",
        "h",
        "allpoints",
        "holes",
        "h",
        "i",
        "il",
        "allpoints",
        "i",
        "il",
        "i",
        "key",
        "allpoints",
        "i",
        "allpoints",
        "i",
        "allPointsMap",
        "key",
        "key",
        "allPointsMap",
        "key",
        "i",
        "removeHoles",
        "contour",
        "holes",
        "THREE",
        "shapeWithoutHoles",
        "i",
        "il",
        "triangles",
        "i",
        "il",
        "i",
        "face",
        "triangles",
        "i",
        "f",
        "f",
        "f",
        "key",
        "face",
        "f",
        "face",
        "f",
        "index",
        "allPointsMap",
        "key",
        "index",
        "face",
        "f",
        "index",
        "triangles",
        "pts",
        "THREE",
        "pts",
        "t",
        "p",
        "t",
        "k",
        "k",
        "p",
        "t",
        "p",
        "t",
        "t",
        "p",
        "t",
        "p",
        "t",
        "t",
        "p",
        "t",
        "p0",
        "p1",
        "p2",
        "b2p0",
        "t",
        "p0",
        "b2p1",
        "t",
        "p1",
        "b2p2",
        "t",
        "p2",
        "t",
        "p",
        "t",
        "k",
        "k",
        "k",
        "p",
        "t",
        "p",
        "t",
        "k",
        "k",
        "t",
        "p",
        "t",
        "p",
        "t",
        "k",
        "t",
        "t",
        "p",
        "t",
        "p",
        "t",
        "t",
        "t",
        "p",
        "t",
        "p0",
        "p1",
        "p2",
        "p3",
        "b3p0",
        "t",
        "p0",
        "b3p1",
        "t",
        "p1",
        "b3p2",
        "t",
        "p2",
        "b3p3",
        "t",
        "p3",
        "THREE",
        "THREE",
        "THREE",
        "t",
        "u",
        "u",
        "t",
        "divisions",
        "divisions",
        "divisions",
        "d",
        "d",
        "divisions",
        "d",
        "pts",
        "d",
        "divisions",
        "pts",
        "divisions",
        "divisions",
        "divisions",
        "d",
        "d",
        "divisions",
        "d",
        "pts",
        "d",
        "divisions",
        "pts",
        "lengths",
        "lengths",
        "divisions",
        "divisions",
        "divisions",
        "divisions",
        "cache",
        "p",
        "p",
        "divisions",
        "p",
        "current",
        "p",
        "divisions",
        "sum",
        "current",
        "last",
        "cache",
        "sum",
        "last",
        "current",
        "cache",
        "cache",
        "u",
        "distance",
        "arcLengths",
        "distance",
        "targetArcLength",
        "distance",
        "targetArcLength",
        "u",
        "arcLengths",
        "il",
        "il",
        "low",
        "high",
        "i",
        "low",
        "high",
        "low",
        "comparison",
        "arcLengths",
        "i",
        "targetArcLength",
        "comparison",
        "low",
        "i",
        "comparison",
        "high",
        "i",
        "high",
        "i",
        "i",
        "high",
        "arcLengths",
        "i",
        "targetArcLength",
        "i",
        "il",
        "t",
        "arcLengths",
        "i",
        "arcLengths",
        "i",
        "lengthAfter",
        "lengthBefore",
        "targetArcLength",
        "lengthBefore",
        "segmentLength",
        "i",
        "segmentFraction",
        "il",
        "t",
        "t",
        "t",
        "delta",
        "t",
        "delta",
        "t1",
        "t1",
        "t2",
        "t2",
        "t1",
        "t2",
        "pt2",
        "pt1",
        "vec",
        "u",
        "u",
        "t",
        "THREE",
        "getPointFunc",
        "THREE",
        "getPointFunc",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "curve",
        "curve",
        "THREE",
        "startPoint",
        "endPoint",
        "THREE",
        "endPoint",
        "startPoint",
        "THREE",
        "t",
        "t",
        "i",
        "curveLengths",
        "curveLengths",
        "i",
        "d",
        "curveLengths",
        "i",
        "d",
        "i",
        "diff",
        "curve",
        "curve",
        "u",
        "i",
        "THREE",
        "lens",
        "lens",
        "THREE",
        "i",
        "l",
        "i",
        "sums",
        "i",
        "lengths",
        "sums",
        "lengths",
        "lengths",
        "THREE",
        "divisions",
        "divisions",
        "pts",
        "THREE",
        "divisions",
        "divisions",
        "pts",
        "THREE",
        "points",
        "THREE",
        "points",
        "i",
        "l",
        "i",
        "points",
        "i",
        "geometry",
        "THREE",
        "point",
        "point",
        "point",
        "geometry",
        "THREE",
        "data",
        "data",
        "THREE",
        "THREE",
        "text",
        "size",
        "divisions",
        "text",
        "text",
        "size",
        "data",
        "i",
        "chars",
        "i",
        "createPath",
        "chars",
        "i",
        "scale",
        "offset",
        "offset",
        "ret",
        "paths",
        "ret",
        "paths",
        "c",
        "scale",
        "offset",
        "data",
        "c",
        "data",
        "glyph",
        "THREE",
        "THREE",
        "THREE",
        "glyph",
        "glyph",
        "glyph",
        "glyph",
        "outline",
        "i",
        "l",
        "outline",
        "i",
        "action",
        "x",
        "outline",
        "i",
        "scale",
        "offset",
        "y",
        "outline",
        "i",
        "scale",
        "path",
        "x",
        "y",
        "x",
        "outline",
        "i",
        "scale",
        "offset",
        "y",
        "outline",
        "i",
        "scale",
        "path",
        "x",
        "y",
        "cpx",
        "outline",
        "i",
        "scale",
        "offset",
        "cpy",
        "outline",
        "i",
        "scale",
        "cpx1",
        "outline",
        "i",
        "scale",
        "offset",
        "cpy1",
        "outline",
        "i",
        "scale",
        "path",
        "cpx1",
        "cpy1",
        "cpx",
        "cpy",
        "laste",
        "pts",
        "pts",
        "laste",
        "cpx0",
        "laste",
        "cpy0",
        "laste",
        "i2",
        "divisions",
        "i2",
        "i2",
        "divisions",
        "b2",
        "t",
        "cpx0",
        "cpx1",
        "cpx",
        "b2",
        "t",
        "cpy0",
        "cpy1",
        "cpy",
        "cpx",
        "outline",
        "i",
        "scale",
        "offset",
        "cpy",
        "outline",
        "i",
        "scale",
        "cpx1",
        "outline",
        "i",
        "scale",
        "offset",
        "cpy1",
        "outline",
        "i",
        "scale",
        "cpx2",
        "outline",
        "i",
        "scale",
        "offset",
        "cpy2",
        "outline",
        "i",
        "scale",
        "path",
        "cpx1",
        "cpy1",
        "cpx2",
        "cpy2",
        "cpx",
        "cpy",
        "laste",
        "pts",
        "pts",
        "laste",
        "cpx0",
        "laste",
        "cpy0",
        "laste",
        "i2",
        "divisions",
        "i2",
        "i2",
        "divisions",
        "b3",
        "t",
        "cpx0",
        "cpx1",
        "cpx2",
        "cpx",
        "b3",
        "t",
        "cpy0",
        "cpy1",
        "cpy2",
        "cpy",
        "glyph",
        "scale",
        "path",
        "size",
        "size",
        "divisions",
        "divisions",
        "createPaths",
        "text",
        "paths",
        "p",
        "pl",
        "p",
        "shapes",
        "paths",
        "p",
        "shapes",
        "THREE",
        "points",
        "THREE",
        "points",
        "points",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "vectors",
        "vectors",
        "vectors",
        "vectors",
        "i",
        "l",
        "i",
        "vectors",
        "i",
        "vectors",
        "i",
        "THREE",
        "x",
        "y",
        "x",
        "y",
        "THREE",
        "x",
        "y",
        "lastargs",
        "lastargs",
        "lastargs",
        "lastargs",
        "THREE",
        "THREE",
        "x0",
        "y0",
        "THREE",
        "x",
        "y",
        "curve",
        "x",
        "y",
        "THREE",
        "aCPx",
        "aCPy",
        "aX",
        "aY",
        "lastargs",
        "lastargs",
        "lastargs",
        "lastargs",
        "THREE",
        "THREE",
        "x0",
        "y0",
        "THREE",
        "aCPx",
        "aCPy",
        "THREE",
        "aX",
        "aY",
        "curve",
        "aCPx",
        "aCPy",
        "aX",
        "aY",
        "THREE",
        "aCP1x",
        "aCP1y",
        "aCP2x",
        "aCP2y",
        "aX",
        "aY",
        "lastargs",
        "lastargs",
        "lastargs",
        "lastargs",
        "THREE",
        "THREE",
        "x0",
        "y0",
        "THREE",
        "aCP1x",
        "aCP1y",
        "THREE",
        "aCP2x",
        "aCP2y",
        "THREE",
        "aX",
        "aY",
        "curve",
        "aCP1x",
        "aCP1y",
        "aCP2x",
        "aCP2y",
        "aX",
        "aY",
        "THREE",
        "pts",
        "arguments",
        "lastargs",
        "lastargs",
        "lastargs",
        "lastargs",
        "THREE",
        "x0",
        "y0",
        "npts",
        "pts",
        "THREE",
        "npts",
        "curve",
        "args",
        "THREE",
        "aX",
        "aY",
        "aRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "lastargs",
        "lastargs",
        "lastargs",
        "lastargs",
        "aX",
        "x0",
        "aY",
        "y0",
        "aRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "THREE",
        "aX",
        "aY",
        "aRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aX",
        "aY",
        "aRadius",
        "aRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "THREE",
        "aX",
        "aY",
        "xRadius",
        "yRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aRotation",
        "lastargs",
        "lastargs",
        "lastargs",
        "lastargs",
        "aX",
        "x0",
        "aY",
        "y0",
        "xRadius",
        "yRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aRotation",
        "THREE",
        "aX",
        "aY",
        "xRadius",
        "yRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aRotation",
        "aX",
        "aY",
        "xRadius",
        "yRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aRotation",
        "THREE",
        "aX",
        "aY",
        "xRadius",
        "yRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aRotation",
        "curve",
        "curve",
        "args",
        "lastPoint",
        "args",
        "lastPoint",
        "args",
        "THREE",
        "divisions",
        "divisions",
        "divisions",
        "i",
        "divisions",
        "i",
        "points",
        "i",
        "divisions",
        "points",
        "points",
        "points",
        "THREE",
        "divisions",
        "divisions",
        "divisions",
        "THREE",
        "THREE",
        "i",
        "l",
        "i",
        "i",
        "item",
        "item",
        "action",
        "points",
        "THREE",
        "args",
        "args",
        "points",
        "THREE",
        "args",
        "args",
        "cpx",
        "args",
        "cpy",
        "args",
        "cpx1",
        "args",
        "cpy1",
        "args",
        "points",
        "laste",
        "points",
        "points",
        "cpx0",
        "laste",
        "cpy0",
        "laste",
        "laste",
        "i",
        "cpx0",
        "laste",
        "laste",
        "cpy0",
        "laste",
        "laste",
        "j",
        "divisions",
        "j",
        "j",
        "divisions",
        "tx",
        "b2",
        "t",
        "cpx0",
        "cpx1",
        "cpx",
        "ty",
        "b2",
        "t",
        "cpy0",
        "cpy1",
        "cpy",
        "points",
        "THREE",
        "tx",
        "ty",
        "cpx",
        "args",
        "cpy",
        "args",
        "cpx1",
        "args",
        "cpy1",
        "args",
        "cpx2",
        "args",
        "cpy2",
        "args",
        "points",
        "laste",
        "points",
        "points",
        "cpx0",
        "laste",
        "cpy0",
        "laste",
        "laste",
        "i",
        "cpx0",
        "laste",
        "laste",
        "cpy0",
        "laste",
        "laste",
        "j",
        "divisions",
        "j",
        "j",
        "divisions",
        "tx",
        "b3",
        "t",
        "cpx0",
        "cpx1",
        "cpx2",
        "cpx",
        "ty",
        "b3",
        "t",
        "cpy0",
        "cpy1",
        "cpy2",
        "cpy",
        "points",
        "THREE",
        "tx",
        "ty",
        "laste",
        "i",
        "THREE",
        "laste",
        "laste",
        "laste",
        "laste",
        "last",
        "divisions",
        "args",
        "spts",
        "spts",
        "args",
        "THREE",
        "spts",
        "j",
        "n",
        "j",
        "points",
        "spline",
        "j",
        "n",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "aEndAngle",
        "aStartAngle",
        "divisions",
        "j",
        "tdivisions",
        "j",
        "j",
        "tdivisions",
        "aClockwise",
        "t",
        "t",
        "angle",
        "aStartAngle",
        "t",
        "deltaAngle",
        "tx",
        "aX",
        "aRadius",
        "angle",
        "ty",
        "aY",
        "aRadius",
        "angle",
        "points",
        "THREE",
        "tx",
        "ty",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "aEndAngle",
        "aStartAngle",
        "divisions",
        "aRotation",
        "cos",
        "aRotation",
        "sin",
        "aRotation",
        "j",
        "tdivisions",
        "j",
        "j",
        "tdivisions",
        "aClockwise",
        "t",
        "t",
        "angle",
        "aStartAngle",
        "t",
        "deltaAngle",
        "tx",
        "aX",
        "xRadius",
        "angle",
        "ty",
        "aY",
        "yRadius",
        "angle",
        "aRotation",
        "tx",
        "x",
        "aX",
        "cos",
        "y",
        "aY",
        "sin",
        "aX",
        "ty",
        "x",
        "aX",
        "sin",
        "y",
        "aY",
        "cos",
        "aY",
        "points",
        "THREE",
        "tx",
        "ty",
        "points",
        "points",
        "lastPoint",
        "points",
        "lastPoint",
        "points",
        "points",
        "points",
        "points",
        "points",
        "points",
        "THREE",
        "isCCW",
        "noHoles",
        "inActions",
        "THREE",
        "inActions",
        "i",
        "l",
        "i",
        "inActions",
        "i",
        "item",
        "item",
        "action",
        "lastPath",
        "subPaths",
        "lastPath",
        "lastPath",
        "THREE",
        "lastPath",
        "action",
        "lastPath",
        "args",
        "lastPath",
        "subPaths",
        "lastPath",
        "subPaths",
        "inSubpaths",
        "inSubpaths",
        "i",
        "l",
        "i",
        "inSubpaths",
        "i",
        "THREE",
        "tmpShape",
        "tmpPath",
        "tmpShape",
        "tmpPath",
        "shapes",
        "tmpShape",
        "shapes",
        "inPt",
        "inPolygon",
        "inPolygon",
        "polyLen",
        "q",
        "polyLen",
        "p",
        "q",
        "inPolygon",
        "p",
        "inPolygon",
        "q",
        "edgeHighPt",
        "edgeLowPt",
        "edgeHighPt",
        "edgeLowPt",
        "edgeDy",
        "edgeDy",
        "edgeLowPt",
        "inPolygon",
        "q",
        "edgeDx",
        "edgeDx",
        "edgeHighPt",
        "inPolygon",
        "p",
        "edgeDy",
        "edgeDy",
        "inPt",
        "edgeLowPt",
        "inPt",
        "edgeHighPt",
        "inPt",
        "edgeLowPt",
        "inPt",
        "edgeLowPt",
        "edgeDy",
        "inPt",
        "edgeLowPt",
        "edgeDx",
        "inPt",
        "edgeLowPt",
        "perpEdge",
        "perpEdge",
        "inside",
        "inside",
        "inPt",
        "edgeLowPt",
        "edgeHighPt",
        "inPt",
        "inPt",
        "edgeLowPt",
        "edgeLowPt",
        "inPt",
        "inPt",
        "edgeHighPt",
        "inside",
        "THREE",
        "extractSubpaths",
        "subPaths",
        "noHoles",
        "toShapesNoHoles",
        "subPaths",
        "subPaths",
        "tmpPath",
        "subPaths",
        "tmpShape",
        "THREE",
        "tmpShape",
        "tmpPath",
        "tmpShape",
        "tmpPath",
        "shapes",
        "tmpShape",
        "shapes",
        "isClockWise",
        "subPaths",
        "holesFirst",
        "isCCW",
        "holesFirst",
        "holesFirst",
        "newShapes",
        "mainIdx",
        "newShapeHoles",
        "mainIdx",
        "subPaths",
        "i",
        "l",
        "i",
        "tmpPath",
        "subPaths",
        "i",
        "tmpPoints",
        "tmpPath",
        "solid",
        "isClockWise",
        "tmpPoints",
        "solid",
        "isCCW",
        "solid",
        "solid",
        "solid",
        "holesFirst",
        "newShapes",
        "mainIdx",
        "mainIdx",
        "newShapes",
        "mainIdx",
        "THREE",
        "tmpPoints",
        "newShapes",
        "mainIdx",
        "tmpPath",
        "newShapes",
        "mainIdx",
        "tmpPath",
        "holesFirst",
        "mainIdx",
        "newShapeHoles",
        "mainIdx",
        "newShapeHoles",
        "mainIdx",
        "tmpPath",
        "tmpPoints",
        "newShapes",
        "toShapesNoHoles",
        "subPaths",
        "newShapes",
        "newShapes",
        "sIdx",
        "sLen",
        "sIdx",
        "betterShapeHoles",
        "sIdx",
        "newShapes",
        "sIdx",
        "sLen",
        "sIdx",
        "newShapeHoles",
        "sIdx",
        "hIdx",
        "sho",
        "hIdx",
        "sho",
        "hIdx",
        "s2Idx",
        "newShapes",
        "s2Idx",
        "isPointInsidePolygon",
        "ho",
        "newShapes",
        "s2Idx",
        "sIdx",
        "s2Idx",
        "toChange",
        "sIdx",
        "s2Idx",
        "hIdx",
        "hole_unassigned",
        "hole_unassigned",
        "betterShapeHoles",
        "s2Idx",
        "ho",
        "ambiguous",
        "hole_unassigned",
        "betterShapeHoles",
        "sIdx",
        "ho",
        "toChange",
        "ambiguous",
        "newShapeHoles",
        "betterShapeHoles",
        "newShapes",
        "i",
        "il",
        "i",
        "tmpShape",
        "newShapes",
        "i",
        "shapes",
        "tmpShape",
        "tmpHoles",
        "newShapeHoles",
        "i",
        "tmpHoles",
        "j",
        "jl",
        "j",
        "tmpShape",
        "tmpHoles",
        "j",
        "shapes",
        "THREE",
        "THREE",
        "arguments",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "options",
        "THREE",
        "options",
        "THREE",
        "options",
        "THREE",
        "options",
        "THREE",
        "divisions",
        "i",
        "l",
        "i",
        "holesPts",
        "i",
        "i",
        "divisions",
        "holesPts",
        "THREE",
        "divisions",
        "divisions",
        "divisions",
        "THREE",
        "divisions",
        "divisions",
        "THREE",
        "v1",
        "v2",
        "v1",
        "v2",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "t",
        "point",
        "t",
        "point",
        "THREE",
        "u",
        "u",
        "THREE",
        "t",
        "tangent",
        "THREE",
        "v0",
        "v1",
        "v2",
        "v0",
        "v1",
        "v2",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "t",
        "THREE",
        "THREE",
        "b2",
        "t",
        "b2",
        "t",
        "THREE",
        "t",
        "THREE",
        "THREE",
        "tangentQuadraticBezier",
        "t",
        "tangentQuadraticBezier",
        "t",
        "THREE",
        "v0",
        "v1",
        "v2",
        "v3",
        "v0",
        "v1",
        "v2",
        "v3",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "t",
        "THREE",
        "THREE",
        "b3",
        "t",
        "b3",
        "t",
        "THREE",
        "t",
        "THREE",
        "THREE",
        "tangentCubicBezier",
        "t",
        "tangentCubicBezier",
        "t",
        "THREE",
        "points",
        "points",
        "points",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "t",
        "points",
        "t",
        "point",
        "point",
        "intPoint",
        "points",
        "intPoint",
        "intPoint",
        "intPoint",
        "points",
        "intPoint",
        "points",
        "intPoint",
        "points",
        "points",
        "intPoint",
        "points",
        "intPoint",
        "points",
        "points",
        "intPoint",
        "THREE",
        "THREE",
        "interpolate",
        "point0",
        "point1",
        "point2",
        "point3",
        "weight",
        "interpolate",
        "point0",
        "point1",
        "point2",
        "point3",
        "weight",
        "THREE",
        "aX",
        "aY",
        "xRadius",
        "yRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aRotation",
        "aX",
        "aY",
        "xRadius",
        "yRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aRotation",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "t",
        "deltaAngle",
        "deltaAngle",
        "deltaAngle",
        "deltaAngle",
        "angle",
        "t",
        "deltaAngle",
        "angle",
        "t",
        "deltaAngle",
        "angle",
        "angle",
        "x",
        "tx",
        "cos",
        "ty",
        "sin",
        "y",
        "tx",
        "sin",
        "ty",
        "cos",
        "THREE",
        "x",
        "y",
        "THREE",
        "aX",
        "aY",
        "aRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "THREE",
        "aX",
        "aY",
        "aRadius",
        "aRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "v1",
        "v2",
        "v1",
        "v2",
        "t",
        "THREE",
        "vector",
        "vector",
        "t",
        "vector",
        "vector",
        "THREE",
        "THREE",
        "v0",
        "v1",
        "v2",
        "v0",
        "v1",
        "v2",
        "t",
        "THREE",
        "THREE",
        "b2",
        "t",
        "b2",
        "t",
        "b2",
        "t",
        "THREE",
        "THREE",
        "v0",
        "v1",
        "v2",
        "v3",
        "v0",
        "v1",
        "v2",
        "v3",
        "t",
        "THREE",
        "THREE",
        "b3",
        "t",
        "b3",
        "t",
        "b3",
        "t",
        "THREE",
        "THREE",
        "points",
        "points",
        "points",
        "t",
        "points",
        "t",
        "point",
        "point",
        "intPoint",
        "points",
        "intPoint",
        "intPoint",
        "intPoint",
        "points",
        "intPoint",
        "points",
        "intPoint",
        "points",
        "points",
        "intPoint",
        "points",
        "intPoint",
        "points",
        "points",
        "intPoint",
        "THREE",
        "THREE",
        "interpolate",
        "point0",
        "point1",
        "point2",
        "point3",
        "weight",
        "interpolate",
        "point0",
        "point1",
        "point2",
        "point3",
        "weight",
        "interpolate",
        "point0",
        "point1",
        "point2",
        "point3",
        "weight",
        "THREE",
        "THREE",
        "CubicPoly",
        "CubicPoly",
        "CubicPoly",
        "CubicPoly",
        "x0",
        "x1",
        "t0",
        "t1",
        "x0",
        "t0",
        "x0",
        "x1",
        "t0",
        "t1",
        "x0",
        "x1",
        "t0",
        "t1",
        "CubicPoly",
        "x0",
        "x1",
        "x2",
        "x3",
        "dt0",
        "dt1",
        "dt2",
        "x1",
        "x0",
        "dt0",
        "x2",
        "x0",
        "dt0",
        "dt1",
        "x2",
        "x1",
        "dt1",
        "x2",
        "x1",
        "dt1",
        "x3",
        "x1",
        "dt1",
        "dt2",
        "x3",
        "x2",
        "dt2",
        "t1",
        "dt1",
        "t2",
        "dt1",
        "x1",
        "x2",
        "t1",
        "t2",
        "CubicPoly",
        "x0",
        "x1",
        "x2",
        "x3",
        "tension",
        "x1",
        "x2",
        "tension",
        "x2",
        "x0",
        "tension",
        "x3",
        "x1",
        "CubicPoly",
        "t",
        "t",
        "t",
        "t2",
        "t",
        "t",
        "t2",
        "t3",
        "THREE",
        "p",
        "p",
        "t",
        "l",
        "points",
        "l",
        "point",
        "l",
        "t",
        "intPoint",
        "point",
        "weight",
        "point",
        "intPoint",
        "intPoint",
        "intPoint",
        "intPoint",
        "points",
        "points",
        "weight",
        "intPoint",
        "l",
        "intPoint",
        "l",
        "weight",
        "intPoint",
        "p0",
        "points",
        "intPoint",
        "l",
        "tmp",
        "points",
        "points",
        "points",
        "p0",
        "tmp",
        "p1",
        "points",
        "intPoint",
        "l",
        "p2",
        "points",
        "intPoint",
        "l",
        "intPoint",
        "l",
        "p3",
        "points",
        "intPoint",
        "l",
        "tmp",
        "points",
        "l",
        "points",
        "l",
        "points",
        "l",
        "p3",
        "tmp",
        "p0",
        "p1",
        "pow",
        "p1",
        "p2",
        "pow",
        "p2",
        "p3",
        "pow",
        "dt1",
        "dt1",
        "dt0",
        "dt0",
        "dt1",
        "dt2",
        "dt2",
        "dt1",
        "px",
        "p0",
        "p1",
        "p2",
        "p3",
        "dt0",
        "dt1",
        "dt2",
        "py",
        "p0",
        "p1",
        "p2",
        "p3",
        "dt0",
        "dt1",
        "dt2",
        "pz",
        "p0",
        "p1",
        "p2",
        "p3",
        "dt0",
        "dt1",
        "dt2",
        "px",
        "p0",
        "p1",
        "p2",
        "p3",
        "tension",
        "py",
        "p0",
        "p1",
        "p2",
        "p3",
        "tension",
        "pz",
        "p0",
        "p1",
        "p2",
        "p3",
        "tension",
        "THREE",
        "px",
        "weight",
        "py",
        "weight",
        "pz",
        "weight",
        "v",
        "THREE",
        "points",
        "THREE",
        "points",
        "THREE",
        "THREE",
        "THREE",
        "width",
        "height",
        "depth",
        "widthSegments",
        "heightSegments",
        "depthSegments",
        "THREE",
        "width",
        "height",
        "depth",
        "widthSegments",
        "heightSegments",
        "depthSegments",
        "widthSegments",
        "heightSegments",
        "depthSegments",
        "width",
        "height",
        "depth",
        "buildPlane",
        "depth",
        "height",
        "width_half",
        "buildPlane",
        "depth",
        "height",
        "width_half",
        "buildPlane",
        "width",
        "depth",
        "height_half",
        "buildPlane",
        "width",
        "depth",
        "height_half",
        "buildPlane",
        "width",
        "height",
        "depth_half",
        "buildPlane",
        "width",
        "height",
        "depth_half",
        "u",
        "v",
        "udir",
        "vdir",
        "width",
        "height",
        "depth",
        "materialIndex",
        "scope",
        "scope",
        "width",
        "height",
        "scope",
        "u",
        "v",
        "u",
        "v",
        "w",
        "u",
        "v",
        "u",
        "v",
        "w",
        "gridY",
        "scope",
        "u",
        "v",
        "u",
        "v",
        "w",
        "gridX",
        "scope",
        "gridX",
        "gridY",
        "width",
        "gridX",
        "height",
        "gridY",
        "THREE",
        "normal",
        "w",
        "depth",
        "iy",
        "iy",
        "gridY1",
        "iy",
        "ix",
        "ix",
        "gridX1",
        "ix",
        "THREE",
        "vector",
        "u",
        "ix",
        "segment_width",
        "width_half",
        "udir",
        "vector",
        "v",
        "iy",
        "segment_height",
        "height_half",
        "vdir",
        "vector",
        "w",
        "depth",
        "scope",
        "vector",
        "iy",
        "iy",
        "gridY",
        "iy",
        "ix",
        "ix",
        "gridX",
        "ix",
        "ix",
        "gridX1",
        "iy",
        "ix",
        "gridX1",
        "iy",
        "ix",
        "gridX1",
        "iy",
        "ix",
        "gridX1",
        "iy",
        "THREE",
        "ix",
        "gridX",
        "iy",
        "gridY",
        "THREE",
        "ix",
        "gridX",
        "iy",
        "gridY",
        "THREE",
        "ix",
        "gridX",
        "iy",
        "gridY",
        "THREE",
        "ix",
        "gridX",
        "iy",
        "gridY",
        "THREE",
        "a",
        "offset",
        "b",
        "offset",
        "d",
        "offset",
        "face",
        "normal",
        "face",
        "normal",
        "normal",
        "normal",
        "face",
        "materialIndex",
        "scope",
        "face",
        "scope",
        "uva",
        "uvb",
        "uvd",
        "face",
        "THREE",
        "b",
        "offset",
        "c",
        "offset",
        "d",
        "offset",
        "face",
        "normal",
        "face",
        "normal",
        "normal",
        "normal",
        "face",
        "materialIndex",
        "scope",
        "face",
        "scope",
        "uvb",
        "uvc",
        "uvd",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "radius",
        "segments",
        "thetaStart",
        "thetaLength",
        "THREE",
        "radius",
        "segments",
        "thetaStart",
        "thetaLength",
        "THREE",
        "radius",
        "segments",
        "thetaStart",
        "thetaLength",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "radius",
        "segments",
        "thetaStart",
        "thetaLength",
        "THREE",
        "radius",
        "segments",
        "thetaStart",
        "thetaLength",
        "radius",
        "radius",
        "segments",
        "segments",
        "segments",
        "thetaStart",
        "thetaStart",
        "thetaStart",
        "thetaLength",
        "thetaLength",
        "thetaLength",
        "segments",
        "Float32Array",
        "vertices",
        "Float32Array",
        "vertices",
        "Float32Array",
        "vertices",
        "normals",
        "uvs",
        "uvs",
        "s",
        "segments",
        "s",
        "i",
        "ii",
        "thetaStart",
        "s",
        "segments",
        "thetaLength",
        "positions",
        "i",
        "radius",
        "segment",
        "positions",
        "i",
        "radius",
        "segment",
        "normals",
        "i",
        "uvs",
        "ii",
        "positions",
        "i",
        "radius",
        "uvs",
        "ii",
        "positions",
        "i",
        "radius",
        "i",
        "segments",
        "i",
        "indices",
        "i",
        "i",
        "THREE",
        "Uint16Array",
        "indices",
        "THREE",
        "positions",
        "THREE",
        "normals",
        "THREE",
        "uvs",
        "THREE",
        "THREE",
        "radius",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "radiusTop",
        "radiusBottom",
        "height",
        "radialSegments",
        "heightSegments",
        "openEnded",
        "thetaStart",
        "thetaLength",
        "THREE",
        "radiusTop",
        "radiusBottom",
        "height",
        "radialSegments",
        "heightSegments",
        "openEnded",
        "thetaStart",
        "thetaLength",
        "radiusTop",
        "radiusTop",
        "radiusTop",
        "radiusBottom",
        "radiusBottom",
        "radiusBottom",
        "height",
        "height",
        "height",
        "radialSegments",
        "radialSegments",
        "heightSegments",
        "heightSegments",
        "openEnded",
        "openEnded",
        "openEnded",
        "thetaStart",
        "thetaStart",
        "thetaStart",
        "thetaLength",
        "thetaLength",
        "thetaLength",
        "height",
        "y",
        "y",
        "heightSegments",
        "y",
        "y",
        "heightSegments",
        "v",
        "radiusBottom",
        "radiusTop",
        "radiusTop",
        "x",
        "x",
        "radialSegments",
        "x",
        "x",
        "radialSegments",
        "THREE",
        "vertex",
        "radius",
        "u",
        "thetaLength",
        "thetaStart",
        "vertex",
        "v",
        "height",
        "heightHalf",
        "vertex",
        "radius",
        "u",
        "thetaLength",
        "thetaStart",
        "vertex",
        "verticesRow",
        "uvsRow",
        "THREE",
        "u",
        "v",
        "vertices",
        "verticesRow",
        "uvs",
        "uvsRow",
        "radiusBottom",
        "radiusTop",
        "height",
        "x",
        "x",
        "radialSegments",
        "x",
        "radiusTop",
        "na",
        "vertices",
        "x",
        "nb",
        "vertices",
        "x",
        "na",
        "vertices",
        "x",
        "nb",
        "vertices",
        "x",
        "na",
        "na",
        "na",
        "na",
        "na",
        "tanTheta",
        "nb",
        "nb",
        "nb",
        "nb",
        "nb",
        "tanTheta",
        "y",
        "y",
        "heightSegments",
        "y",
        "vertices",
        "y",
        "x",
        "vertices",
        "y",
        "x",
        "vertices",
        "y",
        "x",
        "vertices",
        "y",
        "x",
        "na",
        "na",
        "nb",
        "nb",
        "uvs",
        "y",
        "x",
        "uvs",
        "y",
        "x",
        "uvs",
        "y",
        "x",
        "uvs",
        "y",
        "x",
        "THREE",
        "v1",
        "v2",
        "v4",
        "n1",
        "n2",
        "n4",
        "uv1",
        "uv2",
        "uv4",
        "THREE",
        "v2",
        "v3",
        "v4",
        "n2",
        "n3",
        "n4",
        "uv2",
        "uv3",
        "uv4",
        "openEnded",
        "radiusTop",
        "THREE",
        "heightHalf",
        "x",
        "x",
        "radialSegments",
        "x",
        "vertices",
        "x",
        "vertices",
        "x",
        "THREE",
        "THREE",
        "THREE",
        "uvs",
        "x",
        "uvs",
        "x",
        "THREE",
        "uv2",
        "THREE",
        "v1",
        "v2",
        "v3",
        "n1",
        "n2",
        "n3",
        "uv1",
        "uv2",
        "uv3",
        "openEnded",
        "radiusBottom",
        "THREE",
        "heightHalf",
        "x",
        "x",
        "radialSegments",
        "x",
        "vertices",
        "heightSegments",
        "x",
        "vertices",
        "heightSegments",
        "x",
        "THREE",
        "THREE",
        "THREE",
        "uvs",
        "heightSegments",
        "x",
        "uvs",
        "heightSegments",
        "x",
        "THREE",
        "uv2",
        "THREE",
        "v1",
        "v2",
        "v3",
        "n1",
        "n2",
        "n3",
        "uv1",
        "uv2",
        "uv3",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "geometry",
        "thresholdAngle",
        "THREE",
        "thresholdAngle",
        "thresholdAngle",
        "thresholdAngle",
        "THREE",
        "thresholdAngle",
        "a",
        "b",
        "a",
        "b",
        "geometry",
        "THREE",
        "geometry2",
        "THREE",
        "geometry2",
        "geometry",
        "geometry2",
        "geometry",
        "geometry2",
        "geometry2",
        "geometry2",
        "geometry2",
        "faces",
        "i",
        "l",
        "i",
        "faces",
        "i",
        "j",
        "j",
        "edge",
        "face",
        "keys",
        "j",
        "edge",
        "face",
        "keys",
        "j",
        "edge",
        "sortFunction",
        "edge",
        "hash",
        "key",
        "hash",
        "key",
        "edge",
        "edge",
        "i",
        "hash",
        "key",
        "i",
        "key",
        "hash",
        "hash",
        "key",
        "h",
        "faces",
        "h",
        "faces",
        "h",
        "thresholdDot",
        "vertices",
        "h",
        "coords",
        "vertex",
        "coords",
        "vertex",
        "coords",
        "vertex",
        "vertex",
        "vertices",
        "h",
        "coords",
        "vertex",
        "coords",
        "vertex",
        "coords",
        "vertex",
        "THREE",
        "Float32Array",
        "coords",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "shapes",
        "options",
        "shapes",
        "shapes",
        "THREE",
        "shapes",
        "shapes",
        "shapes",
        "shapes",
        "shapes",
        "options",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "shapes",
        "options",
        "shapes",
        "s",
        "sl",
        "s",
        "shapes",
        "s",
        "shape",
        "options",
        "THREE",
        "shape",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "bevelThickness",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "THREE",
        "extrudePath",
        "extrudePts",
        "extrudePath",
        "steps",
        "extrudeByPath",
        "bevelEnabled",
        "splineTube",
        "options",
        "options",
        "THREE",
        "extrudePath",
        "steps",
        "binormal",
        "THREE",
        "normal",
        "THREE",
        "position2",
        "THREE",
        "bevelEnabled",
        "bevelSegments",
        "bevelThickness",
        "bevelSize",
        "shape",
        "curveSegments",
        "shapePoints",
        "shapePoints",
        "THREE",
        "vertices",
        "reverse",
        "vertices",
        "vertices",
        "h",
        "hl",
        "holes",
        "h",
        "hl",
        "h",
        "ahole",
        "holes",
        "h",
        "THREE",
        "ahole",
        "holes",
        "h",
        "ahole",
        "reverse",
        "THREE",
        "vertices",
        "holes",
        "h",
        "hl",
        "holes",
        "h",
        "hl",
        "h",
        "ahole",
        "holes",
        "h",
        "vertices",
        "vertices",
        "ahole",
        "pt",
        "vec",
        "size",
        "vec",
        "vec",
        "size",
        "pt",
        "vertices",
        "faces",
        "inPt",
        "inPrev",
        "inNext",
        "inPt",
        "inPrev",
        "inPt",
        "inPrev",
        "inNext",
        "inPt",
        "inNext",
        "inPt",
        "v_prev_x",
        "v_prev_x",
        "v_prev_y",
        "v_prev_y",
        "v_prev_x",
        "v_next_y",
        "v_prev_y",
        "v_next_x",
        "collinear0",
        "v_prev_lensq",
        "v_next_x",
        "v_next_x",
        "v_next_y",
        "v_next_y",
        "inPrev",
        "v_prev_y",
        "v_prev_len",
        "inPrev",
        "v_prev_x",
        "v_prev_len",
        "inNext",
        "v_next_y",
        "v_next_len",
        "inNext",
        "v_next_x",
        "v_next_len",
        "ptNextShift_x",
        "ptPrevShift_x",
        "v_next_y",
        "ptNextShift_y",
        "ptPrevShift_y",
        "v_next_x",
        "v_prev_x",
        "v_next_y",
        "v_prev_y",
        "v_next_x",
        "v_trans_x",
        "ptPrevShift_x",
        "v_prev_x",
        "sf",
        "inPt",
        "v_trans_y",
        "ptPrevShift_y",
        "v_prev_y",
        "sf",
        "inPt",
        "v_trans_x",
        "v_trans_x",
        "v_trans_y",
        "v_trans_y",
        "v_trans_lensq",
        "THREE",
        "v_trans_x",
        "v_trans_y",
        "shrink_by",
        "v_trans_lensq",
        "v_prev_x",
        "v_next_x",
        "direction_eq",
        "v_prev_x",
        "v_next_x",
        "direction_eq",
        "v_prev_y",
        "v_next_y",
        "direction_eq",
        "direction_eq",
        "v_trans_x",
        "v_prev_y",
        "v_trans_y",
        "v_prev_x",
        "shrink_by",
        "v_prev_lensq",
        "v_trans_x",
        "v_prev_x",
        "v_trans_y",
        "v_prev_y",
        "shrink_by",
        "v_prev_lensq",
        "THREE",
        "v_trans_x",
        "shrink_by",
        "v_trans_y",
        "shrink_by",
        "contour",
        "il",
        "i",
        "i",
        "il",
        "i",
        "j",
        "k",
        "j",
        "il",
        "j",
        "k",
        "il",
        "k",
        "contourMovements",
        "i",
        "getBevelVec",
        "contour",
        "i",
        "contour",
        "j",
        "contour",
        "k",
        "contourMovements",
        "h",
        "hl",
        "holes",
        "h",
        "hl",
        "h",
        "ahole",
        "holes",
        "h",
        "oneHoleMovements",
        "i",
        "il",
        "ahole",
        "j",
        "il",
        "k",
        "i",
        "i",
        "il",
        "i",
        "j",
        "k",
        "j",
        "il",
        "j",
        "k",
        "il",
        "k",
        "oneHoleMovements",
        "i",
        "getBevelVec",
        "ahole",
        "i",
        "ahole",
        "j",
        "ahole",
        "k",
        "holesMovements",
        "oneHoleMovements",
        "verticesMovements",
        "verticesMovements",
        "oneHoleMovements",
        "b",
        "b",
        "bevelSegments",
        "b",
        "t",
        "b",
        "bevelSegments",
        "z",
        "bevelThickness",
        "t",
        "bs",
        "bevelSize",
        "t",
        "i",
        "il",
        "contour",
        "i",
        "il",
        "i",
        "vert",
        "scalePt2",
        "contour",
        "i",
        "contourMovements",
        "i",
        "bs",
        "v",
        "vert",
        "vert",
        "z",
        "h",
        "hl",
        "holes",
        "h",
        "hl",
        "h",
        "ahole",
        "holes",
        "h",
        "oneHoleMovements",
        "holesMovements",
        "h",
        "i",
        "il",
        "ahole",
        "i",
        "il",
        "i",
        "vert",
        "scalePt2",
        "ahole",
        "i",
        "oneHoleMovements",
        "i",
        "bs",
        "v",
        "vert",
        "vert",
        "z",
        "bs",
        "bevelSize",
        "i",
        "i",
        "vlen",
        "i",
        "vert",
        "bevelEnabled",
        "scalePt2",
        "vertices",
        "i",
        "verticesMovements",
        "i",
        "bs",
        "vertices",
        "i",
        "extrudeByPath",
        "v",
        "vert",
        "vert",
        "normal",
        "splineTube",
        "vert",
        "binormal",
        "splineTube",
        "vert",
        "position2",
        "extrudePts",
        "normal",
        "binormal",
        "v",
        "position2",
        "position2",
        "position2",
        "s",
        "s",
        "steps",
        "s",
        "i",
        "i",
        "vlen",
        "i",
        "vert",
        "bevelEnabled",
        "scalePt2",
        "vertices",
        "i",
        "verticesMovements",
        "i",
        "bs",
        "vertices",
        "i",
        "extrudeByPath",
        "v",
        "vert",
        "vert",
        "amount",
        "steps",
        "s",
        "normal",
        "splineTube",
        "s",
        "vert",
        "binormal",
        "splineTube",
        "s",
        "vert",
        "position2",
        "extrudePts",
        "s",
        "normal",
        "binormal",
        "v",
        "position2",
        "position2",
        "position2",
        "b",
        "bevelSegments",
        "b",
        "b",
        "t",
        "b",
        "bevelSegments",
        "z",
        "bevelThickness",
        "t",
        "bs",
        "bevelSize",
        "t",
        "i",
        "il",
        "contour",
        "i",
        "il",
        "i",
        "vert",
        "scalePt2",
        "contour",
        "i",
        "contourMovements",
        "i",
        "bs",
        "v",
        "vert",
        "vert",
        "amount",
        "z",
        "h",
        "hl",
        "holes",
        "h",
        "hl",
        "h",
        "ahole",
        "holes",
        "h",
        "oneHoleMovements",
        "holesMovements",
        "h",
        "i",
        "il",
        "ahole",
        "i",
        "il",
        "i",
        "vert",
        "scalePt2",
        "ahole",
        "i",
        "oneHoleMovements",
        "i",
        "bs",
        "extrudeByPath",
        "v",
        "vert",
        "vert",
        "amount",
        "z",
        "v",
        "vert",
        "vert",
        "extrudePts",
        "steps",
        "extrudePts",
        "steps",
        "z",
        "buildLidFaces",
        "buildSideFaces",
        "bevelEnabled",
        "vlen",
        "layer",
        "i",
        "i",
        "flen",
        "i",
        "face",
        "faces",
        "i",
        "f3",
        "face",
        "offset",
        "face",
        "offset",
        "face",
        "offset",
        "layer",
        "steps",
        "bevelSegments",
        "offset",
        "vlen",
        "layer",
        "i",
        "i",
        "flen",
        "i",
        "face",
        "faces",
        "i",
        "f3",
        "face",
        "offset",
        "face",
        "offset",
        "face",
        "offset",
        "i",
        "i",
        "flen",
        "i",
        "face",
        "faces",
        "i",
        "f3",
        "face",
        "face",
        "face",
        "i",
        "i",
        "flen",
        "i",
        "face",
        "faces",
        "i",
        "f3",
        "face",
        "vlen",
        "steps",
        "face",
        "vlen",
        "steps",
        "face",
        "vlen",
        "steps",
        "sidewalls",
        "contour",
        "layeroffset",
        "layeroffset",
        "contour",
        "h",
        "hl",
        "holes",
        "h",
        "hl",
        "h",
        "ahole",
        "holes",
        "h",
        "sidewalls",
        "ahole",
        "layeroffset",
        "layeroffset",
        "ahole",
        "contour",
        "layeroffset",
        "i",
        "contour",
        "i",
        "j",
        "i",
        "k",
        "i",
        "k",
        "k",
        "contour",
        "steps",
        "bevelSegments",
        "s",
        "s",
        "sl",
        "s",
        "vlen",
        "s",
        "vlen",
        "s",
        "layeroffset",
        "j",
        "slen1",
        "layeroffset",
        "k",
        "slen1",
        "layeroffset",
        "k",
        "slen2",
        "layeroffset",
        "j",
        "slen2",
        "f4",
        "a",
        "b",
        "c",
        "d",
        "contour",
        "s",
        "sl",
        "j",
        "k",
        "x",
        "y",
        "z",
        "scope",
        "THREE",
        "x",
        "y",
        "z",
        "a",
        "b",
        "c",
        "a",
        "shapesOffset",
        "b",
        "shapesOffset",
        "c",
        "shapesOffset",
        "scope",
        "THREE",
        "a",
        "b",
        "c",
        "uvgen",
        "scope",
        "a",
        "b",
        "c",
        "scope",
        "uvs",
        "a",
        "b",
        "c",
        "d",
        "wallContour",
        "stepIndex",
        "stepsLength",
        "contourIndex1",
        "contourIndex2",
        "a",
        "shapesOffset",
        "b",
        "shapesOffset",
        "c",
        "shapesOffset",
        "d",
        "shapesOffset",
        "scope",
        "THREE",
        "a",
        "b",
        "d",
        "scope",
        "THREE",
        "b",
        "c",
        "d",
        "uvgen",
        "scope",
        "a",
        "b",
        "c",
        "d",
        "scope",
        "uvs",
        "uvs",
        "uvs",
        "scope",
        "uvs",
        "uvs",
        "uvs",
        "THREE",
        "geometry",
        "indexA",
        "indexB",
        "indexC",
        "geometry",
        "vertices",
        "indexA",
        "vertices",
        "indexB",
        "vertices",
        "indexC",
        "THREE",
        "a",
        "a",
        "THREE",
        "b",
        "b",
        "THREE",
        "c",
        "c",
        "geometry",
        "indexA",
        "indexB",
        "indexC",
        "indexD",
        "geometry",
        "vertices",
        "indexA",
        "vertices",
        "indexB",
        "vertices",
        "indexC",
        "vertices",
        "indexD",
        "a",
        "b",
        "THREE",
        "a",
        "a",
        "THREE",
        "b",
        "b",
        "THREE",
        "c",
        "c",
        "THREE",
        "d",
        "d",
        "THREE",
        "a",
        "a",
        "THREE",
        "b",
        "b",
        "THREE",
        "c",
        "c",
        "THREE",
        "d",
        "d",
        "THREE",
        "shapes",
        "options",
        "THREE",
        "shapes",
        "shapes",
        "shapes",
        "shapes",
        "options",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "shapes",
        "options",
        "shapes",
        "i",
        "l",
        "i",
        "shapes",
        "i",
        "options",
        "THREE",
        "shape",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "THREE",
        "options",
        "shape",
        "curveSegments",
        "shapePoints",
        "shapePoints",
        "THREE",
        "vertices",
        "reverse",
        "vertices",
        "vertices",
        "i",
        "l",
        "holes",
        "i",
        "l",
        "i",
        "hole",
        "holes",
        "i",
        "THREE",
        "hole",
        "holes",
        "i",
        "hole",
        "reverse",
        "THREE",
        "vertices",
        "holes",
        "i",
        "l",
        "holes",
        "i",
        "l",
        "i",
        "hole",
        "holes",
        "i",
        "vertices",
        "vertices",
        "hole",
        "vertices",
        "faces",
        "i",
        "i",
        "vlen",
        "i",
        "vert",
        "vertices",
        "i",
        "THREE",
        "vert",
        "vert",
        "i",
        "i",
        "flen",
        "i",
        "face",
        "faces",
        "i",
        "face",
        "shapesOffset",
        "face",
        "shapesOffset",
        "face",
        "shapesOffset",
        "THREE",
        "a",
        "b",
        "c",
        "material",
        "uvgen",
        "a",
        "b",
        "c",
        "THREE",
        "points",
        "segments",
        "phiStart",
        "phiLength",
        "THREE",
        "points",
        "segments",
        "phiStart",
        "phiLength",
        "segments",
        "segments",
        "phiStart",
        "phiStart",
        "phiLength",
        "phiLength",
        "points",
        "segments",
        "i",
        "il",
        "i",
        "phiStart",
        "i",
        "inverseSegments",
        "phiLength",
        "phi",
        "phi",
        "points",
        "j",
        "jl",
        "j",
        "points",
        "j",
        "THREE",
        "vertex",
        "point",
        "sin",
        "vertex",
        "point",
        "vertex",
        "point",
        "cos",
        "vertex",
        "points",
        "i",
        "il",
        "i",
        "points",
        "j",
        "jl",
        "j",
        "j",
        "np",
        "i",
        "np",
        "np",
        "i",
        "inverseSegments",
        "j",
        "inversePointLength",
        "u0",
        "inverseSegments",
        "v0",
        "inversePointLength",
        "THREE",
        "a",
        "b",
        "d",
        "THREE",
        "u0",
        "v0",
        "THREE",
        "u1",
        "v0",
        "THREE",
        "u0",
        "v1",
        "THREE",
        "b",
        "c",
        "d",
        "THREE",
        "u1",
        "v0",
        "THREE",
        "u1",
        "v1",
        "THREE",
        "u0",
        "v1",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "width",
        "height",
        "widthSegments",
        "heightSegments",
        "THREE",
        "width",
        "height",
        "widthSegments",
        "heightSegments",
        "THREE",
        "width",
        "height",
        "widthSegments",
        "heightSegments",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "width",
        "height",
        "widthSegments",
        "heightSegments",
        "THREE",
        "width",
        "height",
        "widthSegments",
        "heightSegments",
        "width",
        "height",
        "widthSegments",
        "heightSegments",
        "gridX",
        "gridY",
        "width",
        "gridX",
        "height",
        "gridY",
        "Float32Array",
        "gridX1",
        "gridY1",
        "Float32Array",
        "gridX1",
        "gridY1",
        "Float32Array",
        "gridX1",
        "gridY1",
        "iy",
        "gridY1",
        "iy",
        "iy",
        "segment_height",
        "height_half",
        "ix",
        "gridX1",
        "ix",
        "ix",
        "segment_width",
        "width_half",
        "vertices",
        "offset",
        "x",
        "vertices",
        "offset",
        "y",
        "normals",
        "offset",
        "uvs",
        "offset2",
        "ix",
        "gridX",
        "uvs",
        "offset2",
        "iy",
        "gridY",
        "offset",
        "offset2",
        "offset",
        "vertices",
        "Uint32Array",
        "Uint16Array",
        "gridX",
        "gridY",
        "iy",
        "gridY",
        "iy",
        "ix",
        "gridX",
        "ix",
        "ix",
        "gridX1",
        "iy",
        "ix",
        "gridX1",
        "iy",
        "ix",
        "gridX1",
        "iy",
        "ix",
        "gridX1",
        "iy",
        "indices",
        "offset",
        "a",
        "indices",
        "offset",
        "b",
        "indices",
        "offset",
        "d",
        "indices",
        "offset",
        "b",
        "indices",
        "offset",
        "c",
        "indices",
        "offset",
        "d",
        "offset",
        "THREE",
        "indices",
        "THREE",
        "vertices",
        "THREE",
        "normals",
        "THREE",
        "uvs",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "innerRadius",
        "outerRadius",
        "thetaSegments",
        "phiSegments",
        "thetaStart",
        "thetaLength",
        "THREE",
        "innerRadius",
        "outerRadius",
        "thetaSegments",
        "phiSegments",
        "thetaStart",
        "thetaLength",
        "innerRadius",
        "innerRadius",
        "outerRadius",
        "outerRadius",
        "thetaStart",
        "thetaStart",
        "thetaStart",
        "thetaLength",
        "thetaLength",
        "thetaLength",
        "thetaSegments",
        "thetaSegments",
        "thetaSegments",
        "phiSegments",
        "phiSegments",
        "phiSegments",
        "outerRadius",
        "innerRadius",
        "phiSegments",
        "i",
        "i",
        "phiSegments",
        "i",
        "o",
        "o",
        "thetaSegments",
        "o",
        "THREE",
        "thetaStart",
        "o",
        "thetaSegments",
        "thetaLength",
        "vertex",
        "radius",
        "segment",
        "vertex",
        "radius",
        "segment",
        "vertex",
        "uvs",
        "THREE",
        "vertex",
        "outerRadius",
        "vertex",
        "outerRadius",
        "radius",
        "radiusStep",
        "THREE",
        "i",
        "i",
        "phiSegments",
        "i",
        "i",
        "thetaSegments",
        "o",
        "o",
        "thetaSegments",
        "o",
        "o",
        "thetaSegment",
        "segment",
        "thetaSegments",
        "segment",
        "thetaSegments",
        "THREE",
        "v1",
        "v2",
        "v3",
        "n",
        "n",
        "n",
        "uvs",
        "v1",
        "uvs",
        "v2",
        "uvs",
        "v3",
        "v1",
        "segment",
        "v2",
        "segment",
        "thetaSegments",
        "v3",
        "segment",
        "THREE",
        "v1",
        "v2",
        "v3",
        "n",
        "n",
        "n",
        "uvs",
        "v1",
        "uvs",
        "v2",
        "uvs",
        "v3",
        "THREE",
        "THREE",
        "radius",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "radius",
        "widthSegments",
        "heightSegments",
        "phiStart",
        "phiLength",
        "thetaStart",
        "thetaLength",
        "THREE",
        "radius",
        "widthSegments",
        "heightSegments",
        "phiStart",
        "phiLength",
        "thetaStart",
        "thetaLength",
        "THREE",
        "radius",
        "widthSegments",
        "heightSegments",
        "phiStart",
        "phiLength",
        "thetaStart",
        "thetaLength",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "radius",
        "widthSegments",
        "heightSegments",
        "phiStart",
        "phiLength",
        "thetaStart",
        "thetaLength",
        "THREE",
        "radius",
        "widthSegments",
        "heightSegments",
        "phiStart",
        "phiLength",
        "thetaStart",
        "thetaLength",
        "radius",
        "radius",
        "widthSegments",
        "widthSegments",
        "heightSegments",
        "heightSegments",
        "phiStart",
        "phiStart",
        "phiStart",
        "phiLength",
        "phiLength",
        "phiLength",
        "thetaStart",
        "thetaStart",
        "thetaStart",
        "thetaLength",
        "thetaLength",
        "thetaLength",
        "thetaStart",
        "thetaLength",
        "widthSegments",
        "heightSegments",
        "THREE",
        "Float32Array",
        "vertexCount",
        "THREE",
        "Float32Array",
        "vertexCount",
        "THREE",
        "Float32Array",
        "vertexCount",
        "THREE",
        "y",
        "heightSegments",
        "y",
        "y",
        "heightSegments",
        "x",
        "widthSegments",
        "x",
        "x",
        "widthSegments",
        "radius",
        "phiStart",
        "u",
        "phiLength",
        "thetaStart",
        "v",
        "thetaLength",
        "radius",
        "thetaStart",
        "v",
        "thetaLength",
        "radius",
        "phiStart",
        "u",
        "phiLength",
        "thetaStart",
        "v",
        "thetaLength",
        "normal",
        "px",
        "py",
        "pz",
        "positions",
        "index",
        "px",
        "py",
        "pz",
        "normals",
        "index",
        "normal",
        "normal",
        "normal",
        "uvs",
        "index",
        "u",
        "v",
        "verticesRow",
        "index",
        "index",
        "vertices",
        "verticesRow",
        "y",
        "heightSegments",
        "y",
        "x",
        "widthSegments",
        "x",
        "vertices",
        "y",
        "x",
        "vertices",
        "y",
        "x",
        "vertices",
        "y",
        "x",
        "vertices",
        "y",
        "x",
        "y",
        "thetaStart",
        "indices",
        "v1",
        "v2",
        "v4",
        "y",
        "heightSegments",
        "thetaEnd",
        "indices",
        "v2",
        "v3",
        "v4",
        "positions",
        "THREE",
        "THREE",
        "indices",
        "positions",
        "normals",
        "uvs",
        "THREE",
        "THREE",
        "radius",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "text",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "font",
        "THREE",
        "THREE",
        "font",
        "text",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "THREE",
        "shapes",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "radius",
        "tube",
        "radialSegments",
        "tubularSegments",
        "arc",
        "THREE",
        "radius",
        "tube",
        "radialSegments",
        "tubularSegments",
        "arc",
        "radius",
        "radius",
        "tube",
        "tube",
        "radialSegments",
        "radialSegments",
        "tubularSegments",
        "tubularSegments",
        "arc",
        "arc",
        "THREE",
        "j",
        "radialSegments",
        "j",
        "i",
        "tubularSegments",
        "i",
        "i",
        "tubularSegments",
        "arc",
        "j",
        "radialSegments",
        "center",
        "radius",
        "u",
        "center",
        "radius",
        "u",
        "THREE",
        "vertex",
        "radius",
        "tube",
        "v",
        "u",
        "vertex",
        "radius",
        "tube",
        "v",
        "u",
        "vertex",
        "tube",
        "v",
        "vertex",
        "uvs",
        "THREE",
        "i",
        "tubularSegments",
        "j",
        "radialSegments",
        "normals",
        "vertex",
        "center",
        "j",
        "radialSegments",
        "j",
        "i",
        "tubularSegments",
        "i",
        "tubularSegments",
        "j",
        "i",
        "tubularSegments",
        "j",
        "i",
        "tubularSegments",
        "j",
        "i",
        "tubularSegments",
        "j",
        "i",
        "THREE",
        "a",
        "b",
        "d",
        "normals",
        "a",
        "normals",
        "b",
        "normals",
        "d",
        "face",
        "uvs",
        "a",
        "uvs",
        "b",
        "uvs",
        "d",
        "face",
        "THREE",
        "b",
        "c",
        "d",
        "normals",
        "b",
        "normals",
        "c",
        "normals",
        "d",
        "face",
        "uvs",
        "b",
        "uvs",
        "c",
        "uvs",
        "d",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "radius",
        "tube",
        "radialSegments",
        "tubularSegments",
        "p",
        "q",
        "heightScale",
        "THREE",
        "radius",
        "tube",
        "radialSegments",
        "tubularSegments",
        "p",
        "q",
        "heightScale",
        "radius",
        "radius",
        "tube",
        "tube",
        "radialSegments",
        "radialSegments",
        "tubularSegments",
        "tubularSegments",
        "p",
        "p",
        "q",
        "q",
        "heightScale",
        "heightScale",
        "radialSegments",
        "THREE",
        "THREE",
        "THREE",
        "i",
        "radialSegments",
        "i",
        "grid",
        "i",
        "tubularSegments",
        "i",
        "radialSegments",
        "p",
        "getPos",
        "u",
        "q",
        "p",
        "radius",
        "heightScale",
        "getPos",
        "u",
        "q",
        "p",
        "radius",
        "heightScale",
        "tang",
        "p2",
        "p1",
        "n",
        "p2",
        "p1",
        "bitan",
        "tang",
        "n",
        "n",
        "bitan",
        "tang",
        "bitan",
        "n",
        "j",
        "tubularSegments",
        "j",
        "j",
        "tubularSegments",
        "tube",
        "v",
        "tube",
        "v",
        "THREE",
        "pos",
        "p1",
        "cx",
        "n",
        "cy",
        "bitan",
        "pos",
        "p1",
        "cx",
        "n",
        "cy",
        "bitan",
        "pos",
        "p1",
        "cx",
        "n",
        "cy",
        "bitan",
        "grid",
        "i",
        "j",
        "pos",
        "i",
        "radialSegments",
        "i",
        "j",
        "tubularSegments",
        "j",
        "i",
        "radialSegments",
        "j",
        "tubularSegments",
        "grid",
        "i",
        "j",
        "grid",
        "ip",
        "j",
        "grid",
        "ip",
        "jp",
        "grid",
        "i",
        "jp",
        "THREE",
        "i",
        "radialSegments",
        "j",
        "tubularSegments",
        "THREE",
        "i",
        "radialSegments",
        "j",
        "tubularSegments",
        "THREE",
        "i",
        "radialSegments",
        "j",
        "tubularSegments",
        "THREE",
        "i",
        "radialSegments",
        "j",
        "tubularSegments",
        "THREE",
        "a",
        "b",
        "d",
        "uva",
        "uvb",
        "uvd",
        "THREE",
        "b",
        "c",
        "d",
        "uvb",
        "uvc",
        "uvd",
        "u",
        "in_q",
        "in_p",
        "radius",
        "heightScale",
        "u",
        "u",
        "in_q",
        "in_p",
        "u",
        "quOverP",
        "radius",
        "cs",
        "cu",
        "radius",
        "cs",
        "su",
        "heightScale",
        "radius",
        "quOverP",
        "THREE",
        "tx",
        "ty",
        "tz",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "path",
        "segments",
        "radius",
        "radialSegments",
        "closed",
        "taper",
        "THREE",
        "path",
        "segments",
        "radius",
        "radialSegments",
        "closed",
        "taper",
        "segments",
        "segments",
        "radius",
        "radius",
        "radialSegments",
        "radialSegments",
        "closed",
        "closed",
        "taper",
        "taper",
        "THREE",
        "segments",
        "THREE",
        "THREE",
        "path",
        "segments",
        "closed",
        "frames",
        "frames",
        "frames",
        "tangents",
        "normals",
        "binormals",
        "x",
        "y",
        "z",
        "scope",
        "THREE",
        "x",
        "y",
        "z",
        "i",
        "i",
        "numpoints",
        "i",
        "grid",
        "i",
        "u",
        "i",
        "numpoints",
        "pos",
        "path",
        "u",
        "tangent",
        "tangents",
        "i",
        "normal",
        "normals",
        "i",
        "binormal",
        "binormals",
        "i",
        "r",
        "radius",
        "taper",
        "u",
        "j",
        "j",
        "radialSegments",
        "j",
        "v",
        "j",
        "radialSegments",
        "cx",
        "r",
        "v",
        "cy",
        "r",
        "v",
        "pos2",
        "pos",
        "pos2",
        "cx",
        "normal",
        "cy",
        "binormal",
        "pos2",
        "cx",
        "normal",
        "cy",
        "binormal",
        "pos2",
        "cx",
        "normal",
        "cy",
        "binormal",
        "grid",
        "i",
        "j",
        "vert",
        "pos2",
        "pos2",
        "pos2",
        "i",
        "i",
        "segments",
        "i",
        "j",
        "j",
        "radialSegments",
        "j",
        "ip",
        "closed",
        "i",
        "segments",
        "i",
        "jp",
        "j",
        "radialSegments",
        "a",
        "grid",
        "i",
        "j",
        "b",
        "grid",
        "ip",
        "j",
        "c",
        "grid",
        "ip",
        "jp",
        "d",
        "grid",
        "i",
        "jp",
        "uva",
        "THREE",
        "i",
        "segments",
        "j",
        "radialSegments",
        "uvb",
        "THREE",
        "i",
        "segments",
        "j",
        "radialSegments",
        "uvc",
        "THREE",
        "i",
        "segments",
        "j",
        "radialSegments",
        "uvd",
        "THREE",
        "i",
        "segments",
        "j",
        "radialSegments",
        "THREE",
        "a",
        "b",
        "d",
        "uva",
        "uvb",
        "uvd",
        "THREE",
        "b",
        "c",
        "d",
        "uvb",
        "uvc",
        "uvd",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "u",
        "THREE",
        "u",
        "u",
        "THREE",
        "path",
        "segments",
        "closed",
        "THREE",
        "THREE",
        "THREE",
        "segments",
        "tangents",
        "normals",
        "binormals",
        "i",
        "i",
        "numpoints",
        "i",
        "u",
        "i",
        "numpoints",
        "tangents",
        "i",
        "path",
        "u",
        "tangents",
        "i",
        "initialNormal3",
        "normals",
        "THREE",
        "binormals",
        "THREE",
        "smallest",
        "tx",
        "tangents",
        "ty",
        "tangents",
        "tz",
        "tangents",
        "tx",
        "smallest",
        "smallest",
        "tx",
        "normal",
        "ty",
        "smallest",
        "smallest",
        "ty",
        "normal",
        "tz",
        "smallest",
        "normal",
        "vec",
        "tangents",
        "normal",
        "normals",
        "tangents",
        "vec",
        "binormals",
        "tangents",
        "normals",
        "i",
        "i",
        "numpoints",
        "i",
        "normals",
        "i",
        "normals",
        "i",
        "binormals",
        "i",
        "binormals",
        "i",
        "vec",
        "tangents",
        "i",
        "tangents",
        "i",
        "vec",
        "vec",
        "theta",
        "THREE",
        "tangents",
        "i",
        "tangents",
        "i",
        "normals",
        "i",
        "mat",
        "vec",
        "theta",
        "binormals",
        "i",
        "tangents",
        "i",
        "normals",
        "i",
        "closed",
        "theta",
        "THREE",
        "normals",
        "normals",
        "numpoints",
        "theta",
        "numpoints",
        "tangents",
        "vec",
        "normals",
        "normals",
        "numpoints",
        "theta",
        "theta",
        "i",
        "i",
        "numpoints",
        "i",
        "normals",
        "i",
        "mat",
        "tangents",
        "i",
        "theta",
        "i",
        "binormals",
        "i",
        "tangents",
        "i",
        "normals",
        "i",
        "THREE",
        "vertices",
        "indices",
        "radius",
        "detail",
        "THREE",
        "vertices",
        "indices",
        "radius",
        "detail",
        "radius",
        "radius",
        "detail",
        "detail",
        "vertices",
        "i",
        "l",
        "i",
        "prepare",
        "THREE",
        "vertices",
        "i",
        "vertices",
        "i",
        "vertices",
        "i",
        "indices",
        "i",
        "l",
        "i",
        "j",
        "p",
        "indices",
        "i",
        "p",
        "indices",
        "i",
        "p",
        "indices",
        "i",
        "faces",
        "j",
        "THREE",
        "v1",
        "v2",
        "v3",
        "v1",
        "v2",
        "v3",
        "j",
        "THREE",
        "faces",
        "i",
        "l",
        "i",
        "subdivide",
        "faces",
        "i",
        "detail",
        "i",
        "l",
        "i",
        "i",
        "uvs",
        "uvs",
        "uvs",
        "x0",
        "x1",
        "x2",
        "x0",
        "x1",
        "x2",
        "max",
        "min",
        "x0",
        "uvs",
        "x1",
        "uvs",
        "x2",
        "uvs",
        "i",
        "l",
        "i",
        "i",
        "radius",
        "THREE",
        "THREE",
        "radius",
        "vector",
        "vector",
        "vertex",
        "that",
        "vertex",
        "azimuth",
        "vector",
        "inclination",
        "vector",
        "vertex",
        "THREE",
        "u",
        "v",
        "vertex",
        "v1",
        "v2",
        "v3",
        "materialIndex",
        "THREE",
        "v1",
        "v2",
        "v3",
        "v1",
        "v2",
        "v3",
        "materialIndex",
        "that",
        "face",
        "centroid",
        "v1",
        "v2",
        "v3",
        "azimuth",
        "centroid",
        "that",
        "correctUV",
        "v1",
        "v1",
        "azi",
        "correctUV",
        "v2",
        "v2",
        "azi",
        "correctUV",
        "v3",
        "v3",
        "azi",
        "face",
        "detail",
        "detail",
        "prepare",
        "that",
        "face",
        "prepare",
        "that",
        "face",
        "prepare",
        "that",
        "face",
        "face",
        "i",
        "cols",
        "i",
        "v",
        "i",
        "prepare",
        "a",
        "c",
        "i",
        "cols",
        "prepare",
        "b",
        "c",
        "i",
        "cols",
        "cols",
        "i",
        "j",
        "rows",
        "j",
        "j",
        "i",
        "cols",
        "v",
        "i",
        "j",
        "aj",
        "v",
        "i",
        "j",
        "prepare",
        "aj",
        "bj",
        "j",
        "rows",
        "i",
        "cols",
        "i",
        "j",
        "cols",
        "i",
        "j",
        "j",
        "j",
        "make",
        "v",
        "i",
        "k",
        "v",
        "i",
        "k",
        "v",
        "i",
        "k",
        "materialIndex",
        "make",
        "v",
        "i",
        "k",
        "v",
        "i",
        "k",
        "v",
        "i",
        "k",
        "materialIndex",
        "vector",
        "vector",
        "vector",
        "vector",
        "vector",
        "vector",
        "vector",
        "vector",
        "vector",
        "uv",
        "vector",
        "azimuth",
        "azimuth",
        "uv",
        "uv",
        "THREE",
        "uv",
        "uv",
        "vector",
        "vector",
        "uv",
        "THREE",
        "azimuth",
        "uv",
        "uv",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "radius",
        "detail",
        "t",
        "r",
        "t",
        "r",
        "t",
        "r",
        "t",
        "r",
        "t",
        "r",
        "t",
        "r",
        "t",
        "r",
        "t",
        "r",
        "t",
        "t",
        "r",
        "t",
        "r",
        "t",
        "r",
        "t",
        "r",
        "THREE",
        "vertices",
        "indices",
        "radius",
        "detail",
        "radius",
        "detail",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "radius",
        "detail",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "THREE",
        "vertices",
        "indices",
        "radius",
        "detail",
        "radius",
        "detail",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "radius",
        "detail",
        "THREE",
        "vertices",
        "indices",
        "radius",
        "detail",
        "radius",
        "detail",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "radius",
        "detail",
        "THREE",
        "vertices",
        "indices",
        "radius",
        "detail",
        "radius",
        "detail",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "func",
        "slices",
        "stacks",
        "THREE",
        "func",
        "slices",
        "stacks",
        "slices",
        "i",
        "i",
        "stacks",
        "i",
        "v",
        "i",
        "stacks",
        "j",
        "j",
        "slices",
        "j",
        "u",
        "j",
        "slices",
        "p",
        "func",
        "u",
        "v",
        "verts",
        "p",
        "i",
        "i",
        "stacks",
        "i",
        "j",
        "j",
        "slices",
        "j",
        "a",
        "i",
        "sliceCount",
        "j",
        "b",
        "i",
        "sliceCount",
        "j",
        "c",
        "i",
        "sliceCount",
        "j",
        "d",
        "i",
        "sliceCount",
        "j",
        "uva",
        "THREE",
        "j",
        "slices",
        "i",
        "stacks",
        "uvb",
        "THREE",
        "j",
        "slices",
        "i",
        "stacks",
        "uvc",
        "THREE",
        "j",
        "slices",
        "i",
        "stacks",
        "uvd",
        "THREE",
        "j",
        "slices",
        "i",
        "stacks",
        "faces",
        "THREE",
        "a",
        "b",
        "d",
        "uvs",
        "uva",
        "uvb",
        "uvd",
        "faces",
        "THREE",
        "b",
        "c",
        "d",
        "uvs",
        "uvb",
        "uvc",
        "uvd",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "geometry",
        "THREE",
        "a",
        "b",
        "a",
        "b",
        "geometry",
        "THREE",
        "geometry",
        "geometry",
        "Uint32Array",
        "faces",
        "faces",
        "i",
        "l",
        "i",
        "faces",
        "i",
        "j",
        "j",
        "edge",
        "face",
        "keys",
        "j",
        "edge",
        "face",
        "keys",
        "j",
        "edge",
        "sortFunction",
        "edge",
        "hash",
        "key",
        "edges",
        "numEdges",
        "edge",
        "edges",
        "numEdges",
        "edge",
        "hash",
        "key",
        "numEdges",
        "Float32Array",
        "numEdges",
        "i",
        "l",
        "i",
        "j",
        "j",
        "vertices",
        "edges",
        "i",
        "j",
        "i",
        "j",
        "coords",
        "index",
        "vertex",
        "coords",
        "index",
        "vertex",
        "coords",
        "index",
        "vertex",
        "THREE",
        "coords",
        "geometry",
        "THREE",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "groups",
        "geometry",
        "indices",
        "Uint32Array",
        "indices",
        "groups",
        "o",
        "ol",
        "o",
        "groups",
        "o",
        "group",
        "group",
        "start",
        "count",
        "i",
        "il",
        "i",
        "j",
        "j",
        "edge",
        "indices",
        "i",
        "j",
        "edge",
        "indices",
        "i",
        "j",
        "edge",
        "sortFunction",
        "edge",
        "hash",
        "key",
        "edges",
        "numEdges",
        "edge",
        "edges",
        "numEdges",
        "edge",
        "hash",
        "key",
        "numEdges",
        "Float32Array",
        "numEdges",
        "i",
        "l",
        "i",
        "j",
        "j",
        "i",
        "j",
        "edges",
        "i",
        "j",
        "coords",
        "index",
        "vertices",
        "index2",
        "coords",
        "index",
        "vertices",
        "index2",
        "coords",
        "index",
        "vertices",
        "index2",
        "THREE",
        "coords",
        "geometry",
        "vertices",
        "numEdges",
        "Float32Array",
        "numEdges",
        "i",
        "l",
        "i",
        "j",
        "j",
        "i",
        "j",
        "i",
        "j",
        "coords",
        "index",
        "vertices",
        "index1",
        "coords",
        "index",
        "vertices",
        "index1",
        "coords",
        "index",
        "vertices",
        "index1",
        "i",
        "j",
        "coords",
        "index",
        "vertices",
        "index2",
        "coords",
        "index",
        "vertices",
        "index2",
        "coords",
        "index",
        "vertices",
        "index2",
        "THREE",
        "coords",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "size",
        "size",
        "size",
        "Float32Array",
        "size",
        "size",
        "size",
        "Float32Array",
        "THREE",
        "geometry",
        "THREE",
        "vertices",
        "geometry",
        "THREE",
        "colors",
        "THREE",
        "THREE",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "lineGeometry",
        "THREE",
        "THREE",
        "THREE",
        "coneGeometry",
        "ArrowHelper",
        "dir",
        "origin",
        "length",
        "color",
        "headLength",
        "headWidth",
        "THREE",
        "color",
        "color",
        "length",
        "length",
        "headLength",
        "headLength",
        "length",
        "headWidth",
        "headWidth",
        "headLength",
        "origin",
        "THREE",
        "lineGeometry",
        "THREE",
        "color",
        "THREE",
        "coneGeometry",
        "THREE",
        "color",
        "dir",
        "length",
        "headLength",
        "headWidth",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "setDirection",
        "dir",
        "dir",
        "dir",
        "axis",
        "dir",
        "dir",
        "radians",
        "dir",
        "axis",
        "radians",
        "THREE",
        "length",
        "headLength",
        "headWidth",
        "headLength",
        "headLength",
        "length",
        "headWidth",
        "headWidth",
        "headLength",
        "length",
        "headLength",
        "headWidth",
        "headLength",
        "headWidth",
        "length",
        "THREE",
        "color",
        "color",
        "color",
        "THREE",
        "Uint16Array",
        "Float32Array",
        "THREE",
        "geometry",
        "THREE",
        "indices",
        "geometry",
        "THREE",
        "positions",
        "THREE",
        "geometry",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "box",
        "box",
        "box",
        "box",
        "position",
        "array",
        "max",
        "array",
        "max",
        "array",
        "max",
        "array",
        "min",
        "array",
        "max",
        "array",
        "max",
        "array",
        "min",
        "array",
        "min",
        "array",
        "max",
        "array",
        "max",
        "array",
        "min",
        "array",
        "max",
        "array",
        "max",
        "array",
        "max",
        "array",
        "min",
        "array",
        "min",
        "array",
        "max",
        "array",
        "min",
        "array",
        "min",
        "array",
        "min",
        "array",
        "min",
        "array",
        "max",
        "array",
        "min",
        "array",
        "min",
        "position",
        "THREE",
        "hex",
        "hex",
        "hex",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "color",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "camera",
        "THREE",
        "THREE",
        "THREE",
        "addLine",
        "hexFrustum",
        "addLine",
        "hexFrustum",
        "addLine",
        "hexFrustum",
        "addLine",
        "hexFrustum",
        "addLine",
        "hexFrustum",
        "addLine",
        "hexFrustum",
        "addLine",
        "hexFrustum",
        "addLine",
        "hexFrustum",
        "addLine",
        "hexFrustum",
        "addLine",
        "hexFrustum",
        "addLine",
        "hexFrustum",
        "addLine",
        "hexFrustum",
        "addLine",
        "hexCone",
        "addLine",
        "hexCone",
        "addLine",
        "hexCone",
        "addLine",
        "hexCone",
        "addLine",
        "hexUp",
        "addLine",
        "hexUp",
        "addLine",
        "hexUp",
        "addLine",
        "hexTarget",
        "addLine",
        "hexCross",
        "addLine",
        "hexCross",
        "addLine",
        "hexCross",
        "addLine",
        "hexCross",
        "addLine",
        "hexCross",
        "a",
        "b",
        "hex",
        "addPoint",
        "a",
        "hex",
        "addPoint",
        "b",
        "hex",
        "id",
        "hex",
        "geometry",
        "THREE",
        "geometry",
        "THREE",
        "hex",
        "pointMap",
        "id",
        "pointMap",
        "id",
        "pointMap",
        "id",
        "geometry",
        "THREE",
        "geometry",
        "material",
        "camera",
        "camera",
        "pointMap",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "point",
        "x",
        "y",
        "z",
        "vector",
        "x",
        "y",
        "z",
        "camera",
        "pointMap",
        "point",
        "points",
        "points",
        "i",
        "il",
        "i",
        "geometry",
        "points",
        "i",
        "vector",
        "geometry",
        "pointMap",
        "camera",
        "setPoint",
        "setPoint",
        "setPoint",
        "w",
        "h",
        "setPoint",
        "w",
        "h",
        "setPoint",
        "w",
        "h",
        "setPoint",
        "w",
        "h",
        "setPoint",
        "w",
        "h",
        "setPoint",
        "w",
        "h",
        "setPoint",
        "w",
        "h",
        "setPoint",
        "w",
        "h",
        "setPoint",
        "w",
        "h",
        "setPoint",
        "w",
        "h",
        "setPoint",
        "h",
        "setPoint",
        "w",
        "setPoint",
        "w",
        "setPoint",
        "h",
        "setPoint",
        "h",
        "setPoint",
        "w",
        "setPoint",
        "w",
        "setPoint",
        "h",
        "setPoint",
        "h",
        "geometry",
        "THREE",
        "light",
        "size",
        "THREE",
        "light",
        "light",
        "size",
        "size",
        "THREE",
        "geometry",
        "THREE",
        "size",
        "size",
        "THREE",
        "size",
        "size",
        "THREE",
        "size",
        "size",
        "THREE",
        "size",
        "size",
        "THREE",
        "size",
        "size",
        "THREE",
        "material",
        "THREE",
        "geometry",
        "material",
        "geometry",
        "THREE",
        "geometry",
        "THREE",
        "THREE",
        "material",
        "THREE",
        "material",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "v1",
        "v2",
        "v3",
        "v2",
        "v1",
        "v3",
        "v3",
        "THREE",
        "hex",
        "thresholdAngle",
        "hex",
        "hex",
        "THREE",
        "THREE",
        "thresholdAngle",
        "THREE",
        "color",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "size",
        "hex",
        "linewidth",
        "size",
        "size",
        "hex",
        "hex",
        "linewidth",
        "linewidth",
        "objGeometry",
        "THREE",
        "nNormals",
        "objGeometry",
        "THREE",
        "THREE",
        "nNormals",
        "geometry",
        "positions",
        "THREE",
        "geometry",
        "THREE",
        "color",
        "width",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "update",
        "normalMatrix",
        "objGeometry",
        "objGeometry",
        "faces",
        "i",
        "l",
        "i",
        "faces",
        "i",
        "face",
        "v1",
        "vertices",
        "face",
        "vertices",
        "face",
        "vertices",
        "face",
        "matrixWorld",
        "v2",
        "normal",
        "normalMatrix",
        "v1",
        "position",
        "idx",
        "v1",
        "v1",
        "v1",
        "idx",
        "idx",
        "position",
        "idx",
        "v2",
        "v2",
        "v2",
        "idx",
        "idx",
        "position",
        "THREE",
        "size",
        "step",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "size",
        "i",
        "size",
        "i",
        "step",
        "geometry",
        "THREE",
        "size",
        "i",
        "THREE",
        "size",
        "i",
        "THREE",
        "i",
        "size",
        "THREE",
        "i",
        "size",
        "i",
        "geometry",
        "color",
        "color",
        "color",
        "color",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "colorCenterLine",
        "colorGrid",
        "colorCenterLine",
        "colorGrid",
        "THREE",
        "light",
        "sphereSize",
        "THREE",
        "light",
        "light",
        "THREE",
        "THREE",
        "THREE",
        "sphereSize",
        "geometry",
        "i",
        "il",
        "i",
        "geometry",
        "i",
        "i",
        "THREE",
        "THREE",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "vector",
        "THREE",
        "light",
        "sphereSize",
        "light",
        "THREE",
        "sphereSize",
        "THREE",
        "material",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "i",
        "i",
        "i",
        "bone",
        "THREE",
        "geometry",
        "THREE",
        "geometry",
        "THREE",
        "geometry",
        "THREE",
        "geometry",
        "THREE",
        "geometry",
        "THREE",
        "THREE",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "boneList",
        "i",
        "i",
        "boneList",
        "boneList",
        "i",
        "boneList",
        "THREE",
        "THREE",
        "THREE",
        "i",
        "i",
        "i",
        "bone",
        "THREE",
        "boneMatrix",
        "matrixWorldInv",
        "bone",
        "geometry",
        "j",
        "boneMatrix",
        "boneMatrix",
        "matrixWorldInv",
        "bone",
        "geometry",
        "j",
        "boneMatrix",
        "j",
        "geometry",
        "geometry",
        "THREE",
        "light",
        "THREE",
        "light",
        "light",
        "THREE",
        "geometry",
        "geometry",
        "THREE",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "coneLength",
        "coneWidth",
        "coneWidth",
        "coneLength",
        "vector",
        "vector2",
        "vector2",
        "vector",
        "THREE",
        "size",
        "hex",
        "linewidth",
        "size",
        "size",
        "hex",
        "hex",
        "linewidth",
        "linewidth",
        "objGeometry",
        "THREE",
        "nNormals",
        "objGeometry",
        "objGeometry",
        "THREE",
        "nNormals",
        "objGeometry",
        "THREE",
        "THREE",
        "nNormals",
        "geometry",
        "positions",
        "THREE",
        "geometry",
        "THREE",
        "color",
        "width",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "update",
        "normalMatrix",
        "objGeometry",
        "THREE",
        "objGeometry",
        "objGeometry",
        "faces",
        "i",
        "l",
        "i",
        "faces",
        "i",
        "face",
        "j",
        "jl",
        "j",
        "vertices",
        "face",
        "keys",
        "j",
        "face",
        "j",
        "v1",
        "vertex",
        "matrixWorld",
        "v2",
        "normal",
        "normalMatrix",
        "v1",
        "position",
        "idx",
        "v1",
        "v1",
        "v1",
        "idx",
        "idx",
        "position",
        "idx",
        "v2",
        "v2",
        "v2",
        "idx",
        "idx",
        "objGeometry",
        "THREE",
        "objGeometry",
        "objGeometry",
        "objPos",
        "j",
        "jl",
        "j",
        "v1",
        "objPos",
        "j",
        "objPos",
        "j",
        "objPos",
        "j",
        "matrixWorld",
        "v2",
        "objNorm",
        "j",
        "objNorm",
        "j",
        "objNorm",
        "j",
        "v2",
        "normalMatrix",
        "v1",
        "position",
        "idx",
        "v1",
        "v1",
        "v1",
        "idx",
        "idx",
        "position",
        "idx",
        "v2",
        "v2",
        "v2",
        "idx",
        "idx",
        "position",
        "THREE",
        "hex",
        "hex",
        "hex",
        "THREE",
        "THREE",
        "THREE",
        "color",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "material",
        "THREE",
        "material",
        "renderCallback",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "geometry",
        "material",
        "numFrames",
        "numFrames",
        "name",
        "startFrame",
        "endFrame",
        "fps",
        "name",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "name",
        "start",
        "end",
        "fps",
        "start",
        "end",
        "end",
        "start",
        "fps",
        "end",
        "start",
        "fps",
        "name",
        "animation",
        "animation",
        "THREE",
        "fps",
        "geometry",
        "i",
        "il",
        "i",
        "geometry",
        "i",
        "morph",
        "pattern",
        "chunks",
        "chunks",
        "chunks",
        "frameRanges",
        "name",
        "frameRanges",
        "name",
        "Infinity",
        "Infinity",
        "frameRanges",
        "name",
        "i",
        "i",
        "i",
        "i",
        "firstAnimation",
        "firstAnimation",
        "name",
        "name",
        "frameRanges",
        "frameRanges",
        "name",
        "name",
        "fps",
        "firstAnimation",
        "THREE",
        "name",
        "name",
        "animation",
        "animation",
        "animation",
        "THREE",
        "name",
        "name",
        "animation",
        "animation",
        "animation",
        "THREE",
        "name",
        "fps",
        "name",
        "animation",
        "animation",
        "fps",
        "animation",
        "animation",
        "animation",
        "animation",
        "THREE",
        "name",
        "duration",
        "name",
        "animation",
        "animation",
        "duration",
        "animation",
        "animation",
        "animation",
        "animation",
        "THREE",
        "name",
        "weight",
        "name",
        "animation",
        "animation",
        "weight",
        "THREE",
        "name",
        "time",
        "name",
        "animation",
        "animation",
        "time",
        "THREE",
        "name",
        "name",
        "animation",
        "time",
        "animation",
        "time",
        "THREE",
        "name",
        "name",
        "animation",
        "duration",
        "animation",
        "duration",
        "THREE",
        "name",
        "name",
        "animation",
        "animation",
        "animation",
        "name",
        "THREE",
        "name",
        "name",
        "animation",
        "animation",
        "THREE",
        "delta",
        "i",
        "il",
        "i",
        "i",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "delta",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "THREE",
        "animation",
        "frameTime",
        "animation",
        "animation",
        "keyframe",
        "animation",
        "animation",
        "animation",
        "weight",
        "keyframe",
        "animation",
        "animation",
        "animation",
        "keyframe",
        "animation",
        "frameTime",
        "frameTime",
        "animation",
        "mix",
        "mix",
        "animation",
        "animation",
        "animation",
        "mix",
        "weight",
        "animation",
        "mix",
        "weight",
        "animation",
        "weight",
        "exports",
        "exports",
        "THREE",
        "exports",
        "THREE",
        "THREE",
        "_dereq_",
        "exports",
        "root",
        "root",
        "root",
        "root",
        "root",
        "root",
        "performance",
        "root",
        "offset",
        "TWEEN",
        "_tweens",
        "_tweens",
        "tween",
        "_tweens",
        "tween",
        "tween",
        "_tweens",
        "tween",
        "i",
        "_tweens",
        "i",
        "time",
        "_tweens",
        "time",
        "time",
        "time",
        "i",
        "_tweens",
        "_tweens",
        "i",
        "time",
        "i",
        "_tweens",
        "i",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "field",
        "_valuesStart",
        "field",
        "parseFloat",
        "field",
        "properties",
        "duration",
        "duration",
        "_duration",
        "duration",
        "_valuesEnd",
        "properties",
        "time",
        "TWEEN",
        "_isPlaying",
        "_onStartCallbackFired",
        "_startTime",
        "time",
        "time",
        "_startTime",
        "_delayTime",
        "property",
        "_valuesEnd",
        "_valuesEnd",
        "property",
        "_valuesEnd",
        "property",
        "_valuesEnd",
        "property",
        "_object",
        "property",
        "_valuesEnd",
        "property",
        "_valuesStart",
        "property",
        "_object",
        "property",
        "_valuesStart",
        "property",
        "_valuesStart",
        "property",
        "_valuesStartRepeat",
        "property",
        "_valuesStart",
        "property",
        "_isPlaying",
        "TWEEN",
        "_isPlaying",
        "_onStopCallback",
        "_onStopCallback",
        "_object",
        "_chainedTweens",
        "i",
        "numChainedTweens",
        "i",
        "_chainedTweens",
        "i",
        "amount",
        "_delayTime",
        "amount",
        "times",
        "_repeat",
        "times",
        "yoyo",
        "_yoyo",
        "yoyo",
        "easing",
        "_easingFunction",
        "easing",
        "interpolation",
        "_interpolationFunction",
        "interpolation",
        "_chainedTweens",
        "arguments",
        "callback",
        "_onStartCallback",
        "callback",
        "callback",
        "_onUpdateCallback",
        "callback",
        "callback",
        "_onCompleteCallback",
        "callback",
        "callback",
        "_onStopCallback",
        "callback",
        "time",
        "time",
        "_startTime",
        "_onStartCallbackFired",
        "_onStartCallback",
        "_onStartCallback",
        "_object",
        "_onStartCallbackFired",
        "time",
        "_startTime",
        "_duration",
        "elapsed",
        "elapsed",
        "elapsed",
        "_easingFunction",
        "elapsed",
        "property",
        "_valuesEnd",
        "_valuesStart",
        "property",
        "_valuesEnd",
        "property",
        "end",
        "_object",
        "property",
        "_interpolationFunction",
        "end",
        "value",
        "end",
        "end",
        "start",
        "parseFloat",
        "end",
        "end",
        "_object",
        "property",
        "start",
        "end",
        "start",
        "value",
        "_onUpdateCallback",
        "_onUpdateCallback",
        "_object",
        "value",
        "elapsed",
        "_repeat",
        "isFinite",
        "_repeat",
        "_repeat",
        "property",
        "_valuesStartRepeat",
        "_valuesEnd",
        "property",
        "_valuesStartRepeat",
        "property",
        "_valuesStartRepeat",
        "property",
        "parseFloat",
        "_valuesEnd",
        "property",
        "_yoyo",
        "_valuesStartRepeat",
        "property",
        "_valuesStartRepeat",
        "property",
        "_valuesEnd",
        "property",
        "_valuesEnd",
        "property",
        "tmp",
        "_valuesStart",
        "property",
        "_valuesStartRepeat",
        "property",
        "_yoyo",
        "_reversed",
        "_reversed",
        "_startTime",
        "time",
        "_delayTime",
        "_onCompleteCallback",
        "_onCompleteCallback",
        "_object",
        "_chainedTweens",
        "i",
        "numChainedTweens",
        "i",
        "_chainedTweens",
        "i",
        "time",
        "TWEEN",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "a",
        "a",
        "a",
        "s",
        "p",
        "s",
        "p",
        "a",
        "a",
        "k",
        "k",
        "s",
        "p",
        "k",
        "k",
        "k",
        "a",
        "a",
        "a",
        "s",
        "p",
        "s",
        "p",
        "a",
        "a",
        "k",
        "k",
        "s",
        "p",
        "k",
        "k",
        "k",
        "a",
        "a",
        "a",
        "s",
        "p",
        "s",
        "p",
        "a",
        "k",
        "a",
        "k",
        "k",
        "s",
        "p",
        "a",
        "k",
        "k",
        "s",
        "p",
        "k",
        "k",
        "k",
        "s",
        "k",
        "s",
        "k",
        "k",
        "k",
        "s",
        "k",
        "s",
        "k",
        "k",
        "k",
        "k",
        "s",
        "k",
        "s",
        "k",
        "k",
        "s",
        "k",
        "s",
        "k",
        "TWEEN",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "TWEEN",
        "k",
        "TWEEN",
        "k",
        "TWEEN",
        "v",
        "k",
        "v",
        "m",
        "k",
        "f",
        "TWEEN",
        "k",
        "fn",
        "v",
        "v",
        "f",
        "k",
        "fn",
        "v",
        "m",
        "v",
        "m",
        "m",
        "f",
        "fn",
        "v",
        "i",
        "v",
        "i",
        "m",
        "m",
        "i",
        "f",
        "i",
        "v",
        "k",
        "v",
        "TWEEN",
        "i",
        "i",
        "n",
        "i",
        "b",
        "pw",
        "k",
        "n",
        "i",
        "pw",
        "k",
        "i",
        "v",
        "i",
        "bn",
        "n",
        "i",
        "b",
        "v",
        "k",
        "v",
        "m",
        "k",
        "f",
        "TWEEN",
        "v",
        "v",
        "m",
        "k",
        "i",
        "f",
        "m",
        "k",
        "fn",
        "v",
        "i",
        "m",
        "m",
        "v",
        "i",
        "v",
        "i",
        "m",
        "v",
        "i",
        "m",
        "f",
        "i",
        "k",
        "v",
        "fn",
        "v",
        "v",
        "v",
        "v",
        "f",
        "v",
        "k",
        "v",
        "m",
        "fn",
        "v",
        "m",
        "v",
        "m",
        "v",
        "m",
        "v",
        "m",
        "f",
        "m",
        "v",
        "m",
        "fn",
        "v",
        "i",
        "i",
        "v",
        "i",
        "v",
        "m",
        "i",
        "m",
        "i",
        "v",
        "m",
        "i",
        "m",
        "i",
        "f",
        "i",
        "p0",
        "p1",
        "t",
        "p1",
        "p0",
        "t",
        "p0",
        "n",
        "i",
        "TWEEN",
        "fc",
        "n",
        "fc",
        "i",
        "fc",
        "n",
        "i",
        "n",
        "a",
        "n",
        "a",
        "n",
        "i",
        "n",
        "i",
        "i",
        "s",
        "i",
        "a",
        "n",
        "s",
        "p0",
        "p1",
        "p2",
        "p3",
        "t",
        "p2",
        "p0",
        "p3",
        "p1",
        "t",
        "t",
        "t",
        "t2",
        "p1",
        "p2",
        "v0",
        "v1",
        "t3",
        "p1",
        "p2",
        "v0",
        "v1",
        "t2",
        "v0",
        "t",
        "p1",
        "root",
        "define",
        "define",
        "define",
        "TWEEN",
        "exports",
        "TWEEN",
        "root",
        "TWEEN",
        "_dereq_",
        "exports",
        "e",
        "t",
        "n",
        "r",
        "o",
        "u",
        "n",
        "o",
        "t",
        "o",
        "_dereq_",
        "_dereq_",
        "u",
        "a",
        "a",
        "o",
        "i",
        "i",
        "o",
        "o",
        "f",
        "f",
        "n",
        "o",
        "t",
        "o",
        "l",
        "e",
        "t",
        "o",
        "e",
        "s",
        "n",
        "n",
        "e",
        "l",
        "l",
        "e",
        "t",
        "n",
        "r",
        "n",
        "o",
        "_dereq_",
        "_dereq_",
        "o",
        "r",
        "o",
        "s",
        "r",
        "o",
        "s",
        "_dereq_",
        "exports",
        "HMDVRDevice",
        "VRDevice",
        "PositionSensorVRDevice",
        "VRDevice",
        "VRDevice",
        "HMDVRDevice",
        "PositionSensorVRDevice",
        "_dereq_",
        "exports",
        "_dereq_",
        "DEFAULT_MAX_FOV_TOP",
        "DEFAULT_MAX_FOV_BOTTOM",
        "DEFAULT_MAX_FOV_LEFT_RIGHT",
        "DEFAULT_MAX_FOV_LEFT_RIGHT",
        "INTERPUPILLARY_DISTANCE",
        "INTERPUPILLARY_DISTANCE",
        "CardboardHMDVRDevice",
        "HMDVRDevice",
        "CardboardHMDVRDevice",
        "whichEye",
        "whichEye",
        "eyeTranslation",
        "whichEye",
        "eyeTranslation",
        "whichEye",
        "eyeTranslation",
        "CardboardHMDVRDevice",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "kFilter",
        "kFilter",
        "SensorSample",
        "SensorSample",
        "SensorSample",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "ComplementaryFilter",
        "vector",
        "timestampS",
        "vector",
        "timestampS",
        "ComplementaryFilter",
        "vector",
        "timestampS",
        "vector",
        "timestampS",
        "timestampS",
        "Util",
        "deltaT",
        "ComplementaryFilter",
        "deltaT",
        "gyroDeltaQ",
        "gyroDeltaQ",
        "THREE",
        "invFilterQ",
        "invFilterQ",
        "invFilterQ",
        "THREE",
        "deltaQ",
        "deltaQ",
        "DEBUG",
        "THREE",
        "Util",
        "deltaQ",
        "THREE",
        "targetQ",
        "targetQ",
        "deltaQ",
        "targetQ",
        "ComplementaryFilter",
        "ComplementaryFilter",
        "accel",
        "THREE",
        "normAccel",
        "accel",
        "normAccel",
        "THREE",
        "quat",
        "THREE",
        "normAccel",
        "quat",
        "quat",
        "ComplementaryFilter",
        "gyro",
        "dt",
        "THREE",
        "THREE",
        "axis",
        "gyro",
        "axis",
        "quat",
        "axis",
        "gyro",
        "dt",
        "quat",
        "ComplementaryFilter",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "THREE",
        "THREE",
        "ComplementaryFilter",
        "WebVRConfig",
        "PosePredictor",
        "WebVRConfig",
        "TouchPanner",
        "THREE",
        "Util",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "Util",
        "Util",
        "FusionPositionSensorVRDevice",
        "PositionSensorVRDevice",
        "FusionPositionSensorVRDevice",
        "FusionPositionSensorVRDevice",
        "orientation",
        "THREE",
        "WebVRConfig",
        "WebVRConfig",
        "FusionPositionSensorVRDevice",
        "THREE",
        "euler",
        "euler",
        "yaw",
        "THREE",
        "yaw",
        "WebVRConfig",
        "FusionPositionSensorVRDevice",
        "deviceMotion",
        "deviceMotion",
        "deviceMotion",
        "deviceMotion",
        "timestampS",
        "timestampS",
        "deltaS",
        "Util",
        "deltaS",
        "Util",
        "timestampS",
        "accGravity",
        "accGravity",
        "accGravity",
        "rotRate",
        "rotRate",
        "rotRate",
        "timestampS",
        "timestampS",
        "timestampS",
        "FusionPositionSensorVRDevice",
        "screenOrientation",
        "FusionPositionSensorVRDevice",
        "THREE",
        "THREE",
        "FusionPositionSensorVRDevice",
        "_dereq_",
        "exports",
        "_dereq_",
        "WebVRPolyfill",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "MouseKeyboardPositionSensorVRDevice",
        "PositionSensorVRDevice",
        "MouseKeyboardPositionSensorVRDevice",
        "MouseKeyboardPositionSensorVRDevice",
        "e",
        "e",
        "KEY_SPEED",
        "e",
        "KEY_SPEED",
        "e",
        "KEY_SPEED",
        "e",
        "KEY_SPEED",
        "MouseKeyboardPositionSensorVRDevice",
        "targetAngle",
        "targetAngle",
        "MouseKeyboardPositionSensorVRDevice",
        "targetAngle",
        "targetAngle",
        "Util",
        "targetAngle",
        "targetAngle",
        "MouseKeyboardPositionSensorVRDevice",
        "angleName",
        "targetAngle",
        "clearInterval",
        "angleName",
        "setInterval",
        "startTime",
        "elapsed",
        "KEY_ANIMATION_DURATION",
        "angleName",
        "targetAngle",
        "clearInterval",
        "elapsed",
        "KEY_ANIMATION_DURATION",
        "angleName",
        "startAngle",
        "targetAngle",
        "startAngle",
        "percent",
        "MouseKeyboardPositionSensorVRDevice",
        "e",
        "e",
        "e",
        "MouseKeyboardPositionSensorVRDevice",
        "e",
        "e",
        "e",
        "e",
        "e",
        "movementX",
        "movementY",
        "e",
        "e",
        "element",
        "MOUSE_SPEED_Y",
        "element",
        "MOUSE_SPEED_X",
        "Util",
        "MouseKeyboardPositionSensorVRDevice",
        "e",
        "MouseKeyboardPositionSensorVRDevice",
        "el",
        "MouseKeyboardPositionSensorVRDevice",
        "MouseKeyboardPositionSensorVRDevice",
        "_dereq_",
        "exports",
        "_dereq_",
        "predictionTimeS",
        "predictionTimeS",
        "THREE",
        "THREE",
        "THREE",
        "PosePredictor",
        "currentQ",
        "gyro",
        "timestampS",
        "currentQ",
        "timestampS",
        "currentQ",
        "THREE",
        "axis",
        "gyro",
        "axis",
        "gyro",
        "angularSpeed",
        "THREE",
        "DEBUG",
        "THREE",
        "angularSpeed",
        "currentQ",
        "currentQ",
        "timestampS",
        "angularSpeed",
        "axis",
        "predictAngle",
        "currentQ",
        "PosePredictor",
        "_dereq_",
        "exports",
        "sample",
        "timestampS",
        "sample",
        "timestampS",
        "SensorSample",
        "sample",
        "timestampS",
        "sample",
        "timestampS",
        "SensorSample",
        "sensorSample",
        "sensorSample",
        "sensorSample",
        "SensorSample",
        "_dereq_",
        "exports",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "x",
        "y",
        "z",
        "w",
        "x",
        "y",
        "z",
        "w",
        "w",
        "THREE",
        "THREE",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "x",
        "y",
        "z",
        "w",
        "x",
        "y",
        "z",
        "w",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "euler",
        "update",
        "euler",
        "THREE",
        "euler",
        "euler",
        "euler",
        "euler",
        "euler",
        "euler",
        "euler",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "euler",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "euler",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "euler",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "euler",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "euler",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "update",
        "axis",
        "angle",
        "angle",
        "halfAngle",
        "axis",
        "s",
        "axis",
        "s",
        "axis",
        "s",
        "halfAngle",
        "m",
        "m",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "m11",
        "m22",
        "m33",
        "trace",
        "s",
        "trace",
        "s",
        "m32",
        "m23",
        "s",
        "m13",
        "m31",
        "s",
        "m21",
        "m12",
        "s",
        "m11",
        "m22",
        "m11",
        "m33",
        "s",
        "m11",
        "m22",
        "m33",
        "m32",
        "m23",
        "s",
        "s",
        "m12",
        "m21",
        "s",
        "m13",
        "m31",
        "s",
        "m22",
        "m33",
        "s",
        "m22",
        "m11",
        "m33",
        "m13",
        "m31",
        "s",
        "m12",
        "m21",
        "s",
        "s",
        "m23",
        "m32",
        "s",
        "s",
        "m33",
        "m11",
        "m22",
        "m21",
        "m12",
        "s",
        "m13",
        "m31",
        "s",
        "m23",
        "m32",
        "s",
        "s",
        "vFrom",
        "vTo",
        "v1",
        "v1",
        "THREE",
        "r",
        "vFrom",
        "vTo",
        "r",
        "EPS",
        "r",
        "vFrom",
        "vFrom",
        "v1",
        "vFrom",
        "vFrom",
        "v1",
        "vFrom",
        "vFrom",
        "v1",
        "vFrom",
        "vTo",
        "v1",
        "v1",
        "v1",
        "r",
        "v",
        "v",
        "v",
        "v",
        "v",
        "l",
        "l",
        "l",
        "l",
        "l",
        "l",
        "l",
        "q",
        "p",
        "p",
        "q",
        "p",
        "q",
        "a",
        "b",
        "a",
        "a",
        "a",
        "a",
        "b",
        "b",
        "b",
        "b",
        "qax",
        "qbw",
        "qaw",
        "qbx",
        "qay",
        "qbz",
        "qaz",
        "qby",
        "qay",
        "qbw",
        "qaw",
        "qby",
        "qaz",
        "qbx",
        "qax",
        "qbz",
        "qaz",
        "qbw",
        "qaw",
        "qbz",
        "qax",
        "qby",
        "qay",
        "qbx",
        "qaw",
        "qbw",
        "qax",
        "qbx",
        "qay",
        "qby",
        "qaz",
        "qbz",
        "vector",
        "vector",
        "qb",
        "t",
        "t",
        "t",
        "qb",
        "w",
        "qb",
        "x",
        "qb",
        "y",
        "qb",
        "z",
        "qb",
        "cosHalfTheta",
        "qb",
        "qb",
        "qb",
        "qb",
        "cosHalfTheta",
        "cosHalfTheta",
        "qb",
        "cosHalfTheta",
        "w",
        "x",
        "y",
        "z",
        "cosHalfTheta",
        "cosHalfTheta",
        "cosHalfTheta",
        "sinHalfTheta",
        "w",
        "x",
        "y",
        "z",
        "t",
        "halfTheta",
        "sinHalfTheta",
        "t",
        "halfTheta",
        "sinHalfTheta",
        "w",
        "ratioA",
        "ratioB",
        "x",
        "ratioA",
        "ratioB",
        "y",
        "ratioA",
        "ratioB",
        "z",
        "ratioA",
        "ratioB",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "array",
        "offset",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "array",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "callback",
        "callback",
        "THREE",
        "THREE",
        "qa",
        "qb",
        "qm",
        "t",
        "qm",
        "qa",
        "qb",
        "t",
        "THREE",
        "x",
        "y",
        "x",
        "y",
        "THREE",
        "THREE",
        "x",
        "y",
        "x",
        "y",
        "x",
        "x",
        "y",
        "y",
        "index",
        "value",
        "index",
        "value",
        "value",
        "index",
        "index",
        "index",
        "index",
        "v",
        "v",
        "v",
        "v",
        "w",
        "w",
        "v",
        "w",
        "v",
        "v",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "s",
        "s",
        "s",
        "v",
        "w",
        "w",
        "v",
        "w",
        "v",
        "v",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "v",
        "v",
        "v",
        "s",
        "s",
        "s",
        "v",
        "v",
        "v",
        "scalar",
        "scalar",
        "scalar",
        "invScalar",
        "invScalar",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "min",
        "max",
        "min",
        "min",
        "max",
        "max",
        "min",
        "min",
        "max",
        "max",
        "minVal",
        "maxVal",
        "min",
        "min",
        "THREE",
        "max",
        "THREE",
        "min",
        "minVal",
        "minVal",
        "max",
        "maxVal",
        "maxVal",
        "min",
        "max",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "dx",
        "dx",
        "dy",
        "dy",
        "l",
        "oldLength",
        "l",
        "oldLength",
        "l",
        "oldLength",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "v",
        "v",
        "array",
        "offset",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "array",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "attribute",
        "index",
        "offset",
        "offset",
        "offset",
        "index",
        "index",
        "attribute",
        "offset",
        "attribute",
        "index",
        "attribute",
        "index",
        "THREE",
        "THREE",
        "x",
        "y",
        "z",
        "x",
        "y",
        "z",
        "THREE",
        "THREE",
        "x",
        "y",
        "z",
        "x",
        "y",
        "z",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "index",
        "value",
        "index",
        "value",
        "value",
        "value",
        "index",
        "index",
        "index",
        "index",
        "v",
        "v",
        "v",
        "v",
        "v",
        "w",
        "w",
        "v",
        "w",
        "v",
        "v",
        "v",
        "s",
        "s",
        "s",
        "s",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "v",
        "w",
        "w",
        "v",
        "w",
        "v",
        "v",
        "v",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "v",
        "w",
        "w",
        "v",
        "w",
        "v",
        "v",
        "v",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "euler",
        "euler",
        "THREE",
        "quaternion",
        "quaternion",
        "THREE",
        "quaternion",
        "euler",
        "axis",
        "angle",
        "quaternion",
        "quaternion",
        "THREE",
        "quaternion",
        "axis",
        "angle",
        "m",
        "m",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "m",
        "m",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "m",
        "m",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "d",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "d",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "d",
        "q",
        "q",
        "q",
        "q",
        "q",
        "qw",
        "x",
        "qy",
        "z",
        "qz",
        "y",
        "qw",
        "y",
        "qz",
        "x",
        "qx",
        "z",
        "qw",
        "z",
        "qx",
        "y",
        "qy",
        "x",
        "qx",
        "x",
        "qy",
        "y",
        "qz",
        "z",
        "ix",
        "qw",
        "iw",
        "qx",
        "iy",
        "qz",
        "iz",
        "qy",
        "iy",
        "qw",
        "iw",
        "qy",
        "iz",
        "qx",
        "ix",
        "qz",
        "iz",
        "qw",
        "iw",
        "qz",
        "ix",
        "qy",
        "iy",
        "qx",
        "camera",
        "matrix",
        "matrix",
        "THREE",
        "matrix",
        "camera",
        "matrix",
        "camera",
        "matrix",
        "camera",
        "matrix",
        "matrix",
        "THREE",
        "matrix",
        "camera",
        "matrix",
        "camera",
        "matrix",
        "m",
        "m",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "v",
        "v",
        "v",
        "v",
        "scalar",
        "scalar",
        "scalar",
        "invScalar",
        "invScalar",
        "invScalar",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "min",
        "max",
        "min",
        "min",
        "max",
        "max",
        "min",
        "min",
        "max",
        "max",
        "min",
        "min",
        "max",
        "max",
        "minVal",
        "maxVal",
        "min",
        "min",
        "THREE",
        "max",
        "THREE",
        "min",
        "minVal",
        "minVal",
        "minVal",
        "max",
        "maxVal",
        "maxVal",
        "maxVal",
        "min",
        "max",
        "v",
        "v",
        "v",
        "v",
        "l",
        "oldLength",
        "l",
        "oldLength",
        "l",
        "oldLength",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "w",
        "w",
        "v",
        "w",
        "y",
        "v",
        "z",
        "v",
        "z",
        "v",
        "x",
        "v",
        "x",
        "v",
        "y",
        "v",
        "a",
        "b",
        "a",
        "a",
        "a",
        "b",
        "b",
        "b",
        "ay",
        "bz",
        "az",
        "by",
        "az",
        "bx",
        "ax",
        "bz",
        "ax",
        "by",
        "ay",
        "bx",
        "vector",
        "v1",
        "v1",
        "THREE",
        "v1",
        "vector",
        "dot",
        "v1",
        "v1",
        "dot",
        "planeNormal",
        "v1",
        "v1",
        "THREE",
        "v1",
        "planeNormal",
        "v1",
        "normal",
        "v1",
        "v1",
        "THREE",
        "v1",
        "normal",
        "normal",
        "v",
        "v",
        "v",
        "THREE",
        "theta",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "dx",
        "dx",
        "dy",
        "dy",
        "dz",
        "dz",
        "m",
        "order",
        "q",
        "order",
        "m",
        "m",
        "m",
        "m",
        "index",
        "matrix",
        "index",
        "matrix",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "sx",
        "sy",
        "sz",
        "index",
        "matrix",
        "index",
        "matrix",
        "me",
        "offset",
        "me",
        "offset",
        "me",
        "offset",
        "v",
        "v",
        "v",
        "v",
        "array",
        "offset",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "array",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "attribute",
        "index",
        "offset",
        "offset",
        "offset",
        "index",
        "index",
        "attribute",
        "offset",
        "attribute",
        "index",
        "attribute",
        "index",
        "attribute",
        "index",
        "THREE",
        "THREE",
        "x",
        "y",
        "z",
        "order",
        "x",
        "y",
        "z",
        "order",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "x",
        "y",
        "z",
        "order",
        "x",
        "y",
        "z",
        "order",
        "euler",
        "euler",
        "euler",
        "euler",
        "euler",
        "m",
        "order",
        "update",
        "THREE",
        "m",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "order",
        "order",
        "order",
        "clamp",
        "m13",
        "m13",
        "m23",
        "m33",
        "m12",
        "m11",
        "m32",
        "m22",
        "order",
        "clamp",
        "m23",
        "m23",
        "m13",
        "m33",
        "m21",
        "m22",
        "m31",
        "m11",
        "order",
        "clamp",
        "m32",
        "m32",
        "m31",
        "m33",
        "m12",
        "m22",
        "m21",
        "m11",
        "order",
        "clamp",
        "m31",
        "m31",
        "m32",
        "m33",
        "m21",
        "m11",
        "m12",
        "m22",
        "order",
        "clamp",
        "m21",
        "m21",
        "m23",
        "m22",
        "m31",
        "m11",
        "m13",
        "m33",
        "order",
        "clamp",
        "m12",
        "m12",
        "m32",
        "m22",
        "m13",
        "m11",
        "m23",
        "m33",
        "order",
        "order",
        "update",
        "q",
        "order",
        "update",
        "matrix",
        "matrix",
        "THREE",
        "matrix",
        "q",
        "matrix",
        "order",
        "update",
        "v",
        "order",
        "v",
        "v",
        "v",
        "order",
        "THREE",
        "newOrder",
        "q",
        "q",
        "newOrder",
        "euler",
        "euler",
        "euler",
        "euler",
        "euler",
        "array",
        "array",
        "array",
        "array",
        "array",
        "array",
        "optionalResult",
        "optionalResult",
        "optionalResult",
        "THREE",
        "callback",
        "callback",
        "THREE",
        "THREE",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "uuid",
        "i",
        "i",
        "uuid",
        "i",
        "rnd",
        "rnd",
        "r",
        "rnd",
        "rnd",
        "rnd",
        "uuid",
        "i",
        "chars",
        "i",
        "r",
        "r",
        "uuid",
        "x",
        "a",
        "b",
        "x",
        "a",
        "a",
        "x",
        "b",
        "b",
        "x",
        "x",
        "a",
        "x",
        "a",
        "a",
        "x",
        "x",
        "a1",
        "a2",
        "b1",
        "b2",
        "b1",
        "x",
        "a1",
        "b2",
        "b1",
        "a2",
        "a1",
        "x",
        "min",
        "max",
        "x",
        "min",
        "x",
        "max",
        "x",
        "x",
        "min",
        "max",
        "min",
        "x",
        "x",
        "x",
        "x",
        "min",
        "max",
        "x",
        "min",
        "x",
        "max",
        "x",
        "x",
        "min",
        "max",
        "min",
        "x",
        "x",
        "x",
        "x",
        "x",
        "low",
        "high",
        "low",
        "high",
        "low",
        "high",
        "low",
        "high",
        "low",
        "degrees",
        "degrees",
        "degreeToRadiansFactor",
        "radians",
        "radians",
        "radianToDegreesFactor",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "THREE",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "TouchPanner",
        "THREE",
        "TouchPanner",
        "TouchPanner",
        "e",
        "e",
        "e",
        "e",
        "TouchPanner",
        "e",
        "e",
        "e",
        "Util",
        "element",
        "ROTATE_SPEED",
        "TouchPanner",
        "e",
        "TouchPanner",
        "_dereq_",
        "exports",
        "Util",
        "Util",
        "Util",
        "value",
        "min",
        "max",
        "min",
        "value",
        "max",
        "Util",
        "navigator",
        "Util",
        "navigator",
        "navigator",
        "Util",
        "timestampDeltaS",
        "isNaN",
        "timestampDeltaS",
        "timestampDeltaS",
        "Util",
        "timestampDeltaS",
        "Util",
        "Util",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "WebVRPolyfill",
        "navigator",
        "navigator",
        "WebVRPolyfill",
        "CardboardHMDVRDevice",
        "FusionPositionSensorVRDevice",
        "WebVRConfig",
        "MouseKeyboardPositionSensorVRDevice",
        "navigator",
        "HMDVRDevice",
        "PositionSensorVRDevice",
        "WebVRPolyfill",
        "resolve",
        "reject",
        "resolve",
        "devices",
        "e",
        "reject",
        "e",
        "WebVRPolyfill",
        "navigator",
        "navigator",
        "WebVRPolyfill",
        "WebVRConfig",
        "WebVRPolyfill",
        "_dereq_",
        "exports",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "registerComponent",
        "THREE",
        "camera",
        "oldData",
        "camera",
        "data",
        "camera",
        "data",
        "camera",
        "data",
        "camera",
        "data",
        "camera",
        "oldData",
        "oldData",
        "data",
        "data",
        "system",
        "system",
        "el",
        "camera",
        "data",
        "system",
        "system",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "THREE",
        "loader",
        "registerComponent",
        "src",
        "loader",
        "src",
        "colladaModel",
        "colladaModel",
        "el",
        "el",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "registerComponent",
        "utils",
        "el",
        "canvas",
        "el",
        "canvas",
        "canvas",
        "el",
        "el",
        "evt",
        "evt",
        "evt",
        "intersectedEl",
        "intersectedEl",
        "evt",
        "evt",
        "evt",
        "evt",
        "evt",
        "evt",
        "el",
        "distance",
        "el",
        "el",
        "el",
        "data",
        "data",
        "setTimeout",
        "fuse",
        "data",
        "evt",
        "evt",
        "el",
        "el",
        "el",
        "clearTimeout",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "THREE",
        "THREE",
        "debug",
        "registerComponent",
        "DEFAULT_RADIUS",
        "DEFAULT_RADIUS",
        "DEFAULT_RADIUS",
        "previousData",
        "previousData",
        "previousData",
        "previousData",
        "utils",
        "previousData",
        "data",
        "THREE",
        "mesh",
        "diff",
        "diff",
        "utils",
        "data",
        "currentTranslate",
        "geometryNeedsUpdate",
        "geometry",
        "mesh",
        "getGeometry",
        "translateNeedsUpdate",
        "applyTranslate",
        "geometry",
        "data",
        "currentTranslate",
        "THREE",
        "data",
        "schema",
        "data",
        "warn",
        "data",
        "THREE",
        "data",
        "data",
        "data",
        "THREE",
        "data",
        "data",
        "degToRad",
        "data",
        "degToRad",
        "data",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "degToRad",
        "data",
        "degToRad",
        "data",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "degToRad",
        "data",
        "degToRad",
        "data",
        "THREE",
        "data",
        "data",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "degToRad",
        "data",
        "degToRad",
        "data",
        "data",
        "data",
        "THREE",
        "data",
        "data",
        "data",
        "degToRad",
        "data",
        "degToRad",
        "data",
        "degToRad",
        "data",
        "degToRad",
        "data",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "degToRad",
        "data",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "warn",
        "data",
        "THREE",
        "geometry",
        "translate",
        "currentTranslate",
        "helperMatrix",
        "translate",
        "currentTranslate",
        "translate",
        "currentTranslate",
        "translate",
        "currentTranslate",
        "geometry",
        "translation",
        "geometry",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "THREE",
        "debug",
        "registerComponent",
        "el",
        "oldData",
        "diff",
        "data",
        "oldData",
        "light",
        "diffData",
        "diffData",
        "key",
        "data",
        "key",
        "key",
        "value",
        "THREE",
        "value",
        "light",
        "key",
        "value",
        "data",
        "getLight",
        "data",
        "newLight",
        "el",
        "newLight",
        "el",
        "el",
        "data",
        "data",
        "THREE",
        "data",
        "data",
        "data",
        "THREE",
        "data",
        "data",
        "data",
        "THREE",
        "color",
        "THREE",
        "color",
        "intensity",
        "THREE",
        "color",
        "groundColor",
        "intensity",
        "THREE",
        "color",
        "intensity",
        "distance",
        "decay",
        "THREE",
        "color",
        "intensity",
        "distance",
        "degToRad",
        "angle",
        "data",
        "decay",
        "warn",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "debug",
        "registerComponent",
        "warn",
        "parseUrl",
        "data",
        "data",
        "model",
        "el",
        "url",
        "warn",
        "format",
        "url",
        "url",
        "warn",
        "objUrl",
        "THREE",
        "objLoader",
        "objUrl",
        "el",
        "child",
        "child",
        "THREE",
        "child",
        "material",
        "url",
        "THREE",
        "loader",
        "loader",
        "url",
        "collada",
        "collada",
        "el",
        "collada",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "debug",
        "coordinates",
        "registerComponent",
        "value",
        "isCoordinate",
        "value",
        "value",
        "coordinates",
        "value",
        "value",
        "data",
        "data",
        "coordinates",
        "data",
        "data",
        "THREE",
        "target",
        "target",
        "target",
        "target",
        "object3D",
        "THREE",
        "target",
        "target",
        "target",
        "targetEl",
        "target",
        "targetEl",
        "warn",
        "target",
        "targetEl",
        "targetEl",
        "targetEl",
        "targetEl",
        "t",
        "target3D",
        "target3D",
        "targetEl",
        "targetEl",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "registerComponent",
        "THREE",
        "THREE",
        "t",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "sceneEl",
        "canvasEl",
        "sceneEl",
        "canvasEl",
        "canvasEl",
        "canvasEl",
        "canvasEl",
        "canvasEl",
        "canvasEl",
        "canvasEl",
        "sceneEl",
        "sceneEl",
        "canvasEl",
        "canvasEl",
        "canvasEl",
        "canvasEl",
        "canvasEl",
        "canvasEl",
        "canvasEl",
        "canvasEl",
        "THREE",
        "hmdEuler",
        "hmdEuler",
        "hmdQuaternion",
        "THREE",
        "hmdEuler",
        "THREE",
        "pitchObject",
        "THREE",
        "hmdEuler",
        "THREE",
        "yawObject",
        "THREE",
        "hmdEuler",
        "THREE",
        "dolly",
        "hmdQuaternion",
        "dolly",
        "hmdQuaternion",
        "el",
        "el",
        "currentPosition",
        "deltaPosition",
        "currentPosition",
        "deltaPosition",
        "currentPosition",
        "deltaPosition",
        "deltaPosition",
        "dolly",
        "deltaPosition",
        "previousPosition",
        "previousPosition",
        "dolly",
        "deltaPosition",
        "THREE",
        "dolly",
        "hmdQuaternion",
        "dolly",
        "hmdQuaternion",
        "THREE",
        "euler",
        "euler",
        "euler",
        "euler",
        "movementX",
        "movementY",
        "movementX",
        "previousMouseEvent",
        "movementY",
        "previousMouseEvent",
        "yawObject",
        "movementX",
        "pitchObject",
        "movementY",
        "pitchObject",
        "PI_2",
        "PI_2",
        "pitchObject",
        "e",
        "e",
        "e",
        "e",
        "e",
        "deltaY",
        "e",
        "yawObject",
        "deltaY",
        "e",
        "e",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "debug",
        "utils",
        "component",
        "shader",
        "shader",
        "registerComponent",
        "shaderNames",
        "oldData",
        "oldData",
        "diff",
        "oldData",
        "data",
        "data",
        "dataDiff",
        "data",
        "data",
        "data",
        "newShader",
        "currentShader",
        "shaders",
        "shader",
        "shaders",
        "shader",
        "schema",
        "error",
        "shader",
        "currentShader",
        "newShader",
        "currentShader",
        "schema",
        "time",
        "delta",
        "tickProperties",
        "keys",
        "update",
        "key",
        "tickProperties",
        "key",
        "time",
        "tickProperties",
        "schema",
        "keys",
        "key",
        "schema",
        "key",
        "tick",
        "tickProperties",
        "key",
        "scene",
        "tickProperties",
        "scene",
        "shaderName",
        "shaders",
        "shaderName",
        "shaders",
        "shaderName",
        "Shader",
        "shaderName",
        "Shader",
        "material",
        "data",
        "material",
        "data",
        "material",
        "parseSide",
        "data",
        "material",
        "data",
        "material",
        "data",
        "data",
        "material",
        "data",
        "THREE",
        "object3D",
        "object3D",
        "defaultMaterial",
        "material",
        "THREE",
        "system",
        "mesh",
        "material",
        "system",
        "material",
        "side",
        "side",
        "THREE",
        "THREE",
        "THREE",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "debug",
        "registerComponent",
        "THREE",
        "THREE",
        "data",
        "data",
        "data",
        "objUrl",
        "mtlUrl",
        "mtlUrl",
        "HTMLElement",
        "el",
        "warn",
        "mtlLoader",
        "mtlUrl",
        "mtlUrl",
        "mtlLoader",
        "mtlUrl",
        "materials",
        "materials",
        "objLoader",
        "materials",
        "objLoader",
        "objUrl",
        "objModel",
        "objModel",
        "el",
        "objModel",
        "el",
        "objModel",
        "objLoader",
        "objUrl",
        "objModel",
        "el",
        "objModel",
        "child",
        "child",
        "THREE",
        "child",
        "material",
        "objModel",
        "el",
        "objModel",
        "el",
        "objModel",
        "_dereq_",
        "exports",
        "_dereq_",
        "registerComponent",
        "object3D",
        "data",
        "data",
        "data",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerComponent",
        "THREE",
        "pollInterval",
        "requestInterval",
        "requestInterval",
        "closest",
        "closest",
        "objects",
        "el",
        "el",
        "THREE",
        "parent",
        "THREE",
        "cursor",
        "cursorPosition",
        "originPosition",
        "raycaster",
        "originPosition",
        "direction",
        "raycaster",
        "objects",
        "scene",
        "i",
        "intersectedObjs",
        "i",
        "intersectedObj",
        "intersectedObjs",
        "i",
        "intersectedObj",
        "intersectedObj",
        "intersectedObj",
        "intersectedObj",
        "intersectedObj",
        "intersectedObj",
        "cursorEl",
        "intersectedObj",
        "intersectedObj",
        "el",
        "distance",
        "el",
        "el",
        "distance",
        "intersectedEl",
        "obj",
        "obj",
        "el",
        "el",
        "obj",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "registerComponent",
        "object3D",
        "degToRad",
        "data",
        "degToRad",
        "data",
        "degToRad",
        "data",
        "object3D",
        "_dereq_",
        "exports",
        "_dereq_",
        "registerComponent",
        "data",
        "zeroScale",
        "data",
        "data",
        "zeroScale",
        "data",
        "data",
        "zeroScale",
        "data",
        "object3D",
        "x",
        "y",
        "z",
        "_dereq_",
        "exports",
        "_dereq_",
        "register",
        "data",
        "scene",
        "canvas",
        "canvas",
        "canvas",
        "canvas",
        "data",
        "canvas",
        "data",
        "scene",
        "canvas",
        "canvas",
        "scene",
        "canvas",
        "scene",
        "canvas",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "debug",
        "register",
        "el",
        "warn",
        "fog",
        "data",
        "fog",
        "el",
        "getFog",
        "data",
        "el",
        "key",
        "data",
        "key",
        "key",
        "value",
        "THREE",
        "value",
        "fog",
        "key",
        "value",
        "fog",
        "fog",
        "fog",
        "fog",
        "data",
        "data",
        "fog",
        "THREE",
        "data",
        "data",
        "fog",
        "THREE",
        "data",
        "data",
        "data",
        "fog",
        "data",
        "fog",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "THREE",
        "THREE",
        "registerComponent",
        "shouldCaptureKeyEvent",
        "scene",
        "controls",
        "oldData",
        "data",
        "data",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerComponent",
        "createStats",
        "scene",
        "scene",
        "scene",
        "stats",
        "stats",
        "stats",
        "HIDDEN_CLASS",
        "HIDDEN_CLASS",
        "scene",
        "ThreeStats",
        "scene",
        "AFrameStats",
        "scene",
        "scene",
        "threeStats",
        "aframeStats",
        "RStats",
        "plugins",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "THREE",
        "THREE",
        "dummyDolly",
        "registerComponent",
        "scene",
        "scene",
        "scene",
        "scene",
        "scene",
        "scene",
        "createEnterVR",
        "scene",
        "createOrientationModal",
        "uiElement",
        "uiElement",
        "uiElement",
        "uiElement",
        "scene",
        "HIDDEN_CLASS",
        "HIDDEN_CLASS",
        "scene",
        "utils",
        "scene",
        "HIDDEN_CLASS",
        "HIDDEN_CLASS",
        "enterVRHandler",
        "isMobile",
        "isMobile",
        "wrapper",
        "wrapper",
        "ENTER_VR_CLASS",
        "compatModal",
        "compatModal",
        "ENTER_VR_MODAL_CLASS",
        "compatModalText",
        "compatModalLink",
        "compatModalLink",
        "compatModalLink",
        "compatModalLink",
        "vrButton",
        "vrButton",
        "ENTER_VR_BTN_CLASS",
        "wrapper",
        "vrButton",
        "compatModal",
        "compatModal",
        "compatModalText",
        "compatModal",
        "compatModalLink",
        "wrapper",
        "compatModal",
        "checkHeadsetConnected",
        "isMobile",
        "compatModalText",
        "wrapper",
        "ENTER_VR_NO_HEADSET",
        "hasWebVR",
        "compatModalText",
        "wrapper",
        "ENTER_VR_NO_WEBVR",
        "vrButton",
        "enterVRHandler",
        "wrapper",
        "controls",
        "orientation",
        "dummyDolly",
        "orientation",
        "orientation",
        "orientation",
        "exitVRHandler",
        "modal",
        "ORIENTATION_MODAL_CLASS",
        "modal",
        "HIDDEN_CLASS",
        "exit",
        "exit",
        "exitVRHandler",
        "modal",
        "exit",
        "modal",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "debug",
        "registerComponent",
        "oldData",
        "diff",
        "oldData",
        "data",
        "data",
        "diffData",
        "srcChanged",
        "src",
        "warn",
        "sound",
        "srcChanged",
        "diffData",
        "sound",
        "data",
        "srcChanged",
        "diffData",
        "sound",
        "data",
        "srcChanged",
        "diffData",
        "sound",
        "data",
        "diffData",
        "oldData",
        "oldData",
        "el",
        "oldData",
        "el",
        "data",
        "srcChanged",
        "sound",
        "src",
        "el",
        "sound",
        "el",
        "sceneEl",
        "THREE",
        "sceneEl",
        "listener",
        "sceneEl",
        "sceneEl",
        "listener",
        "sceneEl",
        "evt",
        "evt",
        "listener",
        "sound",
        "THREE",
        "listener",
        "el",
        "sound",
        "sound",
        "sound",
        "el",
        "sound",
        "_dereq_",
        "exports",
        "_dereq_",
        "registerComponent",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerComponent",
        "THREE",
        "previousData",
        "data",
        "data",
        "time",
        "prevTime",
        "data",
        "data",
        "data",
        "data",
        "time",
        "previousData",
        "delta",
        "MAX_DELTA",
        "velocity",
        "adAxis",
        "velocity",
        "wsAxis",
        "velocity",
        "adAxis",
        "velocity",
        "adAxis",
        "easing",
        "delta",
        "velocity",
        "wsAxis",
        "velocity",
        "wsAxis",
        "easing",
        "delta",
        "el",
        "data",
        "data",
        "keys",
        "velocity",
        "adAxis",
        "adSign",
        "acceleration",
        "delta",
        "keys",
        "velocity",
        "adAxis",
        "adSign",
        "acceleration",
        "delta",
        "data",
        "keys",
        "velocity",
        "wsAxis",
        "wsSign",
        "acceleration",
        "delta",
        "keys",
        "velocity",
        "wsAxis",
        "wsSign",
        "acceleration",
        "delta",
        "movementVector",
        "delta",
        "el",
        "movementVector",
        "el",
        "movementVector",
        "el",
        "movementVector",
        "el",
        "position",
        "movementVector",
        "position",
        "movementVector",
        "position",
        "movementVector",
        "t",
        "shouldCaptureKeyEvent",
        "shouldCaptureKeyEvent",
        "delta",
        "THREE",
        "THREE",
        "delta",
        "direction",
        "velocity",
        "direction",
        "delta",
        "elRotation",
        "direction",
        "elRotation",
        "rotation",
        "THREE",
        "elRotation",
        "THREE",
        "elRotation",
        "direction",
        "rotation",
        "direction",
        "_dereq_",
        "exports",
        "_dereq_",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "TWEEN",
        "DIRECTIONS",
        "FILLS",
        "DEFAULTS",
        "DIRECTIONS",
        "EASING_FUNCTIONS",
        "FILLS",
        "REPEATS",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "constants",
        "constants",
        "constants",
        "constants",
        "constants",
        "coordinates",
        "registerElement",
        "ANode",
        "el",
        "el",
        "init",
        "el",
        "init",
        "el",
        "init",
        "attr",
        "oldVal",
        "newVal",
        "data",
        "parseInt",
        "data",
        "el",
        "attribute",
        "data",
        "EASING_FUNCTIONS",
        "data",
        "data",
        "data",
        "REPEATS",
        "Infinity",
        "animationValues",
        "getAnimationValues",
        "el",
        "attribute",
        "data",
        "data",
        "currentValue",
        "animationValues",
        "to",
        "animationValues",
        "animationValues",
        "repeat",
        "Infinity",
        "parseInt",
        "data",
        "isNaN",
        "begin",
        "begin",
        "cloneValue",
        "currentValue",
        "repeat",
        "Infinity",
        "fill",
        "FILLS",
        "DIRECTIONS",
        "DIRECTIONS",
        "data",
        "yoyo",
        "direction",
        "DIRECTIONS",
        "toTemp",
        "to",
        "to",
        "cloneValue",
        "cloneValue",
        "toTemp",
        "FILLS",
        "FILLS",
        "fill",
        "TWEEN",
        "cloneValue",
        "to",
        "data",
        "begin",
        "easing",
        "repeat",
        "yoyo",
        "data",
        "begin",
        "begin",
        "isNaN",
        "begin",
        "FILLS",
        "FILLS",
        "data",
        "tween",
        "tween",
        "FILLS",
        "FILLS",
        "direction",
        "direction",
        "DIRECTIONS",
        "DIRECTIONS",
        "DIRECTIONS",
        "DIRECTIONS",
        "direction",
        "DIRECTIONS",
        "DIRECTIONS",
        "DIRECTIONS",
        "DIRECTIONS",
        "direction",
        "evts",
        "utils",
        "evts",
        "evt",
        "el",
        "evt",
        "isNaN",
        "evts",
        "el",
        "el",
        "el",
        "el",
        "evts",
        "utils",
        "evts",
        "evt",
        "el",
        "evt",
        "start",
        "el",
        "el",
        "evt",
        "evt",
        "evt",
        "evt",
        "mixinEl",
        "mixinData",
        "mixinEl",
        "utils",
        "mixinEl",
        "DEFAULTS",
        "elData",
        "utils",
        "DEFAULTS",
        "utils",
        "data",
        "DEFAULTS",
        "mixinData",
        "elData",
        "data",
        "val",
        "utils",
        "val",
        "el",
        "attribute",
        "dataFrom",
        "dataTo",
        "currentValue",
        "attribute",
        "attributeSplit",
        "getForComponentAttribute",
        "dataTo",
        "isCoordinate",
        "dataTo",
        "getForCoordinateComponent",
        "dataTo",
        "getForBoolean",
        "getForNumber",
        "partialSetAttribute",
        "to",
        "componentName",
        "attributeSplit",
        "componentPropName",
        "attributeSplit",
        "component",
        "el",
        "componentName",
        "component",
        "el",
        "componentName",
        "component",
        "el",
        "componentName",
        "schema",
        "component",
        "dataFrom",
        "attribute",
        "el",
        "componentName",
        "componentPropName",
        "attribute",
        "dataFrom",
        "attribute",
        "parseProperty",
        "attribute",
        "schema",
        "componentPropName",
        "to",
        "attribute",
        "parseProperty",
        "dataTo",
        "schema",
        "componentPropName",
        "partialSetAttribute",
        "value",
        "attribute",
        "value",
        "el",
        "componentName",
        "componentPropName",
        "value",
        "attribute",
        "dataFrom",
        "coordinates",
        "dataFrom",
        "currentValue",
        "to",
        "coordinates",
        "dataTo",
        "partialSetAttribute",
        "value",
        "el",
        "attribute",
        "value",
        "dataFrom",
        "attribute",
        "attribute",
        "strToBool",
        "dataFrom",
        "attribute",
        "boolToNum",
        "attribute",
        "to",
        "attribute",
        "boolToNum",
        "strToBool",
        "dataTo",
        "partialSetAttribute",
        "value",
        "el",
        "attribute",
        "value",
        "attribute",
        "dataFrom",
        "attribute",
        "parseFloat",
        "el",
        "attribute",
        "attribute",
        "parseFloat",
        "dataFrom",
        "to",
        "attribute",
        "parseFloat",
        "dataTo",
        "partialSetAttribute",
        "value",
        "el",
        "attribute",
        "value",
        "attribute",
        "getAnimationValues",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "THREE",
        "debug",
        "registerElement",
        "ANode",
        "parseInt",
        "i",
        "imgs",
        "i",
        "loaded",
        "resolve",
        "reject",
        "imgs",
        "i",
        "img",
        "resolve",
        "img",
        "reject",
        "i",
        "i",
        "audios",
        "i",
        "loaded",
        "mediaElementLoaded",
        "audios",
        "i",
        "i",
        "i",
        "videos",
        "i",
        "loaded",
        "mediaElementLoaded",
        "videos",
        "i",
        "loaded",
        "setTimeout",
        "warn",
        "timeout",
        "timeout",
        "ANode",
        "waitOnFilter",
        "el",
        "el",
        "el",
        "registerElement",
        "ANode",
        "xhrLoader",
        "src",
        "textResponse",
        "textResponse",
        "ANode",
        "el",
        "el",
        "el",
        "resolve",
        "reject",
        "el",
        "resolve",
        "el",
        "reject",
        "el",
        "checkProgress",
        "el",
        "checkProgress",
        "el",
        "reject",
        "i",
        "el",
        "i",
        "secondsBuffered",
        "el",
        "i",
        "el",
        "i",
        "secondsBuffered",
        "el",
        "resolve",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "debug",
        "registerElement",
        "HTMLElement",
        "elements",
        "i",
        "i",
        "elements",
        "i",
        "srcs",
        "elements",
        "i",
        "srcs",
        "warn",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "re",
        "utils",
        "re",
        "utils",
        "ANode",
        "THREE",
        "attr",
        "oldVal",
        "newVal",
        "attr",
        "oldVal",
        "newVal",
        "attr",
        "attr",
        "attr",
        "attr",
        "attrValue",
        "state",
        "op",
        "mixins",
        "mixinIds",
        "mixins",
        "mixinIds",
        "id",
        "id",
        "state",
        "op",
        "mixinId",
        "newMixins",
        "oldMixins",
        "oldMixins",
        "oldMixins",
        "newMixins",
        "oldMixins",
        "oldMixins",
        "oldMixinsIds",
        "i",
        "newMixinsIds",
        "i",
        "diff",
        "mixinId",
        "mixinId",
        "forEach",
        "stateMixinsEls",
        "el",
        "stateMixinIds",
        "el",
        "stateMixinIds",
        "state",
        "newMixinsIds",
        "id",
        "id",
        "state",
        "mixinId",
        "obj",
        "oldObj",
        "oldObj",
        "obj",
        "THREE",
        "obj",
        "obj",
        "obj",
        "Constructor",
        "object3D",
        "Constructor",
        "object3D",
        "Constructor",
        "object3D",
        "object3D",
        "el",
        "el",
        "el",
        "el",
        "parent",
        "attachedToParent",
        "isNode",
        "parent",
        "attach",
        "parent",
        "attach",
        "parent",
        "parent",
        "ANode",
        "ANode",
        "el",
        "el",
        "el",
        "el",
        "i",
        "children",
        "i",
        "children",
        "i",
        "child",
        "AEntity",
        "childEntities",
        "child",
        "childEntities",
        "name",
        "isDependency",
        "checkComponentDefined",
        "name",
        "components",
        "name",
        "isComponentDefined",
        "isDependency",
        "name",
        "isDependency",
        "isComponentDefined",
        "name",
        "name",
        "name",
        "HTMLElement",
        "name",
        "name",
        "name",
        "component",
        "name",
        "components",
        "name",
        "playComponent",
        "component",
        "debug",
        "name",
        "name",
        "components",
        "name",
        "component",
        "dependencies",
        "components",
        "name",
        "dependencies",
        "dependencies",
        "component",
        "component",
        "name",
        "name",
        "pauseComponent",
        "component",
        "component",
        "name",
        "components",
        "allComponents",
        "updateComponent",
        "name",
        "name",
        "name",
        "elValue",
        "name",
        "newData",
        "name",
        "name",
        "isComponentMixedIn",
        "name",
        "component",
        "checkComponentDefined",
        "name",
        "newData",
        "isDefault",
        "isMixedIn",
        "name",
        "component",
        "newData",
        "name",
        "attr",
        "components",
        "attr",
        "component",
        "attr",
        "HTMLElement",
        "attr",
        "components",
        "componentKeys",
        "_playComponent",
        "key",
        "playComponent",
        "components",
        "key",
        "sceneEl",
        "play",
        "obj",
        "obj",
        "components",
        "componentKeys",
        "_pauseComponent",
        "key",
        "pauseComponent",
        "components",
        "key",
        "sceneEl",
        "pause",
        "obj",
        "obj",
        "attr",
        "oldVal",
        "newVal",
        "components",
        "attr",
        "oldVal",
        "oldVal",
        "attr",
        "attr",
        "newVal",
        "oldVal",
        "component",
        "attr",
        "newVal",
        "attr",
        "value",
        "componentPropValue",
        "attr",
        "components",
        "attr",
        "value",
        "value",
        "value",
        "component",
        "value",
        "componentPropValue",
        "partialComponentData",
        "styleParser",
        "HTMLElement",
        "attr",
        "partialComponentData",
        "value",
        "componentPropValue",
        "componentObj",
        "partialComponentData",
        "componentStr",
        "component",
        "componentObj",
        "oldValue",
        "attr",
        "ANode",
        "attr",
        "componentStr",
        "attr",
        "oldValue",
        "componentObj",
        "attr",
        "attr",
        "components",
        "attr",
        "HTMLElement",
        "attr",
        "component",
        "value",
        "value",
        "component",
        "value",
        "attr",
        "attr",
        "component",
        "component",
        "HTMLElement",
        "attr",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "stateIndex",
        "stateIndex",
        "state",
        "state",
        "state",
        "state",
        "el",
        "name",
        "el",
        "name",
        "el",
        "name",
        "isComponentMixedIn",
        "name",
        "el",
        "name",
        "mixinEls",
        "i",
        "i",
        "mixinEls",
        "i",
        "inMixin",
        "mixinEls",
        "i",
        "name",
        "inMixin",
        "inMixin",
        "component",
        "sceneEl",
        "component",
        "component",
        "sceneEl",
        "component",
        "component",
        "sceneEl",
        "component",
        "component",
        "sceneEl",
        "component",
        "AEntity",
        "registerElement",
        "proto",
        "AEntity",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerElement",
        "ANode",
        "attr",
        "value",
        "AComponents",
        "attr",
        "component",
        "value",
        "value",
        "component",
        "value",
        "HTMLElement",
        "attr",
        "value",
        "attr",
        "AComponents",
        "attr",
        "HTMLElement",
        "attr",
        "component",
        "value",
        "value",
        "component",
        "value",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "registerElement",
        "HTMLElement",
        "mixins",
        "mixins",
        "attr",
        "oldVal",
        "newVal",
        "attr",
        "newVal",
        "oldVal",
        "closest",
        "selector",
        "element",
        "matches",
        "element",
        "selector",
        "element",
        "element",
        "element",
        "cb",
        "childFilter",
        "childFilter",
        "childFilter",
        "el",
        "el",
        "children",
        "childrenLoaded",
        "children",
        "childFilter",
        "child",
        "waitForLoaded",
        "resolve",
        "child",
        "resolve",
        "child",
        "resolve",
        "childrenLoaded",
        "emitLoaded",
        "cb",
        "cb",
        "i",
        "i",
        "children",
        "i",
        "children",
        "newMixins",
        "oldMixins",
        "newMixins",
        "oldMixins",
        "oldMixins",
        "oldMixinsIds",
        "i",
        "newMixinsIds",
        "i",
        "diff",
        "newMixinsIds",
        "mixinId",
        "mixins",
        "i",
        "i",
        "mixinIds",
        "i",
        "mixinIds",
        "i",
        "mixinId",
        "mixinIds",
        "mixinId",
        "mixinIds",
        "mixinId",
        "mixins",
        "i",
        "i",
        "mixinIds",
        "i",
        "mixinIds",
        "i",
        "mixinId",
        "mixinIds",
        "i",
        "mixinIds",
        "mixinId",
        "mixinId",
        "mixinEl",
        "mixinEl",
        "mixinEl",
        "attr",
        "newValue",
        "attr",
        "newValue",
        "HTMLElement",
        "attr",
        "newValue",
        "mixinId",
        "i",
        "i",
        "mixinEls",
        "i",
        "mixinEl",
        "mixinEls",
        "i",
        "mixinId",
        "mixinEl",
        "mixinEls",
        "i",
        "mixinId",
        "mixinId",
        "mixinId",
        "observer",
        "observer",
        "mixinId",
        "mixinEl",
        "mixinEl",
        "mixinId",
        "mixinEl",
        "currentObserver",
        "MutationObserver",
        "mutations",
        "mutations",
        "attr",
        "observer",
        "mixinEl",
        "config",
        "mixinId",
        "observer",
        "name",
        "detail",
        "bubbles",
        "detail",
        "detail",
        "bubbles",
        "bubbles",
        "bubbles",
        "detail",
        "name",
        "eventName",
        "utils",
        "eventName",
        "data",
        "name",
        "detail",
        "bubbles",
        "name",
        "detail",
        "bubbles",
        "_dereq_",
        "exports",
        "_dereq_",
        "tagName",
        "knownTags",
        "tagName",
        "node",
        "node",
        "knownTags",
        "node",
        "tagName",
        "obj",
        "obj",
        "ANode",
        "proto",
        "ANode",
        "AEntity",
        "proto",
        "AEntity",
        "isANode",
        "isAEntity",
        "addTagName",
        "tagName",
        "isANode",
        "newObj",
        "wrapANodeMethods",
        "obj",
        "newObj",
        "proto",
        "newObj",
        "isAEntity",
        "newObj",
        "wrapAEntityMethods",
        "obj",
        "newObj",
        "proto",
        "newObj",
        "registerElement",
        "tagName",
        "newObj",
        "obj",
        "wrapMethods",
        "newObj",
        "ANodeMethods",
        "obj",
        "ANode",
        "copyProperties",
        "obj",
        "newObj",
        "newObj",
        "obj",
        "wrapMethods",
        "newObj",
        "ANodeMethods",
        "obj",
        "ANode",
        "wrapMethods",
        "newObj",
        "AEntityMethods",
        "obj",
        "AEntity",
        "copyProperties",
        "obj",
        "newObj",
        "newObj",
        "targetObj",
        "methodList",
        "derivedObj",
        "baseObj",
        "methodList",
        "methodName",
        "wrapMethod",
        "targetObj",
        "methodName",
        "derivedObj",
        "baseObj",
        "obj",
        "methodName",
        "derivedObj",
        "baseObj",
        "derivedObj",
        "methodName",
        "baseObj",
        "methodName",
        "derivedMethod",
        "baseMethod",
        "derivedMethod",
        "baseMethod",
        "baseMethod",
        "arguments",
        "derivedMethod",
        "arguments",
        "obj",
        "methodName",
        "wrapperMethod",
        "source",
        "destination",
        "source",
        "props",
        "prop",
        "destination",
        "prop",
        "desc",
        "source",
        "prop",
        "destination",
        "prop",
        "source",
        "prop",
        "desc",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "schema",
        "schema",
        "schema",
        "schema",
        "schema",
        "schema",
        "utils",
        "el",
        "HTMLElement",
        "el",
        "name",
        "el",
        "buildData",
        "el",
        "name",
        "elData",
        "buildData",
        "el",
        "name",
        "elData",
        "Component",
        "prevData",
        "value",
        "silent",
        "isSingleProp",
        "schema",
        "parseProperty",
        "value",
        "schema",
        "parseProperties",
        "styleParser",
        "value",
        "schema",
        "silent",
        "data",
        "data",
        "data",
        "isSingleProp",
        "schema",
        "stringifyProperty",
        "data",
        "schema",
        "data",
        "stringifyProperties",
        "data",
        "schema",
        "styleParser",
        "data",
        "data",
        "data",
        "utils",
        "data",
        "value",
        "isSingleProp",
        "extendProperties",
        "isSinglePropSchema",
        "buildData",
        "el",
        "value",
        "buildData",
        "el",
        "value",
        "isSinglePropSchema",
        "utils",
        "previousData",
        "previousData",
        "el",
        "previousData",
        "schemaAddon",
        "utils",
        "components",
        "utils",
        "extendedSchema",
        "schemaAddon",
        "processSchema",
        "extendedSchema",
        "name",
        "definition",
        "definition",
        "key",
        "proto",
        "key",
        "definition",
        "key",
        "components",
        "name",
        "name",
        "NewComponent",
        "el",
        "Component",
        "el",
        "NewComponent",
        "Component",
        "proto",
        "NewComponent",
        "name",
        "NewComponent",
        "NewComponent",
        "NewComponent",
        "systems",
        "systems",
        "name",
        "components",
        "name",
        "NewComponent",
        "NewComponent",
        "NewComponent",
        "NewComponent",
        "utils",
        "processSchema",
        "NewComponent",
        "NewComponent",
        "NewComponent",
        "NewComponent",
        "NewComponent",
        "el",
        "name",
        "schema",
        "elData",
        "silent",
        "elData",
        "isSingleProp",
        "schema",
        "el",
        "isSinglePropSchema",
        "elData",
        "elData",
        "styleParser",
        "elData",
        "isSinglePropSchema",
        "data",
        "schema",
        "schema",
        "applyDefault",
        "key",
        "data",
        "key",
        "schema",
        "key",
        "mixinEls",
        "applyMixin",
        "mixinEl",
        "HTMLElement",
        "mixinEl",
        "name",
        "mixinData",
        "mixinData",
        "isSinglePropSchema",
        "mixinData",
        "styleParser",
        "mixinData",
        "data",
        "extendProperties",
        "data",
        "mixinData",
        "isSinglePropSchema",
        "componentDefined",
        "data",
        "extendProperties",
        "data",
        "elData",
        "isSinglePropSchema",
        "isSingleProp",
        "schema",
        "parseProperty",
        "data",
        "schema",
        "parseProperties",
        "data",
        "schema",
        "silent",
        "buildData",
        "dest",
        "source",
        "isSinglePropSchema",
        "isSinglePropSchema",
        "source",
        "source",
        "source",
        "dest",
        "source",
        "utils",
        "dest",
        "source",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "debug",
        "registerPropertyType",
        "arrayParse",
        "arrayStringify",
        "registerPropertyType",
        "boolParse",
        "registerPropertyType",
        "defaultParse",
        "defaultStringify",
        "registerPropertyType",
        "intParse",
        "registerPropertyType",
        "numberParse",
        "registerPropertyType",
        "selectorParse",
        "selectorStringify",
        "registerPropertyType",
        "selectorAllParse",
        "selectorAllStringify",
        "registerPropertyType",
        "srcParse",
        "registerPropertyType",
        "defaultParse",
        "defaultStringify",
        "registerPropertyType",
        "intParse",
        "registerPropertyType",
        "vecParse",
        "coordinates",
        "registerPropertyType",
        "vecParse",
        "coordinates",
        "registerPropertyType",
        "vecParse",
        "coordinates",
        "defaultValue",
        "parse",
        "stringify",
        "propertyTypes",
        "error",
        "propertyTypes",
        "defaultValue",
        "parse",
        "defaultParse",
        "stringify",
        "defaultStringify",
        "registerPropertyType",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "trim",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "parseInt",
        "value",
        "value",
        "parseFloat",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "defaultStringify",
        "value",
        "value",
        "value",
        "i",
        "i",
        "value",
        "i",
        "els",
        "value",
        "i",
        "i",
        "value",
        "els",
        "els",
        "defaultStringify",
        "value",
        "value",
        "value",
        "parsedUrl",
        "parsedUrl",
        "selectorParse",
        "value",
        "el",
        "el",
        "value",
        "coordinates",
        "value",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "re",
        "utils",
        "utils",
        "registerElement",
        "AEntity",
        "isMobile",
        "isIOS",
        "THREE",
        "initFullscreen",
        "initMetaTags",
        "initWakelock",
        "systems",
        "systemsKeys",
        "name",
        "name",
        "system",
        "name",
        "systems",
        "name",
        "system",
        "system",
        "behavior",
        "behaviors",
        "behavior",
        "behaviors",
        "behavior",
        "isMobile",
        "setFullscreen",
        "behavior",
        "behaviors",
        "behavior",
        "index",
        "behaviors",
        "index",
        "camera",
        "canvas",
        "isMobile",
        "canvas",
        "canvas",
        "size",
        "getCanvasSize",
        "canvas",
        "isMobile",
        "camera",
        "size",
        "size",
        "camera",
        "size",
        "size",
        "THREE",
        "canvas",
        "antialias",
        "renderer",
        "renderer",
        "AScene",
        "renderer",
        "THREE",
        "renderer",
        "AEntity",
        "AEntity",
        "setTimeout",
        "AEntity",
        "doPause",
        "doPause",
        "ANode",
        "play",
        "AEntity",
        "time",
        "time",
        "TWEEN",
        "time",
        "component",
        "component",
        "component",
        "time",
        "timeDelta",
        "systems",
        "key",
        "systems",
        "key",
        "systems",
        "key",
        "time",
        "timeDelta",
        "camera",
        "time",
        "canvas",
        "isMobile",
        "canvas",
        "canvas",
        "canvas",
        "canvas",
        "canvas",
        "canvas",
        "canvas",
        "canvas",
        "canvas",
        "_dereq_",
        "exports",
        "_dereq_",
        "initFullscreenListener",
        "scene",
        "fullscreenChangeHandler",
        "scene",
        "handler",
        "handler",
        "isIframed",
        "iframedFullscreenChangeHandler",
        "scene",
        "scene",
        "fullscreenElement",
        "fullscreenElement",
        "enterFullscreenHandler",
        "scene",
        "exitFullscreenHandler",
        "scene",
        "enterFullscreenHandler",
        "scene",
        "exitFullscreenHandler",
        "scene",
        "scene",
        "scene",
        "scene",
        "scene",
        "scene",
        "scene",
        "_dereq_",
        "exports",
        "_dereq_",
        "Meta",
        "Meta",
        "Meta",
        "Link",
        "Meta",
        "Meta",
        "Link",
        "attrs",
        "attrs",
        "attrs",
        "attrs",
        "attrs",
        "attrs",
        "injectHeadTags",
        "scene",
        "headEl",
        "MOBILE_HEAD_TAGS",
        "createAndInjectTag",
        "scene",
        "MOBILE_IOS_HEAD_TAGS",
        "createAndInjectTag",
        "headTags",
        "tagObj",
        "tagObj",
        "tagObj",
        "tag",
        "createTag",
        "tagObj",
        "tag",
        "headScriptEl",
        "headScriptEl",
        "tag",
        "headScriptEl",
        "headEl",
        "tag",
        "headTags",
        "tag",
        "tagObj",
        "tagObj",
        "tagObj",
        "tagObj",
        "extend",
        "meta",
        "tagObj",
        "_dereq_",
        "exports",
        "_dereq_",
        "initWakelock",
        "scene",
        "scene",
        "scene",
        "Wakelock",
        "scene",
        "wakelock",
        "scene",
        "wakelock",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "debug",
        "schema",
        "schema",
        "schema",
        "schema",
        "isSingleProperty",
        "schema",
        "isSingleProperty",
        "schema",
        "processPropertyDefinition",
        "schema",
        "schema",
        "propName",
        "schema",
        "propName",
        "processPropertyDefinition",
        "schema",
        "propName",
        "schema",
        "propDefinition",
        "propDefinition",
        "propDefinition",
        "propDefinition",
        "defaultVal",
        "defaultVal",
        "typeName",
        "defaultVal",
        "defaultVal",
        "typeName",
        "typeName",
        "propDefinition",
        "typeName",
        "propDefinition",
        "typeName",
        "propType",
        "propertyTypes",
        "typeName",
        "propType",
        "warn",
        "typeName",
        "propDefinition",
        "propDefinition",
        "propType",
        "propDefinition",
        "propDefinition",
        "propType",
        "propDefinition",
        "typeName",
        "propDefinition",
        "propDefinition",
        "propType",
        "propDefinition",
        "processPropertyDefinition",
        "propData",
        "schema",
        "getPartialData",
        "silent",
        "getPartialData",
        "propData",
        "schema",
        "propData",
        "propData",
        "propData",
        "propData",
        "propName",
        "schema",
        "propName",
        "silent",
        "warn",
        "propName",
        "propNames",
        "parse",
        "propName",
        "schema",
        "propName",
        "propData",
        "propName",
        "schema",
        "propName",
        "propValue",
        "propValue",
        "propDefinition",
        "propValue",
        "propData",
        "propName",
        "parseProperty",
        "propValue",
        "propDefinition",
        "propData",
        "value",
        "propDefinition",
        "value",
        "value",
        "value",
        "value",
        "propDefinition",
        "value",
        "parseProperty",
        "propData",
        "schema",
        "propData",
        "propName",
        "schema",
        "propName",
        "propData",
        "propName",
        "value",
        "value",
        "stringifyProperty",
        "propValue",
        "propDefinition",
        "propDefinition",
        "warn",
        "propName",
        "stringifiedData",
        "propName",
        "value",
        "stringifiedData",
        "value",
        "propDefinition",
        "value",
        "value",
        "propDefinition",
        "value",
        "propDefinition",
        "value",
        "stringifyProperty",
        "_dereq_",
        "exports",
        "_dereq_",
        "schema",
        "_dereq_",
        "Shader",
        "data",
        "data",
        "data",
        "THREE",
        "data",
        "schema",
        "squemaKeys",
        "processSquema",
        "key",
        "schema",
        "key",
        "propertyToThreeMapping",
        "schema",
        "key",
        "schema",
        "key",
        "data",
        "key",
        "schema",
        "key",
        "variables",
        "key",
        "varType",
        "schema",
        "key",
        "varValue",
        "variables",
        "data",
        "data",
        "data",
        "data",
        "data",
        "dataKeys",
        "processData",
        "key",
        "schema",
        "key",
        "schema",
        "key",
        "variables",
        "key",
        "data",
        "key",
        "variables",
        "key",
        "schema",
        "key",
        "data",
        "key",
        "variables",
        "key",
        "value",
        "THREE",
        "value",
        "value",
        "THREE",
        "value",
        "value",
        "value",
        "THREE",
        "value",
        "value",
        "value",
        "value",
        "color",
        "THREE",
        "value",
        "THREE",
        "color",
        "color",
        "color",
        "value",
        "name",
        "definition",
        "definition",
        "key",
        "proto",
        "key",
        "definition",
        "key",
        "shaders",
        "name",
        "name",
        "NewShader",
        "Shader",
        "NewShader",
        "Shader",
        "proto",
        "NewShader",
        "name",
        "NewShader",
        "NewShader",
        "shaders",
        "name",
        "NewShader",
        "processSchema",
        "NewShader",
        "shaderNames",
        "name",
        "NewShader",
        "_dereq_",
        "exports",
        "_dereq_",
        "components",
        "components",
        "component",
        "component",
        "name",
        "definition",
        "definition",
        "key",
        "proto",
        "key",
        "definition",
        "key",
        "systems",
        "name",
        "name",
        "NewSystem",
        "NewSystem",
        "proto",
        "NewSystem",
        "name",
        "NewSystem",
        "NewSystem",
        "systems",
        "name",
        "NewSystem",
        "i",
        "i",
        "scenes",
        "i",
        "scenes",
        "i",
        "name",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "registerElement",
        "ANode",
        "targetSelector",
        "targetSelector",
        "listener",
        "listener",
        "el",
        "name",
        "i",
        "targetEls",
        "i",
        "j",
        "attributes",
        "j",
        "attribute",
        "attributes",
        "j",
        "attributeName",
        "attribute",
        "attributeValue",
        "attribute",
        "targetEl",
        "targetEls",
        "i",
        "attributeName",
        "attributeName",
        "attributeSplit",
        "attributeName",
        "targetEl",
        "attributeSplit",
        "attributeSplit",
        "attributeValue",
        "targetEl",
        "attributeName",
        "attributeValue",
        "_dereq_",
        "exports",
        "getMeshMixin",
        "value",
        "value",
        "value",
        "value",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "utils",
        "getMeshMixin",
        "registerPrimitive",
        "boxDefinition",
        "registerPrimitive",
        "utils",
        "boxDefinition",
        "_dereq_",
        "exports",
        "_dereq_",
        "registerPrimitive",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "_dereq_",
        "exports",
        "_dereq_",
        "registerPrimitive",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerPrimitive",
        "utils",
        "meshMixin",
        "meshMixin",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "utils",
        "debug",
        "registerPrimitive",
        "name",
        "definition",
        "name",
        "name",
        "log",
        "name",
        "registerElement",
        "name",
        "AEntity",
        "definition",
        "definition",
        "definition",
        "definition",
        "definition",
        "definition",
        "definition",
        "cloneObject",
        "componentName",
        "componentName",
        "componentName",
        "componentName",
        "attributes",
        "attributeName",
        "attributes",
        "attributeName",
        "attr",
        "attr",
        "attr",
        "oldVal",
        "newVal",
        "attr",
        "AEntity",
        "attr",
        "oldVal",
        "newVal",
        "attr",
        "newVal",
        "attr",
        "value",
        "attr",
        "attr",
        "attr",
        "attr",
        "componentName",
        "attr",
        "componentName",
        "split",
        "attr",
        "componentName",
        "split",
        "propertyName",
        "split",
        "components",
        "componentName",
        "value",
        "attr",
        "value",
        "componentName",
        "componentName",
        "componentName",
        "propertyName",
        "componentName",
        "propertyName",
        "value",
        "componentName",
        "value",
        "componentName",
        "componentName",
        "attr",
        "value",
        "attr",
        "value",
        "attr",
        "value",
        "obj",
        "obj",
        "key",
        "obj",
        "key",
        "value",
        "clone",
        "key",
        "utils",
        "value",
        "clone",
        "key",
        "value",
        "clone",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "navigator",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "pkg",
        "pkg",
        "pkg",
        "AEntity",
        "ANode",
        "AScene",
        "components",
        "registerComponent",
        "registerShader",
        "registerSystem",
        "registerPrimitive",
        "shaders",
        "systems",
        "THREE",
        "TWEEN",
        "utils",
        "pkg",
        "_dereq_",
        "exports",
        "scene",
        "_rS",
        "_scene",
        "_rS",
        "r",
        "_rS",
        "r",
        "_update",
        "_start",
        "_end",
        "_attach",
        "_values",
        "_groups",
        "_dereq_",
        "exports",
        "_dereq_",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "THREE",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "registerShader",
        "data",
        "THREE",
        "getMaterialData",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "src",
        "src",
        "src",
        "srcLoader",
        "src",
        "utils",
        "material",
        "data",
        "utils",
        "material",
        "data",
        "utils",
        "material",
        "data",
        "data",
        "getMaterialData",
        "data",
        "data",
        "key",
        "material",
        "key",
        "data",
        "key",
        "data",
        "data",
        "THREE",
        "data",
        "materialData",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "THREE",
        "registerShader",
        "data",
        "THREE",
        "getMaterialData",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "src",
        "src",
        "src",
        "srcLoader",
        "src",
        "utils",
        "material",
        "data",
        "utils",
        "material",
        "data",
        "utils",
        "material",
        "data",
        "data",
        "getMaterialData",
        "data",
        "data",
        "key",
        "material",
        "key",
        "data",
        "key",
        "data",
        "data",
        "envMap",
        "material",
        "material",
        "texturePromises",
        "envMap",
        "texturePromises",
        "envMap",
        "cube",
        "material",
        "cube",
        "material",
        "texturePromises",
        "envMap",
        "resolve",
        "srcLoader",
        "envMap",
        "loadEnvMap",
        "urls",
        "CubeLoader",
        "urls",
        "cube",
        "material",
        "cube",
        "resolve",
        "cube",
        "data",
        "THREE",
        "data",
        "data",
        "data",
        "materialData",
        "_dereq_",
        "exports",
        "_dereq_",
        "css",
        "css",
        "_dereq_",
        "exports",
        "_dereq_",
        "css",
        "css",
        "_dereq_",
        "exports",
        "_dereq_",
        "registerSystem",
        "setTimeout",
        "checkForCamera",
        "sceneEl",
        "cameraEl",
        "cameraEl",
        "sceneEl",
        "cameraEl",
        "cameraWrapperEl",
        "cameraWrapperEl",
        "cameraWrapperEl",
        "DEFAULT_CAMERA_ATTR",
        "defaultCameraEl",
        "defaultCameraEl",
        "defaultCameraEl",
        "defaultCameraEl",
        "cameraWrapperEl",
        "defaultCameraEl",
        "sceneEl",
        "cameraWrapperEl",
        "sceneEl",
        "defaultCameraEl",
        "sceneEl",
        "sceneCameras",
        "sceneCameras",
        "newActiveCameraEl",
        "newCameraEl",
        "newCamera",
        "sceneEl",
        "sceneEl",
        "DEFAULT_CAMERA_ATTR",
        "defaultCameraWrapper",
        "defaultCameraWrapper",
        "newCameraEl",
        "defaultCameraEl",
        "removeDefaultCamera",
        "sceneEl",
        "newCameraEl",
        "sceneEl",
        "newCameraEl",
        "newCameraEl",
        "sceneEl",
        "newCamera",
        "sceneEl",
        "newCameraEl",
        "i",
        "i",
        "sceneCameraEls",
        "i",
        "cameraEl",
        "sceneCameraEls",
        "i",
        "newCameraEl",
        "cameraEl",
        "cameraEl",
        "cameraEl",
        "sceneEl",
        "sceneEl",
        "camera",
        "defaultCameraWrapper",
        "sceneEl",
        "DEFAULT_CAMERA_ATTR",
        "defaultCameraWrapper",
        "sceneEl",
        "defaultCameraWrapper",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "exports",
        "_dereq_",
        "registerSystem",
        "el",
        "el",
        "DEFAULT_LIGHT_ATTR",
        "defaultLights",
        "DEFAULT_LIGHT_ATTR",
        "i",
        "defaultLights",
        "i",
        "sceneEl",
        "defaultLights",
        "i",
        "ambientLight",
        "ambientLight",
        "DEFAULT_LIGHT_ATTR",
        "sceneEl",
        "ambientLight",
        "directionalLight",
        "directionalLight",
        "directionalLight",
        "DEFAULT_LIGHT_ATTR",
        "sceneEl",
        "directionalLight",
        "_dereq_",
        "exports",
        "_dereq_",
        "registerSystem",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "materials",
        "uuid",
        "materials",
        "uuid",
        "_dereq_",
        "exports",
        "regex",
        "value",
        "defaultVec",
        "value",
        "value",
        "vecParseFloat",
        "value",
        "value",
        "value",
        "defaultVec",
        "coordinate",
        "value",
        "vec",
        "coordinate",
        "defaultVec",
        "defaultVec",
        "vec",
        "coordinate",
        "defaultVec",
        "defaultVec",
        "vec",
        "coordinate",
        "defaultVec",
        "defaultVec",
        "vec",
        "coordinate",
        "defaultVec",
        "defaultVec",
        "vecParseFloat",
        "vec",
        "parse",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "stringify",
        "value",
        "regex",
        "value",
        "vec",
        "vec",
        "key",
        "vec",
        "key",
        "vec",
        "key",
        "vec",
        "key",
        "parseFloat",
        "vec",
        "key",
        "vec",
        "_dereq_",
        "exports",
        "process",
        "_dereq_",
        "_dereq_",
        "debugLib",
        "d",
        "getDebugNamespaceColor",
        "d",
        "extend",
        "debug",
        "debugLib",
        "chunks",
        "chunks",
        "getDebugNamespaceType",
        "settings",
        "settings",
        "color",
        "e",
        "storage",
        "ls",
        "parseInt",
        "ls",
        "ls",
        "debug",
        "debug",
        "process",
        "debug",
        "debug",
        "_dereq_",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "_dereq_",
        "el",
        "name",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "el",
        "CustomEvent",
        "name",
        "data",
        "evt",
        "el",
        "el",
        "evt",
        "msg",
        "msg",
        "arguments",
        "arguments",
        "objectAssign",
        "deepAssign",
        "a",
        "b",
        "a",
        "b",
        "keysA",
        "keysB",
        "keysA",
        "a",
        "b",
        "i",
        "i",
        "keysA",
        "i",
        "a",
        "keysA",
        "i",
        "b",
        "keysA",
        "i",
        "deepEqual",
        "a",
        "b",
        "a",
        "b",
        "collectKeys",
        "bKey",
        "keys",
        "bKey",
        "keys",
        "bKey",
        "keys",
        "doDiff",
        "key",
        "a",
        "key",
        "b",
        "key",
        "aVal",
        "bVal",
        "aVal",
        "bVal",
        "isComparingObjects",
        "deepEqual",
        "aVal",
        "bVal",
        "isComparingObjects",
        "aVal",
        "bVal",
        "diff",
        "key",
        "bVal",
        "diff",
        "a",
        "a",
        "a",
        "check",
        "isIOS",
        "check",
        "navigator",
        "navigator",
        "check",
        "navigator",
        "delimiter",
        "delimiter",
        "delimiter",
        "delimiter",
        "regex",
        "delimiter",
        "delimiter",
        "el",
        "defaults",
        "defaults",
        "defaults",
        "defaults",
        "copyAttribute",
        "key",
        "el",
        "key",
        "data",
        "key",
        "el",
        "key",
        "data",
        "name",
        "name",
        "name",
        "name",
        "regex",
        "location",
        "results",
        "decodeURIComponent",
        "results",
        "_dereq_",
        "_dereq_",
        "exports",
        "_dereq_",
        "debug",
        "src",
        "isImageCb",
        "isVideoCb",
        "parseUrl",
        "src",
        "url",
        "validateImageUrl",
        "url",
        "isAnImageUrl",
        "isImage",
        "isImage",
        "isVideoCb",
        "url",
        "isImageCb",
        "url",
        "textureEl",
        "validateAndGetQuerySelector",
        "src",
        "textureEl",
        "isImage",
        "textureEl",
        "textureEl",
        "isVideo",
        "textureEl",
        "textureEl",
        "isImage",
        "isImageCb",
        "textureEl",
        "isVideo",
        "isVideoCb",
        "textureEl",
        "warn",
        "src",
        "src",
        "cb",
        "i",
        "i",
        "i",
        "cubemapSrcRegex",
        "urls",
        "src",
        "cubemapSrcRegex",
        "url",
        "validatedUrls",
        "url",
        "validatedUrls",
        "cb",
        "validatedUrls",
        "urls",
        "i",
        "i",
        "i",
        "validateSrc",
        "urls",
        "i",
        "isImageCb",
        "aCubemap",
        "validateAndGetQuerySelector",
        "src",
        "aCubemap",
        "aCubemap",
        "aCubemap",
        "cb",
        "aCubemap",
        "warn",
        "src",
        "src",
        "src",
        "parsedSrc",
        "parsedSrc",
        "src",
        "onResult",
        "Image",
        "tester",
        "onLoad",
        "onResult",
        "tester",
        "onError",
        "onResult",
        "tester",
        "src",
        "selector",
        "selector",
        "el",
        "warn",
        "selector",
        "el",
        "e",
        "warn",
        "selector",
        "parseUrl",
        "validateSrc",
        "validateCubemapSrc",
        "_dereq_",
        "exports",
        "_dereq_",
        "value",
        "value",
        "value",
        "parsedData",
        "styleParser",
        "value",
        "transformKeysToCamelCase",
        "parsedData",
        "data",
        "data",
        "data",
        "styleParser",
        "data",
        "camelCase",
        "g",
        "g",
        "toCamelCase",
        "obj",
        "obj",
        "keys",
        "key",
        "toCamelCase",
        "key",
        "camelCaseObj",
        "camelCaseKey",
        "obj",
        "key",
        "camelCaseObj",
        "transformKeysToCamelCase",
        "_dereq_",
        "exports",
        "_dereq_",
        "_dereq_",
        "debug",
        "THREE",
        "debug",
        "material",
        "data",
        "src",
        "data",
        "src",
        "srcString",
        "src",
        "textureCache",
        "src",
        "textureCache",
        "src",
        "repeat",
        "textureCache",
        "src",
        "repeat",
        "handleImageTextureLoaded",
        "textureCache",
        "srcString",
        "textureCache",
        "srcString",
        "textureCache",
        "srcString",
        "repeat",
        "textureCache",
        "srcString",
        "repeat",
        "textureCache",
        "srcString",
        "repeat",
        "loadImageTexture",
        "material",
        "src",
        "repeat",
        "textureCache",
        "srcString",
        "repeat",
        "handleImageTextureLoaded",
        "texture",
        "updateMaterial",
        "material",
        "texture",
        "el",
        "EVENTS",
        "src",
        "texture",
        "material",
        "data",
        "src",
        "src",
        "videoEl",
        "src",
        "hash",
        "calculateVideoCacheHash",
        "videoEl",
        "textureCache",
        "hash",
        "textureCache",
        "hash",
        "handleVideoTextureLoaded",
        "fixVideoAttributes",
        "videoEl",
        "videoEl",
        "videoEl",
        "createVideoEl",
        "material",
        "src",
        "data",
        "data",
        "hash",
        "calculateVideoCacheHash",
        "videoEl",
        "textureCache",
        "hash",
        "textureCache",
        "hash",
        "handleVideoTextureLoaded",
        "texture",
        "THREE",
        "videoEl",
        "texture",
        "THREE",
        "videoTextureResult",
        "texture",
        "videoEl",
        "textureCache",
        "hash",
        "videoTextureResult",
        "handleVideoTextureLoaded",
        "videoTextureResult",
        "res",
        "texture",
        "res",
        "videoEl",
        "res",
        "updateMaterial",
        "material",
        "texture",
        "el",
        "EVENTS",
        "videoEl",
        "src",
        "videoEl",
        "el",
        "videoEl",
        "src",
        "videoEl",
        "el",
        "videoEl",
        "src",
        "videoEl",
        "videoEl",
        "id",
        "id",
        "hash",
        "videoAttributes",
        "i",
        "i",
        "videoEl",
        "i",
        "videoAttributes",
        "videoEl",
        "i",
        "videoEl",
        "i",
        "videoAttributes",
        "name",
        "hash",
        "name",
        "videoAttributes",
        "name",
        "hash",
        "material",
        "texture",
        "material",
        "texture",
        "texture",
        "material",
        "texture",
        "oldMap",
        "material",
        "material",
        "oldMap",
        "material",
        "material",
        "src",
        "repeat",
        "doLoadImageTexture",
        "resolve",
        "reject",
        "src",
        "isEl",
        "createTexture",
        "src",
        "TextureLoader",
        "src",
        "createTexture",
        "xhr",
        "error",
        "xhr",
        "xhr",
        "texture",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "texture",
        "repeatXY",
        "repeat",
        "repeatXY",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "texture",
        "parseInt",
        "repeatXY",
        "parseInt",
        "repeatXY",
        "resolve",
        "texture",
        "material",
        "src",
        "width",
        "height",
        "material",
        "el",
        "width",
        "el",
        "height",
        "el",
        "el",
        "el",
        "el",
        "el",
        "el",
        "warn",
        "src",
        "material",
        "el",
        "el",
        "src",
        "el",
        "videoEl",
        "videoEl",
        "videoEl",
        "videoEl",
        "videoEl",
        "videoEl",
        "videoEl",
        "videoEl",
        "videoEl",
        "videoEl",
        "videoEl",
        "videoEl",
        "videoEl",
        "videoEl",
        "textureCache",
        "clearTextureCache",
        "createVideoEl",
        "fixVideoAttributes",
        "loadImage",
        "loadVideo",
        "textureCache",
        "updateMaterial",
        "_dereq_",
        "exports",
        "f",
        "c",
        "c",
        "arguments",
        "f",
        "arguments",
        "WebGLRenderingContext",
        "_h",
        "WebGLRenderingContext",
        "_totalDrawArraysCalls",
        "arguments",
        "_totalPoints",
        "arguments",
        "_totalVertices",
        "arguments",
        "WebGLRenderingContext",
        "_h",
        "WebGLRenderingContext",
        "_totalDrawElementsCalls",
        "_totalFaces",
        "arguments",
        "_totalVertices",
        "arguments",
        "WebGLRenderingContext",
        "_h",
        "WebGLRenderingContext",
        "_totalUseProgramCalls",
        "WebGLRenderingContext",
        "_h",
        "WebGLRenderingContext",
        "_totalBindTexures",
        "_rS",
        "_totalDrawArraysCalls",
        "_totalDrawElementsCalls",
        "_rS",
        "_totalDrawElementsCalls",
        "_rS",
        "_totalDrawArraysCalls",
        "_rS",
        "_totalBindTexures",
        "_rS",
        "_totalUseProgramCalls",
        "_rS",
        "_totalFaces",
        "_rS",
        "_totalVertices",
        "_rS",
        "_totalPoints",
        "_totalDrawArraysCalls",
        "_totalDrawElementsCalls",
        "_totalUseProgramCalls",
        "_totalFaces",
        "_totalVertices",
        "_totalPoints",
        "_totalBindTexures",
        "r",
        "_rS",
        "r",
        "_update",
        "_start",
        "_end",
        "_attach",
        "_values",
        "_groups",
        "_fractions",
        "renderer",
        "_rS",
        "renderer",
        "_rS",
        "renderer",
        "_rS",
        "renderer",
        "_rS",
        "renderer",
        "_rS",
        "renderer",
        "_rS",
        "renderer",
        "_rS",
        "renderer",
        "r",
        "_rS",
        "r",
        "_update",
        "_start",
        "_end",
        "_attach",
        "_values",
        "_groups",
        "_fractions",
        "performance",
        "performance",
        "performance",
        "v",
        "v",
        "log1024",
        "v",
        "precision",
        "i",
        "precision",
        "_usedJSHeapSize",
        "_size",
        "performance",
        "_totalJSHeapSize",
        "_size",
        "performance",
        "_rS",
        "_usedJSHeapSize",
        "_rS",
        "_totalJSHeapSize",
        "_usedJSHeapSize",
        "r",
        "_rS",
        "r",
        "_update",
        "_start",
        "_end",
        "_attach",
        "_values",
        "_groups",
        "_fractions",
        "_dereq_",
        "exports",
        "performance",
        "performance",
        "nowOffset",
        "performance",
        "now",
        "nowOffset",
        "rStats",
        "settings",
        "array",
        "callback",
        "array",
        "keys",
        "j",
        "l",
        "j",
        "callback",
        "keys",
        "j",
        "url",
        "element",
        "url",
        "element",
        "element",
        "element",
        "settings",
        "_settings",
        "_settings",
        "_settings",
        "_settings",
        "_cssFont",
        "_cssRStats",
        "_css",
        "uri",
        "importCSS",
        "uri",
        "_settings",
        "_settings",
        "_dom",
        "_id",
        "_defArg",
        "_defArg",
        "_canvas",
        "_def",
        "_def",
        "_dotCanvas",
        "_dotCanvas",
        "_dotCanvas",
        "_elHeight",
        "_dotCtx",
        "_dotCtx",
        "_elHeight",
        "_dotCtx",
        "c",
        "_dotCtx",
        "_elHeight",
        "_elHeight",
        "_dotCtx",
        "_dotCtx",
        "_dotCtx",
        "_elHeight",
        "_dotCtx",
        "_alarmCanvas",
        "_alarmCanvas",
        "_alarmCanvas",
        "_elHeight",
        "_alarmCtx",
        "_alarmCtx",
        "_elHeight",
        "_alarmCtx",
        "_alarmCtx",
        "_elHeight",
        "_elHeight",
        "_alarmCtx",
        "_alarmCtx",
        "_alarmCtx",
        "_elHeight",
        "_alarmCtx",
        "_canvas",
        "_elWidth",
        "_canvas",
        "_elHeight",
        "_canvas",
        "_canvas",
        "_canvas",
        "_canvas",
        "_canvas",
        "_dom",
        "_canvas",
        "_ctx",
        "_ctx",
        "_canvas",
        "_canvas",
        "v",
        "alarm",
        "_current",
        "v",
        "_current",
        "_max",
        "_current",
        "_max",
        "_max",
        "_current",
        "_ctx",
        "_canvas",
        "_canvas",
        "_canvas",
        "_canvas",
        "_canvas",
        "alarm",
        "_ctx",
        "_alarmCanvas",
        "_canvas",
        "_canvas",
        "_current",
        "_canvas",
        "_max",
        "_elHeight",
        "_ctx",
        "_dotCanvas",
        "_canvas",
        "_canvas",
        "_current",
        "_canvas",
        "_max",
        "_elHeight",
        "_init",
        "_draw",
        "_dom",
        "_num",
        "_canvas",
        "_canvas",
        "_elWidth",
        "_canvas",
        "_elHeight",
        "_num",
        "_canvas",
        "_canvas",
        "_canvas",
        "_canvas",
        "_canvas",
        "_dom",
        "_canvas",
        "_ctx",
        "_ctx",
        "_canvas",
        "_canvas",
        "v",
        "_ctx",
        "_canvas",
        "_canvas",
        "_canvas",
        "_canvas",
        "_canvas",
        "iterateKeys",
        "v",
        "j",
        "v",
        "j",
        "_canvas",
        "_ctx",
        "_colours",
        "j",
        "_ctx",
        "_canvas",
        "th",
        "h",
        "th",
        "h",
        "_init",
        "_draw",
        "id",
        "group",
        "performance",
        "_settings",
        "_settings",
        "_id",
        "Graph",
        "_dom",
        "_id",
        "_def",
        "_dom",
        "_spanId",
        "_spanId",
        "_def",
        "_def",
        "_def",
        "_id",
        "_spanValue",
        "_spanValue",
        "_spanValueText",
        "_dom",
        "_spanId",
        "_dom",
        "_spanValue",
        "group",
        "group",
        "_dom",
        "_div",
        "_dom",
        "_time",
        "performance",
        "v",
        "_def",
        "_def",
        "_accumValue",
        "v",
        "_accumSamples",
        "performance",
        "t",
        "_accumStart",
        "_def",
        "_averageValue",
        "_accumValue",
        "_accumSamples",
        "_accumValue",
        "_accumStart",
        "t",
        "_accumSamples",
        "_time",
        "performance",
        "_settings",
        "performance",
        "_id",
        "_started",
        "_value",
        "performance",
        "_time",
        "_settings",
        "performance",
        "_id",
        "_started",
        "performance",
        "_id",
        "_id",
        "_id",
        "_average",
        "_value",
        "_end",
        "_start",
        "_def",
        "_def",
        "_averageValue",
        "_value",
        "_spanValueText",
        "v",
        "_def",
        "_def",
        "_value",
        "_def",
        "_def",
        "_value",
        "_def",
        "_graph",
        "_value",
        "a",
        "_dom",
        "a",
        "performance",
        "t",
        "_time",
        "_total",
        "e",
        "_def",
        "_def",
        "_value",
        "_total",
        "_value",
        "_total",
        "e",
        "_total",
        "_time",
        "t",
        "_average",
        "_value",
        "v",
        "_value",
        "v",
        "_average",
        "_value",
        "_set",
        "_start",
        "_tick",
        "_end",
        "_frame",
        "_value",
        "_draw",
        "v",
        "_value",
        "v",
        "_set",
        "_value",
        "idArg",
        "idArg",
        "id",
        "id",
        "_perfCounters",
        "id",
        "_perfCounters",
        "id",
        "_settings",
        "_settings",
        "iterateKeys",
        "_settings",
        "j",
        "_settings",
        "parseInt",
        "j",
        "group",
        "g",
        "id",
        "group",
        "g",
        "PerfCounter",
        "id",
        "group",
        "_perfCounters",
        "id",
        "p",
        "p",
        "_settings",
        "_settings",
        "_settings",
        "_settings",
        "_settings",
        "_settings",
        "_settings",
        "j",
        "_settings",
        "j",
        "_settings",
        "j",
        "_perf",
        "iterateKeys",
        "_settings",
        "j",
        "k",
        "_settings",
        "k",
        "_settings",
        "j",
        "k",
        "_settings",
        "_settings",
        "_settings",
        "j",
        "_settings",
        "_settings",
        "_settings",
        "j",
        "_settings",
        "_base",
        "_base",
        "_div",
        "_div",
        "_div",
        "_base",
        "_div",
        "_base",
        "_settings",
        "_settings",
        "iterateKeys",
        "_settings",
        "j",
        "_settings",
        "parseInt",
        "j",
        "div",
        "g",
        "div",
        "h1",
        "g",
        "h1",
        "e",
        "e",
        "div",
        "_div",
        "h1",
        "_div",
        "div",
        "_settings",
        "iterateKeys",
        "_settings",
        "j",
        "_settings",
        "parseInt",
        "j",
        "div",
        "legend",
        "iterateKeys",
        "_settings",
        "j",
        "k",
        "p",
        "_settings",
        "j",
        "k",
        "p",
        "_colours",
        "h",
        "legend",
        "p",
        "h",
        "div",
        "legend",
        "div",
        "h",
        "_elHeight",
        "f",
        "div",
        "StackGraph",
        "div",
        "h",
        "f",
        "graph",
        "_div",
        "div",
        "iterateKeys",
        "_settings",
        "j",
        "_settings",
        "j",
        "iterateKeys",
        "_perfCounters",
        "j",
        "_perfCounters",
        "j",
        "_settings",
        "_settings",
        "iterateKeys",
        "_settings",
        "j",
        "_settings",
        "parseInt",
        "j",
        "_perfCounters",
        "f",
        "iterateKeys",
        "_settings",
        "j",
        "k",
        "_settings",
        "j",
        "parseInt",
        "k",
        "_perfCounters",
        "s",
        "val",
        "v",
        "val",
        "f",
        "v",
        "_init",
        "id",
        "id",
        "_perf",
        "id",
        "_base",
        "_update",
        "_dereq_",
        "exports",
        "Util",
        "mimeType",
        "base64",
        "mimeType",
        "base64",
        "Util",
        "a",
        "a",
        "a",
        "check",
        "navigator",
        "navigator",
        "check",
        "Util",
        "navigator",
        "Util",
        "e",
        "Util",
        "url",
        "key",
        "value",
        "url",
        "url",
        "delimiter",
        "key",
        "value",
        "url",
        "Util",
        "name",
        "name",
        "name",
        "name",
        "regex",
        "location",
        "results",
        "decodeURIComponent",
        "results",
        "Util",
        "Util",
        "_dereq_",
        "exports",
        "_dereq_",
        "video",
        "video",
        "video",
        "video",
        "Util",
        "video",
        "video",
        "video",
        "timer",
        "timer",
        "setInterval",
        "setTimeout",
        "timer",
        "clearInterval",
        "timer",
        "timer",
        "navigator",
        "navigator",
        "userAgent",
        "userAgent",
        "iOSWakeLock",
        "AndroidWakeLock",
        "getWakeLock",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "setImmediate",
        "clearImmediate",
        "__webpack_require__",
        "exports",
        "Timeout",
        "apply",
        "setTimeout",
        "arguments",
        "clearTimeout",
        "exports",
        "Timeout",
        "apply",
        "setInterval",
        "arguments",
        "clearInterval",
        "exports",
        "exports",
        "timeout",
        "timeout",
        "id",
        "clearFn",
        "id",
        "clearFn",
        "Timeout",
        "Timeout",
        "Timeout",
        "exports",
        "item",
        "msecs",
        "clearTimeout",
        "item",
        "item",
        "msecs",
        "exports",
        "item",
        "clearTimeout",
        "item",
        "item",
        "exports",
        "exports",
        "item",
        "clearTimeout",
        "item",
        "item",
        "msecs",
        "item",
        "setTimeout",
        "onTimeout",
        "item",
        "item",
        "msecs",
        "exports",
        "setImmediate",
        "setImmediate",
        "fn",
        "nextImmediateId",
        "arguments",
        "arguments",
        "immediateIds",
        "id",
        "nextTick",
        "onNextTick",
        "immediateIds",
        "id",
        "args",
        "fn",
        "args",
        "fn",
        "exports",
        "id",
        "id",
        "exports",
        "clearImmediate",
        "clearImmediate",
        "id",
        "immediateIds",
        "id",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "cachedSetTimeout",
        "setTimeout",
        "e",
        "cachedSetTimeout",
        "cachedClearTimeout",
        "clearTimeout",
        "e",
        "cachedClearTimeout",
        "draining",
        "currentQueue",
        "draining",
        "currentQueue",
        "queue",
        "currentQueue",
        "queue",
        "queueIndex",
        "queue",
        "drainQueue",
        "draining",
        "cachedSetTimeout",
        "cleanUpNextTick",
        "draining",
        "queue",
        "len",
        "currentQueue",
        "queue",
        "queue",
        "queueIndex",
        "len",
        "currentQueue",
        "currentQueue",
        "queueIndex",
        "queueIndex",
        "len",
        "queue",
        "currentQueue",
        "draining",
        "cachedClearTimeout",
        "timeout",
        "process",
        "fun",
        "arguments",
        "arguments",
        "i",
        "arguments",
        "i",
        "args",
        "i",
        "arguments",
        "i",
        "queue",
        "Item",
        "fun",
        "args",
        "queue",
        "draining",
        "cachedSetTimeout",
        "drainQueue",
        "fun",
        "array",
        "fun",
        "array",
        "Item",
        "process",
        "process",
        "process",
        "process",
        "process",
        "process",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "name",
        "process",
        "process",
        "dir",
        "process",
        "exports",
        "exports",
        "__webpack_require__",
        "AFRAME",
        "parseUri",
        "o",
        "o",
        "i",
        "uri",
        "o",
        "i",
        "m",
        "i",
        "uri",
        "o",
        "uri",
        "o",
        "o",
        "$0",
        "$1",
        "$2",
        "$1",
        "uri",
        "o",
        "$1",
        "$2",
        "uri",
        "parseUri",
        "AFRAME",
        "AFRAME",
        "AFRAME",
        "AFRAME",
        "materials",
        "index",
        "config",
        "THREE",
        "texloader",
        "config",
        "tex",
        "materials",
        "index",
        "THREE",
        "tex",
        "obj",
        "configuration",
        "configuration",
        "mat",
        "i",
        "mat",
        "mat",
        "_this",
        "obj",
        "mat",
        "mat",
        "obj",
        "mat",
        "THREE",
        "mat",
        "mat",
        "_this",
        "obj",
        "mat",
        "mat",
        "obj",
        "id",
        "j",
        "obj",
        "j",
        "obj",
        "j",
        "f",
        "id",
        "f",
        "configurations",
        "url",
        "modelEl",
        "url",
        "modelEl",
        "e",
        "_this",
        "modelEl",
        "_this",
        "_this",
        "colladaObjs",
        "co",
        "co",
        "configurations",
        "config",
        "config",
        "id",
        "configuration",
        "config",
        "configuration",
        "_this",
        "co",
        "configuration",
        "_this",
        "modelEl",
        "object3D",
        "o",
        "objs",
        "o",
        "o",
        "objs",
        "o",
        "o",
        "o",
        "o",
        "child",
        "findColladaObjects",
        "child",
        "objs",
        "findColladaObjects",
        "object3D",
        "colladaObjs",
        "colladaObjs",
        "object3D",
        "id",
        "object3D",
        "i",
        "colladaObjs",
        "colladaObjs",
        "i",
        "id",
        "colladaObjs",
        "i",
        "json",
        "json",
        "scene",
        "_this",
        "scene",
        "scene",
        "json",
        "_this",
        "json",
        "reducerthread",
        "url",
        "e",
        "_this",
        "e",
        "err",
        "err",
        "u",
        "parseUri",
        "u",
        "parseUri",
        "url",
        "finalURL",
        "baseUri",
        "baseUri",
        "baseUri",
        "url",
        "finalURL",
        "vm",
        "i",
        "vm",
        "vm",
        "i",
        "request",
        "request",
        "request",
        "targetObj",
        "request",
        "targetObj",
        "materialIndex",
        "THREE",
        "request",
        "request",
        "_this",
        "response",
        "_this",
        "response",
        "response",
        "json",
        "_this",
        "json",
        "ex",
        "ex",
        "AFRAME",
        "__webpack_require__",
        "AFRAME",
        "exports",
        "__webpack_require__"
    ],
    "literals": [
        "\"\"",
        "\"function\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"function\"",
        "\"Cannot find module '\"",
        "\"'\"",
        "\"MODULE_NOT_FOUND\"",
        "\"function\"",
        "'use strict'",
        "'head'",
        "'link'",
        "'stylesheet'",
        "'data-'",
        "'head'",
        "'style'",
        "'text/css'",
        "'data-'",
        "'browser'",
        "''",
        "'process.binding is not supported'",
        "'/'",
        "'process.chdir is not supported'",
        "'./debug'",
        "'undefined'",
        "'undefined'",
        "'lightseagreen'",
        "'forestgreen'",
        "'goldenrod'",
        "'dodgerblue'",
        "'darkorchid'",
        "'crimson'",
        "'WebkitAppearance'",
        "'%c'",
        "''",
        "' %c'",
        "' '",
        "'%c '",
        "' '",
        "'+'",
        "'color: '",
        "'color: inherit'",
        "'%%'",
        "'%c'",
        "'object'",
        "'debug'",
        "\"./debug\"",
        "'ms'",
        "'string'",
        "'%o'",
        "'%%'",
        "'function'",
        "'function'",
        "''",
        "'.*?'",
        "'-'",
        "'^'",
        "'$'",
        "'^'",
        "'$'",
        "''",
        "\"ms\"",
        "'string'",
        "''",
        "'ms'",
        "'years'",
        "'year'",
        "'yrs'",
        "'yr'",
        "'y'",
        "'days'",
        "'day'",
        "'d'",
        "'hours'",
        "'hour'",
        "'hrs'",
        "'hr'",
        "'h'",
        "'minutes'",
        "'minute'",
        "'mins'",
        "'min'",
        "'m'",
        "'seconds'",
        "'second'",
        "'secs'",
        "'sec'",
        "'s'",
        "'milliseconds'",
        "'millisecond'",
        "'msecs'",
        "'msec'",
        "'ms'",
        "'d'",
        "'h'",
        "'m'",
        "'s'",
        "'ms'",
        "'day'",
        "'hour'",
        "'minute'",
        "'second'",
        "' ms'",
        "' '",
        "' '",
        "'s'",
        "'use strict'",
        "'is-obj'",
        "'Sources cannot be null or undefined'",
        "'Cannot convert undefined or null to object ('",
        "')'",
        "\"is-obj\"",
        "'use strict'",
        "'object'",
        "'function'",
        "\"use strict\"",
        "\"is\"",
        "'[is=\"'",
        "'\"]'",
        "\"style\"",
        "\"A \"",
        "\" type is already registered\"",
        "\"Callback\"",
        "\"__\"",
        "\"attached\"",
        "\"detached\"",
        "\"extends\"",
        "\"ADDITION\"",
        "\"MODIFICATION\"",
        "\"REMOVAL\"",
        "\"DOMAttrModified\"",
        "\"DOMContentLoaded\"",
        "\"DOMSubtreeModified\"",
        "\"<\"",
        "\"=\"",
        "\"ANNOTATION-XML\"",
        "\"COLOR-PROFILE\"",
        "\"FONT-FACE\"",
        "\"FONT-FACE-SRC\"",
        "\"FONT-FACE-URI\"",
        "\"FONT-FACE-FORMAT\"",
        "\"FONT-FACE-NAME\"",
        "\"MISSING-GLYPH\"",
        "\"\"",
        "\"addEventListener\"",
        "\"class\"",
        "\"propertychange\"",
        "\"addEventListener\"",
        "\"setAttribute\"",
        "\"childList\"",
        "\"style\"",
        "\"DOMNodeInserted\"",
        "\"DOMNodeRemoved\"",
        "\"readystatechange\"",
        "\"\"",
        "\"is\"",
        "\"The type \"",
        "\" is invalid\"",
        "\",\"",
        "\"\"",
        "'[is=\"'",
        "'\"]'",
        "\"prototype\"",
        "\"registerElement\"",
        "'use strict'",
        "'Object.assign cannot be called with null or undefined'",
        "'now'",
        "'webkitNow'",
        "'msNow'",
        "'mozNow'",
        "'oNow'",
        "\"undefined\"",
        "\"undefined\"",
        "\"undefined\"",
        "'function'",
        "\"[object Array]\"",
        "'object'",
        "'Promises must be constructed via new'",
        "'function'",
        "'not a function'",
        "'A promise cannot be resolved with itself.'",
        "'object'",
        "'function'",
        "'function'",
        "'function'",
        "'function'",
        "'catch'",
        "'object'",
        "'function'",
        "'function'",
        "'object'",
        "'undefined'",
        "'use strict'",
        "'raf'",
        "'time-now'",
        "\"raf\"",
        "\"time-now\"",
        "'use strict'",
        "':'",
        "';'",
        "''",
        "';'",
        "''",
        "':'",
        "';'",
        "'PositionSensorVRDevice not available'",
        "'THREE.VRControls: .zeroSensor() is now .resetSensor().'",
        "'HMD not available'",
        "'mozfullscreenchange'",
        "'webkitfullscreenchange'",
        "'left'",
        "'right'",
        "'THREE.VREffect.render() no longer supports arrays. Use object.layers instead.'",
        "'Y'",
        "'Y'",
        "\"ColladaLoader: Empty or non-existing file (\"",
        "\")\"",
        "\"Content-Length\"",
        "\"GET\"",
        "\"Don't know how to parse XML!\"",
        "'text/xml'",
        "'/'",
        "'.'",
        "'/'",
        "'/'",
        "\"library_images image\"",
        "\"image\"",
        "\"library_materials material\"",
        "\"material\"",
        "\"library_effects effect\"",
        "\"effect\"",
        "\"library_geometries geometry\"",
        "\"geometry\"",
        "\"library_cameras camera\"",
        "\"camera\"",
        "\"library_lights light\"",
        "\"light\"",
        "\"library_controllers controller\"",
        "\"controller\"",
        "\"library_animations animation\"",
        "\"animation\"",
        "\"library_visual_scenes visual_scene\"",
        "\"visual_scene\"",
        "\"library_kinematics_models kinematics_model\"",
        "\"kinematics_model\"",
        "'asset'",
        "'unit'",
        "'meter'",
        "'up_axis'",
        "'scene instance_visual_scene'",
        "'url'",
        "''",
        "'visual_scene0'",
        "'instance_kinematics_model'",
        "'url'",
        "''",
        "'kinematics_model0'",
        "'animation_'",
        "\"could not find morph controller!\"",
        "\"target_1\"",
        "\"target_Z\"",
        "\"could not find skin controller!\"",
        "\"could not find the skeleton for the skin!\"",
        "'JOINT'",
        "\"ColladaLoader: Could not find joint '\"",
        "\"'.\"",
        "'JOINT'",
        "'ColladaLoader: Could not find skin controller.'",
        "'ColladaLoader: Could not find the skeleton for the skin. '",
        "\"name\"",
        "\"fps\"",
        "\"length\"",
        "\"hierarchy\"",
        "'ColladaLoader:'",
        "' has '",
        "' bones.'",
        "'id'",
        "'getJointValue: joint '",
        "' doesn\\'t exist'",
        "'setJointValue: joint '",
        "' value '",
        "' outside of limits (min: '",
        "', max: '",
        "')'",
        "'setJointValue: joint '",
        "' is static'",
        "'joint'",
        "'revolute'",
        "'prismatic'",
        "'setJointValue: unknown joint type: '",
        "'matrix'",
        "'translate'",
        "'rotate'",
        "'setJointValue: joint '",
        "' doesn\\'t exist'",
        "'scene instance_kinematics_scene'",
        "'bind_joint_axis'",
        "'target'",
        "'/'",
        "'axis param'",
        "'joint'",
        "'.'",
        "'[sid=\"'",
        "'\"]'",
        "'skin'",
        "'morph'",
        "'ColladaLoader: Morph-controller partially supported.'",
        "''",
        "'skin_'",
        "'morph_'",
        "'directional'",
        "'point'",
        "'spot'",
        "'ambient'",
        "\"\"",
        "\"\"",
        "\"\"",
        "'library_nodes node'",
        "'id'",
        "'/'",
        "'Could not find transform \"'",
        "'\" in node '",
        "'matrix'",
        "\"\"",
        "\"\"",
        "'id'",
        "'init_from'",
        "\"\"",
        "\"\"",
        "\"\"",
        "'id'",
        "'name'",
        "\"none\"",
        "'skin'",
        "'morph'",
        "'method'",
        "'source'",
        "''",
        "'source'",
        "'targets'",
        "'MORPH_TARGET'",
        "'MORPH_WEIGHT'",
        "'input'",
        "\"\"",
        "'source'",
        "''",
        "'bind_shape_matrix'",
        "'source'",
        "'joints'",
        "'vertex_weights'",
        "'input'",
        "'JOINT'",
        "'INV_BIND_MATRIX'",
        "'input'",
        "'v'",
        "'vcount'",
        "'JOINT'",
        "'WEIGHT'",
        "\"\"",
        "\"\"",
        "'id'",
        "'name'",
        "'node'",
        "\"\"",
        "\"\"",
        "\"\"",
        "'/'",
        "\".\"",
        "\"(\"",
        "\".\"",
        "\"(\"",
        "''",
        "'id'",
        "'sid'",
        "'name'",
        "'type'",
        "'layer'",
        "'JOINT'",
        "'NODE'",
        "'node'",
        "'instance_camera'",
        "'instance_controller'",
        "'instance_geometry'",
        "'instance_light'",
        "'instance_node'",
        "'url'",
        "''",
        "'rotate'",
        "'translate'",
        "'scale'",
        "'matrix'",
        "'lookat'",
        "'skew'",
        "'extra'",
        "\"\"",
        "\"\"",
        "'sid'",
        "'matrix'",
        "'rotate'",
        "'translate'",
        "'scale'",
        "'Can not convert Transform of type '",
        "'matrix'",
        "'translate'",
        "'rotate'",
        "'scale'",
        "'X'",
        "'Y'",
        "'Z'",
        "'ANGLE'",
        "'matrix'",
        "'n'",
        "'Incorrect addressing of matrix in transform.'",
        "'translate'",
        "'scale'",
        "'[object Array]'",
        "'X'",
        "'Y'",
        "'Z'",
        "'rotate'",
        "'[object Array]'",
        "'X'",
        "'Y'",
        "'Z'",
        "'ANGLE'",
        "\"\"",
        "'url'",
        "''",
        "'skeleton'",
        "''",
        "'bind_material'",
        "'instance_material'",
        "'extra'",
        "\"\"",
        "\"\"",
        "'symbol'",
        "'target'",
        "''",
        "\"\"",
        "'url'",
        "''",
        "'bind_material'",
        "'instance_material'",
        "\"\"",
        "'id'",
        "'mesh'",
        "'extra'",
        "'source'",
        "'vertices'",
        "'linestrips'",
        "'triangles'",
        "'polygons'",
        "'polylist'",
        "'POSITION'",
        "'TEXCOORD'",
        "'VERTEX'",
        "'NORMAL'",
        "'TEXCOORD'",
        "'COLOR'",
        "'dropped face with vcount '",
        "' for geometry with id: '",
        "\"\"",
        "'POSITION'",
        "'material'",
        "'count'",
        "'input'",
        "'vcount'",
        "'p'",
        "'ph'",
        "'polygon holes not yet supported!'",
        "\"\"",
        "'source'",
        "'count'",
        "'stride'",
        "'param'",
        "'name'",
        "'name'",
        "'type'",
        "'type'",
        "'id'",
        "'input'",
        "\"\"",
        "\"\"",
        "'semantic'",
        "'source'",
        "''",
        "'set'",
        "'offset'",
        "'TEXCOORD'",
        "'id'",
        "'bool_array'",
        "'float_array'",
        "'int_array'",
        "'IDREF_array'",
        "'Name_array'",
        "'technique_common'",
        "'accessor'",
        "'IDREF'",
        "'Name'",
        "'name'",
        "'float'",
        "'float4x4'",
        "'ColladaLoader: Source: Read dont know how to read '",
        "'.'",
        "\"\"",
        "\"\"",
        "'id'",
        "'name'",
        "'instance_effect'",
        "'transparent'",
        "'opaque'",
        "'color'",
        "'texture'",
        "'texture'",
        "'texcoord'",
        "'extra'",
        "'technique'",
        "'offsetU'",
        "'offsetV'",
        "'repeatU'",
        "'repeatV'",
        "'wrapU'",
        "'wrapV'",
        "'TRUE'",
        "'emission'",
        "'diffuse'",
        "'specular'",
        "'transparent'",
        "'bump'",
        "'bumptype'",
        "\"heightfield\"",
        "'bump'",
        "\"normalmap\"",
        "'normal'",
        "\"Shader.prototype.parse: Invalid value for attribute 'bumptype' (\"",
        "\") - valid bumptypes are 'HEIGHTFIELD' and 'NORMALMAP' - defaulting to 'HEIGHTFIELD'\"",
        "'bump'",
        "\"Shader.prototype.parse: Attribute 'bumptype' missing from bump node - defaulting to 'HEIGHTFIELD'\"",
        "'bump'",
        "'shininess'",
        "'reflectivity'",
        "'index_of_refraction'",
        "'transparency'",
        "'float'",
        "'transparency'",
        "'transparent'",
        "'transparent'",
        "'transparent'",
        "'opacity'",
        "'diffuse'",
        "'map'",
        "'ambient'",
        "'lightMap'",
        "'specular'",
        "'specularMap'",
        "'emission'",
        "'emissionMap'",
        "'bump'",
        "'bumpMap'",
        "'normal'",
        "'normalMap'",
        "'ambient'",
        "'emission'",
        "'diffuse'",
        "'specular'",
        "'bump'",
        "'normal'",
        "'emission'",
        "'emissive'",
        "'diffuse'",
        "'emission'",
        "'emissive'",
        "'shininess'",
        "'reflectivity'",
        "'envMap'",
        "'combine'",
        "'index_of_refraction'",
        "'refractionRatio'",
        "'envMap'",
        "'transparency'",
        "'shading'",
        "'side'",
        "'constant'",
        "'phong'",
        "'blinn'",
        "'lambert'",
        "'init_from'",
        "'format'",
        "\"unhandled Surface prop: \"",
        "'source'",
        "'minfilter'",
        "'magfilter'",
        "'mipfilter'",
        "'wrap_s'",
        "'wrap_t'",
        "\"unhandled Sampler2D prop: \"",
        "\"\"",
        "\"\"",
        "'id'",
        "'name'",
        "'profile_COMMON'",
        "'sid'",
        "'surface'",
        "'sampler2D'",
        "'extra'",
        "'profile_COMMON'",
        "'technique'",
        "'newparam'",
        "'image'",
        "'extra'",
        "'constant'",
        "'lambert'",
        "'blinn'",
        "'phong'",
        "'extra'",
        "'technique'",
        "'bump'",
        "\"\"",
        "'url'",
        "''",
        "\"\"",
        "\"\"",
        "'id'",
        "'name'",
        "'animation'",
        "'source'",
        "'sampler'",
        "'channel'",
        "\"\"",
        "\"\"",
        "'source'",
        "''",
        "'target'",
        "'/'",
        "\".\"",
        "\"(\"",
        "\".\"",
        "\"(\"",
        "''",
        "\"\"",
        "'id'",
        "'input'",
        "'INPUT'",
        "'OUTPUT'",
        "'INTERPOLATION'",
        "'IN_TANGENT'",
        "'OUT_TANGENT'",
        "'matrix'",
        "'rotate'",
        "'translate'",
        "'scale'",
        "'matrix'",
        "'translate'",
        "'matrix'",
        "\"\"",
        "\"\"",
        "\"\"",
        "'id'",
        "'name'",
        "'optics'",
        "'technique_common'",
        "'perspective'",
        "'yfov'",
        "'xfov'",
        "'znear'",
        "'zfar'",
        "'aspect_ratio'",
        "'orthographic'",
        "'xmag'",
        "'ymag'",
        "'znear'",
        "'zfar'",
        "'aspect_ratio'",
        "\"\"",
        "'url'",
        "''",
        "\"\"",
        "\"\"",
        "\"\"",
        "'id'",
        "'name'",
        "'technique_common'",
        "'technique'",
        "'directional'",
        "'point'",
        "'spot'",
        "'ambient'",
        "'color'",
        "'falloff_angle'",
        "'quadratic_attenuation'",
        "'profile'",
        "'intensity'",
        "\"\"",
        "'url'",
        "''",
        "''",
        "''",
        "'id'",
        "'name'",
        "'technique_common'",
        "'joint'",
        "'link'",
        "''",
        "''",
        "''",
        "'sid'",
        "'name'",
        "''",
        "'axis'",
        "'limits min'",
        "'limits min'",
        "'limits max'",
        "'limits max'",
        "'prismatic'",
        "'revolute'",
        "''",
        "''",
        "'sid'",
        "'name'",
        "'attachment_full'",
        "'rotate'",
        "'translate'",
        "'matrix'",
        "''",
        "'joint'",
        "'/'",
        "'link'",
        "'rotate'",
        "'translate'",
        "'matrix'",
        "'id'",
        "\"dae\"",
        "\"http://www.collada.org/2005/11/COLLADASchema\"",
        "'true'",
        "'1'",
        "\"\"",
        "\"\"",
        "'0.'",
        "'0'",
        "'.'",
        "\"0\"",
        "'0'",
        "'.'",
        "'extra double_sided'",
        "'X'",
        "'Y'",
        "'XtoY'",
        "'XtoZ'",
        "'Y'",
        "'X'",
        "'YtoX'",
        "'YtoZ'",
        "'Z'",
        "'X'",
        "'ZtoX'",
        "'ZtoY'",
        "'XtoY'",
        "'XtoZ'",
        "'YtoX'",
        "'YtoZ'",
        "'ZtoX'",
        "'ZtoY'",
        "'X'",
        "'XtoY'",
        "'Y'",
        "'YtoZ'",
        "'YtoX'",
        "'Z'",
        "'ZtoY'",
        "'X'",
        "'Y'",
        "'Z'",
        "'X'",
        "'XtoY'",
        "'XtoZ'",
        "'YtoX'",
        "'Y'",
        "'ZtoX'",
        "'Z'",
        "'Y'",
        "'XtoY'",
        "'YtoX'",
        "'ZtoX'",
        "'X'",
        "'XtoZ'",
        "'YtoZ'",
        "'ZtoY'",
        "'Z'",
        "'Z'",
        "'XtoZ'",
        "'X'",
        "'YtoZ'",
        "'ZtoX'",
        "'ZtoY'",
        "'Y'",
        "\"\\n\"",
        "'#'",
        "' '",
        "\"\"",
        "\"newmtl\"",
        "\"ka\"",
        "\"kd\"",
        "\"ks\"",
        "'kd'",
        "'ka'",
        "'ks'",
        "''",
        "'kd'",
        "'color'",
        "'ks'",
        "'specular'",
        "'map_kd'",
        "'map'",
        "'map'",
        "'map'",
        "'ns'",
        "'shininess'",
        "'d'",
        "'opacity'",
        "'transparent'",
        "'Tr'",
        "'opacity'",
        "'transparent'",
        "'map_bump'",
        "'bump'",
        "'bumpMap'",
        "'bumpMap'",
        "'bumpMap'",
        "'bumpMap'",
        "'OBJLoader'",
        "''",
        "''",
        "'\\n'",
        "'#'",
        "\"1\"",
        "\"on\"",
        "\"Unexpected line: \"",
        "'position'",
        "'normal'",
        "'uv'",
        "'OBJLoader'",
        "'74'",
        "'function'",
        "'three'",
        "'undefined'",
        "'undefined'",
        "'name'",
        "'assign'",
        "'use strict'",
        "\"Cannot convert first argument to object\"",
        "'number'",
        "'string'",
        "'THREE.Color: Alpha component of '",
        "' will be ignored.'",
        "'rgb'",
        "'rgba'",
        "'hsl'",
        "'hsla'",
        "'THREE.Color: Unknown color '",
        "'000000'",
        "'rgb('",
        "','",
        "','",
        "')'",
        "'aliceblue'",
        "'antiquewhite'",
        "'aqua'",
        "'aquamarine'",
        "'azure'",
        "'beige'",
        "'bisque'",
        "'black'",
        "'blanchedalmond'",
        "'blue'",
        "'blueviolet'",
        "'brown'",
        "'burlywood'",
        "'cadetblue'",
        "'chartreuse'",
        "'chocolate'",
        "'coral'",
        "'cornflowerblue'",
        "'cornsilk'",
        "'crimson'",
        "'cyan'",
        "'darkblue'",
        "'darkcyan'",
        "'darkgoldenrod'",
        "'darkgray'",
        "'darkgreen'",
        "'darkgrey'",
        "'darkkhaki'",
        "'darkmagenta'",
        "'darkolivegreen'",
        "'darkorange'",
        "'darkorchid'",
        "'darkred'",
        "'darksalmon'",
        "'darkseagreen'",
        "'darkslateblue'",
        "'darkslategray'",
        "'darkslategrey'",
        "'darkturquoise'",
        "'darkviolet'",
        "'deeppink'",
        "'deepskyblue'",
        "'dimgray'",
        "'dimgrey'",
        "'dodgerblue'",
        "'firebrick'",
        "'floralwhite'",
        "'forestgreen'",
        "'fuchsia'",
        "'gainsboro'",
        "'ghostwhite'",
        "'gold'",
        "'goldenrod'",
        "'gray'",
        "'green'",
        "'greenyellow'",
        "'grey'",
        "'honeydew'",
        "'hotpink'",
        "'indianred'",
        "'indigo'",
        "'ivory'",
        "'khaki'",
        "'lavender'",
        "'lavenderblush'",
        "'lawngreen'",
        "'lemonchiffon'",
        "'lightblue'",
        "'lightcoral'",
        "'lightcyan'",
        "'lightgoldenrodyellow'",
        "'lightgray'",
        "'lightgreen'",
        "'lightgrey'",
        "'lightpink'",
        "'lightsalmon'",
        "'lightseagreen'",
        "'lightskyblue'",
        "'lightslategray'",
        "'lightslategrey'",
        "'lightsteelblue'",
        "'lightyellow'",
        "'lime'",
        "'limegreen'",
        "'linen'",
        "'magenta'",
        "'maroon'",
        "'mediumaquamarine'",
        "'mediumblue'",
        "'mediumorchid'",
        "'mediumpurple'",
        "'mediumseagreen'",
        "'mediumslateblue'",
        "'mediumspringgreen'",
        "'mediumturquoise'",
        "'mediumvioletred'",
        "'midnightblue'",
        "'mintcream'",
        "'mistyrose'",
        "'moccasin'",
        "'navajowhite'",
        "'navy'",
        "'oldlace'",
        "'olive'",
        "'olivedrab'",
        "'orange'",
        "'orangered'",
        "'orchid'",
        "'palegoldenrod'",
        "'palegreen'",
        "'paleturquoise'",
        "'palevioletred'",
        "'papayawhip'",
        "'peachpuff'",
        "'peru'",
        "'pink'",
        "'plum'",
        "'powderblue'",
        "'purple'",
        "'red'",
        "'rosybrown'",
        "'royalblue'",
        "'saddlebrown'",
        "'salmon'",
        "'sandybrown'",
        "'seagreen'",
        "'seashell'",
        "'sienna'",
        "'silver'",
        "'skyblue'",
        "'slateblue'",
        "'slategray'",
        "'slategrey'",
        "'snow'",
        "'springgreen'",
        "'steelblue'",
        "'tan'",
        "'teal'",
        "'thistle'",
        "'tomato'",
        "'turquoise'",
        "'violet'",
        "'wheat'",
        "'white'",
        "'whitesmoke'",
        "'yellow'",
        "'yellowgreen'",
        "'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.'",
        "'XYZ'",
        "'YXZ'",
        "'ZXY'",
        "'ZYX'",
        "'YZX'",
        "'XZY'",
        "'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.'",
        "'index is out of range: '",
        "'index is out of range: '",
        "'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.'",
        "'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.'",
        "'index is out of range: '",
        "'index is out of range: '",
        "'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.'",
        "'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.'",
        "'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.'",
        "'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.'",
        "'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.'",
        "'index is out of range: '",
        "'index is out of range: '",
        "'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.'",
        "'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.'",
        "'XYZ'",
        "'YZX'",
        "'ZXY'",
        "'XZY'",
        "'YXZ'",
        "'ZYX'",
        "'XYZ'",
        "'XYZ'",
        "'YXZ'",
        "'ZXY'",
        "'ZYX'",
        "'YZX'",
        "'XZY'",
        "'THREE.Euler: .setFromRotationMatrix() given unsupported order: '",
        "'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.'",
        "\"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\"",
        "'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.'",
        "'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.'",
        "'XYZ'",
        "'YXZ'",
        "'ZXY'",
        "'ZYX'",
        "'YZX'",
        "'XZY'",
        "'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.'",
        "'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.'",
        "\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\"",
        "'0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'",
        "''",
        "'-'",
        "'4'",
        "''",
        "'THREE.Math.random16() has been deprecated. Use Math.random() instead.'",
        "\"call to abstract method\"",
        "'THREE.Raycaster: params.PointCloud has been renamed to params.Points.'",
        "'THREE.Raycaster: Unsupported camera type.'",
        "'THREE.Raycaster.intersectObjects: objects is not an Array.'",
        "'id'",
        "''",
        "'Object3D'",
        "\"THREE.Object3D.add: object can't be added as a child of itself.\"",
        "'added'",
        "\"THREE.Object3D.add: object not an instance of THREE.Object3D.\"",
        "'removed'",
        "'id'",
        "'name'",
        "'Object'",
        "'Object3D.toJSON'",
        "''",
        "'{}'",
        "'THREE.BufferAttribute.copyColorsArray(): color is undefined'",
        "'THREE.BufferAttribute.copyVector2sArray(): vector is undefined'",
        "'THREE.BufferAttribute.copyVector3sArray(): vector is undefined'",
        "'THREE.BufferAttribute.copyVector4sArray(): vector is undefined'",
        "'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.'",
        "'THREE.BufferAttribute: .length has been deprecated. Please use .count.'",
        "'id'",
        "''",
        "'Geometry'",
        "'THREE.Geometry: .computeTangents() has been removed.'",
        "'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.'",
        "'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.'",
        "'_'",
        "'_'",
        "'Geometry'",
        "'Geometry.toJSON'",
        "''",
        "'dispose'",
        "'id'",
        "''",
        "'DirectGeometry'",
        "'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.'",
        "'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.'",
        "'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv '",
        "'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 '",
        "'dispose'",
        "'id'",
        "''",
        "'BufferGeometry'",
        "'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).'",
        "'index'",
        "'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.'",
        "'position'",
        "'color'",
        "'lineDistance'",
        "'position'",
        "'normal'",
        "'color'",
        "'uv'",
        "'uv2'",
        "'skinIndex'",
        "'skinWeight'",
        "'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.'",
        "'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.'",
        "'normal'",
        "'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.'",
        "'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.'",
        "'BufferGeometry'",
        "'BufferGeometry.toJSON'",
        "''",
        "'dispose'",
        "'InstancedBufferGeometry'",
        "'name'",
        "'duration'",
        "'tracks'",
        "'.morphTargetInfluences['",
        "']'",
        "\"  no animation in JSONLoader data\"",
        "'default'",
        "'.morphTargetInfluence['",
        "']'",
        "'.bones['",
        "']'",
        "'.position'",
        "'pos'",
        "'.quaternion'",
        "'rot'",
        "'.scale'",
        "'scl'",
        "'string'",
        "\"Different clips with the same name detected!\"",
        "'string'",
        "'finished'",
        "'finished'",
        "'loop'",
        "\"Different objects with the same UUID \"",
        "\"detected. Clean the caches or recreate your \"",
        "\"infrastructure when reloading scenes...\"",
        "'number'",
        "\"track name is undefined\"",
        "\"no keyframes in track named \"",
        "\"unsupported interpolation for \"",
        "\" keyframe track named \"",
        "\"invalid value size in track\"",
        "\"track is empty\"",
        "'number'",
        "\"time is not a valid number\"",
        "\"out of order keys\"",
        "\"value is not a valid number\"",
        "\"track type undefined, can not parse\"",
        "\"legacy JSON format detected, converting\"",
        "'value'",
        "'name'",
        "'times'",
        "'values'",
        "\"scalar\"",
        "\"double\"",
        "\"float\"",
        "\"number\"",
        "\"integer\"",
        "\"vector\"",
        "\"vector2\"",
        "\"vector3\"",
        "\"vector4\"",
        "\"color\"",
        "\"quaternion\"",
        "\"bool\"",
        "\"boolean\"",
        "\"string\"",
        "\"Unsupported typeName: \"",
        "\"  trying to update node for track: \"",
        "\" but it wasn't found.\"",
        "'materials'",
        "'  can not bind to material as node does not have a material'",
        "'  can not bind to material.materials as node.material does not have a materials array'",
        "'bones'",
        "'  can not bind to bones as node does not have a skeleton'",
        "'  can not bind to objectName of node, undefined'",
        "\"  trying to bind to objectIndex of objectName, but is undefined:\"",
        "\"  trying to update property for track: \"",
        "'.'",
        "\" but it wasn't found.\"",
        "\"morphTargetInfluences\"",
        "'  can not bind to morphTargetInfluences becasuse node does not have a geometry'",
        "'  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets'",
        "\"cannot parse trackName at all: \"",
        "\"can not parse propertyName from trackName: \"",
        "\"\"",
        "\"root\"",
        "\".\"",
        "'quaternion'",
        "'string'",
        "'bool'",
        "'bool'",
        "'number'",
        "'quaternion'",
        "'string'",
        "'vector'",
        "'Audio'",
        "'empty'",
        "'audioNode'",
        "'buffer'",
        "'THREE.Audio: Audio is already playing.'",
        "'THREE.Audio: this Audio has no playback control.'",
        "'THREE.Audio: this Audio has no playback control.'",
        "'THREE.Audio: this Audio has no playback control.'",
        "'THREE.Audio: this Audio has no playback control.'",
        "'THREE.Audio: this Audio has no playback control.'",
        "'THREE.Audio: this Audio has no playback control.'",
        "'GET'",
        "'arraybuffer'",
        "'AudioListener'",
        "'Camera'",
        "'CubeCamera'",
        "'OrthographicCamera'",
        "'PerspectiveCamera'",
        "'StereoCamera'",
        "'Light'",
        "'AmbientLight'",
        "'DirectionalLight'",
        "'HemisphereLight'",
        "'PointLight'",
        "'SpotLight'",
        "'/'",
        "'./'",
        "'/'",
        "'/'",
        "'repeat'",
        "'mirror'",
        "'repeat'",
        "'mirror'",
        "'MeshLambertMaterial'",
        "'DbgColor'",
        "'DbgIndex'",
        "'opticalDensity'",
        "'illumination'",
        "'DbgName'",
        "'blending'",
        "'colorAmbient'",
        "'THREE.Loader.createMaterial: colorAmbient is no longer supported'",
        "'colorDiffuse'",
        "'colorSpecular'",
        "'colorEmissive'",
        "'specularCoef'",
        "'shading'",
        "'basic'",
        "'MeshBasicMaterial'",
        "'phong'",
        "'MeshPhongMaterial'",
        "'mapDiffuse'",
        "'mapDiffuseRepeat'",
        "'mapDiffuseOffset'",
        "'mapDiffuseWrap'",
        "'mapDiffuseAnisotropy'",
        "'mapLight'",
        "'mapLightRepeat'",
        "'mapLightOffset'",
        "'mapLightWrap'",
        "'mapLightAnisotropy'",
        "'mapAO'",
        "'mapAORepeat'",
        "'mapAOOffset'",
        "'mapAOWrap'",
        "'mapAOAnisotropy'",
        "'mapBump'",
        "'mapBumpScale'",
        "'mapBumpRepeat'",
        "'mapBumpOffset'",
        "'mapBumpWrap'",
        "'mapBumpAnisotropy'",
        "'mapNormal'",
        "'mapNormalFactor'",
        "'mapNormalRepeat'",
        "'mapNormalOffset'",
        "'mapNormalWrap'",
        "'mapNormalAnisotropy'",
        "'mapSpecular'",
        "'mapSpecularRepeat'",
        "'mapSpecularOffset'",
        "'mapSpecularWrap'",
        "'mapSpecularAnisotropy'",
        "'mapAlpha'",
        "'mapAlphaRepeat'",
        "'mapAlphaOffset'",
        "'mapAlphaWrap'",
        "'mapAlphaAnisotropy'",
        "'flipSided'",
        "'doubleSided'",
        "'transparency'",
        "'THREE.Loader.createMaterial: transparency has been renamed to opacity'",
        "'depthTest'",
        "'depthWrite'",
        "'colorWrite'",
        "'opacity'",
        "'reflectivity'",
        "'transparent'",
        "'visible'",
        "'wireframe'",
        "'vertexColors'",
        "'face'",
        "'THREE.Loader.createMaterial: Unsupported'",
        "'MeshBasicMaterial'",
        "'MeshPhongMaterial'",
        "'text/plain'",
        "'GET'",
        "'load'",
        "'THREE.XHRLoader: HTTP Status 0 received.'",
        "'progress'",
        "'error'",
        "'img'",
        "'load'",
        "'progress'",
        "'error'",
        "'boolean'",
        "'THREE.JSONLoader: showStatus parameter has been removed from constructor.'",
        "'div'",
        "'THREE.JSONLoader: .statusDomElement has been removed.'",
        "\"string\"",
        "'object'",
        "'THREE.JSONLoader: '",
        "' should be loaded with THREE.ObjectLoader instead.'",
        "'scene'",
        "'THREE.JSONLoader: '",
        "' should be loaded with THREE.SceneLoader instead.'",
        "'When skinning, number of vertices ('",
        "'), skinIndices ('",
        "'), and skinWeights ('",
        "') should match.'",
        "'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.'",
        "'Int8Array'",
        "'Uint8Array'",
        "'Uint8ClampedArray'",
        "'Int16Array'",
        "'Uint16Array'",
        "'Int32Array'",
        "'Uint32Array'",
        "'Float32Array'",
        "'Float64Array'",
        "'THREE.MaterialLoader: Undefined texture'",
        "''",
        "''",
        "'/'",
        "'PlaneGeometry'",
        "'PlaneBufferGeometry'",
        "'BoxGeometry'",
        "'CubeGeometry'",
        "'CircleBufferGeometry'",
        "'CircleGeometry'",
        "'CylinderGeometry'",
        "'SphereGeometry'",
        "'SphereBufferGeometry'",
        "'DodecahedronGeometry'",
        "'IcosahedronGeometry'",
        "'OctahedronGeometry'",
        "'TetrahedronGeometry'",
        "'RingGeometry'",
        "'TorusGeometry'",
        "'TorusKnotGeometry'",
        "'LatheGeometry'",
        "'BufferGeometry'",
        "'Geometry'",
        "'THREE.ObjectLoader: Unsupported geometry type \"'",
        "'\"'",
        "'number'",
        "'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.'",
        "'THREE.ObjectLoader: No \"image\" specified for'",
        "'THREE.ObjectLoader: Undefined image'",
        "'THREE.ObjectLoader: Undefined geometry'",
        "'THREE.ObjectLoader: Undefined material'",
        "'Scene'",
        "'PerspectiveCamera'",
        "'OrthographicCamera'",
        "'AmbientLight'",
        "'DirectionalLight'",
        "'PointLight'",
        "'SpotLight'",
        "'HemisphereLight'",
        "'Mesh'",
        "'LOD'",
        "'Line'",
        "'PointCloud'",
        "'Points'",
        "'Sprite'",
        "'Group'",
        "'LOD'",
        "'uuid'",
        "'arraybuffer'",
        "'arraybuffer'",
        "'id'",
        "''",
        "'Material'",
        "\"THREE.Material: '\"",
        "\"' parameter is undefined.\"",
        "\"THREE.\"",
        "\": '\"",
        "\"' is not a property of this material.\"",
        "'overdraw'",
        "'Material'",
        "'Material.toJSON'",
        "''",
        "'update'",
        "'dispose'",
        "'LineBasicMaterial'",
        "'round'",
        "'round'",
        "'LineDashedMaterial'",
        "'MeshBasicMaterial'",
        "'round'",
        "'round'",
        "'MeshLambertMaterial'",
        "'round'",
        "'round'",
        "'MeshPhongMaterial'",
        "'round'",
        "'round'",
        "'MeshStandardMaterial'",
        "'round'",
        "'round'",
        "'MeshDepthMaterial'",
        "'MeshNormalMaterial'",
        "'MultiMaterial'",
        "'material'",
        "'MaterialExporter'",
        "'PointsMaterial'",
        "'ShaderMaterial'",
        "'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}'",
        "'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}'",
        "'color'",
        "'uv'",
        "'uv2'",
        "'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.'",
        "'RawShaderMaterial'",
        "'SpriteMaterial'",
        "'id'",
        "''",
        "''",
        "'canvas'",
        "'2d'",
        "'image/jpeg'",
        "'image/png'",
        "'Texture'",
        "'Texture.toJSON'",
        "'dispose'",
        "'Group'",
        "'Points'",
        "'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.'",
        "'Line'",
        "'LineSegments'",
        "'Mesh'",
        "'THREE.Mesh.getMorphTargetIndexByName: morph target '",
        "' does not exist. Returning 0.'",
        "'Bone'",
        "'THREE.Skeleton bonInverses is the wrong length.'",
        "'SkinnedMesh'",
        "\"attached\"",
        "\"attached\"",
        "\"detached\"",
        "'THREE.SkinnedMesh unrecognized bindMode: '",
        "'LOD'",
        "'THREE.LOD: .objects has been renamed to .levels.'",
        "'position'",
        "'uv'",
        "'Sprite'",
        "'Scene'",
        "''",
        "''",
        "'alphamap_fragment'",
        "\"#ifdef USE_ALPHAMAP\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\"",
        "'alphamap_pars_fragment'",
        "\"#ifdef USE_ALPHAMAP\\n\tuniform sampler2D alphaMap;\\n#endif\\n\"",
        "'alphatest_fragment'",
        "\"#ifdef ALPHATEST\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\"",
        "'ambient_pars'",
        "\"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\treturn PI * ambientLightColor;\\n}\\n\"",
        "'aomap_fragment'",
        "\"#ifdef USE_AOMAP\\n\treflectedLight.indirectDiffuse *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n#endif\\n\"",
        "'aomap_pars_fragment'",
        "\"#ifdef USE_AOMAP\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n#endif\"",
        "'begin_vertex'",
        "\"\\nvec3 transformed = vec3( position );\\n\"",
        "'beginnormal_vertex'",
        "\"\\nvec3 objectNormal = vec3( normal );\\n\"",
        "'bsdfs'",
        "\"float calcLightAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\tif ( decayExponent > 0.0 ) {\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\t}\\n\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = alpha * alpha;\\n\tfloat gl = dotNL + pow( a2 + ( 1.0 - a2 ) * dotNL * dotNL, 0.5 );\\n\tfloat gv = dotNV + pow( a2 + ( 1.0 - a2 ) * dotNV * dotNV, 0.5 );\\n\treturn 1.0 / ( gl * gv );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\tfloat a2 = alpha * alpha;\\n\tfloat denom = dotNH * dotNH * ( a2 - 1.0 ) + 1.0;\\n\treturn RECIPROCAL_PI * a2 / ( denom * denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat alpha = roughness * roughness;\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_GGX_Smith( alpha, dotNL, dotNV );\\n\tfloat D = D_GGX( alpha, dotNH );\\n\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\tvec4 r = roughness * c0 + c1;\\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_BlinnPhong_Implicit( );\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\treturn ( 2.0 / square( ggxRoughness + 0.0001 ) - 2.0 );\\n}\"",
        "'bumpmap_pars_fragment'",
        "\"#ifdef USE_BUMPMAP\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\tvec2 dHdxy_fwd() {\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\t\treturn vec2( dBx, dBy );\\n\t}\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\t}\\n#endif\\n\"",
        "'color_fragment'",
        "\"#ifdef USE_COLOR\\n\tdiffuseColor.rgb *= vColor;\\n#endif\"",
        "'color_pars_fragment'",
        "\"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\\n\"",
        "'color_pars_vertex'",
        "\"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\"",
        "'color_vertex'",
        "\"#ifdef USE_COLOR\\n\tvColor.xyz = color.xyz;\\n#endif\"",
        "'common'",
        "\"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat square( const in float x ) { return x*x; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nstruct IncidentLight {\\n\tvec3 color;\\n\tvec3 direction;\\n};\\nstruct ReflectedLight {\\n\tvec3 directDiffuse;\\n\tvec3 directSpecular;\\n\tvec3 indirectDiffuse;\\n\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\tvec3 position;\\n\tvec3 normal;\\n\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nvec3 inputToLinear( in vec3 a ) {\\n\t#ifdef GAMMA_INPUT\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\t#else\\n\t\treturn a;\\n\t#endif\\n}\\nvec3 linearToOutput( in vec3 a ) {\\n\t#ifdef GAMMA_OUTPUT\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\t#else\\n\t\treturn a;\\n\t#endif\\n}\\n\"",
        "'defaultnormal_vertex'",
        "\"#ifdef FLIP_SIDED\\n\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\"",
        "'displacementmap_vertex'",
        "\"#ifdef USE_DISPLACEMENTMAP\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\"",
        "'displacementmap_pars_vertex'",
        "\"#ifdef USE_DISPLACEMENTMAP\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n#endif\\n\"",
        "'emissivemap_fragment'",
        "\"#ifdef USE_EMISSIVEMAP\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n#endif\\n\"",
        "'emissivemap_pars_fragment'",
        "\"#ifdef USE_EMISSIVEMAP\\n\tuniform sampler2D emissiveMap;\\n#endif\\n\"",
        "'envmap_fragment'",
        "\"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#else\\n\t\tvec3 reflectVec = vReflect;\\n\t#endif\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\t#endif\\n#endif\\n\"",
        "'envmap_pars_fragment'",
        "\"#if defined( USE_ENVMAP ) || defined( STANDARD )\\n\tuniform float reflectivity;\\n\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( STANDARD )\\n\t\tuniform float refractionRatio;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t#endif\\n#endif\\n\"",
        "'envmap_pars_vertex'",
        "\"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\\n\tvarying vec3 vReflect;\\n\tuniform float refractionRatio;\\n#endif\\n\"",
        "'envmap_vertex'",
        "\"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\t#else\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t#endif\\n#endif\\n\"",
        "'fog_fragment'",
        "\"#ifdef USE_FOG\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\t#else\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\t#endif\\n\t#ifdef FOG_EXP2\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\t#else\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n#endif\"",
        "'fog_pars_fragment'",
        "\"#ifdef USE_FOG\\n\tuniform vec3 fogColor;\\n\t#ifdef FOG_EXP2\\n\t\tuniform float fogDensity;\\n\t#else\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n#endif\"",
        "'lightmap_fragment'",
        "\"#ifdef USE_LIGHTMAP\\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\"",
        "'lightmap_pars_fragment'",
        "\"#ifdef USE_LIGHTMAP\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n#endif\"",
        "'lights_lambert_vertex'",
        "\"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tdirectLight = getPointDirectLight( pointLights[ i ], geometry );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tdirectLight = getSpotDirectLight( spotLights[ i ], geometry );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectLight = getDirectionalDirectLight( directionalLights[ i ], geometry );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\t\t#endif\\n\t}\\n#endif\\n\"",
        "'lights_pars'",
        "\"#if NUM_DIR_LIGHTS > 0\\n\tstruct DirectionalLight {\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\tIncidentLight getDirectionalDirectLight( const in DirectionalLight directionalLight, const in GeometricContext geometry ) {\\n\t\tIncidentLight directLight;\\n\t\tdirectLight.color = directionalLight.color;\\n\t\tdirectLight.direction = directionalLight.direction;\\n\t\treturn directLight;\\n\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\tstruct PointLight {\\n\t\tvec3 position;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\tIncidentLight getPointDirectLight( const in PointLight pointLight, const in GeometricContext geometry ) {\\n\t\tIncidentLight directLight;\\n\t\tvec3 lVector = pointLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tdirectLight.color = pointLight.color;\\n\t\tdirectLight.color *= calcLightAttenuation( length( lVector ), pointLight.distance, pointLight.decay );\\n\t\treturn directLight;\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tstruct SpotLight {\\n\t\tvec3 position;\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tfloat angleCos;\\n\t\tfloat exponent;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\tIncidentLight getSpotDirectLight( const in SpotLight spotLight, const in GeometricContext geometry ) {\\n\t\tIncidentLight directLight;\\n\t\tvec3 lVector = spotLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat spotEffect = dot( directLight.direction, spotLight.direction );\\n\t\tif ( spotEffect > spotLight.angleCos ) {\\n\t\t\tfloat spotEffect = dot( spotLight.direction, directLight.direction );\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLight.exponent ) );\\n\t\t\tdirectLight.color = spotLight.color;\\n\t\t\tdirectLight.color *= ( spotEffect * calcLightAttenuation( length( lVector ), spotLight.distance, spotLight.decay ) );\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t}\\n\t\treturn directLight;\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tstruct HemisphereLight {\\n\t\tvec3 direction;\\n\t\tvec3 skyColor;\\n\t\tvec3 groundColor;\\n\t};\\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\t\treturn PI * mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t\t#else\\n\t\t\tfloat flipNormal = 1.0;\\n\t\t#endif\\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#endif\\n\t\t#else\\n\t\t\tvec3 envMapColor = vec3( 0.0 );\\n\t\t#endif\\n\t\tenvMapColor.rgb = inputToLinear( envMapColor.rgb );\\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\\n\t}\\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( square( blinnShininessExponent ) + 1.0 );\\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\t}\\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\t\t#endif\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t\t#else\\n\t\t\tfloat flipNormal = 1.0;\\n\t\t#endif\\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#endif\\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\t\tvec2 sampleUV;\\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#endif\\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#endif\\n\t\t#endif\\n\t\tenvMapColor.rgb = inputToLinear( envMapColor.rgb );\\n\t\treturn envMapColor.rgb * envMapIntensity;\\n\t}\\n#endif\\n\"",
        "'lights_phong_fragment'",
        "\"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\"",
        "'lights_phong_pars_fragment'",
        "\"#ifdef USE_ENVMAP\\n\tvarying vec3 vWorldPosition;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\tvec3\tdiffuseColor;\\n\tvec3\tspecularColor;\\n\tfloat\tspecularShininess;\\n\tfloat\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * PI * directLight.color;\\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\t(0)\\n\"",
        "'lights_phong_pars_vertex'",
        "\"#ifdef USE_ENVMAP\\n\tvarying vec3 vWorldPosition;\\n#endif\\n\"",
        "'lights_phong_vertex'",
        "\"#ifdef USE_ENVMAP\\n\tvWorldPosition = worldPosition.xyz;\\n#endif\\n\"",
        "'lights_standard_fragment'",
        "\"StandardMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\nmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\"",
        "'lights_standard_pars_fragment'",
        "\"struct StandardMaterial {\\n\tvec3\tdiffuseColor;\\n\tfloat\tspecularRoughness;\\n\tvec3\tspecularColor;\\n};\\nvoid RE_Direct_Standard( const in IncidentLight directLight, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * PI * directLight.color;\\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n}\\nvoid RE_IndirectDiffuse_Standard( const in vec3 irradiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Standard( const in vec3 radiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_Standard\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Standard\\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Standard\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n\"",
        "'lights_template'",
        "\"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tdirectLight = getPointDirectLight( pointLight, geometry );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tdirectLight = getSpotDirectLight( spotLight, geometry );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tdirectLight = getDirectionalDirectLight( directionalLight, geometry );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\t#ifdef USE_LIGHTMAP\\n\t\tirradiance += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\t#endif\\n\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t}\\n\t#endif\\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\tRE_IndirectSpecular( radiance, geometry, material, reflectedLight );\\n#endif\\n\"",
        "'linear_to_gamma_fragment'",
        "\"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\"",
        "'logdepthbuf_fragment'",
        "\"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\"",
        "'logdepthbuf_pars_fragment'",
        "\"#ifdef USE_LOGDEPTHBUF\\n\tuniform float logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n#endif\\n\"",
        "'logdepthbuf_pars_vertex'",
        "\"#ifdef USE_LOGDEPTHBUF\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n\tuniform float logDepthBufFC;\\n#endif\"",
        "'logdepthbuf_vertex'",
        "\"#ifdef USE_LOGDEPTHBUF\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\t#else\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\t#endif\\n#endif\\n\"",
        "'map_fragment'",
        "\"#ifdef USE_MAP\\n\tvec4 texelColor = texture2D( map, vUv );\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\tdiffuseColor *= texelColor;\\n#endif\\n\"",
        "'map_pars_fragment'",
        "\"#ifdef USE_MAP\\n\tuniform sampler2D map;\\n#endif\"",
        "'map_particle_fragment'",
        "\"#ifdef USE_MAP\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n#endif\\n\"",
        "'map_particle_pars_fragment'",
        "\"#ifdef USE_MAP\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n#endif\\n\"",
        "'metalnessmap_fragment'",
        "\"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\"",
        "'metalnessmap_pars_fragment'",
        "\"#ifdef USE_METALNESSMAP\\n\tuniform sampler2D metalnessMap;\\n#endif\"",
        "'morphnormal_vertex'",
        "\"#ifdef USE_MORPHNORMALS\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\"",
        "'morphtarget_pars_vertex'",
        "\"#ifdef USE_MORPHTARGETS\\n\t#ifndef USE_MORPHNORMALS\\n\tuniform float morphTargetInfluences[ 8 ];\\n\t#else\\n\tuniform float morphTargetInfluences[ 4 ];\\n\t#endif\\n#endif\"",
        "'morphtarget_vertex'",
        "\"#ifdef USE_MORPHTARGETS\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\t#ifndef USE_MORPHNORMALS\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\t#endif\\n#endif\\n\"",
        "'normal_fragment'",
        "\"#ifdef FLAT_SHADED\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\tvec3 normal = normalize( vNormal );\\n\t#ifdef DOUBLE_SIDED\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\t#endif\\n#endif\\n#ifdef USE_NORMALMAP\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\"",
        "'normalmap_pars_fragment'",
        "\"#ifdef USE_NORMALMAP\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\t}\\n#endif\\n\"",
        "'project_vertex'",
        "\"#ifdef USE_SKINNING\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\"",
        "'roughnessmap_fragment'",
        "\"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\troughnessFactor *= texelRoughness.r;\\n#endif\\n\"",
        "'roughnessmap_pars_fragment'",
        "\"#ifdef USE_ROUGHNESSMAP\\n\tuniform sampler2D roughnessMap;\\n#endif\"",
        "'shadowmap_pars_fragment'",
        "\"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\treturn dot( rgba_depth, bit_shift );\\n\t}\\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\t\treturn step( compare, unpackDepth( texture2D( depths, uv ) ) );\\n\t}\\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\t\tvec2 f = fract( uv * size + 0.5 );\\n\t\tfloat a = mix( lb, lt, f.y );\\n\t\tfloat b = mix( rb, rt, f.y );\\n\t\tfloat c = mix( a, b, f.x );\\n\t\treturn c;\\n\t}\\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tshadowCoord.xyz /= shadowCoord.w;\\n\t\tshadowCoord.z += shadowBias;\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\t\tbool frustumTest = all( frustumTestVec );\\n\t\tif ( frustumTest ) {\\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\t\t#endif\\n\t\t}\\n\t\treturn 1.0;\\n\t}\\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\t\tvec3 absV = abs( v );\\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\t\tabsV *= scaleToCube;\\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\t\tvec2 planar = v.xy;\\n\t\tfloat almostATexel = 1.5 * texelSizeY;\\n\t\tfloat almostOne = 1.0 - almostATexel;\\n\t\tif ( absV.z >= almostOne ) {\\n\t\t\tif ( v.z > 0.0 )\\n\t\t\t\tplanar.x = 4.0 - v.x;\\n\t\t} else if ( absV.x >= almostOne ) {\\n\t\t\tfloat signX = sign( v.x );\\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\\n\t\t} else if ( absV.y >= almostOne ) {\\n\t\t\tfloat signY = sign( v.y );\\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\t\t\tplanar.y = v.z * signY - 2.0;\\n\t\t}\\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\t}\\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\tvec3 lightToPosition = shadowCoord.xyz;\\n\t\tvec3 bd3D = normalize( lightToPosition );\\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec3 offset = vec3( - 1, 0, 1 ) * shadowRadius * 2.0 * texelSize.y;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.zzz, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.zxz, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxz, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xzz, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.zzx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.zxx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xzx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.zzy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.zxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xzy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.zyz, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyz, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.zyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yzz, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxz, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yzx, texelSize.y ), dp )\\n\t\t\t) * ( 1.0 / 21.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\t\t#endif\\n\t}\\n#endif\\n\"",
        "'shadowmap_pars_vertex'",
        "\"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n#endif\\n\"",
        "'shadowmap_vertex'",
        "\"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n#endif\\n\"",
        "'shadowmask_pars_fragment'",
        "\"float getShadowMask() {\\n\tfloat shadow = 1.0;\\n\t#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#endif\\n\treturn shadow;\\n}\\n\"",
        "'skinbase_vertex'",
        "\"#ifdef USE_SKINNING\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\"",
        "'skinning_pars_vertex'",
        "\"#ifdef USE_SKINNING\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\t#ifdef BONE_TEXTURE\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\t\t\ty = dy * ( y + 0.5 );\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\t\t\treturn bone;\\n\t\t}\\n\t#else\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\t\t}\\n\t#endif\\n#endif\\n\"",
        "'skinning_vertex'",
        "\"#ifdef USE_SKINNING\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\"",
        "'skinnormal_vertex'",
        "\"#ifdef USE_SKINNING\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\"",
        "'specularmap_fragment'",
        "\"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n#else\\n\tspecularStrength = 1.0;\\n#endif\"",
        "'specularmap_pars_fragment'",
        "\"#ifdef USE_SPECULARMAP\\n\tuniform sampler2D specularMap;\\n#endif\"",
        "'uv2_pars_fragment'",
        "\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvarying vec2 vUv2;\\n#endif\"",
        "'uv2_pars_vertex'",
        "\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n#endif\"",
        "'uv2_vertex'",
        "\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvUv2 = uv2;\\n#endif\"",
        "'uv_pars_fragment'",
        "\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n#endif\"",
        "'uv_pars_vertex'",
        "\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n#endif\\n\"",
        "'uv_vertex'",
        "\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\"",
        "'worldpos_vertex'",
        "\"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( STANDARD ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\t#ifdef USE_SKINNING\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\t#else\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\t#endif\\n#endif\\n\"",
        "\"diffuse\"",
        "\"c\"",
        "\"opacity\"",
        "\"f\"",
        "\"map\"",
        "\"t\"",
        "\"offsetRepeat\"",
        "\"v4\"",
        "\"specularMap\"",
        "\"t\"",
        "\"alphaMap\"",
        "\"t\"",
        "\"envMap\"",
        "\"t\"",
        "\"flipEnvMap\"",
        "\"f\"",
        "\"reflectivity\"",
        "\"f\"",
        "\"refractionRatio\"",
        "\"f\"",
        "\"aoMap\"",
        "\"t\"",
        "\"aoMapIntensity\"",
        "\"f\"",
        "\"lightMap\"",
        "\"t\"",
        "\"lightMapIntensity\"",
        "\"f\"",
        "\"emissiveMap\"",
        "\"t\"",
        "\"bumpMap\"",
        "\"t\"",
        "\"bumpScale\"",
        "\"f\"",
        "\"normalMap\"",
        "\"t\"",
        "\"normalScale\"",
        "\"v2\"",
        "\"displacementMap\"",
        "\"t\"",
        "\"displacementScale\"",
        "\"f\"",
        "\"displacementBias\"",
        "\"f\"",
        "\"roughnessMap\"",
        "\"t\"",
        "\"metalnessMap\"",
        "\"t\"",
        "\"fogDensity\"",
        "\"f\"",
        "\"fogNear\"",
        "\"f\"",
        "\"fogFar\"",
        "\"f\"",
        "\"fogColor\"",
        "\"c\"",
        "\"ambientLightColor\"",
        "\"fv\"",
        "\"directionalLights\"",
        "\"sa\"",
        "\"direction\"",
        "\"v3\"",
        "\"color\"",
        "\"c\"",
        "\"shadow\"",
        "\"i\"",
        "\"shadowBias\"",
        "\"f\"",
        "\"shadowRadius\"",
        "\"f\"",
        "\"shadowMapSize\"",
        "\"v2\"",
        "\"directionalShadowMap\"",
        "\"tv\"",
        "\"directionalShadowMatrix\"",
        "\"m4v\"",
        "\"spotLights\"",
        "\"sa\"",
        "\"color\"",
        "\"c\"",
        "\"position\"",
        "\"v3\"",
        "\"direction\"",
        "\"v3\"",
        "\"distance\"",
        "\"f\"",
        "\"angleCos\"",
        "\"f\"",
        "\"exponent\"",
        "\"f\"",
        "\"decay\"",
        "\"f\"",
        "\"shadow\"",
        "\"i\"",
        "\"shadowBias\"",
        "\"f\"",
        "\"shadowRadius\"",
        "\"f\"",
        "\"shadowMapSize\"",
        "\"v2\"",
        "\"spotShadowMap\"",
        "\"tv\"",
        "\"spotShadowMatrix\"",
        "\"m4v\"",
        "\"pointLights\"",
        "\"sa\"",
        "\"color\"",
        "\"c\"",
        "\"position\"",
        "\"v3\"",
        "\"decay\"",
        "\"f\"",
        "\"distance\"",
        "\"f\"",
        "\"shadow\"",
        "\"i\"",
        "\"shadowBias\"",
        "\"f\"",
        "\"shadowRadius\"",
        "\"f\"",
        "\"shadowMapSize\"",
        "\"v2\"",
        "\"pointShadowMap\"",
        "\"tv\"",
        "\"pointShadowMatrix\"",
        "\"m4v\"",
        "\"hemisphereLights\"",
        "\"sa\"",
        "\"direction\"",
        "\"v3\"",
        "\"skyColor\"",
        "\"c\"",
        "\"groundColor\"",
        "\"c\"",
        "\"diffuse\"",
        "\"c\"",
        "\"opacity\"",
        "\"f\"",
        "\"size\"",
        "\"f\"",
        "\"scale\"",
        "\"f\"",
        "\"map\"",
        "\"t\"",
        "\"offsetRepeat\"",
        "\"v4\"",
        "'basic'",
        "\"common\"",
        "\"aomap\"",
        "\"fog\"",
        "\"common\"",
        "\"uv_pars_vertex\"",
        "\"uv2_pars_vertex\"",
        "\"envmap_pars_vertex\"",
        "\"color_pars_vertex\"",
        "\"morphtarget_pars_vertex\"",
        "\"skinning_pars_vertex\"",
        "\"shadowmap_pars_vertex\"",
        "\"logdepthbuf_pars_vertex\"",
        "\"void main() {\"",
        "\"uv_vertex\"",
        "\"uv2_vertex\"",
        "\"color_vertex\"",
        "\"skinbase_vertex\"",
        "\"\t#ifdef USE_ENVMAP\"",
        "\"beginnormal_vertex\"",
        "\"morphnormal_vertex\"",
        "\"skinnormal_vertex\"",
        "\"defaultnormal_vertex\"",
        "\"\t#endif\"",
        "\"begin_vertex\"",
        "\"morphtarget_vertex\"",
        "\"skinning_vertex\"",
        "\"project_vertex\"",
        "\"logdepthbuf_vertex\"",
        "\"worldpos_vertex\"",
        "\"envmap_vertex\"",
        "\"shadowmap_vertex\"",
        "\"}\"",
        "\"\\n\"",
        "\"uniform vec3 diffuse;\"",
        "\"uniform float opacity;\"",
        "\"#ifndef FLAT_SHADED\"",
        "\"\tvarying vec3 vNormal;\"",
        "\"#endif\"",
        "\"common\"",
        "\"color_pars_fragment\"",
        "\"uv_pars_fragment\"",
        "\"uv2_pars_fragment\"",
        "\"map_pars_fragment\"",
        "\"alphamap_pars_fragment\"",
        "\"aomap_pars_fragment\"",
        "\"envmap_pars_fragment\"",
        "\"fog_pars_fragment\"",
        "\"shadowmap_pars_fragment\"",
        "\"specularmap_pars_fragment\"",
        "\"logdepthbuf_pars_fragment\"",
        "\"void main() {\"",
        "\"\tvec4 diffuseColor = vec4( diffuse, opacity );\"",
        "\"logdepthbuf_fragment\"",
        "\"map_fragment\"",
        "\"color_fragment\"",
        "\"alphamap_fragment\"",
        "\"alphatest_fragment\"",
        "\"specularmap_fragment\"",
        "\"\tReflectedLight reflectedLight;\"",
        "\"\treflectedLight.directDiffuse = vec3( 0.0 );\"",
        "\"\treflectedLight.directSpecular = vec3( 0.0 );\"",
        "\"\treflectedLight.indirectDiffuse = diffuseColor.rgb;\"",
        "\"\treflectedLight.indirectSpecular = vec3( 0.0 );\"",
        "\"aomap_fragment\"",
        "\"\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\"",
        "\"envmap_fragment\"",
        "\"linear_to_gamma_fragment\"",
        "\"fog_fragment\"",
        "\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\"",
        "\"}\"",
        "\"\\n\"",
        "'lambert'",
        "\"common\"",
        "\"aomap\"",
        "\"lightmap\"",
        "\"emissivemap\"",
        "\"fog\"",
        "\"ambient\"",
        "\"lights\"",
        "\"emissive\"",
        "\"c\"",
        "\"#define LAMBERT\"",
        "\"varying vec3 vLightFront;\"",
        "\"#ifdef DOUBLE_SIDED\"",
        "\"\tvarying vec3 vLightBack;\"",
        "\"#endif\"",
        "\"common\"",
        "\"uv_pars_vertex\"",
        "\"uv2_pars_vertex\"",
        "\"envmap_pars_vertex\"",
        "\"bsdfs\"",
        "\"lights_pars\"",
        "\"color_pars_vertex\"",
        "\"morphtarget_pars_vertex\"",
        "\"skinning_pars_vertex\"",
        "\"shadowmap_pars_vertex\"",
        "\"logdepthbuf_pars_vertex\"",
        "\"void main() {\"",
        "\"uv_vertex\"",
        "\"uv2_vertex\"",
        "\"color_vertex\"",
        "\"beginnormal_vertex\"",
        "\"morphnormal_vertex\"",
        "\"skinbase_vertex\"",
        "\"skinnormal_vertex\"",
        "\"defaultnormal_vertex\"",
        "\"begin_vertex\"",
        "\"morphtarget_vertex\"",
        "\"skinning_vertex\"",
        "\"project_vertex\"",
        "\"logdepthbuf_vertex\"",
        "\"worldpos_vertex\"",
        "\"envmap_vertex\"",
        "\"lights_lambert_vertex\"",
        "\"shadowmap_vertex\"",
        "\"}\"",
        "\"\\n\"",
        "\"uniform vec3 diffuse;\"",
        "\"uniform vec3 emissive;\"",
        "\"uniform float opacity;\"",
        "\"varying vec3 vLightFront;\"",
        "\"#ifdef DOUBLE_SIDED\"",
        "\"\tvarying vec3 vLightBack;\"",
        "\"#endif\"",
        "\"common\"",
        "\"color_pars_fragment\"",
        "\"uv_pars_fragment\"",
        "\"uv2_pars_fragment\"",
        "\"map_pars_fragment\"",
        "\"alphamap_pars_fragment\"",
        "\"aomap_pars_fragment\"",
        "\"lightmap_pars_fragment\"",
        "\"emissivemap_pars_fragment\"",
        "\"envmap_pars_fragment\"",
        "\"bsdfs\"",
        "\"ambient_pars\"",
        "\"lights_pars\"",
        "\"fog_pars_fragment\"",
        "\"shadowmap_pars_fragment\"",
        "\"shadowmask_pars_fragment\"",
        "\"specularmap_pars_fragment\"",
        "\"logdepthbuf_pars_fragment\"",
        "\"void main() {\"",
        "\"\tvec4 diffuseColor = vec4( diffuse, opacity );\"",
        "\"\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\"",
        "\"\tvec3 totalEmissiveLight = emissive;\"",
        "\"logdepthbuf_fragment\"",
        "\"map_fragment\"",
        "\"color_fragment\"",
        "\"alphamap_fragment\"",
        "\"alphatest_fragment\"",
        "\"specularmap_fragment\"",
        "\"emissivemap_fragment\"",
        "\"\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\"",
        "\"lightmap_fragment\"",
        "\"\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\"",
        "\"\t#ifdef DOUBLE_SIDED\"",
        "\"\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\"",
        "\"\t#else\"",
        "\"\t\treflectedLight.directDiffuse = vLightFront;\"",
        "\"\t#endif\"",
        "\"\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\"",
        "\"aomap_fragment\"",
        "\"\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveLight;\"",
        "\"envmap_fragment\"",
        "\"linear_to_gamma_fragment\"",
        "\"fog_fragment\"",
        "\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\"",
        "\"}\"",
        "\"\\n\"",
        "'phong'",
        "\"common\"",
        "\"aomap\"",
        "\"lightmap\"",
        "\"emissivemap\"",
        "\"bumpmap\"",
        "\"normalmap\"",
        "\"displacementmap\"",
        "\"fog\"",
        "\"ambient\"",
        "\"lights\"",
        "\"emissive\"",
        "\"c\"",
        "\"specular\"",
        "\"c\"",
        "\"shininess\"",
        "\"f\"",
        "\"#define PHONG\"",
        "\"varying vec3 vViewPosition;\"",
        "\"#ifndef FLAT_SHADED\"",
        "\"\tvarying vec3 vNormal;\"",
        "\"#endif\"",
        "\"common\"",
        "\"uv_pars_vertex\"",
        "\"uv2_pars_vertex\"",
        "\"displacementmap_pars_vertex\"",
        "\"envmap_pars_vertex\"",
        "\"lights_phong_pars_vertex\"",
        "\"color_pars_vertex\"",
        "\"morphtarget_pars_vertex\"",
        "\"skinning_pars_vertex\"",
        "\"shadowmap_pars_vertex\"",
        "\"logdepthbuf_pars_vertex\"",
        "\"void main() {\"",
        "\"uv_vertex\"",
        "\"uv2_vertex\"",
        "\"color_vertex\"",
        "\"beginnormal_vertex\"",
        "\"morphnormal_vertex\"",
        "\"skinbase_vertex\"",
        "\"skinnormal_vertex\"",
        "\"defaultnormal_vertex\"",
        "\"#ifndef FLAT_SHADED\"",
        "\"\tvNormal = normalize( transformedNormal );\"",
        "\"#endif\"",
        "\"begin_vertex\"",
        "\"displacementmap_vertex\"",
        "\"morphtarget_vertex\"",
        "\"skinning_vertex\"",
        "\"project_vertex\"",
        "\"logdepthbuf_vertex\"",
        "\"\tvViewPosition = - mvPosition.xyz;\"",
        "\"worldpos_vertex\"",
        "\"envmap_vertex\"",
        "\"lights_phong_vertex\"",
        "\"shadowmap_vertex\"",
        "\"}\"",
        "\"\\n\"",
        "\"#define PHONG\"",
        "\"uniform vec3 diffuse;\"",
        "\"uniform vec3 emissive;\"",
        "\"uniform vec3 specular;\"",
        "\"uniform float shininess;\"",
        "\"uniform float opacity;\"",
        "\"common\"",
        "\"color_pars_fragment\"",
        "\"uv_pars_fragment\"",
        "\"uv2_pars_fragment\"",
        "\"map_pars_fragment\"",
        "\"alphamap_pars_fragment\"",
        "\"aomap_pars_fragment\"",
        "\"lightmap_pars_fragment\"",
        "\"emissivemap_pars_fragment\"",
        "\"envmap_pars_fragment\"",
        "\"fog_pars_fragment\"",
        "\"bsdfs\"",
        "\"ambient_pars\"",
        "\"lights_pars\"",
        "\"lights_phong_pars_fragment\"",
        "\"shadowmap_pars_fragment\"",
        "\"bumpmap_pars_fragment\"",
        "\"normalmap_pars_fragment\"",
        "\"specularmap_pars_fragment\"",
        "\"logdepthbuf_pars_fragment\"",
        "\"void main() {\"",
        "\"\tvec4 diffuseColor = vec4( diffuse, opacity );\"",
        "\"\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\"",
        "\"\tvec3 totalEmissiveLight = emissive;\"",
        "\"logdepthbuf_fragment\"",
        "\"map_fragment\"",
        "\"color_fragment\"",
        "\"alphamap_fragment\"",
        "\"alphatest_fragment\"",
        "\"specularmap_fragment\"",
        "\"normal_fragment\"",
        "\"emissivemap_fragment\"",
        "\"lights_phong_fragment\"",
        "\"lights_template\"",
        "\"aomap_fragment\"",
        "\"vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveLight;\"",
        "\"envmap_fragment\"",
        "\"linear_to_gamma_fragment\"",
        "\"fog_fragment\"",
        "\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\"",
        "\"}\"",
        "\"\\n\"",
        "'standard'",
        "\"common\"",
        "\"aomap\"",
        "\"lightmap\"",
        "\"emissivemap\"",
        "\"bumpmap\"",
        "\"normalmap\"",
        "\"displacementmap\"",
        "\"roughnessmap\"",
        "\"metalnessmap\"",
        "\"fog\"",
        "\"ambient\"",
        "\"lights\"",
        "\"emissive\"",
        "\"c\"",
        "\"roughness\"",
        "\"f\"",
        "\"metalness\"",
        "\"f\"",
        "\"envMapIntensity\"",
        "\"f\"",
        "\"#define STANDARD\"",
        "\"varying vec3 vViewPosition;\"",
        "\"#ifndef FLAT_SHADED\"",
        "\"\tvarying vec3 vNormal;\"",
        "\"#endif\"",
        "\"common\"",
        "\"uv_pars_vertex\"",
        "\"uv2_pars_vertex\"",
        "\"displacementmap_pars_vertex\"",
        "\"envmap_pars_vertex\"",
        "\"color_pars_vertex\"",
        "\"morphtarget_pars_vertex\"",
        "\"skinning_pars_vertex\"",
        "\"shadowmap_pars_vertex\"",
        "\"specularmap_pars_fragment\"",
        "\"logdepthbuf_pars_vertex\"",
        "\"void main() {\"",
        "\"uv_vertex\"",
        "\"uv2_vertex\"",
        "\"color_vertex\"",
        "\"beginnormal_vertex\"",
        "\"morphnormal_vertex\"",
        "\"skinbase_vertex\"",
        "\"skinnormal_vertex\"",
        "\"defaultnormal_vertex\"",
        "\"#ifndef FLAT_SHADED\"",
        "\"\tvNormal = normalize( transformedNormal );\"",
        "\"#endif\"",
        "\"begin_vertex\"",
        "\"displacementmap_vertex\"",
        "\"morphtarget_vertex\"",
        "\"skinning_vertex\"",
        "\"project_vertex\"",
        "\"logdepthbuf_vertex\"",
        "\"\tvViewPosition = - mvPosition.xyz;\"",
        "\"worldpos_vertex\"",
        "\"envmap_vertex\"",
        "\"shadowmap_vertex\"",
        "\"}\"",
        "\"\\n\"",
        "\"#define STANDARD\"",
        "\"uniform vec3 diffuse;\"",
        "\"uniform vec3 emissive;\"",
        "\"uniform float roughness;\"",
        "\"uniform float metalness;\"",
        "\"uniform float opacity;\"",
        "\"uniform float envMapIntensity;\"",
        "\"varying vec3 vViewPosition;\"",
        "\"#ifndef FLAT_SHADED\"",
        "\"\tvarying vec3 vNormal;\"",
        "\"#endif\"",
        "\"common\"",
        "\"color_pars_fragment\"",
        "\"uv_pars_fragment\"",
        "\"uv2_pars_fragment\"",
        "\"map_pars_fragment\"",
        "\"alphamap_pars_fragment\"",
        "\"aomap_pars_fragment\"",
        "\"lightmap_pars_fragment\"",
        "\"emissivemap_pars_fragment\"",
        "\"envmap_pars_fragment\"",
        "\"fog_pars_fragment\"",
        "\"bsdfs\"",
        "\"ambient_pars\"",
        "\"lights_pars\"",
        "\"lights_standard_pars_fragment\"",
        "\"shadowmap_pars_fragment\"",
        "\"bumpmap_pars_fragment\"",
        "\"normalmap_pars_fragment\"",
        "\"roughnessmap_pars_fragment\"",
        "\"metalnessmap_pars_fragment\"",
        "\"logdepthbuf_pars_fragment\"",
        "\"void main() {\"",
        "\"\tvec4 diffuseColor = vec4( diffuse, opacity );\"",
        "\"\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\"",
        "\"\tvec3 totalEmissiveLight = emissive;\"",
        "\"logdepthbuf_fragment\"",
        "\"map_fragment\"",
        "\"color_fragment\"",
        "\"alphamap_fragment\"",
        "\"alphatest_fragment\"",
        "\"specularmap_fragment\"",
        "\"roughnessmap_fragment\"",
        "\"metalnessmap_fragment\"",
        "\"normal_fragment\"",
        "\"emissivemap_fragment\"",
        "\"lights_standard_fragment\"",
        "\"lights_template\"",
        "\"aomap_fragment\"",
        "\"vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveLight;\"",
        "\"linear_to_gamma_fragment\"",
        "\"fog_fragment\"",
        "\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\"",
        "\"}\"",
        "\"\\n\"",
        "'points'",
        "\"points\"",
        "\"fog\"",
        "\"uniform float size;\"",
        "\"uniform float scale;\"",
        "\"common\"",
        "\"color_pars_vertex\"",
        "\"shadowmap_pars_vertex\"",
        "\"logdepthbuf_pars_vertex\"",
        "\"void main() {\"",
        "\"color_vertex\"",
        "\"begin_vertex\"",
        "\"project_vertex\"",
        "\"\t#ifdef USE_SIZEATTENUATION\"",
        "\"\t\tgl_PointSize = size * ( scale / - mvPosition.z );\"",
        "\"\t#else\"",
        "\"\t\tgl_PointSize = size;\"",
        "\"\t#endif\"",
        "\"logdepthbuf_vertex\"",
        "\"worldpos_vertex\"",
        "\"shadowmap_vertex\"",
        "\"}\"",
        "\"\\n\"",
        "\"uniform vec3 diffuse;\"",
        "\"uniform float opacity;\"",
        "\"common\"",
        "\"color_pars_fragment\"",
        "\"map_particle_pars_fragment\"",
        "\"fog_pars_fragment\"",
        "\"shadowmap_pars_fragment\"",
        "\"logdepthbuf_pars_fragment\"",
        "\"void main() {\"",
        "\"\tvec3 outgoingLight = vec3( 0.0 );\"",
        "\"\tvec4 diffuseColor = vec4( diffuse, opacity );\"",
        "\"logdepthbuf_fragment\"",
        "\"map_particle_fragment\"",
        "\"color_fragment\"",
        "\"alphatest_fragment\"",
        "\"\toutgoingLight = diffuseColor.rgb;\"",
        "\"fog_fragment\"",
        "\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\"",
        "\"}\"",
        "\"\\n\"",
        "'dashed'",
        "\"common\"",
        "\"fog\"",
        "\"scale\"",
        "\"f\"",
        "\"dashSize\"",
        "\"f\"",
        "\"totalSize\"",
        "\"f\"",
        "\"uniform float scale;\"",
        "\"attribute float lineDistance;\"",
        "\"varying float vLineDistance;\"",
        "\"common\"",
        "\"color_pars_vertex\"",
        "\"logdepthbuf_pars_vertex\"",
        "\"void main() {\"",
        "\"color_vertex\"",
        "\"\tvLineDistance = scale * lineDistance;\"",
        "\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\"",
        "\"\tgl_Position = projectionMatrix * mvPosition;\"",
        "\"logdepthbuf_vertex\"",
        "\"}\"",
        "\"\\n\"",
        "\"uniform vec3 diffuse;\"",
        "\"uniform float opacity;\"",
        "\"uniform float dashSize;\"",
        "\"uniform float totalSize;\"",
        "\"varying float vLineDistance;\"",
        "\"common\"",
        "\"color_pars_fragment\"",
        "\"fog_pars_fragment\"",
        "\"logdepthbuf_pars_fragment\"",
        "\"void main() {\"",
        "\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\"",
        "\"\t\tdiscard;\"",
        "\"\t}\"",
        "\"\tvec3 outgoingLight = vec3( 0.0 );\"",
        "\"\tvec4 diffuseColor = vec4( diffuse, opacity );\"",
        "\"logdepthbuf_fragment\"",
        "\"color_fragment\"",
        "\"\toutgoingLight = diffuseColor.rgb;\"",
        "\"fog_fragment\"",
        "\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\"",
        "\"}\"",
        "\"\\n\"",
        "'depth'",
        "\"mNear\"",
        "\"f\"",
        "\"mFar\"",
        "\"f\"",
        "\"opacity\"",
        "\"f\"",
        "\"common\"",
        "\"morphtarget_pars_vertex\"",
        "\"logdepthbuf_pars_vertex\"",
        "\"void main() {\"",
        "\"begin_vertex\"",
        "\"morphtarget_vertex\"",
        "\"project_vertex\"",
        "\"logdepthbuf_vertex\"",
        "\"}\"",
        "\"\\n\"",
        "\"uniform float mNear;\"",
        "\"uniform float mFar;\"",
        "\"uniform float opacity;\"",
        "\"common\"",
        "\"logdepthbuf_pars_fragment\"",
        "\"void main() {\"",
        "\"logdepthbuf_fragment\"",
        "\"\t#ifdef USE_LOGDEPTHBUF_EXT\"",
        "\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\"",
        "\"\t#else\"",
        "\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\"",
        "\"\t#endif\"",
        "\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\"",
        "\"\tgl_FragColor = vec4( vec3( color ), opacity );\"",
        "\"}\"",
        "\"\\n\"",
        "'normal'",
        "\"opacity\"",
        "\"f\"",
        "\"varying vec3 vNormal;\"",
        "\"common\"",
        "\"morphtarget_pars_vertex\"",
        "\"logdepthbuf_pars_vertex\"",
        "\"void main() {\"",
        "\"\tvNormal = normalize( normalMatrix * normal );\"",
        "\"begin_vertex\"",
        "\"morphtarget_vertex\"",
        "\"project_vertex\"",
        "\"logdepthbuf_vertex\"",
        "\"}\"",
        "\"\\n\"",
        "\"uniform float opacity;\"",
        "\"varying vec3 vNormal;\"",
        "\"common\"",
        "\"logdepthbuf_pars_fragment\"",
        "\"void main() {\"",
        "\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\"",
        "\"logdepthbuf_fragment\"",
        "\"}\"",
        "\"\\n\"",
        "'cube'",
        "\"tCube\"",
        "\"t\"",
        "\"tFlip\"",
        "\"f\"",
        "\"varying vec3 vWorldPosition;\"",
        "\"common\"",
        "\"logdepthbuf_pars_vertex\"",
        "\"void main() {\"",
        "\"\tvWorldPosition = transformDirection( position, modelMatrix );\"",
        "\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\"",
        "\"logdepthbuf_vertex\"",
        "\"}\"",
        "\"\\n\"",
        "\"uniform samplerCube tCube;\"",
        "\"uniform float tFlip;\"",
        "\"varying vec3 vWorldPosition;\"",
        "\"common\"",
        "\"logdepthbuf_pars_fragment\"",
        "\"void main() {\"",
        "\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\"",
        "\"logdepthbuf_fragment\"",
        "\"}\"",
        "\"\\n\"",
        "'equirect'",
        "\"tEquirect\"",
        "\"t\"",
        "\"tFlip\"",
        "\"f\"",
        "\"varying vec3 vWorldPosition;\"",
        "\"common\"",
        "\"logdepthbuf_pars_vertex\"",
        "\"void main() {\"",
        "\"\tvWorldPosition = transformDirection( position, modelMatrix );\"",
        "\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\"",
        "\"logdepthbuf_vertex\"",
        "\"}\"",
        "\"\\n\"",
        "\"uniform sampler2D tEquirect;\"",
        "\"uniform float tFlip;\"",
        "\"varying vec3 vWorldPosition;\"",
        "\"common\"",
        "\"logdepthbuf_pars_fragment\"",
        "\"void main() {\"",
        "\"vec3 direction = normalize( vWorldPosition );\"",
        "\"vec2 sampleUV;\"",
        "\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\"",
        "\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\"",
        "\"gl_FragColor = texture2D( tEquirect, sampleUV );\"",
        "\"logdepthbuf_fragment\"",
        "\"}\"",
        "\"\\n\"",
        "'depthRGBA'",
        "\"common\"",
        "\"morphtarget_pars_vertex\"",
        "\"skinning_pars_vertex\"",
        "\"logdepthbuf_pars_vertex\"",
        "\"void main() {\"",
        "\"skinbase_vertex\"",
        "\"begin_vertex\"",
        "\"morphtarget_vertex\"",
        "\"skinning_vertex\"",
        "\"project_vertex\"",
        "\"logdepthbuf_vertex\"",
        "\"}\"",
        "\"\\n\"",
        "\"common\"",
        "\"logdepthbuf_pars_fragment\"",
        "\"vec4 pack_depth( const in float depth ) {\"",
        "\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\"",
        "\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\"",
        "\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\"",
        "\"\tres -= res.xxyz * bit_mask;\"",
        "\"\treturn res;\"",
        "\"}\"",
        "\"void main() {\"",
        "\"logdepthbuf_fragment\"",
        "\"\t#ifdef USE_LOGDEPTHBUF_EXT\"",
        "\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\"",
        "\"\t#else\"",
        "\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\"",
        "\"\t#endif\"",
        "\"}\"",
        "\"\\n\"",
        "'distanceRGBA'",
        "\"lightPos\"",
        "\"v3\"",
        "\"varying vec4 vWorldPosition;\"",
        "\"common\"",
        "\"morphtarget_pars_vertex\"",
        "\"skinning_pars_vertex\"",
        "\"void main() {\"",
        "\"skinbase_vertex\"",
        "\"begin_vertex\"",
        "\"morphtarget_vertex\"",
        "\"skinning_vertex\"",
        "\"project_vertex\"",
        "\"worldpos_vertex\"",
        "\"vWorldPosition = worldPosition;\"",
        "\"}\"",
        "\"\\n\"",
        "\"uniform vec3 lightPos;\"",
        "\"varying vec4 vWorldPosition;\"",
        "\"common\"",
        "\"vec4 pack1K ( float depth ) {\"",
        "\"\tdepth /= 1000.0;\"",
        "\"\tconst vec4 bitSh = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\"",
        "\"\tconst vec4 bitMsk = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\"",
        "\"\tvec4 res = mod( depth * bitSh * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\"",
        "\"\tres -= res.xxyz * bitMsk;\"",
        "\"\treturn res; \"",
        "\"}\"",
        "\"float unpack1K ( vec4 color ) {\"",
        "\"\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\"",
        "\"\treturn dot( color, bitSh ) * 1000.0;\"",
        "\"}\"",
        "\"void main () {\"",
        "\"\tgl_FragColor = pack1K( length( vWorldPosition.xyz - lightPos.xyz ) );\"",
        "\"}\"",
        "\"\\n\"",
        "'THREE.WebGLRenderer'",
        "'canvas'",
        "''",
        "''",
        "'webgl'",
        "'experimental-webgl'",
        "'webgl'",
        "'Error creating WebGL context with your selected attributes.'",
        "'Error creating WebGL context.'",
        "'webglcontextlost'",
        "'THREE.WebGLRenderer: '",
        "'OES_texture_float'",
        "'OES_texture_float_linear'",
        "'OES_texture_half_float'",
        "'OES_texture_half_float_linear'",
        "'OES_standard_derivatives'",
        "'ANGLE_instanced_arrays'",
        "'OES_element_index_uint'",
        "''",
        "'WEBGL_lose_context'",
        "'EXT_texture_filter_anisotropic'",
        "'px'",
        "'px'",
        "'webglcontextlost'",
        "'dispose'",
        "'dispose'",
        "'dispose'",
        "'MeshPhongMaterial'",
        "'MeshStandardMaterial'",
        "'_'",
        "'_'",
        "'morphTarget'",
        "'morphNormal'",
        "'morphTarget'",
        "'morphNormal'",
        "'ANGLE_instanced_arrays'",
        "'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.'",
        "'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.'",
        "''",
        "''",
        "'dispose'",
        "'morphTarget'",
        "'morphNormal'",
        "'WebGLRenderer: trying to use '",
        "' texture units while this GPU supports only '",
        "'1i'",
        "'1f'",
        "'2f'",
        "'3f'",
        "'4f'",
        "'1iv'",
        "'3iv'",
        "'1fv'",
        "'2fv'",
        "'3fv'",
        "'4fv'",
        "'Matrix2fv'",
        "'Matrix3fv'",
        "'Matrix4fv'",
        "'i'",
        "'f'",
        "'v2'",
        "'v3'",
        "'v4'",
        "'c'",
        "'sa'",
        "'i'",
        "'f'",
        "'v2'",
        "'v3'",
        "'v4'",
        "'c'",
        "'m4'",
        "'iv1'",
        "'iv'",
        "'fv1'",
        "'fv'",
        "'v2v'",
        "'v3v'",
        "'v4v'",
        "'m2'",
        "'m3'",
        "'m3v'",
        "'m4'",
        "'m4v'",
        "'t'",
        "'tv'",
        "'THREE.WebGLRenderer: Unknown uniform type: '",
        "','",
        "','",
        "','",
        "','",
        "'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.'",
        "'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.'",
        "'EXT_texture_filter_anisotropic'",
        "'OES_texture_float_linear'",
        "'OES_texture_half_float_linear'",
        "'dispose'",
        "\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\"",
        "'THREE.WebGLRenderer: Texture marked for update but image is undefined'",
        "'THREE.WebGLRenderer: Texture marked for update but image is incomplete'",
        "'canvas'",
        "'2d'",
        "'THREE.WebGLRenderer: image is too big ('",
        "'x'",
        "'). Resized to '",
        "'x'",
        "'canvas'",
        "'2d'",
        "'THREE.WebGLRenderer: image is not power of two ('",
        "'x'",
        "'). Resized to '",
        "'x'",
        "'dispose'",
        "\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\"",
        "'dispose'",
        "'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.'",
        "'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.'",
        "'WEBGL_color_buffer_float'",
        "'EXT_color_buffer_half_float'",
        "'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.'",
        "'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.'",
        "'OES_texture_half_float'",
        "'WEBGL_compressed_texture_s3tc'",
        "'WEBGL_compressed_texture_pvrtc'",
        "'WEBGL_compressed_texture_etc1'",
        "'EXT_blend_minmax'",
        "'dispose'",
        "'ANGLE_instanced_arrays'",
        "'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.'",
        "'OES_element_index_uint'",
        "'ANGLE_instanced_arrays'",
        "'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.'",
        "'EXT_texture_filter_anisotropic'",
        "'EXT_texture_filter_anisotropic'",
        "'MOZ_EXT_texture_filter_anisotropic'",
        "'WEBKIT_EXT_texture_filter_anisotropic'",
        "'WEBGL_compressed_texture_s3tc'",
        "'WEBGL_compressed_texture_s3tc'",
        "'MOZ_WEBGL_compressed_texture_s3tc'",
        "'WEBKIT_WEBGL_compressed_texture_s3tc'",
        "'WEBGL_compressed_texture_pvrtc'",
        "'WEBGL_compressed_texture_pvrtc'",
        "'WEBKIT_WEBGL_compressed_texture_pvrtc'",
        "'WEBGL_compressed_texture_etc1'",
        "'WEBGL_compressed_texture_etc1'",
        "'THREE.WebGLRenderer: '",
        "' extension not supported.'",
        "'highp'",
        "'highp'",
        "'mediump'",
        "'mediump'",
        "'mediump'",
        "'lowp'",
        "'highp'",
        "'OES_texture_float'",
        "'THREE.WebGLRenderer:'",
        "'not supported, using'",
        "'instead.'",
        "'EXT_frag_depth'",
        "'dispose'",
        "'dispose'",
        "'DirectionalLight'",
        "'SpotLight'",
        "'PointLight'",
        "'HemisphereLight'",
        "'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.'",
        "'#extension GL_OES_standard_derivatives : enable'",
        "''",
        "'EXT_frag_depth'",
        "'#extension GL_EXT_frag_depth : enable'",
        "''",
        "'WEBGL_draw_buffers'",
        "'#extension GL_EXT_draw_buffers : require'",
        "''",
        "'EXT_shader_texture_lod'",
        "'#extension GL_EXT_shader_texture_lod : enable'",
        "''",
        "'\\n'",
        "'#define '",
        "' '",
        "'\\n'",
        "''",
        "''",
        "'[ '",
        "' ]'",
        "'SHADOWMAP_TYPE_BASIC'",
        "'SHADOWMAP_TYPE_PCF'",
        "'SHADOWMAP_TYPE_PCF_SOFT'",
        "'ENVMAP_TYPE_CUBE'",
        "'ENVMAP_MODE_REFLECTION'",
        "'ENVMAP_BLENDING_MULTIPLY'",
        "'ENVMAP_TYPE_CUBE'",
        "'ENVMAP_TYPE_EQUIREC'",
        "'ENVMAP_TYPE_SPHERE'",
        "'ENVMAP_MODE_REFRACTION'",
        "'ENVMAP_BLENDING_MULTIPLY'",
        "'ENVMAP_BLENDING_MIX'",
        "'ENVMAP_BLENDING_ADD'",
        "''",
        "''",
        "'precision '",
        "' float;'",
        "'precision '",
        "' int;'",
        "'#define SHADER_NAME '",
        "'#define VERTEX_TEXTURES'",
        "''",
        "'#define GAMMA_INPUT'",
        "''",
        "'#define GAMMA_OUTPUT'",
        "''",
        "'#define GAMMA_FACTOR '",
        "'#define MAX_BONES '",
        "'#define USE_MAP'",
        "''",
        "'#define USE_ENVMAP'",
        "''",
        "'#define '",
        "''",
        "'#define USE_LIGHTMAP'",
        "''",
        "'#define USE_AOMAP'",
        "''",
        "'#define USE_EMISSIVEMAP'",
        "''",
        "'#define USE_BUMPMAP'",
        "''",
        "'#define USE_NORMALMAP'",
        "''",
        "'#define USE_DISPLACEMENTMAP'",
        "''",
        "'#define USE_SPECULARMAP'",
        "''",
        "'#define USE_ROUGHNESSMAP'",
        "''",
        "'#define USE_METALNESSMAP'",
        "''",
        "'#define USE_ALPHAMAP'",
        "''",
        "'#define USE_COLOR'",
        "''",
        "'#define FLAT_SHADED'",
        "''",
        "'#define USE_SKINNING'",
        "''",
        "'#define BONE_TEXTURE'",
        "''",
        "'#define USE_MORPHTARGETS'",
        "''",
        "'#define USE_MORPHNORMALS'",
        "''",
        "'#define DOUBLE_SIDED'",
        "''",
        "'#define FLIP_SIDED'",
        "''",
        "'#define USE_SHADOWMAP'",
        "''",
        "'#define '",
        "''",
        "'#define POINT_LIGHT_SHADOWS'",
        "''",
        "'#define USE_SIZEATTENUATION'",
        "''",
        "'#define USE_LOGDEPTHBUF'",
        "''",
        "'EXT_frag_depth'",
        "'#define USE_LOGDEPTHBUF_EXT'",
        "''",
        "'uniform mat4 modelMatrix;'",
        "'uniform mat4 modelViewMatrix;'",
        "'uniform mat4 projectionMatrix;'",
        "'uniform mat4 viewMatrix;'",
        "'uniform mat3 normalMatrix;'",
        "'uniform vec3 cameraPosition;'",
        "'attribute vec3 position;'",
        "'attribute vec3 normal;'",
        "'attribute vec2 uv;'",
        "'#ifdef USE_COLOR'",
        "'\tattribute vec3 color;'",
        "'#endif'",
        "'#ifdef USE_MORPHTARGETS'",
        "'\tattribute vec3 morphTarget0;'",
        "'\tattribute vec3 morphTarget1;'",
        "'\tattribute vec3 morphTarget2;'",
        "'\tattribute vec3 morphTarget3;'",
        "'\t#ifdef USE_MORPHNORMALS'",
        "'\t\tattribute vec3 morphNormal0;'",
        "'\t\tattribute vec3 morphNormal1;'",
        "'\t\tattribute vec3 morphNormal2;'",
        "'\t\tattribute vec3 morphNormal3;'",
        "'\t#else'",
        "'\t\tattribute vec3 morphTarget4;'",
        "'\t\tattribute vec3 morphTarget5;'",
        "'\t\tattribute vec3 morphTarget6;'",
        "'\t\tattribute vec3 morphTarget7;'",
        "'\t#endif'",
        "'#endif'",
        "'#ifdef USE_SKINNING'",
        "'\tattribute vec4 skinIndex;'",
        "'\tattribute vec4 skinWeight;'",
        "'#endif'",
        "'\\n'",
        "'\\n'",
        "'precision '",
        "' float;'",
        "'precision '",
        "' int;'",
        "'#define SHADER_NAME '",
        "'#define ALPHATEST '",
        "''",
        "'#define GAMMA_INPUT'",
        "''",
        "'#define GAMMA_OUTPUT'",
        "''",
        "'#define GAMMA_FACTOR '",
        "'#define USE_FOG'",
        "''",
        "'#define FOG_EXP2'",
        "''",
        "'#define USE_MAP'",
        "''",
        "'#define USE_ENVMAP'",
        "''",
        "'#define '",
        "''",
        "'#define '",
        "''",
        "'#define '",
        "''",
        "'#define USE_LIGHTMAP'",
        "''",
        "'#define USE_AOMAP'",
        "''",
        "'#define USE_EMISSIVEMAP'",
        "''",
        "'#define USE_BUMPMAP'",
        "''",
        "'#define USE_NORMALMAP'",
        "''",
        "'#define USE_SPECULARMAP'",
        "''",
        "'#define USE_ROUGHNESSMAP'",
        "''",
        "'#define USE_METALNESSMAP'",
        "''",
        "'#define USE_ALPHAMAP'",
        "''",
        "'#define USE_COLOR'",
        "''",
        "'#define FLAT_SHADED'",
        "''",
        "'#define DOUBLE_SIDED'",
        "''",
        "'#define FLIP_SIDED'",
        "''",
        "'#define USE_SHADOWMAP'",
        "''",
        "'#define '",
        "''",
        "'#define POINT_LIGHT_SHADOWS'",
        "''",
        "'#define USE_LOGDEPTHBUF'",
        "''",
        "'EXT_frag_depth'",
        "'#define USE_LOGDEPTHBUF_EXT'",
        "''",
        "'EXT_shader_texture_lod'",
        "'#define TEXTURE_LOD_EXT'",
        "''",
        "'uniform mat4 viewMatrix;'",
        "'uniform vec3 cameraPosition;'",
        "'\\n'",
        "'\\n'",
        "'position'",
        "'THREE.WebGLProgram: shader error: '",
        "'gl.VALIDATE_STATUS'",
        "'gl.getProgramInfoLog'",
        "''",
        "'THREE.WebGLProgram: gl.getProgramInfoLog()'",
        "''",
        "''",
        "'THREE.WebGLProgram: .uniforms is now .getUniforms().'",
        "'THREE.WebGLProgram: .attributes is now .getAttributes().'",
        "'depth'",
        "'normal'",
        "'basic'",
        "'lambert'",
        "'phong'",
        "'standard'",
        "'basic'",
        "'dashed'",
        "'points'",
        "\"precision\"",
        "\"supportsVertexTextures\"",
        "\"map\"",
        "\"envMap\"",
        "\"envMapMode\"",
        "\"lightMap\"",
        "\"aoMap\"",
        "\"emissiveMap\"",
        "\"bumpMap\"",
        "\"normalMap\"",
        "\"displacementMap\"",
        "\"specularMap\"",
        "\"roughnessMap\"",
        "\"metalnessMap\"",
        "\"alphaMap\"",
        "\"combine\"",
        "\"vertexColors\"",
        "\"fog\"",
        "\"useFog\"",
        "\"fogExp\"",
        "\"flatShading\"",
        "\"sizeAttenuation\"",
        "\"logarithmicDepthBuffer\"",
        "\"skinning\"",
        "\"maxBones\"",
        "\"useVertexTexture\"",
        "\"morphTargets\"",
        "\"morphNormals\"",
        "\"maxMorphTargets\"",
        "\"maxMorphNormals\"",
        "\"numDirLights\"",
        "\"numPointLights\"",
        "\"numSpotLights\"",
        "\"numHemiLights\"",
        "\"shadowMapEnabled\"",
        "\"pointLightShadows\"",
        "\"shadowMapType\"",
        "\"alphaTest\"",
        "\"doubleSided\"",
        "\"flipSided\"",
        "'WebGLRenderer: too many bones - '",
        "', this GPU supports just '",
        "' (try OpenGL instead of ANGLE)'",
        "'THREE.WebGLProgram.getParameters:'",
        "'not supported, using'",
        "'instead.'",
        "'\\n'",
        "': '",
        "'\\n'",
        "'THREE.WebGLShader: Shader couldn\\'t compile.'",
        "''",
        "'THREE.WebGLShader: gl.getShaderInfoLog()'",
        "'vertex'",
        "'fragment'",
        "\"depthRGBA\"",
        "\"distanceRGBA\"",
        "'ANGLE_instanced_arrays'",
        "'WEBGL_compressed_texture_pvrtc'",
        "'WEBGL_compressed_texture_s3tc'",
        "'WEBGL_compressed_texture_etc1'",
        "\"uniform lowp int renderType;\"",
        "\"uniform vec3 screenPosition;\"",
        "\"uniform vec2 scale;\"",
        "\"uniform float rotation;\"",
        "\"uniform sampler2D occlusionMap;\"",
        "\"attribute vec2 position;\"",
        "\"attribute vec2 uv;\"",
        "\"varying vec2 vUV;\"",
        "\"varying float vVisibility;\"",
        "\"void main() {\"",
        "\"vUV = uv;\"",
        "\"vec2 pos = position;\"",
        "\"if ( renderType == 2 ) {\"",
        "\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\"",
        "\"vVisibility =        visibility.r / 9.0;\"",
        "\"vVisibility *= 1.0 - visibility.g / 9.0;\"",
        "\"vVisibility *=       visibility.b / 9.0;\"",
        "\"vVisibility *= 1.0 - visibility.a / 9.0;\"",
        "\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\"",
        "\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\"",
        "\"}\"",
        "\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\"",
        "\"}\"",
        "\"\\n\"",
        "\"uniform lowp int renderType;\"",
        "\"uniform sampler2D map;\"",
        "\"uniform float opacity;\"",
        "\"uniform vec3 color;\"",
        "\"varying vec2 vUV;\"",
        "\"varying float vVisibility;\"",
        "\"void main() {\"",
        "\"if ( renderType == 0 ) {\"",
        "\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\"",
        "\"} else if ( renderType == 1 ) {\"",
        "\"gl_FragColor = texture2D( map, vUV );\"",
        "\"} else {\"",
        "\"vec4 texture = texture2D( map, vUV );\"",
        "\"texture.a *= opacity * vVisibility;\"",
        "\"gl_FragColor = texture;\"",
        "\"gl_FragColor.rgb *= color;\"",
        "\"}\"",
        "\"}\"",
        "\"\\n\"",
        "\"uniform lowp int renderType;\"",
        "\"uniform vec3 screenPosition;\"",
        "\"uniform vec2 scale;\"",
        "\"uniform float rotation;\"",
        "\"attribute vec2 position;\"",
        "\"attribute vec2 uv;\"",
        "\"varying vec2 vUV;\"",
        "\"void main() {\"",
        "\"vUV = uv;\"",
        "\"vec2 pos = position;\"",
        "\"if ( renderType == 2 ) {\"",
        "\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\"",
        "\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\"",
        "\"}\"",
        "\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\"",
        "\"}\"",
        "\"\\n\"",
        "\"precision mediump float;\"",
        "\"uniform lowp int renderType;\"",
        "\"uniform sampler2D map;\"",
        "\"uniform sampler2D occlusionMap;\"",
        "\"uniform float opacity;\"",
        "\"uniform vec3 color;\"",
        "\"varying vec2 vUV;\"",
        "\"void main() {\"",
        "\"if ( renderType == 0 ) {\"",
        "\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\"",
        "\"} else if ( renderType == 1 ) {\"",
        "\"gl_FragColor = texture2D( map, vUV );\"",
        "\"} else {\"",
        "\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\"",
        "\"visibility = ( 1.0 - visibility / 4.0 );\"",
        "\"vec4 texture = texture2D( map, vUV );\"",
        "\"texture.a *= opacity * visibility;\"",
        "\"gl_FragColor = texture;\"",
        "\"gl_FragColor.rgb *= color;\"",
        "\"}\"",
        "\"}\"",
        "\"\\n\"",
        "\"position\"",
        "\"uv\"",
        "\"renderType\"",
        "\"map\"",
        "\"occlusionMap\"",
        "\"opacity\"",
        "\"color\"",
        "\"scale\"",
        "\"rotation\"",
        "\"screenPosition\"",
        "\"precision \"",
        "\" float;\\n\"",
        "'position'",
        "'uv'",
        "'uvOffset'",
        "'uvScale'",
        "'rotation'",
        "'scale'",
        "'color'",
        "'map'",
        "'opacity'",
        "'modelViewMatrix'",
        "'projectionMatrix'",
        "'fogType'",
        "'fogDensity'",
        "'fogNear'",
        "'fogFar'",
        "'fogColor'",
        "'alphaTest'",
        "'canvas'",
        "'2d'",
        "'white'",
        "'precision '",
        "' float;'",
        "'uniform mat4 modelViewMatrix;'",
        "'uniform mat4 projectionMatrix;'",
        "'uniform float rotation;'",
        "'uniform vec2 scale;'",
        "'uniform vec2 uvOffset;'",
        "'uniform vec2 uvScale;'",
        "'attribute vec2 position;'",
        "'attribute vec2 uv;'",
        "'varying vec2 vUV;'",
        "'void main() {'",
        "'vUV = uvOffset + uv * uvScale;'",
        "'vec2 alignedPosition = position * scale;'",
        "'vec2 rotatedPosition;'",
        "'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;'",
        "'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;'",
        "'vec4 finalPosition;'",
        "'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );'",
        "'finalPosition.xy += rotatedPosition;'",
        "'finalPosition = projectionMatrix * finalPosition;'",
        "'gl_Position = finalPosition;'",
        "'}'",
        "'\\n'",
        "'precision '",
        "' float;'",
        "'uniform vec3 color;'",
        "'uniform sampler2D map;'",
        "'uniform float opacity;'",
        "'uniform int fogType;'",
        "'uniform vec3 fogColor;'",
        "'uniform float fogDensity;'",
        "'uniform float fogNear;'",
        "'uniform float fogFar;'",
        "'uniform float alphaTest;'",
        "'varying vec2 vUV;'",
        "'void main() {'",
        "'vec4 texture = texture2D( map, vUV );'",
        "'if ( texture.a < alphaTest ) discard;'",
        "'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );'",
        "'if ( fogType > 0 ) {'",
        "'float depth = gl_FragCoord.z / gl_FragCoord.w;'",
        "'float fogFactor = 0.0;'",
        "'if ( fogType == 1 ) {'",
        "'fogFactor = smoothstep( fogNear, fogFar, depth );'",
        "'} else {'",
        "'const float LOG2 = 1.442695;'",
        "'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );'",
        "'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );'",
        "'}'",
        "'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );'",
        "'}'",
        "'}'",
        "'\\n'",
        "'THREE.Box2: .empty() has been renamed to .isEmpty().'",
        "'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().'",
        "'THREE.Box3: .empty() has been renamed to .isEmpty().'",
        "'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().'",
        "'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().'",
        "'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.'",
        "'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.'",
        "'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().'",
        "'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().'",
        "'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.'",
        "'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.'",
        "'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.'",
        "'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.'",
        "'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.'",
        "'THREE.Matrix4: .translate() has been removed.'",
        "'THREE.Matrix4: .rotateX() has been removed.'",
        "'THREE.Matrix4: .rotateY() has been removed.'",
        "'THREE.Matrix4: .rotateZ() has been removed.'",
        "'THREE.Matrix4: .rotateByAxis() has been removed.'",
        "'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().'",
        "'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.'",
        "'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().'",
        "'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().'",
        "'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().'",
        "'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.'",
        "'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.'",
        "'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().'",
        "'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().'",
        "'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().'",
        "'THREE.Face4 has been removed. A THREE.Face3 will be created instead.'",
        "'THREE.Object3D: .eulerOrder is now .rotation.order.'",
        "'THREE.Object3D: .eulerOrder is now .rotation.order.'",
        "'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().'",
        "'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.'",
        "'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.'",
        "'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.'",
        "'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.'",
        "'THREE.PointCloud has been renamed to THREE.Points.'",
        "'THREE.ParticleSystem has been renamed to THREE.Points.'",
        "'THREE.Light: .onlyShadow has been removed.'",
        "'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.'",
        "'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.'",
        "'THREE.Light: .shadowCameraRight is now .shadow.camera.right.'",
        "'THREE.Light: .shadowCameraTop is now .shadow.camera.top.'",
        "'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.'",
        "'THREE.Light: .shadowCameraNear is now .shadow.camera.near.'",
        "'THREE.Light: .shadowCameraFar is now .shadow.camera.far.'",
        "'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.'",
        "'THREE.Light: .shadowBias is now .shadow.bias.'",
        "'THREE.Light: .shadowDarkness has been removed.'",
        "'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.'",
        "'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.'",
        "'THREE.BufferAttribute: .length has been deprecated. Please use .count.'",
        "'THREE.BufferGeometry: .drawcalls has been renamed to .groups.'",
        "'THREE.BufferGeometry: .offsets has been renamed to .groups.'",
        "'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().'",
        "'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.'",
        "'THREE.BufferGeometry: .addDrawCall() is now .addGroup().'",
        "'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().'",
        "'THREE.BufferGeometry: .computeTangents() has been removed.'",
        "'THREE.BufferGeometry: .computeOffsets() has been removed.'",
        "'THREE.'",
        "': .wrapAround has been removed.'",
        "'THREE.'",
        "': .wrapAround has been removed.'",
        "'THREE.'",
        "': .wrapRGB has been removed.'",
        "'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.'",
        "'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.'",
        "'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.'",
        "'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.'",
        "'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead'",
        "'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.'",
        "'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.'",
        "'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).'",
        "'OES_texture_float'",
        "'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).'",
        "'OES_texture_half_float'",
        "'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).'",
        "'OES_standard_derivatives'",
        "'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).'",
        "'WEBGL_compressed_texture_s3tc'",
        "'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).'",
        "'WEBGL_compressed_texture_pvrtc'",
        "'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).'",
        "'EXT_blend_minmax'",
        "'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).'",
        "'ANGLE_instanced_arrays'",
        "'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().'",
        "'THREE.WebGLRenderer: .initMaterial() has been removed.'",
        "'THREE.WebGLRenderer: .addPrePlugin() has been removed.'",
        "'THREE.WebGLRenderer: .addPostPlugin() has been removed.'",
        "'THREE.WebGLRenderer: .updateShadowMap() has been removed.'",
        "'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.'",
        "'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.'",
        "'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.'",
        "'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.'",
        "'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.'",
        "'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.'",
        "'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.'",
        "'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.'",
        "'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.'",
        "'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.'",
        "'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.'",
        "'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.'",
        "'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.'",
        "'THREE.WebGLRenderTarget: .offset is now .texture.offset.'",
        "'THREE.WebGLRenderTarget: .offset is now .texture.offset.'",
        "'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.'",
        "'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.'",
        "'THREE.WebGLRenderTarget: .format is now .texture.format.'",
        "'THREE.WebGLRenderTarget: .format is now .texture.format.'",
        "'THREE.WebGLRenderTarget: .type is now .texture.type.'",
        "'THREE.WebGLRenderTarget: .type is now .texture.type.'",
        "'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.'",
        "'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.'",
        "'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.'",
        "'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.'",
        "'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.'",
        "'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.'",
        "'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.'",
        "'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.'",
        "'THREE.Projector has been moved to /examples/js/renderers/Projector.js.'",
        "'THREE.Projector: .projectVector() is now vector.project().'",
        "'THREE.Projector: .unprojectVector() is now vector.unproject().'",
        "'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().'",
        "'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js'",
        "'canvas'",
        "'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()'",
        "\"Infinite Loop! Holes left:\"",
        "\", Probably Hole outside Shape!\"",
        "\":\"",
        "\":\"",
        "\":\"",
        "\"THREE.Shape: Duplicate point\"",
        "\":\"",
        "\"THREE.Curve: Warning, getPoint() not implemented!\"",
        "''",
        "'?'",
        "' '",
        "'m'",
        "'l'",
        "'q'",
        "'b'",
        "'moveTo'",
        "'lineTo'",
        "'quadraticCurveTo'",
        "'bezierCurveTo'",
        "'splineThru'",
        "'ellipse'",
        "'moveTo'",
        "'lineTo'",
        "'quadraticCurveTo'",
        "'bezierCurveTo'",
        "'splineThru'",
        "'arc'",
        "'ellipse'",
        "'moveTo'",
        "'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3'",
        "'duh, you need at least 2 points'",
        "'centripetal'",
        "'chordal'",
        "'chordal'",
        "'catmullrom'",
        "'THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.'",
        "'catmullrom'",
        "'BoxGeometry'",
        "'z'",
        "'y'",
        "'z'",
        "'y'",
        "'x'",
        "'z'",
        "'x'",
        "'z'",
        "'x'",
        "'y'",
        "'x'",
        "'y'",
        "'x'",
        "'y'",
        "'y'",
        "'x'",
        "'z'",
        "'x'",
        "'z'",
        "'z'",
        "'x'",
        "'y'",
        "'z'",
        "'y'",
        "'y'",
        "'z'",
        "'x'",
        "'CircleGeometry'",
        "'CircleBufferGeometry'",
        "'position'",
        "'normal'",
        "'uv'",
        "'CylinderGeometry'",
        "'a'",
        "'b'",
        "'c'",
        "'position'",
        "\"undefined\"",
        "'ExtrudeGeometry'",
        "\"THREE.ExtrudeGeometry: vec does not exist\"",
        "'ShapeGeometry'",
        "'LatheGeometry'",
        "'PlaneGeometry'",
        "'PlaneBufferGeometry'",
        "'position'",
        "'normal'",
        "'uv'",
        "'RingGeometry'",
        "'SphereGeometry'",
        "'SphereBufferGeometry'",
        "'position'",
        "'normal'",
        "'uv'",
        "'THREE.TextGeometry: font parameter is not an instance of THREE.Font.'",
        "'TextGeometry'",
        "'TorusGeometry'",
        "'TorusKnotGeometry'",
        "'TubeGeometry'",
        "'PolyhedronGeometry'",
        "'DodecahedronGeometry'",
        "'IcosahedronGeometry'",
        "'OctahedronGeometry'",
        "'TetrahedronGeometry'",
        "'ParametricGeometry'",
        "'a'",
        "'b'",
        "'c'",
        "'position'",
        "'position'",
        "'position'",
        "'position'",
        "'color'",
        "'position'",
        "\"n1\"",
        "\"n2\"",
        "\"n2\"",
        "\"n4\"",
        "\"n4\"",
        "\"n3\"",
        "\"n3\"",
        "\"n1\"",
        "\"f1\"",
        "\"f2\"",
        "\"f2\"",
        "\"f4\"",
        "\"f4\"",
        "\"f3\"",
        "\"f3\"",
        "\"f1\"",
        "\"n1\"",
        "\"f1\"",
        "\"n2\"",
        "\"f2\"",
        "\"n3\"",
        "\"f3\"",
        "\"n4\"",
        "\"f4\"",
        "\"p\"",
        "\"n1\"",
        "\"p\"",
        "\"n2\"",
        "\"p\"",
        "\"n3\"",
        "\"p\"",
        "\"n4\"",
        "\"u1\"",
        "\"u2\"",
        "\"u2\"",
        "\"u3\"",
        "\"u3\"",
        "\"u1\"",
        "\"c\"",
        "\"t\"",
        "\"p\"",
        "\"c\"",
        "\"cn1\"",
        "\"cn2\"",
        "\"cn3\"",
        "\"cn4\"",
        "\"cf1\"",
        "\"cf2\"",
        "\"cf3\"",
        "\"cf4\"",
        "\"c\"",
        "\"t\"",
        "\"n1\"",
        "\"n2\"",
        "\"n3\"",
        "\"n4\"",
        "\"f1\"",
        "\"f2\"",
        "\"f3\"",
        "\"f4\"",
        "\"u1\"",
        "\"u2\"",
        "\"u3\"",
        "\"cf1\"",
        "\"cf2\"",
        "\"cf3\"",
        "\"cf4\"",
        "\"cn1\"",
        "\"cn2\"",
        "\"cn3\"",
        "\"cn4\"",
        "'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.'",
        "'position'",
        "'position'",
        "'a'",
        "'b'",
        "'c'",
        "\"__default\"",
        "\"THREE.MorphBlendMesh: animation[\"",
        "\"] undefined in .playAnimation()\"",
        "'undefined'",
        "'undefined'",
        "'THREE'",
        "'performance'",
        "'now'",
        "'14'",
        "\"string\"",
        "\"number\"",
        "\"string\"",
        "'function'",
        "'object'",
        "\"function\"",
        "\"Cannot find module '\"",
        "\"'\"",
        "\"MODULE_NOT_FOUND\"",
        "\"function\"",
        "'webvr-polyfill hardwareUnitId'",
        "'webvr-polyfill deviceId'",
        "'webvr-polyfill deviceName'",
        "'./base.js'",
        "'left'",
        "'right'",
        "'Invalid eye provided: %s'",
        "\"./base.js\"",
        "'./sensor-sample.js'",
        "'./three-math.js'",
        "'./util.js'",
        "'Delta: %d deg, G_est: (%s, %s, %s), G_meas: (%s, %s, %s)'",
        "\"./sensor-sample.js\"",
        "\"./three-math.js\"",
        "\"./util.js\"",
        "'./base.js'",
        "'./complementary-filter.js'",
        "'./pose-predictor.js'",
        "'./touch-panner.js'",
        "'./three-math.js'",
        "'./util.js'",
        "'webvr-polyfill:fused'",
        "'VR Position Device (webvr-polyfill:fused)'",
        "'devicemotion'",
        "'orientationchange'",
        "'resetSensor with yaw: %f'",
        "'Invalid timestamps detected. Time step between successive '",
        "'gyroscope sensor samples is very small or not monotonic'",
        "\"./base.js\"",
        "\"./complementary-filter.js\"",
        "\"./pose-predictor.js\"",
        "\"./three-math.js\"",
        "\"./touch-panner.js\"",
        "\"./util.js\"",
        "'./webvr-polyfill.js'",
        "\"./webvr-polyfill.js\"",
        "'./base.js'",
        "'./three-math.js'",
        "'./util.js'",
        "'webvr-polyfill:mouse-keyboard'",
        "'VR Position Device (webvr-polyfill:mouse-keyboard)'",
        "'keydown'",
        "'mousemove'",
        "'mousedown'",
        "'mouseup'",
        "'YXZ'",
        "'theta'",
        "'phi'",
        "'Not implemented yet.'",
        "\"./base.js\"",
        "\"./three-math.js\"",
        "\"./util.js\"",
        "'./three-math.js'",
        "'Moving slowly, at %s deg/s: no prediction'",
        "\"./three-math.js\"",
        "'No THREE.js found.'",
        "'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.'",
        "'XYZ'",
        "'YXZ'",
        "'ZXY'",
        "'ZYX'",
        "'YZX'",
        "'XZY'",
        "'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.'",
        "'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.'",
        "'index is out of range: '",
        "'index is out of range: '",
        "'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.'",
        "'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.'",
        "'index is out of range: '",
        "'index is out of range: '",
        "'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.'",
        "'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.'",
        "'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.'",
        "'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.'",
        "'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.'",
        "'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.'",
        "'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.'",
        "'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().'",
        "'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().'",
        "'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().'",
        "'XYZ'",
        "'YZX'",
        "'ZXY'",
        "'XZY'",
        "'YXZ'",
        "'ZYX'",
        "'XYZ'",
        "'XYZ'",
        "'YXZ'",
        "'ZXY'",
        "'ZYX'",
        "'YZX'",
        "'XZY'",
        "'THREE.Euler: .setFromRotationMatrix() given unsupported order: '",
        "'0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'",
        "''",
        "'-'",
        "'4'",
        "''",
        "'./three-math.js'",
        "'./util.js'",
        "'touchstart'",
        "'touchmove'",
        "'touchend'",
        "\"./three-math.js\"",
        "\"./util.js\"",
        "'Firefox'",
        "'Android'",
        "'./cardboard-hmd-vr-device.js'",
        "'./fusion-position-sensor-vr-device.js'",
        "'./mouse-keyboard-position-sensor-vr-device.js'",
        "'./base.js'",
        "'./base.js'",
        "'getVRDevices'",
        "'mozGetVRDevices'",
        "\"./base.js\"",
        "\"./cardboard-hmd-vr-device.js\"",
        "\"./fusion-position-sensor-vr-device.js\"",
        "\"./mouse-keyboard-position-sensor-vr-device.js\"",
        "\"name\"",
        "\"aframe\"",
        "\"version\"",
        "\"0.2.0-rc1\"",
        "\"description\"",
        "\"Building blocks for the VR Web\"",
        "\"main\"",
        "\"dist/aframe.js\"",
        "\"scripts\"",
        "\"browserify\"",
        "\"browserify src/index.js -s 'AFRAME' -p browserify-derequire\"",
        "\"build\"",
        "\"mkdirp build/ && npm run browserify -- --debug -o build/aframe.js\"",
        "\"dev\"",
        "\"npm run build && node ./scripts/budo\"",
        "\"dist\"",
        "\"mkdirp dist/ && npm run browserify -s -- --debug | exorcist dist/aframe.js.map > dist/aframe.js && uglifyjs dist/aframe.js -c warnings=false -m -o dist/aframe.min.js\"",
        "\"gh-pages\"",
        "\"npm run ghpages\"",
        "\"ghpages\"",
        "\"node ./scripts/gh-pages\"",
        "\"lint\"",
        "\"semistandard -v | snazzy\"",
        "\"precommit\"",
        "\"npm run lint\"",
        "\"preghpages\"",
        "\"npm run dist && rimraf gh-pages && mkdirp gh-pages && cp -r {.nojekyll,dist,lib,examples,index.html,style} gh-pages/. 2>/dev/null || : && git checkout dist/ && replace 'build/aframe.js' 'dist/aframe.min.js' gh-pages/ -r --silent\"",
        "\"release:bump\"",
        "\"npm run dist && git commit -am 'bump dist' && npm version patch --preminor\"",
        "\"release:push\"",
        "\"npm login && npm publish && git push --follow-tags\"",
        "\"start\"",
        "\"npm run dev\"",
        "\"test\"",
        "\"karma start ./tests/karma.conf.js\"",
        "\"test:ci\"",
        "\"TEST_ENV=ci karma start ./tests/karma.conf.js --single-run\"",
        "\"version\"",
        "\"npm run dist\"",
        "\"repository\"",
        "\"aframevr/aframe\"",
        "\"license\"",
        "\"MIT\"",
        "\"dependencies\"",
        "\"browserify-css\"",
        "\"^0.8.2\"",
        "\"debug\"",
        "\"^2.2.0\"",
        "\"deep-assign\"",
        "\"^2.0.0\"",
        "\"document-register-element\"",
        "\"dmarcos/document-register-element#8ccc532b7\"",
        "\"promise-polyfill\"",
        "\"^3.1.0\"",
        "\"object-assign\"",
        "\"^4.0.1\"",
        "\"polymerize\"",
        "\"^1.0.0\"",
        "\"present\"",
        "\"0.0.6\"",
        "\"request-interval\"",
        "\"^1.0.0\"",
        "\"style-attr\"",
        "\"^1.0.2\"",
        "\"three\"",
        "\"^0.74.0\"",
        "\"tween.js\"",
        "\"^15.0.0\"",
        "\"webvr-polyfill\"",
        "\"borismus/webvr-polyfill#3f47796\"",
        "\"devDependencies\"",
        "\"browserify\"",
        "\"^11.0.1\"",
        "\"browserify-derequire\"",
        "\"^0.9.4\"",
        "\"budo\"",
        "\"^8.1.0\"",
        "\"chai\"",
        "\"^3.5.0\"",
        "\"chai-shallow-deep-equal\"",
        "\"^1.3.0\"",
        "\"exorcist\"",
        "\"^0.4.0\"",
        "\"gh-pages\"",
        "\"^0.6.0\"",
        "\"husky\"",
        "\"^0.10.1\"",
        "\"karma\"",
        "\"^0.13.15\"",
        "\"karma-browserify\"",
        "\"^4.4.0\"",
        "\"karma-chai-shallow-deep-equal\"",
        "\"0.0.4\"",
        "\"karma-env-preprocessor\"",
        "\"^0.1.1\"",
        "\"karma-firefox-launcher\"",
        "\"^0.1.6\"",
        "\"karma-mocha\"",
        "\"^0.2.0\"",
        "\"karma-mocha-reporter\"",
        "\"^1.1.0\"",
        "\"karma-sinon-chai\"",
        "\"^1.1.0\"",
        "\"lolex\"",
        "\"^1.4.0\"",
        "\"mkdirp\"",
        "\"0.5.1\"",
        "\"mocha\"",
        "\"^2.3.3\"",
        "\"mozilla-download\"",
        "\"^1.0.5\"",
        "\"open\"",
        "\"0.0.5\"",
        "\"replace\"",
        "\"^0.3.0\"",
        "\"rimraf\"",
        "\"2.5.0\"",
        "\"semistandard\"",
        "\"^7.0.2\"",
        "\"sinon\"",
        "\"^1.17.3\"",
        "\"sinon-chai\"",
        "\"^2.8.0\"",
        "\"snazzy\"",
        "\"^3.0.0\"",
        "\"uglifyjs\"",
        "\"^2.4.10\"",
        "\"link\"",
        "\"browserify\"",
        "\"transform\"",
        "\"browserify-css\"",
        "\"polymerize\"",
        "\"match\"",
        "\".*.html$\"",
        "\"semistandard\"",
        "\"ignore\"",
        "\"build/**\"",
        "\"dist/**\"",
        "\"examples/_js/**\"",
        "\"examples/**/shaders/*.js\"",
        "\"vendor/**\"",
        "\"keywords\"",
        "\"aframe\"",
        "\"vr\"",
        "\"webvr\"",
        "\"3d\"",
        "\"three\"",
        "\"components\"",
        "\"elements\"",
        "\"browserify-css\"",
        "\"minify\"",
        "\"engines\"",
        "\"node\"",
        "\">= 0.12.7\"",
        "\"npm\"",
        "\"^2.12.1\"",
        "'../core/component'",
        "'../lib/three'",
        "'camera'",
        "'camera'",
        "'camera'",
        "\"../core/component\"",
        "\"../lib/three\"",
        "'../core/component'",
        "'../lib/three'",
        "'collada-model'",
        "'src'",
        "'mesh'",
        "'model-loaded'",
        "'collada'",
        "'mesh'",
        "\"../core/component\"",
        "\"../lib/three\"",
        "'../core/component'",
        "'../utils/'",
        "'cursor'",
        "'raycaster'",
        "'render-target-loaded'",
        "'mousedown'",
        "'mouseup'",
        "'intersection'",
        "'intersectioncleared'",
        "'mousedown'",
        "'mouseup'",
        "'click'",
        "'hovered'",
        "'mouseenter'",
        "'hovering'",
        "'fusing'",
        "'fusing'",
        "'click'",
        "'hovered'",
        "'mouseleave'",
        "'hovering'",
        "'fusing'",
        "\"../core/component\"",
        "\"../utils/\"",
        "'../utils/debug'",
        "'../core/component'",
        "'../lib/three'",
        "'../utils'",
        "'components:geometry:warn'",
        "'geometry'",
        "'torus'",
        "'box'",
        "'box'",
        "'plane'",
        "'cylinder'",
        "'torusKnot'",
        "'int'",
        "''",
        "''",
        "'box'",
        "'circle'",
        "'cylinder'",
        "'plane'",
        "'ring'",
        "'sphere'",
        "'torus'",
        "'torusKnot'",
        "'torusKnot'",
        "'int'",
        "'sphere'",
        "'sphere'",
        "'circle'",
        "'cylinder'",
        "'sphere'",
        "'torus'",
        "'torusKnot'",
        "'cylinder'",
        "'ring'",
        "'ring'",
        "'cylinder'",
        "'torus'",
        "'torusKnot'",
        "'circle'",
        "'int'",
        "'cylinder'",
        "'sphere'",
        "'int'",
        "'ring'",
        "'int'",
        "'cylinder'",
        "'int'",
        "'ring'",
        "'int'",
        "'torus'",
        "'torusKnot'",
        "'int'",
        "'sphere'",
        "'int'",
        "'circle'",
        "'cylinder'",
        "'ring'",
        "'sphere'",
        "'circle'",
        "'cylinder'",
        "'ring'",
        "'sphere'",
        "'vec3'",
        "'box'",
        "'plane'",
        "'mesh'",
        "'translate'",
        "'mesh'",
        "'cube'",
        "'geometry.primitive=\"cube\" should be \"box\"'",
        "'box'",
        "'circle'",
        "'cone'",
        "'cylinder'",
        "'plane'",
        "'ring'",
        "'sphere'",
        "'torus'",
        "'torusKnot'",
        "'Primitive type not supported: '",
        "\"../core/component\"",
        "\"../lib/three\"",
        "\"../utils\"",
        "\"../utils/debug\"",
        "'./camera'",
        "'./collada-model'",
        "'./cursor'",
        "'./geometry'",
        "'./light'",
        "'./look-at'",
        "'./look-controls'",
        "'./material'",
        "'./obj-model'",
        "'./position'",
        "'./raycaster'",
        "'./rotation'",
        "'./scale'",
        "'./sound'",
        "'./visible'",
        "'./wasd-controls'",
        "'./scene/canvas'",
        "'./scene/fog'",
        "'./scene/keyboard-shortcuts'",
        "'./scene/stats'",
        "'./scene/vr-mode-ui'",
        "'./loader'",
        "\"./camera\"",
        "\"./collada-model\"",
        "\"./cursor\"",
        "\"./geometry\"",
        "\"./light\"",
        "\"./loader\"",
        "\"./look-at\"",
        "\"./look-controls\"",
        "\"./material\"",
        "\"./obj-model\"",
        "\"./position\"",
        "\"./raycaster\"",
        "\"./rotation\"",
        "\"./scale\"",
        "\"./scene/canvas\"",
        "\"./scene/fog\"",
        "\"./scene/keyboard-shortcuts\"",
        "\"./scene/stats\"",
        "\"./scene/vr-mode-ui\"",
        "\"./sound\"",
        "\"./visible\"",
        "\"./wasd-controls\"",
        "'../utils'",
        "'../utils/debug'",
        "'../core/component'",
        "'../lib/three'",
        "'components:light:warn'",
        "'light'",
        "'spot'",
        "'color'",
        "'color'",
        "'hemisphere'",
        "'point'",
        "'spot'",
        "'point'",
        "'spot'",
        "'spot'",
        "'directional'",
        "'hemisphere'",
        "'point'",
        "'spot'",
        "'directional'",
        "'ambient'",
        "'directional'",
        "'hemisphere'",
        "'point'",
        "'spot'",
        "'type'",
        "'color'",
        "'groundColor'",
        "'light'",
        "'light'",
        "'light'",
        "'ambient'",
        "'directional'",
        "'hemisphere'",
        "'point'",
        "'spot'",
        "'%s is not a valid light type. '",
        "'Choose from ambient, directional, hemisphere, point, spot.'",
        "\"../core/component\"",
        "\"../lib/three\"",
        "\"../utils\"",
        "\"../utils/debug\"",
        "'../utils/debug'",
        "'../core/component'",
        "'../utils/src-loader'",
        "'../lib/three'",
        "'components:loader:warn'",
        "'loader'",
        "'material'",
        "''",
        "'obj'",
        "'obj'",
        "'collada'",
        "'loader component is deprecated. Use collada-model or obj-model component instead.'",
        "'mesh'",
        "'Model URL not provided'",
        "'obj'",
        "'collada'",
        "'Model format not supported'",
        "'mesh'",
        "'mesh'",
        "\"../core/component\"",
        "\"../lib/three\"",
        "\"../utils/debug\"",
        "\"../utils/src-loader\"",
        "'../utils/debug'",
        "'../utils/coordinates'",
        "'../core/component'",
        "'../lib/three'",
        "'components:look-at:warn'",
        "'look-at'",
        "''",
        "'object'",
        "'object'",
        "'object'",
        "'object'",
        "'\"'",
        "'\" does not point to a valid entity to look-at'",
        "'loaded'",
        "\"../core/component\"",
        "\"../lib/three\"",
        "\"../utils/coordinates\"",
        "\"../utils/debug\"",
        "'../core/component'",
        "'../lib/three'",
        "'look-controls'",
        "'position'",
        "'rotation'",
        "'render-target-loaded'",
        "'mousedown'",
        "'mousemove'",
        "'mouseup'",
        "'mouseout'",
        "'touchstart'",
        "'touchmove'",
        "'touchend'",
        "'a-scene'",
        "'mousedown'",
        "'mousemove'",
        "'mouseup'",
        "'mouseout'",
        "'touchstart'",
        "'touchmove'",
        "'touchend'",
        "'YXZ'",
        "'rotation'",
        "'position'",
        "'position'",
        "\"../core/component\"",
        "\"../lib/three\"",
        "'../utils/debug'",
        "'../utils'",
        "'../core/component'",
        "'../lib/three'",
        "'../core/shader'",
        "'components:material:error'",
        "'material'",
        "'standard'",
        "'front'",
        "'front'",
        "'back'",
        "'double'",
        "'Unknown shader schema '",
        "'time'",
        "'Unknown shader '",
        "'mesh'",
        "'mesh'",
        "'back'",
        "'double'",
        "\"../core/component\"",
        "\"../core/shader\"",
        "\"../lib/three\"",
        "\"../utils\"",
        "\"../utils/debug\"",
        "'../utils/debug'",
        "'../core/component'",
        "'../lib/three'",
        "'components:obj-model:warn'",
        "'obj-model'",
        "'material'",
        "'src'",
        "'src'",
        "'mesh'",
        "'material'",
        "'Material component properties are ignored when a .MTL is provided'",
        "'/'",
        "'mesh'",
        "'model-loaded'",
        "'obj'",
        "'mesh'",
        "'model-loaded'",
        "'obj'",
        "\"../core/component\"",
        "\"../lib/three\"",
        "\"../utils/debug\"",
        "'../core/component'",
        "'position'",
        "'vec3'",
        "\"../core/component\"",
        "'../core/component'",
        "'request-interval'",
        "'../lib/three'",
        "'raycaster'",
        "'intersection'",
        "'intersectioncleared'",
        "\"../core/component\"",
        "\"../lib/three\"",
        "\"request-interval\"",
        "'../lib/three'",
        "'../core/component'",
        "'rotation'",
        "'vec3'",
        "'YXZ'",
        "\"../core/component\"",
        "\"../lib/three\"",
        "'../core/component'",
        "'scale'",
        "'vec3'",
        "\"../core/component\"",
        "'../../core/component'",
        "'canvas'",
        "'selector'",
        "'canvas'",
        "'a-canvas'",
        "'%'",
        "'%'",
        "'touchmove'",
        "'render-target-loaded'",
        "\"../../core/component\"",
        "'../../core/component'",
        "'../../lib/three'",
        "'../../utils/debug'",
        "'components:fog:warn'",
        "'fog'",
        "'#000'",
        "'linear'",
        "'linear'",
        "'exponential'",
        "'Fog component can only be applied to <a-scene>'",
        "'color'",
        "'exponential'",
        "\"../../core/component\"",
        "\"../../lib/three\"",
        "\"../../utils/debug\"",
        "'../../core/component'",
        "'../../utils/'",
        "'../../lib/three'",
        "'keyboard-shortcuts'",
        "'keyup'",
        "'keyup'",
        "\"../../core/component\"",
        "\"../../lib/three\"",
        "\"../../utils/\"",
        "'../../core/component'",
        "'../../../vendor/rStats'",
        "'../../../vendor/rStats.extras'",
        "'../../lib/rStatsAframe'",
        "'a-hidden'",
        "'stats'",
        "'.rs-base'",
        "'enter-vr'",
        "'exit-vr'",
        "'enter-vr'",
        "'exit-vr'",
        "'rAF'",
        "'FPS'",
        "'fps'",
        "'Framerate'",
        "'fps'",
        "'raf'",
        "\"../../../vendor/rStats\"",
        "\"../../../vendor/rStats.extras\"",
        "\"../../core/component\"",
        "\"../../lib/rStatsAframe\"",
        "'../../core/component'",
        "'../../lib/three'",
        "'../../utils/'",
        "'a-enter-vr'",
        "'data-a-enter-vr-no-headset'",
        "'data-a-enter-vr-no-webvr'",
        "'a-enter-vr-button'",
        "'a-enter-vr-modal'",
        "'a-hidden'",
        "'a-orientation-modal'",
        "'vr-mode-ui'",
        "'canvas'",
        "'enter-vr'",
        "'exit-vr'",
        "'message'",
        "'loaderReady'",
        "'orientationchange'",
        "'vr-mode'",
        "'vr-mode'",
        "'div'",
        "'div'",
        "'p'",
        "'a'",
        "'href'",
        "'http://mozvr.com/#start'",
        "'target'",
        "'_blank'",
        "'Learn more.'",
        "'button'",
        "'Your browser supports WebVR. To enter VR, connect a headset, or use a mobile phone.'",
        "''",
        "'Your browser does not support WebVR. To enter VR, use a VR-compatible browser or a mobile phone.'",
        "''",
        "'click'",
        "'div'",
        "'button'",
        "'Exit VR'",
        "'click'",
        "\"../../core/component\"",
        "\"../../lib/three\"",
        "\"../../utils/\"",
        "'../utils/debug'",
        "'../utils'",
        "'../core/component'",
        "'../lib/three'",
        "'components:sound:warn'",
        "'sound'",
        "''",
        "'click'",
        "'src'",
        "'Audio source was not specified with `src`'",
        "'autoplay'",
        "'loop'",
        "'volume'",
        "'on'",
        "'sound'",
        "'sound'",
        "'camera-set-active'",
        "'camera'",
        "'sound'",
        "'sound-ended'",
        "\"../core/component\"",
        "\"../lib/three\"",
        "\"../utils\"",
        "\"../utils/debug\"",
        "'../core/component'",
        "'visible'",
        "'boolean'",
        "\"../core/component\"",
        "'../core/component'",
        "'../utils/'",
        "'../lib/three'",
        "'wasd-controls'",
        "'z'",
        "'x'",
        "'y'",
        "'z'",
        "'x'",
        "'x'",
        "'y'",
        "'z'",
        "'position'",
        "'position'",
        "'blur'",
        "'focus'",
        "'visibilitychange'",
        "'blur'",
        "'focus'",
        "'visibilitychange'",
        "'keydown'",
        "'keyup'",
        "'keydown'",
        "'keyup'",
        "'YXZ'",
        "'rotation'",
        "\"../core/component\"",
        "\"../lib/three\"",
        "\"../utils/\"",
        "'tween.js'",
        "'alternate'",
        "'alternate-reverse'",
        "'normal'",
        "'reverse'",
        "'linear'",
        "'ease'",
        "'ease-in'",
        "'ease-out'",
        "'ease-in-out'",
        "'ease-cubic'",
        "'ease-in-cubic'",
        "'ease-out-cubic'",
        "'ease-in-out-cubic'",
        "'ease-quad'",
        "'ease-in-quad'",
        "'ease-out-quad'",
        "'ease-in-out-quad'",
        "'ease-quart'",
        "'ease-in-quart'",
        "'ease-out-quart'",
        "'ease-in-out-quart'",
        "'ease-quint'",
        "'ease-in-quint'",
        "'ease-out-quint'",
        "'ease-in-out-quint'",
        "'ease-sine'",
        "'ease-in-sine'",
        "'ease-out-sine'",
        "'ease-in-out-sine'",
        "'ease-expo'",
        "'ease-in-expo'",
        "'ease-out-expo'",
        "'ease-in-out-expo'",
        "'ease-circ'",
        "'ease-in-circ'",
        "'ease-out-circ'",
        "'ease-in-out-circ'",
        "'ease-elastic'",
        "'ease-in-elastic'",
        "'ease-out-elastic'",
        "'ease-in-out-elastic'",
        "'ease-back'",
        "'ease-in-back'",
        "'ease-out-back'",
        "'ease-in-out-back'",
        "'ease-bounce'",
        "'ease-in-bounce'",
        "'ease-out-bounce'",
        "'ease-in-out-bounce'",
        "'backwards'",
        "'both'",
        "'forwards'",
        "'none'",
        "'indefinite'",
        "'rotation'",
        "'0'",
        "'ease'",
        "\"tween.js\"",
        "'./a-node'",
        "'../constants/animation'",
        "'../utils/'",
        "'./schema'",
        "'./a-register-element'",
        "'tween.js'",
        "'../utils/'",
        "'a-animation'",
        "'loaded'",
        "'nodeready'",
        "'animationend'",
        "'animationstart'",
        "'animationstop'",
        "'play'",
        "'pause'",
        "'stateadded'",
        "'stateremoved'",
        "'stateadded'",
        "'stateremoved'",
        "'#'",
        "'mixin'",
        "'.'",
        "'true'",
        "'false'",
        "''",
        "'true'",
        "\"../constants/animation\"",
        "\"../utils/\"",
        "\"./a-node\"",
        "\"./a-register-element\"",
        "\"./schema\"",
        "\"tween.js\"",
        "'./a-node'",
        "'../utils/debug'",
        "'./a-register-element'",
        "'../lib/three'",
        "'core:a-assets:warn'",
        "'a-assets'",
        "'audio'",
        "'img'",
        "'timeout'",
        "'video'",
        "'A-SCENE'",
        "'<a-assets> must be a child of a <a-scene>.'",
        "'Asset loading timed out in '",
        "'ms'",
        "'timeout'",
        "'src'",
        "'a-asset-item'",
        "'src'",
        "'autoplay'",
        "'preload'",
        "'auto'",
        "'loadeddata'",
        "'progress'",
        "'error'",
        "\"../lib/three\"",
        "\"../utils/debug\"",
        "\"./a-node\"",
        "\"./a-register-element\"",
        "'../utils/debug'",
        "'./a-register-element'",
        "'core:cubemap:warn'",
        "'a-cubemap'",
        "'[src]'",
        "'src'",
        "'<a-cubemap> did not contain exactly six elements each with a '",
        "'`src` attribute.'",
        "\"../utils/debug\"",
        "\"./a-register-element\"",
        "'./a-node'",
        "'./component'",
        "'./a-register-element'",
        "'../lib/three'",
        "'../utils/'",
        "'core:a-entity:debug'",
        "''",
        "''",
        "''",
        "''",
        "'mixin'",
        "' '",
        "'-'",
        "''",
        "' '",
        "' '",
        "'[id^='",
        "'-]'",
        "'-'",
        "\"Trying to add an element that doesn't have an `object3D`\"",
        "'child-attached'",
        "'nodeready'",
        "''",
        "'Component initialized: %s'",
        "'play'",
        "'pause'",
        "'mixin'",
        "''",
        "'string'",
        "'string'",
        "'stateadded'",
        "'stateremoved'",
        "'a-entity'",
        "\"../lib/three\"",
        "\"../utils/\"",
        "\"./a-node\"",
        "\"./a-register-element\"",
        "\"./component\"",
        "'./component'",
        "'./a-node'",
        "'./a-register-element'",
        "'a-mixin'",
        "'object'",
        "'string'",
        "\"./a-node\"",
        "\"./a-register-element\"",
        "\"./component\"",
        "'./a-register-element'",
        "'../utils/'",
        "'a-node'",
        "'mixin'",
        "'A-SCENE'",
        "'a-scene'",
        "'nodeready'",
        "'mixin'",
        "'loaded'",
        "'loaded'",
        "' '",
        "' '",
        "'mixin'",
        "' '",
        "'mixin'",
        "' '",
        "'mixin'",
        "' '",
        "'mixin'",
        "' '",
        "'a-mixin#'",
        "'mixin'",
        "' '",
        "\"../utils/\"",
        "\"./a-register-element\"",
        "'document-register-element'",
        "'attachedCallback'",
        "'attributeChangedCallback'",
        "'createdCallback'",
        "'attachedCallback'",
        "'attributeChangedCallback'",
        "'createdCallback'",
        "'attributeChangedCallback'",
        "'attachedCallback'",
        "'createdCallback'",
        "'detachedCallback'",
        "'./a-node'",
        "'./a-entity'",
        "\"./a-entity\"",
        "\"./a-node\"",
        "\"document-register-element\"",
        "'./schema'",
        "'./system'",
        "'../utils/'",
        "'string'",
        "'object'",
        "'componentchanged'",
        "'schemachanged'",
        "'The component `'",
        "'` has been already registered. '",
        "'Check that you are not loading two versions of the same component '",
        "'or two different components of the same name.'",
        "'string'",
        "'object'",
        "\"../utils/\"",
        "\"./schema\"",
        "\"./system\"",
        "'../utils/coordinates'",
        "'debug'",
        "'core:propertyTypes:warn'",
        "'array'",
        "'boolean'",
        "'color'",
        "'#FFF'",
        "'int'",
        "'number'",
        "'selector'",
        "''",
        "'selectorAll'",
        "''",
        "'src'",
        "''",
        "'string'",
        "''",
        "'time'",
        "'vec2'",
        "'vec3'",
        "'vec4'",
        "'type'",
        "'Property type '",
        "' is already registered.'",
        "'string'",
        "','",
        "', '",
        "'null'",
        "'false'",
        "'string'",
        "'string'",
        "'#'",
        "'id'",
        "''",
        "'#'",
        "'id'",
        "', '",
        "'src'",
        "''",
        "\"../utils/coordinates\"",
        "\"debug\"",
        "'./fullscreen'",
        "'./metaTags'",
        "'./wakelock'",
        "'../a-register-element'",
        "'../system'",
        "'../../lib/three'",
        "'tween.js'",
        "'../../utils/'",
        "'../a-entity'",
        "'../a-node'",
        "'a-scene'",
        "'canvas'",
        "''",
        "'keyboard-shortcuts'",
        "''",
        "'vr-mode-ui'",
        "''",
        "'render-target-loaded'",
        "'load'",
        "'resize'",
        "'fullscreen-exit'",
        "'vr-mode'",
        "'enter-vr'",
        "'vr-mode'",
        "'exit-vr'",
        "'100%'",
        "'100%'",
        "'antialias'",
        "'true'",
        "'loaded'",
        "'render-started'",
        "'renderstart'",
        "\"../../lib/three\"",
        "\"../../utils/\"",
        "\"../a-entity\"",
        "\"../a-node\"",
        "\"../a-register-element\"",
        "\"../system\"",
        "\"./fullscreen\"",
        "\"./metaTags\"",
        "\"./wakelock\"",
        "\"tween.js\"",
        "'../../utils/'",
        "'mozfullscreenchange'",
        "'webkitfullscreenchange'",
        "'message'",
        "'landscape'",
        "'fullscreen'",
        "'enter'",
        "'exit'",
        "'fullscreen'",
        "'fullscreen-enter'",
        "'fullscreen'",
        "'fullscreen-exit'",
        "\"../../utils/\"",
        "'../../utils'",
        "'viewport'",
        "'width=device-width,initial-scale=1,maximum-scale=1,shrink-to-fit=no,user-scalable=no,minimal-ui'",
        "'mobile-web-app-capable'",
        "'yes'",
        "'theme-color'",
        "'black'",
        "'icon'",
        "'192x192'",
        "'https://aframe.io/images/aframe-logo-192.png'",
        "'apple-mobile-web-app-capable'",
        "'yes'",
        "'apple-mobile-web-app-status-bar-style'",
        "'black'",
        "'apple-touch-icon'",
        "'https://aframe.io/images/aframe-logo-152.png'",
        "'meta'",
        "'meta[name=\"'",
        "'\"]'",
        "'link'",
        "'link[rel=\"'",
        "'\"]'",
        "'script'",
        "\"../../utils\"",
        "'../../../vendor/wakelock/wakelock'",
        "'enter-vr'",
        "'exit-vr'",
        "\"../../../vendor/wakelock/wakelock\"",
        "'../utils/debug'",
        "'./propertyTypes'",
        "'core:schema:warn'",
        "'type'",
        "'string'",
        "'default'",
        "'boolean'",
        "'number'",
        "'array'",
        "'string'",
        "'bool'",
        "'boolean'",
        "'float'",
        "'number'",
        "'Unknown property type: '",
        "'default'",
        "'object'",
        "'Unknown component property: '",
        "'string'",
        "'undefined'",
        "'object'",
        "'Unknown component property: '",
        "'object'",
        "\"../utils/debug\"",
        "\"./propertyTypes\"",
        "'./schema'",
        "'../lib/three'",
        "'f'",
        "'f'",
        "'v4'",
        "'v3'",
        "'v2'",
        "'v3'",
        "'void main() {'",
        "'gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);'",
        "'}'",
        "'void main() {'",
        "'gl_FragColor = vec4(1.0,0.0,1.0,1.0);'",
        "'}'",
        "'attribute'",
        "'uniform'",
        "'attribute'",
        "'uniform'",
        "'uniform'",
        "'vec2'",
        "'vec3'",
        "'vec4'",
        "'color'",
        "'The shader '",
        "' has been already registered'",
        "\"../lib/three\"",
        "\"./schema\"",
        "'./component'",
        "'a-scene'",
        "'The system `'",
        "'` has been already registered. '",
        "'Check that you are not loading two versions of the same system '",
        "'or two different systems of the same name.'",
        "\"./component\"",
        "'../../core/a-node'",
        "'../../core/a-register-element'",
        "'a-event'",
        "''",
        "'target'",
        "'name'",
        "'type'",
        "'a-scene'",
        "'<'",
        "'>'",
        "' has been DEPRECATED. Use <a-event name=\"'",
        "'\">'",
        "' instead.'",
        "'type'",
        "'<a-event type> has been DEPRECATED. Use <a-event name> instead.'",
        "'target'",
        "'.'",
        "'.'",
        "\"../../core/a-node\"",
        "\"../../core/a-register-element\"",
        "'material.color'",
        "'material.metalness'",
        "'material.opacity'",
        "'material.repeat'",
        "'material.roughness'",
        "'material.shader'",
        "'material.side'",
        "'material.src'",
        "'geometry.translate'",
        "'material.transparent'",
        "'#'",
        "'url('",
        "')'",
        "'./primitives/a-box'",
        "'./primitives/a-camera'",
        "'./primitives/a-circle'",
        "'./primitives/a-collada-model'",
        "'./primitives/a-cone'",
        "'./primitives/a-cursor'",
        "'./primitives/a-curvedimage'",
        "'./primitives/a-cylinder'",
        "'./primitives/a-image'",
        "'./primitives/a-light'",
        "'./primitives/a-model'",
        "'./primitives/a-obj-model'",
        "'./primitives/a-plane'",
        "'./primitives/a-ring'",
        "'./primitives/a-sky'",
        "'./primitives/a-sphere'",
        "'./primitives/a-torus'",
        "'./primitives/a-video'",
        "'./primitives/a-videosphere'",
        "\"./primitives/a-box\"",
        "\"./primitives/a-camera\"",
        "\"./primitives/a-circle\"",
        "\"./primitives/a-collada-model\"",
        "\"./primitives/a-cone\"",
        "\"./primitives/a-cursor\"",
        "\"./primitives/a-curvedimage\"",
        "\"./primitives/a-cylinder\"",
        "\"./primitives/a-image\"",
        "\"./primitives/a-light\"",
        "\"./primitives/a-model\"",
        "\"./primitives/a-obj-model\"",
        "\"./primitives/a-plane\"",
        "\"./primitives/a-ring\"",
        "\"./primitives/a-sky\"",
        "\"./primitives/a-sphere\"",
        "\"./primitives/a-torus\"",
        "\"./primitives/a-video\"",
        "\"./primitives/a-videosphere\"",
        "'../getMeshMixin'",
        "'../registerPrimitive'",
        "'../../../utils/'",
        "'box'",
        "'geometry.depth'",
        "'geometry.height'",
        "'geometry.translate'",
        "'geometry.width'",
        "'a-box'",
        "'a-cube'",
        "'<a-cube> is deprecated. Use <a-box> instead.'",
        "\"../../../utils/\"",
        "\"../getMeshMixin\"",
        "\"../registerPrimitive\"",
        "'../registerPrimitive'",
        "'a-camera'",
        "'look-controls'",
        "'wasd-controls'",
        "'camera.active'",
        "'camera.far'",
        "'camera.fov'",
        "'look-controls-enabled'",
        "'look-controls.enabled'",
        "'camera.near'",
        "'wasd-controls-enabled'",
        "'wasd-controls.enabled'",
        "'cursor-color'",
        "'a-camera[cursor-color] has been removed. Use a-cursor[color] instead.'",
        "'cursor-maxdistance'",
        "'a-camera[cursor-maxdistance] has been removed. Use a-cursor[max-distance] instead.'",
        "'cursor-offset'",
        "'a-camera[cursor-offset] has been removed. Use a-cursor[position] instead.'",
        "'cursor-opacity'",
        "'a-camera[cursor-offset] has been removed. Use a-cursor[opacity] instead.'",
        "'cursor-scale'",
        "'a-camera[cursor-scale] has been removed. Use a-cursor[scale] instead.'",
        "'cursor-visible'",
        "'a-camera[cursor-visible] has been removed. Use a-cursor[visible] instead.'",
        "\"../registerPrimitive\"",
        "'../getMeshMixin'",
        "'../registerPrimitive'",
        "'../../../utils/'",
        "'a-circle'",
        "'circle'",
        "'radius'",
        "'geometry.radius'",
        "'segments'",
        "'geometry.segments'",
        "'theta-length'",
        "'geometry.theta-length'",
        "'theta-start'",
        "'geometry.theta-start'",
        "\"../../../utils/\"",
        "\"../getMeshMixin\"",
        "\"../registerPrimitive\"",
        "'../getMeshMixin'",
        "'../registerPrimitive'",
        "'../../../utils/'",
        "'a-collada-model'",
        "'collada-model'",
        "\"../../../utils/\"",
        "\"../getMeshMixin\"",
        "\"../registerPrimitive\"",
        "'../getMeshMixin'",
        "'../registerPrimitive'",
        "'../../../utils/'",
        "'a-cone'",
        "'cone'",
        "'geometry.height'",
        "'open-ended'",
        "'geometry.openEnded'",
        "'radius-bottom'",
        "'geometry.radiusBottom'",
        "'radius-top'",
        "'geometry.radiusTop'",
        "'segments-height'",
        "'geometry.segmentsHeight'",
        "'segments-radial'",
        "'geometry.segmentsRadial'",
        "'theta-length'",
        "'geometry.thetaLength'",
        "'theta-start'",
        "'geometry.thetaStart'",
        "'geometry.translate'",
        "\"../../../utils/\"",
        "\"../getMeshMixin\"",
        "\"../registerPrimitive\"",
        "'../getMeshMixin'",
        "'../registerPrimitive'",
        "'../../../utils/'",
        "'a-cursor'",
        "'ring'",
        "'flat'",
        "'cursor.fuse'",
        "'max-distance'",
        "'cursor.maxDistance'",
        "'cursor.timeout'",
        "\"../../../utils/\"",
        "\"../getMeshMixin\"",
        "\"../registerPrimitive\"",
        "'../getMeshMixin'",
        "'../registerPrimitive'",
        "'../../../utils/'",
        "'a-curvedimage'",
        "'cylinder'",
        "'#FFF'",
        "'flat'",
        "'double'",
        "'-1 1'",
        "'geometry.height'",
        "'open-ended'",
        "'geometry.openEnded'",
        "'geometry.radius'",
        "'geometry.segmentsRadial'",
        "'geometry.thetaStart'",
        "'theta-length'",
        "'geometry.thetaLength'",
        "'theta-start'",
        "'geometry.thetaStart'",
        "'geometry.translate'",
        "'width'",
        "'geometry.thetaLength'",
        "\"../../../utils/\"",
        "\"../getMeshMixin\"",
        "\"../registerPrimitive\"",
        "'../getMeshMixin'",
        "'../registerPrimitive'",
        "'../../../utils/'",
        "'a-cylinder'",
        "'cylinder'",
        "'geometry.height'",
        "'open-ended'",
        "'geometry.openEnded'",
        "'geometry.radius'",
        "'radius-bottom'",
        "'geometry.radiusBottom'",
        "'radius-top'",
        "'geometry.radiusTop'",
        "'segments-radial'",
        "'geometry.segmentsRadial'",
        "'theta-length'",
        "'geometry.thetaLength'",
        "'theta-start'",
        "'geometry.thetaStart'",
        "'geometry.translate'",
        "\"../../../utils/\"",
        "\"../getMeshMixin\"",
        "\"../registerPrimitive\"",
        "'../getMeshMixin'",
        "'../registerPrimitive'",
        "'../../../utils/'",
        "'a-image'",
        "'plane'",
        "'#FFF'",
        "'flat'",
        "'double'",
        "'geometry.height'",
        "'geometry.translate'",
        "'geometry.width'",
        "\"../../../utils/\"",
        "\"../getMeshMixin\"",
        "\"../registerPrimitive\"",
        "'../registerPrimitive'",
        "'a-light'",
        "'light.angle'",
        "'light.color'",
        "'ground-color'",
        "'light.groundColor'",
        "'light.decay'",
        "'light.distance'",
        "'light.exponent'",
        "'light.intensity'",
        "'light.type'",
        "\"../registerPrimitive\"",
        "'../getMeshMixin'",
        "'../registerPrimitive'",
        "'../../../utils/'",
        "'a-model'",
        "'<a-model> is deprecated. Use <a-obj-model> or <a-collada-model> instead.'",
        "'collada'",
        "'#FFF'",
        "'loader.src'",
        "'loader.format'",
        "\"../../../utils/\"",
        "\"../getMeshMixin\"",
        "\"../registerPrimitive\"",
        "'../getMeshMixin'",
        "'../registerPrimitive'",
        "'../../../utils/'",
        "'a-obj-model'",
        "'obj-model.obj'",
        "'obj-model.mtl'",
        "\"../../../utils/\"",
        "\"../getMeshMixin\"",
        "\"../registerPrimitive\"",
        "'../getMeshMixin'",
        "'../registerPrimitive'",
        "'../../../utils/'",
        "'a-plane'",
        "'plane'",
        "'geometry.height'",
        "'geometry.translate'",
        "'geometry.width'",
        "\"../../../utils/\"",
        "\"../getMeshMixin\"",
        "\"../registerPrimitive\"",
        "'../getMeshMixin'",
        "'../registerPrimitive'",
        "'../../../utils/'",
        "'a-ring'",
        "'ring'",
        "'radius-inner'",
        "'geometry.radiusInner'",
        "'radius-outer'",
        "'geometry.radiusOuter'",
        "'segments-phi'",
        "'geometry.segments-phi'",
        "'segments-theta'",
        "'geometry.segments-theta'",
        "'theta-length'",
        "'geometry.theta-length'",
        "'theta-start'",
        "'geometry.theta-start'",
        "\"../../../utils/\"",
        "\"../getMeshMixin\"",
        "\"../registerPrimitive\"",
        "'../getMeshMixin'",
        "'../registerPrimitive'",
        "'../../../utils/'",
        "'a-sky'",
        "'sphere'",
        "'#FFF'",
        "'flat'",
        "'-1 1 1'",
        "'geometry.radius'",
        "'segments-width'",
        "'geometry.segmentsWidth'",
        "'segments-height'",
        "'geometry.segmentsHeight'",
        "\"../../../utils/\"",
        "\"../getMeshMixin\"",
        "\"../registerPrimitive\"",
        "'../getMeshMixin'",
        "'../registerPrimitive'",
        "'../../../utils/'",
        "'a-sphere'",
        "'sphere'",
        "'geometry.radius'",
        "'segments-height'",
        "'geometry.segmentsHeight'",
        "'segments-width'",
        "'geometry.segmentsWidth'",
        "'geometry.translate'",
        "\"../../../utils/\"",
        "\"../getMeshMixin\"",
        "\"../registerPrimitive\"",
        "'../getMeshMixin'",
        "'../registerPrimitive'",
        "'../../../utils/'",
        "'a-torus'",
        "'torus'",
        "'arc'",
        "'geometry.arc'",
        "'radius'",
        "'geometry.radius'",
        "'radius-tubular'",
        "'geometry.radiusTubular'",
        "'segments-radial'",
        "'geometry.segmentsRadial'",
        "'segments-tubular'",
        "'geometry.segmentsTubular'",
        "\"../../../utils/\"",
        "\"../getMeshMixin\"",
        "\"../registerPrimitive\"",
        "'../getMeshMixin'",
        "'../registerPrimitive'",
        "'../../../utils/'",
        "'a-video'",
        "'plane'",
        "'#FFF'",
        "'flat'",
        "'double'",
        "'geometry.height'",
        "'geometry.translate'",
        "'geometry.width'",
        "\"../../../utils/\"",
        "\"../getMeshMixin\"",
        "\"../registerPrimitive\"",
        "'../getMeshMixin'",
        "'../registerPrimitive'",
        "'../../../utils/'",
        "'a-videosphere'",
        "'sphere'",
        "'#FFF'",
        "'flat'",
        "'-1 1 1'",
        "'geometry.radius'",
        "'segments-height'",
        "'geometry.segmentsHeight'",
        "'segments-width'",
        "'geometry.segmentsWidth'",
        "\"../../../utils/\"",
        "\"../getMeshMixin\"",
        "\"../registerPrimitive\"",
        "'../../core/a-entity'",
        "'../../core/component'",
        "'../../core/a-register-element'",
        "'../../utils/'",
        "'extras:primitives'",
        "'Registering <%s>'",
        "'.'",
        "'.'",
        "'object'",
        "\"../../core/a-entity\"",
        "\"../../core/a-register-element\"",
        "\"../../core/component\"",
        "\"../../utils/\"",
        "'promise-polyfill'",
        "'present'",
        "'./style/aframe.css'",
        "'./style/rStats.css'",
        "'./core/scene/a-scene'",
        "'./core/component'",
        "'./core/component'",
        "'./extras/primitives/registerPrimitive'",
        "'./core/shader'",
        "'./core/system'",
        "'./core/shader'",
        "'./core/system'",
        "'./lib/three'",
        "'tween.js'",
        "'../package'",
        "'./utils/'",
        "'./systems/index'",
        "'./components/index'",
        "'./shaders/index'",
        "'./core/a-node'",
        "'./core/a-entity'",
        "'webvr-polyfill'",
        "'./core/a-animation'",
        "'./core/a-assets'",
        "'./core/a-cubemap'",
        "'./core/a-mixin'",
        "'./extras/declarative-events/'",
        "'./extras/primitives/'",
        "'A-Frame Version:'",
        "'three Version:'",
        "'three'",
        "'WebVR Polyfill Version:'",
        "'webvr-polyfill'",
        "\"../package\"",
        "\"./components/index\"",
        "\"./core/a-animation\"",
        "\"./core/a-assets\"",
        "\"./core/a-cubemap\"",
        "\"./core/a-entity\"",
        "\"./core/a-mixin\"",
        "\"./core/a-node\"",
        "\"./core/component\"",
        "\"./core/scene/a-scene\"",
        "\"./core/shader\"",
        "\"./core/system\"",
        "\"./extras/declarative-events/\"",
        "\"./extras/primitives/\"",
        "\"./extras/primitives/registerPrimitive\"",
        "\"./lib/three\"",
        "\"./shaders/index\"",
        "\"./style/aframe.css\"",
        "\"./style/rStats.css\"",
        "\"./systems/index\"",
        "\"./utils/\"",
        "\"present\"",
        "\"promise-polyfill\"",
        "\"tween.js\"",
        "\"webvr-polyfill\"",
        "'Entities'",
        "'Load Time'",
        "'A-Frame'",
        "'te'",
        "'lt'",
        "'te'",
        "'a-entity'",
        "'lt'",
        "'render-started'",
        "'object'",
        "'three'",
        "''",
        "''",
        "'../../node_modules/three/examples/js/loaders/OBJLoader'",
        "'../../node_modules/three/examples/js/loaders/MTLLoader'",
        "'../../node_modules/three/examples/js/loaders/ColladaLoader'",
        "'../../node_modules/three/examples/js/controls/VRControls'",
        "'../../node_modules/three/examples/js/effects/VREffect'",
        "\"undefined\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"../../node_modules/three/examples/js/controls/VRControls\"",
        "\"../../node_modules/three/examples/js/effects/VREffect\"",
        "\"../../node_modules/three/examples/js/loaders/ColladaLoader\"",
        "\"../../node_modules/three/examples/js/loaders/MTLLoader\"",
        "\"../../node_modules/three/examples/js/loaders/OBJLoader\"",
        "\"three\"",
        "'../core/shader'",
        "'../utils/src-loader'",
        "'../lib/three'",
        "'../utils/texture'",
        "'flat'",
        "'color'",
        "''",
        "''",
        "\"../core/shader\"",
        "\"../lib/three\"",
        "\"../utils/src-loader\"",
        "\"../utils/texture\"",
        "'./flat'",
        "'./standard'",
        "\"./flat\"",
        "\"./standard\"",
        "'../core/shader'",
        "'../utils/src-loader'",
        "'../lib/three'",
        "'../utils/'",
        "'standard'",
        "'color'",
        "''",
        "''",
        "''",
        "\"../core/shader\"",
        "\"../lib/three\"",
        "\"../utils/\"",
        "\"../utils/src-loader\"",
        "\"html{bottom:0;left:0;position:fixed;right:0;top:0}body{height:100%;margin:0;overflow:hidden;padding:0;width:100%}.a-hidden{display:none!important}.a-canvas{height:100%;left:0;position:absolute;top:0;width:100%}a-assets,a-scene img,a-scene video{display:none}.a-enter-vr{align-items:flex-end;-webkit-align-items:flex-end;bottom:5px;display:flex;display:-webkit-flex;font-family:sans-serif,monospace;font-size:13px;font-weight:200;line-height:16px;height:72px;position:fixed;right:5px}.a-enter-vr-button{background:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20245.82%20141.73%22%3E%3Cdefs%3E%3Cstyle%3E.a%7Bfill%3A%23fff%3Bfill-rule%3Aevenodd%3B%7D%3C%2Fstyle%3E%3C%2Fdefs%3E%3Ctitle%3Emask%3C%2Ftitle%3E%3Cpath%20class%3D%22a%22%20d%3D%22M175.56%2C111.37c-22.52%2C0-40.77-18.84-40.77-42.07S153%2C27.24%2C175.56%2C27.24s40.77%2C18.84%2C40.77%2C42.07S198.08%2C111.37%2C175.56%2C111.37ZM26.84%2C69.31c0-23.23%2C18.25-42.07%2C40.77-42.07s40.77%2C18.84%2C40.77%2C42.07-18.26%2C42.07-40.77%2C42.07S26.84%2C92.54%2C26.84%2C69.31ZM27.27%2C0C11.54%2C0%2C0%2C12.34%2C0%2C28.58V110.9c0%2C16.24%2C11.54%2C30.83%2C27.27%2C30.83H99.57c2.17%2C0%2C4.19-1.83%2C5.4-3.7L116.47%2C118a8%2C8%2C0%2C0%2C1%2C12.52-.18l11.51%2C20.34c1.2%2C1.86%2C3.22%2C3.61%2C5.39%2C3.61h72.29c15.74%2C0%2C27.63-14.6%2C27.63-30.83V28.58C245.82%2C12.34%2C233.93%2C0%2C218.19%2C0H27.27Z%22%2F%3E%3C%2Fsvg%3E) 50% 50%/70% 70% no-repeat rgba(0,0,0,.35);border:0;bottom:0;color:#FFF;cursor:pointer;height:50px;position:absolute;right:0;transition:background-color .05s ease;-webkit-transition:background-color .05s ease;width:60px;z-index:999999}.a-enter-vr-button:active,.a-enter-vr-button:hover{background-color:#666}[data-a-enter-vr-no-webvr] .a-enter-vr-button{border-color:#666;opacity:.65}[data-a-enter-vr-no-webvr] .a-enter-vr-button:active,[data-a-enter-vr-no-webvr] .a-enter-vr-button:hover{background-color:rgba(0,0,0,.35);cursor:not-allowed}.a-enter-vr-modal{background-color:#666;border-radius:0;color:#FFF;height:32px;margin-right:70px;padding:9px;width:280px;position:relative;display:none}.a-enter-vr-modal:after{border-bottom:10px solid transparent;border-left:10px solid #666;border-top:10px solid transparent;display:inline-block;content:'';position:absolute;right:-5px;top:5px;width:0;height:0}.a-enter-vr-modal p{margin:0;display:inline}.a-enter-vr-modal p:after{content:' '}.a-enter-vr-modal a{color:#FFF;display:inline}[data-a-enter-vr-no-headset].a-enter-vr:hover .a-enter-vr-modal,[data-a-enter-vr-no-webvr].a-enter-vr:hover .a-enter-vr-modal{display:block}.a-orientation-modal{position:absolute;width:100%;height:100%;top:0;left:0;background:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20xmlns%3Axlink%3D%22http%3A//www.w3.org/1999/xlink%22%20version%3D%221.1%22%20x%3D%220px%22%20y%3D%220px%22%20viewBox%3D%220%200%2090%2090%22%20enable-background%3D%22new%200%200%2090%2090%22%20xml%3Aspace%3D%22preserve%22%3E%3Cpolygon%20points%3D%220%2C0%200%2C0%200%2C0%20%22%3E%3C/polygon%3E%3Cg%3E%3Cpath%20d%3D%22M71.545%2C48.145h-31.98V20.743c0-2.627-2.138-4.765-4.765-4.765H18.456c-2.628%2C0-4.767%2C2.138-4.767%2C4.765v42.789%20%20%20c0%2C2.628%2C2.138%2C4.766%2C4.767%2C4.766h5.535v0.959c0%2C2.628%2C2.138%2C4.765%2C4.766%2C4.765h42.788c2.628%2C0%2C4.766-2.137%2C4.766-4.765V52.914%20%20%20C76.311%2C50.284%2C74.173%2C48.145%2C71.545%2C48.145z%20M18.455%2C16.935h16.344c2.1%2C0%2C3.808%2C1.708%2C3.808%2C3.808v27.401H37.25V22.636%20%20%20c0-0.264-0.215-0.478-0.479-0.478H16.482c-0.264%2C0-0.479%2C0.214-0.479%2C0.478v36.585c0%2C0.264%2C0.215%2C0.478%2C0.479%2C0.478h7.507v7.644%20%20%20h-5.534c-2.101%2C0-3.81-1.709-3.81-3.81V20.743C14.645%2C18.643%2C16.354%2C16.935%2C18.455%2C16.935z%20M16.96%2C23.116h19.331v25.031h-7.535%20%20%20c-2.628%2C0-4.766%2C2.139-4.766%2C4.768v5.828h-7.03V23.116z%20M71.545%2C73.064H28.757c-2.101%2C0-3.81-1.708-3.81-3.808V52.914%20%20%20c0-2.102%2C1.709-3.812%2C3.81-3.812h42.788c2.1%2C0%2C3.809%2C1.71%2C3.809%2C3.812v16.343C75.354%2C71.356%2C73.645%2C73.064%2C71.545%2C73.064z%22%3E%3C/path%3E%3Cpath%20d%3D%22M28.919%2C58.424c-1.466%2C0-2.659%2C1.193-2.659%2C2.66c0%2C1.466%2C1.193%2C2.658%2C2.659%2C2.658c1.468%2C0%2C2.662-1.192%2C2.662-2.658%20%20%20C31.581%2C59.617%2C30.387%2C58.424%2C28.919%2C58.424z%20M28.919%2C62.786c-0.939%2C0-1.703-0.764-1.703-1.702c0-0.939%2C0.764-1.704%2C1.703-1.704%20%20%20c0.94%2C0%2C1.705%2C0.765%2C1.705%2C1.704C30.623%2C62.022%2C29.858%2C62.786%2C28.919%2C62.786z%22%3E%3C/path%3E%3Cpath%20d%3D%22M69.654%2C50.461H33.069c-0.264%2C0-0.479%2C0.215-0.479%2C0.479v20.288c0%2C0.264%2C0.215%2C0.478%2C0.479%2C0.478h36.585%20%20%20c0.263%2C0%2C0.477-0.214%2C0.477-0.478V50.939C70.131%2C50.676%2C69.917%2C50.461%2C69.654%2C50.461z%20M69.174%2C51.417V70.75H33.548V51.417H69.174z%22%3E%3C/path%3E%3Cpath%20d%3D%22M45.201%2C30.296c6.651%2C0%2C12.233%2C5.351%2C12.551%2C11.977l-3.033-2.638c-0.193-0.165-0.507-0.142-0.675%2C0.048%20%20%20c-0.174%2C0.198-0.153%2C0.501%2C0.045%2C0.676l3.883%2C3.375c0.09%2C0.075%2C0.198%2C0.115%2C0.312%2C0.115c0.141%2C0%2C0.273-0.061%2C0.362-0.166%20%20%20l3.371-3.877c0.173-0.2%2C0.151-0.502-0.047-0.675c-0.194-0.166-0.508-0.144-0.676%2C0.048l-2.592%2C2.979%20%20%20c-0.18-3.417-1.629-6.605-4.099-9.001c-2.538-2.461-5.877-3.817-9.404-3.817c-0.264%2C0-0.479%2C0.215-0.479%2C0.479%20%20%20C44.72%2C30.083%2C44.936%2C30.296%2C45.201%2C30.296z%22%3E%3C/path%3E%3C/g%3E%3C/svg%3E) center center/50% 50% no-repeat rgba(244,244,244,1)}.a-orientation-modal:after{display:block;content:\\\"Insert phone into Cardboard holder.\\\";color:#333;font-family:sans-serif,monospace;font-size:13px;text-align:center;position:absolute;width:100%;top:70%;transform:translateY(-70%)}.a-orientation-modal button{background:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20xmlns%3Axlink%3D%22http%3A//www.w3.org/1999/xlink%22%20version%3D%221.1%22%20x%3D%220px%22%20y%3D%220px%22%20viewBox%3D%220%200%20100%20100%22%20enable-background%3D%22new%200%200%20100%20100%22%20xml%3Aspace%3D%22preserve%22%3E%3Cpath%20fill%3D%22%23000000%22%20d%3D%22M55.209%2C50l17.803-17.803c1.416-1.416%2C1.416-3.713%2C0-5.129c-1.416-1.417-3.713-1.417-5.129%2C0L50.08%2C44.872%20%20L32.278%2C27.069c-1.416-1.417-3.714-1.417-5.129%2C0c-1.417%2C1.416-1.417%2C3.713%2C0%2C5.129L44.951%2C50L27.149%2C67.803%20%20c-1.417%2C1.416-1.417%2C3.713%2C0%2C5.129c0.708%2C0.708%2C1.636%2C1.062%2C2.564%2C1.062c0.928%2C0%2C1.856-0.354%2C2.564-1.062L50.08%2C55.13l17.803%2C17.802%20%20c0.708%2C0.708%2C1.637%2C1.062%2C2.564%2C1.062s1.856-0.354%2C2.564-1.062c1.416-1.416%2C1.416-3.713%2C0-5.129L55.209%2C50z%22%3E%3C/path%3E%3C/svg%3E);width:50px;height:50px;border:none;text-indent:-9999px}@media (min-width:480px){.a-enter-vr{bottom:20px;right:20px}.a-enter-vr-modal{width:400px}}\"",
        "\"browserify-css\"",
        "\"href\"",
        "\"src/style/aframe.css\"",
        "\"browserify-css\"",
        "\".rs-base{background-color:#EF2D5E;border-radius:0;font:10px monospace;left:5px;line-height:1em;opacity:.75;overflow:hidden;padding:10px;position:fixed;top:5px;width:300px;z-index:10000}.rs-base div.hidden{display:none}.rs-base h1{color:#fff;cursor:pointer;font-size:1.4em;font-weight:300;margin:0 0 5px;padding:0}.rs-group{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-direction:column-reverse;flex-direction:column-reverse;margin-bottom:5px}.rs-group:last-child{margin-bottom:0}.rs-counter-base{align-items:center;display:-webkit-box;display:-webkit-flex;display:flex;height:10px;-webkit-justify-content:space-between;justify-content:space-between;margin:2px 0}.rs-counter-id{font-weight:300;-webkit-box-ordinal-group:0;-webkit-order:0;order:0;width:50px}.rs-counter-value{font-weight:300;-webkit-box-ordinal-group:1;-webkit-order:1;order:1;text-align:right;width:35px}.rs-canvas{-webkit-box-ordinal-group:2;-webkit-order:2;order:2}@media (min-width:480px){.rs-base{left:20px;top:20px}}\"",
        "\"browserify-css\"",
        "\"href\"",
        "\"src/style/rStats.css\"",
        "\"browserify-css\"",
        "'../core/system'",
        "'data-aframe-default-camera'",
        "'camera'",
        "'[camera]'",
        "'camera-ready'",
        "'a-entity'",
        "'position'",
        "''",
        "'a-entity'",
        "'camera'",
        "'active'",
        "'wasd-controls'",
        "'look-controls'",
        "'camera-ready'",
        "'[camera]'",
        "'camera'",
        "'active'",
        "'[camera]'",
        "'['",
        "']'",
        "'[camera]'",
        "'camera'",
        "'active'",
        "'camera-set-active'",
        "'camera'",
        "'active'",
        "'['",
        "']'",
        "\"../core/system\"",
        "'./camera'",
        "'./material'",
        "'./light'",
        "\"./camera\"",
        "\"./light\"",
        "\"./material\"",
        "'../core/system'",
        "'data-aframe-default-light'",
        "'light'",
        "'['",
        "']'",
        "'a-entity'",
        "'a-entity'",
        "'light'",
        "'#fff'",
        "'ambient'",
        "''",
        "'light'",
        "'#fff'",
        "'position'",
        "''",
        "\"../core/system\"",
        "'../core/system'",
        "'material'",
        "\"../core/system\"",
        "'object'",
        "'string'",
        "' '",
        "' '",
        "'object'",
        "' '",
        "'debug'",
        "'object-assign'",
        "'gray'",
        "'red'",
        "'gray'",
        "'orange'",
        "':'",
        "'true'",
        "'*'",
        "'*:error,*:info,*:warn'",
        "'_process'",
        "\"_process\"",
        "\"debug\"",
        "\"object-assign\"",
        "'deep-assign'",
        "'object-assign'",
        "'./coordinates'",
        "'./debug'",
        "'./styleParser'",
        "'./texture'",
        "'undefined'",
        "' '",
        "'g'",
        "''",
        "'\\\\['",
        "'\\\\]'",
        "'[\\\\?&]'",
        "'=([^&#]*)'",
        "''",
        "' '",
        "'./src-loader'",
        "\"./coordinates\"",
        "\"./debug\"",
        "\"./src-loader\"",
        "\"./styleParser\"",
        "\"./texture\"",
        "\"deep-assign\"",
        "\"object-assign\"",
        "'./debug'",
        "'utils:src-loader:warn'",
        "'IMG'",
        "'VIDEO'",
        "'\"%s\" does not point to a valid <img> or <video> element'",
        "''",
        "'url\\((.+)\\)\\s*,\\s*'",
        "'A-CUBEMAP'",
        "'Selector \"%s\" does not point to <a-cubemap>'",
        "'load'",
        "'error'",
        "'No element was found matching the selector: \"%s\"'",
        "'\"%s\" is not a valid selector'",
        "\"./debug\"",
        "'style-attr'",
        "'string'",
        "'string'",
        "\"style-attr\"",
        "'./debug'",
        "'../lib/three'",
        "'material-texture-loaded'",
        "'components:texture:error'",
        "'components:texture:warn'",
        "'1 1'",
        "'string'",
        "'src'",
        "'string'",
        "'loadeddata'",
        "'material-video-loadeddata'",
        "'ended'",
        "'material-video-ended'",
        "'id'",
        "''",
        "':'",
        "';'",
        "'string'",
        "'`$s` could not be fetched (Error code: %s; Response: %s)'",
        "' '",
        "'video'",
        "'webkit-playsinline'",
        "''",
        "'error'",
        "'`$s` is not a valid video'",
        "'autoplay'",
        "'false'",
        "'controls'",
        "'false'",
        "'loop'",
        "'false'",
        "'loop'",
        "'preload'",
        "'false'",
        "'none'",
        "'crossorigin'",
        "'webkit-playsinline'",
        "'webkit-playsinline'",
        "''",
        "\"../lib/three\"",
        "\"./debug\"",
        "'Calls (hook)'",
        "'drawElements (hook)'",
        "'drawArrays (hook)'",
        "'WebGL'",
        "'allcalls'",
        "'drawelements'",
        "'drawarrays'",
        "'useprogram'",
        "'bindtexture'",
        "'glfaces'",
        "'glvertices'",
        "'glpoints'",
        "'allcalls'",
        "'drawelements'",
        "'drawarrays'",
        "'allcalls'",
        "'drawElements'",
        "'drawArrays'",
        "'bindTexture'",
        "'useProgram'",
        "'glfaces'",
        "'glvertices'",
        "'glpoints'",
        "'renderer.info.memory.geometries'",
        "'Geometries'",
        "'renderer.info.memory.textures'",
        "'Textures'",
        "'renderer.info.memory.programs'",
        "'Programs'",
        "'renderer.info.render.calls'",
        "'Calls'",
        "'renderer.info.render.faces'",
        "'Faces'",
        "'renderer.info.render.points'",
        "'Points'",
        "'renderer.info.render.vertices'",
        "'Vertices'",
        "'Three.js - memory'",
        "'renderer.info.memory.geometries'",
        "'renderer.info.memory.programs'",
        "'renderer.info.memory.textures'",
        "'Three.js - render'",
        "'renderer.info.render.calls'",
        "'renderer.info.render.faces'",
        "'renderer.info.render.points'",
        "'renderer.info.render.vertices'",
        "'renderer.info.memory.geometries'",
        "'renderer.info.memory.programs'",
        "'renderer.info.memory.textures'",
        "'renderer.info.render.calls'",
        "'renderer.info.render.faces'",
        "'renderer.info.render.points'",
        "'renderer.info.render.vertices'",
        "'totalJSHeapSize === 0... performance.memory is only available in Chrome .'",
        "'Used Memory'",
        "'Total Memory'",
        "'Browser'",
        "'memory'",
        "'total'",
        "'total'",
        "'memory'",
        "'memory'",
        "'total'",
        "'object'",
        "'use strict'",
        "'undefined'",
        "'link'",
        "'stylesheet'",
        "'text/css'",
        "'head'",
        "'#850700'",
        "'#c74900'",
        "'#fcb300'",
        "'#284280'",
        "'#4c7c0c'",
        "'//fonts.googleapis.com/css?family=Roboto+Condensed:400,700,300'",
        "''",
        "'rStats.css'",
        "'canvas'",
        "'2d'",
        "'#666666'",
        "'canvas'",
        "'2d'",
        "'#444444'",
        "'#ffffff'",
        "'canvas'",
        "'2d'",
        "'#444444'",
        "'#b70000'",
        "'#ffffff'",
        "'px'",
        "'px'",
        "'rs-canvas'",
        "'#444444'",
        "'canvas'",
        "'2d'",
        "'px'",
        "'px'",
        "'rs-canvas'",
        "'#444444'",
        "'div'",
        "'span'",
        "'div'",
        "''",
        "'rs-counter-base'",
        "'rs-counter-id'",
        "'rs-counter-value'",
        "'-start'",
        "'-end'",
        "'-start'",
        "'-end'",
        "'#b70000'",
        "'#ffffff'",
        "'default'",
        "'div'",
        "'rs-base'",
        "'div'",
        "'rs-container'",
        "'auto'",
        "'div'",
        "'rs-group'",
        "'h1'",
        "'click'",
        "'hidden'",
        "'div'",
        "'rs-fraction'",
        "'div'",
        "'rs-legend'",
        "'p'",
        "'px'",
        "'object'",
        "'data:'",
        "';base64,'",
        "'?'",
        "'?'",
        "'&'",
        "'='",
        "\"\\\\[\"",
        "\"\\\\]\"",
        "\"[\\\\?&]\"",
        "\"=([^&#]*)\"",
        "\"\"",
        "\" \"",
        "'./util.js'",
        "'video'",
        "'ended'",
        "'video/webm'",
        "'GkXfowEAAAAAAAAfQoaBAUL3gQFC8oEEQvOBCEKChHdlYm1Ch4ECQoWBAhhTgGcBAAAAAAAH4xFNm3RALE27i1OrhBVJqWZTrIHfTbuMU6uEFlSua1OsggEwTbuMU6uEHFO7a1OsggfG7AEAAAAAAACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVSalmAQAAAAAAAEUq17GDD0JATYCNTGF2ZjU2LjQwLjEwMVdBjUxhdmY1Ni40MC4xMDFzpJAGSJTMbsLpDt/ySkipgX1fRImIQO1MAAAAAAAWVK5rAQAAAAAAADuuAQAAAAAAADLXgQFzxYEBnIEAIrWcg3VuZIaFVl9WUDmDgQEj44OEO5rKAOABAAAAAAAABrCBsLqBkB9DtnUBAAAAAAAAo+eBAKOmgQAAgKJJg0IAAV4BHsAHBIODCoAACmH2MAAAZxgz4dPSTFi5JACjloED6ACmAECSnABMQAADYAAAWi0quoCjloEH0ACmAECSnABNwAADYAAAWi0quoCjloELuACmAECSnABNgAADYAAAWi0quoCjloEPoACmAECSnABNYAADYAAAWi0quoCjloETiACmAECSnABNIAADYAAAWi0quoAfQ7Z1AQAAAAAAAJTnghdwo5aBAAAApgBAkpwATOAAA2AAAFotKrqAo5aBA+gApgBAkpwATMAAA2AAAFotKrqAo5aBB9AApgBAkpwATIAAA2AAAFotKrqAo5aBC7gApgBAkpwATEAAA2AAAFotKrqAo5aBD6AApgDAkpwAQ2AAA2AAAFotKrqAo5aBE4gApgBAkpwATCAAA2AAAFotKrqAH0O2dQEAAAAAAACU54Iu4KOWgQAAAKYAQJKcAEvAAANgAABaLSq6gKOWgQPoAKYAQJKcAEtgAANgAABaLSq6gKOWgQfQAKYAQJKcAEsAAANgAABaLSq6gKOWgQu4AKYAQJKcAEqAAANgAABaLSq6gKOWgQ+gAKYAQJKcAEogAANgAABaLSq6gKOWgROIAKYAQJKcAEnAAANgAABaLSq6gB9DtnUBAAAAAAAAlOeCRlCjloEAAACmAECSnABJgAADYAAAWi0quoCjloED6ACmAECSnABJIAADYAAAWi0quoCjloEH0ACmAMCSnABDYAADYAAAWi0quoCjloELuACmAECSnABI4AADYAAAWi0quoCjloEPoACmAECSnABIoAADYAAAWi0quoCjloETiACmAECSnABIYAADYAAAWi0quoAfQ7Z1AQAAAAAAAJTngl3Ao5aBAAAApgBAkpwASCAAA2AAAFotKrqAo5aBA+gApgBAkpwASAAAA2AAAFotKrqAo5aBB9AApgBAkpwAR8AAA2AAAFotKrqAo5aBC7gApgBAkpwAR4AAA2AAAFotKrqAo5aBD6AApgBAkpwAR2AAA2AAAFotKrqAo5aBE4gApgBAkpwARyAAA2AAAFotKrqAH0O2dQEAAAAAAACU54J1MKOWgQAAAKYAwJKcAENgAANgAABaLSq6gKOWgQPoAKYAQJKcAEbgAANgAABaLSq6gKOWgQfQAKYAQJKcAEagAANgAABaLSq6gKOWgQu4AKYAQJKcAEaAAANgAABaLSq6gKOWgQ+gAKYAQJKcAEZAAANgAABaLSq6gKOWgROIAKYAQJKcAEYAAANgAABaLSq6gB9DtnUBAAAAAAAAlOeCjKCjloEAAACmAECSnABF4AADYAAAWi0quoCjloED6ACmAECSnABFwAADYAAAWi0quoCjloEH0ACmAECSnABFoAADYAAAWi0quoCjloELuACmAECSnABFgAADYAAAWi0quoCjloEPoACmAMCSnABDYAADYAAAWi0quoCjloETiACmAECSnABFYAADYAAAWi0quoAfQ7Z1AQAAAAAAAJTngqQQo5aBAAAApgBAkpwARUAAA2AAAFotKrqAo5aBA+gApgBAkpwARSAAA2AAAFotKrqAo5aBB9AApgBAkpwARQAAA2AAAFotKrqAo5aBC7gApgBAkpwARQAAA2AAAFotKrqAo5aBD6AApgBAkpwAROAAA2AAAFotKrqAo5aBE4gApgBAkpwARMAAA2AAAFotKrqAH0O2dQEAAAAAAACU54K7gKOWgQAAAKYAQJKcAESgAANgAABaLSq6gKOWgQPoAKYAQJKcAESAAANgAABaLSq6gKOWgQfQAKYAwJKcAENgAANgAABaLSq6gKOWgQu4AKYAQJKcAERgAANgAABaLSq6gKOWgQ+gAKYAQJKcAERAAANgAABaLSq6gKOWgROIAKYAQJKcAEQgAANgAABaLSq6gB9DtnUBAAAAAAAAlOeC0vCjloEAAACmAECSnABEIAADYAAAWi0quoCjloED6ACmAECSnABEAAADYAAAWi0quoCjloEH0ACmAECSnABD4AADYAAAWi0quoCjloELuACmAECSnABDwAADYAAAWi0quoCjloEPoACmAECSnABDoAADYAAAWi0quoCjloETiACmAECSnABDgAADYAAAWi0quoAcU7trAQAAAAAAABG7j7OBALeK94EB8YIBd/CBAw=='",
        "''",
        "\"./util.js\"",
        "\"function\"",
        "\"function\"",
        "'setTimeout is not defined'",
        "'clearTimeout is not defined'",
        "'browser'",
        "''",
        "'process.binding is not supported'",
        "'/'",
        "'process.chdir is not supported'",
        "\"strict\"",
        "\"loose\"",
        "\"\"",
        "\"source\"",
        "\"protocol\"",
        "\"authority\"",
        "\"userInfo\"",
        "\"user\"",
        "\"password\"",
        "\"host\"",
        "\"port\"",
        "\"relative\"",
        "\"path\"",
        "\"directory\"",
        "\"file\"",
        "\"query\"",
        "\"anchor\"",
        "\"queryKey\"",
        "\"use strict\"",
        "'inventory-3d'",
        "'string'",
        "\"color\"",
        "\"basic\"",
        "\"a-entity\"",
        "\"collada-model\"",
        "\"url(\"",
        "\")\"",
        "\"model-loaded\"",
        "\"\"",
        "\"there was an error: probably one of the vms timed out\"",
        "\".\"",
        "\"://\"",
        "\"\"",
        "\"materialColor\"",
        "\"\"",
        "'parsing failed'",
        "\"undefined\""
    ],
    "variables": [
        "installedModules",
        "require",
        "require",
        "g",
        "define",
        "exports",
        "a",
        "f",
        "l",
        "n",
        "i",
        "o",
        "head",
        "link",
        "value",
        "head",
        "style",
        "value",
        "process",
        "queue",
        "draining",
        "currentQueue",
        "queueIndex",
        "timeout",
        "len",
        "args",
        "i",
        "args",
        "arguments",
        "useColors",
        "c",
        "index",
        "lastC",
        "r",
        "prevColor",
        "prevTime",
        "enabled",
        "curr",
        "ms",
        "args",
        "index",
        "formatter",
        "val",
        "logFn",
        "fn",
        "split",
        "len",
        "i",
        "i",
        "len",
        "s",
        "m",
        "h",
        "d",
        "y",
        "match",
        "n",
        "isObj",
        "hasOwnProperty",
        "propIsEnumerable",
        "val",
        "symbols",
        "i",
        "s",
        "n",
        "r",
        "t",
        "n",
        "r",
        "t",
        "n",
        "r",
        "t",
        "n",
        "r",
        "i",
        "t",
        "n",
        "e",
        "t",
        "n",
        "n",
        "r",
        "s",
        "o",
        "u",
        "a",
        "f",
        "l",
        "c",
        "h",
        "p",
        "d",
        "v",
        "m",
        "g",
        "y",
        "b",
        "w",
        "E",
        "S",
        "x",
        "t",
        "T",
        "N",
        "C",
        "k",
        "L",
        "A",
        "O",
        "M",
        "_",
        "D",
        "P",
        "n",
        "r",
        "i",
        "s",
        "H",
        "B",
        "j",
        "F",
        "I",
        "q",
        "R",
        "U",
        "z",
        "W",
        "X",
        "V",
        "$",
        "J",
        "K",
        "Q",
        "G",
        "Y",
        "Z",
        "et",
        "tt",
        "nt",
        "rt",
        "it",
        "t",
        "n",
        "r",
        "t",
        "i",
        "r",
        "i",
        "o",
        "t",
        "n",
        "r",
        "i",
        "t",
        "n",
        "r",
        "i",
        "o",
        "t",
        "n",
        "r",
        "i",
        "s",
        "o",
        "n",
        "r",
        "i",
        "s",
        "o",
        "u",
        "a",
        "r",
        "i",
        "s",
        "o",
        "t",
        "n",
        "i",
        "s",
        "f",
        "l",
        "c",
        "h",
        "hasOwnProperty",
        "propIsEnumerable",
        "to",
        "symbols",
        "s",
        "i",
        "performance",
        "present",
        "names",
        "name",
        "dateNow",
        "navigationStart",
        "setTimeoutFunc",
        "setTimeout",
        "asap",
        "isArray",
        "me",
        "cb",
        "ret",
        "then",
        "i",
        "len",
        "done",
        "me",
        "args",
        "remaining",
        "then",
        "i",
        "i",
        "len",
        "raf",
        "now",
        "start",
        "data",
        "prev",
        "curr",
        "ms",
        "req",
        "cancel",
        "perf",
        "trim",
        "obj",
        "pos",
        "key",
        "val",
        "chunks",
        "offset",
        "sep",
        "hasUnclosedUrl",
        "chunk",
        "nextSplit",
        "scope",
        "vrInputs",
        "i",
        "i",
        "vrInput",
        "state",
        "i",
        "vrInput",
        "vrHMD",
        "eyeTranslationL",
        "eyeFOVL",
        "eyeTranslationR",
        "eyeFOVR",
        "i",
        "isFullscreen",
        "canvas",
        "fullscreenchange",
        "cameraL",
        "cameraR",
        "eyeParamsL",
        "eyeParamsR",
        "size",
        "pxscale",
        "pxoffset",
        "pyscale",
        "pyoffset",
        "handednessScale",
        "mobj",
        "m",
        "scaleAndOffset",
        "DEG2RAD",
        "fovPort",
        "COLLADA",
        "scene",
        "visualScene",
        "kinematicsModel",
        "readyCallbackFunc",
        "sources",
        "images",
        "animations",
        "controllers",
        "geometries",
        "materials",
        "effects",
        "cameras",
        "lights",
        "animData",
        "kinematics",
        "visualScenes",
        "kinematicsModels",
        "baseUrl",
        "morphs",
        "skins",
        "flip_uv",
        "preferredShading",
        "options",
        "colladaUnit",
        "colladaUp",
        "upConversion",
        "length",
        "request",
        "parts",
        "i",
        "result",
        "elements",
        "element",
        "i",
        "child",
        "meter",
        "elements",
        "lib",
        "i",
        "elementsLength",
        "j",
        "element",
        "daeElement",
        "sceneElement",
        "url",
        "kinematicsModelElement",
        "url",
        "n",
        "newData",
        "i",
        "il",
        "i",
        "il",
        "d",
        "j",
        "jl",
        "start",
        "end",
        "frames",
        "ID",
        "animation",
        "i",
        "sampler",
        "morphCtrl",
        "morph",
        "i",
        "target_id",
        "daeGeometry",
        "target",
        "skinCtrl",
        "skin",
        "skeleton",
        "hierarchy",
        "bones",
        "i",
        "channel",
        "m",
        "i",
        "i",
        "bone",
        "found",
        "j",
        "inv",
        "j",
        "k",
        "w",
        "walk",
        "bone",
        "data",
        "bones",
        "v",
        "skinned",
        "i",
        "j",
        "w",
        "vidx",
        "weight",
        "o",
        "s",
        "i",
        "skinController",
        "animationBounds",
        "skeleton",
        "bonelist",
        "joints",
        "sortedbones",
        "i",
        "j",
        "i",
        "j",
        "i",
        "j",
        "w",
        "vidx",
        "weight",
        "v",
        "o",
        "s",
        "skinIndices",
        "skinWeights",
        "weights",
        "i",
        "indicies",
        "weight",
        "animationdata",
        "j",
        "bones",
        "skinned",
        "i",
        "j",
        "key",
        "data",
        "jointMap",
        "_addToMap",
        "parentVisualElementId",
        "colladaNode",
        "joint",
        "jointData",
        "jointData",
        "joint",
        "threejsNode",
        "axis",
        "transforms",
        "matrix",
        "transform",
        "m1",
        "elementsFloat32Arr",
        "elements",
        "elementsRowMajor",
        "element",
        "i",
        "child",
        "visualTarget",
        "axis",
        "jointIndex",
        "visualTargetElement",
        "parentVisualElement",
        "obj",
        "skinned",
        "skinController",
        "morphController",
        "i",
        "j",
        "controller",
        "inst_geom",
        "second",
        "inst_geom",
        "inst_geom",
        "double_sided_materials",
        "instance_geometry",
        "instance_materials",
        "geometry",
        "used_materials",
        "used_materials_array",
        "num_materials",
        "first_material",
        "instance_material",
        "mat",
        "effect_id",
        "shader",
        "material3js",
        "_copied_material",
        "mesh",
        "material",
        "geom",
        "instance_camera",
        "cparams",
        "cam",
        "light",
        "instance_light",
        "lparams",
        "color",
        "intensity",
        "distance",
        "angle",
        "exponent",
        "delta",
        "i",
        "nodes",
        "i",
        "attObj",
        "channels",
        "startTime",
        "endTime",
        "animation",
        "i",
        "channel",
        "sampler",
        "id",
        "minT",
        "i",
        "sampler",
        "j",
        "t0",
        "t1",
        "animated",
        "i",
        "j",
        "channel",
        "matrix",
        "transform",
        "channel",
        "sampler",
        "value",
        "keys",
        "sids",
        "i",
        "il",
        "channel",
        "fullSid",
        "sampler",
        "input",
        "transform",
        "member",
        "j",
        "jl",
        "j",
        "jl",
        "time",
        "data",
        "key",
        "timeNdx",
        "i",
        "sid",
        "j",
        "key",
        "retVal",
        "i",
        "il",
        "key",
        "ndx",
        "i",
        "il",
        "key",
        "prevKey",
        "nextKey",
        "scale",
        "prevTarget",
        "nextData",
        "prevData",
        "data",
        "i",
        "key",
        "key",
        "i",
        "child",
        "i",
        "child",
        "sources",
        "inputs",
        "i",
        "child",
        "source",
        "input",
        "source",
        "inputs",
        "i",
        "child",
        "sources",
        "joints",
        "weights",
        "i",
        "child",
        "f",
        "src",
        "i",
        "child",
        "input",
        "source",
        "v",
        "vcount",
        "inputs",
        "i",
        "child",
        "index",
        "i",
        "numBones",
        "vertex_weights",
        "j",
        "influence",
        "k",
        "input",
        "value",
        "j",
        "i",
        "node",
        "i",
        "node",
        "i",
        "child",
        "i",
        "channel",
        "parts",
        "id",
        "sid",
        "dotSyntax",
        "arrSyntax",
        "arrIndices",
        "member",
        "j",
        "i",
        "n",
        "i",
        "n",
        "i",
        "url",
        "i",
        "child",
        "iNode",
        "i",
        "m1",
        "members",
        "propName",
        "i",
        "child",
        "instances",
        "j",
        "instance",
        "i",
        "child",
        "instances",
        "j",
        "instance",
        "i",
        "child",
        "i",
        "child",
        "vertexData",
        "i",
        "i",
        "primitive",
        "j",
        "k",
        "pList",
        "inputs",
        "input",
        "index",
        "idx32",
        "source",
        "numParams",
        "vcIndex",
        "vcount",
        "maxOffset",
        "texture_sets",
        "offset",
        "pCount",
        "p",
        "i",
        "vs",
        "ns",
        "ts",
        "cs",
        "ndx",
        "len",
        "ndx",
        "len",
        "ndx",
        "len",
        "face",
        "faces",
        "uv",
        "uvArr",
        "clr",
        "vec1",
        "vec2",
        "vec3",
        "v1",
        "v2",
        "norm",
        "ndx",
        "len",
        "i",
        "i",
        "child",
        "i",
        "child",
        "param",
        "i",
        "input",
        "i",
        "child",
        "j",
        "result",
        "param",
        "j",
        "s",
        "m",
        "i",
        "i",
        "child",
        "rgba",
        "i",
        "child",
        "i",
        "child",
        "bumpType",
        "f",
        "props",
        "transparent",
        "transparentColor",
        "transparencyLevel",
        "keys",
        "cot",
        "samplerId",
        "surfaceId",
        "surface",
        "image",
        "url",
        "texture",
        "loader",
        "i",
        "child",
        "i",
        "child",
        "i",
        "child",
        "sid",
        "i",
        "child",
        "technique",
        "i",
        "child",
        "_image",
        "i",
        "child",
        "i",
        "child",
        "i",
        "child",
        "i",
        "child",
        "anim",
        "j",
        "src",
        "parts",
        "id",
        "sid",
        "dotSyntax",
        "arrSyntax",
        "arrIndices",
        "j",
        "i",
        "child",
        "i",
        "input",
        "source",
        "i",
        "data",
        "i",
        "i",
        "target",
        "i",
        "i",
        "i",
        "l",
        "target",
        "nextTarget",
        "data",
        "scale",
        "nextData",
        "prevData",
        "j",
        "i",
        "child",
        "i",
        "technique",
        "j",
        "perspective",
        "k",
        "param",
        "orthographic",
        "k",
        "param",
        "i",
        "child",
        "i",
        "light",
        "j",
        "child",
        "rgba",
        "f",
        "i",
        "child",
        "i",
        "child",
        "i",
        "child",
        "axisElement",
        "_axis",
        "min",
        "max",
        "jointTypes",
        "i",
        "jointElement",
        "i",
        "child",
        "i",
        "child",
        "id",
        "raw",
        "data",
        "i",
        "l",
        "raw",
        "data",
        "i",
        "l",
        "raw",
        "data",
        "i",
        "l",
        "s",
        "parts",
        "loader",
        "node",
        "tmp",
        "tmp",
        "tmp",
        "tmp",
        "tmp",
        "tmp",
        "arr",
        "arr",
        "members",
        "indices",
        "scope",
        "loader",
        "lines",
        "info",
        "delimiter_pattern",
        "materialsInfo",
        "i",
        "line",
        "pos",
        "key",
        "value",
        "ss",
        "materialCreator",
        "converted",
        "mat",
        "covmat",
        "save",
        "value",
        "lprop",
        "index",
        "mat",
        "value",
        "texture",
        "loader",
        "manager",
        "scope",
        "loader",
        "objects",
        "foundObjects",
        "vertices",
        "normals",
        "uvs",
        "geometry",
        "material",
        "index",
        "index",
        "index",
        "ia",
        "ib",
        "ic",
        "id",
        "vertex_pattern",
        "normal_pattern",
        "uv_pattern",
        "face_pattern1",
        "face_pattern2",
        "face_pattern3",
        "face_pattern4",
        "object_pattern",
        "smoothing_pattern",
        "lines",
        "i",
        "line",
        "result",
        "name",
        "container",
        "i",
        "l",
        "geometry",
        "buffergeometry",
        "material",
        "mesh",
        "THREE",
        "to",
        "i",
        "n",
        "nextSource",
        "keysArray",
        "nextIndex",
        "len",
        "nextKey",
        "desc",
        "p",
        "q",
        "m",
        "color",
        "name",
        "components",
        "h",
        "s",
        "l",
        "hex",
        "size",
        "hex",
        "safeInverse",
        "r",
        "g",
        "b",
        "hsl",
        "r",
        "g",
        "b",
        "max",
        "min",
        "hue",
        "saturation",
        "lightness",
        "delta",
        "hsl",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "order",
        "halfAngle",
        "s",
        "te",
        "m11",
        "m12",
        "m13",
        "m21",
        "m22",
        "m23",
        "m31",
        "m32",
        "m33",
        "trace",
        "s",
        "v1",
        "r",
        "EPS",
        "l",
        "qax",
        "qay",
        "qaz",
        "qaw",
        "qbx",
        "qby",
        "qbz",
        "qbw",
        "x",
        "y",
        "z",
        "w",
        "cosHalfTheta",
        "sinHalfTheta",
        "halfTheta",
        "ratioA",
        "ratioB",
        "x0",
        "y0",
        "z0",
        "w0",
        "x1",
        "y1",
        "z1",
        "w1",
        "s",
        "cos",
        "dir",
        "sqrSin",
        "sin",
        "len",
        "tDir",
        "f",
        "min",
        "max",
        "length",
        "angle",
        "dx",
        "dy",
        "c",
        "s",
        "x",
        "y",
        "quaternion",
        "quaternion",
        "x",
        "y",
        "z",
        "e",
        "x",
        "y",
        "z",
        "e",
        "x",
        "y",
        "z",
        "e",
        "d",
        "x",
        "y",
        "z",
        "qx",
        "qy",
        "qz",
        "qw",
        "ix",
        "iy",
        "iz",
        "iw",
        "matrix",
        "matrix",
        "x",
        "y",
        "z",
        "e",
        "min",
        "max",
        "length",
        "x",
        "y",
        "z",
        "ax",
        "ay",
        "az",
        "bx",
        "by",
        "bz",
        "v1",
        "dot",
        "v1",
        "v1",
        "theta",
        "dx",
        "dy",
        "dz",
        "sx",
        "sy",
        "sz",
        "offset",
        "me",
        "x",
        "y",
        "z",
        "w",
        "e",
        "s",
        "angle",
        "x",
        "y",
        "z",
        "epsilon",
        "epsilon2",
        "te",
        "m11",
        "m12",
        "m13",
        "m21",
        "m22",
        "m23",
        "m31",
        "m32",
        "m33",
        "xx",
        "yy",
        "zz",
        "xy",
        "xz",
        "yz",
        "s",
        "min",
        "max",
        "clamp",
        "te",
        "m11",
        "m12",
        "m13",
        "m21",
        "m22",
        "m23",
        "m31",
        "m32",
        "m33",
        "matrix",
        "q",
        "result",
        "result",
        "result",
        "startP",
        "startEnd",
        "startEnd2",
        "startEnd_startP",
        "t",
        "t",
        "result",
        "i",
        "il",
        "v1",
        "halfSize",
        "result",
        "result",
        "result",
        "result",
        "v1",
        "clampedPoint",
        "minX",
        "minY",
        "minZ",
        "maxX",
        "maxY",
        "maxZ",
        "i",
        "il",
        "x",
        "y",
        "z",
        "i",
        "il",
        "v1",
        "halfSize",
        "box",
        "scope",
        "geometry",
        "result",
        "result",
        "result",
        "closestPoint",
        "min",
        "max",
        "result",
        "v1",
        "clampedPoint",
        "v1",
        "result",
        "points",
        "te",
        "me",
        "v1",
        "i",
        "j",
        "offset",
        "v1",
        "i",
        "j",
        "offset",
        "te",
        "te",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "h",
        "i",
        "me",
        "te",
        "det",
        "msg",
        "tmp",
        "m",
        "te",
        "m",
        "te",
        "te",
        "te",
        "me",
        "te",
        "v1",
        "te",
        "me",
        "scaleX",
        "scaleY",
        "scaleZ",
        "te",
        "x",
        "y",
        "z",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "ae",
        "af",
        "be",
        "bf",
        "ce",
        "cf",
        "de",
        "df",
        "ce",
        "cf",
        "de",
        "df",
        "ae",
        "af",
        "be",
        "bf",
        "ac",
        "ad",
        "bc",
        "bd",
        "ac",
        "ad",
        "bc",
        "bd",
        "te",
        "x",
        "y",
        "z",
        "w",
        "x2",
        "y2",
        "z2",
        "xx",
        "xy",
        "xz",
        "yy",
        "yz",
        "zz",
        "wx",
        "wy",
        "wz",
        "x",
        "y",
        "z",
        "te",
        "ae",
        "be",
        "te",
        "a11",
        "a12",
        "a13",
        "a14",
        "a21",
        "a22",
        "a23",
        "a24",
        "a31",
        "a32",
        "a33",
        "a34",
        "a41",
        "a42",
        "a43",
        "a44",
        "b11",
        "b12",
        "b13",
        "b14",
        "b21",
        "b22",
        "b23",
        "b24",
        "b31",
        "b32",
        "b33",
        "b34",
        "b41",
        "b42",
        "b43",
        "b44",
        "te",
        "te",
        "v1",
        "i",
        "j",
        "offset",
        "v1",
        "i",
        "j",
        "offset",
        "te",
        "n11",
        "n12",
        "n13",
        "n14",
        "n21",
        "n22",
        "n23",
        "n24",
        "n31",
        "n32",
        "n33",
        "n34",
        "n41",
        "n42",
        "n43",
        "n44",
        "te",
        "tmp",
        "te",
        "v1",
        "te",
        "te",
        "te",
        "me",
        "n11",
        "n12",
        "n13",
        "n14",
        "n21",
        "n22",
        "n23",
        "n24",
        "n31",
        "n32",
        "n33",
        "n34",
        "n41",
        "n42",
        "n43",
        "n44",
        "det",
        "msg",
        "te",
        "x",
        "y",
        "z",
        "te",
        "scaleXSq",
        "scaleYSq",
        "scaleZSq",
        "c",
        "s",
        "c",
        "s",
        "c",
        "s",
        "c",
        "s",
        "t",
        "x",
        "y",
        "z",
        "tx",
        "ty",
        "vector",
        "matrix",
        "te",
        "sx",
        "sy",
        "sz",
        "det",
        "invSX",
        "invSY",
        "invSZ",
        "te",
        "x",
        "y",
        "a",
        "b",
        "c",
        "d",
        "ymax",
        "ymin",
        "xmin",
        "xmax",
        "te",
        "w",
        "h",
        "p",
        "x",
        "y",
        "z",
        "te",
        "me",
        "i",
        "te",
        "result",
        "v1",
        "result",
        "directionDistance",
        "v1",
        "directionDistance",
        "segCenter",
        "segDir",
        "diff",
        "segExtent",
        "a01",
        "b0",
        "b1",
        "c",
        "det",
        "s0",
        "s1",
        "sqrDist",
        "extDet",
        "invDet",
        "v1",
        "tca",
        "d2",
        "radius2",
        "thc",
        "t0",
        "t1",
        "denominator",
        "t",
        "t",
        "distToPoint",
        "denominator",
        "tmin",
        "tmax",
        "tymin",
        "tymax",
        "tzmin",
        "tzmax",
        "invdirx",
        "invdiry",
        "invdirz",
        "origin",
        "v",
        "diff",
        "edge1",
        "edge2",
        "normal",
        "DdN",
        "sign",
        "DdQxE2",
        "DdE1xQ",
        "QdN",
        "box",
        "center",
        "maxRadiusSq",
        "i",
        "il",
        "radiusSum",
        "deltaLengthSq",
        "result",
        "box",
        "planes",
        "planes",
        "i",
        "planes",
        "me",
        "me0",
        "me1",
        "me2",
        "me3",
        "me4",
        "me5",
        "me6",
        "me7",
        "me8",
        "me9",
        "me10",
        "me11",
        "me12",
        "me13",
        "me14",
        "me15",
        "sphere",
        "geometry",
        "planes",
        "center",
        "negRadius",
        "i",
        "distance",
        "p1",
        "p2",
        "planes",
        "i",
        "plane",
        "d1",
        "d2",
        "planes",
        "i",
        "v1",
        "v2",
        "normal",
        "inverseNormalLength",
        "perpendicularMagnitude",
        "result",
        "v1",
        "result",
        "direction",
        "denominator",
        "t",
        "startSign",
        "endSign",
        "result",
        "v1",
        "v2",
        "m1",
        "normalMatrix",
        "newNormal",
        "newCoplanarPoint",
        "chars",
        "uuid",
        "rnd",
        "r",
        "i",
        "degreeToRadiansFactor",
        "radianToDegreesFactor",
        "c",
        "v3",
        "point",
        "intPoint",
        "weight",
        "w2",
        "w3",
        "pa",
        "pb",
        "pc",
        "pd",
        "i",
        "i",
        "p",
        "l",
        "coords",
        "i",
        "index",
        "nSamples",
        "position",
        "point",
        "intPoint",
        "oldIntPoint",
        "oldPosition",
        "tmpVec",
        "chunkLengths",
        "totalLength",
        "i",
        "j",
        "index",
        "indexCurrent",
        "indexNext",
        "realDistance",
        "sampling",
        "position",
        "newpoints",
        "tmpVec",
        "sl",
        "v0",
        "v1",
        "v0",
        "result",
        "resultLengthSq",
        "v0",
        "v1",
        "v2",
        "dot00",
        "dot01",
        "dot02",
        "dot11",
        "dot12",
        "denom",
        "result",
        "invDenom",
        "u",
        "v",
        "v1",
        "result",
        "v0",
        "v1",
        "result",
        "result",
        "pp",
        "i1",
        "t1",
        "t0",
        "right",
        "giveUpAt",
        "t1global",
        "giveUpAt",
        "mid",
        "result",
        "values",
        "stride",
        "offset",
        "i",
        "pp",
        "iPrev",
        "iNext",
        "tPrev",
        "tNext",
        "halfDt",
        "stride",
        "result",
        "values",
        "stride",
        "o1",
        "o0",
        "oP",
        "oN",
        "wP",
        "wN",
        "p",
        "pp",
        "ppp",
        "sP",
        "s0",
        "s1",
        "sN",
        "i",
        "result",
        "values",
        "stride",
        "offset1",
        "offset0",
        "weight1",
        "weight0",
        "i",
        "result",
        "values",
        "stride",
        "offset",
        "alpha",
        "end",
        "diff",
        "newTime",
        "listeners",
        "listeners",
        "listeners",
        "listenerArray",
        "index",
        "listeners",
        "listenerArray",
        "array",
        "length",
        "i",
        "i",
        "children",
        "i",
        "l",
        "intersects",
        "intersects",
        "i",
        "l",
        "position",
        "rotation",
        "quaternion",
        "scale",
        "q1",
        "v1",
        "v1",
        "v1",
        "v1",
        "v1",
        "v1",
        "v1",
        "m1",
        "m1",
        "i",
        "i",
        "index",
        "i",
        "l",
        "child",
        "result",
        "position",
        "scale",
        "result",
        "quaternion",
        "result",
        "position",
        "quaternion",
        "result",
        "quaternion",
        "result",
        "children",
        "i",
        "l",
        "children",
        "i",
        "l",
        "parent",
        "i",
        "l",
        "isRootObject",
        "output",
        "i",
        "geometries",
        "materials",
        "textures",
        "images",
        "values",
        "data",
        "i",
        "child",
        "i",
        "il",
        "i",
        "il",
        "i",
        "l",
        "array",
        "offset",
        "i",
        "l",
        "color",
        "array",
        "offset",
        "i",
        "l",
        "index",
        "array",
        "offset",
        "i",
        "l",
        "vector",
        "array",
        "offset",
        "i",
        "l",
        "vector",
        "array",
        "offset",
        "i",
        "l",
        "vector",
        "i",
        "l",
        "normalMatrix",
        "i",
        "il",
        "vertex",
        "i",
        "il",
        "face",
        "j",
        "jl",
        "m1",
        "m1",
        "m1",
        "m1",
        "m1",
        "obj",
        "scope",
        "indices",
        "attributes",
        "positions",
        "normals",
        "colors",
        "uvs",
        "uvs2",
        "tempNormals",
        "tempUVs",
        "tempUVs2",
        "i",
        "j",
        "vertexNormals",
        "vertexColors",
        "face",
        "groups",
        "i",
        "group",
        "start",
        "count",
        "j",
        "start",
        "jl",
        "i",
        "i",
        "offset",
        "center",
        "radius",
        "s",
        "matrix",
        "cb",
        "ab",
        "f",
        "fl",
        "face",
        "vA",
        "vB",
        "vC",
        "v",
        "vl",
        "f",
        "fl",
        "face",
        "vertices",
        "vA",
        "vB",
        "vC",
        "cb",
        "ab",
        "vertexNormals",
        "i",
        "il",
        "f",
        "fl",
        "face",
        "tmpGeo",
        "dstNormalsFace",
        "dstNormalsVertex",
        "faceNormal",
        "vertexNormals",
        "morphNormals",
        "faceNormal",
        "vertexNormals",
        "d",
        "vertices",
        "i",
        "il",
        "normalMatrix",
        "vertexOffset",
        "vertices1",
        "vertices2",
        "faces1",
        "faces2",
        "uvs1",
        "uvs2",
        "i",
        "il",
        "vertex",
        "vertexCopy",
        "face",
        "faceCopy",
        "normal",
        "color",
        "faceVertexNormals",
        "faceVertexColors",
        "j",
        "jl",
        "j",
        "jl",
        "uv",
        "uvCopy",
        "j",
        "jl",
        "verticesMap",
        "unique",
        "changes",
        "v",
        "key",
        "precisionPoints",
        "precision",
        "i",
        "il",
        "face",
        "indices",
        "j",
        "jl",
        "faceIndicesToRemove",
        "dupIndex",
        "n",
        "idx",
        "diff",
        "faces",
        "length",
        "i",
        "uvs1",
        "uvs2",
        "newUvs1",
        "newUvs2",
        "i",
        "id",
        "data",
        "parameters",
        "vertices",
        "i",
        "vertex",
        "faces",
        "normals",
        "normalsHash",
        "colors",
        "colorsHash",
        "uvs",
        "uvsHash",
        "i",
        "face",
        "hasMaterial",
        "hasFaceUv",
        "hasFaceVertexUv",
        "hasFaceNormal",
        "hasFaceVertexNormal",
        "hasFaceColor",
        "hasFaceVertexColor",
        "faceType",
        "faceVertexUvs",
        "vertexNormals",
        "vertexColors",
        "hash",
        "hash",
        "hash",
        "vertices",
        "i",
        "il",
        "faces",
        "i",
        "il",
        "i",
        "il",
        "faceVertexUvs",
        "j",
        "jl",
        "uvs",
        "uvsCopy",
        "k",
        "kl",
        "uv",
        "group",
        "groups",
        "materialIndex",
        "faces",
        "i",
        "face",
        "faces",
        "vertices",
        "faceVertexUvs",
        "hasFaceVertexUv",
        "hasFaceVertexUv2",
        "morphTargets",
        "morphTargetsLength",
        "morphTargetsPosition",
        "i",
        "morphNormals",
        "morphNormalsLength",
        "morphTargetsNormal",
        "i",
        "skinIndices",
        "skinWeights",
        "hasSkinIndices",
        "hasSkinWeights",
        "i",
        "face",
        "vertexNormals",
        "normal",
        "vertexColors",
        "color",
        "vertexUvs",
        "vertexUvs",
        "j",
        "morphTarget",
        "j",
        "morphNormal",
        "position",
        "normal",
        "normalMatrix",
        "m1",
        "m1",
        "m1",
        "m1",
        "m1",
        "obj",
        "offset",
        "geometry",
        "positions",
        "colors",
        "lineDistances",
        "geometry",
        "direct",
        "attribute",
        "attribute",
        "attribute",
        "attribute",
        "attribute",
        "positions",
        "normals",
        "colors",
        "uvs",
        "uvs2",
        "TypeArray",
        "indices",
        "array",
        "morphTargets",
        "i",
        "l",
        "morphTarget",
        "attribute",
        "skinIndices",
        "skinWeights",
        "vector",
        "positions",
        "box",
        "vector",
        "positions",
        "center",
        "maxRadiusSq",
        "i",
        "il",
        "index",
        "attributes",
        "groups",
        "positions",
        "array",
        "i",
        "il",
        "normals",
        "vA",
        "vB",
        "vC",
        "pA",
        "pB",
        "pC",
        "cb",
        "ab",
        "indices",
        "j",
        "jl",
        "group",
        "start",
        "count",
        "i",
        "start",
        "il",
        "i",
        "il",
        "attributes",
        "attribute1",
        "attributeArray1",
        "attribute2",
        "attributeArray2",
        "attributeSize",
        "i",
        "j",
        "normals",
        "x",
        "y",
        "z",
        "n",
        "i",
        "il",
        "geometry2",
        "indices",
        "attributes",
        "attribute",
        "array",
        "itemSize",
        "array2",
        "index",
        "index2",
        "i",
        "l",
        "j",
        "data",
        "parameters",
        "index",
        "array",
        "attributes",
        "attribute",
        "array",
        "groups",
        "boundingSphere",
        "index",
        "attributes",
        "attribute",
        "groups",
        "i",
        "l",
        "group",
        "index",
        "attributes",
        "attribute",
        "groups",
        "i",
        "l",
        "group",
        "tracks",
        "duration",
        "i",
        "n",
        "track",
        "i",
        "i",
        "tracks",
        "jsonTracks",
        "frameTime",
        "i",
        "n",
        "tracks",
        "clipTracks",
        "json",
        "i",
        "n",
        "numMorphTargets",
        "tracks",
        "i",
        "times",
        "values",
        "order",
        "i",
        "animationToMorphTargets",
        "pattern",
        "i",
        "il",
        "morphTarget",
        "parts",
        "name",
        "animationMorphTargets",
        "clips",
        "addNonemptyTrack",
        "times",
        "values",
        "tracks",
        "clipName",
        "duration",
        "fps",
        "hierarchyTracks",
        "h",
        "animationKeys",
        "morphTargetNames",
        "k",
        "m",
        "times",
        "values",
        "m",
        "animationKey",
        "boneName",
        "clip",
        "root",
        "rootUuid",
        "clipName",
        "clipObject",
        "actionsForClip",
        "prototypeAction",
        "existingAction",
        "newAction",
        "root",
        "rootUuid",
        "clipName",
        "actionsForClip",
        "actions",
        "nActions",
        "bindings",
        "nBindings",
        "i",
        "i",
        "actions",
        "nActions",
        "time",
        "timeDirection",
        "accuIndex",
        "i",
        "action",
        "bindings",
        "nBindings",
        "i",
        "actions",
        "clipName",
        "actionsByClip",
        "actionsForClip",
        "actionsToRemove",
        "i",
        "n",
        "action",
        "cacheIndex",
        "lastInactiveAction",
        "rootUuid",
        "actionsByClip",
        "actionByRoot",
        "action",
        "bindingsByRoot",
        "bindingByName",
        "binding",
        "action",
        "tracks",
        "nTracks",
        "interpolants",
        "interpolantSettings",
        "i",
        "interpolant",
        "start",
        "mixer",
        "fadeInDuration",
        "fadeOutDuration",
        "startEndRatio",
        "endStartRatio",
        "weightInterpolant",
        "mixer",
        "now",
        "interpolant",
        "timeScale",
        "times",
        "values",
        "timeScaleInterpolant",
        "startTime",
        "timeRunning",
        "clipTime",
        "weight",
        "interpolants",
        "propertyMixers",
        "j",
        "m",
        "weight",
        "interpolant",
        "interpolantValue",
        "timeScale",
        "interpolant",
        "interpolantValue",
        "time",
        "duration",
        "loop",
        "loopCount",
        "pingPong",
        "loopDelta",
        "pending",
        "atStart",
        "settings",
        "mixer",
        "now",
        "interpolant",
        "times",
        "values",
        "root",
        "tracks",
        "nTracks",
        "bindings",
        "interpolants",
        "rootUuid",
        "bindingsByRoot",
        "bindingsByName",
        "i",
        "track",
        "trackName",
        "binding",
        "path",
        "rootUuid",
        "clipName",
        "actionsForClip",
        "bindings",
        "i",
        "n",
        "binding",
        "bindings",
        "i",
        "n",
        "binding",
        "scope",
        "index",
        "actions",
        "actionsByClip",
        "actionsForClip",
        "knownActions",
        "actions",
        "lastInactiveAction",
        "cacheIndex",
        "clipName",
        "actionsByClip",
        "actionsForClip",
        "knownActionsForClip",
        "lastKnownAction",
        "byClipCacheIndex",
        "actionByRoot",
        "rootUuid",
        "bindings",
        "i",
        "n",
        "binding",
        "actions",
        "prevIndex",
        "lastActiveIndex",
        "firstInactiveAction",
        "actions",
        "prevIndex",
        "firstInactiveIndex",
        "lastActiveAction",
        "bindingsByRoot",
        "bindingByName",
        "bindings",
        "bindings",
        "propBinding",
        "rootUuid",
        "trackName",
        "bindingsByRoot",
        "bindingByName",
        "lastInactiveBinding",
        "cacheIndex",
        "bindings",
        "prevIndex",
        "lastActiveIndex",
        "firstInactiveBinding",
        "bindings",
        "prevIndex",
        "firstInactiveIndex",
        "lastActiveBinding",
        "interpolants",
        "lastActiveIndex",
        "interpolant",
        "interpolants",
        "prevIndex",
        "firstInactiveIndex",
        "lastActiveInterpolant",
        "indices",
        "i",
        "n",
        "scope",
        "objects",
        "nObjects",
        "nCachedObjects",
        "indicesByUUID",
        "paths",
        "parsedPaths",
        "bindings",
        "nBindings",
        "i",
        "n",
        "uuid",
        "index",
        "j",
        "m",
        "nBindings",
        "knownObject",
        "firstActiveIndex",
        "lastCachedObject",
        "j",
        "m",
        "nBindings",
        "bindingsForPath",
        "lastCached",
        "binding",
        "objects",
        "nObjects",
        "nCachedObjects",
        "indicesByUUID",
        "bindings",
        "nBindings",
        "i",
        "n",
        "uuid",
        "index",
        "lastCachedIndex",
        "firstActiveObject",
        "j",
        "m",
        "nBindings",
        "bindingsForPath",
        "firstActive",
        "binding",
        "objects",
        "nObjects",
        "nCachedObjects",
        "indicesByUUID",
        "bindings",
        "nBindings",
        "i",
        "n",
        "uuid",
        "index",
        "firstActiveIndex",
        "lastCachedObject",
        "lastIndex",
        "lastObject",
        "j",
        "m",
        "nBindings",
        "bindingsForPath",
        "lastCached",
        "last",
        "lastIndex",
        "lastObject",
        "j",
        "m",
        "nBindings",
        "bindingsForPath",
        "indicesByPath",
        "index",
        "bindings",
        "paths",
        "parsedPaths",
        "objects",
        "nObjects",
        "nCachedObjects",
        "bindingsForPath",
        "i",
        "nCachedObjects",
        "n",
        "indicesByPath",
        "index",
        "paths",
        "parsedPaths",
        "bindings",
        "lastBindingsIndex",
        "lastBindings",
        "lastBindingsPath",
        "n",
        "result",
        "i",
        "nValues",
        "result",
        "i",
        "dstOffset",
        "srcOffset",
        "j",
        "i",
        "key",
        "value",
        "factoryMethod",
        "message",
        "times",
        "i",
        "n",
        "times",
        "i",
        "n",
        "times",
        "nKeys",
        "to",
        "stride",
        "valid",
        "valueSize",
        "times",
        "values",
        "nKeys",
        "prevTime",
        "i",
        "currTime",
        "i",
        "n",
        "value",
        "times",
        "values",
        "stride",
        "writeIndex",
        "i",
        "n",
        "keep",
        "time",
        "timeNext",
        "offset",
        "offsetP",
        "offsetN",
        "j",
        "value",
        "readOffset",
        "writeOffset",
        "j",
        "trackType",
        "times",
        "values",
        "trackType",
        "json",
        "interpolation",
        "targetObject",
        "parsedPath",
        "objectName",
        "propertyName",
        "propertyIndex",
        "objectIndex",
        "i",
        "nodeProperty",
        "nodeName",
        "versioning",
        "bindingType",
        "i",
        "source",
        "i",
        "n",
        "dest",
        "i",
        "n",
        "dest",
        "i",
        "n",
        "dest",
        "i",
        "n",
        "parsedPath",
        "firstValidIndex",
        "binding",
        "bindings",
        "i",
        "n",
        "bindings",
        "i",
        "n",
        "bindings",
        "i",
        "n",
        "re",
        "matches",
        "results",
        "searchSkeleton",
        "i",
        "bone",
        "bone",
        "searchNodeSubtree",
        "i",
        "childNode",
        "result",
        "subTreeNode",
        "bufferType",
        "Float64Array",
        "mixFunction",
        "buffer",
        "stride",
        "offset",
        "currentWeight",
        "i",
        "mix",
        "stride",
        "buffer",
        "offset",
        "weight",
        "binding",
        "originalValueOffset",
        "i",
        "stride",
        "e",
        "binding",
        "buffer",
        "stride",
        "originalValueOffset",
        "i",
        "stride",
        "e",
        "originalValueOffset",
        "originalValueOffset",
        "i",
        "s",
        "i",
        "j",
        "buffer",
        "scope",
        "source",
        "scope",
        "request",
        "i",
        "position",
        "position",
        "quaternion",
        "scale",
        "orientation",
        "listener",
        "up",
        "quaternion",
        "result",
        "m1",
        "fov",
        "aspect",
        "cameraPX",
        "cameraNX",
        "cameraPY",
        "cameraNY",
        "cameraPZ",
        "cameraNZ",
        "options",
        "renderTarget",
        "generateMipmaps",
        "dx",
        "dy",
        "cx",
        "cy",
        "data",
        "fov",
        "aspect",
        "top",
        "bottom",
        "left",
        "right",
        "width",
        "height",
        "data",
        "focalLength",
        "fov",
        "aspect",
        "near",
        "far",
        "eyeRight",
        "eyeLeft",
        "needsUpdate",
        "projectionMatrix",
        "eyeSep",
        "eyeSepOnProjection",
        "ymax",
        "xmin",
        "xmax",
        "data",
        "parts",
        "array",
        "i",
        "color",
        "textureLoader",
        "materialLoader",
        "textures",
        "fullPath",
        "loader",
        "texture",
        "uuid",
        "json",
        "value",
        "handlers",
        "i",
        "l",
        "regex",
        "loader",
        "scope",
        "cached",
        "request",
        "response",
        "loader",
        "scope",
        "cached",
        "image",
        "scope",
        "texturePath",
        "loader",
        "json",
        "metadata",
        "geometry",
        "scale",
        "i",
        "j",
        "fi",
        "offset",
        "zLength",
        "colorIndex",
        "normalIndex",
        "uvIndex",
        "materialIndex",
        "isQuad",
        "hasMaterial",
        "hasFaceVertexUv",
        "hasFaceNormal",
        "hasFaceVertexNormal",
        "hasFaceColor",
        "hasFaceVertexColor",
        "vertex",
        "face",
        "faceA",
        "faceB",
        "hex",
        "normal",
        "uvLayer",
        "uv",
        "u",
        "v",
        "faces",
        "vertices",
        "normals",
        "colors",
        "nUvLayers",
        "influencesPerVertex",
        "i",
        "l",
        "x",
        "y",
        "z",
        "w",
        "i",
        "l",
        "a",
        "b",
        "c",
        "d",
        "i",
        "l",
        "dstVertices",
        "srcVertices",
        "v",
        "vl",
        "vertex",
        "faces",
        "morphColors",
        "i",
        "l",
        "outputAnimations",
        "animations",
        "i",
        "clip",
        "morphAnimationClips",
        "materials",
        "scope",
        "isLoading",
        "itemsLoaded",
        "itemsTotal",
        "scope",
        "loader",
        "geometry",
        "index",
        "TYPED_ARRAYS",
        "typedArray",
        "attributes",
        "attribute",
        "typedArray",
        "groups",
        "i",
        "n",
        "group",
        "boundingSphere",
        "center",
        "scope",
        "loader",
        "textures",
        "material",
        "normalScale",
        "i",
        "l",
        "scope",
        "loader",
        "geometries",
        "images",
        "textures",
        "materials",
        "geometries",
        "geometryLoader",
        "bufferGeometryLoader",
        "i",
        "l",
        "geometry",
        "data",
        "materials",
        "loader",
        "i",
        "l",
        "material",
        "animations",
        "i",
        "clip",
        "scope",
        "images",
        "manager",
        "loader",
        "i",
        "l",
        "image",
        "path",
        "textures",
        "i",
        "l",
        "data",
        "texture",
        "matrix",
        "geometry",
        "material",
        "levels",
        "l",
        "level",
        "child",
        "texture",
        "loader",
        "texture",
        "loader",
        "loaded",
        "i",
        "scope",
        "texture",
        "loader",
        "texData",
        "scope",
        "images",
        "texture",
        "loader",
        "texDatas",
        "loaded",
        "i",
        "il",
        "texDatas",
        "faces",
        "f",
        "i",
        "newValue",
        "currentValue",
        "isRoot",
        "data",
        "values",
        "data",
        "textures",
        "images",
        "output",
        "materials",
        "i",
        "l",
        "material",
        "material",
        "i",
        "data",
        "canvas",
        "output",
        "image",
        "scope",
        "inverseMatrix",
        "ray",
        "sphere",
        "geometry",
        "matrixWorld",
        "threshold",
        "localThreshold",
        "localThresholdSq",
        "position",
        "rayPointDistanceSq",
        "intersectPoint",
        "distance",
        "index",
        "attributes",
        "positions",
        "indices",
        "i",
        "il",
        "a",
        "i",
        "l",
        "vertices",
        "i",
        "l",
        "inverseMatrix",
        "ray",
        "sphere",
        "precision",
        "precisionSq",
        "geometry",
        "matrixWorld",
        "vStart",
        "vEnd",
        "interSegment",
        "interRay",
        "step",
        "index",
        "attributes",
        "positions",
        "indices",
        "i",
        "l",
        "a",
        "b",
        "distSq",
        "distance",
        "i",
        "l",
        "distSq",
        "distance",
        "vertices",
        "nbVertices",
        "i",
        "distSq",
        "distance",
        "m",
        "ml",
        "inverseMatrix",
        "ray",
        "sphere",
        "vA",
        "vB",
        "vC",
        "tempA",
        "tempB",
        "tempC",
        "uvA",
        "uvB",
        "uvC",
        "barycoord",
        "intersectionPoint",
        "intersectionPointWorld",
        "intersect",
        "material",
        "distance",
        "intersection",
        "geometry",
        "material",
        "matrixWorld",
        "uvs",
        "intersection",
        "a",
        "b",
        "c",
        "index",
        "attributes",
        "positions",
        "indices",
        "i",
        "l",
        "i",
        "l",
        "fvA",
        "fvB",
        "fvC",
        "isFaceMaterial",
        "materials",
        "vertices",
        "faces",
        "faceVertexUvs",
        "f",
        "fl",
        "face",
        "faceMaterial",
        "morphTargets",
        "morphInfluences",
        "t",
        "tl",
        "influence",
        "targets",
        "uvs_f",
        "size",
        "b",
        "bl",
        "b",
        "bl",
        "inverse",
        "bone",
        "b",
        "bl",
        "b",
        "bl",
        "offsetMatrix",
        "b",
        "bl",
        "matrix",
        "bones",
        "bone",
        "gbone",
        "b",
        "bl",
        "b",
        "bl",
        "i",
        "sw",
        "scale",
        "vec",
        "skinWeight",
        "i",
        "scale",
        "levels",
        "l",
        "levels",
        "i",
        "l",
        "matrixPosition",
        "distance",
        "v1",
        "v2",
        "levels",
        "distance",
        "i",
        "l",
        "levels",
        "i",
        "l",
        "level",
        "data",
        "levels",
        "i",
        "l",
        "level",
        "indices",
        "vertices",
        "uvs",
        "geometry",
        "matrixPosition",
        "distanceSq",
        "guessSizeSq",
        "f",
        "fl",
        "flare",
        "vecX",
        "vecY",
        "i",
        "l",
        "merged",
        "u",
        "tmp",
        "uniforms_dst",
        "parameter_src",
        "_canvas",
        "_context",
        "_alpha",
        "_depth",
        "_stencil",
        "_antialias",
        "_premultipliedAlpha",
        "_preserveDrawingBuffer",
        "lights",
        "opaqueObjects",
        "opaqueObjectsLastIndex",
        "transparentObjects",
        "transparentObjectsLastIndex",
        "morphInfluences",
        "sprites",
        "lensFlares",
        "_this",
        "_currentProgram",
        "_currentRenderTarget",
        "_currentFramebuffer",
        "_currentMaterialId",
        "_currentGeometryProgram",
        "_currentCamera",
        "_currentScissor",
        "_currentScissorTest",
        "_currentViewport",
        "_usedTextureUnits",
        "_clearColor",
        "_clearAlpha",
        "_width",
        "_height",
        "_pixelRatio",
        "_scissor",
        "_scissorTest",
        "_viewport",
        "_frustum",
        "_projScreenMatrix",
        "_vector3",
        "_lights",
        "_infoMemory",
        "_infoRender",
        "_gl",
        "attributes",
        "extensions",
        "capabilities",
        "state",
        "properties",
        "objects",
        "programCache",
        "lightCache",
        "bufferRenderer",
        "indexedBufferRenderer",
        "shadowMap",
        "spritePlugin",
        "lensFlarePlugin",
        "value",
        "extension",
        "bits",
        "texture",
        "renderTarget",
        "material",
        "textureProperties",
        "renderTargetProperties",
        "textureProperties",
        "i",
        "programInfo",
        "buffers",
        "attributes",
        "i",
        "l",
        "array",
        "nx",
        "ny",
        "nz",
        "program",
        "updateBuffers",
        "geometryProgram",
        "morphTargetInfluences",
        "activeInfluences",
        "i",
        "l",
        "influence",
        "morphAttributes",
        "i",
        "l",
        "influence",
        "index",
        "uniforms",
        "index",
        "position",
        "renderer",
        "dataStart",
        "dataCount",
        "Infinity",
        "rangeStart",
        "rangeCount",
        "groupStart",
        "groupCount",
        "drawStart",
        "drawEnd",
        "drawCount",
        "lineWidth",
        "extension",
        "geometryAttributes",
        "programAttributes",
        "materialDefaultAttributeValues",
        "programAttribute",
        "geometryAttribute",
        "size",
        "buffer",
        "data",
        "stride",
        "offset",
        "value",
        "fog",
        "overrideMaterial",
        "texture",
        "array",
        "index",
        "renderItem",
        "material",
        "geometry",
        "groups",
        "materials",
        "i",
        "l",
        "group",
        "groupMaterial",
        "children",
        "i",
        "l",
        "i",
        "l",
        "renderItem",
        "geometry",
        "material",
        "group",
        "program",
        "materialProperties",
        "parameters",
        "code",
        "program",
        "programChange",
        "shader",
        "attributes",
        "i",
        "i",
        "uniforms",
        "uniformLocations",
        "location",
        "j",
        "jl",
        "uniform",
        "materialProperties",
        "refreshProgram",
        "refreshMaterial",
        "refreshLights",
        "program",
        "p_uniforms",
        "m_uniforms",
        "textureUnit",
        "dynamicUniforms",
        "j",
        "jl",
        "uniform",
        "onUpdateCallback",
        "uvScaleMap",
        "offset",
        "repeat",
        "offset",
        "repeat",
        "textureUnit",
        "_usedTextureUnits",
        "texture",
        "textureUnit",
        "j",
        "jl",
        "uniform",
        "value",
        "location",
        "i",
        "property",
        "locationProperty",
        "valueProperty",
        "i",
        "i2",
        "il",
        "i",
        "i3",
        "il",
        "i",
        "i4",
        "il",
        "i",
        "il",
        "i",
        "il",
        "i",
        "il",
        "i",
        "il",
        "l",
        "ll",
        "light",
        "r",
        "g",
        "b",
        "color",
        "intensity",
        "distance",
        "viewMatrix",
        "directionalLength",
        "pointLength",
        "spotLength",
        "hemiLength",
        "shadowsLength",
        "uniforms",
        "uniforms",
        "uniforms",
        "uniforms",
        "extension",
        "image",
        "isPowerOfTwoImage",
        "glFormat",
        "glType",
        "mipmap",
        "mipmaps",
        "i",
        "il",
        "i",
        "il",
        "i",
        "il",
        "textureProperties",
        "image",
        "scale",
        "canvas",
        "context",
        "canvas",
        "context",
        "textureProperties",
        "isCompressed",
        "isDataTexture",
        "cubeImage",
        "i",
        "image",
        "isPowerOfTwoImage",
        "glFormat",
        "glType",
        "i",
        "mipmap",
        "mipmaps",
        "j",
        "jl",
        "glFormat",
        "glType",
        "renderTargetProperties",
        "isCube",
        "i",
        "renderTargetProperties",
        "textureProperties",
        "isCube",
        "isTargetPowerOfTwo",
        "i",
        "i",
        "isCube",
        "framebuffer",
        "renderTargetProperties",
        "textureProperties",
        "framebuffer",
        "restore",
        "texture",
        "target",
        "texture",
        "extension",
        "mode",
        "extension",
        "position",
        "count",
        "mode",
        "size",
        "extension",
        "extensions",
        "extension",
        "_maxPrecision",
        "geometries",
        "geometry",
        "buffergeometry",
        "geometry",
        "buffergeometry",
        "property",
        "bufferproperty",
        "buffer",
        "lights",
        "uniforms",
        "geometries",
        "geometry",
        "index",
        "attributes",
        "morphAttributes",
        "array",
        "i",
        "l",
        "data",
        "attributeProperties",
        "usage",
        "property",
        "indices",
        "index",
        "attributes",
        "position",
        "edges",
        "array",
        "i",
        "l",
        "a",
        "b",
        "c",
        "array",
        "i",
        "l",
        "a",
        "b",
        "c",
        "TypeArray",
        "attribute",
        "tmp",
        "a",
        "programIdCount",
        "structRe",
        "arrayStructRe",
        "arrayRe",
        "chunks",
        "chunks",
        "value",
        "uniforms",
        "n",
        "i",
        "info",
        "name",
        "location",
        "matches",
        "structName",
        "structProperty",
        "uniformsStruct",
        "arrayName",
        "arrayIndex",
        "arrayProperty",
        "uniformsArray",
        "uniformsArrayIndex",
        "arrayName",
        "attributes",
        "n",
        "i",
        "info",
        "name",
        "pattern",
        "unroll",
        "i",
        "gl",
        "extensions",
        "defines",
        "vertexShader",
        "fragmentShader",
        "shadowMapTypeDefine",
        "envMapTypeDefine",
        "envMapModeDefine",
        "envMapBlendingDefine",
        "gammaFactorDefine",
        "customExtensions",
        "customDefines",
        "program",
        "prefixVertex",
        "prefixFragment",
        "vertexGlsl",
        "fragmentGlsl",
        "glVertexShader",
        "glFragmentShader",
        "programLog",
        "vertexLog",
        "fragmentLog",
        "runnable",
        "haveDiagnostics",
        "cachedUniforms",
        "cachedAttributes",
        "programs",
        "shaderIDs",
        "parameterNames",
        "nVertexUniforms",
        "nVertexMatrices",
        "maxBones",
        "nVertexMatrices",
        "shaderID",
        "maxBones",
        "precision",
        "parameters",
        "chunks",
        "i",
        "parameterName",
        "program",
        "p",
        "pl",
        "programInfo",
        "i",
        "properties",
        "uuid",
        "lines",
        "i",
        "shader",
        "_gl",
        "_state",
        "_frustum",
        "_projScreenMatrix",
        "_lookTarget",
        "_lightPositionWorld",
        "_renderList",
        "_MorphingFlag",
        "_SkinningFlag",
        "_NumberOfMaterialVariants",
        "_depthMaterials",
        "_distanceMaterials",
        "cubeDirections",
        "cubeUps",
        "cube2DViewPorts",
        "depthShader",
        "depthUniforms",
        "distanceShader",
        "distanceUniforms",
        "i",
        "useMorphing",
        "useSkinning",
        "depthMaterial",
        "distanceMaterial",
        "scope",
        "faceCount",
        "isPointLight",
        "shadows",
        "i",
        "il",
        "light",
        "shadow",
        "shadowCamera",
        "shadowMapSize",
        "vpWidth",
        "vpHeight",
        "pars",
        "shadowMap",
        "shadowMatrix",
        "face",
        "vpDimensions",
        "j",
        "jl",
        "geometry",
        "material",
        "groups",
        "materials",
        "k",
        "kl",
        "group",
        "groupMaterial",
        "depthMaterial",
        "depthMaterial",
        "clearColor",
        "clearAlpha",
        "geometry",
        "newMaterial",
        "materialVariants",
        "_depthMaterials",
        "customMaterial",
        "useMorphing",
        "useSkinning",
        "variantIndex",
        "material",
        "children",
        "i",
        "l",
        "_this",
        "color",
        "newAttributes",
        "enabledAttributes",
        "attributeDivisors",
        "capabilities",
        "compressedTextureFormats",
        "currentBlending",
        "currentBlendEquation",
        "currentBlendSrc",
        "currentBlendDst",
        "currentBlendEquationAlpha",
        "currentBlendSrcAlpha",
        "currentBlendDstAlpha",
        "currentDepthFunc",
        "currentDepthWrite",
        "currentColorWrite",
        "currentStencilWrite",
        "currentStencilFunc",
        "currentStencilRef",
        "currentStencilMask",
        "currentStencilFail",
        "currentStencilZFail",
        "currentStencilZPass",
        "currentFlipSided",
        "currentLineWidth",
        "currentPolygonOffsetFactor",
        "currentPolygonOffsetUnits",
        "currentScissorTest",
        "maxTextures",
        "currentTextureSlot",
        "currentBoundTextures",
        "currentClearColor",
        "currentClearDepth",
        "currentClearStencil",
        "currentScissor",
        "currentViewport",
        "i",
        "l",
        "extension",
        "i",
        "l",
        "formats",
        "i",
        "boundTexture",
        "i",
        "gl",
        "state",
        "vertexBuffer",
        "elementBuffer",
        "program",
        "attributes",
        "uniforms",
        "hasVertexTexture",
        "tempTexture",
        "occlusionTexture",
        "vertices",
        "faces",
        "shader",
        "tempPosition",
        "invAspect",
        "halfViewportWidth",
        "halfViewportHeight",
        "size",
        "scale",
        "screenPosition",
        "screenPositionPixels",
        "i",
        "l",
        "flare",
        "j",
        "jl",
        "sprite",
        "program",
        "fragmentShader",
        "vertexShader",
        "prefix",
        "gl",
        "state",
        "vertexBuffer",
        "elementBuffer",
        "program",
        "attributes",
        "uniforms",
        "texture",
        "spritePosition",
        "spriteRotation",
        "spriteScale",
        "vertices",
        "faces",
        "canvas",
        "context",
        "oldFogType",
        "sceneFogType",
        "fog",
        "i",
        "l",
        "sprite",
        "scale",
        "i",
        "l",
        "sprite",
        "material",
        "fogType",
        "program",
        "vertexShader",
        "fragmentShader",
        "matrix",
        "loader",
        "texture",
        "loader",
        "texture",
        "h00",
        "h10",
        "h01",
        "h11",
        "v0",
        "v1",
        "t2",
        "t3",
        "group",
        "i",
        "l",
        "matrixWorldInverse",
        "n",
        "a",
        "p",
        "q",
        "p",
        "ax",
        "ay",
        "bx",
        "by",
        "cx",
        "cy",
        "px",
        "py",
        "aX",
        "aY",
        "bX",
        "bY",
        "cX",
        "cY",
        "apx",
        "apy",
        "bpx",
        "bpy",
        "cpx",
        "cpy",
        "cCROSSap",
        "bCROSScp",
        "aCROSSbp",
        "n",
        "result",
        "verts",
        "vertIndices",
        "u",
        "v",
        "w",
        "nv",
        "n",
        "count",
        "a",
        "b",
        "c",
        "s",
        "t",
        "seg1dx",
        "seg1dy",
        "seg2dx",
        "seg2dy",
        "seg1seg2dx",
        "seg1seg2dy",
        "limit",
        "perpSeg1",
        "perpSeg2",
        "factorSeg1",
        "seg1Pt",
        "seg2Pt",
        "seg1min",
        "seg1max",
        "seg1minVal",
        "seg1maxVal",
        "seg2min",
        "seg2max",
        "seg2minVal",
        "seg2maxVal",
        "legFromPtX",
        "legFromPtY",
        "legToPtX",
        "legToPtY",
        "otherPtX",
        "otherPtY",
        "from2toAngle",
        "from2otherAngle",
        "other2toAngle",
        "shape",
        "hole",
        "lastShapeIdx",
        "prevShapeIdx",
        "nextShapeIdx",
        "insideAngle",
        "lastHoleIdx",
        "prevHoleIdx",
        "nextHoleIdx",
        "sIdx",
        "nextIdx",
        "intersection",
        "indepHoles",
        "ihIdx",
        "chkHole",
        "hIdx",
        "nextIdx",
        "intersection",
        "holeIndex",
        "shapeIndex",
        "shapePt",
        "holePt",
        "holeIdx",
        "cutKey",
        "failedCuts",
        "tmpShape1",
        "tmpShape2",
        "tmpHole1",
        "tmpHole2",
        "h",
        "hl",
        "minShapeIndex",
        "counter",
        "h",
        "h2",
        "i",
        "il",
        "f",
        "face",
        "key",
        "index",
        "allPointsMap",
        "allpoints",
        "h",
        "hl",
        "shapeWithoutHoles",
        "triangles",
        "k",
        "k",
        "k",
        "k",
        "t",
        "d",
        "pts",
        "d",
        "pts",
        "lengths",
        "cache",
        "current",
        "last",
        "p",
        "sum",
        "arcLengths",
        "i",
        "il",
        "targetArcLength",
        "low",
        "high",
        "comparison",
        "t",
        "lengthBefore",
        "lengthAfter",
        "segmentLength",
        "segmentFraction",
        "t",
        "delta",
        "t1",
        "t2",
        "pt1",
        "pt2",
        "vec",
        "t",
        "startPoint",
        "endPoint",
        "d",
        "curveLengths",
        "i",
        "diff",
        "curve",
        "u",
        "lens",
        "lengths",
        "sums",
        "i",
        "l",
        "pts",
        "pts",
        "geometry",
        "i",
        "l",
        "point",
        "chars",
        "scale",
        "offset",
        "paths",
        "i",
        "ret",
        "glyph",
        "path",
        "pts",
        "b2",
        "b3",
        "x",
        "y",
        "cpx",
        "cpy",
        "cpx0",
        "cpy0",
        "cpx1",
        "cpy1",
        "cpx2",
        "cpy2",
        "laste",
        "outline",
        "i",
        "l",
        "action",
        "i2",
        "t",
        "i2",
        "t",
        "data",
        "paths",
        "shapes",
        "p",
        "pl",
        "i",
        "l",
        "lastargs",
        "x0",
        "y0",
        "curve",
        "lastargs",
        "x0",
        "y0",
        "curve",
        "lastargs",
        "x0",
        "y0",
        "curve",
        "args",
        "lastargs",
        "x0",
        "y0",
        "npts",
        "curve",
        "lastargs",
        "x0",
        "y0",
        "lastargs",
        "x0",
        "y0",
        "args",
        "curve",
        "lastPoint",
        "points",
        "i",
        "b2",
        "b3",
        "points",
        "cpx",
        "cpy",
        "cpx2",
        "cpy2",
        "cpx1",
        "cpy1",
        "cpx0",
        "cpy0",
        "laste",
        "tx",
        "ty",
        "i",
        "l",
        "item",
        "action",
        "args",
        "j",
        "t",
        "j",
        "t",
        "last",
        "spts",
        "n",
        "spline",
        "j",
        "aX",
        "aY",
        "aRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "deltaAngle",
        "angle",
        "tdivisions",
        "j",
        "t",
        "aX",
        "aY",
        "xRadius",
        "yRadius",
        "aStartAngle",
        "aEndAngle",
        "aClockwise",
        "aRotation",
        "deltaAngle",
        "angle",
        "tdivisions",
        "cos",
        "sin",
        "j",
        "t",
        "x",
        "tx",
        "y",
        "ty",
        "lastPoint",
        "subPaths",
        "lastPath",
        "i",
        "l",
        "item",
        "args",
        "action",
        "shapes",
        "i",
        "l",
        "tmpPath",
        "tmpShape",
        "polyLen",
        "inside",
        "p",
        "q",
        "edgeLowPt",
        "edgeHighPt",
        "edgeDx",
        "edgeDy",
        "perpEdge",
        "isClockWise",
        "subPaths",
        "solid",
        "tmpPath",
        "tmpShape",
        "shapes",
        "holesFirst",
        "betterShapeHoles",
        "newShapes",
        "newShapeHoles",
        "mainIdx",
        "tmpPoints",
        "i",
        "l",
        "ambiguous",
        "toChange",
        "sIdx",
        "sLen",
        "sIdx",
        "sLen",
        "sho",
        "hIdx",
        "ho",
        "hole_unassigned",
        "s2Idx",
        "tmpHoles",
        "i",
        "il",
        "j",
        "jl",
        "holesPts",
        "i",
        "l",
        "point",
        "tangent",
        "b2",
        "tangentQuadraticBezier",
        "b3",
        "tangentCubicBezier",
        "points",
        "point",
        "intPoint",
        "weight",
        "point0",
        "point1",
        "point2",
        "point3",
        "interpolate",
        "deltaAngle",
        "angle",
        "x",
        "y",
        "cos",
        "sin",
        "tx",
        "x",
        "ty",
        "y",
        "vector",
        "b2",
        "b3",
        "points",
        "point",
        "intPoint",
        "weight",
        "point0",
        "point1",
        "point2",
        "point3",
        "interpolate",
        "tmp",
        "px",
        "py",
        "pz",
        "t1",
        "t2",
        "t2",
        "t3",
        "points",
        "point",
        "intPoint",
        "weight",
        "l",
        "p0",
        "p1",
        "p2",
        "p3",
        "pow",
        "dt0",
        "dt1",
        "dt2",
        "tension",
        "v",
        "scope",
        "width_half",
        "height_half",
        "depth_half",
        "w",
        "ix",
        "iy",
        "gridX",
        "gridY",
        "width_half",
        "height_half",
        "offset",
        "gridX1",
        "gridY1",
        "segment_width",
        "segment_height",
        "normal",
        "vector",
        "a",
        "b",
        "c",
        "d",
        "uva",
        "uvb",
        "uvc",
        "uvd",
        "face",
        "vertices",
        "positions",
        "normals",
        "uvs",
        "s",
        "i",
        "ii",
        "segment",
        "indices",
        "i",
        "heightHalf",
        "x",
        "y",
        "vertices",
        "uvs",
        "verticesRow",
        "uvsRow",
        "v",
        "radius",
        "u",
        "vertex",
        "tanTheta",
        "na",
        "nb",
        "v1",
        "v2",
        "v3",
        "v4",
        "n1",
        "n2",
        "n3",
        "n4",
        "uv1",
        "uv2",
        "uv3",
        "uv4",
        "v1",
        "v2",
        "v3",
        "n1",
        "n2",
        "n3",
        "uv1",
        "uv2",
        "uv3",
        "v1",
        "v2",
        "v3",
        "n1",
        "n2",
        "n3",
        "uv1",
        "uv2",
        "uv3",
        "thresholdDot",
        "edge",
        "hash",
        "keys",
        "geometry2",
        "vertices",
        "faces",
        "i",
        "l",
        "face",
        "j",
        "key",
        "coords",
        "h",
        "vertex",
        "sl",
        "s",
        "shape",
        "amount",
        "bevelThickness",
        "bevelSize",
        "bevelSegments",
        "bevelEnabled",
        "curveSegments",
        "steps",
        "extrudePath",
        "extrudePts",
        "extrudeByPath",
        "uvgen",
        "splineTube",
        "binormal",
        "normal",
        "position2",
        "ahole",
        "h",
        "hl",
        "scope",
        "shapesOffset",
        "shapePoints",
        "vertices",
        "holes",
        "reverse",
        "faces",
        "contour",
        "vertices",
        "b",
        "bs",
        "t",
        "z",
        "vert",
        "vlen",
        "face",
        "flen",
        "v_trans_x",
        "v_trans_y",
        "shrink_by",
        "v_prev_x",
        "v_prev_y",
        "v_next_x",
        "v_next_y",
        "v_prev_lensq",
        "collinear0",
        "v_prev_len",
        "v_next_len",
        "ptPrevShift_x",
        "ptPrevShift_y",
        "ptNextShift_x",
        "ptNextShift_y",
        "sf",
        "v_trans_lensq",
        "direction_eq",
        "contourMovements",
        "i",
        "il",
        "j",
        "k",
        "holesMovements",
        "oneHoleMovements",
        "verticesMovements",
        "s",
        "layer",
        "offset",
        "layeroffset",
        "j",
        "k",
        "s",
        "sl",
        "slen1",
        "slen2",
        "a",
        "b",
        "c",
        "d",
        "uvs",
        "uvs",
        "vertices",
        "a",
        "b",
        "c",
        "vertices",
        "a",
        "b",
        "c",
        "d",
        "i",
        "l",
        "curveSegments",
        "material",
        "uvgen",
        "i",
        "l",
        "hole",
        "shapesOffset",
        "shapePoints",
        "vertices",
        "holes",
        "reverse",
        "faces",
        "vert",
        "vlen",
        "face",
        "flen",
        "a",
        "b",
        "c",
        "inversePointLength",
        "inverseSegments",
        "i",
        "il",
        "segments",
        "phi",
        "sin",
        "cos",
        "j",
        "jl",
        "point",
        "vertex",
        "np",
        "i",
        "il",
        "segments",
        "j",
        "jl",
        "a",
        "b",
        "c",
        "d",
        "u0",
        "v0",
        "u1",
        "v1",
        "width_half",
        "height_half",
        "gridX",
        "gridY",
        "gridX1",
        "gridY1",
        "segment_width",
        "segment_height",
        "vertices",
        "normals",
        "uvs",
        "offset",
        "offset2",
        "iy",
        "y",
        "ix",
        "x",
        "indices",
        "iy",
        "ix",
        "a",
        "b",
        "c",
        "d",
        "i",
        "o",
        "uvs",
        "radius",
        "innerRadius",
        "radiusStep",
        "vertex",
        "segment",
        "n",
        "thetaSegment",
        "segment",
        "v1",
        "segment",
        "v2",
        "v3",
        "thetaEnd",
        "vertexCount",
        "positions",
        "normals",
        "uvs",
        "index",
        "vertices",
        "normal",
        "y",
        "verticesRow",
        "v",
        "x",
        "u",
        "px",
        "py",
        "pz",
        "indices",
        "y",
        "x",
        "v1",
        "v2",
        "v3",
        "v4",
        "font",
        "shapes",
        "center",
        "uvs",
        "normals",
        "j",
        "i",
        "u",
        "v",
        "vertex",
        "j",
        "i",
        "a",
        "b",
        "c",
        "d",
        "face",
        "grid",
        "tang",
        "n",
        "bitan",
        "i",
        "u",
        "p1",
        "p2",
        "j",
        "v",
        "cx",
        "cy",
        "pos",
        "i",
        "j",
        "ip",
        "jp",
        "a",
        "b",
        "c",
        "d",
        "uva",
        "uvb",
        "uvc",
        "uvd",
        "cu",
        "su",
        "quOverP",
        "cs",
        "tx",
        "ty",
        "tz",
        "grid",
        "scope",
        "tangent",
        "normal",
        "binormal",
        "numpoints",
        "u",
        "v",
        "r",
        "cx",
        "cy",
        "pos",
        "pos2",
        "i",
        "j",
        "ip",
        "jp",
        "a",
        "b",
        "c",
        "d",
        "uva",
        "uvb",
        "uvc",
        "uvd",
        "frames",
        "tangents",
        "normals",
        "binormals",
        "normal",
        "tangents",
        "normals",
        "binormals",
        "vec",
        "mat",
        "numpoints",
        "theta",
        "smallest",
        "tx",
        "ty",
        "tz",
        "i",
        "u",
        "that",
        "i",
        "l",
        "p",
        "faces",
        "i",
        "j",
        "l",
        "v1",
        "v2",
        "v3",
        "centroid",
        "i",
        "l",
        "i",
        "l",
        "uvs",
        "x0",
        "x1",
        "x2",
        "max",
        "min",
        "i",
        "l",
        "vertex",
        "u",
        "v",
        "face",
        "azi",
        "cols",
        "a",
        "b",
        "c",
        "v",
        "materialIndex",
        "i",
        "aj",
        "bj",
        "rows",
        "j",
        "i",
        "j",
        "k",
        "t",
        "r",
        "vertices",
        "indices",
        "t",
        "vertices",
        "indices",
        "vertices",
        "indices",
        "vertices",
        "indices",
        "verts",
        "faces",
        "uvs",
        "i",
        "j",
        "p",
        "u",
        "v",
        "sliceCount",
        "a",
        "b",
        "c",
        "d",
        "uva",
        "uvb",
        "uvc",
        "uvd",
        "edge",
        "hash",
        "keys",
        "vertices",
        "faces",
        "numEdges",
        "edges",
        "i",
        "l",
        "face",
        "j",
        "key",
        "coords",
        "i",
        "l",
        "numEdges",
        "j",
        "vertex",
        "index",
        "indices",
        "vertices",
        "groups",
        "numEdges",
        "edges",
        "o",
        "ol",
        "group",
        "start",
        "count",
        "i",
        "start",
        "il",
        "j",
        "key",
        "coords",
        "i",
        "l",
        "numEdges",
        "j",
        "index",
        "index2",
        "vertices",
        "numEdges",
        "numTris",
        "coords",
        "i",
        "l",
        "numTris",
        "j",
        "index",
        "index1",
        "index2",
        "vertices",
        "colors",
        "geometry",
        "material",
        "lineGeometry",
        "coneGeometry",
        "axis",
        "radians",
        "indices",
        "positions",
        "geometry",
        "box",
        "min",
        "max",
        "position",
        "array",
        "color",
        "geometry",
        "material",
        "pointMap",
        "hexFrustum",
        "hexCone",
        "hexUp",
        "hexTarget",
        "hexCross",
        "geometry",
        "pointMap",
        "vector",
        "camera",
        "points",
        "i",
        "il",
        "w",
        "h",
        "geometry",
        "material",
        "v1",
        "v2",
        "v3",
        "color",
        "color",
        "width",
        "nNormals",
        "objGeometry",
        "geometry",
        "positions",
        "v1",
        "v2",
        "normalMatrix",
        "matrixWorld",
        "position",
        "objGeometry",
        "vertices",
        "faces",
        "idx",
        "i",
        "l",
        "face",
        "normal",
        "geometry",
        "material",
        "i",
        "color",
        "geometry",
        "i",
        "il",
        "material",
        "vector",
        "geometry",
        "material",
        "geometry",
        "i",
        "bone",
        "material",
        "boneList",
        "i",
        "geometry",
        "matrixWorldInv",
        "boneMatrix",
        "j",
        "i",
        "bone",
        "geometry",
        "material",
        "vector",
        "vector2",
        "coneLength",
        "coneWidth",
        "color",
        "width",
        "nNormals",
        "objGeometry",
        "geometry",
        "positions",
        "v1",
        "v2",
        "normalMatrix",
        "keys",
        "matrixWorld",
        "position",
        "objGeometry",
        "vertices",
        "faces",
        "idx",
        "i",
        "l",
        "face",
        "j",
        "jl",
        "vertex",
        "normal",
        "objPos",
        "objNorm",
        "idx",
        "j",
        "jl",
        "color",
        "numFrames",
        "name",
        "startFrame",
        "endFrame",
        "fps",
        "animation",
        "pattern",
        "firstAnimation",
        "frameRanges",
        "geometry",
        "i",
        "il",
        "morph",
        "chunks",
        "name",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "time",
        "animation",
        "duration",
        "animation",
        "animation",
        "animation",
        "i",
        "il",
        "animation",
        "frameTime",
        "keyframe",
        "weight",
        "mix",
        "offset",
        "TWEEN",
        "_tweens",
        "i",
        "i",
        "_object",
        "_valuesStart",
        "_valuesEnd",
        "_valuesStartRepeat",
        "_duration",
        "_repeat",
        "_yoyo",
        "_isPlaying",
        "_reversed",
        "_delayTime",
        "_startTime",
        "_easingFunction",
        "_interpolationFunction",
        "_chainedTweens",
        "_onStartCallback",
        "_onStartCallbackFired",
        "_onUpdateCallback",
        "_onCompleteCallback",
        "_onStopCallback",
        "i",
        "numChainedTweens",
        "property",
        "elapsed",
        "value",
        "start",
        "end",
        "tmp",
        "i",
        "numChainedTweens",
        "s",
        "a",
        "p",
        "s",
        "a",
        "p",
        "s",
        "a",
        "p",
        "s",
        "s",
        "s",
        "m",
        "f",
        "i",
        "fn",
        "b",
        "n",
        "pw",
        "bn",
        "i",
        "m",
        "f",
        "i",
        "fn",
        "fc",
        "a",
        "s",
        "i",
        "v0",
        "v1",
        "t2",
        "t3",
        "a",
        "f",
        "l",
        "n",
        "i",
        "o",
        "HMDVRDevice",
        "INTERPUPILLARY_DISTANCE",
        "DEFAULT_MAX_FOV_LEFT_RIGHT",
        "DEFAULT_MAX_FOV_BOTTOM",
        "DEFAULT_MAX_FOV_TOP",
        "eyeTranslation",
        "SensorSample",
        "THREE",
        "Util",
        "DEBUG",
        "deltaT",
        "deltaT",
        "gyroDeltaQ",
        "invFilterQ",
        "deltaQ",
        "targetQ",
        "normAccel",
        "quat",
        "quat",
        "axis",
        "PositionSensorVRDevice",
        "ComplementaryFilter",
        "PosePredictor",
        "TouchPanner",
        "THREE",
        "Util",
        "orientation",
        "euler",
        "yaw",
        "accGravity",
        "rotRate",
        "timestampS",
        "deltaS",
        "WebVRPolyfill",
        "PositionSensorVRDevice",
        "THREE",
        "Util",
        "KEY_SPEED",
        "KEY_ANIMATION_DURATION",
        "MOUSE_SPEED_X",
        "MOUSE_SPEED_Y",
        "startAngle",
        "startTime",
        "elapsed",
        "percent",
        "movementX",
        "movementY",
        "element",
        "el",
        "THREE",
        "DEBUG",
        "axis",
        "angularSpeed",
        "deltaT",
        "predictAngle",
        "THREE",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "halfAngle",
        "s",
        "te",
        "m11",
        "m12",
        "m13",
        "m21",
        "m22",
        "m23",
        "m31",
        "m32",
        "m33",
        "trace",
        "s",
        "v1",
        "r",
        "EPS",
        "l",
        "qax",
        "qay",
        "qaz",
        "qaw",
        "qbx",
        "qby",
        "qbz",
        "qbw",
        "x",
        "y",
        "z",
        "w",
        "cosHalfTheta",
        "halfTheta",
        "sinHalfTheta",
        "ratioA",
        "ratioB",
        "invScalar",
        "min",
        "max",
        "dx",
        "dy",
        "oldLength",
        "quaternion",
        "quaternion",
        "x",
        "y",
        "z",
        "e",
        "x",
        "y",
        "z",
        "e",
        "x",
        "y",
        "z",
        "e",
        "d",
        "x",
        "y",
        "z",
        "qx",
        "qy",
        "qz",
        "qw",
        "ix",
        "iy",
        "iz",
        "iw",
        "matrix",
        "matrix",
        "x",
        "y",
        "z",
        "e",
        "invScalar",
        "min",
        "max",
        "oldLength",
        "x",
        "y",
        "z",
        "ax",
        "ay",
        "az",
        "bx",
        "by",
        "bz",
        "v1",
        "dot",
        "v1",
        "v1",
        "theta",
        "dx",
        "dy",
        "dz",
        "sx",
        "sy",
        "sz",
        "offset",
        "me",
        "clamp",
        "te",
        "m11",
        "m12",
        "m13",
        "m21",
        "m22",
        "m23",
        "m31",
        "m32",
        "m33",
        "matrix",
        "q",
        "chars",
        "uuid",
        "rnd",
        "r",
        "i",
        "degreeToRadiansFactor",
        "radianToDegreesFactor",
        "THREE",
        "Util",
        "ROTATE_SPEED",
        "element",
        "Util",
        "CardboardHMDVRDevice",
        "FusionPositionSensorVRDevice",
        "MouseKeyboardPositionSensorVRDevice",
        "HMDVRDevice",
        "PositionSensorVRDevice",
        "devices",
        "registerComponent",
        "THREE",
        "camera",
        "el",
        "data",
        "camera",
        "system",
        "registerComponent",
        "THREE",
        "loader",
        "el",
        "src",
        "registerComponent",
        "utils",
        "el",
        "canvas",
        "intersectedEl",
        "data",
        "el",
        "distance",
        "el",
        "debug",
        "registerComponent",
        "THREE",
        "utils",
        "DEFAULT_RADIUS",
        "helperMatrix",
        "degToRad",
        "warn",
        "data",
        "currentTranslate",
        "diff",
        "mesh",
        "geometry",
        "geometryNeedsUpdate",
        "translateNeedsUpdate",
        "translation",
        "diff",
        "debug",
        "registerComponent",
        "THREE",
        "degToRad",
        "warn",
        "el",
        "data",
        "diffData",
        "light",
        "value",
        "el",
        "newLight",
        "angle",
        "color",
        "decay",
        "distance",
        "groundColor",
        "intensity",
        "debug",
        "registerComponent",
        "parseUrl",
        "THREE",
        "warn",
        "el",
        "data",
        "model",
        "url",
        "format",
        "el",
        "objLoader",
        "material",
        "el",
        "loader",
        "debug",
        "coordinates",
        "registerComponent",
        "THREE",
        "warn",
        "isCoordinate",
        "target",
        "object3D",
        "targetEl",
        "target3D",
        "registerComponent",
        "THREE",
        "PI_2",
        "sceneEl",
        "canvasEl",
        "sceneEl",
        "canvasEl",
        "hmdEuler",
        "pitchObject",
        "yawObject",
        "hmdQuaternion",
        "hmdQuaternion",
        "dolly",
        "el",
        "deltaPosition",
        "currentPosition",
        "dolly",
        "deltaPosition",
        "previousPosition",
        "hmdQuaternion",
        "dolly",
        "euler",
        "pitchObject",
        "yawObject",
        "previousMouseEvent",
        "movementX",
        "movementY",
        "deltaY",
        "yawObject",
        "debug",
        "utils",
        "component",
        "THREE",
        "shader",
        "error",
        "diff",
        "registerComponent",
        "shaders",
        "shaderNames",
        "data",
        "dataDiff",
        "newShader",
        "currentShader",
        "shader",
        "schema",
        "scene",
        "schema",
        "tickProperties",
        "tick",
        "keys",
        "keys",
        "data",
        "Shader",
        "material",
        "data",
        "material",
        "defaultMaterial",
        "object3D",
        "mesh",
        "system",
        "debug",
        "registerComponent",
        "THREE",
        "warn",
        "data",
        "el",
        "mtlLoader",
        "objLoader",
        "material",
        "registerComponent",
        "object3D",
        "data",
        "registerComponent",
        "requestInterval",
        "THREE",
        "pollInterval",
        "closest",
        "el",
        "raycaster",
        "cursor",
        "parent",
        "originPosition",
        "cursorPosition",
        "direction",
        "scene",
        "cursorEl",
        "intersectedObj",
        "intersectedObjs",
        "i",
        "intersectedEl",
        "el",
        "degToRad",
        "registerComponent",
        "data",
        "object3D",
        "registerComponent",
        "zeroScale",
        "data",
        "object3D",
        "x",
        "y",
        "z",
        "register",
        "data",
        "canvas",
        "scene",
        "register",
        "THREE",
        "debug",
        "warn",
        "data",
        "el",
        "fog",
        "value",
        "fog",
        "fog",
        "registerComponent",
        "shouldCaptureKeyEvent",
        "THREE",
        "controls",
        "scene",
        "data",
        "registerComponent",
        "RStats",
        "HIDDEN_CLASS",
        "ThreeStats",
        "AFrameStats",
        "scene",
        "stats",
        "threeStats",
        "aframeStats",
        "plugins",
        "registerComponent",
        "THREE",
        "utils",
        "dummyDolly",
        "controls",
        "ENTER_VR_CLASS",
        "ENTER_VR_NO_HEADSET",
        "ENTER_VR_NO_WEBVR",
        "ENTER_VR_BTN_CLASS",
        "ENTER_VR_MODAL_CLASS",
        "HIDDEN_CLASS",
        "ORIENTATION_MODAL_CLASS",
        "scene",
        "scene",
        "scene",
        "scene",
        "compatModal",
        "compatModalLink",
        "compatModalText",
        "hasWebVR",
        "orientation",
        "vrButton",
        "wrapper",
        "modal",
        "exit",
        "debug",
        "diff",
        "registerComponent",
        "THREE",
        "warn",
        "data",
        "diffData",
        "el",
        "sound",
        "src",
        "srcChanged",
        "el",
        "sceneEl",
        "sound",
        "listener",
        "registerComponent",
        "registerComponent",
        "shouldCaptureKeyEvent",
        "THREE",
        "MAX_DELTA",
        "data",
        "acceleration",
        "easing",
        "velocity",
        "prevTime",
        "time",
        "delta",
        "keys",
        "movementVector",
        "adAxis",
        "wsAxis",
        "adSign",
        "wsSign",
        "el",
        "position",
        "direction",
        "rotation",
        "velocity",
        "elRotation",
        "TWEEN",
        "DIRECTIONS",
        "EASING_FUNCTIONS",
        "FILLS",
        "REPEATS",
        "DEFAULTS",
        "ANode",
        "constants",
        "coordinates",
        "parseProperty",
        "registerElement",
        "TWEEN",
        "utils",
        "DEFAULTS",
        "DIRECTIONS",
        "EASING_FUNCTIONS",
        "FILLS",
        "REPEATS",
        "isCoordinate",
        "el",
        "data",
        "el",
        "animationValues",
        "attribute",
        "begin",
        "currentValue",
        "direction",
        "easing",
        "fill",
        "repeat",
        "to",
        "toTemp",
        "yoyo",
        "data",
        "begin",
        "data",
        "tween",
        "el",
        "el",
        "start",
        "data",
        "elData",
        "mixinData",
        "mixinEl",
        "attributeSplit",
        "schema",
        "component",
        "componentPropName",
        "componentName",
        "partialSetAttribute",
        "to",
        "ANode",
        "debug",
        "registerElement",
        "THREE",
        "xhrLoader",
        "warn",
        "loaded",
        "audios",
        "imgs",
        "timeout",
        "videos",
        "i",
        "img",
        "src",
        "secondsBuffered",
        "i",
        "debug",
        "registerElement",
        "warn",
        "elements",
        "i",
        "srcs",
        "ANode",
        "components",
        "re",
        "THREE",
        "utils",
        "AEntity",
        "isNode",
        "debug",
        "registerElement",
        "styleParser",
        "proto",
        "attrValue",
        "mixins",
        "mixinIds",
        "mixinId",
        "newMixinsIds",
        "oldMixinsIds",
        "diff",
        "forEach",
        "stateMixinsEls",
        "stateMixinIds",
        "mixinId",
        "oldObj",
        "object3D",
        "parent",
        "attachedToParent",
        "children",
        "childEntities",
        "i",
        "child",
        "component",
        "isComponentDefined",
        "component",
        "dependencies",
        "component",
        "allComponents",
        "elValue",
        "component",
        "isDefault",
        "isMixedIn",
        "component",
        "components",
        "componentKeys",
        "sceneEl",
        "components",
        "componentKeys",
        "sceneEl",
        "component",
        "component",
        "partialComponentData",
        "componentObj",
        "value",
        "componentStr",
        "value",
        "oldValue",
        "component",
        "value",
        "component",
        "stateIndex",
        "i",
        "inMixin",
        "AComponents",
        "ANode",
        "registerElement",
        "component",
        "component",
        "value",
        "registerElement",
        "utils",
        "mixins",
        "matches",
        "element",
        "children",
        "childrenLoaded",
        "children",
        "i",
        "newMixinsIds",
        "oldMixinsIds",
        "diff",
        "mixins",
        "mixinIds",
        "i",
        "mixins",
        "mixinIds",
        "i",
        "mixinEl",
        "mixinEls",
        "mixinEl",
        "i",
        "observer",
        "mixinId",
        "currentObserver",
        "observer",
        "attr",
        "config",
        "data",
        "registerElement",
        "knownTags",
        "addTagName",
        "proto",
        "newObj",
        "obj",
        "isANode",
        "isAEntity",
        "newObj",
        "ANodeMethods",
        "newObj",
        "ANodeMethods",
        "AEntityMethods",
        "derivedMethod",
        "baseMethod",
        "wrapperMethod",
        "props",
        "desc",
        "ANode",
        "AEntity",
        "schema",
        "systems",
        "utils",
        "components",
        "parseProperties",
        "parseProperty",
        "processSchema",
        "isSingleProp",
        "stringifyProperties",
        "stringifyProperty",
        "styleParser",
        "Component",
        "name",
        "elData",
        "schema",
        "schema",
        "data",
        "el",
        "isSinglePropSchema",
        "previousData",
        "extendedSchema",
        "NewComponent",
        "proto",
        "componentDefined",
        "data",
        "isSinglePropSchema",
        "mixinEls",
        "mixinData",
        "coordinates",
        "debug",
        "error",
        "propertyTypes",
        "els",
        "i",
        "parsedUrl",
        "el",
        "initFullscreen",
        "initMetaTags",
        "initWakelock",
        "re",
        "systems",
        "THREE",
        "TWEEN",
        "utils",
        "AEntity",
        "ANode",
        "registerElement",
        "isIOS",
        "isMobile",
        "AScene",
        "systemsKeys",
        "system",
        "behaviors",
        "behaviors",
        "index",
        "camera",
        "canvas",
        "size",
        "canvas",
        "antialias",
        "renderer",
        "camera",
        "timeDelta",
        "systems",
        "isIframed",
        "handler",
        "fullscreenElement",
        "scene",
        "scene",
        "extend",
        "MOBILE_HEAD_TAGS",
        "MOBILE_IOS_HEAD_TAGS",
        "headEl",
        "headScriptEl",
        "tag",
        "headTags",
        "meta",
        "Wakelock",
        "wakelock",
        "debug",
        "propertyTypes",
        "warn",
        "defaultVal",
        "propType",
        "typeName",
        "propNames",
        "propDefinition",
        "propValue",
        "stringifiedData",
        "propDefinition",
        "propValue",
        "value",
        "propValue",
        "schema",
        "processSchema",
        "shaders",
        "shaderNames",
        "THREE",
        "propertyToThreeMapping",
        "Shader",
        "variables",
        "schema",
        "squemaKeys",
        "varType",
        "varValue",
        "variables",
        "dataKeys",
        "schema",
        "color",
        "NewShader",
        "proto",
        "components",
        "systems",
        "component",
        "i",
        "NewSystem",
        "proto",
        "scenes",
        "ANode",
        "registerElement",
        "targetSelector",
        "listener",
        "attributes",
        "el",
        "name",
        "targetEls",
        "attribute",
        "attributeName",
        "attributeSplit",
        "attributeValue",
        "targetEl",
        "i",
        "j",
        "getMeshMixin",
        "registerPrimitive",
        "utils",
        "boxDefinition",
        "registerPrimitive",
        "getMeshMixin",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "registerPrimitive",
        "utils",
        "registerPrimitive",
        "getMeshMixin",
        "registerPrimitive",
        "utils",
        "meshMixin",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "registerPrimitive",
        "utils",
        "getMeshMixin",
        "registerPrimitive",
        "utils",
        "AEntity",
        "components",
        "registerElement",
        "utils",
        "debug",
        "log",
        "attributes",
        "attr",
        "componentName",
        "split",
        "propertyName",
        "clone",
        "value",
        "AScene",
        "components",
        "registerComponent",
        "registerPrimitive",
        "registerShader",
        "registerSystem",
        "shaders",
        "systems",
        "THREE",
        "TWEEN",
        "pkg",
        "utils",
        "ANode",
        "AEntity",
        "_rS",
        "_scene",
        "scene",
        "_values",
        "_groups",
        "THREE",
        "registerShader",
        "srcLoader",
        "THREE",
        "utils",
        "src",
        "material",
        "material",
        "materialData",
        "registerShader",
        "srcLoader",
        "THREE",
        "utils",
        "CubeLoader",
        "texturePromises",
        "src",
        "material",
        "material",
        "material",
        "envMap",
        "materialData",
        "css",
        "css",
        "registerSystem",
        "DEFAULT_CAMERA_ATTR",
        "sceneEl",
        "cameraWrapperEl",
        "defaultCameraEl",
        "cameraEl",
        "sceneEl",
        "sceneCameras",
        "newActiveCameraEl",
        "cameraEl",
        "i",
        "sceneEl",
        "sceneCameraEls",
        "defaultCameraWrapper",
        "defaultCameraEl",
        "defaultCameraWrapper",
        "camera",
        "registerSystem",
        "DEFAULT_LIGHT_ATTR",
        "defaultLights",
        "sceneEl",
        "i",
        "sceneEl",
        "ambientLight",
        "directionalLight",
        "registerSystem",
        "materials",
        "regex",
        "coordinate",
        "vec",
        "debugLib",
        "extend",
        "settings",
        "debug",
        "d",
        "chunks",
        "color",
        "ls",
        "deepAssign",
        "objectAssign",
        "evt",
        "keysA",
        "keysB",
        "i",
        "diff",
        "keys",
        "aVal",
        "bVal",
        "isComparingObjects",
        "check",
        "isIOS",
        "regex",
        "data",
        "regex",
        "results",
        "debug",
        "warn",
        "textureEl",
        "isImage",
        "isVideo",
        "url",
        "aCubemap",
        "cubemapSrcRegex",
        "i",
        "urls",
        "validatedUrls",
        "parsedSrc",
        "tester",
        "el",
        "styleParser",
        "parsedData",
        "keys",
        "camelCaseObj",
        "camelCaseKey",
        "debug",
        "THREE",
        "EVENTS",
        "error",
        "textureCache",
        "TextureLoader",
        "warn",
        "el",
        "repeat",
        "srcString",
        "src",
        "el",
        "hash",
        "texture",
        "videoEl",
        "videoTextureResult",
        "i",
        "id",
        "hash",
        "videoAttributes",
        "oldMap",
        "isEl",
        "repeatXY",
        "el",
        "_rS",
        "_totalDrawArraysCalls",
        "_totalDrawElementsCalls",
        "_totalUseProgramCalls",
        "_totalFaces",
        "_totalVertices",
        "_totalPoints",
        "_totalBindTexures",
        "_values",
        "_groups",
        "_fractions",
        "_rS",
        "_values",
        "_groups",
        "_fractions",
        "_rS",
        "_usedJSHeapSize",
        "_totalJSHeapSize",
        "_values",
        "_groups",
        "_fractions",
        "log1024",
        "precision",
        "i",
        "nowOffset",
        "keys",
        "j",
        "l",
        "element",
        "_settings",
        "_colours",
        "_cssFont",
        "_cssRStats",
        "_css",
        "_base",
        "_div",
        "_elHeight",
        "_elWidth",
        "_perfCounters",
        "_def",
        "_canvas",
        "_ctx",
        "_max",
        "_current",
        "c",
        "_dotCanvas",
        "_dotCtx",
        "_alarmCanvas",
        "_alarmCtx",
        "_canvas",
        "_ctx",
        "th",
        "h",
        "_id",
        "id",
        "_time",
        "_value",
        "_total",
        "_averageValue",
        "_accumValue",
        "_accumStart",
        "_accumSamples",
        "_dom",
        "_spanId",
        "_spanValue",
        "_spanValueText",
        "_def",
        "_graph",
        "_started",
        "t",
        "v",
        "a",
        "t",
        "e",
        "_value",
        "id",
        "group",
        "g",
        "p",
        "j",
        "g",
        "div",
        "h1",
        "f",
        "div",
        "legend",
        "h",
        "p",
        "graph",
        "f",
        "v",
        "s",
        "val",
        "Util",
        "check",
        "delimiter",
        "regex",
        "results",
        "Util",
        "video",
        "timer",
        "userAgent",
        "nextTick",
        "apply",
        "immediateIds",
        "nextImmediateId",
        "msecs",
        "id",
        "args",
        "process",
        "cachedSetTimeout",
        "cachedClearTimeout",
        "queue",
        "draining",
        "currentQueue",
        "queueIndex",
        "timeout",
        "len",
        "args",
        "i",
        "o",
        "m",
        "uri",
        "i",
        "texloader",
        "_this",
        "j",
        "f",
        "_this",
        "modelEl",
        "colladaObjs",
        "id",
        "configuration",
        "colladaObjs",
        "colladaObjs",
        "_this",
        "url",
        "url",
        "baseUri",
        "finalURL",
        "u",
        "request",
        "targetObj",
        "materialIndex",
        "_this"
    ],
    "comments": [
        "webpackBootstrap",
        "The module cache",
        "The require function",
        "Check if module is in cache",
        "Create a new module (and put it into the cache)",
        "Execute the module function",
        "Flag the module as loaded",
        "Return the exports of the module",
        "expose the modules object (__webpack_modules__)",
        "expose the module cache",
        "__webpack_public_path__",
        "Load entry module and return exports",
        "0",
        "",
        "",
        "1",
        "",
        "WEBPACK VAR INJECTION",
        "For more information about browser field, check out the browser field at https://github.com/substack/browserify-handbook#browser-field.",
        "Create a <link> tag with optional data attributes",
        "Create a <style> tag with optional data attributes",
        "for jsdom and IE9+",
        "for IE8 and below",
        "for Chrome, Firefox, and Safari",
        "shim for using process in browser",
        "v8 likes predictible objects",
        "empty string to avoid regexp issues",
        "is webkit? http://stackoverflow.com/a/16459606/376773",
        "is firebug? http://stackoverflow.com/a/398120/376773",
        "is firefox >= v31?",
        "https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages",
        "the final \"%c\" is somewhat tricky, because there could be other",
        "arguments passed either before or after the %c, so we need to",
        "figure out the correct index to insert the CSS into",
        "we only are interested in the *last* %c",
        "(the user may have provided their own)",
        "this hackery is required for IE8/9, where",
        "the `console.log` function doesn't have 'apply'",
        "define the `disabled` version",
        "define the `enabled` version",
        "set `diff` timestamp",
        "add the `color` if not set",
        "anything else let's inspect with %o",
        "apply any `formatters` transformations",
        "if we encounter an escaped % then don't increase the array index",
        "now we need to remove `args[index]` since it's inlined in the `format`",
        "ignore empty strings",
        "! (C) WebReflection Mit Style License",
        "eslint-disable no-unused-vars",
        "Store setTimeout reference so promise-polyfill will be unaffected by",
        "other code modifying setTimeout (like sinon.useFakeTimers())",
        "Use polyfill for setImmediate for performance gains",
        "Polyfill for Function.prototype.bind",
        "Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure",
        "style-attr\n\t====\n\n\tVery simple parsing and stringifying of style attributes.\n\n\t`parse`\n\t----\n\n\tConvert a style attribute string to an object.\n\n\t- input: string (eg. anything you might see in a style attribute)\n\t- return: object",
        "split with `.indexOf` rather than `.split` because the value may also contain colons.",
        "`getKeyValueChunks`\n\t----\n\n\tSplit a string into chunks matching `<key>: <value>`\n\n\t- input: string\n\t- return: Array<string>",
        "data URIs can contain semicolons, so make sure we get the whole thing",
        "`stringify`\n\t----\n\n\tConvert an object into an attribute string\n\n\t- input: object\n\t- return: string",
        "`normalize`\n\t----\n\n\tNormalize an attribute string (eg. collapse duplicates)\n\n\t- input: string\n\t- return: string",
        "the Rift SDK returns the position in meters",
        "this scale factor allows the user to define how meters",
        "are converted to scene units.",
        "We keep the first we encounter",
        "",
        "fullscreen",
        "render",
        "render left eye",
        "render right eye",
        "Regular render mode if not HMD",
        "",
        "start with an identity matrix",
        "and with scale/offset info for normalized device coords",
        "X result, map clip edges to [-w,+w]",
        "Y result, map clip edges to [-w,+w]",
        "Y offset is negated because this proj matrix transforms from world coords with Y=up,",
        "but the NDC scaling has Y=down (thanks D3D?)",
        "Z result (up to the app)",
        "W result (= Z in)",
        "Force Geometry to always be centered at the local origin of the",
        "containing Mesh.",
        "Axis conversion is done for geometries, animations, and controllers.",
        "If we ever pull cameras or lights out of the COLLADA file, they'll",
        "need extra work.",
        "For reflective or refractive materials we'll use this cubemap",
        "unit conversion",
        "fill in the keys",
        "createBones( geometry.bones, skin, hierarchy, skeleton, null, -1 );",
        "createWeights( skin, geometry.bones, geometry.skinIndices, geometry.skinWeights );",
        "geometry.animation = {\n\t\t\t\tname: 'take_001',\n\t\t\t\tfps: 30,\n\t\t\t\tlength: 2,\n\t\t\t\tJIT: true,\n\t\t\t\thierarchy: hierarchy\n\t\t\t};",
        "FIXME: this is dumb...",
        "(IBMi * JMi)",
        "Walk the Collada tree and flatten the bones into a list, extract the position, quat and scale from the matrix",
        "Move the vertices into the pose that is proper for the start of the animation",
        "flatten the skeleton into a list of bones",
        "sort that list so that the order reflects the order in the joint list",
        "hook up the parents by index instead of name",
        "move vertices to bind shape",
        "hook up the skin weights",
        "TODO - this might be a good place to choose greatest 4 weights",
        "process animation, or simply pose the rig if no animation",
        "create an animation for the animated bones",
        "NOTE: this has no effect when using morphtargets",
        "process the frame and setup the rig with a fresh",
        "transform, possibly from the bone's animation channel(s)",
        "kinda ghetto joint detection",
        "apply actual joint value here",
        "apply the matrix to the threejs node",
        "FIXME: controllers",
        "urgh: controller can be chained",
        "handle the most basic case...",
        "skinController = node.controllers[i];",
        "geometries",
        "collect used fx for this geometry-instance",
        "mesh.skeleton = skinController.skeleton;",
        "mesh.skinController = controllers[ skinController.url ];",
        "mesh.skinInstanceController = skinController;",
        "mesh.animationHandle.setKey(0);",
        "Intentionally undefined, don't know what this is yet",
        "console.log(value.flatten)",
        "FIXME: handle other types",
        "post process",
        "Get next key with given sid",
        "Get previous key with given sid",
        "this.joints[value];",
        "console.log( child );",
        "TODO (mrdoob): Study case when this is null (carrier.dae)",
        "TODO: Handle indices. Maybe easier with BufferGeometry?",
        "invert the V",
        "check the vertices inputs",
        "check the vertices inputs",
        "invert the V",
        "check the vertices inputs",
        "subdivide into multiple Face3s",
        "Grab the right UVs for the vertices in this face",
        "console.log(child.nodeName);",
        "for (var i = 0; i < this.accessor.params.length; i++) {",
        "console.log(param.name + \" \" + param.type);",
        "}",
        "Defaults from:",
        "https://collada.org/mediawiki/index.php/Maya_texture_placement_MAYA_extension",
        "This should be supported by Maya, 3dsMax, and MotionBuilder",
        "some dae have a value of true which becomes NaN via parseInt",
        "If 'bumptype' is 'heightfield', create a 'bump' property",
        "Else if 'bumptype' is 'normalmap', create a 'normal' property",
        "(Default to 'bump')",
        "convert transparent color RBG to average value",
        "Texture with baked lighting?",
        "mix regular shading with reflective component",
        "TODO: \"index_of_refraction\" becomes \"refractionRatio\" in shader, but I'm not sure if the two are actually comparable",
        "gets figured out up top",
        "TODO: Currently only doing linear interpolation. Should support full COLLADA spec.",
        "Camera",
        "Light",
        "if the min is equal to or somehow greater than the max, consider the joint static",
        "Up axis conversion",
        "First fix rotation and scale",
        "Columns first",
        "Rows second",
        "Now fix translation",
        "TODO: Merge with setPath()? Or rename to setTexturePath?",
        "Blank line or comment ignore",
        "New material",
        "Convert materials info into normalized form based on options",
        "Diffuse color (color under white light) using RGB values",
        "ignore",
        "Create material",
        "Ns is material specular exponent",
        "Diffuse color (color under white light) using RGB values",
        "Specular color (color when light is reflected from shiny surface) using RGB values",
        "Diffuse texture map",
        "The specular exponent (defines the focus of the specular highlight)",
        "A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.",
        "Bump texture map",
        "Avoid loading twice.",
        "v float float float",
        "vn float float float",
        "vt float float",
        "f vertex vertex vertex ...",
        "f vertex/uv vertex/uv vertex/uv ...",
        "f vertex/uv/normal vertex/uv/normal vertex/uv/normal ...",
        "f vertex//normal vertex//normal vertex//normal ...",
        "",
        "[\"v 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]",
        "[\"vn 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]",
        "[\"vt 0.1 0.2\", \"0.1\", \"0.2\"]",
        "[\"f 1 2 3\", \"1\", \"2\", \"3\", undefined]",
        "[\"f 1/1 2/2 3/3\", \" 1/1\", \"1\", \"1\", \" 2/2\", \"2\", \"2\", \" 3/3\", \"3\", \"3\", undefined, undefined, undefined]",
        "[\"f 1/1/1 2/2/2 3/3/3\", \" 1/1/1\", \"1\", \"1\", \"1\", \" 2/2/2\", \"2\", \"2\", \"2\", \" 3/3/3\", \"3\", \"3\", \"3\", undefined, undefined, undefined, undefined]",
        "[\"f 1//1 2//2 3//3\", \" 1//1\", \"1\", \"1\", \" 2//2\", \"2\", \"2\", \" 3//3\", \"3\", \"3\", undefined, undefined, undefined]",
        "o object_name",
        "or",
        "g group_name",
        "material",
        "mtl file",
        "smooth shading",
        "File:src/Three.js",
        "",
        "",
        "",
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign",
        "Missing in IE9-11.",
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name",
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign",
        "https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button",
        "GL STATE CONSTANTS",
        "SHADOWING TYPES",
        "MATERIAL CONSTANTS",
        "side",
        "shading",
        "colors",
        "blending modes",
        "custom blending equations",
        "(numbers start from 100 not to clash with other",
        "mappings to OpenGL constants defined in Texture.js)",
        "custom blending destination factors",
        "custom blending source factors",
        "THREE.ZeroFactor = 200;",
        "THREE.OneFactor = 201;",
        "THREE.SrcAlphaFactor = 204;",
        "THREE.OneMinusSrcAlphaFactor = 205;",
        "THREE.DstAlphaFactor = 206;",
        "THREE.OneMinusDstAlphaFactor = 207;",
        "depth modes",
        "TEXTURE CONSTANTS",
        "Mapping modes",
        "Wrapping modes",
        "Filters",
        "Data types",
        "Pixel types",
        "THREE.UnsignedByteType = 1009;",
        "Pixel formats",
        "THREE.RGBEFormat handled as THREE.RGBAFormat in shaders",
        "1024;",
        "DDS / ST3C Compressed texture formats",
        "PVRTC compressed texture formats",
        "ETC compressed texture formats",
        "Loop styles for AnimationAction",
        "Interpolation",
        "Interpolant ending modes",
        "Triangle Draw modes",
        "File:src/math/Color.js",
        "h,s,l ranges are in 0.0 - 1.0",
        "rgb / hsl",
        "rgb(255,0,0) rgba(255,0,0,0.5)",
        "rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)",
        "hsl(120,50%,50%) hsla(120,50%,50%,0.5)",
        "hex color",
        "#ff0",
        "#ff0000",
        "color keywords",
        "red",
        "unknown color",
        "h,s,l ranges are in 0.0 - 1.0",
        "File:src/math/Quaternion.js",
        "http://www.mathworks.com/matlabcentral/fileexchange/",
        "20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/",
        "content/SpinCalc.m",
        "http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm",
        "assumes axis is normalized",
        "http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm",
        "assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)",
        "http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final",
        "assumes direction vectors vFrom and vTo are normalized",
        "from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm",
        "http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/",
        "fuzz-free, array-based Quaternion SLERP operation",
        "Skip the Slerp for tiny steps to avoid numeric problems:",
        "Normalize in case we just did a lerp:",
        "File:src/math/Vector2.js",
        "",
        "This function assumes min < max, if this assumption isn't true it will not operate correctly",
        "computes the angle in radians with respect to the positive x-axis",
        "File:src/math/Vector3.js",
        "input: THREE.Matrix4 affine matrix",
        "input: THREE.Matrix4 projection matrix",
        "perspective divide",
        "calculate quat * vector",
        "calculate result * inverse quat",
        "input: THREE.Matrix4 affine matrix",
        "vector interpreted as a direction",
        "This function assumes min < max, if this assumption isn't true it will not operate correctly",
        "reflect incident vector off plane orthogonal to normal",
        "normal is assumed to have unit length",
        "clamp, to handle numerical problems",
        "File:src/math/Vector4.js",
        "http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm",
        "q is assumed to be normalized",
        "http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm",
        "assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)",
        "variables for result",
        "margin to allow for rounding errors",
        "margin to distinguish between 0 and 180 degrees",
        "singularity found",
        "first check for identity matrix which must have +1 for all terms",
        "in leading diagonal and zero in other terms",
        "this singularity is identity matrix so angle = 0",
        "zero angle, arbitrary axis",
        "otherwise this singularity is angle = 180",
        "m11 is the largest diagonal term",
        "m22 is the largest diagonal term",
        "m33 is the largest diagonal term so base result on this",
        "return 180 deg rotation",
        "as we have reached here there are no singularities so we can handle normally",
        "used to normalize",
        "prevent divide by zero, should not happen if matrix is orthogonal and should be",
        "caught by singularity test above, but I've left it in just in case",
        "This function assumes min < max, if this assumption isn't true it will not operate correctly",
        "File:src/math/Euler.js",
        "assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)",
        "WARNING: this discards revolution information -bhouston",
        "File:src/math/Line3.js",
        "File:src/math/Box2.js",
        "this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes",
        "This can potentially have a divide by zero if the box",
        "has a size dimension of 0.",
        "using 6 splitting planes to rule out intersections.",
        "File:src/math/Box3.js",
        "Computes the world-axis-aligned bounding box of an object (including its children),",
        "accounting for both the object's, and children's, world transforms",
        "this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes",
        "This can potentially have a divide by zero if the box",
        "has a size dimension of 0.",
        "using 6 splitting planes to rule out intersections.",
        "Find the point on the AABB closest to the sphere center.",
        "If that point is inside the sphere, the AABB and sphere intersect.",
        "We compute the minimum and maximum dot product values. If those values",
        "are on the same side (back or front) of the plane, then there is no intersection.",
        "NOTE: I am using a binary pattern to specify all 2^3 combinations below",
        "000",
        "001",
        "010",
        "011",
        "100",
        "101",
        "110",
        "111",
        "File:src/math/Matrix3.js",
        "input: THREE.Matrix4",
        "( based on http://code.google.com/p/webgl-mjs/ )",
        "no inverse",
        "input: THREE.Matrix4",
        "File:src/math/Matrix4.js",
        "last column",
        "bottom row",
        "last column",
        "bottom row",
        "TODO: make this more efficient",
        "( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )",
        "based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm",
        "Based on http://www.gamedev.net/reference/articles/article1199.asp",
        "if determine is negative, we need to invert one scale",
        "scale the rotation part",
        "at this point matrix is incomplete so we can't use .copy()",
        "File:src/math/Ray.js",
        "point behind the ray",
        "from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp",
        "It returns the min distance between the ray and the segment",
        "defined by v0 and v1",
        "It can also set two optional targets :",
        "- The closest point on the ray",
        "- The closest point on the segment",
        "The ray and segment are not parallel.",
        "region 0",
        "Minimum at interior points of ray and segment.",
        "region 1",
        "region 5",
        "region 4",
        "region 3",
        "region 2",
        "Ray and segment are parallel.",
        "t0 = first intersect point - entrance on front of sphere",
        "t1 = second intersect point - exit point on back of sphere",
        "test to see if both t0 and t1 are behind the ray - if so, return null",
        "test to see if t0 is behind the ray:",
        "if it is, the ray is inside the sphere, so return the second exit point scaled by t1,",
        "in order to always return an intersect point that is in front of the ray.",
        "else t0 is in front of the ray, so return the first collision point scaled by t0",
        "line is coplanar, return origin",
        "Null is preferable to undefined since undefined means.... it is undefined",
        "Return if the ray never intersects the plane",
        "check if the ray lies on the plane first",
        "ray origin is behind the plane (and is pointing behind it)",
        "These lines also handle the case where tmin or tmax is NaN",
        "(result of 0 * Infinity). x !== x returns true if x is NaN",
        "return point closest to the ray (positive side)",
        "Compute the offset origin, edges, and normal.",
        "from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp",
        "Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,",
        "E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by",
        "|Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))",
        "|Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))",
        "|Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)",
        "b1 < 0, no intersection",
        "b2 < 0, no intersection",
        "b1+b2 > 1, no intersection",
        "Line intersects triangle, check if ray does.",
        "t < 0, no intersection",
        "Ray intersects triangle.",
        "File:src/math/Sphere.js",
        "We use the following equation to compute the signed distance from",
        "the center of the sphere to the plane.",
        "",
        "distance = q * n - d",
        "",
        "If this distance is greater than the radius of the sphere,",
        "then there is no intersection.",
        "File:src/math/Frustum.js",
        "if both outside plane, no intersection",
        "File:src/math/Plane.js",
        "must be this.normal, not normal, as this.normal is normalized",
        "Q: should an error be thrown if normal is zero (e.g. degenerate plane)?",
        "Note: will lead to a divide by zero if the plane is invalid.",
        "line is coplanar, return origin",
        "Unsure if this is the correct method to handle this case.",
        "Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.",
        "compute new normal based on theory here:",
        "http://www.songho.ca/opengl/gl_normaltransform.html",
        "File:src/math/Math.js",
        "http://www.broofa.com/Tools/Math.uuid.htm",
        "compute euclidian modulo of m % n",
        "https://en.wikipedia.org/wiki/Modulo_operation",
        "Linear mapping from range <a1, a2> to range <b1, b2>",
        "http://en.wikipedia.org/wiki/Smoothstep",
        "Random integer from <low, high> interval",
        "Random float from <low, high> interval",
        "Random float from <-range/2, range/2> interval",
        "File:src/math/Spline.js",
        "approximate length by summing linear segments",
        "first point has 0 length",
        "last point ends with total length",
        "tmpVec.copy( this.points[ i - 1 ] );",
        "linearDistance = tmpVec.distanceTo( this.points[ i ] );",
        "Catmull-Rom",
        "File:src/math/Triangle.js",
        "static/instance method to calculate barycentric coordinates",
        "based on: http://www.blackpawn.com/texts/pointinpoly/default.html",
        "collinear or singular triangle",
        "arbitrary location outside of triangle?",
        "not sure if this is the best idea, maybe should be returning undefined",
        "barycentric coordinates must always sum to 1",
        "File:src/math/Interpolant.js",
        "- See http://jsperf.com/comparison-to-undefined/3",
        "- slower code:",
        "-",
        "- \t\t\t\tif ( t >= t1 || t1 === undefined ) {",
        "after end",
        "this loop",
        "we have arrived at the sought interval",
        "prepare binary search on the right side of the index",
        "- slower code:",
        "-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {",
        "looping?",
        "+ 1, using the scan for the details",
        "linear reverse scan",
        "before start",
        "this loop",
        "we have arrived at the sought interval",
        "prepare binary search on the left side of the index",
        "the interval is valid",
        "linear scan",
        "binary search",
        "check boundary cases, again",
        "seek",
        "validate_interval",
        "optional, subclass-specific settings structure",
        "Note: The indirection allows central control of many interpolants.",
        "--- Protected interface",
        "copies a sample value to the result buffer",
        "Template methods for derived classes:",
        "implementations shall return this.resultBuffer",
        "empty",
        "( 0, t, t0 ), returns this.resultBuffer",
        "( N-1, tN-1, t ), returns this.resultBuffer",
        "File:src/math/interpolants/CubicInterpolant.js",
        "f'(t0) = 0",
        "use the other end of the curve",
        "ZeroCurvatureEnding",
        "f''(t0) = 0 a.k.a. Natural Spline",
        "f'(tN) = 0",
        "use the other end of the curve",
        "ZeroCurvatureEnding",
        "f''(tN) = 0, a.k.a. Natural Spline",
        "evaluate polynomials",
        "combine data linearly",
        "File:src/math/interpolants/DiscreteInterpolant.js",
        "File:src/math/interpolants/LinearInterpolant.js",
        "File:src/math/interpolants/QuaternionLinearInterpolant.js",
        "File:src/core/Clock.js",
        "File:src/core/EventDispatcher.js",
        "File:src/core/Layers.js",
        "File:src/core/Raycaster.js",
        "direction is assumed to be normalized (for accurate distance calculations)",
        "",
        "direction is assumed to be normalized (for accurate distance calculations)",
        "File:src/core/Object3D.js",
        "assumes axis is normalized",
        "assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)",
        "assumes q is normalized",
        "rotate object on axis in object space",
        "axis is assumed to be normalized",
        "translate object by distance along axis in object space",
        "axis is assumed to be normalized",
        "This routine does not support objects with rotated and/or translated parent(s)",
        "update children",
        "meta is a hash used to collect geometries, materials.",
        "not providing it implies that this is the root object",
        "being serialized.",
        "initialize meta obj",
        "standard Object3D serialization",
        "",
        "",
        "extract data from the cache hash",
        "remove metadata on each item",
        "and return as array",
        "File:src/core/Face3.js",
        "File:src/core/BufferAttribute.js",
        "",
        "Deprecated",
        "File:src/core/InstancedBufferAttribute.js",
        "File:src/core/InterleavedBuffer.js",
        "File:src/core/InstancedInterleavedBuffer.js",
        "File:src/core/InterleavedBufferAttribute.js",
        "File:src/core/Geometry.js",
        "update flags",
        "rotate geometry around world x-axis",
        "rotate geometry around world y-axis",
        "rotate geometry around world z-axis",
        "translate geometry",
        "scale geometry",
        "vertex normals weighted by triangle areas",
        "http://www.iquilezles.org/www/articles/normals/normals.htm",
        "save original normals",
        "- create temp variables on first access",
        "otherwise just copy (for faster repeated calls)",
        "use temp geometry to compute face and vertex normals for each morph",
        "create on first access",
        "set vertices to morph target",
        "compute morph normals",
        "store morph normals",
        "restore original normals",
        "vertices",
        "faces",
        "uvs",
        "Hashmap for looking up vertices by position coordinates (and making sure they are unique)",
        "number of decimal points, e.g. 4 for epsilon of 0.0001",
        "console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);",
        "if faces are completely degenerate after merging vertices, we",
        "have to remove them from the geometry.",
        "if any duplicate vertices are found in a Face3",
        "we have to remove the face as nothing can be saved",
        "Use unique set of vertices",
        "tag faces",
        "sort faces",
        "sort uvs",
        "standard Geometry serialization",
        "deprecated",
        "isQuad",
        "temporal backward compatibility",
        "// Handle primitives\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tif ( parameters !== undefined ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tvalues.push( parameters[ key ] );\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = Object.create( this.constructor.prototype );\n\t\t\t\tthis.constructor.apply( geometry, values );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\treturn new this.constructor().copy( this );",
        "File:src/core/DirectGeometry.js",
        "this.lineDistances = [];",
        "update flags",
        "materials",
        "morphs",
        "skins",
        "",
        "morphs",
        "skins",
        "File:src/core/BufferGeometry.js",
        "rotate geometry around world x-axis",
        "rotate geometry around world y-axis",
        "rotate geometry around world z-axis",
        "translate geometry",
        "scale geometry",
        "console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );",
        "groups",
        "morphs",
        "skinning",
        "",
        "hoping to find a boundingSphere with a radius smaller than the",
        "boundingSphere of the boundingBox: sqrt(3) smaller in the best case",
        "backwards compatibility",
        "reset existing normals to zero",
        "indexed elements",
        "non-indexed elements (unconnected triangle soup)",
        "standard BufferGeometry serialization",
        "// Handle primitives\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tif ( parameters !== undefined ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tvalues.push( parameters[ key ] );\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = Object.create( this.constructor.prototype );\n\t\t\t\tthis.constructor.apply( geometry, values );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\treturn new this.constructor().copy( this );",
        "File:src/core/InstancedBufferGeometry.js",
        "File:src/core/Uniform.js",
        "File:src/animation/AnimationClip.js",
        "this means it should figure out its duration by scanning the tracks",
        "maybe only do these on demand, as doing them here could potentially slow down loading",
        "but leaving these here during development as this ensures a lot of testing of these functions",
        "Static methods:",
        "if there is a key at the first frame, duplicate it as the",
        "last frame as well for perfect loop.",
        "tested with https://regex101.com/ on trick sequences",
        "such flamingo_flyA_003, flamingo_run1_003, crdeath0059",
        "sort morph target names into animation groups based",
        "patterns like Walk_001, Walk_002, Run_001, Run_002",
        "parse the animation.hierarchy format",
        "only return track if there are actually keys.",
        "empty keys are filtered out, so check again",
        "automatic length determination in AnimationClip.",
        "skip empty tracks",
        "process morph targets in a way exactly compatible",
        "with AnimationHandler.init( animation )",
        "figure out all morph targets used in this track",
        "create a track for each morph target with all zero",
        "morphTargetInfluences except for the keys in which",
        "the morphTarget is named.",
        "...assume skeletal animation",
        "File:src/animation/AnimationMixer.js",
        "return an action for a clip optionally using a custom root target",
        "object (this method allocates a lot of dynamic memory in case a",
        "previously unknown clip/root combination is specified)",
        "we know the clip, so we don't have to parse all",
        "the bindings again but can just copy",
        "also, take the clip from the prototype action",
        "clip must be known when specified via string",
        "allocate all resources required to run it",
        "and make the action known to the memory manager",
        "get an existing action",
        "deactivates all previously scheduled actions",
        "advance the time and update apply the animation",
        "run active actions",
        "update scene graph",
        "return this mixer's root target object",
        "free all resources specific to a particular clip",
        "note: just calling _removeInactiveAction would mess up the",
        "iteration state and also require updating the state we can",
        "just throw away",
        "free all resources specific to a particular root target object",
        "remove a targeted clip from the cache",
        "bound by the mixer",
        "inside: PropertyMixer (managed by the mixer)",
        "for the memory manager",
        "for the memory manager",
        "global mixer time when the action is to be started",
        "it's set back to 'null' upon start of the action",
        "scaled local time of the action",
        "gets clamped or wrapped to 0..clip.duration according to loop",
        "no. of repetitions when looping",
        "false -> zero effective time scale",
        "true -> zero effective weight",
        "keep feeding the last frame?",
        "for smooth interpolation w/o separate",
        "clips for start, loop and end",
        "State & Scheduling",
        "restart clip",
        "forget previous loops",
        "forget scheduling",
        "return true when play has been called",
        "Weight",
        "set the weight stopping any scheduled fading",
        "although .enabled = false yields an effective weight of zero, this",
        "method does *not* change .enabled, because it would be confusing",
        "note: same logic as when updated at runtime",
        "return the weight considering fading and .enabled",
        "Time Scale Control",
        "set the weight stopping any scheduled warping",
        "although .paused = true yields an effective time scale of zero, this",
        "method does *not* change .paused, because it would be confusing",
        "return the time scale considering warping and .paused",
        "Object Accessors",
        "Interna",
        "called by the mixer",
        "check for scheduled start of action",
        "yet to come / don't decide when delta = 0",
        "start",
        "unschedule",
        "apply time scale and advance time",
        "note: _updateTime may disable the action resulting in",
        "an effective weight of 0",
        "faded out, disable",
        "motion has halted, pause",
        "warp done - apply final time scale",
        "just started",
        "reached the end",
        "just started",
        "when looping in reverse direction, the initial",
        "transition through zero counts as a repetition,",
        "so leave loopCount at -1",
        "wrap around",
        "signed",
        "stop (switch state, clamp time, fire event)",
        "transition to last round",
        "invert time for the \"pong round\"",
        "assuming for LoopOnce atStart == atEnd == true",
        "Implementation details:",
        "existing binding, make sure the cache knows",
        "this action has been forgotten by the cache, but the user",
        "appears to be still using it -> rebind",
        "increment reference counts / sort out state",
        "decrement reference counts / sort out state",
        "Memory manager",
        "'nActiveActions' followed by inactive ones",
        "inside:",
        "{",
        "knownActions: Array< _Action >\t- used as prototypes",
        "actionByRoot: _Action\t\t\t- lookup",
        "}",
        "'nActiveBindings' followed by inactive ones",
        "inside: Map< name, PropertyMixer >",
        "same game as above",
        "Memory management for _Action objects",
        "[ active actions |  inactive actions  ]",
        "[  active actions >| inactive actions ]",
        "s        a",
        "<-swap->",
        "a        s",
        "[  active actions  | inactive actions ]",
        "[ active actions |< inactive actions  ]",
        "a        s",
        "<-swap->",
        "s        a",
        "Memory management for PropertyMixer objects",
        "Memory management of Interpolants for weight and time scale",
        "File:src/animation/AnimationObjectGroup.js",
        "cached objects followed by the active ones",
        "threshold",
        "note: read by PropertyBinding.Composite",
        "for bookkeeping",
        "inside: string",
        "inside: { we don't care, here }",
        "inside: Array< PropertyBinding >",
        "inside: indices in these arrays",
        "unknown object -> add it to the ACTIVE region",
        "accounting is done, now do the same for all bindings",
        "move existing object to the ACTIVE region",
        "accounting is done, now do the same for all bindings",
        "since we do not bother to create new bindings",
        "for objects that are cached, the binding may",
        "or may not exist",
        "else the object is already where we want it to be",
        "for arguments",
        "move existing object into the CACHED region",
        "accounting is done, now do the same for all bindings",
        "for arguments",
        "remove & forget",
        "object is cached, shrink the CACHED region",
        "last cached object takes this object's place",
        "last object goes to the activated slot and pop",
        "accounting is done, now do the same for all bindings",
        "object is active, just swap with the last and pop",
        "accounting is done, now do the same for all bindings",
        "cached or active",
        "if object is known",
        "for arguments",
        "Internal interface used by befriended PropertyBinding.Composite:",
        "returns an array of bindings for the given path that is changed",
        "according to the contained objects in the group",
        "tells the group to forget about a property path and no longer",
        "update the array previously obtained with 'subscribe_'",
        "File:src/animation/AnimationUtils.js",
        "same as Array.prototype.slice, but also works on typed arrays",
        "converts an array to a specific type",
        "let 'undefined' and 'null' pass",
        "create typed array",
        "create Array",
        "returns an array by which times and values can be sorted",
        "uses the array previously returned by 'getKeyframeOrder' to sort data",
        "function for parsing AOS keyframe formats",
        "no data",
        "no data",
        "push all elements",
        "...assume THREE.Math-ish",
        "otherwise push as-is",
        "File:src/animation/KeyframeTrack.js",
        "fall back to default, unless the default itself is messed up",
        "fatal, in this case",
        "move all keyframes either forwards or backwards in time",
        "scale all keyframe times by a factor (useful for frame <-> seconds conversions)",
        "removes keyframes before and after animation without changing any values within the range [startTime, endTime].",
        "IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values",
        "inclusive -> exclusive bound",
        "empty tracks are forbidden, so keep at least one keyframe",
        "ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable",
        "removes equivalent sequential keys as common in morph target sequences",
        "(0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)",
        "remove adjacent keyframes scheduled at the same time",
        "remove unnecessary keyframes same as their neighbors",
        "in-place compaction",
        "Static methods:",
        "Serialization (in static context, because of constructor invocation",
        "and automatic invocation of .toJSON):",
        "derived classes can define a static parse method",
        "by default, we asssume a constructor compatible with the base",
        "derived classes can define a static toJSON method",
        "by default, we assume the data can be serialized as-is",
        "mandatory",
        "File:src/animation/PropertyBinding.js",
        "Note: This class uses a State pattern on a per-method basis:",
        "'bind' sets 'this.getValue' / 'setValue' and shadows the",
        "prototype version of these methods with one that represents",
        "the bound state. When the property is not found, the methods",
        "become no-ops.",
        "create getter / setter pair for a property in the scene graph",
        "set fail state so we can just 'return' on error",
        "ensure there is a value node",
        "special cases were we need to reach deeper into the hierarchy to get the face materials....",
        "potential future optimization: skip this if propertyIndex is already an integer",
        "and convert the integer string to a true integer.",
        "support resolving morphTarget names into indices.",
        "resolve property",
        "determine versioning scheme",
        "material",
        "node transform",
        "determine how the property gets bound",
        "access a sub element of the property array (only primitives are supported right now)",
        "potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.",
        "support resolving morphTarget names into indices.",
        "must use copy for Object3D.Euler/Quaternion",
        "select getter / setter",
        "back to the prototype version of getValue / setValue",
        "note: avoiding to mutate the shape of 'this' via 'delete'",
        "prototype, continued",
        "these are used to \"bind\" a nonexistent property",
        "initial state of these methods that calls 'bind'",
        "Direct",
        "EntireArray",
        "ArrayElement",
        "HasToFromArray",
        "bind all binding",
        "and only call .getValue on the first",
        "matches strings in the form of:",
        "nodeName.property",
        "nodeName.property[accessor]",
        "nodeName.material.property[accessor]",
        "uuid.property[accessor]",
        "uuid.objectName[objectIndex].propertyName[propertyIndex]",
        "parentName/nodeName.property",
        "parentName/parentName/nodeName.property[index]",
        ".bone[Armature.DEF_cog].position",
        "created and tested via https://regex101.com/#javascript",
        "directoryName: matches[1], // (tschw) currently unused",
        "allowed to be null, specified root node.",
        "allowed to be null, specifies that the whole property is set.",
        "search into skeleton bones.",
        "search into node subtree.",
        "File:src/animation/PropertyMixer.js",
        "layout: [ incoming | accu0 | accu1 | orig ]",
        "",
        "interpolators can use .buffer as their .result",
        "the data then goes to 'incoming'",
        "",
        "'accu0' and 'accu1' are used frame-interleaved for",
        "the cumulative result and are compared to detect",
        "changes",
        "",
        "'orig' stores the original state of the property",
        "accumulate data in the 'incoming' region into 'accu<i>'",
        "note: happily accumulating nothing when weight = 0, the caller knows",
        "the weight and shouldn't have made the call in the first place",
        "accuN := incoming * weight",
        "accuN := accuN + incoming * weight",
        "apply the state of 'accu<i>' to the binding when accus differ",
        "accuN := accuN + original * ( 1 - cumulativeWeight )",
        "value has changed -> update scene graph",
        "remember the state of the bound property and copy it to both accus",
        "accu[0..1] := orig -- initially detect changes against the original",
        "apply the state previously taken via 'saveOriginalState' to the binding",
        "mix functions",
        "File:src/animation/tracks/BooleanKeyframeTrack.js",
        "Note: Actually this track could have a optimized / compressed",
        "representation of a single value and a custom interpolant that",
        "computes \"firstValue ^ isOdd( index )\".",
        "File:src/animation/tracks/NumberKeyframeTrack.js",
        "ValueBufferType is inherited",
        "DefaultInterpolation is inherited",
        "File:src/animation/tracks/QuaternionKeyframeTrack.js",
        "ValueBufferType is inherited",
        "not yet implemented",
        "File:src/animation/tracks/StringKeyframeTrack.js",
        "File:src/animation/tracks/VectorKeyframeTrack.js",
        "ValueBufferType is inherited",
        "DefaultInterpolation is inherited",
        "File:src/audio/Audio.js",
        "File:src/audio/AudioAnalyser.js",
        "File:src/audio/AudioBuffer.js",
        "File:src/audio/PositionalAudio.js",
        "File:src/audio/AudioListener.js",
        "File:src/cameras/Camera.js",
        "This routine does not support cameras with rotated and/or translated parent(s)",
        "File:src/cameras/CubeCamera.js",
        "File:src/cameras/OrthographicCamera.js",
        "File:src/cameras/PerspectiveCamera.js",
        "File:src/cameras/StereoCamera.js",
        "Off-axis stereoscopic effect based on",
        "http://paulbourke.net/stereographics/stereorender/",
        "translate xOffset",
        "for left eye",
        "for right eye",
        "File:src/lights/Light.js",
        "File:src/lights/LightShadow.js",
        "File:src/lights/AmbientLight.js",
        "File:src/lights/DirectionalLight.js",
        "File:src/lights/HemisphereLight.js",
        "File:src/lights/PointLight.js",
        "for physically correct lights, should be 2.",
        "File:src/lights/SpotLight.js",
        "for physically correct lights, should be 2.",
        "File:src/loaders/Cache.js",
        "console.log( 'THREE.Cache', 'Adding key:', key );",
        "console.log( 'THREE.Cache', 'Checking key:', key );",
        "File:src/loaders/Loader.js",
        "convert from old material format",
        "",
        "File:src/loaders/XHRLoader.js",
        "Some browsers return HTTP Status 0 when using non-http protocol",
        "e.g. 'file://' or 'data://'. Handle as success.",
        "File:src/loaders/FontLoader.js",
        "File:src/loaders/ImageLoader.js",
        "File:src/loaders/JSONLoader.js",
        "Deprecated",
        "disregard empty arrays",
        "console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);",
        "to get face <=> uv index correspondence",
        "to get face <=> uv index correspondence",
        "parse old style Bone/Hierarchy animations",
        "parse implicit morph animations",
        "TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.",
        "File:src/loaders/LoadingManager.js",
        "File:src/loaders/BufferGeometryLoader.js",
        "File:src/loaders/MaterialLoader.js",
        "for PointsMaterial",
        "maps",
        "Blender exporter used to export a scalar. See #7459",
        "MultiMaterial",
        "File:src/loaders/ObjectLoader.js",
        "backwards compatible",
        "File:src/loaders/TextureLoader.js",
        "File:src/loaders/CubeTextureLoader.js",
        "File:src/loaders/BinaryTextureLoader.js",
        "override in sub classes",
        "File:src/loaders/CompressedTextureLoader.js",
        "override in sub classes",
        "compressed cubemap texture stored in a single DDS file",
        "File:src/materials/Material.js",
        "override the renderer's default precision for this material",
        "Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer",
        "ensure overdraw is backwards-compatible with legacy boolean type",
        "standard Material serialization",
        "Scale behind envMap",
        "TODO: Copied from Object3D.toJSON",
        "File:src/materials/LineBasicMaterial.js",
        "File:src/materials/LineDashedMaterial.js",
        "File:src/materials/MeshBasicMaterial.js",
        "emissive",
        "File:src/materials/MeshLambertMaterial.js",
        "diffuse",
        "File:src/materials/MeshPhongMaterial.js",
        "diffuse",
        "File:src/materials/MeshStandardMaterial.js",
        "diffuse",
        "File:src/materials/MeshDepthMaterial.js",
        "File:src/materials/MeshNormalMaterial.js",
        "File:src/materials/MultiMaterial.js",
        "File:src/materials/PointsMaterial.js",
        "File:src/materials/ShaderMaterial.js",
        "set to use scene fog",
        "set to use scene lights",
        "set to use \"color\" attribute stream",
        "set to use skinning attribute streams",
        "set to use morph targets",
        "set to use morph normals",
        "set to use derivatives",
        "set to use fragment depth values",
        "set to use draw buffers",
        "set to use shader texture LOD",
        "When rendered geometry doesn't include these attributes but the material does,",
        "use these default values in WebGL. This avoids errors when buffer data is missing.",
        "File:src/materials/RawShaderMaterial.js",
        "File:src/materials/SpriteMaterial.js",
        "set parameters",
        "File:src/textures/Texture.js",
        "valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)",
        "TODO: Move to THREE.Image",
        "UGH",
        "File:src/textures/CanvasTexture.js",
        "File:src/textures/CubeTexture.js",
        "File:src/textures/CompressedTexture.js",
        "no flipping for cube textures",
        "(also flipping doesn't work for compressed textures )",
        "can't generate mipmaps for compressed textures",
        "mips must be embedded in DDS files",
        "File:src/textures/DataTexture.js",
        "File:src/textures/VideoTexture.js",
        "File:src/objects/Group.js",
        "File:src/objects/Points.js",
        "Checking boundingSphere distance to ray",
        "",
        "File:src/objects/Line.js",
        "Checking boundingSphere distance to ray",
        "",
        "Move back to world space for distance calculation",
        "What do we want? intersection point on the ray or on the segment??",
        "point: raycaster.ray.at( distance ),",
        "Move back to world space for distance calculation",
        "What do we want? intersection point on the ray or on the segment??",
        "point: raycaster.ray.at( distance ),",
        "Move back to world space for distance calculation",
        "What do we want? intersection point on the ray or on the segment??",
        "point: raycaster.ray.at( distance ),",
        "DEPRECATED",
        "File:src/objects/LineSegments.js",
        "File:src/objects/Mesh.js",
        "Checking boundingSphere distance to ray",
        "",
        "Check boundingBox before continuing",
        "triangle number in indices buffer semantics",
        "triangle number in positions buffer semantics",
        "File:src/objects/Bone.js",
        "File:src/objects/Skeleton.js",
        "copy the bone array",
        "create a bone texture or an array of floats",
        "layout (1 matrix = 4 pixels)",
        "RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)",
        "with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)",
        "16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)",
        "32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)",
        "64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)",
        "4 pixels needed for 1 matrix",
        "4 floats per RGBA pixel",
        "use the supplied bone inverses or calculate the inverses",
        "recover the bind-time world matrices",
        "compute the local matrices, positions, rotations and scales",
        "flatten bone matrices to array",
        "compute the offset between the current and the original transform",
        "File:src/objects/SkinnedMesh.js",
        "init bones",
        "TODO: remove bone creation as there is no reason (other than",
        "convenience) for THREE.SkinnedMesh to do this.",
        "do something reasonable",
        "do something reasonable",
        "File:src/objects/LOD.js",
        "File:src/objects/Sprite.js",
        "Backwards compatibility",
        "File:src/objects/LensFlare.js",
        "THREE.Texture",
        "size in pixels (-1 = use texture.width)",
        "distance (0-1) from light source (0=at light source)",
        "screen position (-1 => 1) z = 0 is in front z = 1 is back",
        "scale",
        "rotation",
        "opacity",
        "color",
        "blending",
        "File:src/scenes/Scene.js",
        "checked by the renderer",
        "File:src/scenes/Fog.js",
        "File:src/scenes/FogExp2.js",
        "File:src/renderers/shaders/ShaderChunk.js",
        "File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/ambient_pars.glsl",
        "File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/bsdfs.glsl",
        "File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/color_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/color_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/common.glsl",
        "File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/lights_pars.glsl",
        "File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/lights_standard_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/lights_standard_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/lights_template.glsl",
        "File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/map_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/normal_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/project_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl",
        "File:src/renderers/shaders/UniformsUtils.js",
        "File:src/renderers/shaders/UniformsLib.js",
        "File:src/renderers/shaders/ShaderLib.js",
        "accumulation",
        "modulation",
        "Normal computed with derivatives when FLAT_SHADED",
        "accumulation",
        "modulation",
        "temporary",
        "STANDARD",
        "Normal computed with derivatives when FLAT_SHADED",
        "temporary",
        "accumulation",
        "modulation",
        "simple shader",
        "-------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t -------------------------------------------------------------------------",
        "-------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t -------------------------------------------------------------------------",
        "\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",",
        "Depth encoding into RGBA texture\n\t\t *\n\t\t * based on SpiderGL shadow map example\n\t\t * http://spidergl.org/example.php?id=6\n\t\t *\n\t\t * originally from\n\t\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\n\t\t *\n\t\t * see also\n\t\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/",
        "\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",",
        "\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",",
        "\"gl_FragData[ 0 ] = pack_depth( z );\",",
        "\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",",
        "File:src/renderers/WebGLRenderer.js",
        "public properties",
        "clearing",
        "scene graph",
        "physically based shading",
        "for backwards compatibility",
        "morphs",
        "flags",
        "internal properties",
        "internal state cache",
        "",
        "",
        "frustum",
        "camera matrices cache",
        "light arrays cache",
        "info",
        "initialize",
        "",
        "shadow map",
        "Plugins",
        "API",
        "Clearing",
        "Reset",
        "Events",
        "Buffer deallocation",
        "cube texture",
        "2D texture",
        "remove all webgl properties",
        "Buffer rendering",
        "morph targets",
        "",
        "",
        "",
        "Not using Line*Material",
        "4 bytes per Float32",
        "Sorting",
        "Rendering",
        "reset caching for this frame",
        "update scene graph",
        "update camera matrices and frustum",
        "",
        "",
        "",
        "opaque pass (front-to-back order)",
        "transparent pass (back-to-front order)",
        "custom render plugins (post pass)",
        "Generate mipmap if we're using any kind of mipmap filtering",
        "Ensure depth buffer writing is enabled so it can be cleared on next render",
        "_gl.finish();",
        "allocate the next position in the appropriate array",
        "recycle existing render item or grow the array",
        "assert( index === array.length );",
        "new material",
        "changed glsl or parameters",
        "same glsl and uniform list",
        "only rebuild uniform list",
        "store the light setup it was created for",
        "wire up the material to this renderer's lighting state",
        "detect dynamic uniforms",
        "lighting uniforms depend on the camera so enforce an update",
        "now, in case this material supports lights - or later, when",
        "the next material that does gets activated:",
        "set to true on material change",
        "remains set until update done",
        "load material specific uniforms",
        "(shader material also gets them for the sake of genericity)",
        "skinning uniforms must be set even if material didn't change",
        "auto-setting of texture unit for bone texture must go before other textures",
        "not sure why, but otherwise weird things happen",
        "the current material requires lighting info",
        "note: all lighting uniforms are always set correctly",
        "they simply reference the renderer's state for their",
        "values",
        "",
        "use the current material's .needsUpdate flags to set",
        "the GL state when required",
        "refresh uniforms common to several materials",
        "refresh single material specific uniforms",
        "load common uniforms",
        "Uniforms (refresh uniforms objects)",
        "uv repeat and offset setting priorities",
        "1. color map",
        "2. specular map",
        "3. normal map",
        "4. bump map",
        "5. alpha map",
        "6. emissive map",
        "TODO: Cache this.",
        "to prevent pow( 0.0, 0.0 )",
        "uniforms.envMap.value = material.envMap; // part of uniforms common",
        "If uniforms are marked as clean, they don't need to be loaded to the GPU.",
        "Uniforms (load to GPU)",
        "needsUpdate property is not added to all uniforms.",
        "",
        "single integer",
        "single float",
        "single THREE.Vector2",
        "single THREE.Vector3",
        "single THREE.Vector4",
        "single THREE.Color",
        "case 's':\n\n\t\t\t\t\t\t// TODO: Optimize this.\n\t\t\t\t\t\tfor( var propertyName in uniform.properties ) {\n\n\t\t\t\t\t\t\tvar property = uniform.properties[ propertyName ];\n\t\t\t\t\t\t\tvar locationProperty =  location[ propertyName ];\n\t\t\t\t\t\t\tvar valueProperty = value[ propertyName ];\n\n\t\t\t\t\t\t\tswitch( property.type ) {\n\t\t\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\t\t\t_gl.uniform1i( locationProperty, valueProperty );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\t\t\t_gl.uniform1f( locationProperty, valueProperty );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\t\t\t\t_gl.uniform2f( locationProperty, valueProperty.x, valueProperty.y );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\t\t\t\t_gl.uniform3f( locationProperty, valueProperty.x, valueProperty.y, valueProperty.z );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\t\t\t\t_gl.uniform4f( locationProperty, valueProperty.x, valueProperty.y, valueProperty.z, valueProperty.w );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\t\t\t_gl.uniform3f( locationProperty, valueProperty.r, valueProperty.g, valueProperty.b );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;",
        "TODO: Optimize this.",
        "flat array of integers (JS or typed array)",
        "flat array of integers with 3 x N size (JS or typed array)",
        "flat array of floats (JS or typed array)",
        "flat array of floats with 3 x N size (JS or typed array)",
        "array of THREE.Vector2",
        "array of THREE.Vector3",
        "array of THREE.Vector4",
        "single THREE.Matrix2",
        "single THREE.Matrix3",
        "array of THREE.Matrix3",
        "single THREE.Matrix4",
        "array of THREE.Matrix4",
        "single THREE.Texture (2d or cube)",
        "CompressedTexture can have Array in image :/",
        "array of THREE.Texture (2d or cube)",
        "CompressedTexture can have Array in image :/",
        "for point lights we set the shadow matrix to be a translation-only matrix",
        "equal to inverse of the light's position",
        "GL state setting",
        "Textures",
        "use manually created mipmaps if available",
        "if there are no manual mipmaps",
        "set 0 level mipmap and then use GL to generate other mipmap levels",
        "regular Texture (image, video, canvas)",
        "use manually created mipmaps if available",
        "if there are no manual mipmaps",
        "set 0 level mipmap and then use GL to generate other mipmap levels",
        "Warning: Scaling through the canvas will only work with images that use",
        "premultiplied alpha.",
        "Render targets",
        "Setup storage for target texture and bind it to correct framebuffer",
        "Setup storage for internal depth/stencil buffers and bind to correct framebuffer",
        "FIXME: We don't support !depth !stencil",
        "Setup GL resources for a non-texture depth buffer",
        "Set up GL resources for the render target",
        "Setup framebuffer",
        "Setup color buffer",
        "Setup depth and stencil buffers",
        "Fallback filters for non-power-of-2 textures",
        "Map three.js constants to WebGL constants",
        "File:src/renderers/WebGLRenderTarget.js",
        "In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers",
        "File:src/renderers/WebGLRenderTargetCube.js",
        "PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5",
        "File:src/renderers/webgl/WebGLBufferRenderer.js",
        "File:src/renderers/webgl/WebGLIndexedBufferRenderer.js",
        "File:src/renderers/webgl/WebGLExtensions.js",
        "File:src/renderers/webgl/WebGLCapabilities.js",
        "File:src/renderers/webgl/WebGLGeometries.js",
        "TODO",
        "",
        "File:src/renderers/webgl/WebGLLights.js",
        "File:src/renderers/webgl/WebGLObjects.js",
        "",
        "TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.",
        "morph targets",
        "Not using update ranges",
        "reset range",
        "console.time( 'wireframe' );",
        "console.timeEnd( 'wireframe' );",
        "File:src/renderers/webgl/WebGLProgram.js",
        "TODO: Combine the regex",
        "console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);",
        "console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );",
        "console.log( 'building new program ' );",
        "",
        "",
        "console.log( '*VERTEX*', vertexGlsl );",
        "console.log( '*FRAGMENT*', fragmentGlsl );",
        "Force a particular attribute to index 0.",
        "programs with morphTargets displace position out of attribute 0",
        "console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );",
        "console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );",
        "clean up",
        "set up caching for uniform locations",
        "set up caching for attribute locations",
        "free resource",
        "DEPRECATED",
        "",
        "File:src/renderers/webgl/WebGLPrograms.js",
        "default for when object is not specified",
        "( for example when prebuilding shader to be used with multiple objects )",
        "",
        "- leave some extra space for other uniforms",
        "- limit here is ANGLE's 254 max uniform vectors",
        "(up to 54 should be safe)",
        "heuristics to create shader parameters according to lights in the scene",
        "(not to blow over maxLights budget)",
        "Check if code has been already compiled",
        "Remove from unordered set",
        "Free WebGL resources",
        "Exposed for resource monitoring & error feedback via renderer.info:",
        "File:src/renderers/webgl/WebGLProperties.js",
        "File:src/renderers/webgl/WebGLShader.js",
        "--enable-privileged-webgl-extension",
        "console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );",
        "File:src/renderers/webgl/WebGLShadowMap.js",
        "init",
        "",
        "Set GL state for depth map.",
        "render depth map",
        "These viewports map a cube-map onto a 2D texture with the",
        "following orientation:",
        "",
        "xzXZ",
        "y Y",
        "",
        "X - Positive x direction",
        "x - Negative x direction",
        "Y - Positive y direction",
        "y - Negative y direction",
        "Z - Positive z direction",
        "z - Negative z direction",
        "positive X",
        "negative X",
        "positive Z",
        "negative Z",
        "positive Y",
        "negative Y",
        "",
        "render shadow map for each cube face (if omni-directional) or",
        "run a single pass if not",
        "compute shadow matrix",
        "update camera matrices and frustum",
        "set object matrices & frustum culling",
        "render shadow map",
        "render regular objects",
        "We must call _renderer.resetGLState() at the end of each iteration of",
        "the light loop in order to force material updates for each light.",
        "Restore GL state.",
        "File:src/renderers/webgl/WebGLState.js",
        "TODO: Find blendFuncSeparate() combination",
        "TODO: Find blendFuncSeparate() combination",
        "TODO: Rename to setDepthMask",
        "TODO: Rename to setColorMask",
        "TODO: Rename to setStencilMask",
        "texture",
        "clear values",
        "",
        "",
        "File:src/renderers/webgl/plugins/LensFlarePlugin.js",
        "buffers",
        "textures",
        "pink square",
        "restore",
        "flare",
        "pink square",
        "restore",
        "flare",
        "loop through all lens flares to update their occlusion and positions",
        "setup gl and common used attribs/uniforms",
        "calc object screen position",
        "setup arrays for gl programs",
        "screen cull",
        "save current RGB to temp texture",
        "render pink quad",
        "copy result to occlusionMap",
        "restore graphics",
        "update object positions",
        "render flares",
        "restore gl",
        "File:src/renderers/webgl/plugins/SpritePlugin.js",
        "decompose matrixWorld",
        "setup gl",
        "update positions and sort",
        "render all sprites",
        "restore gl",
        "File:src/Three.Legacy.js",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "File:src/extras/CurveUtils.js",
        "Puay Bing, thanks for helping with this derivative!",
        "To check if my formulas are correct",
        "derived from 2t^3 − 3t^2 + 1",
        "t^3 − 2t^2 + t",
        "− 2t3 + 3t2",
        "t3 − t2",
        "Catmull-Rom",
        "File:src/extras/SceneUtils.js",
        "File:src/extras/ShapeUtils.js",
        "calculate area of the contour polygon",
        "see if p is inside triangle abc",
        "takes in an contour array and returns",
        "we want a counter-clockwise polygon in verts",
        "remove nv - 2 vertices, creating 1 triangle every time",
        "error detection",
        "if we loop, it is probably a non-simple polygon",
        "throw ( \"Warning, unable to triangulate polygon!\" );",
        "return null;",
        "Sometimes warning is fine, especially polygons are triangulated in reverse.",
        "three consecutive vertices in current polygon, <u,v,w>",
        "previous",
        "new v",
        "next",
        "true names of the vertices",
        "output Triangle",
        "remove v from the remaining polygon",
        "reset error detection counter",
        "inOtherPt needs to be collinear to the inSegment",
        "not parallel",
        "i.e. to reduce rounding errors",
        "intersection at endpoint of segment#1?",
        "intersection at endpoint of segment#2?",
        "return real intersection point",
        "parallel or collinear",
        "they are collinear or degenerate",
        "segment1 is just a point?",
        "segment2 is just a point?",
        "both segments are points",
        "they are distinct  points",
        "they are the same point",
        "segment#1  is a single point",
        "but not in segment#2",
        "segment#2  is a single point",
        "but not in segment#1",
        "they are collinear segments, which might overlap",
        "the segments are NOT on a vertical line",
        "the segments are on a vertical line",
        "The order of legs is important",
        "translation of all points, so that Vertex is at (0,0)",
        "main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.",
        "angle != 180 deg.",
        "console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );",
        "main angle < 180 deg.",
        "main angle > 180 deg.",
        "angle == 180 deg.",
        "console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );",
        "work on this shape",
        "Check if hole point lies within angle around shape point",
        "console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );",
        "Check if shape point lies within angle around hole point",
        "console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );",
        "checks for intersections with shape edges",
        "checks for intersections with hole edges",
        "search for shape-vertex and hole-vertex,",
        "which can be connected without intersections",
        "search for hole which can be reached without intersections",
        "prevent multiple checks",
        "Debug only, to show the selected cuts",
        "glob_CutLines.push( [ shapePt, holePt ] );",
        "hole-vertex found",
        "remember failure",
        "hole-vertex found",
        "shape with no holes",
        "To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.",
        "console.log( \"allpoints\",allpoints, allpoints.length );",
        "prepare all points map",
        "remove holes by cutting paths to holes and adding them to the shape",
        "True returns indices for points of spooled shape",
        "console.log( \"triangles\",triangles, triangles.length );",
        "check all face vertices against all points map",
        "Bezier Curves formulas obtained from",
        "http://en.wikipedia.org/wiki/B%C3%A9zier_curve",
        "Quad Bezier Functions",
        "Cubic Bezier Functions",
        "File:src/extras/core/Curve.js",
        "Virtual base class method to overwrite and implement in subclasses",
        "- t [0 .. 1]",
        "Get point at relative position in curve according to arc length",
        "- u [0 .. 1]",
        "Get sequence of points using getPoint( t )",
        "Get sequence of points using getPointAt( u )",
        "Get total curve arc length",
        "Get list of cumulative segment lengths",
        "console.log( \"cached\", this.cacheArcLengths );",
        "{ sums: cache, sum:sum }; Sum is in the last element.",
        "Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant",
        "The targeted u distance value to get",
        "var time = Date.now();",
        "binary search for the index with largest value smaller than target u distance",
        "less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats",
        "DONE",
        "console.log('b' , i, low, high, Date.now()- time);",
        "we could get finer grain at lengths, or use simple interpolation between two points",
        "determine where we are between the 'before' and 'after' points",
        "add that fractional amount to t",
        "Returns a unit vector tangent at t",
        "In case any sub curve does not implement its tangent derivation,",
        "2 points a small delta apart will be used to find its gradient",
        "which seems to give a reasonable approximation",
        "Capping in case of danger",
        "TODO: Transformation for Curves?",
        "A Factory method for creating new curve subclasses",
        "File:src/extras/core/CurvePath.js",
        "Automatically closes the path",
        "THREE.CurvePath.prototype.checkConnection = function() {\n\t\t// TODO\n\t\t// If the ending of curve is not connected to the starting\n\t\t// or the next curve, then, this is not a real path\n\t};",
        "TODO Test",
        "and verify for vector3 (needs to implement equals)",
        "Add a line curve if start and end of lines are not connected",
        "To get accurate point with reference to",
        "entire path distance at time t,",
        "following has to be done:",
        "1. Length of each sub path have to be known",
        "2. Locate and identify type of curve",
        "3. Get t for the curve",
        "4. Return curve.getPointAt(t')",
        "To think about boundaries points.",
        "loop where sum != 0, sum > d , sum+1 <d",
        "THREE.CurvePath.prototype.getTangent = function( t ) {\n\t};",
        "We cannot use the default THREE.Curve getPoint() with getLength() because in",
        "THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath",
        "getPoint() depends on getLength",
        "Compute lengths and cache them",
        "We cannot overwrite getLengths() because UtoT mapping uses it.",
        "We use cache values if curves and cache array are same length",
        "Get length of sub-curve",
        "Push sums into cached array",
        "Generate geometry from path points (for Line or Points objects)",
        "Generate geometry from equidistant sampling along the path",
        "File:src/extras/core/Font.js",
        "moveTo",
        "lineTo",
        "quadraticCurveTo",
        "bezierCurveTo",
        "",
        "File:src/extras/core/Path.js",
        "TODO Clean up PATH API",
        "Create path using straight lines to connect all points",
        "- vectors: array of Vector2",
        "startPath() endPath()?",
        "Array of Vector",
        "FUTURE: Change the API or follow canvas API?",
        "aRotation is optional.",
        "if ( !this.getPoint( i / divisions ) ) throw \"DIE\";",
        "Return an array of vectors based on contour of the path",
        "console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);",
        "console.log(points);",
        "Rotate the point about the center of the ellipse.",
        "console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);",
        "console.log(points);",
        "end switch",
        "Normalize to remove the closing point by default.",
        "",
        "Breaks path into shapes",
        "",
        "Assumptions (if parameter isCCW==true the opposite holds):",
        "- solid shapes are defined clockwise (CW)",
        "- holes are defined counterclockwise (CCW)",
        "",
        "If parameter noHoles==true:",
        "- all subPaths are regarded as solid shapes",
        "- definition order CW/CCW has no relevance",
        "",
        "console.log(subPaths);",
        "console.log(\"shape\", shapes);",
        "inPt on polygon contour => immediate success    or",
        "toggling of inside/outside at every single! intersection point of an edge",
        "with the horizontal line through inPt, left of inPt",
        "not counting lowerY endpoints of edges and whole edges on that line",
        "not parallel",
        "inPt is on contour ?",
        "continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!",
        "inPt is on contour ?",
        "true intersection left of inPt",
        "parallel or collinear",
        "parallel",
        "edge lies on the same horizontal line as inPt",
        "inPt: Point on contour !",
        "continue;",
        "console.log(\"Holes first\", holesFirst);",
        "console.log('cw', i);",
        "console.log('ccw', i);",
        "only Holes? -> probably all Shapes with wrong orientation",
        "console.log(\"ambiguous: \", ambiguous);",
        "console.log(\"to change: \", toChange);",
        "console.log(\"shape\", shapes);",
        "File:src/extras/core/Shape.js",
        "STEP 1 Create a path.",
        "STEP 2 Turn path into shape.",
        "STEP 3 ExtrudeGeometry takes in Shape/Shapes",
        "STEP 3a - Extract points from each shape, turn to vertices",
        "STEP 3b - Triangulate each shape, add faces.",
        "Convenience method to return ExtrudeGeometry",
        "Convenience method to return ShapeGeometry",
        "Get points of holes",
        "Get points of shape and holes (keypoints based on segments parameter)",
        "File:src/extras/curves/LineCurve.js",
        "Line curve is linear, so we can overwrite default getPointAt",
        "File:src/extras/curves/QuadraticBezierCurve.js",
        "File:src/extras/curves/CubicBezierCurve.js",
        "File:src/extras/curves/SplineCurve.js",
        "array of Vector2",
        "File:src/extras/curves/EllipseCurve.js",
        "Rotate the point about the center of the ellipse.",
        "File:src/extras/curves/ArcCurve.js",
        "File:src/extras/curves/LineCurve3.js",
        "diff",
        "File:src/extras/curves/QuadraticBezierCurve3.js",
        "File:src/extras/curves/CubicBezierCurve3.js",
        "File:src/extras/curves/SplineCurve3.js",
        "array of Vector3",
        "File:src/extras/curves/CatmullRomCurve3.js",
        "Based on an optimized c++ solution in\n\t\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t\t - http://ideone.com/NoEbVM\n\n\t\tThis CubicPoly class could be used for reusing some variables and calculations,\n\t\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\t\twhich can be placed in CurveUtils.",
        "compute tangents when parameterized in [t1,t2]",
        "rescale tangents for parametrization in [0,1]",
        "initCubicPoly",
        "standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4",
        "Subclass Three.js curve",
        "array of Vector3",
        "4 points",
        "extrapolate first point",
        "extrapolate last point",
        "init Centripetal / Chordal Catmull-Rom",
        "safety check for repeated points",
        "File:src/extras/curves/ClosedSplineCurve3.js",
        "File:src/extras/geometries/BoxGeometry.js",
        "px",
        "nx",
        "py",
        "ny",
        "pz",
        "nz",
        "File:src/extras/geometries/CircleGeometry.js",
        "File:src/extras/geometries/CircleBufferGeometry.js",
        "center data is already zero, but need to set a few extras",
        "normal z",
        "File:src/extras/geometries/CylinderGeometry.js",
        "top cap",
        "bottom cap",
        "File:src/extras/geometries/EdgesGeometry.js",
        "File:src/extras/geometries/ExtrudeGeometry.js",
        "can't really use automatic vertex normals",
        "as then front and back sides get smoothed too",
        "should do separate smoothing just for sides",
        "this.computeVertexNormals();",
        "console.log( \"took\", ( Date.now() - startTime ) );",
        "10",
        "8",
        "false",
        "Use default WorldUVGenerator if no UV generators are specified.",
        "bevels not supported for path extrusion",
        "SETUP TNB variables",
        "Reuse TNB from TubeGeomtry for now.",
        "TODO1 - have a .isClosed in spline?",
        "console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);",
        "Safeguards if bevels are not enabled",
        "Variables initialization",
        "looping of holes",
        "Maybe we should also check if holes are in the opposite direction, just to be safe ...",
        "If vertices are in order now, we shouldn't need to worry about them again (hopefully)!",
        "Vertices",
        "vertices has all points but contour has only points of circumference",
        "Find directions for point movement",
        "computes for inPt the corresponding point inPt' on a new contour",
        "shifted by 1 unit (length of normalized vector) to the left",
        "if we walk along contour clockwise, this new contour is outside the old one",
        "",
        "inPt' is the intersection of the two lines parallel to the two",
        "adjacent edges of inPt at a distance of 1 unit on the left side.",
        "resulting translation vector for inPt",
        "good reading for geometry algorithms (here: line-line intersection)",
        "http://geomalgorithms.com/a05-_intersect-1.html",
        "check for collinear edges",
        "not collinear",
        "length of vectors for normalizing",
        "shift adjacent points by unit vectors to the left",
        "scaling factor for v_prev to intersection point",
        "vector from inPt to intersection point",
        "Don't normalize!, otherwise sharp corners become ugly",
        "but prevent crazy spikes",
        "handle special case of collinear edges",
        "assumes: opposite",
        "console.log(\"Warning: lines are a straight sequence\");",
        "console.log(\"Warning: lines are a straight spike\");",
        "(j)---(i)---(k)",
        "console.log('i,j,k', i, j , k)",
        "(j)---(i)---(k)",
        "Loop bevelSegments, 1 for the front, 1 for the back",
        "for ( b = bevelSegments; b > 0; b -- ) {",
        "z = bevelThickness * t;",
        "curved",
        "bs = bevelSize * t; // linear",
        "contract shape",
        "expand holes",
        "Back facing vertices",
        "v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );",
        "Add stepped vertices...",
        "Including front facing vertices",
        "v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );",
        "Add bevel segments planes",
        "for ( b = 1; b <= bevelSegments; b ++ ) {",
        "bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );",
        "contract shape",
        "expand holes",
        "Faces",
        "Top and bottom faces",
        "Sides faces",
        "Internal functions",
        "steps + 1",
        "Bottom faces",
        "Top faces",
        "Bottom faces",
        "Top faces",
        "Create faces for the z-sides of the shape",
        ", true",
        "console.log('b', i,j, i-1, k,vertices.length);",
        "File:src/extras/geometries/ShapeGeometry.js",
        "",
        "Maybe we should also check if holes are in the opposite direction, just to be safe...",
        "Vertices",
        "",
        "File:src/extras/geometries/LatheGeometry.js",
        "points - to create a closed torus, one must use a set of points",
        "like so: [ a, b, c, d, a ], see first is the same as last.",
        "segments - the number of circumference segments to create",
        "phiStart - the starting radian",
        "phiLength - the radian (0 to 2*PI) range of the lathed section",
        "2*pi is a closed lathe, less than 2PI is a portion.",
        "File:src/extras/geometries/PlaneGeometry.js",
        "File:src/extras/geometries/PlaneBufferGeometry.js",
        "File:src/extras/geometries/RingGeometry.js",
        "concentric circles inside ring",
        "number of segments per circle",
        "concentric circles inside ring",
        "number of segments per circle",
        "File:src/extras/geometries/SphereGeometry.js",
        "File:src/extras/geometries/SphereBufferGeometry.js",
        "File:src/extras/geometries/TextGeometry.js",
        "translate parameters to ExtrudeGeometry API",
        "defaults",
        "File:src/extras/geometries/TorusGeometry.js",
        "File:src/extras/geometries/TorusKnotGeometry.js",
        "TODO: Hack: Negating it so it faces outside.",
        "File:src/extras/geometries/TubeGeometry.js",
        "proxy internals",
        "construct the grid",
        "TODO: Hack: Negating it so it faces outside.",
        "construct the mesh",
        "For computing of Frenet frames, exposing the tangents, normals and binormals the spline",
        "expose internals",
        "compute the tangent vectors for each segment on the path",
        "function initialNormal1(lastBinormal) {\n\t\t\t// fixed start binormal. Has dangers of 0 vectors\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\n\t\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\n\t\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\n\t\t}\n\n\t\tfunction initialNormal2() {\n\n\t\t\t// This uses the Frenet-Serret formula for deriving binormal\n\t\t\tvar t2 = path.getTangentAt( epsilon );\n\n\t\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\n\t\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\t\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\n\n\t\t}",
        "select an initial normal vector perpendicular to the first tangent vector,",
        "and in the direction of the smallest tangent xyz component",
        "compute the slowly-varying normal and binormal vectors for each segment on the path",
        "clamp for floating pt errors",
        "if the curve is closed, postprocess the vectors so the first and last normal vectors are the same",
        "twist a little...",
        "File:src/extras/geometries/PolyhedronGeometry.js",
        "Handle case when face straddles the seam",
        "0.9 is somewhat arbitrary",
        "Apply radius",
        "Merge vertices",
        "Project vector onto sphere's surface",
        "Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.",
        "Approximate a curved face with recursively sub-divided triangles.",
        "Analytically subdivide a face to the required detail level.",
        "Construct all of the vertices for this subdivision.",
        "Construct all of the faces.",
        "Angle around the Y axis, counter-clockwise when looking from above.",
        "Angle above the XZ plane.",
        "Texture fixing helper. Spheres have some odd behaviours.",
        "File:src/extras/geometries/DodecahedronGeometry.js",
        "(±1, ±1, ±1)",
        "(0, ±1/φ, ±φ)",
        "(±1/φ, ±φ, 0)",
        "(±φ, 0, ±1/φ)",
        "File:src/extras/geometries/IcosahedronGeometry.js",
        "File:src/extras/geometries/OctahedronGeometry.js",
        "File:src/extras/geometries/TetrahedronGeometry.js",
        "File:src/extras/geometries/ParametricGeometry.js",
        "console.log(this);",
        "magic bullet",
        "var diff = this.mergeVertices();",
        "console.log('removed ', diff, ' vertices by merging');",
        "File:src/extras/geometries/WireframeGeometry.js",
        "allocate maximal size",
        "Indexed BufferGeometry",
        "allocate maximal size",
        "non-indexed BufferGeometry",
        "File:src/extras/helpers/AxisHelper.js",
        "File:src/extras/helpers/ArrowHelper.js",
        "dir is assumed to be normalized",
        "dir is assumed to be normalized",
        "File:src/extras/helpers/BoxHelper.js",
        "5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\n\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z",
        "File:src/extras/helpers/BoundingBoxHelper.js",
        "a helper to show the world-axis-aligned bounding box for an object",
        "File:src/extras/helpers/CameraHelper.js",
        "colors",
        "near",
        "far",
        "sides",
        "cone",
        "up",
        "target",
        "cross",
        "we need just camera projection matrix",
        "world matrix must be identity",
        "center / target",
        "near",
        "far",
        "up",
        "cross",
        "File:src/extras/helpers/DirectionalLightHelper.js",
        "File:src/extras/helpers/EdgesHelper.js",
        "File:src/extras/helpers/FaceNormalsHelper.js",
        "FaceNormalsHelper only supports THREE.Geometry",
        "",
        "",
        "",
        "",
        "File:src/extras/helpers/GridHelper.js",
        "File:src/extras/helpers/HemisphereLightHelper.js",
        "File:src/extras/helpers/PointLightHelper.js",
        "var distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\t\tvar d = light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\n\t\tthis.add( this.lightDistance );",
        "var d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}",
        "File:src/extras/helpers/SkeletonHelper.js",
        "File:src/extras/helpers/SpotLightHelper.js",
        "File:src/extras/helpers/VertexNormalsHelper.js",
        "",
        "",
        "",
        "",
        "for simplicity, ignore index and drawcalls, and render every normal",
        "File:src/extras/helpers/WireframeHelper.js",
        "File:src/extras/objects/ImmediateRenderObject.js",
        "File:src/extras/objects/MorphBlendMesh.js",
        "prepare default animation",
        "(all frames played together in 1 second)",
        "Export the THREE object for **Node.js**, with",
        "backwards-compatibility for the old `require()` API. If we're in",
        "the browser, add `_` as a global object via a string identifier,",
        "for Closure Compiler \"advanced\" mode.",
        "performance.now polyfill",
        "IE 8",
        "Set all starting values present on the target object",
        "check if an Array was provided as property value",
        "create a local copy of the Array with the start value at the front",
        "Ensures we're using numbers, not strings",
        "Parses relative end values with start as base (e.g.: +10, -3)",
        "protect against non numeric properties.",
        "reassign starting values, restart by making startTime = now",
        "UMD (Universal Module Definition)",
        "AMD",
        "Node.js",
        "Global variable",
        "Constants from vrtoolkit: https://github.com/googlesamples/cardboard-java.",
        "From com/google/vrtoolkit/cardboard/FieldOfView.java.",
        "Set display constants.",
        "Raw sensor measurements.",
        "Current filter orientation",
        "Orientation based on the accelerometer.",
        "Whether or not the orientation has been initialized.",
        "Running estimate of gravity based on the current orientation.",
        "Measured gravity based on accelerometer.",
        "Debug only quaternion of gyro-based orientation.",
        "Convert gyro rotation vector to a quaternion delta.",
        "filter_1 = K * (filter_0 + gyro * dT) + (1 - K) * accel.",
        "Calculate the delta between the current estimated gravity and the real",
        "gravity vector from accelerometer.",
        "Compare estimated gravity with measured gravity, get the delta quaternion",
        "between the two.",
        "Calculate the SLERP target: current orientation plus the measured-estimated",
        "quaternion delta.",
        "SLERP factor: 0 is pure gyro, 1 is pure accel.",
        "Extract axis and angle from the gyroscope data.",
        "Set the filter to world transform, depending on OS.",
        "Keep track of a reset transform for resetSensor.",
        "Convert from filter space to the the same system used by the",
        "deviceorientation event.",
        "Predict orientation.",
        "Convert to THREE coordinate system: -Z forward, Y up, X right.",
        "Handle the yaw-only case.",
        "Make a quaternion that only turns around the Y-axis.",
        "Firefox Android timeStamp returns one thousandth of a millisecond.",
        "With iOS and Firefox Android, rotationRate is reported in degrees,",
        "so we first convert to radians.",
        "TODO.",
        "Initialize a WebVRConfig just in case.",
        "How much to rotate per key stroke.",
        "How much to rotate for mouse events.",
        "Attach to mouse and keyboard events.",
        "Variables for keyboard-based rotation animation.",
        "State variables for calculations.",
        "Variables for mouse-based rotation.",
        "Track WASD and arrow keys.",
        "Up key.",
        "Right key.",
        "Down key.",
        "Left key.",
        "Prevent looking too far up or down.",
        "If an animation is currently running, cancel it.",
        "Set up an interval timer to perform the animation.",
        "Once we're finished the animation, we're done.",
        "Linearly interpolate the angle some amount.",
        "Very similar to https://gist.github.com/mrflix/8351020",
        "Support pointer lock API.",
        "Calculate how much we moved in mouse space.",
        "Keep track of the cumulative euler angles.",
        "Prevent looking too far up or down.",
        "The quaternion corresponding to the previous state.",
        "Previous time a prediction occurred.",
        "The delta quaternion that adjusts the current pose.",
        "The output quaternion.",
        "Calculate axis and angle based on gyroscope rotation rate data.",
        "If we're rotating slowly, don't do prediction.",
        "Get the predicted angle based on the time delta and latency.",
        "Only use if the real THREE is not provided.",
        "If some piece of THREE is missing, fill it in here.",
        "http://www.mathworks.com/matlabcentral/fileexchange/",
        "20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/",
        "content/SpinCalc.m",
        "http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm",
        "assumes axis is normalized",
        "http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm",
        "assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)",
        "http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final",
        "assumes direction vectors vFrom and vTo are normalized",
        "from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm",
        "http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/",
        "This function assumes min < max, if this assumption isn't true it will not operate correctly",
        "input: THREE.Matrix4 affine matrix",
        "input: THREE.Matrix4 projection matrix",
        "perspective divide",
        "calculate quat * vector",
        "calculate result * inverse quat",
        "input: THREE.Matrix4 affine matrix",
        "vector interpreted as a direction",
        "This function assumes min < max, if this assumption isn't true it will not operate correctly",
        "reflect incident vector off plane orthogonal to normal",
        "normal is assumed to have unit length",
        "clamp, to handle numerical problems",
        "assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)",
        "WARNING: this discards revolution information -bhouston",
        "http://www.broofa.com/Tools/Math.uuid.htm",
        "Clamp value to range <a, b>",
        "Clamp value to range <a, inf)",
        "Linear mapping from range <a1, a2> to range <b1, b2>",
        "http://en.wikipedia.org/wiki/Smoothstep",
        "Random float from <0, 1> with 16 bits of randomness",
        "(standard Math.random() creates repetitive patterns when applied over larger space)",
        "Random integer from <low, high> interval",
        "Random float from <low, high> interval",
        "Random float from <-range/2, range/2> interval",
        "Only respond if there is exactly one touch.",
        "On iOS, direction is inverted.",
        "Helper method to validate the time steps of sensor timestamps.",
        "var OrientationPositionSensorVRDevice = require('./orientation-position-sensor-vr-device.js');",
        "Uncomment to add positional tracking via webcam.",
        "var WebcamPositionSensorVRDevice = require('./webcam-position-sensor-vr-device.js');",
        "Initialize our virtual VR devices.",
        "Polyfill using the right position sensor.",
        "this.devices.push(new OrientationPositionSensorVRDevice());",
        "Uncomment to add positional tracking via webcam.",
        "this.devices.push(new WebcamPositionSensorVRDevice());",
        "Provide navigator.getVRDevices.",
        "Provide the CardboardHMDVRDevice and PositionSensorVRDevice objects.",
        "For now, support all iOS and Android devices.",
        "Also enable the WebVRConfig.FORCE_VR flag for debugging.",
        "Update properties.",
        "Active property did not change.",
        "If `active` property changes, or first update, handle active camera with system.",
        "Camera enabled. Set camera to this camera.",
        "Camera disabled. Set camera to another camera.",
        "The cursor defaults to fuse in mobile environments",
        "listen for canvas to load.",
        "thetaLength's default for spheres is different from those of the other geometries.",
        "For now, we detect if thetaLength is exactly 360 to switch to a different default.",
        "Deprecated.",
        "Existing light.",
        "Light type has not changed. Update light.",
        "No light yet or light type has changed. Create and add light.",
        "A static position to look at.",
        "A selector to a target entity.",
        "No longer looking at anything (i.e., look-at=\"\").",
        "Look at a position.",
        "Assume target is a string.",
        "Query for the element, grab its object3D, then register a behavior on the scene to",
        "track the target on every tick.",
        "Track target object position. Depends on parent object keeping global transforms up",
        "to state with updateMatrixWorld(). In practice, this is handled by the renderer.",
        "To avoid recalculation at every mouse movement tick",
        "The canvas where the scene is painted",
        "listen for canvas to load.",
        "Mouse Events",
        "Touch events",
        "Mouse Events",
        "Touch events",
        "Cancel out roll and pitch. We want to only reset yaw",
        "Limits touch orientaion to to yaw (y axis)",
        "global Promise",
        "Including case `front`.",
        "global HTMLElement",
        ".OBJ with an .MTL.",
        ".OBJ only.",
        "Apply material.",
        "If we have no intersections other than the cursor itself,",
        "but we still have a previously intersected element, clear it.",
        "If the intersected object is the cursor itself",
        "or the object is further than the max distance",
        "A new intersection where previously a different element was",
        "and now needs a mouseleave event.",
        "Avoids triggering a zero-determinant which makes object3D matrix non-invertible.",
        "No updating canvas.",
        "Inject canvas if one not specified with height and width.",
        "Prevent overscroll on mobile.",
        "Set canvas on scene.",
        "(Re)create fog if fog doesn't exist or fog type changed.",
        "Fog data changed. Update fog.",
        "f.",
        "z.",
        "Our stylesheet is injected from `src/index.js`.",
        "Hide/show VR UI when entering/exiting VR mode.",
        "Modal that tells the user to change orientation if in portrait.",
        "Add UI if enabled and not already present.",
        "Show if in VR mode on portrait.",
        "window.hasNonPolyfillWebVRSupport is set in src/index.js.",
        "Create elements.",
        "Insert elements.",
        "Handle enter VR flows.",
        "Exit VR on close.",
        "Create new sound if not yet created or changing `src`.",
        "All sound values set. Load in `src.",
        "Only want one AudioListener. Cache it on the scene.",
        "Wait for camera if necessary.",
        "To keep track of the pressed keys",
        "If data changed or FPS too low, reset velocity.",
        "Left",
        "Right",
        "Up",
        "Down",
        "no-op",
        "To handle elements that are not yet `<a-entity>`s (e.g., templates).",
        "Store initial state.",
        "Handle indefinite + forwards + alternate yoyo edge-case (#405).",
        "If reversing, swap from and to.",
        "If fill is backwards or both, start animation at the specified from.",
        "Create Tween.",
        "Cancel previous event listeners",
        "Store new event name.",
        "If `begin` is a number, start the animation right away.",
        "If \"begin\" is an event name, wait. If it is a delay or not defined, start.",
        "Get mixin data.",
        "dataFrom can be 0.",
        "dataFrom can be 0.",
        "Wait for <img>s.",
        "Wait for <audio>s.",
        "Wait for <video>s.",
        "Trigger loaded for scene to start rendering.",
        "If media specifies autoplay or preload, wait until media is completely buffered.",
        "Already loaded.",
        "Error.",
        "Add up the seconds buffered.",
        "Compare seconds buffered to media duration.",
        "global HTMLElement",
        "Else if there are not six elements, throw a warning.",
        "global HTMLElement",
        "Remove components.",
        "The list of mixins that might have been removed on update",
        "Remove the mixins that are gone on update",
        "State Mixins",
        "To prevent an object to attach itself multiple times to the parent.",
        "Attach to parent object3D.",
        "Check if component is registered and whether component should be iniitalized.",
        "Initialize dependencies.",
        "Add component if it is a dependency and not yet defined.",
        "For scene default components, expose them in the DOM.",
        "Check if component already initialized.",
        "Attribute was removed, remove component if:",
        "1. If component not defined in the defaults/mixins/attribute.",
        "2. If new data is null, then not a default component and component is not defined",
        "via mixins",
        "Component already initialized. Update component.",
        "Component not yet initialized. Initialize component.",
        "Already playing.",
        "Wake up all components.",
        "Tell all child entities to play.",
        "Sleep all components.",
        "Tell all child entities to pause.",
        "When creating entities programatically and setting attributes, it is not part",
        "of the scene until it is inserted into the DOM. This does not apply to scenes as",
        "scenes depend on its child entities to load.",
        "Deserialized value to send to the component.",
        "Serialized value to send to the DOM.",
        "Update currently-defined component data with the new property value.",
        "Use native setAttribute in order not to double-parse properties.",
        "Check if default components contain the component.",
        "Check if element contains the component.",
        "Remove tick behavior.",
        "Add tick behavior.",
        "global HTMLElement",
        "global HTMLElement, MutationObserver",
        "no-op",
        "Default to waiting for all nodes.",
        "Wait for children to load (if any), then load.",
        "To determine what listeners will be removed",
        "no-op",
        "Polyfill `document.registerElement`.",
        "------------------------------------------------------------\n\t ------------- WARNING WARNING WARNING WARNING --------------\n\t ------------------------------------------------------------\n\n\t This module wraps registerElement to deal with\n\t components that inherit from `ANode` and `AEntity`.\n\t It's a pass through in any other case.\n\n\t It wraps some of the prototype methods\n\t of the created element to make sure that the corresponding\n\t functions in the base classes (`AEntity` and `ANode`) are also\n\t invoked. The method in the base class is always called before the\n\t one in the derived object.",
        "Does the element inherit from `ANode`?",
        "Does the element inherit from `AEntity`?",
        "Copies the remaining properties into the new object",
        "The derived class doesn't override the one in the base one",
        "Wrapper",
        "The base method is called before the one in the derived class",
        "global HTMLElement",
        "Keep track of registered components.",
        "Check whether we need to rebuild the schema depending on the data.",
        "Call buildData with silent flag to suppress warnings when parsing data before updating",
        "the schema.",
        "no-op",
        "no-op",
        "no-op",
        "no-op",
        "no-op",
        "Don't update if properties haven't changed",
        "Clone base schema.",
        "Extend base schema with new schema chunk.",
        "Format definition object to prototype object.",
        "1. Default values (lowest precendence).",
        "2. Mixin values.",
        "3. Attribute values (highest precendence).",
        "Parse and coerce using the schema.",
        "Built-in property types.",
        "global Promise",
        "Require after.",
        "Possible camera or canvas not injected yet.",
        "Update canvas.",
        "Update camera.",
        "Notify renderer of size change.",
        "Set at startup. To enable/disable antialias",
        "at runttime we would have to recreate the whole context",
        "Kick off render loop.",
        "setTimeout to wait for all nodes to attach and run their callbacks.",
        "Handles fullscreen behavior when inside an iframe.",
        "Lock to landscape orientation on mobile.",
        "W3C-standardised meta tags.",
        "iOS-specific meta tags for fullscreen when pinning to homescreen.",
        "For single property schema, run processPropDefinition over the whole schema.",
        "For multi-property schema, run processPropDefinition over each property definition.",
        "Type inference.",
        "Type inference.",
        "Fall back to string.",
        "Fill in parse and stringify using property types.",
        "Fill in type name.",
        "Fill in default value.",
        "Validation errors.",
        "if there's no schema for the property we use standar JSON stringify",
        "Keep track of registered shaders.",
        "Keep track of the names of registered shaders.",
        "attributes: this.attributes,",
        "Format definition object to prototype object.",
        "Keep track of registered components.",
        "no-op",
        "no-op",
        "no-op",
        "Format definition object to prototype object.",
        "Initialize systems for existing scenes",
        "Deprecate `type` for `name`.",
        "target is a keyword for <a-event>.",
        "Handle component property selector like `material.color`.",
        "Set plain attribute.",
        "Selector.",
        "Inline url().",
        "Apply default components.",
        "Apply initial attributes.",
        "Differentiate between single-property and multi-property component.",
        "Run transform.",
        "Initialize internal component data if necessary.",
        "Update internal component data.",
        "Put component data.",
        "Polyfill `Promise`.",
        "Polyfill `performance.now()`.",
        "CSS.",
        "Required before `AEntity` so that all components are registered.",
        "Exports THREE to window so three.js can be used without alteration.",
        "Register core systems.",
        "Register core components.",
        "Register core shaders.",
        "Depends on ANode and core components.",
        "Webvr polyfill configuration.",
        "Extras.",
        "Allow cross-origin images to be loaded.",
        "This should not be on `THREE.Loader` nor `THREE.ImageUtils`.",
        "Must be on `THREE.TextureLoader`.",
        "This is for images loaded from the model loaders.",
        "In-memory caching for XHRs (for images, audio files, textures, etc.).",
        "TODO: Eventually include these only if they are needed by a component.",
        "THREE.OBJLoader",
        "THREE.MTLLoader",
        "THREE.ColladaLoader",
        "THREE.VRControls",
        "THREE.VREffect",
        "Texture added or changed.",
        "Texture removed.",
        "Texture added or changed.",
        "Texture removed.",
        "No envMap defined or already loading.",
        "Another material is already loading this texture. Wait on promise.",
        "Material is first to load this texture. Load and resolve texture.",
        "Texture loaded.",
        "setTimeout in case the camera is being set dynamically with a setAttribute.",
        "DOM calls to create camera.",
        "Grab the default camera.",
        "Remove default camera if new camera is not the default camera.",
        "Make new camera active.",
        "Disable other cameras.",
        "Remove default camera if present.",
        "User added a light, remove default lights through DOM.",
        "Coordinate string regex. Handles negative, positive, and decimals.",
        "Return the last one",
        "global CustomEvent, location",
        "Centralized place to reference utilities since utils is exposed to the user.",
        "If there are no keys, compare the objects.",
        "First collapse the whitespace (or whatever the delimiter is).",
        "Then split.",
        "Must be at bottom to avoid circular dependency.",
        "global Image",
        "src is a url.",
        "src is a query selector.",
        "src is a valid selector but doesn't match with a <img> or <video> element.",
        "`src` is a comma-separated list of URLs.",
        "In this case, re-use validateSrc for each side of the cube.",
        "`src` is a query selector to <a-cubemap> containing six $([src])s.",
        "Else if aCubeMap is not a <a-cubemap>.",
        "Capture exception if it's not a valid selector.",
        "Utils for parsing style-like strings (e.g., \"primitive: box; width: 5; height: 4.5\").",
        "Another material is already loading this texture. Wait on promise.",
        "Material instance is first to try to load this texture. Load it.",
        "Check cache before creating texture.",
        "If not in cache, fix up the attributes then start to create the texture.",
        "Use video element to create texture.",
        "Generated video element already cached. Use that.",
        "Create new video texture.",
        "Cache as promise to be consistent with image texture caching.",
        "Works for non-looping videos only.",
        "Calculate hash using sorted video attributes.",
        "Only need to update three.js material if presence or not of texture has changed.",
        "Create texture from an element.",
        "Load texture from src string. THREE will create underlying element.",
        "Use THREE.TextureLoader (src, onLoad, onProgress, onError) to load texture.",
        "no-op",
        "Handle UV repeat.",
        "To support inline videos in iOS webviews.",
        "To support inline videos in iOS webviews.",
        "Math.pow(10, 2);",
        "+ ' ' + sizes[i];",
        "performance.now() polyfill from https://gist.github.com/paulirish/5438650",
        "prepare base perf object",
        "if( _height != _div.clientHeight ) {\n\t            _height = _div.clientHeight;\n\t            _base.style.height = _height + 2 * _elHeight + 'px';\n\t        console.log( _base.clientHeight );\n\t        }",
        "Determine delimiter based on if the URL already GET parameters in it.",
        "From http://goo.gl/4WX3tg",
        "Base64 version of videos_src/no-sleep-60s.webm.",
        "# sourceMappingURL=aframe.js.map",
        "WEBPACK VAR INJECTION",
        "",
        "2",
        "",
        "WEBPACK VAR INJECTION",
        "DOM APIs, for completeness",
        "Does not start the time, just sets up the members needed.",
        "That's not how node.js implements it but the exposed api is the same.",
        "fn.call() is faster so we optimize for the common use-case",
        "@see http://jsperf.com/call-apply-segu",
        "Prevent ids from leaking",
        "WEBPACK VAR INJECTION",
        "",
        "3",
        "",
        "shim for using process in browser",
        "cached from whatever global is present so that test runners that stub it",
        "don't break things.  But we need to wrap it in a try catch in case it is",
        "wrapped in strict mode code which doesn't define any globals.  It's inside a",
        "function because try/catches deoptimize in certain engines.",
        "v8 likes predictible objects",
        "empty string to avoid regexp issues",
        "",
        "4",
        "5",
        "",
        "module.parent = undefined by default",
        "",
        "6",
        "",
        "WEBPACK VAR INJECTION",
        "aframe-inventory3d.js",
        "repo    : https://github.com/richardanaya/aframe-inventory3d",
        "license : MIT",
        "parseUri 1.2.2",
        "(c) Steven Levithan <stevenlevithan.com>",
        "MIT License",
        "WEBPACK VAR INJECTION",
        ""
    ],
    "docstrings": [
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "*********************************************************************",
        "***",
        "* This is the web browser implementation of `debug()`.\n\t *\n\t * Expose `debug()` as the module.",
        "* Colors.",
        "* Currently only WebKit-based Web Inspectors, Firefox >= v31,\n\t * and the Firebug extension (any Firefox version) are known\n\t * to support \"%c\" CSS customizations.\n\t *\n\t * TODO: add a `localStorage` variable to explicitly enable/disable colors",
        "* Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.",
        "* Colorize log arguments if enabled.\n\t *\n\t * @api public",
        "* Invokes `console.log()` when available.\n\t * No-op when `console.log` is not a \"function\".\n\t *\n\t * @api public",
        "* Save `namespaces`.\n\t *\n\t * @param {String} namespaces\n\t * @api private",
        "* Load `namespaces`.\n\t *\n\t * @return {String} returns the previously persisted debug modes\n\t * @api private",
        "* Enable namespaces listed in `localStorage.debug` initially.",
        "* Localstorage attempts to return the localstorage.\n\t *\n\t * This is necessary because safari throws\n\t * when a user disables cookies/localstorage\n\t * and you attempt to access it.\n\t *\n\t * @return {LocalStorage}\n\t * @api private",
        "* This is the common logic for both the Node.js and web browser\n\t * implementations of `debug()`.\n\t *\n\t * Expose `debug()` as the module.",
        "* The currently active debug mode names, and names to skip.",
        "* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t *\n\t * Valid key names are a single, lowercased letter, i.e. \"n\".",
        "* Previously assigned color.",
        "* Previous log timestamp.",
        "* Select a color.\n\t *\n\t * @return {Number}\n\t * @api private",
        "* Create a debugger with the given `namespace`.\n\t *\n\t * @param {String} namespace\n\t * @return {Function}\n\t * @api public",
        "* Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {String} namespaces\n\t * @api public",
        "* Disable debug output.\n\t *\n\t * @api public",
        "* Returns true if the given mode name is enabled, false otherwise.\n\t *\n\t * @param {String} name\n\t * @return {Boolean}\n\t * @api public",
        "* Coerce `val`.\n\t *\n\t * @param {Mixed} val\n\t * @return {Mixed}\n\t * @api private",
        "* Helpers.",
        "* Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} options\n\t * @return {String|Number}\n\t * @api public",
        "* Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private",
        "* Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private",
        "* Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private",
        "* Pluralization helper.",
        "* Take a potentially misbehaving resolver function and make sure\n\t\t * onFulfilled and onRejected are only called once.\n\t\t *\n\t\t * Makes no guarantees about asynchrony.",
        "* Set the immediate function to execute callbacks\n\t\t * @param fn {function} Function to execute\n\t\t * @private",
        "* Expose `requestAnimationFrame()`.",
        "* Fallback implementation.",
        "* Cancel.",
        "* @author dmarcos / https://github.com/dmarcos\n\t * @author mrdoob / http://mrdoob.com",
        "* @author dmarcos / https://github.com/dmarcos\n\t * @author mrdoob / http://mrdoob.com\n\t *\n\t * WebVR Spec: http://mozvr.github.io/webvr-spec/webvr.html\n\t *\n\t * Firefox: http://mozvr.com/downloads/\n\t * Chromium: https://drive.google.com/folderview?id=0BzudLt22BqGRbW9WTHMtOWMzNjQ&usp=sharing#list\n\t *",
        "* @author Tim Knip / http://www.floorplanner.com/ / tim at floorplanner.com\n\t* @author Tony Parisi / http://www.tonyparisi.com/",
        "* Loads a Wavefront .mtl file specifying materials\n\t *\n\t * @author angelxuanchang",
        "* Parses loaded MTL file\n\t\t * @param text - Content of MTL file\n\t\t * @return {THREE.MTLLoader.MaterialCreator}",
        "* Create a new THREE-MTLLoader.MaterialCreator\n\t * @param baseUrl - Url relative to which textures are loaded\n\t * @param options - Set of options on how to construct the materials\n\t *                  side: Which side to apply the material\n\t *                        THREE.FrontSide (default), THREE.BackSide, THREE.DoubleSide\n\t *                  wrap: What type of wrapping to apply for textures\n\t *                        THREE.RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\n\t *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\n\t *                                Default: false, assumed to be already normalized\n\t *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\n\t *                                  Default: false\n\t * @constructor",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author egraether / http://egraether.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author *kile / http://kile.stravaganza.org/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley",
        "* @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io",
        "* @author bhouston / http://clara.io",
        "* @author bhouston / http://clara.io",
        "* @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley",
        "* @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author jordi_ros / http://plattsoft.com\n\t * @author D1plo1d / http://github.com/D1plo1d\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author timknip / http://www.floorplanner.com/\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley",
        "* @author bhouston / http://clara.io",
        "* @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / http://clara.io",
        "* @author bhouston / http://clara.io",
        "* @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/",
        "* Spline from Tween.js, slightly optimized (and trashed)\n\t * http://sole.github.com/tween.js/examples/05_spline.html\n\t *\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/",
        "* @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/",
        "* Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t * @author tschw",
        "* Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t *\n\t * @author tschw",
        "*\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t *\n\t * @author tschw",
        "* @author tschw",
        "* Spherical linear unit quaternion interpolant.\n\t *\n\t * @author tschw",
        "* @author alteredq / http://alteredqualia.com/",
        "* https://github.com/mrdoob/eventdispatcher.js/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author bhouston / http://clara.io/\n\t * @author stephomi / http://stephaneginier.com/",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author elephantatwork / www.elephantatwork.ch",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author benaadams / https://twitter.com/ben_a_adams",
        "* @author benaadams / https://twitter.com/ben_a_adams",
        "* @author benaadams / https://twitter.com/ben_a_adams",
        "* @author benaadams / https://twitter.com/ben_a_adams",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author bhouston / http://clara.io",
        "* Checks for duplicate vertices with hashmap.\n\t\t * Duplicated vertices are removed\n\t\t * and faces' vertices are updated.",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/",
        "* @author benaadams / https://twitter.com/ben_a_adams",
        "* @author mrdoob / http://mrdoob.com/",
        "*\n\t * Reusable set of Tracks that represent an animation.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/",
        "*\n\t * Player for AnimationClips.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw",
        "*\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t * \t-\tAdd objects you would otherwise pass as 'root' to the\n\t * \t\tconstructor or the .clipAction method of AnimationMixer.\n\t *\n\t * \t-\tInstead pass this object as 'root'.\n\t *\n\t * \t-\tYou can also add and remove objects later when the mixer\n\t * \t\tis running.\n\t *\n\t * Note:\n\t *\n\t *  \tObjects of this class appear as one object to the mixer,\n\t *  \tso cache control of the individual objects must be done\n\t *  \ton the group.\n\t *\n\t * Limitation:\n\t *\n\t * \t- \tThe animated properties must be compatible among the\n\t * \t\tall objects in the group.\n\t *\n\t *  -\tA single property can either be controlled through a\n\t *  \ttarget group or directly, but not both.\n\t *\n\t * @author tschw",
        "* @author tschw\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/",
        "*\n\t * A timed sequence of keyframes for a specific property.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw",
        "*\n\t * A reference to a real property in the scene graph.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw",
        "*\n\t * Buffered scene graph property that allows weighted accumulation.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw",
        "*\n\t * A Track of Boolean keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw",
        "*\n\t * A Track of numeric keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw",
        "*\n\t * A Track of quaternion keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw",
        "*\n\t * A Track that interpolates Strings\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw",
        "*\n\t * A Track of vectored keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author WestLangley / http://github.com/WestLangley",
        "* Camera for rendering cube maps\n\t *\t- renders scene into axis-aligned cube\n\t *\n\t * @author alteredq / http://alteredqualia.com/",
        "* @author alteredq / http://alteredqualia.com/",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author greggman / http://games.greggman.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog",
        "* Uses Focal Length (in mm) to estimate and set FOV\n\t * 35mm (full-frame) camera is used if frame size is not specified;\n\t * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html",
        "* Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/",
        "* @author alteredq / http://alteredqualia.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author alteredq / http://alteredqualia.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author alteredq / http://alteredqualia.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author Nikos M. / https://github.com/foo123/\n\t *\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)",
        "* @author mrdoob / http://mrdoob.com/\n\t *\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  blending: THREE.NormalBlending,\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  linewidth: <float>,\n\t *  linecap: \"round\",\n\t *  linejoin: \"round\",\n\t *\n\t *  vertexColors: <bool>\n\t *\n\t *  fog: <bool>\n\t * }",
        "* @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  blending: THREE.NormalBlending,\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  linewidth: <float>,\n\t *\n\t *  scale: <float>,\n\t *  dashSize: <float>,\n\t *  gapSize: <float>,\n\t *\n\t *  vertexColors: THREE.NoColors / THREE.FaceColors / THREE.VertexColors\n\t *\n\t *  fog: <bool>\n\t * }",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  shading: THREE.SmoothShading,\n\t *  blending: THREE.NormalBlending,\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *\n\t *  fog: <bool>\n\t * }",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  blending: THREE.NormalBlending,\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>,\n\t *\n\t *\tfog: <bool>\n\t * }",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  specular: <hex>,\n\t *  shininess: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  shading: THREE.SmoothShading,\n\t *  blending: THREE.NormalBlending,\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>,\n\t *\n\t *\tfog: <bool>\n\t * }",
        "* @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  roughness: <float>,\n\t *  metalness: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  roughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  metalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  envMapIntensity: <float>\n\t *\n\t *  refractionRatio: <float>,\n\t *\n\t *  shading: THREE.SmoothShading,\n\t *  blending: THREE.NormalBlending,\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>,\n\t *\n\t *\tfog: <bool>\n\t * }",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  opacity: <float>,\n\t *\n\t *  blending: THREE.NormalBlending,\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }",
        "* @author mrdoob / http://mrdoob.com/\n\t *\n\t * parameters = {\n\t *  opacity: <float>,\n\t *\n\t *  shading: THREE.FlatShading,\n\t *  blending: THREE.NormalBlending,\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  size: <float>,\n\t *  sizeAttenuation: <bool>,\n\t *\n\t *  blending: THREE.NormalBlending,\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  vertexColors: <bool>,\n\t *\n\t *  fog: <bool>\n\t * }",
        "* @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  defines: { \"label\" : \"value\" },\n\t *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\n\t *\n\t *  fragmentShader: <string>,\n\t *  vertexShader: <string>,\n\t *\n\t *  shading: THREE.SmoothShading,\n\t *  blending: THREE.NormalBlending,\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  lights: <bool>,\n\t *\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>,\n\t *\n\t *\tfog: <bool>\n\t * }",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  blending: THREE.NormalBlending,\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *\tuvOffset: new THREE.Vector2(),\n\t *\tuvScale: new THREE.Vector2(),\n\t *\n\t *  fog: <bool>\n\t * }",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author alteredq / http://alteredqualia.com/",
        "* @author alteredq / http://alteredqualia.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author alteredq / http://alteredqualia.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author jonobr1 / http://jonobr1.com/",
        "* @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com",
        "* @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author michael guerrero / http://realitymeltdown.com\n\t * @author ikerr / http://verold.com",
        "* @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com",
        "* @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/",
        "* @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/",
        "* @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/",
        "* Add: adds another flare",
        "* Update lens flares update positions on all flares based on the screen position\n\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/",
        "* Uniform Utilities",
        "* Uniforms library for shared webgl shaders",
        "* Webgl Shader Library for three.js\n\t *\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/",
        "* @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/",
        "* @author szimek / https://github.com/szimek/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Marius Kintel / https://github.com/kintel",
        "* @author alteredq / http://alteredqualia.com",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author fordacious / fordacious.github.io",
        "* @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/",
        "* Render lens flares\n\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n\t\t *         reads these back and calculates occlusion.",
        "* @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author zz85 / http://www.lab4games.net/zz85/blog",
        "* @author alteredq / http://alteredqualia.com/",
        "* @author zz85 / http://www.lab4games.net/zz85/blog",
        "* This code is a quick port of code written in C++ which was submitted to\n\t\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\n\t\t\t * See original code and more information here:\n\t\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n\t\t\t *\n\t\t\t * ported to actionscript by Zevan Rosser\n\t\t\t * www.actionsnippet.com\n\t\t\t *\n\t\t\t * ported to javascript by Joshua Koo\n\t\t\t * http://www.lab4games.net/zz85/blog\n\t\t\t *",
        "** Triangulate: ERROR - probable bad polygon!",
        "* @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Extensible curve object\n\t *\n\t * Some common of Curve methods\n\t * .getPoint(t), getTangent(t)\n\t * .getPointAt(u), getTagentAt(u)\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following classes subclasses THREE.Curve:\n\t *\n\t * -- 2d classes --\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.SplineCurve\n\t * THREE.ArcCurve\n\t * THREE.EllipseCurve\n\t *\n\t * -- 3d classes --\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.SplineCurve3\n\t * THREE.ClosedSplineCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath\n\t *\n\t *",
        "************************************************************\n\t *\tAbstract Curve base class\n\t *************************************************************",
        "************************************************************\n\t *\t3D Curves\n\t *************************************************************",
        "* @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t *",
        "************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *  curves, but retains the api of a curve\n\t *************************************************************",
        "************************************************************\n\t *\tCreate Geometries Helpers\n\t *************************************************************",
        "* @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author mrdoob / http://mrdoob.com/",
        "* @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Creates free form 2d path using series of points, lines or curves.\n\t *\n\t *",
        "* @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Defines a 2d shape plane using paths.\n\t *",
        "************************************************************\n\t *\tLine\n\t *************************************************************",
        "************************************************************\n\t *\tQuadratic Bezier curve\n\t *************************************************************",
        "************************************************************\n\t *\tCubic Bezier curve\n\t *************************************************************",
        "************************************************************\n\t *\tSpline curve\n\t *************************************************************",
        "************************************************************\n\t *\tEllipse curve\n\t *************************************************************",
        "************************************************************\n\t *\tArc curve\n\t *************************************************************",
        "************************************************************\n\t *\tLine3D\n\t *************************************************************",
        "************************************************************\n\t *\tQuadratic Bezier 3D curve\n\t *************************************************************",
        "************************************************************\n\t *\tCubic Bezier 3D curve\n\t *************************************************************",
        "************************************************************\n\t *\tSpline 3D curve\n\t *************************************************************",
        "* @author zz85 https://github.com/zz85\n\t *\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5",
        "* Compute coefficients for a cubic polynomial\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *   p(0) = x0, p(1) = x1\n\t\t *  and\n\t\t *   p'(0) = t0, p'(1) = t1.",
        "************************************************************\n\t *\tClosed Spline 3D curve\n\t *************************************************************",
        "* @author mrdoob / http://mrdoob.com/\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as",
        "* @author hughes",
        "* @author benaadams / https://twitter.com/ben_a_adams",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author WestLangley / http://github.com/WestLangley",
        "* @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *  curveSegments: <int>, // number of points on the curves\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *  amount: <int>, // Depth to extrude the shape\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\n\t *  bevelSize: <float>, // how far from shape outline is bevel\n\t *  bevelSegments: <int>, // number of bevel layers\n\t *\n\t *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\n\t *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\n\t *\n\t *  uvGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t *",
        "* @author jonobr1 / http://jonobr1.com\n\t *\n\t * Creates a one-sided polygonal geometry from a path shape. Similar to\n\t * ExtrudeGeometry.\n\t *\n\t * parameters = {\n\t *\n\t *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\n\t *\n\t *\tmaterial: <int> // material index for front and back faces\n\t *\tuvGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t *",
        "* Add an array of shapes to THREE.ShapeGeometry.",
        "* Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.",
        "* @author astrodud / http://astrodud.isgreat.org/\n\t * @author zz85 / https://github.com/zz85\n\t * @author bhouston / http://clara.io",
        "* @author mrdoob / http://mrdoob.com/\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as",
        "* @author mrdoob / http://mrdoob.com/\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as",
        "* @author Kaleb Murphy",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author benaadams / https://twitter.com/ben_a_adams\n\t * based on THREE.SphereGeometry",
        "* @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *  font: <THREE.Font>, // font\n\t *\n\t *  size: <float>, // size of the text\n\t *  height: <float>, // thickness to extrude text\n\t *  curveSegments: <int>, // number of points on the curves\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into text bevel goes\n\t *  bevelSize: <float> // how far from text outline is bevel\n\t * }",
        "* @author oosmoxiecode\n\t * @author mrdoob / http://mrdoob.com/\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888",
        "* @author oosmoxiecode\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473",
        "* @author WestLangley / https://github.com/WestLangley\n\t * @author zz85 / https://github.com/zz85\n\t * @author miningold / https://github.com/miningold\n\t * @author jonobr1 / https://github.com/jonobr1\n\t *\n\t * Modified from the TorusKnotGeometry by @oosmoxiecode\n\t *\n\t * Creates a tube which extrudes along a 3d spline\n\t *\n\t * Uses parallel transport frames as described in\n\t * http://www.cs.indiana.edu/pub/techreports/TR425.pdf",
        "*** NOT NECESSARILY PLANAR ! ***",
        "* @author clockworkgeek / https://github.com/clockworkgeek\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author WestLangley / http://github.com/WestLangley",
        "* @author Abe Pazos / https://hamoid.com",
        "* @author timothypratley / https://github.com/timothypratley",
        "* @author timothypratley / https://github.com/timothypratley",
        "* @author timothypratley / https://github.com/timothypratley",
        "* @author zz85 / https://github.com/zz85\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\t *\n\t * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\n\t *",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author sroucheray / http://sroucheray.org/\n\t * @author mrdoob / http://mrdoob.com/",
        "* @author WestLangley / http://github.com/WestLangley\n\t * @author zz85 / http://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t *\n\t * Creates an arrow for visualizing directions\n\t *\n\t * Parameters:\n\t *  dir - Vector3\n\t *  origin - Vector3\n\t *  length - Number\n\t *  color - color in hex value\n\t *  headLength - Number\n\t *  headWidth - Number",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author WestLangley / http://github.com/WestLangley",
        "* @author alteredq / http://alteredqualia.com/\n\t *\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html",
        "* @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley",
        "* @author WestLangley / http://github.com/WestLangley\n\t * @param object THREE.Mesh whose geometry will be used\n\t * @param hex line color\n\t * @param thresholdAngle the minimum angle (in degrees),\n\t * between the face normals of adjacent faces,\n\t * that is required to render an edge. A value of 10 means\n\t * an edge is only rendered if the angle is at least 10 degrees.",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/",
        "* @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/",
        "* @author Sean Griffin / http://twitter.com/sgrif\n\t * @author Michael Guerrero / http://realitymeltdown.com\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author ikerr / http://verold.com",
        "* @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author alteredq / http://alteredqualia.com/",
        "* @author alteredq / http://alteredqualia.com/",
        "* Tween.js - Licensed under the MIT license\n\t * https://github.com/sole/tween.js\n\t * ----------------------------------------------\n\t *\n\t * See https://github.com/sole/tween.js/graphs/contributors for the full list of contributors.\n\t * Thank you all, you're awesome!",
        "* Copyright 2015 Google Inc. All Rights Reserved.\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.",
        "* The base class for all VR devices.",
        "* The base class for all VR HMD devices.",
        "* The base class for all VR position sensor devices.",
        "* Copyright 2015 Google Inc. All Rights Reserved.\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.",
        "* The HMD itself, providing rendering parameters.",
        "* Copyright 2015 Google Inc. All Rights Reserved.\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.",
        "* TODO: Fix up all \"new THREE\" instantiations to improve performance.",
        "* An implementation of a simple complementary filter, which fuses gyroscope and\n\t * accelerometer data from the 'devicemotion' event.\n\t *\n\t * Accelerometer data is very noisy, but stable over the long term.\n\t * Gyroscope data is smooth, but tends to drift over the long term.\n\t *\n\t * This fusion is relatively simple:\n\t * 1. Get orientation estimates from accelerometer by applying a low-pass filter\n\t *    on that data.\n\t * 2. Get orientation estimates from gyroscope by integrating over time.\n\t * 3. Combine the two estimates, weighing (1) in the long term, but (2) for the\n\t *    short term.",
        "* Copyright 2015 Google Inc. All Rights Reserved.\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.",
        "* The positional sensor, implemented using DeviceMotion APIs.",
        "* Returns {orientation: {x,y,z,w}, position: null}.\n\t * Position is not supported since we can't do 6DOF.",
        "* Copyright 2015 Google Inc. All Rights Reserved.\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.",
        "* Copyright 2015 Google Inc. All Rights Reserved.\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.",
        "* A virtual position sensor, implemented using keyboard and\n\t * mouse APIs. This is designed as for desktops/laptops where no Device*\n\t * events work.",
        "* Returns {orientation: {x,y,z,w}, position: null}.\n\t * Position is not supported for parity with other PositionSensors.",
        "* Start an animation to transition an angle from one value to another.",
        "* Copyright 2015 Google Inc. All Rights Reserved.\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.",
        "* Given an orientation and the gyroscope data, predicts the future orientation\n\t * of the head. This makes rendering appear faster.\n\t *\n\t * Also see: http://msl.cs.uiuc.edu/~lavalle/papers/LavYerKatAnt14.pdf\n\t *\n\t * @param {Number} predictionTimeS time from head movement to the appearance of\n\t * the corresponding image.",
        "* A subset of THREE.js, providing mostly quaternion and euler-related\n\t * operations, manually lifted from\n\t * https://github.com/mrdoob/three.js/tree/master/src/math, as of 9c30286b38df039fca389989ff06ea1c15d6bad1",
        "* START Quaternion **",
        "* @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://exocortex.com",
        "* END Quaternion **",
        "* START Vector2 **",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author egraether / http://egraether.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog",
        "* END Vector2 **",
        "* START Vector3 **",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author *kile / http://kile.stravaganza.org/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley",
        "* END Vector3 **",
        "* START Euler **",
        "* @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://exocortex.com",
        "* END Euler **",
        "* START Math **",
        "* @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/",
        "* END Math **",
        "* Copyright 2015 Google Inc. All Rights Reserved.\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.",
        "* Provides a quaternion responsible for pre-panning the scene before further\n\t * transformations due to device sensors.",
        "* Copyright 2015 Google Inc. All Rights Reserved.\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.",
        "* Copyright 2015 Google Inc. All Rights Reserved.\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.",
        "* Determine if a device is mobile.",
        "* Camera component.\n\t * Pairs along with camera system to handle tracking the active camera.",
        "* Initialize three.js camera and add it to the entity.\n\t   * Add reference from scene to this entity as the camera.",
        "* Remove camera on remove (callback).",
        "* Update three.js camera.",
        "* Geometry component. Combined with material component to make a mesh in 3D object.",
        "* Creates a new geometry on every update as there's not an easy way to\n\t   * update a geometry that would be faster than just creating a new one.",
        "* Removes geometry on remove (callback).",
        "* Creates a three.js geometry.\n\t *\n\t * @param {object} data\n\t * @param {object} schema\n\t * @returns {object} geometry",
        "* Translates geometry vertices.\n\t *\n\t * @param {object} geometry - three.js geometry.\n\t * @param {object} translate - New translation.\n\t * @param {object} currentTranslate - Currently applied translation.",
        "* Light component.",
        "* Notifies scene a light has been added to remove default lighting.",
        "* (Re)create or update light.",
        "* Remove light on remove (callback).",
        "* Creates a new three.js light object given data object defining the light.\n\t *\n\t * @param {object} data",
        "* Look-at component.\n\t *\n\t * Modifies rotation to either track another entity OR do a one-time turn towards a position\n\t * vector.\n\t *\n\t * If tracking an object via setting the component value via a selector, look-at will register\n\t * a behavior to the scene to update rotation on every tick.",
        "* If tracking an object, this will be called on every tick.\n\t   * If looking at a position vector, this will only be called once (until further updates).",
        "* Material component.\n\t *\n\t * @member {object} shader - Determines how material is shaded. Defaults to `standard`,\n\t *         three.js's implementation of PBR. Another standard shading model is `flat` which\n\t *         uses MeshBasicMaterial.",
        "* Update or create material.\n\t   *\n\t   * @param {object|null} oldData",
        "* Remove material on remove (callback).",
        "* (Re)create new material. Has side-effects of setting `this.material` and updating\n\t   * material registration in scene.\n\t   *\n\t   * @param {object} data - Material component data.\n\t   * @param {object} type - Material type to create.\n\t   * @returns {object} Material.",
        "* Returns a three.js constant determining which material face sides to render\n\t * based on the side parameter (passed as a component property).\n\t *\n\t * @param {string} [side=front] - `front`, `back`, or `double`.\n\t * @returns {number} THREE.FrontSide, THREE.BackSide, or THREE.DoubleSide.",
        "* Returns the closest intersected object.\n\t   *\n\t   * @returns {Object|null}\n\t   *   The closest intersected element that is not the cursor itself,\n\t   *   an invisible element, or not a a-frame entity element.\n\t   *   If no objects are intersected, `null` is returned.",
        "* Remembers the last intersected element",
        "* Emits a `mouseleave` event and clears info about the last intersection.",
        "* Updates object3D rotation.",
        "* Fog component.\n\t * Applies only to the scene entity.",
        "* Remove fog on remove (callback).",
        "* Creates a fog object. Sets fog.name to be able to detect fog type changes.\n\t *\n\t * @param {object} data - Fog data.\n\t * @returns {object} fog",
        "* Stats appended to document.body by RStats.",
        "* UI for entering VR mode.",
        "* Creates Enter VR flow (button and compatibility modal).\n\t *\n\t * Creates a button that when clicked will enter into stereo-rendering mode for VR.\n\t *\n\t * For compatibility:\n\t *   - Mobile always has compatibility via polyfill.\n\t *   - If desktop browser does not have WebVR excluding polyfill, disable button, show modal.\n\t *   - If desktop browser has WebVR excluding polyfill but not headset connected,\n\t *     don't disable button, but show modal.\n\t *   - If desktop browser has WebVR excluding polyfill and has headset connected, then\n\t *     then no modal.\n\t *\n\t * Structure: <div><modal/><button></div>\n\t *\n\t * @returns {Element} Wrapper <div>.",
        "* Check for headset connection by looking at orientation {0 0 0}.",
        "* Create a modal that tells mobile users to orient the phone to landscape.\n\t * Add a close button that if clicked, exits VR and closes the modal.",
        "* Sound component.",
        "* Removes current sound object, creates new sound object, adds to entity.\n\t   *\n\t   * @returns {object} sound",
        "* Visibility component.",
        "* WASD component to control entities using WASD keys.",
        "* Animation configuration options for TWEEN.js animations.\n\t * Used by `<a-animation>`.",
        "* Animation element that applies Tween animation to parent element (entity).\n\t * Takes after the Web Animations spec.\n\t *\n\t * @member {number} count - Decrementing counter for how many cycles of animations left to\n\t *         run.\n\t * @member {Element} el - Entity which the animation is modifying.\n\t * @member initialValue - Value before animation started. Used to restore state.\n\t * @member {bool} isRunning - Whether animation is currently running.\n\t * @member {function} partialSetAttribute -\n\t *   setAttribute function that is agnostic to whether we are setting an attribute value\n\t *   or a component property value. The el and the attribute names are bundled with\n\t *   the function.\n\t * @member {object} tween - tween.js object.",
        "* Builds a Tween object to handle animations.\n\t     * Uses tween.js's from, to, delay, easing, repeat, onUpdate, and onComplete.\n\t     * Note: tween.js takes objects for its `from` and `to` values.\n\t     *\n\t     * @returns {object}",
        "* Animation parameters changed. Stop current animation, get a new one, and start it.",
        "* Callback for when a cycle of an animation is complete. Handles when to completely\n\t     * finish the animation.\n\t     *\n\t     * If `repeat` is set to a value, this method is called after each repeat. Repeats are\n\t     * handled by ending the current animation and creating a new one with `count` updated.\n\t     * Note that this method is *not* called if repeat is set to `indefinite`.",
        "* Handle alternating directions. Given the current direction, calculate the next one,\n\t     * and store the current one.\n\t     *\n\t     * @param {string} direction\n\t     * @returns {string} Direction that the next individual cycle of the animation will go\n\t     *          towards.",
        "* Preemptive binding to attach/detach event listeners (see `update`).",
        "* Applies animation data from a mixin element.\n\t     * Works the same as component mixins but reimplemented because animations\n\t     * aren't components.",
        "* Deduces different animation values based on whether we are:\n\t *   - animating an inner attribute of a component.\n\t *   - animating a coordinate component.\n\t *   - animating a boolean.\n\t *   - animating a number.\n\t *\n\t * @param {Element} el\n\t * @param {string} attribute - Tells what to animate based on whether it is dot-separated.\n\t * @param {string} dataFrom - Data `from` value.\n\t * @param {string} dataTo - Data `to` value.\n\t * @param currentValue\n\t * @returns {object}\n\t *   Object with keys [from, to, partialSetAttribute].\n\t *     `from` and `to`\n\t *        Objects where key is attribute being animated and value is value.\n\t *     `partialSetAttribute`\n\t *        Closured-function that tells tween how to update the component.",
        "* Animating a component that has multiple attributes (e.g., geometry.width).",
        "* Animating a component that is an XYZ coordinate (e.g., position).\n\t   * Will be tweening {x, y, z} all at once.",
        "* Animation a boolean (e.g., visible).\n\t   * Have to convert from boolean to an integer (0 is false, > 0 is true) for tween.",
        "* Animating a numbered attribute (e.g., opacity).",
        "* Converts string to bool.\n\t *\n\t * @param {string} str - `true` or `false`.\n\t * @returns {bool}",
        "* Converts boolean to number.\n\t *\n\t * @param {bool}\n\t * @returns {number}",
        "* Asset management system. Handles blocking on asset loading.",
        "* Create a Promise that resolves once the media element has finished buffering.\n\t *\n\t * @param {Element} el - HTMLMediaElement.\n\t * @returns {Promise}",
        "* Cubemap element that handles validation and exposes list of URLs.\n\t * Does not listen to updates.",
        "* Calculates this.srcs.",
        "* Checks for exactly six elements with [src].\n\t     * Does not check explicitly for <img>s in case user does not want\n\t     * prefetching.\n\t     *\n\t     * @returns {Array|null} - six URLs if valid, else null.",
        "* Entity is a container object that components are plugged into to comprise everything in\n\t * the scene. In A-Frame, they inherently have position, rotation, and scale.\n\t *\n\t * To be able to take components, the scene element inherits from the entity definition.\n\t *\n\t * @member {object} components - entity's currently initialized components.\n\t * @member {object} object3D - three.js object.\n\t * @member {array} states\n\t * @member {boolean} isPlaying - false if dynamic behavior of the entity is paused.",
        "* Handle changes coming from the browser DOM inspector.",
        "* Tell parent to remove this element's object3D from its object3D.\n\t   * Do not call on scene element because that will cause a call to document.body.remove().",
        "* Gets or creates an object3D of a given type.\n\n\t   * @param {string} type - Type of the object3D.\n\t   * @param {string} Constructor - Constructor to use if need to create the object3D.\n\t   * @type {Object}",
        "* @returns {array} Direct children that are entities.",
        "* Initialize component.",
        "* Initialize, update, or remove a single component.\n\t   *\n\t   * When initializing, we set the component on `this.components`.\n\t   *\n\t   * @param {string} name - Component name.\n\t   * @param {object} newData - The new properties assigned to the component",
        "* If `attr` is a component name, removeAttribute detaches the component from the\n\t   * entity.\n\t   *\n\t   * @param {string} attr - Attribute name, which could also be a component name.",
        "* Start dynamic behavior associated with entity such as dynamic components and animations.\n\t   * Tell all children entities to also play.",
        "* Pause dynamic behavior associated with entity such as dynamic components and animations.\n\t   * Tell all children entities to also pause.",
        "* Deals with updates on entity-specific attributes (i.e., components and mixins).\n\t   *\n\t   * @param {string} attr\n\t   * @param {string} oldVal\n\t   * @param {string|object} newVal",
        "* If attribute is a component, setAttribute will apply the value to the\n\t   * existing component data, not replace it. Examples:\n\t   *\n\t   * Examples:\n\t   *\n\t   * setAttribute('id', 'my-element');\n\t   * setAttribute('material', { color: 'crimson' });\n\t   * setAttribute('material', 'color', 'crimson');\n\t   *\n\t   * @param {string} attr - Attribute name. setAttribute will initialize or update\n\t   *        a component if the name corresponds to a registered component.\n\t   * @param {string|object} value - If a string, setAttribute will update the attribute or.\n\t   *        component. If an object, the value will be mixed into the component.\n\t   * @param {string} componentPropValue - If defined, `value` will act as the property\n\t   *        name and setAttribute will only set a single component property.",
        "* If `attr` is a component, returns JUST the component data specified in the HTML\n\t   * by parsing the style-like string into an object. Like a partial version of\n\t   * `getComputedAttribute` as returned component data does not include applied mixins or\n\t   * defaults.\n\t   *\n\t   * If `attr` is not a component, fall back to HTML getAttribute.\n\t   *\n\t   * @param {string} attr\n\t   * @returns {object|string} Object if component, else string.",
        "* If `attr` is a component, returns ALL component data including applied mixins and\n\t   * defaults.\n\t   *\n\t   * If `attr` is not a component, fall back to HTML getAttribute.\n\t   *\n\t   * @param {string} attr\n\t   * @returns {object|string} Object if component, else string.",
        "* Checks if the element is in a given state. e.g. el.is('alive');\n\t   * @type {string} state - Name of the state we want to check",
        "* Check if a component is *defined* for an entity, including defaults and mixins.\n\t * Does not check whether the component has been *initialized* for an entity.\n\t *\n\t * @param {string} el - Entity.\n\t * @param {string} name - Component name.\n\t * @returns {boolean}",
        "* Check if any mixins contains a component.\n\t *\n\t * @param {string} name - Component name.\n\t * @param {array} mixinEls - Array of <a-mixin>s.",
        "* Pause component by removing tick behavior and calling pause handler.\n\t *\n\t * @param component {object} - Component to pause.\n\t * @param sceneEl {Element} - Scene, needed to remove the tick behavior.",
        "* Play component by adding tick behavior and calling play handler.\n\t *\n\t * @param component {object} - Component to play.\n\t * @param sceneEl {Element} - Scene, needed to add the tick behavior.",
        "* Base class for A-Frame that manages loading of objects.\n\t *\n\t * Nodes can be modified using mixins.\n\t * Nodes emit a `loaded` event when they and their children have initialized.",
        "* Returns first element matching a selector by traversing up the tree starting\n\t     * from and including receiver element.\n\t     *\n\t     * @param {string} selector - Selector of element to find.",
        "* Wait for children to load, if any.\n\t     * Then emit `loaded` event and set `hasLoaded`.",
        "* Emits a DOM event.\n\t     *\n\t     * @param {String} name\n\t     *   Name of event (use a space-delimited string for multiple events).\n\t     * @param {Object=} [detail={}]\n\t     *   Custom data to pass as `detail` to the event.\n\t     * @param {Boolean=} [bubbles=true]\n\t     *   Whether the event should bubble.",
        "* Returns a closure that emits a DOM event.\n\t     *\n\t     * @param {String} name\n\t     *   Name of event (use a space-delimited string for multiple events).\n\t     * @param {Object} detail\n\t     *   Custom data (optional) to pass as `detail` if the event is to\n\t     *   be a `CustomEvent`.\n\t     * @param {Boolean} bubbles\n\t     *   Whether the event should be bubble.",
        "* Returns whether the element type is one of our known registered ones\n\t *\n\t * @param   {string} node The name of the tag to register\n\t * @returns {boolean} Whether the tag name matches that of our registered\n\t *                    custom elements",
        "* @param   {string} tagName The name of the tag to register\n\t * @param   {object} obj The prototype of the new element\n\t * @returns {object} The prototype of the new element",
        "* This wraps some of the obj methods to call those on `ANode` base clase.\n\t * @param  {object} obj The objects that contains the methods that will be wrapped.\n\t * @return {object} An object with the same properties as the input parameter but\n\t * with some of methods wrapped.",
        "* This wraps some of the obj methods to call those on `AEntity` base class.\n\t * @param  {object} obj The objects that contains the methods that will be wrapped.\n\t * @return {object} An object with the same properties as the input parameter but\n\t * with some of methods wrapped.",
        "* Wraps a list a methods to ensure that those in the base class are called through the derived one.\n\t * @param  {object} targetObj Object that will contain the wrapped methods\n\t * @param  {array} methodList List of methods from the derivedObj that will be wrapped\n\t * @param  {object} derivedObject Object that inherits from the baseObj\n\t * @param  {object} baseObj Object that derivedObj inherits from\n\t * @return {undefined}",
        "* Wraps one method to ensure that the one in the base class is called before the one\n\t * in the derived one\n\t * @param  {object} obj Object that will contain the wrapped method\n\t * @param  {string} methodName The name of the method that will be wrapped\n\t * @param  {object} derivedObject Object that inherits from the baseObj\n\t * @param  {object} baseObj Object that derivedObj inherits from\n\t * @return {undefined}",
        "* It copies the properties from source to destination object\n\t * if they don't exist already\n\t * @param  {object} source The object where properties are copied from\n\t * @param  {type} destination The object where properties are copied to\n\t * @return {undefined}",
        "* Component class definition.\n\t *\n\t * Components configure appearance, modify behavior, or add functionality to\n\t * entities. The behavior and appearance of an entity can be changed at runtime\n\t * by adding, removing, or updating components. Entities do not share instances\n\t * of components.\n\t *\n\t * @member {object} data - Component data populated by parsing the\n\t *         mapped attribute of the component plus applying defaults and mixins.\n\t * @member {object} el - Reference to the entity element.\n\t * @member {string} name - Component name exposed as an HTML attribute.",
        "* Contains the type schema and defaults for the data values.\n\t   * Data is coerced into the types of the values of the defaults.",
        "* Init handler. Similar to attachedCallback.\n\t   * Called during component initialization and is only run once.\n\t   * Components can use this to set initial state.",
        "* Update handler. Similar to attributeChangedCallback.\n\t   * Called whenever component's data changes.\n\t   * Also called on component initialization when the component receives initial data.\n\t   *\n\t   * @param {object} prevData - Previous attributes of the component.",
        "* Tick handler.\n\t   * Called on each tick of the scene render loop.\n\t   * Affected by play and pause.\n\t   *\n\t   * @param {number} time - Scene tick time.\n\t   * @param {number} timeDelta - Difference in current render time and previous render time.",
        "* Called to start any dynamic behavior (e.g., animation, AI, events, physics).",
        "* Called to stop any dynamic behavior (e.g., animation, AI, events, physics).",
        "* Remove handler. Similar to detachedCallback.\n\t   * Called whenever component is removed from the entity (i.e., removeAttribute).\n\t   * Components can use this to reset behavior on the entity.",
        "* Parses each property based on property type.\n\t   * If component is single-property, then parses the single property value.\n\t   *\n\t   * @param {string} value - HTML attribute value.\n\t   * @param {boolean} silent - Suppress warning messages.\n\t   * @returns {object} Component data.",
        "* Stringify properties if necessary.\n\t   *\n\t   * Only called from `Entity.setAttribute` for properties whose parsers accept a non-string\n\t   * value (e.g., selector, vec3 property types).\n\t   *\n\t   * @param {object} data - Complete component data.\n\t   * @returns {string}",
        "* Returns a copy of data such that we don't expose the private this.data.\n\t   *\n\t   * @returns {object} data",
        "* Apply new component data if data has changed.\n\t   *\n\t   * @param {string} value - HTML attribute value.",
        "* Extend schema of component given a partial schema.\n\t   *\n\t   * Some components might want to mutate their schema based on certain properties.\n\t   * e.g., Material component changes its schema based on `shader` to account for different\n\t   * uniforms\n\t   *\n\t   * @param {object} schemaAddon - Schema chunk that extend base schema.",
        "* Registers a component to A-Frame.\n\t *\n\t * @param {string} name - Component name.\n\t * @param {object} definition - Component schema and lifecycle method handlers.\n\t * @returns {object} Component.",
        "* Builds component data from the current state of the entity, ultimately\n\t * updating this.data.\n\t *\n\t * If the component was detached completely, set data to null.\n\t *\n\t * Precedence:\n\t * 1. Defaults data\n\t * 2. Mixin data.\n\t * 3. Attribute data.\n\t *\n\t * Finally coerce the data to the types of the defaults.\n\t *\n\t * @param {object} el - Element to build data from.\n\t * @param {object} name - Component name.\n\t * @param {object} schema - Component schema.\n\t * @param {object} elData - Element current data.\n\t * @param {boolean} silent - Suppress warning messages.\n\t * @return {object} The component data",
        "* Object extending with checking for single-property schema.\n\t*\n\t* @param dest - Destination object or value.\n\t* @param source - Source object or value\n\t* @param {boolean} isSinglePropSchema - Whether or not schema is only a single property.\n\t* @returns Overridden object or value.",
        "* Register a parser for re-use such that when someone uses `type` in the schema,\n\t * `schema.process` will set the property `parse` and `stringify`.\n\t *\n\t * @param {string} type - Type name.\n\t * @param [defaultValue=null] -\n\t *   Default value to use if component does not define default value.\n\t * @param {function} [parse=defaultParse] - Parse string function.\n\t * @param {function} [stringify=defaultStringify] - Stringify to DOM function.",
        "* `src` parser for assets.\n\t *\n\t * @param {string} value - Can either be `url(<value>)` or a selector to an asset.\n\t * @returns {string} Parsed value from `url(<value>)` or src from `<someasset src>`.",
        "* Scene element, holds all entities.\n\t *\n\t * @member {number} animationFrameID\n\t * @member {array} behaviors - Component instances that have registered themselves to be\n\t           updated on every tick.\n\t * @member {object} camera - three.js Camera object.\n\t * @member {object} canvas\n\t * @member {bool} isScene - Differentiates as scene entity as opposed to other entites.\n\t * @member {bool} isMobile - Whether browser is mobile (via UA detection).\n\t * @member {object} object3D - Root three.js Scene object.\n\t * @member {object} monoRenderer\n\t * @member {object} renderer\n\t * @member {bool} renderStarted\n\t * @member {object} stereoRenderer\n\t * @member {object} systems - Registered instantiated systems.\n\t * @member {number} time",
        "* Shuts down scene on detach.",
        "* @param {object} behavior - Generally a component. Must implement a .update() method to\n\t     *        be called on every tick.",
        "* Generally must be triggered on user action for requesting fullscreen.",
        "* @param {object} behavior - Generally a component. Has registered itself to behaviors.",
        "* Sets renderer to mono (one eye).",
        "* Sets renderer to stereo (two eyes).",
        "* Handler attached to elements to help scene know when to kick off.\n\t     * Scene waits for all entities to load.",
        "* Reload the scene to the original DOM content.\n\t     *\n\t     * @param {bool} doPause - Whether to reload the scene with all dynamic behavior paused.",
        "* The render loop.\n\t     *\n\t     * Updates animations.\n\t     * Updates behaviors.\n\t     * Renders with request animation frame.",
        "* Manually handles fullscreen for non-VR mobile where the renderer' VR\n\t * display is not polyfilled.\n\t *\n\t * Desktop just works so use the renderer.setFullScreen in that case.",
        "* Register fullscreen listener to scene.",
        "* Injects the necessary metatags in the document for mobile support:\n\t * 1. Prevent the user to zoom in the document.\n\t * 2. Ensure that window.innerWidth and window.innerHeight have the correct\n\t *    values and the canvas is properly scaled.\n\t * 3. To allow fullscreen mode when pinning a web app on the home screen on\n\t *    iOS.\n\t * Adapted from https://www.reddit.com/r/web_design/comments/3la04p/\n\t *\n\t * @param {object} scene - Scene element\n\t * @returns {Array}",
        "* A schema is classified as a schema for a single property if:\n\t * - `type` is defined on the schema as a string.\n\t * - OR `default` is defined on the schema, as a reserved keyword.\n\t * - OR schema is empty.",
        "* Build step to schema to use `type` to inject default value, parser, and stringifier.\n\t *\n\t * @param {object} schema\n\t * @returns {object} Schema.",
        "* Inject default value, parser, stringifier for single property.",
        "* Parse propData using schema. Use default values if not existing in propData.\n\t *\n\t * @param {object} propData - Unparsed properties.\n\t * @param {object} schema - Property types definition.\n\t * @param {boolean} getPartialData - Whether to return full component data or just the data\n\t *        with keys in `propData`.\n\t * @param {boolean} silent - Suppress warning messages.",
        "* Deserialize a single property.",
        "* Serialize a group of properties.",
        "* Serialize a single property.",
        "* Shader class definition.\n\t *\n\t * Shaders extend the material component API so you can create your own library\n\t * of customized materials\n\t *",
        "* Contains the type schema and defaults for the data values.\n\t   * Data is coerced into the types of the values of the defaults.",
        "* Init handler. Similar to attachedCallback.\n\t   * Called during shader initialization and is only run once.",
        "* Update handler. Similar to attributeChangedCallback.\n\t   * Called whenever the associated material data changes.\n\t   *\n\t   * @param {object} data - New material data.",
        "* Registers a shader to A-Frame.\n\t *\n\t * @param {string} name - shader name.\n\t * @param {object} definition - shader property and methods.\n\t * @returns {object} Shader.",
        "* System class definition.\n\t *\n\t * Systems provide global scope and services to a group of instantiated components of the.\n\t * same class. For example, a physics component that creates a physics world that oversees\n\t * all entities with a physics or rigid body component.\n\t *\n\t * @member {string} name - Name that system is registered under.\n\t * @member {Element} sceneEl - Handle to the scene element where system applies to.",
        "* Init handler. Called during scene initialization and is only run once.\n\t   * Systems can use this to set initial state.",
        "* Tick handler.\n\t   * Called on each tick of the scene render loop.\n\t   * Affected by play and pause.\n\t   *\n\t   * @param {number} time - Scene tick time.\n\t   * @param {number} timeDelta - Difference in current render time and previous render time.",
        "* Called to start any dynamic behavior (e.g., animation, AI, events, physics).",
        "* Called to stop any dynamic behavior (e.g., animation, AI, events, physics).",
        "* Registers a system to A-Frame.\n\t *\n\t * @param {string} name - Component name.\n\t * @param {object} definition - Component property and methods.\n\t * @returns {object} Component.",
        "* Declarative events to help register event listeners that set attributes on other entities.\n\t * A convenience layer and helper for those that might not know Javascript.\n\t *\n\t * Note that the event that <a-event> registers is not delegated as this helper is mainly\n\t * for those that do not know Javascript and writing raw markup. In which case, delegated\n\t * events are not needed. Also helps reduce scope of this helper and encourages people to\n\t * learn to register their own event handlers.\n\t *\n\t * @member {string} name - Event name.\n\t * @member {array} targetEls - Elements to modify on event. Defaults to parent element.",
        "* Common mesh defaults, mappings, and transforms.",
        "* Sync to attribute to component property whenever mapped attribute changes.",
        "* If attribute is mapped to a component property, set the component property using\n\t       * the attribute value.",
        "* Calls defined transform function on value if any.",
        "* Clone an object, including inner objects one-level deep.\n\t * Used for copying defaultAttributes to componentData so primitives of the same type don't\n\t * affect each others' defaultAttributes object.",
        "* Flat shader using THREE.MeshBasicMaterial.",
        "* Initializes the shader.\n\t   * Adds a reference from the scene to this entity as the camera.",
        "* Update or create material.\n\t   *\n\t   * @param {object|null} oldData",
        "* Updating existing material.\n\t   *\n\t   * @param {object} data - Material component data.",
        "* Builds and normalize material data, normalizing stuff along the way.\n\t *\n\t * @param {object} data - Material data.\n\t * @returns {object} data - Processed material data.",
        "* Standard (physically-based) shader using THREE.MeshStandardMaterial.",
        "* Initializes the shader.\n\t   * Adds a reference from the scene to this entity as the camera.",
        "* Update or create material.\n\t   *\n\t   * @param {object|null} oldData",
        "* Updating existing material.\n\t   *\n\t   * @param {object} data - Material component data.\n\t   * @returns {object} Material.",
        "* Handle environment cubemap. Textures are cached in texturePromises.",
        "* Builds and normalize material data, normalizing stuff along the way.\n\t *\n\t * @param {object} data - Material data.\n\t * @returns {object} data - Processed material data.",
        "* Camera system. Manages which camera is active among multiple cameras in scene.\n\t *\n\t * @member {object} activeCameraEl - Active camera entity.",
        "* Creates a default camera if user has not added one during the initial scene traversal.\n\t   *\n\t   * Default camera height is at human level (~1.8m) and back such that\n\t   * entities at the origin (0, 0, 0) are well-centered.",
        "* Set a different active camera.\n\t   * When we choose a (sort of) random scene camera as the replacement, set its `active` to\n\t   * true. The camera component will call `setActiveCamera` and handle passing the torch to\n\t   * the new camera.",
        "* Set active camera to be used by renderer.\n\t   * Removes the default camera (if present).\n\t   * Disables all other cameras in the scene.\n\t   *\n\t   * @param {Element} newCameraEl - Entity with camera component.\n\t   * @param {object} newCamera - three.js Camera object.",
        "* Remove injected default camera from scene, if present.\n\t *\n\t * @param {Element} sceneEl",
        "* Light system.\n\t *\n\t * Prescribes default lighting if not specified (one ambient, one directional).\n\t * Removes default lighting from the scene when a new light is added.\n\t *\n\t * @param {bool} defaultLightsEnabled - Whether default lighting is active.",
        "* Notify scene that light has been added and to remove the default.\n\t   *\n\t   * @param {object} el - element holding the light component.",
        "* Prescibe default lights to the scene.\n\t   * Does so by injecting markup such that this state is not invisible.\n\t   * These lights are removed if the user adds any lights.",
        "* Keep track of material in case an update trigger is needed (e.g., fog).\n\t   *\n\t   * @param {object} material",
        "* Stops tracking material.\n\t   *\n\t   * @param {object} material",
        "* Trigger update to all registered materials.",
        "* Parses coordinates from an \"x y z\" string.\n\t * Example: \"3 10 -5\" to {x: 3, y: 10, z: -5}.\n\t *\n\t * @param {string} val - An \"x y z\" string.\n\t * @param {string} defaults - fallback value.\n\t * @returns {object} An object with keys [x, y, z].",
        "* Stringifies coordinates from an object with keys [x y z].\n\t * Example: {x: 3, y: 10, z: -5} to \"3 10 -5\".\n\t *\n\t * @param {object|string} data - An object with keys [x y z].\n\t * @returns {string} An \"x y z\" string.",
        "* @returns {bool}",
        "* Monkeypatches `debug` so we can colorize error/warning messages.\n\t *\n\t * (See issue: https://github.com/visionmedia/debug/issues/137)",
        "* Returns the type of the namespace (e.g., `error`, `warn`).\n\t *\n\t * @param {String} namespace\n\t *   The debug logger's namespace (e.g., `components:geometry:warn`).\n\t * @returns {String} The type of the namespace (e.g., `warn`).\n\t * @api private",
        "* Returns the color of the namespace (e.g., `orange`).\n\t *\n\t * @param {String} namespace\n\t *   The debug logger's namespace (e.g., `components:geometry:warn`).\n\t * @returns {String} The color of the namespace (e.g., `orange`).\n\t * @api private",
        "* Returns `localStorage` if possible.\n\t *\n\t * This is necessary because Safari throws when a user disables\n\t * cookies or `localStorage` and you attempt to access it.\n\t *\n\t * @returns {localStorage}\n\t * @api private",
        "* To enable console logging, type this in the Console of your Dev Tools:\n\t *\n\t *   localStorage.logs = 1\n\t *\n\t * To disable console logging:\n\t *\n\t *   localStorage.logs = 0\n\t *",
        "* Fires a custom DOM event.\n\t *\n\t * @param {Element} el Element on which to fire the event.\n\t * @param {String} name Name of the event.\n\t * @param {Object=} [data={bubbles: true, {detail: <el>}}]\n\t *   Data to pass as `customEventInit` to the event.",
        "* Throws an error given a message.\n\t *\n\t * @param {String} msg Error message.",
        "* Emits a console warning given passed message argument(s).",
        "* Emits a console log given passed message argument(s).",
        "* Mix the properties of source object(s) into a destination object.\n\t *\n\t * @param  {object} dest - The object to which properties will be copied.\n\t * @param  {...object} source - The object(s) from which properties will be copied.",
        "* Checks if two objects have the same attributes and values, including nested objects.\n\t *\n\t * @param {object} a - First object.\n\t * @param {object} b - Second object.\n\t * @returns {boolean} Whether two objects are deeply equal.",
        "* Computes the difference between two objects.\n\t *\n\t * @param {object} a - First object to compare (e.g., oldData).\n\t * @param {object} b - Second object to compare (e.g., newData).\n\t * @returns {object}\n\t *   Difference object where set of keys note which values were not equal, and values are\n\t *   `b`'s values.",
        "* Checks if browser is mobile.\n\t * @return {Boolean} True if mobile browser detected.",
        "* Checks mobile device orientation.\n\t * @return {Boolean} True if landscape orientation.",
        "* Returns whether we should capture this keyboard event for keyboard shortcuts.\n\t * @param {Event} event Event object.\n\t * @returns {Boolean} Whether the key event should be captured.",
        "* Splits a string into an array based on a delimiter.\n\t *\n\t * @param   {string=} [str='']        Source string\n\t * @param   {string=} [delimiter=' '] Delimiter to use\n\t * @returns {array}                   Array of delimited strings",
        "* Extracts data from the element given an object that contains expected keys.\n\t *\n\t * @param {Element} Source element.\n\t * @param {Object} [defaults={}] Object of default key-value pairs.\n\t * @returns {Object}",
        "* Retrieves querystring value.\n\t * @param  {String} name Name of querystring key.\n\t * @return {String}      Value",
        "* Detects whether context is within iframe.",
        "* Validates a texture, either as a selector or as a URL.\n\t * Detects whether `src` is pointing to an image or to a video, and invokes the\n\t * appropriate callback.\n\t *\n\t * If `src` is selector, check if it's valid, return the el in the callback.\n\t * An el is returned so that it can be reused for texture loading.\n\t *\n\t * If `src` is a URL, check if it's valid, return the src in the callback.\n\t *\n\t * @params {string} src - A selector or a URL. URLs must be wrapped by `url()`.\n\t * @params {function} isImageCb - callback if texture is an image.\n\t * @params {function} isVideoCb - callback if texture is a video.",
        "* Validates six images as a cubemap, either as selector or comma-separated\n\t * URLs.\n\t *\n\t * @param {string} src - A selector or comma-separated image URLs. Image URLs\n\t          must be wrapped by `url()`.\n\t * @param {string} src - A selector or comma-separated image URLs. Image URLs\n\t          must be wrapped by `url()`.",
        "* Parses src from `url(src)`.\n\t * @param  {string} src - String to parse.\n\t * @return {string} The parsed src, if parseable.",
        "* Validate src is a valid image url\n\t * @param  {string} src - url that will be tested\n\t * @param  {function} onResult - callback with the test result",
        "* Query and validate a query selector,\n\t *\n\t * @param  {string} selector - DOM selector.\n\t * @return {object|null|undefined} Selected DOM element if exists.\n\t           null if query yields no results.\n\t           undefined if `selector` is not a valid selector.",
        "* Deserializes style-like string into an object of properties.\n\t *\n\t * @param {string} value - HTML attribute value.\n\t * @returns {object} Property data.",
        "* Serialize an object of properties into a style-like string.\n\t *\n\t * @param {object} data - Property data.\n\t * @returns {string}",
        "* Converts string from hyphen to camelCase.\n\t *\n\t * @param {string} str - String to camelCase.\n\t * @return {string} CamelCased string.",
        "* Converts object's keys from hyphens to camelCase (e.g., `max-value` to\n\t * `maxValue`).\n\t *\n\t * @param {object} obj - The object to camelCase keys.\n\t * @return {object} The object with keys camelCased.",
        "* Texture helpers for standard material component.\n\t *\n\t * @member textureCache {object} - Texture cache for:\n\t *   - Images: textureCache has mapping of src -> repeat -> cached three.js texture.\n\t *   - Videos: textureCache has mapping of videoElement -> cached three.js texture.\n\t * @member videoCache {object} - Cache of video elements.",
        "* High-level function for loading image textures. Meat of logic is in `loadImageTexture`.\n\t * Bound to material component instance and three.js material.\n\t *\n\t * @param material {object} - three.js material, bound by the A-Frame shader.\n\t * @param data {object} - Shader data, bound by the A-Frame shader.\n\t * @param src {Element|string} - Texture source, bound by `src-loader` utils.",
        "* Load video texture.\n\t * Bound to material component instance and three.js material.\n\t * Note that creating a video texture is more synchronous than creating an image texture.\n\t *\n\t * @param material {object} - three.js material, bound by the A-Frame shader.\n\t * @param data {object} - Shader data, bound by the A-Frame shader.\n\t * @param src {Element|string} - Texture source, bound by `src-loader` utils.",
        "* Calculates consistent hash from a video element using its attributes.\n\t * If the video element has an ID, use that.\n\t * Else build a hash that looks like `src:myvideo.mp4;height:200;width:400;`.\n\t *\n\t * @param videoEl {Element} - Video element.\n\t * @returns {string}",
        "* Set material texture and update if necessary.\n\t *\n\t * @param {object} material\n\t * @param {object} texture",
        "* Set image texture on material as `map`.\n\t *\n\t * @private\n\t * @param {object} el - Entity element.\n\t * @param {object} material - three.js material.\n\t * @param {string|object} src - An <img> element or url to an image file.\n\t * @param {string} repeat - X and Y value for size of texture repeating (in UV units).\n\t * @returns {Promise} Resolves once texture is loaded.",
        "* Texture loaded. Set it.",
        "* Create video element to be used as a texture.\n\t *\n\t * @param {object} material - three.js material.\n\t * @param {string} src - Url to a video file.\n\t * @param {number} width - Width of the video.\n\t * @param {number} height - Height of the video.\n\t * @returns {Element} Video element.",
        "* Fixes a video element's attributes to prevent developers from accidentally passing the\n\t * wrong attribute values to commonly misused video attributes.\n\t *\n\t * <video> does not treat `autoplay`, `controls`, `crossorigin`, `loop`, and `preload` as\n\t * as booleans. Existence of those attributes will mean truthy.\n\t *\n\t * For example, translates <video loop=\"false\"> to <video>.\n\t *\n\t * @see https://developer.mozilla.org/docs/Web/HTML/Element/video#Attributes\n\t * @param {Element} videoEl - Video element.\n\t * @returns {Element} Video element with the correct properties updated.",
        "*   From https://github.com/paulirish/memory-stats.js",
        "* Copyright 2015 Google Inc. All Rights Reserved.\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.",
        "* Copyright 2015 Google Inc. All Rights Reserved.\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.",
        "* Android and iOS compatible wakelock implementation.\n\t *\n\t * Refactored thanks to dkovalev@.",
        "***"
    ],
    "functions": [
        "__webpack_require__",
        "s",
        "cleanUpNextTick",
        "drainQueue",
        "Item",
        "noop",
        "useColors",
        "formatArgs",
        "log",
        "save",
        "load",
        "localstorage",
        "selectColor",
        "debug",
        "disabled",
        "enabled",
        "enable",
        "disable",
        "enabled",
        "coerce",
        "parse",
        "plural",
        "toObject",
        "assignKey",
        "assign",
        "st",
        "ot",
        "ut",
        "at",
        "ft",
        "lt",
        "ct",
        "ht",
        "pt",
        "dt",
        "vt",
        "mt",
        "gt",
        "e",
        "n",
        "toObject",
        "bind",
        "handle",
        "resolve",
        "reject",
        "finale",
        "Handler",
        "doResolve",
        "res",
        "interval",
        "loop",
        "clearInterval",
        "fallback",
        "parse",
        "getKeyValueChunks",
        "stringify",
        "normalize",
        "gotVRDevices",
        "gotVRDevices",
        "fovToNDCScaleOffset",
        "fovPortToProjection",
        "fovToProjection",
        "load",
        "parse",
        "setPreferredShading",
        "parseAsset",
        "parseLib",
        "parseScene",
        "parseKinematicsModel",
        "createAnimations",
        "recurseHierarchy",
        "calcAnimationBounds",
        "createMorph",
        "createSkin",
        "setupSkeleton",
        "setupSkinningMatrices",
        "flattenSkeleton",
        "skinToBindPose",
        "applySkin",
        "createKinematics",
        "createSceneGraph",
        "getJointId",
        "getLibraryNode",
        "getChannelsForNode",
        "calcFrameDuration",
        "calcMatrixAt",
        "bakeAnimations",
        "findKey",
        "findTimeNdx",
        "interpolateKeys",
        "getNextKeyWith",
        "getPrevKeyWith",
        "_Image",
        "Controller",
        "Morph",
        "Skin",
        "VisualScene",
        "Node",
        "Transform",
        "InstanceController",
        "InstanceMaterial",
        "InstanceGeometry",
        "Geometry",
        "Mesh",
        "Polygons",
        "Polylist",
        "LineStrips",
        "Triangles",
        "Accessor",
        "Vertices",
        "Input",
        "Source",
        "Material",
        "ColorOrTexture",
        "Shader",
        "Surface",
        "Sampler2D",
        "Effect",
        "InstanceEffect",
        "Animation",
        "Channel",
        "Sampler",
        "Key",
        "Camera",
        "InstanceCamera",
        "Light",
        "InstanceLight",
        "KinematicsModel",
        "Joint",
        "Link",
        "Attachment",
        "_source",
        "_nsResolver",
        "_bools",
        "_floats",
        "_ints",
        "_strings",
        "_trimString",
        "_attr_as_float",
        "_attr_as_int",
        "_attr_as_string",
        "_format_float",
        "loadTextureImage",
        "extractDoubleSided",
        "setUpConversion",
        "fixCoords",
        "getConvertedTranslation",
        "getConvertedVec3",
        "getConvertedMat4",
        "getConvertedIndex",
        "getConvertedMember",
        "addObject",
        "parseVertexIndex",
        "parseNormalIndex",
        "parseUVIndex",
        "addVertex",
        "addNormal",
        "addUV",
        "addFace",
        "hue2rgb",
        "handleAlpha",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "w",
        "w",
        "width",
        "width",
        "height",
        "height",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "order",
        "order",
        "interpolate",
        "ascSort",
        "intersectObject",
        "onRotationChange",
        "onQuaternionChange",
        "extractFromCache",
        "count",
        "needsUpdate",
        "length",
        "count",
        "needsUpdate",
        "length",
        "count",
        "addFace",
        "materialIndexSort",
        "setBit",
        "getNormalIndex",
        "getColorIndex",
        "getUvIndex",
        "total",
        "inUse",
        "total",
        "inUse",
        "total",
        "inUse",
        "total",
        "inUse",
        "bindingsPerObject",
        "compareTime",
        "loadTexture",
        "statusDomElement",
        "parseModel",
        "isBitSet",
        "parseSkin",
        "parseMorphing",
        "parseAnimations",
        "loadImage",
        "parseConstant",
        "getGeometry",
        "getMaterial",
        "loadTexture",
        "loadTexture",
        "needsUpdate",
        "needsUpdate",
        "extractFromCache",
        "needsUpdate",
        "getDataURL",
        "update",
        "testPoint",
        "uvIntersection",
        "checkIntersection",
        "checkBufferGeometryIntersection",
        "getTargetPixelRatio",
        "glClearColor",
        "setDefaultGLState",
        "resetGLState",
        "onContextLost",
        "onTextureDispose",
        "onRenderTargetDispose",
        "onMaterialDispose",
        "deallocateTexture",
        "deallocateRenderTarget",
        "deallocateMaterial",
        "releaseMaterialProgramReference",
        "setupVertexAttributes",
        "absNumericalSort",
        "painterSortStable",
        "reversePainterSortStable",
        "pushRenderItem",
        "projectObject",
        "renderObjects",
        "initMaterial",
        "setMaterial",
        "setMaterialFaces",
        "setProgram",
        "updateDynamicUniforms",
        "refreshUniformsCommon",
        "refreshUniformsLine",
        "refreshUniformsDash",
        "refreshUniformsPoints",
        "refreshUniformsFog",
        "refreshUniformsLambert",
        "refreshUniformsPhong",
        "refreshUniformsStandard",
        "markUniformsLightsNeedsUpdate",
        "loadUniformsMatrices",
        "getTextureUnit",
        "loadUniformsGeneric",
        "setupLights",
        "setTextureParameters",
        "uploadTexture",
        "clampToMaxSize",
        "isPowerOfTwo",
        "textureNeedsPowerOfTwo",
        "makePowerOfTwo",
        "setCubeTexture",
        "setCubeTextureDynamic",
        "setupFrameBufferTexture",
        "setupRenderBufferStorage",
        "setupDepthRenderbuffer",
        "setupRenderTarget",
        "updateRenderTargetMipmap",
        "filterFallback",
        "paramThreeToGL",
        "setMode",
        "render",
        "renderInstances",
        "setMode",
        "setIndex",
        "render",
        "renderInstances",
        "getMaxPrecision",
        "get",
        "onGeometryDispose",
        "getAttributeBuffer",
        "deleteAttribute",
        "deleteAttributes",
        "removeAttributeBuffer",
        "update",
        "updateAttribute",
        "createBuffer",
        "updateBuffer",
        "getAttributeBuffer",
        "getWireframeAttribute",
        "checkEdge",
        "generateExtensions",
        "generateDefines",
        "fetchUniformLocations",
        "fetchAttributeLocations",
        "filterEmptyLine",
        "replaceLightNums",
        "unrollLoops",
        "replace",
        "allocateBones",
        "addLineNumbers",
        "getDepthMaterial",
        "projectObject",
        "init",
        "createProgram",
        "init",
        "createProgram",
        "painterSortStable",
        "snip",
        "point_in_segment_2D_colin",
        "intersect_segments_2D",
        "isPointInsideAngle",
        "removeHoles",
        "isCutLineInsideAngles",
        "intersectsShapeEdge",
        "intersectsHoleEdge",
        "b2p0",
        "b2p1",
        "b2p2",
        "b3p0",
        "b3p1",
        "b3p2",
        "b3p3",
        "createPaths",
        "createPath",
        "extractSubpaths",
        "toShapesNoHoles",
        "isPointInsidePolygon",
        "CubicPoly",
        "buildPlane",
        "sortFunction",
        "scalePt2",
        "getBevelVec",
        "buildLidFaces",
        "buildSideFaces",
        "sidewalls",
        "v",
        "f3",
        "f4",
        "getPos",
        "vert",
        "initialNormal3",
        "prepare",
        "make",
        "subdivide",
        "azimuth",
        "inclination",
        "correctUV",
        "sortFunction",
        "addLine",
        "addPoint",
        "setPoint",
        "s",
        "VRDevice",
        "HMDVRDevice",
        "PositionSensorVRDevice",
        "CardboardHMDVRDevice",
        "ComplementaryFilter",
        "FusionPositionSensorVRDevice",
        "MouseKeyboardPositionSensorVRDevice",
        "PosePredictor",
        "SensorSample",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "w",
        "w",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "order",
        "order",
        "TouchPanner",
        "WebVRPolyfill",
        "fuse",
        "getGeometry",
        "applyTranslate",
        "getLight",
        "update",
        "parseSide",
        "getFog",
        "createStats",
        "createEnterVR",
        "checkHeadsetConnected",
        "createOrientationModal",
        "init",
        "cloneValue",
        "getAnimationValues",
        "getForComponentAttribute",
        "getForCoordinateComponent",
        "getForBoolean",
        "getForNumber",
        "strToBool",
        "boolToNum",
        "mediaElementLoaded",
        "checkProgress",
        "attach",
        "updateComponent",
        "checkComponentDefined",
        "isComponentMixedIn",
        "pauseComponent",
        "playComponent",
        "wrapANodeMethods",
        "wrapAEntityMethods",
        "wrapMethods",
        "wrapMethod",
        "copyProperties",
        "buildData",
        "applyMixin",
        "extendProperties",
        "registerPropertyType",
        "arrayParse",
        "trim",
        "arrayStringify",
        "defaultParse",
        "defaultStringify",
        "boolParse",
        "intParse",
        "numberParse",
        "selectorParse",
        "selectorAllParse",
        "selectorStringify",
        "selectorAllStringify",
        "srcParse",
        "vecParse",
        "play",
        "getCanvasSize",
        "setFullscreen",
        "fullscreenChangeHandler",
        "iframedFullscreenChangeHandler",
        "enterFullscreenHandler",
        "exitFullscreenHandler",
        "Meta",
        "Link",
        "createAndInjectTag",
        "createTag",
        "isSingleProperty",
        "processPropertyDefinition",
        "parseProperty",
        "stringifyProperty",
        "processSquema",
        "processData",
        "cloneObject",
        "_update",
        "_start",
        "_end",
        "_attach",
        "getMaterialData",
        "getMaterialData",
        "removeDefaultCamera",
        "parse",
        "stringify",
        "vecParseFloat",
        "getDebugNamespaceType",
        "getDebugNamespaceColor",
        "storage",
        "deepEqual",
        "copyAttribute",
        "validateSrc",
        "validateCubemapSrc",
        "isImageCb",
        "parseUrl",
        "validateImageUrl",
        "onLoad",
        "onError",
        "validateAndGetQuerySelector",
        "toCamelCase",
        "camelCase",
        "transformKeysToCamelCase",
        "loadImage",
        "handleImageTextureLoaded",
        "loadVideo",
        "handleVideoTextureLoaded",
        "calculateVideoCacheHash",
        "updateMaterial",
        "loadImageTexture",
        "doLoadImageTexture",
        "createTexture",
        "createVideoEl",
        "fixVideoAttributes",
        "clearTextureCache",
        "_h",
        "_update",
        "_start",
        "_end",
        "_attach",
        "_update",
        "_start",
        "_end",
        "_attach",
        "_size",
        "_update",
        "_start",
        "_end",
        "_attach",
        "iterateKeys",
        "importCSS",
        "Graph",
        "_init",
        "_draw",
        "StackGraph",
        "_init",
        "_draw",
        "PerfCounter",
        "_average",
        "_start",
        "_end",
        "_tick",
        "_draw",
        "_frame",
        "_set",
        "sample",
        "_set",
        "_perf",
        "_init",
        "_update",
        "AndroidWakeLock",
        "iOSWakeLock",
        "getWakeLock",
        "Timeout",
        "cleanUpNextTick",
        "drainQueue",
        "Item",
        "noop",
        "parseUri",
        "findColladaObjects"
    ],
    "classes": []
}