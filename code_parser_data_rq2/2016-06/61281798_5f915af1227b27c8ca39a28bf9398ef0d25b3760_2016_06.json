{
    "identifiers": [
        "org",
        "gradoop",
        "datagen",
        "transactions",
        "predictable",
        "com",
        "google",
        "common",
        "collect",
        "Lists",
        "com",
        "google",
        "common",
        "collect",
        "Sets",
        "org",
        "apache",
        "flink",
        "api",
        "common",
        "functions",
        "MapFunction",
        "org",
        "apache",
        "flink",
        "api",
        "common",
        "typeinfo",
        "TypeInformation",
        "org",
        "apache",
        "flink",
        "api",
        "java",
        "typeutils",
        "ResultTypeQueryable",
        "org",
        "apache",
        "flink",
        "api",
        "java",
        "typeutils",
        "TupleTypeInfo",
        "org",
        "apache",
        "flink",
        "api",
        "java",
        "typeutils",
        "TypeExtractor",
        "org",
        "gradoop",
        "model",
        "api",
        "EPGMEdge",
        "org",
        "gradoop",
        "model",
        "api",
        "EPGMEdgeFactory",
        "org",
        "gradoop",
        "model",
        "api",
        "EPGMGraphHead",
        "org",
        "gradoop",
        "model",
        "api",
        "EPGMGraphHeadFactory",
        "org",
        "gradoop",
        "model",
        "api",
        "EPGMVertex",
        "org",
        "gradoop",
        "model",
        "api",
        "EPGMVertexFactory",
        "org",
        "gradoop",
        "model",
        "impl",
        "id",
        "GradoopId",
        "org",
        "gradoop",
        "model",
        "impl",
        "id",
        "GradoopIdSet",
        "org",
        "gradoop",
        "model",
        "impl",
        "tuples",
        "GraphTransaction",
        "org",
        "gradoop",
        "util",
        "GradoopFlinkConfig",
        "java",
        "util",
        "java",
        "util",
        "VERTEX_LABELS",
        "Lists",
        "newArrayList",
        "graphSize",
        "multigraph",
        "graphHeadFactory",
        "vertexFactory",
        "edgeFactory",
        "graphSize",
        "multigraph",
        "config",
        "multigraph",
        "multigraph",
        "graphSize",
        "graphSize",
        "graphHeadFactory",
        "config",
        "getGraphHeadFactory",
        "vertexFactory",
        "config",
        "getVertexFactory",
        "edgeFactory",
        "config",
        "getEdgeFactory",
        "Override",
        "graphNumber",
        "maxVertexLabelIndex",
        "graphNumber",
        "graphHead",
        "graphHeadFactory",
        "createGraphHead",
        "valueOf",
        "maxVertexLabelIndex",
        "vertices",
        "Sets",
        "newHashSet",
        "edges",
        "Sets",
        "newHashSet",
        "graphIds",
        "GradoopIdSet",
        "fromExisting",
        "graphHead",
        "getId",
        "centerVertex",
        "vertexFactory",
        "createVertex",
        "graphIds",
        "vertices",
        "add",
        "centerVertex",
        "vertexLabelIndex",
        "vertexLabelIndex",
        "maxVertexLabelIndex",
        "vertexLabelIndex",
        "vertexLabel",
        "VERTEX_LABELS",
        "get",
        "vertexLabelIndex",
        "patternCopy",
        "patternCopy",
        "graphSize",
        "patternCopy",
        "addPattern",
        "vertexLabel",
        "centerVertex",
        "vertices",
        "edges",
        "vertex",
        "vertices",
        "vertex",
        "setGraphIds",
        "graphIds",
        "edge",
        "edges",
        "edge",
        "setGraphIds",
        "graphIds",
        "graphHead",
        "vertices",
        "edges",
        "vertexLabel",
        "centerVertex",
        "vertices",
        "edges",
        "multiBottomId",
        "createVertex",
        "vertexLabel",
        "vertices",
        "createEdge",
        "centerVertex",
        "getId",
        "multiBottomId",
        "toString",
        "multiBottomId",
        "edges",
        "multigraph",
        "multiTopId",
        "createVertex",
        "vertexLabel",
        "vertices",
        "createEdge",
        "multiBottomId",
        "multiTopId",
        "edges",
        "createEdge",
        "multiTopId",
        "multiBottomId",
        "edges",
        "createEdge",
        "multiTopId",
        "multiBottomId",
        "edges",
        "createEdge",
        "multiTopId",
        "multiTopId",
        "edges",
        "mirrorBottomId",
        "createVertex",
        "vertexLabel",
        "vertices",
        "mirrorTopId",
        "createVertex",
        "vertexLabel",
        "vertices",
        "mirrorLeftId",
        "createVertex",
        "vertexLabel",
        "vertices",
        "mirrorRightId",
        "createVertex",
        "vertexLabel",
        "vertices",
        "createEdge",
        "mirrorBottomId",
        "mirrorLeftId",
        "edges",
        "createEdge",
        "mirrorBottomId",
        "mirrorRightId",
        "edges",
        "createEdge",
        "mirrorLeftId",
        "mirrorTopId",
        "edges",
        "createEdge",
        "mirrorRightId",
        "mirrorTopId",
        "edges",
        "createEdge",
        "mirrorBottomId",
        "multiBottomId",
        "edges",
        "cycleBottomId",
        "createVertex",
        "vertexLabel",
        "vertices",
        "cycleLeftId",
        "createVertex",
        "vertexLabel",
        "vertices",
        "cycleRightId",
        "createVertex",
        "vertexLabel",
        "vertices",
        "createEdge",
        "cycleBottomId",
        "cycleLeftId",
        "edges",
        "createEdge",
        "cycleLeftId",
        "cycleRightId",
        "edges",
        "createEdge",
        "cycleRightId",
        "cycleBottomId",
        "edges",
        "createEdge",
        "cycleBottomId",
        "multiBottomId",
        "edges",
        "vertexLabel",
        "vertices",
        "vertex",
        "vertexFactory",
        "createVertex",
        "vertexLabel",
        "vertices",
        "add",
        "vertex",
        "vertex",
        "getId",
        "sourceId",
        "label",
        "targetId",
        "edges",
        "edges",
        "add",
        "edgeFactory",
        "createEdge",
        "label",
        "sourceId",
        "targetId",
        "Override",
        "TypeExtractor",
        "getForClass",
        "graphHeadFactory",
        "getType",
        "TypeExtractor",
        "getForClass",
        "TypeExtractor",
        "getForClass"
    ],
    "literals": [
        "\"A\"",
        "\"B\"",
        "\"C\"",
        "\"D\"",
        "\"E\"",
        "\"F\"",
        "\"G\"",
        "\"H\"",
        "\"J\"",
        "\"K\"",
        "\"S\"",
        "\"p\"",
        "\"p\"",
        "\"p\"",
        "\"l\"",
        "\"m\"",
        "\"m\"",
        "\"m\"",
        "\"m\"",
        "\"s\"",
        "\"c\"",
        "\"c\"",
        "\"c\"",
        "\"s\""
    ],
    "variables": [
        "graphSize",
        "multigraph",
        "graphHeadFactory",
        "vertexFactory",
        "edgeFactory"
    ],
    "comments": [
        "parallel edges and loop",
        "mirror",
        "cycle"
    ],
    "docstrings": [
        "* This file is part of Gradoop.\n *\n * Gradoop is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Gradoop is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Gradoop. If not, see <http://www.gnu.org/licenses/>.",
        "* graphNumber => GraphTransaction\n *\n * @param <G> graph head type\n * @param <V> vertex type\n * @param <E> edge type",
        "* list of vertex labels",
        "* sets the minimum number of embeddings per subgraph pattern.",
        "* sets the graph type: true => multigraph, false => simple graph",
        "* EPGM graph head factory",
        "* EPGM vertex factory",
        "* EPGM edge factory",
        "* constructor\n   *\n   * @param graphSize minimum number of embeddings per subgraph pattern\n   * @param multigraph multigraph mode\n   * @param config Gradoop Flink configuration",
        "* Adds a predictable pattern to the graph transaction. All vertices\n   * will have a specified vertex label and the pattern will be connected to\n   * the center vertex by an unique labelled edge.\n   *\n   * @param vertexLabel label of pattern vertices\n   * @param centerVertex center vertex\n   * @param vertices stores created vertices\n   * @param edges stores created edges",
        "* creates a vertex\n   *\n   * @param vertexLabel vertex label\n   * @param vertices stores the vertex\n   * @return id of the created vertex",
        "* creates an edge\n   *\n   * @param sourceId source vertex id\n   * @param label edge label\n   * @param targetId target vertex id\n   * @param edges stores the edge"
    ],
    "functions": [
        "PredictableTransaction",
        "addPattern",
        "GradoopId",
        "createVertex",
        "createEdge",
        "getProducedType"
    ],
    "classes": [
        "PredictableTransaction"
    ]
}