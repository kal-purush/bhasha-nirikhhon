{
    "identifiers": [
        "isiPhone",
        "navigator",
        "isIE",
        "navigator",
        "fn",
        "fn",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "get",
        "property",
        "receiver",
        "property",
        "desc",
        "parent",
        "get",
        "parent",
        "property",
        "receiver",
        "desc",
        "desc",
        "desc",
        "getter",
        "getter",
        "receiver",
        "subClass",
        "superClass",
        "superClass",
        "superClass",
        "superClass",
        "subClass",
        "superClass",
        "superClass",
        "subClass",
        "superClass",
        "subClass",
        "superClass",
        "subClass",
        "superClass",
        "call",
        "ReferenceError",
        "call",
        "call",
        "call",
        "call",
        "createCommonjsModule",
        "exports",
        "define",
        "define",
        "define",
        "THREE",
        "exports",
        "THREE",
        "x",
        "x",
        "x",
        "x",
        "get",
        "value",
        "target",
        "target",
        "target",
        "target",
        "arguments",
        "i",
        "n",
        "i",
        "arguments",
        "i",
        "nextSource",
        "nextSource",
        "nextSource",
        "nextSource",
        "nextSource",
        "keysArray",
        "nextIndex",
        "len",
        "nextIndex",
        "keysArray",
        "nextIndex",
        "nextSource",
        "nextKey",
        "desc",
        "desc",
        "to",
        "nextKey",
        "nextSource",
        "nextKey",
        "to",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "uuid",
        "i",
        "i",
        "uuid",
        "i",
        "rnd",
        "rnd",
        "r",
        "rnd",
        "rnd",
        "rnd",
        "uuid",
        "i",
        "chars",
        "i",
        "r",
        "r",
        "uuid",
        "clamp",
        "value",
        "min",
        "max",
        "min",
        "max",
        "value",
        "euclideanModulo",
        "n",
        "m",
        "n",
        "m",
        "m",
        "m",
        "mapLinear",
        "x",
        "a1",
        "a2",
        "b1",
        "b2",
        "b1",
        "x",
        "a1",
        "b2",
        "b1",
        "a2",
        "a1",
        "smoothstep",
        "x",
        "min",
        "max",
        "x",
        "min",
        "x",
        "max",
        "x",
        "x",
        "min",
        "max",
        "min",
        "x",
        "x",
        "x",
        "smootherstep",
        "x",
        "min",
        "max",
        "x",
        "min",
        "x",
        "max",
        "x",
        "x",
        "min",
        "max",
        "min",
        "x",
        "x",
        "x",
        "x",
        "x",
        "random16",
        "randInt",
        "low",
        "high",
        "low",
        "high",
        "low",
        "randFloat",
        "low",
        "high",
        "low",
        "high",
        "low",
        "randFloatSpread",
        "degrees",
        "degrees",
        "degreeToRadiansFactor",
        "radians",
        "radians",
        "radianToDegreesFactor",
        "isPowerOfTwo",
        "value",
        "value",
        "value",
        "value",
        "nearestPowerOfTwo",
        "value",
        "value",
        "nextPowerOfTwo",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "THREE",
        "color",
        "arguments",
        "arguments",
        "color",
        "THREE",
        "THREE",
        "value",
        "value",
        "THREE",
        "value",
        "value",
        "value",
        "value",
        "value",
        "setScalar",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "setHex",
        "hex",
        "hex",
        "hex",
        "hex",
        "hex",
        "hex",
        "setRGB",
        "r",
        "g",
        "b",
        "r",
        "g",
        "b",
        "p",
        "q",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "p",
        "q",
        "p",
        "t",
        "t",
        "q",
        "t",
        "p",
        "q",
        "p",
        "t",
        "p",
        "h",
        "s",
        "l",
        "h",
        "THREE",
        "h",
        "s",
        "THREE",
        "s",
        "l",
        "THREE",
        "l",
        "s",
        "l",
        "l",
        "l",
        "s",
        "l",
        "s",
        "l",
        "s",
        "l",
        "p",
        "hue2rgb",
        "q",
        "p",
        "h",
        "hue2rgb",
        "q",
        "p",
        "h",
        "hue2rgb",
        "q",
        "p",
        "h",
        "setStyle",
        "style",
        "parseFloat",
        "m",
        "style",
        "m",
        "m",
        "name",
        "color",
        "components",
        "parseInt",
        "color",
        "parseInt",
        "color",
        "parseInt",
        "color",
        "handleAlpha",
        "color",
        "color",
        "components",
        "parseInt",
        "color",
        "parseInt",
        "color",
        "parseInt",
        "color",
        "handleAlpha",
        "color",
        "color",
        "components",
        "parseFloat",
        "color",
        "parseInt",
        "color",
        "parseInt",
        "color",
        "handleAlpha",
        "color",
        "h",
        "s",
        "l",
        "m",
        "style",
        "m",
        "hex",
        "size",
        "parseInt",
        "hex",
        "hex",
        "parseInt",
        "hex",
        "hex",
        "parseInt",
        "hex",
        "hex",
        "size",
        "parseInt",
        "hex",
        "hex",
        "parseInt",
        "hex",
        "hex",
        "parseInt",
        "hex",
        "hex",
        "style",
        "style",
        "THREE",
        "style",
        "hex",
        "hex",
        "clone",
        "copy",
        "color",
        "color",
        "color",
        "color",
        "copyGammaToLinear",
        "color",
        "gammaFactor",
        "gammaFactor",
        "gammaFactor",
        "color",
        "gammaFactor",
        "color",
        "gammaFactor",
        "color",
        "gammaFactor",
        "copyLinearToGamma",
        "color",
        "gammaFactor",
        "gammaFactor",
        "gammaFactor",
        "gammaFactor",
        "gammaFactor",
        "color",
        "safeInverse",
        "color",
        "safeInverse",
        "color",
        "safeInverse",
        "convertGammaToLinear",
        "r",
        "r",
        "g",
        "g",
        "b",
        "b",
        "convertLinearToGamma",
        "getHex",
        "getHexString",
        "getHSL",
        "optionalTarget",
        "optionalTarget",
        "r",
        "g",
        "b",
        "r",
        "g",
        "b",
        "min",
        "max",
        "min",
        "max",
        "hue",
        "saturation",
        "max",
        "min",
        "saturation",
        "lightness",
        "delta",
        "max",
        "min",
        "delta",
        "max",
        "min",
        "max",
        "r",
        "hue",
        "g",
        "b",
        "delta",
        "g",
        "b",
        "g",
        "hue",
        "b",
        "r",
        "delta",
        "b",
        "hue",
        "r",
        "g",
        "delta",
        "hue",
        "hsl",
        "hue",
        "hsl",
        "saturation",
        "hsl",
        "lightness",
        "hsl",
        "getStyle",
        "offsetHSL",
        "h",
        "s",
        "l",
        "hsl",
        "h",
        "hsl",
        "s",
        "hsl",
        "l",
        "hsl",
        "hsl",
        "hsl",
        "add",
        "color",
        "color",
        "color",
        "color",
        "addColors",
        "color1",
        "color2",
        "color1",
        "color2",
        "color1",
        "color2",
        "color1",
        "color2",
        "addScalar",
        "s",
        "s",
        "s",
        "s",
        "multiply",
        "color",
        "color",
        "color",
        "color",
        "multiplyScalar",
        "s",
        "s",
        "s",
        "s",
        "lerp",
        "color",
        "alpha",
        "color",
        "alpha",
        "color",
        "alpha",
        "color",
        "alpha",
        "equals",
        "c",
        "c",
        "c",
        "c",
        "fromArray",
        "array",
        "offset",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "toArray",
        "array",
        "offset",
        "array",
        "array",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "THREE",
        "THREE",
        "x",
        "y",
        "x",
        "y",
        "THREE",
        "THREE",
        "value",
        "value",
        "value",
        "value",
        "x",
        "y",
        "x",
        "y",
        "setScalar",
        "scalar",
        "scalar",
        "scalar",
        "setX",
        "x",
        "x",
        "setY",
        "y",
        "y",
        "setComponent",
        "index",
        "value",
        "index",
        "value",
        "value",
        "index",
        "getComponent",
        "index",
        "index",
        "index",
        "clone",
        "copy",
        "v",
        "v",
        "v",
        "add",
        "v",
        "w",
        "w",
        "v",
        "w",
        "v",
        "v",
        "addScalar",
        "s",
        "s",
        "s",
        "addVectors",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "addScaledVector",
        "v",
        "s",
        "v",
        "s",
        "v",
        "s",
        "sub",
        "v",
        "w",
        "w",
        "v",
        "w",
        "v",
        "v",
        "subScalar",
        "s",
        "s",
        "s",
        "subVectors",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "multiply",
        "v",
        "v",
        "v",
        "multiplyScalar",
        "scalar",
        "isFinite",
        "scalar",
        "scalar",
        "scalar",
        "divide",
        "v",
        "v",
        "v",
        "divideScalar",
        "scalar",
        "scalar",
        "min",
        "v",
        "v",
        "v",
        "max",
        "v",
        "v",
        "v",
        "clamp",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "clampScalar",
        "minVal",
        "maxVal",
        "min",
        "min",
        "THREE",
        "max",
        "THREE",
        "min",
        "minVal",
        "minVal",
        "max",
        "maxVal",
        "maxVal",
        "min",
        "max",
        "clampLength",
        "min",
        "max",
        "min",
        "max",
        "length",
        "length",
        "floor",
        "ceil",
        "round",
        "roundToZero",
        "negate",
        "dot",
        "v",
        "v",
        "v",
        "lengthSq",
        "length",
        "lengthManhattan",
        "normalize",
        "angle",
        "angle",
        "angle",
        "angle",
        "distanceTo",
        "v",
        "v",
        "distanceToSquared",
        "v",
        "v",
        "v",
        "dx",
        "dx",
        "dy",
        "dy",
        "setLength",
        "length",
        "length",
        "lerp",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "lerpVectors",
        "v1",
        "v2",
        "alpha",
        "v2",
        "v1",
        "alpha",
        "v1",
        "equals",
        "v",
        "v",
        "v",
        "fromArray",
        "array",
        "offset",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "toArray",
        "array",
        "offset",
        "array",
        "array",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "fromAttribute",
        "attribute",
        "index",
        "offset",
        "offset",
        "offset",
        "index",
        "index",
        "attribute",
        "offset",
        "attribute",
        "index",
        "attribute",
        "index",
        "rotateAround",
        "center",
        "angle",
        "angle",
        "angle",
        "center",
        "center",
        "x",
        "c",
        "y",
        "s",
        "center",
        "x",
        "s",
        "y",
        "c",
        "center",
        "THREE",
        "x",
        "y",
        "z",
        "x",
        "y",
        "z",
        "THREE",
        "THREE",
        "x",
        "y",
        "z",
        "x",
        "y",
        "z",
        "setScalar",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "setX",
        "x",
        "x",
        "setY",
        "y",
        "y",
        "setZ",
        "z",
        "z",
        "setComponent",
        "index",
        "value",
        "index",
        "value",
        "value",
        "value",
        "index",
        "getComponent",
        "index",
        "index",
        "index",
        "clone",
        "copy",
        "v",
        "v",
        "v",
        "v",
        "add",
        "v",
        "w",
        "w",
        "v",
        "w",
        "v",
        "v",
        "v",
        "addScalar",
        "s",
        "s",
        "s",
        "s",
        "addVectors",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "addScaledVector",
        "v",
        "s",
        "v",
        "s",
        "v",
        "s",
        "v",
        "s",
        "sub",
        "v",
        "w",
        "w",
        "v",
        "w",
        "v",
        "v",
        "v",
        "subScalar",
        "s",
        "s",
        "s",
        "s",
        "subVectors",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "multiply",
        "v",
        "w",
        "w",
        "v",
        "w",
        "v",
        "v",
        "v",
        "multiplyScalar",
        "scalar",
        "isFinite",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "multiplyVectors",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "applyEuler",
        "euler",
        "euler",
        "THREE",
        "quaternion",
        "quaternion",
        "THREE",
        "quaternion",
        "euler",
        "applyAxisAngle",
        "axis",
        "angle",
        "quaternion",
        "quaternion",
        "THREE",
        "quaternion",
        "axis",
        "angle",
        "applyMatrix3",
        "m",
        "m",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "applyMatrix4",
        "m",
        "m",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "applyProjection",
        "m",
        "m",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "d",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "d",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "d",
        "applyQuaternion",
        "q",
        "q",
        "q",
        "q",
        "q",
        "qw",
        "x",
        "qy",
        "z",
        "qz",
        "y",
        "qw",
        "y",
        "qz",
        "x",
        "qx",
        "z",
        "qw",
        "z",
        "qx",
        "y",
        "qy",
        "x",
        "qx",
        "x",
        "qy",
        "y",
        "qz",
        "z",
        "ix",
        "qw",
        "iw",
        "qx",
        "iy",
        "qz",
        "iz",
        "qy",
        "iy",
        "qw",
        "iw",
        "qy",
        "iz",
        "qx",
        "ix",
        "qz",
        "iz",
        "qw",
        "iw",
        "qz",
        "ix",
        "qy",
        "iy",
        "qx",
        "project",
        "camera",
        "matrix",
        "matrix",
        "THREE",
        "matrix",
        "camera",
        "matrix",
        "camera",
        "matrix",
        "unproject",
        "camera",
        "matrix",
        "matrix",
        "THREE",
        "matrix",
        "camera",
        "matrix",
        "camera",
        "matrix",
        "transformDirection",
        "m",
        "m",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "divide",
        "v",
        "v",
        "v",
        "v",
        "divideScalar",
        "scalar",
        "scalar",
        "min",
        "v",
        "v",
        "v",
        "v",
        "max",
        "v",
        "v",
        "v",
        "v",
        "clamp",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "clampScalar",
        "minVal",
        "maxVal",
        "min",
        "min",
        "THREE",
        "max",
        "THREE",
        "min",
        "minVal",
        "minVal",
        "minVal",
        "max",
        "maxVal",
        "maxVal",
        "maxVal",
        "min",
        "max",
        "clampLength",
        "min",
        "max",
        "min",
        "max",
        "length",
        "length",
        "floor",
        "ceil",
        "round",
        "roundToZero",
        "negate",
        "dot",
        "v",
        "v",
        "v",
        "v",
        "lengthSq",
        "length",
        "lengthManhattan",
        "normalize",
        "setLength",
        "length",
        "length",
        "lerp",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "lerpVectors",
        "v1",
        "v2",
        "alpha",
        "v2",
        "v1",
        "alpha",
        "v1",
        "cross",
        "v",
        "w",
        "w",
        "v",
        "w",
        "y",
        "v",
        "z",
        "v",
        "z",
        "v",
        "x",
        "v",
        "x",
        "v",
        "y",
        "v",
        "crossVectors",
        "a",
        "b",
        "a",
        "a",
        "a",
        "b",
        "b",
        "b",
        "ay",
        "bz",
        "az",
        "by",
        "az",
        "bx",
        "ax",
        "bz",
        "ax",
        "by",
        "ay",
        "bx",
        "projectOnVector",
        "vector",
        "v1",
        "v1",
        "THREE",
        "v1",
        "vector",
        "dot",
        "v1",
        "v1",
        "dot",
        "projectOnPlane",
        "planeNormal",
        "v1",
        "v1",
        "THREE",
        "v1",
        "planeNormal",
        "v1",
        "reflect",
        "normal",
        "v1",
        "v1",
        "THREE",
        "v1",
        "normal",
        "normal",
        "angleTo",
        "v",
        "v",
        "v",
        "THREE",
        "theta",
        "distanceTo",
        "v",
        "v",
        "distanceToSquared",
        "v",
        "v",
        "v",
        "v",
        "dx",
        "dx",
        "dy",
        "dy",
        "dz",
        "dz",
        "setFromSpherical",
        "s",
        "s",
        "s",
        "sinPhiRadius",
        "s",
        "s",
        "s",
        "sinPhiRadius",
        "s",
        "setFromMatrixPosition",
        "m",
        "m",
        "setFromMatrixScale",
        "m",
        "m",
        "m",
        "m",
        "sx",
        "sy",
        "sz",
        "setFromMatrixColumn",
        "m",
        "index",
        "m",
        "m",
        "arguments",
        "index",
        "arguments",
        "m",
        "index",
        "equals",
        "v",
        "v",
        "v",
        "v",
        "fromArray",
        "array",
        "offset",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "toArray",
        "array",
        "offset",
        "array",
        "array",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "fromAttribute",
        "attribute",
        "index",
        "offset",
        "offset",
        "offset",
        "index",
        "index",
        "attribute",
        "offset",
        "attribute",
        "index",
        "attribute",
        "index",
        "attribute",
        "index",
        "THREE",
        "x",
        "y",
        "z",
        "w",
        "x",
        "y",
        "z",
        "w",
        "w",
        "THREE",
        "THREE",
        "x",
        "y",
        "z",
        "w",
        "x",
        "y",
        "z",
        "w",
        "setScalar",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "setX",
        "x",
        "x",
        "setY",
        "y",
        "y",
        "setZ",
        "z",
        "z",
        "setW",
        "w",
        "w",
        "setComponent",
        "index",
        "value",
        "index",
        "value",
        "value",
        "value",
        "value",
        "index",
        "getComponent",
        "index",
        "index",
        "index",
        "clone",
        "copy",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "add",
        "v",
        "w",
        "w",
        "v",
        "w",
        "v",
        "v",
        "v",
        "v",
        "addScalar",
        "s",
        "s",
        "s",
        "s",
        "s",
        "addVectors",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "addScaledVector",
        "v",
        "s",
        "v",
        "s",
        "v",
        "s",
        "v",
        "s",
        "v",
        "s",
        "sub",
        "v",
        "w",
        "w",
        "v",
        "w",
        "v",
        "v",
        "v",
        "v",
        "subScalar",
        "s",
        "s",
        "s",
        "s",
        "s",
        "subVectors",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "multiplyScalar",
        "scalar",
        "isFinite",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "scalar",
        "applyMatrix4",
        "m",
        "m",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "w",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "w",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "w",
        "e",
        "x",
        "e",
        "y",
        "e",
        "z",
        "e",
        "w",
        "divideScalar",
        "scalar",
        "scalar",
        "setAxisAngleFromQuaternion",
        "q",
        "q",
        "q",
        "q",
        "s",
        "q",
        "s",
        "q",
        "s",
        "q",
        "s",
        "setAxisAngleFromRotationMatrix",
        "m",
        "m",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "m12",
        "m21",
        "epsilon",
        "m13",
        "m31",
        "epsilon",
        "m23",
        "m32",
        "epsilon",
        "m12",
        "m21",
        "epsilon2",
        "m13",
        "m31",
        "epsilon2",
        "m23",
        "m32",
        "epsilon2",
        "m11",
        "m22",
        "m33",
        "epsilon2",
        "angle",
        "m11",
        "m22",
        "m33",
        "m12",
        "m21",
        "m13",
        "m31",
        "m23",
        "m32",
        "xx",
        "yy",
        "xx",
        "zz",
        "xx",
        "epsilon",
        "x",
        "y",
        "z",
        "x",
        "xx",
        "y",
        "xy",
        "x",
        "z",
        "xz",
        "x",
        "yy",
        "zz",
        "yy",
        "epsilon",
        "x",
        "y",
        "z",
        "y",
        "yy",
        "x",
        "xy",
        "y",
        "z",
        "yz",
        "y",
        "zz",
        "epsilon",
        "x",
        "y",
        "z",
        "z",
        "zz",
        "x",
        "xz",
        "z",
        "y",
        "yz",
        "z",
        "x",
        "y",
        "z",
        "angle",
        "m32",
        "m23",
        "m32",
        "m23",
        "m13",
        "m31",
        "m13",
        "m31",
        "m21",
        "m12",
        "m21",
        "m12",
        "s",
        "s",
        "m32",
        "m23",
        "s",
        "m13",
        "m31",
        "s",
        "m21",
        "m12",
        "s",
        "m11",
        "m22",
        "m33",
        "min",
        "v",
        "v",
        "v",
        "v",
        "v",
        "max",
        "v",
        "v",
        "v",
        "v",
        "v",
        "clamp",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "min",
        "max",
        "clampScalar",
        "minVal",
        "maxVal",
        "min",
        "min",
        "THREE",
        "max",
        "THREE",
        "min",
        "minVal",
        "minVal",
        "minVal",
        "minVal",
        "max",
        "maxVal",
        "maxVal",
        "maxVal",
        "maxVal",
        "min",
        "max",
        "floor",
        "ceil",
        "round",
        "roundToZero",
        "negate",
        "dot",
        "v",
        "v",
        "v",
        "v",
        "v",
        "lengthSq",
        "length",
        "lengthManhattan",
        "normalize",
        "setLength",
        "length",
        "length",
        "lerp",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "v",
        "alpha",
        "lerpVectors",
        "v1",
        "v2",
        "alpha",
        "v2",
        "v1",
        "alpha",
        "v1",
        "equals",
        "v",
        "v",
        "v",
        "v",
        "v",
        "fromArray",
        "array",
        "offset",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "toArray",
        "array",
        "offset",
        "array",
        "array",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "fromAttribute",
        "attribute",
        "index",
        "offset",
        "offset",
        "offset",
        "index",
        "index",
        "attribute",
        "offset",
        "attribute",
        "index",
        "attribute",
        "index",
        "attribute",
        "index",
        "attribute",
        "index",
        "THREE",
        "Float32Array",
        "arguments",
        "THREE",
        "THREE",
        "n11",
        "n12",
        "n13",
        "n21",
        "n22",
        "n23",
        "n31",
        "n32",
        "n33",
        "te",
        "n11",
        "te",
        "n21",
        "te",
        "n31",
        "te",
        "n12",
        "te",
        "n22",
        "te",
        "n32",
        "te",
        "n13",
        "te",
        "n23",
        "te",
        "n33",
        "identity",
        "clone",
        "copy",
        "m",
        "m",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "setFromMatrix4",
        "m",
        "m",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "array",
        "offset",
        "length",
        "v1",
        "v1",
        "THREE",
        "offset",
        "offset",
        "length",
        "length",
        "array",
        "i",
        "length",
        "i",
        "j",
        "v1",
        "array",
        "j",
        "v1",
        "v1",
        "array",
        "j",
        "array",
        "applyToBuffer",
        "buffer",
        "offset",
        "length",
        "v1",
        "v1",
        "THREE",
        "offset",
        "offset",
        "length",
        "length",
        "buffer",
        "buffer",
        "i",
        "length",
        "i",
        "j",
        "v1",
        "buffer",
        "j",
        "v1",
        "buffer",
        "j",
        "v1",
        "buffer",
        "j",
        "v1",
        "buffer",
        "v1",
        "v1",
        "v1",
        "buffer",
        "multiplyScalar",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "determinant",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "a",
        "e",
        "i",
        "a",
        "f",
        "h",
        "b",
        "d",
        "i",
        "b",
        "f",
        "g",
        "c",
        "d",
        "h",
        "c",
        "e",
        "g",
        "getInverse",
        "matrix",
        "throwOnDegenerate",
        "matrix",
        "THREE",
        "matrix",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "n33",
        "n22",
        "n32",
        "n23",
        "n32",
        "n13",
        "n33",
        "n12",
        "n23",
        "n12",
        "n22",
        "n13",
        "n11",
        "t11",
        "n21",
        "t12",
        "n31",
        "t13",
        "det",
        "throwOnDegenerate",
        "te",
        "t11",
        "te",
        "n31",
        "n23",
        "n33",
        "n21",
        "te",
        "n32",
        "n21",
        "n31",
        "n22",
        "te",
        "t12",
        "te",
        "n33",
        "n11",
        "n31",
        "n13",
        "te",
        "n31",
        "n12",
        "n32",
        "n11",
        "te",
        "t13",
        "te",
        "n21",
        "n13",
        "n23",
        "n11",
        "te",
        "n22",
        "n11",
        "n21",
        "n12",
        "det",
        "transpose",
        "tmp",
        "m",
        "m",
        "m",
        "m",
        "tmp",
        "tmp",
        "m",
        "m",
        "m",
        "m",
        "tmp",
        "tmp",
        "m",
        "m",
        "m",
        "m",
        "tmp",
        "flattenToArrayOffset",
        "array",
        "offset",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "getNormalMatrix",
        "matrix4",
        "matrix4",
        "transposeIntoArray",
        "r",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "r",
        "m",
        "fromArray",
        "array",
        "array",
        "toArray",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "THREE",
        "Float32Array",
        "arguments",
        "THREE",
        "THREE",
        "n11",
        "n12",
        "n13",
        "n14",
        "n21",
        "n22",
        "n23",
        "n24",
        "n31",
        "n32",
        "n33",
        "n34",
        "n41",
        "n42",
        "n43",
        "n44",
        "te",
        "n11",
        "te",
        "n12",
        "te",
        "n13",
        "te",
        "n14",
        "te",
        "n21",
        "te",
        "n22",
        "te",
        "n23",
        "te",
        "n24",
        "te",
        "n31",
        "te",
        "n32",
        "te",
        "n33",
        "te",
        "n34",
        "te",
        "n41",
        "te",
        "n42",
        "te",
        "n43",
        "te",
        "n44",
        "identity",
        "clone",
        "THREE",
        "copy",
        "m",
        "m",
        "copyPosition",
        "m",
        "m",
        "te",
        "me",
        "te",
        "me",
        "te",
        "me",
        "extractBasis",
        "xAxis",
        "yAxis",
        "zAxis",
        "xAxis",
        "yAxis",
        "zAxis",
        "makeBasis",
        "xAxis",
        "yAxis",
        "zAxis",
        "xAxis",
        "yAxis",
        "zAxis",
        "xAxis",
        "yAxis",
        "zAxis",
        "xAxis",
        "yAxis",
        "zAxis",
        "m",
        "v1",
        "v1",
        "THREE",
        "m",
        "v1",
        "m",
        "v1",
        "m",
        "v1",
        "m",
        "te",
        "me",
        "scaleX",
        "te",
        "me",
        "scaleX",
        "te",
        "me",
        "scaleX",
        "te",
        "me",
        "scaleY",
        "te",
        "me",
        "scaleY",
        "te",
        "me",
        "scaleY",
        "te",
        "me",
        "scaleZ",
        "te",
        "me",
        "scaleZ",
        "te",
        "me",
        "scaleZ",
        "makeRotationFromEuler",
        "euler",
        "euler",
        "THREE",
        "euler",
        "euler",
        "euler",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "euler",
        "a",
        "e",
        "a",
        "f",
        "b",
        "e",
        "b",
        "f",
        "te",
        "c",
        "e",
        "te",
        "c",
        "f",
        "te",
        "d",
        "te",
        "af",
        "be",
        "d",
        "te",
        "ae",
        "bf",
        "d",
        "te",
        "b",
        "c",
        "te",
        "bf",
        "ae",
        "d",
        "te",
        "be",
        "af",
        "d",
        "te",
        "a",
        "c",
        "euler",
        "c",
        "e",
        "c",
        "f",
        "d",
        "e",
        "d",
        "f",
        "te",
        "ce",
        "df",
        "b",
        "te",
        "de",
        "b",
        "cf",
        "te",
        "a",
        "d",
        "te",
        "a",
        "f",
        "te",
        "a",
        "e",
        "te",
        "b",
        "te",
        "cf",
        "b",
        "de",
        "te",
        "df",
        "ce",
        "b",
        "te",
        "a",
        "c",
        "euler",
        "c",
        "e",
        "c",
        "f",
        "d",
        "e",
        "d",
        "f",
        "te",
        "ce",
        "df",
        "b",
        "te",
        "a",
        "f",
        "te",
        "de",
        "cf",
        "b",
        "te",
        "cf",
        "de",
        "b",
        "te",
        "a",
        "e",
        "te",
        "df",
        "ce",
        "b",
        "te",
        "a",
        "d",
        "te",
        "b",
        "te",
        "a",
        "c",
        "euler",
        "a",
        "e",
        "a",
        "f",
        "b",
        "e",
        "b",
        "f",
        "te",
        "c",
        "e",
        "te",
        "be",
        "d",
        "af",
        "te",
        "ae",
        "d",
        "bf",
        "te",
        "c",
        "f",
        "te",
        "bf",
        "d",
        "ae",
        "te",
        "af",
        "d",
        "be",
        "te",
        "d",
        "te",
        "b",
        "c",
        "te",
        "a",
        "c",
        "euler",
        "a",
        "c",
        "a",
        "d",
        "b",
        "c",
        "b",
        "d",
        "te",
        "c",
        "e",
        "te",
        "bd",
        "ac",
        "f",
        "te",
        "bc",
        "f",
        "ad",
        "te",
        "f",
        "te",
        "a",
        "e",
        "te",
        "b",
        "e",
        "te",
        "d",
        "e",
        "te",
        "ad",
        "f",
        "bc",
        "te",
        "ac",
        "bd",
        "f",
        "euler",
        "a",
        "c",
        "a",
        "d",
        "b",
        "c",
        "b",
        "d",
        "te",
        "c",
        "e",
        "te",
        "f",
        "te",
        "d",
        "e",
        "te",
        "ac",
        "f",
        "bd",
        "te",
        "a",
        "e",
        "te",
        "ad",
        "f",
        "bc",
        "te",
        "bc",
        "f",
        "ad",
        "te",
        "b",
        "e",
        "te",
        "bd",
        "f",
        "ac",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "makeRotationFromQuaternion",
        "q",
        "q",
        "q",
        "q",
        "q",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "x",
        "x2",
        "x",
        "y2",
        "x",
        "z2",
        "y",
        "y2",
        "y",
        "z2",
        "z",
        "z2",
        "w",
        "x2",
        "w",
        "y2",
        "w",
        "z2",
        "te",
        "yy",
        "zz",
        "te",
        "xy",
        "wz",
        "te",
        "xz",
        "wy",
        "te",
        "xy",
        "wz",
        "te",
        "xx",
        "zz",
        "te",
        "yz",
        "wx",
        "te",
        "xz",
        "wy",
        "te",
        "yz",
        "wx",
        "te",
        "xx",
        "yy",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "eye",
        "target",
        "up",
        "x",
        "x",
        "THREE",
        "y",
        "y",
        "THREE",
        "z",
        "z",
        "THREE",
        "z",
        "eye",
        "target",
        "z",
        "z",
        "x",
        "up",
        "z",
        "x",
        "z",
        "x",
        "up",
        "z",
        "y",
        "z",
        "x",
        "te",
        "x",
        "te",
        "y",
        "te",
        "z",
        "te",
        "x",
        "te",
        "y",
        "te",
        "z",
        "te",
        "x",
        "te",
        "y",
        "te",
        "z",
        "multiply",
        "m",
        "n",
        "n",
        "m",
        "n",
        "m",
        "multiplyMatrices",
        "a",
        "b",
        "a",
        "b",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "ae",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "be",
        "te",
        "a11",
        "b11",
        "a12",
        "b21",
        "a13",
        "b31",
        "a14",
        "b41",
        "te",
        "a11",
        "b12",
        "a12",
        "b22",
        "a13",
        "b32",
        "a14",
        "b42",
        "te",
        "a11",
        "b13",
        "a12",
        "b23",
        "a13",
        "b33",
        "a14",
        "b43",
        "te",
        "a11",
        "b14",
        "a12",
        "b24",
        "a13",
        "b34",
        "a14",
        "b44",
        "te",
        "a21",
        "b11",
        "a22",
        "b21",
        "a23",
        "b31",
        "a24",
        "b41",
        "te",
        "a21",
        "b12",
        "a22",
        "b22",
        "a23",
        "b32",
        "a24",
        "b42",
        "te",
        "a21",
        "b13",
        "a22",
        "b23",
        "a23",
        "b33",
        "a24",
        "b43",
        "te",
        "a21",
        "b14",
        "a22",
        "b24",
        "a23",
        "b34",
        "a24",
        "b44",
        "te",
        "a31",
        "b11",
        "a32",
        "b21",
        "a33",
        "b31",
        "a34",
        "b41",
        "te",
        "a31",
        "b12",
        "a32",
        "b22",
        "a33",
        "b32",
        "a34",
        "b42",
        "te",
        "a31",
        "b13",
        "a32",
        "b23",
        "a33",
        "b33",
        "a34",
        "b43",
        "te",
        "a31",
        "b14",
        "a32",
        "b24",
        "a33",
        "b34",
        "a34",
        "b44",
        "te",
        "a41",
        "b11",
        "a42",
        "b21",
        "a43",
        "b31",
        "a44",
        "b41",
        "te",
        "a41",
        "b12",
        "a42",
        "b22",
        "a43",
        "b32",
        "a44",
        "b42",
        "te",
        "a41",
        "b13",
        "a42",
        "b23",
        "a43",
        "b33",
        "a44",
        "b43",
        "te",
        "a41",
        "b14",
        "a42",
        "b24",
        "a43",
        "b34",
        "a44",
        "b44",
        "multiplyToArray",
        "a",
        "b",
        "r",
        "a",
        "b",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "r",
        "te",
        "multiplyScalar",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "te",
        "s",
        "array",
        "offset",
        "length",
        "v1",
        "v1",
        "THREE",
        "offset",
        "offset",
        "length",
        "length",
        "array",
        "i",
        "length",
        "i",
        "j",
        "v1",
        "array",
        "j",
        "v1",
        "v1",
        "array",
        "j",
        "array",
        "applyToBuffer",
        "buffer",
        "offset",
        "length",
        "v1",
        "v1",
        "THREE",
        "offset",
        "offset",
        "length",
        "length",
        "buffer",
        "buffer",
        "i",
        "length",
        "i",
        "j",
        "v1",
        "buffer",
        "j",
        "v1",
        "buffer",
        "j",
        "v1",
        "buffer",
        "j",
        "v1",
        "buffer",
        "v1",
        "v1",
        "v1",
        "buffer",
        "determinant",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "n41",
        "n14",
        "n23",
        "n32",
        "n13",
        "n24",
        "n32",
        "n14",
        "n22",
        "n33",
        "n12",
        "n24",
        "n33",
        "n13",
        "n22",
        "n34",
        "n12",
        "n23",
        "n34",
        "n42",
        "n11",
        "n23",
        "n34",
        "n11",
        "n24",
        "n33",
        "n14",
        "n21",
        "n33",
        "n13",
        "n21",
        "n34",
        "n13",
        "n24",
        "n31",
        "n14",
        "n23",
        "n31",
        "n43",
        "n11",
        "n24",
        "n32",
        "n11",
        "n22",
        "n34",
        "n14",
        "n21",
        "n32",
        "n12",
        "n21",
        "n34",
        "n14",
        "n22",
        "n31",
        "n12",
        "n24",
        "n31",
        "n44",
        "n13",
        "n22",
        "n31",
        "n11",
        "n23",
        "n32",
        "n11",
        "n22",
        "n33",
        "n13",
        "n21",
        "n32",
        "n12",
        "n21",
        "n33",
        "n12",
        "n23",
        "n31",
        "transpose",
        "tmp",
        "te",
        "te",
        "te",
        "te",
        "tmp",
        "tmp",
        "te",
        "te",
        "te",
        "te",
        "tmp",
        "tmp",
        "te",
        "te",
        "te",
        "te",
        "tmp",
        "tmp",
        "te",
        "te",
        "te",
        "te",
        "tmp",
        "tmp",
        "te",
        "te",
        "te",
        "te",
        "tmp",
        "tmp",
        "te",
        "te",
        "te",
        "te",
        "tmp",
        "flattenToArrayOffset",
        "array",
        "offset",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "offset",
        "te",
        "array",
        "v1",
        "v1",
        "THREE",
        "v1",
        "setPosition",
        "v",
        "te",
        "v",
        "te",
        "v",
        "te",
        "v",
        "getInverse",
        "m",
        "throwOnDegenerate",
        "m",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "n23",
        "n34",
        "n42",
        "n24",
        "n33",
        "n42",
        "n24",
        "n32",
        "n43",
        "n22",
        "n34",
        "n43",
        "n23",
        "n32",
        "n44",
        "n22",
        "n33",
        "n44",
        "n14",
        "n33",
        "n42",
        "n13",
        "n34",
        "n42",
        "n14",
        "n32",
        "n43",
        "n12",
        "n34",
        "n43",
        "n13",
        "n32",
        "n44",
        "n12",
        "n33",
        "n44",
        "n13",
        "n24",
        "n42",
        "n14",
        "n23",
        "n42",
        "n14",
        "n22",
        "n43",
        "n12",
        "n24",
        "n43",
        "n13",
        "n22",
        "n44",
        "n12",
        "n23",
        "n44",
        "n14",
        "n23",
        "n32",
        "n13",
        "n24",
        "n32",
        "n14",
        "n22",
        "n33",
        "n12",
        "n24",
        "n33",
        "n13",
        "n22",
        "n34",
        "n12",
        "n23",
        "n34",
        "n11",
        "t11",
        "n21",
        "t12",
        "n31",
        "t13",
        "n41",
        "t14",
        "det",
        "throwOnDegenerate",
        "te",
        "t11",
        "te",
        "n24",
        "n33",
        "n41",
        "n23",
        "n34",
        "n41",
        "n24",
        "n31",
        "n43",
        "n21",
        "n34",
        "n43",
        "n23",
        "n31",
        "n44",
        "n21",
        "n33",
        "n44",
        "te",
        "n22",
        "n34",
        "n41",
        "n24",
        "n32",
        "n41",
        "n24",
        "n31",
        "n42",
        "n21",
        "n34",
        "n42",
        "n22",
        "n31",
        "n44",
        "n21",
        "n32",
        "n44",
        "te",
        "n23",
        "n32",
        "n41",
        "n22",
        "n33",
        "n41",
        "n23",
        "n31",
        "n42",
        "n21",
        "n33",
        "n42",
        "n22",
        "n31",
        "n43",
        "n21",
        "n32",
        "n43",
        "te",
        "t12",
        "te",
        "n13",
        "n34",
        "n41",
        "n14",
        "n33",
        "n41",
        "n14",
        "n31",
        "n43",
        "n11",
        "n34",
        "n43",
        "n13",
        "n31",
        "n44",
        "n11",
        "n33",
        "n44",
        "te",
        "n14",
        "n32",
        "n41",
        "n12",
        "n34",
        "n41",
        "n14",
        "n31",
        "n42",
        "n11",
        "n34",
        "n42",
        "n12",
        "n31",
        "n44",
        "n11",
        "n32",
        "n44",
        "te",
        "n12",
        "n33",
        "n41",
        "n13",
        "n32",
        "n41",
        "n13",
        "n31",
        "n42",
        "n11",
        "n33",
        "n42",
        "n12",
        "n31",
        "n43",
        "n11",
        "n32",
        "n43",
        "te",
        "t13",
        "te",
        "n14",
        "n23",
        "n41",
        "n13",
        "n24",
        "n41",
        "n14",
        "n21",
        "n43",
        "n11",
        "n24",
        "n43",
        "n13",
        "n21",
        "n44",
        "n11",
        "n23",
        "n44",
        "te",
        "n12",
        "n24",
        "n41",
        "n14",
        "n22",
        "n41",
        "n14",
        "n21",
        "n42",
        "n11",
        "n24",
        "n42",
        "n12",
        "n21",
        "n44",
        "n11",
        "n22",
        "n44",
        "te",
        "n13",
        "n22",
        "n41",
        "n12",
        "n23",
        "n41",
        "n13",
        "n21",
        "n42",
        "n11",
        "n23",
        "n42",
        "n12",
        "n21",
        "n43",
        "n11",
        "n22",
        "n43",
        "te",
        "t14",
        "te",
        "n13",
        "n24",
        "n31",
        "n14",
        "n23",
        "n31",
        "n14",
        "n21",
        "n33",
        "n11",
        "n24",
        "n33",
        "n13",
        "n21",
        "n34",
        "n11",
        "n23",
        "n34",
        "te",
        "n14",
        "n22",
        "n31",
        "n12",
        "n24",
        "n31",
        "n14",
        "n21",
        "n32",
        "n11",
        "n24",
        "n32",
        "n12",
        "n21",
        "n34",
        "n11",
        "n22",
        "n34",
        "te",
        "n12",
        "n23",
        "n31",
        "n13",
        "n22",
        "n31",
        "n13",
        "n21",
        "n32",
        "n11",
        "n23",
        "n32",
        "n12",
        "n21",
        "n33",
        "n11",
        "n22",
        "n33",
        "det",
        "scale",
        "v",
        "v",
        "v",
        "v",
        "te",
        "x",
        "te",
        "y",
        "te",
        "z",
        "te",
        "x",
        "te",
        "y",
        "te",
        "z",
        "te",
        "x",
        "te",
        "y",
        "te",
        "z",
        "te",
        "x",
        "te",
        "y",
        "te",
        "z",
        "getMaxScaleOnAxis",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "scaleXSq",
        "scaleYSq",
        "scaleZSq",
        "makeTranslation",
        "x",
        "y",
        "z",
        "x",
        "y",
        "z",
        "makeRotationX",
        "theta",
        "theta",
        "theta",
        "c",
        "s",
        "s",
        "c",
        "makeRotationY",
        "theta",
        "theta",
        "theta",
        "c",
        "s",
        "s",
        "c",
        "makeRotationZ",
        "theta",
        "theta",
        "theta",
        "c",
        "s",
        "s",
        "c",
        "makeRotationAxis",
        "axis",
        "angle",
        "angle",
        "angle",
        "c",
        "axis",
        "axis",
        "axis",
        "t",
        "x",
        "t",
        "y",
        "tx",
        "x",
        "c",
        "tx",
        "y",
        "s",
        "z",
        "tx",
        "z",
        "s",
        "y",
        "tx",
        "y",
        "s",
        "z",
        "ty",
        "y",
        "c",
        "ty",
        "z",
        "s",
        "x",
        "tx",
        "z",
        "s",
        "y",
        "ty",
        "z",
        "s",
        "x",
        "t",
        "z",
        "z",
        "c",
        "makeScale",
        "x",
        "y",
        "z",
        "x",
        "y",
        "z",
        "compose",
        "position",
        "quaternion",
        "scale",
        "quaternion",
        "scale",
        "position",
        "position",
        "quaternion",
        "scale",
        "vector",
        "vector",
        "THREE",
        "matrix",
        "matrix",
        "THREE",
        "vector",
        "te",
        "te",
        "te",
        "vector",
        "te",
        "te",
        "te",
        "vector",
        "te",
        "te",
        "te",
        "det",
        "sx",
        "sx",
        "position",
        "te",
        "position",
        "te",
        "position",
        "te",
        "matrix",
        "sx",
        "sy",
        "sz",
        "matrix",
        "invSX",
        "matrix",
        "invSX",
        "matrix",
        "invSX",
        "matrix",
        "invSY",
        "matrix",
        "invSY",
        "matrix",
        "invSY",
        "matrix",
        "invSZ",
        "matrix",
        "invSZ",
        "matrix",
        "invSZ",
        "quaternion",
        "matrix",
        "scale",
        "sx",
        "scale",
        "sy",
        "scale",
        "sz",
        "makeFrustum",
        "left",
        "right",
        "bottom",
        "top",
        "near",
        "far",
        "near",
        "right",
        "left",
        "near",
        "top",
        "bottom",
        "right",
        "left",
        "right",
        "left",
        "top",
        "bottom",
        "top",
        "bottom",
        "far",
        "near",
        "far",
        "near",
        "far",
        "near",
        "far",
        "near",
        "te",
        "x",
        "te",
        "te",
        "a",
        "te",
        "te",
        "te",
        "y",
        "te",
        "b",
        "te",
        "te",
        "te",
        "te",
        "c",
        "te",
        "d",
        "te",
        "te",
        "te",
        "te",
        "makePerspective",
        "fov",
        "aspect",
        "near",
        "far",
        "near",
        "THREE",
        "fov",
        "ymax",
        "ymin",
        "aspect",
        "ymax",
        "aspect",
        "xmin",
        "xmax",
        "ymin",
        "ymax",
        "near",
        "far",
        "makeOrthographic",
        "left",
        "right",
        "top",
        "bottom",
        "near",
        "far",
        "right",
        "left",
        "top",
        "bottom",
        "far",
        "near",
        "right",
        "left",
        "w",
        "top",
        "bottom",
        "h",
        "far",
        "near",
        "p",
        "te",
        "w",
        "te",
        "te",
        "te",
        "x",
        "te",
        "te",
        "h",
        "te",
        "te",
        "y",
        "te",
        "te",
        "te",
        "p",
        "te",
        "z",
        "te",
        "te",
        "te",
        "te",
        "equals",
        "matrix",
        "matrix",
        "i",
        "i",
        "te",
        "i",
        "me",
        "i",
        "fromArray",
        "array",
        "array",
        "toArray",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "THREE",
        "normal",
        "constant",
        "normal",
        "normal",
        "THREE",
        "constant",
        "constant",
        "THREE",
        "THREE",
        "normal",
        "constant",
        "normal",
        "constant",
        "setComponents",
        "x",
        "y",
        "z",
        "w",
        "x",
        "y",
        "z",
        "w",
        "setFromNormalAndCoplanarPoint",
        "normal",
        "point",
        "normal",
        "point",
        "THREE",
        "THREE",
        "a",
        "b",
        "c",
        "v1",
        "c",
        "b",
        "v2",
        "a",
        "b",
        "normal",
        "a",
        "clone",
        "copy",
        "plane",
        "plane",
        "plane",
        "normalize",
        "inverseNormalLength",
        "inverseNormalLength",
        "negate",
        "distanceToPoint",
        "point",
        "point",
        "distanceToSphere",
        "sphere",
        "sphere",
        "sphere",
        "projectPoint",
        "point",
        "optionalTarget",
        "point",
        "optionalTarget",
        "point",
        "orthoPoint",
        "point",
        "optionalTarget",
        "point",
        "optionalTarget",
        "THREE",
        "result",
        "perpendicularMagnitude",
        "THREE",
        "line",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "line",
        "v1",
        "direction",
        "denominator",
        "line",
        "result",
        "line",
        "line",
        "denominator",
        "t",
        "t",
        "result",
        "direction",
        "t",
        "line",
        "intersectsLine",
        "line",
        "line",
        "line",
        "startSign",
        "endSign",
        "endSign",
        "startSign",
        "intersectsBox",
        "box",
        "box",
        "intersectsSphere",
        "sphere",
        "sphere",
        "coplanarPoint",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "THREE",
        "THREE",
        "THREE",
        "matrix",
        "optionalNormalMatrix",
        "optionalNormalMatrix",
        "m1",
        "matrix",
        "v1",
        "normalMatrix",
        "v2",
        "newCoplanarPoint",
        "matrix",
        "newNormal",
        "newCoplanarPoint",
        "translate",
        "offset",
        "offset",
        "equals",
        "plane",
        "plane",
        "plane",
        "THREE",
        "x",
        "y",
        "z",
        "w",
        "x",
        "y",
        "z",
        "w",
        "w",
        "THREE",
        "THREE",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "x",
        "y",
        "z",
        "w",
        "x",
        "y",
        "z",
        "w",
        "clone",
        "copy",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "setFromEuler",
        "euler",
        "update",
        "euler",
        "THREE",
        "euler",
        "euler",
        "euler",
        "euler",
        "euler",
        "euler",
        "euler",
        "order",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "order",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "order",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "order",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "order",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "order",
        "s1",
        "c2",
        "c3",
        "c1",
        "s2",
        "s3",
        "c1",
        "s2",
        "c3",
        "s1",
        "c2",
        "s3",
        "c1",
        "c2",
        "s3",
        "s1",
        "s2",
        "c3",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "update",
        "setFromAxisAngle",
        "axis",
        "angle",
        "angle",
        "halfAngle",
        "axis",
        "s",
        "axis",
        "s",
        "axis",
        "s",
        "halfAngle",
        "setFromRotationMatrix",
        "m",
        "m",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "m11",
        "m22",
        "m33",
        "trace",
        "s",
        "trace",
        "s",
        "m32",
        "m23",
        "s",
        "m13",
        "m31",
        "s",
        "m21",
        "m12",
        "s",
        "m11",
        "m22",
        "m11",
        "m33",
        "s",
        "m11",
        "m22",
        "m33",
        "m32",
        "m23",
        "s",
        "s",
        "m12",
        "m21",
        "s",
        "m13",
        "m31",
        "s",
        "m22",
        "m33",
        "s",
        "m22",
        "m11",
        "m33",
        "m13",
        "m31",
        "s",
        "m12",
        "m21",
        "s",
        "s",
        "m23",
        "m32",
        "s",
        "s",
        "m33",
        "m11",
        "m22",
        "m21",
        "m12",
        "s",
        "m13",
        "m31",
        "s",
        "m23",
        "m32",
        "s",
        "s",
        "vFrom",
        "vTo",
        "v1",
        "v1",
        "THREE",
        "r",
        "vFrom",
        "vTo",
        "r",
        "EPS",
        "r",
        "vFrom",
        "vFrom",
        "v1",
        "vFrom",
        "vFrom",
        "v1",
        "vFrom",
        "vFrom",
        "v1",
        "vFrom",
        "vTo",
        "v1",
        "v1",
        "v1",
        "r",
        "inverse",
        "conjugate",
        "dot",
        "v",
        "v",
        "v",
        "v",
        "v",
        "lengthSq",
        "length",
        "normalize",
        "l",
        "l",
        "l",
        "l",
        "l",
        "l",
        "l",
        "multiply",
        "q",
        "p",
        "p",
        "q",
        "p",
        "q",
        "multiplyQuaternions",
        "a",
        "b",
        "a",
        "a",
        "a",
        "a",
        "b",
        "b",
        "b",
        "b",
        "qax",
        "qbw",
        "qaw",
        "qbx",
        "qay",
        "qbz",
        "qaz",
        "qby",
        "qay",
        "qbw",
        "qaw",
        "qby",
        "qaz",
        "qbx",
        "qax",
        "qbz",
        "qaz",
        "qbw",
        "qaw",
        "qbz",
        "qax",
        "qby",
        "qay",
        "qbx",
        "qaw",
        "qbw",
        "qax",
        "qbx",
        "qay",
        "qby",
        "qaz",
        "qbz",
        "slerp",
        "qb",
        "t",
        "t",
        "t",
        "qb",
        "w",
        "qb",
        "x",
        "qb",
        "y",
        "qb",
        "z",
        "qb",
        "cosHalfTheta",
        "qb",
        "qb",
        "qb",
        "qb",
        "cosHalfTheta",
        "cosHalfTheta",
        "qb",
        "cosHalfTheta",
        "w",
        "x",
        "y",
        "z",
        "cosHalfTheta",
        "cosHalfTheta",
        "sinHalfTheta",
        "w",
        "x",
        "y",
        "z",
        "sinHalfTheta",
        "cosHalfTheta",
        "t",
        "halfTheta",
        "sinHalfTheta",
        "t",
        "halfTheta",
        "sinHalfTheta",
        "w",
        "ratioA",
        "ratioB",
        "x",
        "ratioA",
        "ratioB",
        "y",
        "ratioA",
        "ratioB",
        "z",
        "ratioA",
        "ratioB",
        "equals",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "quaternion",
        "fromArray",
        "array",
        "offset",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "toArray",
        "array",
        "offset",
        "array",
        "array",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "onChange",
        "callback",
        "callback",
        "onChangeCallback",
        "THREE",
        "slerp",
        "qa",
        "qb",
        "qm",
        "t",
        "qm",
        "qa",
        "qb",
        "t",
        "slerpFlat",
        "dst",
        "dstOffset",
        "src0",
        "srcOffset0",
        "src1",
        "srcOffset1",
        "t",
        "src0",
        "srcOffset0",
        "src0",
        "srcOffset0",
        "src0",
        "srcOffset0",
        "src0",
        "srcOffset0",
        "src1",
        "srcOffset1",
        "src1",
        "srcOffset1",
        "src1",
        "srcOffset1",
        "src1",
        "srcOffset1",
        "w0",
        "w1",
        "x0",
        "x1",
        "y0",
        "y1",
        "z0",
        "z1",
        "t",
        "x0",
        "x1",
        "y0",
        "y1",
        "z0",
        "z1",
        "w0",
        "w1",
        "cos",
        "cos",
        "cos",
        "sqrSin",
        "sqrSin",
        "sin",
        "cos",
        "dir",
        "s",
        "s",
        "len",
        "sin",
        "t",
        "t",
        "len",
        "sin",
        "t",
        "dir",
        "x0",
        "x0",
        "s",
        "x1",
        "tDir",
        "y0",
        "y0",
        "s",
        "y1",
        "tDir",
        "z0",
        "z0",
        "s",
        "z1",
        "tDir",
        "w0",
        "w0",
        "s",
        "w1",
        "tDir",
        "s",
        "t",
        "x0",
        "x0",
        "y0",
        "y0",
        "z0",
        "z0",
        "w0",
        "w0",
        "x0",
        "f",
        "y0",
        "f",
        "z0",
        "f",
        "w0",
        "f",
        "dst",
        "dstOffset",
        "x0",
        "dst",
        "dstOffset",
        "y0",
        "dst",
        "dstOffset",
        "z0",
        "dst",
        "dstOffset",
        "w0",
        "THREE",
        "a",
        "b",
        "c",
        "a",
        "a",
        "THREE",
        "b",
        "b",
        "THREE",
        "c",
        "c",
        "THREE",
        "THREE",
        "THREE",
        "a",
        "b",
        "c",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "c",
        "b",
        "v0",
        "a",
        "b",
        "result",
        "v0",
        "result",
        "resultLengthSq",
        "result",
        "resultLengthSq",
        "result",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "point",
        "a",
        "b",
        "c",
        "optionalTarget",
        "v0",
        "c",
        "a",
        "v1",
        "b",
        "a",
        "v2",
        "point",
        "a",
        "v0",
        "v0",
        "v0",
        "v1",
        "v0",
        "v2",
        "v1",
        "v1",
        "v1",
        "v2",
        "dot00",
        "dot11",
        "dot01",
        "dot01",
        "optionalTarget",
        "THREE",
        "denom",
        "result",
        "denom",
        "dot11",
        "dot02",
        "dot01",
        "dot12",
        "invDenom",
        "dot00",
        "dot12",
        "dot01",
        "dot02",
        "invDenom",
        "result",
        "u",
        "v",
        "v",
        "u",
        "THREE",
        "THREE",
        "point",
        "a",
        "b",
        "c",
        "THREE",
        "point",
        "a",
        "b",
        "c",
        "v1",
        "result",
        "result",
        "result",
        "result",
        "THREE",
        "THREE",
        "a",
        "b",
        "c",
        "a",
        "b",
        "c",
        "setFromPointsAndIndices",
        "points",
        "i0",
        "i1",
        "i2",
        "points",
        "i0",
        "points",
        "i1",
        "points",
        "i2",
        "clone",
        "copy",
        "triangle",
        "triangle",
        "triangle",
        "triangle",
        "THREE",
        "THREE",
        "v0",
        "v1",
        "v0",
        "v1",
        "midpoint",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "normal",
        "optionalTarget",
        "THREE",
        "optionalTarget",
        "plane",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "barycoordFromPoint",
        "point",
        "optionalTarget",
        "THREE",
        "point",
        "optionalTarget",
        "containsPoint",
        "point",
        "THREE",
        "point",
        "equals",
        "triangle",
        "triangle",
        "triangle",
        "triangle",
        "THREE",
        "min",
        "max",
        "min",
        "min",
        "THREE",
        "Infinity",
        "Infinity",
        "Infinity",
        "max",
        "max",
        "THREE",
        "Infinity",
        "Infinity",
        "Infinity",
        "THREE",
        "THREE",
        "min",
        "max",
        "min",
        "max",
        "setFromArray",
        "array",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "array",
        "i",
        "il",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "x",
        "minX",
        "minX",
        "x",
        "y",
        "minY",
        "minY",
        "y",
        "z",
        "minZ",
        "minZ",
        "z",
        "x",
        "maxX",
        "maxX",
        "x",
        "y",
        "maxY",
        "maxY",
        "y",
        "z",
        "maxZ",
        "maxZ",
        "z",
        "minX",
        "minY",
        "minZ",
        "maxX",
        "maxY",
        "maxZ",
        "setFromPoints",
        "points",
        "points",
        "i",
        "il",
        "i",
        "points",
        "i",
        "THREE",
        "center",
        "size",
        "v1",
        "size",
        "center",
        "halfSize",
        "center",
        "halfSize",
        "box",
        "box",
        "THREE",
        "node",
        "node",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "box",
        "geometry",
        "box",
        "node",
        "scope",
        "box",
        "clone",
        "copy",
        "box",
        "box",
        "box",
        "makeEmpty",
        "Infinity",
        "Infinity",
        "isEmpty",
        "center",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "size",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "expandByPoint",
        "point",
        "point",
        "point",
        "expandByVector",
        "vector",
        "vector",
        "vector",
        "expandByScalar",
        "scalar",
        "scalar",
        "scalar",
        "containsPoint",
        "point",
        "point",
        "point",
        "point",
        "point",
        "point",
        "point",
        "containsBox",
        "box",
        "box",
        "box",
        "box",
        "box",
        "box",
        "box",
        "getParameter",
        "point",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "point",
        "point",
        "point",
        "intersectsBox",
        "box",
        "box",
        "box",
        "box",
        "box",
        "box",
        "box",
        "intersectsSphere",
        "sphere",
        "closestPoint",
        "closestPoint",
        "THREE",
        "sphere",
        "closestPoint",
        "closestPoint",
        "sphere",
        "sphere",
        "sphere",
        "intersectsPlane",
        "plane",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "min",
        "plane",
        "max",
        "plane",
        "clampPoint",
        "point",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "point",
        "THREE",
        "point",
        "v1",
        "point",
        "clampedPoint",
        "point",
        "THREE",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "result",
        "v1",
        "result",
        "intersect",
        "box",
        "box",
        "box",
        "union",
        "box",
        "box",
        "box",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "matrix",
        "points",
        "matrix",
        "points",
        "matrix",
        "points",
        "matrix",
        "points",
        "matrix",
        "points",
        "matrix",
        "points",
        "matrix",
        "points",
        "matrix",
        "points",
        "matrix",
        "points",
        "translate",
        "offset",
        "offset",
        "offset",
        "equals",
        "box",
        "box",
        "box",
        "THREE",
        "x",
        "y",
        "z",
        "order",
        "x",
        "y",
        "z",
        "order",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "x",
        "y",
        "z",
        "order",
        "x",
        "y",
        "z",
        "order",
        "clone",
        "copy",
        "euler",
        "euler",
        "euler",
        "euler",
        "euler",
        "setFromRotationMatrix",
        "m",
        "order",
        "update",
        "THREE",
        "m",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "te",
        "order",
        "order",
        "order",
        "clamp",
        "m13",
        "m13",
        "m23",
        "m33",
        "m12",
        "m11",
        "m32",
        "m22",
        "order",
        "clamp",
        "m23",
        "m23",
        "m13",
        "m33",
        "m21",
        "m22",
        "m31",
        "m11",
        "order",
        "clamp",
        "m32",
        "m32",
        "m31",
        "m33",
        "m12",
        "m22",
        "m21",
        "m11",
        "order",
        "clamp",
        "m31",
        "m31",
        "m32",
        "m33",
        "m21",
        "m11",
        "m12",
        "m22",
        "order",
        "clamp",
        "m21",
        "m21",
        "m23",
        "m22",
        "m31",
        "m11",
        "m13",
        "m33",
        "order",
        "clamp",
        "m12",
        "m12",
        "m32",
        "m22",
        "m13",
        "m11",
        "m23",
        "m33",
        "order",
        "update",
        "q",
        "order",
        "update",
        "matrix",
        "matrix",
        "THREE",
        "matrix",
        "q",
        "matrix",
        "order",
        "update",
        "setFromVector3",
        "v",
        "order",
        "v",
        "v",
        "v",
        "order",
        "THREE",
        "newOrder",
        "q",
        "q",
        "newOrder",
        "equals",
        "euler",
        "euler",
        "euler",
        "euler",
        "euler",
        "fromArray",
        "array",
        "array",
        "array",
        "array",
        "array",
        "array",
        "toArray",
        "array",
        "offset",
        "array",
        "array",
        "offset",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "offset",
        "array",
        "toVector3",
        "optionalResult",
        "optionalResult",
        "optionalResult",
        "THREE",
        "onChange",
        "callback",
        "callback",
        "onChangeCallback",
        "THREE",
        "origin",
        "direction",
        "origin",
        "origin",
        "THREE",
        "direction",
        "direction",
        "THREE",
        "THREE",
        "THREE",
        "origin",
        "direction",
        "origin",
        "direction",
        "clone",
        "copy",
        "ray",
        "ray",
        "ray",
        "at",
        "t",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "t",
        "lookAt",
        "v",
        "v",
        "THREE",
        "t",
        "t",
        "v1",
        "closestPointToPoint",
        "point",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "point",
        "result",
        "directionDistance",
        "result",
        "result",
        "directionDistance",
        "distanceToPoint",
        "point",
        "point",
        "THREE",
        "point",
        "v1",
        "point",
        "directionDistance",
        "point",
        "v1",
        "directionDistance",
        "v1",
        "point",
        "THREE",
        "THREE",
        "THREE",
        "v0",
        "v1",
        "optionalPointOnRay",
        "optionalPointOnSegment",
        "segCenter",
        "v0",
        "v1",
        "segDir",
        "v1",
        "v0",
        "diff",
        "segCenter",
        "v0",
        "v1",
        "segDir",
        "diff",
        "diff",
        "segDir",
        "diff",
        "a01",
        "a01",
        "det",
        "s0",
        "a01",
        "b1",
        "b0",
        "s1",
        "a01",
        "b0",
        "b1",
        "extDet",
        "segExtent",
        "det",
        "s0",
        "s1",
        "extDet",
        "s1",
        "extDet",
        "det",
        "s0",
        "invDet",
        "s1",
        "invDet",
        "sqrDist",
        "s0",
        "s0",
        "a01",
        "s1",
        "b0",
        "s1",
        "a01",
        "s0",
        "s1",
        "b1",
        "c",
        "s1",
        "segExtent",
        "s0",
        "a01",
        "s1",
        "b0",
        "sqrDist",
        "s0",
        "s0",
        "s1",
        "s1",
        "b1",
        "c",
        "s1",
        "segExtent",
        "s0",
        "a01",
        "s1",
        "b0",
        "sqrDist",
        "s0",
        "s0",
        "s1",
        "s1",
        "b1",
        "c",
        "s1",
        "extDet",
        "s0",
        "a01",
        "segExtent",
        "b0",
        "s1",
        "s0",
        "segExtent",
        "segExtent",
        "b1",
        "segExtent",
        "sqrDist",
        "s0",
        "s0",
        "s1",
        "s1",
        "b1",
        "c",
        "s1",
        "extDet",
        "s0",
        "s1",
        "segExtent",
        "b1",
        "segExtent",
        "sqrDist",
        "s1",
        "s1",
        "b1",
        "c",
        "s0",
        "a01",
        "segExtent",
        "b0",
        "s1",
        "s0",
        "segExtent",
        "segExtent",
        "b1",
        "segExtent",
        "sqrDist",
        "s0",
        "s0",
        "s1",
        "s1",
        "b1",
        "c",
        "s1",
        "a01",
        "segExtent",
        "segExtent",
        "s0",
        "a01",
        "s1",
        "b0",
        "sqrDist",
        "s0",
        "s0",
        "s1",
        "s1",
        "b1",
        "c",
        "optionalPointOnRay",
        "optionalPointOnRay",
        "s0",
        "optionalPointOnSegment",
        "optionalPointOnSegment",
        "segDir",
        "s1",
        "segCenter",
        "sqrDist",
        "THREE",
        "sphere",
        "optionalTarget",
        "v1",
        "sphere",
        "v1",
        "v1",
        "v1",
        "tca",
        "tca",
        "sphere",
        "sphere",
        "d2",
        "radius2",
        "radius2",
        "d2",
        "tca",
        "thc",
        "tca",
        "thc",
        "t0",
        "t1",
        "t0",
        "t1",
        "optionalTarget",
        "t0",
        "optionalTarget",
        "intersectsSphere",
        "sphere",
        "sphere",
        "sphere",
        "distanceToPlane",
        "plane",
        "plane",
        "denominator",
        "plane",
        "plane",
        "plane",
        "denominator",
        "t",
        "t",
        "intersectPlane",
        "plane",
        "optionalTarget",
        "plane",
        "t",
        "t",
        "optionalTarget",
        "intersectsPlane",
        "plane",
        "plane",
        "distToPoint",
        "plane",
        "denominator",
        "distToPoint",
        "intersectBox",
        "box",
        "optionalTarget",
        "invdirx",
        "tmin",
        "box",
        "origin",
        "invdirx",
        "tmax",
        "box",
        "origin",
        "invdirx",
        "tmin",
        "box",
        "origin",
        "invdirx",
        "tmax",
        "box",
        "origin",
        "invdirx",
        "invdiry",
        "tymin",
        "box",
        "origin",
        "invdiry",
        "tymax",
        "box",
        "origin",
        "invdiry",
        "tymin",
        "box",
        "origin",
        "invdiry",
        "tymax",
        "box",
        "origin",
        "invdiry",
        "tmin",
        "tymax",
        "tymin",
        "tmax",
        "tymin",
        "tmin",
        "tmin",
        "tmin",
        "tmin",
        "tymin",
        "tymax",
        "tmax",
        "tmax",
        "tmax",
        "tmax",
        "tymax",
        "invdirz",
        "tzmin",
        "box",
        "origin",
        "invdirz",
        "tzmax",
        "box",
        "origin",
        "invdirz",
        "tzmin",
        "box",
        "origin",
        "invdirz",
        "tzmax",
        "box",
        "origin",
        "invdirz",
        "tmin",
        "tzmax",
        "tzmin",
        "tmax",
        "tzmin",
        "tmin",
        "tmin",
        "tmin",
        "tmin",
        "tzmin",
        "tzmax",
        "tmax",
        "tmax",
        "tmax",
        "tmax",
        "tzmax",
        "tmax",
        "tmin",
        "tmin",
        "tmax",
        "optionalTarget",
        "THREE",
        "box",
        "box",
        "v",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "a",
        "b",
        "c",
        "backfaceCulling",
        "optionalTarget",
        "edge1",
        "b",
        "a",
        "edge2",
        "c",
        "a",
        "normal",
        "edge1",
        "edge2",
        "normal",
        "DdN",
        "backfaceCulling",
        "sign",
        "DdN",
        "sign",
        "DdN",
        "DdN",
        "diff",
        "a",
        "sign",
        "edge2",
        "diff",
        "edge2",
        "DdQxE2",
        "sign",
        "edge1",
        "diff",
        "DdE1xQ",
        "DdQxE2",
        "DdE1xQ",
        "DdN",
        "sign",
        "diff",
        "normal",
        "QdN",
        "QdN",
        "DdN",
        "optionalTarget",
        "applyMatrix4",
        "matrix4",
        "matrix4",
        "matrix4",
        "equals",
        "ray",
        "ray",
        "ray",
        "THREE",
        "center",
        "radius",
        "center",
        "center",
        "THREE",
        "radius",
        "radius",
        "THREE",
        "THREE",
        "center",
        "radius",
        "center",
        "radius",
        "THREE",
        "points",
        "optionalCenter",
        "optionalCenter",
        "center",
        "optionalCenter",
        "box",
        "points",
        "center",
        "points",
        "i",
        "il",
        "i",
        "maxRadiusSq",
        "maxRadiusSq",
        "center",
        "points",
        "i",
        "maxRadiusSq",
        "clone",
        "copy",
        "sphere",
        "sphere",
        "sphere",
        "empty",
        "containsPoint",
        "point",
        "point",
        "distanceToPoint",
        "point",
        "point",
        "intersectsSphere",
        "sphere",
        "sphere",
        "sphere",
        "radiusSum",
        "radiusSum",
        "intersectsBox",
        "box",
        "box",
        "intersectsPlane",
        "plane",
        "plane",
        "plane",
        "clampPoint",
        "point",
        "optionalTarget",
        "point",
        "optionalTarget",
        "THREE",
        "result",
        "point",
        "deltaLengthSq",
        "result",
        "result",
        "result",
        "getBoundingBox",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "box",
        "box",
        "box",
        "applyMatrix4",
        "matrix",
        "matrix",
        "matrix",
        "translate",
        "offset",
        "offset",
        "equals",
        "sphere",
        "sphere",
        "sphere",
        "THREE",
        "p0",
        "p1",
        "p2",
        "p3",
        "p4",
        "p5",
        "p0",
        "p0",
        "THREE",
        "p1",
        "p1",
        "THREE",
        "p2",
        "p2",
        "THREE",
        "p3",
        "p3",
        "THREE",
        "p4",
        "p4",
        "THREE",
        "p5",
        "p5",
        "THREE",
        "THREE",
        "THREE",
        "p0",
        "p1",
        "p2",
        "p3",
        "p4",
        "p5",
        "planes",
        "p0",
        "planes",
        "p1",
        "planes",
        "p2",
        "planes",
        "p3",
        "planes",
        "p4",
        "planes",
        "p5",
        "clone",
        "copy",
        "frustum",
        "i",
        "i",
        "planes",
        "i",
        "frustum",
        "i",
        "setFromMatrix",
        "m",
        "m",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "planes",
        "me3",
        "me0",
        "me7",
        "me4",
        "me11",
        "me8",
        "me15",
        "me12",
        "planes",
        "me3",
        "me0",
        "me7",
        "me4",
        "me11",
        "me8",
        "me15",
        "me12",
        "planes",
        "me3",
        "me1",
        "me7",
        "me5",
        "me11",
        "me9",
        "me15",
        "me13",
        "planes",
        "me3",
        "me1",
        "me7",
        "me5",
        "me11",
        "me9",
        "me15",
        "me13",
        "planes",
        "me3",
        "me2",
        "me7",
        "me6",
        "me11",
        "me10",
        "me15",
        "me14",
        "planes",
        "me3",
        "me2",
        "me7",
        "me6",
        "me11",
        "me10",
        "me15",
        "me14",
        "THREE",
        "geometry",
        "geometry",
        "sphere",
        "geometry",
        "sphere",
        "sphere",
        "intersectsSphere",
        "sphere",
        "sphere",
        "sphere",
        "i",
        "i",
        "planes",
        "i",
        "center",
        "distance",
        "negRadius",
        "THREE",
        "THREE",
        "box",
        "i",
        "i",
        "planes",
        "i",
        "p1",
        "plane",
        "box",
        "box",
        "p2",
        "plane",
        "box",
        "box",
        "p1",
        "plane",
        "box",
        "box",
        "p2",
        "plane",
        "box",
        "box",
        "p1",
        "plane",
        "box",
        "box",
        "p2",
        "plane",
        "box",
        "box",
        "plane",
        "p1",
        "plane",
        "p2",
        "d1",
        "d2",
        "containsPoint",
        "point",
        "i",
        "i",
        "planes",
        "i",
        "point",
        "THREE",
        "THREE",
        "THREE",
        "apply",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "addEventListener",
        "listener",
        "listeners",
        "listeners",
        "listeners",
        "listener",
        "listeners",
        "listener",
        "hasEventListener",
        "listener",
        "listeners",
        "listeners",
        "listener",
        "removeEventListener",
        "listener",
        "listeners",
        "listenerArray",
        "listenerArray",
        "listener",
        "index",
        "listenerArray",
        "index",
        "dispatchEvent",
        "listeners",
        "listenerArray",
        "listenerArray",
        "i",
        "length",
        "i",
        "array",
        "i",
        "listenerArray",
        "i",
        "i",
        "length",
        "i",
        "array",
        "i",
        "THREE",
        "THREE",
        "THREE",
        "channel",
        "channel",
        "enable",
        "channel",
        "channel",
        "toggle",
        "channel",
        "channel",
        "disable",
        "channel",
        "channel",
        "test",
        "layers",
        "layers",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "quaternion",
        "rotation",
        "rotation",
        "quaternion",
        "rotation",
        "onRotationChange",
        "quaternion",
        "onQuaternionChange",
        "position",
        "rotation",
        "quaternion",
        "scale",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "applyMatrix",
        "matrix",
        "matrix",
        "setRotationFromAxisAngle",
        "axis",
        "angle",
        "axis",
        "angle",
        "setRotationFromEuler",
        "euler",
        "euler",
        "setRotationFromMatrix",
        "m",
        "m",
        "setRotationFromQuaternion",
        "q",
        "q",
        "THREE",
        "axis",
        "angle",
        "q1",
        "axis",
        "angle",
        "q1",
        "THREE",
        "angle",
        "v1",
        "angle",
        "THREE",
        "angle",
        "v1",
        "angle",
        "THREE",
        "angle",
        "v1",
        "angle",
        "THREE",
        "axis",
        "distance",
        "v1",
        "axis",
        "v1",
        "distance",
        "THREE",
        "distance",
        "v1",
        "distance",
        "THREE",
        "distance",
        "v1",
        "distance",
        "THREE",
        "distance",
        "v1",
        "distance",
        "localToWorld",
        "vector",
        "vector",
        "THREE",
        "vector",
        "vector",
        "m1",
        "THREE",
        "vector",
        "m1",
        "vector",
        "m1",
        "add",
        "arguments",
        "i",
        "arguments",
        "i",
        "arguments",
        "i",
        "THREE",
        "remove",
        "arguments",
        "i",
        "arguments",
        "i",
        "arguments",
        "i",
        "index",
        "index",
        "getObjectById",
        "id",
        "id",
        "getObjectByName",
        "name",
        "name",
        "getObjectByProperty",
        "name",
        "value",
        "name",
        "value",
        "i",
        "l",
        "i",
        "i",
        "child",
        "name",
        "value",
        "getWorldPosition",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "result",
        "THREE",
        "THREE",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "position",
        "result",
        "scale",
        "result",
        "THREE",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "quaternion",
        "result",
        "quaternion",
        "THREE",
        "THREE",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "position",
        "quaternion",
        "result",
        "result",
        "THREE",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "quaternion",
        "result",
        "quaternion",
        "raycast",
        "traverse",
        "callback",
        "callback",
        "children",
        "i",
        "l",
        "i",
        "children",
        "i",
        "callback",
        "traverseVisible",
        "callback",
        "callback",
        "children",
        "i",
        "l",
        "i",
        "children",
        "i",
        "callback",
        "traverseAncestors",
        "callback",
        "parent",
        "callback",
        "parent",
        "parent",
        "callback",
        "updateMatrix",
        "updateMatrixWorld",
        "force",
        "force",
        "force",
        "i",
        "l",
        "i",
        "i",
        "force",
        "toJSON",
        "meta",
        "meta",
        "isRootObject",
        "meta",
        "output",
        "meta",
        "meta",
        "meta",
        "meta",
        "meta",
        "meta",
        "i",
        "i",
        "i",
        "meta",
        "isRootObject",
        "extractFromCache",
        "meta",
        "extractFromCache",
        "meta",
        "extractFromCache",
        "meta",
        "extractFromCache",
        "meta",
        "geometries",
        "output",
        "geometries",
        "materials",
        "output",
        "materials",
        "textures",
        "output",
        "textures",
        "images",
        "output",
        "images",
        "output",
        "output",
        "cache",
        "key",
        "cache",
        "cache",
        "key",
        "data",
        "values",
        "data",
        "values",
        "clone",
        "recursive",
        "recursive",
        "copy",
        "source",
        "recursive",
        "recursive",
        "recursive",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "recursive",
        "i",
        "source",
        "i",
        "source",
        "i",
        "child",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "a",
        "b",
        "c",
        "normal",
        "color",
        "materialIndex",
        "a",
        "b",
        "c",
        "normal",
        "THREE",
        "normal",
        "THREE",
        "normal",
        "normal",
        "color",
        "THREE",
        "color",
        "THREE",
        "color",
        "color",
        "materialIndex",
        "materialIndex",
        "THREE",
        "THREE",
        "clone",
        "copy",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "i",
        "il",
        "i",
        "i",
        "source",
        "i",
        "source",
        "i",
        "il",
        "i",
        "i",
        "source",
        "i",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "THREE",
        "value",
        "value",
        "setDynamic",
        "value",
        "value",
        "copy",
        "source",
        "source",
        "source",
        "source",
        "source",
        "copyAt",
        "index1",
        "attribute",
        "index2",
        "index1",
        "index2",
        "attribute",
        "i",
        "l",
        "i",
        "index1",
        "i",
        "attribute",
        "index2",
        "i",
        "copyArray",
        "array",
        "array",
        "copyColorsArray",
        "colors",
        "colors",
        "i",
        "l",
        "i",
        "colors",
        "i",
        "color",
        "color",
        "THREE",
        "array",
        "offset",
        "color",
        "array",
        "offset",
        "color",
        "array",
        "offset",
        "color",
        "copyIndicesArray",
        "indices",
        "indices",
        "i",
        "l",
        "i",
        "indices",
        "i",
        "array",
        "offset",
        "index",
        "array",
        "offset",
        "index",
        "array",
        "offset",
        "index",
        "copyVector2sArray",
        "vectors",
        "vectors",
        "i",
        "l",
        "i",
        "vectors",
        "i",
        "vector",
        "vector",
        "THREE",
        "array",
        "offset",
        "vector",
        "array",
        "offset",
        "vector",
        "copyVector3sArray",
        "vectors",
        "vectors",
        "i",
        "l",
        "i",
        "vectors",
        "i",
        "vector",
        "vector",
        "THREE",
        "array",
        "offset",
        "vector",
        "array",
        "offset",
        "vector",
        "array",
        "offset",
        "vector",
        "copyVector4sArray",
        "vectors",
        "vectors",
        "i",
        "l",
        "i",
        "vectors",
        "i",
        "vector",
        "vector",
        "THREE",
        "array",
        "offset",
        "vector",
        "array",
        "offset",
        "vector",
        "array",
        "offset",
        "vector",
        "array",
        "offset",
        "vector",
        "value",
        "offset",
        "offset",
        "offset",
        "value",
        "offset",
        "getX",
        "index",
        "index",
        "setX",
        "index",
        "x",
        "index",
        "x",
        "getY",
        "index",
        "index",
        "setY",
        "index",
        "y",
        "index",
        "y",
        "getZ",
        "index",
        "index",
        "setZ",
        "index",
        "z",
        "index",
        "z",
        "getW",
        "index",
        "index",
        "setW",
        "index",
        "w",
        "index",
        "w",
        "setXY",
        "index",
        "x",
        "y",
        "index",
        "index",
        "x",
        "index",
        "y",
        "setXYZ",
        "index",
        "x",
        "y",
        "z",
        "index",
        "index",
        "x",
        "index",
        "y",
        "index",
        "z",
        "setXYZW",
        "index",
        "x",
        "y",
        "z",
        "w",
        "index",
        "index",
        "x",
        "index",
        "y",
        "index",
        "z",
        "index",
        "w",
        "clone",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "Int8Array",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "Uint8Array",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "Uint8ClampedArray",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "Int16Array",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "Uint16Array",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "Int32Array",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "Uint32Array",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "Float32Array",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "Float64Array",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "THREE",
        "array",
        "itemSize",
        "meshPerAttribute",
        "THREE",
        "array",
        "itemSize",
        "meshPerAttribute",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "THREE",
        "THREE",
        "THREE",
        "Infinity",
        "THREE",
        "THREE",
        "getIndex",
        "setIndex",
        "index",
        "index",
        "addAttribute",
        "name",
        "attribute",
        "attribute",
        "THREE",
        "attribute",
        "THREE",
        "name",
        "THREE",
        "arguments",
        "arguments",
        "name",
        "attribute",
        "name",
        "attribute",
        "getAttribute",
        "name",
        "name",
        "removeAttribute",
        "name",
        "name",
        "addGroup",
        "start",
        "count",
        "materialIndex",
        "start",
        "count",
        "materialIndex",
        "materialIndex",
        "clearGroups",
        "setDrawRange",
        "start",
        "count",
        "start",
        "count",
        "applyMatrix",
        "matrix",
        "position",
        "matrix",
        "position",
        "position",
        "normal",
        "THREE",
        "matrix",
        "normalMatrix",
        "normal",
        "normal",
        "rotateX",
        "angle",
        "m1",
        "m1",
        "THREE",
        "m1",
        "angle",
        "m1",
        "rotateY",
        "angle",
        "m1",
        "m1",
        "THREE",
        "m1",
        "angle",
        "m1",
        "rotateZ",
        "angle",
        "m1",
        "m1",
        "THREE",
        "m1",
        "angle",
        "m1",
        "translate",
        "x",
        "y",
        "z",
        "m1",
        "m1",
        "THREE",
        "m1",
        "x",
        "y",
        "z",
        "m1",
        "scale",
        "x",
        "y",
        "z",
        "m1",
        "m1",
        "THREE",
        "m1",
        "x",
        "y",
        "z",
        "m1",
        "lookAt",
        "vector",
        "obj",
        "obj",
        "THREE",
        "obj",
        "vector",
        "obj",
        "obj",
        "center",
        "offset",
        "offset",
        "offset",
        "offset",
        "setFromObject",
        "THREE",
        "THREE",
        "THREE",
        "geometry",
        "THREE",
        "geometry",
        "positions",
        "geometry",
        "colors",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "THREE",
        "geometry",
        "lineDistances",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "THREE",
        "geometry",
        "THREE",
        "geometry",
        "updateFromObject",
        "THREE",
        "geometry",
        "direct",
        "geometry",
        "direct",
        "geometry",
        "direct",
        "geometry",
        "direct",
        "geometry",
        "direct",
        "geometry",
        "direct",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "direct",
        "geometry",
        "attribute",
        "attribute",
        "geometry",
        "attribute",
        "geometry",
        "geometry",
        "attribute",
        "attribute",
        "geometry",
        "attribute",
        "geometry",
        "geometry",
        "attribute",
        "attribute",
        "geometry",
        "attribute",
        "geometry",
        "geometry",
        "attribute",
        "attribute",
        "geometry",
        "attribute",
        "geometry",
        "geometry",
        "attribute",
        "attribute",
        "geometry",
        "attribute",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "fromGeometry",
        "geometry",
        "geometry",
        "THREE",
        "geometry",
        "geometry",
        "fromDirectGeometry",
        "geometry",
        "Float32Array",
        "geometry",
        "THREE",
        "positions",
        "geometry",
        "geometry",
        "Float32Array",
        "geometry",
        "THREE",
        "normals",
        "geometry",
        "geometry",
        "Float32Array",
        "geometry",
        "THREE",
        "colors",
        "geometry",
        "geometry",
        "Float32Array",
        "geometry",
        "THREE",
        "uvs",
        "geometry",
        "geometry",
        "Float32Array",
        "geometry",
        "THREE",
        "uvs2",
        "geometry",
        "geometry",
        "geometry",
        "Uint32Array",
        "Uint16Array",
        "TypeArray",
        "geometry",
        "THREE",
        "indices",
        "geometry",
        "geometry",
        "name",
        "geometry",
        "geometry",
        "name",
        "morphTargets",
        "i",
        "l",
        "i",
        "morphTargets",
        "i",
        "THREE",
        "morphTarget",
        "array",
        "attribute",
        "morphTarget",
        "name",
        "array",
        "geometry",
        "THREE",
        "geometry",
        "skinIndices",
        "geometry",
        "geometry",
        "THREE",
        "geometry",
        "skinWeights",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "THREE",
        "THREE",
        "positions",
        "positions",
        "positions",
        "positions",
        "isNaN",
        "isNaN",
        "isNaN",
        "THREE",
        "THREE",
        "THREE",
        "positions",
        "box",
        "positions",
        "box",
        "center",
        "positions",
        "i",
        "il",
        "i",
        "vector",
        "positions",
        "i",
        "maxRadiusSq",
        "maxRadiusSq",
        "center",
        "vector",
        "maxRadiusSq",
        "isNaN",
        "computeFaceNormals",
        "computeVertexNormals",
        "attributes",
        "attributes",
        "attributes",
        "THREE",
        "Float32Array",
        "positions",
        "attributes",
        "array",
        "i",
        "il",
        "i",
        "array",
        "i",
        "attributes",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "index",
        "index",
        "groups",
        "indices",
        "groups",
        "j",
        "jl",
        "j",
        "groups",
        "j",
        "group",
        "group",
        "start",
        "count",
        "i",
        "il",
        "i",
        "vA",
        "indices",
        "i",
        "vB",
        "indices",
        "i",
        "vC",
        "indices",
        "i",
        "pA",
        "positions",
        "vA",
        "pB",
        "positions",
        "vB",
        "pC",
        "positions",
        "vC",
        "cb",
        "pC",
        "pB",
        "ab",
        "pA",
        "pB",
        "cb",
        "ab",
        "normals",
        "vA",
        "cb",
        "normals",
        "vA",
        "cb",
        "normals",
        "vA",
        "cb",
        "normals",
        "vB",
        "cb",
        "normals",
        "vB",
        "cb",
        "normals",
        "vB",
        "cb",
        "normals",
        "vC",
        "cb",
        "normals",
        "vC",
        "cb",
        "normals",
        "vC",
        "cb",
        "positions",
        "i",
        "il",
        "i",
        "pA",
        "positions",
        "i",
        "pB",
        "positions",
        "i",
        "pC",
        "positions",
        "i",
        "cb",
        "pC",
        "pB",
        "ab",
        "pA",
        "pB",
        "cb",
        "ab",
        "normals",
        "i",
        "cb",
        "normals",
        "i",
        "cb",
        "normals",
        "i",
        "cb",
        "normals",
        "i",
        "cb",
        "normals",
        "i",
        "cb",
        "normals",
        "i",
        "cb",
        "normals",
        "i",
        "cb",
        "normals",
        "i",
        "cb",
        "normals",
        "i",
        "cb",
        "attributes",
        "merge",
        "geometry",
        "offset",
        "geometry",
        "THREE",
        "offset",
        "offset",
        "key",
        "attributes",
        "geometry",
        "key",
        "attributes",
        "key",
        "attribute1",
        "geometry",
        "key",
        "attribute2",
        "attribute2",
        "attributeSize",
        "offset",
        "i",
        "attributeArray2",
        "i",
        "j",
        "attributeArray1",
        "j",
        "attributeArray2",
        "i",
        "normalizeNormals",
        "normals",
        "i",
        "il",
        "i",
        "x",
        "normals",
        "i",
        "y",
        "normals",
        "i",
        "z",
        "normals",
        "i",
        "n",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "normals",
        "i",
        "n",
        "normals",
        "i",
        "n",
        "normals",
        "i",
        "n",
        "toNonIndexed",
        "THREE",
        "name",
        "attributes",
        "attributes",
        "name",
        "attribute",
        "attribute",
        "array",
        "indices",
        "itemSize",
        "indices",
        "i",
        "l",
        "i",
        "index",
        "indices",
        "i",
        "itemSize",
        "j",
        "itemSize",
        "j",
        "array2",
        "index2",
        "array",
        "index",
        "geometry2",
        "name",
        "THREE",
        "array2",
        "itemSize",
        "geometry2",
        "toJSON",
        "data",
        "data",
        "data",
        "key",
        "parameters",
        "parameters",
        "key",
        "data",
        "key",
        "parameters",
        "key",
        "data",
        "data",
        "index",
        "index",
        "data",
        "index",
        "array",
        "key",
        "attributes",
        "attributes",
        "key",
        "attribute",
        "data",
        "key",
        "attribute",
        "attribute",
        "array",
        "groups",
        "data",
        "groups",
        "boundingSphere",
        "data",
        "boundingSphere",
        "boundingSphere",
        "data",
        "clone",
        "THREE",
        "copy",
        "source",
        "source",
        "index",
        "index",
        "source",
        "name",
        "attributes",
        "attributes",
        "name",
        "name",
        "attribute",
        "source",
        "groups",
        "i",
        "l",
        "i",
        "groups",
        "i",
        "group",
        "group",
        "dispose",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "interleavedBuffer",
        "itemSize",
        "offset",
        "THREE",
        "interleavedBuffer",
        "itemSize",
        "offset",
        "THREE",
        "THREE",
        "setX",
        "index",
        "x",
        "index",
        "x",
        "setY",
        "index",
        "y",
        "index",
        "y",
        "setZ",
        "index",
        "z",
        "index",
        "z",
        "setW",
        "index",
        "w",
        "index",
        "w",
        "getX",
        "index",
        "index",
        "getY",
        "index",
        "index",
        "getZ",
        "index",
        "index",
        "getW",
        "index",
        "index",
        "setXY",
        "index",
        "x",
        "y",
        "index",
        "index",
        "index",
        "x",
        "index",
        "y",
        "setXYZ",
        "index",
        "x",
        "y",
        "z",
        "index",
        "index",
        "index",
        "x",
        "index",
        "y",
        "index",
        "z",
        "setXYZW",
        "index",
        "x",
        "y",
        "z",
        "w",
        "index",
        "index",
        "index",
        "x",
        "index",
        "y",
        "index",
        "z",
        "index",
        "w",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "start",
        "count",
        "instances",
        "start",
        "count",
        "instances",
        "THREE",
        "source",
        "source",
        "index",
        "index",
        "source",
        "name",
        "attributes",
        "attributes",
        "name",
        "name",
        "attribute",
        "source",
        "groups",
        "i",
        "l",
        "i",
        "groups",
        "i",
        "group",
        "group",
        "group",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "applyMatrix",
        "matrix",
        "THREE",
        "matrix",
        "i",
        "il",
        "i",
        "i",
        "vertex",
        "matrix",
        "i",
        "il",
        "i",
        "i",
        "face",
        "normalMatrix",
        "face",
        "j",
        "jl",
        "j",
        "face",
        "j",
        "normalMatrix",
        "rotateX",
        "angle",
        "m1",
        "m1",
        "THREE",
        "m1",
        "angle",
        "m1",
        "rotateY",
        "angle",
        "m1",
        "m1",
        "THREE",
        "m1",
        "angle",
        "m1",
        "rotateZ",
        "angle",
        "m1",
        "m1",
        "THREE",
        "m1",
        "angle",
        "m1",
        "translate",
        "x",
        "y",
        "z",
        "m1",
        "m1",
        "THREE",
        "m1",
        "x",
        "y",
        "z",
        "m1",
        "scale",
        "x",
        "y",
        "z",
        "m1",
        "m1",
        "THREE",
        "m1",
        "x",
        "y",
        "z",
        "m1",
        "lookAt",
        "vector",
        "obj",
        "obj",
        "THREE",
        "obj",
        "vector",
        "obj",
        "obj",
        "fromBufferGeometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "attributes",
        "attributes",
        "attributes",
        "attributes",
        "attributes",
        "attributes",
        "attributes",
        "attributes",
        "attributes",
        "uvs2",
        "i",
        "positions",
        "i",
        "j",
        "scope",
        "THREE",
        "positions",
        "i",
        "positions",
        "i",
        "positions",
        "i",
        "normals",
        "tempNormals",
        "THREE",
        "normals",
        "i",
        "normals",
        "i",
        "normals",
        "i",
        "colors",
        "scope",
        "THREE",
        "colors",
        "i",
        "colors",
        "i",
        "colors",
        "i",
        "uvs",
        "tempUVs",
        "THREE",
        "uvs",
        "j",
        "uvs",
        "j",
        "uvs2",
        "tempUVs2",
        "THREE",
        "uvs2",
        "j",
        "uvs2",
        "j",
        "a",
        "b",
        "c",
        "materialIndex",
        "normals",
        "tempNormals",
        "a",
        "tempNormals",
        "b",
        "tempNormals",
        "c",
        "colors",
        "scope",
        "a",
        "scope",
        "b",
        "scope",
        "c",
        "THREE",
        "a",
        "b",
        "c",
        "vertexNormals",
        "vertexColors",
        "materialIndex",
        "scope",
        "face",
        "uvs",
        "scope",
        "tempUVs",
        "a",
        "tempUVs",
        "b",
        "tempUVs",
        "c",
        "uvs2",
        "scope",
        "tempUVs2",
        "a",
        "tempUVs2",
        "b",
        "tempUVs2",
        "c",
        "indices",
        "geometry",
        "groups",
        "i",
        "groups",
        "i",
        "groups",
        "i",
        "group",
        "group",
        "start",
        "count",
        "j",
        "jl",
        "j",
        "addFace",
        "indices",
        "j",
        "indices",
        "j",
        "indices",
        "j",
        "group",
        "i",
        "indices",
        "i",
        "addFace",
        "indices",
        "i",
        "indices",
        "i",
        "indices",
        "i",
        "i",
        "positions",
        "i",
        "addFace",
        "i",
        "i",
        "i",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "center",
        "offset",
        "offset",
        "offset",
        "offset",
        "normalize",
        "radius",
        "radius",
        "THREE",
        "matrix",
        "s",
        "s",
        "center",
        "s",
        "s",
        "center",
        "s",
        "s",
        "center",
        "matrix",
        "computeFaceNormals",
        "THREE",
        "THREE",
        "f",
        "fl",
        "f",
        "f",
        "face",
        "face",
        "face",
        "cb",
        "vC",
        "vB",
        "ab",
        "vA",
        "vB",
        "cb",
        "ab",
        "cb",
        "face",
        "cb",
        "computeVertexNormals",
        "areaWeighted",
        "areaWeighted",
        "areaWeighted",
        "vertices",
        "v",
        "vl",
        "v",
        "vl",
        "v",
        "vertices",
        "v",
        "THREE",
        "areaWeighted",
        "THREE",
        "THREE",
        "f",
        "fl",
        "f",
        "fl",
        "f",
        "face",
        "f",
        "vA",
        "face",
        "vB",
        "face",
        "vC",
        "face",
        "cb",
        "vC",
        "vB",
        "ab",
        "vA",
        "vB",
        "cb",
        "ab",
        "vertices",
        "face",
        "cb",
        "vertices",
        "face",
        "cb",
        "vertices",
        "face",
        "cb",
        "f",
        "fl",
        "f",
        "fl",
        "f",
        "face",
        "f",
        "vertices",
        "face",
        "face",
        "vertices",
        "face",
        "face",
        "vertices",
        "face",
        "face",
        "v",
        "vl",
        "v",
        "vl",
        "v",
        "vertices",
        "v",
        "f",
        "fl",
        "f",
        "fl",
        "f",
        "face",
        "f",
        "face",
        "vertexNormals",
        "vertexNormals",
        "vertices",
        "face",
        "vertexNormals",
        "vertices",
        "face",
        "vertexNormals",
        "vertices",
        "face",
        "vertexNormals",
        "vertices",
        "face",
        "vertexNormals",
        "vertices",
        "face",
        "vertexNormals",
        "vertices",
        "face",
        "computeMorphNormals",
        "f",
        "fl",
        "f",
        "fl",
        "f",
        "face",
        "f",
        "face",
        "face",
        "face",
        "face",
        "face",
        "face",
        "face",
        "i",
        "il",
        "face",
        "i",
        "il",
        "i",
        "face",
        "i",
        "face",
        "i",
        "face",
        "i",
        "face",
        "i",
        "face",
        "i",
        "THREE",
        "tmpGeo",
        "i",
        "il",
        "i",
        "il",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "f",
        "fl",
        "f",
        "fl",
        "f",
        "faceNormal",
        "THREE",
        "vertexNormals",
        "THREE",
        "THREE",
        "THREE",
        "dstNormalsFace",
        "faceNormal",
        "dstNormalsVertex",
        "vertexNormals",
        "i",
        "tmpGeo",
        "i",
        "tmpGeo",
        "tmpGeo",
        "f",
        "fl",
        "f",
        "fl",
        "f",
        "face",
        "f",
        "faceNormal",
        "morphNormals",
        "f",
        "vertexNormals",
        "morphNormals",
        "f",
        "faceNormal",
        "face",
        "vertexNormals",
        "face",
        "vertexNormals",
        "face",
        "vertexNormals",
        "face",
        "f",
        "fl",
        "f",
        "fl",
        "f",
        "face",
        "f",
        "face",
        "face",
        "face",
        "face",
        "computeTangents",
        "computeLineDistances",
        "vertices",
        "i",
        "il",
        "i",
        "i",
        "d",
        "vertices",
        "i",
        "vertices",
        "i",
        "i",
        "d",
        "computeBoundingBox",
        "THREE",
        "computeBoundingSphere",
        "THREE",
        "merge",
        "geometry",
        "matrix",
        "materialIndexOffset",
        "geometry",
        "THREE",
        "geometry",
        "geometry",
        "geometry",
        "materialIndexOffset",
        "materialIndexOffset",
        "matrix",
        "normalMatrix",
        "THREE",
        "matrix",
        "vertices2",
        "i",
        "il",
        "i",
        "vertices2",
        "i",
        "vertex",
        "matrix",
        "vertexCopy",
        "matrix",
        "vertices1",
        "vertexCopy",
        "i",
        "il",
        "faces2",
        "i",
        "il",
        "i",
        "faces2",
        "i",
        "face",
        "face",
        "faceCopy",
        "THREE",
        "face",
        "vertexOffset",
        "face",
        "vertexOffset",
        "face",
        "vertexOffset",
        "faceCopy",
        "face",
        "normalMatrix",
        "faceCopy",
        "normalMatrix",
        "faceVertexNormals",
        "j",
        "jl",
        "j",
        "normal",
        "faceVertexNormals",
        "j",
        "normalMatrix",
        "normal",
        "normalMatrix",
        "faceCopy",
        "normal",
        "faceCopy",
        "face",
        "faceVertexColors",
        "j",
        "jl",
        "j",
        "color",
        "faceVertexColors",
        "j",
        "faceCopy",
        "color",
        "faceCopy",
        "face",
        "materialIndexOffset",
        "faces1",
        "faceCopy",
        "i",
        "il",
        "uvs2",
        "i",
        "il",
        "i",
        "uvs2",
        "i",
        "uv",
        "uv",
        "j",
        "jl",
        "j",
        "uvCopy",
        "uv",
        "j",
        "uvs1",
        "uvCopy",
        "mergeMesh",
        "mesh",
        "mesh",
        "THREE",
        "mesh",
        "mesh",
        "mesh",
        "mesh",
        "mergeVertices",
        "precisionPoints",
        "i",
        "il",
        "i",
        "il",
        "i",
        "v",
        "i",
        "key",
        "v",
        "precision",
        "v",
        "precision",
        "v",
        "precision",
        "verticesMap",
        "key",
        "verticesMap",
        "key",
        "i",
        "unique",
        "i",
        "changes",
        "i",
        "unique",
        "changes",
        "i",
        "changes",
        "verticesMap",
        "key",
        "i",
        "il",
        "i",
        "il",
        "i",
        "face",
        "i",
        "face",
        "changes",
        "face",
        "face",
        "changes",
        "face",
        "face",
        "changes",
        "face",
        "indices",
        "face",
        "face",
        "face",
        "n",
        "n",
        "indices",
        "n",
        "indices",
        "n",
        "dupIndex",
        "n",
        "faceIndicesToRemove",
        "i",
        "i",
        "faceIndicesToRemove",
        "i",
        "i",
        "faceIndicesToRemove",
        "i",
        "idx",
        "j",
        "jl",
        "j",
        "jl",
        "j",
        "j",
        "idx",
        "unique",
        "unique",
        "diff",
        "sortFacesByMaterialIndex",
        "faces",
        "i",
        "length",
        "i",
        "faces",
        "i",
        "i",
        "a",
        "b",
        "a",
        "b",
        "faces",
        "materialIndexSort",
        "uvs1",
        "uvs1",
        "length",
        "newUvs1",
        "uvs2",
        "uvs2",
        "length",
        "newUvs2",
        "i",
        "length",
        "i",
        "faces",
        "i",
        "newUvs1",
        "newUvs1",
        "uvs1",
        "id",
        "newUvs2",
        "newUvs2",
        "uvs2",
        "id",
        "newUvs1",
        "newUvs1",
        "newUvs2",
        "newUvs2",
        "toJSON",
        "data",
        "data",
        "data",
        "key",
        "parameters",
        "parameters",
        "key",
        "data",
        "key",
        "parameters",
        "key",
        "data",
        "i",
        "i",
        "i",
        "vertices",
        "vertex",
        "vertex",
        "vertex",
        "i",
        "i",
        "i",
        "i",
        "face",
        "face",
        "face",
        "face",
        "face",
        "face",
        "faceType",
        "setBit",
        "faceType",
        "faceType",
        "setBit",
        "faceType",
        "hasMaterial",
        "faceType",
        "setBit",
        "faceType",
        "hasFaceUv",
        "faceType",
        "setBit",
        "faceType",
        "hasFaceVertexUv",
        "faceType",
        "setBit",
        "faceType",
        "hasFaceNormal",
        "faceType",
        "setBit",
        "faceType",
        "hasFaceVertexNormal",
        "faceType",
        "setBit",
        "faceType",
        "hasFaceColor",
        "faceType",
        "setBit",
        "faceType",
        "hasFaceVertexColor",
        "faces",
        "faceType",
        "faces",
        "face",
        "face",
        "face",
        "faces",
        "face",
        "hasFaceVertexUv",
        "i",
        "faces",
        "getUvIndex",
        "faceVertexUvs",
        "getUvIndex",
        "faceVertexUvs",
        "getUvIndex",
        "faceVertexUvs",
        "hasFaceNormal",
        "faces",
        "getNormalIndex",
        "face",
        "hasFaceVertexNormal",
        "face",
        "faces",
        "getNormalIndex",
        "vertexNormals",
        "getNormalIndex",
        "vertexNormals",
        "getNormalIndex",
        "vertexNormals",
        "hasFaceColor",
        "faces",
        "getColorIndex",
        "face",
        "hasFaceVertexColor",
        "face",
        "faces",
        "getColorIndex",
        "vertexColors",
        "getColorIndex",
        "vertexColors",
        "getColorIndex",
        "vertexColors",
        "value",
        "position",
        "enabled",
        "enabled",
        "value",
        "position",
        "value",
        "position",
        "normal",
        "normal",
        "normal",
        "normal",
        "normalsHash",
        "hash",
        "normalsHash",
        "hash",
        "normalsHash",
        "hash",
        "normals",
        "normals",
        "normal",
        "normal",
        "normal",
        "normalsHash",
        "hash",
        "color",
        "color",
        "color",
        "color",
        "colorsHash",
        "hash",
        "colorsHash",
        "hash",
        "colorsHash",
        "hash",
        "colors",
        "colors",
        "color",
        "colorsHash",
        "hash",
        "uv",
        "uv",
        "uv",
        "uvsHash",
        "hash",
        "uvsHash",
        "hash",
        "uvsHash",
        "hash",
        "uvs",
        "uvs",
        "uv",
        "uv",
        "uvsHash",
        "hash",
        "data",
        "data",
        "vertices",
        "data",
        "normals",
        "colors",
        "data",
        "colors",
        "uvs",
        "data",
        "uvs",
        "data",
        "faces",
        "data",
        "clone",
        "THREE",
        "copy",
        "source",
        "source",
        "vertices",
        "i",
        "il",
        "i",
        "vertices",
        "i",
        "source",
        "faces",
        "i",
        "il",
        "i",
        "faces",
        "i",
        "source",
        "i",
        "il",
        "i",
        "source",
        "i",
        "i",
        "i",
        "faceVertexUvs",
        "j",
        "jl",
        "j",
        "faceVertexUvs",
        "j",
        "uvs",
        "k",
        "kl",
        "k",
        "uvs",
        "k",
        "uvsCopy",
        "uv",
        "i",
        "uvsCopy",
        "dispose",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "computeFaceNormals",
        "computeVertexNormals",
        "computeGroups",
        "geometry",
        "geometry",
        "i",
        "faces",
        "i",
        "faces",
        "i",
        "face",
        "materialIndex",
        "materialIndex",
        "face",
        "group",
        "group",
        "i",
        "group",
        "groups",
        "group",
        "group",
        "i",
        "materialIndex",
        "group",
        "group",
        "i",
        "group",
        "groups",
        "group",
        "groups",
        "fromGeometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "faceVertexUvs",
        "faceVertexUvs",
        "faceVertexUvs",
        "faceVertexUvs",
        "geometry",
        "morphTargets",
        "morphTargetsLength",
        "morphTargetsPosition",
        "i",
        "morphTargetsLength",
        "i",
        "morphTargetsPosition",
        "i",
        "morphTargetsPosition",
        "geometry",
        "morphNormals",
        "morphNormalsLength",
        "morphTargetsNormal",
        "i",
        "morphNormalsLength",
        "i",
        "morphTargetsNormal",
        "i",
        "morphTargetsNormal",
        "geometry",
        "geometry",
        "skinIndices",
        "vertices",
        "skinWeights",
        "vertices",
        "i",
        "faces",
        "i",
        "faces",
        "i",
        "vertices",
        "face",
        "vertices",
        "face",
        "vertices",
        "face",
        "face",
        "vertexNormals",
        "vertexNormals",
        "vertexNormals",
        "vertexNormals",
        "face",
        "normal",
        "normal",
        "normal",
        "face",
        "vertexColors",
        "vertexColors",
        "vertexColors",
        "vertexColors",
        "face",
        "color",
        "color",
        "color",
        "hasFaceVertexUv",
        "faceVertexUvs",
        "i",
        "vertexUvs",
        "vertexUvs",
        "vertexUvs",
        "vertexUvs",
        "THREE",
        "THREE",
        "THREE",
        "hasFaceVertexUv2",
        "faceVertexUvs",
        "i",
        "vertexUvs",
        "vertexUvs",
        "vertexUvs",
        "vertexUvs",
        "THREE",
        "THREE",
        "THREE",
        "j",
        "morphTargetsLength",
        "j",
        "morphTargets",
        "j",
        "morphTargetsPosition",
        "j",
        "morphTarget",
        "face",
        "morphTarget",
        "face",
        "morphTarget",
        "face",
        "j",
        "morphNormalsLength",
        "j",
        "morphNormals",
        "j",
        "i",
        "morphTargetsNormal",
        "j",
        "morphNormal",
        "morphNormal",
        "morphNormal",
        "hasSkinIndices",
        "skinIndices",
        "face",
        "skinIndices",
        "face",
        "skinIndices",
        "face",
        "hasSkinWeights",
        "skinWeights",
        "face",
        "skinWeights",
        "face",
        "skinWeights",
        "face",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "geometry",
        "dispose",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "optionalTarget",
        "optionalTarget",
        "THREE",
        "quaternion",
        "result",
        "quaternion",
        "THREE",
        "THREE",
        "vector",
        "m1",
        "vector",
        "m1",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "THREE",
        "fov",
        "aspect",
        "near",
        "far",
        "THREE",
        "fov",
        "fov",
        "aspect",
        "aspect",
        "near",
        "near",
        "far",
        "far",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "focalLength",
        "frameHeight",
        "frameHeight",
        "frameHeight",
        "THREE",
        "frameHeight",
        "focalLength",
        "THREE",
        "fullWidth",
        "fullHeight",
        "x",
        "y",
        "width",
        "height",
        "fullWidth",
        "fullHeight",
        "x",
        "y",
        "width",
        "height",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "fov",
        "top",
        "aspect",
        "bottom",
        "aspect",
        "top",
        "right",
        "left",
        "top",
        "bottom",
        "left",
        "width",
        "left",
        "width",
        "top",
        "height",
        "top",
        "height",
        "fov",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "meta",
        "THREE",
        "meta",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "THREE",
        "color",
        "intensity",
        "THREE",
        "THREE",
        "color",
        "intensity",
        "intensity",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "THREE",
        "meta",
        "THREE",
        "meta",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "recursive",
        "THREE",
        "source",
        "recursive",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "color",
        "density",
        "THREE",
        "color",
        "density",
        "density",
        "THREE",
        "THREE",
        "THREE",
        "material",
        "THREE",
        "material",
        "renderCallback",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "radius",
        "widthSegments",
        "heightSegments",
        "phiStart",
        "phiLength",
        "thetaStart",
        "thetaLength",
        "THREE",
        "radius",
        "widthSegments",
        "heightSegments",
        "phiStart",
        "phiLength",
        "thetaStart",
        "thetaLength",
        "radius",
        "radius",
        "widthSegments",
        "widthSegments",
        "heightSegments",
        "heightSegments",
        "phiStart",
        "phiStart",
        "phiStart",
        "phiLength",
        "phiLength",
        "phiLength",
        "thetaStart",
        "thetaStart",
        "thetaStart",
        "thetaLength",
        "thetaLength",
        "thetaLength",
        "thetaStart",
        "thetaLength",
        "widthSegments",
        "heightSegments",
        "THREE",
        "Float32Array",
        "vertexCount",
        "THREE",
        "Float32Array",
        "vertexCount",
        "THREE",
        "Float32Array",
        "vertexCount",
        "THREE",
        "y",
        "heightSegments",
        "y",
        "y",
        "heightSegments",
        "x",
        "widthSegments",
        "x",
        "x",
        "widthSegments",
        "radius",
        "phiStart",
        "u",
        "phiLength",
        "thetaStart",
        "v",
        "thetaLength",
        "radius",
        "thetaStart",
        "v",
        "thetaLength",
        "radius",
        "phiStart",
        "u",
        "phiLength",
        "thetaStart",
        "v",
        "thetaLength",
        "normal",
        "px",
        "py",
        "pz",
        "positions",
        "index",
        "px",
        "py",
        "pz",
        "normals",
        "index",
        "normal",
        "normal",
        "normal",
        "uvs",
        "index",
        "u",
        "v",
        "verticesRow",
        "index",
        "index",
        "vertices",
        "verticesRow",
        "y",
        "heightSegments",
        "y",
        "x",
        "widthSegments",
        "x",
        "vertices",
        "y",
        "x",
        "vertices",
        "y",
        "x",
        "vertices",
        "y",
        "x",
        "vertices",
        "y",
        "x",
        "y",
        "thetaStart",
        "indices",
        "v1",
        "v2",
        "v4",
        "y",
        "heightSegments",
        "thetaEnd",
        "indices",
        "v2",
        "v3",
        "v4",
        "positions",
        "THREE",
        "THREE",
        "indices",
        "positions",
        "normals",
        "uvs",
        "THREE",
        "THREE",
        "radius",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "radius",
        "widthSegments",
        "heightSegments",
        "phiStart",
        "phiLength",
        "thetaStart",
        "thetaLength",
        "THREE",
        "radius",
        "widthSegments",
        "heightSegments",
        "phiStart",
        "phiLength",
        "thetaStart",
        "thetaLength",
        "THREE",
        "radius",
        "widthSegments",
        "heightSegments",
        "phiStart",
        "phiLength",
        "thetaStart",
        "thetaLength",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "value",
        "value",
        "value",
        "setValues",
        "values",
        "values",
        "key",
        "values",
        "values",
        "key",
        "newValue",
        "key",
        "currentValue",
        "currentValue",
        "THREE",
        "currentValue",
        "newValue",
        "currentValue",
        "THREE",
        "newValue",
        "THREE",
        "currentValue",
        "newValue",
        "key",
        "key",
        "newValue",
        "key",
        "newValue",
        "toJSON",
        "meta",
        "meta",
        "isRoot",
        "meta",
        "data",
        "data",
        "data",
        "THREE",
        "data",
        "data",
        "data",
        "THREE",
        "data",
        "THREE",
        "data",
        "data",
        "THREE",
        "data",
        "meta",
        "THREE",
        "data",
        "meta",
        "THREE",
        "data",
        "meta",
        "THREE",
        "data",
        "meta",
        "data",
        "THREE",
        "data",
        "meta",
        "data",
        "THREE",
        "data",
        "meta",
        "data",
        "data",
        "THREE",
        "data",
        "meta",
        "THREE",
        "data",
        "meta",
        "THREE",
        "data",
        "meta",
        "THREE",
        "data",
        "meta",
        "THREE",
        "data",
        "meta",
        "data",
        "data",
        "data",
        "THREE",
        "data",
        "THREE",
        "data",
        "THREE",
        "data",
        "THREE",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "cache",
        "key",
        "cache",
        "cache",
        "key",
        "data",
        "values",
        "data",
        "values",
        "isRoot",
        "extractFromCache",
        "meta",
        "extractFromCache",
        "meta",
        "textures",
        "data",
        "textures",
        "images",
        "data",
        "images",
        "data",
        "clone",
        "copy",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "update",
        "dispose",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "parameters",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "THREE",
        "parameters",
        "THREE",
        "parameters",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "parameters",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "meta",
        "THREE",
        "meta",
        "data",
        "data",
        "data",
        "data",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "THREE",
        "materials",
        "THREE",
        "materials",
        "materials",
        "THREE",
        "THREE",
        "toJSON",
        "meta",
        "materials",
        "i",
        "l",
        "i",
        "materials",
        "i",
        "meta",
        "material",
        "output",
        "material",
        "output",
        "output",
        "clone",
        "i",
        "i",
        "material",
        "i",
        "material",
        "material",
        "THREE",
        "parameters",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "image",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "THREE",
        "THREE",
        "image",
        "image",
        "THREE",
        "mapping",
        "mapping",
        "THREE",
        "wrapS",
        "wrapS",
        "THREE",
        "wrapT",
        "wrapT",
        "THREE",
        "magFilter",
        "magFilter",
        "THREE",
        "minFilter",
        "minFilter",
        "THREE",
        "anisotropy",
        "anisotropy",
        "format",
        "format",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "value",
        "value",
        "clone",
        "copy",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "toJSON",
        "meta",
        "meta",
        "meta",
        "image",
        "image",
        "canvas",
        "image",
        "canvas",
        "canvas",
        "image",
        "canvas",
        "image",
        "canvas",
        "image",
        "image",
        "image",
        "canvas",
        "canvas",
        "canvas",
        "canvas",
        "image",
        "image",
        "THREE",
        "meta",
        "image",
        "meta",
        "image",
        "image",
        "getDataURL",
        "image",
        "output",
        "image",
        "meta",
        "output",
        "output",
        "dispose",
        "transformUv",
        "uv",
        "THREE",
        "uv",
        "uv",
        "uv",
        "uv",
        "THREE",
        "uv",
        "uv",
        "uv",
        "THREE",
        "uv",
        "uv",
        "THREE",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "THREE",
        "uv",
        "uv",
        "uv",
        "THREE",
        "uv",
        "uv",
        "THREE",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "uv",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "data",
        "width",
        "height",
        "format",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "anisotropy",
        "THREE",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "data",
        "width",
        "height",
        "magFilter",
        "magFilter",
        "THREE",
        "minFilter",
        "minFilter",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "mipmaps",
        "width",
        "height",
        "format",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "anisotropy",
        "THREE",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "width",
        "height",
        "mipmaps",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "images",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "images",
        "images",
        "images",
        "mapping",
        "mapping",
        "mapping",
        "THREE",
        "THREE",
        "images",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "get",
        "value",
        "value",
        "THREE",
        "video",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "THREE",
        "video",
        "mapping",
        "wrapS",
        "wrapT",
        "magFilter",
        "minFilter",
        "format",
        "anisotropy",
        "requestAnimationFrame",
        "update",
        "video",
        "video",
        "scope",
        "update",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "Uint16Array",
        "Float32Array",
        "Float32Array",
        "THREE",
        "geometry",
        "THREE",
        "indices",
        "geometry",
        "THREE",
        "vertices",
        "geometry",
        "THREE",
        "uvs",
        "Sprite",
        "material",
        "THREE",
        "geometry",
        "material",
        "material",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "raycast",
        "raycaster",
        "intersects",
        "matrixPosition",
        "raycaster",
        "matrixPosition",
        "distanceSq",
        "guessSizeSq",
        "intersects",
        "distanceSq",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "texture",
        "size",
        "distance",
        "blending",
        "color",
        "THREE",
        "THREE",
        "texture",
        "texture",
        "size",
        "distance",
        "blending",
        "color",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "texture",
        "size",
        "distance",
        "blending",
        "color",
        "opacity",
        "size",
        "size",
        "distance",
        "distance",
        "opacity",
        "opacity",
        "color",
        "color",
        "THREE",
        "blending",
        "blending",
        "THREE",
        "distance",
        "distance",
        "distance",
        "texture",
        "size",
        "distance",
        "opacity",
        "color",
        "blending",
        "THREE",
        "f",
        "f",
        "fl",
        "f",
        "flare",
        "f",
        "flare",
        "vecX",
        "flare",
        "flare",
        "vecY",
        "flare",
        "flare",
        "flare",
        "flare",
        "flare",
        "flare",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "source",
        "i",
        "l",
        "i",
        "source",
        "i",
        "THREE",
        "geometry",
        "material",
        "mode",
        "mode",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "geometry",
        "geometry",
        "THREE",
        "material",
        "material",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "raycast",
        "raycaster",
        "intersects",
        "raycaster",
        "precision",
        "precision",
        "geometry",
        "geometry",
        "sphere",
        "geometry",
        "sphere",
        "matrixWorld",
        "raycaster",
        "sphere",
        "inverseMatrix",
        "matrixWorld",
        "ray",
        "raycaster",
        "inverseMatrix",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "geometry",
        "THREE",
        "geometry",
        "geometry",
        "attributes",
        "index",
        "index",
        "indices",
        "i",
        "l",
        "i",
        "step",
        "indices",
        "i",
        "indices",
        "i",
        "vStart",
        "positions",
        "a",
        "vEnd",
        "positions",
        "b",
        "ray",
        "vStart",
        "vEnd",
        "interRay",
        "interSegment",
        "distSq",
        "precisionSq",
        "interRay",
        "raycaster",
        "interRay",
        "distance",
        "raycaster",
        "distance",
        "raycaster",
        "intersects",
        "distance",
        "interSegment",
        "i",
        "positions",
        "i",
        "l",
        "i",
        "step",
        "vStart",
        "positions",
        "i",
        "vEnd",
        "positions",
        "i",
        "ray",
        "vStart",
        "vEnd",
        "interRay",
        "interSegment",
        "distSq",
        "precisionSq",
        "interRay",
        "raycaster",
        "interRay",
        "distance",
        "raycaster",
        "distance",
        "raycaster",
        "intersects",
        "distance",
        "interSegment",
        "i",
        "geometry",
        "THREE",
        "geometry",
        "vertices",
        "i",
        "nbVertices",
        "i",
        "step",
        "ray",
        "vertices",
        "i",
        "vertices",
        "i",
        "interRay",
        "interSegment",
        "distSq",
        "precisionSq",
        "interRay",
        "raycaster",
        "interRay",
        "distance",
        "raycaster",
        "distance",
        "raycaster",
        "intersects",
        "distance",
        "interSegment",
        "i",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "geometry",
        "geometry",
        "THREE",
        "material",
        "material",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "value",
        "value",
        "THREE",
        "m",
        "ml",
        "m",
        "m",
        "m",
        "THREE",
        "name",
        "name",
        "name",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "point",
        "p1",
        "p2",
        "p3",
        "uv1",
        "uv2",
        "uv3",
        "THREE",
        "point",
        "p1",
        "p2",
        "p3",
        "barycoord",
        "uv1",
        "barycoord",
        "uv2",
        "barycoord",
        "uv3",
        "barycoord",
        "uv1",
        "uv2",
        "uv3",
        "uv1",
        "raycaster",
        "ray",
        "pA",
        "pB",
        "pC",
        "point",
        "material",
        "THREE",
        "intersect",
        "ray",
        "pC",
        "pB",
        "pA",
        "point",
        "intersect",
        "ray",
        "pA",
        "pB",
        "pC",
        "material",
        "THREE",
        "point",
        "intersect",
        "intersectionPointWorld",
        "point",
        "intersectionPointWorld",
        "raycaster",
        "intersectionPointWorld",
        "distance",
        "raycaster",
        "distance",
        "raycaster",
        "distance",
        "intersectionPointWorld",
        "raycaster",
        "ray",
        "positions",
        "uvs",
        "a",
        "b",
        "c",
        "vA",
        "positions",
        "a",
        "vB",
        "positions",
        "b",
        "vC",
        "positions",
        "c",
        "checkIntersection",
        "raycaster",
        "ray",
        "vA",
        "vB",
        "vC",
        "intersectionPoint",
        "intersection",
        "uvs",
        "uvA",
        "uvs",
        "a",
        "uvB",
        "uvs",
        "b",
        "uvC",
        "uvs",
        "c",
        "intersection",
        "uvIntersection",
        "intersectionPoint",
        "vA",
        "vB",
        "vC",
        "uvA",
        "uvB",
        "uvC",
        "intersection",
        "THREE",
        "a",
        "b",
        "c",
        "THREE",
        "vA",
        "vB",
        "vC",
        "intersection",
        "a",
        "intersection",
        "raycast",
        "raycaster",
        "intersects",
        "material",
        "geometry",
        "geometry",
        "sphere",
        "geometry",
        "sphere",
        "matrixWorld",
        "raycaster",
        "sphere",
        "inverseMatrix",
        "matrixWorld",
        "ray",
        "raycaster",
        "inverseMatrix",
        "geometry",
        "ray",
        "geometry",
        "geometry",
        "THREE",
        "geometry",
        "geometry",
        "attributes",
        "attributes",
        "uvs",
        "attributes",
        "index",
        "index",
        "indices",
        "i",
        "l",
        "i",
        "a",
        "indices",
        "i",
        "b",
        "indices",
        "i",
        "c",
        "indices",
        "i",
        "intersection",
        "checkBufferGeometryIntersection",
        "raycaster",
        "ray",
        "positions",
        "uvs",
        "a",
        "b",
        "c",
        "intersection",
        "intersection",
        "i",
        "intersects",
        "intersection",
        "positions",
        "i",
        "l",
        "i",
        "a",
        "i",
        "b",
        "a",
        "c",
        "a",
        "intersection",
        "checkBufferGeometryIntersection",
        "raycaster",
        "ray",
        "positions",
        "uvs",
        "a",
        "b",
        "c",
        "intersection",
        "intersection",
        "a",
        "intersects",
        "intersection",
        "geometry",
        "THREE",
        "material",
        "THREE",
        "isFaceMaterial",
        "material",
        "geometry",
        "geometry",
        "geometry",
        "faceVertexUvs",
        "uvs",
        "faceVertexUvs",
        "faces",
        "f",
        "fl",
        "f",
        "faces",
        "f",
        "isFaceMaterial",
        "materials",
        "face",
        "material",
        "faceMaterial",
        "fvA",
        "vertices",
        "face",
        "fvB",
        "vertices",
        "face",
        "fvC",
        "vertices",
        "face",
        "faceMaterial",
        "geometry",
        "vA",
        "vB",
        "vC",
        "morphTargets",
        "t",
        "tl",
        "t",
        "morphInfluences",
        "t",
        "influence",
        "morphTargets",
        "t",
        "vA",
        "tempA",
        "targets",
        "face",
        "fvA",
        "influence",
        "vB",
        "tempB",
        "targets",
        "face",
        "fvB",
        "influence",
        "vC",
        "tempC",
        "targets",
        "face",
        "fvC",
        "influence",
        "vA",
        "fvA",
        "vB",
        "fvB",
        "vC",
        "fvC",
        "fvA",
        "vA",
        "fvB",
        "vB",
        "fvC",
        "vC",
        "intersection",
        "checkIntersection",
        "raycaster",
        "ray",
        "fvA",
        "fvB",
        "fvC",
        "intersectionPoint",
        "intersection",
        "uvs",
        "uvs",
        "f",
        "uvA",
        "uvs_f",
        "uvB",
        "uvs_f",
        "uvC",
        "uvs_f",
        "intersection",
        "uvIntersection",
        "intersectionPoint",
        "fvA",
        "fvB",
        "fvC",
        "uvA",
        "uvB",
        "uvC",
        "intersection",
        "face",
        "intersection",
        "f",
        "intersects",
        "intersection",
        "THREE",
        "THREE",
        "geometry",
        "material",
        "useVertexTexture",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "THREE",
        "b",
        "bl",
        "b",
        "gbone",
        "b",
        "bone",
        "THREE",
        "bones",
        "bone",
        "bone",
        "gbone",
        "bone",
        "gbone",
        "bone",
        "gbone",
        "gbone",
        "bone",
        "gbone",
        "b",
        "bl",
        "b",
        "gbone",
        "b",
        "gbone",
        "gbone",
        "bones",
        "gbone",
        "bones",
        "b",
        "bones",
        "b",
        "THREE",
        "bones",
        "useVertexTexture",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "skeleton",
        "bindMatrix",
        "skeleton",
        "bindMatrix",
        "bindMatrix",
        "bindMatrix",
        "bindMatrix",
        "THREE",
        "THREE",
        "THREE",
        "i",
        "i",
        "i",
        "sw",
        "scale",
        "Infinity",
        "sw",
        "scale",
        "sw",
        "THREE",
        "THREE",
        "i",
        "skinWeight",
        "i",
        "vec",
        "skinWeight",
        "i",
        "vec",
        "skinWeight",
        "i",
        "vec",
        "skinWeight",
        "i",
        "vec",
        "skinWeight",
        "i",
        "vec",
        "scale",
        "Infinity",
        "vec",
        "scale",
        "vec",
        "skinWeight",
        "i",
        "vec",
        "vec",
        "vec",
        "vec",
        "THREE",
        "force",
        "THREE",
        "THREE",
        "THREE",
        "geometry",
        "material",
        "THREE",
        "geometry",
        "geometry",
        "THREE",
        "material",
        "material",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "raycast",
        "raycaster",
        "intersects",
        "raycaster",
        "geometry",
        "geometry",
        "sphere",
        "geometry",
        "sphere",
        "matrixWorld",
        "raycaster",
        "sphere",
        "inverseMatrix",
        "matrixWorld",
        "ray",
        "raycaster",
        "inverseMatrix",
        "threshold",
        "localThreshold",
        "localThreshold",
        "THREE",
        "point",
        "index",
        "ray",
        "point",
        "rayPointDistanceSq",
        "localThresholdSq",
        "ray",
        "point",
        "intersectPoint",
        "matrixWorld",
        "raycaster",
        "intersectPoint",
        "distance",
        "raycaster",
        "distance",
        "raycaster",
        "intersects",
        "distance",
        "rayPointDistanceSq",
        "intersectPoint",
        "index",
        "geometry",
        "THREE",
        "geometry",
        "geometry",
        "attributes",
        "index",
        "index",
        "indices",
        "i",
        "il",
        "i",
        "indices",
        "i",
        "position",
        "positions",
        "a",
        "testPoint",
        "position",
        "a",
        "positions",
        "i",
        "l",
        "i",
        "position",
        "positions",
        "i",
        "testPoint",
        "position",
        "i",
        "geometry",
        "vertices",
        "i",
        "l",
        "i",
        "testPoint",
        "vertices",
        "i",
        "i",
        "THREE",
        "THREE",
        "color",
        "intensity",
        "THREE",
        "THREE",
        "color",
        "intensity",
        "intensity",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "source",
        "THREE",
        "source",
        "source",
        "source",
        "THREE",
        "meta",
        "THREE",
        "meta",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "merge",
        "uniforms",
        "u",
        "uniforms",
        "u",
        "uniforms",
        "u",
        "p",
        "tmp",
        "merged",
        "p",
        "tmp",
        "p",
        "merged",
        "clone",
        "uniforms_src",
        "u",
        "uniforms_src",
        "uniforms_dst",
        "u",
        "p",
        "uniforms_src",
        "u",
        "uniforms_src",
        "u",
        "p",
        "parameter_src",
        "THREE",
        "parameter_src",
        "THREE",
        "parameter_src",
        "THREE",
        "parameter_src",
        "THREE",
        "parameter_src",
        "THREE",
        "parameter_src",
        "THREE",
        "parameter_src",
        "THREE",
        "uniforms_dst",
        "u",
        "p",
        "parameter_src",
        "parameter_src",
        "uniforms_dst",
        "u",
        "p",
        "parameter_src",
        "uniforms_dst",
        "u",
        "p",
        "parameter_src",
        "uniforms_dst",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "Float32Array",
        "_canvas",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "_canvas",
        "_canvas",
        "THREE",
        "_width",
        "_height",
        "THREE",
        "_width",
        "_height",
        "THREE",
        "THREE",
        "THREE",
        "_infoRender",
        "_infoMemory",
        "_alpha",
        "_depth",
        "_stencil",
        "_antialias",
        "_premultipliedAlpha",
        "_preserveDrawingBuffer",
        "_gl",
        "_context",
        "_canvas",
        "attributes",
        "_canvas",
        "attributes",
        "_gl",
        "_canvas",
        "_gl",
        "_gl",
        "_canvas",
        "onContextLost",
        "error",
        "THREE",
        "_gl",
        "extensions",
        "extensions",
        "extensions",
        "extensions",
        "extensions",
        "extensions",
        "extensions",
        "THREE",
        "THREE",
        "_gl",
        "extensions",
        "parameters",
        "THREE",
        "_gl",
        "extensions",
        "paramThreeToGL",
        "THREE",
        "THREE",
        "_gl",
        "properties",
        "THREE",
        "capabilities",
        "THREE",
        "programCache",
        "THREE",
        "_gl",
        "extensions",
        "_infoRender",
        "THREE",
        "_gl",
        "extensions",
        "_infoRender",
        "_currentRenderTarget",
        "_pixelRatio",
        "r",
        "g",
        "b",
        "a",
        "_premultipliedAlpha",
        "r",
        "a",
        "g",
        "a",
        "b",
        "a",
        "state",
        "r",
        "g",
        "b",
        "a",
        "state",
        "state",
        "_currentScissor",
        "_scissor",
        "_pixelRatio",
        "state",
        "_currentViewport",
        "_viewport",
        "_pixelRatio",
        "glClearColor",
        "_clearColor",
        "_clearColor",
        "_clearColor",
        "_clearAlpha",
        "_currentProgram",
        "_currentCamera",
        "_currentGeometryProgram",
        "_currentMaterialId",
        "state",
        "setDefaultGLState",
        "_gl",
        "capabilities",
        "extensions",
        "properties",
        "state",
        "THREE",
        "_lights",
        "objects",
        "shadowMap",
        "THREE",
        "sprites",
        "THREE",
        "lensFlares",
        "_gl",
        "_gl",
        "extensions",
        "getMaxAnisotropy",
        "value",
        "value",
        "extensions",
        "extension",
        "value",
        "_gl",
        "extension",
        "value",
        "value",
        "capabilities",
        "_pixelRatio",
        "value",
        "value",
        "_pixelRatio",
        "value",
        "_viewport",
        "_viewport",
        "_width",
        "_height",
        "width",
        "height",
        "updateStyle",
        "_width",
        "width",
        "_height",
        "height",
        "_canvas",
        "width",
        "_pixelRatio",
        "_canvas",
        "height",
        "_pixelRatio",
        "updateStyle",
        "_canvas",
        "width",
        "_canvas",
        "height",
        "width",
        "height",
        "x",
        "y",
        "width",
        "height",
        "state",
        "_viewport",
        "x",
        "y",
        "width",
        "height",
        "x",
        "y",
        "width",
        "height",
        "state",
        "_scissor",
        "x",
        "y",
        "width",
        "height",
        "state",
        "_scissorTest",
        "_clearColor",
        "color",
        "alpha",
        "_clearColor",
        "color",
        "_clearAlpha",
        "alpha",
        "alpha",
        "glClearColor",
        "_clearColor",
        "_clearColor",
        "_clearColor",
        "_clearAlpha",
        "_clearAlpha",
        "alpha",
        "_clearAlpha",
        "alpha",
        "glClearColor",
        "_clearColor",
        "_clearColor",
        "_clearColor",
        "_clearAlpha",
        "color",
        "depth",
        "stencil",
        "color",
        "color",
        "bits",
        "_gl",
        "depth",
        "depth",
        "bits",
        "_gl",
        "stencil",
        "stencil",
        "bits",
        "_gl",
        "_gl",
        "bits",
        "renderTarget",
        "color",
        "depth",
        "stencil",
        "renderTarget",
        "color",
        "depth",
        "stencil",
        "resetGLState",
        "_canvas",
        "onContextLost",
        "resetGLState",
        "setDefaultGLState",
        "properties",
        "texture",
        "onTextureDispose",
        "deallocateTexture",
        "texture",
        "_infoMemory",
        "renderTarget",
        "onRenderTargetDispose",
        "deallocateRenderTarget",
        "renderTarget",
        "_infoMemory",
        "material",
        "onMaterialDispose",
        "deallocateMaterial",
        "material",
        "texture",
        "properties",
        "texture",
        "texture",
        "textureProperties",
        "_gl",
        "textureProperties",
        "textureProperties",
        "_gl",
        "textureProperties",
        "properties",
        "texture",
        "renderTarget",
        "properties",
        "renderTarget",
        "properties",
        "renderTarget",
        "renderTarget",
        "textureProperties",
        "_gl",
        "textureProperties",
        "renderTarget",
        "THREE",
        "i",
        "i",
        "_gl",
        "renderTargetProperties",
        "i",
        "_gl",
        "renderTargetProperties",
        "i",
        "_gl",
        "renderTargetProperties",
        "_gl",
        "renderTargetProperties",
        "properties",
        "renderTarget",
        "properties",
        "renderTarget",
        "material",
        "releaseMaterialProgramReference",
        "material",
        "properties",
        "material",
        "material",
        "properties",
        "material",
        "material",
        "programInfo",
        "programCache",
        "programInfo",
        "program",
        "material",
        "state",
        "properties",
        "buffers",
        "buffers",
        "_gl",
        "buffers",
        "buffers",
        "_gl",
        "buffers",
        "buffers",
        "_gl",
        "buffers",
        "buffers",
        "_gl",
        "program",
        "_gl",
        "_gl",
        "buffers",
        "_gl",
        "_gl",
        "_gl",
        "state",
        "attributes",
        "_gl",
        "attributes",
        "_gl",
        "_gl",
        "_gl",
        "buffers",
        "material",
        "material",
        "material",
        "THREE",
        "i",
        "l",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "nx",
        "array",
        "i",
        "ny",
        "array",
        "i",
        "nz",
        "array",
        "i",
        "nx",
        "array",
        "i",
        "ny",
        "array",
        "i",
        "nz",
        "array",
        "i",
        "nx",
        "array",
        "i",
        "ny",
        "array",
        "i",
        "nz",
        "_gl",
        "_gl",
        "_gl",
        "state",
        "attributes",
        "_gl",
        "attributes",
        "_gl",
        "material",
        "_gl",
        "_gl",
        "buffers",
        "_gl",
        "_gl",
        "_gl",
        "state",
        "attributes",
        "_gl",
        "attributes",
        "_gl",
        "material",
        "THREE",
        "_gl",
        "_gl",
        "buffers",
        "_gl",
        "_gl",
        "_gl",
        "state",
        "attributes",
        "_gl",
        "attributes",
        "_gl",
        "state",
        "_gl",
        "_gl",
        "camera",
        "fog",
        "geometry",
        "material",
        "group",
        "setMaterial",
        "material",
        "setProgram",
        "camera",
        "fog",
        "material",
        "geometry",
        "program",
        "material",
        "geometryProgram",
        "_currentGeometryProgram",
        "_currentGeometryProgram",
        "geometryProgram",
        "updateBuffers",
        "morphTargetInfluences",
        "morphTargetInfluences",
        "i",
        "l",
        "i",
        "morphTargetInfluences",
        "i",
        "activeInfluences",
        "influence",
        "i",
        "activeInfluences",
        "absNumericalSort",
        "activeInfluences",
        "activeInfluences",
        "geometry",
        "activeInfluences",
        "i",
        "l",
        "i",
        "activeInfluences",
        "i",
        "morphInfluences",
        "i",
        "influence",
        "influence",
        "influence",
        "material",
        "morphAttributes",
        "geometry",
        "i",
        "morphAttributes",
        "index",
        "material",
        "morphAttributes",
        "geometry",
        "i",
        "morphAttributes",
        "index",
        "material",
        "geometry",
        "i",
        "material",
        "geometry",
        "i",
        "program",
        "uniforms",
        "_gl",
        "uniforms",
        "morphInfluences",
        "updateBuffers",
        "geometry",
        "geometry",
        "material",
        "index",
        "objects",
        "geometry",
        "index",
        "renderer",
        "indexedBufferRenderer",
        "renderer",
        "index",
        "renderer",
        "bufferRenderer",
        "updateBuffers",
        "setupVertexAttributes",
        "material",
        "program",
        "geometry",
        "index",
        "_gl",
        "_gl",
        "objects",
        "index",
        "index",
        "dataCount",
        "index",
        "position",
        "dataCount",
        "position",
        "geometry",
        "geometry",
        "group",
        "group",
        "group",
        "group",
        "Infinity",
        "dataStart",
        "rangeStart",
        "groupStart",
        "dataStart",
        "dataCount",
        "rangeStart",
        "rangeCount",
        "groupStart",
        "groupCount",
        "drawEnd",
        "drawStart",
        "THREE",
        "material",
        "state",
        "material",
        "getTargetPixelRatio",
        "renderer",
        "_gl",
        "THREE",
        "renderer",
        "_gl",
        "THREE",
        "renderer",
        "_gl",
        "THREE",
        "renderer",
        "_gl",
        "THREE",
        "material",
        "lineWidth",
        "lineWidth",
        "state",
        "lineWidth",
        "getTargetPixelRatio",
        "THREE",
        "renderer",
        "_gl",
        "renderer",
        "_gl",
        "THREE",
        "renderer",
        "_gl",
        "geometry",
        "THREE",
        "geometry",
        "renderer",
        "geometry",
        "drawStart",
        "drawCount",
        "renderer",
        "drawStart",
        "drawCount",
        "material",
        "program",
        "geometry",
        "startIndex",
        "geometry",
        "THREE",
        "extension",
        "extensions",
        "extension",
        "startIndex",
        "startIndex",
        "state",
        "geometry",
        "program",
        "material",
        "name",
        "programAttributes",
        "programAttributes",
        "name",
        "programAttribute",
        "geometryAttributes",
        "name",
        "geometryAttribute",
        "geometryAttribute",
        "objects",
        "geometryAttribute",
        "geometryAttribute",
        "THREE",
        "geometryAttribute",
        "data",
        "geometryAttribute",
        "data",
        "THREE",
        "state",
        "programAttribute",
        "data",
        "extension",
        "geometry",
        "geometry",
        "data",
        "data",
        "state",
        "programAttribute",
        "_gl",
        "_gl",
        "buffer",
        "_gl",
        "programAttribute",
        "size",
        "_gl",
        "stride",
        "data",
        "startIndex",
        "stride",
        "offset",
        "data",
        "geometryAttribute",
        "THREE",
        "state",
        "programAttribute",
        "geometryAttribute",
        "extension",
        "geometry",
        "geometry",
        "geometryAttribute",
        "geometryAttribute",
        "state",
        "programAttribute",
        "_gl",
        "_gl",
        "buffer",
        "_gl",
        "programAttribute",
        "size",
        "_gl",
        "startIndex",
        "size",
        "materialDefaultAttributeValues",
        "materialDefaultAttributeValues",
        "name",
        "value",
        "value",
        "_gl",
        "programAttribute",
        "value",
        "_gl",
        "programAttribute",
        "value",
        "_gl",
        "programAttribute",
        "value",
        "_gl",
        "programAttribute",
        "value",
        "state",
        "a",
        "b",
        "b",
        "a",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "b",
        "a",
        "a",
        "b",
        "scene",
        "camera",
        "renderTarget",
        "forceClear",
        "camera",
        "THREE",
        "scene",
        "_currentGeometryProgram",
        "_currentMaterialId",
        "_currentCamera",
        "scene",
        "scene",
        "camera",
        "camera",
        "camera",
        "camera",
        "_projScreenMatrix",
        "camera",
        "camera",
        "_frustum",
        "_projScreenMatrix",
        "lights",
        "opaqueObjectsLastIndex",
        "transparentObjectsLastIndex",
        "sprites",
        "lensFlares",
        "projectObject",
        "scene",
        "camera",
        "opaqueObjects",
        "opaqueObjectsLastIndex",
        "transparentObjects",
        "transparentObjectsLastIndex",
        "_this",
        "opaqueObjects",
        "painterSortStable",
        "transparentObjects",
        "reversePainterSortStable",
        "setupLights",
        "lights",
        "camera",
        "shadowMap",
        "scene",
        "camera",
        "_infoRender",
        "_infoRender",
        "_infoRender",
        "_infoRender",
        "renderTarget",
        "renderTarget",
        "renderTarget",
        "forceClear",
        "scene",
        "scene",
        "renderObjects",
        "opaqueObjects",
        "camera",
        "fog",
        "overrideMaterial",
        "renderObjects",
        "transparentObjects",
        "camera",
        "fog",
        "overrideMaterial",
        "state",
        "THREE",
        "renderObjects",
        "opaqueObjects",
        "camera",
        "fog",
        "renderObjects",
        "transparentObjects",
        "camera",
        "fog",
        "spritePlugin",
        "scene",
        "camera",
        "lensFlarePlugin",
        "scene",
        "camera",
        "_currentViewport",
        "renderTarget",
        "renderTarget",
        "texture",
        "isPowerOfTwo",
        "renderTarget",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "updateRenderTargetMipmap",
        "renderTarget",
        "state",
        "state",
        "state",
        "geometry",
        "material",
        "z",
        "group",
        "material",
        "array",
        "transparentObjects",
        "index",
        "transparentObjectsLastIndex",
        "array",
        "opaqueObjects",
        "index",
        "opaqueObjectsLastIndex",
        "array",
        "index",
        "renderItem",
        "renderItem",
        "renderItem",
        "renderItem",
        "geometry",
        "renderItem",
        "material",
        "renderItem",
        "_vector3",
        "renderItem",
        "group",
        "renderItem",
        "geometry",
        "material",
        "_vector3",
        "group",
        "array",
        "renderItem",
        "camera",
        "camera",
        "THREE",
        "lights",
        "THREE",
        "_frustum",
        "sprites",
        "THREE",
        "lensFlares",
        "THREE",
        "_this",
        "_vector3",
        "_vector3",
        "_projScreenMatrix",
        "pushRenderItem",
        "_vector3",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "_frustum",
        "material",
        "_this",
        "_vector3",
        "_vector3",
        "_projScreenMatrix",
        "objects",
        "material",
        "THREE",
        "geometry",
        "material",
        "groups",
        "i",
        "l",
        "i",
        "groups",
        "i",
        "materials",
        "group",
        "groupMaterial",
        "pushRenderItem",
        "geometry",
        "groupMaterial",
        "_vector3",
        "group",
        "pushRenderItem",
        "geometry",
        "material",
        "_vector3",
        "children",
        "i",
        "l",
        "i",
        "projectObject",
        "children",
        "i",
        "camera",
        "renderList",
        "camera",
        "fog",
        "overrideMaterial",
        "renderList",
        "i",
        "l",
        "i",
        "renderList",
        "i",
        "renderItem",
        "renderItem",
        "overrideMaterial",
        "renderItem",
        "overrideMaterial",
        "renderItem",
        "camera",
        "THREE",
        "setMaterial",
        "material",
        "setProgram",
        "camera",
        "fog",
        "material",
        "_currentGeometryProgram",
        "_this",
        "program",
        "material",
        "_this",
        "camera",
        "fog",
        "geometry",
        "material",
        "group",
        "material",
        "fog",
        "properties",
        "material",
        "programCache",
        "material",
        "_lights",
        "fog",
        "programCache",
        "material",
        "parameters",
        "materialProperties",
        "program",
        "material",
        "onMaterialDispose",
        "program",
        "code",
        "releaseMaterialProgramReference",
        "material",
        "parameters",
        "programChange",
        "programChange",
        "parameters",
        "THREE",
        "parameters",
        "materialProperties",
        "material",
        "THREE",
        "shader",
        "shader",
        "shader",
        "materialProperties",
        "material",
        "material",
        "material",
        "material",
        "material",
        "materialProperties",
        "program",
        "programCache",
        "material",
        "parameters",
        "code",
        "materialProperties",
        "program",
        "material",
        "program",
        "program",
        "material",
        "material",
        "i",
        "_this",
        "i",
        "attributes",
        "i",
        "material",
        "material",
        "material",
        "i",
        "_this",
        "i",
        "attributes",
        "i",
        "material",
        "materialProperties",
        "materialProperties",
        "materialProperties",
        "u",
        "uniforms",
        "uniformLocations",
        "u",
        "location",
        "materialProperties",
        "materialProperties",
        "u",
        "location",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "materialProperties",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "uniforms",
        "_lights",
        "materialProperties",
        "materialProperties",
        "j",
        "jl",
        "j",
        "materialProperties",
        "j",
        "uniform",
        "materialProperties",
        "material",
        "setMaterialFaces",
        "material",
        "material",
        "state",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "state",
        "THREE",
        "state",
        "material",
        "state",
        "material",
        "state",
        "material",
        "state",
        "material",
        "state",
        "material",
        "material",
        "material",
        "material",
        "material",
        "THREE",
        "state",
        "_gl",
        "state",
        "_gl",
        "state",
        "material",
        "THREE",
        "camera",
        "fog",
        "material",
        "_usedTextureUnits",
        "properties",
        "material",
        "materialProperties",
        "material",
        "materialProperties",
        "materialProperties",
        "_lights",
        "material",
        "material",
        "initMaterial",
        "material",
        "fog",
        "material",
        "materialProperties",
        "program",
        "materialProperties",
        "program",
        "_currentProgram",
        "_gl",
        "program",
        "_currentProgram",
        "program",
        "refreshProgram",
        "refreshMaterial",
        "refreshLights",
        "material",
        "_currentMaterialId",
        "_currentMaterialId",
        "material",
        "refreshMaterial",
        "refreshProgram",
        "camera",
        "_currentCamera",
        "_gl",
        "p_uniforms",
        "camera",
        "capabilities",
        "_gl",
        "p_uniforms",
        "camera",
        "camera",
        "_currentCamera",
        "_currentCamera",
        "camera",
        "refreshMaterial",
        "refreshLights",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "p_uniforms",
        "_vector3",
        "camera",
        "_gl",
        "p_uniforms",
        "_vector3",
        "_vector3",
        "_vector3",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "camera",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "_this",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "_this",
        "material",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "capabilities",
        "p_uniforms",
        "getTextureUnit",
        "_gl",
        "p_uniforms",
        "textureUnit",
        "_this",
        "textureUnit",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "refreshMaterial",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "markUniformsLightsNeedsUpdate",
        "m_uniforms",
        "refreshLights",
        "fog",
        "material",
        "refreshUniformsFog",
        "m_uniforms",
        "fog",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "THREE",
        "refreshUniformsCommon",
        "m_uniforms",
        "material",
        "material",
        "THREE",
        "refreshUniformsLine",
        "m_uniforms",
        "material",
        "material",
        "THREE",
        "refreshUniformsLine",
        "m_uniforms",
        "material",
        "refreshUniformsDash",
        "m_uniforms",
        "material",
        "material",
        "THREE",
        "refreshUniformsPoints",
        "m_uniforms",
        "material",
        "material",
        "THREE",
        "refreshUniformsLambert",
        "m_uniforms",
        "material",
        "material",
        "THREE",
        "refreshUniformsPhong",
        "m_uniforms",
        "material",
        "material",
        "THREE",
        "refreshUniformsStandard",
        "m_uniforms",
        "material",
        "material",
        "THREE",
        "m_uniforms",
        "camera",
        "m_uniforms",
        "camera",
        "m_uniforms",
        "material",
        "material",
        "THREE",
        "m_uniforms",
        "material",
        "loadUniformsGeneric",
        "materialProperties",
        "loadUniformsMatrices",
        "p_uniforms",
        "p_uniforms",
        "_gl",
        "p_uniforms",
        "materialProperties",
        "updateDynamicUniforms",
        "materialProperties",
        "camera",
        "program",
        "uniforms",
        "camera",
        "uniforms",
        "j",
        "jl",
        "j",
        "uniforms",
        "j",
        "uniform",
        "onUpdateCallback",
        "onUpdateCallback",
        "uniform",
        "camera",
        "dynamicUniforms",
        "uniforms",
        "j",
        "loadUniformsGeneric",
        "dynamicUniforms",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uvScaleMap",
        "material",
        "material",
        "uvScaleMap",
        "material",
        "material",
        "uvScaleMap",
        "material",
        "material",
        "uvScaleMap",
        "material",
        "material",
        "uvScaleMap",
        "material",
        "material",
        "uvScaleMap",
        "material",
        "material",
        "uvScaleMap",
        "material",
        "material",
        "uvScaleMap",
        "material",
        "material",
        "uvScaleMap",
        "material",
        "uvScaleMap",
        "uvScaleMap",
        "THREE",
        "uvScaleMap",
        "uvScaleMap",
        "uvScaleMap",
        "uvScaleMap",
        "uniforms",
        "offset",
        "offset",
        "repeat",
        "repeat",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "THREE",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "_pixelRatio",
        "uniforms",
        "_canvas",
        "uniforms",
        "material",
        "material",
        "material",
        "material",
        "uniforms",
        "offset",
        "offset",
        "repeat",
        "repeat",
        "uniforms",
        "fog",
        "uniforms",
        "fog",
        "fog",
        "THREE",
        "uniforms",
        "fog",
        "uniforms",
        "fog",
        "fog",
        "THREE",
        "uniforms",
        "fog",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "material",
        "material",
        "uniforms",
        "material",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "uniforms",
        "value",
        "uniforms",
        "_gl",
        "uniforms",
        "uniforms",
        "_gl",
        "uniforms",
        "textureUnit",
        "capabilities",
        "_usedTextureUnits",
        "textureUnit",
        "uniform",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "value",
        "_gl",
        "location",
        "value",
        "value",
        "value",
        "_gl",
        "location",
        "value",
        "value",
        "value",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "value",
        "_gl",
        "location",
        "value",
        "value",
        "value",
        "_gl",
        "location",
        "value",
        "value",
        "value",
        "value",
        "_gl",
        "location",
        "value",
        "value",
        "value",
        "uniform",
        "name",
        "properties",
        "properties",
        "name",
        "location",
        "name",
        "value",
        "name",
        "loadUniform",
        "property",
        "property",
        "locationProperty",
        "valueProperty",
        "uniform",
        "value",
        "i",
        "l",
        "i",
        "name",
        "properties",
        "properties",
        "name",
        "location",
        "i",
        "name",
        "value",
        "i",
        "name",
        "loadUniform",
        "property",
        "property",
        "locationProperty",
        "valueProperty",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "uniform",
        "uniform",
        "Float32Array",
        "value",
        "value",
        "i",
        "il",
        "i",
        "i2",
        "uniform",
        "i2",
        "value",
        "i",
        "uniform",
        "i2",
        "value",
        "i",
        "_gl",
        "location",
        "uniform",
        "uniform",
        "uniform",
        "Float32Array",
        "value",
        "value",
        "i",
        "il",
        "i",
        "i3",
        "uniform",
        "i3",
        "value",
        "i",
        "uniform",
        "i3",
        "value",
        "i",
        "uniform",
        "i3",
        "value",
        "i",
        "_gl",
        "location",
        "uniform",
        "uniform",
        "uniform",
        "Float32Array",
        "value",
        "value",
        "i",
        "il",
        "i",
        "i4",
        "uniform",
        "i4",
        "value",
        "i",
        "uniform",
        "i4",
        "value",
        "i",
        "uniform",
        "i4",
        "value",
        "i",
        "uniform",
        "i4",
        "value",
        "i",
        "_gl",
        "location",
        "uniform",
        "_gl",
        "location",
        "value",
        "_gl",
        "location",
        "value",
        "uniform",
        "uniform",
        "Float32Array",
        "value",
        "value",
        "i",
        "il",
        "i",
        "value",
        "i",
        "uniform",
        "i",
        "_gl",
        "location",
        "uniform",
        "_gl",
        "location",
        "value",
        "uniform",
        "uniform",
        "Float32Array",
        "value",
        "value",
        "i",
        "il",
        "i",
        "value",
        "i",
        "uniform",
        "i",
        "_gl",
        "location",
        "uniform",
        "texture",
        "value",
        "textureUnit",
        "getTextureUnit",
        "_gl",
        "location",
        "textureUnit",
        "texture",
        "texture",
        "THREE",
        "texture",
        "texture",
        "setCubeTexture",
        "texture",
        "textureUnit",
        "texture",
        "THREE",
        "setCubeTextureDynamic",
        "texture",
        "textureUnit",
        "texture",
        "THREE",
        "_this",
        "texture",
        "textureUnit",
        "_this",
        "texture",
        "textureUnit",
        "uniform",
        "uniform",
        "uniform",
        "i",
        "il",
        "i",
        "uniform",
        "i",
        "getTextureUnit",
        "_gl",
        "location",
        "uniform",
        "uniform",
        "i",
        "il",
        "i",
        "texture",
        "uniform",
        "i",
        "textureUnit",
        "uniform",
        "i",
        "texture",
        "texture",
        "THREE",
        "texture",
        "texture",
        "setCubeTexture",
        "texture",
        "textureUnit",
        "texture",
        "THREE",
        "_this",
        "texture",
        "textureUnit",
        "texture",
        "THREE",
        "setCubeTextureDynamic",
        "texture",
        "textureUnit",
        "_this",
        "texture",
        "textureUnit",
        "uniforms",
        "uniforms",
        "i",
        "l",
        "i",
        "uniforms",
        "i",
        "uniform",
        "uniform",
        "uniforms",
        "i",
        "uniform",
        "loadUniform",
        "uniform",
        "location",
        "value",
        "lights",
        "camera",
        "camera",
        "_lights",
        "l",
        "ll",
        "lights",
        "l",
        "ll",
        "l",
        "light",
        "lights",
        "l",
        "color",
        "light",
        "intensity",
        "light",
        "distance",
        "light",
        "light",
        "THREE",
        "r",
        "color",
        "intensity",
        "g",
        "color",
        "intensity",
        "b",
        "color",
        "intensity",
        "light",
        "THREE",
        "lightCache",
        "light",
        "uniforms",
        "light",
        "light",
        "uniforms",
        "light",
        "_vector3",
        "light",
        "uniforms",
        "_vector3",
        "uniforms",
        "viewMatrix",
        "uniforms",
        "light",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "_lights",
        "shadowsLength",
        "light",
        "_lights",
        "directionalLength",
        "light",
        "_lights",
        "directionalLength",
        "light",
        "_lights",
        "directionalLength",
        "uniforms",
        "light",
        "THREE",
        "lightCache",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "viewMatrix",
        "uniforms",
        "color",
        "intensity",
        "uniforms",
        "distance",
        "uniforms",
        "light",
        "_vector3",
        "light",
        "uniforms",
        "_vector3",
        "uniforms",
        "viewMatrix",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "light",
        "uniforms",
        "light",
        "light",
        "uniforms",
        "light",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "_lights",
        "shadowsLength",
        "light",
        "_lights",
        "spotLength",
        "light",
        "_lights",
        "spotLength",
        "light",
        "_lights",
        "spotLength",
        "uniforms",
        "light",
        "THREE",
        "lightCache",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "viewMatrix",
        "uniforms",
        "light",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "light",
        "uniforms",
        "light",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "light",
        "_lights",
        "shadowsLength",
        "light",
        "_lights",
        "pointLength",
        "light",
        "_lights",
        "pointLength",
        "_lights",
        "pointLength",
        "THREE",
        "_vector3",
        "light",
        "_lights",
        "pointLength",
        "_vector3",
        "_lights",
        "pointLength",
        "uniforms",
        "light",
        "THREE",
        "lightCache",
        "light",
        "uniforms",
        "light",
        "uniforms",
        "viewMatrix",
        "uniforms",
        "uniforms",
        "light",
        "intensity",
        "uniforms",
        "light",
        "intensity",
        "_lights",
        "hemiLength",
        "uniforms",
        "_lights",
        "r",
        "_lights",
        "g",
        "_lights",
        "b",
        "_lights",
        "directionalLength",
        "_lights",
        "spotLength",
        "_lights",
        "pointLength",
        "_lights",
        "hemiLength",
        "_lights",
        "shadowsLength",
        "_lights",
        "directionalLength",
        "pointLength",
        "spotLength",
        "hemiLength",
        "shadowsLength",
        "cullFace",
        "frontFaceDirection",
        "cullFace",
        "THREE",
        "state",
        "_gl",
        "frontFaceDirection",
        "THREE",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "cullFace",
        "THREE",
        "_gl",
        "_gl",
        "cullFace",
        "THREE",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "state",
        "_gl",
        "textureType",
        "texture",
        "isPowerOfTwoImage",
        "isPowerOfTwoImage",
        "_gl",
        "textureType",
        "_gl",
        "paramThreeToGL",
        "texture",
        "_gl",
        "textureType",
        "_gl",
        "paramThreeToGL",
        "texture",
        "_gl",
        "textureType",
        "_gl",
        "paramThreeToGL",
        "texture",
        "_gl",
        "textureType",
        "_gl",
        "paramThreeToGL",
        "texture",
        "_gl",
        "textureType",
        "_gl",
        "_gl",
        "_gl",
        "textureType",
        "_gl",
        "_gl",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "_gl",
        "textureType",
        "_gl",
        "filterFallback",
        "texture",
        "_gl",
        "textureType",
        "_gl",
        "filterFallback",
        "texture",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "extension",
        "extensions",
        "extension",
        "texture",
        "THREE",
        "extensions",
        "texture",
        "THREE",
        "extensions",
        "texture",
        "properties",
        "texture",
        "_gl",
        "textureType",
        "extension",
        "texture",
        "_this",
        "properties",
        "texture",
        "texture",
        "textureProperties",
        "texture",
        "slot",
        "textureProperties",
        "textureProperties",
        "texture",
        "onTextureDispose",
        "textureProperties",
        "_gl",
        "_infoMemory",
        "state",
        "_gl",
        "slot",
        "state",
        "_gl",
        "textureProperties",
        "_gl",
        "_gl",
        "texture",
        "_gl",
        "_gl",
        "texture",
        "_gl",
        "_gl",
        "texture",
        "clampToMaxSize",
        "texture",
        "capabilities",
        "textureNeedsPowerOfTwo",
        "texture",
        "isPowerOfTwo",
        "image",
        "image",
        "makePowerOfTwo",
        "image",
        "isPowerOfTwo",
        "image",
        "paramThreeToGL",
        "texture",
        "paramThreeToGL",
        "texture",
        "setTextureParameters",
        "_gl",
        "texture",
        "isPowerOfTwoImage",
        "texture",
        "texture",
        "THREE",
        "mipmaps",
        "isPowerOfTwoImage",
        "mipmaps",
        "i",
        "il",
        "i",
        "mipmap",
        "mipmaps",
        "i",
        "state",
        "_gl",
        "i",
        "glFormat",
        "mipmap",
        "mipmap",
        "glFormat",
        "glType",
        "mipmap",
        "texture",
        "state",
        "_gl",
        "glFormat",
        "image",
        "image",
        "glFormat",
        "glType",
        "image",
        "texture",
        "THREE",
        "mipmaps",
        "i",
        "il",
        "i",
        "mipmap",
        "mipmaps",
        "i",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "state",
        "glFormat",
        "state",
        "_gl",
        "i",
        "glFormat",
        "mipmap",
        "mipmap",
        "mipmap",
        "state",
        "_gl",
        "i",
        "glFormat",
        "mipmap",
        "mipmap",
        "glFormat",
        "glType",
        "mipmap",
        "mipmaps",
        "isPowerOfTwoImage",
        "mipmaps",
        "i",
        "il",
        "i",
        "mipmap",
        "mipmaps",
        "i",
        "state",
        "_gl",
        "i",
        "glFormat",
        "glFormat",
        "glType",
        "mipmap",
        "texture",
        "state",
        "_gl",
        "glFormat",
        "glFormat",
        "glType",
        "image",
        "texture",
        "isPowerOfTwoImage",
        "_gl",
        "_gl",
        "textureProperties",
        "texture",
        "texture",
        "texture",
        "texture",
        "texture",
        "slot",
        "properties",
        "texture",
        "texture",
        "textureProperties",
        "texture",
        "texture",
        "image",
        "image",
        "uploadTexture",
        "textureProperties",
        "texture",
        "slot",
        "state",
        "_gl",
        "slot",
        "state",
        "_gl",
        "textureProperties",
        "image",
        "maxSize",
        "image",
        "maxSize",
        "image",
        "maxSize",
        "maxSize",
        "image",
        "image",
        "canvas",
        "image",
        "scale",
        "canvas",
        "image",
        "scale",
        "canvas",
        "context",
        "image",
        "image",
        "image",
        "canvas",
        "canvas",
        "canvas",
        "image",
        "image",
        "THREE",
        "image",
        "THREE",
        "image",
        "texture",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "image",
        "image",
        "HTMLImageElement",
        "image",
        "HTMLCanvasElement",
        "canvas",
        "THREE",
        "image",
        "canvas",
        "THREE",
        "image",
        "canvas",
        "context",
        "image",
        "canvas",
        "canvas",
        "canvas",
        "image",
        "texture",
        "slot",
        "properties",
        "texture",
        "texture",
        "texture",
        "textureProperties",
        "texture",
        "textureProperties",
        "texture",
        "onTextureDispose",
        "textureProperties",
        "_gl",
        "_infoMemory",
        "state",
        "_gl",
        "slot",
        "state",
        "_gl",
        "textureProperties",
        "_gl",
        "_gl",
        "texture",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "i",
        "i",
        "_this",
        "isCompressed",
        "isDataTexture",
        "cubeImage",
        "i",
        "clampToMaxSize",
        "texture",
        "i",
        "capabilities",
        "cubeImage",
        "i",
        "isDataTexture",
        "texture",
        "i",
        "texture",
        "i",
        "cubeImage",
        "isPowerOfTwo",
        "image",
        "paramThreeToGL",
        "texture",
        "paramThreeToGL",
        "texture",
        "setTextureParameters",
        "_gl",
        "texture",
        "isPowerOfTwoImage",
        "i",
        "i",
        "isCompressed",
        "isDataTexture",
        "state",
        "_gl",
        "i",
        "glFormat",
        "cubeImage",
        "i",
        "cubeImage",
        "i",
        "glFormat",
        "glType",
        "cubeImage",
        "i",
        "state",
        "_gl",
        "i",
        "glFormat",
        "glFormat",
        "glType",
        "cubeImage",
        "i",
        "cubeImage",
        "i",
        "mipmaps",
        "j",
        "jl",
        "j",
        "mipmap",
        "mipmaps",
        "j",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "state",
        "glFormat",
        "state",
        "_gl",
        "i",
        "j",
        "glFormat",
        "mipmap",
        "mipmap",
        "mipmap",
        "state",
        "_gl",
        "i",
        "j",
        "glFormat",
        "mipmap",
        "mipmap",
        "glFormat",
        "glType",
        "mipmap",
        "texture",
        "isPowerOfTwoImage",
        "_gl",
        "_gl",
        "textureProperties",
        "texture",
        "texture",
        "texture",
        "texture",
        "state",
        "_gl",
        "slot",
        "state",
        "_gl",
        "textureProperties",
        "texture",
        "slot",
        "state",
        "_gl",
        "slot",
        "state",
        "_gl",
        "properties",
        "texture",
        "framebuffer",
        "renderTarget",
        "attachment",
        "textureTarget",
        "paramThreeToGL",
        "renderTarget",
        "paramThreeToGL",
        "renderTarget",
        "state",
        "textureTarget",
        "glFormat",
        "renderTarget",
        "renderTarget",
        "glFormat",
        "glType",
        "_gl",
        "_gl",
        "framebuffer",
        "_gl",
        "_gl",
        "attachment",
        "textureTarget",
        "properties",
        "renderTarget",
        "_gl",
        "_gl",
        "renderbuffer",
        "renderTarget",
        "_gl",
        "_gl",
        "renderbuffer",
        "renderTarget",
        "renderTarget",
        "_gl",
        "_gl",
        "_gl",
        "renderTarget",
        "renderTarget",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "renderbuffer",
        "renderTarget",
        "renderTarget",
        "_gl",
        "_gl",
        "_gl",
        "renderTarget",
        "renderTarget",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "renderbuffer",
        "_gl",
        "_gl",
        "_gl",
        "renderTarget",
        "renderTarget",
        "_gl",
        "_gl",
        "renderTarget",
        "properties",
        "renderTarget",
        "renderTarget",
        "THREE",
        "isCube",
        "renderTargetProperties",
        "i",
        "i",
        "_gl",
        "_gl",
        "renderTargetProperties",
        "i",
        "renderTargetProperties",
        "i",
        "_gl",
        "setupRenderBufferStorage",
        "renderTargetProperties",
        "i",
        "renderTarget",
        "_gl",
        "_gl",
        "renderTargetProperties",
        "renderTargetProperties",
        "_gl",
        "setupRenderBufferStorage",
        "renderTargetProperties",
        "renderTarget",
        "_gl",
        "_gl",
        "renderTarget",
        "properties",
        "renderTarget",
        "properties",
        "renderTarget",
        "renderTarget",
        "onRenderTargetDispose",
        "textureProperties",
        "_gl",
        "_infoMemory",
        "renderTarget",
        "THREE",
        "THREE",
        "renderTarget",
        "THREE",
        "renderTarget",
        "isCube",
        "renderTargetProperties",
        "i",
        "i",
        "renderTargetProperties",
        "i",
        "_gl",
        "renderTargetProperties",
        "_gl",
        "isCube",
        "state",
        "_gl",
        "textureProperties",
        "setTextureParameters",
        "_gl",
        "renderTarget",
        "isTargetPowerOfTwo",
        "i",
        "i",
        "setupFrameBufferTexture",
        "renderTargetProperties",
        "i",
        "renderTarget",
        "_gl",
        "_gl",
        "i",
        "renderTarget",
        "isTargetPowerOfTwo",
        "_gl",
        "_gl",
        "state",
        "_gl",
        "state",
        "_gl",
        "textureProperties",
        "setTextureParameters",
        "_gl",
        "renderTarget",
        "isTargetPowerOfTwo",
        "setupFrameBufferTexture",
        "renderTargetProperties",
        "renderTarget",
        "_gl",
        "_gl",
        "renderTarget",
        "isTargetPowerOfTwo",
        "_gl",
        "_gl",
        "state",
        "_gl",
        "renderTarget",
        "setupDepthRenderbuffer",
        "renderTarget",
        "_currentRenderTarget",
        "renderTarget",
        "_currentRenderTarget",
        "renderTarget",
        "renderTarget",
        "properties",
        "renderTarget",
        "setupRenderTarget",
        "renderTarget",
        "renderTarget",
        "THREE",
        "renderTarget",
        "properties",
        "renderTarget",
        "isCube",
        "framebuffer",
        "renderTargetProperties",
        "renderTarget",
        "framebuffer",
        "renderTargetProperties",
        "_currentScissor",
        "renderTarget",
        "_currentScissorTest",
        "renderTarget",
        "_currentViewport",
        "renderTarget",
        "framebuffer",
        "_currentScissor",
        "_scissor",
        "_pixelRatio",
        "_currentScissorTest",
        "_scissorTest",
        "_currentViewport",
        "_viewport",
        "_pixelRatio",
        "_currentFramebuffer",
        "framebuffer",
        "_gl",
        "_gl",
        "framebuffer",
        "_currentFramebuffer",
        "framebuffer",
        "state",
        "_currentScissor",
        "state",
        "_currentScissorTest",
        "state",
        "_currentViewport",
        "isCube",
        "properties",
        "renderTarget",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "renderTarget",
        "textureProperties",
        "renderTarget",
        "renderTarget",
        "x",
        "y",
        "width",
        "height",
        "buffer",
        "renderTarget",
        "THREE",
        "properties",
        "renderTarget",
        "framebuffer",
        "framebuffer",
        "_currentFramebuffer",
        "_gl",
        "_gl",
        "framebuffer",
        "restore",
        "renderTarget",
        "texture",
        "THREE",
        "paramThreeToGL",
        "texture",
        "_gl",
        "_gl",
        "texture",
        "THREE",
        "paramThreeToGL",
        "texture",
        "_gl",
        "_gl",
        "texture",
        "THREE",
        "extensions",
        "texture",
        "THREE",
        "extensions",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "x",
        "y",
        "width",
        "height",
        "paramThreeToGL",
        "texture",
        "paramThreeToGL",
        "texture",
        "buffer",
        "restore",
        "_gl",
        "_gl",
        "_currentFramebuffer",
        "renderTarget",
        "renderTarget",
        "THREE",
        "_gl",
        "_gl",
        "properties",
        "renderTarget",
        "state",
        "target",
        "texture",
        "_gl",
        "target",
        "state",
        "target",
        "f",
        "f",
        "THREE",
        "f",
        "THREE",
        "f",
        "THREE",
        "_gl",
        "_gl",
        "p",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "extension",
        "extensions",
        "extension",
        "p",
        "THREE",
        "extension",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "p",
        "THREE",
        "_gl",
        "extension",
        "extensions",
        "extension",
        "p",
        "THREE",
        "extension",
        "p",
        "THREE",
        "extension",
        "p",
        "THREE",
        "extension",
        "p",
        "THREE",
        "extension",
        "extension",
        "extensions",
        "extension",
        "p",
        "THREE",
        "extension",
        "p",
        "THREE",
        "extension",
        "p",
        "THREE",
        "extension",
        "p",
        "THREE",
        "extension",
        "extension",
        "extensions",
        "extension",
        "p",
        "THREE",
        "extension",
        "extension",
        "extensions",
        "extension",
        "p",
        "THREE",
        "extension",
        "p",
        "THREE",
        "extension",
        "THREE",
        "gl",
        "name",
        "extensions",
        "name",
        "extensions",
        "name",
        "name",
        "extension",
        "gl",
        "gl",
        "gl",
        "extension",
        "gl",
        "gl",
        "gl",
        "extension",
        "gl",
        "gl",
        "extension",
        "gl",
        "extension",
        "gl",
        "name",
        "extension",
        "extensions",
        "name",
        "extension",
        "extension",
        "THREE",
        "gl",
        "extensions",
        "parameters",
        "precision",
        "precision",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "precision",
        "precision",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "getMaxPrecision",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "extensions",
        "getMaxPrecision",
        "_maxPrecision",
        "_maxPrecision",
        "extensions",
        "THREE",
        "properties",
        "uuid",
        "properties",
        "uuid",
        "properties",
        "properties",
        "THREE",
        "light",
        "lights",
        "light",
        "lights",
        "light",
        "light",
        "uniforms",
        "THREE",
        "THREE",
        "THREE",
        "uniforms",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "uniforms",
        "THREE",
        "THREE",
        "THREE",
        "uniforms",
        "THREE",
        "THREE",
        "THREE",
        "lights",
        "light",
        "uniforms",
        "uniforms",
        "THREE",
        "gl",
        "extensions",
        "paramThreeToGL",
        "THREE",
        "Uint8Array",
        "Uint8Array",
        "Uint8Array",
        "gl",
        "gl",
        "THREE",
        "THREE",
        "THREE",
        "gl",
        "gl",
        "gl",
        "emptyTexture",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "Uint8Array",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "newAttributes",
        "i",
        "l",
        "i",
        "newAttributes",
        "i",
        "attribute",
        "newAttributes",
        "attribute",
        "enabledAttributes",
        "attribute",
        "gl",
        "attribute",
        "enabledAttributes",
        "attribute",
        "attributeDivisors",
        "attribute",
        "extensions",
        "extension",
        "attribute",
        "attributeDivisors",
        "attribute",
        "attribute",
        "meshPerAttribute",
        "extension",
        "newAttributes",
        "attribute",
        "enabledAttributes",
        "attribute",
        "gl",
        "attribute",
        "enabledAttributes",
        "attribute",
        "attributeDivisors",
        "attribute",
        "meshPerAttribute",
        "extension",
        "attribute",
        "meshPerAttribute",
        "attributeDivisors",
        "attribute",
        "meshPerAttribute",
        "enabledAttributes",
        "i",
        "l",
        "i",
        "enabledAttributes",
        "i",
        "newAttributes",
        "i",
        "gl",
        "i",
        "enabledAttributes",
        "i",
        "id",
        "capabilities",
        "id",
        "gl",
        "id",
        "capabilities",
        "id",
        "id",
        "capabilities",
        "id",
        "gl",
        "id",
        "capabilities",
        "id",
        "compressedTextureFormats",
        "compressedTextureFormats",
        "extensions",
        "extensions",
        "extensions",
        "gl",
        "gl",
        "i",
        "formats",
        "i",
        "compressedTextureFormats",
        "formats",
        "i",
        "compressedTextureFormats",
        "blending",
        "blendEquation",
        "blendSrc",
        "blendDst",
        "blendEquationAlpha",
        "blendSrcAlpha",
        "blendDstAlpha",
        "premultipliedAlpha",
        "blending",
        "THREE",
        "gl",
        "gl",
        "blending",
        "currentBlending",
        "premultipliedAlpha",
        "currentPremultipledAlpha",
        "blending",
        "THREE",
        "premultipliedAlpha",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "blending",
        "THREE",
        "premultipliedAlpha",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "blending",
        "THREE",
        "premultipliedAlpha",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "premultipliedAlpha",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "currentBlending",
        "blending",
        "currentPremultipledAlpha",
        "premultipliedAlpha",
        "blending",
        "THREE",
        "blendEquationAlpha",
        "blendEquationAlpha",
        "blendEquation",
        "blendSrcAlpha",
        "blendSrcAlpha",
        "blendSrc",
        "blendDstAlpha",
        "blendDstAlpha",
        "blendDst",
        "blendEquation",
        "currentBlendEquation",
        "blendEquationAlpha",
        "currentBlendEquationAlpha",
        "gl",
        "paramThreeToGL",
        "blendEquation",
        "paramThreeToGL",
        "blendEquationAlpha",
        "currentBlendEquation",
        "blendEquation",
        "currentBlendEquationAlpha",
        "blendEquationAlpha",
        "blendSrc",
        "currentBlendSrc",
        "blendDst",
        "currentBlendDst",
        "blendSrcAlpha",
        "currentBlendSrcAlpha",
        "blendDstAlpha",
        "currentBlendDstAlpha",
        "gl",
        "paramThreeToGL",
        "blendSrc",
        "paramThreeToGL",
        "blendDst",
        "paramThreeToGL",
        "blendSrcAlpha",
        "paramThreeToGL",
        "blendDstAlpha",
        "currentBlendSrc",
        "blendSrc",
        "currentBlendDst",
        "blendDst",
        "currentBlendSrcAlpha",
        "blendSrcAlpha",
        "currentBlendDstAlpha",
        "blendDstAlpha",
        "currentBlendEquation",
        "currentBlendSrc",
        "currentBlendDst",
        "currentBlendEquationAlpha",
        "currentBlendSrcAlpha",
        "currentBlendDstAlpha",
        "depthFunc",
        "currentDepthFunc",
        "depthFunc",
        "depthFunc",
        "depthFunc",
        "THREE",
        "gl",
        "gl",
        "THREE",
        "gl",
        "gl",
        "THREE",
        "gl",
        "gl",
        "THREE",
        "gl",
        "gl",
        "THREE",
        "gl",
        "gl",
        "THREE",
        "gl",
        "gl",
        "THREE",
        "gl",
        "gl",
        "THREE",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "currentDepthFunc",
        "depthFunc",
        "depthTest",
        "depthTest",
        "gl",
        "gl",
        "depthWrite",
        "currentDepthWrite",
        "depthWrite",
        "gl",
        "depthWrite",
        "currentDepthWrite",
        "depthWrite",
        "colorWrite",
        "currentColorWrite",
        "colorWrite",
        "gl",
        "colorWrite",
        "colorWrite",
        "colorWrite",
        "colorWrite",
        "currentColorWrite",
        "colorWrite",
        "stencilFunc",
        "stencilRef",
        "stencilMask",
        "currentStencilFunc",
        "stencilFunc",
        "currentStencilRef",
        "stencilRef",
        "currentStencilMask",
        "stencilMask",
        "gl",
        "stencilFunc",
        "stencilRef",
        "stencilMask",
        "currentStencilFunc",
        "stencilFunc",
        "currentStencilRef",
        "stencilRef",
        "currentStencilMask",
        "stencilMask",
        "stencilFail",
        "stencilZFail",
        "stencilZPass",
        "currentStencilFail",
        "stencilFail",
        "currentStencilZFail",
        "stencilZFail",
        "currentStencilZPass",
        "stencilZPass",
        "gl",
        "stencilFail",
        "stencilZFail",
        "stencilZPass",
        "currentStencilFail",
        "stencilFail",
        "currentStencilZFail",
        "stencilZFail",
        "currentStencilZPass",
        "stencilZPass",
        "stencilTest",
        "stencilTest",
        "gl",
        "gl",
        "stencilWrite",
        "currentStencilWrite",
        "stencilWrite",
        "gl",
        "stencilWrite",
        "currentStencilWrite",
        "stencilWrite",
        "flipSided",
        "currentFlipSided",
        "flipSided",
        "flipSided",
        "gl",
        "gl",
        "gl",
        "gl",
        "currentFlipSided",
        "flipSided",
        "width",
        "width",
        "currentLineWidth",
        "gl",
        "width",
        "currentLineWidth",
        "width",
        "polygonOffset",
        "factor",
        "units",
        "polygonOffset",
        "gl",
        "gl",
        "polygonOffset",
        "currentPolygonOffsetFactor",
        "factor",
        "currentPolygonOffsetUnits",
        "units",
        "gl",
        "factor",
        "units",
        "currentPolygonOffsetFactor",
        "factor",
        "currentPolygonOffsetUnits",
        "units",
        "currentScissorTest",
        "scissorTest",
        "currentScissorTest",
        "scissorTest",
        "scissorTest",
        "gl",
        "gl",
        "webglSlot",
        "webglSlot",
        "webglSlot",
        "gl",
        "maxTextures",
        "currentTextureSlot",
        "webglSlot",
        "gl",
        "webglSlot",
        "currentTextureSlot",
        "webglSlot",
        "webglType",
        "webglTexture",
        "currentTextureSlot",
        "_this",
        "currentBoundTextures",
        "currentTextureSlot",
        "boundTexture",
        "boundTexture",
        "currentBoundTextures",
        "currentTextureSlot",
        "boundTexture",
        "boundTexture",
        "webglType",
        "boundTexture",
        "webglTexture",
        "gl",
        "webglType",
        "webglTexture",
        "emptyTexture",
        "boundTexture",
        "webglType",
        "boundTexture",
        "webglTexture",
        "gl",
        "gl",
        "arguments",
        "error",
        "gl",
        "gl",
        "arguments",
        "error",
        "r",
        "g",
        "b",
        "a",
        "color",
        "r",
        "g",
        "b",
        "a",
        "currentClearColor",
        "color",
        "gl",
        "r",
        "g",
        "b",
        "a",
        "currentClearColor",
        "color",
        "depth",
        "currentClearDepth",
        "depth",
        "gl",
        "depth",
        "currentClearDepth",
        "depth",
        "stencil",
        "currentClearStencil",
        "stencil",
        "gl",
        "stencil",
        "currentClearStencil",
        "stencil",
        "scissor",
        "currentScissor",
        "scissor",
        "gl",
        "scissor",
        "scissor",
        "scissor",
        "scissor",
        "currentScissor",
        "scissor",
        "viewport",
        "currentViewport",
        "viewport",
        "gl",
        "viewport",
        "viewport",
        "viewport",
        "viewport",
        "currentViewport",
        "viewport",
        "i",
        "enabledAttributes",
        "i",
        "enabledAttributes",
        "i",
        "gl",
        "i",
        "enabledAttributes",
        "i",
        "capabilities",
        "compressedTextureFormats",
        "currentTextureSlot",
        "currentBoundTextures",
        "currentBlending",
        "currentColorWrite",
        "currentDepthWrite",
        "currentStencilWrite",
        "currentFlipSided",
        "THREE",
        "gl",
        "properties",
        "info",
        "geometries",
        "geometry",
        "geometries",
        "geometry",
        "geometry",
        "onGeometryDispose",
        "geometry",
        "THREE",
        "buffergeometry",
        "geometry",
        "geometry",
        "THREE",
        "geometry",
        "geometry",
        "THREE",
        "buffergeometry",
        "geometry",
        "geometries",
        "geometry",
        "buffergeometry",
        "info",
        "buffergeometry",
        "geometries",
        "geometry",
        "buffergeometry",
        "deleteAttribute",
        "buffergeometry",
        "deleteAttributes",
        "buffergeometry",
        "geometry",
        "onGeometryDispose",
        "geometries",
        "geometry",
        "properties",
        "geometry",
        "property",
        "deleteAttribute",
        "property",
        "properties",
        "geometry",
        "properties",
        "buffergeometry",
        "bufferproperty",
        "deleteAttribute",
        "bufferproperty",
        "properties",
        "buffergeometry",
        "info",
        "attribute",
        "attribute",
        "THREE",
        "properties",
        "attribute",
        "properties",
        "attribute",
        "attribute",
        "getAttributeBuffer",
        "attribute",
        "buffer",
        "gl",
        "buffer",
        "removeAttributeBuffer",
        "attribute",
        "attributes",
        "name",
        "attributes",
        "deleteAttribute",
        "attributes",
        "name",
        "attribute",
        "attribute",
        "THREE",
        "properties",
        "attribute",
        "properties",
        "attribute",
        "get",
        "THREE",
        "_gl",
        "extensions",
        "_infoRender",
        "value",
        "mode",
        "value",
        "start",
        "count",
        "_gl",
        "mode",
        "start",
        "count",
        "_infoRender",
        "_infoRender",
        "count",
        "mode",
        "_gl",
        "_infoRender",
        "count",
        "geometry",
        "extensions",
        "extension",
        "geometry",
        "position",
        "THREE",
        "count",
        "position",
        "extension",
        "mode",
        "count",
        "geometry",
        "count",
        "position",
        "extension",
        "mode",
        "count",
        "geometry",
        "_infoRender",
        "_infoRender",
        "count",
        "geometry",
        "mode",
        "_gl",
        "_infoRender",
        "geometry",
        "count",
        "setMode",
        "render",
        "renderInstances",
        "THREE",
        "_gl",
        "extensions",
        "_infoRender",
        "value",
        "mode",
        "value",
        "index",
        "index",
        "Uint32Array",
        "extensions",
        "_gl",
        "size",
        "_gl",
        "size",
        "start",
        "count",
        "_gl",
        "mode",
        "count",
        "start",
        "size",
        "_infoRender",
        "_infoRender",
        "count",
        "mode",
        "_gl",
        "_infoRender",
        "count",
        "geometry",
        "start",
        "count",
        "extensions",
        "extension",
        "extension",
        "mode",
        "count",
        "start",
        "size",
        "geometry",
        "_infoRender",
        "_infoRender",
        "count",
        "geometry",
        "mode",
        "_gl",
        "_infoRender",
        "geometry",
        "count",
        "setMode",
        "setIndex",
        "render",
        "renderInstances",
        "THREE",
        "i",
        "lines",
        "i",
        "lines",
        "i",
        "i",
        "lines",
        "i",
        "lines",
        "WebGLShader",
        "gl",
        "gl",
        "gl",
        "shader",
        "gl",
        "shader",
        "gl",
        "shader",
        "gl",
        "gl",
        "shader",
        "shader",
        "THREE",
        "_renderer",
        "_lights",
        "_objects",
        "_renderer",
        "_renderer",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "_MorphingFlag",
        "_SkinningFlag",
        "_NumberOfMaterialVariants",
        "_NumberOfMaterialVariants",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "depthShader",
        "THREE",
        "THREE",
        "distanceShader",
        "i",
        "_NumberOfMaterialVariants",
        "i",
        "i",
        "_MorphingFlag",
        "i",
        "_SkinningFlag",
        "THREE",
        "depthUniforms",
        "depthShader",
        "depthShader",
        "useMorphing",
        "useSkinning",
        "_depthMaterials",
        "i",
        "depthMaterial",
        "THREE",
        "distanceUniforms",
        "distanceShader",
        "distanceShader",
        "useMorphing",
        "useSkinning",
        "_distanceMaterials",
        "i",
        "distanceMaterial",
        "THREE",
        "THREE",
        "scene",
        "camera",
        "_lights",
        "shadows",
        "scope",
        "scope",
        "scope",
        "_state",
        "_state",
        "_gl",
        "_state",
        "_gl",
        "_gl",
        "_gl",
        "_gl",
        "scope",
        "THREE",
        "_gl",
        "_gl",
        "_state",
        "_state",
        "shadows",
        "i",
        "il",
        "i",
        "shadows",
        "i",
        "light",
        "shadow",
        "_shadowMapSize",
        "shadow",
        "light",
        "THREE",
        "faceCount",
        "isPointLight",
        "_shadowMapSize",
        "_shadowMapSize",
        "cube2DViewPorts",
        "vpWidth",
        "vpHeight",
        "vpWidth",
        "vpHeight",
        "cube2DViewPorts",
        "vpHeight",
        "vpWidth",
        "vpHeight",
        "cube2DViewPorts",
        "vpWidth",
        "vpHeight",
        "vpWidth",
        "vpHeight",
        "cube2DViewPorts",
        "vpWidth",
        "vpHeight",
        "vpWidth",
        "vpHeight",
        "cube2DViewPorts",
        "vpWidth",
        "vpWidth",
        "vpHeight",
        "cube2DViewPorts",
        "vpWidth",
        "vpWidth",
        "vpHeight",
        "_shadowMapSize",
        "_shadowMapSize",
        "faceCount",
        "isPointLight",
        "shadow",
        "THREE",
        "THREE",
        "THREE",
        "shadow",
        "THREE",
        "_shadowMapSize",
        "_shadowMapSize",
        "pars",
        "light",
        "THREE",
        "shadowCamera",
        "_shadowMapSize",
        "_shadowMapSize",
        "shadowCamera",
        "shadow",
        "shadow",
        "_lightPositionWorld",
        "light",
        "shadowCamera",
        "_lightPositionWorld",
        "_renderer",
        "shadowMap",
        "_renderer",
        "face",
        "faceCount",
        "face",
        "isPointLight",
        "_lookTarget",
        "shadowCamera",
        "_lookTarget",
        "cubeDirections",
        "face",
        "shadowCamera",
        "cubeUps",
        "face",
        "shadowCamera",
        "_lookTarget",
        "cube2DViewPorts",
        "face",
        "_state",
        "vpDimensions",
        "_lookTarget",
        "light",
        "shadowCamera",
        "_lookTarget",
        "shadowCamera",
        "shadowCamera",
        "shadowCamera",
        "shadowMatrix",
        "shadowMatrix",
        "shadowCamera",
        "shadowMatrix",
        "shadowCamera",
        "_projScreenMatrix",
        "shadowCamera",
        "shadowCamera",
        "_frustum",
        "_projScreenMatrix",
        "_renderList",
        "projectObject",
        "scene",
        "camera",
        "shadowCamera",
        "_renderList",
        "j",
        "jl",
        "j",
        "_renderList",
        "j",
        "_objects",
        "material",
        "THREE",
        "geometry",
        "material",
        "groups",
        "k",
        "kl",
        "k",
        "groups",
        "k",
        "materials",
        "group",
        "groupMaterial",
        "getDepthMaterial",
        "groupMaterial",
        "isPointLight",
        "_lightPositionWorld",
        "_renderer",
        "shadowCamera",
        "geometry",
        "depthMaterial",
        "group",
        "getDepthMaterial",
        "material",
        "isPointLight",
        "_lightPositionWorld",
        "_renderer",
        "shadowCamera",
        "geometry",
        "depthMaterial",
        "_renderer",
        "_renderer",
        "_renderer",
        "clearColor",
        "clearAlpha",
        "_state",
        "_gl",
        "scope",
        "THREE",
        "_gl",
        "_gl",
        "scope",
        "material",
        "isPointLight",
        "lightPositionWorld",
        "isPointLight",
        "materialVariants",
        "_distanceMaterials",
        "customMaterial",
        "customMaterial",
        "geometry",
        "geometry",
        "material",
        "THREE",
        "material",
        "useMorphing",
        "variantIndex",
        "_MorphingFlag",
        "useSkinning",
        "variantIndex",
        "_SkinningFlag",
        "newMaterial",
        "materialVariants",
        "variantIndex",
        "newMaterial",
        "customMaterial",
        "newMaterial",
        "material",
        "newMaterial",
        "material",
        "newMaterial",
        "material",
        "isPointLight",
        "newMaterial",
        "newMaterial",
        "lightPositionWorld",
        "newMaterial",
        "camera",
        "shadowCamera",
        "camera",
        "THREE",
        "THREE",
        "THREE",
        "_frustum",
        "material",
        "shadowCamera",
        "_renderList",
        "children",
        "i",
        "l",
        "i",
        "projectObject",
        "children",
        "i",
        "camera",
        "shadowCamera",
        "THREE",
        "renderer",
        "sprites",
        "renderer",
        "renderer",
        "THREE",
        "THREE",
        "THREE",
        "Float32Array",
        "Uint16Array",
        "vertexBuffer",
        "gl",
        "elementBuffer",
        "gl",
        "gl",
        "gl",
        "vertexBuffer",
        "gl",
        "gl",
        "vertices",
        "gl",
        "gl",
        "gl",
        "elementBuffer",
        "gl",
        "gl",
        "faces",
        "gl",
        "program",
        "createProgram",
        "attributes",
        "gl",
        "program",
        "gl",
        "program",
        "uniforms",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "canvas",
        "canvas",
        "canvas",
        "context",
        "context",
        "texture",
        "THREE",
        "canvas",
        "texture",
        "scene",
        "camera",
        "sprites",
        "program",
        "init",
        "gl",
        "program",
        "state",
        "state",
        "attributes",
        "state",
        "attributes",
        "state",
        "state",
        "gl",
        "state",
        "gl",
        "gl",
        "gl",
        "vertexBuffer",
        "gl",
        "attributes",
        "gl",
        "gl",
        "attributes",
        "gl",
        "gl",
        "gl",
        "elementBuffer",
        "gl",
        "uniforms",
        "camera",
        "state",
        "gl",
        "gl",
        "uniforms",
        "scene",
        "fog",
        "gl",
        "uniforms",
        "fog",
        "fog",
        "fog",
        "fog",
        "THREE",
        "gl",
        "uniforms",
        "fog",
        "gl",
        "uniforms",
        "fog",
        "gl",
        "uniforms",
        "oldFogType",
        "sceneFogType",
        "fog",
        "THREE",
        "gl",
        "uniforms",
        "fog",
        "gl",
        "uniforms",
        "oldFogType",
        "sceneFogType",
        "gl",
        "uniforms",
        "oldFogType",
        "sceneFogType",
        "sprites",
        "i",
        "l",
        "i",
        "sprites",
        "i",
        "sprite",
        "camera",
        "sprite",
        "sprite",
        "sprite",
        "sprites",
        "painterSortStable",
        "sprites",
        "i",
        "l",
        "i",
        "sprites",
        "i",
        "sprite",
        "gl",
        "uniforms",
        "material",
        "gl",
        "uniforms",
        "sprite",
        "sprite",
        "spritePosition",
        "spriteRotation",
        "spriteScale",
        "scale",
        "spriteScale",
        "scale",
        "spriteScale",
        "scene",
        "material",
        "fogType",
        "sceneFogType",
        "oldFogType",
        "fogType",
        "gl",
        "uniforms",
        "fogType",
        "oldFogType",
        "fogType",
        "material",
        "gl",
        "uniforms",
        "material",
        "material",
        "gl",
        "uniforms",
        "material",
        "material",
        "gl",
        "uniforms",
        "gl",
        "uniforms",
        "gl",
        "uniforms",
        "material",
        "gl",
        "uniforms",
        "material",
        "material",
        "material",
        "gl",
        "uniforms",
        "material",
        "gl",
        "uniforms",
        "scale",
        "state",
        "material",
        "material",
        "material",
        "material",
        "state",
        "material",
        "state",
        "material",
        "material",
        "material",
        "material",
        "renderer",
        "material",
        "renderer",
        "texture",
        "gl",
        "gl",
        "gl",
        "state",
        "gl",
        "renderer",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "vertexShader",
        "renderer",
        "gl",
        "fragmentShader",
        "renderer",
        "gl",
        "vertexShader",
        "gl",
        "fragmentShader",
        "gl",
        "program",
        "vertexShader",
        "gl",
        "program",
        "fragmentShader",
        "gl",
        "program",
        "program",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "b",
        "a",
        "b",
        "a",
        "THREE",
        "renderer",
        "flares",
        "renderer",
        "renderer",
        "Float32Array",
        "Uint16Array",
        "vertexBuffer",
        "gl",
        "elementBuffer",
        "gl",
        "gl",
        "gl",
        "vertexBuffer",
        "gl",
        "gl",
        "vertices",
        "gl",
        "gl",
        "gl",
        "elementBuffer",
        "gl",
        "gl",
        "faces",
        "gl",
        "tempTexture",
        "gl",
        "occlusionTexture",
        "gl",
        "state",
        "gl",
        "tempTexture",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "state",
        "gl",
        "occlusionTexture",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "hasVertexTexture",
        "gl",
        "gl",
        "hasVertexTexture",
        "shader",
        "shader",
        "program",
        "createProgram",
        "shader",
        "attributes",
        "gl",
        "program",
        "gl",
        "program",
        "uniforms",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "scene",
        "camera",
        "viewport",
        "flares",
        "THREE",
        "viewport",
        "viewport",
        "viewport",
        "viewport",
        "viewport",
        "THREE",
        "size",
        "invAspect",
        "size",
        "THREE",
        "THREE",
        "program",
        "init",
        "gl",
        "program",
        "state",
        "state",
        "attributes",
        "state",
        "attributes",
        "state",
        "gl",
        "uniforms",
        "gl",
        "uniforms",
        "gl",
        "gl",
        "vertexBuffer",
        "gl",
        "attributes",
        "gl",
        "gl",
        "attributes",
        "gl",
        "gl",
        "gl",
        "elementBuffer",
        "state",
        "gl",
        "state",
        "flares",
        "i",
        "l",
        "i",
        "size",
        "viewport",
        "scale",
        "size",
        "invAspect",
        "size",
        "flares",
        "i",
        "tempPosition",
        "flare",
        "flare",
        "flare",
        "tempPosition",
        "camera",
        "tempPosition",
        "camera",
        "screenPosition",
        "tempPosition",
        "screenPositionPixels",
        "screenPosition",
        "halfViewportWidth",
        "halfViewportWidth",
        "screenPositionPixels",
        "screenPosition",
        "halfViewportHeight",
        "halfViewportHeight",
        "hasVertexTexture",
        "screenPositionPixels",
        "screenPositionPixels",
        "viewport",
        "screenPositionPixels",
        "screenPositionPixels",
        "viewport",
        "state",
        "gl",
        "state",
        "gl",
        "state",
        "gl",
        "state",
        "gl",
        "tempTexture",
        "gl",
        "gl",
        "gl",
        "viewport",
        "screenPositionPixels",
        "viewport",
        "screenPositionPixels",
        "gl",
        "uniforms",
        "gl",
        "uniforms",
        "scale",
        "scale",
        "gl",
        "uniforms",
        "screenPosition",
        "screenPosition",
        "screenPosition",
        "state",
        "gl",
        "state",
        "gl",
        "gl",
        "gl",
        "gl",
        "state",
        "gl",
        "state",
        "gl",
        "occlusionTexture",
        "gl",
        "gl",
        "gl",
        "viewport",
        "screenPositionPixels",
        "viewport",
        "screenPositionPixels",
        "gl",
        "uniforms",
        "state",
        "gl",
        "state",
        "gl",
        "state",
        "gl",
        "tempTexture",
        "gl",
        "gl",
        "gl",
        "flare",
        "screenPosition",
        "flare",
        "flare",
        "flare",
        "flare",
        "gl",
        "uniforms",
        "state",
        "gl",
        "flare",
        "j",
        "jl",
        "j",
        "flare",
        "j",
        "sprite",
        "sprite",
        "screenPosition",
        "sprite",
        "screenPosition",
        "sprite",
        "screenPosition",
        "sprite",
        "size",
        "sprite",
        "sprite",
        "viewport",
        "scale",
        "size",
        "invAspect",
        "scale",
        "size",
        "gl",
        "uniforms",
        "screenPosition",
        "screenPosition",
        "screenPosition",
        "gl",
        "uniforms",
        "scale",
        "scale",
        "gl",
        "uniforms",
        "sprite",
        "gl",
        "uniforms",
        "sprite",
        "gl",
        "uniforms",
        "sprite",
        "sprite",
        "sprite",
        "state",
        "sprite",
        "sprite",
        "sprite",
        "sprite",
        "renderer",
        "sprite",
        "gl",
        "gl",
        "gl",
        "state",
        "gl",
        "state",
        "gl",
        "state",
        "renderer",
        "shader",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "renderer",
        "gl",
        "fragmentShader",
        "prefix",
        "shader",
        "gl",
        "vertexShader",
        "prefix",
        "shader",
        "gl",
        "fragmentShader",
        "gl",
        "vertexShader",
        "gl",
        "program",
        "fragmentShader",
        "gl",
        "program",
        "vertexShader",
        "gl",
        "program",
        "program",
        "THREE",
        "gl",
        "properties",
        "info",
        "THREE",
        "gl",
        "properties",
        "info",
        "geometries",
        "THREE",
        "geometry",
        "geometry",
        "geometry",
        "index",
        "updateAttribute",
        "index",
        "gl",
        "name",
        "attributes",
        "updateAttribute",
        "attributes",
        "name",
        "gl",
        "geometry",
        "name",
        "morphAttributes",
        "morphAttributes",
        "name",
        "array",
        "i",
        "l",
        "i",
        "updateAttribute",
        "array",
        "i",
        "gl",
        "geometry",
        "attribute",
        "bufferType",
        "attribute",
        "THREE",
        "attribute",
        "attribute",
        "properties",
        "data",
        "attributeProperties",
        "createBuffer",
        "attributeProperties",
        "data",
        "bufferType",
        "attributeProperties",
        "data",
        "updateBuffer",
        "attributeProperties",
        "data",
        "bufferType",
        "attributeProperties",
        "data",
        "bufferType",
        "attributeProperties",
        "gl",
        "gl",
        "bufferType",
        "attributeProperties",
        "data",
        "gl",
        "gl",
        "gl",
        "bufferType",
        "data",
        "usage",
        "attributeProperties",
        "data",
        "attributeProperties",
        "data",
        "bufferType",
        "gl",
        "bufferType",
        "attributeProperties",
        "data",
        "data",
        "gl",
        "bufferType",
        "data",
        "data",
        "gl",
        "bufferType",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "attributeProperties",
        "data",
        "attribute",
        "attribute",
        "THREE",
        "properties",
        "attribute",
        "properties",
        "attribute",
        "geometry",
        "properties",
        "geometry",
        "property",
        "property",
        "geometry",
        "geometry",
        "attributes",
        "index",
        "index",
        "array",
        "i",
        "l",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "i",
        "checkEdge",
        "edges",
        "a",
        "b",
        "indices",
        "a",
        "b",
        "checkEdge",
        "edges",
        "b",
        "c",
        "indices",
        "b",
        "c",
        "checkEdge",
        "edges",
        "c",
        "a",
        "indices",
        "c",
        "a",
        "attributes",
        "array",
        "i",
        "l",
        "i",
        "i",
        "i",
        "i",
        "indices",
        "a",
        "b",
        "b",
        "c",
        "c",
        "a",
        "position",
        "Uint32Array",
        "Uint16Array",
        "THREE",
        "TypeArray",
        "indices",
        "updateAttribute",
        "attribute",
        "gl",
        "property",
        "attribute",
        "attribute",
        "edges",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "b",
        "tmp",
        "edges",
        "a",
        "edges",
        "a",
        "b",
        "b",
        "b",
        "getAttributeBuffer",
        "getWireframeAttribute",
        "update",
        "THREE",
        "encoding",
        "encoding",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "encoding",
        "functionName",
        "encoding",
        "getEncodingComponents",
        "encoding",
        "functionName",
        "components",
        "components",
        "functionName",
        "encoding",
        "getEncodingComponents",
        "encoding",
        "functionName",
        "components",
        "components",
        "functionName",
        "toneMapping",
        "toneMapping",
        "THREE",
        "toneMappingName",
        "THREE",
        "toneMappingName",
        "THREE",
        "toneMappingName",
        "THREE",
        "toneMappingName",
        "toneMapping",
        "functionName",
        "toneMappingName",
        "extensions",
        "parameters",
        "rendererExtensions",
        "extensions",
        "extensions",
        "extensions",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "extensions",
        "parameters",
        "rendererExtensions",
        "extensions",
        "rendererExtensions",
        "extensions",
        "parameters",
        "rendererExtensions",
        "chunks",
        "filterEmptyLine",
        "defines",
        "name",
        "defines",
        "defines",
        "name",
        "value",
        "chunks",
        "name",
        "value",
        "chunks",
        "gl",
        "program",
        "identifiers",
        "gl",
        "program",
        "gl",
        "i",
        "n",
        "i",
        "gl",
        "program",
        "i",
        "info",
        "gl",
        "program",
        "name",
        "structRe",
        "name",
        "matches",
        "matches",
        "matches",
        "uniforms",
        "structName",
        "uniformsStruct",
        "uniformsStruct",
        "uniforms",
        "structName",
        "uniformsStruct",
        "structProperty",
        "location",
        "matches",
        "arrayStructRe",
        "name",
        "matches",
        "matches",
        "matches",
        "matches",
        "uniforms",
        "arrayName",
        "uniformsArray",
        "uniformsArray",
        "uniforms",
        "arrayName",
        "uniformsArray",
        "arrayIndex",
        "uniformsArrayIndex",
        "uniformsArrayIndex",
        "uniformsArray",
        "arrayIndex",
        "uniformsArrayIndex",
        "arrayProperty",
        "location",
        "matches",
        "arrayRe",
        "name",
        "matches",
        "matches",
        "uniforms",
        "arrayName",
        "location",
        "uniforms",
        "name",
        "location",
        "uniforms",
        "gl",
        "program",
        "identifiers",
        "gl",
        "program",
        "gl",
        "i",
        "n",
        "i",
        "gl",
        "program",
        "i",
        "info",
        "attributes",
        "name",
        "gl",
        "program",
        "name",
        "attributes",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "match",
        "include",
        "THREE",
        "include",
        "replace",
        "include",
        "parseIncludes",
        "replace",
        "pattern",
        "replace",
        "match",
        "start",
        "end",
        "snippet",
        "parseInt",
        "start",
        "i",
        "parseInt",
        "end",
        "i",
        "unroll",
        "snippet",
        "i",
        "unroll",
        "pattern",
        "replace",
        "WebGLProgram",
        "renderer",
        "code",
        "material",
        "parameters",
        "renderer",
        "material",
        "material",
        "material",
        "material",
        "parameters",
        "THREE",
        "shadowMapTypeDefine",
        "parameters",
        "THREE",
        "shadowMapTypeDefine",
        "parameters",
        "material",
        "THREE",
        "THREE",
        "envMapTypeDefine",
        "THREE",
        "THREE",
        "envMapTypeDefine",
        "THREE",
        "THREE",
        "envMapTypeDefine",
        "THREE",
        "envMapTypeDefine",
        "material",
        "THREE",
        "THREE",
        "envMapModeDefine",
        "material",
        "THREE",
        "envMapBlendingDefine",
        "THREE",
        "envMapBlendingDefine",
        "THREE",
        "envMapBlendingDefine",
        "renderer",
        "renderer",
        "generateExtensions",
        "extensions",
        "parameters",
        "renderer",
        "generateDefines",
        "defines",
        "gl",
        "material",
        "THREE",
        "prefixVertex",
        "prefixFragment",
        "prefixVertex",
        "parameters",
        "parameters",
        "material",
        "customDefines",
        "parameters",
        "gammaFactorDefine",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "envMapModeDefine",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "shadowMapTypeDefine",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "renderer",
        "filterEmptyLine",
        "prefixFragment",
        "customExtensions",
        "parameters",
        "parameters",
        "material",
        "customDefines",
        "parameters",
        "parameters",
        "gammaFactorDefine",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "envMapTypeDefine",
        "parameters",
        "envMapModeDefine",
        "parameters",
        "envMapBlendingDefine",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "shadowMapTypeDefine",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "renderer",
        "parameters",
        "renderer",
        "parameters",
        "THREE",
        "parameters",
        "THREE",
        "THREE",
        "parameters",
        "THREE",
        "getToneMappingFunction",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "THREE",
        "parameters",
        "getTexelDecodingFunction",
        "parameters",
        "parameters",
        "getTexelDecodingFunction",
        "parameters",
        "parameters",
        "getTexelDecodingFunction",
        "parameters",
        "parameters",
        "getTexelEncodingFunction",
        "parameters",
        "filterEmptyLine",
        "vertexShader",
        "parseIncludes",
        "vertexShader",
        "parameters",
        "vertexShader",
        "replaceLightNums",
        "vertexShader",
        "parameters",
        "fragmentShader",
        "parseIncludes",
        "fragmentShader",
        "parameters",
        "fragmentShader",
        "replaceLightNums",
        "fragmentShader",
        "parameters",
        "material",
        "THREE",
        "vertexShader",
        "unrollLoops",
        "vertexShader",
        "fragmentShader",
        "unrollLoops",
        "fragmentShader",
        "prefixVertex",
        "vertexShader",
        "prefixFragment",
        "fragmentShader",
        "THREE",
        "gl",
        "gl",
        "vertexGlsl",
        "THREE",
        "gl",
        "gl",
        "fragmentGlsl",
        "gl",
        "program",
        "glVertexShader",
        "gl",
        "program",
        "glFragmentShader",
        "material",
        "gl",
        "program",
        "material",
        "parameters",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "glVertexShader",
        "gl",
        "glFragmentShader",
        "gl",
        "program",
        "gl",
        "runnable",
        "programLog",
        "vertexLog",
        "fragmentLog",
        "haveDiagnostics",
        "haveDiagnostics",
        "runnable",
        "material",
        "programLog",
        "vertexLog",
        "prefixVertex",
        "fragmentLog",
        "prefixFragment",
        "gl",
        "glVertexShader",
        "gl",
        "glFragmentShader",
        "cachedUniforms",
        "cachedUniforms",
        "fetchUniformLocations",
        "gl",
        "program",
        "cachedUniforms",
        "cachedAttributes",
        "cachedAttributes",
        "fetchAttributeLocations",
        "gl",
        "program",
        "cachedAttributes",
        "gl",
        "program",
        "get",
        "get",
        "programIdCount",
        "code",
        "program",
        "glVertexShader",
        "glFragmentShader",
        "THREE",
        "width",
        "height",
        "options",
        "THREE",
        "width",
        "height",
        "THREE",
        "width",
        "height",
        "THREE",
        "width",
        "height",
        "options",
        "options",
        "options",
        "options",
        "THREE",
        "THREE",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "THREE",
        "THREE",
        "setSize",
        "width",
        "height",
        "width",
        "height",
        "width",
        "height",
        "width",
        "height",
        "width",
        "height",
        "clone",
        "copy",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "source",
        "dispose",
        "THREE",
        "THREE",
        "THREE",
        "width",
        "height",
        "options",
        "THREE",
        "width",
        "height",
        "options",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "renderer",
        "capabilities",
        "capabilities",
        "capabilities",
        "nVertexUniforms",
        "THREE",
        "maxBones",
        "maxBones",
        "maxBones",
        "maxBones",
        "gammaOverrideLinear",
        "encoding",
        "THREE",
        "THREE",
        "encoding",
        "THREE",
        "encoding",
        "encoding",
        "THREE",
        "gammaOverrideLinear",
        "encoding",
        "THREE",
        "encoding",
        "material",
        "lights",
        "fog",
        "shaderIDs",
        "material",
        "allocateBones",
        "renderer",
        "material",
        "precision",
        "capabilities",
        "material",
        "precision",
        "material",
        "shaderID",
        "precision",
        "capabilities",
        "getTextureEncodingFromMap",
        "renderer",
        "renderer",
        "material",
        "getTextureEncodingFromMap",
        "material",
        "renderer",
        "material",
        "material",
        "material",
        "getTextureEncodingFromMap",
        "material",
        "renderer",
        "material",
        "material",
        "THREE",
        "material",
        "THREE",
        "material",
        "material",
        "material",
        "getTextureEncodingFromMap",
        "material",
        "renderer",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "material",
        "fog",
        "material",
        "fog",
        "THREE",
        "material",
        "THREE",
        "material",
        "capabilities",
        "material",
        "maxBones",
        "capabilities",
        "material",
        "material",
        "renderer",
        "renderer",
        "lights",
        "lights",
        "lights",
        "lights",
        "lights",
        "renderer",
        "lights",
        "renderer",
        "renderer",
        "renderer",
        "material",
        "material",
        "material",
        "THREE",
        "material",
        "THREE",
        "parameters",
        "material",
        "parameters",
        "parameters",
        "chunks",
        "parameters",
        "chunks",
        "material",
        "chunks",
        "material",
        "material",
        "name",
        "material",
        "chunks",
        "name",
        "chunks",
        "material",
        "name",
        "i",
        "parameterNames",
        "i",
        "parameterNames",
        "i",
        "chunks",
        "parameterName",
        "chunks",
        "parameters",
        "parameterName",
        "chunks",
        "material",
        "parameters",
        "code",
        "programs",
        "p",
        "pl",
        "p",
        "programs",
        "p",
        "programInfo",
        "code",
        "program",
        "programInfo",
        "program",
        "program",
        "program",
        "THREE",
        "renderer",
        "code",
        "material",
        "parameters",
        "programs",
        "program",
        "program",
        "program",
        "program",
        "programs",
        "program",
        "programs",
        "i",
        "programs",
        "programs",
        "programs",
        "program",
        "programs",
        "index",
        "index",
        "_typeof",
        "index",
        "index",
        "index",
        "index",
        "options",
        "classCallCheck",
        "Renderer",
        "options",
        "THREE",
        "createClass",
        "Renderer",
        "setTexture",
        "texture",
        "texture",
        "setSize",
        "size",
        "size",
        "size",
        "size",
        "size",
        "createMesh",
        "THREE",
        "THREE",
        "geometry",
        "THREE",
        "geometry",
        "material",
        "mesh",
        "render",
        "scene",
        "camera",
        "scene",
        "camera",
        "Renderer",
        "camera",
        "renderer",
        "classCallCheck",
        "MouseControls",
        "camera",
        "renderer",
        "renderer",
        "utils",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "THREE",
        "createClass",
        "MouseControls",
        "bindEvents",
        "e",
        "_this",
        "e",
        "e",
        "_this",
        "e",
        "e",
        "_this",
        "e",
        "e",
        "_this",
        "e",
        "e",
        "e",
        "_this",
        "e",
        "e",
        "e",
        "_this",
        "e",
        "_this",
        "e",
        "getCurrentSizeStyle",
        "addDraggingStyle",
        "addDraggableStyle",
        "onDeviceMotion",
        "THREE",
        "THREE",
        "THREE",
        "onMouseMove",
        "THREE",
        "onMouseDown",
        "onMouseUp",
        "update",
        "MouseControls",
        "arguments",
        "arguments",
        "arguments",
        "classCallCheck",
        "ThreeSixtyViewer",
        "options",
        "Renderer",
        "height",
        "width",
        "container",
        "containerId",
        "THREE",
        "MouseControls",
        "createClass",
        "ThreeSixtyViewer",
        "play",
        "pause",
        "getElement",
        "video",
        "video",
        "video",
        "video",
        "video",
        "video",
        "video",
        "err",
        "_this",
        "err",
        "video",
        "createTexture",
        "THREE",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "texture",
        "texture",
        "texture",
        "createScene",
        "THREE",
        "THREE",
        "group",
        "scene",
        "group",
        "scene",
        "onError",
        "err",
        "render",
        "loop",
        "_this2",
        "_this2",
        "_this2",
        "_this2",
        "requestAnimationFrame",
        "loop",
        "loop",
        "ThreeSixtyViewer",
        "_ThreeSixtyViewer",
        "inherits",
        "Video",
        "_ThreeSixtyViewer",
        "options",
        "classCallCheck",
        "Video",
        "possibleConstructorReturn",
        "Video",
        "options",
        "createClass",
        "Video",
        "createTexture",
        "THREE",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "texture",
        "texture",
        "texture",
        "Video",
        "ThreeSixtyViewer",
        "_ThreeSixtyViewer",
        "inherits",
        "Image",
        "_ThreeSixtyViewer",
        "options",
        "classCallCheck",
        "Image",
        "possibleConstructorReturn",
        "Image",
        "options",
        "createClass",
        "Image",
        "getElement",
        "image",
        "image",
        "image",
        "Image",
        "ThreeSixtyViewer",
        "_ThreeSixtyViewer",
        "inherits",
        "Canvas",
        "_ThreeSixtyViewer",
        "options",
        "classCallCheck",
        "Canvas",
        "possibleConstructorReturn",
        "Canvas",
        "options",
        "_this",
        "_this",
        "_this",
        "createClass",
        "Canvas",
        "play",
        "pause",
        "getElement",
        "get",
        "Canvas",
        "canvas",
        "canvas",
        "canvas",
        "render",
        "loop",
        "_this2",
        "_this2",
        "_this2",
        "_this2",
        "_this2",
        "_this2",
        "_this2",
        "_this2",
        "_this2",
        "_this2",
        "_this2",
        "_this2",
        "requestAnimationFrame",
        "loop",
        "loop",
        "Canvas",
        "ThreeSixtyViewer",
        "_ThreeSixtyViewer",
        "inherits",
        "Audio",
        "_ThreeSixtyViewer",
        "options",
        "classCallCheck",
        "Audio",
        "possibleConstructorReturn",
        "Audio",
        "options",
        "createClass",
        "Audio",
        "play",
        "pause",
        "getElement",
        "get",
        "Audio",
        "createTexture",
        "THREE",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "texture",
        "THREE",
        "texture",
        "texture",
        "texture",
        "render",
        "loop",
        "_this2",
        "_this2",
        "_this2",
        "_this2",
        "_this2",
        "_this2",
        "requestAnimationFrame",
        "loop",
        "loop",
        "Audio",
        "ThreeSixtyViewer",
        "video",
        "options",
        "utils",
        "Audio",
        "options",
        "utils",
        "Canvas",
        "options",
        "Video",
        "options",
        "video",
        "Video",
        "Image"
    ],
    "literals": [
        "\"function\"",
        "\"symbol\"",
        "\"function\"",
        "\"symbol\"",
        "\"Cannot call a class as a function\"",
        "\"value\"",
        "\"value\"",
        "\"function\"",
        "\"Super expression must either be null or a function, not \"",
        "\"this hasn't been initialised - super() hasn't been called\"",
        "\"object\"",
        "\"function\"",
        "'75'",
        "'function'",
        "'three'",
        "'undefined'",
        "'undefined'",
        "'name'",
        "'assign'",
        "'use strict'",
        "\"Cannot convert first argument to object\"",
        "'0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'",
        "''",
        "'-'",
        "'4'",
        "''",
        "'number'",
        "'string'",
        "'rgb'",
        "'rgba'",
        "'hsl'",
        "'hsla'",
        "'000000'",
        "'rgb('",
        "','",
        "','",
        "')'",
        "'aliceblue'",
        "'antiquewhite'",
        "'aqua'",
        "'aquamarine'",
        "'azure'",
        "'beige'",
        "'bisque'",
        "'black'",
        "'blanchedalmond'",
        "'blue'",
        "'blueviolet'",
        "'brown'",
        "'burlywood'",
        "'cadetblue'",
        "'chartreuse'",
        "'chocolate'",
        "'coral'",
        "'cornflowerblue'",
        "'cornsilk'",
        "'crimson'",
        "'cyan'",
        "'darkblue'",
        "'darkcyan'",
        "'darkgoldenrod'",
        "'darkgray'",
        "'darkgreen'",
        "'darkgrey'",
        "'darkkhaki'",
        "'darkmagenta'",
        "'darkolivegreen'",
        "'darkorange'",
        "'darkorchid'",
        "'darkred'",
        "'darksalmon'",
        "'darkseagreen'",
        "'darkslateblue'",
        "'darkslategray'",
        "'darkslategrey'",
        "'darkturquoise'",
        "'darkviolet'",
        "'deeppink'",
        "'deepskyblue'",
        "'dimgray'",
        "'dimgrey'",
        "'dodgerblue'",
        "'firebrick'",
        "'floralwhite'",
        "'forestgreen'",
        "'fuchsia'",
        "'gainsboro'",
        "'ghostwhite'",
        "'gold'",
        "'goldenrod'",
        "'gray'",
        "'green'",
        "'greenyellow'",
        "'grey'",
        "'honeydew'",
        "'hotpink'",
        "'indianred'",
        "'indigo'",
        "'ivory'",
        "'khaki'",
        "'lavender'",
        "'lavenderblush'",
        "'lawngreen'",
        "'lemonchiffon'",
        "'lightblue'",
        "'lightcoral'",
        "'lightcyan'",
        "'lightgoldenrodyellow'",
        "'lightgray'",
        "'lightgreen'",
        "'lightgrey'",
        "'lightpink'",
        "'lightsalmon'",
        "'lightseagreen'",
        "'lightskyblue'",
        "'lightslategray'",
        "'lightslategrey'",
        "'lightsteelblue'",
        "'lightyellow'",
        "'lime'",
        "'limegreen'",
        "'linen'",
        "'magenta'",
        "'maroon'",
        "'mediumaquamarine'",
        "'mediumblue'",
        "'mediumorchid'",
        "'mediumpurple'",
        "'mediumseagreen'",
        "'mediumslateblue'",
        "'mediumspringgreen'",
        "'mediumturquoise'",
        "'mediumvioletred'",
        "'midnightblue'",
        "'mintcream'",
        "'mistyrose'",
        "'moccasin'",
        "'navajowhite'",
        "'navy'",
        "'oldlace'",
        "'olive'",
        "'olivedrab'",
        "'orange'",
        "'orangered'",
        "'orchid'",
        "'palegoldenrod'",
        "'palegreen'",
        "'paleturquoise'",
        "'palevioletred'",
        "'papayawhip'",
        "'peachpuff'",
        "'peru'",
        "'pink'",
        "'plum'",
        "'powderblue'",
        "'purple'",
        "'red'",
        "'rosybrown'",
        "'royalblue'",
        "'saddlebrown'",
        "'salmon'",
        "'sandybrown'",
        "'seagreen'",
        "'seashell'",
        "'sienna'",
        "'silver'",
        "'skyblue'",
        "'slateblue'",
        "'slategray'",
        "'slategrey'",
        "'snow'",
        "'springgreen'",
        "'steelblue'",
        "'tan'",
        "'teal'",
        "'thistle'",
        "'tomato'",
        "'turquoise'",
        "'violet'",
        "'wheat'",
        "'white'",
        "'whitesmoke'",
        "'yellow'",
        "'yellowgreen'",
        "'index is out of range: '",
        "'index is out of range: '",
        "'index is out of range: '",
        "'index is out of range: '",
        "'number'",
        "'index is out of range: '",
        "'index is out of range: '",
        "\"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\"",
        "'XYZ'",
        "'YXZ'",
        "'ZXY'",
        "'ZYX'",
        "'YZX'",
        "'XZY'",
        "\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\"",
        "'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.'",
        "'XYZ'",
        "'YXZ'",
        "'ZXY'",
        "'ZYX'",
        "'YZX'",
        "'XZY'",
        "'XYZ'",
        "'YZX'",
        "'ZXY'",
        "'XZY'",
        "'YXZ'",
        "'ZYX'",
        "'XYZ'",
        "'XYZ'",
        "'YXZ'",
        "'ZXY'",
        "'ZYX'",
        "'YZX'",
        "'XZY'",
        "'id'",
        "''",
        "'Object3D'",
        "'added'",
        "'removed'",
        "'id'",
        "'name'",
        "'Object'",
        "'Object3D.toJSON'",
        "''",
        "'{}'",
        "'id'",
        "''",
        "'BufferGeometry'",
        "'index'",
        "'position'",
        "'color'",
        "'lineDistance'",
        "'position'",
        "'normal'",
        "'color'",
        "'uv'",
        "'uv2'",
        "'skinIndex'",
        "'skinWeight'",
        "'normal'",
        "'BufferGeometry'",
        "'BufferGeometry.toJSON'",
        "''",
        "'dispose'",
        "'InstancedBufferGeometry'",
        "'id'",
        "''",
        "'Geometry'",
        "'_'",
        "'_'",
        "'Geometry'",
        "'Geometry.toJSON'",
        "''",
        "'dispose'",
        "'id'",
        "''",
        "'DirectGeometry'",
        "'dispose'",
        "'Camera'",
        "'PerspectiveCamera'",
        "'Light'",
        "'Scene'",
        "''",
        "'SphereBufferGeometry'",
        "'position'",
        "'normal'",
        "'uv'",
        "'SphereGeometry'",
        "'id'",
        "''",
        "'Material'",
        "'overdraw'",
        "'Material'",
        "'Material.toJSON'",
        "''",
        "'update'",
        "'dispose'",
        "'LineBasicMaterial'",
        "'round'",
        "'round'",
        "'LineDashedMaterial'",
        "'PointsMaterial'",
        "'MeshDepthMaterial'",
        "'MeshNormalMaterial'",
        "'ShaderMaterial'",
        "'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}'",
        "'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}'",
        "'color'",
        "'uv'",
        "'uv2'",
        "'MeshBasicMaterial'",
        "'round'",
        "'round'",
        "'MeshLambertMaterial'",
        "'round'",
        "'round'",
        "'MeshStandardMaterial'",
        "'round'",
        "'round'",
        "'MeshPhongMaterial'",
        "'round'",
        "'round'",
        "'MultiMaterial'",
        "'material'",
        "'MaterialExporter'",
        "'RawShaderMaterial'",
        "'id'",
        "''",
        "''",
        "'canvas'",
        "'2d'",
        "'image/jpeg'",
        "'image/png'",
        "'Texture'",
        "'Texture.toJSON'",
        "'dispose'",
        "'images'",
        "'position'",
        "'uv'",
        "'Sprite'",
        "'Line'",
        "'LineSegments'",
        "'Mesh'",
        "'SkinnedMesh'",
        "\"attached\"",
        "\"attached\"",
        "\"detached\"",
        "'Points'",
        "'Light'",
        "'alphamap_fragment'",
        "\"#ifdef USE_ALPHAMAP\\n\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\"",
        "'alphamap_pars_fragment'",
        "\"#ifdef USE_ALPHAMAP\\n\\n\\tuniform sampler2D alphaMap;\\n\\n#endif\\n\"",
        "'alphatest_fragment'",
        "\"#ifdef ALPHATEST\\n\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\"",
        "'aomap_fragment'",
        "\"#ifdef USE_AOMAP\\n\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\n\\t#endif\\n\\n#endif\\n\"",
        "'aomap_pars_fragment'",
        "\"#ifdef USE_AOMAP\\n\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n\\n#endif\"",
        "'begin_vertex'",
        "\"\\nvec3 transformed = vec3( position );\\n\"",
        "'beginnormal_vertex'",
        "\"\\nvec3 objectNormal = vec3( normal );\\n\"",
        "'color_fragment'",
        "\"#ifdef USE_COLOR\\n\\n\\tdiffuseColor.rgb *= vColor;\\n\\n#endif\"",
        "'color_pars_fragment'",
        "\"#ifdef USE_COLOR\\n\\n\\tvarying vec3 vColor;\\n\\n#endif\\n\"",
        "'color_pars_vertex'",
        "\"#ifdef USE_COLOR\\n\\n\\tvarying vec3 vColor;\\n\\n#endif\"",
        "'color_vertex'",
        "\"#ifdef USE_COLOR\\n\\n\\tvColor.xyz = color.xyz;\\n\\n#endif\"",
        "'common'",
        "\"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\n\\n\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\n\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\n\\n\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\"",
        "'defaultnormal_vertex'",
        "\"#ifdef FLIP_SIDED\\n\\n\\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\"",
        "'encodings_fragment'",
        "\"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\"",
        "'encodings_pars_fragment'",
        "\"// For a discussion of what this is, please read this: http://lousodrome.net/blog/light/2013/05/26/gamma-correct-and-hdr-rendering-in-a-32-bits-buffer/\\n\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\n\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\n\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\n\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n//  return vec4( value.brg, ( 3.0 + 128.0 ) / 256.0 );\\n}\\n\\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\n\\n// reference: http://iwasbeingirony.blogspot.ca/2010/06/difference-between-rgbm-and-rgbd.html\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\n\\n// LogLuv reference: http://graphicrants.blogspot.ca/2009/04/rgbm-color-encoding.html\\n\\n// M matrix, for encoding\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\n\\n// Inverse M matrix, for decoding\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\"",
        "'envmap_fragment'",
        "\"#ifdef USE_ENVMAP\\n\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\\t\\t// Transforming Normal Vectors with the Inverse Transformation\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\\t\\t#else\\n\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\\t\\t#endif\\n\\n\\t#else\\n\\n\\t\\tvec3 reflectVec = vReflect;\\n\\n\\t#endif\\n\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#else\\n\\t\\tfloat flipNormal = 1.0;\\n\\t#endif\\n\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\n\\t\\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\n\\t#endif\\n\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\\t#endif\\n\\n#endif\\n\"",
        "'envmap_pars_fragment'",
        "\"#if defined( USE_ENVMAP ) || defined( STANDARD )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntenstiy;\\n#endif\\n\\n#ifdef USE_ENVMAP\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( STANDARD )\\n\\n\\t\\tuniform float refractionRatio;\\n\\n\\t#else\\n\\n\\t\\tvarying vec3 vReflect;\\n\\n\\t#endif\\n\\n#endif\\n\"",
        "'envmap_pars_vertex'",
        "\"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\\n\\n\\tvarying vec3 vReflect;\\n\\n\\tuniform float refractionRatio;\\n\\n#endif\\n\"",
        "'envmap_vertex'",
        "\"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\\n\\n\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\n\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\\t#else\\n\\n\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\\t#endif\\n\\n#endif\\n\"",
        "'fog_fragment'",
        "\"#ifdef USE_FOG\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\\t#else\\n\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\\t#endif\\n\\n\\t#ifdef FOG_EXP2\\n\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\\t#else\\n\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\\t#endif\\n\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n\\n#endif\\n\"",
        "'fog_pars_fragment'",
        "\"#ifdef USE_FOG\\n\\n\\tuniform vec3 fogColor;\\n\\n\\t#ifdef FOG_EXP2\\n\\n\\t\\tuniform float fogDensity;\\n\\n\\t#else\\n\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n\\n#endif\"",
        "'logdepthbuf_fragment'",
        "\"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\"",
        "'logdepthbuf_pars_fragment'",
        "\"#ifdef USE_LOGDEPTHBUF\\n\\n\\tuniform float logDepthBufFC;\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tvarying float vFragDepth;\\n\\n\\t#endif\\n\\n#endif\\n\"",
        "'logdepthbuf_pars_vertex'",
        "\"#ifdef USE_LOGDEPTHBUF\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tvarying float vFragDepth;\\n\\n\\t#endif\\n\\n\\tuniform float logDepthBufFC;\\n\\n#endif\"",
        "'logdepthbuf_vertex'",
        "\"#ifdef USE_LOGDEPTHBUF\\n\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\n\\t#else\\n\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\\t#endif\\n\\n#endif\\n\"",
        "'map_fragment'",
        "\"#ifdef USE_MAP\\n\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n\\n#endif\\n\"",
        "'map_pars_fragment'",
        "\"#ifdef USE_MAP\\n\\n\\tuniform sampler2D map;\\n\\n#endif\\n\"",
        "'morphnormal_vertex'",
        "\"#ifdef USE_MORPHNORMALS\\n\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\"",
        "'morphtarget_pars_vertex'",
        "\"#ifdef USE_MORPHTARGETS\\n\\n\\t#ifndef USE_MORPHNORMALS\\n\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\n\\t#else\\n\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\n\\t#endif\\n\\n#endif\"",
        "'morphtarget_vertex'",
        "\"#ifdef USE_MORPHTARGETS\\n\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\\t#ifndef USE_MORPHNORMALS\\n\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\\t#endif\\n\\n#endif\\n\"",
        "'premultiplied_alpha_fragment'",
        "\"#ifdef PREMULTIPLIED_ALPHA\\n\\n\\t// Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n\\n#endif\\n\"",
        "'project_vertex'",
        "\"#ifdef USE_SKINNING\\n\\n\\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\"",
        "'skinbase_vertex'",
        "\"#ifdef USE_SKINNING\\n\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\"",
        "'skinning_pars_vertex'",
        "\"#ifdef USE_SKINNING\\n\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\n\\t#ifdef BONE_TEXTURE\\n\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureWidth;\\n\\t\\tuniform int boneTextureHeight;\\n\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureWidth ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureWidth );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\\t\\t\\treturn bone;\\n\\n\\t\\t}\\n\\n\\t#else\\n\\n\\t\\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\n\\t\\t\\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\n\\t\\t}\\n\\n\\t#endif\\n\\n#endif\\n\"",
        "'skinning_vertex'",
        "\"#ifdef USE_SKINNING\\n\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\"",
        "'skinnormal_vertex'",
        "\"#ifdef USE_SKINNING\\n\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\"",
        "'specularmap_fragment'",
        "\"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\\tspecularStrength = 1.0;\\n\\n#endif\"",
        "'specularmap_pars_fragment'",
        "\"#ifdef USE_SPECULARMAP\\n\\n\\tuniform sampler2D specularMap;\\n\\n#endif\"",
        "'tonemapping_fragment'",
        "\"#if defined( TONE_MAPPING )\\n\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n\\n#endif\\n\"",
        "'tonemapping_pars_fragment'",
        "\"#define saturate(a) clamp( a, 0.0, 1.0 )\\n\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\n\\n// exposure only\\nvec3 LinearToneMapping( vec3 color ) {\\n\\n  return toneMappingExposure * color;\\n\\n}\\n\\n// source: https://www.cs.utah.edu/~reinhard/cdrom/\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n\\n}\\n\\n// source: http://filmicgames.com/archives/75\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\n  // John Hable's filmic operator from Uncharted 2 video game\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n\\n}\\n\\n// source: http://filmicgames.com/archives/75\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\n  // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n\\n}\\n\"",
        "'uv2_pars_fragment'",
        "\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\\tvarying vec2 vUv2;\\n\\n#endif\"",
        "'uv2_pars_vertex'",
        "\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\n#endif\"",
        "'uv2_vertex'",
        "\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\\tvUv2 = uv2;\\n\\n#endif\"",
        "'uv_pars_fragment'",
        "\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\n\\tvarying vec2 vUv;\\n\\n#endif\"",
        "'uv_pars_vertex'",
        "\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\"",
        "'uv_vertex'",
        "\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\"",
        "'worldpos_vertex'",
        "\"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( STANDARD ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\\t#ifdef USE_SKINNING\\n\\n\\t\\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\\t#else\\n\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\\t#endif\\n\\n#endif\\n\"",
        "'meshbasic_frag'",
        "\"uniform vec3 diffuse;\\nuniform float opacity;\\n\\n#ifndef FLAT_SHADED\\n\\n\\tvarying vec3 vNormal;\\n\\n#endif\\n\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n\\nvoid main() {\\n\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\n\\tReflectedLight reflectedLight;\\n\\treflectedLight.directDiffuse = vec3( 0.0 );\\n\\treflectedLight.directSpecular = vec3( 0.0 );\\n\\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\\n\\t#include <aomap_fragment>\\n\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\n\\t#include <envmap_fragment>\\n\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\n}\\n\"",
        "'meshbasic_vert'",
        "\"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n\\nvoid main() {\\n\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\n\\t#ifdef USE_ENVMAP\\n\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\n\\t#endif\\n\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\n}\\n\"",
        "\"diffuse\"",
        "\"c\"",
        "\"opacity\"",
        "\"f\"",
        "\"map\"",
        "\"t\"",
        "\"offsetRepeat\"",
        "\"v4\"",
        "\"specularMap\"",
        "\"t\"",
        "\"alphaMap\"",
        "\"t\"",
        "\"envMap\"",
        "\"t\"",
        "\"flipEnvMap\"",
        "\"f\"",
        "\"reflectivity\"",
        "\"f\"",
        "\"refractionRatio\"",
        "\"f\"",
        "\"aoMap\"",
        "\"t\"",
        "\"aoMapIntensity\"",
        "\"f\"",
        "\"lightMap\"",
        "\"t\"",
        "\"lightMapIntensity\"",
        "\"f\"",
        "\"emissiveMap\"",
        "\"t\"",
        "\"bumpMap\"",
        "\"t\"",
        "\"bumpScale\"",
        "\"f\"",
        "\"normalMap\"",
        "\"t\"",
        "\"normalScale\"",
        "\"v2\"",
        "\"displacementMap\"",
        "\"t\"",
        "\"displacementScale\"",
        "\"f\"",
        "\"displacementBias\"",
        "\"f\"",
        "\"roughnessMap\"",
        "\"t\"",
        "\"metalnessMap\"",
        "\"t\"",
        "\"fogDensity\"",
        "\"f\"",
        "\"fogNear\"",
        "\"f\"",
        "\"fogFar\"",
        "\"f\"",
        "\"fogColor\"",
        "\"c\"",
        "\"ambientLightColor\"",
        "\"fv\"",
        "\"directionalLights\"",
        "\"sa\"",
        "\"direction\"",
        "\"v3\"",
        "\"color\"",
        "\"c\"",
        "\"shadow\"",
        "\"i\"",
        "\"shadowBias\"",
        "\"f\"",
        "\"shadowRadius\"",
        "\"f\"",
        "\"shadowMapSize\"",
        "\"v2\"",
        "\"directionalShadowMap\"",
        "\"tv\"",
        "\"directionalShadowMatrix\"",
        "\"m4v\"",
        "\"spotLights\"",
        "\"sa\"",
        "\"color\"",
        "\"c\"",
        "\"position\"",
        "\"v3\"",
        "\"direction\"",
        "\"v3\"",
        "\"distance\"",
        "\"f\"",
        "\"coneCos\"",
        "\"f\"",
        "\"penumbraCos\"",
        "\"f\"",
        "\"decay\"",
        "\"f\"",
        "\"shadow\"",
        "\"i\"",
        "\"shadowBias\"",
        "\"f\"",
        "\"shadowRadius\"",
        "\"f\"",
        "\"shadowMapSize\"",
        "\"v2\"",
        "\"spotShadowMap\"",
        "\"tv\"",
        "\"spotShadowMatrix\"",
        "\"m4v\"",
        "\"pointLights\"",
        "\"sa\"",
        "\"color\"",
        "\"c\"",
        "\"position\"",
        "\"v3\"",
        "\"decay\"",
        "\"f\"",
        "\"distance\"",
        "\"f\"",
        "\"shadow\"",
        "\"i\"",
        "\"shadowBias\"",
        "\"f\"",
        "\"shadowRadius\"",
        "\"f\"",
        "\"shadowMapSize\"",
        "\"v2\"",
        "\"pointShadowMap\"",
        "\"tv\"",
        "\"pointShadowMatrix\"",
        "\"m4v\"",
        "\"hemisphereLights\"",
        "\"sa\"",
        "\"direction\"",
        "\"v3\"",
        "\"skyColor\"",
        "\"c\"",
        "\"groundColor\"",
        "\"c\"",
        "\"diffuse\"",
        "\"c\"",
        "\"opacity\"",
        "\"f\"",
        "\"size\"",
        "\"f\"",
        "\"scale\"",
        "\"f\"",
        "\"map\"",
        "\"t\"",
        "\"offsetRepeat\"",
        "\"v4\"",
        "'basic'",
        "\"common\"",
        "\"aomap\"",
        "\"fog\"",
        "'meshbasic_vert'",
        "'meshbasic_frag'",
        "'lambert'",
        "\"common\"",
        "\"aomap\"",
        "\"lightmap\"",
        "\"emissivemap\"",
        "\"fog\"",
        "\"lights\"",
        "\"emissive\"",
        "\"c\"",
        "'meshlambert_vert'",
        "'meshlambert_frag'",
        "'phong'",
        "\"common\"",
        "\"aomap\"",
        "\"lightmap\"",
        "\"emissivemap\"",
        "\"bumpmap\"",
        "\"normalmap\"",
        "\"displacementmap\"",
        "\"fog\"",
        "\"lights\"",
        "\"emissive\"",
        "\"c\"",
        "\"specular\"",
        "\"c\"",
        "\"shininess\"",
        "\"f\"",
        "'meshphong_vert'",
        "'meshphong_frag'",
        "'standard'",
        "\"common\"",
        "\"aomap\"",
        "\"lightmap\"",
        "\"emissivemap\"",
        "\"bumpmap\"",
        "\"normalmap\"",
        "\"displacementmap\"",
        "\"roughnessmap\"",
        "\"metalnessmap\"",
        "\"fog\"",
        "\"lights\"",
        "\"emissive\"",
        "\"c\"",
        "\"roughness\"",
        "\"f\"",
        "\"metalness\"",
        "\"f\"",
        "\"envMapIntensity\"",
        "\"f\"",
        "'meshstandard_vert'",
        "'meshstandard_frag'",
        "'points'",
        "\"points\"",
        "\"fog\"",
        "'points_vert'",
        "'points_frag'",
        "'dashed'",
        "\"common\"",
        "\"fog\"",
        "\"scale\"",
        "\"f\"",
        "\"dashSize\"",
        "\"f\"",
        "\"totalSize\"",
        "\"f\"",
        "'linedashed_vert'",
        "'linedashed_frag'",
        "'depth'",
        "\"mNear\"",
        "\"f\"",
        "\"mFar\"",
        "\"f\"",
        "\"opacity\"",
        "\"f\"",
        "'depth_vert'",
        "'depth_frag'",
        "'normal'",
        "\"opacity\"",
        "\"f\"",
        "'normal_vert'",
        "'normal_frag'",
        "'cube'",
        "\"tCube\"",
        "\"t\"",
        "\"tFlip\"",
        "\"f\"",
        "'cube_vert'",
        "'cube_frag'",
        "'equirect'",
        "\"tEquirect\"",
        "\"t\"",
        "\"tFlip\"",
        "\"f\"",
        "'equirect_vert'",
        "'equirect_frag'",
        "'depthRGBA'",
        "'depthRGBA_vert'",
        "'depthRGBA_frag'",
        "'distanceRGBA'",
        "\"lightPos\"",
        "\"v3\"",
        "'distanceRGBA_vert'",
        "'distanceRGBA_frag'",
        "'canvas'",
        "''",
        "''",
        "'webgl'",
        "'experimental-webgl'",
        "'webgl'",
        "'Error creating WebGL context with your selected attributes.'",
        "'Error creating WebGL context.'",
        "'rangeMin'",
        "'rangeMax'",
        "'precision'",
        "'webglcontextlost'",
        "'OES_texture_float'",
        "'OES_texture_float_linear'",
        "'OES_texture_half_float'",
        "'OES_texture_half_float_linear'",
        "'OES_standard_derivatives'",
        "'ANGLE_instanced_arrays'",
        "'OES_element_index_uint'",
        "''",
        "'WEBGL_lose_context'",
        "'EXT_texture_filter_anisotropic'",
        "'px'",
        "'px'",
        "'webglcontextlost'",
        "'dispose'",
        "'dispose'",
        "'dispose'",
        "'MeshPhongMaterial'",
        "'MeshStandardMaterial'",
        "'_'",
        "'_'",
        "'morphTarget'",
        "'morphNormal'",
        "'morphTarget'",
        "'morphNormal'",
        "'ANGLE_instanced_arrays'",
        "''",
        "''",
        "'dispose'",
        "'morphTarget'",
        "'morphNormal'",
        "'1i'",
        "'1f'",
        "'2f'",
        "'3f'",
        "'4f'",
        "'1iv'",
        "'3iv'",
        "'1fv'",
        "'2fv'",
        "'3fv'",
        "'4fv'",
        "'Matrix2fv'",
        "'Matrix3fv'",
        "'Matrix4fv'",
        "'i'",
        "'f'",
        "'v2'",
        "'v3'",
        "'v4'",
        "'c'",
        "'s'",
        "'sa'",
        "'iv1'",
        "'iv'",
        "'fv1'",
        "'fv'",
        "'v2v'",
        "'v3v'",
        "'v4v'",
        "'m2'",
        "'m3'",
        "'m3v'",
        "'m4'",
        "'m4v'",
        "'t'",
        "'tv'",
        "','",
        "','",
        "','",
        "','",
        "'EXT_texture_filter_anisotropic'",
        "'OES_texture_float_linear'",
        "'OES_texture_half_float_linear'",
        "'dispose'",
        "'canvas'",
        "'2d'",
        "'canvas'",
        "'2d'",
        "'dispose'",
        "'dispose'",
        "'WEBGL_color_buffer_float'",
        "'EXT_color_buffer_half_float'",
        "'OES_texture_half_float'",
        "'WEBGL_compressed_texture_s3tc'",
        "'WEBGL_compressed_texture_pvrtc'",
        "'WEBGL_compressed_texture_etc1'",
        "'EXT_blend_minmax'",
        "'EXT_texture_filter_anisotropic'",
        "'EXT_texture_filter_anisotropic'",
        "'MOZ_EXT_texture_filter_anisotropic'",
        "'WEBKIT_EXT_texture_filter_anisotropic'",
        "'WEBGL_compressed_texture_s3tc'",
        "'WEBGL_compressed_texture_s3tc'",
        "'MOZ_WEBGL_compressed_texture_s3tc'",
        "'WEBKIT_WEBGL_compressed_texture_s3tc'",
        "'WEBGL_compressed_texture_pvrtc'",
        "'WEBGL_compressed_texture_pvrtc'",
        "'WEBKIT_WEBGL_compressed_texture_pvrtc'",
        "'WEBGL_compressed_texture_etc1'",
        "'WEBGL_compressed_texture_etc1'",
        "'highp'",
        "'highp'",
        "'mediump'",
        "'mediump'",
        "'mediump'",
        "'lowp'",
        "'highp'",
        "'OES_texture_float'",
        "'EXT_frag_depth'",
        "'DirectionalLight'",
        "'SpotLight'",
        "'PointLight'",
        "'HemisphereLight'",
        "'ANGLE_instanced_arrays'",
        "'WEBGL_compressed_texture_pvrtc'",
        "'WEBGL_compressed_texture_s3tc'",
        "'WEBGL_compressed_texture_etc1'",
        "'dispose'",
        "'dispose'",
        "'ANGLE_instanced_arrays'",
        "'OES_element_index_uint'",
        "'ANGLE_instanced_arrays'",
        "'\\n'",
        "': '",
        "'\\n'",
        "''",
        "\"depthRGBA\"",
        "\"distanceRGBA\"",
        "'USE_SHADOWMAP'",
        "''",
        "'position'",
        "'uv'",
        "'uvOffset'",
        "'uvScale'",
        "'rotation'",
        "'scale'",
        "'color'",
        "'map'",
        "'opacity'",
        "'modelViewMatrix'",
        "'projectionMatrix'",
        "'fogType'",
        "'fogDensity'",
        "'fogNear'",
        "'fogFar'",
        "'fogColor'",
        "'alphaTest'",
        "'canvas'",
        "'2d'",
        "'white'",
        "'precision '",
        "' float;'",
        "'uniform mat4 modelViewMatrix;'",
        "'uniform mat4 projectionMatrix;'",
        "'uniform float rotation;'",
        "'uniform vec2 scale;'",
        "'uniform vec2 uvOffset;'",
        "'uniform vec2 uvScale;'",
        "'attribute vec2 position;'",
        "'attribute vec2 uv;'",
        "'varying vec2 vUV;'",
        "'void main() {'",
        "'vUV = uvOffset + uv * uvScale;'",
        "'vec2 alignedPosition = position * scale;'",
        "'vec2 rotatedPosition;'",
        "'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;'",
        "'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;'",
        "'vec4 finalPosition;'",
        "'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );'",
        "'finalPosition.xy += rotatedPosition;'",
        "'finalPosition = projectionMatrix * finalPosition;'",
        "'gl_Position = finalPosition;'",
        "'}'",
        "'\\n'",
        "'precision '",
        "' float;'",
        "'uniform vec3 color;'",
        "'uniform sampler2D map;'",
        "'uniform float opacity;'",
        "'uniform int fogType;'",
        "'uniform vec3 fogColor;'",
        "'uniform float fogDensity;'",
        "'uniform float fogNear;'",
        "'uniform float fogFar;'",
        "'uniform float alphaTest;'",
        "'varying vec2 vUV;'",
        "'void main() {'",
        "'vec4 texture = texture2D( map, vUV );'",
        "'if ( texture.a < alphaTest ) discard;'",
        "'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );'",
        "'if ( fogType > 0 ) {'",
        "'float depth = gl_FragCoord.z / gl_FragCoord.w;'",
        "'float fogFactor = 0.0;'",
        "'if ( fogType == 1 ) {'",
        "'fogFactor = smoothstep( fogNear, fogFar, depth );'",
        "'} else {'",
        "'const float LOG2 = 1.442695;'",
        "'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );'",
        "'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );'",
        "'}'",
        "'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );'",
        "'}'",
        "'}'",
        "'\\n'",
        "\"uniform lowp int renderType;\"",
        "\"uniform vec3 screenPosition;\"",
        "\"uniform vec2 scale;\"",
        "\"uniform float rotation;\"",
        "\"uniform sampler2D occlusionMap;\"",
        "\"attribute vec2 position;\"",
        "\"attribute vec2 uv;\"",
        "\"varying vec2 vUV;\"",
        "\"varying float vVisibility;\"",
        "\"void main() {\"",
        "\"vUV = uv;\"",
        "\"vec2 pos = position;\"",
        "\"if ( renderType == 2 ) {\"",
        "\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\"",
        "\"vVisibility =        visibility.r / 9.0;\"",
        "\"vVisibility *= 1.0 - visibility.g / 9.0;\"",
        "\"vVisibility *=       visibility.b / 9.0;\"",
        "\"vVisibility *= 1.0 - visibility.a / 9.0;\"",
        "\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\"",
        "\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\"",
        "\"}\"",
        "\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\"",
        "\"}\"",
        "\"\\n\"",
        "\"uniform lowp int renderType;\"",
        "\"uniform sampler2D map;\"",
        "\"uniform float opacity;\"",
        "\"uniform vec3 color;\"",
        "\"varying vec2 vUV;\"",
        "\"varying float vVisibility;\"",
        "\"void main() {\"",
        "\"if ( renderType == 0 ) {\"",
        "\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\"",
        "\"} else if ( renderType == 1 ) {\"",
        "\"gl_FragColor = texture2D( map, vUV );\"",
        "\"} else {\"",
        "\"vec4 texture = texture2D( map, vUV );\"",
        "\"texture.a *= opacity * vVisibility;\"",
        "\"gl_FragColor = texture;\"",
        "\"gl_FragColor.rgb *= color;\"",
        "\"}\"",
        "\"}\"",
        "\"\\n\"",
        "\"uniform lowp int renderType;\"",
        "\"uniform vec3 screenPosition;\"",
        "\"uniform vec2 scale;\"",
        "\"uniform float rotation;\"",
        "\"attribute vec2 position;\"",
        "\"attribute vec2 uv;\"",
        "\"varying vec2 vUV;\"",
        "\"void main() {\"",
        "\"vUV = uv;\"",
        "\"vec2 pos = position;\"",
        "\"if ( renderType == 2 ) {\"",
        "\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\"",
        "\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\"",
        "\"}\"",
        "\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\"",
        "\"}\"",
        "\"\\n\"",
        "\"precision mediump float;\"",
        "\"uniform lowp int renderType;\"",
        "\"uniform sampler2D map;\"",
        "\"uniform sampler2D occlusionMap;\"",
        "\"uniform float opacity;\"",
        "\"uniform vec3 color;\"",
        "\"varying vec2 vUV;\"",
        "\"void main() {\"",
        "\"if ( renderType == 0 ) {\"",
        "\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\"",
        "\"} else if ( renderType == 1 ) {\"",
        "\"gl_FragColor = texture2D( map, vUV );\"",
        "\"} else {\"",
        "\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\"",
        "\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\"",
        "\"visibility = ( 1.0 - visibility / 4.0 );\"",
        "\"vec4 texture = texture2D( map, vUV );\"",
        "\"texture.a *= opacity * visibility;\"",
        "\"gl_FragColor = texture;\"",
        "\"gl_FragColor.rgb *= color;\"",
        "\"}\"",
        "\"}\"",
        "\"\\n\"",
        "\"position\"",
        "\"uv\"",
        "\"renderType\"",
        "\"map\"",
        "\"occlusionMap\"",
        "\"opacity\"",
        "\"color\"",
        "\"scale\"",
        "\"rotation\"",
        "\"screenPosition\"",
        "\"precision \"",
        "\" float;\\n\"",
        "'Linear'",
        "'( value )'",
        "'sRGB'",
        "'( value )'",
        "'RGBE'",
        "'( value )'",
        "'RGBM'",
        "'( value, 7.0 )'",
        "'RGBM'",
        "'( value, 16.0 )'",
        "'RGBD'",
        "'( value, 256.0 )'",
        "'Gamma'",
        "'( value, float( GAMMA_FACTOR ) )'",
        "'unsupported encoding: '",
        "\"vec4 \"",
        "\"( vec4 value ) { return \"",
        "\"ToLinear\"",
        "\"; }\"",
        "\"vec4 \"",
        "\"( vec4 value ) { return LinearTo\"",
        "\"; }\"",
        "\"Linear\"",
        "\"Reinhard\"",
        "\"Uncharted2\"",
        "\"OptimizedCineon\"",
        "'unsupported toneMapping: '",
        "\"vec3 \"",
        "\"( vec3 color ) { return \"",
        "\"ToneMapping( color ); }\"",
        "'#extension GL_OES_standard_derivatives : enable'",
        "''",
        "'EXT_frag_depth'",
        "'#extension GL_EXT_frag_depth : enable'",
        "''",
        "'WEBGL_draw_buffers'",
        "'#extension GL_EXT_draw_buffers : require'",
        "''",
        "'EXT_shader_texture_lod'",
        "'#extension GL_EXT_shader_texture_lod : enable'",
        "''",
        "'\\n'",
        "'#define '",
        "' '",
        "'\\n'",
        "''",
        "'Can not resolve #include <'",
        "'>'",
        "''",
        "'[ '",
        "' ]'",
        "'SHADOWMAP_TYPE_BASIC'",
        "'SHADOWMAP_TYPE_PCF'",
        "'SHADOWMAP_TYPE_PCF_SOFT'",
        "'ENVMAP_TYPE_CUBE'",
        "'ENVMAP_MODE_REFLECTION'",
        "'ENVMAP_BLENDING_MULTIPLY'",
        "'ENVMAP_TYPE_CUBE'",
        "'ENVMAP_TYPE_CUBE_UV'",
        "'ENVMAP_TYPE_EQUIREC'",
        "'ENVMAP_TYPE_SPHERE'",
        "'ENVMAP_MODE_REFRACTION'",
        "'ENVMAP_BLENDING_MULTIPLY'",
        "'ENVMAP_BLENDING_MIX'",
        "'ENVMAP_BLENDING_ADD'",
        "''",
        "''",
        "'precision '",
        "' float;'",
        "'precision '",
        "' int;'",
        "'#define SHADER_NAME '",
        "'#define VERTEX_TEXTURES'",
        "''",
        "'#define GAMMA_FACTOR '",
        "'#define MAX_BONES '",
        "'#define USE_MAP'",
        "''",
        "'#define USE_ENVMAP'",
        "''",
        "'#define '",
        "''",
        "'#define USE_LIGHTMAP'",
        "''",
        "'#define USE_AOMAP'",
        "''",
        "'#define USE_EMISSIVEMAP'",
        "''",
        "'#define USE_BUMPMAP'",
        "''",
        "'#define USE_NORMALMAP'",
        "''",
        "'#define USE_DISPLACEMENTMAP'",
        "''",
        "'#define USE_SPECULARMAP'",
        "''",
        "'#define USE_ROUGHNESSMAP'",
        "''",
        "'#define USE_METALNESSMAP'",
        "''",
        "'#define USE_ALPHAMAP'",
        "''",
        "'#define USE_COLOR'",
        "''",
        "'#define FLAT_SHADED'",
        "''",
        "'#define USE_SKINNING'",
        "''",
        "'#define BONE_TEXTURE'",
        "''",
        "'#define USE_MORPHTARGETS'",
        "''",
        "'#define USE_MORPHNORMALS'",
        "''",
        "'#define DOUBLE_SIDED'",
        "''",
        "'#define FLIP_SIDED'",
        "''",
        "'#define USE_SHADOWMAP'",
        "''",
        "'#define '",
        "''",
        "'#define POINT_LIGHT_SHADOWS'",
        "''",
        "'#define USE_SIZEATTENUATION'",
        "''",
        "'#define USE_LOGDEPTHBUF'",
        "''",
        "'EXT_frag_depth'",
        "'#define USE_LOGDEPTHBUF_EXT'",
        "''",
        "'uniform mat4 modelMatrix;'",
        "'uniform mat4 modelViewMatrix;'",
        "'uniform mat4 projectionMatrix;'",
        "'uniform mat4 viewMatrix;'",
        "'uniform mat3 normalMatrix;'",
        "'uniform vec3 cameraPosition;'",
        "'attribute vec3 position;'",
        "'attribute vec3 normal;'",
        "'attribute vec2 uv;'",
        "'#ifdef USE_COLOR'",
        "'\tattribute vec3 color;'",
        "'#endif'",
        "'#ifdef USE_MORPHTARGETS'",
        "'\tattribute vec3 morphTarget0;'",
        "'\tattribute vec3 morphTarget1;'",
        "'\tattribute vec3 morphTarget2;'",
        "'\tattribute vec3 morphTarget3;'",
        "'\t#ifdef USE_MORPHNORMALS'",
        "'\t\tattribute vec3 morphNormal0;'",
        "'\t\tattribute vec3 morphNormal1;'",
        "'\t\tattribute vec3 morphNormal2;'",
        "'\t\tattribute vec3 morphNormal3;'",
        "'\t#else'",
        "'\t\tattribute vec3 morphTarget4;'",
        "'\t\tattribute vec3 morphTarget5;'",
        "'\t\tattribute vec3 morphTarget6;'",
        "'\t\tattribute vec3 morphTarget7;'",
        "'\t#endif'",
        "'#endif'",
        "'#ifdef USE_SKINNING'",
        "'\tattribute vec4 skinIndex;'",
        "'\tattribute vec4 skinWeight;'",
        "'#endif'",
        "'\\n'",
        "'\\n'",
        "'precision '",
        "' float;'",
        "'precision '",
        "' int;'",
        "'#define SHADER_NAME '",
        "'#define ALPHATEST '",
        "''",
        "'#define GAMMA_FACTOR '",
        "'#define USE_FOG'",
        "''",
        "'#define FOG_EXP2'",
        "''",
        "'#define USE_MAP'",
        "''",
        "'#define USE_ENVMAP'",
        "''",
        "'#define '",
        "''",
        "'#define '",
        "''",
        "'#define '",
        "''",
        "'#define USE_LIGHTMAP'",
        "''",
        "'#define USE_AOMAP'",
        "''",
        "'#define USE_EMISSIVEMAP'",
        "''",
        "'#define USE_BUMPMAP'",
        "''",
        "'#define USE_NORMALMAP'",
        "''",
        "'#define USE_SPECULARMAP'",
        "''",
        "'#define USE_ROUGHNESSMAP'",
        "''",
        "'#define USE_METALNESSMAP'",
        "''",
        "'#define USE_ALPHAMAP'",
        "''",
        "'#define USE_COLOR'",
        "''",
        "'#define FLAT_SHADED'",
        "''",
        "'#define DOUBLE_SIDED'",
        "''",
        "'#define FLIP_SIDED'",
        "''",
        "'#define USE_SHADOWMAP'",
        "''",
        "'#define '",
        "''",
        "'#define POINT_LIGHT_SHADOWS'",
        "''",
        "\"#define PREMULTIPLIED_ALPHA\"",
        "''",
        "\"#define PHYSICALLY_CORRECT_LIGHTS\"",
        "''",
        "'#define USE_LOGDEPTHBUF'",
        "''",
        "'EXT_frag_depth'",
        "'#define USE_LOGDEPTHBUF_EXT'",
        "''",
        "'EXT_shader_texture_lod'",
        "'#define TEXTURE_LOD_EXT'",
        "''",
        "'uniform mat4 viewMatrix;'",
        "'uniform vec3 cameraPosition;'",
        "\"#define TONE_MAPPING\"",
        "''",
        "'tonemapping_pars_fragment'",
        "''",
        "\"toneMapping\"",
        "''",
        "'encodings_pars_fragment'",
        "''",
        "'mapTexelToLinear'",
        "''",
        "'envMapTexelToLinear'",
        "''",
        "'emissiveMapTexelToLinear'",
        "''",
        "\"linearToOutputTexel\"",
        "''",
        "'\\n'",
        "'\\n'",
        "'position'",
        "''",
        "''",
        "''",
        "'dispose'",
        "'depth'",
        "'normal'",
        "'basic'",
        "'lambert'",
        "'phong'",
        "'standard'",
        "'basic'",
        "'dashed'",
        "'points'",
        "\"precision\"",
        "\"supportsVertexTextures\"",
        "\"map\"",
        "\"mapEncoding\"",
        "\"envMap\"",
        "\"envMapMode\"",
        "\"envMapEncoding\"",
        "\"lightMap\"",
        "\"aoMap\"",
        "\"emissiveMap\"",
        "\"emissiveMapEncoding\"",
        "\"bumpMap\"",
        "\"normalMap\"",
        "\"displacementMap\"",
        "\"specularMap\"",
        "\"roughnessMap\"",
        "\"metalnessMap\"",
        "\"alphaMap\"",
        "\"combine\"",
        "\"vertexColors\"",
        "\"fog\"",
        "\"useFog\"",
        "\"fogExp\"",
        "\"flatShading\"",
        "\"sizeAttenuation\"",
        "\"logarithmicDepthBuffer\"",
        "\"skinning\"",
        "\"maxBones\"",
        "\"useVertexTexture\"",
        "\"morphTargets\"",
        "\"morphNormals\"",
        "\"maxMorphTargets\"",
        "\"maxMorphNormals\"",
        "\"premultipliedAlpha\"",
        "\"numDirLights\"",
        "\"numPointLights\"",
        "\"numSpotLights\"",
        "\"numHemiLights\"",
        "\"shadowMapEnabled\"",
        "\"pointLightShadows\"",
        "\"toneMapping\"",
        "'physicallyCorrectLights'",
        "\"shadowMapType\"",
        "\"alphaTest\"",
        "\"doubleSided\"",
        "\"flipSided\"",
        "'undefined'",
        "'undefined'",
        "'object'",
        "'default'",
        "'default'",
        "'setTexture'",
        "'setSize'",
        "'createMesh'",
        "'render'",
        "'bindEvents'",
        "'mousemove'",
        "'mousedown'",
        "'mouseup'",
        "'touchstart'",
        "'touchmove'",
        "'touchend'",
        "'devicemotion'",
        "'getCurrentSizeStyle'",
        "'height: '",
        "'; width: '",
        "';'",
        "'addDraggingStyle'",
        "'style'",
        "' cursor: -webkit-grabbing; cursor: -moz-grabbing; cursor: grabbing;'",
        "'addDraggableStyle'",
        "'style'",
        "' cursor: -webkit-grab; cursor: -moz-grab; cursor: grab;'",
        "'onDeviceMotion'",
        "'onMouseMove'",
        "'onMouseDown'",
        "'onMouseUp'",
        "'update'",
        "'YXZ'",
        "'photo'",
        "'play'",
        "'pause'",
        "'getElement'",
        "'video'",
        "'crossorigin'",
        "'anonymous'",
        "'webkit-playsinline'",
        "''",
        "'error'",
        "'createTexture'",
        "'createScene'",
        "'photo'",
        "'onError'",
        "'render'",
        "'createTexture'",
        "'getElement'",
        "'img'",
        "'crossorigin'",
        "'anonymous'",
        "'2d'",
        "'play'",
        "'pause'",
        "'getElement'",
        "'getElement'",
        "'canvas'",
        "'render'",
        "'play'",
        "'pause'",
        "'getElement'",
        "'audio'",
        "'crossorigin'",
        "'anonymous'",
        "'getElement'",
        "'createTexture'",
        "'render'"
    ],
    "variables": [
        "utils",
        "_typeof",
        "classCallCheck",
        "createClass",
        "i",
        "descriptor",
        "get",
        "desc",
        "parent",
        "getter",
        "inherits",
        "possibleConstructorReturn",
        "index",
        "THREE",
        "to",
        "i",
        "n",
        "nextSource",
        "keysArray",
        "nextIndex",
        "len",
        "nextKey",
        "desc",
        "chars",
        "uuid",
        "rnd",
        "r",
        "i",
        "degreeToRadiansFactor",
        "radianToDegreesFactor",
        "p",
        "q",
        "m",
        "color",
        "name",
        "components",
        "h",
        "s",
        "l",
        "hex",
        "size",
        "hex",
        "safeInverse",
        "r",
        "g",
        "b",
        "hsl",
        "r",
        "g",
        "b",
        "max",
        "min",
        "hue",
        "saturation",
        "lightness",
        "delta",
        "hsl",
        "min",
        "max",
        "length",
        "angle",
        "dx",
        "dy",
        "c",
        "s",
        "x",
        "y",
        "quaternion",
        "quaternion",
        "x",
        "y",
        "z",
        "e",
        "x",
        "y",
        "z",
        "e",
        "x",
        "y",
        "z",
        "e",
        "d",
        "x",
        "y",
        "z",
        "qx",
        "qy",
        "qz",
        "qw",
        "ix",
        "iy",
        "iz",
        "iw",
        "matrix",
        "matrix",
        "x",
        "y",
        "z",
        "e",
        "min",
        "max",
        "length",
        "x",
        "y",
        "z",
        "ax",
        "ay",
        "az",
        "bx",
        "by",
        "bz",
        "v1",
        "dot",
        "v1",
        "v1",
        "theta",
        "dx",
        "dy",
        "dz",
        "sinPhiRadius",
        "sx",
        "sy",
        "sz",
        "x",
        "y",
        "z",
        "w",
        "e",
        "s",
        "angle",
        "x",
        "y",
        "z",
        "epsilon",
        "epsilon2",
        "te",
        "m11",
        "m12",
        "m13",
        "m21",
        "m22",
        "m23",
        "m31",
        "m32",
        "m33",
        "xx",
        "yy",
        "zz",
        "xy",
        "xz",
        "yz",
        "s",
        "min",
        "max",
        "te",
        "me",
        "me",
        "v1",
        "i",
        "j",
        "offset",
        "v1",
        "i",
        "j",
        "offset",
        "te",
        "te",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "h",
        "i",
        "me",
        "te",
        "n11",
        "n21",
        "n31",
        "n12",
        "n22",
        "n32",
        "n13",
        "n23",
        "n33",
        "t11",
        "t12",
        "t13",
        "det",
        "msg",
        "tmp",
        "m",
        "te",
        "m",
        "te",
        "te",
        "te",
        "me",
        "v1",
        "te",
        "me",
        "scaleX",
        "scaleY",
        "scaleZ",
        "te",
        "x",
        "y",
        "z",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "ae",
        "af",
        "be",
        "bf",
        "ce",
        "cf",
        "de",
        "df",
        "ce",
        "cf",
        "de",
        "df",
        "ae",
        "af",
        "be",
        "bf",
        "ac",
        "ad",
        "bc",
        "bd",
        "ac",
        "ad",
        "bc",
        "bd",
        "te",
        "x",
        "y",
        "z",
        "w",
        "x2",
        "y2",
        "z2",
        "xx",
        "xy",
        "xz",
        "yy",
        "yz",
        "zz",
        "wx",
        "wy",
        "wz",
        "x",
        "y",
        "z",
        "te",
        "ae",
        "be",
        "te",
        "a11",
        "a12",
        "a13",
        "a14",
        "a21",
        "a22",
        "a23",
        "a24",
        "a31",
        "a32",
        "a33",
        "a34",
        "a41",
        "a42",
        "a43",
        "a44",
        "b11",
        "b12",
        "b13",
        "b14",
        "b21",
        "b22",
        "b23",
        "b24",
        "b31",
        "b32",
        "b33",
        "b34",
        "b41",
        "b42",
        "b43",
        "b44",
        "te",
        "te",
        "v1",
        "i",
        "j",
        "offset",
        "v1",
        "i",
        "j",
        "offset",
        "te",
        "n11",
        "n12",
        "n13",
        "n14",
        "n21",
        "n22",
        "n23",
        "n24",
        "n31",
        "n32",
        "n33",
        "n34",
        "n41",
        "n42",
        "n43",
        "n44",
        "te",
        "tmp",
        "te",
        "v1",
        "te",
        "te",
        "me",
        "n11",
        "n21",
        "n31",
        "n41",
        "n12",
        "n22",
        "n32",
        "n42",
        "n13",
        "n23",
        "n33",
        "n43",
        "n14",
        "n24",
        "n34",
        "n44",
        "t11",
        "t12",
        "t13",
        "t14",
        "det",
        "msg",
        "te",
        "x",
        "y",
        "z",
        "te",
        "scaleXSq",
        "scaleYSq",
        "scaleZSq",
        "c",
        "s",
        "c",
        "s",
        "c",
        "s",
        "c",
        "s",
        "t",
        "x",
        "y",
        "z",
        "tx",
        "ty",
        "vector",
        "matrix",
        "te",
        "sx",
        "sy",
        "sz",
        "det",
        "invSX",
        "invSY",
        "invSZ",
        "te",
        "x",
        "y",
        "a",
        "b",
        "c",
        "d",
        "ymax",
        "ymin",
        "xmin",
        "xmax",
        "te",
        "w",
        "h",
        "p",
        "x",
        "y",
        "z",
        "te",
        "me",
        "i",
        "te",
        "v1",
        "v2",
        "normal",
        "inverseNormalLength",
        "perpendicularMagnitude",
        "result",
        "v1",
        "result",
        "direction",
        "denominator",
        "t",
        "startSign",
        "endSign",
        "result",
        "v1",
        "v2",
        "m1",
        "normalMatrix",
        "newNormal",
        "newCoplanarPoint",
        "c1",
        "c2",
        "c3",
        "s1",
        "s2",
        "s3",
        "order",
        "halfAngle",
        "s",
        "te",
        "m11",
        "m12",
        "m13",
        "m21",
        "m22",
        "m23",
        "m31",
        "m32",
        "m33",
        "trace",
        "s",
        "v1",
        "r",
        "EPS",
        "l",
        "qax",
        "qay",
        "qaz",
        "qaw",
        "qbx",
        "qby",
        "qbz",
        "qbw",
        "x",
        "y",
        "z",
        "w",
        "cosHalfTheta",
        "sinHalfTheta",
        "halfTheta",
        "ratioA",
        "ratioB",
        "x0",
        "y0",
        "z0",
        "w0",
        "x1",
        "y1",
        "z1",
        "w1",
        "s",
        "cos",
        "dir",
        "sqrSin",
        "sin",
        "len",
        "tDir",
        "f",
        "v0",
        "result",
        "resultLengthSq",
        "v0",
        "v1",
        "v2",
        "dot00",
        "dot01",
        "dot02",
        "dot11",
        "dot12",
        "denom",
        "result",
        "invDenom",
        "u",
        "v",
        "v1",
        "result",
        "v0",
        "v1",
        "result",
        "result",
        "minX",
        "minY",
        "minZ",
        "maxX",
        "maxY",
        "maxZ",
        "i",
        "il",
        "x",
        "y",
        "z",
        "i",
        "il",
        "v1",
        "halfSize",
        "box",
        "scope",
        "geometry",
        "result",
        "result",
        "result",
        "closestPoint",
        "min",
        "max",
        "result",
        "v1",
        "clampedPoint",
        "v1",
        "result",
        "points",
        "clamp",
        "te",
        "m11",
        "m12",
        "m13",
        "m21",
        "m22",
        "m23",
        "m31",
        "m32",
        "m33",
        "matrix",
        "q",
        "result",
        "v1",
        "result",
        "directionDistance",
        "v1",
        "directionDistance",
        "segCenter",
        "segDir",
        "diff",
        "segExtent",
        "a01",
        "b0",
        "b1",
        "c",
        "det",
        "s0",
        "s1",
        "sqrDist",
        "extDet",
        "invDet",
        "v1",
        "tca",
        "d2",
        "radius2",
        "thc",
        "t0",
        "t1",
        "denominator",
        "t",
        "t",
        "distToPoint",
        "denominator",
        "tmin",
        "tmax",
        "tymin",
        "tymax",
        "tzmin",
        "tzmax",
        "invdirx",
        "invdiry",
        "invdirz",
        "origin",
        "v",
        "diff",
        "edge1",
        "edge2",
        "normal",
        "DdN",
        "sign",
        "DdQxE2",
        "DdE1xQ",
        "QdN",
        "box",
        "center",
        "maxRadiusSq",
        "i",
        "il",
        "radiusSum",
        "deltaLengthSq",
        "result",
        "box",
        "planes",
        "planes",
        "i",
        "planes",
        "me",
        "me0",
        "me1",
        "me2",
        "me3",
        "me4",
        "me5",
        "me6",
        "me7",
        "me8",
        "me9",
        "me10",
        "me11",
        "me12",
        "me13",
        "me14",
        "me15",
        "sphere",
        "geometry",
        "planes",
        "center",
        "negRadius",
        "i",
        "distance",
        "p1",
        "p2",
        "planes",
        "i",
        "plane",
        "d1",
        "d2",
        "planes",
        "i",
        "listeners",
        "listeners",
        "listeners",
        "listenerArray",
        "index",
        "listeners",
        "listenerArray",
        "array",
        "length",
        "i",
        "i",
        "position",
        "rotation",
        "quaternion",
        "scale",
        "q1",
        "v1",
        "v1",
        "v1",
        "v1",
        "v1",
        "v1",
        "v1",
        "m1",
        "m1",
        "i",
        "i",
        "index",
        "i",
        "l",
        "child",
        "result",
        "position",
        "scale",
        "result",
        "quaternion",
        "result",
        "position",
        "quaternion",
        "result",
        "quaternion",
        "result",
        "children",
        "i",
        "l",
        "children",
        "i",
        "l",
        "parent",
        "i",
        "l",
        "isRootObject",
        "output",
        "i",
        "geometries",
        "materials",
        "textures",
        "images",
        "values",
        "data",
        "i",
        "child",
        "i",
        "il",
        "i",
        "il",
        "i",
        "l",
        "array",
        "offset",
        "i",
        "l",
        "color",
        "array",
        "offset",
        "i",
        "l",
        "index",
        "array",
        "offset",
        "i",
        "l",
        "vector",
        "array",
        "offset",
        "i",
        "l",
        "vector",
        "array",
        "offset",
        "i",
        "l",
        "vector",
        "position",
        "normal",
        "normalMatrix",
        "m1",
        "m1",
        "m1",
        "m1",
        "m1",
        "obj",
        "offset",
        "geometry",
        "positions",
        "colors",
        "lineDistances",
        "geometry",
        "direct",
        "attribute",
        "attribute",
        "attribute",
        "attribute",
        "attribute",
        "positions",
        "normals",
        "colors",
        "uvs",
        "uvs2",
        "TypeArray",
        "indices",
        "array",
        "morphTargets",
        "i",
        "l",
        "morphTarget",
        "attribute",
        "skinIndices",
        "skinWeights",
        "vector",
        "positions",
        "box",
        "vector",
        "positions",
        "center",
        "maxRadiusSq",
        "i",
        "il",
        "index",
        "attributes",
        "groups",
        "positions",
        "array",
        "i",
        "il",
        "normals",
        "vA",
        "vB",
        "vC",
        "pA",
        "pB",
        "pC",
        "cb",
        "ab",
        "indices",
        "j",
        "jl",
        "group",
        "start",
        "count",
        "i",
        "start",
        "il",
        "i",
        "il",
        "attributes",
        "attribute1",
        "attributeArray1",
        "attribute2",
        "attributeArray2",
        "attributeSize",
        "i",
        "j",
        "normals",
        "x",
        "y",
        "z",
        "n",
        "i",
        "il",
        "geometry2",
        "indices",
        "attributes",
        "attribute",
        "array",
        "itemSize",
        "array2",
        "index",
        "index2",
        "i",
        "l",
        "j",
        "data",
        "parameters",
        "index",
        "array",
        "attributes",
        "attribute",
        "array",
        "groups",
        "boundingSphere",
        "index",
        "attributes",
        "attribute",
        "groups",
        "i",
        "l",
        "group",
        "index",
        "attributes",
        "attribute",
        "groups",
        "i",
        "l",
        "group",
        "normalMatrix",
        "i",
        "il",
        "vertex",
        "i",
        "il",
        "face",
        "j",
        "jl",
        "m1",
        "m1",
        "m1",
        "m1",
        "m1",
        "obj",
        "scope",
        "indices",
        "attributes",
        "positions",
        "normals",
        "colors",
        "uvs",
        "uvs2",
        "tempNormals",
        "tempUVs",
        "tempUVs2",
        "i",
        "j",
        "vertexNormals",
        "vertexColors",
        "face",
        "groups",
        "i",
        "group",
        "start",
        "count",
        "j",
        "start",
        "jl",
        "i",
        "i",
        "offset",
        "center",
        "radius",
        "s",
        "matrix",
        "cb",
        "ab",
        "f",
        "fl",
        "face",
        "vA",
        "vB",
        "vC",
        "v",
        "vl",
        "f",
        "fl",
        "face",
        "vertices",
        "vA",
        "vB",
        "vC",
        "cb",
        "ab",
        "vertexNormals",
        "i",
        "il",
        "f",
        "fl",
        "face",
        "tmpGeo",
        "dstNormalsFace",
        "dstNormalsVertex",
        "faceNormal",
        "vertexNormals",
        "morphNormals",
        "faceNormal",
        "vertexNormals",
        "d",
        "vertices",
        "i",
        "il",
        "normalMatrix",
        "vertexOffset",
        "vertices1",
        "vertices2",
        "faces1",
        "faces2",
        "uvs1",
        "uvs2",
        "i",
        "il",
        "vertex",
        "vertexCopy",
        "face",
        "faceCopy",
        "normal",
        "color",
        "faceVertexNormals",
        "faceVertexColors",
        "j",
        "jl",
        "j",
        "jl",
        "uv",
        "uvCopy",
        "j",
        "jl",
        "verticesMap",
        "unique",
        "changes",
        "v",
        "key",
        "precisionPoints",
        "precision",
        "i",
        "il",
        "face",
        "indices",
        "j",
        "jl",
        "faceIndicesToRemove",
        "dupIndex",
        "n",
        "idx",
        "diff",
        "faces",
        "length",
        "i",
        "uvs1",
        "uvs2",
        "newUvs1",
        "newUvs2",
        "i",
        "id",
        "data",
        "parameters",
        "vertices",
        "i",
        "vertex",
        "faces",
        "normals",
        "normalsHash",
        "colors",
        "colorsHash",
        "uvs",
        "uvsHash",
        "i",
        "face",
        "hasMaterial",
        "hasFaceUv",
        "hasFaceVertexUv",
        "hasFaceNormal",
        "hasFaceVertexNormal",
        "hasFaceColor",
        "hasFaceVertexColor",
        "faceType",
        "faceVertexUvs",
        "vertexNormals",
        "vertexColors",
        "hash",
        "hash",
        "hash",
        "vertices",
        "i",
        "il",
        "faces",
        "i",
        "il",
        "i",
        "il",
        "faceVertexUvs",
        "j",
        "jl",
        "uvs",
        "uvsCopy",
        "k",
        "kl",
        "uv",
        "group",
        "groups",
        "materialIndex",
        "faces",
        "i",
        "face",
        "faces",
        "vertices",
        "faceVertexUvs",
        "hasFaceVertexUv",
        "hasFaceVertexUv2",
        "morphTargets",
        "morphTargetsLength",
        "morphTargetsPosition",
        "i",
        "morphNormals",
        "morphNormalsLength",
        "morphTargetsNormal",
        "i",
        "skinIndices",
        "skinWeights",
        "hasSkinIndices",
        "hasSkinWeights",
        "i",
        "face",
        "vertexNormals",
        "normal",
        "vertexColors",
        "color",
        "vertexUvs",
        "vertexUvs",
        "j",
        "morphTarget",
        "j",
        "morphNormal",
        "quaternion",
        "result",
        "m1",
        "fov",
        "aspect",
        "top",
        "bottom",
        "left",
        "right",
        "width",
        "height",
        "data",
        "data",
        "thetaEnd",
        "vertexCount",
        "positions",
        "normals",
        "uvs",
        "index",
        "vertices",
        "normal",
        "y",
        "verticesRow",
        "v",
        "x",
        "u",
        "px",
        "py",
        "pz",
        "indices",
        "y",
        "x",
        "v1",
        "v2",
        "v3",
        "v4",
        "newValue",
        "currentValue",
        "isRoot",
        "data",
        "values",
        "data",
        "textures",
        "images",
        "data",
        "output",
        "materials",
        "i",
        "l",
        "material",
        "material",
        "i",
        "canvas",
        "output",
        "image",
        "scope",
        "indices",
        "vertices",
        "uvs",
        "geometry",
        "matrixPosition",
        "distanceSq",
        "guessSizeSq",
        "f",
        "fl",
        "flare",
        "vecX",
        "vecY",
        "i",
        "l",
        "inverseMatrix",
        "ray",
        "sphere",
        "precision",
        "precisionSq",
        "geometry",
        "matrixWorld",
        "vStart",
        "vEnd",
        "interSegment",
        "interRay",
        "step",
        "index",
        "attributes",
        "positions",
        "indices",
        "i",
        "l",
        "a",
        "b",
        "distSq",
        "distance",
        "i",
        "l",
        "distSq",
        "distance",
        "vertices",
        "nbVertices",
        "i",
        "distSq",
        "distance",
        "m",
        "ml",
        "inverseMatrix",
        "ray",
        "sphere",
        "vA",
        "vB",
        "vC",
        "tempA",
        "tempB",
        "tempC",
        "uvA",
        "uvB",
        "uvC",
        "barycoord",
        "intersectionPoint",
        "intersectionPointWorld",
        "intersect",
        "material",
        "distance",
        "intersection",
        "geometry",
        "material",
        "matrixWorld",
        "uvs",
        "intersection",
        "a",
        "b",
        "c",
        "index",
        "attributes",
        "positions",
        "indices",
        "i",
        "l",
        "i",
        "l",
        "fvA",
        "fvB",
        "fvC",
        "isFaceMaterial",
        "materials",
        "vertices",
        "faces",
        "faceVertexUvs",
        "f",
        "fl",
        "face",
        "faceMaterial",
        "morphTargets",
        "morphInfluences",
        "t",
        "tl",
        "influence",
        "targets",
        "uvs_f",
        "bones",
        "bone",
        "gbone",
        "b",
        "bl",
        "b",
        "bl",
        "i",
        "sw",
        "scale",
        "vec",
        "skinWeight",
        "i",
        "scale",
        "inverseMatrix",
        "ray",
        "sphere",
        "geometry",
        "matrixWorld",
        "threshold",
        "localThreshold",
        "localThresholdSq",
        "position",
        "rayPointDistanceSq",
        "intersectPoint",
        "distance",
        "index",
        "attributes",
        "positions",
        "indices",
        "i",
        "il",
        "a",
        "i",
        "l",
        "vertices",
        "i",
        "l",
        "data",
        "merged",
        "u",
        "tmp",
        "uniforms_dst",
        "parameter_src",
        "_canvas",
        "_context",
        "_alpha",
        "_depth",
        "_stencil",
        "_antialias",
        "_premultipliedAlpha",
        "_preserveDrawingBuffer",
        "lights",
        "opaqueObjects",
        "opaqueObjectsLastIndex",
        "transparentObjects",
        "transparentObjectsLastIndex",
        "morphInfluences",
        "sprites",
        "lensFlares",
        "_this",
        "_currentProgram",
        "_currentRenderTarget",
        "_currentFramebuffer",
        "_currentMaterialId",
        "_currentGeometryProgram",
        "_currentCamera",
        "_currentScissor",
        "_currentScissorTest",
        "_currentViewport",
        "_usedTextureUnits",
        "_clearColor",
        "_clearAlpha",
        "_width",
        "_height",
        "_pixelRatio",
        "_scissor",
        "_scissorTest",
        "_viewport",
        "_frustum",
        "_projScreenMatrix",
        "_vector3",
        "_lights",
        "_infoMemory",
        "_infoRender",
        "_gl",
        "attributes",
        "extensions",
        "capabilities",
        "state",
        "properties",
        "objects",
        "programCache",
        "lightCache",
        "bufferRenderer",
        "indexedBufferRenderer",
        "shadowMap",
        "spritePlugin",
        "lensFlarePlugin",
        "value",
        "extension",
        "bits",
        "texture",
        "renderTarget",
        "material",
        "textureProperties",
        "renderTargetProperties",
        "textureProperties",
        "i",
        "programInfo",
        "buffers",
        "attributes",
        "i",
        "l",
        "array",
        "nx",
        "ny",
        "nz",
        "program",
        "updateBuffers",
        "geometryProgram",
        "morphTargetInfluences",
        "activeInfluences",
        "i",
        "l",
        "influence",
        "morphAttributes",
        "i",
        "l",
        "influence",
        "index",
        "uniforms",
        "index",
        "position",
        "renderer",
        "dataStart",
        "dataCount",
        "Infinity",
        "rangeStart",
        "rangeCount",
        "groupStart",
        "groupCount",
        "drawStart",
        "drawEnd",
        "drawCount",
        "lineWidth",
        "extension",
        "geometryAttributes",
        "programAttributes",
        "materialDefaultAttributeValues",
        "programAttribute",
        "geometryAttribute",
        "size",
        "buffer",
        "data",
        "stride",
        "offset",
        "value",
        "fog",
        "overrideMaterial",
        "texture",
        "array",
        "index",
        "renderItem",
        "material",
        "geometry",
        "groups",
        "materials",
        "i",
        "l",
        "group",
        "groupMaterial",
        "children",
        "i",
        "l",
        "i",
        "l",
        "renderItem",
        "geometry",
        "material",
        "group",
        "program",
        "materialProperties",
        "parameters",
        "code",
        "program",
        "programChange",
        "shader",
        "attributes",
        "i",
        "i",
        "uniforms",
        "uniformLocations",
        "location",
        "j",
        "jl",
        "uniform",
        "materialProperties",
        "refreshProgram",
        "refreshMaterial",
        "refreshLights",
        "program",
        "p_uniforms",
        "m_uniforms",
        "textureUnit",
        "dynamicUniforms",
        "j",
        "jl",
        "uniform",
        "onUpdateCallback",
        "uvScaleMap",
        "offset",
        "repeat",
        "offset",
        "repeat",
        "textureUnit",
        "_usedTextureUnits",
        "texture",
        "textureUnit",
        "properties",
        "property",
        "locationProperty",
        "valueProperty",
        "properties",
        "i",
        "l",
        "property",
        "locationProperty",
        "valueProperty",
        "i",
        "i2",
        "il",
        "i",
        "i3",
        "il",
        "i",
        "i4",
        "il",
        "i",
        "il",
        "i",
        "il",
        "i",
        "il",
        "i",
        "il",
        "i",
        "l",
        "uniform",
        "location",
        "value",
        "l",
        "ll",
        "light",
        "r",
        "g",
        "b",
        "color",
        "intensity",
        "distance",
        "viewMatrix",
        "directionalLength",
        "pointLength",
        "spotLength",
        "hemiLength",
        "shadowsLength",
        "uniforms",
        "uniforms",
        "uniforms",
        "uniforms",
        "extension",
        "image",
        "isPowerOfTwoImage",
        "glFormat",
        "glType",
        "mipmap",
        "mipmaps",
        "i",
        "il",
        "i",
        "il",
        "i",
        "il",
        "textureProperties",
        "image",
        "scale",
        "canvas",
        "context",
        "canvas",
        "context",
        "textureProperties",
        "isCompressed",
        "isDataTexture",
        "cubeImage",
        "i",
        "image",
        "isPowerOfTwoImage",
        "glFormat",
        "glType",
        "i",
        "mipmap",
        "mipmaps",
        "j",
        "jl",
        "glFormat",
        "glType",
        "renderTargetProperties",
        "isCube",
        "i",
        "renderTargetProperties",
        "textureProperties",
        "isCube",
        "isTargetPowerOfTwo",
        "i",
        "i",
        "isCube",
        "framebuffer",
        "renderTargetProperties",
        "textureProperties",
        "framebuffer",
        "restore",
        "texture",
        "target",
        "texture",
        "extension",
        "extensions",
        "extension",
        "_maxPrecision",
        "properties",
        "uuid",
        "lights",
        "uniforms",
        "_this",
        "color",
        "newAttributes",
        "enabledAttributes",
        "attributeDivisors",
        "capabilities",
        "compressedTextureFormats",
        "currentBlending",
        "currentBlendEquation",
        "currentBlendSrc",
        "currentBlendDst",
        "currentBlendEquationAlpha",
        "currentBlendSrcAlpha",
        "currentBlendDstAlpha",
        "currentPremultipledAlpha",
        "currentDepthFunc",
        "currentDepthWrite",
        "currentColorWrite",
        "currentStencilWrite",
        "currentStencilFunc",
        "currentStencilRef",
        "currentStencilMask",
        "currentStencilFail",
        "currentStencilZFail",
        "currentStencilZPass",
        "currentFlipSided",
        "currentLineWidth",
        "currentPolygonOffsetFactor",
        "currentPolygonOffsetUnits",
        "currentScissorTest",
        "maxTextures",
        "currentTextureSlot",
        "currentBoundTextures",
        "currentClearColor",
        "currentClearDepth",
        "currentClearStencil",
        "currentScissor",
        "currentViewport",
        "emptyTexture",
        "i",
        "l",
        "extension",
        "i",
        "l",
        "formats",
        "i",
        "boundTexture",
        "i",
        "geometries",
        "geometry",
        "buffergeometry",
        "geometry",
        "buffergeometry",
        "property",
        "bufferproperty",
        "buffer",
        "mode",
        "extension",
        "position",
        "count",
        "mode",
        "size",
        "extension",
        "lines",
        "i",
        "shader",
        "_gl",
        "_state",
        "_frustum",
        "_projScreenMatrix",
        "_shadowMapSize",
        "_lookTarget",
        "_lightPositionWorld",
        "_renderList",
        "_MorphingFlag",
        "_SkinningFlag",
        "_NumberOfMaterialVariants",
        "_depthMaterials",
        "_distanceMaterials",
        "cubeDirections",
        "cubeUps",
        "cube2DViewPorts",
        "depthShader",
        "depthUniforms",
        "distanceShader",
        "distanceUniforms",
        "i",
        "useMorphing",
        "useSkinning",
        "depthMaterial",
        "distanceMaterial",
        "scope",
        "faceCount",
        "isPointLight",
        "shadows",
        "i",
        "il",
        "light",
        "shadow",
        "shadowCamera",
        "vpWidth",
        "vpHeight",
        "pars",
        "shadowMap",
        "shadowMatrix",
        "face",
        "vpDimensions",
        "j",
        "jl",
        "geometry",
        "material",
        "groups",
        "materials",
        "k",
        "kl",
        "group",
        "groupMaterial",
        "depthMaterial",
        "depthMaterial",
        "clearColor",
        "clearAlpha",
        "geometry",
        "newMaterial",
        "materialVariants",
        "_depthMaterials",
        "customMaterial",
        "useMorphing",
        "useSkinning",
        "variantIndex",
        "material",
        "children",
        "i",
        "l",
        "gl",
        "state",
        "vertexBuffer",
        "elementBuffer",
        "program",
        "attributes",
        "uniforms",
        "texture",
        "spritePosition",
        "spriteRotation",
        "spriteScale",
        "vertices",
        "faces",
        "canvas",
        "context",
        "oldFogType",
        "sceneFogType",
        "fog",
        "i",
        "l",
        "sprite",
        "scale",
        "i",
        "l",
        "sprite",
        "material",
        "fogType",
        "program",
        "vertexShader",
        "fragmentShader",
        "gl",
        "state",
        "vertexBuffer",
        "elementBuffer",
        "program",
        "attributes",
        "uniforms",
        "hasVertexTexture",
        "tempTexture",
        "occlusionTexture",
        "vertices",
        "faces",
        "shader",
        "tempPosition",
        "invAspect",
        "halfViewportWidth",
        "halfViewportHeight",
        "size",
        "scale",
        "screenPosition",
        "screenPositionPixels",
        "i",
        "l",
        "flare",
        "j",
        "jl",
        "sprite",
        "program",
        "fragmentShader",
        "vertexShader",
        "prefix",
        "geometries",
        "geometry",
        "index",
        "attributes",
        "morphAttributes",
        "array",
        "i",
        "l",
        "data",
        "attributeProperties",
        "usage",
        "property",
        "indices",
        "index",
        "attributes",
        "position",
        "edges",
        "array",
        "i",
        "l",
        "a",
        "b",
        "c",
        "array",
        "i",
        "l",
        "a",
        "b",
        "c",
        "TypeArray",
        "attribute",
        "tmp",
        "a",
        "programIdCount",
        "structRe",
        "arrayStructRe",
        "arrayRe",
        "components",
        "components",
        "toneMappingName",
        "chunks",
        "chunks",
        "value",
        "uniforms",
        "n",
        "i",
        "info",
        "name",
        "location",
        "matches",
        "structName",
        "structProperty",
        "uniformsStruct",
        "arrayName",
        "arrayIndex",
        "arrayProperty",
        "uniformsArray",
        "uniformsArrayIndex",
        "arrayName",
        "attributes",
        "n",
        "i",
        "info",
        "name",
        "pattern",
        "replace",
        "pattern",
        "unroll",
        "i",
        "gl",
        "extensions",
        "defines",
        "vertexShader",
        "fragmentShader",
        "shadowMapTypeDefine",
        "envMapTypeDefine",
        "envMapModeDefine",
        "envMapBlendingDefine",
        "gammaFactorDefine",
        "customExtensions",
        "customDefines",
        "program",
        "prefixVertex",
        "prefixFragment",
        "vertexGlsl",
        "fragmentGlsl",
        "glVertexShader",
        "glFragmentShader",
        "programLog",
        "vertexLog",
        "fragmentLog",
        "runnable",
        "haveDiagnostics",
        "cachedUniforms",
        "cachedAttributes",
        "programs",
        "shaderIDs",
        "parameterNames",
        "nVertexUniforms",
        "nVertexMatrices",
        "maxBones",
        "nVertexMatrices",
        "encoding",
        "shaderID",
        "maxBones",
        "precision",
        "parameters",
        "chunks",
        "i",
        "parameterName",
        "program",
        "p",
        "pl",
        "programInfo",
        "i",
        "THREE",
        "Renderer",
        "material",
        "geometry",
        "mesh",
        "MouseControls",
        "_this",
        "ThreeSixtyViewer",
        "options",
        "height",
        "width",
        "container",
        "containerId",
        "_this",
        "video",
        "texture",
        "scene",
        "group",
        "_this2",
        "loop",
        "Video",
        "texture",
        "Image",
        "image",
        "Canvas",
        "_this",
        "canvas",
        "_this2",
        "loop",
        "Audio",
        "texture",
        "_this2",
        "loop",
        "video"
    ],
    "comments": [
        "File:src/Three.js",
        "",
        "",
        "",
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign",
        "Missing in IE9-11.",
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name",
        "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign",
        "https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button",
        "GL STATE CONSTANTS",
        "SHADOWING TYPES",
        "MATERIAL CONSTANTS",
        "side",
        "shading",
        "colors",
        "blending modes",
        "custom blending equations",
        "(numbers start from 100 not to clash with other",
        "mappings to OpenGL constants defined in Texture.js)",
        "custom blending destination factors",
        "custom blending source factors",
        "THREE.ZeroFactor = 200;",
        "THREE.OneFactor = 201;",
        "THREE.SrcAlphaFactor = 204;",
        "THREE.OneMinusSrcAlphaFactor = 205;",
        "THREE.DstAlphaFactor = 206;",
        "THREE.OneMinusDstAlphaFactor = 207;",
        "depth modes",
        "TEXTURE CONSTANTS",
        "Tone Mapping modes",
        "do not do any tone mapping, not even exposure (required for special purpose passes.)",
        "only apply exposure.",
        "John Hable",
        "optimized filmic operator by Jim Hejl and Richard Burgess-Dawson",
        "Mapping modes",
        "Wrapping modes",
        "Filters",
        "Data types",
        "Pixel types",
        "THREE.UnsignedByteType = 1009;",
        "Pixel formats",
        "THREE.RGBEFormat handled as THREE.RGBAFormat in shaders",
        "1024;",
        "DDS / ST3C Compressed texture formats",
        "PVRTC compressed texture formats",
        "ETC compressed texture formats",
        "Loop styles for AnimationAction",
        "Interpolation",
        "Interpolant ending modes",
        "Triangle Draw modes",
        "Texture Encodings",
        "No encoding at all.",
        "uses GAMMA_FACTOR, for backwards compatibility with WebGLRenderer.gammaInput/gammaOutput",
        "The following Texture Encodings are for RGB-only (no alpha) HDR light emission sources.",
        "These encodings should not specified as output encodings except in rare situations.",
        "AKA Radiance.",
        "MaxRange is 256.",
        "File:src/math/Math.js",
        "http://www.broofa.com/Tools/Math.uuid.htm",
        "compute euclidian modulo of m % n",
        "https://en.wikipedia.org/wiki/Modulo_operation",
        "Linear mapping from range <a1, a2> to range <b1, b2>",
        "http://en.wikipedia.org/wiki/Smoothstep",
        "Random integer from <low, high> interval",
        "Random float from <low, high> interval",
        "Random float from <-range/2, range/2> interval",
        "File:src/math/Color.js",
        "h,s,l ranges are in 0.0 - 1.0",
        "rgb / hsl",
        "rgb(255,0,0) rgba(255,0,0,0.5)",
        "rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)",
        "hsl(120,50%,50%) hsla(120,50%,50%,0.5)",
        "hex color",
        "#ff0",
        "#ff0000",
        "color keywords",
        "red",
        "unknown color",
        "h,s,l ranges are in 0.0 - 1.0",
        "File:src/math/Vector2.js",
        "",
        "This function assumes min < max, if this assumption isn't true it will not operate correctly",
        "computes the angle in radians with respect to the positive x-axis",
        "File:src/math/Vector3.js",
        "input: THREE.Matrix4 affine matrix",
        "input: THREE.Matrix4 projection matrix",
        "perspective divide",
        "calculate quat * vector",
        "calculate result * inverse quat",
        "input: THREE.Matrix4 affine matrix",
        "vector interpreted as a direction",
        "This function assumes min < max, if this assumption isn't true it will not operate correctly",
        "reflect incident vector off plane orthogonal to normal",
        "normal is assumed to have unit length",
        "clamp, to handle numerical problems",
        "File:src/math/Vector4.js",
        "http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm",
        "q is assumed to be normalized",
        "http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm",
        "assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)",
        "variables for result",
        "margin to allow for rounding errors",
        "margin to distinguish between 0 and 180 degrees",
        "singularity found",
        "first check for identity matrix which must have +1 for all terms",
        "in leading diagonal and zero in other terms",
        "this singularity is identity matrix so angle = 0",
        "zero angle, arbitrary axis",
        "otherwise this singularity is angle = 180",
        "m11 is the largest diagonal term",
        "m22 is the largest diagonal term",
        "m33 is the largest diagonal term so base result on this",
        "return 180 deg rotation",
        "as we have reached here there are no singularities so we can handle normally",
        "used to normalize",
        "prevent divide by zero, should not happen if matrix is orthogonal and should be",
        "caught by singularity test above, but I've left it in just in case",
        "This function assumes min < max, if this assumption isn't true it will not operate correctly",
        "File:src/math/Matrix3.js",
        "File:src/math/Matrix4.js",
        "last column",
        "bottom row",
        "last column",
        "bottom row",
        "TODO: make this more efficient",
        "( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )",
        "based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm",
        "Based on http://www.gamedev.net/reference/articles/article1199.asp",
        "if determine is negative, we need to invert one scale",
        "scale the rotation part",
        "at this point matrix is incomplete so we can't use .copy()",
        "File:src/math/Plane.js",
        "must be this.normal, not normal, as this.normal is normalized",
        "Q: should an error be thrown if normal is zero (e.g. degenerate plane)?",
        "Note: will lead to a divide by zero if the plane is invalid.",
        "line is coplanar, return origin",
        "Unsure if this is the correct method to handle this case.",
        "Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.",
        "compute new normal based on theory here:",
        "http://www.songho.ca/opengl/gl_normaltransform.html",
        "File:src/math/Quaternion.js",
        "http://www.mathworks.com/matlabcentral/fileexchange/",
        "20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/",
        "content/SpinCalc.m",
        "http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm",
        "assumes axis is normalized",
        "http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm",
        "assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)",
        "http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final",
        "assumes direction vectors vFrom and vTo are normalized",
        "from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm",
        "http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/",
        "fuzz-free, array-based Quaternion SLERP operation",
        "Skip the Slerp for tiny steps to avoid numeric problems:",
        "Normalize in case we just did a lerp:",
        "File:src/math/Triangle.js",
        "static/instance method to calculate barycentric coordinates",
        "based on: http://www.blackpawn.com/texts/pointinpoly/default.html",
        "collinear or singular triangle",
        "arbitrary location outside of triangle?",
        "not sure if this is the best idea, maybe should be returning undefined",
        "barycentric coordinates must always sum to 1",
        "File:src/math/Box3.js",
        "Computes the world-axis-aligned bounding box of an object (including its children),",
        "accounting for both the object's, and children's, world transforms",
        "this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes",
        "This can potentially have a divide by zero if the box",
        "has a size dimension of 0.",
        "using 6 splitting planes to rule out intersections.",
        "Find the point on the AABB closest to the sphere center.",
        "If that point is inside the sphere, the AABB and sphere intersect.",
        "We compute the minimum and maximum dot product values. If those values",
        "are on the same side (back or front) of the plane, then there is no intersection.",
        "NOTE: I am using a binary pattern to specify all 2^3 combinations below",
        "000",
        "001",
        "010",
        "011",
        "100",
        "101",
        "110",
        "111",
        "File:src/math/Euler.js",
        "assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)",
        "WARNING: this discards revolution information -bhouston",
        "File:src/math/Ray.js",
        "point behind the ray",
        "from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp",
        "It returns the min distance between the ray and the segment",
        "defined by v0 and v1",
        "It can also set two optional targets :",
        "- The closest point on the ray",
        "- The closest point on the segment",
        "The ray and segment are not parallel.",
        "region 0",
        "Minimum at interior points of ray and segment.",
        "region 1",
        "region 5",
        "region 4",
        "region 3",
        "region 2",
        "Ray and segment are parallel.",
        "t0 = first intersect point - entrance on front of sphere",
        "t1 = second intersect point - exit point on back of sphere",
        "test to see if both t0 and t1 are behind the ray - if so, return null",
        "test to see if t0 is behind the ray:",
        "if it is, the ray is inside the sphere, so return the second exit point scaled by t1,",
        "in order to always return an intersect point that is in front of the ray.",
        "else t0 is in front of the ray, so return the first collision point scaled by t0",
        "line is coplanar, return origin",
        "Null is preferable to undefined since undefined means.... it is undefined",
        "Return if the ray never intersects the plane",
        "check if the ray lies on the plane first",
        "ray origin is behind the plane (and is pointing behind it)",
        "These lines also handle the case where tmin or tmax is NaN",
        "(result of 0 * Infinity). x !== x returns true if x is NaN",
        "return point closest to the ray (positive side)",
        "Compute the offset origin, edges, and normal.",
        "from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp",
        "Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,",
        "E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by",
        "|Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))",
        "|Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))",
        "|Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)",
        "b1 < 0, no intersection",
        "b2 < 0, no intersection",
        "b1+b2 > 1, no intersection",
        "Line intersects triangle, check if ray does.",
        "t < 0, no intersection",
        "Ray intersects triangle.",
        "File:src/math/Sphere.js",
        "We use the following equation to compute the signed distance from",
        "the center of the sphere to the plane.",
        "",
        "distance = q * n - d",
        "",
        "If this distance is greater than the radius of the sphere,",
        "then there is no intersection.",
        "File:src/math/Frustum.js",
        "if both outside plane, no intersection",
        "File:src/core/EventDispatcher.js",
        "File:src/core/Layers.js",
        "File:src/core/Object3D.js",
        "assumes axis is normalized",
        "assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)",
        "assumes q is normalized",
        "rotate object on axis in object space",
        "axis is assumed to be normalized",
        "translate object by distance along axis in object space",
        "axis is assumed to be normalized",
        "This routine does not support objects with rotated and/or translated parent(s)",
        "update children",
        "meta is a hash used to collect geometries, materials.",
        "not providing it implies that this is the root object",
        "being serialized.",
        "initialize meta obj",
        "standard Object3D serialization",
        "",
        "",
        "extract data from the cache hash",
        "remove metadata on each item",
        "and return as array",
        "File:src/core/Face3.js",
        "File:src/core/BufferAttribute.js",
        "",
        "Deprecated",
        "File:src/core/InstancedBufferAttribute.js",
        "File:src/core/BufferGeometry.js",
        "rotate geometry around world x-axis",
        "rotate geometry around world y-axis",
        "rotate geometry around world z-axis",
        "translate geometry",
        "scale geometry",
        "console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );",
        "groups",
        "morphs",
        "skinning",
        "",
        "hoping to find a boundingSphere with a radius smaller than the",
        "boundingSphere of the boundingBox: sqrt(3) smaller in the best case",
        "backwards compatibility",
        "reset existing normals to zero",
        "indexed elements",
        "non-indexed elements (unconnected triangle soup)",
        "standard BufferGeometry serialization",
        "// Handle primitives\n\n\t\tvar parameters = this.parameters;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tvalues.push( parameters[ key ] );\n\n\t\t\t}\n\n\t\t\tvar geometry = Object.create( this.constructor.prototype );\n\t\t\tthis.constructor.apply( geometry, values );\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\treturn new this.constructor().copy( this );",
        "File:src/core/InterleavedBufferAttribute.js",
        "File:src/core/InstancedBufferGeometry.js",
        "File:src/core/Geometry.js",
        "update flags",
        "rotate geometry around world x-axis",
        "rotate geometry around world y-axis",
        "rotate geometry around world z-axis",
        "translate geometry",
        "scale geometry",
        "vertex normals weighted by triangle areas",
        "http://www.iquilezles.org/www/articles/normals/normals.htm",
        "save original normals",
        "- create temp variables on first access",
        "otherwise just copy (for faster repeated calls)",
        "use temp geometry to compute face and vertex normals for each morph",
        "create on first access",
        "set vertices to morph target",
        "compute morph normals",
        "store morph normals",
        "restore original normals",
        "vertices",
        "faces",
        "uvs",
        "Hashmap for looking up vertices by position coordinates (and making sure they are unique)",
        "number of decimal points, e.g. 4 for epsilon of 0.0001",
        "console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);",
        "if faces are completely degenerate after merging vertices, we",
        "have to remove them from the geometry.",
        "if any duplicate vertices are found in a Face3",
        "we have to remove the face as nothing can be saved",
        "Use unique set of vertices",
        "tag faces",
        "sort faces",
        "sort uvs",
        "standard Geometry serialization",
        "deprecated",
        "isQuad",
        "temporal backward compatibility",
        "// Handle primitives\n\n\t\tvar parameters = this.parameters;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tvalues.push( parameters[ key ] );\n\n\t\t\t}\n\n\t\t\tvar geometry = Object.create( this.constructor.prototype );\n\t\t\tthis.constructor.apply( geometry, values );\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\treturn new this.constructor().copy( this );",
        "File:src/core/DirectGeometry.js",
        "this.lineDistances = [];",
        "update flags",
        "materials",
        "morphs",
        "skins",
        "",
        "morphs",
        "skins",
        "File:src/cameras/Camera.js",
        "This routine does not support cameras with rotated and/or translated parent(s)",
        "File:src/cameras/PerspectiveCamera.js",
        "File:src/lights/Light.js",
        "File:src/scenes/Scene.js",
        "checked by the renderer",
        "File:src/scenes/FogExp2.js",
        "File:src/extras/objects/ImmediateRenderObject.js",
        "File:src/extras/geometries/SphereBufferGeometry.js",
        "File:src/extras/geometries/SphereGeometry.js",
        "File:src/materials/Material.js",
        "override the renderer's default precision for this material",
        "Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer",
        "ensure overdraw is backwards-compatible with legacy boolean type",
        "standard Material serialization",
        "Scale behind envMap",
        "TODO: Copied from Object3D.toJSON",
        "File:src/materials/LineBasicMaterial.js",
        "File:src/materials/LineDashedMaterial.js",
        "File:src/materials/PointsMaterial.js",
        "File:src/materials/MeshDepthMaterial.js",
        "File:src/materials/MeshNormalMaterial.js",
        "File:src/materials/ShaderMaterial.js",
        "set to use scene fog",
        "set to use scene lights",
        "set to use \"color\" attribute stream",
        "set to use skinning attribute streams",
        "set to use morph targets",
        "set to use morph normals",
        "set to use derivatives",
        "set to use fragment depth values",
        "set to use draw buffers",
        "set to use shader texture LOD",
        "When rendered geometry doesn't include these attributes but the material does,",
        "use these default values in WebGL. This avoids errors when buffer data is missing.",
        "File:src/materials/MeshBasicMaterial.js",
        "emissive",
        "File:src/materials/MeshLambertMaterial.js",
        "diffuse",
        "File:src/materials/MeshStandardMaterial.js",
        "diffuse",
        "File:src/materials/MeshPhongMaterial.js",
        "diffuse",
        "File:src/materials/MultiMaterial.js",
        "File:src/materials/RawShaderMaterial.js",
        "File:src/textures/Texture.js",
        "valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)",
        "Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.",
        "",
        "Also changing the encoding after already used by a Material will not automatically make the Material",
        "update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.",
        "TODO: Move to THREE.Image",
        "UGH",
        "File:src/textures/DataTexture.js",
        "File:src/textures/CompressedTexture.js",
        "no flipping for cube textures",
        "(also flipping doesn't work for compressed textures )",
        "can't generate mipmaps for compressed textures",
        "mips must be embedded in DDS files",
        "File:src/textures/CubeTexture.js",
        "File:src/textures/VideoTexture.js",
        "File:src/objects/Sprite.js",
        "Backwards compatibility",
        "File:src/objects/LensFlare.js",
        "THREE.Texture",
        "size in pixels (-1 = use texture.width)",
        "distance (0-1) from light source (0=at light source)",
        "screen position (-1 => 1) z = 0 is in front z = 1 is back",
        "scale",
        "rotation",
        "opacity",
        "color",
        "blending",
        "File:src/objects/Line.js",
        "Checking boundingSphere distance to ray",
        "",
        "Move back to world space for distance calculation",
        "What do we want? intersection point on the ray or on the segment??",
        "point: raycaster.ray.at( distance ),",
        "Move back to world space for distance calculation",
        "What do we want? intersection point on the ray or on the segment??",
        "point: raycaster.ray.at( distance ),",
        "Move back to world space for distance calculation",
        "What do we want? intersection point on the ray or on the segment??",
        "point: raycaster.ray.at( distance ),",
        "DEPRECATED",
        "File:src/objects/LineSegments.js",
        "File:src/objects/Mesh.js",
        "Checking boundingSphere distance to ray",
        "",
        "Check boundingBox before continuing",
        "triangle number in indices buffer semantics",
        "triangle number in positions buffer semantics",
        "File:src/objects/SkinnedMesh.js",
        "init bones",
        "TODO: remove bone creation as there is no reason (other than",
        "convenience) for THREE.SkinnedMesh to do this.",
        "do something reasonable",
        "do something reasonable",
        "File:src/objects/Points.js",
        "Checking boundingSphere distance to ray",
        "",
        "File:src/lights/Light.js",
        "File:src/renderers/shaders/ShaderChunk.js",
        "File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/color_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/color_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/common.glsl",
        "File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/encodings_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/map_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/project_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl",
        "File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl",
        "File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl",
        "File:src/renderers/shaders/ShaderLib/meshbasic_frag.glsl",
        "File:src/renderers/shaders/ShaderLib/meshbasic_vert.glsl",
        "File:src/renderers/shaders/UniformsUtils.js",
        "File:src/renderers/shaders/UniformsLib.js",
        "File:src/renderers/shaders/ShaderLib.js",
        "temporary",
        "-------------------------------------------------------------------------\n\t//\tCube map shader\n\t -------------------------------------------------------------------------",
        "-------------------------------------------------------------------------\n\t//\tCube map shader\n\t -------------------------------------------------------------------------",
        "Depth encoding into RGBA texture\n\t *\n\t * based on SpiderGL shadow map example\n\t * http://spidergl.org/example.php?id=6\n\t *\n\t * originally from\n\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\n\t *\n\t * see also\n\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/",
        "File:src/renderers/WebGLRenderer.js",
        "public properties",
        "clearing",
        "scene graph",
        "physically based shading",
        "for backwards compatibility",
        "physical lights",
        "tone mapping",
        "morphs",
        "flags",
        "internal properties",
        "internal state cache",
        "",
        "",
        "frustum",
        "camera matrices cache",
        "light arrays cache",
        "info",
        "initialize",
        "Some experimental-webgl implementations do not have getShaderPrecisionFormat",
        "",
        "shadow map",
        "Plugins",
        "API",
        "Clearing",
        "Reset",
        "Events",
        "Buffer deallocation",
        "cube texture",
        "2D texture",
        "remove all webgl properties",
        "Buffer rendering",
        "morph targets",
        "",
        "",
        "",
        "Not using Line*Material",
        "4 bytes per Float32",
        "Sorting",
        "Rendering",
        "reset caching for this frame",
        "update scene graph",
        "update camera matrices and frustum",
        "",
        "",
        "",
        "opaque pass (front-to-back order)",
        "transparent pass (back-to-front order)",
        "custom render plugins (post pass)",
        "Generate mipmap if we're using any kind of mipmap filtering",
        "Ensure depth buffer writing is enabled so it can be cleared on next render",
        "_gl.finish();",
        "allocate the next position in the appropriate array",
        "recycle existing render item or grow the array",
        "assert( index === array.length );",
        "new material",
        "changed glsl or parameters",
        "same glsl and uniform list",
        "only rebuild uniform list",
        "store the light setup it was created for",
        "wire up the material to this renderer's lighting state",
        "detect dynamic uniforms",
        "lighting uniforms depend on the camera so enforce an update",
        "now, in case this material supports lights - or later, when",
        "the next material that does gets activated:",
        "set to true on material change",
        "remains set until update done",
        "load material specific uniforms",
        "(shader material also gets them for the sake of genericity)",
        "skinning uniforms must be set even if material didn't change",
        "auto-setting of texture unit for bone texture must go before other textures",
        "not sure why, but otherwise weird things happen",
        "the current material requires lighting info",
        "note: all lighting uniforms are always set correctly",
        "they simply reference the renderer's state for their",
        "values",
        "",
        "use the current material's .needsUpdate flags to set",
        "the GL state when required",
        "refresh uniforms common to several materials",
        "refresh single material specific uniforms",
        "load common uniforms",
        "Uniforms (refresh uniforms objects)",
        "uv repeat and offset setting priorities",
        "1. color map",
        "2. specular map",
        "3. normal map",
        "4. bump map",
        "5. alpha map",
        "6. emissive map",
        "TODO: Cache this.",
        "to prevent pow( 0.0, 0.0 )",
        "uniforms.envMap.value = material.envMap; // part of uniforms common",
        "If uniforms are marked as clean, they don't need to be loaded to the GPU.",
        "Uniforms (load to GPU)",
        "",
        "single integer",
        "single float",
        "single THREE.Vector2",
        "single THREE.Vector3",
        "single THREE.Vector4",
        "single THREE.Color",
        "TODO: Optimize this",
        "TODO: Optimize this",
        "flat array of integers (JS or typed array)",
        "flat array of integers with 3 x N size (JS or typed array)",
        "flat array of floats (JS or typed array)",
        "flat array of floats with 3 x N size (JS or typed array)",
        "array of THREE.Vector2",
        "array of THREE.Vector3",
        "array of THREE.Vector4",
        "single THREE.Matrix2",
        "single THREE.Matrix3",
        "array of THREE.Matrix3",
        "single THREE.Matrix4",
        "array of THREE.Matrix4",
        "single THREE.Texture (2d or cube)",
        "CompressedTexture can have Array in image :/",
        "array of THREE.Texture (2d or cube)",
        "CompressedTexture can have Array in image :/",
        "needsUpdate property is not added to all uniforms.",
        "for point lights we set the shadow matrix to be a translation-only matrix",
        "equal to inverse of the light's position",
        "GL state setting",
        "Textures",
        "use manually created mipmaps if available",
        "if there are no manual mipmaps",
        "set 0 level mipmap and then use GL to generate other mipmap levels",
        "regular Texture (image, video, canvas)",
        "use manually created mipmaps if available",
        "if there are no manual mipmaps",
        "set 0 level mipmap and then use GL to generate other mipmap levels",
        "Warning: Scaling through the canvas will only work with images that use",
        "premultiplied alpha.",
        "Render targets",
        "Setup storage for target texture and bind it to correct framebuffer",
        "Setup storage for internal depth/stencil buffers and bind to correct framebuffer",
        "FIXME: We don't support !depth !stencil",
        "Setup GL resources for a non-texture depth buffer",
        "Set up GL resources for the render target",
        "Setup framebuffer",
        "Setup color buffer",
        "Setup depth and stencil buffers",
        "Fallback filters for non-power-of-2 textures",
        "Map three.js constants to WebGL constants",
        "File:src/renderers/webgl/WebGLExtensions.js",
        "File:src/renderers/webgl/WebGLCapabilities.js",
        "File:src/renderers/webgl/WebGLProperties.js",
        "File:src/renderers/webgl/WebGLLights.js",
        "File:src/renderers/webgl/WebGLState.js",
        "TODO: Rename to setDepthMask",
        "TODO: Rename to setColorMask",
        "TODO: Rename to setStencilMask",
        "texture",
        "clear values",
        "",
        "",
        "File:src/renderers/webgl/WebGLGeometries.js",
        "TODO",
        "",
        "File:src/renderers/webgl/WebGLBufferRenderer.js",
        "File:src/renderers/webgl/WebGLIndexedBufferRenderer.js",
        "File:src/renderers/webgl/WebGLShader.js",
        "--enable-privileged-webgl-extension",
        "console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );",
        "File:src/renderers/webgl/WebGLShadowMap.js",
        "init",
        "",
        "Set GL state for depth map.",
        "render depth map",
        "These viewports map a cube-map onto a 2D texture with the",
        "following orientation:",
        "",
        "xzXZ",
        "y Y",
        "",
        "X - Positive x direction",
        "x - Negative x direction",
        "Y - Positive y direction",
        "y - Negative y direction",
        "Z - Positive z direction",
        "z - Negative z direction",
        "positive X",
        "negative X",
        "positive Z",
        "negative Z",
        "positive Y",
        "negative Y",
        "",
        "render shadow map for each cube face (if omni-directional) or",
        "run a single pass if not",
        "compute shadow matrix",
        "update camera matrices and frustum",
        "set object matrices & frustum culling",
        "render shadow map",
        "render regular objects",
        "Restore GL state.",
        "File:src/renderers/webgl/plugins/SpritePlugin.js",
        "decompose matrixWorld",
        "setup gl",
        "update positions and sort",
        "render all sprites",
        "restore gl",
        "File:src/renderers/webgl/plugins/LensFlarePlugin.js",
        "buffers",
        "textures",
        "pink square",
        "restore",
        "flare",
        "pink square",
        "restore",
        "flare",
        "loop through all lens flares to update their occlusion and positions",
        "setup gl and common used attribs/uniforms",
        "calc object screen position",
        "setup arrays for gl programs",
        "screen cull",
        "save current RGB to temp texture",
        "render pink quad",
        "copy result to occlusionMap",
        "restore graphics",
        "update object positions",
        "render flares",
        "restore gl",
        "File:src/renderers/webgl/WebGLObjects.js",
        "",
        "TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.",
        "morph targets",
        "Not using update ranges",
        "reset range",
        "console.time( 'wireframe' );",
        "console.timeEnd( 'wireframe' );",
        "File:src/renderers/webgl/WebGLProgram.js",
        "TODO: Combine the regex",
        "console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);",
        "console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );",
        "console.log( 'building new program ' );",
        "",
        "",
        "this code is required here because it is used by the toneMapping() function defined below",
        "this code is required here because it is used by the various encoding/decoding function defined below",
        "console.log( '*VERTEX*', vertexGlsl );",
        "console.log( '*FRAGMENT*', fragmentGlsl );",
        "Force a particular attribute to index 0.",
        "programs with morphTargets displace position out of attribute 0",
        "console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );",
        "console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );",
        "clean up",
        "set up caching for uniform locations",
        "set up caching for attribute locations",
        "free resource",
        "DEPRECATED",
        "",
        "File:src/renderers/WebGLRenderTarget.js",
        "In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers",
        "File:src/renderers/WebGLRenderTargetCube.js",
        "PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5",
        "File:src/renderers/webgl/WebGLPrograms.js",
        "default for when object is not specified",
        "( for example when prebuilding shader to be used with multiple objects )",
        "",
        "- leave some extra space for other uniforms",
        "- limit here is ANGLE's 254 max uniform vectors",
        "(up to 54 should be safe)",
        "add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.",
        "heuristics to create shader parameters according to lights in the scene",
        "(not to blow over maxLights budget)",
        "Check if code has been already compiled",
        "Remove from unordered set",
        "Free WebGL resources",
        "Exposed for resource monitoring & error feedback via renderer.info:",
        "Prevent looking too far up or down.",
        "TODO: we can pass all this info through the constructor",
        "TODO: we can pass all this info through the constructor"
    ],
    "docstrings": [
        "* @author mrdoob / http://mrdoob.com/",
        "* @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog",
        "* @author mrdoob / http://mrdoob.com/\n * @author *kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley",
        "* @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley",
        "* @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw",
        "* @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley",
        "* @author bhouston / http://clara.io",
        "* @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io",
        "* @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/",
        "* @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley",
        "* @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io",
        "* @author bhouston / http://clara.io",
        "* @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io",
        "* https://github.com/mrdoob/eventdispatcher.js/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch",
        "* @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author benaadams / https://twitter.com/ben_a_adams",
        "* @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/",
        "* @author benaadams / https://twitter.com/ben_a_adams",
        "* @author benaadams / https://twitter.com/ben_a_adams",
        "* @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io",
        "* Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley",
        "* @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog",
        "* Uses Focal Length (in mm) to estimate and set FOV\n * 35mm (full-frame) camera is used if frame size is not specified;\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html",
        "* Sets an offset in a larger frustum. This is useful for multi-window or\n * multi-monitor/multi-machine setups.\n *\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n * the monitors are in grid like this\n *\n *   +---+---+---+\n *   | A | B | C |\n *   +---+---+---+\n *   | D | E | F |\n *   +---+---+---+\n *\n * then for each monitor you would call it like this\n *\n *   var w = 1920;\n *   var h = 1080;\n *   var fullWidth = w * 3;\n *   var fullHeight = h * 2;\n *\n *   --A--\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n *   --B--\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n *   --C--\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n *   --D--\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n *   --E--\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n *   --F--\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n *\n *   Note there is no reason monitors have to be the same size or in a grid.",
        "* @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/",
        "* @author alteredq / http://alteredqualia.com/",
        "* @author benaadams / https://twitter.com/ben_a_adams\n * based on THREE.SphereGeometry",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/",
        "* @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\",\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  vertexColors: <bool>\n *\n *  fog: <bool>\n * }",
        "* @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  vertexColors: THREE.NoColors / THREE.FaceColors / THREE.VertexColors\n *\n *  fog: <bool>\n * }",
        "* @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  vertexColors: <bool>,\n *\n *  fog: <bool>\n * }",
        "* @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }",
        "* @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }",
        "* @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  shading: THREE.SmoothShading,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *\tfog: <bool>\n * }",
        "* @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  fog: <bool>\n * }",
        "* @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *\tfog: <bool>\n * }",
        "* @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *\tfog: <bool>\n * }",
        "* @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  shading: THREE.SmoothShading,\n *  blending: THREE.NormalBlending,\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *\tfog: <bool>\n * }",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/",
        "* @author alteredq / http://alteredqualia.com/",
        "* @author alteredq / http://alteredqualia.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/",
        "* @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/",
        "* Add: adds another flare",
        "* Update lens flares update positions on all flares based on the screen position\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/",
        "* @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com",
        "* @author alteredq / http://alteredqualia.com/",
        "* @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/",
        "* Uniform Utilities",
        "* Uniforms library for shared webgl shaders",
        "* Webgl Shader Library for three.js\n *\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/",
        "* @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author fordacious / fordacious.github.io",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/",
        "* @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/",
        "* @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/",
        "* Render lens flares\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n\t *         reads these back and calculates occlusion.",
        "* @author mrdoob / http://mrdoob.com/",
        "* @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel",
        "* @author alteredq / http://alteredqualia.com"
    ],
    "functions": [
        "createCommonjsModule",
        "defineProperties",
        "hue2rgb",
        "handleAlpha",
        "width",
        "width",
        "height",
        "height",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "w",
        "w",
        "x",
        "x",
        "y",
        "y",
        "z",
        "z",
        "order",
        "order",
        "onRotationChange",
        "onQuaternionChange",
        "extractFromCache",
        "count",
        "needsUpdate",
        "length",
        "count",
        "addFace",
        "materialIndexSort",
        "setBit",
        "getNormalIndex",
        "getColorIndex",
        "getUvIndex",
        "needsUpdate",
        "needsUpdate",
        "extractFromCache",
        "needsUpdate",
        "getDataURL",
        "update",
        "uvIntersection",
        "checkIntersection",
        "checkBufferGeometryIntersection",
        "testPoint",
        "getTargetPixelRatio",
        "glClearColor",
        "setDefaultGLState",
        "resetGLState",
        "onContextLost",
        "onTextureDispose",
        "onRenderTargetDispose",
        "onMaterialDispose",
        "deallocateTexture",
        "deallocateRenderTarget",
        "deallocateMaterial",
        "releaseMaterialProgramReference",
        "setupVertexAttributes",
        "absNumericalSort",
        "painterSortStable",
        "reversePainterSortStable",
        "pushRenderItem",
        "projectObject",
        "renderObjects",
        "initMaterial",
        "setMaterial",
        "setMaterialFaces",
        "setProgram",
        "updateDynamicUniforms",
        "refreshUniformsCommon",
        "refreshUniformsLine",
        "refreshUniformsDash",
        "refreshUniformsPoints",
        "refreshUniformsFog",
        "refreshUniformsLambert",
        "refreshUniformsPhong",
        "refreshUniformsStandard",
        "markUniformsLightsNeedsUpdate",
        "loadUniformsMatrices",
        "getTextureUnit",
        "loadUniform",
        "loadUniformsGeneric",
        "setupLights",
        "setTextureParameters",
        "uploadTexture",
        "clampToMaxSize",
        "isPowerOfTwo",
        "textureNeedsPowerOfTwo",
        "makePowerOfTwo",
        "setCubeTexture",
        "setCubeTextureDynamic",
        "setupFrameBufferTexture",
        "setupRenderBufferStorage",
        "setupDepthRenderbuffer",
        "setupRenderTarget",
        "updateRenderTargetMipmap",
        "filterFallback",
        "paramThreeToGL",
        "getMaxPrecision",
        "get",
        "onGeometryDispose",
        "getAttributeBuffer",
        "deleteAttribute",
        "deleteAttributes",
        "removeAttributeBuffer",
        "setMode",
        "render",
        "renderInstances",
        "setMode",
        "setIndex",
        "render",
        "renderInstances",
        "addLineNumbers",
        "getDepthMaterial",
        "projectObject",
        "init",
        "createProgram",
        "painterSortStable",
        "init",
        "createProgram",
        "update",
        "updateAttribute",
        "createBuffer",
        "updateBuffer",
        "getAttributeBuffer",
        "getWireframeAttribute",
        "checkEdge",
        "getEncodingComponents",
        "getTexelDecodingFunction",
        "getTexelEncodingFunction",
        "getToneMappingFunction",
        "generateExtensions",
        "generateDefines",
        "fetchUniformLocations",
        "fetchAttributeLocations",
        "filterEmptyLine",
        "replaceLightNums",
        "parseIncludes",
        "replace",
        "unrollLoops",
        "replace",
        "allocateBones",
        "getTextureEncodingFromMap",
        "Renderer",
        "MouseControls",
        "ThreeSixtyViewer",
        "Video",
        "Image",
        "Canvas",
        "Audio"
    ],
    "classes": []
}