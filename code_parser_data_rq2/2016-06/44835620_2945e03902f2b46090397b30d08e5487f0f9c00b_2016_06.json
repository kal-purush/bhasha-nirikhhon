{
    "identifiers": [
        "nluas",
        "core_agent",
        "json",
        "six",
        "moves",
        "input",
        "message",
        "message",
        "CoreAgent",
        "args",
        "CoreAgent",
        "args",
        "format",
        "federation",
        "transport",
        "subscribe",
        "ui_destination",
        "callback",
        "format",
        "clarification",
        "input",
        "msg",
        "transport",
        "quit_federation",
        "quit",
        "msg",
        "msg",
        "clarification",
        "msg",
        "original",
        "msg",
        "json",
        "dumps",
        "ntuple",
        "transport",
        "send",
        "ui_destination",
        "json_ntuple",
        "ntuple",
        "json",
        "loads",
        "ntuple",
        "ntuple",
        "ntuple",
        "ntuple",
        "output_stream",
        "ntuple",
        "ntuple",
        "tag",
        "message",
        "format",
        "tag",
        "message",
        "TextAgent",
        "sys",
        "argv",
        "text",
        "prompt"
    ],
    "literals": [
        "\"{}_{}\"",
        "\"AgentUI\"",
        "\"Calling prompt....\"",
        "\"Clarification is: {}\"",
        "\"> \"",
        "\"q\"",
        "\"\"",
        "'text'",
        "'type'",
        "\"clarification\"",
        "'original'",
        "'text'",
        "'type'",
        "\"standard\"",
        "\"type\"",
        "'type'",
        "\"clarification\"",
        "'original'",
        "'tag'",
        "'message'",
        "\"{}: {}\"",
        "\"__main__\""
    ],
    "variables": [
        "message",
        "clarification",
        "ui_destination",
        "original",
        "msg",
        "ntuple",
        "clarification",
        "ntuple",
        "json_ntuple",
        "ntuple",
        "clarification",
        "original",
        "text"
    ],
    "comments": [
        "from nluas.language.spell_checker import *",
        "Makes this work with both py2 and py3",
        "if not self.clarification:"
    ],
    "docstrings": [
        "\"\"\"\nThe Text-Agent prompts a user for input, then sends the input to the UserAgent.\n\nInteraction TBD.\n\n\nAuthor: seantrott <seantrott@icsi.berkeley.edu>\n\n\n------\nSee LICENSE.txt for licensing information.\n------\n\n\"\"\"",
        "\"\"\" Callback for receiving information from UI-Agent. \"\"\"",
        "\"\"\"\n            while True:\n                print(\"++++++++++++++\")\n                msg = input(\"> \")\n                if msg == \"q\":\n                    self.clarification = False\n\n                    break\n                elif msg != None and msg != \"\":\n                    self.transport.send(self.ui_destination, json.dumps({'text': msg, 'type': 'clarification', 'original': ntuple['original']}))\n                    self.clarification = False\n            \"\"\""
    ],
    "functions": [
        "prompt",
        "callback",
        "output_stream"
    ],
    "classes": [
        "WaitingException",
        "TextAgent"
    ]
}