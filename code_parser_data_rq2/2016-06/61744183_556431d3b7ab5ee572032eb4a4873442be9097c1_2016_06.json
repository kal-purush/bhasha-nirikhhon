{
    "identifiers": [
        "java",
        "io",
        "BufferedReader",
        "java",
        "io",
        "FileInputStream",
        "java",
        "io",
        "java",
        "io",
        "InputStreamReader",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Scanner",
        "Color",
        "red",
        "black",
        "ID",
        "count",
        "left",
        "right",
        "parent",
        "color",
        "ID",
        "count",
        "left",
        "right",
        "parent",
        "color",
        "ID",
        "ID",
        "count",
        "count",
        "left",
        "left",
        "right",
        "right",
        "parent",
        "parent",
        "color",
        "color",
        "color",
        "Color",
        "black",
        "root",
        "filename",
        "RB_input",
        "nil",
        "numOfNodes",
        "fis",
        "filename",
        "br",
        "fis",
        "line",
        "br",
        "readLine",
        "numOfNodes",
        "valueOf",
        "line",
        "i",
        "line",
        "br",
        "readLine",
        "i",
        "numOfNodes",
        "s",
        "line",
        "split",
        "RB_input",
        "add",
        "valueOf",
        "s",
        "valueOf",
        "s",
        "nil",
        "nil",
        "nil",
        "Color",
        "black",
        "i",
        "br",
        "close",
        "e",
        "e",
        "printStackTrace",
        "root",
        "sortedListToRB",
        "RB_input",
        "size",
        "RB_input",
        "result",
        "bfs_traversal",
        "color_lowest_level",
        "result",
        "numOfNodes",
        "start",
        "end",
        "input",
        "start",
        "end",
        "input",
        "get",
        "start",
        "start",
        "end",
        "input",
        "get",
        "parent",
        "mid",
        "start",
        "end",
        "start",
        "root",
        "input",
        "get",
        "mid",
        "right",
        "sortedListToRB",
        "mid",
        "end",
        "input",
        "root",
        "right",
        "right",
        "right",
        "parent",
        "root",
        "left",
        "sortedListToRB",
        "start",
        "mid",
        "input",
        "root",
        "left",
        "left",
        "left",
        "parent",
        "root",
        "root",
        "result",
        "root",
        "result",
        "queue",
        "queue",
        "offer",
        "root",
        "queue",
        "isEmpty",
        "level",
        "size",
        "queue",
        "size",
        "i",
        "i",
        "size",
        "i",
        "head",
        "queue",
        "poll",
        "level",
        "add",
        "head",
        "head",
        "left",
        "queue",
        "offer",
        "head",
        "left",
        "head",
        "right",
        "queue",
        "offer",
        "head",
        "right",
        "result",
        "add",
        "level",
        "result",
        "result",
        "numOfNodes",
        "last_level",
        "result",
        "get",
        "result",
        "size",
        "i",
        "i",
        "last_level",
        "size",
        "i",
        "last_level",
        "get",
        "i",
        "ID",
        "last_level",
        "get",
        "i",
        "color",
        "Color",
        "red",
        "ID",
        "node",
        "Search",
        "ID",
        "root",
        "node",
        "count",
        "ID1",
        "ID2",
        "res",
        "helper",
        "root",
        "ID1",
        "ID2",
        "res",
        "total",
        "i",
        "i",
        "res",
        "size",
        "i",
        "total",
        "res",
        "get",
        "i",
        "total",
        "root",
        "k1",
        "k2",
        "res",
        "root",
        "root",
        "ID",
        "k1",
        "helper",
        "root",
        "left",
        "k1",
        "k2",
        "res",
        "root",
        "ID",
        "k1",
        "root",
        "ID",
        "k2",
        "res",
        "add",
        "root",
        "count",
        "root",
        "ID",
        "k2",
        "helper",
        "root",
        "right",
        "k1",
        "k2",
        "res",
        "root",
        "current",
        "root",
        "current",
        "left",
        "isNil",
        "current",
        "current",
        "left",
        "current",
        "root",
        "current",
        "root",
        "current",
        "right",
        "isNil",
        "current",
        "current",
        "right",
        "current",
        "ID",
        "current",
        "Search",
        "ID",
        "root",
        "current",
        "isNil",
        "tmp",
        "root",
        "last",
        "tmp",
        "tmp",
        "isNil",
        "last",
        "tmp",
        "ID",
        "tmp",
        "ID",
        "tmp",
        "tmp",
        "right",
        "tmp",
        "tmp",
        "left",
        "last",
        "ID",
        "ID",
        "last",
        "ID",
        "last",
        "count",
        "parent",
        "last",
        "parent",
        "parent",
        "isNil",
        "parent",
        "right",
        "last",
        "last",
        "parent",
        "parent",
        "parent",
        "parent",
        "parent",
        "ID",
        "parent",
        "count",
        "current",
        "right",
        "isNil",
        "min_node",
        "getMin",
        "current",
        "right",
        "min_node",
        "ID",
        "min_node",
        "count",
        "parent",
        "current",
        "parent",
        "parent",
        "isNil",
        "parent",
        "right",
        "current",
        "current",
        "parent",
        "parent",
        "parent",
        "parent",
        "parent",
        "ID",
        "parent",
        "count",
        "ID",
        "root",
        "root",
        "isNil",
        "root",
        "ID",
        "ID",
        "root",
        "root",
        "ID",
        "ID",
        "root",
        "root",
        "left",
        "root",
        "root",
        "right",
        "root",
        "ID",
        "current",
        "Search",
        "ID",
        "root",
        "current",
        "isNil",
        "tmp",
        "root",
        "last",
        "tmp",
        "isNil",
        "last",
        "tmp",
        "ID",
        "tmp",
        "ID",
        "tmp",
        "tmp",
        "right",
        "tmp",
        "tmp",
        "left",
        "last",
        "ID",
        "ID",
        "last",
        "ID",
        "last",
        "count",
        "parent",
        "last",
        "child",
        "tmp",
        "parent",
        "isNil",
        "parent",
        "left",
        "child",
        "child",
        "parent",
        "parent",
        "parent",
        "parent",
        "parent",
        "ID",
        "parent",
        "count",
        "current",
        "left",
        "isNil",
        "max_node",
        "getMax",
        "current",
        "left",
        "max_node",
        "ID",
        "max_node",
        "count",
        "parent",
        "current",
        "parent",
        "parent",
        "isNil",
        "parent",
        "left",
        "current",
        "current",
        "parent",
        "parent",
        "parent",
        "parent",
        "parent",
        "ID",
        "parent",
        "count",
        "ID",
        "tmp",
        "root",
        "last",
        "tmp",
        "tmp",
        "isNil",
        "last",
        "tmp",
        "ID",
        "tmp",
        "ID",
        "tmp",
        "tmp",
        "right",
        "tmp",
        "tmp",
        "left",
        "nil",
        "z",
        "ID",
        "nil",
        "nil",
        "nil",
        "Color",
        "red",
        "z",
        "parent",
        "last",
        "last",
        "isNil",
        "root",
        "z",
        "last",
        "ID",
        "ID",
        "last",
        "left",
        "z",
        "last",
        "right",
        "z",
        "z",
        "ID",
        "m",
        "node",
        "Search",
        "ID",
        "root",
        "node",
        "isNil",
        "node",
        "count",
        "m",
        "node",
        "count",
        "node",
        "Insert",
        "ID",
        "node",
        "count",
        "m",
        "node",
        "count",
        "RB_insert_fixup",
        "node",
        "x",
        "y",
        "x",
        "right",
        "x",
        "right",
        "y",
        "left",
        "y",
        "left",
        "isNil",
        "y",
        "left",
        "parent",
        "x",
        "x",
        "parent",
        "isNil",
        "root",
        "y",
        "y",
        "parent",
        "x",
        "parent",
        "x",
        "x",
        "parent",
        "left",
        "x",
        "parent",
        "left",
        "y",
        "y",
        "parent",
        "x",
        "parent",
        "x",
        "parent",
        "right",
        "y",
        "y",
        "parent",
        "x",
        "parent",
        "y",
        "left",
        "x",
        "x",
        "parent",
        "y",
        "y",
        "x",
        "y",
        "left",
        "y",
        "left",
        "x",
        "right",
        "x",
        "right",
        "isNil",
        "x",
        "right",
        "parent",
        "y",
        "y",
        "parent",
        "isNil",
        "root",
        "x",
        "x",
        "parent",
        "y",
        "parent",
        "y",
        "y",
        "parent",
        "left",
        "y",
        "parent",
        "left",
        "x",
        "x",
        "parent",
        "y",
        "parent",
        "y",
        "parent",
        "right",
        "x",
        "x",
        "parent",
        "y",
        "parent",
        "x",
        "right",
        "y",
        "y",
        "parent",
        "x",
        "node",
        "node",
        "parent",
        "color",
        "Color",
        "red",
        "node",
        "parent",
        "node",
        "parent",
        "parent",
        "left",
        "uncle",
        "node",
        "parent",
        "parent",
        "right",
        "uncle",
        "color",
        "Color",
        "red",
        "node",
        "parent",
        "color",
        "Color",
        "black",
        "uncle",
        "color",
        "Color",
        "black",
        "node",
        "parent",
        "parent",
        "color",
        "Color",
        "red",
        "node",
        "node",
        "parent",
        "parent",
        "node",
        "node",
        "parent",
        "right",
        "node",
        "node",
        "parent",
        "leftRotate",
        "node",
        "node",
        "parent",
        "color",
        "Color",
        "black",
        "node",
        "parent",
        "parent",
        "color",
        "Color",
        "red",
        "rightRotate",
        "node",
        "parent",
        "parent",
        "uncle",
        "node",
        "parent",
        "parent",
        "left",
        "uncle",
        "color",
        "Color",
        "red",
        "node",
        "parent",
        "color",
        "Color",
        "black",
        "uncle",
        "color",
        "Color",
        "black",
        "node",
        "parent",
        "parent",
        "color",
        "Color",
        "red",
        "node",
        "node",
        "parent",
        "parent",
        "node",
        "node",
        "parent",
        "left",
        "node",
        "node",
        "parent",
        "rightRotate",
        "node",
        "node",
        "parent",
        "color",
        "Color",
        "black",
        "node",
        "parent",
        "parent",
        "color",
        "Color",
        "red",
        "leftRotate",
        "node",
        "parent",
        "parent",
        "root",
        "color",
        "Color",
        "black",
        "u",
        "v",
        "u",
        "parent",
        "isNil",
        "root",
        "v",
        "u",
        "u",
        "parent",
        "left",
        "u",
        "parent",
        "left",
        "v",
        "u",
        "parent",
        "right",
        "v",
        "v",
        "parent",
        "u",
        "parent",
        "z",
        "y",
        "z",
        "copy_y",
        "y",
        "x",
        "copy_y",
        "color",
        "y",
        "color",
        "z",
        "left",
        "isNil",
        "x",
        "z",
        "right",
        "transplant_RB",
        "z",
        "z",
        "right",
        "z",
        "right",
        "isNil",
        "x",
        "z",
        "left",
        "transplant_RB",
        "z",
        "z",
        "left",
        "y",
        "getMin",
        "z",
        "right",
        "x",
        "y",
        "right",
        "copy_y",
        "color",
        "y",
        "color",
        "transplant_RB",
        "y",
        "y",
        "right",
        "transplant_RB",
        "z",
        "y",
        "y",
        "left",
        "z",
        "left",
        "y",
        "left",
        "parent",
        "y",
        "y",
        "right",
        "z",
        "right",
        "y",
        "right",
        "parent",
        "y",
        "y",
        "color",
        "z",
        "color",
        "copy_y",
        "color",
        "Color",
        "black",
        "Delete_RB_fixup",
        "x",
        "x",
        "x",
        "root",
        "x",
        "color",
        "Color",
        "black",
        "x",
        "x",
        "parent",
        "left",
        "w",
        "x",
        "parent",
        "right",
        "w",
        "color",
        "Color",
        "red",
        "w",
        "color",
        "Color",
        "black",
        "x",
        "parent",
        "color",
        "Color",
        "red",
        "leftRotate",
        "x",
        "parent",
        "w",
        "x",
        "parent",
        "right",
        "w",
        "left",
        "color",
        "Color",
        "black",
        "w",
        "right",
        "color",
        "Color",
        "black",
        "w",
        "color",
        "Color",
        "red",
        "x",
        "x",
        "parent",
        "w",
        "right",
        "color",
        "Color",
        "black",
        "w",
        "left",
        "color",
        "Color",
        "black",
        "w",
        "color",
        "Color",
        "red",
        "rightRotate",
        "w",
        "w",
        "x",
        "parent",
        "right",
        "w",
        "color",
        "x",
        "parent",
        "color",
        "x",
        "parent",
        "color",
        "Color",
        "black",
        "w",
        "right",
        "color",
        "Color",
        "black",
        "leftRotate",
        "x",
        "parent",
        "x",
        "root",
        "x",
        "x",
        "parent",
        "right",
        "w",
        "x",
        "parent",
        "left",
        "w",
        "color",
        "Color",
        "red",
        "w",
        "color",
        "Color",
        "black",
        "x",
        "parent",
        "color",
        "Color",
        "red",
        "rightRotate",
        "x",
        "parent",
        "w",
        "x",
        "parent",
        "left",
        "w",
        "left",
        "color",
        "Color",
        "black",
        "w",
        "right",
        "color",
        "Color",
        "black",
        "w",
        "color",
        "Color",
        "red",
        "x",
        "x",
        "parent",
        "w",
        "left",
        "color",
        "Color",
        "black",
        "w",
        "right",
        "color",
        "Color",
        "black",
        "w",
        "color",
        "Color",
        "red",
        "leftRotate",
        "w",
        "w",
        "x",
        "parent",
        "left",
        "w",
        "color",
        "x",
        "parent",
        "color",
        "x",
        "parent",
        "color",
        "Color",
        "black",
        "w",
        "left",
        "color",
        "Color",
        "black",
        "rightRotate",
        "x",
        "parent",
        "x",
        "root",
        "x",
        "color",
        "Color",
        "black",
        "ID",
        "m",
        "node",
        "Search",
        "ID",
        "root",
        "node",
        "isNil",
        "node",
        "count",
        "m",
        "Delete_RB",
        "node",
        "node",
        "count",
        "m",
        "node",
        "count",
        "args",
        "RB",
        "RB",
        "createTree",
        "args",
        "command",
        "hasNext",
        "command",
        "nextLine",
        "s",
        "command",
        "split",
        "s",
        "equals",
        "s",
        "equals",
        "RB",
        "increase",
        "parseInt",
        "s",
        "parseInt",
        "s",
        "s",
        "equals",
        "RB",
        "reduce",
        "parseInt",
        "s",
        "parseInt",
        "s",
        "s",
        "equals",
        "RB",
        "count",
        "parseInt",
        "s",
        "s",
        "equals",
        "RB",
        "inrange",
        "parseInt",
        "s",
        "parseInt",
        "s",
        "s",
        "equals",
        "RB",
        "next",
        "parseInt",
        "s",
        "s",
        "equals",
        "RB",
        "previous",
        "parseInt",
        "s"
    ],
    "literals": [
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"0\"",
        "\"0\"",
        "\"\"",
        "\" \"",
        "\"quit\"",
        "\"increase\"",
        "\"reduce\"",
        "\"count\"",
        "\"inrange\"",
        "\"next\"",
        "\"previous\""
    ],
    "variables": [
        "ID",
        "count",
        "left",
        "right",
        "parent",
        "color",
        "root",
        "x"
    ],
    "comments": [
        "define two colors, red and black",
        "define a class including all properties of red black tree and set isNil()function to be false",
        "TODO Auto-generated constructor stub",
        "read input file and put all nodes into an arraylist, initially all nodes are colored black;",
        "TODO Auto-generated catch block",
        "convert arraylist to a binary search tree with all internal nodes colored black;",
        "using bfs traversal and save all nodes in an arraylist in order to find the lowest layer",
        "extract the lowest layer nodes in arraylist and colored them red; this way we build a red-black tree",
        "find the Count of certain ID, if exsits, print the count of the node, otherwise print 0;",
        "print the total count of IDs between ID1 and ID2;",
        "this is a helper function to find nodes in range in recursive\tway",
        "find min",
        "find max",
        "search a node, if exsits, return the node, otherwise return null;",
        "given a node, print the previous node's ID and count, if its previous node doesn't exsit, print\"0,0\";",
        "Case1: the given node doesn't exist in red black tree",
        "if the last node's ID is smaller than the node, it's the previous",
        "otherwise find the first ancestor where the node lies in the right subtree of it",
        "Case2:  the node exists in tree",
        "if the node has left subtree, return the maximum node in left subtree",
        "if the node doesn't have left subtree, find the first ancestor where the node lies in its right subtree",
        "given a node, if it doesn't exist, insert it",
        "given a node, if it's present, increase its count by m, otherwise, call the inser function to insert the node;",
        "left rotate of a given node;",
        "right rotate of a given node;",
        "fix up the red black tree to satisfy the properties after insertion",
        "node's parent is the left child",
        "case1: node's uncle is red",
        "case2: node's uncle is black and is right chile",
        "case3: node's uncle is black and is left child",
        "node's parent is right child",
        "replace the given node u with node v;",
        "After deletion, do the fixup to satisfy the property of red black tree",
        "x is left child",
        "Case1: x’s sibling w is red",
        "Case 2: x’s sibling w is black, and both of w’s children are black",
        "Case 3: x’s sibling w is black,",
        "w’s left child is red, and w’s right child is black",
        "Case 4: x’s sibling w is black, and w’s right child is red",
        "x is right child"
    ],
    "docstrings": [
        "efine a class indicating nil nodes \nwhich inheritate all properties of internal nodes but set isNill() function to true",
        "rint the ID and the count of the event with the lowest ID that is greater that theID.\n\tPrint “0 0”, if there is no next ID.",
        "if the given node's count is less or equal to 0 after decreased by m, delete it.\n\tThis function is for node's deletion",
        "f the given node is present, decrease the node's count by m, if the count is less than 0 after deletion,\n\tcall the delete function"
    ],
    "functions": [
        "RB_Node",
        "RB_Node",
        "isNil",
        "Nil",
        "isNil",
        "createTree",
        "RB_Node",
        "sortedListToRB",
        "bfs_traversal",
        "color_lowest_level",
        "count",
        "inrange",
        "helper",
        "RB_Node",
        "getMin",
        "RB_Node",
        "getMax",
        "next",
        "RB_Node",
        "Search",
        "previous",
        "RB_Node",
        "Insert",
        "increase",
        "leftRotate",
        "rightRotate",
        "RB_insert_fixup",
        "transplant_RB",
        "Delete_RB",
        "Delete_RB_fixup",
        "reduce",
        "main"
    ],
    "classes": [
        "RB_Node",
        "Nil",
        "RB_tree",
        "bbst"
    ]
}