{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Text",
        "Threading",
        "Tasks",
        "FrmEdit",
        "firstName",
        "lastName",
        "eMailAdress",
        "customerNumber",
        "CustomerNumber",
        "customerNumber",
        "FirstName",
        "firstName",
        "LastName",
        "lastName",
        "EMailAdress",
        "eMailAdress",
        "Balancing",
        "DateLastChange",
        "Now",
        "customerNumber",
        "customerNumber",
        "value",
        "DateLastChange",
        "Now",
        "firstName",
        "value",
        "Empty",
        "ArgumentException",
        "firstName",
        "value",
        "DateLastChange",
        "Now",
        "lastName",
        "value",
        "Empty",
        "ArgumentException",
        "lastName",
        "value",
        "DateLastChange",
        "Now",
        "eMailAdress",
        "value",
        "Empty",
        "ArgumentException",
        "eMailAdress",
        "value",
        "DateLastChange",
        "Now",
        "balancing",
        "balancing",
        "value",
        "DateLastChange",
        "Now",
        "dateLastChange",
        "Compare",
        "value",
        "dateLastChange",
        "dateLastChange",
        "value",
        "ArgumentException",
        "Customer",
        "customerList",
        "eMailAdress",
        "EMailAdressContainsExactlyOneAt",
        "eMailAdress",
        "ContainsDotAfterAt",
        "eMailAdress",
        "LengthOfFinalPart",
        "eMailAdress",
        "LengthOfFinalPart",
        "eMailAdress",
        "FinalPartsContainsOnlyLetters",
        "eMailAdress",
        "ContainsCharacterBeforeAt",
        "eMailAdress",
        "NoDotsAtInvalidPosition",
        "eMailAdress",
        "NoInvalidSymbols",
        "eMailAdress",
        "EMailAdressNotListedYet",
        "customerList",
        "eMailAdress",
        "errorCode",
        "errorCode",
        "errorCode",
        "errorCode",
        "errorCode",
        "errorCode",
        "errorCode",
        "errorCode",
        "errorCode",
        "errorCode",
        "eMailAdress",
        "eMailAdress",
        "IndexOf",
        "result",
        "eMailAdress",
        "IndexOf",
        "eMailAdress",
        "LastIndexOf",
        "result",
        "result",
        "eMailAdress",
        "eMailAdress",
        "IndexOf",
        "eMailAdress",
        "LastIndexOf",
        "result",
        "result",
        "eMailAdress",
        "eMailAdress",
        "LastIndexOf",
        "eMailAdress",
        "Length",
        "lastindex",
        "eMailAdress",
        "eMailAdress",
        "ToCharArray",
        "eMailAdress",
        "LastIndexOf",
        "LengthOfFinalPart",
        "eMailAdress",
        "i",
        "temp",
        "Length",
        "i",
        "IsLetter",
        "temp",
        "i",
        "result",
        "result",
        "eMailAdress",
        "eMailAdress",
        "IndexOf",
        "eMailAdress",
        "ToCharArray",
        "eMailAdress",
        "IndexOf",
        "i",
        "temp",
        "Length",
        "i",
        "IsLetter",
        "temp",
        "i",
        "result",
        "result",
        "eMailAdress",
        "eMailAdress",
        "IndexOf",
        "result",
        "eMailAdress",
        "LastIndexOf",
        "eMailAdress",
        "Length",
        "result",
        "eMailAdress",
        "Split",
        "temp",
        "LastIndexOf",
        "temp",
        "Length",
        "temp",
        "IndexOf",
        "result",
        "result",
        "eMailAdress",
        "eMailAdress",
        "ToCharArray",
        "i",
        "temp",
        "Length",
        "i",
        "IsLetterOrDigit",
        "temp",
        "i",
        "validSpecialSymbols",
        "Contains",
        "temp",
        "i",
        "ToString",
        "result",
        "result",
        "Customer",
        "customerList",
        "eMailAdress",
        "Customer",
        "customer",
        "customerList",
        "customer",
        "EMailAdress",
        "eMailAdress",
        "result",
        "result",
        "CustomerNumber",
        "ToString",
        "FirstName",
        "LastName",
        "EMailAdress",
        "Balancing",
        "ToString",
        "DateLastChange",
        "ToString",
        "result"
    ],
    "literals": [
        "\"FirstName does not allow empty string\"",
        "\"LastName does not allow empty string\"",
        "\"EMailAdress does not allow empty string\"",
        "\"Date is older than date of actual last change\"",
        "\".\"",
        "\"!\"",
        "\"#\"",
        "\"$\"",
        "\"%\"",
        "\"&\"",
        "\"'\"",
        "\"*\"",
        "\"+\"",
        "\"-\"",
        "\"/\"",
        "\"=\"",
        "\"?\"",
        "\"^\"",
        "\" \"",
        "\"`\"",
        "\"{\"",
        "\"|\"",
        "\"}\"",
        "\"~\"",
        "\"_\"",
        "\"@\"",
        "\";\"",
        "\";\"",
        "\";\"",
        "\";\"",
        "\";\""
    ],
    "variables": [
        "customerNumber",
        "firstName",
        "lastName",
        "eMailAdress",
        "balancing",
        "dateLastChange",
        "CustomerNumber",
        "FirstName",
        "LastName",
        "EMailAdress",
        "Balancing",
        "DateLastChange",
        "errorCode",
        "result",
        "result",
        "lastindex",
        "result",
        "temp",
        "i",
        "result",
        "temp",
        "i",
        "result",
        "temp",
        "result",
        "validSpecialSymbols",
        "temp",
        "i",
        "result",
        "result"
    ],
    "comments": [
        "Adress is valid",
        "Adress is new in List",
        "Adress is Listed",
        "Checks if eMailAdress contains exactly one @",
        "Checks if there is a '.' in the part after the @",
        "Returns the number of characters after the last '.'",
        "Checks if there are only Letters in the Part after the last '.'",
        "Checks if there is a charakter before the @",
        "Check if there is no '.' at the start, end of next to the @",
        "Checks if there are no invalid symbols",
        "Checks if the E-Mail-Adress is already listed in the Customerlist"
    ],
    "docstrings": [],
    "functions": [
        "Customer",
        "ValidateEMailAdress",
        "EMailAdressContainsExactlyOneAt",
        "ContainsDotAfterAt",
        "LengthOfFinalPart",
        "FinalPartsContainsOnlyLetters",
        "ContainsCharacterBeforeAt",
        "NoDotsAtInvalidPosition",
        "NoInvalidSymbols",
        "EMailAdressNotListedYet",
        "ToString"
    ],
    "classes": [
        "Customer"
    ]
}