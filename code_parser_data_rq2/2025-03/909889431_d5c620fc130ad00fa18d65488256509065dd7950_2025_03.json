{
    "identifiers": [
        "path",
        "os",
        "axios",
        "semver",
        "yaml",
        "VMBackend",
        "merge",
        "SERVICE_SUBNET",
        "Log",
        "backend",
        "log",
        "backend",
        "log",
        "SUBNET_NODE_DATA",
        "configPath",
        "yaml",
        "configContent",
        "_",
        "axios",
        "response",
        "_",
        "axios",
        "response",
        "version",
        "os",
        "version",
        "version",
        "arch",
        "path",
        "targetPath",
        "url",
        "targetPath",
        "semver",
        "currentVersion",
        "latestVersion",
        "currentVersion",
        "latestVersion",
        "latestVersion",
        "currentVersion",
        "SERVICE_SUBNET",
        "_",
        "setInterval",
        "error",
        "error",
        "newConfig",
        "SUBNET_NODE_DATA",
        "merge",
        "existingConfig",
        "newConfig",
        "yaml",
        "mergedConfig",
        "configPath",
        "updatedConfigContent",
        "retries",
        "delay",
        "i",
        "retries",
        "i",
        "axios",
        "response",
        "error",
        "i",
        "retries",
        "resolve",
        "setTimeout",
        "resolve",
        "delay",
        "SubnetNode"
    ],
    "literals": [
        "'path'",
        "'os'",
        "'axios'",
        "'semver'",
        "'yaml'",
        "'./backend'",
        "'lodash'",
        "'../assets/scripts/service-subnet.initd?raw'",
        "'../utils/logging'",
        "\"/var/lib/subnet-node\"",
        "'/config.yaml'",
        "string",
        "'Failed to get version'",
        "'0.0.0'",
        "'http://localhost:8080/public'",
        "'2.0'",
        "'version_getVersion'",
        "'Failed to get version'",
        "'0.0.0'",
        "string",
        "'https://api.github.com/repos/unicornultrafoundation/subnet-node/releases/latest'",
        "string",
        "'arm64'",
        "'arm64'",
        "'amd64'",
        "https://github.com/unicornultrafoundation/subnet-node/releases/download/${version}/subnet-${version}-linux-${arch}",
        "/usr/local/bin/subnet",
        "'curl'",
        "'-L'",
        "'-o'",
        "'chmod'",
        "'+x'",
        "Updating subnet-node from version ${currentVersion} to ${latestVersion}",
        "subnet-node is up-to-date (version ${currentVersion})",
        "'/etc/init.d/subnet'",
        "'Failed to start subnet-node'",
        "'Error during periodic subnet-node check:'",
        "'/config.yaml'",
        "'http://localhost:8080/status'",
        "'/sbin/rc-service'",
        "'subnet'",
        "'restart'",
        "'/sbin/rc-service'",
        "'subnet'",
        "'start'",
        "'/sbin/rc-service'",
        "'subnet'",
        "'stop'"
    ],
    "variables": [
        "SUBNET_NODE_DATA",
        "configPath",
        "configContent",
        "response",
        "response",
        "arch",
        "url",
        "targetPath",
        "currentVersion",
        "latestVersion",
        "configPath",
        "existingConfig",
        "mergedConfig",
        "updatedConfigContent",
        "i",
        "response"
    ],
    "comments": [
        "Return a default version if the config file does not exist",
        "Return a default version if the version cannot be retrieved",
        "Download the file using execCommand to avoid being blocked by Windows",
        "Move the file to the target path",
        "1 hour in milliseconds"
    ],
    "docstrings": [
        "* Read the subnet configuration from /root/.subnet-node/config.yaml",
        "* Get the current subnet-node version.",
        "* Get the latest subnet-node version from the GitHub API.",
        "* Download and install the latest subnet-node version.",
        "* Check the current subnet-node version and update if a new version is available.",
        "* Start a periodic check for subnet-node version every hour."
    ],
    "functions": [
        "getConfig",
        "getVersion",
        "getLatestVersion",
        "downloadAndInstall",
        "checkAndUpdate",
        "start",
        "startPeriodicCheck",
        "updateConfig",
        "checkStatus",
        "restartService",
        "startService",
        "stopService"
    ],
    "classes": [
        "SubnetNode"
    ]
}