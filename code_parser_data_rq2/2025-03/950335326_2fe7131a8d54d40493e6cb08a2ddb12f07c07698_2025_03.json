{
    "identifiers": [
        "Context",
        "Cart",
        "useEffect",
        "anime",
        "usePathname",
        "MobileMenu",
        "BacktoTop",
        "ParallaxProvider",
        "ContactModal",
        "NewsletterModal",
        "SearchModal",
        "usePathname",
        "useEffect",
        "handleIntersection",
        "entries",
        "observer",
        "entries",
        "entry",
        "entry",
        "entry",
        "element",
        "dataAnime",
        "modifieddataAnime",
        "parseAnimeData",
        "data",
        "data",
        "param",
        "param",
        "item",
        "item",
        "key",
        "value",
        "settings",
        "key",
        "value",
        "settings",
        "parseAnimeData",
        "modifieddataAnime",
        "animeSettings",
        "targets",
        "element",
        "targets",
        "element",
        "animeSettings",
        "anime",
        "animeSettings",
        "targets",
        "animeSettings",
        "animeSettings",
        "animeSettings",
        "animeSettings",
        "animeSettings",
        "animeSettings",
        "anime",
        "animeSettings",
        "animeSettings",
        "animeSettings",
        "observer",
        "element",
        "IntersectionObserver",
        "handleIntersection",
        "elements",
        "element",
        "observer",
        "element",
        "elements",
        "element",
        "observer",
        "element",
        "pathname",
        "html",
        "head",
        "script",
        "head",
        "body",
        "Context",
        "ParallaxProvider",
        "children",
        "ParallaxProvider",
        "MobileMenu",
        "ContactModal",
        "NewsletterModal",
        "SearchModal",
        "Cart",
        "BacktoTop",
        "Context",
        "body",
        "html"
    ],
    "literals": [
        "\"use client\"",
        "\"@/context/Context\"",
        "\"../public/assets/css/main.scss\"",
        "\"swiper/css/virtual\"",
        "\"swiper/css\"",
        "\"swiper/css/thumbs\"",
        "\"swiper/css/effect-fade\"",
        "\"../public/assets/custom.scss\"",
        "\"photoswipe/dist/photoswipe.css\"",
        "\"rc-slider/assets/index.css\"",
        "\"@/components/common/Cart\"",
        "\"react\"",
        "\"animejs\"",
        "\"next/navigation\"",
        "\"@/components/headers/component/MobileMenu\"",
        "\"@/components/common/BacktoTop\"",
        "\"react-scroll-parallax\"",
        "\"@/components/modals/ContactModal\"",
        "\"@/components/modals/NewsletterModal\"",
        "\"@/components/modals/SearchModal\"",
        "\"[data-anime]\"",
        "\"data-anime\"",
        "\"$1,$2\"",
        "\";\"",
        "\":\"",
        "\">*\"",
        "\"[0, 0]\"",
        "\"[48, 0]\"",
        "\"spring(1, 80, 10, 0)\"",
        "\",\"",
        "\",\"",
        "\",\"",
        "\"en\"",
        "\"ltr\"",
        "\"anonymous\"",
        "\"//unpkg.com/react-scan/dist/auto.global.js\"",
        "\" \""
    ],
    "variables": [
        "pathname",
        "elements",
        "handleIntersection",
        "element",
        "dataAnime",
        "modifieddataAnime",
        "parseAnimeData",
        "settings",
        "key",
        "value",
        "animeSettings",
        "targets",
        "observer"
    ],
    "comments": [
        "Intersection Observer callback function",
        "console.log(animeSettings);",
        "Apply Anime.js animation",
        "direction: \"alternate\",",
        "Unobserve the element after animation triggers",
        "Trigger when 10% of the element is in view",
        "Clean up the observer on component unmount"
    ],
    "docstrings": [],
    "functions": [
        "RootLayout"
    ],
    "classes": []
}