{
    "identifiers": [
        "IPString",
        "NonEmptyString",
        "describe",
        "expect",
        "it",
        "E",
        "format",
        "TelemetryClient",
        "toPlainText",
        "aFiscalCode",
        "HandlerOutput",
        "makeHandler",
        "StoreSpidLogsQueueMessage",
        "mockQueueHandlerInputMocks",
        "trackerMock",
        "trackEventMock",
        "format",
        "aDate",
        "today",
        "aFiscalCode",
        "aDate",
        "today",
        "aFiscalCode",
        "mockQueueHandlerInputMocks",
        "StoreSpidLogsQueueMessage",
        "aSpidMsgItem",
        "aPublicKey",
        "trackerMock",
        "describe",
        "it",
        "makeHandler",
        "mockedDependencies",
        "aSpidMsgItem",
        "handler",
        "E",
        "result",
        "expect",
        "trackEventMock",
        "E",
        "result",
        "result",
        "blob",
        "expect",
        "blob",
        "expect",
        "encryptedSpidBlobItem",
        "expect",
        "encryptedSpidBlobItem",
        "expect",
        "encryptedSpidBlobItem",
        "expect",
        "encryptedSpidBlobItem",
        "expect",
        "encryptedSpidBlobItem",
        "aSpidMsgItem",
        "aSpidMsgItem",
        "aSpidMsgItem",
        "toPlainText",
        "aRSAPrivateKey",
        "encryptedSpidBlobItem",
        "toPlainText",
        "aRSAPrivateKey",
        "encryptedSpidBlobItem",
        "E",
        "decryptedRequestPayload",
        "E",
        "decryptedResponsePayload",
        "expect",
        "decryptedRequestPayload",
        "aSpidMsgItem",
        "expect",
        "decryptedResponsePayload",
        "aSpidMsgItem",
        "expect",
        "it",
        "makeHandler",
        "mockedDependencies",
        "aSpidMsgItem",
        "handler",
        "E",
        "result",
        "E",
        "result",
        "result",
        "blob",
        "toPlainText",
        "aRSAPrivateKey",
        "encryptedSpidBlobItem",
        "toPlainText",
        "aRSAPrivateKey",
        "encryptedSpidBlobItem",
        "E",
        "decryptedRequestPayload",
        "E",
        "decryptedResponsePayload",
        "expect",
        "decryptedRequestPayload",
        "aSpidMsgItem",
        "expect",
        "decryptedResponsePayload",
        "aSpidMsgItem",
        "expect",
        "makeHandler",
        "mockedDependencies",
        "anotherSpidMsgItem",
        "handler2",
        "E",
        "secondBlobItem",
        "E",
        "secondBlobItem",
        "secondBlobItem",
        "secondBlob",
        "toPlainText",
        "aRSAPrivateKey",
        "secondEncryptedSpidBlobItem",
        "toPlainText",
        "aRSAPrivateKey",
        "secondEncryptedSpidBlobItem",
        "E",
        "secondDecryptedRequestPayload",
        "E",
        "secondDecryptedResponsePayload",
        "expect",
        "secondDecryptedRequestPayload",
        "anotherSpidMsgItem",
        "expect",
        "secondDecryptedResponsePayload",
        "anotherSpidMsgItem",
        "expect",
        "it",
        "makeHandler",
        "mockedDependencies",
        "aSpidMsgItem",
        "handler",
        "E",
        "result",
        "expect",
        "trackEventMock",
        "expect",
        "trackEventMock",
        "expect"
    ],
    "literals": [
        "\"@pagopa/ts-commons/lib/strings\"",
        "\"vitest\"",
        "\"fp-ts/lib/Either\"",
        "\"date-fns\"",
        "\"applicationinsights\"",
        "\"@pagopa/ts-commons/lib/encrypt\"",
        "\"../../../../io-profile/src/__mocks__/mocks\"",
        "\"../store-spid-logs\"",
        "\"../../types/store-spid-logs-queue-message\"",
        "\"../__mocks__/handler.mock\"",
        "\"../__mocks__/tracker.mock\"",
        "\"yyyy-MM-dd\"",
        "-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC76C3tOj7lPiJ5sg2lU6j2dZEa\nE9GW+v1YrOajfCHijBo6VLSMH6nrO3fZM3C8oNsYrH8jyeZlcu8ZdKMaRECegVUv\nYwCyICrs58l1pA0qCo+o/0jWUaCWQY5SAX2eAni7PQGzSTQRu93Ac4BnI0PDvqxY\nQ1mRn/iy0NVMMxhDUwIDAQAB\n-----END PUBLIC KEY-----",
        "-----BEGIN RSA PRIVATE KEY-----\nMIICXQIBAAKBgQC76C3tOj7lPiJ5sg2lU6j2dZEaE9GW+v1YrOajfCHijBo6VLSM\nH6nrO3fZM3C8oNsYrH8jyeZlcu8ZdKMaRECegVUvYwCyICrs58l1pA0qCo+o/0jW\nUaCWQY5SAX2eAni7PQGzSTQRu93Ac4BnI0PDvqxYQ1mRn/iy0NVMMxhDUwIDAQAB\nAoGBAKmCGWwXTwWdt5vwcz7g6VrrU6oilr+MS17jGmwAXtDvcfmM0BJXvgDl9IeL\nT/fZY8wuT8MJLz31IJvmC/x19ZN7gsnp/Hi5L3gouQMQFGwaDUsO10gqGEoJXJCp\nkNS7PV8Zp1Z6aBg5zd4A0Hc271qOY5VUwKuT9zIzkDtHlq6BAkEA23J6jH3nEyom\n4oV/oRMpX6xHm6tciFvpVXK/kZNl8rXVUj9BHbyDG59q8eZ0HcJVt8dTFGtwmxnU\nBs/v1DPlZQJBANs0yHV8wPr0Oj3dTVZ/zePMSYDXpJjWbbquM0kKcWAeyqiRC/hX\nrPaum46QWn978zLCOWLvg2FroFGYzLaqNlcCQQC4ILT83sMdTHf2BweQ0nAbq4Ul\n88GfVGdS4AYnEqMu5C0KZrKvTbZAXiGwuKnjMmUT37Yw4vlH2oMR+DUGO0kVAkBv\nqJBfwD9w1Y0BTEQDxrAy1DGwzqeKLtfQGsIG96nOw4CJovDM/KQfN8wHL6LZg2Lb\nPTIMImLy8ebFCadleIibAkBnlE+V7qUL+a/XBMazEffUVsMoPN9iv7G6UPUyOipN\nhG0enuvF/PmgeLYsbFtozTm2/mQNqBV6USME39kPoKY1\n-----END RSA PRIVATE KEY-----",
        "\"192.168.1.6\"",
        "\"LV\"",
        "\"<?xml version='1.0' encoding='UTF-8'?><note ID='AAAA_BBBB'><to>Azure</to><from>Azure</from><heading>Reminder</heading><body>New append from local dev - REQUEST</body></note>\"",
        "\"<?xml version='1.0' encoding='UTF-8'?><note ID='AAAA_BBBB'><to>Azure</to><from>Azure</from><heading>Reminder</heading><body>New append from local dev - RESPONSE</body></note>\"",
        "\"AAAA_BBBB\"",
        "\"192.168.1.7\"",
        "\"LEGACY\"",
        "\"<?xml version='1.0' encoding='UTF-8'?><note ID='CCCC_DDDD'><to>Azure</to><from>Azure</from><heading>Reminder</heading><body>New append from local dev - REQUEST</body></note>\"",
        "\"<?xml version='1.0' encoding='UTF-8'?><note ID='CCCC_DDDD'><to>Azure</to><from>Azure</from><heading>Reminder</heading><body>New append from local dev - RESPONSE</body></note>\"",
        "\"CCCC_DDDD\"",
        "\"StoreSpidLogs\"",
        "\"should store both SPID request/response published into the queue\"",
        "\"loginType\"",
        "\"loginType\"",
        "\"fiscalCode\"",
        "\"requestPayload\"",
        "\"responsePayload\"",
        "\"should encrypt two different messages with the same Cipher instance and decrypt with another one\"",
        "\"should track permanent error if encryption failes\"",
        "\"ERROR\"",
        "\"io.citizen-auth.prof-async.store-spid-logs.error.permanent\"",
        "\"Cannot encrypt payload Error: \""
    ],
    "variables": [
        "today",
        "aDate",
        "aPublicKey",
        "aRSAPrivateKey",
        "aSpidMsgItem",
        "anotherSpidMsgItem",
        "mockedDependencies",
        "handler",
        "result",
        "blob",
        "encryptedSpidBlobItem",
        "decryptedRequestPayload",
        "decryptedResponsePayload",
        "handler",
        "result",
        "blob",
        "encryptedSpidBlobItem",
        "decryptedRequestPayload",
        "decryptedResponsePayload",
        "handler2",
        "secondBlobItem",
        "secondBlob",
        "secondEncryptedSpidBlobItem",
        "secondDecryptedRequestPayload",
        "secondDecryptedResponsePayload",
        "handler",
        "result"
    ],
    "comments": [
        "eslint-disable @typescript-eslint/no-explicit-any",
        "eslint-disable functional/immutable-data",
        "--------------",
        "Mocks",
        "--------------",
        "Subdependencies, unused in this tests",
        "--------------",
        "Tests",
        "--------------"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}