{
    "identifiers": [
        "Text",
        "Json",
        "Dapper",
        "PetFamily",
        "Application",
        "Abstractions",
        "PetFamily",
        "Application",
        "Database",
        "PetFamily",
        "Application",
        "Dto",
        "Pet",
        "PetFamily",
        "Application",
        "Dto",
        "Shared",
        "PetFamily",
        "Application",
        "Models",
        "PetFamily",
        "Application",
        "Pets",
        "Queries",
        "GetFilteredPetsWithPagination",
        "IQueryHandler",
        "PagedList",
        "PetDto",
        "GetFilteredPetsWithPaginationQuery",
        "ISqlConnectionFactory",
        "sqlConnectionFactory",
        "_sqlConnectionFactory",
        "sqlConnectionFactory",
        "PagedList",
        "PetDto",
        "GetFilteredPetsWithPaginationQuery",
        "query",
        "CancellationToken",
        "cancellationToken",
        "_sqlConnectionFactory",
        "Create",
        "DynamicParameters",
        "parameters",
        "Add",
        "query",
        "PageSize",
        "parameters",
        "Add",
        "query",
        "Page",
        "query",
        "PageSize",
        "connection",
        "QueryAsync",
        "dynamic",
        "sql",
        "parameters",
        "result",
        "Select",
        "PetDto",
        "Id",
        "row",
        "id",
        "Name",
        "row",
        "name",
        "Description",
        "row",
        "description",
        "SpeciesId",
        "row",
        "species_id",
        "BreedId",
        "row",
        "breed_id",
        "Color",
        "row",
        "color",
        "HealthInfo",
        "row",
        "health_info",
        "City",
        "row",
        "city",
        "House",
        "row",
        "house",
        "Apartment",
        "row",
        "apartment",
        "Weight",
        "row",
        "weight_info",
        "Height",
        "row",
        "height_info",
        "OwnerPhoneNumber",
        "row",
        "owner_phone",
        "ToString",
        "IsCastrated",
        "row",
        "is_castrated",
        "DateOfBirth",
        "row",
        "date_of_birth",
        "IsVaccinated",
        "row",
        "is_vaccinated",
        "HelpStatus",
        "row",
        "help_status",
        "ToString",
        "CreationDate",
        "row",
        "creation_date",
        "Position",
        "row",
        "position",
        "TransferDetails",
        "JsonSerializer",
        "Deserialize",
        "TransferDetailDto",
        "row",
        "transfer_details",
        "Photos",
        "JsonSerializer",
        "Deserialize",
        "PhotoDto",
        "row",
        "photos",
        "pet",
        "ToList",
        "connection",
        "ExecuteScalarAsync",
        "PagedList",
        "PetDto",
        "Items",
        "pets",
        "ToList",
        "PageSize",
        "query",
        "PageSize",
        "TotalCount",
        "totalCount",
        "Page",
        "query",
        "PageSize"
    ],
    "literals": [
        "\"@PageSize\"",
        "\"@Offset\"",
        "\"SELECT COUNT(*) FROM pets\""
    ],
    "variables": [
        "ISqlConnectionFactory",
        "_sqlConnectionFactory",
        "connection",
        "parameters",
        "sql",
        "result",
        "pets",
        "pet",
        "totalCount"
    ],
    "comments": [
        "var sql = \"\"\"\n                  SELECT id, name, position, transfer_details, photos FROM pets\n                  ORDER BY position LIMIT @PageSize OFFSET @Offset\n                  \"\"\";\n\n        //var pets = await connection.QueryAsync<PetDto>(sql, parameters);\n\n        var pets = await connection.QueryAsync<PetDto, string, string, PetDto>(\n            sql,\n            (pet, jsonsTransferDetails, jsonPhotos) =>\n            {\n                var tDtos = JsonSerializer.Deserialize<TransferDetailDto[]>(jsonsTransferDetails) ?? [];\n                pet.TransferDetails = tDtos;\n\n                var pDtos = JsonSerializer.Deserialize<PhotoDto[]>(jsonPhotos) ?? [];\n                pet.Photos = pDtos;\n                return pet;\n            },\n            splitOn: \"transfer_details\",\n        param: parameters);"
    ],
    "docstrings": [],
    "functions": [
        "GetFilteredPetsWithPaginationHandlerDapper",
        "HandleAsync"
    ],
    "classes": [
        "GetFilteredPetsWithPaginationHandlerDapper"
    ]
}