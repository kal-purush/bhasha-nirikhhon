{
    "identifiers": [
        "streamlit",
        "st",
        "pandas",
        "pd",
        "numpy",
        "np",
        "plotly",
        "express",
        "px",
        "sklearn",
        "model_selection",
        "train_test_split",
        "sklearn",
        "preprocessing",
        "StandardScaler",
        "OneHotEncoder",
        "tensorflow",
        "keras",
        "tensorflow",
        "keras",
        "layers",
        "st",
        "title",
        "st",
        "file_uploader",
        "uploaded_file",
        "pd",
        "read_csv",
        "uploaded_file",
        "st",
        "subheader",
        "st",
        "write",
        "df",
        "head",
        "df",
        "columns",
        "df",
        "drop",
        "columns",
        "inplace",
        "df",
        "fillna",
        "df",
        "mode",
        "inplace",
        "df",
        "fillna",
        "df",
        "median",
        "inplace",
        "df",
        "drop",
        "columns",
        "df",
        "OneHotEncoder",
        "drop",
        "sparse",
        "encoder",
        "fit_transform",
        "X",
        "categorical_cols",
        "X",
        "numerical_cols",
        "values",
        "StandardScaler",
        "scaler",
        "fit_transform",
        "X_numerical",
        "np",
        "hstack",
        "X_numerical_scaled",
        "X_encoded",
        "train_test_split",
        "X_processed",
        "y",
        "test_size",
        "random_state",
        "keras",
        "Sequential",
        "layers",
        "Dense",
        "activation",
        "input_shape",
        "X_train",
        "shape",
        "layers",
        "Dense",
        "activation",
        "layers",
        "Dense",
        "activation",
        "model",
        "compile",
        "optimizer",
        "loss",
        "metrics",
        "st",
        "subheader",
        "st",
        "spinner",
        "model",
        "fit",
        "X_train",
        "y_train",
        "batch_size",
        "epochs",
        "validation_split",
        "verbose",
        "model",
        "evaluate",
        "X_test",
        "y_test",
        "model",
        "predict",
        "X_test",
        "predictions",
        "astype",
        "flatten",
        "st",
        "success",
        "test_acc",
        "pd",
        "DataFrame",
        "y_test",
        "values",
        "y_pred",
        "st",
        "subheader",
        "px",
        "scatter",
        "results_df",
        "x",
        "y",
        "color",
        "title",
        "labels",
        "st",
        "plotly_chart",
        "fig",
        "df",
        "iloc",
        "y_test",
        "index",
        "y_pred",
        "st",
        "subheader",
        "promoted_employees",
        "to_csv",
        "index",
        "encode",
        "st",
        "download_button",
        "csv",
        "key",
        "st",
        "write",
        "st",
        "write",
        "promoted_employees",
        "head"
    ],
    "literals": [
        "\"üöÄ Employee Promotion Prediction\"",
        "\"üìÇ Upload your dataset (CSV file)\"",
        "\"csv\"",
        "\"üìä Dataset Preview\"",
        "\"employee_id\"",
        "\"employee_id\"",
        "\"education\"",
        "\"education\"",
        "\"previous_year_rating\"",
        "\"previous_year_rating\"",
        "\"is_promoted\"",
        "\"is_promoted\"",
        "\"department\"",
        "\"region\"",
        "\"education\"",
        "\"gender\"",
        "\"recruitment_channel\"",
        "\"first\"",
        "\"no_of_trainings\"",
        "\"age\"",
        "\"previous_year_rating\"",
        "\"length_of_service\"",
        "\"awards_won?\"",
        "\"avg_training_score\"",
        "\"relu\"",
        "\"relu\"",
        "\"sigmoid\"",
        "\"adam\"",
        "\"binary_crossentropy\"",
        "'accuracy'",
        "\"‚öôÔ∏è Training Model...\"",
        "\"Training in progress...\"",
        "f\"‚úÖ Test Accuracy: {test_acc:.4f}\"",
        "\"Actual\"",
        "\"Predicted\"",
        "\"üìà Actual vs Predicted Promotions\"",
        "\"Actual\"",
        "\"Predicted\"",
        "\"Actual\"",
        "\"Comparison of Actual and Predicted Promotions\"",
        "\"Actual\"",
        "\"Actual Promotion\"",
        "\"Predicted\"",
        "\"Predicted Promotion\"",
        "\"Predicted_Promotion\"",
        "\"‚¨áÔ∏è Download Predicted Promotions\"",
        "'utf-8'",
        "\"Download CSV\"",
        "\"predicted_promotions.csv\"",
        "\"text/csv\"",
        "\"download-csv\"",
        "\"üìù Employees predicted to be promoted:\""
    ],
    "variables": [
        "uploaded_file",
        "df",
        "X",
        "y",
        "categorical_cols",
        "encoder",
        "X_encoded",
        "numerical_cols",
        "X_numerical",
        "scaler",
        "X_numerical_scaled",
        "X_processed",
        "X_train",
        "X_test",
        "y_train",
        "y_test",
        "model",
        "test_loss",
        "test_acc",
        "predictions",
        "y_pred",
        "results_df",
        "fig",
        "promoted_employees",
        "promoted_employees",
        "csv"
    ],
    "comments": [
        "Streamlit UI",
        "Upload CSV File",
        "Drop employee_id if it exists",
        "Fill missing values",
        "Separate features and target",
        "One-hot encode categorical columns",
        "Convert numerical features to numpy array",
        "Standardize numerical data",
        "Combine numerical and encoded categorical features",
        "Split into training and test sets",
        "Build Neural Network Model",
        "Train the model",
        "Evaluate model on test set",
        "Convert predictions into DataFrame",
        "Interactive Plot",
        "Filter employees predicted for promotion",
        "Allow CSV download of results",
        "Display the first few predicted promotions"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}