{
    "identifiers": [
        "org",
        "springframework",
        "grpc",
        "autoconfigure",
        "server",
        "security",
        "org",
        "assertj",
        "core",
        "api",
        "Assertions",
        "assertThat",
        "org",
        "mockito",
        "Mockito",
        "mock",
        "org",
        "mockito",
        "Mockito",
        "when",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "mockito",
        "Mockito",
        "org",
        "springframework",
        "boot",
        "SpringApplication",
        "org",
        "springframework",
        "boot",
        "autoconfigure",
        "AutoConfigurations",
        "org",
        "springframework",
        "boot",
        "autoconfigure",
        "logging",
        "ConditionEvaluationReportLoggingListener",
        "org",
        "springframework",
        "boot",
        "autoconfigure",
        "security",
        "servlet",
        "SecurityAutoConfiguration",
        "org",
        "springframework",
        "boot",
        "autoconfigure",
        "ssl",
        "SslAutoConfiguration",
        "org",
        "springframework",
        "boot",
        "context",
        "annotation",
        "UserConfigurations",
        "org",
        "springframework",
        "boot",
        "context",
        "ApplicationFailedEvent",
        "org",
        "springframework",
        "boot",
        "logging",
        "LogLevel",
        "org",
        "springframework",
        "boot",
        "test",
        "context",
        "runner",
        "ApplicationContextRunner",
        "org",
        "springframework",
        "boot",
        "test",
        "context",
        "runner",
        "WebApplicationContextRunner",
        "org",
        "springframework",
        "boot",
        "web",
        "servlet",
        "context",
        "AnnotationConfigServletWebApplicationContext",
        "org",
        "springframework",
        "context",
        "annotation",
        "Bean",
        "org",
        "springframework",
        "context",
        "annotation",
        "Configuration",
        "org",
        "springframework",
        "grpc",
        "autoconfigure",
        "server",
        "GrpcServerAutoConfiguration",
        "org",
        "springframework",
        "grpc",
        "autoconfigure",
        "server",
        "GrpcServerFactoryAutoConfiguration",
        "org",
        "springframework",
        "grpc",
        "server",
        "GlobalServerInterceptor",
        "org",
        "springframework",
        "grpc",
        "server",
        "lifecycle",
        "GrpcServerLifecycle",
        "org",
        "springframework",
        "grpc",
        "server",
        "security",
        "AuthenticationProcessInterceptor",
        "org",
        "springframework",
        "grpc",
        "server",
        "security",
        "GrpcSecurity",
        "org",
        "springframework",
        "security",
        "config",
        "Customizer",
        "io",
        "grpc",
        "BindableService",
        "io",
        "grpc",
        "ServerServiceDefinition",
        "service",
        "mock",
        "serviceDefinition",
        "ServerServiceDefinition",
        "builder",
        "build",
        "when",
        "service",
        "bindService",
        "thenReturn",
        "serviceDefinition",
        "withConfiguration",
        "AutoConfigurations",
        "of",
        "withBean",
        "service",
        "withBean",
        "Mockito",
        "mock",
        "Test",
        "contextRunner",
        "run",
        "context",
        "assertThat",
        "context",
        "doesNotHaveBean",
        "Test",
        "withConfiguration",
        "AutoConfigurations",
        "of",
        "withBean",
        "service",
        "withPropertyValues",
        "run",
        "context",
        "assertThat",
        "context",
        "doesNotHaveBean",
        "Test",
        "WebApplicationContextRunner",
        "withMockServletContext",
        "MyContext",
        "withInitializer",
        "ConditionEvaluationReportLoggingListener",
        "forLogLevel",
        "LogLevel",
        "INFO",
        "withConfiguration",
        "AutoConfigurations",
        "of",
        "withPropertyValues",
        "run",
        "context",
        "assertThat",
        "context",
        "doesNotHaveBean",
        "Test",
        "WebApplicationContextRunner",
        "withMockServletContext",
        "MyContext",
        "withConfiguration",
        "AutoConfigurations",
        "of",
        "withInitializer",
        "ConditionEvaluationReportLoggingListener",
        "forLogLevel",
        "LogLevel",
        "INFO",
        "withBean",
        "service",
        "withBean",
        "Mockito",
        "mock",
        "withPropertyValues",
        "run",
        "context",
        "assertThat",
        "context",
        "hasSingleBean",
        "Override",
        "refresh",
        "ex",
        "publishEvent",
        "ex",
        "ex",
        "Test",
        "contextRunner",
        "withPropertyValues",
        "run",
        "context",
        "assertThat",
        "context",
        "hasSingleBean",
        "Test",
        "contextRunner",
        "withPropertyValues",
        "run",
        "context",
        "assertThat",
        "context",
        "hasSingleBean",
        "Test",
        "contextRunner",
        "withInitializer",
        "ConditionEvaluationReportLoggingListener",
        "forLogLevel",
        "LogLevel",
        "INFO",
        "withConfiguration",
        "UserConfigurations",
        "of",
        "withPropertyValues",
        "run",
        "context",
        "assertThat",
        "context",
        "hasSingleBean",
        "Configuration",
        "proxyBeanMethods",
        "Bean",
        "GlobalServerInterceptor",
        "grpc",
        "grpc",
        "authorizeRequests",
        "requests",
        "requests",
        "allRequests",
        "authenticated",
        "oauth2ResourceServer",
        "resourceServer",
        "resourceServer",
        "jwt",
        "Customizer",
        "withDefaults",
        "build"
    ],
    "literals": [
        "\"my-service\"",
        "\"noopServerLifecycle\"",
        "\"spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9000\"",
        "\"spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9000\"",
        "\"noopServerLifecycle\"",
        "\"spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9000\"",
        "\"spring.grpc.server.servlet.enabled=false\"",
        "\"spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9000\"",
        "\"spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:9000\"",
        "\"spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:9000\""
    ],
    "variables": [],
    "comments": [
        "NOTE: we use noop server lifecycle to avoid startup",
        "Utility class to ensure ApplicationFailedEvent is published"
    ],
    "docstrings": [
        "* Copyright 2023-2024 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Tests for {@link GrpcServerAutoConfiguration}.\n *\n * @author Chris Bono"
    ],
    "functions": [
        "ApplicationContextRunner",
        "contextRunner",
        "notConfiguredWhenIssuerNotProvided",
        "notConfiguredInWebApplication",
        "notConfiguredInWebApplicationWithNoBindableService",
        "configuredInWebApplicationWithGrpcNative",
        "refresh",
        "jwtConfiguredWhenIssuerIsProvided",
        "jwtConfiguredWhenJwkSetIsProvided",
        "customInterceptorWhenJwkSetIsProvided",
        "AuthenticationProcessInterceptor",
        "jwtSecurityFilterChain"
    ],
    "classes": [
        "OAuth2ResourceServerAutoConfigurationTests",
        "MyContext",
        "CustomInterceptorConfiguration"
    ]
}