{
    "identifiers": [
        "fetch",
        "NextResponse",
        "process",
        "request",
        "request",
        "data",
        "fetch",
        "OPENROUTER_BASE_URL",
        "OPENROUTER_API_KEY",
        "prompt",
        "response",
        "response",
        "responseData",
        "NextResponse",
        "responseData",
        "NextResponse",
        "responseData",
        "error",
        "error",
        "error",
        "NextResponse",
        "error"
    ],
    "literals": [
        "'node-fetch'",
        "'next/server'",
        "'https://openrouter.ai/api/v1/chat/completions'",
        "'API, Received request'",
        "'API, Text passed'",
        "Analyze the following web code and add ARIA enhancements just to the code to improve its accessibility:\n            ${data}).join(\"\\n\")}\n        No need to give any explanation or anything, just the code would be fine. Thanks.",
        "\"POST\"",
        "\"Content-Type\"",
        "\"application/json\"",
        "\"Authorization\"",
        "Bearer ${OPENROUTER_API_KEY}",
        "\"deepseek/deepseek-r1-distill-llama-70b:free\"",
        "\"system\"",
        "\"You are an expert in web accessibility and ARIA best practices.\"",
        "\"user\"",
        "'OpenRouter API error:'",
        "\"Failed to fetch AI response\"",
        "\"No suggestions found.\"",
        "'Detailed error:'",
        "'Server error:'",
        "\"Internal Server Error\""
    ],
    "variables": [
        "OPENROUTER_API_KEY",
        "OPENROUTER_BASE_URL",
        "data",
        "prompt",
        "response",
        "responseData",
        "config"
    ],
    "comments": [
        "const fileContents = await Promise.all(",
        "files.map(async (file) => {",
        "console.log('API, Processing file:', file.name);",
        "return {",
        "name: file.name,",
        "content: await file.text(),",
        "};",
        "})",
        ");",
        "console.log('API, File contents:', fileContents);",
        "${fileContents.map(({ name, content }) => `\\n**File: ${name}**\\n${content}`).join(\"\\n\")}"
    ],
    "docstrings": [],
    "functions": [
        "POST"
    ],
    "classes": []
}