{
    "identifiers": [
        "cat",
        "postgres",
        "direct",
        "backup",
        "py",
        "os",
        "sys",
        "logging",
        "subprocess",
        "datetime",
        "datetime",
        "timedelta",
        "hashlib",
        "argparse",
        "json",
        "re",
        "config_path",
        "_load_config",
        "config_path",
        "_setup_logging",
        "os",
        "makedirs",
        "config",
        "exist_ok",
        "logger",
        "info",
        "logger",
        "debug",
        "config",
        "config",
        "config",
        "config_path",
        "os",
        "environ",
        "get",
        "os",
        "environ",
        "get",
        "os",
        "environ",
        "get",
        "os",
        "environ",
        "get",
        "os",
        "environ",
        "get",
        "os",
        "environ",
        "get",
        "config",
        "config",
        "re",
        "match",
        "pattern",
        "conn_str",
        "match",
        "match",
        "groups",
        "config",
        "user",
        "config",
        "password",
        "config",
        "host",
        "config",
        "port",
        "config",
        "dbname",
        "dbname",
        "host",
        "port",
        "config_path",
        "os",
        "path",
        "exists",
        "config_path",
        "open",
        "config_path",
        "config_file",
        "json",
        "load",
        "config_file",
        "section",
        "file_config",
        "section",
        "config",
        "config",
        "section",
        "update",
        "file_config",
        "section",
        "file_config",
        "section",
        "e",
        "config_path",
        "e",
        "config",
        "config",
        "config",
        "get",
        "getattr",
        "logging",
        "log_level_name",
        "upper",
        "logging",
        "INFO",
        "os",
        "makedirs",
        "os",
        "path",
        "dirname",
        "log_file",
        "exist_ok",
        "logging",
        "basicConfig",
        "level",
        "log_level",
        "format",
        "handlers",
        "logging",
        "FileHandler",
        "log_file",
        "logging",
        "StreamHandler",
        "sys",
        "stdout",
        "logging",
        "getLogger",
        "backup_type",
        "datetime",
        "now",
        "strftime",
        "backup_type",
        "timestamp",
        "os",
        "path",
        "join",
        "config",
        "backup_filename",
        "config",
        "config",
        "config",
        "config",
        "config",
        "logger",
        "info",
        "backup_type",
        "db_name",
        "db_host",
        "db_port",
        "db_user",
        "db_name",
        "backup_path",
        "os",
        "environ",
        "copy",
        "db_password",
        "logger",
        "debug",
        "join",
        "pg_dump_cmd",
        "subprocess",
        "run",
        "pg_dump_cmd",
        "env",
        "env",
        "stderr",
        "subprocess",
        "PIPE",
        "text",
        "result",
        "returncode",
        "logger",
        "error",
        "result",
        "stderr",
        "backup_path",
        "config",
        "get",
        "backup_path",
        "subprocess",
        "run",
        "backup_path",
        "capture_output",
        "text",
        "compress_result",
        "returncode",
        "logger",
        "warning",
        "compress_result",
        "stderr",
        "backup_path",
        "_generate_checksum",
        "compressed_path",
        "os",
        "path",
        "getsize",
        "compressed_path",
        "logger",
        "info",
        "backup_type",
        "compressed_path",
        "file_size",
        "_rotate_backups",
        "compressed_path",
        "e",
        "logger",
        "error",
        "e",
        "filepath",
        "open",
        "filepath",
        "f",
        "hashlib",
        "sha256",
        "chunk",
        "iter",
        "f",
        "read",
        "checksum",
        "update",
        "chunk",
        "filepath",
        "open",
        "checksum_file",
        "f",
        "f",
        "write",
        "checksum",
        "hexdigest",
        "logger",
        "info",
        "checksum",
        "hexdigest",
        "checksum",
        "hexdigest",
        "e",
        "logger",
        "error",
        "e",
        "config",
        "get",
        "datetime",
        "now",
        "timedelta",
        "days",
        "retention_days",
        "config",
        "logger",
        "info",
        "retention_days",
        "filename",
        "os",
        "listdir",
        "backup_dir",
        "os",
        "path",
        "join",
        "backup_dir",
        "filename",
        "os",
        "path",
        "isfile",
        "filepath",
        "datetime",
        "fromtimestamp",
        "os",
        "path",
        "getmtime",
        "filepath",
        "file_modified",
        "cutoff_date",
        "os",
        "remove",
        "filepath",
        "logger",
        "info",
        "filename",
        "e",
        "logger",
        "error",
        "filename",
        "e",
        "e",
        "logger",
        "error",
        "e",
        "backup_file",
        "os",
        "path",
        "exists",
        "backup_file",
        "logger",
        "error",
        "backup_file",
        "config",
        "config",
        "config",
        "config",
        "config",
        "backup_file",
        "backup_file",
        "endswith",
        "backup_file",
        "backup_file",
        "open",
        "temp_file",
        "f",
        "subprocess",
        "run",
        "decompress_command",
        "stdout",
        "f",
        "stderr",
        "subprocess",
        "PIPE",
        "decompress_result",
        "returncode",
        "logger",
        "error",
        "decompress_result",
        "stderr",
        "logger",
        "info",
        "db_name",
        "backup_file",
        "db_host",
        "db_port",
        "db_user",
        "db_name",
        "db_host",
        "db_port",
        "db_user",
        "db_name",
        "os",
        "environ",
        "copy",
        "db_password",
        "logger",
        "debug",
        "subprocess",
        "run",
        "drop_db_cmd",
        "capture_output",
        "text",
        "env",
        "env",
        "drop_result",
        "returncode",
        "logger",
        "error",
        "drop_result",
        "stderr",
        "logger",
        "debug",
        "subprocess",
        "run",
        "create_db_cmd",
        "capture_output",
        "text",
        "env",
        "env",
        "create_result",
        "returncode",
        "logger",
        "error",
        "create_result",
        "stderr",
        "db_host",
        "db_port",
        "db_user",
        "db_name",
        "temp_file",
        "logger",
        "debug",
        "temp_file",
        "subprocess",
        "run",
        "restore_cmd",
        "capture_output",
        "text",
        "env",
        "env",
        "backup_file",
        "endswith",
        "os",
        "path",
        "exists",
        "temp_file",
        "os",
        "remove",
        "temp_file",
        "logger",
        "debug",
        "temp_file",
        "restore_result",
        "returncode",
        "logger",
        "error",
        "restore_result",
        "stderr",
        "logger",
        "info",
        "db_name",
        "backup_file",
        "e",
        "logger",
        "error",
        "e",
        "config",
        "filename",
        "os",
        "listdir",
        "backup_dir",
        "os",
        "path",
        "join",
        "backup_dir",
        "filename",
        "os",
        "path",
        "isfile",
        "filepath",
        "filename",
        "endswith",
        "filename",
        "endswith",
        "filename",
        "endswith",
        "os",
        "path",
        "getsize",
        "filepath",
        "datetime",
        "fromtimestamp",
        "os",
        "path",
        "getmtime",
        "filepath",
        "filename",
        "filename",
        "split",
        "backups",
        "append",
        "filename",
        "filepath",
        "file_size",
        "file_date",
        "backup_type",
        "backups",
        "sort",
        "key",
        "x",
        "x",
        "reverse",
        "backups",
        "e",
        "logger",
        "error",
        "e",
        "config",
        "original_db_name",
        "config",
        "test_db_name",
        "config",
        "config",
        "config",
        "config",
        "os",
        "environ",
        "copy",
        "db_password",
        "db_host",
        "db_port",
        "db_user",
        "test_db_name",
        "logger",
        "info",
        "test_db_name",
        "subprocess",
        "run",
        "drop_cmd",
        "capture_output",
        "text",
        "env",
        "env",
        "drop_result",
        "returncode",
        "logger",
        "error",
        "drop_result",
        "stderr",
        "db_host",
        "db_port",
        "db_user",
        "test_db_name",
        "logger",
        "info",
        "test_db_name",
        "subprocess",
        "run",
        "create_cmd",
        "capture_output",
        "text",
        "env",
        "env",
        "create_result",
        "returncode",
        "logger",
        "error",
        "create_result",
        "stderr",
        "logger",
        "info",
        "db_host",
        "db_port",
        "db_user",
        "test_db_name",
        "subprocess",
        "run",
        "test_data_cmd",
        "capture_output",
        "text",
        "env",
        "env",
        "data_result",
        "returncode",
        "logger",
        "error",
        "data_result",
        "stderr",
        "logger",
        "info",
        "perform_backup",
        "backup_type",
        "backup_file",
        "logger",
        "error",
        "logger",
        "info",
        "subprocess",
        "run",
        "drop_cmd",
        "capture_output",
        "text",
        "env",
        "env",
        "drop_result",
        "returncode",
        "logger",
        "error",
        "drop_result",
        "stderr",
        "logger",
        "info",
        "restore_backup",
        "backup_file",
        "restore_result",
        "logger",
        "info",
        "db_host",
        "db_port",
        "db_user",
        "test_db_name",
        "subprocess",
        "run",
        "verify_cmd",
        "capture_output",
        "text",
        "env",
        "env",
        "verify_result",
        "stdout",
        "logger",
        "info",
        "logger",
        "error",
        "logger",
        "info",
        "subprocess",
        "run",
        "drop_cmd",
        "capture_output",
        "text",
        "env",
        "env",
        "cleanup_result",
        "returncode",
        "logger",
        "warning",
        "cleanup_result",
        "stderr",
        "success",
        "e",
        "logger",
        "error",
        "e",
        "config",
        "original_db_name",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "choices",
        "help",
        "parser",
        "add_argument",
        "choices",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "parse_args",
        "args",
        "verbose",
        "os",
        "environ",
        "PostgresBackupManager",
        "args",
        "config",
        "args",
        "command",
        "backup_manager",
        "perform_backup",
        "backup_type",
        "args",
        "backup_file",
        "sys",
        "exit",
        "backup_file",
        "args",
        "command",
        "args",
        "file",
        "backup_manager",
        "list_backups",
        "backups",
        "sys",
        "exit",
        "i",
        "backup",
        "backups",
        "backup",
        "backup",
        "strftime",
        "i",
        "backup",
        "size_mb",
        "date_str",
        "backup",
        "input",
        "choice",
        "sys",
        "exit",
        "choice",
        "len",
        "backups",
        "backups",
        "choice",
        "sys",
        "exit",
        "ValueError",
        "sys",
        "exit",
        "backup_manager",
        "restore_backup",
        "args",
        "file",
        "success",
        "sys",
        "exit",
        "args",
        "file",
        "args",
        "command",
        "backup_manager",
        "list_backups",
        "backups",
        "sys",
        "exit",
        "i",
        "backup",
        "backups",
        "backup",
        "backup",
        "strftime",
        "i",
        "backup",
        "size_mb",
        "date_str",
        "backup",
        "args",
        "command",
        "backup_manager",
        "test_backup_and_restore",
        "success",
        "sys",
        "exit",
        "main"
    ],
    "literals": [
        "'EOL'",
        "'backup'",
        "'base_dir'",
        "\"PostgresBackupManager initialized\"",
        "f\"Using database: {self.config['database']['name']} at {self.config['database']['host']}:{self.config['database']['port']}\"",
        "'database'",
        "'name'",
        "'database'",
        "'host'",
        "'database'",
        "'port'",
        "\"database\"",
        "\"connection_string\"",
        "\"DB_SOURCE\"",
        "\"postgres://root:secret@localhost:5433/defi?sslmode=disable\"",
        "\"driver\"",
        "\"DB_DRIVER\"",
        "\"postgres\"",
        "\"backup\"",
        "\"base_dir\"",
        "\"BACKUP_DIR\"",
        "\"/tmp/defifundr-backups\"",
        "\"retention_days\"",
        "\"RETENTION_DAYS\"",
        "\"7\"",
        "\"compression\"",
        "\"logging\"",
        "\"log_file\"",
        "\"LOG_FILE\"",
        "\"/tmp/defifundr_backup.log\"",
        "\"level\"",
        "\"LOG_LEVEL\"",
        "\"INFO\"",
        "\"connection_string\"",
        "\"database\"",
        "\"database\"",
        "\"connection_string\"",
        "r\"postgres://([^:]+):([^@]+)@([^:]+):(\\d+)/([^?]+)\"",
        "\"database\"",
        "\"user\"",
        "\"database\"",
        "\"password\"",
        "\"database\"",
        "\"host\"",
        "\"database\"",
        "\"port\"",
        "\"database\"",
        "\"name\"",
        "f\"Parsed connection string for database {dbname} at {host}:{port}\"",
        "\"Warning: Could not parse connection string. Format should be: postgres://user:password@host:port/dbname\"",
        "'r'",
        "f\"Error loading configuration from {config_path}: {e}\"",
        "'logging'",
        "'log_file'",
        "'logging'",
        "'level'",
        "'INFO'",
        "'%(asctime)s - %(name)s - %(levelname)s - %(message)s'",
        "'PostgresBackupManager'",
        "'daily'",
        "\"%Y%m%d_%H%M%S\"",
        "f\"{backup_type}_backup_{timestamp}.sql\"",
        "'backup'",
        "'base_dir'",
        "'database'",
        "'name'",
        "'database'",
        "'host'",
        "'database'",
        "'port'",
        "'database'",
        "'user'",
        "'database'",
        "'password'",
        "f\"Starting {backup_type} backup for database {db_name}\"",
        "'pg_dump'",
        "'-h'",
        "'-p'",
        "'-U'",
        "'-d'",
        "'-f'",
        "'PGPASSWORD'",
        "f\"Executing: {' '.join(pg_dump_cmd)}\"",
        "' '",
        "f\"Backup failed: {result.stderr}\"",
        "'backup'",
        "'compression'",
        "f\"{backup_path}.gz\"",
        "'gzip'",
        "'-f'",
        "f\"Compression failed: {compress_result.stderr}\"",
        "f\"Successful {backup_type} backup: {compressed_path} ({file_size:.2f} MB)\"",
        "f\"Backup error: {e}\"",
        "'rb'",
        "b\"\"",
        "f\"{filepath}.sha256\"",
        "'w'",
        "f\"Checksum generated: {checksum.hexdigest()}\"",
        "f\"Checksum generation failed: {e}\"",
        "'backup'",
        "'retention_days'",
        "'backup'",
        "'base_dir'",
        "f\"Rotating backups older than {retention_days} days\"",
        "f\"Removed old backup: {filename}\"",
        "f\"Error removing {filename}: {e}\"",
        "f\"Backup rotation error: {e}\"",
        "f\"Backup file not found: {backup_file}\"",
        "'database'",
        "'name'",
        "'database'",
        "'host'",
        "'database'",
        "'port'",
        "'database'",
        "'user'",
        "'database'",
        "'password'",
        "'.gz'",
        "'gunzip'",
        "'-c'",
        "'wb'",
        "f\"Decompression failed: {decompress_result.stderr}\"",
        "f\"Starting restoration of {db_name} from {backup_file}\"",
        "'psql'",
        "'-h'",
        "'-p'",
        "'-U'",
        "'-d'",
        "'postgres'",
        "'-c'",
        "f\"DROP DATABASE IF EXISTS {db_name};\"",
        "'psql'",
        "'-h'",
        "'-p'",
        "'-U'",
        "'-d'",
        "'postgres'",
        "'-c'",
        "f\"CREATE DATABASE {db_name};\"",
        "'PGPASSWORD'",
        "\"Dropping database if exists\"",
        "f\"Failed to drop database: {drop_result.stderr}\"",
        "\"Creating database\"",
        "f\"Failed to create database: {create_result.stderr}\"",
        "'psql'",
        "'-h'",
        "'-p'",
        "'-U'",
        "'-d'",
        "'-f'",
        "f\"Restoring from {temp_file}\"",
        "'.gz'",
        "f\"Removed temporary file {temp_file}\"",
        "f\"Restore failed: {restore_result.stderr}\"",
        "f\"Successfully restored database {db_name} from {backup_file}\"",
        "f\"Restore error: {e}\"",
        "'backup'",
        "'base_dir'",
        "'.sql'",
        "'.sql.gz'",
        "'.sha256'",
        "'unknown'",
        "'_backup_'",
        "'_backup_'",
        "'filename'",
        "'path'",
        "'size'",
        "'date'",
        "'type'",
        "'date'",
        "f\"Error listing backups: {e}\"",
        "'database'",
        "'name'",
        "f\"{original_db_name}_test\"",
        "'database'",
        "'name'",
        "'database'",
        "'host'",
        "'database'",
        "'port'",
        "'database'",
        "'user'",
        "'database'",
        "'password'",
        "'PGPASSWORD'",
        "'psql'",
        "'-h'",
        "'-p'",
        "'-U'",
        "'-d'",
        "'postgres'",
        "'-c'",
        "f\"DROP DATABASE IF EXISTS {test_db_name};\"",
        "f\"Dropping test database {test_db_name} if it exists\"",
        "f\"Failed to drop test database: {drop_result.stderr}\"",
        "'psql'",
        "'-h'",
        "'-p'",
        "'-U'",
        "'-d'",
        "'postgres'",
        "'-c'",
        "f\"CREATE DATABASE {test_db_name};\"",
        "f\"Creating test database {test_db_name}\"",
        "f\"Failed to create test database: {create_result.stderr}\"",
        "\"Creating test data\"",
        "'psql'",
        "'-h'",
        "'-p'",
        "'-U'",
        "'-d'",
        "'-c'",
        "\"CREATE TABLE test_table (id SERIAL PRIMARY KEY, data TEXT); INSERT INTO test_table (data) VALUES ('test1'), ('test2');\"",
        "f\"Failed to create test data: {data_result.stderr}\"",
        "\"Starting test backup\"",
        "'test'",
        "\"Backup test failed: Could not create backup\"",
        "\"Dropping test database for restore test\"",
        "f\"Failed to drop test database for restore test: {drop_result.stderr}\"",
        "\"Starting test restore\"",
        "\"Verifying restored data\"",
        "'psql'",
        "'-h'",
        "'-p'",
        "'-U'",
        "'-d'",
        "'-c'",
        "\"SELECT COUNT(*) FROM test_table;\"",
        "\"2\"",
        "\"Test backup and restore successful - verified test data\"",
        "\"Test restore failed - data verification failed\"",
        "\"Cleaning up test database\"",
        "f\"Failed to clean up test database: {cleanup_result.stderr}\"",
        "f\"Backup and restore test failed: {e}\"",
        "'database'",
        "'name'",
        "'DefiFundr PostgreSQL Backup Manager'",
        "'command'",
        "'backup'",
        "'restore'",
        "'list'",
        "'test'",
        "'Command to execute'",
        "'--type'",
        "'daily'",
        "'weekly'",
        "'monthly'",
        "'migration'",
        "'test'",
        "'daily'",
        "'Type of backup (for backup command)'",
        "'--file'",
        "'Backup file to restore (for restore command)'",
        "'--config'",
        "'Path to configuration file'",
        "'--verbose'",
        "'-v'",
        "'store_true'",
        "'Enable verbose output'",
        "'LOG_LEVEL'",
        "'DEBUG'",
        "'backup'",
        "f\"Backup created: {backup_file}\"",
        "'restore'",
        "\"No backups available\"",
        "\"Available backups:\"",
        "'size'",
        "'date'",
        "\"%Y-%m-%d %H:%M:%S\"",
        "f\"{i}. {backup['filename']} ({size_mb:.2f} MB) - {date_str} - Type: {backup['type']}\"",
        "'filename'",
        "'type'",
        "\"\\nEnter backup number to restore (or 0 to cancel): \"",
        "\"Restore canceled\"",
        "'path'",
        "\"Invalid selection\"",
        "\"Invalid input\"",
        "f\"Database restored successfully from {args.file}\"",
        "'list'",
        "\"No backups available\"",
        "\"Available backups:\"",
        "'size'",
        "'date'",
        "\"%Y-%m-%d %H:%M:%S\"",
        "f\"{i}. {backup['filename']} ({size_mb:.2f} MB) - {date_str} - Type: {backup['type']}\"",
        "'filename'",
        "'type'",
        "'test'",
        "\"Starting backup and restore test...\"",
        "\"Backup and restore test failed\"",
        "\"Backup and restore test completed successfully\"",
        "\"__main__\""
    ],
    "variables": [
        "config",
        "config",
        "conn_str",
        "pattern",
        "match",
        "user",
        "password",
        "host",
        "port",
        "dbname",
        "file_config",
        "config",
        "section",
        "log_file",
        "log_level_name",
        "log_level",
        "logger",
        "timestamp",
        "backup_filename",
        "backup_path",
        "db_name",
        "db_host",
        "db_port",
        "db_user",
        "db_password",
        "pg_dump_cmd",
        "env",
        "env",
        "result",
        "compressed_path",
        "compressed_path",
        "compress_result",
        "compressed_path",
        "checksum",
        "file_size",
        "checksum",
        "checksum_file",
        "retention_days",
        "cutoff_date",
        "backup_dir",
        "filepath",
        "file_modified",
        "db_name",
        "db_host",
        "db_port",
        "db_user",
        "db_password",
        "temp_file",
        "temp_file",
        "decompress_command",
        "decompress_result",
        "drop_db_cmd",
        "create_db_cmd",
        "env",
        "env",
        "drop_result",
        "create_result",
        "restore_cmd",
        "restore_result",
        "backup_dir",
        "backups",
        "filepath",
        "file_size",
        "file_date",
        "backup_type",
        "backup_type",
        "original_db_name",
        "test_db_name",
        "db_host",
        "db_port",
        "db_user",
        "db_password",
        "env",
        "env",
        "drop_cmd",
        "drop_result",
        "create_cmd",
        "create_result",
        "test_data_cmd",
        "data_result",
        "backup_file",
        "drop_result",
        "restore_result",
        "verify_cmd",
        "verify_result",
        "success",
        "success",
        "success",
        "cleanup_result",
        "parser",
        "args",
        "backup_manager",
        "backup_file",
        "backups",
        "size_mb",
        "date_str",
        "choice",
        "args",
        "file",
        "success",
        "backups",
        "size_mb",
        "date_str",
        "success"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "Load configuration from environment variables or config file",
        "Setup logging",
        "Ensure backup directory exists",
        "Parse connection string",
        "Try to load from config file if specified",
        "Deep merge configs",
        "Ensure log directory exists",
        "Configure logging",
        "Generate unique backup filename",
        "Full path for backup",
        "Get database details",
        "Log backup start",
        "Build pg_dump command",
        "Execute backup command",
        "Check backup success",
        "Optional compression",
        "Generate checksum",
        "Log successful backup",
        "Size in MB",
        "Rotate backups",
        "Store checksum in a separate file",
        "Skip if not a file",
        "Get file modification time",
        "Remove backups older than retention period",
        "Check if backup file exists",
        "Get database details",
        "Work with compressed or uncompressed file",
        "Create a temporary uncompressed file",
        "For a clean restore, drop and recreate the database",
        "Connect to postgres database to drop/create target database",
        "Connect to default postgres database",
        "Connect to default postgres database",
        "Environment with password",
        "Restore from the backup file",
        "Clean up temp file if we decompressed",
        "Check restore success",
        "Skip if not a backup file",
        "Skip checksum files",
        "Get file details",
        "Extract backup type from filename",
        "Sort by date (newest first)",
        "Save original DB name",
        "Use a test database name",
        "Get database details",
        "Environment with password",
        "Drop test database if it exists",
        "Connect to default postgres database",
        "Create test database",
        "Connect to default postgres database",
        "Create a simple test table and data",
        "Perform backup",
        "Drop test database",
        "Perform restore",
        "Verify test data",
        "Clean up test database",
        "Restore original database name",
        "Main commands",
        "Backup options",
        "Restore options",
        "Config option",
        "Verbosity",
        "Parse arguments",
        "Set environment variable for logging level",
        "Create backup manager",
        "Execute command"
    ],
    "docstrings": [
        "\"\"\"\n        Initialize backup manager with configuration\n        \n        Config can be provided via file or environment variables\n        \"\"\"",
        "\"\"\"Load configuration from file or environment variables\"\"\"",
        "\"\"\"Configure logging for backup process\"\"\"",
        "\"\"\"\n        Perform database backup\n        \n        :param backup_type: Type of backup (daily, weekly, migration, test)\n        :return: Backup file path or None if backup fails\n        \"\"\"",
        "\"\"\"\n        Generate SHA-256 checksum for backup file\n        \n        :param filepath: Path to backup file\n        :return: Checksum string\n        \"\"\"",
        "\"\"\"\n        Remove old backups based on retention policy\n        \"\"\"",
        "\"\"\"\n        Restore database from a backup file\n        \n        :param backup_file: Path to backup file to restore\n        :return: Boolean indicating success\n        \"\"\"",
        "\"\"\"\n        List all available backups\n        \n        :return: List of backup files with details\n        \"\"\"",
        "\"\"\"\n        Test backup and restore functionality using a test database\n        \n        :return: Boolean indicating test success\n        \"\"\"",
        "\"\"\"\n    Main entry point for backup script\n    \"\"\""
    ],
    "functions": [
        "_load_config",
        "_setup_logging",
        "perform_backup",
        "_generate_checksum",
        "_rotate_backups",
        "restore_backup",
        "list_backups",
        "test_backup_and_restore",
        "main"
    ],
    "classes": [
        "PostgresBackupManager"
    ]
}