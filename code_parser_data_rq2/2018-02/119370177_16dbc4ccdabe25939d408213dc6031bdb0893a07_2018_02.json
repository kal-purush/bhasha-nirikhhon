{
    "identifiers": [
        "math",
        "re",
        "sys",
        "argparse",
        "argparse",
        "ArgumentParser",
        "description",
        "desc",
        "parser",
        "add_argument",
        "dest",
        "help",
        "parser",
        "add_argument",
        "dest",
        "help",
        "parser",
        "add_argument",
        "dest",
        "help",
        "parser",
        "add_argument",
        "dest",
        "help",
        "parser",
        "add_argument",
        "dest",
        "help",
        "parser",
        "add_argument",
        "dest",
        "help",
        "parser",
        "add_argument",
        "dest",
        "help",
        "parser",
        "add_argument",
        "dest",
        "help",
        "parser",
        "add_argument",
        "dest",
        "help",
        "parser",
        "parse_args",
        "T",
        "B",
        "U",
        "N",
        "charge",
        "T",
        "B",
        "U",
        "B",
        "charge",
        "math",
        "pi",
        "a0",
        "N",
        "R",
        "B",
        "S",
        "t",
        "u",
        "denom",
        "math",
        "log",
        "t",
        "t",
        "t",
        "math",
        "log",
        "t",
        "t",
        "x1",
        "x2",
        "x3",
        "sigma_BEB",
        "B",
        "n",
        "l",
        "B",
        "R",
        "n",
        "l",
        "Ur",
        "Ur",
        "Ur",
        "Ur",
        "l",
        "Ur",
        "Ur",
        "Ur",
        "Ur",
        "Anl",
        "ANG2BOHR",
        "B",
        "n",
        "l",
        "B",
        "R",
        "n",
        "l",
        "Ur",
        "Ur",
        "Ur",
        "Ur",
        "l",
        "Ur",
        "Ur",
        "Ur",
        "Ur",
        "Bnl",
        "ANG2BOHR",
        "T",
        "B",
        "n",
        "l",
        "N",
        "talukder_Anl",
        "B",
        "n",
        "l",
        "talukder_Bnl",
        "B",
        "n",
        "l",
        "Anl",
        "math",
        "log",
        "T",
        "B",
        "Bnl",
        "B",
        "T",
        "sigma",
        "B",
        "N",
        "T",
        "infile",
        "E_orb",
        "Ekin_orb",
        "re",
        "compile",
        "dec",
        "dec",
        "open",
        "infile",
        "f",
        "line",
        "f",
        "line",
        "start_line",
        "reg",
        "search",
        "line",
        "res",
        "read",
        "E_orb",
        "append",
        "line",
        "split",
        "Ekin_orb",
        "append",
        "line",
        "split",
        "E_orb",
        "Ekin_orb",
        "read_cmd",
        "opts",
        "inp_file",
        "opts",
        "B",
        "opts",
        "U",
        "help_me",
        "sys",
        "exit",
        "opts",
        "inp_file",
        "parse_gaussian",
        "opts",
        "inp_file",
        "Eorb",
        "Ekin",
        "Eorb",
        "append",
        "opts",
        "B",
        "AU2EV",
        "Ekin",
        "append",
        "opts",
        "U",
        "AU2EV",
        "opts",
        "N",
        "opts",
        "T",
        "Ts",
        "append",
        "opts",
        "T",
        "AU2EV",
        "x",
        "AU2EV",
        "x",
        "Eorb",
        "AU2EV",
        "opts",
        "Tmax",
        "t",
        "Ts",
        "opts",
        "n",
        "opts",
        "l",
        "opts",
        "n",
        "opts",
        "l",
        "i",
        "len",
        "Eorb",
        "Eorb",
        "i",
        "t",
        "opts",
        "model",
        "bep_cross_section",
        "t",
        "Eorb",
        "i",
        "Ekin",
        "i",
        "N",
        "charge",
        "opts",
        "model",
        "talukder_cross_section",
        "t",
        "Eorb",
        "i",
        "n",
        "l",
        "N",
        "help",
        "sys",
        "exit",
        "sigma",
        "append",
        "s",
        "ANG2BOHR",
        "ANG2BOHR",
        "total_sigma",
        "sigma",
        "t",
        "AU2EV",
        "total_sigma",
        "join",
        "s",
        "s",
        "sigma"
    ],
    "literals": [
        "\"Binary Encounter Bethe (BEB) model:\\n   \\\n         electron impact photoionization cross section from first principles\"",
        "\"-i\"",
        "\"--input_file\"",
        "\"inp_file\"",
        "\"Gaussian output file with MO parameters.\"",
        "\"-m\"",
        "\"--model\"",
        "\"inp_file\"",
        "\"bep\"",
        "\"Which model? (bep|talukder).\"",
        "\"-U\"",
        "\"U\"",
        "\"electron orbital kinetic energy [ev]\"",
        "\"--Tmax\"",
        "\"Tmax\"",
        "\"maximum kin. energy of ionizing electron [ev]\"",
        "\"-T\"",
        "\"T\"",
        "\"kinetic energy [ev] of the ionizing electron\"",
        "\"-B\"",
        "\"B\"",
        "\"electron binding energy [ev]\"",
        "\"-N\"",
        "\"N\"",
        "\"number of eletrons in the orbital\"",
        "\"-n\"",
        "\"n\"",
        "\"Talukder model, principal quantum number\"",
        "\"-l\"",
        "\"l\"",
        "\"Talukder model, azimuthal quantum number\"",
        "' Orbital energies and kinetic energies (alpha):\\n'",
        "r' +-?\\d+\\.\\d+'",
        "r'^ +[0-9]+ +O'",
        "r'$'",
        "\"r\"",
        "\"# MO binding energies read from G09 output\"",
        "\"#\"",
        "\"# MO kinetic energies read from G09 output\"",
        "\"#\"",
        "\"__main__\"",
        "\"Use \\\"-h\\\" to get help\"",
        "\"ERROR: You did not provide Gaussian output file as a parameter\"",
        "\"Alternatively, you should provide B and U parameters\"",
        "\"# Incident electron energy [eV] | Total Sigma | Sigmas [Angstrom^2] (core electrons first)\"",
        "\"bep\"",
        "\"talukder\"",
        "\"ERROR: Invalid model!\"",
        "\" \""
    ],
    "variables": [
        "AU2EV",
        "ANG2BOHR",
        "desc",
        "parser",
        "a0",
        "R",
        "t",
        "u",
        "denom",
        "denom",
        "S",
        "x1",
        "x2",
        "x3",
        "sigma_BEB",
        "R",
        "Ur",
        "Anl",
        "Anl",
        "Anl",
        "Anl",
        "R",
        "Ur",
        "Bnl",
        "Bnl",
        "Bnl",
        "Bnl",
        "Anl",
        "Bnl",
        "sigma",
        "start_line",
        "dec",
        "reg",
        "read",
        "read",
        "res",
        "help_me",
        "opts",
        "Ekin",
        "Eorb",
        "N",
        "charge",
        "Ts",
        "Ts",
        "sigma",
        "total_sigma",
        "n",
        "l",
        "n",
        "l",
        "s",
        "s",
        "s"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "Implementation of BEP model, see:",
        "Binary-encounter-dipole model for electron-impact ionization",
        "Kim, Yong Ki, Rudd, M. Eugene Phys Rev A, 1994, 5, 3954-3967",
        "Cross sections for K-shell ionization of atoms by electron impact",
        "Santos, J P, Parente, F, Kim, Y-k, Journal of Physics B: Atomic, Molecular and Optical Physics, 2003",
        "WARNING: Currrent implementation works only for closed shell molecules!",
        "A very simple model from Talukder et al is alson implemented",
        "Empirical model for electron impact ionization cross sections",
        "M.R. Talukder et al The European Physical Journal D 46, 281-287, 2008",
        "Bohr radius [au]",
        "Rydberg energy [au]",
        "modification for singly charged ions, see",
        "Electron-Impact lonization Cross Sections for Polyatomic Molecules, Radicals, and Ions",
        "Kim, Yong-Ki,Irikura, Karl K",
        "Section 2.2",
        "Rydberg energy in Atomic units",
        "Convert from cm**2 to atomic units",
        "Rydberg energy in Atomic units",
        "Convert from cm**2 to atomic units",
        "for n in range(1,8):",
        "for l in range(n):",
        "for i in range(2*l+1):",
        "print(\"n l \",n,l)",
        "This needs to be matched",
        "Orbital energies and kinetic energies (alpha):",
        "1         O               -19.001985         29.005918",
        "regex matching decimal numbers",
        "This is because of false positives in the beginning of log file",
        "i.e. we do not want to match oxygen atom in Z-matrix",
        "Print the parsed value for the user to check",
        "Let's try H2+",
        "B = 30 / AU2EV",
        "U = 16.4 / AU2EV",
        "N = 1",
        "charge = +1",
        "neutral H2",
        "B = 15.43 / AU2EV",
        "U = 15.98 / AU2EV",
        "N = 2",
        "charge = 0",
        "Calculate cross sections for these incident kinetic energies",
        "For now, let's just go to 1000 eV",
        "Iterate over orbitals"
    ],
    "docstrings": [
        "\"\"\"Reading from command line\"\"\"",
        "\"\"\"Calculates electron impact ionization cross section for a given MO.\n      Input params should be in atomic units!\n      T = kinetic energy of ionizing electron\n      B = electron binding energy (VIE)\n      U = orbital kinetic energy\n      N = electron occupation number of a given orbital\"\"\"",
        "\"\"\"Implements equations 3 on page 282\n   B = ionization energy\n   n principal quantum number\n   l = azimuthal quantum number\"\"\"",
        "\"\"\"Implements equations 3 on page 282\n   B = ionization energy\n   n principal quantum number\n   l = azimuthal quantum number\"\"\"",
        "\"\"\"Calculates electron impact ionization cross section for a given MO.\n   based on simple model of Talukder et al\n   Input params should be in atomic units!\n      T = kinetic energy of ionizing electron\n      B = electron binding energies of atomic orbitals (VIE)\n      N = electron occupation number of a given orbital\"\"\"",
        "\"\"\"Parses Gaussian output and extracts\n      MO binding energies and MO kinetic energies\"\"\""
    ],
    "functions": [
        "read_cmd",
        "bep_cross_section",
        "talukder_Anl",
        "talukder_Bnl",
        "talukder_cross_section",
        "parse_gaussian"
    ],
    "classes": []
}