{
    "identifiers": [
        "java",
        "util",
        "PriorityQueue",
        "BITS_PER_WORD",
        "BITS_PER_INT",
        "ALPH_SIZE",
        "BITS_PER_WORD",
        "PSEUDO_EOF",
        "ALPH_SIZE",
        "HUFF_NUMBER",
        "HUFF_TREE",
        "HUFF_NUMBER",
        "HUFF_COUNTS",
        "HUFF_NUMBER",
        "Header",
        "TREE_HEADER",
        "COUNT_HEADER",
        "myHeader",
        "Header",
        "TREE_HEADER",
        "counts",
        "readForCounts",
        "root",
        "makeTreeFromCounts",
        "counts",
        "codings",
        "makeCodingsFromTree",
        "root",
        "writeHeader",
        "root",
        "reset",
        "writeCompressedBits",
        "codings",
        "codings",
        "root",
        "writeBits",
        "HUFF_NUMBER",
        "visit",
        "root",
        "root",
        "root",
        "root",
        "myLeft",
        "root",
        "myRight",
        "writeBits",
        "writeBits",
        "root",
        "myValue",
        "writeBits",
        "visit",
        "root",
        "myLeft",
        "visit",
        "root",
        "myRight",
        "root",
        "ret",
        "helperMethod",
        "root",
        "ret",
        "ret",
        "root",
        "num",
        "b",
        "root",
        "root",
        "myLeft",
        "root",
        "myRight",
        "b",
        "root",
        "myValue",
        "num",
        "helperMethod",
        "root",
        "myLeft",
        "num",
        "b",
        "helperMethod",
        "root",
        "myRight",
        "num",
        "b",
        "counts",
        "pq",
        "k",
        "k",
        "counts",
        "length",
        "k",
        "pq",
        "add",
        "k",
        "counts",
        "k",
        "pq",
        "add",
        "PSEUDO_EOF",
        "pq",
        "size",
        "left",
        "pq",
        "remove",
        "right",
        "pq",
        "remove",
        "pq",
        "add",
        "left",
        "myWeight",
        "right",
        "myWeight",
        "left",
        "right",
        "root",
        "pq",
        "remove",
        "root",
        "ret",
        "num",
        "readBits",
        "num",
        "ret",
        "num",
        "num",
        "readBits",
        "ret",
        "id",
        "readBits",
        "BITS_PER_INT",
        "id",
        "HUFF_NUMBER",
        "id",
        "HUFF_TREE",
        "root",
        "readTreeHeader",
        "readCompressedBits",
        "root",
        "root",
        "current",
        "root",
        "bit",
        "readBits",
        "bit",
        "bit",
        "current",
        "current",
        "myLeft",
        "current",
        "current",
        "myRight",
        "current",
        "myLeft",
        "current",
        "myRight",
        "current",
        "myValue",
        "PSEUDO_EOF",
        "writeBits",
        "current",
        "myValue",
        "current",
        "root",
        "bit",
        "readBits",
        "t",
        "flag",
        "readBits",
        "flag",
        "t",
        "myLeft",
        "readTreeHeader",
        "t",
        "myRight",
        "readTreeHeader",
        "t",
        "t",
        "myValue",
        "readBits",
        "t",
        "header",
        "myHeader",
        "header",
        "myHeader"
    ],
    "literals": [
        "\"\"",
        "\"0\"",
        "\"1\"",
        "\"bad input, no PSEUDO_EOF\"",
        "\"header set to \""
    ],
    "variables": [],
    "comments": [
        "or 256"
    ],
    "docstrings": [
        "* Interface that all compression suites must implement. That is they must be\n * able to compress a file and also reverse/decompress that process.\n * \n * @author Brian Lavallee\n * @since 5 November 2015\n * @author Owen Atrachan\n * @since December 1, 2016",
        "* Compresses a file. Process must be reversible and loss-less.\n\t *\n\t * @param in\n\t *            Buffered bit stream of the file to be compressed.\n\t * @param out\n\t *            Buffered bit stream writing to the output file.",
        "* Decompresses a file. Output file must be identical bit-by-bit to the\n\t * original.\n\t *\n\t * @param in\n\t *            Buffered bit stream of the file to be decompressed.\n\t * @param out\n\t *            Buffered bit stream writing to the output file."
    ],
    "functions": [
        "compress",
        "writeCompressedBits",
        "writeHeader",
        "visit",
        "makeCodingsFromTree",
        "helperMethod",
        "TreeNode",
        "makeTreeFromCounts",
        "readForCounts",
        "decompress",
        "readCompressedBits",
        "TreeNode",
        "readTreeHeader",
        "setHeader"
    ],
    "classes": [
        "HuffProcessor"
    ]
}