{
    "identifiers": [
        "matplotlib",
        "pyplot",
        "plt",
        "math",
        "cos",
        "sin",
        "radians",
        "sqrt",
        "vo",
        "ang",
        "dt",
        "N",
        "vo",
        "cos",
        "radians",
        "ang",
        "vo",
        "sin",
        "radians",
        "ang",
        "i",
        "N",
        "vx",
        "append",
        "vx",
        "i",
        "vy",
        "append",
        "vy",
        "i",
        "g",
        "dt",
        "x",
        "append",
        "x",
        "i",
        "vx",
        "i",
        "dt",
        "y",
        "append",
        "y",
        "i",
        "vy",
        "i",
        "dt",
        "t",
        "append",
        "t",
        "i",
        "dt",
        "y",
        "i",
        "x",
        "y",
        "vx",
        "vy",
        "t",
        "cap",
        "vo",
        "ang",
        "dt",
        "rho",
        "A",
        "C",
        "m",
        "N",
        "vo",
        "cos",
        "radians",
        "ang",
        "vo",
        "sin",
        "radians",
        "ang",
        "i",
        "N",
        "sqrt",
        "vx",
        "i",
        "vx",
        "i",
        "vy",
        "i",
        "vy",
        "i",
        "C",
        "rho",
        "A",
        "v",
        "v",
        "m",
        "a_D",
        "cos",
        "radians",
        "ang",
        "a_D",
        "sin",
        "radians",
        "ang",
        "vx",
        "append",
        "vx",
        "i",
        "a_Dx",
        "dt",
        "vy",
        "append",
        "vy",
        "i",
        "g",
        "dt",
        "a_Dy",
        "dt",
        "x",
        "append",
        "x",
        "i",
        "vx",
        "i",
        "dt",
        "y",
        "append",
        "y",
        "i",
        "vy",
        "i",
        "dt",
        "t",
        "append",
        "t",
        "i",
        "dt",
        "y",
        "i",
        "x",
        "y",
        "vx",
        "vy",
        "t",
        "cap",
        "x",
        "y",
        "vx",
        "vy",
        "t",
        "cap",
        "plt",
        "figure",
        "fig1",
        "suptitle",
        "cap",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "plot",
        "x",
        "y",
        "plt",
        "show",
        "shell_calc_drag",
        "vo",
        "ang",
        "dt",
        "rho",
        "A",
        "C",
        "m",
        "N",
        "shell_plot",
        "t_x",
        "t_y",
        "t_vx",
        "t_vy",
        "t_t",
        "title"
    ],
    "literals": [
        "\"Cannon Shell with no drag\"",
        "\"Cannon Shell with drag\"",
        "\"x-trajectory\"",
        "\"y-trajectory\""
    ],
    "variables": [
        "g",
        "vx",
        "vy",
        "x",
        "y",
        "t",
        "cap",
        "vx",
        "vy",
        "x",
        "y",
        "t",
        "v",
        "a_D",
        "a_Dx",
        "a_Dy",
        "cap",
        "fig1",
        "t_x",
        "t_y",
        "t_vx",
        "t_vy",
        "t_t",
        "title"
    ],
    "comments": [
        "File: BicycleCalc.py",
        "Author: Nawaf Abdullah",
        "Creation Date: 4/Feb/2018",
        "Description: Calculates and plots the trajectory of a cannon shell",
        "Parameters Definitions:",
        "vo  = initial velocity",
        "ang = launch angle",
        "dt  = time steps",
        "rho = density of air",
        "A   = frontal surface area",
        "C   = Drag coefficient",
        "m   = mass of object",
        "N   = Number of time steps",
        "Earth gravitational constant:",
        "Calculates shell trajectory with no drag",
        "Calculates shell trajectory with drag",
        "TODO: figure out what is making the projectile move to the left and fix it",
        "plot x vs y trajectory",
        "TODO: add velocity vs time plots",
        "fig2 = plt.figure(2)",
        "fig2.suptitle(\"Velocity components vs time\")",
        "plt.subplot(211)",
        "plt.plot(vx, t)",
        "plt.subplot(212)",
        "plt.plot(vy, t)",
        "plt.show()",
        "main",
        "t_x, t_y, t_vx, t_vy, t_t, title = shell_calc_nodrag(vo=700, ang=45, dt=0.1, N=2000)"
    ],
    "docstrings": [],
    "functions": [
        "shell_calc_nodrag",
        "shell_calc_drag",
        "shell_plot"
    ],
    "classes": []
}