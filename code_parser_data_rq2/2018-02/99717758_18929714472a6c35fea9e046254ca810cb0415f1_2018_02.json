{
    "identifiers": [
        "org",
        "openstreetmap",
        "atlas",
        "geography",
        "atlas",
        "raw",
        "sectioning",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Optional",
        "java",
        "util",
        "org",
        "openstreetmap",
        "atlas",
        "geography",
        "Location",
        "org",
        "openstreetmap",
        "atlas",
        "geography",
        "atlas",
        "items",
        "Edge",
        "org",
        "openstreetmap",
        "atlas",
        "geography",
        "atlas",
        "raw",
        "slicing",
        "temporary",
        "TemporaryNode",
        "nodes",
        "node",
        "nodes",
        "put",
        "node",
        "location",
        "node",
        "nodes",
        "keySet",
        "node",
        "getLocation",
        "equals",
        "location",
        "Optional",
        "of",
        "node",
        "Optional",
        "empty",
        "nodes",
        "keySet",
        "node",
        "nodes",
        "get",
        "node",
        "node",
        "nodes",
        "containsKey",
        "node",
        "oldOccurence",
        "nodes",
        "get",
        "node",
        "nodes",
        "put",
        "node",
        "oldOccurence",
        "nodes",
        "size"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "Mapping of node to occurrence"
    ],
    "docstrings": [
        "* Keeps track of all {@link TemporaryNode}s created for an atlas {@link Edge} and the occurrence of\n * it in the underlying polyline. This is used specifically for raw atlas way-sectioning.\n *\n * @author mgostintsev",
        "* Adds the given {@link TemporaryNode} to the store\n     *\n     * @param node\n     *            The {@link TemporaryNode} to add",
        "* Get the {@link TemporaryNode} at this {@link Location}.\n     *\n     * @param location\n     *            The target {@link Location}\n     * @return an {@link Optional} containing the {@link TemporaryNode}",
        "* @return all the stored {@link TemporaryNode}s",
        "* @param node\n     *            The {@link TemporaryNode} whose occurrence we want\n     * @return the occurrence for the given {@link TemporaryNode}",
        "* Increments the occurrence for the given {@link TemporaryNode}\n     *\n     * @param node\n     *            The {@link TemporaryNode} to increment",
        "* @return the total number of stored {@link TemporaryNode}s"
    ],
    "functions": [
        "addNode",
        "getNode",
        "getNodes",
        "getOccurrence",
        "incrementOccurrence",
        "size"
    ],
    "classes": [
        "NodeOccurrenceCounter"
    ]
}