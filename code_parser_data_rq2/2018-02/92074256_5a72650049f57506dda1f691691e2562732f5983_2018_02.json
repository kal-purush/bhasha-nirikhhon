{
    "identifiers": [
        "tsutils",
        "ts",
        "Checker",
        "ErrorCode",
        "AbstractRule",
        "AbstractRule",
        "ErrorCode",
        "checker",
        "checker",
        "ts",
        "checkForTruthy",
        "checker",
        "node",
        "ts",
        "checker",
        "tsutils",
        "node",
        "node",
        "getLeftmostNode",
        "tc",
        "node",
        "ts",
        "expectCallNode",
        "checker",
        "expectCallNode",
        "signature",
        "tc",
        "signature",
        "symbol",
        "symbol",
        "expectCallNode",
        "tsutils",
        "tc",
        "expectCallNode",
        "tsutils",
        "expectCallNode",
        "tc",
        "expectCallNode",
        "checker",
        "node",
        "tc",
        "argType",
        "tc",
        "ts",
        "node",
        "ts",
        "ts",
        "ts",
        "current",
        "current",
        "current",
        "current"
    ],
    "literals": [
        "'tsutils'",
        "'typescript'",
        "'../checker'",
        "'../error_code'",
        "'../rule'",
        "'ban-expect-truthy-promise'",
        "'toBeTruthy'",
        "'Matchers'",
        "'expect'",
        "Value passed to expect() is of type ${tc.typeToString(argType)}, which",
        "is thenable. Promises are always truthy. Either use toBe(true) or",
        "await the value.",
        "\\n\\tSee http://tsetse.info/ban-expect-truthy-promise"
    ],
    "variables": [
        "tc",
        "expectCallNode",
        "signature",
        "symbol",
        "argType",
        "current",
        "node"
    ],
    "comments": [
        "Only look for methods named expect that return a Matchers"
    ],
    "docstrings": [
        "* @fileoverview Bans expect(returnsPromise()).toBeTruthy(). Promises are always\n * truthy, and this pattern is likely to be a bug where the developer meant\n * expect(await returnsPromise()).toBeTruthy() and forgot the await."
    ],
    "functions": [
        "register",
        "checkForTruthy",
        "getLeftmostNode"
    ],
    "classes": [
        "Rule"
    ]
}