{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "express",
        "require",
        "app",
        "app",
        "app",
        "expressServer",
        "port",
        "app",
        "express",
        "path",
        "__dirname",
        "WebSocket",
        "require",
        "dgram",
        "require",
        "fps",
        "ticker",
        "framerate",
        "framerate",
        "client",
        "messageBuffer",
        "messageBuffer",
        "PORT",
        "HOST",
        "err",
        "err",
        "err",
        "first",
        "first",
        "wss",
        "connection",
        "ws",
        "ws",
        "incoming",
        "message",
        "messageBuffer",
        "getBufferFromMessage",
        "message",
        "first",
        "first",
        "sendAsap",
        "theMessage",
        "Buffer",
        "theMessage"
    ],
    "literals": [
        "'express'",
        "'http'",
        "'url'",
        "'ws'",
        "'path'",
        "'port'",
        "'port'",
        "'Magic happens on port '",
        "'public'",
        "'10.0.0.161'",
        "'dgram'",
        "'udp4'",
        "'fps'",
        "'data'",
        "\"framerate is: %f\"",
        "'connection'",
        "'message'"
    ],
    "variables": [
        "express",
        "http",
        "url",
        "WebSocket",
        "app",
        "path",
        "expressServer",
        "port",
        "wss",
        "PORT",
        "HOST",
        "dgram",
        "client",
        "fps",
        "ticker"
    ],
    "comments": [
        "Define the port to run on",
        "Listen for requests",
        "'192.168.0.102'; //'192.168.1.147' //192.168.4.1';",
        "update every 10 frames",
        "messageLength = (maxNumLights*3 + 3)*8;",
        "console.log(messageBuffer);",
        "console.log('UDP message sent to ' + HOST +':'+ PORT + ' of size: ' + messageLength);",
        "sendAsap();",
        "ticker.tick();",
        "console.log('UDP message sent to ' + HOST +':'+ PORT);",
        "console.log('message length: ' + message.length);",
        "console.log(message);",
        "arrayOfNumbers = theMessage.split(\",\").map(Number);\n\tvar correctedArray = new Array();\n\tfor (var i = 0;  i < arrayOfNumbers.length; i++) {\n\t\t//console.log(i);\n\t\tswitch (i%3){\n\t\t\tcase 0:\n\t\t\t\tcorrectedArray[i+4] = arrayOfNumbers[i]; //+1+4\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tcorrectedArray[i+2] = arrayOfNumbers[i]; // -1+4\n\t\t\t\t//console.log(i);\n\t\t\t\t//console.log(i % 3);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tcorrectedArray[i+3] = arrayOfNumbers[i];\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn Buffer.from(correctedArray);"
    ],
    "docstrings": [],
    "functions": [
        "sendAsap",
        "getBufferFromMessage"
    ],
    "classes": []
}