{
    "identifiers": [
        "sys",
        "line",
        "symbolPos",
        "line",
        "line",
        "symbols",
        "symbols",
        "line",
        "line",
        "isdigit",
        "line",
        "symbolPos",
        "symbolPos",
        "symbolPos",
        "bin",
        "n",
        "zfill",
        "re",
        "add",
        "re",
        "line",
        "line",
        "find",
        "line",
        "find",
        "equals",
        "semiCol",
        "computations",
        "line",
        "equals",
        "semiCol",
        "destinations",
        "line",
        "equals",
        "computations",
        "line",
        "equals",
        "equals",
        "semiCol",
        "jumps",
        "line",
        "semiCol",
        "computations",
        "line",
        "semiCol",
        "destinations",
        "line",
        "equals",
        "jumps",
        "line",
        "semiCol",
        "computations",
        "line",
        "equals",
        "semiCol",
        "re",
        "computation",
        "re",
        "destination",
        "re",
        "jmp",
        "re",
        "re",
        "sys",
        "argv",
        "fileName",
        "open",
        "fileName",
        "line",
        "inFile",
        "line",
        "replace",
        "strip",
        "len",
        "line",
        "line",
        "find",
        "n",
        "n",
        "line",
        "line",
        "n",
        "line",
        "line",
        "len",
        "line",
        "line",
        "len",
        "line",
        "lineNum",
        "instructions",
        "append",
        "line",
        "lineNum",
        "instructions",
        "len",
        "instructions",
        "lineNum",
        "fileName",
        "rfind",
        "fileName",
        "period",
        "outFileName",
        "open",
        "outFileName",
        "instruction",
        "instructions",
        "instruction",
        "convertA",
        "instruction",
        "convertC",
        "instruction",
        "outFile",
        "write",
        "binaryInstruction"
    ],
    "literals": [
        "\"0\"",
        "\"0\"",
        "\"0101010\"",
        "\"1\"",
        "\"0111111\"",
        "\"-1\"",
        "\"0111010\"",
        "\"D\"",
        "\"0001100\"",
        "\"A\"",
        "\"0110000\"",
        "\"!D\"",
        "\"0001101\"",
        "\"!A\"",
        "\"0110001\"",
        "\"-D\"",
        "\"0001111\"",
        "\"-A\"",
        "\"0110011\"",
        "\"D+1\"",
        "\"0011111\"",
        "\"A+1\"",
        "\"0110111\"",
        "\"D-1\"",
        "\"0001110\"",
        "\"A-1\"",
        "\"0110010\"",
        "\"D+A\"",
        "\"0000010\"",
        "\"D-1\"",
        "\"0001110\"",
        "\"A-D\"",
        "\"0000111\"",
        "\"D&A\"",
        "\"0000000\"",
        "\"D|A\"",
        "\"0010101\"",
        "\"M\"",
        "\"1110000\"",
        "\"!M\"",
        "\"1110001\"",
        "\"-M\"",
        "\"1110011\"",
        "\"M+1\"",
        "\"1110111\"",
        "\"M-1\"",
        "\"1110010\"",
        "\"D+M\"",
        "\"1000010\"",
        "\"M-D\"",
        "\"1000111\"",
        "\"D-M\"",
        "\"1010011\"",
        "\"D&M\"",
        "\"1000000\"",
        "\"D|M\"",
        "\"1010101\"",
        "\"null\"",
        "\"000\"",
        "\"M\"",
        "\"001\"",
        "\"D\"",
        "\"010\"",
        "\"MD\"",
        "\"011\"",
        "\"A\"",
        "\"100\"",
        "\"AM\"",
        "\"101\"",
        "\"AD\"",
        "\"110\"",
        "\"AMD\"",
        "\"111\"",
        "\"null\"",
        "\"000\"",
        "\"JGT\"",
        "\"001\"",
        "\"JEQ\"",
        "\"010\"",
        "\"JGE\"",
        "\"011\"",
        "\"JLT\"",
        "\"100\"",
        "\"JNE\"",
        "\"101\"",
        "\"JLE\"",
        "\"110\"",
        "\"JMP\"",
        "\"111\"",
        "\"111\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"=\"",
        "\";\"",
        "\"000\"",
        "\"000\"",
        "\"000\"",
        "\"000\"",
        "'r'",
        "'R0'",
        "'R1'",
        "'R2'",
        "'R3'",
        "'R4'",
        "'R5'",
        "'R6'",
        "'R7'",
        "'R8'",
        "'R9'",
        "'R10'",
        "'R11'",
        "'R12'",
        "'R13'",
        "'R14'",
        "'R15'",
        "'SP'",
        "'LCL'",
        "'ARG'",
        "'THIS'",
        "'THAT'",
        "'SCREEN'",
        "'KBD'",
        "\" \"",
        "\"\"",
        "'\\t\\n\\r'",
        "\"//\"",
        "'('",
        "')'",
        "\".\"",
        "\"_ps.hack\"",
        "'w'",
        "'@'",
        "\"\\n\"",
        "\"We did it!\""
    ],
    "variables": [
        "re",
        "line",
        "n",
        "n",
        "symbols",
        "line",
        "n",
        "add",
        "computations",
        "destinations",
        "jumps",
        "re",
        "computation",
        "destination",
        "jmp",
        "equals",
        "semiCol",
        "destination",
        "jmp",
        "computation",
        "destination",
        "jmp",
        "computation",
        "destination",
        "jmp",
        "computation",
        "destination",
        "jmp",
        "computation",
        "fileName",
        "inFile",
        "instructions",
        "symbolPos",
        "symbols",
        "lineNum",
        "line",
        "n",
        "line",
        "line",
        "symbols",
        "period",
        "outFileName",
        "outFile",
        "binaryInstruction",
        "binaryInstruction",
        "binaryInstruction"
    ],
    "comments": [
        "---- Start Functions ----#",
        "some funcs - some cool functionscat",
        "'a' in symbol \t\t==== is a a key in symbols",
        "string.isdigit()\t\t==== is string only number",
        "convert number to 15 bit address",
        "print re",
        "HOPE THIS IS ALL CORRECT!",
        "111cCCCCCCDDDJJJ",
        "---- End Functions ---- #",
        "instructions.append(\"Blank first instruction for index?\")",
        "removes whitespaces",
        "print \"Line is comment\"",
        "print \"Line has no comments: \", line,",
        "print \"Line has comment: \", line[:n]",
        "print line[1:len(line)-1], \" is a label @ \",lineNum+1",
        "print line, lineNum",
        "print lineNum, \" instructions\"",
        "print \"\\n\""
    ],
    "docstrings": [],
    "functions": [
        "convertA",
        "convertC"
    ],
    "classes": []
}