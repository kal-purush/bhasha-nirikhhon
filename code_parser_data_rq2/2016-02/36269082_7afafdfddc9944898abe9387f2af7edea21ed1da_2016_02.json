{
    "identifiers": [
        "json",
        "TSM",
        "NeutronTestCase",
        "require_extension",
        "TSM",
        "TestCase",
        "require_topology_feature",
        "VTM",
        "Guest",
        "Guest",
        "VTM",
        "NeutronAPI",
        "router_peering_utils",
        "L2GWNeutronTestCase",
        "L2GWNeutronTestCase",
        "require_extension",
        "require_extension",
        "require_extension",
        "require_topology_feature",
        "a",
        "b",
        "a",
        "b",
        "connect_through_vtep_router",
        "clean_vm_servers",
        "clean_topo",
        "create_network",
        "create_subnet",
        "a_net",
        "a_cidr",
        "create_network",
        "external",
        "create_subnet",
        "a_pub_net",
        "a_pub_cidr",
        "create_router",
        "pub_net_id",
        "a_pub_net",
        "priv_sub_ids",
        "a_sub",
        "create_vm_server",
        "a_net",
        "a_sub",
        "create_network",
        "create_subnet",
        "b_net",
        "b_cidr",
        "create_network",
        "external",
        "create_subnet",
        "b_pub_net",
        "b_pub_cidr",
        "create_router",
        "pub_net_id",
        "b_pub_net",
        "priv_sub_ids",
        "b_sub",
        "create_vm_server",
        "b_net",
        "b_sub",
        "create_router_peering_topo",
        "name",
        "az_cidr",
        "az_gw",
        "tun_cidr",
        "tun_ip",
        "tun_gw",
        "tun_host",
        "tun_iface",
        "tenant_router_id",
        "a_tenant_router",
        "segment_id",
        "create_router_peering_topo",
        "name",
        "az_cidr",
        "az_gw",
        "tun_cidr",
        "tun_ip",
        "tun_gw",
        "tun_host",
        "tun_iface",
        "tenant_router_id",
        "b_tenant_router",
        "segment_id",
        "b_peer_topo",
        "add_peer",
        "a_peer_topo",
        "a_tenant_router",
        "b_router_mac",
        "b_cidr",
        "b_peer_topo",
        "a_peer_topo",
        "add_peer",
        "b_peer_topo",
        "b_tenant_router",
        "a_router_mac",
        "a_cidr",
        "a_peer_topo",
        "vmb",
        "start_echo_server",
        "ip",
        "ipb",
        "verify_connectivity",
        "vma",
        "ipb",
        "vma",
        "start_echo_server",
        "ip",
        "ipa",
        "verify_connectivity",
        "vmb",
        "ipa",
        "create_firewall_policy",
        "create_firewall",
        "fwp",
        "router_ids",
        "a_tenant_router",
        "create_firewall_rule",
        "action",
        "protocol",
        "create_firewall_rule",
        "action",
        "protocol",
        "assertFalse",
        "vma",
        "ping",
        "target_ip",
        "ipb",
        "assertFalse",
        "vmb",
        "ping",
        "target_ip",
        "ipa",
        "insert_firewall_rule",
        "fwp",
        "fwr_icmp",
        "insert_firewall_rule",
        "fwp",
        "fwr_tcp",
        "verify_connectivity",
        "vma",
        "ipb",
        "verify_connectivity",
        "vmb",
        "ipa"
    ],
    "literals": [
        "'extraroute'",
        "'gateway-device'",
        "'l2-gateway'",
        "'config_file'",
        "'config/physical_topologies/2z-3c-2edge.json'",
        "\"192.168.20.0/24\"",
        "\"200.200.120.0/24\"",
        "'EAST'",
        "'EAST'",
        "'id'",
        "'PUB_EAST'",
        "'PUB_EAST'",
        "'id'",
        "'EAST'",
        "'id'",
        "'id'",
        "\"A\"",
        "'id'",
        "'gateway_ip'",
        "\"192.168.30.0/24\"",
        "\"200.200.130.0/24\"",
        "'WEST'",
        "'WEST'",
        "'id'",
        "'PUB_WEST'",
        "'PUB_WEST'",
        "'id'",
        "'WEST'",
        "'id'",
        "'id'",
        "\"B\"",
        "'id'",
        "'gateway_ip'",
        "\"EAST\"",
        "\"192.168.200.0/24\"",
        "\"192.168.200.2\"",
        "\"1.1.1.0/24\"",
        "\"1.1.1.2\"",
        "\"1.1.1.3\"",
        "\"tun2\"",
        "\"eth1\"",
        "'id'",
        "\"100\"",
        "\"WEST\"",
        "\"192.168.200.0/24\"",
        "\"192.168.200.3\"",
        "\"2.2.2.0/24\"",
        "\"2.2.2.2\"",
        "\"2.2.2.3\"",
        "\"tun1\"",
        "\"eth1\"",
        "'id'",
        "\"100\"",
        "'az_iface_port'",
        "'mac_address'",
        "'id'",
        "\"100\"",
        "\"192.168.200.3\"",
        "'az_iface_port'",
        "'id'",
        "\"2.2.2.2\"",
        "'az_iface_port'",
        "'mac_address'",
        "'id'",
        "\"100\"",
        "\"192.168.200.2\"",
        "'az_iface_port'",
        "'id'",
        "\"1.1.1.2\"",
        "'POLICY'",
        "'id'",
        "'id'",
        "'allow'",
        "'icmp'",
        "'allow'",
        "'tcp'",
        "'id'",
        "'id'",
        "'id'",
        "'id'"
    ],
    "variables": [
        "a_cidr",
        "a_pub_cidr",
        "a_net",
        "a_sub",
        "a_pub_net",
        "a_pub_sub",
        "a_tenant_router",
        "porta",
        "vma",
        "ipa",
        "b_cidr",
        "b_pub_cidr",
        "b_net",
        "b_sub",
        "b_pub_net",
        "b_pub_sub",
        "b_tenant_router",
        "portb",
        "vmb",
        "ipb",
        "a_peer_topo",
        "b_peer_topo",
        "b_router_mac",
        "a_rme",
        "a_router_mac",
        "b_rme",
        "fwp",
        "fw",
        "fwr_icmp",
        "fwr_tcp"
    ],
    "comments": [
        "Copyright 2015 Midokura SARL",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License."
    ],
    "docstrings": [],
    "functions": [
        "test_peered_routers_vtep_router",
        "connect_through_vtep_router"
    ],
    "classes": [
        "TestRouterPeeringUpdates"
    ]
}