{
    "identifiers": [
        "unittest",
        "unittest",
        "mock",
        "math",
        "threading",
        "contextlib",
        "contextmanager",
        "gc",
        "time",
        "mpv",
        "l",
        "ec",
        "ec",
        "l",
        "mpv",
        "ErrorCode",
        "EXCEPTION_DICT",
        "items",
        "l",
        "unittest",
        "TestCase",
        "contextmanager",
        "e",
        "ex",
        "MPV_ERRORS",
        "e",
        "args",
        "ex",
        "args",
        "mpv",
        "MPV",
        "name",
        "ptype",
        "access",
        "mpv",
        "ALL_PROPERTIES",
        "items",
        "assertTrue",
        "access",
        "access",
        "assertRegex",
        "name",
        "assertIn",
        "ptype",
        "mpv",
        "ynbool",
        "name",
        "ptype",
        "access",
        "mpv",
        "ALL_PROPERTIES",
        "items",
        "access",
        "name",
        "replace",
        "swallow_mpv_errors",
        "getattr",
        "m",
        "name",
        "e",
        "RuntimeError",
        "name",
        "rv",
        "assertEqual",
        "rv",
        "ptype",
        "msg",
        "name",
        "name",
        "ptype",
        "access",
        "mpv",
        "ALL_PROPERTIES",
        "items",
        "access",
        "name",
        "replace",
        "swallow_mpv_errors",
        "ptype",
        "setattr",
        "m",
        "name",
        "setattr",
        "m",
        "name",
        "setattr",
        "m",
        "name",
        "ptype",
        "setattr",
        "m",
        "name",
        "setattr",
        "m",
        "name",
        "setattr",
        "m",
        "name",
        "setattr",
        "m",
        "name",
        "setattr",
        "m",
        "name",
        "math",
        "nan",
        "ptype",
        "setattr",
        "m",
        "name",
        "setattr",
        "m",
        "name",
        "setattr",
        "m",
        "name",
        "ptype",
        "mpv",
        "ynbool",
        "access",
        "setattr",
        "m",
        "name",
        "assertTrue",
        "getattr",
        "m",
        "name",
        "assertEqual",
        "getattr",
        "m",
        "name",
        "setattr",
        "m",
        "name",
        "assertTrue",
        "getattr",
        "m",
        "name",
        "setattr",
        "m",
        "name",
        "assertTrue",
        "getattr",
        "m",
        "name",
        "setattr",
        "m",
        "name",
        "assertFalse",
        "getattr",
        "m",
        "name",
        "assertEqual",
        "getattr",
        "m",
        "name",
        "setattr",
        "m",
        "name",
        "assertFalse",
        "getattr",
        "m",
        "name",
        "setattr",
        "m",
        "name",
        "assertFalse",
        "getattr",
        "m",
        "name",
        "setattr",
        "m",
        "name",
        "setattr",
        "m",
        "name",
        "setattr",
        "m",
        "name",
        "m",
        "unittest",
        "TestCase",
        "mock",
        "Mock",
        "mpv",
        "MPV",
        "m",
        "observe_property",
        "handler",
        "assertEqual",
        "m",
        "loop",
        "assertEqual",
        "m",
        "loop",
        "time",
        "sleep",
        "m",
        "unobserve_property",
        "handler",
        "m",
        "terminate",
        "handler",
        "has_calls",
        "mock",
        "call",
        "mock",
        "call",
        "unittest",
        "TestCase",
        "t",
        "name",
        "t",
        "threading",
        "assertNotIn",
        "thread_names",
        "mpv",
        "MPV",
        "assertIn",
        "thread_names",
        "m",
        "gc",
        "collect",
        "assertNotIn",
        "thread_names",
        "unittest",
        "main"
    ],
    "literals": [
        "'r'",
        "'w'",
        "'^[-0-9a-z]+$'",
        "'r'",
        "'-'",
        "'_'",
        "'Error while testing property'",
        "'w'",
        "'-'",
        "'_'",
        "'foo'",
        "''",
        "'bazbazbaz'",
        "'r'",
        "'yes'",
        "b'yes'",
        "'no'",
        "b'no'",
        "'yes'",
        "b'yes'",
        "'inf'",
        "'loop'",
        "'no'",
        "'no'",
        "'inf'",
        "'inf'",
        "'no'",
        "'inf'",
        "'loop'",
        "'no'",
        "'loop'",
        "'inf'",
        "'MPVEventHandlerThread'",
        "'MPVEventHandlerThread'",
        "'MPVEventHandlerThread'",
        "'__main__'"
    ],
    "variables": [
        "MPV_ERRORS",
        "m",
        "name",
        "rv",
        "name",
        "handler",
        "m",
        "m",
        "loop",
        "m",
        "loop",
        "m",
        "loop",
        "m",
        "loop",
        "m",
        "loop",
        "thread_names",
        "m"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "Technically, any property can return None (even if of type e.g. int)",
        "needed for synchronization of event thread"
    ],
    "docstrings": [],
    "functions": [
        "swallow_mpv_errors",
        "setUp",
        "test_sanity",
        "test_read",
        "test_write",
        "tearDown",
        "test_observe_property",
        "test_create_destroy"
    ],
    "classes": [
        "TestProperties",
        "ObservePropertyTest",
        "TestLifecycle"
    ]
}