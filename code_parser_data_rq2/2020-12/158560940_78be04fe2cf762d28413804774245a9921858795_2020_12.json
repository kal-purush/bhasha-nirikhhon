{
    "identifiers": [
        "DraftCommentMarker",
        "styled",
        "styled",
        "styled",
        "props",
        "props",
        "parseFloat",
        "props",
        "props",
        "parseFloat",
        "props",
        "props",
        "props",
        "props",
        "parseFloat",
        "props",
        "props",
        "parseFloat",
        "props",
        "props",
        "props",
        "props",
        "parseFloat",
        "props",
        "props",
        "parseFloat",
        "props",
        "props",
        "props",
        "props",
        "parseFloat",
        "props",
        "props",
        "parseFloat",
        "props",
        "props",
        "MARKER_SIZE",
        "MARKER_SIZE",
        "MARKER_SIZE",
        "props",
        "props",
        "props",
        "props"
    ],
    "literals": [
        "'@sensenet/client-core'",
        "'styled-components'",
        "position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  z-index: 1;",
        "'div'",
        "position: absolute;\n  top: ${(props) => {\n    switch (props.rotation) {\n      case 90:\n        return `${parseFloat(props.marker.x) * props.zoomRatioLying}px`\n      case 180:\n        return 'unset'\n      case 270:\n        return 'unset'\n      default:\n        return `${parseFloat(props.marker.y) * props.zoomRatioStanding}px`\n    }\n  }};\n  right: ${(props) => {\n    switch (props.rotation) {\n      case 90:\n        return `${parseFloat(props.marker.y) * props.zoomRatioLying}px`\n      case 180:\n        return `${parseFloat(props.marker.x) * props.zoomRatioStanding}px`\n      case 270:\n        return 'unset'\n      default:\n        return 'unset'\n    }\n  }};\n  bottom: ${(props) => {\n    switch (props.rotation) {\n      case 90:\n        return 'unset'\n      case 180:\n        return `${parseFloat(props.marker.y) * props.zoomRatioStanding}px`\n      case 270:\n        return `${parseFloat(props.marker.x) * props.zoomRatioLying}px`\n      default:\n        return 'unset'\n    }\n  }};\n  left: ${(props) => {\n    switch (props.rotation) {\n      case 90:\n        return 'unset'\n      case 180:\n        return 'unset'\n      case 270:\n        return `${parseFloat(props.marker.y) * props.zoomRatioLying}px`\n      default:\n        return `${parseFloat(props.marker.x) * props.zoomRatioStanding}px`\n    }\n  }};\n  width: ${MARKER_SIZE}px;\n  height: ${MARKER_SIZE}px;\n  border-radius: ${MARKER_SIZE}px;\n  background-color: ${(props) =>\n    props.isSelected ? props.theme.palette.primary.light : props.theme.palette.primary.dark};\n  cursor: pointer;",
        "${parseFloat(props.marker.x) * props.zoomRatioLying}px",
        "'unset'",
        "'unset'",
        "${parseFloat(props.marker.y) * props.zoomRatioStanding}px",
        "${parseFloat(props.marker.y) * props.zoomRatioLying}px",
        "${parseFloat(props.marker.x) * props.zoomRatioStanding}px",
        "'unset'",
        "'unset'",
        "'unset'",
        "${parseFloat(props.marker.y) * props.zoomRatioStanding}px",
        "${parseFloat(props.marker.x) * props.zoomRatioLying}px",
        "'unset'",
        "'unset'",
        "'unset'",
        "${parseFloat(props.marker.y) * props.zoomRatioLying}px",
        "${parseFloat(props.marker.x) * props.zoomRatioStanding}px"
    ],
    "variables": [
        "ShapesContainer",
        "MARKER_SIZE",
        "CommentMarker"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}