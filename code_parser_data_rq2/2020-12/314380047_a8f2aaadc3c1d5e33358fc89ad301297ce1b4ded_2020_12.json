{
    "identifiers": [
        "DataBank",
        "Faction",
        "PointAdjustments",
        "UnitCard",
        "UpgradeCard",
        "card",
        "card",
        "options",
        "card",
        "options",
        "options",
        "card",
        "options",
        "options",
        "card",
        "options",
        "options",
        "card",
        "options",
        "card",
        "units",
        "upgrades",
        "index",
        "cards",
        "index",
        "cards",
        "index",
        "cards",
        "index",
        "cards",
        "name",
        "options",
        "name",
        "options",
        "name",
        "options",
        "name",
        "options",
        "unit",
        "units",
        "unit",
        "units",
        "unit",
        "IndexedCard",
        "units",
        "unit",
        "unit",
        "upgrade",
        "upgrades",
        "upgrade",
        "upgrades",
        "upgrade",
        "IndexedCard",
        "upgrades",
        "upgrade",
        "upgrade",
        "Catalog",
        "units",
        "upgrades",
        "data",
        "data",
        "u",
        "u",
        "data",
        "u",
        "u",
        "data",
        "u",
        "u",
        "data",
        "u",
        "u",
        "unit",
        "i",
        "units",
        "i",
        "units",
        "i",
        "unit",
        "other",
        "unit",
        "other",
        "unit",
        "other",
        "factionsA",
        "factionsB",
        "units",
        "i",
        "unit",
        "units",
        "unit",
        "upgrade",
        "i",
        "upgrades",
        "i",
        "upgrades",
        "i",
        "upgrade",
        "other",
        "upgrade",
        "other",
        "unitsA",
        "unitsB",
        "upgrades",
        "i",
        "upgrade",
        "upgrades",
        "upgrade",
        "points",
        "unit",
        "units",
        "unit",
        "unit",
        "key",
        "key",
        "unit",
        "key",
        "points",
        "unit",
        "points",
        "key",
        "upgrade",
        "upgrades",
        "upgrade",
        "points",
        "upgrade",
        "points",
        "upgrade"
    ],
    "literals": [
        "'../index'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "${unit.name}",
        "${key}: ${unit.title}"
    ],
    "variables": [
        "cards",
        "cards",
        "units",
        "upgrades",
        "units",
        "i",
        "other",
        "factionsA",
        "factionsB",
        "upgrades",
        "i",
        "other",
        "unitsA",
        "unitsB",
        "key"
    ],
    "comments": [
        "@internal",
        "eslint-disable-next-line @typescript-eslint/no-non-null-assertion",
        "eslint-disable-next-line @typescript-eslint/no-non-null-assertion",
        "Check one more thing: are there unique faction restrictions?",
        "Check one more thing: are there unique unit restrictions?"
    ],
    "docstrings": [
        "* Represents an indexed @see DataBank with errata and point changes applied.\n *\n * Also @see CatalogBuilder",
        "* @internal",
        "* Returns all units in the catalog.",
        "* Returns all upgrades in the catalog.",
        "* Tries to find a unit with the provided name.\n   *\n   * @param name\n   * @param options",
        "* Tries to find an upgrade with the provided name.\n   *\n   * @param name\n   * @param options",
        "* A mutable @see Catalog instance for incrementally building.",
        "* Returns a @see Catalog from this builder.",
        "* Adds the provided data set to the catalog.\n   *\n   * Core (non-Errata) cards are added first, and then replaced with errata.\n   *\n   * Any existing data prior to calling `addData` is replaced if the card is\n   * considered equal (i.e. the \"name\", \"title\", and sometimes \"restrictions\"\n   * are the same).\n   *\n   * @param data",
        "* Adds the provided unit to the catalog.\n   *\n   * If an unit with the same name/title/faction exists, it is replaced.\n   *\n   * @param unit",
        "* Adds the provided upgrade to the catalog.\n   *\n   * If an upgrade with the same name/unit restrictions exists, it is replaced.\n   *\n   * @param unit",
        "* Apply the provided point adjustments to the catalog.\n   *\n   * This method **replaces** existing data, and is expected to be used after\n   * initial data (@member addData) has been added, otherwise the points are\n   * ignored for cards that do not match.\n   *\n   * @param points"
    ],
    "functions": [
        "insert",
        "lookup",
        "allUnits",
        "allUpgrades",
        "lookupUnit",
        "lookupUpgrade",
        "build",
        "addData",
        "addUnit",
        "addUpgrade",
        "replacePoints"
    ],
    "classes": [
        "IndexedCard",
        "Catalog",
        "CatalogBuilder"
    ]
}