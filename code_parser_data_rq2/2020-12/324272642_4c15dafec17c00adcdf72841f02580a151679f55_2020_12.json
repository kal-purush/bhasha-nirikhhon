{
    "identifiers": [
        "com",
        "yaslebid",
        "fileStorage",
        "controller",
        "com",
        "yaslebid",
        "fileStorage",
        "TestConfigAndData",
        "TestData",
        "com",
        "yaslebid",
        "fileStorage",
        "helpers",
        "FileIdParser",
        "org",
        "hamcrest",
        "Matchers",
        "org",
        "junit",
        "Assert",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "junit",
        "runner",
        "RunWith",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "boot",
        "test",
        "autoconfigure",
        "web",
        "servlet",
        "AutoConfigureMockMvc",
        "org",
        "springframework",
        "boot",
        "test",
        "context",
        "SpringBootTest",
        "org",
        "springframework",
        "http",
        "MediaType",
        "org",
        "springframework",
        "test",
        "context",
        "junit4",
        "SpringRunner",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "MockMvc",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "MvcResult",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "request",
        "MockMvcRequestBuilders",
        "get",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "request",
        "MockMvcRequestBuilders",
        "post",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "result",
        "MockMvcResultHandlers",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "result",
        "MockMvcResultMatchers",
        "jsonPath",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "result",
        "MockMvcResultMatchers",
        "status",
        "RunWith",
        "SpringBootTest",
        "AutoConfigureMockMvc",
        "Autowired",
        "mvc",
        "Test",
        "result",
        "mvc",
        "perform",
        "post",
        "contentType",
        "MediaType",
        "APPLICATION_JSON",
        "content",
        "TestData",
        "newFileJson",
        "andDo",
        "andExpect",
        "status",
        "is2xxSuccessful",
        "andReturn",
        "content",
        "result",
        "getResponse",
        "getContentAsString",
        "newFileId",
        "FileIdParser",
        "getIdFromCreateFileResponse",
        "content",
        "Assert",
        "assertTrue",
        "newFileId",
        "matches",
        "Test",
        "saveResult",
        "mvc",
        "perform",
        "post",
        "contentType",
        "MediaType",
        "APPLICATION_JSON",
        "content",
        "TestData",
        "newFileUnknownTypeJson",
        "andReturn",
        "content",
        "saveResult",
        "getResponse",
        "getContentAsString",
        "newFileId",
        "FileIdParser",
        "getIdFromCreateFileResponse",
        "content",
        "getByIdResult",
        "mvc",
        "perform",
        "get",
        "concat",
        "newFileId",
        "andDo",
        "andExpect",
        "status",
        "isOk",
        "andExpect",
        "jsonPath",
        "Matchers",
        "empty",
        "andReturn"
    ],
    "literals": [
        "\"/file\"",
        "\"[-_A-Za-z0-9]{20}\"",
        "\"/file\"",
        "\"/file/\"",
        "\"$.tags\""
    ],
    "variables": [
        "mvc"
    ],
    "comments": [
        "assert generated id corresponds to Elasticsearch id pattern"
    ],
    "docstrings": [],
    "functions": [
        "saveSuccessfullyBasicTest",
        "saveSuccessfully_and_withoutAutoTagData"
    ],
    "classes": [
        "CreateFileBasicTests"
    ]
}