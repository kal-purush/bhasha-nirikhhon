{
    "identifiers": [
        "ru",
        "practicum",
        "shareit",
        "exception",
        "org",
        "springframework",
        "http",
        "HttpStatus",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "ExceptionHandler",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "ResponseStatus",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "RestControllerAdvice",
        "RestControllerAdvice",
        "ExceptionHandler",
        "ResponseStatus",
        "HttpStatus",
        "BAD_REQUEST",
        "e",
        "e",
        "getMessage",
        "ExceptionHandler",
        "ResponseStatus",
        "HttpStatus",
        "CONFLICT",
        "e",
        "format",
        "e",
        "getParameter",
        "ExceptionHandler",
        "ResponseStatus",
        "HttpStatus",
        "NOT_FOUND",
        "e",
        "e",
        "getMessage",
        "ExceptionHandler",
        "ResponseStatus",
        "HttpStatus",
        "INTERNAL_SERVER_ERROR",
        "e"
    ],
    "literals": [
        "\"Ошибка с полем \\\"%s\\\".\"",
        "\"Произошла непредвиденная ошибка.\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Global error handler for the Filmorate application.",
        "* Handles ValidationException and returns a BAD_REQUEST response.\n     *\n     * @param e The ValidationException.\n     * @return ErrorResponse with the error message.",
        "* Handles IncorrectParameterException and returns a BAD_REQUEST response.\n     *\n     * @param e The IncorrectParameterException.\n     * @return ErrorResponse with the error message.",
        "* Handles NotFoundException and returns a NOT_FOUND response.\n     *\n     * @param e The NotFoundException.\n     * @return ErrorResponse with the error message.",
        "* Handles Throwable (general exception) and returns an INTERNAL_SERVER_ERROR response.\n     *\n     * @param e The Throwable.\n     * @return ErrorResponse with a generic error message."
    ],
    "functions": [
        "ErrorResponse",
        "handleValidationException",
        "ErrorResponse",
        "handleIncorrectParameterException",
        "ErrorResponse",
        "handleNotFoundException",
        "ErrorResponse",
        "handleThrowable"
    ],
    "classes": [
        "ErrorHandler"
    ]
}