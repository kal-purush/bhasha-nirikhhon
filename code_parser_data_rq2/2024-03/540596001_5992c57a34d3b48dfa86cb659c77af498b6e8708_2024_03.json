{
    "identifiers": [
        "AnonCredsCredentialsForProofRequest",
        "AnonCredsGetCredentialsForProofRequestOptions",
        "AnonCredsCredentialInfo",
        "AnonCredsProofRequest",
        "AnonCredsRequestedAttribute",
        "AnonCredsRequestedAttributeMatch",
        "AnonCredsRequestedPredicate",
        "AnonCredsRequestedPredicateMatch",
        "AnonCredsHolderService",
        "GetCredentialsForProofRequestReturn",
        "AgentContext",
        "AnonCredsHolderServiceSymbol",
        "fetchRevocationStatusList",
        "assertBestPracticeRevocationInterval",
        "sortRequestedCredentialsMatches",
        "dateToTimestamp",
        "getCredentialsForProofRequestReferent",
        "agentContext",
        "proofRequest",
        "attributeReferent",
        "agentContext",
        "AnonCredsHolderServiceSymbol",
        "holderService",
        "agentContext",
        "credentials",
        "getRevocationStatus",
        "agentContext",
        "proofRequest",
        "requestedItem",
        "credentialInfo",
        "requestedItem",
        "proofRequest",
        "credentialInfo",
        "credentialInfo",
        "requestNonRevoked",
        "credentialRevocationId",
        "revocationRegistryId",
        "agentContext",
        "credentialRevocationId",
        "requestNonRevoked",
        "requestNonRevoked",
        "assertBestPracticeRevocationInterval",
        "requestNonRevoked",
        "fetchRevocationStatusList",
        "agentContext",
        "revocationRegistryId",
        "requestNonRevoked",
        "dateToTimestamp",
        "revocationStatusList",
        "parseInt",
        "credentialRevocationId",
        "agentContext",
        "credentialRevocationId",
        "isRevoked",
        "requestNonRevoked",
        "requestNonRevoked",
        "revocationStatusList",
        "getCredentialsForAnonCredsProofRequest",
        "agentContext",
        "proofRequest",
        "options",
        "proofRequest",
        "getCredentialsForProofRequestReferent",
        "agentContext",
        "proofRequest",
        "referent",
        "credentialsForProofRequest",
        "referent",
        "sortRequestedCredentialsMatches",
        "credentials",
        "credential",
        "getRevocationStatus",
        "agentContext",
        "proofRequest",
        "requestedAttribute",
        "credential",
        "credential",
        "credential",
        "isRevoked",
        "options",
        "credentialsForProofRequest",
        "referent",
        "credentialsForProofRequest",
        "referent",
        "r",
        "r",
        "proofRequest",
        "getCredentialsForProofRequestReferent",
        "agentContext",
        "proofRequest",
        "referent",
        "credentialsForProofRequest",
        "referent",
        "sortRequestedCredentialsMatches",
        "credentials",
        "credential",
        "getRevocationStatus",
        "agentContext",
        "proofRequest",
        "requestedPredicate",
        "credential",
        "credential",
        "credential",
        "isRevoked",
        "options",
        "credentialsForProofRequest",
        "referent",
        "credentialsForProofRequest",
        "referent",
        "r",
        "r",
        "credentialsForProofRequest"
    ],
    "literals": [
        "'../formats'",
        "'../models'",
        "'../services'",
        "'@credo-ts/core'",
        "'../services'",
        "'./anonCredsObjects'",
        "'./revocationInterval'",
        "'./sortRequestedCredentialsMatches'",
        "'./timestamp'",
        "string",
        "Fetching credential revocation status for credential revocation id '${credentialRevocationId}' with revocation interval with from '${requestNonRevoked.from}' and to '${requestNonRevoked.to}'",
        "Credential with credential revocation index '${credentialRevocationId}' is ${\n      isRevoked ? '' : 'not '\n    }revoked with revocation interval with to '${requestNonRevoked.to}' & from '${requestNonRevoked.from}'",
        "''",
        "'not '"
    ],
    "variables": [
        "getCredentialsForProofRequestReferent",
        "holderService",
        "credentials",
        "getRevocationStatus",
        "requestNonRevoked",
        "credentialRevocationId",
        "revocationRegistryId",
        "isRevoked",
        "getCredentialsForAnonCredsProofRequest",
        "credentialsForProofRequest",
        "referent",
        "requestedAttribute",
        "credentials",
        "referent",
        "requestedPredicate",
        "credentials"
    ],
    "comments": [
        "If revocation interval is not present or the credential is not revocable then we",
        "don't need to fetch the revocation status",
        "Make sure the revocation interval follows best practices from Aries RFC 0441",
        "We only attach revoked state if non-revocation is requested. So if revoked is true it means",
        "the credential is not applicable to the proof request",
        "We only attach revoked state if non-revocation is requested. So if revoked is true it means",
        "the credential is not applicable to the proof request"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}