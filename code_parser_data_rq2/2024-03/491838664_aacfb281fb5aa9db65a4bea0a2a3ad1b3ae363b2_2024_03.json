{
    "identifiers": [
        "Fastify",
        "FastifyInstance",
        "jwt",
        "COOKIE_DOMAIN",
        "JWT_SECRET",
        "createAccessToken",
        "cookies",
        "sign",
        "signCookie",
        "codeFlowAuth",
        "describe",
        "beforeEach",
        "fastify",
        "Fastify",
        "fastify",
        "cookies",
        "fastify",
        "codeFlowAuth",
        "afterEach",
        "fastify",
        "describe",
        "it",
        "createAccessToken",
        "fastify",
        "req",
        "reply",
        "reply",
        "token",
        "jwt",
        "token",
        "JWT_SECRET",
        "signCookie",
        "singlySignedToken",
        "fastify",
        "expect",
        "res",
        "expect",
        "doublySignedToken",
        "COOKIE_DOMAIN",
        "it",
        "createAccessToken",
        "fastify",
        "req",
        "reply",
        "reply",
        "token",
        "fastify",
        "expect",
        "res",
        "expect",
        "describe",
        "beforeEach",
        "fastify",
        "fastify",
        "fastify",
        "it",
        "fastify",
        "expect",
        "res",
        "expect",
        "res",
        "it",
        "jwt",
        "createAccessToken",
        "JWT_SECRET",
        "fastify",
        "token",
        "expect",
        "res",
        "expect",
        "res",
        "it",
        "jwt",
        "createAccessToken",
        "fastify",
        "signCookie",
        "token",
        "expect",
        "res",
        "expect",
        "res",
        "it",
        "jwt",
        "createAccessToken",
        "JWT_SECRET",
        "fastify",
        "signCookie",
        "token",
        "expect",
        "res",
        "expect",
        "res",
        "it",
        "fastify",
        "jwt",
        "createAccessToken",
        "JWT_SECRET",
        "fastify",
        "signCookie",
        "token",
        "expect",
        "res",
        "it",
        "fastify",
        "fakeUser",
        "fastify",
        "req",
        "expect",
        "req",
        "fakeUser",
        "jwt",
        "createAccessToken",
        "JWT_SECRET",
        "fastify",
        "signCookie",
        "token",
        "expect",
        "res"
    ],
    "literals": [
        "'fastify'",
        "'jsonwebtoken'",
        "'../utils/env'",
        "'../utils/tokens'",
        "'./cookies'",
        "'./code-flow-auth'",
        "'auth'",
        "'setAccessTokenCookie'",
        "'should doubly sign the cookie'",
        "'test-id'",
        "'/test'",
        "'GET'",
        "'/test'",
        "'jwt_access_token'",
        "'/'",
        "'Lax'",
        "'should set the max-age of the cookie to match the ttl of the token'",
        "'test-id'",
        "'/test'",
        "'GET'",
        "'/test'",
        "'authorize'",
        "'onRequest'",
        "'/test'",
        "'ok'",
        "'should reject if the access token is missing'",
        "'GET'",
        "'/test'",
        "'info'",
        "'Access token is required for this request'",
        "'should reject if the access token is not signed'",
        "'123'",
        "'GET'",
        "'/test'",
        "'info'",
        "'Access token is required for this request'",
        "'should reject if the access token is invalid'",
        "'123'",
        "'invalid-secret'",
        "'GET'",
        "'/test'",
        "'info'",
        "'Your access token is invalid'",
        "'should reject if the access token has expired'",
        "'123'",
        "'GET'",
        "'/test'",
        "'info'",
        "'Access token is no longer valid'",
        "'should reject if the user is not found'",
        "'123'",
        "'GET'",
        "'/test'",
        "'info'",
        "'Your access token is invalid'",
        "'should populate the request with the user if the token is valid'",
        "'123'",
        "'test-user'",
        "'/test-user'",
        "'123'",
        "'GET'",
        "'/test-user'"
    ],
    "variables": [
        "fastify",
        "token",
        "singlySignedToken",
        "doublySignedToken",
        "res",
        "token",
        "res",
        "res",
        "token",
        "res",
        "token",
        "res",
        "token",
        "res",
        "token",
        "res",
        "fakeUser",
        "token",
        "res"
    ],
    "comments": [
        "We won't need to keep doubly signing the cookie when we migrate the",
        "authentication, but for the MVP we have to be able to read the cookies",
        "set by the api-server. So, double signing:",
        "TODO: Post-MVP sync the cookie max-age with the token ttl (i.e. the",
        "max-age should be the ttl/1000, not ttl)",
        "@ts-expect-error prisma isn't defined, since we're not building the",
        "full application here.",
        "@ts-expect-error prisma isn't defined, since we're not building the",
        "full application here."
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}