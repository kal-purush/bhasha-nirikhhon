{
    "identifiers": [
        "sklearn",
        "datasets",
        "make_classification",
        "sklearn",
        "linear_model",
        "LogisticRegression",
        "sklearn",
        "model_selection",
        "RandomizedSearchCV",
        "scipy",
        "stats",
        "uniform",
        "make_classification",
        "n_samples",
        "n_features",
        "random_state",
        "LogisticRegression",
        "random_state",
        "uniform",
        "loc",
        "scale",
        "RandomizedSearchCV",
        "model",
        "param_distributions",
        "param_dist",
        "n_iter",
        "cv",
        "random_state",
        "n_jobs",
        "verbose",
        "random_search",
        "fit",
        "X",
        "y",
        "random_search",
        "best_params_",
        "random_search",
        "best_score_"
    ],
    "literals": [
        "\" finding AND gate using the suitable Hyperparameters and applying RandomSearchCV()\"",
        "'C'",
        "'penalty'",
        "'l1'",
        "'l2'",
        "f\"Best hyperparameters: {random_search.best_params_}\"",
        "f\"Best score: {random_search.best_score_:.4f}\""
    ],
    "variables": [
        "X",
        "y",
        "model",
        "param_dist",
        "random_search"
    ],
    "comments": [
        "Applying RandomSearchCV() for a single perceptron AND gate",
        "Generate a random classification dataset",
        "Define the model and hyperparameter distributions",
        "Create the RandomizedSearchCV object",
        "Fit the RandomizedSearchCV object to the data",
        "Print the best hyperparameters and score"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}