{
    "identifiers": [
        "fetch",
        "response",
        "response",
        "data",
        "globalData",
        "data",
        "renderTable",
        "globalData",
        "error",
        "error",
        "fetch",
        "response",
        "globalData",
        "data",
        "renderTable",
        "globalData",
        "error",
        "error",
        "data",
        "tableBody",
        "data",
        "item",
        "item",
        "item",
        "item",
        "item",
        "item",
        "item",
        "item",
        "item",
        "tableBody",
        "row",
        "globalData",
        "item",
        "item",
        "searchValue",
        "item",
        "searchValue",
        "renderTable",
        "filteredData",
        "globalData",
        "a",
        "b",
        "b",
        "a",
        "renderTable",
        "sortedData",
        "globalData",
        "a",
        "b",
        "b",
        "a",
        "renderTable",
        "sortedData",
        "searchData",
        "sortDataByMarketCap",
        "sortDataByPercentageChange",
        "fetchDataThen"
    ],
    "literals": [
        "'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=false'",
        "'Error fetching data:'",
        "'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=false'",
        "'Error fetching data:'",
        "'tableBody'",
        "''",
        "<tr>\n          <td><img src=\"${item.image}\" alt=\"${item.name}\" class=\"coin-image\"/>${item.name}</td>\n          <td>${item.symbol.toUpperCase()}</td>\n          <td>$${item.current_price.toLocaleString()}</td>\n          <td>${item.total_volume.toLocaleString()}</td>\n          <td>${item.price_change_percentage_24h.toFixed(2)}%</td>\n          <td>${item.market_cap.toLocaleString()}</td>\n        </tr>",
        "'searchInput'",
        "'searchButton'",
        "'click'",
        "'sortMarketCapButton'",
        "'click'",
        "'sortPercentageButton'",
        "'click'"
    ],
    "variables": [
        "response",
        "data",
        "tableBody",
        "row",
        "searchValue",
        "filteredData",
        "sortedData",
        "sortedData"
    ],
    "comments": [
        "Fetching data using .then",
        "Fetching data using async/await",
        "Render the table",
        "Clear existing table data",
        "Search functionality",
        "Sort by market cap",
        "Sort by percentage change",
        "Event listeners",
        "Initial data fetch",
        "You can also use fetchDataAsyncAwait();"
    ],
    "docstrings": [],
    "functions": [
        "fetchDataThen",
        "fetchDataAsyncAwait",
        "renderTable",
        "searchData",
        "sortDataByMarketCap",
        "sortDataByPercentageChange"
    ],
    "classes": []
}