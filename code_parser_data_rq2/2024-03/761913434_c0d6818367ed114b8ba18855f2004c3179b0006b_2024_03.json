{
    "identifiers": [
        "gradio",
        "gr",
        "transformers",
        "pipeline",
        "numpy",
        "np",
        "hopsworks",
        "joblib",
        "functions",
        "llm_chain",
        "load_model",
        "get_llm_chain",
        "generate_response",
        "pipeline",
        "model",
        "hopsworks",
        "login",
        "project",
        "get_feature_store",
        "project",
        "get_model_registry",
        "fs",
        "get_feature_view",
        "name",
        "version",
        "feature_view",
        "init_batch_scoring",
        "mr",
        "get_model",
        "name",
        "version",
        "retrieved_model",
        "download",
        "joblib",
        "load",
        "saved_model_dir",
        "joblib",
        "load",
        "saved_model_dir",
        "feature_view",
        "model_air_quality",
        "encoder",
        "load_model",
        "get_llm_chain",
        "model_llm",
        "tokenizer",
        "model_llm",
        "tokenizer",
        "llm_chain",
        "connect_to_hopsworks",
        "retrieve_llm_chain",
        "audio",
        "audio",
        "y",
        "astype",
        "np",
        "float32",
        "y",
        "ndim",
        "y",
        "shape",
        "np",
        "mean",
        "y",
        "axis",
        "y",
        "np",
        "max",
        "np",
        "abs",
        "y",
        "transcriber",
        "sr",
        "y",
        "user_query",
        "generate_response",
        "user_query",
        "feature_view",
        "model_llm",
        "tokenizer",
        "model_air_quality",
        "encoder",
        "llm_chain",
        "verbose",
        "response",
        "text_input",
        "audio_input",
        "audio_input",
        "transcribe",
        "audio_input",
        "text_input",
        "user_query",
        "generate_query_response",
        "user_query",
        "gr",
        "Interface",
        "fn",
        "handle_input",
        "inputs",
        "gr",
        "Textbox",
        "placeholder",
        "gr",
        "Audio",
        "outputs",
        "title",
        "description",
        "iface",
        "launch",
        "share"
    ],
    "literals": [
        "\"automatic-speech-recognition\"",
        "\"openai/whisper-base.en\"",
        "\"air_quality_fv\"",
        "\"air_quality_xgboost_model\"",
        "\"/xgboost_regressor.pkl\"",
        "\"/label_encoder.pkl\"",
        "\"sampling_rate\"",
        "\"raw\"",
        "\"text\"",
        "\"Please provide input either via text or voice.\"",
        "\"Type here or use voice input...\"",
        "\"text\"",
        "\"üå§Ô∏è AirQuality AI Assistant üí¨\"",
        "\"Ask your questions about air quality or use your voice to interact.\""
    ],
    "variables": [
        "transcriber",
        "project",
        "fs",
        "mr",
        "feature_view",
        "retrieved_model",
        "saved_model_dir",
        "model_air_quality",
        "encoder",
        "model_llm",
        "tokenizer",
        "llm_chain",
        "feature_view",
        "model_air_quality",
        "encoder",
        "model_llm",
        "tokenizer",
        "llm_chain",
        "sr",
        "y",
        "y",
        "y",
        "response",
        "user_query",
        "user_query",
        "iface"
    ],
    "comments": [
        "Initialize the ASR pipeline",
        "Initialize Hopsworks feature store connection",
        "Retrieve the model registry",
        "Retrieve the 'air_quality_fv' feature view",
        "Initialize batch scoring",
        "Retrieve the 'air_quality_xgboost_model' from the model registry",
        "Download the saved model artifacts to a local directory",
        "Load the XGBoost regressor model and label encoder from the saved model directory",
        "Load the LLM and its corresponding tokenizer.",
        "Create and configure a language model chain.",
        "Retrieve the feature view, air quality model and encoder for the city_name column",
        "Load the LLM and its corresponding tokenizer and configure a language model chain"
    ],
    "docstrings": [],
    "functions": [
        "connect_to_hopsworks",
        "retrieve_llm_chain",
        "transcribe",
        "generate_query_response",
        "handle_input"
    ],
    "classes": []
}