{
    "identifiers": [
        "copy",
        "afterglowpy",
        "grb",
        "h5py",
        "os",
        "numpy",
        "np",
        "time",
        "pandas",
        "pd",
        "multiprocessing",
        "Pool",
        "matplotlib",
        "pyplot",
        "plt",
        "matplotlib",
        "cm",
        "ticker",
        "itertools",
        "product",
        "tqdm",
        "tqdm",
        "grb",
        "jet",
        "TopHat",
        "np",
        "logspace",
        "np",
        "logspace",
        "np",
        "meshgrid",
        "times",
        "freqs",
        "indexing",
        "par_list",
        "par_list",
        "idx",
        "copy",
        "deepcopy",
        "par_list",
        "idx",
        "copy",
        "deepcopy",
        "Z",
        "key",
        "val",
        "pars",
        "items",
        "key",
        "mapping",
        "keys",
        "mapping",
        "key",
        "val",
        "grb",
        "fluxDensity",
        "times_",
        "flatten",
        "freqs_",
        "flatten",
        "Z",
        "np",
        "reshape",
        "Fnu",
        "newshape",
        "times_",
        "shape",
        "np",
        "array",
        "pars",
        "key",
        "key",
        "pars",
        "keys",
        "vals",
        "Fnu",
        "np",
        "asarray",
        "np",
        "array",
        "np",
        "pi",
        "np",
        "asarray",
        "np",
        "array",
        "np",
        "pi",
        "pars",
        "key",
        "key",
        "pars",
        "keys",
        "product",
        "ranges",
        "len",
        "pars",
        "key",
        "key",
        "pars",
        "keys",
        "np",
        "prod",
        "len_list",
        "combination",
        "all_combinations",
        "par",
        "val",
        "par",
        "val",
        "pars",
        "keys",
        "combination",
        "new_entry",
        "result",
        "append",
        "new_entry",
        "RunAfterglowPy",
        "result",
        "time",
        "perf_counter",
        "os",
        "cpu_count",
        "Pool",
        "processes",
        "pool",
        "apply_async",
        "func",
        "afgpy",
        "args",
        "argument",
        "isinstance",
        "argument",
        "pool",
        "apply_async",
        "func",
        "afgpy",
        "args",
        "argument",
        "argument",
        "len",
        "result",
        "pool",
        "close",
        "job",
        "tqdm",
        "jobs",
        "results",
        "append",
        "job",
        "get",
        "time",
        "perf_counter",
        "np",
        "vstack",
        "res",
        "res",
        "results",
        "np",
        "stack",
        "res",
        "res",
        "results",
        "finish_time",
        "start_time",
        "shape",
        "spectra",
        "shape",
        "os",
        "getcwd",
        "h5py",
        "File",
        "outdir",
        "f",
        "f",
        "create_dataset",
        "data",
        "spectra",
        "dtype",
        "np",
        "float32",
        "f",
        "create_dataset",
        "data",
        "RunAfterglowPy",
        "times",
        "dtype",
        "np",
        "float64",
        "f",
        "create_dataset",
        "data",
        "RunAfterglowPy",
        "freqs",
        "dtype",
        "np",
        "float64",
        "h5py",
        "File",
        "outdir",
        "f",
        "f",
        "create_dataset",
        "data",
        "f",
        "create_dataset",
        "data",
        "np",
        "array",
        "pars",
        "keys",
        "dtype"
    ],
    "literals": [
        "'jetType'",
        "'specType'",
        "'thetaObs'",
        "'E0'",
        "'g0'",
        "'thetaCore'",
        "'thetaWing'",
        "'n0'",
        "'p'",
        "'epsilon_e'",
        "'epsilon_B'",
        "'xi_N'",
        "'d_L'",
        "'z'",
        "\"theta_obs\"",
        "\"thetaObs\"",
        "\"Eiso_c\"",
        "\"E0\"",
        "\"n_ism\"",
        "\"n0\"",
        "\"theta_c\"",
        "\"thetaCore\"",
        "\"theta_w\"",
        "\"thetaWing\"",
        "\"p_fs\"",
        "\"p\"",
        "\"eps_e_fs\"",
        "\"epsilon_e\"",
        "\"eps_b_fs\"",
        "\"epsilon_B\"",
        "\"d_l\"",
        "\"d_L\"",
        "\"z\"",
        "\"z\"",
        "'ij'",
        "'__main__'",
        "\"n_ism\"",
        "\"theta_obs\"",
        "\"Eiso_c\"",
        "\"theta_c\"",
        "\"p_fs\"",
        "\"eps_e_fs\"",
        "\"eps_b_fs\"",
        "\"theta_w\"",
        "\"theta_c\"",
        "f\"Program finished in {finish_time-start_time:.2f} seconds. \"",
        "f\"Parms={params.shape} spectra={spectra.shape}\"",
        "'/'",
        "\"X_afgpy.h5\"",
        "\"w\"",
        "\"X\"",
        "\"times\"",
        "\"freqs\"",
        "\"Y_afgpy.h5\"",
        "\"w\"",
        "\"Y\"",
        "\"keys\"",
        "\"S\""
    ],
    "variables": [
        "pc",
        "Z",
        "mapping",
        "times",
        "freqs",
        "times_",
        "freqs_",
        "par_list",
        "pars",
        "Z",
        "Z",
        "Fnu",
        "Fnu",
        "vals",
        "pars",
        "ranges",
        "result",
        "all_combinations",
        "len_list",
        "nb_combinations",
        "new_entry",
        "new_entry",
        "afgpy",
        "start_time",
        "results",
        "processes",
        "pool",
        "jobs",
        "finish_time",
        "spectra",
        "outdir"
    ],
    "comments": [
        "cm # parserc",
        "Top-Hat jet",
        "Basic Synchrotron Spectrum",
        "'counterjet':  1,",
        "'spread':      0,",
        "Viewing angle in radians",
        "Isotropic-equivalent energy in erg",
        "Half-opening angle in radians",
        "circumburst density in cm^{-3}",
        "electron energy distribution index",
        "epsilon_e",
        "epsilon_B",
        "Fraction of electrons accelerated",
        "Luminosity distance in cm",
        "redshift",
        "\"Gamma0c\":\"g0\",",
        "\"theta_obs\": np.array([0., 15., 45.0, 60., 75., 90.]) * np.pi / 180.0,",
        "\"Gamma0c\":[100., 300., 600., 1000.],",
        "Get the number of combinations in a hacky way:",
        "new_entry[\"theta_obs\"] = 0.0",
        "format the result to [i_feature_set, i_time, i_freq]",
        "save the final result"
    ],
    "docstrings": [],
    "functions": [
        "__call__"
    ],
    "classes": [
        "RunAfterglowPy"
    ]
}