{
    "identifiers": [
        "org",
        "auscope",
        "portal",
        "core",
        "repositories",
        "java",
        "util",
        "org",
        "auscope",
        "portal",
        "core",
        "services",
        "responses",
        "csw",
        "CSWRecord",
        "org",
        "springframework",
        "stereotype",
        "Repository",
        "org",
        "springframework",
        "data",
        "elasticsearch",
        "annotations",
        "Highlight",
        "org",
        "springframework",
        "data",
        "elasticsearch",
        "annotations",
        "HighlightField",
        "org",
        "springframework",
        "data",
        "elasticsearch",
        "annotations",
        "Query",
        "org",
        "springframework",
        "data",
        "elasticsearch",
        "core",
        "SearchHits",
        "org",
        "springframework",
        "data",
        "elasticsearch",
        "repository",
        "ElasticsearchRepository",
        "Repository",
        "CSWRecordRepository",
        "Highlight",
        "fields",
        "HighlightField",
        "name",
        "HighlightField",
        "name",
        "HighlightField",
        "name",
        "HighlightField",
        "name",
        "HighlightField",
        "name",
        "HighlightField",
        "name",
        "Query",
        "query",
        "query"
    ],
    "literals": [
        "\"serviceName\"",
        "\"dataIdentificationAbstract\"",
        "\"descriptiveKeywords\"",
        "\"knownLayerNames\"",
        "\"knownLayerDescriptions\"",
        "\"onlineResources.description\"",
        "\"{\\\"multi_match\\\":{\\\"fields\\\":[\\\"serviceName\\\",\\\"dataIdentificationAbstract\\\",\\\"descriptiveKeywords\\\",\\\"knownLayerNames\\\",\\\"knownLayerDescriptions\\\",\\\"onlineResources.description\\\"],\\\"query\\\":\\\"?0\\\",\\\"type\\\":\\\"phrase_prefix\\\"}}\""
    ],
    "variables": [],
    "comments": [
        "@EnableJpaRepositories(basePackages = \"org.auscope.portal.core.repositories\")",
        "public interface CSWRecordRepository extends CrudRepository<CSWRecord, String> {",
        "List<CSWRecord> findByFileIdentifier(String name);",
        "List<CSWRecord> findByServiceId(String serviceId);\t// XXX Needed?",
        "@Query(query = \"{\\\"query\\\":{\\\"multi_match\\\":{\\\"fields\\\":[\\\"serviceName\\\",\\\"dataIdentificationAbstract\\\",\\\"descriptiveKeywords\\\",\\\"knownLayerNames\\\",\\\"knownLayerDescriptions\\\",\\\"onlineResources.description\\\"],\\\"query\\\":\\\"mag\\\",\\\"type\\\":\\\"phrase_prefix\\\"}}}\")",
        "Stream<CSWRecord> findBy();",
        "findFirst10ByLastnameOrderByFirstname(String lastname, OffsetScrollPosition position);",
        "WindowIterator<User> users = WindowIterator.of(position -> repository.findFirst10ByLastnameOrderByFirstname(\"Doe\", position))",
        ".startingAt(OffsetScrollPosition.initial());",
        "List<String> findDistinctDescriptiveKeywords();",
        "List<String> findDistinctDescriptiveKeywordsByServiceId(String serviceId);"
    ],
    "docstrings": [
        "// XXX TESTING\n\t@Query(\"{\\\"bool\\\":{\\\"must\\\":{\\\"match_all\\\":{}},\\\"filter\\\":{\\\"nested\\\":{\\\"path\\\":\\\"cswGeographicBoundingBoxes\\\",\\\"query\\\":{\\\"geo_shape\\\":{\\\"cswGeographicBoundingBoxes.boundingPoly\\\":{\\\"shape\\\":{\\\"type\\\":\\\"envelope\\\",\\\"coordinates\\\":[[?0,?1],[?2,?3]]},\\\"relation\\\":\\\"intersects\\\"}}}}}}}\")\n\tList<CSWRecord> findByBoundingBox(double minLon, double maxLat, double maxLon, double minLat);",
        "// Could potentially include responsible parties, funder etc.\n\t@Highlight(fields = {\n\t\t\t@HighlightField(name = \"name\"),\n\t\t\t@HighlightField(name = \"description\"),\n\t})\n\t@Query(query = \"{\\\"multi_match\\\":{\\\"fields\\\":[\\\"serviceName\\\",\\\"dataIdentificationAbstract\\\",\\\"descriptiveKeywords\\\"],\\\"query\\\":\\\"?0\\\",\\\"type\\\":\\\"phrase_prefix\\\"}}\")\n\tSearchHits<CSWRecord> findHighlightsByPrefixQuery(String query);",
        "@Query(\"select r from cswrecord r\")\n\tStream<CSWRecord> findAllCSWRecordStream();"
    ],
    "functions": [
        "findHighlightsByPrefixQuery"
    ],
    "classes": []
}