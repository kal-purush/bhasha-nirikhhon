{
    "identifiers": [
        "numpy",
        "np",
        "json",
        "dict_path",
        "game",
        "num_game_boards",
        "debug",
        "end_with_close",
        "game",
        "num_game_boards",
        "debug",
        "i",
        "num_game_boards",
        "a",
        "i",
        "i",
        "a",
        "ascii_lowercase",
        "vocab",
        "pos_vocab",
        "get_initial_vocab",
        "dict_path",
        "end_with_close",
        "game_boards",
        "get_state",
        "encoded_guesses",
        "i",
        "i",
        "game_boards",
        "General_Solver",
        "vocab_filter_total",
        "s",
        "vocab",
        "pos_vocab",
        "s",
        "states",
        "np",
        "argmin",
        "v",
        "shape",
        "v",
        "vocabs",
        "game_boards",
        "pop",
        "curr",
        "General_Solver",
        "get_vocab_distribution",
        "vocabs",
        "curr",
        "General_Solver",
        "get_vocab_distribution",
        "vocabs",
        "curr",
        "General_Solver",
        "word_information",
        "vocabs",
        "curr",
        "vocab_dist",
        "pos_dist",
        "states",
        "curr",
        "max",
        "info_list",
        "key",
        "x",
        "x",
        "sorted",
        "info_list",
        "key",
        "x",
        "x",
        "reverse",
        "General_Solver",
        "to_word",
        "w",
        "w",
        "w",
        "max_info_guesses",
        "General_Solver",
        "to_word",
        "new_guess",
        "new_word_guess",
        "game",
        "advance_state",
        "new_word_guess",
        "i",
        "num_game_boards",
        "encoded_guesses",
        "i",
        "append",
        "new_enc_guesses",
        "i",
        "len",
        "game_boards",
        "success",
        "execute_final_guesses",
        "game_boards",
        "final_turns",
        "done",
        "debug",
        "input",
        "v",
        "v",
        "vocab",
        "game",
        "turn",
        "get_state",
        "encoded_guesses",
        "General_Solver",
        "vocab_filter_total",
        "state",
        "vocab",
        "pos_vocab",
        "General_Solver",
        "get_zero_out_state",
        "state",
        "General_Solver",
        "get_vocab_distribution",
        "vocabs",
        "General_Solver",
        "get_position_distribution",
        "vocabs",
        "vocab_dist",
        "zero_out_states",
        "position_dist",
        "zero_out_states",
        "vocabs",
        "shape",
        "General_Solver",
        "word_information",
        "vocab",
        "new_vocab_dist",
        "new_position_dist",
        "state",
        "i",
        "num_game_boards",
        "i",
        "get_state",
        "encoded_guesses",
        "i",
        "General_Solver",
        "vocab_filter_total",
        "state",
        "vocab",
        "pos_vocab",
        "General_Solver",
        "get_zero_out_state",
        "state",
        "General_Solver",
        "get_vocab_distribution",
        "vocabs",
        "General_Solver",
        "get_position_distribution",
        "vocabs",
        "vocab_dist",
        "zero_out_states",
        "position_dist",
        "zero_out_states",
        "vocabs",
        "shape",
        "General_Solver",
        "word_information",
        "vocab",
        "new_vocab_dist",
        "new_position_dist",
        "state",
        "i",
        "info",
        "info_list",
        "full_info_list",
        "i",
        "info",
        "vocabs",
        "shape",
        "sorted",
        "full_info_list",
        "key",
        "x",
        "x",
        "reverse",
        "General_Solver",
        "to_word",
        "w",
        "w",
        "w",
        "max_info_guesses",
        "max",
        "full_info_list",
        "key",
        "x",
        "x",
        "General_Solver",
        "to_word",
        "new_guess",
        "new_word_guess",
        "game",
        "advance_state",
        "new_word_guess",
        "i",
        "num_game_boards",
        "encoded_guesses",
        "i",
        "append",
        "new_enc_guesses",
        "i",
        "final_turns",
        "done",
        "execute_final_guesses",
        "i",
        "i",
        "num_game_boards",
        "end_with_close",
        "game",
        "driver",
        "quit",
        "success",
        "mat",
        "join",
        "ascii_lowercase",
        "i",
        "i",
        "np",
        "argmax",
        "mat",
        "axis",
        "squeeze",
        "encoded",
        "np",
        "zeros",
        "i",
        "i",
        "encoded",
        "shape",
        "len",
        "ascii_lowercase",
        "reshape",
        "len",
        "ascii_lowercase",
        "np",
        "arange",
        "onehot",
        "shape",
        "encoded",
        "reshape",
        "onehot",
        "reshape",
        "i",
        "i",
        "encoded",
        "shape",
        "len",
        "ascii_lowercase",
        "encoded",
        "np",
        "zeros",
        "encoded",
        "shape",
        "np",
        "repeat",
        "np",
        "arange",
        "new_words",
        "shape",
        "np",
        "newaxis",
        "axis",
        "reshape",
        "np",
        "repeat",
        "np",
        "arange",
        "np",
        "newaxis",
        "new_words",
        "shape",
        "axis",
        "reshape",
        "encoded",
        "reshape",
        "new_words",
        "dict_path",
        "open",
        "dict_path",
        "words_read",
        "json",
        "load",
        "words_read",
        "w",
        "words",
        "encoded_words",
        "append",
        "letter_dict",
        "l",
        "l",
        "w",
        "np",
        "array",
        "encoded_words",
        "General_Solver",
        "to_onehot",
        "encoded_words_numpy",
        "General_Solver",
        "to_position_mat",
        "encoded_words_numpy",
        "state",
        "np",
        "float32",
        "np",
        "isin",
        "state",
        "zero_out",
        "zero_out",
        "T",
        "vocab",
        "vocab",
        "mean",
        "axis",
        "pos_mat",
        "pos_mat",
        "mean",
        "axis",
        "vocab",
        "vocab_distribution",
        "position_distribution",
        "state",
        "v",
        "vocab",
        "info_list",
        "append",
        "General_Solver",
        "information_gained",
        "v",
        "vocab_distribution",
        "position_distribution",
        "state",
        "info_list",
        "w",
        "vocab_distribution",
        "position_distribution",
        "state",
        "i",
        "w",
        "shape",
        "np",
        "argmax",
        "w",
        "i",
        "state",
        "i",
        "l",
        "state",
        "i",
        "l",
        "repeated_letters",
        "add",
        "l",
        "state",
        "i",
        "l",
        "total_info",
        "vocab_distribution",
        "i",
        "l",
        "vocab_distribution",
        "i",
        "l",
        "l",
        "repeated_letters",
        "total_info",
        "vocab_distribution",
        "i",
        "l",
        "vocab_distribution",
        "i",
        "l",
        "position_distribution",
        "l",
        "np",
        "arange",
        "i",
        "sum",
        "position_distribution",
        "l",
        "np",
        "arange",
        "i",
        "sum",
        "position_distribution",
        "l",
        "sum",
        "position_distribution",
        "l",
        "sum",
        "l",
        "repeated_letters",
        "repeated_letters",
        "add",
        "l",
        "w",
        "total_info",
        "state",
        "letter_info",
        "letter_dict",
        "letter_info",
        "letter_info",
        "letter_info",
        "letter_info",
        "letter_info",
        "letter_info",
        "state",
        "updates",
        "u",
        "u",
        "updates",
        "u",
        "u",
        "u",
        "updates",
        "u",
        "u",
        "u",
        "updates",
        "u",
        "sort_2",
        "sort_1",
        "sort_3",
        "guesses",
        "np",
        "zeros",
        "g",
        "guesses",
        "i",
        "l",
        "g",
        "all_update_guesses",
        "append",
        "i",
        "l",
        "l",
        "l",
        "present_letters",
        "l",
        "all_update_guesses",
        "append",
        "i",
        "l",
        "present_letters",
        "add",
        "l",
        "General_Solver",
        "sort_updates",
        "all_update_guesses",
        "info",
        "sorted_updates",
        "update_state",
        "new_state",
        "info",
        "new_state",
        "vocab",
        "condition",
        "p",
        "l",
        "np",
        "argmax",
        "vocab",
        "axis",
        "condition",
        "v",
        "p",
        "l",
        "condition",
        "v",
        "l",
        "sum",
        "axis",
        "astype",
        "condition",
        "v",
        "p",
        "l",
        "np",
        "arange",
        "vocab",
        "shape",
        "state",
        "vocab",
        "pos_vocab",
        "p",
        "state",
        "shape",
        "l",
        "state",
        "shape",
        "General_Solver",
        "vocab_filter_cycle",
        "vocab",
        "state",
        "p",
        "l",
        "p",
        "l",
        "vocab",
        "indices",
        "pos_vocab",
        "indices",
        "vocab",
        "pos_vocab",
        "General_Solver",
        "dict_path",
        "daily",
        "trisha",
        "live_play_ultra"
    ],
    "literals": [
        "f\"{General_Solver.to_word(w[0])}: {w[1]:.2f}\"",
        "\"Continue\"",
        "f\"{General_Solver.to_word(w[0])}: {w[1]:.2f}\"",
        "\"DONE\"",
        "''",
        "\"r\"",
        "\"bool\"",
        "\"__main__\"",
        "\"/Users/yashwant/Library/Mobile Documents/com~apple~CloudDocs/yash_icloud/CSC 480/Wordle/five_letter_words.json\""
    ],
    "variables": [
        "game",
        "num_game_boards",
        "debug",
        "encoded_guesses",
        "letter_dict",
        "local_guesses",
        "ultra_instinct",
        "end_with_close",
        "states",
        "vocabs",
        "curr",
        "vocab_dist",
        "pos_dist",
        "info_list",
        "new_guess",
        "max_info_guesses",
        "new_word_guess",
        "new_enc_guesses",
        "_",
        "_",
        "success",
        "final_turns",
        "done",
        "inp",
        "full_info_list",
        "state",
        "vocabs",
        "zero_out_states",
        "vocab_dist",
        "position_dist",
        "new_vocab_dist",
        "new_position_dist",
        "full_info_list",
        "state",
        "vocabs",
        "zero_out_states",
        "vocab_dist",
        "position_dist",
        "new_vocab_dist",
        "new_position_dist",
        "info_list",
        "max_info_guesses",
        "new_guess",
        "new_word_guess",
        "new_enc_guesses",
        "done",
        "final_turns",
        "success",
        "success",
        "onehot",
        "onehot",
        "new_words",
        "index_1",
        "index_2",
        "new_words",
        "index_1",
        "index_2",
        "words",
        "encoded_words",
        "encoded_words_numpy",
        "zero_out",
        "info_list",
        "total_info",
        "repeated_letters",
        "l",
        "l",
        "position",
        "state",
        "position",
        "l",
        "state",
        "l",
        "state",
        "l",
        "state",
        "position",
        "state",
        "position",
        "l",
        "sort_2",
        "sort_1",
        "sort_3",
        "new_state",
        "all_update_guesses",
        "present_letters",
        "sorted_updates",
        "new_state",
        "v",
        "indices",
        "vocab",
        "pos_vocab",
        "dict_path",
        "trisha"
    ],
    "comments": [
        "Alphabet Encoding Dictionary",
        "Load Vocabulary",
        "For Optimized Performance",
        "Scaling information to vocabulary size prioritizes game boards with more words to eliminate",
        "Probability of new information gained",
        "total_info += ((vocab_distribution[i, l] * 3.) + (vocab_distribution[np.arange(0, w.shape[0]) != i, l].sum() * 2.) + (1. - vocab_distribution[:, l].sum()) * 1.5) * (l not in repeated_letters)",
        "state[position, l] = 1.",
        "For specific scenario where a guess has 2 of the same letters and the truth only has one of the letters,",
        "so the first letter guess is present and the update is sorted first",
        "but the second letter guess is absent and overwrites the possibility of that letter being in the truth."
    ],
    "docstrings": [
        "\"\"\"\n\t\tRecursive function.\n\t\tFinds the highest probability final guess among available game boards,\n\t\tguesses it, updates encoded guesses, and then repeats until\n\t\tthere are no more available game boards.\n\n\t\tInput: list of numbers representing the index of game boards\n\t\t\"\"\"",
        "\"\"\"\n\t\tTrish will play Wordle Game live in ultra instinct mode,\n\t\twith optimized gameplay and automatic reading and writing.\n\t\tVariable ultra_instinct must be True to allow this mode.\n\n\t\tModes:\n\t\to - ultra_instinct\n\t\to - debug\n\n\t\t\"\"\"",
        "\"\"\"\n\t\tConvert word matrix to string.\n\n\t\tInput: (5, 26) onehot encoded matrix of a 5-letter word\n\n\t\tOutput: 5-letter word string\n\t\t\"\"\"",
        "\"\"\"\n\t\tConvert categorical words to word matrix.\n\n\t\tInput: 5-letter numeric words\n\n\t\tOutput: (5, 26) onehot encoded matrix of a 5-letter word\n\t\t\"\"\"",
        "\"\"\"\n\t\tConvert categorical words to position matrix.\n\n\t\tInput: 5-letter numeric words\n\n\t\tOutput: (26, 5) positionally encoded matrix of a 5-letter word\n\t\t\"\"\"",
        "\"\"\"\n\t\tInitializing function to get all 5-letter words and write to local variable self.vocab\n\n\t\tInput: path to vocabulary file (JSON)\n\n\t\tOutputs:\n\t\t- (5, 26) onehot encoded matrix of a 5-letter word\n\t\t- (26, 5) positionally encoded matrix of a 5-letter word\n\t\t\"\"\"",
        "\"\"\"\n\t\tUse word-elimination state to create a binary matrix representing all possible letters and positions\n\n\t\tInput: (5,26) letter-position state\n\n\t\tOutputs: \n\t\t- (5, 26) binary matrix of possible letters and positions\n\t\t- (26, 5) binary matrix of possible letters and positions\n\t\t\"\"\"",
        "\"\"\"\n\t\tCreate a probability matrix representing the vocab distribution of letters in positions\n\n\t\tInput: onehot-encoded vocabulary\n\n\t\tOutput: (5, 26) probability matrix\n\t\t\"\"\"",
        "\"\"\"\n\t\tCreate a probability matrix representing the vocab distributions of positions of letters\n\n\t\tInput: position-encoded vocabulary\n\n\t\tOutput: (26, 5) probability matrix\n\t\t\"\"\"",
        "\"\"\"\n\t\tCreate a list representing the information to be gained for each word\n\n\t\tInputs:\n\t\t- vocabulary\n\t\t- (5, 26) letter and position probability distribution\n\t\t- (26, 5) position and letter probability distribution\n\t\t- (5,26) letter-position state\n\n\t\tOutput: List with each item being a tuple of (onehot encoded word, information value)\n\t\t\"\"\"",
        "\"\"\"\n\t\tCalculates the information value for a given word\n\n\t\tInputs:\n\t\t- (5, 26) one hot encoded word\n\t\t- (5, 26) letter and position probability distribution\n\t\t- (26, 5) position and letter probability distribution\n\t\t- (5,26) letter-position state\n\n\t\tOutput: Tuple containing (onehot encoded word, information value of word)\n\t\t\"\"\"",
        "\"\"\"\n\t\tUpdates the letter-position state based on the evaluation of a letter\n\n\t\tInputs:\n\t\t- current letter-position state\n\t\t- letter info containing:\n\t\t\t- letter\n\t\t\t- position\n\t\t\t- evaluation {3: correct, 2: present, 1: absent}\n\n\t\tOutput: updated letter-position state\n\t\t\"\"\"",
        "\"\"\"\n\t\tRearrange letter infos for a sequence of state-updating that prevents new guesses to overwrite information from past guesses\n\n\t\tInput: Unordered sequence of updates\n\n\t\tOutput: Ordered sequence of updates \n\t\t\"\"\"",
        "\"\"\"\n\t\tCreate letter-position state based on all current guesses\n\n\t\tInput: encoded guesses\n\n\t\tOutput: letter-position state\n\t\t\"\"\"",
        "\"\"\"\n\t\tFilters vocabulary based on the evaulation of one letter at one position\n\n\t\tInputs:\n\t\t- current vocabulary\n\t\t- evaluation {3: correct, 2: present, 1: absent}\n\t\t- position of letter\n\t\t- letter\n\n\t\tOutput: filtered vocabulary\n\t\t\"\"\"",
        "\"\"\"\n\t\tFull filter of vocabulary based on every letter-position combination in the letter-position state\n\n\t\tInputs:\n\t\t- letter-position state\n\t\t- vocabulary\n\t\t- positionally encoded vocabulary\n\n\t\tOutput: fully filtered vocabulary\n\t\t\"\"\""
    ],
    "functions": [
        "execute_final_guesses",
        "live_play_ultra",
        "to_word",
        "to_onehot",
        "to_position_mat",
        "get_initial_vocab",
        "get_zero_out_state",
        "get_vocab_distribution",
        "get_position_distribution",
        "word_information",
        "information_gained",
        "update_state",
        "sort_updates",
        "get_state",
        "vocab_filter_cycle",
        "vocab_filter_total"
    ],
    "classes": [
        "General_Solver"
    ]
}