{
    "identifiers": [
        "streamlit",
        "st",
        "pandas",
        "pd",
        "sqlite3",
        "matplotlib",
        "pyplot",
        "plt",
        "seaborn",
        "sns",
        "hashlib",
        "password",
        "hashlib",
        "sha256",
        "password",
        "encode",
        "hexdigest",
        "stored_password",
        "provided_password",
        "stored_password",
        "hash_password",
        "provided_password",
        "sqlite3",
        "connect",
        "conn",
        "cursor",
        "c",
        "execute",
        "c",
        "execute",
        "conn",
        "commit",
        "conn",
        "close",
        "file",
        "sqlite3",
        "connect",
        "pd",
        "read_csv",
        "file",
        "df",
        "to_sql",
        "conn",
        "if_exists",
        "index",
        "conn",
        "commit",
        "conn",
        "close",
        "sqlite3",
        "connect",
        "conn",
        "cursor",
        "c",
        "execute",
        "c",
        "fetchall",
        "conn",
        "close",
        "data",
        "username",
        "password",
        "sqlite3",
        "connect",
        "conn",
        "cursor",
        "c",
        "execute",
        "username",
        "c",
        "fetchone",
        "conn",
        "close",
        "result",
        "result",
        "verify_password",
        "stored_password",
        "password",
        "sqlite3",
        "connect",
        "conn",
        "cursor",
        "c",
        "execute",
        "c",
        "execute",
        "c",
        "fetchone",
        "c",
        "execute",
        "hash_password",
        "conn",
        "commit",
        "conn",
        "close",
        "st",
        "set_page_config",
        "page_title",
        "page_icon",
        "layout",
        "setup_admin",
        "st",
        "session_state",
        "st",
        "session_state",
        "st",
        "session_state",
        "authenticated",
        "st",
        "title",
        "st",
        "text_input",
        "st",
        "text_input",
        "st",
        "button",
        "authenticate_user",
        "username",
        "password",
        "st",
        "session_state",
        "st",
        "success",
        "st",
        "experimental_rerun",
        "st",
        "error",
        "create_table",
        "st",
        "title",
        "st",
        "markdown",
        "st",
        "file_uploader",
        "uploaded_file",
        "insert_data",
        "uploaded_file",
        "st",
        "success",
        "fetch_data",
        "data",
        "pd",
        "DataFrame",
        "data",
        "columns",
        "df",
        "unique",
        "tolist",
        "df",
        "unique",
        "tolist",
        "df",
        "unique",
        "tolist",
        "st",
        "subheader",
        "st",
        "multiselect",
        "sales_ids",
        "sales_ids",
        "st",
        "subheader",
        "st",
        "multiselect",
        "customer_ids",
        "customer_ids",
        "st",
        "subheader",
        "st",
        "multiselect",
        "countries",
        "countries",
        "df",
        "df",
        "isin",
        "selected_sales_id",
        "df",
        "isin",
        "selected_customer_id",
        "df",
        "isin",
        "selected_country",
        "st",
        "subheader",
        "st",
        "write",
        "filtered_df",
        "value_counts",
        "plt",
        "subplots",
        "sns",
        "barplot",
        "x",
        "country_counts",
        "index",
        "y",
        "country_counts",
        "values",
        "ax",
        "ax",
        "ax",
        "set_xlabel",
        "ax",
        "set_ylabel",
        "st",
        "pyplot",
        "fig",
        "st",
        "write",
        "pd",
        "cut",
        "filtered_df",
        "bins",
        "labels",
        "cost_ranges",
        "value_counts",
        "plt",
        "subplots",
        "ax",
        "pie",
        "cost_range_counts",
        "labels",
        "cost_range_counts",
        "index",
        "autopct",
        "startangle",
        "ax",
        "axis",
        "st",
        "pyplot",
        "fig",
        "generate_ui"
    ],
    "literals": [
        "'database.db'",
        "'DROP TABLE IF EXISTS sales'",
        "'database.db'",
        "'sales'",
        "'replace'",
        "'database.db'",
        "'SELECT sales_id, customer_id, country, cost FROM sales'",
        "'database.db'",
        "'SELECT password FROM admin WHERE username = ?'",
        "'database.db'",
        "'CREATE TABLE IF NOT EXISTS admin (username TEXT PRIMARY KEY, password TEXT)'",
        "'SELECT * FROM admin WHERE username = ?'",
        "'admin'",
        "'INSERT INTO admin (username, password) VALUES (?, ?)'",
        "'admin'",
        "'admin'",
        "\"Sales Dashboard\"",
        "\"ðŸ“Š\"",
        "\"wide\"",
        "'authenticated'",
        "\"Login\"",
        "\"Username\"",
        "\"Password\"",
        "\"password\"",
        "\"Login\"",
        "\"Login successful\"",
        "\"Invalid username or password\"",
        "\"Sales Dashboard\"",
        "\"Upload a CSV file\"",
        "\"csv\"",
        "\"File uploaded successfully and data stored in the database.\"",
        "'Sales ID'",
        "'Customer ID'",
        "'Country'",
        "'Cost'",
        "'Sales ID'",
        "'Customer ID'",
        "'Country'",
        "\"Select Sales ID\"",
        "\"Choose Sales ID\"",
        "\"Select Customer ID\"",
        "\"Choose Customer ID\"",
        "\"Select Country\"",
        "\"Choose Country\"",
        "'Sales ID'",
        "'Customer ID'",
        "'Country'",
        "\"Visualizations\"",
        "\"### Country Distribution\"",
        "'Country'",
        "'Country'",
        "'Count'",
        "\"### Cost Ranges\"",
        "'Cost'",
        "'inf'",
        "'0-50'",
        "'51-100'",
        "'101-150'",
        "'151-200'",
        "'200+'",
        "'%1.1f%%'",
        "'equal'",
        "\"__main__\""
    ],
    "variables": [
        "conn",
        "c",
        "conn",
        "df",
        "conn",
        "c",
        "data",
        "conn",
        "c",
        "result",
        "stored_password",
        "conn",
        "c",
        "authenticated",
        "username",
        "password",
        "authenticated",
        "uploaded_file",
        "data",
        "df",
        "sales_ids",
        "customer_ids",
        "countries",
        "selected_sales_id",
        "selected_customer_id",
        "selected_country",
        "filtered_df",
        "country_counts",
        "fig",
        "ax",
        "cost_ranges",
        "cost_range_counts",
        "fig",
        "ax"
    ],
    "comments": [
        "Function to hash passwords",
        "Function to verify hashed passwords",
        "Function to create SQLite database table if not exists and truncate the table",
        "Function to insert data from CSV into SQLite database",
        "Function to fetch data from SQLite database",
        "Function to authenticate user",
        "Function to setup initial admin credentials (run once)",
        "Function to generate the UI",
        "Rerun the script to update the state",
        "File upload and database insertion",
        "Dropdown to select data from database",
        "Filter data based on selected dropdown values",
        "Visualization",
        "Bar chart for country distribution",
        "Pie chart for cost ranges",
        "Equal aspect ratio ensures that pie is drawn as a circle.",
        "Main function"
    ],
    "docstrings": [
        "'''\n        CREATE TABLE sales (\n            sales_id INTEGER PRIMARY KEY AUTOINCREMENT,\n            country TEXT,\n            customer_id TEXT,\n            date TEXT,\n            cost REAL\n        )\n    '''",
        "\"\"\"\n        Welcome aspiring innovators! In this code fest, you'll embark on a journey of creativity and problem-solving.\n        Get ready to collaborate, code, and make a lasting impact!\n\n        ### Problem statement:\n        Create a sales dashboard that tracks the sales of a given company over the period of a few months.\n        The dashboard should have the following functionalities:\n\n        1. Basic auth functionality.\n        2. CSV File upload and populate data in the DropDown and also store that CSV in the Database.\n        3. Multi Select Searchable Dropdown.\n        4. Image Upload and store it in the Database.\n        5. Data visualization such as bar charts or line charts.\n\n        Duration: 3 hours\n        \"\"\""
    ],
    "functions": [
        "hash_password",
        "verify_password",
        "create_table",
        "insert_data",
        "fetch_data",
        "authenticate_user",
        "setup_admin",
        "generate_ui"
    ],
    "classes": []
}