{
    "identifiers": [
        "Sliding_Window",
        "java",
        "util",
        "ArrayDeque",
        "args",
        "a",
        "k",
        "call",
        "a",
        "k",
        "call1",
        "a",
        "k",
        "a",
        "k",
        "count",
        "i",
        "j",
        "j",
        "a",
        "length",
        "j",
        "i",
        "k",
        "a",
        "i",
        "x",
        "i",
        "x",
        "j",
        "x",
        "a",
        "x",
        "a",
        "x",
        "count",
        "i",
        "j",
        "count",
        "a",
        "k",
        "n",
        "a",
        "length",
        "flips",
        "isFlipped",
        "n",
        "flipCountFromPastForCurri",
        "i",
        "i",
        "n",
        "i",
        "i",
        "k",
        "isFlipped",
        "i",
        "k",
        "flipCountFromPastForCurri",
        "flipCountFromPastForCurri",
        "a",
        "i",
        "i",
        "k",
        "n",
        "flipCountFromPastForCurri",
        "isFlipped",
        "i",
        "flips",
        "flips"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "we will flip all the elment only if a[i] == 0",
        "flip the bits",
        "move the pointer",
        "TC :- O(n*k); // gives TLE",
        "int ans =0 ;",
        "int n = a.length;",
        "boolean[]isFlipped = new boolean[n];",
        "int flip_count = 0;",
        "",
        "for(int i = 0 ; i<a.length; i++){",
        "",
        "// handling flip_count;",
        "if(i >= k && isFlipped[i-k] == true){",
        "flip_count--;",
        "}",
        "",
        "",
        "if(flip_count % 2  == a[i]){",
        "// do the flip;",
        "",
        "// boundary condition",
        "if(i+k > n )return -1;",
        "",
        "flip_count++;",
        "ans++;",
        "isFlipped[i] = true;",
        "",
        "}",
        "}",
        "return ans;"
    ],
    "docstrings": [],
    "functions": [
        "main",
        "call",
        "call1"
    ],
    "classes": [
        "Minimum_Number_of_K_Consecutive_Bit_Flips"
    ]
}