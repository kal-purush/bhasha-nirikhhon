{
    "identifiers": [
        "sum",
        "sum",
        "random",
        "random",
        "deleteme",
        "me"
    ],
    "literals": [
        "'Il numero casuale generato è '",
        "'Romina'",
        "'Timis'",
        "'The Lord of the Rings: The Fellowship of the Ring'",
        "'2001'",
        "'tt0120737'",
        "'movie'",
        "'https://m.media-amazon.com/images/M/MV5BN2EyZjM3NzUtNWUzMi00MTgxLWI0NTctMzY4M2VlOTdjZWRiXkEyXkFqcGdeQXVyNDUzOTQ5MjY@._V1_SX300.jpg'",
        "'The Lord of the Rings: The Return of the King'",
        "'2003'",
        "'tt0167260'",
        "'movie'",
        "'https://m.media-amazon.com/images/M/MV5BNzA5ZDNlZWMtM2NhNS00NDJjLTk4NDItYTRmY2EwMWZlMTY3XkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg'",
        "'The Lord of the Rings: The Two Towers'",
        "'2002'",
        "'tt0167261'",
        "'movie'",
        "'https://m.media-amazon.com/images/M/MV5BNGE5MzIyNTAtNWFlMC00NDA2LWJiMjItMjc4Yjg1OWM5NzhhXkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg'",
        "'Lord of War'",
        "'2005'",
        "'tt0399295'",
        "'movie'",
        "'https://m.media-amazon.com/images/M/MV5BMTYzZWE3MDAtZjZkMi00MzhlLTlhZDUtNmI2Zjg3OWVlZWI0XkEyXkFqcGdeQXVyNDk3NzU2MTQ@._V1_SX300.jpg'",
        "'Lords of Dogtown'",
        "'2005'",
        "'tt0355702'",
        "'movie'",
        "'https://m.media-amazon.com/images/M/MV5BNDBhNGJlOTAtM2ExNi00NmEzLWFmZTQtYTZhYTRlNjJjODhmXkEyXkFqcGdeQXVyNDk3NzU2MTQ@._V1_SX300.jpg'",
        "'The Lord of the Rings'",
        "'1978'",
        "'tt0077869'",
        "'movie'",
        "'https://m.media-amazon.com/images/M/MV5BOGMyNWJhZmYtNGQxYi00Y2ZjLWJmNjktNTgzZWJjOTg4YjM3L2ltYWdlXkEyXkFqcGdeQXVyNTAyODkwOQ@@._V1_SX300.jpg'",
        "'Lord of the Flies'",
        "'1990'",
        "'tt0100054'",
        "'movie'",
        "'https://m.media-amazon.com/images/M/MV5BOTI2NTQyODk0M15BMl5BanBnXkFtZTcwNTQ3NDk0NA@@._V1_SX300.jpg'",
        "'The Lords of Salem'",
        "'2012'",
        "'tt1731697'",
        "'movie'",
        "'https://m.media-amazon.com/images/M/MV5BMjA2NTc5Njc4MV5BMl5BanBnXkFtZTcwNTYzMTcwOQ@@._V1_SX300.jpg'",
        "'Greystoke: The Legend of Tarzan, Lord of the Apes'",
        "'1984'",
        "'tt0087365'",
        "'movie'",
        "'https://m.media-amazon.com/images/M/MV5BMTM5MzcwOTg4MF5BMl5BanBnXkFtZTgwOTQwMzQxMDE@._V1_SX300.jpg'",
        "'Lord of the Flies'",
        "'1963'",
        "'tt0057261'",
        "'movie'",
        "'https://m.media-amazon.com/images/M/MV5BOGEwYTlhMTgtODBlNC00ZjgzLTk1ZmEtNmNkMTEwYTZiM2Y0XkEyXkFqcGdeQXVyMzU4Nzk4MDI@._V1_SX300.jpg'",
        "'The Avengers'",
        "'2012'",
        "'tt0848228'",
        "'movie'",
        "'https://m.media-amazon.com/images/M/MV5BNDYxNjQyMjAtNTdiOS00NGYwLWFmNTAtNThmYjU5ZGI2YTI1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_SX300.jpg'",
        "'Avengers: Infinity War'",
        "'2018'",
        "'tt4154756'",
        "'movie'",
        "'https://m.media-amazon.com/images/M/MV5BMjMxNjY2MDU1OV5BMl5BanBnXkFtZTgwNzY1MTUwNTM@._V1_SX300.jpg'",
        "'Avengers: Age of Ultron'",
        "'2015'",
        "'tt2395427'",
        "'movie'",
        "'https://m.media-amazon.com/images/M/MV5BMTM4OGJmNWMtOTM4Ni00NTE3LTg3MDItZmQxYjc4N2JhNmUxXkEyXkFqcGdeQXVyNTgzMDMzMTg@._V1_SX300.jpg'",
        "'Avengers: Endgame'",
        "'2019'",
        "'tt4154796'",
        "'movie'",
        "'https://m.media-amazon.com/images/M/MV5BMTc5MDE2ODcwNV5BMl5BanBnXkFtZTgwMzI2NzQ2NzM@._V1_SX300.jpg'"
    ],
    "variables": [
        "sum",
        "random",
        "me",
        "movies"
    ],
    "comments": [
        "REGOLE\n- Tutte le risposte devono essere scritte in JavaScript\n- Se sei in difficoltà puoi chiedere aiuto a un Teaching Assistant\n- Puoi usare Google / StackOverflow ma solo quanto ritieni di aver bisogno di qualcosa che non è stato spiegato a lezione\n- Puoi testare il tuo codice in un file separato, o de-commentando un esercizio alla volta\n- Per farlo puoi utilizzare il terminale Bash, quello di VSCode o quello del tuo sistema operativo (se utilizzi macOS o Linux)",
        "JS Basics",
        "ESERCIZIO A\n  Crea una variabile chiamata \"sum\" e assegnaci il risultato della somma tra i valori 10 e 20.",
        "ESERCIZIO B\n  Crea una variabile chiamata \"random\" e assegnaci un numero casuale tra 0 e 20 (deve essere generato dinamicamente a ogni esecuzione).",
        "ESERCIZIO C\n  Crea una variabile chiamata \"me\" e assegnaci un oggetto contenente le seguenti proprietà: name = il tuo nome, surname = il tuo cognome, age = la tua età.",
        "ESERCIZIO D\n  Crea del codice per rimuovere programmaticamente la proprietà \"age\" dall'oggetto precedentemente creato.",
        "ESERCIZIO E\n  Crea del codice per aggiungere programmaticamente all'oggetto precedentemente creato un array chiamato \"skills\", contenente i linguaggi di programmazione che conosci.",
        "ESERCIZIO F\n  Crea un pezzo di codice per aggiungere un nuovo elemento all'array \"skills\" contenuto nell'oggetto \"me\".",
        "ESERCIZIO G\n  Crea un pezzo di codice per rimuovere programmaticamente l'ultimo elemento dall'array \"skills\" contenuto nell'oggetto \"me\".",
        "Funzioni",
        "ESERCIZIO 1\n  Crea una funzione chiamata \"dice\": deve generare un numero casuale tra 1 e 6.",
        "ESERCIZIO 2\n  Crea una funzione chiamata \"whoIsBigger\" che riceve due numeri come parametri e ritorna il maggiore dei due.",
        "ESERCIZIO 3\n  Crea una funzione chiamata \"splitMe\" che riceve una stringa come parametro e ritorna un'array contenente ogni parola della stringa.\n\n  Es.: splitMe(\"I love coding\") => ritorna [\"I\", \"Love\", \"Coding\"]",
        "ESERCIZIO 4\n  Crea una funzione chiamata \"deleteOne\" che riceve una stringa e un booleano come parametri.\n  Se il valore booleano è true la funzione deve ritornare la stringa senza il primo carattere, altrimenti la deve ritornare senza l'ultimo.",
        "ESERCIZIO 5\n  Crea una funzione chiamata \"onlyLetters\" che riceve una stringa come parametro e la ritorna eliminando tutte le cifre numeriche.\n\n  Es.: onlyLetters(\"I have 4 dogs\") => ritorna \"I have dogs\"",
        "ESERCIZIO 6\n  Crea una funzione chiamata \"isThisAnEmail\" che riceve una stringa come parametro e ritorna true se la stringa è un valido indirizzo email.",
        "ESERCIZIO 7\n  Scrivi una funzione chiamata \"whatDayIsIt\" che ritorna il giorno della settimana corrente.",
        "ESERCIZIO 8\n  Scrivi una funzione chiamata \"rollTheDices\" che riceve un numero come parametro.\n  Deve invocare la precedente funzione dice() il numero di volte specificato nel parametro, e deve tornare un oggetto contenente una proprietà \"sum\":\n  il suo valore deve rappresentare il totale di tutti i valori estratti con le invocazioni di dice().\n  L'oggetto ritornato deve anche contenere una proprietà \"values\", contenente un array con tutti i valori estratti dalle invocazioni di dice().\n\n  Example:\n  rollTheDices(3) => ritorna {\n      sum: 10\n      values: [3, 3, 4]\n  }",
        "ESERCIZIO 9\n  Scrivi una funzione chiamata \"howManyDays\" che riceve una data come parametro e ritorna il numero di giorni trascorsi da tale data.",
        "ESERCIZIO 10\n  Scrivi una funzione chiamata \"isTodayMyBirthday\" che deve ritornare true se oggi è il tuo compleanno, falso negli altri casi.",
        "Arrays & Oggetti",
        "NOTA: l'array \"movies\" usato in alcuni esercizi è definito alla fine di questo file",
        "ESERCIZIO 11\n  Scrivi una funzione chiamata \"deleteProp\" che riceve un oggetto e una stringa come parametri; deve ritornare l'oggetto fornito dopo aver eliminato\n  in esso la proprietà chiamata come la stringa passata come secondo parametro.",
        "ESERCIZIO 12\n  Scrivi una funzione chiamata \"newestMovie\" che trova il film più recente nell'array \"movies\" fornito.",
        "ESERCIZIO 13\n  Scrivi una funzione chiamata countMovies che ritorna il numero di film contenuti nell'array \"movies\" fornito.",
        "ESERCIZIO 14\n  Scrivi una funzione chiamata \"onlyTheYears\" che crea un array con solamente gli anni di uscita dei film contenuti nell'array \"movies\" fornito.",
        "ESERCIZIO 15\n  Scrivi una funzione chiamata \"onlyInLastMillennium\" che ritorna solamente i film prodotto nel millennio scorso contenuti nell'array \"movies\" fornito.",
        "ESERCIZIO 16\n  Scrivi una funzione chiamata \"sumAllTheYears\" che ritorna la somma di tutti gli anni in cui sono stati prodotti i film contenuti nell'array \"movies\" fornito.",
        "ESERCIZIO 17\n  Scrivi una funzione chiamata \"searchByTitle\" che riceve una stringa come parametro e ritorna i film nell'array \"movies\" fornito che la contengono nel titolo.",
        "ESERCIZIO 18\n  Scrivi una funzione chiamata \"searchAndDivide\" che riceve una stringa come parametro e ritorna un oggetto contenente due array: \"match\" e \"unmatch\".\n  \"match\" deve includere tutti i film dell'array \"movies\" fornito che contengono la stringa fornita all'interno del proprio titolo, mentre \"unmatch\" deve includere tutti i rimanenti.",
        "ESERCIZIO 19\n  Scrivi una funzione chiamata \"removeIndex\" che riceve un numero come parametro e ritorna l'array \"movies\" fornito privo dell'elemento nella posizione ricevuta come parametro.",
        "DOM (nota: gli elementi che selezionerai non si trovano realmente nella pagina)",
        "ESERCIZIO 20\n  Scrivi una funzione per selezionare l'elemento dotato di id \"container\" all'interno della pagina.",
        "ESERCIZIO 21\n  Scrivi una funzione per selezionare ogni tag <td> all'interno della pagina.",
        "ESERCIZIO 22\n  Scrivi una funzione che, tramite un ciclo, stampa in console il testo contenuto in ogni tag <td> all'interno della pagina.",
        "ESERCIZIO 23\n  Scrivi una funzione per aggiungere un background di colore rosso a ogni link all'interno della pagina.",
        "ESERCIZIO 24\n  Scrivi una funzione per aggiungere un nuovo elemento alla lista non ordinata con id \"myList\".",
        "ESERCIZIO 25\n  Scrivi una funzione per svuotare la lista non ordinata con id \"myList\".",
        "ESERCIZIO 26\n  Scrivi una funzione per aggiungere ad ogni tag <tr> la classe CSS \"test\"",
        "[EXTRA] JS Avanzato",
        "ESERCIZIO 27\n  Crea una funzione chiamata \"halfTree\" che riceve un numero come parametro e costruisce un mezzo albero di \"*\" (asterischi) dell'altezza fornita.\n\n  Esempio:\n  halfTree(3)\n\n  *\n  **\n  ***",
        "ESERCIZIO 28\n  Crea una funzione chiamata \"tree\" che riceve un numero come parametro e costruisce un albero di \"*\" (asterischi) dell'altezza fornita.\n\n  Esempio:\n  tree(3)\n\n    *\n   ***\n  *****",
        "ESERCIZIO 29\n  Crea una funzione chiamata \"isItPrime\" che riceve un numero come parametro e ritorna true se il numero fornito è un numero primo.",
        "Questo array viene usato per gli esercizi. Non modificarlo."
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}