{
    "identifiers": [
        "ollama",
        "ollama",
        "model",
        "modelNames",
        "model",
        "error",
        "error",
        "modelNames",
        "getModelNames",
        "modelNames",
        "selectElement",
        "Option",
        "modelNames",
        "aName",
        "selectElement",
        "Option",
        "aName",
        "enableDisableModelSelect",
        "nameOfModelToUse",
        "USE_ALL_MODELS",
        "nameOfModelToUse",
        "selectElement",
        "setAskButtonsEnabledState",
        "allModelsCheckbox",
        "selectElement",
        "selectElement",
        "allModelsCheckbox",
        "selectElement",
        "nameOfModelToUse",
        "selectElement",
        "enableDisableModelSelect",
        "allModelsChecked",
        "nameOfModelToUse",
        "USE_ALL_MODELS",
        "nameOfModelToUse",
        "allModelsChecked",
        "executeAsk",
        "singleSentence",
        "executeAsk",
        "query",
        "query",
        "ollama",
        "nameOfModelToUse",
        "message",
        "response",
        "addSingleToPrompt",
        "addSingleToPrompt",
        "promptText",
        "addSingleToPrompt",
        "promptText",
        "queryChat",
        "promptText",
        "outputResult",
        "response",
        "response",
        "outputEl",
        "aPart",
        "response",
        "aPart",
        "LlmOutput",
        "aPart",
        "outputEl",
        "LlmOutput",
        "promptTextArea",
        "isTextInputEmpty",
        "nameOfModelToUse",
        "justAskButton",
        "singleSentenceButton",
        "justAskButton",
        "singleSentenceButton",
        "justAskButton",
        "askClicked",
        "singleSentenceButton",
        "askClicked",
        "setSelectedModel",
        "useAllModels",
        "promptTextArea",
        "setAskButtonsEnabledState",
        "initModelSelect"
    ],
    "literals": [
        "\"ollama/browser\"",
        "\"\"",
        "\"useAllModels\"",
        "\"modelSelect\"",
        "\"No Available Models\"",
        "\"modelSelect\"",
        "\"allModels\"",
        "\"disabled\"",
        "\"disabled\"",
        "\"disabled\"",
        "\"modelSelect\"",
        "\"Answer with a single grammatically correct sentence.\"",
        "\"ollamaOutput\"",
        "\"Working...\"",
        "\"singleSentence\"",
        "\"user\"",
        "\"prompt\"",
        "executeAsk(): prompt is \"${promptText}\"",
        "\"ollamaOutput\"",
        "\"No Result\"",
        "\"\"",
        "\"\"",
        "\"No Available Models\"",
        "\"disabled\"",
        "\"disabled\"",
        "\"disabled\"",
        "\"disabled\"",
        "\"disabled\"",
        "\"disabled\"",
        "\"justAsk\"",
        "\"singleSentence\"",
        "\"prompt\"",
        "\"click\"",
        "\"click\"",
        "\"modelSelect\"",
        "\"change\"",
        "\"allModels\"",
        "\"click\"",
        "\"input\""
    ],
    "variables": [
        "nameOfModelToUse",
        "USE_ALL_MODELS",
        "modelNames",
        "selectElement",
        "modelNames",
        "selectElement",
        "allModelsCheckbox",
        "selectElement",
        "allModelsChecked",
        "singleSentence",
        "message",
        "response",
        "promptText",
        "response",
        "LlmOutput",
        "justAskButton",
        "singleSentenceButton",
        "promptTextArea"
    ],
    "comments": [
        "Default name of model used (aka, none).  Set in setSelectedModel() handler.",
        "Function to retrieve a list of LLM's available from the service",
        "Initialize the model <select> element's options.",
        "Set the enabled/disabled state of the <select> based on whether the \"use",
        "all models\" checkbox is checked.  Then set `nameOfModelToUse` either to",
        "the <select>'s first item, or to the special USE_ALL_MODELS.",
        "Make sure the enabled state of the \"Ask\" buttons is correct.  This is",
        "mostly for a refresh of the page.",
        "Set the enabled state of the model <select> based on the checked state of",
        "the \"all models\" checkbox.",
        "Return the checked state of the checkbox and the select element itself",
        "Handle model select element when a new selection is made.",
        "Handle the \"use all models\" checkbox",
        "Handle click on \"Ask\" buttons",
        "Empty out the response area",
        "Function for passing the chat prompt using ollama service.",
        "Handle the \"Ask\" button press",
        "Process the response from the ollama service and put it on the web page",
        "Check if the input <textarea> is empty.",
        "Enable/diable \"Ask\" buttons depending on whether the prompt input has",
        "any text in it or if there is an LLM to query.",
        "Set up the model <select> element"
    ],
    "docstrings": [
        "* Copyright 2024 Inclusive Design Research Centre, OCAD University\n * All rights reserved.\n *\n * Licensed under the New BSD license. You may not use this file except in\n * compliance with this License.\n *\n * You may obtain a copy of the License at\n * https://github.com/inclusive-design/adaptive-palette/blob/main/LICENSE"
    ],
    "functions": [
        "getModelNames",
        "initModelSelect",
        "enableDisableModelSelect",
        "setSelectedModel",
        "useAllModels",
        "askClicked",
        "queryChat",
        "executeAsk",
        "outputResult",
        "isTextInputEmpty",
        "setAskButtonsEnabledState"
    ],
    "classes": []
}