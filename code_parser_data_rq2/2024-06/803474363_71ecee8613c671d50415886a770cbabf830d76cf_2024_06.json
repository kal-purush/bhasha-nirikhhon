{
    "identifiers": [
        "unit",
        "test",
        "FileManager",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileWriter",
        "java",
        "io",
        "log",
        "Log",
        "mx",
        "fei",
        "coilvicapp",
        "logic",
        "implementations",
        "FileManager",
        "org",
        "junit",
        "Assert",
        "assertEquals",
        "org",
        "junit",
        "Assert",
        "assertTrue",
        "org",
        "junit",
        "Test",
        "FILE_MANAGER_FOR_TEST",
        "testFile",
        "file",
        "file",
        "largeFile",
        "File",
        "createTempFile",
        "writer",
        "largeFile",
        "data",
        "i",
        "i",
        "i",
        "data",
        "append",
        "writer",
        "write",
        "data",
        "toString",
        "exception",
        "Log",
        "getLogger",
        "error",
        "exception",
        "getMessage",
        "exception",
        "largeFile",
        "Test",
        "idCollaborativeProjectExample",
        "expectedDestionationPath",
        "idCollaborativeProjectExample",
        "result",
        "file",
        "FILE_MANAGER_FOR_TEST",
        "setFile",
        "file",
        "FILE_MANAGER_FOR_TEST",
        "setDestinationDirectory",
        "idCollaborativeProjectExample",
        "result",
        "FILE_MANAGER_FOR_TEST",
        "saveAssignment",
        "FILE_MANAGER_FOR_TEST",
        "undoSaveAssignment",
        "exception",
        "Log",
        "getLogger",
        "error",
        "exception",
        "getMessage",
        "exception",
        "expectedDestionationPath",
        "result",
        "assertEquals",
        "expectedDestionationPath",
        "result",
        "Test",
        "result",
        "result",
        "FILE_MANAGER_FOR_TEST",
        "isValidFileForSave",
        "intializeValidFile",
        "exception",
        "Log",
        "getLogger",
        "error",
        "exception",
        "getMessage",
        "exception",
        "assertTrue",
        "result",
        "Test",
        "result",
        "result",
        "FILE_MANAGER_FOR_TEST",
        "isValidFileForSave",
        "initializeLargeFile",
        "exception",
        "exception",
        "getMessage",
        "Log",
        "getLogger",
        "error",
        "exception",
        "getMessage",
        "exception",
        "assertTrue",
        "result",
        "Test",
        "result",
        "result",
        "FILE_MANAGER_FOR_TEST",
        "isValidFileForSave",
        "exception",
        "exception",
        "getMessage",
        "Log",
        "getLogger",
        "error",
        "exception",
        "getMessage",
        "exception",
        "assertTrue",
        "result",
        "Test",
        "idCollaborativeProjectExample",
        "result",
        "file",
        "FILE_MANAGER_FOR_TEST",
        "setFile",
        "file",
        "FILE_MANAGER_FOR_TEST",
        "setDestinationDirectory",
        "idCollaborativeProjectExample",
        "FILE_MANAGER_FOR_TEST",
        "saveAssignment",
        "result",
        "FILE_MANAGER_FOR_TEST",
        "isValidFileForSave",
        "file",
        "exception",
        "exception",
        "getMessage",
        "FILE_MANAGER_FOR_TEST",
        "undoSaveAssignment",
        "Log",
        "getLogger",
        "error",
        "exception",
        "getMessage",
        "exception",
        "assertTrue",
        "result"
    ],
    "literals": [
        "\"files\\\\File.txt\"",
        "\"LargeFile\"",
        "\".txt\"",
        "\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. \"",
        "\"files\\\\activities\"",
        "\"\\\\\"",
        "\"\\\\certificate.pdf\"",
        "\"u\"",
        "\"files\\\\template\\\\certificate.pdf\"",
        "\"files\\\\template\\\\certificate.pdf\""
    ],
    "variables": [
        "testFile"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "File",
        "intializeValidFile",
        "File",
        "initializeLargeFile",
        "testSaveAssignment",
        "isValidForSaveSucces",
        "isValidForSaveFailByTooLarge",
        "isValidForSaveFailByNullFile",
        "isValidForSaveFailByExistenceFileAlready"
    ],
    "classes": [
        "FileManagerTest"
    ]
}