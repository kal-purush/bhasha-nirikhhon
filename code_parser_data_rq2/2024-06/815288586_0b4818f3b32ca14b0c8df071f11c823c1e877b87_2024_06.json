{
    "identifiers": [
        "anyio",
        "pytest",
        "chaise",
        "chaise",
        "dictful",
        "Document",
        "pytest",
        "mark",
        "anyio",
        "basic_pool",
        "basic_database",
        "basic_pool",
        "session",
        "Document",
        "spam",
        "session",
        "attempt_put_doc",
        "doc",
        "basic_database",
        "session",
        "get_doc",
        "basic_database",
        "doc",
        "doc2",
        "basic_pool",
        "basic_database",
        "basic_pool",
        "session",
        "Document",
        "spam",
        "session",
        "attempt_put_doc",
        "doc",
        "basic_database",
        "session",
        "get_doc",
        "basic_database",
        "session",
        "attempt_delete_doc",
        "doc",
        "pytest",
        "raises",
        "chaise",
        "Missing",
        "session",
        "get_doc",
        "basic_database",
        "basic_pool",
        "basic_database",
        "basic_pool",
        "session",
        "Document",
        "spam",
        "session",
        "attempt_put_doc",
        "doc",
        "basic_database",
        "doc",
        "session",
        "mutate_doc",
        "basic_database",
        "session",
        "get_doc",
        "basic_database",
        "doc",
        "basic_pool",
        "basic_database",
        "basic_pool",
        "session",
        "Document",
        "count",
        "session",
        "attempt_put_doc",
        "doc",
        "basic_database",
        "anyio",
        "Event",
        "anyio",
        "Event",
        "step1",
        "wait",
        "doc",
        "session",
        "mutate_doc",
        "basic_database",
        "doc",
        "rounds",
        "step2",
        "rounds",
        "doc",
        "session",
        "mutate_doc",
        "basic_database",
        "step1",
        "step2",
        "wait",
        "doc",
        "rounds",
        "rounds",
        "anyio",
        "create_task_group",
        "tg",
        "tg",
        "start_soon",
        "winner",
        "tg",
        "start_soon",
        "loser",
        "session",
        "get_doc",
        "basic_database",
        "doc"
    ],
    "literals": [
        "\"eggs\"",
        "\"test\"",
        "\"test\"",
        "\"eggs\"",
        "\"test\"",
        "\"test\"",
        "\"test\"",
        "\"eggs\"",
        "\"test\"",
        "\"test\"",
        "\"spam\"",
        "\"foobar\"",
        "\"test\"",
        "\"spam\"",
        "\"foobar\"",
        "\"test\"",
        "\"test\"",
        "\"count\"",
        "\"test\"",
        "\"count\"",
        "\"test\"",
        "\"count\""
    ],
    "variables": [
        "pytestmark",
        "session",
        "doc",
        "doc2",
        "session",
        "doc",
        "doc",
        "session",
        "doc",
        "doc",
        "doc",
        "session",
        "doc",
        "step1",
        "step2",
        "rounds",
        "rounds",
        "doc"
    ],
    "comments": [
        "1. Loser gets the doc",
        "2. Winner gets and mutates the doc",
        "3. Loser mutates"
    ],
    "docstrings": [
        "\"\"\"\nTests for chaise.dictful.Basic* versions of things.\n\"\"\"",
        "\"\"\"\n    Test that basic round-tripping works.\n    \"\"\"",
        "\"\"\"\n    Test that we can delete.\n    \"\"\"",
        "\"\"\"\n    Test that a trivial (non-conflicting) mutation works\n    \"\"\"",
        "\"\"\"\n    Test that a conflicting mutation works\n    \"\"\""
    ],
    "functions": [
        "test_put",
        "test_delete",
        "test_simple_mutate",
        "test_conflicting_mutate",
        "winner",
        "loser"
    ],
    "classes": []
}