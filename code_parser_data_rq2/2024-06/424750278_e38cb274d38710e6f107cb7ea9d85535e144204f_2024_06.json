{
    "identifiers": [
        "getSessionStorage",
        "setSessionStorage",
        "forEach",
        "isEqual",
        "Dispatch",
        "SetStateAction",
        "useRef",
        "useState",
        "FieldValues",
        "useForm",
        "UseFormProps",
        "UseFormReturn",
        "useWatch",
        "name",
        "methods",
        "setHasRestored",
        "castValues",
        "value",
        "getSessionStorage",
        "name",
        "isEqual",
        "previousFormValues",
        "defaultValues",
        "isDirty",
        "castValues",
        "castValues",
        "previousFormValues",
        "previousFormValues",
        "forEach",
        "castFormData",
        "value",
        "key",
        "setValue",
        "key",
        "value",
        "setHasRestored",
        "value",
        "props",
        "useForm",
        "props",
        "useRef",
        "useState",
        "useWatch",
        "methods",
        "firstRender",
        "restoreFormValues",
        "formName",
        "methods",
        "setHasRestored",
        "castValues",
        "methods",
        "setSessionStorage",
        "formName",
        "values",
        "firstRender",
        "methods"
    ],
    "literals": [
        "\"@utils/utils\"",
        "\"lodash-es\"",
        "\"react\"",
        "\"react-hook-form\"",
        "string",
        "${name}FormValues",
        "string",
        "${formName}FormValues"
    ],
    "variables": [
        "methods",
        "previousFormValues",
        "castFormData",
        "methods",
        "firstRender",
        "hasRestored",
        "setHasRestored",
        "values"
    ],
    "comments": [
        "the form name used as the key for get and setting session storage",
        "modifies the form values before restoring",
        "A custom hook for creating a form that persists data in session storage."
    ],
    "docstrings": [
        "* Restore form values from session storage.\n *\n * @param name - the name of the form\n * @param methods - collection of methods for updating the form\n * @param setHasRestored - set the state of the form restoration\n * @param castValues - modifies the form values before restoring"
    ],
    "functions": [
        "restoreFormValues",
        "usePersistentForm"
    ],
    "classes": []
}