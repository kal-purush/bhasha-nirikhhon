{
    "identifiers": [
        "locationHash",
        "location",
        "e",
        "urlParseHashParams",
        "locationHash",
        "sessionStorageGet",
        "storedParams",
        "key",
        "storedParams",
        "initParams",
        "key",
        "initParams",
        "key",
        "storedParams",
        "key",
        "sessionStorageSet",
        "initParams",
        "isIframe",
        "isIframe",
        "e",
        "dataParsed",
        "dataParsed",
        "dataParsed",
        "iFrameStyle",
        "dataParsed",
        "dataParsed",
        "e",
        "location",
        "receiveEvent",
        "dataParsed",
        "dataParsed",
        "iFrameStyle",
        "iFrameStyle",
        "e",
        "e",
        "urlencoded",
        "urlencoded",
        "urlencoded",
        "decodeURIComponent",
        "urlencoded",
        "e",
        "urlencoded",
        "locationHash",
        "locationHash",
        "locationHash",
        "locationHash",
        "locationHash",
        "locationHash",
        "urlSafeDecode",
        "locationHash",
        "locationHash",
        "qIndex",
        "locationHash",
        "qIndex",
        "urlSafeDecode",
        "pathParam",
        "locationHash",
        "locationHash",
        "qIndex",
        "urlParseQueryString",
        "locationHash",
        "k",
        "query_params",
        "k",
        "query_params",
        "k",
        "queryString",
        "queryString",
        "queryString",
        "i",
        "i",
        "queryStringParams",
        "i",
        "param",
        "queryStringParams",
        "i",
        "paramName",
        "urlSafeDecode",
        "param",
        "paramValue",
        "param",
        "urlSafeDecode",
        "param",
        "paramName",
        "paramValue",
        "url",
        "addHash",
        "url",
        "ind",
        "url",
        "addHash",
        "url",
        "ind",
        "curHash",
        "curHash",
        "url",
        "addHash",
        "curHash",
        "url",
        "addHash",
        "url",
        "addHash",
        "eventType",
        "callback",
        "eventData",
        "callback",
        "callback",
        "eventData",
        "eventData",
        "eventType",
        "eventData",
        "TelegramWebviewProxy",
        "eventType",
        "eventData",
        "callback",
        "eventType",
        "eventData",
        "callback",
        "isIframe",
        "trustedTarget",
        "eventType",
        "eventData",
        "trustedTarget",
        "callback",
        "e",
        "callback",
        "e",
        "callback",
        "eventType",
        "eventData",
        "eventType",
        "eventData",
        "callEventCallbacks",
        "eventType",
        "callback",
        "callback",
        "eventType",
        "eventData",
        "eventType",
        "func",
        "eventHandlers",
        "eventType",
        "curEventHandlers",
        "curEventHandlers",
        "i",
        "curEventHandlers",
        "i",
        "func",
        "curEventHandlers",
        "i",
        "e",
        "eventType",
        "callback",
        "eventHandlers",
        "eventType",
        "eventHandlers",
        "eventType",
        "eventHandlers",
        "eventType",
        "callback",
        "index",
        "eventHandlers",
        "eventType",
        "callback",
        "eventType",
        "callback",
        "eventHandlers",
        "eventType",
        "eventHandlers",
        "eventType",
        "callback",
        "index",
        "eventHandlers",
        "eventType",
        "index",
        "url",
        "url",
        "navigator",
        "useIframe",
        "iframeContEl",
        "iframeEl",
        "pageHidden",
        "enableHidden",
        "enableHidden",
        "iframeEl",
        "iframeEl",
        "url",
        "setTimeout",
        "pageHidden",
        "url",
        "enableHidden",
        "enableHidden",
        "url",
        "key",
        "value",
        "key",
        "value",
        "e",
        "key",
        "key",
        "e",
        "initParams",
        "isIframe",
        "onEvent",
        "offEvent",
        "postEvent",
        "receiveEvent",
        "callEventCallbacks",
        "urlSafeDecode",
        "urlParseQueryString",
        "urlParseHashParams",
        "urlAppendHashParams",
        "sessionStorageSet",
        "sessionStorageGet",
        "receiveEvent",
        "receiveEvent",
        "WebView",
        "WebView",
        "initParams",
        "initParams",
        "webAppInitData",
        "initParams",
        "webAppInitDataUnsafe",
        "Utils",
        "webAppInitData",
        "key",
        "webAppInitDataUnsafe",
        "webAppInitDataUnsafe",
        "key",
        "val",
        "val",
        "val",
        "val",
        "webAppInitDataUnsafe",
        "key",
        "val",
        "e",
        "initParams",
        "initParams",
        "initParams",
        "themeParamsRaw",
        "theme_params",
        "setThemeParams",
        "theme_params",
        "e",
        "Utils",
        "theme_params",
        "setThemeParams",
        "theme_params",
        "initParams",
        "webAppVersion",
        "initParams",
        "initParams",
        "webAppPlatform",
        "initParams",
        "eventType",
        "eventData",
        "eventData",
        "setThemeParams",
        "eventData",
        "updateBackgroundColor",
        "receiveWebViewEvent",
        "eventType",
        "eventData",
        "eventData",
        "onWindowResize",
        "setViewportHeight",
        "eventData",
        "e",
        "lastWindowHeight",
        "lastWindowHeight",
        "receiveWebViewEvent",
        "e",
        "e",
        "e",
        "e",
        "el",
        "el",
        "el",
        "el",
        "el",
        "el",
        "el",
        "el",
        "el",
        "WebApp",
        "el",
        "e",
        "eventType",
        "arguments",
        "eventType",
        "args",
        "WebView",
        "eventType",
        "callback",
        "callback",
        "WebApp",
        "args",
        "eventType",
        "callback",
        "WebView",
        "eventType",
        "callback",
        "eventType",
        "callback",
        "WebView",
        "eventType",
        "callback",
        "name",
        "value",
        "root",
        "root",
        "root",
        "root",
        "name",
        "value",
        "theme_params",
        "theme_params",
        "theme_params",
        "theme_params",
        "theme_params",
        "key",
        "theme_params",
        "color",
        "parseColorToHex",
        "theme_params",
        "key",
        "themeParams",
        "key",
        "color",
        "key",
        "colorScheme",
        "isColorDark",
        "color",
        "setCssProperty",
        "colorScheme",
        "key",
        "key",
        "setCssProperty",
        "key",
        "color",
        "Utils",
        "themeParams",
        "len",
        "tries",
        "chars",
        "i",
        "len",
        "i",
        "id",
        "chars",
        "chars_len",
        "webAppCallbacks",
        "id",
        "webAppCallbacks",
        "id",
        "id",
        "data",
        "data",
        "isExpanded",
        "data",
        "viewportHeight",
        "data",
        "data",
        "viewportStableHeight",
        "data",
        "receiveWebViewEvent",
        "data",
        "viewportHeight",
        "height",
        "viewportHeight",
        "mainButtonHeight",
        "height",
        "mainButtonHeight",
        "mainButtonHeight",
        "viewportStableHeight",
        "stable_height",
        "viewportStableHeight",
        "mainButtonHeight",
        "stable_height",
        "mainButtonHeight",
        "mainButtonHeight",
        "setCssProperty",
        "height",
        "setCssProperty",
        "stable_height",
        "need_confirmation",
        "versionAtLeast",
        "webAppVersion",
        "isClosingConfirmationEnabled",
        "need_confirmation",
        "WebView",
        "isClosingConfirmationEnabled",
        "headerColorKey",
        "themeParams",
        "headerColorKey",
        "themeParams",
        "headerColor",
        "color",
        "versionAtLeast",
        "webAppVersion",
        "versionAtLeast",
        "themeParams",
        "themeParams",
        "color",
        "color",
        "themeParams",
        "themeParams",
        "color",
        "color",
        "color",
        "color",
        "color_key",
        "color",
        "versionAtLeast",
        "head_color",
        "parseColorToHex",
        "color",
        "head_color",
        "color",
        "versionAtLeast",
        "color_key",
        "color_key",
        "color",
        "headerColorKey",
        "color_key",
        "headerColor",
        "head_color",
        "updateHeaderColor",
        "appHeaderColorKey",
        "headerColorKey",
        "appHeaderColor",
        "headerColor",
        "appHeaderColorKey",
        "headerColorKey",
        "appHeaderColor",
        "headerColor",
        "appHeaderColor",
        "WebView",
        "headerColor",
        "WebView",
        "headerColorKey",
        "backgroundColor",
        "themeParams",
        "backgroundColor",
        "themeParams",
        "backgroundColor",
        "color",
        "versionAtLeast",
        "webAppVersion",
        "color",
        "color",
        "bg_color",
        "color",
        "bg_color",
        "parseColorToHex",
        "color",
        "bg_color",
        "color",
        "backgroundColor",
        "bg_color",
        "updateBackgroundColor",
        "getBackgroundColor",
        "appBackgroundColor",
        "color",
        "appBackgroundColor",
        "color",
        "WebView",
        "color",
        "color",
        "color",
        "match",
        "color",
        "match",
        "match",
        "color",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "color",
        "parseInt",
        "match",
        "parseInt",
        "match",
        "parseInt",
        "match",
        "r",
        "r",
        "r",
        "g",
        "g",
        "g",
        "b",
        "b",
        "b",
        "r",
        "g",
        "b",
        "rgb",
        "rgb",
        "rgb",
        "rgb",
        "rgb",
        "rgb",
        "rgb",
        "rgb",
        "rgb",
        "rgb",
        "rgb",
        "parseInt",
        "rgb",
        "parseInt",
        "rgb",
        "parseInt",
        "rgb",
        "r",
        "r",
        "g",
        "g",
        "b",
        "b",
        "hsp",
        "v1",
        "v2",
        "v1",
        "v1",
        "v2",
        "v2",
        "v1",
        "v1",
        "v2",
        "v2",
        "v1",
        "v2",
        "i",
        "i",
        "a",
        "i",
        "p1",
        "parseInt",
        "v1",
        "i",
        "p2",
        "parseInt",
        "v2",
        "i",
        "p1",
        "p2",
        "p1",
        "p2",
        "ver",
        "versionCompare",
        "webAppVersion",
        "ver",
        "Blob",
        "e",
        "i",
        "i",
        "i",
        "code",
        "code",
        "s",
        "code",
        "code",
        "s",
        "code",
        "code",
        "i",
        "s",
        "backButton",
        "val",
        "setParams",
        "val",
        "isVisible",
        "WebView",
        "onBackButtonPressed",
        "receiveWebViewEvent",
        "isVisible",
        "btn_params",
        "btn_params",
        "btn_params",
        "buttonParams",
        "btn_params",
        "versionAtLeast",
        "webAppVersion",
        "buttonParams",
        "buttonState",
        "btn_params",
        "curButtonState",
        "btn_state",
        "curButtonState",
        "btn_state",
        "WebView",
        "btn_params",
        "buttonCheckVersion",
        "backButton",
        "isVisible",
        "updateButton",
        "backButton",
        "backButton",
        "callback",
        "buttonCheckVersion",
        "onWebViewEvent",
        "callback",
        "backButton",
        "backButton",
        "callback",
        "buttonCheckVersion",
        "offWebViewEvent",
        "callback",
        "backButton",
        "backButton",
        "setParams",
        "backButton",
        "setParams",
        "backButton",
        "mainButton",
        "val",
        "mainButton",
        "val",
        "buttonText",
        "mainButton",
        "val",
        "mainButton",
        "val",
        "buttonColor",
        "themeParams",
        "mainButton",
        "val",
        "mainButton",
        "val",
        "buttonTextColor",
        "themeParams",
        "mainButton",
        "val",
        "mainButton",
        "val",
        "isVisible",
        "mainButton",
        "isProgressVisible",
        "mainButton",
        "val",
        "mainButton",
        "val",
        "isActive",
        "WebView",
        "onMainButtonPressed",
        "initParams",
        "debugBtn",
        "debugBtnStyle",
        "k",
        "debugBtnStyle",
        "debugBtn",
        "k",
        "debugBtnStyle",
        "k",
        "onDomLoaded",
        "onDomLoaded",
        "debugBtn",
        "debugBtn",
        "onMainButtonPressed",
        "isActive",
        "receiveWebViewEvent",
        "mainButton",
        "mainButton",
        "isVisible",
        "isActive",
        "isProgressVisible",
        "buttonText",
        "color",
        "text_color",
        "btn_params",
        "btn_params",
        "btn_params",
        "buttonParams",
        "btn_params",
        "buttonParams",
        "buttonState",
        "btn_params",
        "curButtonState",
        "btn_state",
        "curButtonState",
        "btn_state",
        "WebView",
        "btn_params",
        "initParams",
        "updateDebugButton",
        "btn_params",
        "btn_params",
        "btn_params",
        "debugBtn",
        "mainButtonHeight",
        "debugBtn",
        "btn_params",
        "debugBtn",
        "btn_params",
        "debugBtn",
        "btn_params",
        "debugBtn",
        "btn_params",
        "debugBtn",
        "btn_params",
        "debugBtn",
        "btn_params",
        "debugBtn",
        "btn_params",
        "debugBtn",
        "mainButtonHeight",
        "mainButtonHeight",
        "setViewportHeight",
        "strTrim",
        "text",
        "text",
        "text",
        "buttonText",
        "text",
        "buttonColor",
        "parseColorToHex",
        "color",
        "buttonColor",
        "color",
        "buttonTextColor",
        "parseColorToHex",
        "text_color",
        "buttonTextColor",
        "text_color",
        "mainButton",
        "isVisible",
        "isActive",
        "updateButton",
        "mainButton",
        "mainButton",
        "text",
        "mainButton",
        "text",
        "mainButton",
        "callback",
        "onWebViewEvent",
        "callback",
        "mainButton",
        "mainButton",
        "callback",
        "offWebViewEvent",
        "callback",
        "mainButton",
        "mainButton",
        "mainButton",
        "mainButton",
        "mainButton",
        "mainButton",
        "mainButton",
        "mainButton",
        "mainButton",
        "mainButton",
        "leaveActive",
        "isActive",
        "leaveActive",
        "isProgressVisible",
        "updateButton",
        "mainButton",
        "mainButton",
        "mainButton",
        "isActive",
        "isProgressVisible",
        "updateButton",
        "mainButton",
        "mainButton",
        "setParams",
        "mainButton",
        "settingsButton",
        "val",
        "setParams",
        "val",
        "isVisible",
        "WebView",
        "onSettingsButtonPressed",
        "receiveWebViewEvent",
        "isVisible",
        "btn_params",
        "btn_params",
        "btn_params",
        "buttonParams",
        "btn_params",
        "versionAtLeast",
        "webAppVersion",
        "buttonParams",
        "buttonState",
        "btn_params",
        "curButtonState",
        "btn_state",
        "curButtonState",
        "btn_state",
        "WebView",
        "btn_params",
        "buttonCheckVersion",
        "settingsButton",
        "isVisible",
        "updateButton",
        "settingsButton",
        "settingsButton",
        "callback",
        "buttonCheckVersion",
        "onWebViewEvent",
        "callback",
        "settingsButton",
        "settingsButton",
        "callback",
        "buttonCheckVersion",
        "offWebViewEvent",
        "callback",
        "settingsButton",
        "settingsButton",
        "setParams",
        "settingsButton",
        "setParams",
        "settingsButton",
        "versionAtLeast",
        "webAppVersion",
        "hapticFeedback",
        "WebView",
        "hapticFeedback",
        "hapticFeedback",
        "style",
        "triggerFeedback",
        "style",
        "hapticFeedback",
        "triggerFeedback",
        "hapticFeedback",
        "triggerFeedback",
        "hapticFeedback",
        "method",
        "callback",
        "versionAtLeast",
        "webAppVersion",
        "invokeCustomMethod",
        "method",
        "callback",
        "cloudStorage",
        "cloudStorage",
        "key",
        "value",
        "callback",
        "invokeStorageMethod",
        "key",
        "value",
        "callback",
        "cloudStorage",
        "key",
        "callback",
        "cloudStorage",
        "key",
        "callback",
        "err",
        "res",
        "err",
        "callback",
        "err",
        "callback",
        "res",
        "key",
        "cloudStorage",
        "keys",
        "callback",
        "invokeStorageMethod",
        "keys",
        "callback",
        "cloudStorage",
        "key",
        "callback",
        "cloudStorage",
        "key",
        "callback",
        "cloudStorage",
        "keys",
        "callback",
        "invokeStorageMethod",
        "keys",
        "callback",
        "cloudStorage",
        "callback",
        "invokeStorageMethod",
        "callback",
        "cloudStorage",
        "biometricManager",
        "isInited",
        "biometricManager",
        "isInited",
        "isBiometricAvailable",
        "biometricManager",
        "biometricType",
        "biometricManager",
        "isAccessRequested",
        "biometricManager",
        "isAccessRequested",
        "isAccessGranted",
        "biometricManager",
        "isBiometricTokenSaved",
        "biometricManager",
        "deviceId",
        "WebView",
        "onBiometryInfoReceived",
        "WebView",
        "onBiometryAuthRequested",
        "WebView",
        "onBiometryTokenUpdated",
        "eventType",
        "eventData",
        "isInited",
        "eventData",
        "isBiometricAvailable",
        "biometricType",
        "eventData",
        "eventData",
        "isAccessRequested",
        "isAccessGranted",
        "eventData",
        "isBiometricTokenSaved",
        "eventData",
        "isAccessRequested",
        "isAccessGranted",
        "isBiometricTokenSaved",
        "isBiometricAvailable",
        "biometricType",
        "isAccessRequested",
        "isAccessGranted",
        "isBiometricTokenSaved",
        "deviceId",
        "eventData",
        "initRequestState",
        "i",
        "initRequestState",
        "i",
        "initRequestState",
        "i",
        "callback",
        "accessRequestState",
        "accessRequestState",
        "state",
        "state",
        "isAccessGranted",
        "receiveWebViewEvent",
        "eventType",
        "eventData",
        "eventData",
        "eventData",
        "authRequestState",
        "authRequestState",
        "state",
        "state",
        "isAuthenticated",
        "isAuthenticated",
        "biometricToken",
        "receiveWebViewEvent",
        "isAuthenticated",
        "biometricToken",
        "eventType",
        "eventData",
        "isBiometricAvailable",
        "isAccessRequested",
        "eventData",
        "isBiometricTokenSaved",
        "applied",
        "eventData",
        "isBiometricTokenSaved",
        "applied",
        "tokenRequestState",
        "tokenRequestState",
        "state",
        "state",
        "applied",
        "receiveWebViewEvent",
        "applied",
        "versionAtLeast",
        "webAppVersion",
        "isInited",
        "biometricManager",
        "callback",
        "checkVersion",
        "biometricManager",
        "isInited",
        "biometricManager",
        "callback",
        "initRequestState",
        "callback",
        "WebView",
        "biometricManager",
        "biometricManager",
        "callback",
        "checkVersion",
        "biometricManager",
        "checkInit",
        "isBiometricAvailable",
        "accessRequestState",
        "strTrim",
        "reason",
        "reason",
        "reason",
        "popup_params",
        "reason",
        "accessRequestState",
        "callback",
        "WebView",
        "popup_params",
        "biometricManager",
        "biometricManager",
        "callback",
        "checkVersion",
        "biometricManager",
        "checkInit",
        "isBiometricAvailable",
        "isAccessGranted",
        "authRequestState",
        "strTrim",
        "reason",
        "reason",
        "reason",
        "popup_params",
        "reason",
        "authRequestState",
        "callback",
        "WebView",
        "popup_params",
        "biometricManager",
        "biometricManager",
        "token",
        "callback",
        "checkVersion",
        "biometricManager",
        "token",
        "token",
        "token",
        "token",
        "checkInit",
        "isBiometricAvailable",
        "isAccessGranted",
        "tokenRequestState",
        "tokenRequestState",
        "callback",
        "WebView",
        "token",
        "biometricManager",
        "biometricManager",
        "checkVersion",
        "biometricManager",
        "checkInit",
        "isBiometricAvailable",
        "isAccessRequested",
        "isAccessGranted",
        "biometricManager",
        "WebView",
        "biometricManager",
        "biometricManager",
        "eventType",
        "eventData",
        "eventData",
        "webAppInvoices",
        "eventData",
        "webAppInvoices",
        "eventData",
        "webAppInvoices",
        "eventData",
        "invoiceData",
        "invoiceData",
        "eventData",
        "receiveWebViewEvent",
        "invoiceData",
        "eventData",
        "eventType",
        "eventData",
        "webAppPopupOpened",
        "webAppPopupOpened",
        "eventData",
        "button_id",
        "eventData",
        "popupData",
        "popupData",
        "button_id",
        "receiveWebViewEvent",
        "button_id",
        "eventType",
        "eventData",
        "webAppScanQrPopupOpened",
        "eventData",
        "data",
        "eventData",
        "popupData",
        "popupData",
        "data",
        "webAppScanQrPopupOpened",
        "WebView",
        "receiveWebViewEvent",
        "data",
        "eventType",
        "eventData",
        "webAppScanQrPopupOpened",
        "eventType",
        "eventData",
        "eventData",
        "webAppCallbacks",
        "eventData",
        "webAppCallbacks",
        "eventData",
        "webAppCallbacks",
        "eventData",
        "eventData",
        "data",
        "eventData",
        "requestData",
        "requestData",
        "data",
        "receiveWebViewEvent",
        "data",
        "eventType",
        "eventData",
        "WebAppWriteAccessRequested",
        "WebAppWriteAccessRequested",
        "requestData",
        "requestData",
        "eventData",
        "receiveWebViewEvent",
        "eventData",
        "callback",
        "timeout",
        "invokeCustomMethod",
        "err",
        "res",
        "res",
        "res",
        "clearTimeout",
        "fallbackTo",
        "callback",
        "res",
        "reqDelay",
        "reqTo",
        "setTimeout",
        "reqInvoke",
        "reqDelay",
        "clearTimeout",
        "reqTo",
        "callback",
        "fallbackTo",
        "setTimeout",
        "fallbackInvoke",
        "timeout",
        "reqInvoke",
        "eventType",
        "eventData",
        "WebAppContactRequested",
        "WebAppContactRequested",
        "eventData",
        "eventData",
        "requestSent",
        "getRequestedContact",
        "res",
        "res",
        "res",
        "webViewEvent",
        "res",
        "webViewEvent",
        "Utils",
        "res",
        "key",
        "webViewEvent",
        "webViewEvent",
        "key",
        "val",
        "val",
        "val",
        "val",
        "webViewEvent",
        "key",
        "val",
        "e",
        "requestData",
        "requestData",
        "requestSent",
        "webViewEvent",
        "receiveWebViewEvent",
        "webViewEvent",
        "requestData",
        "requestData",
        "requestSent",
        "webViewEvent",
        "receiveWebViewEvent",
        "webViewEvent",
        "eventType",
        "eventData",
        "eventData",
        "webAppCallbacks",
        "eventData",
        "webAppCallbacks",
        "eventData",
        "webAppCallbacks",
        "eventData",
        "eventData",
        "res",
        "eventData",
        "eventData",
        "err",
        "eventData",
        "requestData",
        "requestData",
        "err",
        "res",
        "method",
        "callback",
        "versionAtLeast",
        "webAppVersion",
        "generateCallbackId",
        "req_id",
        "method",
        "webAppCallbacks",
        "req_id",
        "callback",
        "WebView",
        "req_params",
        "WebApp",
        "webAppInitData",
        "WebApp",
        "webAppInitDataUnsafe",
        "WebApp",
        "webAppVersion",
        "WebApp",
        "WebApp",
        "colorScheme",
        "WebApp",
        "themeParams",
        "WebApp",
        "isExpanded",
        "WebApp",
        "viewportHeight",
        "viewportHeight",
        "mainButtonHeight",
        "WebApp",
        "viewportStableHeight",
        "viewportStableHeight",
        "mainButtonHeight",
        "WebApp",
        "val",
        "setClosingConfirmation",
        "val",
        "isClosingConfirmationEnabled",
        "WebApp",
        "val",
        "setHeaderColor",
        "val",
        "getHeaderColor",
        "WebApp",
        "val",
        "setBackgroundColor",
        "val",
        "getBackgroundColor",
        "WebApp",
        "BackButton",
        "WebApp",
        "MainButton",
        "WebApp",
        "SettingsButton",
        "WebApp",
        "HapticFeedback",
        "WebApp",
        "CloudStorage",
        "WebApp",
        "BiometricManager",
        "WebApp",
        "color_key",
        "WebApp",
        "color_key",
        "WebApp",
        "color",
        "WebApp",
        "color",
        "WebApp",
        "WebApp",
        "WebApp",
        "WebApp",
        "WebApp",
        "ver",
        "versionAtLeast",
        "ver",
        "WebApp",
        "eventType",
        "callback",
        "onWebViewEvent",
        "eventType",
        "callback",
        "WebApp",
        "eventType",
        "callback",
        "offWebViewEvent",
        "eventType",
        "callback",
        "WebApp",
        "data",
        "data",
        "data",
        "data",
        "byteLength",
        "data",
        "data",
        "WebView",
        "data",
        "WebApp",
        "query",
        "choose_chat_types",
        "versionAtLeast",
        "webAppVersion",
        "initParams",
        "query",
        "query",
        "query",
        "query",
        "choose_chat_types",
        "choose_chat_types",
        "choose_chat_types",
        "i",
        "choose_chat_types",
        "i",
        "choose_chat_types",
        "i",
        "good_types",
        "chat_type",
        "chat_type",
        "good_types",
        "chat_type",
        "good_types",
        "chat_type",
        "chat_types",
        "chat_type",
        "WebView",
        "query",
        "chat_types",
        "WebApp",
        "url",
        "options",
        "a",
        "url",
        "a",
        "a",
        "url",
        "a",
        "options",
        "options",
        "versionAtLeast",
        "WebView",
        "url",
        "versionAtLeast",
        "options",
        "url",
        "WebApp",
        "url",
        "a",
        "url",
        "a",
        "a",
        "url",
        "a",
        "url",
        "a",
        "a",
        "isIframe",
        "versionAtLeast",
        "WebView",
        "path_full",
        "location",
        "path_full",
        "WebApp",
        "url",
        "callback",
        "a",
        "url",
        "a",
        "a",
        "a",
        "match",
        "a",
        "slug",
        "match",
        "url",
        "versionAtLeast",
        "webAppVersion",
        "webAppInvoices",
        "slug",
        "webAppInvoices",
        "slug",
        "url",
        "callback",
        "WebView",
        "slug",
        "WebApp",
        "callback",
        "versionAtLeast",
        "webAppVersion",
        "webAppPopupOpened",
        "title",
        "strTrim",
        "title",
        "title",
        "title",
        "popup_params",
        "title",
        "message",
        "strTrim",
        "message",
        "message",
        "message",
        "popup_params",
        "message",
        "i",
        "i",
        "i",
        "button",
        "id",
        "button",
        "id",
        "id",
        "btn",
        "id",
        "button",
        "button_type",
        "button_type",
        "btn",
        "button_type",
        "button_type",
        "button_type",
        "button_type",
        "button_type",
        "button_type",
        "button",
        "text",
        "strTrim",
        "button",
        "text",
        "button_type",
        "button",
        "text",
        "text",
        "btn",
        "text",
        "button_type",
        "buttons",
        "btn",
        "buttons",
        "buttons",
        "buttons",
        "popup_params",
        "buttons",
        "webAppPopupOpened",
        "callback",
        "WebView",
        "popup_params",
        "WebApp",
        "message",
        "callback",
        "WebApp",
        "message",
        "callback",
        "callback",
        "WebApp",
        "message",
        "callback",
        "WebApp",
        "message",
        "callback",
        "button_id",
        "callback",
        "button_id",
        "WebApp",
        "callback",
        "versionAtLeast",
        "webAppVersion",
        "webAppScanQrPopupOpened",
        "text",
        "strTrim",
        "text",
        "text",
        "text",
        "popup_params",
        "text",
        "webAppScanQrPopupOpened",
        "callback",
        "WebView",
        "popup_params",
        "WebApp",
        "versionAtLeast",
        "webAppVersion",
        "webAppScanQrPopupOpened",
        "WebView",
        "WebApp",
        "callback",
        "versionAtLeast",
        "webAppVersion",
        "generateCallbackId",
        "req_id",
        "webAppCallbacks",
        "req_id",
        "callback",
        "WebView",
        "req_params",
        "WebApp",
        "callback",
        "versionAtLeast",
        "webAppVersion",
        "WebAppWriteAccessRequested",
        "WebAppWriteAccessRequested",
        "callback",
        "WebView",
        "WebApp",
        "callback",
        "versionAtLeast",
        "webAppVersion",
        "WebAppContactRequested",
        "WebAppContactRequested",
        "callback",
        "WebView",
        "WebApp",
        "method",
        "callback",
        "invokeCustomMethod",
        "method",
        "callback",
        "WebApp",
        "WebView",
        "WebApp",
        "WebView",
        "WebApp",
        "WebView",
        "WebApp",
        "updateHeaderColor",
        "updateBackgroundColor",
        "setViewportHeight",
        "initParams",
        "SettingsButton",
        "onWindowResize",
        "isIframe",
        "linkHandler",
        "WebView",
        "onThemeChanged",
        "WebView",
        "onViewportChanged",
        "WebView",
        "onInvoiceClosed",
        "WebView",
        "onPopupClosed",
        "WebView",
        "onQrTextReceived",
        "WebView",
        "onScanQrPopupClosed",
        "WebView",
        "onClipboardTextReceived",
        "WebView",
        "onWriteAccessRequested",
        "WebView",
        "onPhoneRequested",
        "WebView",
        "onCustomMethodInvoked",
        "WebView",
        "WebView"
    ],
    "literals": [
        "''",
        "'initParams'",
        "'undefined'",
        "'initParams'",
        "'message'",
        "'set_custom_style'",
        "'https://web.telegram.org'",
        "'reload_iframe'",
        "'iframe_will_reload'",
        "'*'",
        "'style'",
        "'iframe_ready'",
        "'*'",
        "'%20'",
        "''",
        "'='",
        "'?'",
        "'?'",
        "'&'",
        "'='",
        "'#'",
        "'#'",
        "'='",
        "'?'",
        "'&'",
        "'?'",
        "''",
        "'[Telegram.WebView] > postEvent'",
        "'notify'",
        "'https://web.telegram.org'",
        "'*'",
        "'[Telegram.WebView] < receiveEvent'",
        "'tgme_frame_cont'",
        "'iframe'",
        "'pagehide'",
        "'blur'",
        "'pagehide'",
        "'blur'",
        "'__telegram__'",
        "'__telegram__'",
        "''",
        "'light'",
        "'6.0'",
        "'unknown'",
        "'{'",
        "'}'",
        "'['",
        "']'",
        "'themeParams'",
        "'themeChanged'",
        "'resize'",
        "'viewportChanged'",
        "'A'",
        "'A'",
        "'_blank'",
        "'http:'",
        "'https:'",
        "'t.me'",
        "''",
        "'webview:'",
        "'webview:'",
        "'webview:'",
        "'--tg-'",
        "'#1c1c1d'",
        "'#2c2c2e'",
        "'bg_color'",
        "'dark'",
        "'light'",
        "'color-scheme'",
        "'theme-'",
        "'_'",
        "'-'",
        "'themeParams'",
        "''",
        "'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'",
        "'WebAppCallbackIdGenerateFailed'",
        "'undefined'",
        "'viewportChanged'",
        "'px'",
        "'calc(100vh - '",
        "'px)'",
        "'100vh'",
        "'px'",
        "'calc(100vh - '",
        "'px)'",
        "'100vh'",
        "'viewport-height'",
        "'viewport-stable-height'",
        "'6.2'",
        "'[Telegram.WebApp] Closing confirmation is not supported in version '",
        "'web_app_setup_closing_behavior'",
        "'bg_color'",
        "'secondary_bg_color'",
        "'bg_color'",
        "'6.1'",
        "'[Telegram.WebApp] Header color is not supported in version '",
        "'6.9'",
        "'bg_color'",
        "'secondary_bg_color'",
        "'bg_color'",
        "'secondary_bg_color'",
        "'6.9'",
        "'[Telegram.WebApp] Header color format is invalid'",
        "'WebAppHeaderColorInvalid'",
        "'6.9'",
        "'bg_color'",
        "'secondary_bg_color'",
        "\"[Telegram.WebApp] Header color key should be one of Telegram.WebApp.themeParams.bg_color, Telegram.WebApp.themeParams.secondary_bg_color, 'bg_color', 'secondary_bg_color'\"",
        "'WebAppHeaderColorKeyInvalid'",
        "'web_app_set_header_color'",
        "'web_app_set_header_color'",
        "'bg_color'",
        "'secondary_bg_color'",
        "'bg_color'",
        "'6.1'",
        "'[Telegram.WebApp] Background color is not supported in version '",
        "'bg_color'",
        "'secondary_bg_color'",
        "'[Telegram.WebApp] Background color format is invalid'",
        "'WebAppBackgroundColorInvalid'",
        "'web_app_set_background_color'",
        "''",
        "'#'",
        "'#'",
        "'0'",
        "''",
        "'0'",
        "''",
        "'0'",
        "''",
        "'#'",
        "''",
        "'string'",
        "''",
        "'string'",
        "''",
        "''",
        "'.'",
        "''",
        "'.'",
        "'isVisible'",
        "'back_button_pressed'",
        "'backButtonClicked'",
        "'undefined'",
        "'6.1'",
        "'[Telegram.WebApp] BackButton is not supported in version '",
        "'web_app_setup_back_button'",
        "'undefined'",
        "'backButtonClicked'",
        "'backButtonClicked'",
        "'CONTINUE'",
        "'text'",
        "'color'",
        "'#2481cc'",
        "'textColor'",
        "'#ffffff'",
        "'isVisible'",
        "'isProgressVisible'",
        "'isActive'",
        "'main_button_pressed'",
        "'tg-main-button'",
        "'600 14px/18px sans-serif'",
        "'none'",
        "'100%'",
        "'48px'",
        "'0'",
        "'no-repeat right center'",
        "'fixed'",
        "'0'",
        "'0'",
        "'0'",
        "'0'",
        "'15px 20px'",
        "'center'",
        "'border-box'",
        "'10000'",
        "'DOMContentLoaded'",
        "'DOMContentLoaded'",
        "'click'",
        "'mainButtonClicked'",
        "'undefined'",
        "'web_app_setup_main_button'",
        "'block'",
        "'1'",
        "'0.8'",
        "'pointer'",
        "'auto'",
        "\"url('data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%20viewport%3D%220%200%2048%2048%22%20width%3D%2248px%22%20height%3D%2248px%22%3E%3Ccircle%20cx%3D%2250%25%22%20cy%3D%2250%25%22%20stroke%3D%22%23fff%22%20stroke-width%3D%222.25%22%20stroke-linecap%3D%22round%22%20fill%3D%22none%22%20stroke-dashoffset%3D%22106%22%20r%3D%229%22%20stroke-dasharray%3D%2256.52%22%20rotate%3D%22-90%22%3E%3Canimate%20attributeName%3D%22stroke-dashoffset%22%20attributeType%3D%22XML%22%20dur%3D%22360s%22%20from%3D%220%22%20to%3D%2212500%22%20repeatCount%3D%22indefinite%22%3E%3C%2Fanimate%3E%3CanimateTransform%20attributeName%3D%22transform%22%20attributeType%3D%22XML%22%20type%3D%22rotate%22%20dur%3D%221s%22%20from%3D%22-90%2024%2024%22%20to%3D%22630%2024%2024%22%20repeatCount%3D%22indefinite%22%3E%3C%2FanimateTransform%3E%3C%2Fcircle%3E%3C%2Fsvg%3E')\"",
        "'none'",
        "'none'",
        "'border-box'",
        "'px'",
        "'undefined'",
        "'[Telegram.WebApp] Main button text is required'",
        "'WebAppMainButtonParamInvalid'",
        "'[Telegram.WebApp] Main button text is too long'",
        "'WebAppMainButtonParamInvalid'",
        "'undefined'",
        "'[Telegram.WebApp] Main button color format is invalid'",
        "'WebAppMainButtonParamInvalid'",
        "'undefined'",
        "'[Telegram.WebApp] Main button text color format is invalid'",
        "'WebAppMainButtonParamInvalid'",
        "'undefined'",
        "'[Telegram.WebApp] Main button text is required'",
        "'WebAppMainButtonParamInvalid'",
        "'undefined'",
        "'mainButtonClicked'",
        "'mainButtonClicked'",
        "'isVisible'",
        "'settings_button_pressed'",
        "'settingsButtonClicked'",
        "'undefined'",
        "'6.10'",
        "'[Telegram.WebApp] SettingsButton is not supported in version '",
        "'web_app_setup_settings_button'",
        "'undefined'",
        "'settingsButtonClicked'",
        "'settingsButtonClicked'",
        "'6.1'",
        "'[Telegram.WebApp] HapticFeedback is not supported in version '",
        "'impact'",
        "'light'",
        "'medium'",
        "'heavy'",
        "'rigid'",
        "'soft'",
        "'[Telegram.WebApp] Haptic impact style is invalid'",
        "'WebAppHapticImpactStyleInvalid'",
        "'notification'",
        "'error'",
        "'success'",
        "'warning'",
        "'[Telegram.WebApp] Haptic notification type is invalid'",
        "'WebAppHapticNotificationTypeInvalid'",
        "'selection_change'",
        "'[Telegram.WebApp] Haptic feedback type is invalid'",
        "'WebAppHapticFeedbackTypeInvalid'",
        "'web_app_trigger_haptic_feedback'",
        "'impact'",
        "'notification'",
        "'selection_change'",
        "'6.9'",
        "'[Telegram.WebApp] CloudStorage is not supported in version '",
        "'WebAppMethodUnsupported'",
        "'saveStorageValue'",
        "'getStorageValues'",
        "'deleteStorageValues'",
        "'getStorageKeys'",
        "'unknown'",
        "''",
        "'isInited'",
        "'isBiometricAvailable'",
        "'biometricType'",
        "'unknown'",
        "'isAccessRequested'",
        "'isAccessGranted'",
        "'isBiometricTokenSaved'",
        "'deviceId'",
        "''",
        "'biometry_info_received'",
        "'biometry_auth_requested'",
        "'biometry_token_updated'",
        "'unknown'",
        "'unknown'",
        "''",
        "'biometricManagerUpdated'",
        "'authorized'",
        "''",
        "'biometricAuthRequested'",
        "'updated'",
        "'removed'",
        "'biometricTokenUpdated'",
        "'7.2'",
        "'[Telegram.WebApp] BiometricManager is not supported in version '",
        "'[Telegram.WebApp] BiometricManager should be inited before using.'",
        "'WebAppBiometricManagerNotInited'",
        "'web_app_biometry_get_info'",
        "'[Telegram.WebApp] Biometrics is not available on this device.'",
        "'WebAppBiometricManagerBiometricsNotAvailable'",
        "'[Telegram.WebApp] Access is already requested'",
        "'WebAppBiometricManagerAccessRequested'",
        "'undefined'",
        "'[Telegram.WebApp] Biometric reason is too long'",
        "'WebAppBiometricRequestAccessParamInvalid'",
        "'web_app_biometry_request_access'",
        "'[Telegram.WebApp] Biometrics is not available on this device.'",
        "'WebAppBiometricManagerBiometricsNotAvailable'",
        "'[Telegram.WebApp] Biometric access was not granted by the user.'",
        "'WebAppBiometricManagerBiometricAccessNotGranted'",
        "'[Telegram.WebApp] Authentication request is already in progress.'",
        "'WebAppBiometricManagerAuthenticationRequested'",
        "'undefined'",
        "'[Telegram.WebApp] Biometric reason is too long'",
        "'WebAppBiometricRequestAccessParamInvalid'",
        "'web_app_biometry_request_auth'",
        "''",
        "'[Telegram.WebApp] Token is too long'",
        "'WebAppBiometricManagerTokenInvalid'",
        "'[Telegram.WebApp] Biometrics is not available on this device.'",
        "'WebAppBiometricManagerBiometricsNotAvailable'",
        "'[Telegram.WebApp] Biometric access was not granted by the user.'",
        "'WebAppBiometricManagerBiometricAccessNotGranted'",
        "'[Telegram.WebApp] Token request is already in progress.'",
        "'WebAppBiometricManagerTokenUpdateRequested'",
        "'web_app_biometry_update_token'",
        "'[Telegram.WebApp] Biometrics is not available on this device.'",
        "'WebAppBiometricManagerBiometricsNotAvailable'",
        "'[Telegram.WebApp] Biometric access was not requested yet.'",
        "'WebAppBiometricManagerBiometricsAccessNotRequested'",
        "'[Telegram.WebApp] Biometric access was granted by the user, no need to go to settings.'",
        "'web_app_biometry_open_settings'",
        "'invoiceClosed'",
        "'undefined'",
        "'popupClosed'",
        "'undefined'",
        "'web_app_close_scan_qr_popup'",
        "'qrTextReceived'",
        "'undefined'",
        "'clipboardTextReceived'",
        "'allowed'",
        "'writeAccessRequested'",
        "'getRequestedContact'",
        "''",
        "'sent'",
        "'{'",
        "'}'",
        "'['",
        "']'",
        "'contactRequested'",
        "'contactRequested'",
        "'undefined'",
        "'undefined'",
        "'6.9'",
        "'[Telegram.WebApp] Method invokeCustomMethod is not supported in version '",
        "'WebAppMethodUnsupported'",
        "'web_app_invoke_custom_method'",
        "'initData'",
        "'initDataUnsafe'",
        "'version'",
        "'platform'",
        "'ios'",
        "'colorScheme'",
        "'themeParams'",
        "'isExpanded'",
        "'viewportHeight'",
        "'viewportStableHeight'",
        "'isClosingConfirmationEnabled'",
        "'headerColor'",
        "'backgroundColor'",
        "'BackButton'",
        "'MainButton'",
        "'SettingsButton'",
        "'HapticFeedback'",
        "'CloudStorage'",
        "'BiometricManager'",
        "'[Telegram.WebApp] Data is required'",
        "'WebAppDataInvalid'",
        "'[Telegram.WebApp] Data is too long'",
        "'WebAppDataInvalid'",
        "'web_app_data_send'",
        "'6.6'",
        "'[Telegram.WebApp] Method switchInlineQuery is not supported in version '",
        "'WebAppMethodUnsupported'",
        "'[Telegram.WebApp] Inline mode is disabled for this bot. Read more about inline mode: https://core.telegram.org/bots/inline'",
        "'WebAppInlineModeDisabled'",
        "''",
        "'[Telegram.WebApp] Inline query is too long'",
        "'WebAppInlineQueryInvalid'",
        "'[Telegram.WebApp] Choose chat types should be an array'",
        "'WebAppInlineChooseChatTypesInvalid'",
        "'[Telegram.WebApp] Choose chat type is invalid'",
        "'WebAppInlineChooseChatTypeInvalid'",
        "'web_app_switch_inline_query'",
        "'A'",
        "'http:'",
        "'https:'",
        "'[Telegram.WebApp] Url protocol is not supported'",
        "'WebAppTgUrlInvalid'",
        "'6.1'",
        "'web_app_open_link'",
        "'6.4'",
        "'_blank'",
        "'A'",
        "'http:'",
        "'https:'",
        "'[Telegram.WebApp] Url protocol is not supported'",
        "'WebAppTgUrlInvalid'",
        "'t.me'",
        "'[Telegram.WebApp] Url host is not supported'",
        "'WebAppTgUrlInvalid'",
        "'6.1'",
        "'web_app_open_tg_link'",
        "'https://t.me'",
        "'A'",
        "'http:'",
        "'https:'",
        "'t.me'",
        "'[Telegram.WebApp] Invoice url is invalid'",
        "'WebAppInvoiceUrlInvalid'",
        "'6.1'",
        "'[Telegram.WebApp] Method openInvoice is not supported in version '",
        "'WebAppMethodUnsupported'",
        "'[Telegram.WebApp] Invoice is already opened'",
        "'WebAppInvoiceOpened'",
        "'web_app_open_invoice'",
        "'6.2'",
        "'[Telegram.WebApp] Method showPopup is not supported in version '",
        "'WebAppMethodUnsupported'",
        "'[Telegram.WebApp] Popup is already opened'",
        "'WebAppPopupOpened'",
        "''",
        "''",
        "'undefined'",
        "'[Telegram.WebApp] Popup title is too long'",
        "'WebAppPopupParamInvalid'",
        "'undefined'",
        "'[Telegram.WebApp] Popup message is required'",
        "'WebAppPopupParamInvalid'",
        "'[Telegram.WebApp] Popup message is too long'",
        "'WebAppPopupParamInvalid'",
        "'undefined'",
        "'[Telegram.WebApp] Popup buttons should be an array'",
        "'WebAppPopupParamInvalid'",
        "''",
        "'undefined'",
        "'[Telegram.WebApp] Popup button id is too long'",
        "'WebAppPopupParamInvalid'",
        "'undefined'",
        "'default'",
        "'ok'",
        "'close'",
        "'cancel'",
        "'default'",
        "'destructive'",
        "''",
        "'undefined'",
        "'[Telegram.WebApp] Popup button text is required for type '",
        "'WebAppPopupParamInvalid'",
        "'[Telegram.WebApp] Popup button text is too long'",
        "'WebAppPopupParamInvalid'",
        "'[Telegram.WebApp] Popup button type is invalid'",
        "'WebAppPopupParamInvalid'",
        "''",
        "'close'",
        "'[Telegram.WebApp] Popup should have at least one button'",
        "'WebAppPopupParamInvalid'",
        "'[Telegram.WebApp] Popup should not have more than 3 buttons'",
        "'WebAppPopupParamInvalid'",
        "'web_app_open_popup'",
        "'ok'",
        "'ok'",
        "'cancel'",
        "'ok'",
        "'6.4'",
        "'[Telegram.WebApp] Method showScanQrPopup is not supported in version '",
        "'WebAppMethodUnsupported'",
        "'[Telegram.WebApp] Popup is already opened'",
        "'WebAppScanQrPopupOpened'",
        "''",
        "'undefined'",
        "'[Telegram.WebApp] Scan QR popup text is too long'",
        "'WebAppScanQrPopupParamInvalid'",
        "'web_app_open_scan_qr_popup'",
        "'6.4'",
        "'[Telegram.WebApp] Method closeScanQrPopup is not supported in version '",
        "'WebAppMethodUnsupported'",
        "'web_app_close_scan_qr_popup'",
        "'6.4'",
        "'[Telegram.WebApp] Method readTextFromClipboard is not supported in version '",
        "'WebAppMethodUnsupported'",
        "'web_app_read_text_from_clipboard'",
        "'6.9'",
        "'[Telegram.WebApp] Method requestWriteAccess is not supported in version '",
        "'WebAppMethodUnsupported'",
        "'[Telegram.WebApp] Write access is already requested'",
        "'WebAppWriteAccessRequested'",
        "'web_app_request_write_access'",
        "'6.9'",
        "'[Telegram.WebApp] Method requestContact is not supported in version '",
        "'WebAppMethodUnsupported'",
        "'[Telegram.WebApp] Contact is already requested'",
        "'WebAppContactRequested'",
        "'web_app_request_phone'",
        "'web_app_ready'",
        "'web_app_expand'",
        "'web_app_close'",
        "'resize'",
        "'click'",
        "'theme_changed'",
        "'viewport_changed'",
        "'invoice_closed'",
        "'popup_closed'",
        "'qr_text_received'",
        "'scan_qr_popup_closed'",
        "'clipboard_text_received'",
        "'write_access_requested'",
        "'phone_requested'",
        "'custom_method_invoked'",
        "'web_app_request_theme'",
        "'web_app_request_viewport'"
    ],
    "variables": [
        "eventHandlers",
        "locationHash",
        "initParams",
        "storedParams",
        "isIframe",
        "iFrameStyle",
        "dataParsed",
        "qIndex",
        "pathParam",
        "query_params",
        "queryStringParams",
        "i",
        "param",
        "paramName",
        "paramValue",
        "ind",
        "curHash",
        "trustedTarget",
        "curEventHandlers",
        "i",
        "index",
        "index",
        "useIframe",
        "iframeContEl",
        "iframeEl",
        "pageHidden",
        "enableHidden",
        "Utils",
        "WebView",
        "initParams",
        "isIframe",
        "WebApp",
        "webAppInitData",
        "webAppInitDataUnsafe",
        "themeParams",
        "colorScheme",
        "webAppVersion",
        "webAppPlatform",
        "val",
        "themeParamsRaw",
        "theme_params",
        "theme_params",
        "lastWindowHeight",
        "el",
        "args",
        "root",
        "color",
        "webAppCallbacks",
        "tries",
        "id",
        "chars",
        "chars_len",
        "i",
        "viewportHeight",
        "viewportStableHeight",
        "isExpanded",
        "height",
        "stable_height",
        "isClosingConfirmationEnabled",
        "headerColorKey",
        "headerColor",
        "head_color",
        "color_key",
        "appHeaderColorKey",
        "appHeaderColor",
        "backgroundColor",
        "bg_color",
        "appBackgroundColor",
        "color",
        "match",
        "r",
        "g",
        "b",
        "r",
        "g",
        "b",
        "hsp",
        "a",
        "i",
        "p1",
        "p2",
        "s",
        "i",
        "code",
        "BackButton",
        "isVisible",
        "backButton",
        "curButtonState",
        "btn_params",
        "btn_state",
        "mainButtonHeight",
        "MainButton",
        "isVisible",
        "isActive",
        "isProgressVisible",
        "buttonText",
        "buttonColor",
        "buttonTextColor",
        "mainButton",
        "curButtonState",
        "debugBtn",
        "debugBtnStyle",
        "color",
        "text_color",
        "btn_params",
        "btn_state",
        "text",
        "color",
        "text_color",
        "SettingsButton",
        "isVisible",
        "settingsButton",
        "curButtonState",
        "btn_params",
        "btn_state",
        "HapticFeedback",
        "hapticFeedback",
        "CloudStorage",
        "cloudStorage",
        "BiometricManager",
        "isInited",
        "isBiometricAvailable",
        "biometricType",
        "isAccessRequested",
        "isAccessGranted",
        "isBiometricTokenSaved",
        "deviceId",
        "biometricManager",
        "initRequestState",
        "accessRequestState",
        "authRequestState",
        "tokenRequestState",
        "i",
        "callback",
        "state",
        "accessRequestState",
        "isAuthenticated",
        "biometricToken",
        "state",
        "authRequestState",
        "applied",
        "state",
        "tokenRequestState",
        "popup_params",
        "reason",
        "popup_params",
        "reason",
        "webAppInvoices",
        "invoiceData",
        "webAppPopupOpened",
        "popupData",
        "webAppPopupOpened",
        "button_id",
        "webAppScanQrPopupOpened",
        "popupData",
        "webAppScanQrPopupOpened",
        "data",
        "requestData",
        "data",
        "WebAppWriteAccessRequested",
        "requestData",
        "WebAppWriteAccessRequested",
        "reqTo",
        "fallbackTo",
        "reqDelay",
        "reqInvoke",
        "fallbackInvoke",
        "WebAppContactRequested",
        "requestData",
        "WebAppContactRequested",
        "requestSent",
        "webViewEvent",
        "val",
        "requestData",
        "res",
        "err",
        "req_id",
        "req_params",
        "chat_types",
        "good_types",
        "i",
        "chat_type",
        "a",
        "url",
        "a",
        "path_full",
        "a",
        "match",
        "slug",
        "title",
        "message",
        "buttons",
        "popup_buttons",
        "popup_params",
        "i",
        "button",
        "btn",
        "id",
        "button_type",
        "text",
        "text",
        "popup_params",
        "req_id",
        "req_params"
    ],
    "comments": [
        "WebView",
        "Telegram apps will implement this logic to add service params (e.g. tgShareScoreUrl) to game URL",
        "url looks like 'https://game.com/path?query=1#hash'",
        "addHash looks like 'tgShareScoreUrl=' + encodeURIComponent('tgb://share_game_score?hash=very_long_hash123')",
        "https://game.com/path -> https://game.com/path#tgShareScoreUrl=etc",
        "https://game.com/#hash=1 -> https://game.com/#hash=1&tgShareScoreUrl=etc",
        "https://game.com/#path?query -> https://game.com/#path?query&tgShareScoreUrl=etc",
        "https://game.com/#hash -> https://game.com/#hash?tgShareScoreUrl=etc",
        "https://game.com/# -> https://game.com/#tgShareScoreUrl=etc",
        "For now we don't restrict target, for testing purposes",
        "For Windows Phone app",
        "App backward compatibility",
        "WebApp",
        "temp iOS fix",
        "no params needed",
        "no params needed"
    ],
    "docstrings": [],
    "functions": [
        "urlSafeDecode",
        "urlParseHashParams",
        "urlParseQueryString",
        "urlAppendHashParams",
        "postEvent",
        "receiveEvent",
        "callEventCallbacks",
        "onEvent",
        "offEvent",
        "openProtoUrl",
        "sessionStorageSet",
        "sessionStorageGet",
        "onThemeChanged",
        "onViewportChanged",
        "onWindowResize",
        "linkHandler",
        "strTrim",
        "receiveWebViewEvent",
        "onWebViewEvent",
        "offWebViewEvent",
        "setCssProperty",
        "setThemeParams",
        "generateCallbackId",
        "setViewportHeight",
        "setClosingConfirmation",
        "getHeaderColor",
        "setHeaderColor",
        "updateHeaderColor",
        "getBackgroundColor",
        "setBackgroundColor",
        "updateBackgroundColor",
        "parseColorToHex",
        "isColorDark",
        "versionCompare",
        "versionAtLeast",
        "byteLength",
        "onBackButtonPressed",
        "buttonParams",
        "buttonState",
        "buttonCheckVersion",
        "updateButton",
        "setParams",
        "onMainButtonPressed",
        "buttonParams",
        "buttonState",
        "updateButton",
        "updateDebugButton",
        "setParams",
        "onSettingsButtonPressed",
        "buttonParams",
        "buttonState",
        "buttonCheckVersion",
        "updateButton",
        "setParams",
        "triggerFeedback",
        "invokeStorageMethod",
        "onBiometryInfoReceived",
        "onBiometryAuthRequested",
        "onBiometryTokenUpdated",
        "checkVersion",
        "checkInit",
        "onInvoiceClosed",
        "onPopupClosed",
        "onQrTextReceived",
        "onScanQrPopupClosed",
        "onClipboardTextReceived",
        "onWriteAccessRequested",
        "getRequestedContact",
        "onPhoneRequested",
        "onCustomMethodInvoked",
        "invokeCustomMethod"
    ],
    "classes": []
}