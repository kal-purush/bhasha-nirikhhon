{
    "identifiers": [
        "os",
        "warnings",
        "sys",
        "pandas",
        "pd",
        "numpy",
        "np",
        "sklearn",
        "metrics",
        "mean_absolute_error",
        "mean_squared_error",
        "r2_score",
        "sklearn",
        "model_selection",
        "train_test_split",
        "sklearn",
        "linear_model",
        "ElasticNet",
        "urllib",
        "parse",
        "urlparse",
        "mlflow",
        "mlflow",
        "models",
        "signature",
        "infer_signature",
        "mlflow",
        "sklearn",
        "logging",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "INFO",
        "logging",
        "getLogger",
        "actual",
        "pred",
        "np",
        "sqrt",
        "mean_squared_error",
        "actual",
        "pred",
        "mean_absolute_error",
        "actual",
        "pred",
        "r2_score",
        "actual",
        "pred",
        "rmse",
        "mae",
        "r2",
        "warnings",
        "filterwarnings",
        "np",
        "random",
        "seed",
        "pd",
        "read_csv",
        "url",
        "sep",
        "e",
        "logger",
        "exception",
        "e",
        "exit",
        "data",
        "train_test_split",
        "data",
        "logger",
        "error",
        "train",
        "drop",
        "axis",
        "test",
        "drop",
        "axis",
        "train",
        "test",
        "sys",
        "argv",
        "len",
        "sys",
        "argv",
        "sys",
        "argv",
        "len",
        "sys",
        "argv",
        "mlflow",
        "start_run",
        "ElasticNet",
        "alpha",
        "alpha",
        "l1_ratio",
        "l1_ratio",
        "random_state",
        "lr",
        "fit",
        "train_x",
        "train_y",
        "lr",
        "predict",
        "test_x",
        "eval_metrics",
        "test_y",
        "pred_y",
        "format",
        "alpha",
        "l1_ratio",
        "rmse",
        "mae",
        "r2",
        "mlflow",
        "log_param",
        "alpha",
        "mlflow",
        "log_param",
        "l1_ratio",
        "mlflow",
        "log_metric",
        "rmse",
        "mlflow",
        "log_metric",
        "r2",
        "mlflow",
        "log_metric",
        "mae",
        "mlflow",
        "set_tracking_uri",
        "remote_server_url",
        "urlparse",
        "mlflow",
        "get_tracking_uri",
        "scheme",
        "tracking_url_type_store",
        "mlflow",
        "sklearn",
        "log_model",
        "lr",
        "registered_model_name",
        "mlflow",
        "sklearn",
        "log_model",
        "lr"
    ],
    "literals": [
        "\"__main__\"",
        "\"ignore\"",
        "'D:\\mlflow\\wine_quality\\winequality-red.csv'",
        "','",
        "\"Unable to download training & test CSV, check your internet connection. Error: %s\"",
        "\"No data to train on.\"",
        "\"quality\"",
        "\"quality\"",
        "'quality'",
        "'quality'",
        "\"Elasticnet Model (alpha={:f}, l1_ratio={:f}):\"",
        "\"  RMSE: %s\"",
        "\"  MAE: %s\"",
        "\"  R2: %s\"",
        "\"alpha\"",
        "\"l1_ratio\"",
        "\"rmse\"",
        "\"r2\"",
        "\"mae\"",
        "\"https://dagshub.com/YonSci/ml_flow_experment.mlflow\"",
        "\"file\"",
        "\"model\"",
        "\"ElasticnetWineModel\"",
        "\"model\""
    ],
    "variables": [
        "logger",
        "rmse",
        "mae",
        "r2",
        "url",
        "data",
        "data",
        "train",
        "test",
        "train_x",
        "test_x",
        "train_y",
        "test_y",
        "alpha",
        "l1_ratio",
        "lr",
        "pred_y",
        "rmse",
        "mae",
        "r2",
        "remote_server_url",
        "tracking_url_type_store"
    ],
    "comments": [
        "Importing the os module for interacting with the operating system",
        "Importing the warnings module to manage warning messages",
        "Importing the sys module to interact with the Python runtime environment",
        "Importing pandas as pd for data manipulation and analysis",
        "Importing numpy as np for numerical computations",
        "Importing specific metrics for evaluating model performance from sklearn",
        "Importing a function to split data into training and testing sets from sklearn",
        "Importing the ElasticNet linear regression model from sklearn",
        "Importing the urlparse function from urllib.parse to handle URLs",
        "Importing the mlflow module for experiment tracking and model management",
        "Importing a function to infer the input and output signature of a model from mlflow",
        "Importing sklearn utilities from mlflow for logging sklearn models",
        "Importing the logging module to log messages",
        "Configuring the logging module to display messages with a specified severity level",
        "Creating a logger object",
        "Defining a function to evaluate model metrics",
        "Calculating root mean squared error",
        "Calculating mean absolute error",
        "Calculating R-squared score",
        "Returning the calculated metrics",
        "Specifying the URL of the CSV file to be used as the dataset",
        "csv_url = (",
        "\"https://github.com/YonSci/ml_flow_experment/blob/main/dataset/winequality-red.csv\"",
        ")",
        "Initialize `data` to ensure it's defined",
        "Attempting to read the CSV file from the specified URL",
        "Handling exceptions that occur during the read operation",
        "Logging an error message if the CSV file cannot be read",
        "Splitting the data into training and test sets",
        "Dropping the target variable 'quality' from the training dataset",
        "Dropping the target variable 'quality' from the test dataset",
        "Extracting the target variable 'quality' from the training dataset",
        "Extracting the target variable 'quality' from the test dataset",
        "Setting the alpha parameter for the ElasticNet model, defaulting to 0.5 if not provided",
        "Setting the l1_ratio parameter for the ElasticNet model, defaulting to 0.5 if not provided",
        "Starting an MLflow run to track the model training process",
        "Creating an instance of the ElasticNet model with specified alpha and l1_ratio",
        "Training the ElasticNet model with the training dataset",
        "Predicting the target variable for the test dataset",
        "Evaluating the model's performance using the test dataset",
        "Printing the model parameters and evaluation metrics",
        "Logging the model parameters to MLflow",
        "Logging the evaluation metrics to MLflow",
        "# Predicting the target variable for the training dataset to infer the signature",
        "predictions = lr.predict(train_x)",
        "# Inferring the input and output signature of the trained model",
        "signature = infer_signature(train_x, predictions)",
        "Parsing the tracking URI to determine the type of store being used",
        "Checking if the tracking store  is not a local file store",
        "Logging the trained model to MLflow with a specified model name",
        "If the tracking store is a local file store",
        "Logging the trained model to MLflow"
    ],
    "docstrings": [],
    "functions": [
        "eval_metrics"
    ],
    "classes": []
}