{
    "identifiers": [
        "org",
        "apache",
        "fineract",
        "portfolio",
        "loanproduct",
        "calc",
        "java",
        "math",
        "BigDecimal",
        "java",
        "math",
        "MathContext",
        "java",
        "util",
        "org",
        "springframework",
        "stereotype",
        "Component",
        "Component",
        "repaymentPeriodDays",
        "principal",
        "interestRate",
        "daysInYear",
        "mc",
        "rateFactorList",
        "getRateFactorList",
        "repaymentPeriodDays",
        "interestRate",
        "daysInYear",
        "mc",
        "rateFactorN",
        "calculateRateFactorN",
        "rateFactorList",
        "mc",
        "fnResult",
        "calculateFnResult",
        "rateFactorList",
        "mc",
        "emiValue",
        "calculateEMIValue",
        "rateFactorN",
        "principal",
        "fnResult",
        "mc",
        "rateFactorMinus1List",
        "getRateFactorMinus1List",
        "rateFactorList",
        "mc",
        "emiValue",
        "rateFactorMinus1List",
        "repaymentPeriodDays",
        "interestRate",
        "daysInYear",
        "mc",
        "repaymentPeriodDays",
        "stream",
        "daysInPeriod",
        "rateFactor",
        "interestRate",
        "daysInPeriod",
        "daysInYear",
        "mc",
        "toList",
        "rateFactors",
        "mc",
        "rateFactors",
        "stream",
        "it",
        "it",
        "subtract",
        "BigDecimal",
        "ONE",
        "mc",
        "toList",
        "rateFactors",
        "mc",
        "rateFactors",
        "stream",
        "reduce",
        "BigDecimal",
        "ONE",
        "acc",
        "value",
        "acc",
        "multiply",
        "value",
        "mc",
        "rateFactors",
        "mc",
        "rateFactors",
        "stream",
        "skip",
        "reduce",
        "BigDecimal",
        "ONE",
        "previousValue",
        "rateFactor",
        "fnValue",
        "previousValue",
        "rateFactor",
        "mc",
        "rateFactorN",
        "principal",
        "fnResult",
        "mc",
        "rateFactorN",
        "multiply",
        "principal",
        "mc",
        "divide",
        "fnResult",
        "mc",
        "interestRate",
        "daysInPeriod",
        "daysInYear",
        "mc",
        "daysPeriod",
        "BigDecimal",
        "valueOf",
        "daysInPeriod",
        "daysYear",
        "BigDecimal",
        "valueOf",
        "daysInYear",
        "BigDecimal",
        "ONE",
        "add",
        "interestRate",
        "multiply",
        "daysPeriod",
        "divide",
        "daysYear",
        "mc",
        "mc",
        "mc",
        "previousFnValue",
        "currentRateFactor",
        "mc",
        "BigDecimal",
        "ONE",
        "add",
        "previousFnValue",
        "multiply",
        "currentRateFactor",
        "mc",
        "mc"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership. The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.",
        "* Calculate EMI parts and return an EMI calculation result object with repayment installment rate factors\n     *\n     * @param repaymentPeriodDays\n     *            List of day gaps between periods (zero interest period values should be 0)\n     * @param principal\n     * @param interestRate\n     * @param daysInYear\n     * @param mc\n     * @return",
        "* Calculate rate factors from repayment periods\n     *\n     * @param repaymentPeriodDays\n     * @param interestRate\n     * @param daysInYear\n     * @param mc\n     * @return",
        "* Rate factor -1 values\n     *\n     * @param rateFactors\n     * @param mc\n     * @return",
        "* Calculate Rate Factor Product from rate factors\n     *\n     * @param rateFactors\n     * @param mc\n     * @return",
        "* Summarize Fn values\n     *\n     * @param rateFactors\n     * @param mc\n     * @return",
        "* Calculate the EMI (Equal Monthly Installment) value\n     *\n     * @param rateFactorN\n     * @param principal\n     * @param fnResult\n     * @param mc\n     * @return",
        "* To calculate the monthly payment, we first need to calculate something called the Rate Factor. We're going to be\n     * using simple interest. The Rate Factor for simple interest is calculated by the following formula:\n     *\n     *\n     * R = 1 + (r * d / y)\n     *\n     * @param interestRate\n     *            (r)\n     * @param daysInPeriod\n     *            (d)\n     * @param daysInYear\n     *            (y)",
        "* To calculate the function value for each period, we are going to use the next formula:\n     *\n     * fn = 1 + fnValueFrom * rateFactorEnd\n     *\n     * @param previousFnValue\n     *\n     * @param currentRateFactor\n     *\n     * @param mc\n     *"
    ],
    "functions": [
        "EMICalculationResult",
        "calculateEMI",
        "getRateFactorList",
        "getRateFactorMinus1List",
        "BigDecimal",
        "calculateRateFactorN",
        "BigDecimal",
        "calculateFnResult",
        "BigDecimal",
        "calculateEMIValue",
        "BigDecimal",
        "rateFactor",
        "BigDecimal",
        "fnValue"
    ],
    "classes": [
        "EMICalculator"
    ]
}