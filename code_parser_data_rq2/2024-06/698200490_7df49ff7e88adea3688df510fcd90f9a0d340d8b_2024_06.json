{
    "identifiers": [
        "org",
        "petmarket",
        "users",
        "controller",
        "io",
        "swagger",
        "v3",
        "oas",
        "annotations",
        "Operation",
        "io",
        "swagger",
        "v3",
        "oas",
        "annotations",
        "tags",
        "Tag",
        "jakarta",
        "validation",
        "constraints",
        "Positive",
        "lombok",
        "RequiredArgsConstructor",
        "lombok",
        "slf4j",
        "Slf4j",
        "org",
        "petmarket",
        "users",
        "dto",
        "ComplaintResponseDto",
        "org",
        "petmarket",
        "users",
        "entity",
        "ComplaintStatus",
        "org",
        "petmarket",
        "users",
        "service",
        "ComplaintService",
        "org",
        "petmarket",
        "utils",
        "annotations",
        "parametrs",
        "ParameterPageNumber",
        "org",
        "petmarket",
        "utils",
        "annotations",
        "parametrs",
        "ParameterPageSize",
        "org",
        "petmarket",
        "utils",
        "annotations",
        "responses",
        "ApiResponseForbidden",
        "org",
        "petmarket",
        "utils",
        "annotations",
        "responses",
        "ApiResponseNotFound",
        "org",
        "petmarket",
        "utils",
        "annotations",
        "responses",
        "ApiResponseSuccessful",
        "org",
        "petmarket",
        "utils",
        "annotations",
        "responses",
        "ApiResponseUnauthorized",
        "org",
        "springframework",
        "data",
        "domain",
        "Sort",
        "org",
        "springframework",
        "security",
        "access",
        "prepost",
        "PreAuthorize",
        "org",
        "springframework",
        "validation",
        "annotation",
        "Validated",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "java",
        "util",
        "Tag",
        "name",
        "description",
        "Slf4j",
        "RequiredArgsConstructor",
        "RestController",
        "Validated",
        "RequestMapping",
        "value",
        "complaintService",
        "Operation",
        "summary",
        "ApiResponseSuccessful",
        "ApiResponseUnauthorized",
        "ApiResponseForbidden",
        "PreAuthorize",
        "DeleteMapping",
        "PathVariable",
        "id",
        "log",
        "info",
        "complaintService",
        "deleteComplaint",
        "id",
        "Operation",
        "summary",
        "ApiResponseSuccessful",
        "ApiResponseNotFound",
        "ApiResponseUnauthorized",
        "ApiResponseForbidden",
        "PreAuthorize",
        "GetMapping",
        "PathVariable",
        "id",
        "log",
        "info",
        "complaintService",
        "getComplaint",
        "id",
        "Operation",
        "summary",
        "ApiResponseSuccessful",
        "ApiResponseUnauthorized",
        "ApiResponseForbidden",
        "PreAuthorize",
        "GetMapping",
        "RequestParam",
        "required",
        "defaultValue",
        "complaintStatus",
        "ParameterPageNumber",
        "RequestParam",
        "defaultValue",
        "Positive",
        "page",
        "ParameterPageSize",
        "RequestParam",
        "defaultValue",
        "Positive",
        "size",
        "RequestParam",
        "defaultValue",
        "direction",
        "log",
        "info",
        "complaintService",
        "getComplaints",
        "complaintStatus",
        "size",
        "page",
        "direction",
        "Operation",
        "summary",
        "ApiResponseSuccessful",
        "ApiResponseUnauthorized",
        "ApiResponseForbidden",
        "PreAuthorize",
        "GetMapping",
        "PathVariable",
        "userId",
        "RequestParam",
        "required",
        "defaultValue",
        "status",
        "ParameterPageNumber",
        "RequestParam",
        "defaultValue",
        "Positive",
        "page",
        "ParameterPageSize",
        "RequestParam",
        "defaultValue",
        "Positive",
        "size",
        "RequestParam",
        "defaultValue",
        "direction",
        "log",
        "info",
        "complaintService",
        "getComplaintsByUserId",
        "userId",
        "status",
        "size",
        "page",
        "direction",
        "Operation",
        "summary",
        "ApiResponseSuccessful",
        "ApiResponseUnauthorized",
        "ApiResponseForbidden",
        "PreAuthorize",
        "PutMapping",
        "PathVariable",
        "id",
        "RequestParam",
        "defaultValue",
        "status",
        "log",
        "info",
        "complaintService",
        "updateStatusById",
        "id",
        "status"
    ],
    "literals": [
        "\"Complaints\"",
        "\"the user complaints API\"",
        "\"/v1/admin/complaints\"",
        "\"Delete complaint\"",
        "\"isAuthenticated()\"",
        "\"/{id}\"",
        "\"Deleting complaint\"",
        "\"Get complaint\"",
        "\"isAuthenticated()\"",
        "\"/{id}\"",
        "\"Getting complaint\"",
        "\"Get complaints\"",
        "\"isAuthenticated()\"",
        "\"PENDING\"",
        "\"1\"",
        "\"30\"",
        "\"DESC\"",
        "\"Getting complaints\"",
        "\"Get complaints by user id\"",
        "\"isAuthenticated()\"",
        "\"/user/{userId}\"",
        "\"PENDING\"",
        "\"1\"",
        "\"30\"",
        "\"DESC\"",
        "\"Getting complaints by user id\"",
        "\"Update complaint status\"",
        "\"isAuthenticated()\"",
        "\"/{id}\"",
        "\"RESOLVED\"",
        "\"Updating complaint status\""
    ],
    "variables": [
        "complaintService"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "deleteComplaint",
        "ComplaintResponseDto",
        "getComplaint",
        "getComplaints",
        "getComplaintsByUserId",
        "updateComplaintStatus"
    ],
    "classes": [
        "ComplaintsAdminController"
    ]
}