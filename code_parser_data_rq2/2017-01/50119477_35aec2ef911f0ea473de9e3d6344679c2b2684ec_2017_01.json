{
    "identifiers": [
        "time",
        "neutron_lbaas",
        "services",
        "loadbalancer",
        "constants",
        "lb_const",
        "tempest",
        "config",
        "tempest",
        "lib",
        "common",
        "utils",
        "data_utils",
        "tempest",
        "lib",
        "decorators",
        "tempest",
        "test",
        "f5lbaasdriver",
        "test",
        "tempest",
        "tests",
        "api",
        "config",
        "CONF",
        "BaseTestCase",
        "classmethod",
        "cls",
        "MemberStatusTestJSON",
        "cls",
        "resource_setup",
        "test",
        "is_extension_enabled",
        "cls",
        "skipException",
        "msg",
        "data_utils",
        "rand_name",
        "cls",
        "create_network",
        "network_name",
        "cls",
        "create_subnet",
        "cls",
        "network",
        "cls",
        "subnet",
        "cls",
        "subnet",
        "cls",
        "_create_active_load_balancer",
        "cls",
        "create_lb_kwargs",
        "cls",
        "load_balancer",
        "cls",
        "load_balancer_id",
        "cls",
        "_create_listener",
        "listener_kwargs",
        "cls",
        "plugin_rpc",
        "get_client",
        "cls",
        "plugin_rpc",
        "get_context",
        "classmethod",
        "cls",
        "MemberStatusTestJSON",
        "cls",
        "resource_cleanup",
        "test",
        "attr",
        "listener",
        "_create_pool",
        "pool_kwargs",
        "addCleanup",
        "_delete_pool",
        "pool",
        "get",
        "subnet",
        "pool",
        "allocation_pool",
        "subnet",
        "_create_member",
        "member_kwargs",
        "addCleanup",
        "_delete_member",
        "pool",
        "get",
        "member",
        "get",
        "lb_const",
        "NO_MONITOR",
        "_wait_for_member_status",
        "member",
        "expected_status",
        "expected_status",
        "test",
        "attr",
        "listener",
        "_create_pool",
        "pool_kwargs",
        "addCleanup",
        "_delete_pool",
        "pool",
        "get",
        "pool",
        "_create_health_monitor",
        "ping_monitor_kwargs",
        "subnet",
        "pool",
        "allocation_pool",
        "subnet",
        "_create_member",
        "member_kwargs",
        "addCleanup",
        "_delete_member",
        "pool",
        "get",
        "member",
        "get",
        "_wait_for_member_status",
        "member",
        "expected_status",
        "expected_status",
        "test",
        "attr",
        "listener",
        "_create_pool",
        "pool_kwargs",
        "addCleanup",
        "_delete_pool",
        "pool",
        "get",
        "pool",
        "_create_health_monitor",
        "ping_monitor_kwargs",
        "subnet",
        "pool",
        "allocation_pool",
        "subnet",
        "_create_member",
        "member_kwargs",
        "addCleanup",
        "_delete_member",
        "pool",
        "get",
        "member",
        "get",
        "lb_const",
        "OFFLINE",
        "_wait_for_member_status",
        "member",
        "expected_status",
        "expected_status",
        "decorators",
        "skip_because",
        "bug",
        "listener",
        "_create_pool",
        "pool_kwargs",
        "addCleanup",
        "_delete_pool",
        "pool",
        "get",
        "pool",
        "_create_health_monitor",
        "ping_monitor_kwargs",
        "subnet",
        "pool",
        "allocation_pool",
        "subnet",
        "_create_member",
        "member_kwargs",
        "addCleanup",
        "_delete_member",
        "pool",
        "get",
        "member",
        "get",
        "lb_const",
        "ONLINE",
        "_wait_for_member_status",
        "member",
        "expected_status",
        "expected_status",
        "_update_member",
        "pool",
        "get",
        "member",
        "get",
        "member_opts",
        "lb_const",
        "OFFLINE",
        "_wait_for_member_status",
        "member",
        "expected_status",
        "expected_status",
        "test",
        "attr",
        "member",
        "expected_status",
        "status",
        "expected_status",
        "count",
        "count",
        "time",
        "sleep",
        "client",
        "call",
        "context",
        "loadbalancer_id",
        "load_balancer_id",
        "_get_member_from_service",
        "svc",
        "member",
        "m",
        "status",
        "staticmethod",
        "svc",
        "member_id",
        "m",
        "svc",
        "m",
        "member_id",
        "m"
    ],
    "literals": [
        "'lbaas'",
        "'network'",
        "\"lbaas extension not enabled.\"",
        "'network'",
        "'tenant_id'",
        "'tenant_id'",
        "'vip_subnet_id'",
        "'id'",
        "'id'",
        "'loadbalancer_id'",
        "'protocol'",
        "'HTTP'",
        "'protocol_port'",
        "'smoke'",
        "'listener_id'",
        "'id'",
        "'protocol'",
        "'HTTP'",
        "'lb_algorithm'",
        "'ROUND_ROBIN'",
        "'id'",
        "'allocation_pools'",
        "'pool_id'",
        "'id'",
        "'address'",
        "'start'",
        "'protocol_port'",
        "'subnet_id'",
        "'id'",
        "'id'",
        "'id'",
        "'smoke'",
        "'listener_id'",
        "'id'",
        "'protocol'",
        "'HTTP'",
        "'lb_algorithm'",
        "'ROUND_ROBIN'",
        "'id'",
        "'pool_id'",
        "'id'",
        "'type'",
        "'PING'",
        "'delay'",
        "'timeout'",
        "'max_retries'",
        "'allocation_pools'",
        "'pool_id'",
        "'id'",
        "'address'",
        "'start'",
        "'protocol_port'",
        "'subnet_id'",
        "'id'",
        "'id'",
        "'id'",
        "\"ONLINE\"",
        "'smoke'",
        "'listener_id'",
        "'id'",
        "'protocol'",
        "'HTTP'",
        "'lb_algorithm'",
        "'ROUND_ROBIN'",
        "'id'",
        "'pool_id'",
        "'id'",
        "'type'",
        "'HTTP'",
        "'delay'",
        "'timeout'",
        "'max_retries'",
        "'allocation_pools'",
        "'pool_id'",
        "'id'",
        "'address'",
        "'start'",
        "'protocol_port'",
        "'subnet_id'",
        "'id'",
        "'id'",
        "'id'",
        "\"497\"",
        "'listener_id'",
        "'id'",
        "'protocol'",
        "'HTTP'",
        "'lb_algorithm'",
        "'ROUND_ROBIN'",
        "'id'",
        "'pool_id'",
        "'id'",
        "'type'",
        "'PING'",
        "'delay'",
        "'timeout'",
        "'max_retries'",
        "'allocation_pools'",
        "'pool_id'",
        "'id'",
        "'address'",
        "'start'",
        "'protocol_port'",
        "'subnet_id'",
        "'id'",
        "'id'",
        "'id'",
        "\"admin_state_up\"",
        "'id'",
        "'id'",
        "'smoke'",
        "\"\"",
        "'get_service_by_loadbalancer_id'",
        "'id'",
        "\"operating_status\"",
        "'members'",
        "'id'"
    ],
    "variables": [
        "CONF",
        "msg",
        "network_name",
        "cls",
        "network",
        "cls",
        "subnet",
        "cls",
        "create_lb_kwargs",
        "cls",
        "load_balancer",
        "cls",
        "load_balancer_id",
        "listener_kwargs",
        "cls",
        "listener",
        "cls",
        "client",
        "cls",
        "context",
        "pool_kwargs",
        "pool",
        "allocation_pool",
        "member_kwargs",
        "member",
        "expected_status",
        "pool_kwargs",
        "pool",
        "ping_monitor_kwargs",
        "allocation_pool",
        "member_kwargs",
        "member",
        "expected_status",
        "pool_kwargs",
        "pool",
        "ping_monitor_kwargs",
        "allocation_pool",
        "member_kwargs",
        "member",
        "expected_status",
        "pool_kwargs",
        "pool",
        "ping_monitor_kwargs",
        "allocation_pool",
        "member_kwargs",
        "member",
        "expected_status",
        "member_opts",
        "member",
        "expected_status",
        "status",
        "count",
        "svc",
        "m",
        "status"
    ],
    "comments": [
        "Copyright 2015 Hewlett-Packard Development Company, L.P.",
        "Copyright 2016 Rackspace Inc.",
        "All Rights Reserved.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\"); you may",
        "not use this file except in compliance with the License. You may obtain",
        "a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT",
        "WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the",
        "License for the specific language governing permissions and limitations",
        "under the License.",
        "create listener",
        "get an RPC client for calling into driver",
        "create pool",
        "create member",
        "Because pool does not have monitor, expect NO_MONITOR status",
        "create pool",
        "add ping monitor",
        "create member",
        "Because monitor is PING, expect monitor to verify member up",
        "create pool",
        "add HTTP monitor",
        "create member",
        "Because monitor is HTTP, never expect monitor to verify member up",
        "create pool",
        "add ping monitor",
        "create member",
        "verify member up",
        "Set admin down -- status should change to disabled"
    ],
    "docstrings": [
        "\"\"\"Test that pool member's operating status is set correctly.\"\"\"",
        "\"\"\"Setup client fixtures for test suite.\"\"\"",
        "\"\"\"Test setting admin state down.\n\n        Skipped because setting admin state is not currently supported. Remove\n        decorator when issue has been fixed.\n        \"\"\"",
        "\"\"\"Query member operating status until it changes to expected status.\n\n        :param member: member to query status.\n        :param expected_status: Status to wait for.\n        :return: Final status, either from changing to expected_status, or\n        result after timing out.\n        \"\"\""
    ],
    "functions": [
        "resource_setup",
        "resource_cleanup",
        "test_no_monitor",
        "test_online",
        "test_offline",
        "test_disabled",
        "_wait_for_member_status",
        "_get_member_from_service"
    ],
    "classes": [
        "MemberStatusTestJSON"
    ]
}