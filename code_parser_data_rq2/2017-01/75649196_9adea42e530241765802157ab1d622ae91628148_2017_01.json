{
    "identifiers": [
        "PatterBuilderModule",
        "IRIResolver",
        "SingleValuesPattern",
        "MultipleValuesPattern",
        "StringLiteral",
        "Resource",
        "Variable",
        "Literal",
        "RDFLiteral",
        "NumericLiteral",
        "BooleanLiteral",
        "Collection",
        "BlankNode",
        "NotTriplesPatternModule",
        "NotTriplesPattern",
        "Identifier",
        "LeftSymbol",
        "RightSymbol",
        "Token",
        "NewLineSymbol",
        "ValuesPatternModule",
        "describe",
        "it",
        "expect",
        "PatterBuilderModule",
        "expect",
        "PatterBuilderModule",
        "jasmine",
        "describe",
        "PatterBuilderModule",
        "PatterBuilderModule",
        "PatterBuilderModule",
        "it",
        "expect",
        "PatternBuilder",
        "expect",
        "PatternBuilder",
        "jasmine",
        "it",
        "iri",
        "StringLiteral",
        "iri",
        "PatternBuilder",
        "resolver",
        "expect",
        "builder",
        "expect",
        "builder",
        "jasmine",
        "PatternBuilder",
        "it",
        "iri",
        "StringLiteral",
        "iri",
        "PatternBuilder",
        "resolver",
        "expect",
        "builder",
        "expect",
        "builder",
        "jasmine",
        "expect",
        "builder",
        "expect",
        "builder",
        "jasmine",
        "expect",
        "builder",
        "expect",
        "builder",
        "jasmine",
        "expect",
        "builder",
        "expect",
        "builder",
        "jasmine",
        "expect",
        "builder",
        "expect",
        "builder",
        "jasmine",
        "expect",
        "builder",
        "expect",
        "builder",
        "jasmine",
        "expect",
        "builder",
        "expect",
        "builder",
        "jasmine",
        "expect",
        "builder",
        "expect",
        "builder",
        "jasmine",
        "expect",
        "builder",
        "expect",
        "builder",
        "jasmine",
        "expect",
        "builder",
        "expect",
        "builder",
        "jasmine",
        "expect",
        "builder",
        "expect",
        "builder",
        "jasmine",
        "it",
        "iri",
        "StringLiteral",
        "iri",
        "PatternBuilder",
        "resolver",
        "builder",
        "expect",
        "resource",
        "expect",
        "resource",
        "jasmine",
        "Resource",
        "it",
        "iri",
        "StringLiteral",
        "iri",
        "PatternBuilder",
        "resolver",
        "builder",
        "expect",
        "variable",
        "expect",
        "variable",
        "jasmine",
        "Variable",
        "it",
        "iri",
        "StringLiteral",
        "iri",
        "PatternBuilder",
        "resolver",
        "literal",
        "builder",
        "expect",
        "literal",
        "expect",
        "literal",
        "jasmine",
        "RDFLiteral",
        "literal",
        "builder",
        "expect",
        "literal",
        "expect",
        "literal",
        "jasmine",
        "RDFLiteral",
        "literal",
        "builder",
        "expect",
        "literal",
        "expect",
        "literal",
        "jasmine",
        "NumericLiteral",
        "literal",
        "builder",
        "expect",
        "literal",
        "expect",
        "literal",
        "jasmine",
        "NumericLiteral",
        "literal",
        "builder",
        "expect",
        "literal",
        "expect",
        "literal",
        "jasmine",
        "NumericLiteral",
        "literal",
        "builder",
        "expect",
        "literal",
        "expect",
        "literal",
        "jasmine",
        "BooleanLiteral",
        "literal",
        "builder",
        "expect",
        "literal",
        "expect",
        "literal",
        "jasmine",
        "BooleanLiteral",
        "expect",
        "builder",
        "it",
        "iri",
        "StringLiteral",
        "iri",
        "PatternBuilder",
        "resolver",
        "collection",
        "builder",
        "expect",
        "collection",
        "expect",
        "collection",
        "jasmine",
        "Collection",
        "collection",
        "builder",
        "expect",
        "collection",
        "expect",
        "collection",
        "jasmine",
        "Collection",
        "expect",
        "builder",
        "it",
        "iri",
        "StringLiteral",
        "iri",
        "PatternBuilder",
        "resolver",
        "blankNode",
        "builder",
        "expect",
        "blankNode",
        "expect",
        "blankNode",
        "jasmine",
        "BlankNode",
        "it",
        "Token",
        "iri",
        "StringLiteral",
        "iri",
        "PatternBuilder",
        "resolver",
        "spyOn",
        "NotTriplesPatternModule",
        "pattern",
        "builder",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "Identifier",
        "StringLiteral",
        "LeftSymbol",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "Identifier",
        "StringLiteral",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "Identifier",
        "StringLiteral",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "Identifier",
        "StringLiteral",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "Variable",
        "resolver",
        "MockToken",
        "constructorSpy",
        "pattern",
        "builder",
        "MockVar",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "Identifier",
        "MockToken",
        "LeftSymbol",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockVar",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "Identifier",
        "MockToken",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockVar",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "Identifier",
        "MockToken",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockVar",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "Identifier",
        "MockToken",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "it",
        "Token",
        "iri",
        "StringLiteral",
        "iri",
        "PatternBuilder",
        "resolver",
        "spyOn",
        "NotTriplesPatternModule",
        "constructorSpy",
        "pattern",
        "builder",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "Identifier",
        "LeftSymbol",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "Identifier",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "Identifier",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "Identifier",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "it",
        "Token",
        "iri",
        "StringLiteral",
        "iri",
        "PatternBuilder",
        "resolver",
        "spyOn",
        "NotTriplesPatternModule",
        "constructorSpy",
        "pattern",
        "builder",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "LeftSymbol",
        "RightSymbol",
        "Identifier",
        "LeftSymbol",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "LeftSymbol",
        "RightSymbol",
        "Identifier",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "LeftSymbol",
        "RightSymbol",
        "Identifier",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "LeftSymbol",
        "RightSymbol",
        "Identifier",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "Identifier",
        "LeftSymbol",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "Identifier",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "Identifier",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "Identifier",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "Identifier",
        "LeftSymbol",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "Identifier",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "Identifier",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "Identifier",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "Identifier",
        "LeftSymbol",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "Identifier",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "Identifier",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "Identifier",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "it",
        "Token",
        "iri",
        "StringLiteral",
        "iri",
        "PatternBuilder",
        "resolver",
        "spyOn",
        "NotTriplesPatternModule",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "Identifier",
        "LeftSymbol",
        "MockToken",
        "MockToken",
        "RightSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "Identifier",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "constructorSpy",
        "pattern",
        "builder",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "NotTriplesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "Identifier",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "MockToken",
        "MockToken",
        "NewLineSymbol",
        "it",
        "iri",
        "StringLiteral",
        "iri",
        "Token",
        "Variable",
        "name",
        "resolver",
        "name",
        "name",
        "MockToken",
        "PatternBuilder",
        "resolver",
        "ValuesPatternModule",
        "ValuesPatternModule",
        "spyOn",
        "ValuesPatternModule",
        "resolver",
        "vars",
        "ValuesPattern",
        "resolver",
        "vars",
        "constructorSpy",
        "vars",
        "MockVar",
        "pattern",
        "builder",
        "vars",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "ValuesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "vars",
        "constructorSpy",
        "vars",
        "MockVar",
        "MockVar",
        "pattern",
        "builder",
        "vars",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "ValuesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "vars",
        "constructorSpy",
        "vars",
        "MockVar",
        "MockVar",
        "MockVar",
        "MockVar",
        "MockVar",
        "pattern",
        "builder",
        "vars",
        "expect",
        "pattern",
        "expect",
        "pattern",
        "jasmine",
        "ValuesPattern",
        "expect",
        "constructorSpy",
        "expect",
        "constructorSpy",
        "vars"
    ],
    "literals": [
        "\"./PatternBuilder\"",
        "\"./Patterns\"",
        "\"./Tokens/StringLiteral\"",
        "\"./TriplesPatterns/Resource\"",
        "\"./TriplesPatterns/Variable\"",
        "\"./TriplesPatterns/Literals\"",
        "\"./TriplesPatterns/Collection\"",
        "\"./TriplesPatterns/BlankNode\"",
        "\"./NotTriplesPatterns/NotTriplesPattern\"",
        "\"./NotTriplesPatterns/NotTriplesPattern\"",
        "\"./Tokens/Identifier\"",
        "\"./Tokens/LeftSymbol\"",
        "\"./Tokens/RightSymbol\"",
        "\"./Tokens/Token\"",
        "\"./Tokens/NewLineSymbol\"",
        "\"./NotTriplesPatterns/ValuesPattern\"",
        "\"Module PatternBuilder\"",
        "\"Exists\"",
        "\"Class PatternBuilder\"",
        "\"Exists\"",
        "\"Constructor\"",
        "string",
        "\"Implements Builders\"",
        "string",
        "\"resource\"",
        "\"var\"",
        "\"literal\"",
        "\"collection\"",
        "\"blankNode\"",
        "\"graph\"",
        "\"optional\"",
        "\"union\"",
        "\"minus\"",
        "\"values\"",
        "\"undefined\"",
        "\"PatternBuilder.resource()\"",
        "string",
        "\"http://example.com/\"",
        "\"PatternBuilder.var()\"",
        "string",
        "\"name\"",
        "\"PatternBuilder.literal()\"",
        "string",
        "\"something\"",
        "\"http://example.com/iri/as/literal\"",
        "\"InvalidArgumentError: No valid value of a literal was provided.\"",
        "\"PatternBuilder.collection()\"",
        "string",
        "\"hello\"",
        "\"world\"",
        "\"!!\"",
        "\"hi!\"",
        "\"InvalidArgumentError: The collection needs at least one value.\"",
        "\"PatternBuilder.blankNode()\"",
        "string",
        "\"PatternBuilder.graph()\"",
        "string",
        "\" \"",
        "string",
        "\" \"",
        "string",
        "\"NotTriplesPattern\"",
        "\"http://example.com/resource/\"",
        "\"GRAPH\"",
        "\"http://example.com/resource/\"",
        "\"{\"",
        "\"}\"",
        "\"http://example.com/resource/\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"GRAPH\"",
        "\"http://example.com/resource/\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"http://example.com/resource/\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"GRAPH\"",
        "\"http://example.com/resource/\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"http://example.com/resource/\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"GRAPH\"",
        "\"http://example.com/resource/\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\".\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"}\"",
        "\"\"",
        "\"variable\"",
        "\"GRAPH\"",
        "\"variable\"",
        "\"{\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"GRAPH\"",
        "\"variable\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"GRAPH\"",
        "\"variable\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"GRAPH\"",
        "\"variable\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\".\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"}\"",
        "\"PatternBuilder.optional()\"",
        "string",
        "\" \"",
        "string",
        "\" \"",
        "string",
        "\"NotTriplesPattern\"",
        "\"OPTIONAL\"",
        "\"{\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"OPTIONAL\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"OPTIONAL\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"OPTIONAL\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\".\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"}\"",
        "\"PatternBuilder.union()\"",
        "string",
        "\" \"",
        "string",
        "\" \"",
        "string",
        "\"NotTriplesPattern\"",
        "\"{\"",
        "\"}\"",
        "\"UNION\"",
        "\"{\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"{\"",
        "\"}\"",
        "\"UNION\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"{\"",
        "\"}\"",
        "\"UNION\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"{\"",
        "\"}\"",
        "\"UNION\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\".\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"UNION\"",
        "\"{\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"UNION\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"UNION\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"UNION\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\".\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"UNION\"",
        "\"{\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"UNION\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"UNION\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"UNION\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\".\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\".\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"}\"",
        "\"UNION\"",
        "\"{\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\".\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"}\"",
        "\"UNION\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\".\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"}\"",
        "\"UNION\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\".\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"}\"",
        "\"UNION\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\".\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"}\"",
        "\"PatternBuilder.minus()\"",
        "string",
        "\" \"",
        "string",
        "\" \"",
        "string",
        "\"NotTriplesPattern\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"MINUS\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"MINUS\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\".\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"}\"",
        "\"token-1\"",
        "\"token-2\"",
        "\"token-3\"",
        "\"token-4\"",
        "\"token-5\"",
        "\"token-6\"",
        "\"token-7\"",
        "\"token-8\"",
        "\"MINUS\"",
        "\"{\"",
        "\"token-1\"",
        "\"token-2\"",
        "\".\"",
        "\"token-3\"",
        "\"token-4\"",
        "\".\"",
        "\"token-5\"",
        "\"token-6\"",
        "\".\"",
        "\"token-7\"",
        "\"token-8\"",
        "\"}\"",
        "\"PatternBuilder.values()\"",
        "string",
        "string",
        "\" \"",
        "string",
        "\" \"",
        "string",
        "string",
        "\"ValuesPattern\"",
        "\"first\"",
        "\"first\"",
        "\"second\"",
        "\"a\"",
        "\"e\"",
        "\"i\"",
        "\"o\"",
        "\"u\""
    ],
    "variables": [
        "PatternBuilder",
        "resolver",
        "builder",
        "resolver",
        "builder",
        "resolver",
        "builder",
        "resource",
        "resolver",
        "builder",
        "variable",
        "resolver",
        "builder",
        "literal",
        "resolver",
        "builder",
        "collection",
        "resolver",
        "builder",
        "blankNode",
        "resolver",
        "builder",
        "constructorSpy",
        "pattern",
        "resolver",
        "builder",
        "constructorSpy",
        "pattern",
        "resolver",
        "builder",
        "constructorSpy",
        "pattern",
        "resolver",
        "builder",
        "constructorSpy",
        "pattern",
        "resolver",
        "builder",
        "ValuesPattern",
        "constructorSpy",
        "pattern",
        "vars"
    ],
    "comments": [
        "Triples patterns",
        "Not triples pattern",
        "Test the methods",
        "With string returns an RDFLiteral",
        "With number returns an NumericLiteral",
        "With number returns an NumericLiteral",
        "Another type throw an error",
        "Normal usage",
        "Must provide at least one parameter",
        "Normal usage",
        "Usage with an IRI parameter",
        "Empty patterns",
        "Single pattern",
        "Single pattern in an array",
        "Multiple patterns",
        "Usage with an VAR parameter",
        "Empty patterns",
        "Single pattern",
        "Single pattern in an array",
        "Multiple patterns",
        "Empty pattern",
        "Single pattern",
        "Single pattern in an array",
        "Multiple patterns",
        "Empty patterns",
        "Empty and single pattern",
        "Empty and single pattern in an array",
        "Empty and multiple patterns",
        "Single and empty pattern",
        "Singles patterns",
        "Single pattern and single pattern in an array",
        "Empty and multiple patterns",
        "Single pattern in array and empty pattern",
        "Single pattern in array and single pattern",
        "Single pattern in array and single pattern in an array",
        "Single pattern in array and multiple patterns",
        "Multiple patterns patterns",
        "Multiple patterns and single pattern",
        "Multiple patterns and single pattern in an array",
        "Multiple patterns",
        "Single pattern",
        "Multiple patterns, 1",
        "Multiple patterns, 2",
        "Single variables",
        "Multiple variables, 1",
        "Multiple variables, 2"
    ],
    "docstrings": [],
    "functions": [
        "getPrettySeparator",
        "getCompactSeparator",
        "getSelfTokens",
        "getPrettySeparator",
        "getCompactSeparator",
        "getPrettySeparator",
        "getCompactSeparator",
        "getPrettySeparator",
        "getCompactSeparator",
        "getPrettySeparator",
        "getCompactSeparator",
        "getSelfTokens"
    ],
    "classes": [
        "MockToken",
        "MockVar",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockToken",
        "MockVar"
    ]
}