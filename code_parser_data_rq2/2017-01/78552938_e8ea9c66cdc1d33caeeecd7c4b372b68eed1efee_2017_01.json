{
    "identifiers": [
        "sys",
        "argparse",
        "utils",
        "os",
        "logging",
        "pandas",
        "pd",
        "cgc_overlap",
        "method_overlap",
        "p_value",
        "num_genes",
        "consistency",
        "plot_data",
        "utils",
        "numpy",
        "np",
        "logging",
        "getLogger",
        "argparse",
        "ArgumentParser",
        "description",
        "info",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "help",
        "help_str",
        "parser",
        "add_argument",
        "required",
        "help",
        "help_str",
        "parser",
        "add_argument",
        "required",
        "help",
        "help_str",
        "parser",
        "add_argument",
        "required",
        "help",
        "help_str",
        "parser",
        "add_argument",
        "help",
        "help_str",
        "parser",
        "add_argument",
        "help",
        "help_str",
        "parser",
        "add_argument",
        "help",
        "help_str",
        "parser",
        "add_argument",
        "help",
        "help_str",
        "parser",
        "add_argument",
        "help",
        "help_str",
        "parser",
        "parse_args",
        "args",
        "log_level",
        "args",
        "log",
        "args",
        "log",
        "args",
        "log",
        "os",
        "devnull",
        "args",
        "log_level",
        "utils",
        "start_logging",
        "log_file",
        "log_file",
        "log_level",
        "log_level",
        "verbose",
        "args",
        "verbose",
        "vars",
        "args",
        "logger",
        "info",
        "format",
        "join",
        "sys",
        "argv",
        "opts",
        "df_dict",
        "key",
        "df",
        "df_list",
        "df",
        "nunique",
        "num_sample_dict",
        "df_dict",
        "sig_genes",
        "ttype",
        "df",
        "df_dict",
        "iteritems",
        "df",
        "unique",
        "df",
        "df",
        "df",
        "drop_duplicates",
        "subset",
        "sig_genes",
        "df",
        "df",
        "isin",
        "sig_genes",
        "ttype",
        "df",
        "df",
        "isin",
        "sig_genes",
        "df_tmp",
        "groupby",
        "sum",
        "all_samples",
        "num_drivers",
        "index",
        "pd",
        "Series",
        "np",
        "zeros",
        "len",
        "no_drivers",
        "index",
        "no_drivers",
        "pd",
        "concat",
        "num_drivers",
        "no_drivers_series",
        "np",
        "mean",
        "num_drivers_per_samp",
        "num_drivers_per_samp",
        "num_avg_drivers_dict",
        "drivers_per_samp_dict",
        "opts",
        "os",
        "path",
        "exists",
        "opts",
        "os",
        "makedirs",
        "opts",
        "utils",
        "load_config",
        "opts",
        "utils",
        "process_cgc",
        "opts",
        "cgc_overlap",
        "read_custom_list",
        "opts",
        "utils",
        "fetch_single_method_significant_genes",
        "opts",
        "opts",
        "opts",
        "config",
        "pd",
        "read_table",
        "os",
        "path",
        "join",
        "opts",
        "logger",
        "info",
        "signif_dict",
        "len",
        "pancan_genes",
        "cgc",
        "len",
        "pancan_genes",
        "landscapes",
        "len",
        "pancan_genes",
        "cgc",
        "landscapes",
        "pd",
        "Series",
        "intersect_cgc",
        "intersect_landscapes",
        "intersect_all",
        "index",
        "os",
        "path",
        "join",
        "opts",
        "plot_data",
        "single_method_overlap",
        "s",
        "out_path",
        "logger",
        "info",
        "opts",
        "utils",
        "is_valid_config",
        "config",
        "method_name",
        "config",
        "method_name",
        "logger",
        "info",
        "os",
        "path",
        "join",
        "opts",
        "plot_data",
        "single_method_qqplot",
        "pancan_df",
        "pval_col",
        "out_path",
        "logger",
        "info",
        "signif_dict",
        "signif_dict",
        "pd",
        "read_table",
        "opts",
        "mut_df",
        "mut_df",
        "isin",
        "drop_variants",
        "mut_df",
        "loc",
        "mut_df",
        "logger",
        "info",
        "ttype",
        "mut_df",
        "dropna",
        "unique",
        "mut_df",
        "mut_df",
        "ttype",
        "copy",
        "get_avg_drivers",
        "ttype_data",
        "signif_dict",
        "os",
        "path",
        "join",
        "opts",
        "plot_data",
        "single_method_driver_per_sample",
        "driver_per_sample",
        "out_path",
        "logger",
        "info",
        "logger",
        "info",
        "pd",
        "Series",
        "k",
        "len",
        "signif_dict",
        "k",
        "k",
        "signif_dict",
        "os",
        "path",
        "join",
        "opts",
        "plot_data",
        "single_method_num_drivers_per_type",
        "signif_ct",
        "order",
        "out_path",
        "logger",
        "info",
        "parse_arguments",
        "main",
        "opts",
        "cli_main"
    ],
    "literals": [
        "'Evaluates cancer driver gene methods'",
        "'-ll'",
        "'--log-level'",
        "'store'",
        "''",
        "'Write a log file (--log-level=DEBUG for debug mode, '",
        "'--log-level=INFO for info mode)'",
        "'-l'",
        "'--log'",
        "'store'",
        "'stdout'",
        "'Path to log file. (accepts \"stdout\")'",
        "'-v'",
        "'--verbose'",
        "'store_true'",
        "'Flag for more verbose log output'",
        "'directory containing results from methods on full data'",
        "'-i'",
        "'--input-dir'",
        "'Mutation file (MAF file)'",
        "'-m'",
        "'--mutations'",
        "'Method name (should be same as listed inside config.yaml))'",
        "'-n'",
        "'--method-name'",
        "'Name of column with cancer type information in MAF file'",
        "'-t'",
        "'--tumor-type-col'",
        "'Path to Cancer Gene Census file'",
        "'-c'",
        "'--cgc'",
        "'Landscapes driver gene list'",
        "'-landscapes'",
        "'--landscapes'",
        "'Configuration file (YAML format)'",
        "'-config'",
        "'--config'",
        "'Q-value threshold for significance (Default: 0.1)'",
        "'-q'",
        "'--qvalue'",
        "'output directory'",
        "'-o'",
        "'--output'",
        "''",
        "'Command: {0}'",
        "' '",
        "'Tumor_Sample_Barcode'",
        "'Tumor_Sample_Barcode'",
        "'is_nonsilent'",
        "'Tumor_Sample_Barcode'",
        "'Hugo_Symbol'",
        "'Hugo_Symbol'",
        "'Hugo_Symbol'",
        "'Tumor_Sample_Barcode'",
        "'is_nonsilent'",
        "'output'",
        "'output'",
        "'config'",
        "'cgc'",
        "'landscapes'",
        "'input_dir'",
        "'method_name'",
        "'qvalue'",
        "'input_dir'",
        "'PANCAN.txt'",
        "'Overlapping genes with CGC and Cancer Genome Landscapes . . .'",
        "'PANCAN'",
        "'CGC'",
        "'Landscapes'",
        "'All'",
        "'output'",
        "'gene_list_overlap.pdf'",
        "'Finished'",
        "'method_name'",
        "'pvalue'",
        "'pvalue'",
        "'pvalue'",
        "'Creating p-value QQ plot . . .'",
        "'output'",
        "'qq_plot.pdf'",
        "'Finished.'",
        "'PANCAN'",
        "'mutations'",
        "\"3'UTR\"",
        "\"5'UTR\"",
        "\"3'Flank\"",
        "\"5'Flank\"",
        "\"RNA\"",
        "\"Intron\"",
        "'Variant_Classification'",
        "'is_nonsilent'",
        "'Variant_Classification'",
        "'Silent'",
        "'is_nonsilent'",
        "'Analyzing number of drivers per sample . . .'",
        "'Tumor_Type'",
        "'Tumor_Type'",
        "'output'",
        "'cancer_type_per_sample.pdf'",
        "'Finished.'",
        "'Analyzing number of driver in each cancer type . . .'",
        "'output'",
        "'cancer_type_num_drivers.pdf'",
        "'Finished.'",
        "'__main__'"
    ],
    "variables": [
        "logger",
        "info",
        "parser",
        "help_str",
        "help_str",
        "help_str",
        "help_str",
        "help_str",
        "help_str",
        "help_str",
        "help_str",
        "help_str",
        "args",
        "log_file",
        "log_file",
        "log_file",
        "log_level",
        "opts",
        "num_sample_dict",
        "num_sample_dict",
        "key",
        "num_avg_drivers_dict",
        "drivers_per_samp_dict",
        "all_samples",
        "df",
        "df",
        "df_tmp",
        "df_tmp",
        "num_drivers",
        "no_drivers",
        "no_drivers_series",
        "num_drivers_per_samp",
        "num_avg_drivers_dict",
        "ttype",
        "drivers_per_samp_dict",
        "ttype",
        "config",
        "cgc",
        "landscapes",
        "signif_dict",
        "pancan_df",
        "pancan_genes",
        "intersect_cgc",
        "intersect_landscapes",
        "intersect_all",
        "s",
        "out_path",
        "method_name",
        "pval_col",
        "pval_col",
        "out_path",
        "mut_df",
        "drop_variants",
        "mut_df",
        "mut_df",
        "ttype_data",
        "ttype_data",
        "ttype",
        "driver_mean",
        "driver_per_sample",
        "out_path",
        "order",
        "signif_ct",
        "out_path",
        "opts"
    ],
    "comments": [
        "module logger",
        "make a parser",
        "logging arguments",
        "program arguments",
        "handle logging",
        "auto-name the log file",
        "start logging",
        "log user entered command",
        "logger.info('Version: {0}'.format(prob2020.__version__))",
        "count number of samples for each tumor type",
        "get the average number of drivers per sample assuming all non-silent",
        "mutations \"count\" for significant genes",
        "handle samples",
        "keep nonsilent mutations",
        "count number of driver genes with non-silent mutations",
        "handle cases with samples with no driver genes mutated",
        "make output directory if it doesn't exist",
        "load config file",
        "run commands",
        "get significant genes",
        "",
        "Pan-cancer plots",
        "",
        "overlap with gene lists",
        "qq-plot",
        "figure out which columns are being used",
        "",
        "Cancer type specific plots",
        "",
        "process maf file",
        "plot number of drivers per sample",
        "plot number of driver genes"
    ],
    "docstrings": [],
    "functions": [
        "parse_arguments",
        "get_num_samples",
        "get_avg_drivers",
        "main",
        "cli_main"
    ],
    "classes": []
}