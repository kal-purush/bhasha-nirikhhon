{
    "identifiers": [
        "$",
        "$",
        "options",
        "$",
        "options",
        "$",
        "$",
        "$",
        "el",
        "$",
        "el",
        "slider",
        "$",
        "defaults",
        "options",
        "slider",
        "parseInt",
        "slider",
        "slider",
        "el",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "i",
        "props",
        "i",
        "div",
        "props",
        "i",
        "slider",
        "props",
        "i",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "el",
        "el",
        "el",
        "slider",
        "$",
        "$",
        "setup",
        "slider",
        "slider",
        "el",
        "slider",
        "slider",
        "el",
        "slider",
        "slider",
        "slider",
        "slider",
        "$",
        "slider",
        "slider",
        "el",
        "slider",
        "slider",
        "slider",
        "slider",
        "el",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "getViewportMaxWidth",
        "slider",
        "slider",
        "slider",
        "getSlideWidth",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "$",
        "slider",
        "appendCaptions",
        "slider",
        "slider",
        "getPagerQty",
        "slider",
        "el",
        "slider",
        "preloadSelector",
        "slider",
        "slider",
        "preloadSelector",
        "slider",
        "slider",
        "slider",
        "appendControls",
        "slider",
        "slider",
        "appendControlsAuto",
        "slider",
        "appendPager",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "preloadSelector",
        "start",
        "loadElements",
        "preloadSelector",
        "start",
        "selector",
        "callback",
        "selector",
        "total",
        "callback",
        "selector",
        "$",
        "count",
        "total",
        "callback",
        "$",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "sliceAppend",
        "slicePrepend",
        "el",
        "sliceAppend",
        "slicePrepend",
        "slider",
        "setSlidePosition",
        "slider",
        "slider",
        "slider",
        "getViewportHeight",
        "el",
        "slider",
        "el",
        "slider",
        "slider",
        "slider",
        "$",
        "resizeWindow",
        "slider",
        "slider",
        "getPagerQty",
        "slider",
        "initAuto",
        "slider",
        "initTicker",
        "slider",
        "updatePagerActive",
        "slider",
        "slider",
        "updateDirectionControls",
        "slider",
        "slider",
        "initTouch",
        "slider",
        "slider",
        "$",
        "keyPress",
        "$",
        "slider",
        "slider",
        "children",
        "slider",
        "slider",
        "children",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "getMoveBy",
        "children",
        "slider",
        "currentIndex",
        "i",
        "i",
        "slider",
        "i",
        "currentIndex",
        "i",
        "slider",
        "children",
        "children",
        "slider",
        "i",
        "children",
        "children",
        "slider",
        "currentIndex",
        "i",
        "slider",
        "children",
        "index",
        "height",
        "$",
        "slider",
        "height",
        "slider",
        "slider",
        "height",
        "children",
        "$",
        "slider",
        "height",
        "parseFloat",
        "slider",
        "parseFloat",
        "slider",
        "parseFloat",
        "slider",
        "parseFloat",
        "slider",
        "slider",
        "height",
        "parseFloat",
        "slider",
        "parseFloat",
        "slider",
        "height",
        "slider",
        "slider",
        "width",
        "slider",
        "slider",
        "slider",
        "slider",
        "width",
        "slider",
        "width",
        "slider",
        "slider",
        "slider",
        "slider",
        "wrapWidth",
        "slider",
        "slider",
        "newElWidth",
        "wrapWidth",
        "slider",
        "slider",
        "wrapWidth",
        "slider",
        "newElWidth",
        "wrapWidth",
        "slider",
        "newElWidth",
        "wrapWidth",
        "slider",
        "slider",
        "slider",
        "slider",
        "newElWidth",
        "wrapWidth",
        "slider",
        "wrapWidth",
        "slider",
        "newElWidth",
        "slider",
        "slider",
        "newElWidth",
        "slider",
        "slider",
        "slider",
        "slider",
        "slidesShowing",
        "slider",
        "slider",
        "slider",
        "slidesShowing",
        "slider",
        "childWidth",
        "slider",
        "slider",
        "slidesShowing",
        "slider",
        "slider",
        "childWidth",
        "slider",
        "slidesShowing",
        "slider",
        "slidesShowing",
        "slider",
        "slider",
        "pagerQty",
        "slider",
        "getMoveBy",
        "breakPoint",
        "slider",
        "pagerQty",
        "breakPoint",
        "counter",
        "getNumberSlidesShowing",
        "counter",
        "slider",
        "getNumberSlidesShowing",
        "slider",
        "getNumberSlidesShowing",
        "counter",
        "pagerQty",
        "slider",
        "getNumberSlidesShowing",
        "pagerQty",
        "slider",
        "slider",
        "getNumberSlidesShowing",
        "slider",
        "getNumberSlidesShowing",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "lastChild",
        "slider",
        "position",
        "lastChild",
        "setPositionProperty",
        "position",
        "slider",
        "lastChild",
        "slider",
        "lastShowingIndex",
        "slider",
        "slider",
        "position",
        "slider",
        "lastShowingIndex",
        "setPositionProperty",
        "position",
        "position",
        "slider",
        "slider",
        "getMoveBy",
        "slider",
        "getPagerQty",
        "slider",
        "position",
        "slider",
        "setPositionProperty",
        "position",
        "slider",
        "setPositionProperty",
        "position",
        "value",
        "duration",
        "slider",
        "propValue",
        "slider",
        "value",
        "value",
        "el",
        "slider",
        "duration",
        "el",
        "slider",
        "propValue",
        "duration",
        "el",
        "e",
        "$",
        "e",
        "el",
        "el",
        "updateAfterSlideTransition",
        "updateAfterSlideTransition",
        "el",
        "slider",
        "propValue",
        "el",
        "slider",
        "el",
        "slider",
        "propValue",
        "duration",
        "el",
        "e",
        "$",
        "e",
        "el",
        "el",
        "setPositionProperty",
        "tickerLoop",
        "setPositionProperty",
        "tickerLoop",
        "animateObj",
        "animateObj",
        "slider",
        "value",
        "el",
        "animateObj",
        "duration",
        "slider",
        "updateAfterSlideTransition",
        "el",
        "slider",
        "value",
        "el",
        "animateObj",
        "duration",
        "setPositionProperty",
        "tickerLoop",
        "getPagerQty",
        "i",
        "pagerQty",
        "i",
        "linkContent",
        "slider",
        "$",
        "slider",
        "slider",
        "linkContent",
        "slider",
        "i",
        "slider",
        "linkContent",
        "i",
        "slider",
        "pagerHtml",
        "i",
        "linkContent",
        "slider",
        "pagerHtml",
        "slider",
        "slider",
        "$",
        "slider",
        "$",
        "slider",
        "slider",
        "slider",
        "slider",
        "populatePager",
        "slider",
        "$",
        "slider",
        "slider",
        "clickPagerBind",
        "slider",
        "$",
        "slider",
        "slider",
        "$",
        "slider",
        "slider",
        "clickNextBind",
        "slider",
        "clickPrevBind",
        "slider",
        "$",
        "slider",
        "slider",
        "slider",
        "$",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "$",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "$",
        "slider",
        "slider",
        "$",
        "slider",
        "slider",
        "$",
        "slider",
        "clickStartBind",
        "slider",
        "clickStopBind",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "$",
        "slider",
        "slider",
        "slider",
        "slider",
        "updateAutoControls",
        "slider",
        "slider",
        "index",
        "$",
        "title",
        "title",
        "$",
        "title",
        "e",
        "e",
        "slider",
        "slider",
        "slider",
        "el",
        "el",
        "e",
        "e",
        "slider",
        "slider",
        "slider",
        "el",
        "el",
        "e",
        "el",
        "e",
        "e",
        "el",
        "e",
        "e",
        "e",
        "slider",
        "slider",
        "slider",
        "el",
        "pagerLink",
        "$",
        "e",
        "pagerLink",
        "pagerIndex",
        "parseInt",
        "pagerLink",
        "pagerIndex",
        "slider",
        "el",
        "pagerIndex",
        "slideIndex",
        "slider",
        "slider",
        "slider",
        "len",
        "slider",
        "slider",
        "slider",
        "slideIndex",
        "slider",
        "len",
        "slider",
        "slider",
        "i",
        "el",
        "$",
        "el",
        "slideIndex",
        "slider",
        "slider",
        "position",
        "slider",
        "slider",
        "getPagerQty",
        "slider",
        "position",
        "slider",
        "getPagerQty",
        "getMoveBy",
        "slider",
        "slider",
        "position",
        "slider",
        "slider",
        "position",
        "slider",
        "setPositionProperty",
        "position",
        "slider",
        "setPositionProperty",
        "position",
        "slider",
        "slider",
        "el",
        "slider",
        "slider",
        "slider",
        "slider",
        "state",
        "slider",
        "slider",
        "slider",
        "state",
        "slider",
        "slider",
        "state",
        "getPagerQty",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "getPagerQty",
        "slider",
        "slider",
        "slider",
        "slider",
        "el",
        "el",
        "slider",
        "setTimeout",
        "el",
        "slider",
        "el",
        "$",
        "windowFocusHandler",
        "windowBlurHandler",
        "slider",
        "el",
        "slider",
        "el",
        "slider",
        "slider",
        "el",
        "slider",
        "slider",
        "el",
        "slider",
        "el",
        "slider",
        "position",
        "slider",
        "startPosition",
        "slider",
        "position",
        "position",
        "setPositionProperty",
        "startPosition",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "idx",
        "slider",
        "slider",
        "transform",
        "el",
        "slider",
        "value",
        "parseFloat",
        "transform",
        "idx",
        "setPositionProperty",
        "value",
        "totalDimens",
        "slider",
        "index",
        "totalDimens",
        "slider",
        "$",
        "$",
        "ratio",
        "slider",
        "totalDimens",
        "property",
        "slider",
        "newSpeed",
        "ratio",
        "totalDimens",
        "parseInt",
        "value",
        "tickerLoop",
        "newSpeed",
        "slider",
        "el",
        "totalDimens",
        "slider",
        "index",
        "totalDimens",
        "slider",
        "$",
        "$",
        "ratio",
        "slider",
        "totalDimens",
        "property",
        "slider",
        "newSpeed",
        "ratio",
        "totalDimens",
        "parseInt",
        "el",
        "property",
        "tickerLoop",
        "newSpeed",
        "tickerLoop",
        "resumeSpeed",
        "resumeSpeed",
        "resumeSpeed",
        "slider",
        "slider",
        "position",
        "el",
        "reset",
        "slider",
        "animateProperty",
        "slider",
        "position",
        "position",
        "resetValue",
        "slider",
        "reset",
        "reset",
        "resetValue",
        "setPositionProperty",
        "animateProperty",
        "speed",
        "el",
        "$",
        "win",
        "win",
        "el",
        "viewport",
        "viewport",
        "win",
        "viewport",
        "viewport",
        "win",
        "bounds",
        "bounds",
        "el",
        "bounds",
        "bounds",
        "el",
        "viewport",
        "bounds",
        "viewport",
        "bounds",
        "viewport",
        "bounds",
        "viewport",
        "bounds",
        "e",
        "activeElementTag",
        "p",
        "tagFilters",
        "result",
        "isOnScreen",
        "el",
        "e",
        "clickNextBind",
        "e",
        "e",
        "clickPrevBind",
        "e",
        "slider",
        "slider",
        "onTouchStart",
        "slider",
        "e",
        "slider",
        "e",
        "slider",
        "e",
        "$",
        "e",
        "e",
        "e",
        "e",
        "slider",
        "slider",
        "slider",
        "slider",
        "el",
        "e",
        "orig",
        "orig",
        "orig",
        "PointerEvent",
        "chromePointerEvents",
        "orig",
        "slider",
        "touchPoints",
        "slider",
        "touchPoints",
        "slider",
        "slider",
        "orig",
        "slider",
        "slider",
        "slider",
        "orig",
        "orig",
        "slider",
        "orig",
        "slider",
        "orig",
        "slider",
        "orig",
        "slider",
        "slider",
        "onTouchMove",
        "slider",
        "onTouchEnd",
        "slider",
        "onPointerCancel",
        "e",
        "e",
        "setPositionProperty",
        "slider",
        "slider",
        "slider",
        "onPointerCancel",
        "slider",
        "onTouchMove",
        "slider",
        "onTouchEnd",
        "slider",
        "slider",
        "slider",
        "e",
        "e",
        "orig",
        "orig",
        "orig",
        "touchPoints",
        "slider",
        "touchPoints",
        "slider",
        "slider",
        "xMovement",
        "yMovement",
        "slider",
        "e",
        "yMovement",
        "xMovement",
        "slider",
        "e",
        "e",
        "e",
        "slider",
        "slider",
        "slider",
        "change",
        "touchPoints",
        "slider",
        "value",
        "slider",
        "change",
        "change",
        "touchPoints",
        "slider",
        "value",
        "slider",
        "change",
        "setPositionProperty",
        "value",
        "e",
        "e",
        "slider",
        "onTouchMove",
        "slider",
        "e",
        "orig",
        "orig",
        "orig",
        "slider",
        "touchPoints",
        "slider",
        "touchPoints",
        "slider",
        "distance",
        "slider",
        "slider",
        "distance",
        "slider",
        "slider",
        "slider",
        "el",
        "el",
        "el",
        "slider",
        "distance",
        "slider",
        "slider",
        "value",
        "slider",
        "distance",
        "slider",
        "slider",
        "value",
        "slider",
        "slider",
        "slider",
        "distance",
        "slider",
        "distance",
        "setPositionProperty",
        "value",
        "distance",
        "slider",
        "distance",
        "el",
        "el",
        "el",
        "setPositionProperty",
        "value",
        "slider",
        "onTouchEnd",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "$",
        "slider",
        "slider",
        "slider",
        "e",
        "slider",
        "slider",
        "resizeWindow",
        "$",
        "$",
        "windowWidth",
        "windowWidthNew",
        "windowHeight",
        "windowHeightNew",
        "windowWidth",
        "windowWidthNew",
        "windowHeight",
        "windowHeightNew",
        "el",
        "slider",
        "el",
        "slider",
        "startVisibleIndex",
        "getNumberSlidesShowing",
        "slider",
        "slider",
        "slider",
        "slider",
        "startVisibleIndex",
        "startVisibleIndex",
        "numberOfSlidesShowing",
        "slideIndex",
        "slideIndex",
        "slider",
        "getPagerQty",
        "slider",
        "slideIndex",
        "getPagerQty",
        "slider",
        "slider",
        "slideIndex",
        "el",
        "slideIndex",
        "direction",
        "slider",
        "slider",
        "slider",
        "setSlideIndex",
        "slideIndex",
        "slider",
        "slider",
        "slider",
        "slider",
        "performTransition",
        "slider",
        "el",
        "slider",
        "slider",
        "slider",
        "slider",
        "performTransition",
        "performTransition",
        "slider",
        "slider",
        "slider",
        "direction",
        "slider",
        "el",
        "slider",
        "slider",
        "slider",
        "slider",
        "performTransition",
        "direction",
        "slider",
        "el",
        "slider",
        "slider",
        "slider",
        "slider",
        "performTransition",
        "slider",
        "slider",
        "getPagerQty",
        "slider",
        "slider",
        "updatePagerActive",
        "slider",
        "slider",
        "updateDirectionControls",
        "slider",
        "slider",
        "slider",
        "getViewportHeight",
        "slider",
        "getViewportHeight",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "$",
        "slider",
        "updateAfterSlideTransition",
        "slider",
        "slider",
        "getViewportHeight",
        "slider",
        "getViewportHeight",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "lastChild",
        "slider",
        "slider",
        "position",
        "lastChild",
        "moveBy",
        "slider",
        "lastChild",
        "lastShowingIndex",
        "slider",
        "slider",
        "position",
        "slider",
        "lastShowingIndex",
        "slider",
        "slider",
        "direction",
        "eq",
        "slider",
        "slider",
        "getMoveBy",
        "getPagerQty",
        "getMoveBy",
        "slider",
        "slider",
        "lastChild",
        "el",
        "eq",
        "position",
        "lastChild",
        "direction",
        "slider",
        "position",
        "el",
        "slider",
        "slider",
        "slideIndex",
        "requestEl",
        "slideIndex",
        "parseInt",
        "getMoveBy",
        "position",
        "slider",
        "requestEl",
        "position",
        "value",
        "slider",
        "position",
        "moveBy",
        "position",
        "setPositionProperty",
        "value",
        "slider",
        "slider",
        "slider",
        "applyAriaHiddenAttributes",
        "slider",
        "getMoveBy",
        "el",
        "slider",
        "slider",
        "slider",
        "parseInt",
        "slider",
        "el",
        "pagerIndex",
        "el",
        "slider",
        "slider",
        "slider",
        "parseInt",
        "slider",
        "el",
        "pagerIndex",
        "el",
        "preventControlUpdate",
        "slider",
        "slider",
        "setInterval",
        "slider",
        "el",
        "el",
        "slider",
        "slider",
        "el",
        "slider",
        "preventControlUpdate",
        "updateAutoControls",
        "el",
        "preventControlUpdate",
        "slider",
        "slider",
        "slider",
        "clearInterval",
        "slider",
        "slider",
        "slider",
        "el",
        "slider",
        "preventControlUpdate",
        "updateAutoControls",
        "el",
        "slider",
        "el",
        "slider",
        "slider",
        "el",
        "index",
        "slider",
        "index",
        "el",
        "slider",
        "el",
        "slider",
        "el",
        "slider",
        "el",
        "getSlideWidth",
        "slider",
        "getViewportHeight",
        "slider",
        "setSlidePosition",
        "slider",
        "slider",
        "getPagerQty",
        "slider",
        "getPagerQty",
        "slider",
        "slider",
        "slider",
        "populatePager",
        "updatePagerActive",
        "slider",
        "slider",
        "applyAriaHiddenAttributes",
        "slider",
        "getMoveBy",
        "el",
        "slider",
        "slider",
        "$",
        "slider",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "$",
        "slider",
        "slider",
        "clearInterval",
        "slider",
        "slider",
        "$",
        "resizeWindow",
        "slider",
        "$",
        "keyPress",
        "$",
        "$",
        "windowBlurHandler",
        "windowFocusHandler",
        "el",
        "settings",
        "settings",
        "options",
        "settings",
        "el",
        "init",
        "$",
        "el",
        "init",
        "$",
        "el",
        "jQuery"
    ],
    "literals": [
        "'horizontal'",
        "''",
        "'visible'",
        "'bx-wrapper'",
        "'full'",
        "' / '",
        "'Next'",
        "'Prev'",
        "'Start'",
        "'Stop'",
        "'next'",
        "'bxSlider'",
        "'bxSlider'",
        "'all'",
        "'vertical'",
        "'top'",
        "'left'",
        "'fade'",
        "'div'",
        "'WebkitPerspective'",
        "'MozPerspective'",
        "'OPerspective'",
        "'msPerspective'",
        "'Perspective'",
        "''",
        "'-'",
        "'-transform'",
        "'vertical'",
        "'origStyle'",
        "'style'",
        "'origStyle'",
        "'style'",
        "'<div class=\"'",
        "'\"><div class=\"bx-viewport\"></div></div>'",
        "'aria-live'",
        "'polite'",
        "'<div class=\"bx-loading\" />'",
        "'horizontal'",
        "'%'",
        "'auto'",
        "'relative'",
        "'-'",
        "'-transition-timing-function'",
        "'swing'",
        "'100%'",
        "'hidden'",
        "'relative'",
        "'float'",
        "'horizontal'",
        "'left'",
        "'none'",
        "'none'",
        "'relative'",
        "'width'",
        "'horizontal'",
        "'marginRight'",
        "'vertical'",
        "'marginBottom'",
        "'fade'",
        "'absolute'",
        "'none'",
        "'block'",
        "'<div class=\"bx-controls\" />'",
        "'none'",
        "'all'",
        "'img:not([src=\"\"]), iframe'",
        "'img:not([src=\"\"]), iframe'",
        "'load error'",
        "''",
        "'load'",
        "'fade'",
        "'vertical'",
        "'bx-clone'",
        "'bx-clone'",
        "'aria-hidden'",
        "'aria-hidden'",
        "'vertical'",
        "'resize'",
        "'vertical'",
        "'vertical'",
        "'box-sizing'",
        "'border-box'",
        "'padding-top'",
        "'padding-bottom'",
        "'border-top-width'",
        "'border-bottom-width'",
        "'box-sizing'",
        "'padding-box'",
        "'padding-top'",
        "'padding-bottom'",
        "'100%'",
        "'horizontal'",
        "'vertical'",
        "'horizontal'",
        "'horizontal'",
        "'vertical'",
        "'horizontal'",
        "'reset'",
        "'vertical'",
        "'reset'",
        "'horizontal'",
        "'reset'",
        "'vertical'",
        "'reset'",
        "'vertical'",
        "'translate3d(0, '",
        "'px, 0)'",
        "'translate3d('",
        "'px, 0, 0)'",
        "'-'",
        "'-transition-duration'",
        "'s'",
        "'slide'",
        "'transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd'",
        "'transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd'",
        "'reset'",
        "'ticker'",
        "'-'",
        "'-transition-timing-function'",
        "'linear'",
        "'transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd'",
        "'transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd'",
        "'reset'",
        "'reset'",
        "'slide'",
        "'reset'",
        "'ticker'",
        "'linear'",
        "'reset'",
        "''",
        "''",
        "''",
        "'bx-custom-pager'",
        "'bx-default-pager'",
        "'<div class=\"bx-pager-item\"><a href=\"\" data-slide-index=\"'",
        "'\" class=\"bx-pager-link\">'",
        "'</a></div>'",
        "'<div class=\"bx-pager\" />'",
        "'bx-has-pager'",
        "'click touchend'",
        "'a'",
        "'<a class=\"bx-next\" href=\"\">'",
        "'</a>'",
        "'<a class=\"bx-prev\" href=\"\">'",
        "'</a>'",
        "'click touchend'",
        "'click touchend'",
        "'<div class=\"bx-controls-direction\" />'",
        "'bx-has-controls-direction'",
        "'<div class=\"bx-controls-auto-item\"><a class=\"bx-start\" href=\"\">'",
        "'</a></div>'",
        "'<div class=\"bx-controls-auto-item\"><a class=\"bx-stop\" href=\"\">'",
        "'</a></div>'",
        "'<div class=\"bx-controls-auto\" />'",
        "'click'",
        "'.bx-start'",
        "'click'",
        "'.bx-stop'",
        "'bx-has-controls-auto'",
        "'stop'",
        "'start'",
        "'img:first'",
        "'title'",
        "''",
        "'<div class=\"bx-caption\"><span>'",
        "'</span></div>'",
        "'disabled'",
        "'disabled'",
        "'disabled'",
        "'data-slide-index'",
        "'data-slide-index'",
        "'short'",
        "'a'",
        "'active'",
        "'a'",
        "'active'",
        "''",
        "'horizontal'",
        "'reset'",
        "'vertical'",
        "'reset'",
        "'a'",
        "'active'",
        "'a:not(.bx-'",
        "')'",
        "'active'",
        "'disabled'",
        "'disabled'",
        "'disabled'",
        "'disabled'",
        "'disabled'",
        "'disabled'",
        "'disabled'",
        "'disabled'",
        "'next'",
        "'bx-clone'",
        "'bx-clone'",
        "'horizontal'",
        "'reset'",
        "'horizontal'",
        "'-'",
        "'-transform'",
        "','",
        "'reset'",
        "'horizontal'",
        "'horizontal'",
        "'left'",
        "'top'",
        "'horizontal'",
        "'horizontal'",
        "'left'",
        "'top'",
        "'next'",
        "'.bx-clone'",
        "'horizontal'",
        "'horizontal'",
        "'ticker'",
        "'input|textarea'",
        "'i'",
        "'touchstart MSPointerDown pointerdown'",
        "'click'",
        "'.bxslider a'",
        "'click-disabled'",
        "'click-disabled'",
        "'a'",
        "'touchstart'",
        "'disabled'",
        "'disabled'",
        "'undefined'",
        "'function'",
        "'touchmove MSPointerMove pointermove'",
        "'touchend MSPointerUp pointerup'",
        "'MSPointerCancel pointercancel'",
        "'reset'",
        "'disabled'",
        "'MSPointerCancel pointercancel'",
        "'touchmove MSPointerMove pointermove'",
        "'touchend MSPointerUp pointerup'",
        "'undefined'",
        "'touchmove'",
        "'fade'",
        "'horizontal'",
        "'reset'",
        "'touchmove MSPointerMove pointermove'",
        "'disabled'",
        "'undefined'",
        "'fade'",
        "'horizontal'",
        "'reset'",
        "'reset'",
        "'touchend MSPointerUp pointerup'",
        "'touchstart'",
        "'click'",
        "'aria-hidden'",
        "'true'",
        "'aria-hidden'",
        "'false'",
        "'undefined'",
        "'next'",
        "'prev'",
        "'fade'",
        "':visible'",
        "'zIndex'",
        "'zIndex'",
        "'horizontal'",
        "'prev'",
        "'.bx-clone'",
        "'next'",
        "'> .bx-clone'",
        "'undefined'",
        "'horizontal'",
        "'slide'",
        "'next'",
        "'prev'",
        "'next'",
        "'stop'",
        "'start'",
        "'.bx-clone'",
        "'height'",
        "'.bx-clone'",
        "'origStyle'",
        "'style'",
        "'origStyle'",
        "'style'",
        "'origStyle'",
        "'style'",
        "'origStyle'",
        "'style'",
        "'.bx-caption'",
        "'resize'",
        "'keydown'",
        "'bxSlider'",
        "'blur'",
        "'focus'",
        "'bxSlider'",
        "'bxSlider'"
    ],
    "variables": [
        "defaults",
        "slider",
        "el",
        "windowWidth",
        "windowHeight",
        "init",
        "div",
        "props",
        "i",
        "setup",
        "preloadSelector",
        "loadElements",
        "total",
        "count",
        "start",
        "sliceAppend",
        "slicePrepend",
        "getViewportHeight",
        "height",
        "children",
        "currentIndex",
        "getViewportMaxWidth",
        "width",
        "getSlideWidth",
        "newElWidth",
        "wrapWidth",
        "getNumberSlidesShowing",
        "slidesShowing",
        "childWidth",
        "getPagerQty",
        "pagerQty",
        "breakPoint",
        "counter",
        "getMoveBy",
        "setSlidePosition",
        "position",
        "lastChild",
        "lastShowingIndex",
        "setPositionProperty",
        "animateObj",
        "propValue",
        "populatePager",
        "pagerHtml",
        "linkContent",
        "pagerQty",
        "i",
        "appendPager",
        "appendControls",
        "appendControlsAuto",
        "appendCaptions",
        "title",
        "clickNextBind",
        "clickPrevBind",
        "clickStartBind",
        "clickStopBind",
        "clickPagerBind",
        "pagerLink",
        "pagerIndex",
        "updatePagerActive",
        "len",
        "updateAfterSlideTransition",
        "position",
        "updateAutoControls",
        "updateDirectionControls",
        "windowFocusHandler",
        "windowBlurHandler",
        "initAuto",
        "initTicker",
        "startPosition",
        "position",
        "transform",
        "value",
        "idx",
        "ratio",
        "property",
        "newSpeed",
        "totalDimens",
        "tickerLoop",
        "speed",
        "position",
        "reset",
        "animateProperty",
        "resetValue",
        "isOnScreen",
        "win",
        "viewport",
        "bounds",
        "keyPress",
        "activeElementTag",
        "tagFilters",
        "p",
        "result",
        "initTouch",
        "onTouchStart",
        "orig",
        "touchPoints",
        "chromePointerEvents",
        "onPointerCancel",
        "onTouchMove",
        "orig",
        "touchPoints",
        "xMovement",
        "yMovement",
        "value",
        "change",
        "onTouchEnd",
        "orig",
        "touchPoints",
        "value",
        "distance",
        "resizeWindow",
        "windowWidthNew",
        "windowHeightNew",
        "applyAriaHiddenAttributes",
        "numberOfSlidesShowing",
        "setSlideIndex",
        "performTransition",
        "moveBy",
        "position",
        "lastChild",
        "lastShowingIndex",
        "eq",
        "value",
        "requestEl",
        "pagerIndex",
        "pagerIndex"
    ],
    "comments": [
        "GENERAL",
        "TOUCH",
        "ACCESSIBILITY",
        "KEYBOARD",
        "PAGER",
        "CONTROLS",
        "AUTO",
        "CAROUSEL",
        "CALLBACKS",
        "calls when auto slides starts and stops",
        "support multiple elements",
        "create a namespace to be used throughout the plugin",
        "set a reference to our slider element",
        "get the original window dimens (thanks a lot IE)",
        "Return if slider is already initialized",
        "Return if slider is already initialized",
        "merge user-supplied options with the defaults",
        "parse slideWidth setting",
        "store the original children",
        "check if actual number of slides is less than minSlides / maxSlides",
        "if random start, set the startSlide setting to random number",
        "store active slide information",
        "store if the slider is in carousel mode (displaying / moving multiple slides)",
        "if carousel, force preloadImages = 'all'",
        "calculate the min / max width thresholds based on min / max number of slides",
        "used to setup and update carousel slides dimensions",
        "store the current state of the slider (if currently animating, working is true)",
        "initialize the controls object",
        "initialize an auto interval",
        "determine which property to use for transitions",
        "determine if hardware acceleration can be used",
        "create our test div element",
        "css transition properties",
        "test for each property",
        "if vertical mode always make maxSlides and minSlides equal",
        "save original style data",
        "perform all DOM / CSS modifications",
        "set the default preload selector (visible)",
        "wrap el in a wrapper",
        "store a namespace reference to .bx-viewport",
        "add aria-live if the setting is enabled and ticker mode is disabled",
        "add a loading div to display while images are loading",
        "set el to a massive width, to hold any needed slides",
        "also strip any margin and padding from el",
        "if using CSS, add the easing property",
        "if not using CSS and no easing value was supplied, use the default JS animation easing (swing)",
        "make modifications to the viewport (.bx-viewport)",
        "apply css to all slider children",
        "the float attribute is a reserved word in compressors like YUI compressor and need to be quoted #48",
        "apply the calculated width after the float is applied to prevent scrollbar interference",
        "if slideMargin is supplied, add the css",
        "if \"fade\" mode, add positioning and z-index CSS",
        "prepare the z-index on the showing element",
        "create an element to contain all slider controls (pager, start / stop, etc)",
        "if captions are requested, add them",
        "check if startSlide is last slide",
        "if video is true, set up the fitVids plugin",
        "preloadImages",
        "only check for control addition if not in \"ticker\" mode",
        "if controls are requested, add them",
        "if auto is true, and auto controls are requested, add them",
        "if pager is requested, add it",
        "if any control option is requested, add the controls wrapper",
        "if ticker mode, do not allow a pager",
        "if infinite loop, prepare additional slides",
        "remove the loading DOM element",
        "set the left / top position of \"el\"",
        "if \"vertical\" mode, always use adaptiveHeight to prevent odd behavior",
        "set the viewport height",
        "make sure everything is positioned just right (same as a window resize)",
        "onSliderLoad callback",
        "slider has been fully initialized",
        "add the resize call to the window",
        "if auto is true and has more than 1 page, start the show",
        "if ticker is true, start the ticker",
        "if pager is requested, make the appropriate pager link active",
        "check for any updates to the controls (like hideControlOnEnd updates)",
        "if touchEnabled is true, setup the touch events",
        "if keyboardEnabled is true, setup the keyboard events",
        "first determine which children (slides) should be used in our height calculation",
        "if mode is not \"vertical\" and adaptiveHeight is false, include all children",
        "if not carousel, return the single active child",
        "if carousel, return a slice of children",
        "get the individual slide index",
        "add the current slide to the children",
        "cycle through the remaining \"showing\" slides",
        "if looped back to the start",
        "if \"vertical\" mode, calculate the sum of the heights of the children",
        "add user-supplied margins",
        "if not \"vertical\" mode, calculate the max height of the children",
        "start with any user-supplied slide width",
        "get the current viewport width",
        "if slide width was not supplied, or is larger than the viewport use the viewport width",
        "if carousel, use the thresholds to determine the width",
        "if viewport is smaller than minThreshold, return minSlides",
        "if viewport is larger than maxThreshold, return maxSlides",
        "if viewport is between min / max thresholds, divide viewport width by first child width",
        "if \"vertical\" mode, slides showing will always be minSlides",
        "if moveSlides is specified by the user",
        "when breakpoint goes above children length, counter is the number of pages",
        "if moveSlides is 0 (auto) divide children length by sides showing, then round up",
        "if moveSlides was set by the user and moveSlides is less than number of slides showing",
        "if moveSlides is 0 (auto)",
        "if last slide, not infinite loop, and number of children is larger than specified maxSlides",
        "get the last child's position",
        "set the left position",
        "get the last showing index's position",
        "set the top position",
        "if not last slide",
        "get the position of the first showing slide",
        "check for last slide",
        "set the respective position",
        "use CSS transform",
        "determine the translate3d value",
        "add the CSS transition-duration",
        "set the property value",
        "add a callback method - executes when CSS transition completes",
        "make sure it's the correct one",
        "remove the callback",
        "duration = 0",
        "make the transition use 'linear'",
        "make sure it's the correct one",
        "remove the callback",
        "reset the position",
        "start the loop again",
        "duration = 0",
        "use JS animate",
        "run the recursive loop after animation",
        "loop through each pager item",
        "if a buildPager function is supplied, use it to get pager link value, else use index + 1",
        "var linkContent = slider.settings.buildPager && $.isFunction(slider.settings.buildPager) ? slider.settings.buildPager(i) : i + 1;",
        "add the markup to the string",
        "populate the pager element with pager links",
        "create the pager DOM element",
        "if a pager selector was supplied, populate it with the pager",
        "if no pager selector was supplied, add it after the wrapper",
        "populate the pager",
        "assign the pager click binding",
        "add click actions to the controls",
        "if nextSelector was supplied, populate it",
        "if prevSelector was supplied, populate it",
        "if no custom selectors were supplied",
        "add the controls to the DOM",
        "add the control elements to the directionEl",
        "slider.viewport.append(slider.controls.directionEl);",
        "add the controls to the DOM",
        "on click actions to the controls",
        "if autoControlsCombine, insert only the \"start\" control",
        "if autoControlsCombine is false, insert both controls",
        "if auto controls selector was supplied, populate it with the controls",
        "if auto controls selector was not supplied, add it after the wrapper",
        "update the auto controls",
        "cycle through each child",
        "get the image title attribute",
        "append the caption",
        "if auto show is running, stop it",
        "if auto show is running, stop it",
        "if auto show is running, stop it",
        "if clicked pager link is not active, continue with the goToSlide call",
        "if \"short\" pager type",
        "nb of children",
        "remove all pager active classes",
        "apply the active class for all pagers",
        "if infinite loop is true",
        "first slide",
        "set the new position",
        "carousel, last slide",
        "last slide",
        "declare that the transition is complete",
        "onSlideAfter callback",
        "if autoControlsCombine is true, replace the current control with the new state",
        "if autoControlsCombine is false, apply the \"active\" class to the appropriate control",
        "if first slide",
        "if last slide",
        "if any slide in the middle",
        "auto start and stop functions",
        "if autoDelay was supplied, launch the auto show using a setTimeout() call",
        "if autoDelay was not supplied, start the auto show normally",
        "add focus and blur events to ensure its running if timeout gets paused",
        "if autoHover is requested",
        "on el hover",
        "if the auto show is currently playing (has an active interval)",
        "stop the auto show and pass true argument which will prevent control update",
        "create a new autoPaused value which will be used by the relative \"mouseout\" event",
        "if the autoPaused value was created be the prior \"mouseover\" event",
        "start the auto show and pass true argument which will prevent control update",
        "reset the autoPaused value",
        "if autoDirection is \"next\", append a clone of the entire slider",
        "if autoDirection is \"prev\", prepend a clone of the entire slider, and set the left position",
        "do not allow controls in ticker mode",
        "if autoHover is requested",
        "calculate the speed ratio (used to determine the new speed to finish the paused animation)",
        "determine which property to use",
        "calculate the new speed",
        "on el hover",
        "calculate the total width of children (used to calculate the speed ratio)",
        "calculate the speed ratio (used to determine the new speed to finish the paused animation)",
        "determine which property to use",
        "calculate the new speed",
        "start the ticker loop",
        "if \"next\" animate left position to last child, then reset left to 0",
        "if \"prev\" animate left position to 0, then reset left to first non-clone child",
        "initialize object to contain all touch values",
        "for browsers that have implemented pointer events and fire a click after",
        "every pointerup regardless of whether pointerup is on same screen location as pointerdown or not",
        "if the target is a link allow it to click through and",
        "follow the URL",
        "watch only for left mouse, touch contact and pen contact",
        "touchstart event object doesn`t have button property",
        "disable slider controls while user is interacting with slides to avoid slider freeze that happens on touch devices when a slide swipe happens immediately after interacting with slider controls",
        "record the original position when touch starts",
        "record the starting touch x, y coordinates",
        "store original event data for click fixation",
        "at this moment we don`t know what it is click or swipe",
        "on a \"touchmove\" event to the viewport",
        "on a \"touchend\" event to the viewport",
        "onPointerCancel handler is needed to deal with situations when a touchend\n      doesn't fire after a touchstart (this happens on windows phones only)",
        "remove handlers",
        "if scrolling on y axis, do not prevent default",
        "this is swipe",
        "x axis swipe",
        "y axis swipe",
        "if horizontal, drag along x axis",
        "if vertical, drag along y axis",
        "enable slider controls as soon as user stops interacing with slides",
        "record end x, y positions",
        "if fade mode, check if absolute x distance clears the threshold",
        "not fade mode",
        "calculate distance and el's animate property",
        "if not infinite loop and first / last slide, do not attempt a slide transition",
        "check if distance clears threshold",
        "el.animate(property, 200);",
        "if slider had swipe with left mouse, touch contact and pen contact",
        "trigger click event (fix for Firefox59 and PointerEvent standard compatibility)",
        "don't do anything if slider isn't initialized.",
        "Delay if slider working.",
        "get the new window dimens (again, thank you IE)",
        "make sure that it is a true window resize",
        "are resized. Can you just die already?*",
        "set the new window dimens",
        "update all dynamic elements",
        "Call user resize handler",
        "only apply attributes if the setting is enabled and not in ticker mode",
        "add aria-hidden=true to all elements",
        "get the visible elements and change to aria-hidden=false",
        "we don't go to undefined slides",
        "if slideIndex is greater than children length, set active index to 0 (this happens during infinite loop)",
        "we don't move to undefined pages",
        "set active index to requested slide",
        "onSlideBefore, onSlideNext, onSlidePrev callbacks",
        "Allow transition canceling based on returned value",
        "store the old index",
        "set new index",
        "if plugin is currently in motion, ignore request",
        "declare that plugin is in motion",
        "If transitions canceled, reset and return",
        "restore old index",
        "is not in motion",
        "Prevent canceling in future functions or lack there-of from negating previous commands to cancel",
        "Prevent canceling in future functions or lack there-of from negating previous commands to cancel",
        "check if last slide",
        "update the pager with active class",
        "// check for direction control update",
        "if slider is set to mode: \"fade\"",
        "if adaptiveHeight is true and next height is different from current height, animate to the new height",
        "fade out the visible child and reset its z-index value",
        "fade in the newly requested slide",
        "slider mode is not \"fade\"",
        "if adaptiveHeight is true and next height is different from current height, animate to the new height",
        "if carousel and not infinite loop",
        "get the last child position",
        "calculate the position of the last slide",
        "get last showing index position",
        "horizontal carousel, going previous while on first slide (infiniteLoop mode)",
        "get the last child position",
        "if infinite loop and \"Next\" is clicked on the last slide",
        "get the last clone position",
        "normal non-zero requests",
        "parseInt is applied to allow floats for slides/page",
        "If the position doesn't exist\n         * (e.g. if you destroy the slider on a next click),\n         * it doesn't throw an error.",
        "plugin values to be animated",
        "if infiniteLoop is false and last page is showing, disregard call",
        "if infiniteLoop is false and last page is showing, disregard call",
        "if an interval already exists, disregard call",
        "create an interval",
        "allback for when the auto rotate status changes",
        "if auto controls are displayed and preventControlUpdate is not true",
        "if slider is auto paused, just clear that state",
        "if no interval exists, disregard call",
        "clear the interval",
        "allback for when the auto rotate status changes",
        "if auto controls are displayed and preventControlUpdate is not true",
        "resize all children in ratio to new screen size",
        "adjust the height",
        "update the slide position",
        "if active.last was true before the screen resize, we want",
        "to keep it last no matter what screen size we end on",
        "if the active index (page) no longer exists due to the resize, simply set the index as last",
        "if a pager is being displayed and a custom pager is not being used, update it",
        "don't do anything if slider has already been destroyed",
        "remove self reference in data",
        "remove global window handlers",
        "store reference to self in order to access public functions later",
        "returns the current jQuery object"
    ],
    "docstrings": [
        "* bxSlider v4.2.17\n * Copyright 2013-2017 Steven Wanderski\n * Written while drinking Belgian ales and listening to jazz\n * Licensed under MIT (http://opensource.org/licenses/MIT)",
        "* ===================================================================================\n     * = PRIVATE FUNCTIONS\n     * ===================================================================================",
        "* Initializes namespace settings to be used throughout plugin",
        "* Performs all DOM and CSS modifications",
        "* Start the slider",
        "* Returns the calculated height of the viewport, used to determine either adaptiveHeight or the maxHeight value",
        "* Returns the calculated width to be used for the outer wrapper / viewport",
        "* Returns the calculated width to be applied to each slide",
        "* Returns the number of slides currently visible in the viewport (includes partially visible slides)",
        "* Returns the number of pages (one full viewport of slides is one \"page\")",
        "* Returns the number of individual slides by which to shift the slider",
        "* Sets the slider's (el) left or top position",
        "* Sets the el's animating property position (which in turn will sometimes animate el).\n     * If using CSS, sets the transform property. If not using CSS, sets the top / left property.\n     *\n     * @param value (int)\n     *  - the animating property's value\n     *\n     * @param type (string) 'slide', 'reset', 'ticker'\n     *  - the type of instance for which the function is being\n     *\n     * @param duration (int)\n     *  - the amount of time (in ms) the transition should occupy\n     *\n     * @param params (array) optional\n     *  - an optional parameter containing any variables that need to be passed in",
        "* Populates the pager with proper amount of pages",
        "* Appends the pager to the controls element",
        "* Appends prev / next controls to the controls element",
        "* Appends start / stop auto controls to the controls element",
        "* Appends image captions to the DOM",
        "* Click next binding\n     *\n     * @param e (event)\n     *  - DOM event object",
        "* Click prev binding\n     *\n     * @param e (event)\n     *  - DOM event object",
        "* Click start binding\n     *\n     * @param e (event)\n     *  - DOM event object",
        "* Click stop binding\n     *\n     * @param e (event)\n     *  - DOM event object",
        "* Click pager binding\n     *\n     * @param e (event)\n     *  - DOM event object",
        "* Updates the pager links with an active class\n     *\n     * @param slideIndex (int)\n     *  - index of slide to make active",
        "* Performs needed actions after a slide transition",
        "* Updates the auto controls state (either active, or combined switch)\n     *\n     * @param state (string) \"start\", \"stop\"\n     *  - the new state of the auto show",
        "* Updates the direction controls (checks if either should be hidden)",
        "* Initializes the auto process",
        "* Initializes the ticker process",
        "* Runs a continuous loop, news ticker-style",
        "* Check if el is on screen",
        "* Initializes keyboard events",
        "* Initializes touch events",
        "* Event handler for \"touchstart\"\n     *\n     * @param e (event)\n     *  - DOM event object",
        "* Cancel Pointer for Windows Phone\n     *\n     * @param e (event)\n     *  - DOM event object",
        "* Event handler for \"touchmove\"\n     *\n     * @param e (event)\n     *  - DOM event object",
        "* Event handler for \"touchend\"\n     *\n     * @param e (event)\n     *  - DOM event object",
        "* Window resize event callback",
        "*we must check this because our dinosaur friend IE fires a window resize event when certain DOM elements",
        "* Adds an aria-hidden=true attribute to each element\n     *\n     * @param startVisibleIndex (int)\n     *  - the first visible element's index",
        "* Returns index according to present page range\n     *\n     * @param slideOndex (int)\n     *  - the desired slide index",
        "* ===================================================================================\n     * = PUBLIC FUNCTIONS\n     * ===================================================================================",
        "* Performs slide transition to the specified slide\n     *\n     * @param slideIndex (int)\n     *  - the destination slide's index (zero-based)\n     *\n     * @param direction (string)\n     *  - INTERNAL USE ONLY - the direction of travel (\"prev\" / \"next\")",
        "* Transitions to the next slide in the show",
        "* Transitions to the prev slide in the show",
        "* Starts the auto show\n     *\n     * @param preventControlUpdate (boolean)\n     *  - if true, auto controls state will not be updated",
        "* Stops the auto show\n     *\n     * @param preventControlUpdate (boolean)\n     *  - if true, auto controls state will not be updated",
        "* Returns current slide index (zero-based)",
        "* Returns current slide element",
        "* Returns a slide element\n     * @param index (int)\n     *  - The index (zero-based) of the element you want returned.",
        "* Returns number of slides in show",
        "* Return slider.working variable",
        "* Update all dynamic slider elements",
        "* Destroy the current instance of the slider (revert everything back to original state)",
        "* Reload the slider (revert all DOM changes, and re-initialize)"
    ],
    "functions": [],
    "classes": []
}