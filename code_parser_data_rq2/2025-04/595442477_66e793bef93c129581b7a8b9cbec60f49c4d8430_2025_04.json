{
    "identifiers": [
        "os",
        "pytest",
        "assertical",
        "fixtures",
        "environment",
        "delete_environment_variable",
        "pydantic",
        "PostgresDsn",
        "pydantic_core",
        "ValidationError",
        "envoy",
        "settings",
        "CommonSettings",
        "generate_middleware_kwargs",
        "delete_environment_variable",
        "preserved_environment",
        "remove_mandatory_settings",
        "pytest",
        "raises",
        "ValidationError",
        "CommonSettings",
        "_env_file",
        "preserved_environment",
        "remove_mandatory_settings",
        "os",
        "environ",
        "TEST_DATABASE_URL",
        "CommonSettings",
        "settings",
        "enable_notifications",
        "settings",
        "sqlalchemy_engine_arguments",
        "settings",
        "database_url",
        "PostgresDsn",
        "TEST_DATABASE_URL",
        "isinstance",
        "settings",
        "db_middleware_kwargs",
        "preserved_environment",
        "remove_mandatory_settings",
        "os",
        "environ",
        "TEST_DATABASE_URL",
        "os",
        "environ",
        "CommonSettings",
        "settings",
        "sqlalchemy_engine_arguments",
        "generate_middleware_kwargs",
        "TEST_DATABASE_URL",
        "isinstance",
        "kwargs_defaults",
        "kwargs_defaults",
        "TEST_DATABASE_URL",
        "kwargs_defaults",
        "kwargs_defaults",
        "generate_middleware_kwargs",
        "TEST_DATABASE_URL",
        "isinstance",
        "kwargs_values",
        "kwargs_values",
        "TEST_DATABASE_URL",
        "kwargs_values",
        "kwargs_values"
    ],
    "literals": [
        "\"postgresql+asyncpg://u:p@localhost:1122/mydb\"",
        "\"DATABASE_URL\"",
        "\"DATABASE_URL\"",
        "\"DATABASE_URL\"",
        "\"SQLALCHEMY_ENGINE_ARGUMENTS\"",
        "'{\"foo\": \"bar\", \"num\": 123, \"bool\": true, \"float\": 1.23}'",
        "\"foo\"",
        "\"bar\"",
        "\"num\"",
        "\"bool\"",
        "\"float\"",
        "\"db_url\"",
        "\"commit_on_exit\"",
        "\"engine_args\"",
        "\"foo\"",
        "\"bar\"",
        "\"num\"",
        "\"bool\"",
        "\"resource_id\"",
        "\"db_url\"",
        "\"commit_on_exit\"",
        "\"engine_args\"",
        "\"pool_recycle\"",
        "\"foo\"",
        "\"bar\"",
        "\"num\"",
        "\"bool\""
    ],
    "variables": [
        "TEST_DATABASE_URL",
        "settings",
        "settings",
        "kwargs_defaults",
        "kwargs_values"
    ],
    "comments": [
        "Should validate as a valid postgresql DSN",
        "Reset config",
        "Reset config"
    ],
    "docstrings": [
        "\"\"\"Do we get errors if the mandatory setting keys are missing\"\"\"",
        "\"\"\"Don't set any config values - just let it load with defaults and no errors\"\"\"",
        "\"\"\"Don't set any config values - just let it load with defaults and no errors\"\"\""
    ],
    "functions": [
        "remove_mandatory_settings",
        "test_settings_missing_mandatory",
        "test_settings_defaults",
        "test_settings_engine_args",
        "test_generate_middleware_kwargs"
    ],
    "classes": []
}