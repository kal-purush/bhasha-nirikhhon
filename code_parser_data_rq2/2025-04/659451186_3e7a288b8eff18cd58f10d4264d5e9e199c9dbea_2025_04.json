{
    "identifiers": [
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "scipy",
        "interpolate",
        "interp1d",
        "scipy",
        "linalg",
        "capacity_soils",
        "rock_profile",
        "capacity_pycurves",
        "py_Lovera",
        "capacity_plots",
        "plot_pile",
        "profile",
        "soil_type",
        "L",
        "D",
        "zlug",
        "H",
        "V",
        "plot",
        "D",
        "np",
        "pi",
        "D",
        "D",
        "t",
        "E",
        "I",
        "L",
        "n",
        "n",
        "Len",
        "Dia",
        "tw",
        "rho",
        "np",
        "pi",
        "Dia",
        "Dia",
        "tw",
        "Len",
        "rho",
        "Wp",
        "np",
        "ones",
        "N",
        "D",
        "np",
        "zeros",
        "N",
        "np",
        "zeros",
        "N",
        "rock_profile",
        "profile",
        "i",
        "i",
        "h",
        "py_funs",
        "append",
        "i",
        "n",
        "i",
        "h",
        "z",
        "i",
        "z0",
        "py_funs",
        "append",
        "y_val",
        "np",
        "zeros_like",
        "y_val",
        "DQ",
        "append",
        "py_funs",
        "append",
        "py_Lovera",
        "z",
        "i",
        "D",
        "f_UCS",
        "f_Em",
        "zlug",
        "z0",
        "plot",
        "f_UCS",
        "z",
        "i",
        "f_Em",
        "z",
        "i",
        "nhuc",
        "Em",
        "UCS",
        "nhu",
        "delta_r",
        "D",
        "SCR",
        "alpha",
        "UCS",
        "np",
        "pi",
        "D",
        "fs",
        "z",
        "i",
        "DQ",
        "append",
        "Dq",
        "PileWeight",
        "L",
        "D",
        "t",
        "rhows",
        "DQ",
        "py_funs",
        "i",
        "y",
        "i",
        "y",
        "i",
        "i",
        "n",
        "n",
        "i",
        "h",
        "py_funs",
        "append",
        "j",
        "iterations",
        "fd_solver",
        "n",
        "N",
        "h",
        "EI",
        "V",
        "H",
        "zlug",
        "z0",
        "k_secant",
        "plot",
        "plt",
        "plot",
        "y",
        "loc",
        "k_secant",
        "loc",
        "y",
        "loc",
        "i",
        "n",
        "py_funs",
        "i",
        "y",
        "i",
        "y",
        "i",
        "plot",
        "np",
        "linspace",
        "D",
        "D",
        "plt",
        "plot",
        "y1",
        "py_funs",
        "loc",
        "y1",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "grid",
        "plt",
        "subplots",
        "figsize",
        "np",
        "zeros_like",
        "z",
        "ax",
        "plot",
        "y0",
        "z",
        "label",
        "ax",
        "plot",
        "y",
        "z",
        "label",
        "ax",
        "plot",
        "zlug",
        "label",
        "zlug",
        "ax",
        "axhline",
        "z0",
        "color",
        "linestyle",
        "label",
        "z0",
        "ax",
        "set_xlabel",
        "ax",
        "set_ylabel",
        "ax",
        "set_xlim",
        "D",
        "D",
        "ax",
        "set_ylim",
        "L",
        "ax",
        "grid",
        "ls",
        "ax",
        "legend",
        "y",
        "np",
        "rad2deg",
        "y",
        "y",
        "h",
        "Vmax",
        "PileWeight",
        "L",
        "D",
        "t",
        "rhows",
        "rhow",
        "y",
        "z",
        "resultsDandG",
        "n",
        "N",
        "h",
        "EI",
        "H",
        "V",
        "zlug",
        "z0",
        "k_secant",
        "np",
        "zeros",
        "N",
        "N",
        "i",
        "n",
        "i",
        "V",
        "h",
        "EI",
        "i",
        "V",
        "h",
        "EI",
        "k_secant",
        "i",
        "h",
        "EI",
        "i",
        "V",
        "h",
        "EI",
        "i",
        "n",
        "n",
        "n",
        "n",
        "n",
        "V",
        "h",
        "EI",
        "n",
        "n",
        "V",
        "h",
        "EI",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "V",
        "h",
        "EI",
        "n",
        "n",
        "V",
        "h",
        "EI",
        "n",
        "np",
        "zeros",
        "N",
        "zlug",
        "h",
        "H",
        "h",
        "linalg",
        "solve",
        "EI",
        "X",
        "q",
        "y",
        "np",
        "array",
        "getCapacityDandG",
        "profile_rock",
        "L",
        "D",
        "zlug",
        "H",
        "V",
        "plot",
        "plot_pile",
        "profile_rock",
        "y",
        "z",
        "D",
        "L",
        "profile_rock",
        "zlug"
    ],
    "literals": [
        "'y (m)'",
        "'p (N/m)'",
        "'k'",
        "'Original pile axis'",
        "'r'",
        "'Deflected shape'",
        "'ko'",
        "f'Padeye (zlug = {zlug:.2f} m)'",
        "'blue'",
        "'--'",
        "f'Mudline (z0 = {z0:.2f} m)'",
        "'Lateral displacement (m)'",
        "'Depth (m)'",
        "'--'",
        "'Lateral displacement'",
        "'Rotational displacement'",
        "'Vertical max.'",
        "'Weight pile'",
        "'__main__'",
        "'rock'",
        "'rock'"
    ],
    "variables": [
        "n",
        "iterations",
        "loc",
        "nhuc",
        "nhu",
        "delta_r",
        "t",
        "E",
        "rhows",
        "rhow",
        "I",
        "EI",
        "h",
        "N",
        "Wp",
        "y",
        "z",
        "k_secant",
        "py_funs",
        "DQ",
        "z0",
        "f_UCS",
        "f_Em",
        "z",
        "i",
        "k_secant",
        "i",
        "z",
        "i",
        "k_secant",
        "i",
        "UCS",
        "Em",
        "SCR",
        "alpha",
        "fs",
        "Dq",
        "Vmax",
        "k_secant",
        "i",
        "z",
        "i",
        "k_secant",
        "i",
        "y",
        "k_secant",
        "i",
        "y1",
        "fig",
        "ax",
        "y0",
        "resultsDandG",
        "X",
        "X",
        "i",
        "i",
        "X",
        "i",
        "X",
        "i",
        "X",
        "i",
        "X",
        "i",
        "X",
        "X",
        "X",
        "X",
        "X",
        "X",
        "X",
        "X",
        "X",
        "X",
        "X",
        "X",
        "X",
        "X",
        "X",
        "X",
        "q",
        "zlug_index",
        "q",
        "zlug_index",
        "y",
        "profile_rock",
        "D",
        "L",
        "zlug",
        "y",
        "z",
        "results"
    ],
    "comments": [
        "Resistance factor (-)",
        "Mean roughness height (m)",
        "Pile wall thickness (m), API RP2A-WSD",
        "Elastic modulus of pile material (Pa)",
        "Submerged steel specific weight (N/m3)",
        "Water specific weight (N/m3)",
        "Pile geometry",
        "Element size",
        "(n+1) Real + 4 Imaginary nodes",
        "Dry and wet mass of the pile",
        "Array for displacements at nodes, including imaginary nodes.",
        "An initial value of 0.01D was arbitrarily chosen",
        "Initialize and assemble array/list of p-y curves at each real node",
        "Top two imaginary nodes",
        "Real nodes",
        "No p-y curve above mudline",
        "Bottom two imaginary nodes",
        "if j == 0: print 'FD Solver started!'",
        "Plot original vertical pile",
        "Plot deflected shape",
        "Padeye marker",
        "Mudline marker",
        "Downward is positive z",
        "Initialize and assemble matrix",
        "(n+1) finite difference equations for (n+1) real nodes",
        "Curvature at pile head",
        "Shear at pile head",
        "Curvature at pile tip",
        "Shear at pile tip",
        "Initialize vector q",
        "Always apply shear",
        "Index of the node where the horizontal load is applied (padeye)",
        "Solve for displacement",
        "Diameter (m)",
        "Length (m)",
        "Padeye elevation (m)"
    ],
    "docstrings": [
        "'''Models a laterally loaded pile using the p-y method. The solution for\n    lateral displacements is obtained by solving the 4th order ODE, \n    EI*d4y/dz4 - V*d2y/dz2 + ky = 0 using the finite difference method.\n    EI*d4y/dz4 - V*d2y/dz2 + K*z*dy/dz + ky = 0 using the finite difference method.\n\n    Assumes that EI remains constant with respect to curvature i.e. pile\n    material remains in the elastic region.\n\n    Parameters\n    ----------\n    profile : array\n        Rock profile as a 2D array: (z (m), UCS (MPa), Em (MPa))\n    soil_type : string\n        Select soil condition, 'rock'\n    L : float \n        Pile length (m)\n    D : float \n        Pile diameter (m)\n    zlug : float\n        Load eccentricity above the mudline or depth to mudline relative to the pile head (m)\n    H : float       \n        Horizontal load at pile lug elevation (N)\n    V : float          \n        Vertical load at pile lug elevation (N)\n    plot : bool\n        Plot the p-y curve and the deflection pile condition if True\n\n    Returns\n    -------\n    y : array\n        Lateral displacement at each node (n+1 real + 4 imaginary)\n    z : array\n        Node location along pile (m)\n    resultsDandG : dict\n        Dictionary with lateral, rotational, vertical and pile weight results\n    '''",
        "'''Solves the finite difference equations from 'py_analysis_1'. This function should be run iteratively for\n    non-linear p-y curves by updating 'k_secant' using 'y'. A single iteration is sufficient if the p-y curves\n    are linear.\n\n    Parameters\n    ----------\n    n : int\n        Number of elements (-)\n    N : int\n        Total number of nodes (-)\n    h : float\n        Element size (m)\n    EI : float\n        Flexural rigidity of the pile (Nm²)\n    H : float\n        Horizontal load at padeye (N)\n    V : float\n        Vertical load at padeye (N)\n    zlug : float\n        Padeye depth from pile head (m)\n    z0 : float\n        Mudline elevation from pile head (m)\n    k_secant : array\n        Secant stiffness at each node\n\n    Returns\n    -------\n    y : array\n        Lateral displacement at each node (n+1 real + 4 imaginary)\n    '''"
    ],
    "functions": [
        "getCapacityDandG",
        "PileWeight",
        "fd_solver"
    ],
    "classes": []
}