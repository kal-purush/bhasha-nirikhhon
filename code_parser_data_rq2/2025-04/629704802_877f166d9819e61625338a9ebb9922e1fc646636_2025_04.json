{
    "identifiers": [
        "extractInputs",
        "CheckConclusion",
        "CheckStatus",
        "CommitStatusState",
        "PER_PAGE_MAX",
        "Label",
        "extractInputs",
        "github",
        "context",
        "core",
        "context",
        "context",
        "context",
        "setStatusImpl",
        "github",
        "github",
        "owner",
        "repo",
        "issue_number",
        "PER_PAGE_MAX",
        "labels",
        "label",
        "label",
        "core",
        "labelNames",
        "labelNames",
        "Label",
        "Label",
        "core",
        "description",
        "CheckConclusion",
        "core",
        "state",
        "github",
        "head_sha",
        "statusName",
        "github",
        "github",
        "PER_PAGE_MAX",
        "core",
        "workflowRuns",
        "wf",
        "core",
        "wf",
        "wf",
        "wf",
        "workflowRuns",
        "wf",
        "wf",
        "wfName",
        "a",
        "b",
        "b",
        "a",
        "avocadoCodeRuns",
        "run",
        "target_url",
        "run",
        "run",
        "CheckConclusion",
        "github",
        "github",
        "run",
        "PER_PAGE_MAX",
        "jobs",
        "job",
        "job",
        "CheckConclusion",
        "failedJobs",
        "failedJob",
        "target_url",
        "failedJob",
        "issue_number",
        "run",
        "CheckStatus",
        "run",
        "CheckConclusion",
        "CheckConclusion",
        "CheckConclusion",
        "github",
        "head_sha",
        "statusName",
        "github",
        "head_sha",
        "CommitStatusState",
        "statusName"
    ],
    "literals": [
        "\"./context.js\"",
        "\"./github.js\"",
        "\"./label.js\"",
        "https://github.com/${context.repo.owner}/${context.repo.repo}",
        "/actions/runs/${context.runId}",
        "\"[TEST IGNORE] Swagger Avocado\"",
        "Labels: ${labelNames}",
        "Found label '${Label.APPROVED_AVOCADO}'",
        "Setting status to '${state}'",
        "\"pull_request\"",
        "\"Workflow Runs:\"",
        "- ${wf.name}: ${wf.conclusion || wf.status}",
        "\"[TEST-IGNORE] Swagger Avocado - Analyze Code\"",
        "${failedJob.html_url}?pr=${issue_number}"
    ],
    "variables": [
        "target_url",
        "statusName",
        "labels",
        "labelNames",
        "description",
        "state",
        "workflowRuns",
        "wfName",
        "avocadoCodeRuns",
        "run",
        "jobs",
        "failedJobs",
        "failedJob",
        "state"
    ],
    "comments": [
        "@ts-check",
        "TODO: Add tests",
        "v8 ignore start",
        "Default target is this run itself",
        "v8 ignore stop",
        "TODO: Try to extract labels from context (when available) to avoid unnecessary API call",
        "Sort by \"updated_at\" descending",
        "Sorted by \"updated_at\" descending, so most recent run is at index 0.",
        "If \"avocadoCodeRuns.length === 0\", run will be \"undefined\", which the following",
        "code must handle.",
        "Run was not found (not started), or not completed"
    ],
    "docstrings": [
        "* @param {import('github-script').AsyncFunctionArguments} AsyncFunctionArguments\n * @returns {Promise<void>}",
        "* @param {Object} params\n * @param {string} params.owner\n * @param {string} params.repo\n * @param {string} params.head_sha\n * @param {number} params.issue_number\n * @param {string} params.target_url\n * @param {(import(\"@octokit/core\").Octokit & import(\"@octokit/plugin-rest-endpoint-methods/dist-types/types.js\").Api & { paginate: import(\"@octokit/plugin-paginate-rest\").PaginateInterface; })} params.github\n * @param {typeof import(\"@actions/core\")} params.core\n * @returns {Promise<void>}",
        "* Update target to the \"Analyze Code\" run, which contains the meaningful output.\n     *\n     * @example https://github.com/mikeharder/azure-rest-api-specs/actions/runs/14509047569",
        "* Update target to point directly to the first failed job\n       *\n       * @example https://github.com/mikeharder/azure-rest-api-specs/actions/runs/14509047569/job/40703679014?pr=18"
    ],
    "functions": [
        "setStatus",
        "setStatusImpl"
    ],
    "classes": []
}