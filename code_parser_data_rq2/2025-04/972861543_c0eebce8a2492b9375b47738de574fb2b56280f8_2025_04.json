{
    "identifiers": [
        "sqlalchemy",
        "orm",
        "Session",
        "models",
        "User",
        "db",
        "Session",
        "name",
        "email",
        "User",
        "User",
        "name",
        "name",
        "email",
        "email",
        "db",
        "add",
        "db_user",
        "db",
        "commit",
        "db",
        "refresh",
        "db_user",
        "db_user",
        "db",
        "Session",
        "user_id",
        "User",
        "db",
        "query",
        "User",
        "User",
        "id",
        "user_id",
        "first",
        "db",
        "Session",
        "skip",
        "limit",
        "User",
        "db",
        "query",
        "User",
        "offset",
        "skip",
        "limit",
        "limit",
        "all",
        "db",
        "Session",
        "user_id",
        "name",
        "email",
        "User",
        "db",
        "query",
        "User",
        "User",
        "id",
        "user_id",
        "first",
        "db_user",
        "name",
        "name",
        "email",
        "email",
        "db",
        "commit",
        "db",
        "refresh",
        "db_user",
        "db_user",
        "db",
        "Session",
        "user_id",
        "db",
        "query",
        "User",
        "User",
        "id",
        "user_id",
        "first",
        "db_user",
        "db",
        "db_user",
        "db",
        "commit"
    ],
    "literals": [],
    "variables": [
        "db_user",
        "db_user",
        "db_user",
        "name",
        "db_user",
        "email",
        "db_user"
    ],
    "comments": [
        "insert new record into the database",
        "get single record from the database by id",
        "get all records from the database",
        "update user record in the database",
        "delete record from the database"
    ],
    "docstrings": [],
    "functions": [
        "create_user",
        "get_user",
        "get_users",
        "update_user",
        "delete_user"
    ],
    "classes": []
}