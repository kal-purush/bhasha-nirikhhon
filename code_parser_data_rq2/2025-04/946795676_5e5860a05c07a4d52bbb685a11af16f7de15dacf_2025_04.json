{
    "identifiers": [
        "r",
        "r",
        "mov",
        "sent",
        "x",
        "y",
        "z",
        "falta",
        "espaco",
        "visitados",
        "passo",
        "mov",
        "sent",
        "passo",
        "passo",
        "getRaio",
        "passo",
        "falta",
        "passo",
        "espaco",
        "identifica_colisao",
        "x",
        "passo",
        "y",
        "z",
        "passo",
        "passo",
        "sent",
        "passo",
        "passo",
        "getRaio",
        "passo",
        "falta",
        "passo",
        "espaco",
        "identifica_colisao",
        "x",
        "passo",
        "y",
        "z",
        "passo",
        "passo",
        "mov",
        "sent",
        "passo",
        "passo",
        "getRaio",
        "passo",
        "falta",
        "passo",
        "espaco",
        "identifica_colisao",
        "x",
        "y",
        "passo",
        "z",
        "passo",
        "passo",
        "sent",
        "passo",
        "passo",
        "getRaio",
        "passo",
        "falta",
        "passo",
        "espaco",
        "identifica_colisao",
        "x",
        "y",
        "passo",
        "z",
        "passo",
        "passo",
        "mov",
        "sent",
        "passo",
        "passo",
        "getRaio",
        "passo",
        "falta",
        "passo",
        "espaco",
        "identifica_colisao",
        "x",
        "y",
        "z",
        "passo",
        "passo",
        "passo",
        "sent",
        "passo",
        "passo",
        "getRaio",
        "passo",
        "falta",
        "passo",
        "espaco",
        "identifica_colisao",
        "x",
        "y",
        "z",
        "passo",
        "passo",
        "passo"
    ],
    "literals": [],
    "variables": [
        "passo"
    ],
    "comments": [
        "retorna a maior distancia que o robo pode avancar limitado ao raio do sensor",
        "passo Ã© a distancia (dekta) que o Robo ira se mover em uma direcao no seu percurso",
        "\"mover em x\"",
        "mover no sentido positivo de x",
        "posicao invalida",
        "retorna o quanto consegue avancar naquela direcao",
        "mover no sentido negativo de x",
        "mover em y",
        "sentido positivo; delta y > 0",
        "sentido negativo; delta y < 0",
        "mover em z",
        "sentido positivo de z",
        "sentido negativo de z"
    ],
    "docstrings": [],
    "functions": [
        "SensorMovimento",
        "consegueAvancar"
    ],
    "classes": [
        "SensorMovimento"
    ]
}