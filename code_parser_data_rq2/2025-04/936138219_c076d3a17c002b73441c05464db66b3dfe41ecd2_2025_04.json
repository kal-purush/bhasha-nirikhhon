{
    "identifiers": [
        "http",
        "https",
        "dotenv",
        "dotenv",
        "http",
        "req",
        "res",
        "req",
        "reqUrl",
        "segments",
        "path",
        "process",
        "routeSegment",
        "route",
        "res",
        "res",
        "URL",
        "route",
        "segments",
        "segments",
        "searchParams",
        "searchParams",
        "targetUrl",
        "targetUrl",
        "targetUrl",
        "targetUrl",
        "targetUrl",
        "isHttps",
        "req",
        "req",
        "targetUrl",
        "isHttps",
        "req",
        "isHttps",
        "https",
        "http",
        "request",
        "options",
        "proxyRes",
        "res",
        "proxyRes",
        "proxyRes",
        "proxyRes",
        "res",
        "proxyReq",
        "err",
        "err",
        "res",
        "res",
        "req",
        "req",
        "chunk",
        "body",
        "chunk",
        "req",
        "req",
        "proxyReq",
        "Buffer",
        "body",
        "proxyReq",
        "body",
        "proxyReq",
        "req",
        "err",
        "err",
        "proxyReq",
        "proxyReq",
        "process",
        "server",
        "BFF_PORT",
        "BFF_PORT",
        "server",
        "err",
        "err"
    ],
    "literals": [
        "'http'",
        "'https'",
        "'dotenv'",
        "'./.env'",
        "''",
        "'&'",
        "''",
        "'/'",
        "${routeSegment.toUpperCase()}_API_URL",
        "'Cannot process request'",
        "/${segments.join('/')}",
        "'/'",
        "''",
        "?${searchParams}",
        "''",
        "'https:'",
        "'X-Forwarded-Proto'",
        "'https'",
        "'X-Forwarded-Port'",
        "'443'",
        "'X-Forwarded-For'",
        "'error'",
        "'Proxy Request Error:'",
        "'Proxy Error'",
        "'POST'",
        "'PUT'",
        "'PATCH'",
        "''",
        "''",
        "'data'",
        "'end'",
        "'content-length'",
        "'Content-Length'",
        "'error'",
        "'Request Error:'",
        "BFF server running on port ${BFF_PORT}",
        "'error'",
        "'Server error:'"
    ],
    "variables": [
        "server",
        "reqUrl",
        "path",
        "searchParams",
        "routeSegment",
        "route",
        "targetUrl",
        "isHttps",
        "options",
        "request",
        "proxyReq",
        "body",
        "BFF_PORT"
    ],
    "comments": [
        "Add recommended headers for AWS",
        "Create the proxy request",
        "Set response headers",
        "Pipe the response from target to client",
        "Handle errors",
        "Handle request body for POST, PUT, PATCH methods",
        "Add Content-Length header if not present",
        "Handle request errors",
        "For GET, DELETE, etc., just end the request",
        "Start the proxy server",
        "Global error handler"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}