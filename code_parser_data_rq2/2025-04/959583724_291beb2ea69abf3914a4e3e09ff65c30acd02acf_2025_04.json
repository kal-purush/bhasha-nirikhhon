{
    "identifiers": [
        "calendario_data",
        "birth_date",
        "birth_date",
        "strftime",
        "nombre_veintena",
        "dias_lista",
        "calendario_data",
        "items",
        "dia_info",
        "dias_lista",
        "dia_info",
        "fecha_str",
        "dia_info",
        "dia_info",
        "nombre_veintena",
        "calendario_nemontemi_data",
        "tlalpilli",
        "birth_date",
        "birth_date",
        "strftime",
        "calendario_nemontemi_data",
        "get",
        "tlalpilli",
        "nemontemi_dict",
        "nemontemi_dict",
        "tlalpilli",
        "dia_info",
        "dias_lista",
        "dia_info",
        "fecha_str",
        "dia_info",
        "dia_info"
    ],
    "literals": [
        "\"%d/%m\"",
        "\"fecha\"",
        "\"numero_tonal\"",
        "\"nombre\"",
        "\"%d/%m\"",
        "\"NEMONTEMI\"",
        "\"fecha\"",
        "\"numero_tonal\"",
        "\"nombre\"",
        "\"NEMONTEMI\""
    ],
    "variables": [
        "fecha_str",
        "fecha_str",
        "nemontemi_dict",
        "dias_lista"
    ],
    "comments": [
        "Recorremos todas las veintenas en el JSON normal",
        "Solo aplicable para 7/03 al 11/03, pero esa validación la hacemos desde main.py",
        "Formateamos la fecha a 'DD/MM'",
        "La sección \"NEMONTEMI\" es la que contiene las claves \"Acatl\", \"Calli\", \"Tecpatl\", \"Tochtli\"",
        "Checamos si Tlalpilli existe en ese dict",
        "Si el Tlalpilli no está en la lista, regresamos None",
        "Revisar la lista de días para ese Tlalpilli"
    ],
    "docstrings": [
        "\"\"\"\n    Dada una fecha de nacimiento (birth_date), retorna (numero_tonal, nombre_signo, nombre_veintena)\n    buscándolo en calendario_xiuhpohualli.json (las 18 veintenas).\n    Retorna None si no encuentra.\n    \"\"\"",
        "\"\"\"\n    Busca el día Nemontemi según el Tlalpilli (Acatl, Tochtli, Tecpatl o Calli),\n    dentro de 'xiuhpohualli_nemontemi.json'.\n\n    Retorna (numero_tonal, nombre_signo, \"NEMONTEMI\") si encuentra,\n    o None si no hay coincidencia.\n    \"\"\""
    ],
    "functions": [
        "find_xiuhpohualli_day",
        "find_nemontemi_day"
    ],
    "classes": []
}