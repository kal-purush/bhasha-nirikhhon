{
    "identifiers": [
        "logging",
        "datetime",
        "datetime",
        "typing",
        "Any",
        "homeassistant",
        "components",
        "number",
        "NumberMode",
        "homeassistant",
        "core",
        "HomeAssistant",
        "custom_components",
        "zendure_ha",
        "binary_sensor",
        "ZendureBinarySensor",
        "custom_components",
        "zendure_ha",
        "number",
        "ZendureNumber",
        "custom_components",
        "zendure_ha",
        "sensor",
        "ZendureSensor",
        "custom_components",
        "zendure_ha",
        "ZendureSwitch",
        "custom_components",
        "zendure_ha",
        "zenduredevice",
        "ManagerState",
        "ZendureDevice",
        "ZendureDeviceDefinition",
        "logging",
        "getLogger",
        "ZendureDevice",
        "hass",
        "HomeAssistant",
        "h_id",
        "definition",
        "ZendureDeviceDefinition",
        "hass",
        "h_id",
        "definition",
        "ZendureNumber",
        "sensorsCreate",
        "binary",
        "binary",
        "binary",
        "binary",
        "binary",
        "ZendureBinarySensor",
        "addBinarySensors",
        "binairies",
        "number",
        "NumberMode",
        "SLIDER",
        "number",
        "NumberMode",
        "SLIDER",
        "number",
        "NumberMode",
        "SLIDER",
        "number",
        "NumberMode",
        "SLIDER",
        "ZendureNumber",
        "addNumbers",
        "numbers",
        "ZendureSwitch",
        "addSwitches",
        "switches",
        "sensor",
        "sensor",
        "sensor",
        "sensor",
        "sensor",
        "sensor",
        "sensor",
        "sensor",
        "sensor",
        "sensor",
        "sensor",
        "sensor",
        "sensor",
        "sensor",
        "sensor",
        "sensor",
        "sensor",
        "ZendureSensor",
        "addSensors",
        "sensors",
        "key",
        "Any",
        "value",
        "Any",
        "updateProperty",
        "key",
        "value",
        "key",
        "value",
        "numbers",
        "update_range",
        "value",
        "state",
        "ManagerState",
        "_LOGGER",
        "info",
        "name",
        "state",
        "ManagerState",
        "IDLE",
        "function_invoke",
        "state",
        "ManagerState",
        "IDLE",
        "autoModel",
        "hid",
        "_messageid",
        "datetime",
        "now",
        "timestamp",
        "power",
        "inprogram",
        "abs",
        "power",
        "powerAct",
        "delta",
        "_LOGGER",
        "info",
        "name",
        "power",
        "capacity",
        "_LOGGER",
        "info",
        "name",
        "power",
        "capacity",
        "function_invoke",
        "inprogram",
        "power",
        "power",
        "power",
        "delta",
        "delta",
        "max",
        "power",
        "power",
        "hid",
        "_messageid",
        "datetime",
        "now",
        "timestamp"
    ],
    "literals": [
        "\"SolarFlow 2400 AC\"",
        "\"masterSwitch\"",
        "\"switch\"",
        "\"buzzerSwitch\"",
        "\"switch\"",
        "\"wifiState\"",
        "\"switch\"",
        "\"heatState\"",
        "\"switch\"",
        "\"reverseState\"",
        "\"switch\"",
        "\"inputLimit\"",
        "\"W\"",
        "\"power\"",
        "\"outputLimit\"",
        "\"W\"",
        "\"power\"",
        "\"socSet\"",
        "\"{{ value | int / 10 }}\"",
        "\"%\"",
        "\"minSoc\"",
        "\"{{ value | int / 10 }}\"",
        "\"%\"",
        "\"lampSwitch\"",
        "\"switch\"",
        "\"hubState\"",
        "\"solarInputPower\"",
        "\"W\"",
        "\"power\"",
        "\"measurement\"",
        "\"batVolt\"",
        "\"V\"",
        "\"voltage\"",
        "\"packInputPower\"",
        "\"W\"",
        "\"power\"",
        "\"measurement\"",
        "\"outputPackPower\"",
        "\"W\"",
        "\"power\"",
        "\"measurement\"",
        "\"outputHomePower\"",
        "\"W\"",
        "\"power\"",
        "\"measurement\"",
        "\"remainOutTime\"",
        "\"{{ (value / 60) }}\"",
        "\"h\"",
        "\"duration\"",
        "\"remainInputTime\"",
        "\"{{ (value / 60) }}\"",
        "\"h\"",
        "\"duration\"",
        "\"packNum\"",
        "\"electricLevel\"",
        "\"%\"",
        "\"battery\"",
        "\"energyPower\"",
        "\"W\"",
        "\"inverseMaxPower\"",
        "\"W\"",
        "\"solarPower1\"",
        "\"W\"",
        "\"power\"",
        "\"measurement\"",
        "\"solarPower2\"",
        "\"W\"",
        "\"power\"",
        "\"measurement\"",
        "\"gridInputPower\"",
        "\"W\"",
        "\"power\"",
        "\"measurement\"",
        "\"pass\"",
        "\"strength\"",
        "\"inverseMaxPower\"",
        "f\"Hyper {self.name} update setpoint\"",
        "\"arguments\"",
        "\"autoModelProgram\"",
        "\"autoModelValue\"",
        "\"chargingType\"",
        "\"chargingPower\"",
        "\"outPower\"",
        "\"msgType\"",
        "\"autoModel\"",
        "\"deviceKey\"",
        "\"function\"",
        "\"deviceAutomation\"",
        "\"messageId\"",
        "\"timestamp\"",
        "f\"Update power {self.name} => no action [power {power} capacity {self.capacity}]\"",
        "f\"Update power {self.name} => {power} capacity {self.capacity}\"",
        "\"arguments\"",
        "\"autoModelProgram\"",
        "\"autoModelValue\"",
        "\"chargingType\"",
        "\"chargingPower\"",
        "\"freq\"",
        "\"outPower\"",
        "\"msgType\"",
        "\"autoModel\"",
        "\"deviceKey\"",
        "\"function\"",
        "\"deviceAutomation\"",
        "\"messageId\"",
        "\"timestamp\""
    ],
    "variables": [
        "_LOGGER",
        "powerMin",
        "powerMax",
        "numbers",
        "binairies",
        "numbers",
        "switches",
        "sensors",
        "powerMax",
        "autoModel",
        "delta"
    ],
    "comments": [
        "Call the base class updateProperty method"
    ],
    "docstrings": [
        "\"\"\"Module for the Hyper2000 device integration in Home Assistant.\"\"\"",
        "\"\"\"Initialise AIO2400.\"\"\"",
        "\"\"\"Update the state of the manager.\"\"\""
    ],
    "functions": [
        "sensorsCreate",
        "updateProperty",
        "powerState",
        "powerSet"
    ],
    "classes": [
        "SolarFlow2400AC"
    ]
}