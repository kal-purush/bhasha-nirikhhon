{
    "identifiers": [
        "top",
        "carljung",
        "bill",
        "server",
        "java",
        "io",
        "java",
        "io",
        "OutputStream",
        "java",
        "lang",
        "reflect",
        "Type",
        "java",
        "net",
        "URI",
        "java",
        "net",
        "URISyntaxException",
        "java",
        "security",
        "Principal",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "UUID",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "java",
        "util",
        "logging",
        "Level",
        "java",
        "util",
        "logging",
        "Logger",
        "javax",
        "ws",
        "rs",
        "core",
        "Application",
        "javax",
        "ws",
        "rs",
        "core",
        "GenericType",
        "javax",
        "ws",
        "rs",
        "core",
        "SecurityContext",
        "javax",
        "inject",
        "Inject",
        "javax",
        "inject",
        "Provider",
        "org",
        "glassfish",
        "jersey",
        "grizzly2",
        "httpserver",
        "LocalizationMessages",
        "org",
        "glassfish",
        "jersey",
        "inject",
        "AbstractBinder",
        "org",
        "glassfish",
        "jersey",
        "inject",
        "ReferencingFactory",
        "org",
        "glassfish",
        "jersey",
        "util",
        "ExtendedLogger",
        "org",
        "glassfish",
        "jersey",
        "util",
        "collection",
        "Ref",
        "org",
        "glassfish",
        "jersey",
        "process",
        "RequestScoped",
        "org",
        "glassfish",
        "jersey",
        "server",
        "ApplicationHandler",
        "org",
        "glassfish",
        "jersey",
        "server",
        "ContainerException",
        "org",
        "glassfish",
        "jersey",
        "server",
        "ContainerRequest",
        "org",
        "glassfish",
        "jersey",
        "server",
        "ContainerResponse",
        "org",
        "glassfish",
        "jersey",
        "server",
        "ResourceConfig",
        "org",
        "glassfish",
        "jersey",
        "server",
        "ServerProperties",
        "org",
        "glassfish",
        "jersey",
        "server",
        "ContainerUtils",
        "org",
        "glassfish",
        "jersey",
        "server",
        "spi",
        "Container",
        "org",
        "glassfish",
        "jersey",
        "server",
        "spi",
        "ContainerResponseWriter",
        "org",
        "glassfish",
        "grizzly",
        "CompletionHandler",
        "org",
        "glassfish",
        "grizzly",
        "http",
        "server",
        "HttpHandler",
        "org",
        "glassfish",
        "grizzly",
        "http",
        "server",
        "Request",
        "org",
        "glassfish",
        "grizzly",
        "http",
        "server",
        "Response",
        "org",
        "javalite",
        "activejdbc",
        "DB",
        "top",
        "carljung",
        "bill",
        "db",
        "DBFactory",
        "logger",
        "Logger",
        "getLogger",
        "getName",
        "Level",
        "FINEST",
        "RequestTYPE",
        "getType",
        "ResponseTYPE",
        "getType",
        "configSetStatusOverSendError",
        "configReduceContextPathSlashesEnabled",
        "Inject",
        "referenceFactory",
        "referenceFactory",
        "Inject",
        "referenceFactory",
        "referenceFactory",
        "Override",
        "bindFactory",
        "to",
        "proxy",
        "bindFactory",
        "ReferencingFactory",
        "referenceFactory",
        "to",
        "bindFactory",
        "to",
        "proxy",
        "proxyForSameScope",
        "bindFactory",
        "ReferencingFactory",
        "referenceFactory",
        "to",
        "EMPTY_COMPLETION_HANDLER",
        "Override",
        "Override",
        "throwable",
        "Override",
        "result",
        "Override",
        "result",
        "name",
        "grizzlyResponse",
        "configSetStatusOverSendError",
        "response",
        "configSetStatusOverSendError",
        "grizzlyResponse",
        "response",
        "configSetStatusOverSendError",
        "configSetStatusOverSendError",
        "logger",
        "isDebugLoggable",
        "name",
        "UUID",
        "randomUUID",
        "toString",
        "grizzlyResponse",
        "hashCode",
        "logger",
        "debugLog",
        "name",
        "name",
        "Override",
        "name",
        "Override",
        "grizzlyResponse",
        "isSuspended",
        "grizzlyResponse",
        "resume",
        "logger",
        "debugLog",
        "name",
        "Override",
        "timeOut",
        "timeUnit",
        "timeoutHandler",
        "grizzlyResponse",
        "suspend",
        "timeOut",
        "timeUnit",
        "EMPTY_COMPLETION_HANDLER",
        "Override",
        "response",
        "timeoutHandler",
        "timeoutHandler",
        "onTimeout",
        "ResponseWriter",
        "ex",
        "logger",
        "debugLog",
        "name",
        "Override",
        "timeOut",
        "timeUnit",
        "grizzlyResponse",
        "getSuspendContext",
        "setTimeout",
        "timeOut",
        "timeUnit",
        "logger",
        "debugLog",
        "name",
        "Override",
        "contentLength",
        "context",
        "statusInfo",
        "context",
        "getStatusInfo",
        "statusInfo",
        "getReasonPhrase",
        "grizzlyResponse",
        "setStatus",
        "statusInfo",
        "getStatusCode",
        "grizzlyResponse",
        "setStatus",
        "statusInfo",
        "getStatusCode",
        "statusInfo",
        "getReasonPhrase",
        "grizzlyResponse",
        "setContentLengthLong",
        "contentLength",
        "e",
        "context",
        "getStringHeaders",
        "entrySet",
        "value",
        "e",
        "getValue",
        "grizzlyResponse",
        "addHeader",
        "e",
        "getKey",
        "value",
        "grizzlyResponse",
        "getOutputStream",
        "logger",
        "debugLog",
        "name",
        "Override",
        "SuppressWarnings",
        "error",
        "grizzlyResponse",
        "isCommitted",
        "configSetStatusOverSendError",
        "grizzlyResponse",
        "reset",
        "grizzlyResponse",
        "setStatus",
        "grizzlyResponse",
        "sendError",
        "ex",
        "logger",
        "log",
        "Level",
        "FINER",
        "ex",
        "ex",
        "LocalizationMessages",
        "EXCEPTION_SENDING_ERROR_RESPONSE",
        "ex",
        "logger",
        "debugLog",
        "name",
        "rethrow",
        "error",
        "Override",
        "error",
        "error",
        "error",
        "error",
        "appHandler",
        "application",
        "appHandler",
        "application",
        "cacheConfigSetStatusOverSendError",
        "cacheConfigEnableLeadingContextPathSlashes",
        "application",
        "parentContext",
        "appHandler",
        "application",
        "parentContext",
        "cacheConfigSetStatusOverSendError",
        "cacheConfigEnableLeadingContextPathSlashes",
        "Override",
        "start",
        "appHandler",
        "onStartup",
        "Override",
        "request",
        "response",
        "responseWriter",
        "response",
        "configSetStatusOverSendError",
        "db",
        "logger",
        "debugLog",
        "baseUri",
        "getBaseUri",
        "request",
        "requestUri",
        "getRequestUri",
        "request",
        "requestContext",
        "baseUri",
        "requestUri",
        "request",
        "getMethod",
        "getMethodString",
        "getSecurityContext",
        "request",
        "request",
        "requestContext",
        "setEntityStream",
        "request",
        "getInputStream",
        "headerName",
        "request",
        "getHeaderNames",
        "requestContext",
        "headers",
        "headerName",
        "request",
        "getHeaders",
        "headerName",
        "requestContext",
        "setWriter",
        "responseWriter",
        "requestContext",
        "setRequestScopedInitializer",
        "injectionManager",
        "injectionManager",
        "getInstance",
        "RequestTYPE",
        "request",
        "injectionManager",
        "getInstance",
        "ResponseTYPE",
        "response",
        "db",
        "DBFactory",
        "open",
        "appHandler",
        "handle",
        "requestContext",
        "db",
        "db",
        "close",
        "logger",
        "debugLog",
        "request",
        "request",
        "getContextPath",
        "request",
        "getContextPath",
        "length",
        "Override",
        "appHandler",
        "getConfiguration",
        "Override",
        "reload",
        "appHandler",
        "getConfiguration",
        "Override",
        "configuration",
        "appHandler",
        "onShutdown",
        "appHandler",
        "configuration",
        "appHandler",
        "onReload",
        "appHandler",
        "onStartup",
        "cacheConfigSetStatusOverSendError",
        "cacheConfigEnableLeadingContextPathSlashes",
        "Override",
        "appHandler",
        "Override",
        "destroy",
        "appHandler",
        "onShutdown",
        "appHandler",
        "request",
        "Override",
        "role",
        "Override",
        "request",
        "isSecure",
        "Override",
        "request",
        "getUserPrincipal",
        "Override",
        "request",
        "getAuthType",
        "request",
        "request",
        "getScheme",
        "request",
        "getServerName",
        "request",
        "getServerPort",
        "getBasePath",
        "request",
        "ex",
        "ex",
        "request",
        "contextPath",
        "request",
        "getContextPath",
        "contextPath",
        "contextPath",
        "isEmpty",
        "contextPath",
        "charAt",
        "contextPath",
        "length",
        "contextPath",
        "contextPath",
        "request",
        "serverAddress",
        "getServerAddress",
        "request",
        "uri",
        "configReduceContextPathSlashesEnabled",
        "containsContextPath",
        "request",
        "uri",
        "ContainerUtils",
        "reduceLeadingSlashes",
        "request",
        "getRequestURI",
        "uri",
        "request",
        "getRequestURI",
        "queryString",
        "request",
        "getQueryString",
        "queryString",
        "uri",
        "uri",
        "ContainerUtils",
        "encodeUnsafeCharacters",
        "queryString",
        "serverAddress",
        "uri",
        "ex",
        "ex",
        "request",
        "request",
        "getScheme",
        "request",
        "getServerName",
        "request",
        "getServerPort",
        "toString",
        "configSetStatusOverSendError",
        "ServerProperties",
        "getValue",
        "getConfiguration",
        "getProperties",
        "ServerProperties",
        "RESPONSE_SET_STATUS_OVER_SEND_ERROR",
        "configReduceContextPathSlashesEnabled",
        "ServerProperties",
        "getValue",
        "getConfiguration",
        "getProperties",
        "ServerProperties",
        "REDUCE_CONTEXT_PATH_SLASHES_ENABLED"
    ],
    "literals": [
        "\"ResponseWriter {\"",
        "\"id=\"",
        "\", grizzlyResponse=\"",
        "\"{0} - init\"",
        "\"ResponseWriter\"",
        "\"{0} - commit() called\"",
        "\"{0} - suspend(...) called\"",
        "\"{0} - setTimeout(...) called\"",
        "\"{0} - writeResponseStatusAndHeaders() called\"",
        "\"MagicNumber\"",
        "\"Request failed.\"",
        "\"Request failed.\"",
        "\"Unable to reset failed response.\"",
        "\"Request failed.\"",
        "\"{0} - failure(...) called\"",
        "\"GrizzlyHttpContainer.service(...) started\"",
        "\"GrizzlyHttpContainer.service(...) finished\"",
        "\"/\"",
        "\"/\"",
        "\"?\""
    ],
    "variables": [
        "configSetStatusOverSendError",
        "configReduceContextPathSlashesEnabled",
        "name",
        "grizzlyResponse",
        "configSetStatusOverSendError",
        "appHandler",
        "uri"
    ],
    "comments": [
        "no-op",
        "no-op",
        "no-op",
        "no-op",
        "TODO should we return true in some cases instead?",
        "Returning false relies on the fact that the timeoutHandler will resume the response.",
        "a race condition externally committing the response can still occur..."
    ],
    "docstrings": [
        "* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n *\n * Copyright (c) 2010-2017 Oracle and/or its affiliates. All rights reserved.\n *\n * The contents of this file are subject to the terms of either the GNU\n * General Public License Version 2 only (\"GPL\") or the Common Development\n * and Distribution License(\"CDDL\") (collectively, the \"License\").  You\n * may not use this file except in compliance with the License.  You can\n * obtain a copy of the License at\n * https://oss.oracle.com/licenses/CDDL+GPL-1.1\n * or LICENSE.txt.  See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * When distributing the software, include this License Header Notice in each\n * file and include the License file at LICENSE.txt.\n *\n * GPL Classpath Exception:\n * Oracle designates this particular file as subject to the \"Classpath\"\n * exception as provided by Oracle in the GPL Version 2 section of the License\n * file that accompanied this code.\n *\n * Modifications:\n * If applicable, add the following below the License Header, with the fields\n * enclosed by brackets [] replaced by your own identifying information:\n * \"Portions Copyright [year] [name of copyright owner]\"\n *\n * Contributor(s):\n * If you wish your version of this file to be governed by only the CDDL or\n * only the GPL Version 2, indicate your decision by adding \"[Contributor]\n * elects to include this software in this distribution under the [CDDL or GPL\n * Version 2] license.\"  If you don't indicate a single choice of license, a\n * recipient has the option to distribute your version of this file under\n * either the CDDL, the GPL Version 2 or to extend the choice of license to\n * its licensees as provided above.  However, if you add GPL Version 2 code\n * and therefore, elected the GPL Version 2 license, then the option applies\n * only if the new code is made subject to such option by the copyright\n * holder.",
        "* Jersey {@code Container} implementation based on Grizzly {@link org.glassfish.grizzly.http.server.HttpHandler}.\n *\n * @author Jakub Podlesak (jakub.podlesak at oracle.com)\n * @author Libor Kramolis (libor.kramolis at oracle.com)\n * @author Marek Potociar (marek.potociar at oracle.com)",
        "* Cached value of configuration property\n     * {@link org.glassfish.jersey.server.ServerProperties#RESPONSE_SET_STATUS_OVER_SEND_ERROR}.\n     * If {@code true} method {@link org.glassfish.grizzly.http.server.Response#setStatus} is used over\n     * {@link org.glassfish.grizzly.http.server.Response#sendError}.",
        "* Cached value of configuration property\n     * {@link org.glassfish.jersey.server.ServerProperties#REDUCE_CONTEXT_PATH_SLASHES_ENABLED}.\n     * If {@code true} method {@link org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpContainer#getRequestUri(Request)}\n     * will reduce the of leading context-path slashes to only one.",
        "* Referencing factory for Grizzly request.",
        "* Referencing factory for Grizzly response.",
        "* An internal binder to enable Grizzly HTTP container specific types injection.\n     * <p/>\n     * This binder allows to inject underlying Grizzly HTTP request and response instances.\n     * Note that since Grizzly {@code Request} class is not proxiable as it does not expose an empty constructor,\n     * the injection of Grizzly request instance into singleton JAX-RS and Jersey providers is only supported via\n     * {@link javax.inject.Provider injection provider}.",
        "* Rethrow the original exception as required by JAX-RS, 3.3.4\n         *\n         * @param error throwable to be re-thrown",
        "* Create a new Grizzly HTTP container.\n     *\n     * @param application JAX-RS / Jersey application to be deployed on Grizzly HTTP container.",
        "package",
        "* Create a new Grizzly HTTP container.\n     *\n     * @param application   JAX-RS / Jersey application to be deployed on Grizzly HTTP container.\n     * @param parentContext DI provider specific context with application's registered bindings.",
        "package",
        "* The method reads and caches value of configuration property\n     * {@link org.glassfish.jersey.server.ServerProperties#RESPONSE_SET_STATUS_OVER_SEND_ERROR} for future purposes.",
        "* The method reads and caches value of configuration property\n     * {@link org.glassfish.jersey.server.ServerProperties#REDUCE_CONTEXT_PATH_SLASHES_ENABLED} for future purposes."
    ],
    "functions": [
        "GrizzlyRequestReferencingFactory",
        "GrizzlyResponseReferencingFactory",
        "configure",
        "cancelled",
        "failed",
        "completed",
        "updated",
        "ResponseWriter",
        "toString",
        "commit",
        "suspend",
        "onTimeout",
        "setSuspendTimeout",
        "OutputStream",
        "writeResponseStatusAndHeaders",
        "failure",
        "enableResponseBuffering",
        "rethrow",
        "GrizzlyHttpContainer2",
        "GrizzlyHttpContainer2",
        "start",
        "service",
        "containsContextPath",
        "ResourceConfig",
        "getConfiguration",
        "reload",
        "reload",
        "ApplicationHandler",
        "getApplicationHandler",
        "destroy",
        "SecurityContext",
        "getSecurityContext",
        "isUserInRole",
        "isSecure",
        "Principal",
        "getUserPrincipal",
        "getAuthenticationScheme",
        "URI",
        "getBaseUri",
        "getBasePath",
        "URI",
        "getRequestUri",
        "getServerAddress",
        "cacheConfigSetStatusOverSendError",
        "cacheConfigEnableLeadingContextPathSlashes"
    ],
    "classes": [
        "GrizzlyHttpContainer2",
        "GrizzlyRequestReferencingFactory",
        "GrizzlyResponseReferencingFactory",
        "GrizzlyBinder",
        "ResponseWriter"
    ]
}