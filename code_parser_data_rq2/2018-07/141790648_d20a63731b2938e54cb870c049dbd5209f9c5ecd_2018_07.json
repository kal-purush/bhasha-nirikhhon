{
    "identifiers": [
        "Binary",
        "Document",
        "Model",
        "Schema",
        "Types",
        "getMongoose",
        "getSchema",
        "AssignerOptions",
        "FieldConfigTypes",
        "localStateStore",
        "MongooseIdAssigner",
        "getMongoose",
        "afterAll",
        "mongoose",
        "describe",
        "beforeEach",
        "exampleSchema",
        "getSchema",
        "localStateStore",
        "afterEach",
        "mongoose",
        "describe",
        "it",
        "MongooseIdAssigner",
        "exampleSchema",
        "expect",
        "localStateStore",
        "exampleSchema",
        "expect",
        "plugin",
        "localStateStore",
        "exampleSchema",
        "it",
        "exampleSchema",
        "MongooseIdAssigner",
        "exampleModel",
        "mongoose",
        "exampleSchema",
        "exampleModel",
        "expect",
        "doc",
        "it",
        "MongooseIdAssigner",
        "exampleSchema",
        "expect",
        "plugin",
        "MongooseIdAssigner",
        "exampleModel",
        "mongoose",
        "exampleSchema",
        "exampleModel",
        "expect",
        "doc",
        "it",
        "MongooseIdAssigner",
        "exampleSchema",
        "expect",
        "plugin",
        "MongooseIdAssigner",
        "exampleModel",
        "mongoose",
        "exampleSchema",
        "exampleModel",
        "expect",
        "doc",
        "it",
        "MongooseIdAssigner",
        "exampleSchema",
        "FieldConfigTypes",
        "exampleModel",
        "mongoose",
        "exampleSchema",
        "exampleModel",
        "expect",
        "doc",
        "e",
        "expect",
        "e",
        "it",
        "FieldConfigTypes",
        "exampleSchema",
        "MongooseIdAssigner",
        "options",
        "exampleModel",
        "mongoose",
        "exampleSchema",
        "exampleModel",
        "exampleModel",
        "expect",
        "doc",
        "doc2",
        "expect",
        "expect",
        "doc",
        "doc2",
        "expect",
        "doc",
        "doc2",
        "expect",
        "expect",
        "doc",
        "doc2",
        "expect",
        "doc",
        "doc2",
        "expect",
        "expect",
        "doc",
        "doc2",
        "expect",
        "doc",
        "doc2",
        "expect",
        "expect",
        "doc",
        "doc2",
        "expect",
        "doc",
        "Binary",
        "expect",
        "doc2",
        "Binary",
        "it",
        "FieldConfigTypes",
        "nextId",
        "nextId",
        "FieldConfigTypes",
        "nextId",
        "parseInt",
        "nextId",
        "MongooseIdAssigner",
        "exampleSchema",
        "options",
        "exampleModel",
        "mongoose",
        "exampleSchema",
        "exampleModel",
        "exampleModel",
        "expect",
        "doc1",
        "expect",
        "doc1",
        "expect",
        "doc2",
        "expect",
        "doc2",
        "e",
        "expect",
        "e",
        "it",
        "FieldConfigTypes",
        "FieldConfigTypes",
        "FieldConfigTypes",
        "FieldConfigTypes",
        "MongooseIdAssigner",
        "exampleSchema",
        "options",
        "exampleModel",
        "mongoose",
        "exampleSchema",
        "plugin",
        "exampleModel",
        "expect",
        "state",
        "i",
        "i",
        "promises",
        "exampleModel",
        "promises",
        "i",
        "i",
        "docs",
        "i",
        "docs",
        "i",
        "docs",
        "i",
        "docs",
        "i",
        "docs",
        "i",
        "docs",
        "i",
        "docs",
        "i",
        "expect",
        "photoId",
        "expect",
        "emailId",
        "expect",
        "personId",
        "expect",
        "objectIdField",
        "Types",
        "expect",
        "uuidFieldString",
        "expect",
        "uuidFieldBuffer",
        "Binary",
        "cDoc",
        "docs",
        "_id",
        "cDoc",
        "expect",
        "photoId",
        "cDoc",
        "expect",
        "emailId",
        "cDoc",
        "expect",
        "personId",
        "cDoc",
        "expect",
        "objectIdField",
        "cDoc",
        "expect",
        "uuidFieldString",
        "cDoc",
        "expect",
        "uuidFieldBuffer",
        "cDoc",
        "e",
        "expect",
        "e",
        "describe",
        "it",
        "MongooseIdAssigner",
        "exampleSchema",
        "FieldConfigTypes",
        "exampleModel",
        "mongoose",
        "exampleSchema",
        "plugin",
        "exampleModel",
        "state",
        "expect",
        "state",
        "e",
        "expect",
        "e",
        "it",
        "expect",
        "MongooseIdAssigner",
        "exampleSchema",
        "FieldConfigTypes",
        "exampleModel",
        "mongoose",
        "exampleSchema",
        "plugin",
        "exampleModel",
        "state",
        "expect",
        "state",
        "e",
        "expect",
        "e",
        "plugin",
        "exampleModel",
        "state",
        "expect",
        "state",
        "e",
        "expect",
        "e"
    ],
    "literals": [
        "'bson'",
        "'mongoose'",
        "'../__mocks__/mongoose.config'",
        "'../__mocks__/test.models'",
        "'../assigner.interfaces'",
        "'../LocalStateStore'",
        "'../MongooseIdAssigner'",
        "'MongooseIdAssigner'",
        "'basics'",
        "'should save state to localStateStore'",
        "'ex'",
        "'should assign _id field if only modelName option passed'",
        "'example1'",
        "'example1'",
        "'mernxl'",
        "'should apply plugin by calling new MongooseIdAssigner'",
        "'example2'",
        "'example2'",
        "'mernxl'",
        "'should apply plugin with method MongooseIdAssigner.plugin'",
        "'example3'",
        "'example3'",
        "'mernxl'",
        "'should assign _ids to Model instances with options'",
        "'example4'",
        "'T'",
        "'34T5565'",
        "'example4'",
        "'mernxl'",
        "'34T5565'",
        "'should assign multiple ids to fields'",
        "'example5'",
        "'33333'",
        "'55555'",
        "'66666'",
        "'example5'",
        "'mernxl'",
        "'mernxl'",
        "'33333'",
        "'33334'",
        "'55555'",
        "'55556'",
        "'66666'",
        "'66667'",
        "'should use nextIdFunction passed at fieldConfig'",
        "'example6'",
        "'33333'",
        "'55555'",
        "string",
        "'example6'",
        "'placeholder'",
        "'placeholder'",
        "'55555'",
        "'55557'",
        "'should be robust enough to avoid duplicates'",
        "'example7'",
        "'33333'",
        "'55555'",
        "'SPEC-7382-4344-3232'",
        "'-'",
        "'example7'",
        "'mernxl'",
        "'number'",
        "'string'",
        "'string'",
        "'initialise()'",
        "'should initialise the plugin'",
        "'example8'",
        "'T'",
        "'34T5565'",
        "'example8'",
        "'should return state if called multiple times'",
        "'example9'",
        "'T'",
        "'34T5565'",
        "'example9'"
    ],
    "variables": [
        "mongoose",
        "exampleSchema",
        "exampleModel",
        "plugin",
        "doc",
        "plugin",
        "doc",
        "plugin",
        "doc",
        "doc",
        "options",
        "doc",
        "doc2",
        "options",
        "doc1",
        "doc2",
        "options",
        "plugin",
        "state",
        "promises",
        "i",
        "docs",
        "i",
        "_id",
        "photoId",
        "emailId",
        "personId",
        "uuidFieldString",
        "uuidFieldBuffer",
        "objectIdField",
        "plugin",
        "plugin"
    ],
    "comments": [
        "initialise to ensure that",
        "model is set and db is connected",
        "before performing heavy tasks"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}