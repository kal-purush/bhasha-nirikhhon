{
    "identifiers": [
        "java",
        "util",
        "Random",
        "args",
        "brain",
        "difEven",
        "difOdd",
        "difEven",
        "difOdd",
        "input",
        "sum",
        "j",
        "j",
        "j",
        "input",
        "j",
        "random",
        "sum",
        "input",
        "j",
        "sum",
        "brain",
        "train",
        "input",
        "brain",
        "train",
        "input",
        "result",
        "input",
        "input",
        "input",
        "input",
        "inputM",
        "input",
        "result",
        "brain",
        "feedForward",
        "inputM",
        "difOdd",
        "result",
        "input",
        "input",
        "input",
        "input",
        "inputM",
        "input",
        "difEven",
        "brain",
        "feedForward",
        "inputM",
        "i",
        "i",
        "i",
        "test",
        "j",
        "j",
        "j",
        "test",
        "j",
        "random",
        "testM",
        "test",
        "printf",
        "test",
        "test",
        "test",
        "test",
        "printf",
        "brain",
        "feedForward",
        "testM",
        "r",
        "nr",
        "r",
        "nextDouble",
        "nr"
    ],
    "literals": [
        "\"%.0f,%.0f,%.0f,%.0f -- >\"",
        "\"%.02f\""
    ],
    "variables": [
        "result"
    ],
    "comments": [
        "for(int i=0;i<50000;i++){ //construção de vetores de treino",
        "treinar até o erro ser baixinho",
        "construção de vetores de treino",
        "System.out.println(input[0] + \",\" + input[1] + \",\" + input[2] + \",\" + input[3] + \"  ->\" + sum);",
        "dois casos de testes para ver se é preciso continuar a treinar",
        "vários casos testes finais (não influenciam a rede)",
        "construção de vários vetores"
    ],
    "docstrings": [],
    "functions": [
        "main",
        "random"
    ],
    "classes": [
        "Test"
    ]
}