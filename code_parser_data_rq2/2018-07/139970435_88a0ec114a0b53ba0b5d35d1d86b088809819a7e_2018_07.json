{
    "identifiers": [
        "com",
        "teradata",
        "kylofeedaccelerator",
        "java",
        "io",
        "FileOutputStream",
        "java",
        "io",
        "java",
        "io",
        "InputStream",
        "java",
        "nio",
        "charset",
        "Charset",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileNotFoundException",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "java",
        "util",
        "Iterator",
        "java",
        "util",
        "Properties",
        "java",
        "util",
        "Entry",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "org",
        "springframework",
        "boot",
        "SpringApplication",
        "org",
        "springframework",
        "boot",
        "autoconfigure",
        "SpringBootApplication",
        "org",
        "springframework",
        "http",
        "HttpEntity",
        "org",
        "springframework",
        "http",
        "HttpHeaders",
        "org",
        "springframework",
        "http",
        "HttpMethod",
        "org",
        "springframework",
        "http",
        "MediaType",
        "org",
        "springframework",
        "http",
        "ResponseEntity",
        "org",
        "springframework",
        "util",
        "LinkedMultiValueMap",
        "org",
        "springframework",
        "util",
        "MultiValueMap",
        "org",
        "springframework",
        "core",
        "io",
        "FileSystemResource",
        "java",
        "util",
        "Base64",
        "org",
        "springframework",
        "web",
        "client",
        "RestTemplate",
        "org",
        "apache",
        "commons",
        "io",
        "FileUtils",
        "org",
        "json",
        "simple",
        "JSONArray",
        "org",
        "json",
        "simple",
        "JSONObject",
        "org",
        "json",
        "simple",
        "parser",
        "JSONParser",
        "org",
        "json",
        "simple",
        "parser",
        "ParseException",
        "SpringBootApplication",
        "log",
        "LoggerFactory",
        "getLogger",
        "SOURCE_GET_FEEDS_URL",
        "SOURCE_EXPORT_FEED_URL",
        "TARGET_IMPORT_FEED_URL",
        "FEED_DOWNLOAD_PATH",
        "SOURCE_USER_NAME",
        "SOURCE_PASSWORD",
        "TARGET_USER_NAME",
        "TARGET_PASSWORD",
        "FEEDS",
        "PromoteAllFeeds",
        "sourceRecordsTotal",
        "feedNameIdValues",
        "feedNameIdToPromote",
        "inputStream",
        "args",
        "SpringApplication",
        "run",
        "args",
        "prop",
        "propFileName",
        "inputStream",
        "getClassLoader",
        "getResourceAsStream",
        "propFileName",
        "inputStream",
        "prop",
        "load",
        "inputStream",
        "propFileName",
        "SOURCE_GET_FEEDS_URL",
        "prop",
        "getProperty",
        "SOURCE_EXPORT_FEED_URL",
        "prop",
        "getProperty",
        "TARGET_IMPORT_FEED_URL",
        "prop",
        "getProperty",
        "FEED_DOWNLOAD_PATH",
        "prop",
        "getProperty",
        "FEEDS",
        "prop",
        "getProperty",
        "split",
        "PromoteAllFeeds",
        "prop",
        "getProperty",
        "SOURCE_USER_NAME",
        "prop",
        "getProperty",
        "SOURCE_PASSWORD",
        "prop",
        "getProperty",
        "TARGET_USER_NAME",
        "prop",
        "getProperty",
        "TARGET_PASSWORD",
        "prop",
        "getProperty",
        "e",
        "e",
        "getMessage",
        "exit",
        "inputStream",
        "close",
        "headers",
        "auth",
        "SOURCE_USER_NAME",
        "SOURCE_PASSWORD",
        "encodedAuth",
        "Base64",
        "getEncoder",
        "encode",
        "auth",
        "getBytes",
        "Charset",
        "forName",
        "authHeader",
        "encodedAuth",
        "headers",
        "authHeader",
        "headers",
        "setAccept",
        "Arrays",
        "asList",
        "MediaType",
        "APPLICATION_JSON",
        "headers",
        "setContentType",
        "MediaType",
        "APPLICATION_JSON",
        "entity",
        "headers",
        "restTemplate",
        "responseString",
        "methodToGetFeeds",
        "restTemplate",
        "entity",
        "responseString",
        "methodToParse",
        "responseString",
        "sourceRecordsTotal",
        "feedNameIdValues",
        "exit",
        "validateFeedsAgainstSource",
        "PromoteAllFeeds",
        "FEEDS",
        "feedNameIdValues",
        "feedNameIdToPromote",
        "exportRestTemplate",
        "exportheaders",
        "exportheaders",
        "authHeader",
        "exportheaders",
        "setAccept",
        "Arrays",
        "asList",
        "MediaType",
        "APPLICATION_OCTET_STREAM",
        "MediaType",
        "ALL",
        "exportheaders",
        "setContentType",
        "MediaType",
        "APPLICATION_OCTET_STREAM",
        "exportEntity",
        "exportheaders",
        "file",
        "FEED_DOWNLOAD_PATH",
        "file",
        "mkdirs",
        "exportFeeds",
        "exportRestTemplate",
        "exportEntity",
        "feedNameIdToPromote",
        "importRestTemplate",
        "importheaders",
        "authTarget",
        "TARGET_USER_NAME",
        "TARGET_PASSWORD",
        "encodedAuthTarget",
        "Base64",
        "getEncoder",
        "encode",
        "authTarget",
        "getBytes",
        "Charset",
        "forName",
        "authHeaderTarget",
        "encodedAuthTarget",
        "importheaders",
        "authHeaderTarget",
        "importheaders",
        "setAccept",
        "Arrays",
        "asList",
        "MediaType",
        "APPLICATION_JSON",
        "MediaType",
        "ALL",
        "importheaders",
        "setContentType",
        "MediaType",
        "MULTIPART_FORM_DATA",
        "importFeeds",
        "importRestTemplate",
        "importheaders",
        "feedNameIdToPromote",
        "FEED_DOWNLOAD_PATH",
        "FileUtils",
        "deleteDirectory",
        "file",
        "exit",
        "importRestTemplate",
        "importheaders",
        "feedNameIdToPromote",
        "entriesSet3",
        "feedNameIdToPromote",
        "entrySet",
        "iterator",
        "entriesSet3",
        "hasNext",
        "entry",
        "entriesSet3",
        "next",
        "entry",
        "getKey",
        "bodyMap",
        "bodyMap",
        "add",
        "bodyMap",
        "add",
        "bodyMap",
        "add",
        "bodyMap",
        "add",
        "bodyMap",
        "add",
        "bodyMap",
        "add",
        "bodyMap",
        "add",
        "FEED_DOWNLOAD_PATH",
        "concat",
        "concat",
        "entry",
        "getKey",
        "concat",
        "importEntity",
        "bodyMap",
        "importheaders",
        "importResponse",
        "importRestTemplate",
        "exchange",
        "TARGET_IMPORT_FEED_URL",
        "HttpMethod",
        "POST",
        "importEntity",
        "importResponse",
        "getStatusCode",
        "resp",
        "importResponse",
        "getBody",
        "parseimp",
        "Validimp",
        "Successimp",
        "jobjimp",
        "jobjimp",
        "parseimp",
        "parse",
        "resp",
        "Validimp",
        "jobjimp",
        "get",
        "Successimp",
        "jobjimp",
        "get",
        "e",
        "e",
        "printStackTrace",
        "Validimp",
        "Successimp",
        "entry",
        "getKey",
        "entry",
        "getKey",
        "exportRestTemplate",
        "exportEntity",
        "feedNameIdToPromote",
        "entriesSet2",
        "feedNameIdToPromote",
        "entrySet",
        "iterator",
        "entriesSet2",
        "hasNext",
        "entry",
        "entriesSet2",
        "next",
        "entry",
        "getKey",
        "exportResponse",
        "exportRestTemplate",
        "exchange",
        "SOURCE_EXPORT_FEED_URL",
        "concat",
        "concat",
        "entry",
        "getValue",
        "HttpMethod",
        "GET",
        "exportEntity",
        "exportResponse",
        "getStatusCode",
        "fileOutputStream",
        "fileOutputStream",
        "FEED_DOWNLOAD_PATH",
        "concat",
        "concat",
        "entry",
        "getKey",
        "concat",
        "e",
        "e",
        "printStackTrace",
        "FEED_DOWNLOAD_PATH",
        "concat",
        "org",
        "apache",
        "commons",
        "io",
        "IOUtils",
        "write",
        "exportResponse",
        "getBody",
        "fileOutputStream",
        "e",
        "e",
        "printStackTrace",
        "fileOutputStream",
        "close",
        "e",
        "e",
        "printStackTrace",
        "entry",
        "getKey",
        "PromoteAllFeeds",
        "FEEDS",
        "feedNameIdValues",
        "feedNameIdToPromote",
        "PromoteAllFeeds",
        "equalsIgnoreCase",
        "FEEDS",
        "equalsIgnoreCase",
        "i",
        "i",
        "FEEDS",
        "length",
        "i",
        "entriesSet1",
        "feedNameIdValues",
        "entrySet",
        "iterator",
        "entriesSet1",
        "hasNext",
        "entry",
        "entriesSet1",
        "next",
        "FEEDS",
        "i",
        "equalsIgnoreCase",
        "entry",
        "getKey",
        "entry",
        "getKey",
        "feedNameIdToPromote",
        "put",
        "entry",
        "getKey",
        "entry",
        "getValue",
        "feedNameIdToPromote",
        "PromoteAllFeeds",
        "equalsIgnoreCase",
        "FEEDS",
        "equalsIgnoreCase",
        "feedNameIdToPromote",
        "putAll",
        "feedNameIdValues",
        "feedNameIdToPromote",
        "responseString",
        "sourceRecordsTotal",
        "feedNameIdValues",
        "parse",
        "jobj",
        "jobj",
        "parse",
        "parse",
        "responseString",
        "e",
        "e",
        "printStackTrace",
        "jobj",
        "get",
        "sourceRecordsTotal",
        "jobj",
        "get",
        "jsonFeedsArray",
        "jobj",
        "get",
        "i",
        "i",
        "jsonFeedsArray",
        "size",
        "i",
        "jsonFeedObject",
        "jsonFeedsArray",
        "get",
        "i",
        "feedNameIdValues",
        "put",
        "jsonFeedObject",
        "get",
        "jsonFeedObject",
        "get",
        "restTemplate",
        "entity",
        "responseString",
        "response",
        "restTemplate",
        "exchange",
        "SOURCE_GET_FEEDS_URL",
        "HttpMethod",
        "GET",
        "entity",
        "response",
        "getStatusCode",
        "is2xxSuccessful",
        "responseString",
        "response",
        "getBody",
        "toString",
        "responseString",
        "responseString"
    ],
    "literals": [
        "\"***************** Welcome to Kylo Feed Promotion Accelerator *****************\"",
        "\"config.properties\"",
        "\"property file '\"",
        "\"' not found in the classpath\"",
        "\"SOURCE_GET_FEEDS_URL\"",
        "\"SOURCE_EXPORT_FEED_URL\"",
        "\"TARGET_IMPORT_FEED_URL\"",
        "\"FEED_DOWNLOAD_PATH\"",
        "\"FEEDS\"",
        "\",\"",
        "\"PromoteAllFeeds\"",
        "\"SOURCE_USER_NAME\"",
        "\"SOURCE_PASSWORD\"",
        "\"TARGET_USER_NAME\"",
        "\"TARGET_PASSWORD\"",
        "\"Exception: \"",
        "\":\"",
        "\"US-ASCII\"",
        "\"Basic \"",
        "\"Authorization\"",
        "\"********************* Exporting user specified feed(s) from source : *************************\"",
        "\"Authorization\"",
        "\"***************** All specified feeds exported to temp directory *****************\"",
        "\"***************** Importing user specified feeds to target *****************\"",
        "\":\"",
        "\"US-ASCII\"",
        "\"Basic \"",
        "\"Authorization\"",
        "\"***************** All specified feeds imported to target *****************\"",
        "\"Deleting temp directory \"",
        "\"***************** \"",
        "\" import started *****************\"",
        "\"categorySystemName\"",
        "\"templateProperties\"",
        "\"overwrite\"",
        "\"overwriteFeedTemplate\"",
        "\"importConnectingReusableFlow\"",
        "\"YES\"",
        "\"feedProperties\"",
        "\"file\"",
        "\"\\\\\"",
        "\".feed.zip\"",
        "\"HTTP Status code of response for import url : \"",
        "\"valid\"",
        "\"success\"",
        "\"***************** \"",
        "\" import successful*****************\"",
        "\"***************** \"",
        "\" import was not successful*****************\"",
        "\"***************** \"",
        "\" export started *****************\"",
        "\"/\"",
        "\"HTTP Status code of response for export url :\"",
        "\"\\\\\"",
        "\".feed.zip\"",
        "\"Zip folder containing feed related files created at location : \"",
        "\"\\\\\"",
        "\"***************** \"",
        "\" export completed!\"",
        "\"***************** Validating user specified feeds against source *****************\"",
        "\"NO\"",
        "\"ALL\"",
        "\"Feed -> \"",
        "\" exists in source.\"",
        "\"***************** feedNameId that will be promoted *****************\"",
        "\"YES\"",
        "\"ALL\"",
        "\"***************** feedNameId that will be promoted *****************\"",
        "\"Please check the config.properties file and set values correctly\"",
        "\"***************** Total no of existing feeds in source environment : *****************\"",
        "\"recordsTotal\"",
        "\"recordsTotal\"",
        "\"data\"",
        "\"systemFeedName\"",
        "\"feedId\"",
        "\"***************** Checking if the source kylo environment is up or not *****************\"",
        "\"Source Kylo environment is up\""
    ],
    "variables": [
        "SOURCE_GET_FEEDS_URL",
        "SOURCE_EXPORT_FEED_URL",
        "TARGET_IMPORT_FEED_URL",
        "FEED_DOWNLOAD_PATH",
        "SOURCE_USER_NAME",
        "SOURCE_PASSWORD",
        "TARGET_USER_NAME",
        "TARGET_PASSWORD",
        "FEEDS",
        "PromoteAllFeeds",
        "sourceRecordsTotal",
        "inputStream"
    ],
    "comments": [
        "load from properties file : KYLO rest urls for get-feeds,export-feed,import-feed",
        "load from properties file : path to which feed zip from source gets exported to, and from which it gets imported to target",
        "load from properties file : Credentials to the rest endpoint",
        "to hold total no of feeds",
        "to hold inputed systemFeedName and feedId",
        "to hold feednumbers to be promoted",
        "log.info(\"ERROR\");",
        "LOADING PROPERTY FILE values",
        "Creating basic authorization headers & Request to return JSON format",
        "method call - get feeds",
        "method call - parse json & store into map objects",
        "Method cal - Inputing feednumber from user",
        "Sending in credentials as headers",
        "for basic authorization",
        "setting the content type",
        "Creating basic authorization headers",
        "Temp directory delete",
        "endOfMain",
        "TODO Auto-generated method stub",
        "Type caste the parsed json data to json object",
        "System.out.println(Validimp);",
        "System.out.println(Successimp);",
        "TODO Auto-generated catch block",
        "TODO Auto-generated method stub",
        "TODO Auto-generated catch block",
        "TODO Auto-generated catch block",
        "TODO Auto-generated catch block",
        "TODO Auto-generated method stub",
        "TODO Auto-generated method stub",
        "JSONParser reads the data from string object and break each data into key value pairs",
        "Type caste the parsed json data to json object",
        "TODO Auto-generated catch block",
        "iterating over \"data\" array of values",
        "Getting set of values under \"data\" header",
        "Storing the feednames & feedids to 2 map objects",
        "passing kylo \"get feeds\" API uri",
        "endOfCLass"
    ],
    "docstrings": [],
    "functions": [
        "main",
        "importFeeds",
        "exportFeeds",
        "validateFeedsAgainstSource",
        "methodToParse",
        "methodToGetFeeds"
    ],
    "classes": [
        "KyloFeedPromoter"
    ]
}