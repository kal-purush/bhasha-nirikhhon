{
    "identifiers": [
        "ch",
        "wisv",
        "events",
        "sales",
        "controller",
        "scan",
        "ch",
        "wisv",
        "events",
        "core",
        "exception",
        "normal",
        "EventsException",
        "ch",
        "wisv",
        "events",
        "core",
        "exception",
        "normal",
        "TicketNotFoundException",
        "ch",
        "wisv",
        "events",
        "core",
        "model",
        "Event",
        "ch",
        "wisv",
        "events",
        "core",
        "model",
        "ticket",
        "Ticket",
        "ch",
        "wisv",
        "events",
        "core",
        "model",
        "ticket",
        "TicketStatus",
        "ch",
        "wisv",
        "events",
        "core",
        "service",
        "EventService",
        "ch",
        "wisv",
        "events",
        "core",
        "service",
        "ticket",
        "TicketService",
        "ch",
        "wisv",
        "events",
        "utils",
        "ResponseEntityBuilder",
        "createResponseEntity",
        "java",
        "util",
        "Objects",
        "org",
        "json",
        "simple",
        "JSONObject",
        "org",
        "springframework",
        "http",
        "HttpStatus",
        "org",
        "springframework",
        "http",
        "ResponseEntity",
        "org",
        "springframework",
        "security",
        "access",
        "prepost",
        "PreAuthorize",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "PathVariable",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "PostMapping",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "RequestMapping",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "RequestParam",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "RestController",
        "RestController",
        "RequestMapping",
        "value",
        "PreAuthorize",
        "UNIQUE_CODE_LENGTH",
        "BARCODE_LENGTH",
        "eventService",
        "ticketService",
        "eventService",
        "ticketService",
        "eventService",
        "eventService",
        "ticketService",
        "ticketService",
        "PostMapping",
        "PathVariable",
        "key",
        "RequestParam",
        "barcode",
        "barcode",
        "length",
        "BARCODE_LENGTH",
        "createResponseEntity",
        "HttpStatus",
        "BAD_REQUEST",
        "uniqueCode",
        "barcode",
        "substring",
        "barcode",
        "length",
        "UNIQUE_CODE_LENGTH",
        "barcode",
        "length",
        "handleScanTicket",
        "key",
        "uniqueCode",
        "PostMapping",
        "PathVariable",
        "key",
        "RequestParam",
        "code",
        "code",
        "length",
        "UNIQUE_CODE_LENGTH",
        "createResponseEntity",
        "HttpStatus",
        "BAD_REQUEST",
        "handleScanTicket",
        "key",
        "code",
        "uniqueCode",
        "getProducts",
        "stream",
        "product",
        "ticketService",
        "getByUniqueCode",
        "product",
        "uniqueCode",
        "ignored",
        "Objects",
        "nonNull",
        "findFirst",
        "orElseThrow",
        "uniqueCode",
        "key",
        "code",
        "json",
        "eventService",
        "getByKey",
        "key",
        "ticket",
        "getTicketByUniqueCode",
        "code",
        "json",
        "put",
        "ticket",
        "ticket",
        "getStatus",
        "TicketStatus",
        "OPEN",
        "ticketService",
        "updateStatus",
        "ticket",
        "TicketStatus",
        "SCANNED",
        "createResponseEntity",
        "HttpStatus",
        "OK",
        "json",
        "createResponseEntity",
        "HttpStatus",
        "ALREADY_REPORTED",
        "json",
        "e",
        "createResponseEntity",
        "HttpStatus",
        "BAD_REQUEST",
        "e",
        "getMessage"
    ],
    "literals": [
        "\"/api/v1/sales/scan/event/{key}\"",
        "\"hasRole('USER')\"",
        "\"/barcode\"",
        "\"barcode\"",
        "\"Invalid EAN 13 barcode length!\"",
        "\"/code\"",
        "\"code\"",
        "\"Invalid unique code length!\"",
        "\"Ticket \"",
        "\" does not exists\"",
        "\"ticket\"",
        "\"Ticket scan successful\"",
        "\"Ticket has already been scanned\""
    ],
    "variables": [
        "eventService",
        "ticketService"
    ],
    "comments": [],
    "docstrings": [
        "* SalesScanRestController.",
        "Unique code length.",
        "Barcode length.",
        "EventService.",
        "TicketService.",
        "* SalesScanRestController.\n     *\n     * @param eventService  of type EventService\n     * @param ticketService of type TicketService",
        "* @param key     of type String\n     * @param barcode of type String\n     *\n     * @return String",
        "* @param key  of type String\n     * @param code of type String\n     *\n     * @return String",
        "* Scan a Ticket using a unique code.\n     *\n     * @param event      of type Event\n     * @param uniqueCode of type String\n     *\n     * @return Ticket\n     *\n     * @throws EventsException when Ticket is not found or ticket has already been scanned",
        "* Handle scan Tickets.\n     *\n     * @param key  of type String\n     * @param code of type String\n     *\n     * @return String"
    ],
    "functions": [
        "SalesScanRestController",
        "ResponseEntity",
        "barcodeScanner",
        "ResponseEntity",
        "codeScanner",
        "Ticket",
        "getTicketByUniqueCode",
        "ResponseEntity",
        "handleScanTicket"
    ],
    "classes": [
        "SalesScanRestController"
    ]
}