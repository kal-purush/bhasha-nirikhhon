{
    "identifiers": [
        "require",
        "require",
        "args",
        "args",
        "puppeteer",
        "browser",
        "wait",
        "ms",
        "resolve",
        "setTimeout",
        "resolve",
        "ms",
        "page",
        "page",
        "morePosts",
        "toSingleHrefsArray",
        "page",
        "el",
        "el",
        "toSingleHrefsArray",
        "page",
        "el",
        "el",
        "toSingleHrefsArray",
        "page",
        "el",
        "el",
        "page",
        "wait",
        "postRowCount",
        "postRowCount",
        "morePosts",
        "browser",
        "toSingleHrefsArray",
        "e",
        "e",
        "browser",
        "e",
        "args",
        "args",
        "puppeteer",
        "browser",
        "page",
        "page",
        "singleInfomationsElement",
        "i",
        "singleInfomationsElement",
        "i",
        "singleInfomations",
        "i",
        "singleInfomationsElement",
        "i",
        "loopCount",
        "singleInfomations",
        "loopCount",
        "browser",
        "singleInfoProperty",
        "e",
        "e",
        "browser",
        "e",
        "ListPageScrapper",
        "listpageInfo",
        "result",
        "result",
        "output"
    ],
    "literals": [
        "'puppeteer'",
        "'dotenv'",
        "'https://www.instagram.com/'",
        "${this.pageID}",
        "'/'",
        "'.Nnq7C'",
        ".Nnq7C:nth-child(${1}) > .v1Nh3:nth-child(${1}) > a",
        ".Nnq7C:nth-child(${1}) > .v1Nh3:nth-child(${2}) > a",
        ".Nnq7C:nth-child(${1}) > .v1Nh3:nth-child(${3}) > a",
        "'.Xl2Pu > .gElp9 > span > a'",
        "''",
        "''",
        "'furuzyo'"
    ],
    "variables": [
        "puppeteer",
        "browser",
        "page",
        "wait",
        "toSingleElements",
        "postRowCount",
        "morePosts",
        "toSingleHrefsArray",
        "browser",
        "page",
        "singleInfoProperty",
        "singleInfomationsElement",
        "singleInfomations",
        "singleInfomationsKey",
        "singleInfomationsValue",
        "loopCount",
        "i",
        "listpageInfo",
        "output"
    ],
    "comments": [
        "if(postRowCount % 4 == 0) {\n          await page.evaluate(() => {\n            window.scrollBy(0, 2000);\n          })\n          await wait(2000);\n        }",
        "listpageInfo.getListPageStatus().then((listpageLinks) => {\n  let singleInfos = new Array(listpageLinks.length);\n  for(let i=0; i < listpageLinks.length; i++) {\n    const singleInfo = new SingleScrapper({\n      roomURL: listpageLinks[i]\n    });\n    singleInfo.getSingleStatus().then((result) => {\n      singleInfos[i] = result;\n    console.log(singleInfos[i]);\n    });\n  }\n});"
    ],
    "docstrings": [],
    "functions": [
        "getListPageStatus",
        "getSingleStatus"
    ],
    "classes": [
        "ListPageScrapper",
        "SingleScrapper"
    ]
}