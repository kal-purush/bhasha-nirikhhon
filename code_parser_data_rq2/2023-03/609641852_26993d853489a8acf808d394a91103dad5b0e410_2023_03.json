{
    "identifiers": [
        "fs",
        "path",
        "fileURLToPath",
        "Keyboard",
        "puppeteer",
        "StealthPlugin",
        "executablePath",
        "fileURLToPath",
        "path",
        "__filename",
        "home",
        "req",
        "res",
        "res",
        "setupSubmit",
        "req",
        "res",
        "req",
        "req",
        "fs",
        "__dirname",
        "res",
        "fs",
        "__dirname",
        "data",
        "res",
        "error",
        "error",
        "res",
        "voiceAsstPage",
        "req",
        "res",
        "res",
        "automateClockIn",
        "fs",
        "__dirname",
        "read",
        "puppeteer",
        "executablePath",
        "browser",
        "page",
        "ua",
        "page",
        "data",
        "page",
        "data",
        "page",
        "data",
        "page",
        "page",
        "command",
        "page",
        "element",
        "page",
        "res",
        "error",
        "msg",
        "browser",
        "command",
        "page",
        "element",
        "page",
        "res",
        "error",
        "msg",
        "browser"
    ],
    "literals": [
        "'fs'",
        "'path'",
        "'url'",
        "'puppeteer'",
        "'puppeteer-extra'",
        "'puppeteer-extra-plugin-stealth'",
        "'puppeteer'",
        "'home.ejs'",
        "\"/credentials/cred.json\"",
        "'Setup is already done'",
        "\"/credentials/cred.json\"",
        "'Setup successful'",
        "'Something went wrong'",
        "'voice_asst.ejs'",
        "\"running\"",
        "\"/credentials/cred.json\"",
        "\"clock in\"",
        "\"\"",
        "'--no-sandbox'",
        "'--disable-gpu'",
        "'--enable-webgl'",
        "'--window-size=1920,1200'",
        "'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36'",
        "'networkidle2'",
        "'input[type=\"email\"]'",
        "'input[type=\"password\"]'",
        "'Enter'",
        "'clock in'",
        "'#clock-in'",
        "\"error\"",
        "\"#clock-in\"",
        "\"clocked in\"",
        "\"either you are already clocked in or maximum clock in reached\"",
        "'clock out'",
        "'#clock-out'",
        "\"error\"",
        "\"#clock-out\"",
        "\"clocked out\"",
        "\"either you are already clocked out or maximum clock in reached\""
    ],
    "variables": [
        "__filename",
        "__dirname",
        "home",
        "setupSubmit",
        "data",
        "write",
        "voiceAsstPage",
        "automateClockIn",
        "read",
        "data",
        "command",
        "msg",
        "browser",
        "ua",
        "page",
        "element",
        "element"
    ],
    "comments": [
        "if(!write)throw(\"Something went wrong\")",
        "export const voiceCommand = async(req,res)=>{",
        "const {command}=req.body",
        "console.log(command)",
        "let read = fs.readFileSync(__dirname+\"/credentials/cred.json\")",
        "let data = JSON.parse(read);",
        "(async()=>{",
        "const browser = await puppeteer.launch({",
        "headless:false,",
        "args:[",
        "'--no-sandbox',",
        "'--disable-gpu',",
        "'--enable-webgl',",
        "'--window-size=1920,1200'",
        "],",
        "executablePath:executablePath()",
        "})",
        "const ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36'",
        "const page = await browser.newPage()",
        "await page.setUserAgent(ua)",
        "await page.goto(data.web_url, {waitUntil:'networkidle2'})",
        "await page.type('input[type=\"email\"]',data.email)",
        "await page.type('input[type=\"password\"]',data.password)",
        "await page.keyboard.press('Enter')",
        "await page.waitForNavigation()",
        "//    page.click(\"#side-menu > li:nth-child(3) > a\")",
        "if(command.includes('clock in')){",
        "try {",
        "let element = await page.$('#clock-in')",
        "if(!element)throw(\"error\")",
        "await page.click(\"#clock-in\")",
        "return res.json({msg:\"clocked in\"})",
        "} catch (error) {",
        "return res.json({msg:\"either you are already clocked in or maximum clock in reached\"})",
        "} finally{",
        "await browser.close();",
        "}",
        "}",
        "if(command.includes('clock out')){",
        "try {",
        "let element = await page.$('#clock-out')",
        "if(!element)throw(\"error\")",
        "await page.click(\"#clock-out\")",
        "return res.json({msg:\"clocked out\"})",
        "} catch (error) {",
        "return res.json({msg:\"either you are already clocked out or maximum clock in reached\"})",
        "} finally{",
        "await browser.close();",
        "}",
        "}",
        "})()",
        "}",
        "page.click(\"#side-menu > li:nth-child(3) > a\")"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}