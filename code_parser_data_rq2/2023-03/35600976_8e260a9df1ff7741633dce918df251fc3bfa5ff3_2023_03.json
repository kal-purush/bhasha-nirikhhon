{
    "identifiers": [
        "Collections",
        "Generic",
        "Globalization",
        "Numerics",
        "LanguageExt",
        "LanguageExt",
        "Parsec",
        "LanguageExt",
        "Prelude",
        "LanguageExt",
        "Parsec",
        "Prim",
        "LanguageExt",
        "Parsec",
        "Char",
        "LanguageExt",
        "Parsec",
        "Expr",
        "LanguageExt",
        "Parsec",
        "Token",
        "LanguageExt",
        "Parsec",
        "Indent",
        "TIKSN",
        "Numbering",
        "TSerial",
        "TNumber",
        "ISerialNumber",
        "SimpleSerialNumber",
        "TSerial",
        "TNumber",
        "TSerial",
        "ISerial",
        "TSerial",
        "TNumber",
        "IUnsignedNumber",
        "TNumber",
        "SimpleSerialNumber",
        "TSerial",
        "TNumber",
        "other",
        "ReferenceEquals",
        "other",
        "ReferenceEquals",
        "other",
        "EqualityComparer",
        "TSerial",
        "Default",
        "Equals",
        "Serial",
        "other",
        "Serial",
        "EqualityComparer",
        "TNumber",
        "Default",
        "Equals",
        "other",
        "obj",
        "ReferenceEquals",
        "obj",
        "obj",
        "SimpleSerialNumber",
        "TSerial",
        "TNumber",
        "other",
        "Equals",
        "other",
        "HashCode",
        "Combine",
        "Serial",
        "SimpleSerialNumber",
        "TSerial",
        "TNumber",
        "left",
        "SimpleSerialNumber",
        "TSerial",
        "TNumber",
        "right",
        "Equals",
        "left",
        "right",
        "SimpleSerialNumber",
        "TSerial",
        "TNumber",
        "left",
        "SimpleSerialNumber",
        "TSerial",
        "TNumber",
        "right",
        "Equals",
        "left",
        "right",
        "TSerial",
        "serial",
        "TNumber",
        "number",
        "Serial",
        "serial",
        "ArgumentNullException",
        "nameof",
        "serial",
        "number",
        "ArgumentNullException",
        "nameof",
        "number",
        "SimpleSerialNumber",
        "TSerial",
        "TNumber",
        "s",
        "IFormatProvider",
        "provider",
        "TryParse",
        "s",
        "provider",
        "result",
        "result",
        "FormatException",
        "s",
        "IFormatProvider",
        "provider",
        "SimpleSerialNumber",
        "TSerial",
        "TNumber",
        "result",
        "Parse",
        "s",
        "asciiOnly",
        "provider",
        "result",
        "serialNumber",
        "MatchUnsafe",
        "x",
        "serialNumber",
        "IsSome",
        "SimpleSerialNumber",
        "TSerial",
        "TNumber",
        "s",
        "IFormatProvider",
        "provider",
        "Parse",
        "s",
        "ToString",
        "provider",
        "s",
        "IFormatProvider",
        "provider",
        "SimpleSerialNumber",
        "TSerial",
        "TNumber",
        "result",
        "TryParse",
        "s",
        "ToString",
        "provider",
        "result",
        "Option",
        "SimpleSerialNumber",
        "TSerial",
        "TNumber",
        "s",
        "asciiOnly",
        "IFormatProvider",
        "provider",
        "IsNullOrEmpty",
        "s",
        "value",
        "TNumber",
        "TryParse",
        "value",
        "provider",
        "num",
        "Some",
        "num",
        "xs",
        "many",
        "letter",
        "r",
        "xs",
        "ToArray",
        "val",
        "TSerial",
        "Parse",
        "r",
        "asciiOnly",
        "provider",
        "res",
        "val",
        "Match",
        "Parser",
        "TSerial",
        "Some",
        "result",
        "TSerial",
        "x",
        "failure",
        "TSerial",
        "res",
        "xs",
        "many",
        "digit",
        "r",
        "xs",
        "ToArray",
        "val",
        "parseNumber",
        "r",
        "res",
        "val",
        "Match",
        "Parser",
        "TNumber",
        "Some",
        "result",
        "TNumber",
        "x",
        "failure",
        "TNumber",
        "res",
        "serial",
        "serialParser",
        "_1",
        "optional",
        "ch",
        "number",
        "numberParser",
        "_2",
        "eof",
        "SimpleSerialNumber",
        "TSerial",
        "TNumber",
        "serial",
        "number",
        "parse",
        "parser",
        "s",
        "result",
        "ToOption",
        "Option",
        "SimpleSerialNumber",
        "TSerial",
        "TNumber",
        "s",
        "asciiOnly",
        "IFormatProvider",
        "provider",
        "Parse",
        "s",
        "ToString",
        "asciiOnly",
        "provider",
        "ToString",
        "CultureInfo",
        "InvariantCulture",
        "format",
        "IFormatProvider",
        "formatProvider",
        "Serial",
        "ToString",
        "formatProvider",
        "ToString",
        "formatProvider",
        "destination",
        "charsWritten",
        "format",
        "IFormatProvider",
        "provider",
        "ToString",
        "provider",
        "charsWritten",
        "Min",
        "result",
        "Length",
        "destination",
        "Length",
        "result",
        "CopyTo",
        "destination",
        "charsWritten",
        "charsWritten",
        "result",
        "Length",
        "Option",
        "SimpleSerialNumber",
        "TSerial",
        "TNumber",
        "TNumber",
        "IsZero",
        "SimpleSerialNumber",
        "TSerial",
        "TNumber",
        "Serial",
        "TNumber",
        "One",
        "Option",
        "SimpleSerialNumber",
        "TSerial",
        "TNumber",
        "TNumber",
        "One",
        "TNumber",
        "IsZero",
        "nextNumber",
        "SimpleSerialNumber",
        "TSerial",
        "TNumber",
        "Serial",
        "nextNumber"
    ],
    "literals": [
        "\"Input string was not in a correct format.\"",
        "\"Failed to parse a serial'\"",
        "\"Failed to parse a number'\""
    ],
    "variables": [
        "TSerial",
        "Serial",
        "TNumber",
        "serialNumber",
        "parseNumber",
        "serialParser",
        "numberParser",
        "parser",
        "result",
        "result",
        "nextNumber"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "Equals",
        "Equals",
        "GetHashCode",
        "SimpleSerialNumber",
        "Parse",
        "TryParse",
        "Parse",
        "TryParse",
        "Parse",
        "Parse",
        "ToString",
        "ToString",
        "TryFormat",
        "GetPrevious",
        "GetNext"
    ],
    "classes": [
        "SimpleSerialNumber"
    ]
}