{
    "identifiers": [
        "melodic",
        "servlet",
        "melodic",
        "dal",
        "melodic",
        "model",
        "java",
        "io",
        "java",
        "sql",
        "SQLException",
        "java",
        "text",
        "DateFormat",
        "java",
        "text",
        "ParseException",
        "java",
        "text",
        "SimpleDateFormat",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "javax",
        "servlet",
        "annotation",
        "javax",
        "servlet",
        "ServletException",
        "javax",
        "servlet",
        "http",
        "HttpServlet",
        "javax",
        "servlet",
        "http",
        "HttpServletRequest",
        "javax",
        "servlet",
        "http",
        "HttpServletResponse",
        "WebServlet",
        "userDao",
        "Override",
        "userDao",
        "UserDao",
        "getInstance",
        "Override",
        "req",
        "resp",
        "messages",
        "req",
        "setAttribute",
        "messages",
        "user",
        "input",
        "req",
        "getParameter",
        "input",
        "messages",
        "put",
        "messages",
        "put",
        "userId",
        "valueOf",
        "input",
        "user",
        "userDao",
        "getUserFromUserID",
        "userId",
        "e",
        "e",
        "printStackTrace",
        "e",
        "messages",
        "put",
        "userId",
        "messages",
        "put",
        "valueOf",
        "userId",
        "req",
        "setAttribute",
        "user",
        "req",
        "getRequestDispatcher",
        "forward",
        "req",
        "resp",
        "Override",
        "req",
        "resp",
        "messages",
        "req",
        "setAttribute",
        "messages",
        "userId",
        "parseInt",
        "req",
        "getParameter",
        "userName",
        "req",
        "getParameter",
        "userName",
        "userName",
        "trim",
        "isEmpty",
        "messages",
        "put",
        "email",
        "req",
        "getParameter",
        "dateFormat",
        "stringDob",
        "req",
        "getParameter",
        "description",
        "req",
        "getParameter",
        "address",
        "req",
        "getParameter",
        "dob",
        "dob",
        "dateFormat",
        "parse",
        "stringDob",
        "e",
        "e",
        "printStackTrace",
        "e",
        "user",
        "userId",
        "userName",
        "email",
        "dob",
        "description",
        "address",
        "userDao",
        "update",
        "user",
        "messages",
        "put",
        "userName",
        "user",
        "getUserId",
        "e",
        "e",
        "printStackTrace",
        "e",
        "req",
        "getRequestDispatcher",
        "forward",
        "req",
        "resp"
    ],
    "literals": [
        "\"/userupdate\"",
        "\"messages\"",
        "\"userid\"",
        "\"title\"",
        "\"Invalid userId\"",
        "\"disableSubmit\"",
        "\"true\"",
        "\"success\"",
        "\"Displaying results for \"",
        "\"previousUserId\"",
        "\"melodicMindsUser\"",
        "\"/UserUpdate.jsp\"",
        "\"messages\"",
        "\"userid\"",
        "\"username\"",
        "\"success\"",
        "\"Invalid UserName\"",
        "\"email\"",
        "\"yyyy-MM-dd\"",
        "\"dob\"",
        "\"description\"",
        "\"address\"",
        "\"success\"",
        "\"Successfully updated \"",
        "\"; userId: \"",
        "\"/FindUsers.jsp\""
    ],
    "variables": [
        "userDao",
        "dob"
    ],
    "comments": [
        "Map for storing messages.",
        "Just render the JSP.",
        "Retrieve and validate userId.",
        "Retrieve BlogUsers, and store as a message.",
        "Save the previous search term, so it can be used as the default",
        "in the input box when rendering FindUser.jsp.",
        "Map for storing messages.",
        "Retrieve and validate name.",
        "Create the StandardUser.",
        "dob must be in the format yyyy-mm-dd."
    ],
    "docstrings": [],
    "functions": [
        "init",
        "doGet",
        "doPost"
    ],
    "classes": [
        "UserUpdateServlet"
    ]
}