{
    "identifiers": [
        "jest",
        "describe",
        "test",
        "expect",
        "afterEach",
        "createProviderClass",
        "RuntimeContext",
        "DataStore",
        "clearResolveCache",
        "jest",
        "jest",
        "jest",
        "timeout",
        "result",
        "resolve",
        "setTimeout",
        "resolve",
        "result",
        "timeout",
        "customElements",
        "createProviderClass",
        "myTimeoutProvider",
        "afterEach",
        "clearResolveCache",
        "describe",
        "createContextStore",
        "provider",
        "DataStore",
        "ctxStore",
        "provider",
        "provider",
        "provider",
        "provider",
        "provider",
        "provider",
        "provider",
        "provider",
        "provider",
        "runtimeContext",
        "k",
        "k",
        "ctxStore",
        "k",
        "test",
        "jest",
        "createContextStore",
        "expect",
        "getAllValues",
        "jest",
        "expect",
        "getAllValues",
        "jest",
        "expect",
        "getAllValues",
        "jest",
        "expect",
        "getAllValues",
        "jest",
        "expect",
        "getAllValues",
        "jest",
        "expect",
        "getAllValues",
        "jest",
        "expect",
        "getAllValues",
        "jest",
        "expect",
        "getAllValues",
        "jest",
        "test",
        "createContextStore",
        "expect",
        "getAllValues",
        "ctxStore",
        "expect",
        "getAllValues",
        "ctxStore",
        "expect",
        "getAllValues",
        "ctxStore",
        "expect",
        "getAllValues",
        "ctxStore",
        "expect",
        "getAllValues",
        "ctxStore",
        "expect",
        "getAllValues",
        "ctxStore",
        "expect",
        "getAllValues",
        "ctxStore",
        "expect",
        "getAllValues",
        "test",
        "createContextStore",
        "expect",
        "getAllValues",
        "ctxStore",
        "expect",
        "getAllValues",
        "describe",
        "test",
        "DataStore",
        "ctxStore",
        "runtimeContext",
        "ctxStore",
        "expect",
        "ctxStore",
        "expect",
        "ctxStore",
        "ctxStore",
        "expect",
        "ctxStore",
        "expect",
        "consoleWarn",
        "consoleWarn",
        "ctxStore",
        "expect",
        "ctxStore",
        "expect",
        "consoleWarn",
        "expect",
        "consoleWarn",
        "expect",
        "test",
        "DataStore",
        "tplStateStoreMap",
        "tplStateStoreId",
        "stateStore",
        "stateStore",
        "runtimeContext",
        "stateStore",
        "expect",
        "stateStore",
        "expect",
        "stateStore",
        "expect",
        "stateStore",
        "expect",
        "stateStore",
        "stateStore",
        "expect",
        "stateStore",
        "expect",
        "stateStore",
        "test",
        "consoleInfo",
        "DataStore",
        "ctxStore",
        "runtimeContext",
        "ctxStore",
        "expect",
        "ctxStore",
        "expect",
        "ctxStore",
        "expect",
        "myTimeoutProvider",
        "ctxStore",
        "ctxStore",
        "expect",
        "ctxStore",
        "expect",
        "myTimeoutProvider",
        "expect",
        "consoleInfo",
        "resolve",
        "setTimeout",
        "resolve",
        "expect",
        "ctxStore",
        "expect",
        "ctxStore",
        "expect",
        "consoleInfo",
        "expect",
        "consoleInfo",
        "expect",
        "consoleInfo",
        "expect",
        "consoleInfo",
        "expect",
        "consoleInfo",
        "ctxStore",
        "expect",
        "myTimeoutProvider",
        "expect",
        "consoleInfo",
        "expect",
        "consoleInfo",
        "expect",
        "consoleInfo",
        "consoleInfo",
        "test",
        "DataStore",
        "ctxStore",
        "runtimeContext",
        "ctxStore",
        "expect",
        "ctxStore",
        "test",
        "DataStore",
        "ctxStore",
        "expect",
        "ctxStore"
    ],
    "literals": [
        "\"@jest/globals\"",
        "\"@next-core/utils/storyboard\"",
        "\"../interfaces.js\"",
        "\"./DataStore.js\"",
        "\"./resolveData.js\"",
        "\"warn\"",
        "\"info\"",
        "string",
        "\"my-timeout-provider\"",
        "\"DataStore: resolve and wait\"",
        "\"my-timeout-provider\"",
        "\"CTX\"",
        "\"a\"",
        "\"False-A\"",
        "\"<% false %>\"",
        "\"a\"",
        "\"A\"",
        "\"<% true %>\"",
        "\"b\"",
        "\"<% 'False-B:' + CTX.a + ',' + CTX.x %>\"",
        "\"<% false %>\"",
        "\"b\"",
        "\"<% 'B:' + CTX.a + ',1' %>\"",
        "\"<% true %>\"",
        "\"c\"",
        "\"<% 'C:' + CTX.a + ',3' %>\"",
        "\"d\"",
        "\"<% 'D:' + CTX.b + ',' + CTX.c %>\"",
        "\"e\"",
        "\"E\"",
        "\"f\"",
        "\"<% 'F:' + CTX.e + ',5' %>\"",
        "\"x\"",
        "\"X\"",
        "\"a\"",
        "\"b\"",
        "\"c\"",
        "\"d\"",
        "\"e\"",
        "\"f\"",
        "\"x\"",
        "\"Resolve sequence\"",
        "\"X\"",
        "\"A\"",
        "\"X\"",
        "\"A\"",
        "\"E\"",
        "\"X\"",
        "\"A\"",
        "\"B:A,1\"",
        "\"E\"",
        "\"X\"",
        "\"A\"",
        "\"B:A,1\"",
        "\"E\"",
        "\"F:E,5\"",
        "\"X\"",
        "\"A\"",
        "\"B:A,1\"",
        "\"C:A,3\"",
        "\"E\"",
        "\"F:E,5\"",
        "\"X\"",
        "\"A\"",
        "\"B:A,1\"",
        "\"C:A,3\"",
        "\"D:B:A,1,C:A,3\"",
        "\"E\"",
        "\"F:E,5\"",
        "\"X\"",
        "\"Wait for specific context\"",
        "\"x\"",
        "\"X\"",
        "\"a\"",
        "\"A\"",
        "\"X\"",
        "\"e\"",
        "\"A\"",
        "\"E\"",
        "\"X\"",
        "\"b\"",
        "\"A\"",
        "\"B:A,1\"",
        "\"E\"",
        "\"X\"",
        "\"f\"",
        "\"A\"",
        "\"B:A,1\"",
        "\"E\"",
        "\"F:E,5\"",
        "\"X\"",
        "\"c\"",
        "\"A\"",
        "\"B:A,1\"",
        "\"C:A,3\"",
        "\"E\"",
        "\"F:E,5\"",
        "\"X\"",
        "\"d\"",
        "\"A\"",
        "\"B:A,1\"",
        "\"C:A,3\"",
        "\"D:B:A,1,C:A,3\"",
        "\"E\"",
        "\"F:E,5\"",
        "\"X\"",
        "\"Wait for all\"",
        "\"A\"",
        "\"B:A,1\"",
        "\"C:A,3\"",
        "\"D:B:A,1,C:A,3\"",
        "\"E\"",
        "\"F:E,5\"",
        "\"X\"",
        "\"DataStore\"",
        "\"context.assign\"",
        "\"CTX\"",
        "\"object\"",
        "\"good\"",
        "\"primitive\"",
        "\"any\"",
        "\"object\"",
        "\"good\"",
        "\"primitive\"",
        "\"any\"",
        "\"object\"",
        "\"assign\"",
        "\"object\"",
        "\"good\"",
        "\"primitive\"",
        "\"assign\"",
        "\"primitive\"",
        "\"Non-object\"",
        "\"state and onChange\"",
        "\"tpl-state-1\"",
        "string",
        "\"STATE\"",
        "\"STATE\"",
        "\"a\"",
        "\"state.update\"",
        "\"b\"",
        "\"<% EVENT.detail + 40 %>\"",
        "\"b\"",
        "\"c\"",
        "\"d\"",
        "\"a\"",
        "\"b\"",
        "\"c\"",
        "\"d\"",
        "\"a\"",
        "\"replace\"",
        "\"a\"",
        "\"b\"",
        "\"lazy, load and track\"",
        "\"CTX\"",
        "\"asyncValue\"",
        "\"my-timeout-provider\"",
        "\"lazily updated\"",
        "\"initial\"",
        "\"processedData\"",
        "\"<% `processed: ${CTX.asyncValue}` %>\"",
        "\"asyncValue\"",
        "\"initial\"",
        "\"processedData\"",
        "\"processed: initial\"",
        "\"asyncValue\"",
        "\"load\"",
        "\"console.info\"",
        "\"[1] success\"",
        "\"<% EVENT.detail %>\"",
        "\"console.info\"",
        "\"[1] finally\"",
        "\"<% EVENT.detail %>\"",
        "\"asyncValue\"",
        "\"load\"",
        "\"console.info\"",
        "\"[2] success\"",
        "\"<% EVENT.detail %>\"",
        "\"console.info\"",
        "\"[2] finally\"",
        "\"<% EVENT.detail %>\"",
        "\"asyncValue\"",
        "\"initial\"",
        "\"asyncValue\"",
        "\"lazily updated\"",
        "\"processedData\"",
        "\"processed: lazily updated\"",
        "\"[1] success\"",
        "\"lazily updated\"",
        "\"[1] finally\"",
        "\"[2] success\"",
        "\"lazily updated\"",
        "\"[2] finally\"",
        "\"asyncValue\"",
        "\"load\"",
        "\"console.info\"",
        "\"[3] success\"",
        "\"<% EVENT.detail %>\"",
        "\"console.info\"",
        "\"[3] finally\"",
        "\"<% EVENT.detail %>\"",
        "\"[3] success\"",
        "\"lazily updated\"",
        "\"[3] finally\"",
        "\"load context without resolve\"",
        "\"CTX\"",
        "\"a\"",
        "\"a\"",
        "\"load\"",
        "\"You can not load \"CTX.a\" which has no resolve\"",
        "\"update undefined context\"",
        "\"CTX\"",
        "\"notExisted\"",
        "\"oops\"",
        "\"replace\"",
        "\"CTX 'notExisted' is not defined\""
    ],
    "variables": [
        "consoleWarn",
        "consoleInfo",
        "myTimeoutProvider",
        "createContextStore",
        "ctxStore",
        "runtimeContext",
        "ctxStore",
        "runtimeContext",
        "tplStateStoreId",
        "tplStateStoreMap",
        "runtimeContext",
        "stateStore",
        "ctxStore",
        "runtimeContext",
        "ctxStore",
        "runtimeContext",
        "ctxStore"
    ],
    "comments": [
        "Dependency map:",
        "",
        "```",
        "d",
        "↙ ↘",
        "b′|b  c  f",
        "↙ ↘ ↓ ↙   ↓",
        "x  a′|a    e",
        "```",
        "",
        "Explain:",
        "- d depends on b(or b′) and c.",
        "- b′ depends on x and a′.",
        "- b depends on a(or a′).",
        "- c depends on a(or a′).",
        "- f depends on e.",
        "",
        "a′ and b′ will be ignored (by a falsy result of `if`).",
        "",
        "Resolve in waterfall:",
        "",
        "```",
        "0    100   200   300   400",
        "·     ·     ·     ·     ·",
        "a |====>",
        "b       |====>",
        "c       |==========>",
        "d                   |====>",
        "e |========>",
        "f           |====>",
        "x |==>",
        "```",
        "Trigger load twice.",
        "Will not load again if it is already LOADING.",
        "Will not load again if it is already LOADED."
    ],
    "docstrings": [],
    "functions": [
        "getAllValues"
    ],
    "classes": []
}