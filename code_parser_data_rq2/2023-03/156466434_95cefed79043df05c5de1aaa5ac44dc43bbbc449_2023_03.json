{
    "identifiers": [
        "com",
        "palantir",
        "cassandra",
        "db",
        "java",
        "io",
        "java",
        "net",
        "InetAddress",
        "java",
        "net",
        "UnknownHostException",
        "java",
        "nio",
        "ByteBuffer",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "com",
        "google",
        "common",
        "collect",
        "ImmutableMap",
        "org",
        "junit",
        "Before",
        "org",
        "junit",
        "BeforeClass",
        "org",
        "junit",
        "Test",
        "org",
        "junit",
        "runner",
        "RunWith",
        "org",
        "apache",
        "cassandra",
        "OrderedJUnit4ClassRunner",
        "org",
        "apache",
        "cassandra",
        "Util",
        "org",
        "apache",
        "cassandra",
        "config",
        "DatabaseDescriptor",
        "org",
        "apache",
        "cassandra",
        "config",
        "KSMetaData",
        "org",
        "apache",
        "cassandra",
        "config",
        "Schema",
        "org",
        "apache",
        "cassandra",
        "db",
        "ArrayBackedSortedColumns",
        "org",
        "apache",
        "cassandra",
        "db",
        "ColumnFamily",
        "org",
        "apache",
        "cassandra",
        "db",
        "Keyspace",
        "org",
        "apache",
        "cassandra",
        "db",
        "Mutation",
        "org",
        "apache",
        "cassandra",
        "db",
        "MutationVerbHandler",
        "org",
        "apache",
        "cassandra",
        "db",
        "Row",
        "org",
        "apache",
        "cassandra",
        "dht",
        "ByteOrderedPartitioner",
        "org",
        "apache",
        "cassandra",
        "exceptions",
        "ConfigurationException",
        "org",
        "apache",
        "cassandra",
        "locator",
        "IEndpointSnitch",
        "org",
        "apache",
        "cassandra",
        "locator",
        "NetworkTopologyStrategy",
        "org",
        "apache",
        "cassandra",
        "locator",
        "PropertyFileSnitch",
        "org",
        "apache",
        "cassandra",
        "locator",
        "TokenMetadata",
        "org",
        "apache",
        "cassandra",
        "net",
        "MessageIn",
        "org",
        "apache",
        "cassandra",
        "net",
        "MessagingService",
        "org",
        "apache",
        "cassandra",
        "service",
        "StorageService",
        "org",
        "apache",
        "cassandra",
        "SchemaLoader",
        "standardCFMD",
        "org",
        "mockito",
        "Mockito",
        "doNothing",
        "org",
        "mockito",
        "Mockito",
        "spy",
        "org",
        "mockito",
        "Mockito",
        "times",
        "org",
        "mockito",
        "Mockito",
        "verify",
        "RunWith",
        "KEYSPACE",
        "TABLE",
        "HANDLER",
        "KEY_OWNED_BY_LOCALHOST",
        "KEY_NOT_OWNED_BY_LOCALHOST",
        "BeforeClass",
        "DatabaseDescriptor",
        "setDaemonInitialized",
        "snitch",
        "DatabaseDescriptor",
        "setEndpointSnitch",
        "snitch",
        "Keyspace",
        "setInitialized",
        "Before",
        "setProperty",
        "metadata",
        "StorageService",
        "instance",
        "getTokenMetadata",
        "metadata",
        "clearUnsafe",
        "metadata",
        "updateNormalToken",
        "ByteOrderedPartitioner",
        "instance",
        "getTokenFactory",
        "fromString",
        "InetAddress",
        "getByName",
        "metadata",
        "updateNormalToken",
        "ByteOrderedPartitioner",
        "instance",
        "getTokenFactory",
        "fromString",
        "InetAddress",
        "getByName",
        "metadata",
        "updateNormalToken",
        "ByteOrderedPartitioner",
        "instance",
        "getTokenFactory",
        "fromString",
        "InetAddress",
        "getByName",
        "metadata",
        "updateNormalToken",
        "ByteOrderedPartitioner",
        "instance",
        "getTokenFactory",
        "fromString",
        "InetAddress",
        "getByName",
        "Keyspace",
        "clear",
        "KEYSPACE",
        "meta",
        "KSMetaData",
        "newKeyspace",
        "KEYSPACE",
        "ImmutableMap",
        "of",
        "Collections",
        "singleton",
        "standardCFMD",
        "KEYSPACE",
        "TABLE",
        "Schema",
        "instance",
        "setKeyspaceDefinition",
        "meta",
        "Test",
        "message",
        "getMutationMessageForKey",
        "KEY_OWNED_BY_LOCALHOST",
        "HANDLER",
        "doVerb",
        "message",
        "verify",
        "message",
        "payload",
        "apply",
        "Test",
        "expected",
        "message",
        "getMutationMessageForKey",
        "KEY_NOT_OWNED_BY_LOCALHOST",
        "HANDLER",
        "doVerb",
        "message",
        "verify",
        "message",
        "payload",
        "times",
        "apply",
        "key",
        "cf",
        "ArrayBackedSortedColumns",
        "factory",
        "create",
        "KEYSPACE",
        "TABLE",
        "cf",
        "addColumn",
        "Util",
        "column",
        "mutation",
        "spy",
        "KEYSPACE",
        "ByteBuffer",
        "wrap",
        "key",
        "cf",
        "doNothing",
        "when",
        "mutation",
        "apply",
        "MessageIn",
        "create",
        "InetAddress",
        "getByName",
        "mutation",
        "MessagingService",
        "Verb",
        "MUTATION",
        "MessagingService",
        "current_version"
    ],
    "literals": [
        "\"Keyspace1\"",
        "\"Standard1\"",
        "\"palantir_cassandra.verify_keys_on_write\"",
        "\"true\"",
        "\"A\"",
        "\"127.0.0.1\"",
        "\"C\"",
        "\"127.0.0.2\"",
        "\"B\"",
        "\"127.0.0.4\"",
        "\"D\"",
        "\"127.0.0.5\"",
        "\"DC1\"",
        "\"1\"",
        "\"DC2\"",
        "\"1\"",
        "\"c1\"",
        "\"v1\"",
        "\"127.0.0.2\""
    ],
    "variables": [],
    "comments": [
        "DC1",
        "DC2"
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "setUp",
        "before",
        "doVerb_appliesWriteWhenOwned",
        "doVerb_throwsWriteWhenNotOwned",
        "getMutationMessageForKey"
    ],
    "classes": [
        "MutationVerbHandlerTest"
    ]
}