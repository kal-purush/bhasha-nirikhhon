{
    "identifiers": [
        "redis",
        "os",
        "datetime",
        "evolved5g",
        "sdk",
        "LocationSubscriber",
        "QosAwareness",
        "ConnectionMonitor",
        "TSNManager",
        "os",
        "getenv",
        "os",
        "environ",
        "get",
        "os",
        "getenv",
        "os",
        "environ",
        "get",
        "os",
        "getenv",
        "os",
        "environ",
        "get",
        "os",
        "environ",
        "get",
        "TSNManager",
        "folder_path_for_certificates_and_capif_api_key",
        "folder_path_for_certificates_and_capif_api_key",
        "capif_host",
        "capif_host",
        "capif_https_port",
        "capif_https_port",
        "https",
        "tsn_host",
        "tsn_host",
        "tsn_port",
        "tsn_port",
        "tsn",
        "get_tsn_profiles",
        "len",
        "profiles",
        "profile",
        "profiles",
        "profile",
        "get_configuration_for_tsn_profile",
        "profile",
        "name",
        "profile_configuration",
        "get_profile_configuration_parameters",
        "tsn",
        "get_tsn_profiles",
        "profiles",
        "profile_to_apply",
        "get_configuration_for_tsn_profile",
        "tsn",
        "TSNNetappIdentifier",
        "netapp_name",
        "netapp_name",
        "tsn_netapp_identifier",
        "value",
        "profile_to_apply",
        "name",
        "profile_configuration",
        "get_profile_configuration_parameters",
        "netapp_name",
        "tsn",
        "apply_tsn_profile_to_netapp",
        "profile",
        "profile_to_apply",
        "tsn_netapp_identifier",
        "tsn_netapp_identifier",
        "clearance_token",
        "tsn_netapp_identifier",
        "clearance_token",
        "tsn_netapp_identifier",
        "tsn",
        "TSNNetappIdentifier",
        "clearance_token",
        "tsn",
        "clear_profile_for_tsn_netapp_identifier",
        "tsn_netapp_identifier",
        "clearance_token",
        "netapp_name",
        "redis",
        "Redis",
        "host",
        "REDIS_HOST",
        "port",
        "REDIS_PORT",
        "decode_responses",
        "input",
        "ans",
        "ans",
        "get_profiles",
        "e",
        "e",
        "args",
        "e",
        "input",
        "ans",
        "ans",
        "apply_tsn_profile",
        "e",
        "e",
        "args",
        "e",
        "tsn_netapp_id",
        "clear_token",
        "input",
        "ans",
        "ans",
        "clear_profile_configuration",
        "tsn_netapp_id",
        "clear_token",
        "e",
        "e",
        "args",
        "e"
    ],
    "literals": [
        "'REDIS_HOST'",
        "'REDIS_PORT'",
        "'TSN_IP'",
        "'TSN_PORT'",
        "'CAPIF_HOSTNAME'",
        "'CAPIF_PORT_HTTPS'",
        "'PATH_TO_CERTS'",
        "\"MyNetapp1\"",
        "f\"Found {len(profiles)} profiles\"",
        "f\"Profile {profile.name} with configuration parameters {profile_configuration.get_profile_configuration_parameters()}\"",
        "f\"Generated TSN traffic identifier for Netapp: {tsn_netapp_identifier.value}\"",
        "f\"Apply {profile_to_apply.name} with configuration parameters\"",
        "f\"{profile_configuration.get_profile_configuration_parameters()} to NetApp {netapp_name} \"",
        "f\"The profile configuration has been applied to the netapp. The returned token {clearance_token} can be used \"",
        "f\"to reset the configuration\"",
        "f\"Cleared TSN configuration from {netapp_name}\"",
        "'__main__'",
        "\"Do you want to test TSN API get_profiles? (Y/n) \"",
        "\"Y\"",
        "'y'",
        "\"Do you want to apply TSN profile to netapp? (Y/n) \"",
        "\"Y\"",
        "'y'",
        "\"Do you want to clear TSN profile? (Y/n) \"",
        "\"Y\"",
        "'y'"
    ],
    "variables": [
        "REDIS_HOST",
        "REDIS_PORT",
        "tsn_host",
        "tsn_port",
        "capif_host",
        "capif_https_port",
        "folder_path_for_certificates_and_capif_api_key",
        "netapp_ids_tokens",
        "netapp_name",
        "tsn",
        "profiles",
        "profile_configuration",
        "profiles",
        "profile_to_apply",
        "profile_configuration",
        "tsn_netapp_identifier",
        "clearance_token",
        "r",
        "tsn_netapp_id",
        "clear_token",
        "profile_conf",
        "ans",
        "status_code",
        "ans",
        "tsn_netapp_id",
        "clear_token",
        "status_code",
        "ans",
        "status_code"
    ],
    "comments": [
        "Get environment variables",
        "Stores the clearance token of each profile application to a NetApp",
        "The name of our NetApp",
        "Initialization of the TNSManager",
        "For demonstration purposes,  let's select the last profile to apply,",
        "Let's create an TSN identifier for this Net App.",
        "This tsn_netapp_identifier can be used in two scenarios",
        "a) When you want to apply a profile configuration for your net app",
        "b) When you want to clear a profile configuration for your net app",
        "When we apply a profile we get back an identifier and a clearance token.",
        "These can be used to clear the existing configuration"
    ],
    "docstrings": [
        "\"\"\"\n    Demonstrates how to apply a TSN profile configuration to a NetApp\n    \"\"\"",
        "\"\"\"\n    Demonstrates how to clear a previously applied TSN profile configuration from a NetApp\n    \"\"\""
    ],
    "functions": [
        "get_profiles",
        "apply_tsn_profile",
        "clear_profile_configuration"
    ],
    "classes": []
}