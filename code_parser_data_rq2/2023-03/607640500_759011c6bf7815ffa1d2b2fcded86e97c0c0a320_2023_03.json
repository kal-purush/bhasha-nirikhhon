{
    "identifiers": [
        "pandas",
        "pd",
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "seaborn",
        "sb",
        "sklearn",
        "preprocessing",
        "sklearn",
        "preprocessing",
        "StandardScaler",
        "sklearn",
        "decomposition",
        "PCA",
        "IncrementalPCA",
        "sklearn",
        "discriminant_analysis",
        "LinearDiscriminantAnalysis",
        "prince",
        "sklearn",
        "preprocessing",
        "OneHotEncoder",
        "LabelEncoder",
        "scipy",
        "stats",
        "datetime",
        "datetime",
        "datetime",
        "sb",
        "pd",
        "read_csv",
        "df",
        "drop",
        "axis",
        "inplace",
        "df",
        "info",
        "df",
        "head",
        "df",
        "describe",
        "df",
        "unique",
        "df",
        "unique",
        "df",
        "unique",
        "df",
        "replace",
        "df",
        "replace",
        "df",
        "replace",
        "df",
        "replace",
        "df",
        "replace",
        "df",
        "replace",
        "df",
        "replace",
        "np",
        "nan",
        "df",
        "isna",
        "sum",
        "df",
        "dropna",
        "df",
        "select_dtypes",
        "include",
        "copy",
        "obj_df",
        "apply",
        "LabelEncoder",
        "fit_transform",
        "astype",
        "df",
        "join",
        "obj_df",
        "df",
        "df",
        "drop",
        "axis",
        "inplace",
        "df",
        "df",
        "std",
        "pd",
        "crosstab",
        "df",
        "df",
        "pd",
        "crosstab",
        "df",
        "df",
        "pd",
        "crosstab",
        "df",
        "df",
        "df",
        "value_counts",
        "df",
        "value_counts",
        "df",
        "value_counts",
        "df",
        "info",
        "stats",
        "norm",
        "rvs",
        "loc",
        "plt",
        "figure",
        "plt",
        "subplot2grid",
        "plt",
        "pie",
        "data",
        "df",
        "x",
        "df",
        "value_counts",
        "labels",
        "df",
        "unique",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "plt",
        "pie",
        "data",
        "df",
        "x",
        "df",
        "value_counts",
        "labels",
        "df",
        "unique",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "plt",
        "pie",
        "data",
        "df",
        "x",
        "df",
        "value_counts",
        "labels",
        "df",
        "unique",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "plt",
        "bar",
        "data",
        "df",
        "x",
        "df",
        "unique",
        "height",
        "df",
        "value_counts",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "plt",
        "bar",
        "data",
        "df",
        "x",
        "df",
        "unique",
        "height",
        "df",
        "value_counts",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "plt",
        "bar",
        "data",
        "df",
        "x",
        "df",
        "unique",
        "height",
        "df",
        "value_counts",
        "plt",
        "title",
        "plt",
        "figure",
        "plt",
        "subplot2grid",
        "plt",
        "boxplot",
        "data",
        "df",
        "x",
        "df",
        "vert",
        "whis",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "plt",
        "boxplot",
        "data",
        "df",
        "x",
        "df",
        "vert",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "plt",
        "boxplot",
        "data",
        "df",
        "x",
        "df",
        "vert",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "plt",
        "boxplot",
        "data",
        "df",
        "x",
        "df",
        "vert",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "sb",
        "histplot",
        "data",
        "df",
        "x",
        "kde",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "sb",
        "histplot",
        "data",
        "df",
        "x",
        "kde",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "sb",
        "histplot",
        "data",
        "df",
        "x",
        "kde",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "plt",
        "boxplot",
        "data",
        "df",
        "x",
        "df",
        "vert",
        "whis",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "plt",
        "boxplot",
        "data",
        "df",
        "x",
        "df",
        "vert",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "plt",
        "boxplot",
        "data",
        "df",
        "x",
        "df",
        "vert",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "sb",
        "histplot",
        "data",
        "df",
        "x",
        "kde",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "sb",
        "histplot",
        "data",
        "df",
        "x",
        "kde",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "sb",
        "histplot",
        "data",
        "df",
        "x",
        "kde",
        "plt",
        "title",
        "plt",
        "figure",
        "plt",
        "subplot2grid",
        "sb",
        "scatterplot",
        "df",
        "x",
        "y",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "sb",
        "scatterplot",
        "df",
        "x",
        "y",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "sb",
        "scatterplot",
        "df",
        "x",
        "y",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "sb",
        "scatterplot",
        "df",
        "x",
        "y",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "sb",
        "scatterplot",
        "df",
        "x",
        "y",
        "plt",
        "title",
        "plt",
        "subplot2grid",
        "sb",
        "scatterplot",
        "df",
        "x",
        "y",
        "plt",
        "title",
        "plt",
        "style",
        "use",
        "StandardScaler",
        "scaler",
        "fit_transform",
        "df",
        "select_dtypes",
        "include",
        "copy",
        "PCA",
        "n_components",
        "random_state",
        "whiten",
        "IncrementalPCA",
        "n_components",
        "whiten",
        "pca_7",
        "fit_transform",
        "x_scaled",
        "ipca_7",
        "fit_transform",
        "x_scaled",
        "np",
        "savetxt",
        "pca_7",
        "explained_variance_ratio_",
        "delimiter",
        "fmt",
        "np",
        "savetxt",
        "ipca_7",
        "explained_variance_ratio_",
        "delimiter",
        "fmt",
        "pca_7",
        "explained_variance_ratio_",
        "ipca_7",
        "explained_variance_ratio_",
        "prince",
        "MCA",
        "check_input",
        "random_state",
        "engine",
        "mca",
        "fit",
        "df",
        "select_dtypes",
        "include",
        "copy",
        "mca",
        "plot_coordinates",
        "df",
        "select_dtypes",
        "include",
        "copy",
        "ax",
        "mca",
        "eigenvalues_",
        "mca",
        "total_inertia_",
        "mca",
        "explained_inertia_",
        "OneHotEncoder",
        "drop",
        "df",
        "select_dtypes",
        "include",
        "pd",
        "get_dummies",
        "obj_df",
        "drop_first",
        "astype",
        "df",
        "join",
        "obj_df",
        "df",
        "drop",
        "axis",
        "inplace",
        "prince",
        "CA",
        "check_input",
        "random_state",
        "engine",
        "ca",
        "fit",
        "dfs",
        "dfs",
        "select_dtypes",
        "include",
        "np",
        "number",
        "ge",
        "all",
        "ca",
        "eigenvalues_",
        "ca",
        "total_inertia_",
        "ca",
        "explained_inertia_",
        "dates",
        "dates",
        "df",
        "df",
        "ProductionYear",
        "df",
        "ProductionYear",
        "df",
        "df",
        "ProductionYear",
        "df",
        "ProductionYear",
        "np",
        "where",
        "df",
        "ProductionYear",
        "np",
        "where",
        "df",
        "ProductionYear",
        "df",
        "ProductionYear",
        "df",
        "ProductionYear",
        "df",
        "df",
        "Mileage",
        "df",
        "df",
        "columns",
        "drop",
        "df",
        "regex",
        "df",
        "df",
        "Price",
        "df",
        "drop_duplicates",
        "keep",
        "df",
        "drop_duplicates",
        "subset",
        "df",
        "columns",
        "difference",
        "keep",
        "pd",
        "to_datetime",
        "df",
        "dayfirst",
        "df",
        "info",
        "df",
        "dt",
        "year",
        "df",
        "ProductionYear",
        "df",
        "dt",
        "day",
        "df",
        "UsedYears",
        "df",
        "Mileage",
        "df",
        "UsedYears",
        "df",
        "Mileage",
        "df",
        "UsedDays",
        "sb",
        "heatmap",
        "df",
        "corr",
        "annot",
        "df",
        "join",
        "obj_df",
        "plt",
        "figure",
        "figsize",
        "sb",
        "heatmap",
        "dfs",
        "corr",
        "annot",
        "plt",
        "show",
        "df"
    ],
    "literals": [
        "'Car Price (2).csv'",
        "'ID'",
        "'company uniques : '",
        "'Company'",
        "'model uniques is :'",
        "'Model'",
        "'detail uniques is :'",
        "'Detail'",
        "'x-4'",
        "'C-4'",
        "'N-11'",
        "'M-11'",
        "'c-4'",
        "'C-4'",
        "'d-3'",
        "'D-3'",
        "'m-11'",
        "'M-11'",
        "'m-10'",
        "'M-10'",
        "'Nan'",
        "'number of nulls is :'",
        "'Company'",
        "'object'",
        "'Date_encoded'",
        "'Company_encoded'",
        "'Model_encoded'",
        "'Detail_encoded'",
        "'int64'",
        "'Date'",
        "'Date'",
        "'variance is :'",
        "'std is :'",
        "'Company'",
        "'Model'",
        "'Company'",
        "'Detail'",
        "'Detail'",
        "'Model'",
        "'Company'",
        "'Detail'",
        "'Model'",
        "'Company'",
        "'Company'",
        "'univariate - Company'",
        "'Model'",
        "'Model'",
        "'univariate - Model'",
        "'Detail'",
        "'Detail'",
        "'univariate - Detail'",
        "'Company'",
        "'Company'",
        "'univariate - Company'",
        "'Model'",
        "'Model'",
        "'univariate - Model'",
        "'Detail'",
        "'Detail'",
        "'univariate - Detail'",
        "'ProductionYear'",
        "'univariate - ProdYear'",
        "'Mileage'",
        "'univariate - Mileage'",
        "'BodyCondition'",
        "'univariate - BodyCondition'",
        "'Price'",
        "'univariate - Price'",
        "'Mileage'",
        "'univariate - Mileage'",
        "'BodyCondition'",
        "'univariate - BodyCondition'",
        "'Price'",
        "'univariate - Price'",
        "'Company_encoded'",
        "'univariate - Company_encoded'",
        "'Model_encoded'",
        "'univariate - Model_encoded'",
        "'Detail_encoded'",
        "'univariate - Detail_encoded'",
        "'Company_encoded'",
        "'univariate - Company_encoded'",
        "'Model_encoded'",
        "'univariate - Model_encoded'",
        "'Detail_encoded'",
        "'univariate - Detail_encoded'",
        "'ProductionYear'",
        "'Mileage'",
        "'bivariate - year-mile'",
        "'ProductionYear'",
        "'BodyCondition'",
        "'bivariate - year-body'",
        "'ProductionYear'",
        "'Price'",
        "'bivariate - year-price'",
        "'Mileage'",
        "'BodyCondition'",
        "'bivariate - mile-body'",
        "'Mileage'",
        "'Price'",
        "'bivariate - mile-price'",
        "'ProductionYear'",
        "'Price'",
        "'bivariate - body-price'",
        "'ggplot'",
        "'int64'",
        "'PCA.txt'",
        "','",
        "'%10.5f'",
        "'IPCA.txt'",
        "','",
        "'%10.5f'",
        "'pca is :'",
        "'ipca is :'",
        "'auto'",
        "'object'",
        "'object'",
        "'MCA eigenvalues : '",
        "'MCA total inertia : '",
        "'MCA explained inertia : '",
        "'first'",
        "'object'",
        "'int64'",
        "'Company'",
        "'Model'",
        "'Detail'",
        "'Date_encoded'",
        "'Company_encoded'",
        "'Model_encoded'",
        "'Detail_encoded'",
        "'auto'",
        "'CA eigenvalues : '",
        "'CA total inertia : '",
        "'CA explained inertia : '",
        "'Date'",
        "'is_miladi'",
        "'_encoded'",
        "'first'",
        "'Date'",
        "'first'",
        "'Date'",
        "'UsedYears'",
        "'Date'",
        "'UsedDays'",
        "'Date'",
        "'MilePerYear'",
        "'MilePerDay'"
    ],
    "variables": [
        "dt",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "obj_df",
        "obj_df",
        "columns",
        "obj_df",
        "df",
        "dates",
        "df",
        "rvs1",
        "fig",
        "ax1",
        "ax1",
        "ax1",
        "ax1",
        "ax1",
        "ax1",
        "fig",
        "ax2",
        "ax2",
        "ax2",
        "ax2",
        "ax2",
        "ax2",
        "ax2",
        "ax3",
        "ax3",
        "ax3",
        "ax3",
        "ax3",
        "ax3",
        "fig",
        "ax4",
        "ax4",
        "ax4",
        "ax4",
        "ax4",
        "ax4",
        "scaler",
        "x_scaled",
        "pca_7",
        "ipca_7",
        "mca",
        "ax",
        "ohe",
        "obj_df",
        "obj_df",
        "dfs",
        "dfs",
        "ca",
        "df",
        "df",
        "df",
        "df",
        "df",
        "ProductionYear",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "ax5",
        "dfs",
        "fig",
        "ax6"
    ],
    "comments": [
        "--------------! Library import !--------------#",
        "statistical test libraries",
        "--------------! dataset import !--------------#",
        "dataframe with no ID column",
        "--------------! basic descriptive statistics import !--------------#",
        "ProductionYear have unnormal mean",
        "Milage have negative values",
        "most of body conditions is 1",
        "we have lots of 0 in Price",
        "we have nan (NaN) and Nan in Company",
        "we have some uncapitalized models such m-10 , m-11 and a N-11 in Models",
        "we have some uncapitalized details such d-3 in Details",
        "--------------! merge some mistakes such as capitalize all characters and merge some columns !--------------#",
        "change this classes with few counts, This assumed as mistyping. 'x' & 'c' and 'm' & 'n' are nearby in keyboars",
        "--------------! dealing with missing values !--------------#",
        "missing values is only in 'Model'",
        "number of missing values in less than 5% of dataset so we delete it's rows",
        "--------------! create dummy variables for non-numeric values !--------------#",
        "--------------! create dummy variables for non-numeric values !--------------#",
        "Deal with time later",
        "#--------------! visualise dataset !--------------#",
        "#none graphical analysis",
        "###variaance and SD of numeric values",
        "cross tabluation of non-numerics",
        "value counts of each non-numerical columns",
        "independent test",
        "graphical analysis - univariate categorical",
        "#graphical analysis - univariate nominal",
        "#graphical analysis - univariate encoded-non-nominal",
        "#graphical analysis - bivariate nominal",
        "#graphical analysis - miltuvariate nominal",
        "standarding dataframe whit z-score standardization",
        "PCA test   ---> only numerical",
        "LDA test",
        "LDA = LinearDiscriminantAnalysis(store_covariance=True)",
        "LDA.fit_transform(x_scaled[:,0:4], None) ### It gives error and need debug",
        "np.savetxt('LDA.txt',LDA.explained_variance_ratio_, delimiter=',', fmt='%10.5f')",
        "BADA test",
        "MCA test  -----> only categorical",
        "creating dummy variables",
        "remove negative values",
        "axx = ca.plot_coordinates(",
        "df,",
        "ax = None",
        ")",
        "MFA test",
        "# groups = {",
        "#         'Expert #{}'.format(no+1): [c for c in df.columns if c.startswith('E{}'.format(no+1))]",
        "#         for no in range(43)",
        "#     }",
        "mfa = prince.MFA(",
        "groups = '',",
        "n_components = 7,",
        "copy = True,",
        "check_input=True,",
        "engine='auto',",
        "random_state=16",
        ")",
        "mfa = mfa.fit(df.values).toarray() ## it gives error",
        "print('mfa.row_coordinates is :' , mfa.row_coordinates(df))",
        "print('mfa.partial_row_coordinates is :' , mfa.partial_row_coordinates(df))",
        "print('mfa.eigenvalues is :' ,mfa.eigenvalues_)",
        "print('mfa.total_inertia is :' , mfa.total_inertia_)",
        "print('mfa.row_contributions is :' , mfa.row_contributions(df))",
        "print('mfa.column_correlations' , mfa.column_correlations(df))",
        "axxx = mfa.plot_row_coordinates(",
        "df,",
        "ax=None,",
        "show_points = True",
        ")",
        "ax.get_figure()",
        "plt.show()",
        "# #--------------! preprocess dataset !--------------#",
        "lets set ProductionYear wich has two types of dates",
        "delete mileage negative numbers",
        "delete 0 prices  =====> About 25 percent of dataset has zero price but as we can's predict them or find it's valid values we have to remove them",
        "remove duplicate data",
        "in all dataframe including dates has total duplicates",
        "somtimes It might be same data in different dates wich might cause skewness and reduce data accuracy and validation",
        "lets add some variables that might increase data accuracy",
        "create a column that shows difference between the date of sell or buy and the cars production year and we assume the cars produced",
        "at the first day of a production year and each year is 365 days"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}