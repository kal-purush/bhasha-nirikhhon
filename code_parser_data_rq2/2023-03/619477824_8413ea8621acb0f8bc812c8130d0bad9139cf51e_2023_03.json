{
    "identifiers": [
        "operate",
        "item",
        "item",
        "obj",
        "buttonName",
        "buttonName",
        "isNumber",
        "buttonName",
        "buttonName",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "buttonName",
        "obj",
        "buttonName",
        "obj",
        "obj",
        "obj",
        "buttonName",
        "buttonName",
        "buttonName",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "buttonName",
        "obj",
        "obj",
        "operate",
        "obj",
        "obj",
        "obj",
        "buttonName",
        "obj",
        "obj",
        "parseFloat",
        "obj",
        "obj",
        "obj",
        "parseFloat",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "buttonName",
        "obj",
        "obj",
        "obj",
        "obj",
        "buttonName",
        "obj",
        "buttonName",
        "operate",
        "obj",
        "obj",
        "obj",
        "buttonName",
        "obj",
        "buttonName",
        "obj",
        "buttonName"
    ],
    "literals": [
        "'./operate'",
        "'AC'",
        "'0'",
        "'0'",
        "'0'",
        "'0'",
        "'.'",
        "'.'",
        "${obj.next}.",
        "'0.'",
        "'.'",
        "${obj.total}.",
        "'0.'",
        "'='",
        "'+/-'"
    ],
    "variables": [],
    "comments": [
        "If there is an operation, update next",
        "If there is no operation, update next and clear the value",
        "'=' with no operation, nothing to do",
        "Button must be an operation",
        "When the user presses an operation button without having entered",
        "a number first, do nothing.",
        "if (!obj.next && !obj.total) {",
        "return {};",
        "}",
        "User pressed an operation after pressing '='",
        "User pressed an operation button and there is an existing operation",
        "no operation yet, but the user typed one",
        "The user hasn't typed a number yet, just save the operation",
        "save the operation and shift 'next' into 'total'"
    ],
    "docstrings": [
        "* Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:s      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc."
    ],
    "functions": [
        "isNumber",
        "calculate"
    ],
    "classes": []
}