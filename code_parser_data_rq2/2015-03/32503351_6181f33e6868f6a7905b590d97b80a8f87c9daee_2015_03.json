{
    "identifiers": [
        "Collections",
        "Generic",
        "Diagnostics",
        "Contracts",
        "IO",
        "Linq",
        "Text",
        "RegularExpressions",
        "Microsoft",
        "Build",
        "Construction",
        "Microsoft",
        "Build",
        "Framework",
        "Microsoft",
        "Build",
        "Utilities",
        "Zoltu",
        "Collections",
        "Generic",
        "NotNull",
        "Zoltu",
        "Linq",
        "NotNull",
        "Zoltu",
        "BuildTools",
        "TypeScript",
        "Required",
        "_projectFullPath",
        "_projectFullPath",
        "value",
        "ProjectRootElement",
        "Open",
        "ProjectFullPath",
        "project",
        "NullReferenceException",
        "project",
        "DirectoryPath",
        "projectDirectoryPath",
        "NullReferenceException",
        "Path",
        "Combine",
        "project",
        "DirectoryPath",
        "Directory",
        "CreateDirectory",
        "librariesDirectory",
        "GetReferencedProjects",
        "project",
        "NotNullToNull",
        "SelectMany",
        "GetTypeScriptItems",
        "x",
        "NotNullToNull",
        "GetTypeScriptFileFullPath",
        "Skip",
        "NotNull",
        "typeScriptFullPath",
        "typeScriptFullPaths",
        "Path",
        "GetDirectoryName",
        "typeScriptFullPath",
        "Contract",
        "Assume",
        "IsNullOrEmpty",
        "sourceDirectoryPath",
        "Path",
        "GetFileNameWithoutExtension",
        "typeScriptFullPath",
        "Contract",
        "Assume",
        "IsNullOrEmpty",
        "sourceFileName",
        "CopyFile",
        "sourceDirectoryPath",
        "sourceFileName",
        "librariesDirectory",
        "CopyFile",
        "sourceDirectoryPath",
        "sourceFileName",
        "librariesDirectory",
        "CopyFile",
        "sourceDirectoryPath",
        "sourceFileName",
        "librariesDirectory",
        "CopyFile",
        "sourceDirectoryPath",
        "sourceFileName",
        "librariesDirectory",
        "UpdateSourceMap",
        "sourceFileName",
        "jsMapFilePath",
        "tsSourceFilePath",
        "exception",
        "Log",
        "LogErrorFromException",
        "exception",
        "INotNullEnumerable",
        "ProjectRootElement",
        "ProjectRootElement",
        "parentProject",
        "Contract",
        "Requires",
        "parentProject",
        "Contract",
        "Ensures",
        "Contract",
        "Result",
        "INotNullEnumerable",
        "ProjectRootElement",
        "parentProject",
        "DirectoryPath",
        "parentProject",
        "Items",
        "NotNull",
        "Where",
        "item",
        "ItemType",
        "Select",
        "referencedProject",
        "Include",
        "Select",
        "Path",
        "Combine",
        "projectRootDirectory",
        "referencedProjectRelativePath",
        "Select",
        "ProjectRootElement",
        "Open",
        "referencedProjectFullPath",
        "SelectMany",
        "GetReferencedProjects",
        "parentProject",
        "NotNull",
        "Concat",
        "referencedProjects",
        "INotNullEnumerable",
        "ProjectItemElement",
        "ProjectRootElement",
        "project",
        "Contract",
        "Requires",
        "project",
        "Contract",
        "Ensures",
        "Contract",
        "Result",
        "INotNullEnumerable",
        "ProjectItemElement",
        "project",
        "Items",
        "NotNull",
        "Where",
        "item",
        "ItemType",
        "ProjectRootElement",
        "project",
        "ProjectItemElement",
        "typeScriptItem",
        "Contract",
        "Requires",
        "project",
        "Contract",
        "Requires",
        "typeScriptItem",
        "Contract",
        "Ensures",
        "Contract",
        "Result",
        "Contract",
        "Assume",
        "project",
        "DirectoryPath",
        "Contract",
        "Assume",
        "typeScriptItem",
        "Include",
        "Path",
        "Combine",
        "project",
        "DirectoryPath",
        "typeScriptItem",
        "Include",
        "sourceDirectoryPath",
        "sourceFileName",
        "destinationDirectory",
        "oldExtension",
        "newExtension",
        "Contract",
        "Requires",
        "sourceDirectoryPath",
        "Contract",
        "Requires",
        "IsNullOrEmpty",
        "sourceFileName",
        "Contract",
        "Requires",
        "destinationDirectory",
        "Contract",
        "Requires",
        "oldExtension",
        "Contract",
        "Requires",
        "newExtension",
        "Contract",
        "Ensures",
        "Contract",
        "Result",
        "sourceFileName",
        "oldExtension",
        "sourceFileName",
        "newExtension",
        "Path",
        "Combine",
        "sourceDirectoryPath",
        "sourceFileNameAndExtension",
        "Contract",
        "Assume",
        "IsNullOrEmpty",
        "sourceFilePath",
        "Path",
        "Combine",
        "destinationDirectory",
        "destinationFileNameAndExtension",
        "Contract",
        "Assume",
        "IsNullOrEmpty",
        "destinationFilePath",
        "File",
        "Copy",
        "sourceFilePath",
        "destinationFilePath",
        "destinationFilePath",
        "tsSourceFileName",
        "jsMapPath",
        "tsSourcePath",
        "Contract",
        "Requires",
        "tsSourceFileName",
        "Contract",
        "Requires",
        "jsMapPath",
        "Contract",
        "Requires",
        "tsSourcePath",
        "Contract",
        "Assume",
        "IsNullOrEmpty",
        "jsMapPath",
        "File",
        "ReadAllText",
        "jsMapPath",
        "Regex",
        "pattern",
        "regex",
        "Replace",
        "jsMapContents",
        "replacement",
        "File",
        "WriteAllText",
        "jsMapPath",
        "newJsMapContents"
    ],
    "literals": [
        "\"project\"",
        "\"projectDirectoryPath\"",
        "\"libraries\"",
        "\".d.ts\"",
        "\".d.ts\"",
        "\".js\"",
        "\".js\"",
        "\".ts\"",
        "\".ts.source\"",
        "\".js.map\"",
        "\".js.map\"",
        "\"ProjectReference\"",
        "\"TypeScriptCompile\""
    ],
    "variables": [
        "ProjectFullPath",
        "_projectFullPath",
        "project",
        "projectDirectoryPath",
        "librariesDirectory",
        "typeScriptFullPaths",
        "sourceDirectoryPath",
        "sourceFileName",
        "tsSourceFilePath",
        "jsMapFilePath",
        "projectRootDirectory",
        "referencedProjects",
        "sourceFileNameAndExtension",
        "destinationFileNameAndExtension",
        "sourceFilePath",
        "destinationFilePath",
        "jsMapContents",
        "pattern",
        "replacement",
        "regex",
        "newJsMapContents"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "Execute",
        "GetReferencedProjects",
        "GetTypeScriptItems",
        "GetTypeScriptFileFullPath",
        "CopyFile",
        "UpdateSourceMap"
    ],
    "classes": [
        "FromReferencesTask"
    ]
}