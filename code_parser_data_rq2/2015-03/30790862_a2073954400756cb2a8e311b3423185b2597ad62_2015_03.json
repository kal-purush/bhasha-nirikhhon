{
    "identifiers": [
        "time",
        "sys",
        "threading",
        "sys",
        "path",
        "append",
        "cflib",
        "cfclient",
        "utils",
        "logconfigreader",
        "LogConfig",
        "cflib",
        "crazyflie",
        "Crazyflie",
        "threading",
        "Timer",
        "logging",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "ERROR",
        "UserInput",
        "getKey",
        "link_uri",
        "Crazyflie",
        "_cf",
        "connected",
        "add_callback",
        "_connected",
        "_cf",
        "disconnected",
        "add_callback",
        "_disconnected",
        "_cf",
        "connection_failed",
        "add_callback",
        "_connection_failed",
        "_cf",
        "connection_lost",
        "add_callback",
        "_connection_lost",
        "_cf",
        "open_link",
        "link_uri",
        "link_uri",
        "link_uri",
        "target",
        "_ControlRun",
        "start",
        "link_uri",
        "msg",
        "link_uri",
        "msg",
        "link_uri",
        "msg",
        "link_uri",
        "msg",
        "link_uri",
        "link_uri",
        "_SetInitialState",
        "_SetCalibratedState",
        "_SetGetData",
        "_ControlLoop",
        "_Kill",
        "thrust",
        "thrustmin",
        "_GetState",
        "_PrintState",
        "_SendState",
        "abs",
        "roll_Real",
        "abs",
        "pitch_Real",
        "getKey",
        "_Kill",
        "thrust",
        "thrustmax",
        "thrust",
        "thrust_step",
        "thrust_mult",
        "Stabilize",
        "roll_Real",
        "roll",
        "roll",
        "roll_Real",
        "roll",
        "roll",
        "pitch_Real",
        "pitch",
        "roll",
        "pitch_Real",
        "pitch",
        "pitch",
        "_cf",
        "commander",
        "send_setpoint",
        "roll",
        "pitch",
        "yawrate",
        "thrust",
        "time",
        "sleep",
        "PH",
        "round",
        "thrust",
        "PH",
        "round",
        "roll",
        "PH",
        "round",
        "pitch",
        "PH",
        "round",
        "yawrate",
        "LogConfig",
        "name",
        "period_in_ms",
        "_lg_stab",
        "add_variable",
        "_lg_stab",
        "add_variable",
        "_lg_stab",
        "add_variable",
        "_cf",
        "log",
        "add_config",
        "_lg_stab",
        "_lg_stab",
        "valid",
        "_lg_stab",
        "data_received_cb",
        "add_callback",
        "_stab_log_data",
        "_lg_stab",
        "error_cb",
        "add_callback",
        "_stab_log_error",
        "_lg_stab",
        "start",
        "Timer",
        "_cf",
        "close_link",
        "t",
        "start",
        "logconf",
        "msg",
        "logconf",
        "name",
        "msg",
        "timestamp",
        "data",
        "logconf",
        "data",
        "data",
        "data",
        "data",
        "_cf",
        "commander",
        "send_setpoint",
        "time",
        "sleep",
        "_cf",
        "close_link",
        "cflib",
        "crtp",
        "init_drivers",
        "enable_debug_driver",
        "cflib",
        "crtp",
        "scan_interfaces",
        "i",
        "available",
        "PH",
        "i",
        "len",
        "available",
        "CrazyflieControl",
        "available"
    ],
    "literals": [
        "\"../lib\"",
        "\" \"",
        "\"Connecting to %s\"",
        "\"Connection to %s failed: %s\"",
        "\"Connection to %s lost: %s\"",
        "\"Disconnected from %s\"",
        "\"Escape\"",
        "\"-\"",
        "\"Set Data:\"",
        "\"Thrust: \"",
        "\"Roll:   \"",
        "\"Pitch:  \"",
        "\"Yaw:    \"",
        "\"Stabilizer\"",
        "\"stabilizer.roll\"",
        "\"float\"",
        "\"stabilizer.pitch\"",
        "\"float\"",
        "\"stabilizer.yaw\"",
        "\"float\"",
        "\"Could not add logconfig since some variables are not in TOC\"",
        "\"Error when logging %s: %s\"",
        "'stabilizer.roll'",
        "'stabilizer.pitch'",
        "'stabilizer.yaw'",
        "\">>>Killing Drone<<<\"",
        "'__main__'",
        "\"Scanning interfaces for Crazyflies...\"",
        "\"Crazyflies found:\"",
        "\"No Crazyflies found, cannot run example\""
    ],
    "variables": [
        "PH",
        "_cf",
        "thrust_mult",
        "thrust_step",
        "thrust",
        "thrustmin",
        "thrustmax",
        "pitch",
        "roll",
        "yawrate",
        "roll_Real",
        "pitch_Real",
        "yaw_Real",
        "pitch",
        "roll",
        "thrust_mult",
        "Stabilize",
        "_lg_stab",
        "t",
        "data",
        "roll_Real",
        "pitch_Real",
        "yaw_Real",
        "available",
        "le"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "",
        "||          ____  _ __",
        "+------+      / __ )(_) /_______________ _____  ___",
        "| 0xBC |     / __  / / __/ ___/ ___/ __ `/_  / / _ \\",
        "+------+    / /_/ / / /_/ /__/ /  / /_/ / / /_/  __/",
        "||  ||    /_____/_/\\__/\\___/_/   \\__,_/ /___/\\___/",
        "",
        "Copyright (C) 2014 Bitcraze AB",
        "",
        "Crazyflie Nano Quadcopter Client",
        "",
        "This program is free software; you can redistribute it and/or",
        "modify it under the terms of the GNU General Public License",
        "as published by the Free Software Foundation; either version 2",
        "of the License, or (at your option) any later version.",
        "",
        "This program is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "GNU General Public License for more details.",
        "You should have received a copy of the GNU General Public License",
        "along with this program; if not, write to the Free Software",
        "Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,",
        "MA  02110-1301, USA.",
        "FIXME: Has to be launched from within the example folder",
        "Start a separate thread to do the motor test.",
        "Do not hijack the calling thread!",
        "250#500",
        "Lift-off at approx. 45000",
        "48e3#45e3#35e3#30e3#20e3",
        "50e3#45e3#40e3#38e3#35e3#3e30#45e3#25e3",
        "Positive: Front || Negative: Back",
        "38#35#32#28#-28",
        "Positive: Right || Negative: Left",
        "-20#-18#-15#-10#-2",
        "Climb & Decent",
        "Stabilize",
        "The definition of the logconfig can be made before connecting",
        "Adding the configuration cannot be done until a Crazyflie is",
        "connected, since we need to check that the variables we",
        "would like to log are in the TOC.",
        "This callback will receive the data",
        "This callback will be called on errors",
        "Start the logging",
        "Start a timer to disconnect in 10s",
        "print \"[%d][%s]: %s\" % (timestamp, logconf.name, data)",
        "print \"-\"*30",
        "print \"Received Data:\"",
        "print PH+\"Roll:  \",data['stabilizer.roll']",
        "print PH+\"Pitch: \",data['stabilizer.pitch']",
        "print PH+\"Yaw:   \",data['stabilizer.yaw']",
        "Make sure that the last packet leaves before the link is closed",
        "since the message queue is not flushed before closing",
        "Initialize the low-level drivers (don't list the debug drivers)",
        "Scan for Crazyflies and use the first one found"
    ],
    "docstrings": [
        "\"\"\"\nSimple example that connects to the first Crazyflie found, ramps up/down\nthe motors and disconnects.\n\"\"\"",
        "\"\"\"\n    Class that connects to a Crazyflie and controls it until disconnection\n    \"\"\"",
        "\"\"\" Initialize and run the example with the specified link_uri \"\"\"",
        "\"\"\" This callback is called form the Crazyflie API when a Crazyflie\n        has been connected and the TOCs have been downloaded.\"\"\"",
        "\"\"\"Callback when connection initial connection fails (i.e no Crazyflie\n        at the speficied address)\"\"\"",
        "\"\"\"Callback when disconnected after a connection has been made (i.e\n        Crazyflie moves out of range)\"\"\"",
        "\"\"\"Callback when the Crazyflie is disconnected (called in all cases)\"\"\"",
        "\"\"\"Callback from the log API when an error occurs\"\"\"",
        "\"\"\"Callback froma the log API when data arrives\"\"\""
    ],
    "functions": [
        "_connected",
        "_connection_failed",
        "_connection_lost",
        "_disconnected",
        "_ControlRun",
        "_ControlLoop",
        "_SetInitialState",
        "_SetCalibratedState",
        "_GetState",
        "_SendState",
        "_PrintState",
        "_SetGetData",
        "_stab_log_error",
        "_stab_log_data",
        "_Kill"
    ],
    "classes": [
        "CrazyflieControl"
    ]
}