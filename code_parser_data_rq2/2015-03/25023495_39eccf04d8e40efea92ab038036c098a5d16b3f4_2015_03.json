{
    "identifiers": [
        "com",
        "ryg",
        "utils",
        "android",
        "annotation",
        "SuppressLint",
        "android",
        "content",
        "Context",
        "android",
        "util",
        "Log",
        "java",
        "io",
        "BufferedReader",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileNotFoundException",
        "java",
        "io",
        "FileOutputStream",
        "java",
        "io",
        "FileReader",
        "java",
        "io",
        "java",
        "io",
        "InputStream",
        "java",
        "util",
        "Enumeration",
        "java",
        "util",
        "concurrent",
        "ExecutorService",
        "java",
        "util",
        "concurrent",
        "Executors",
        "java",
        "util",
        "ZipEntry",
        "java",
        "util",
        "ZipFile",
        "TAG",
        "getSimpleName",
        "mSoExecutor",
        "Executors",
        "newCachedThreadPool",
        "sInstance",
        "sNativeLibDir",
        "sInstance",
        "fr",
        "br",
        "fr",
        "text",
        "br",
        "readLine",
        "br",
        "close",
        "array",
        "text",
        "split",
        "array",
        "length",
        "array",
        "e",
        "e",
        "printStackTrace",
        "e",
        "e",
        "printStackTrace",
        "SuppressLint",
        "cpuName",
        "cpuArchitect",
        "DLConstants",
        "CPU_ARMEABI",
        "cpuName",
        "toLowerCase",
        "contains",
        "cpuArchitect",
        "DLConstants",
        "CPU_ARMEABI",
        "cpuName",
        "toLowerCase",
        "contains",
        "cpuArchitect",
        "DLConstants",
        "CPU_X86",
        "cpuName",
        "toLowerCase",
        "contains",
        "cpuArchitect",
        "DLConstants",
        "CPU_MIPS",
        "cpuArchitect",
        "context",
        "dexPath",
        "nativeLibDir",
        "cpuName",
        "getCpuName",
        "cpuArchitect",
        "getCpuArch",
        "cpuName",
        "sNativeLibDir",
        "nativeLibDir",
        "Log",
        "d",
        "TAG",
        "cpuArchitect",
        "start",
        "currentTimeMillis",
        "dexPath",
        "entries",
        "entries",
        "entries",
        "hasMoreElements",
        "ze",
        "entries",
        "nextElement",
        "ze",
        "isDirectory",
        "zipEntryName",
        "ze",
        "getName",
        "zipEntryName",
        "endsWith",
        "zipEntryName",
        "contains",
        "cpuArchitect",
        "lastModify",
        "ze",
        "getTime",
        "lastModify",
        "DLConfigs",
        "getSoLastModifiedTime",
        "context",
        "zipEntryName",
        "Log",
        "d",
        "TAG",
        "zipEntryName",
        "ins",
        "getInputStream",
        "ze",
        "mSoExecutor",
        "execute",
        "context",
        "ins",
        "zipEntryName",
        "lastModify",
        "close",
        "e",
        "e",
        "printStackTrace",
        "end",
        "currentTimeMillis",
        "Log",
        "d",
        "TAG",
        "end",
        "start",
        "mSoFileName",
        "mIns",
        "mZipEntryName",
        "mContext",
        "mLastModityTime",
        "context",
        "ins",
        "zipEntryName",
        "lastModify",
        "mIns",
        "ins",
        "mContext",
        "context",
        "mZipEntryName",
        "zipEntryName",
        "mSoFileName",
        "parseSoFileName",
        "zipEntryName",
        "mLastModityTime",
        "lastModify",
        "zipEntryName",
        "zipEntryName",
        "substring",
        "zipEntryName",
        "lastIndexOf",
        "fos",
        "fos",
        "sNativeLibDir",
        "mSoFileName",
        "buf",
        "len",
        "len",
        "mIns",
        "read",
        "buf",
        "fos",
        "write",
        "buf",
        "len",
        "Log",
        "e",
        "TAG",
        "mSoFileName",
        "fos",
        "flush",
        "e",
        "e",
        "printStackTrace",
        "DLUtils",
        "closeQuietly",
        "fos",
        "DLUtils",
        "closeQuietly",
        "mIns",
        "Override",
        "writeSoFile2LibDir",
        "DLConfigs",
        "setSoLastModifiedTime",
        "mContext",
        "mZipEntryName",
        "mLastModityTime",
        "Log",
        "d",
        "TAG",
        "mZipEntryName"
    ],
    "literals": [
        "\"\"",
        "\"/proc/cpuinfo\"",
        "\":\\\\s+\"",
        "\"DefaultLocale\"",
        "\"arm\"",
        "\"x86\"",
        "\"mips\"",
        "\"cpuArchitect: \"",
        "\".so\"",
        "\"skip copying, the so lib is exist and not change: \"",
        "\"### copy so time : \"",
        "\" ms\"",
        "\"/\"",
        "\"### copy so file : \"",
        "\"copy so lib success: \""
    ],
    "variables": [
        "mSoFileName",
        "mIns",
        "mZipEntryName",
        "mContext",
        "mLastModityTime"
    ],
    "comments": [
        "exist and no change"
    ],
    "docstrings": [
        "* The MIT License (MIT)\n *\n * Copyright (c) 2014-2015 Umeng, Inc\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.",
        "* So File executor",
        "* single instance of the SoLoader",
        "* app's lib dir",
        "* @return",
        "* get cpu name, according cpu type parse relevant so lib\n     * \n     * @return ARM、ARMV7、X86、MIPS",
        "* copy so lib to specify directory(/data/data/host_pack_name/pluginlib)\n     * \n     * @param dexPath plugin path\n     * @param cpuName cpuName CPU_X86,CPU_MIPS,CPU_ARMEABI",
        "* @author mrsimple"
    ],
    "functions": [
        "SoLibManager",
        "SoLibManager",
        "getSoLoader",
        "getCpuName",
        "getCpuArch",
        "copyPluginSoLib",
        "CopySoTask",
        "parseSoFileName",
        "writeSoFile2LibDir",
        "run"
    ],
    "classes": [
        "SoLibManager",
        "CopySoTask"
    ]
}