{
    "identifiers": [
        "Threading",
        "ComponentModel",
        "Linq",
        "Expressions",
        "SimpleMvvmToolkit",
        "TModel",
        "TResult",
        "TModel",
        "model",
        "Expression",
        "Func",
        "TModel",
        "TResult",
        "property",
        "PropertyChangedEventHandler",
        "propertyChanged",
        "IDispatcher",
        "dispatcher",
        "MemberExpression",
        "property",
        "Body",
        "Member",
        "Name",
        "InternalNotifyPropertyChanged",
        "propertyName",
        "model",
        "propertyChanged",
        "dispatcher",
        "TModel",
        "TResult",
        "Expression",
        "Func",
        "TModel",
        "TResult",
        "property",
        "sender",
        "PropertyChangedEventHandler",
        "propertyChanged",
        "IDispatcher",
        "dispatcher",
        "MemberExpression",
        "property",
        "Body",
        "Member",
        "Name",
        "InternalNotifyPropertyChanged",
        "propertyName",
        "sender",
        "propertyChanged",
        "dispatcher",
        "propertyName",
        "sender",
        "PropertyChangedEventHandler",
        "propertyChanged",
        "IDispatcher",
        "dispatcher",
        "propertyChanged",
        "dispatcher",
        "dispatcher",
        "CheckAccess",
        "propertyChanged",
        "sender",
        "PropertyChangedEventArgs",
        "propertyName",
        "dispatcher",
        "BeginInvoke",
        "propertyChanged",
        "sender",
        "PropertyChangedEventArgs",
        "propertyName"
    ],
    "literals": [],
    "variables": [
        "propertyName",
        "propertyName"
    ],
    "comments": [
        "Consolidated data binding helper methods",
        "</summary>",
        "Defined as an extension method for use by subclasses.",
        "Usage: this.NotifyPropertyChanged(m => m.PropertyName, propertyChanged);",
        "</summary>",
        "<typeparam name=\"TModel\">ViewModel or model property type</typeparam>",
        "<typeparam name=\"TResult\">Property result type</typeparam>",
        "<param name=\"model\">ViewModel or model</param>",
        "<param name=\"property\">ViewModel or model property</param>",
        "<param name=\"propertyChanged\">PropertyChanged event</param>",
        "<param name=\"dispatcher\">Dispatcher for marshalling call to UI thread</param>",
        "Convert expression to a property name",
        "Fire notify property changed event",
        "Fire PropertyChanged event for two-way data binding.",
        "</summary>",
        "<typeparam name=\"TModel\">ViewModel or model property type</typeparam>",
        "<typeparam name=\"TResult\">Property result type</typeparam>",
        "<param name=\"property\">ViewModel or model property</param>",
        "<param name=\"sender\">Instance of class firing the event</param>",
        "<param name=\"propertyChanged\">PropertyChanged event</param>",
        "<param name=\"dispatcher\">Dispatcher for marshalling call to UI thread</param>",
        "Convert expression to a property name",
        "Fire notify property changed event",
        "public static void InternalNotifyPropertyChanged(string propertyName,",
        "object sender, PropertyChangedEventHandler propertyChanged)",
        "{",
        "InternalNotifyPropertyChanged(propertyName, sender, propertyChanged,",
        "SyncContext.Current);",
        "}",
        "Fire PropertyChanged event for two-way data binding.",
        "</summary>",
        "<param name=\"propertyName\">ViewModel or model property</param>",
        "<param name=\"sender\">Instance of class firing the event</param>",
        "<param name=\"propertyChanged\">PropertyChanged event</param>",
        "<param name=\"dispatcher\">Dispatcher for marshalling call to UI thread</param>",
        "Fire the event on the UI thread"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "NotifyPropertyChanged",
        "NotifyPropertyChanged",
        "InternalNotifyPropertyChanged"
    ],
    "classes": [
        "BindingHelper"
    ]
}