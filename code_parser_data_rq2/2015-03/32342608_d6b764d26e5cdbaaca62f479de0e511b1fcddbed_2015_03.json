{
    "identifiers": [
        "i18n",
        "util",
        "server",
        "options",
        "next",
        "server",
        "options",
        "next",
        "util",
        "defaults",
        "options",
        "server",
        "i18n",
        "server",
        "key",
        "lng",
        "opts",
        "i18n",
        "key",
        "opts",
        "i18n",
        "i18nextOptions",
        "server",
        "request",
        "Hapi",
        "reply",
        "cookie",
        "request",
        "options",
        "cookie",
        "cookie",
        "i18n",
        "i18nextOptions",
        "cookie",
        "i18n",
        "request",
        "reply",
        "reply",
        "next",
        "register"
    ],
    "literals": [
        "'i18next'",
        "'util'",
        "string",
        "string",
        "'en'",
        "'en'",
        "'en'",
        "'i18n.getInstance'",
        "'i18n.translateWithCache'",
        "string",
        "string",
        "string",
        "'onPreHandler'",
        "string",
        "'i18next'",
        "'hapi-i18next'",
        "'0.0.1'"
    ],
    "variables": [
        "defaults",
        "register",
        "i18nextOptions",
        "translations",
        "cookie"
    ],
    "comments": [
        "<reference path=\"../typings/hapi/hapi.d.ts\" />",
        "<reference path=\"../typings/i18next//i18next.d.ts\" />"
    ],
    "docstrings": [
        "* i18n.getInstance\n\t * @description",
        "* i18n.translateWithCache\n\t * @description This method is a facade for i18next's bundled 't' method. We wrap it so that we can\n\t * pass an extra language parameter for Hapi server.method caching (so you can generate keys based on languages\n\t * and avoid cache pollution)"
    ],
    "functions": [],
    "classes": []
}