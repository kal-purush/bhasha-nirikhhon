{
    "identifiers": [
        "sys",
        "os",
        "pexpect",
        "socket",
        "math",
        "time",
        "select",
        "signal",
        "errno",
        "sys",
        "path",
        "insert",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "realpath",
        "util",
        "atexit",
        "pymavlink",
        "fgFDM",
        "control_state",
        "addrstr",
        "addrstr",
        "split",
        "a",
        "a",
        "buf",
        "ros_out",
        "unpack",
        "buf",
        "control",
        "control",
        "wind",
        "speed",
        "direction",
        "turbulance",
        "pwm",
        "pwm",
        "pwm",
        "opts",
        "revthr",
        "throttle",
        "pwm",
        "opts",
        "elevon",
        "aileron",
        "elevator",
        "ch2",
        "ch1",
        "ch2",
        "ch1",
        "opts",
        "vtail",
        "elevator",
        "rudder",
        "ch2",
        "ch1",
        "ch2",
        "ch1",
        "aileron",
        "sitl_state",
        "aileron",
        "fdm_ctrls",
        "pwm",
        "aileron",
        "elevator",
        "sitl_state",
        "elevator",
        "fdm_ctrls",
        "pwm",
        "elevator",
        "rudder",
        "sitl_state",
        "rudder",
        "fdm_ctrls",
        "pwm",
        "rudder",
        "throttle",
        "sitl_state",
        "throttle",
        "fdm_ctrls",
        "pwm",
        "throttle",
        "ros_out",
        "send",
        "fdm_ctrls",
        "pack",
        "socket",
        "error",
        "e",
        "e",
        "errno",
        "errno",
        "ECONNREFUSED",
        "buf",
        "frame_count",
        "fdm",
        "fg_out",
        "sim_out",
        "fdm",
        "parse",
        "buf",
        "fg_out",
        "frame_count",
        "FG_FDM_FPS",
        "fdm",
        "get",
        "units",
        "fdm",
        "agl",
        "sitl_state",
        "ground_height",
        "units",
        "fdm",
        "sitl_state",
        "throttle",
        "fg_out",
        "send",
        "fdm",
        "pack",
        "socket",
        "error",
        "e",
        "e",
        "errno",
        "errno",
        "ECONNREFUSED",
        "pack",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "sim_out",
        "send",
        "simbuf",
        "socket",
        "error",
        "e",
        "e",
        "errno",
        "errno",
        "ECONNREFUSED",
        "optparse",
        "OptionParser",
        "OptionParser",
        "parser",
        "add_option",
        "help",
        "parser",
        "add_option",
        "help",
        "parser",
        "add_option",
        "help",
        "parser",
        "add_option",
        "help",
        "parser",
        "add_option",
        "help",
        "parser",
        "add_option",
        "help",
        "parser",
        "add_option",
        "action",
        "help",
        "parser",
        "add_option",
        "action",
        "help",
        "parser",
        "add_option",
        "action",
        "help",
        "parser",
        "add_option",
        "dest",
        "help",
        "parser",
        "parse_args",
        "os",
        "chdir",
        "util",
        "reltopdir",
        "atexit",
        "register",
        "util",
        "pexpect_close_all",
        "opts",
        "options",
        "cmd",
        "opts",
        "options",
        "pexpect",
        "spawn",
        "cmd",
        "logfile",
        "sys",
        "stdout",
        "timeout",
        "util",
        "pexpect_autoclose",
        "ros",
        "interpret_address",
        "interpret_address",
        "ros_out_address",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_DGRAM",
        "ros_out",
        "connect",
        "ros_out_address",
        "ros_in_address",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_DGRAM",
        "ros_in",
        "bind",
        "ros_in_address",
        "ros_in",
        "setblocking",
        "interpret_address",
        "opts",
        "simout",
        "interpret_address",
        "opts",
        "simin",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_DGRAM",
        "sim_in",
        "bind",
        "sim_in_address",
        "sim_in",
        "setblocking",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_DGRAM",
        "sim_out",
        "connect",
        "interpret_address",
        "opts",
        "simout",
        "sim_out",
        "setblocking",
        "opts",
        "fgout",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_DGRAM",
        "fg_out",
        "connect",
        "interpret_address",
        "opts",
        "fgout",
        "util",
        "Wind",
        "opts",
        "wind",
        "fgFDM",
        "fgFDM",
        "fgFDM",
        "fgFDM",
        "time",
        "sleep",
        "time",
        "time",
        "tnow",
        "tnow",
        "tnow",
        "ros_in",
        "fileno",
        "sim_in",
        "fileno",
        "select",
        "select",
        "rin",
        "select",
        "error",
        "util",
        "check_parent",
        "time",
        "time",
        "ros_in",
        "fileno",
        "rin",
        "ros_in",
        "recv",
        "fdm",
        "packet_size",
        "process_ros_input",
        "buf",
        "frame_count",
        "frame_count",
        "sim_in",
        "fileno",
        "rin",
        "sim_in",
        "recv",
        "process_sitl_input",
        "simbuf",
        "tnow",
        "tnow",
        "last_report",
        "frame_count",
        "time",
        "time",
        "last_report",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "fdm",
        "get",
        "units",
        "time",
        "time",
        "signal",
        "signal",
        "signal",
        "SIGINT",
        "signal",
        "SIG_IGN",
        "signal",
        "signal",
        "signal",
        "SIGTERM",
        "signal",
        "SIG_IGN",
        "sys",
        "exit",
        "signal",
        "signal",
        "signal",
        "SIGINT",
        "exit_handler",
        "signal",
        "signal",
        "signal",
        "SIGTERM",
        "exit_handler",
        "main_loop",
        "exit_handler"
    ],
    "literals": [
        "'..'",
        "'pysim'",
        "':'",
        "'<14H'",
        "'left_aileron'",
        "'elevator'",
        "'rudder'",
        "'rpm'",
        "'agl'",
        "'meters'",
        "'altitude'",
        "'meters'",
        "'rpm'",
        "'<17dI'",
        "'latitude'",
        "'degrees'",
        "'longitude'",
        "'degrees'",
        "'altitude'",
        "'meters'",
        "'psi'",
        "'degrees'",
        "'v_north'",
        "'mps'",
        "'v_east'",
        "'mps'",
        "'v_down'",
        "'mps'",
        "'A_X_pilot'",
        "'mpss'",
        "'A_Y_pilot'",
        "'mpss'",
        "'A_Z_pilot'",
        "'mpss'",
        "'phidot'",
        "'dps'",
        "'thetadot'",
        "'dps'",
        "'psidot'",
        "'dps'",
        "'phi'",
        "'degrees'",
        "'theta'",
        "'degrees'",
        "'psi'",
        "'degrees'",
        "'vcas'",
        "'mps'",
        "\"runsim.py [options]\"",
        "\"--simin\"",
        "\"SITL input (IP:port)\"",
        "\"127.0.0.1:5502\"",
        "\"--simout\"",
        "\"SITL output (IP:port)\"",
        "\"127.0.0.1:5501\"",
        "\"--fgout\"",
        "\"FG display output (IP:port)\"",
        "\"127.0.0.1:5503\"",
        "\"--home\"",
        "'string'",
        "\"home lat,lng,alt,hdg\"",
        "\"--script\"",
        "'string'",
        "'jsbsim model script'",
        "'jsbsim/rascal_test.xml'",
        "\"--options\"",
        "'string'",
        "'ROS startup options'",
        "\"--elevon\"",
        "'store_true'",
        "'assume elevon input'",
        "\"--revthr\"",
        "'store_true'",
        "'reverse throttle'",
        "\"--vtail\"",
        "'store_true'",
        "'assume vtail input'",
        "\"--wind\"",
        "\"wind\"",
        "\"Simulate wind (speed,direction,turbulance)\"",
        "'0,0,0'",
        "'Tools/autotest'",
        "\"roslaunch last_letter launcher.launch ArduPlane:=true\"",
        "' %s'",
        "\"127.0.0.1:5505\"",
        "\"127.0.0.1:5504\"",
        "\"ROS listens for FG-FDM packets at %s\"",
        "\"ROS sends FG-FDM packetes for the SITL at %s\"",
        "\"Simulator ready to fly\"",
        "\"FPS %u asl=%.1f agl=%.1f roll=%.1f pitch=%.1f a=(%.2f %.2f %.2f)\"",
        "'altitude'",
        "'meters'",
        "'agl'",
        "'meters'",
        "'phi'",
        "'degrees'",
        "'theta'",
        "'degrees'",
        "'A_X_pilot'",
        "'mpss'",
        "'A_Y_pilot'",
        "'mpss'",
        "'A_Z_pilot'",
        "'mpss'"
    ],
    "variables": [
        "aileron",
        "elevator",
        "throttle",
        "rudder",
        "ground_height",
        "sitl_state",
        "a",
        "a",
        "control",
        "pwm",
        "speed",
        "direction",
        "turbulance",
        "wind",
        "speed",
        "wind",
        "direction",
        "wind",
        "turbulance",
        "aileron",
        "elevator",
        "throttle",
        "throttle",
        "rudder",
        "ch1",
        "ch2",
        "aileron",
        "elevator",
        "ch1",
        "ch2",
        "elevator",
        "rudder",
        "sitl_state",
        "aileron",
        "sitl_state",
        "elevator",
        "sitl_state",
        "rudder",
        "sitl_state",
        "throttle",
        "FG_FDM_FPS",
        "agl",
        "simbuf",
        "parser",
        "opts",
        "args",
        "cmd",
        "ros",
        "ros",
        "delaybeforesend",
        "ros_out_address",
        "ros_in_address",
        "ros_out",
        "ros_in",
        "sim_out_address",
        "sim_in_address",
        "sim_in",
        "sim_out",
        "fg_out",
        "fg_out",
        "wind",
        "fdm",
        "fdm_ctrls",
        "tnow",
        "last_report",
        "last_sim_input",
        "last_wind_update",
        "frame_count",
        "paused",
        "rin",
        "rin",
        "win",
        "xin",
        "tnow",
        "buf",
        "simbuf",
        "last_sim_input",
        "frame_count",
        "last_report"
    ],
    "comments": [
        "!/usr/bin/env python",
        "run a ROS simulator as a child process",
        "fake an elevon plane",
        "the minus does away with the need for RC2_REV=-1",
        "fake an elevon plane",
        "this matches VTAIL_OUTPUT==2",
        "",
        "main program",
        "Not implemented yet",
        "Not implemented yet",
        "Not implemented yet",
        "kill off child when we exit",
        "start child",
        "setup output to ROS",
        "setup input from ROS",
        "socket addresses",
        "setup input from SITL sim",
        "setup output to SITL sim",
        "setup possible output to FlightGear for display",
        "setup wind generator",
        "Setup another fdm object to send ctrls to ROS"
    ],
    "docstrings": [
        "'''interpret a IP:port string'''",
        "'''process control changes from SITL sim'''",
        "'''process FG FDM input from ROS Simulator'''",
        "'''run main loop'''",
        "'''exit the sim'''"
    ],
    "functions": [
        "interpret_address",
        "process_sitl_input",
        "process_ros_input",
        "main_loop",
        "exit_handler"
    ],
    "classes": [
        "control_state"
    ]
}