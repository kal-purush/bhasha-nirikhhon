{
    "identifiers": [
        "e",
        "t",
        "n",
        "r",
        "o",
        "u",
        "n",
        "o",
        "t",
        "o",
        "require",
        "require",
        "u",
        "a",
        "a",
        "o",
        "i",
        "i",
        "o",
        "o",
        "f",
        "f",
        "n",
        "o",
        "t",
        "o",
        "l",
        "e",
        "t",
        "o",
        "e",
        "s",
        "n",
        "n",
        "e",
        "l",
        "l",
        "e",
        "t",
        "n",
        "r",
        "n",
        "o",
        "require",
        "require",
        "o",
        "r",
        "o",
        "s",
        "r",
        "o",
        "s",
        "require",
        "exports",
        "root",
        "factory",
        "define",
        "define",
        "define",
        "factory",
        "exports",
        "factory",
        "root",
        "factory",
        "ArrayPrototype",
        "ArrayPrototype",
        "ArrayPrototype",
        "ArrayPrototype",
        "FunctionPrototype",
        "ObjectPrototype",
        "isArray",
        "obj",
        "to_string",
        "obj",
        "tryFunctionObject",
        "value",
        "fnToStr",
        "value",
        "e",
        "isCallable",
        "isCallable",
        "value",
        "value",
        "hasToStringTag",
        "tryFunctionObject",
        "value",
        "to_string",
        "value",
        "strClass",
        "fnClass",
        "strClass",
        "genClass",
        "tryRegexExec",
        "value",
        "regexExec",
        "value",
        "e",
        "isRegex",
        "isRegex",
        "value",
        "value",
        "hasToStringTag",
        "tryRegexExec",
        "value",
        "to_string",
        "value",
        "regexClass",
        "tryStringObject",
        "value",
        "strValue",
        "value",
        "e",
        "isString",
        "isString",
        "value",
        "value",
        "value",
        "hasToStringTag",
        "tryStringObject",
        "value",
        "to_string",
        "value",
        "stringClass",
        "isArguments",
        "value",
        "to_string",
        "value",
        "isArgs",
        "isArgs",
        "isArray",
        "value",
        "value",
        "value",
        "value",
        "value",
        "isCallable",
        "value",
        "isArgs",
        "has",
        "e",
        "supportsDescriptors",
        "defineProperty",
        "name",
        "method",
        "forceAssign",
        "forceAssign",
        "name",
        "name",
        "method",
        "defineProperty",
        "name",
        "method",
        "forceAssign",
        "forceAssign",
        "name",
        "name",
        "method",
        "defineProperties",
        "forceAssign",
        "name",
        "has",
        "name",
        "defineProperty",
        "name",
        "name",
        "forceAssign",
        "ObjectPrototype",
        "input",
        "input",
        "input",
        "ToInteger",
        "num",
        "num",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "ToPrimitive",
        "input",
        "isPrimitive",
        "input",
        "input",
        "valueOf",
        "input",
        "isCallable",
        "valueOf",
        "val",
        "valueOf",
        "input",
        "isPrimitive",
        "val",
        "val",
        "toStr",
        "input",
        "isCallable",
        "toStr",
        "val",
        "toStr",
        "input",
        "isPrimitive",
        "val",
        "val",
        "o",
        "o",
        "o",
        "o",
        "ToUint32",
        "x",
        "x",
        "Empty",
        "defineProperties",
        "FunctionPrototype",
        "bind",
        "that",
        "isCallable",
        "target",
        "target",
        "array_slice",
        "arguments",
        "bound",
        "target",
        "args",
        "array_slice",
        "arguments",
        "result",
        "result",
        "result",
        "target",
        "that",
        "args",
        "array_slice",
        "arguments",
        "target",
        "args",
        "i",
        "boundLength",
        "i",
        "boundArgs",
        "i",
        "bound",
        "boundArgs",
        "binder",
        "target",
        "Empty",
        "target",
        "bound",
        "Empty",
        "Empty",
        "bound",
        "call",
        "ObjectPrototype",
        "a",
        "a",
        "isArray",
        "result",
        "result",
        "defineProperties",
        "ArrayPrototype",
        "splice",
        "start",
        "deleteCount",
        "arguments",
        "array_splice",
        "arguments",
        "spliceNoopReturnsEmptyArray",
        "ArrayPrototype",
        "obj",
        "obj",
        "defineProperties",
        "ArrayPrototype",
        "splice",
        "start",
        "deleteCount",
        "arguments",
        "ES",
        "arguments",
        "deleteCount",
        "args",
        "array_slice",
        "arguments",
        "args",
        "args",
        "start",
        "args",
        "ES",
        "deleteCount",
        "array_splice",
        "args",
        "spliceWorksWithEmptyObject",
        "defineProperties",
        "ArrayPrototype",
        "array_unshift",
        "arguments",
        "hasUnshiftReturnValueBug",
        "defineProperties",
        "isArray",
        "boxedString",
        "boxedString",
        "properlyBoxed",
        "method",
        "method",
        "method",
        "_",
        "__",
        "context",
        "context",
        "properlyBoxesNonStrict",
        "method",
        "properlyBoxesStrict",
        "method",
        "properlyBoxesNonStrict",
        "properlyBoxesStrict",
        "defineProperties",
        "ArrayPrototype",
        "forEach",
        "fun",
        "ES",
        "splitString",
        "isString",
        "arguments",
        "isCallable",
        "fun",
        "i",
        "length",
        "i",
        "fun",
        "thisp",
        "i",
        "i",
        "properlyBoxesContext",
        "ArrayPrototype",
        "defineProperties",
        "ArrayPrototype",
        "fun",
        "ES",
        "splitString",
        "isString",
        "length",
        "arguments",
        "isCallable",
        "fun",
        "fun",
        "i",
        "length",
        "i",
        "i",
        "result",
        "i",
        "fun",
        "thisp",
        "i",
        "i",
        "result",
        "properlyBoxesContext",
        "ArrayPrototype",
        "defineProperties",
        "ArrayPrototype",
        "fun",
        "ES",
        "splitString",
        "isString",
        "arguments",
        "isCallable",
        "fun",
        "fun",
        "i",
        "length",
        "i",
        "i",
        "value",
        "i",
        "fun",
        "thisp",
        "value",
        "i",
        "result",
        "value",
        "result",
        "properlyBoxesContext",
        "ArrayPrototype",
        "defineProperties",
        "ArrayPrototype",
        "every",
        "fun",
        "ES",
        "splitString",
        "isString",
        "arguments",
        "isCallable",
        "fun",
        "fun",
        "i",
        "length",
        "i",
        "i",
        "fun",
        "thisp",
        "i",
        "i",
        "properlyBoxesContext",
        "ArrayPrototype",
        "defineProperties",
        "ArrayPrototype",
        "some",
        "fun",
        "ES",
        "splitString",
        "isString",
        "arguments",
        "isCallable",
        "fun",
        "fun",
        "i",
        "length",
        "i",
        "i",
        "fun",
        "thisp",
        "i",
        "i",
        "properlyBoxesContext",
        "ArrayPrototype",
        "ArrayPrototype",
        "reduceCoercesToObject",
        "ArrayPrototype",
        "_",
        "__",
        "___",
        "defineProperties",
        "ArrayPrototype",
        "reduce",
        "fun",
        "ES",
        "splitString",
        "isString",
        "isCallable",
        "fun",
        "fun",
        "length",
        "arguments",
        "arguments",
        "result",
        "arguments",
        "i",
        "result",
        "i",
        "i",
        "length",
        "i",
        "length",
        "i",
        "i",
        "result",
        "fun",
        "result",
        "i",
        "i",
        "result",
        "reduceCoercesToObject",
        "ArrayPrototype",
        "reduceRightCoercesToObject",
        "ArrayPrototype",
        "_",
        "__",
        "___",
        "defineProperties",
        "ArrayPrototype",
        "reduceRight",
        "fun",
        "ES",
        "splitString",
        "isString",
        "isCallable",
        "fun",
        "fun",
        "length",
        "arguments",
        "length",
        "arguments",
        "result",
        "arguments",
        "i",
        "result",
        "i",
        "i",
        "i",
        "result",
        "i",
        "result",
        "fun",
        "result",
        "i",
        "i",
        "i",
        "result",
        "reduceRightCoercesToObject",
        "defineProperties",
        "ArrayPrototype",
        "indexOf",
        "sought",
        "splitString",
        "isString",
        "ES",
        "length",
        "arguments",
        "i",
        "ES",
        "arguments",
        "i",
        "i",
        "i",
        "length",
        "i",
        "i",
        "length",
        "i",
        "i",
        "i",
        "sought",
        "i",
        "hasFirefox2IndexOfBug",
        "defineProperties",
        "ArrayPrototype",
        "lastIndexOf",
        "sought",
        "splitString",
        "isString",
        "ES",
        "length",
        "length",
        "arguments",
        "i",
        "i",
        "ES",
        "arguments",
        "i",
        "i",
        "i",
        "length",
        "i",
        "i",
        "i",
        "i",
        "sought",
        "i",
        "i",
        "hasFirefox2LastIndexOfBug",
        "owns",
        "dontEnums",
        "defineProperties",
        "keys",
        "isCallable",
        "isArguments",
        "isObject",
        "isString",
        "isObject",
        "isFn",
        "isArgs",
        "hasProtoEnumBug",
        "isFn",
        "isStr",
        "hasStringEnumBug",
        "isArgs",
        "i",
        "i",
        "theKeys",
        "i",
        "isArgs",
        "name",
        "skipProto",
        "name",
        "owns",
        "name",
        "theKeys",
        "name",
        "hasDontEnumBug",
        "ctor",
        "ctor",
        "j",
        "dontEnumsLength",
        "j",
        "dontEnums",
        "j",
        "skipConstructor",
        "dontEnum",
        "owns",
        "dontEnum",
        "theKeys",
        "dontEnum",
        "theKeys",
        "arguments",
        "defineProperties",
        "keys",
        "isArguments",
        "originalKeys",
        "ArrayPrototype",
        "originalKeys",
        "keysWorksWithArguments",
        "negativeDate",
        "negativeYearString",
        "defineProperties",
        "toISOString",
        "isFinite",
        "RangeError",
        "year",
        "month",
        "year",
        "month",
        "month",
        "month",
        "result",
        "month",
        "year",
        "year",
        "year",
        "year",
        "year",
        "year",
        "length",
        "result",
        "length",
        "value",
        "result",
        "length",
        "value",
        "result",
        "length",
        "value",
        "year",
        "result",
        "result",
        "hasNegativeDateBug",
        "dateToJSONIsSupported",
        "NaN",
        "negativeDate",
        "negativeYearString",
        "e",
        "dateToJSONIsSupported",
        "toJSON",
        "key",
        "ES",
        "o",
        "tv",
        "isFinite",
        "tv",
        "toISO",
        "o",
        "toISO",
        "toISO",
        "o",
        "isNaN",
        "isNaN",
        "isNaN",
        "doesNotParseY2KNewYear",
        "acceptsInvalidDates",
        "supportsExtendedYears",
        "NativeDate",
        "Y",
        "M",
        "D",
        "h",
        "m",
        "s",
        "ms",
        "arguments",
        "NativeDate",
        "length",
        "Y",
        "Y",
        "NativeDate",
        "Y",
        "length",
        "NativeDate",
        "Y",
        "M",
        "D",
        "h",
        "m",
        "s",
        "ms",
        "length",
        "NativeDate",
        "Y",
        "M",
        "D",
        "h",
        "m",
        "s",
        "length",
        "NativeDate",
        "Y",
        "M",
        "D",
        "h",
        "m",
        "length",
        "NativeDate",
        "Y",
        "M",
        "D",
        "h",
        "length",
        "NativeDate",
        "Y",
        "M",
        "D",
        "length",
        "NativeDate",
        "Y",
        "M",
        "length",
        "NativeDate",
        "Y",
        "NativeDate",
        "date",
        "date",
        "NativeDate",
        "arguments",
        "year",
        "month",
        "month",
        "months",
        "month",
        "year",
        "t",
        "year",
        "t",
        "year",
        "t",
        "year",
        "t",
        "NativeDate",
        "t",
        "key",
        "NativeDate",
        "key",
        "NativeDate",
        "key",
        "NativeDate",
        "NativeDate",
        "NativeDate",
        "parse",
        "isoDateExpression",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "hour",
        "minute",
        "second",
        "millisecond",
        "minute",
        "second",
        "millisecond",
        "month",
        "month",
        "hourOffset",
        "minuteOffset",
        "day",
        "day",
        "dayFromMonth",
        "year",
        "month",
        "dayFromMonth",
        "year",
        "month",
        "result",
        "dayFromMonth",
        "year",
        "month",
        "day",
        "hour",
        "hourOffset",
        "signOffset",
        "result",
        "result",
        "minute",
        "minuteOffset",
        "signOffset",
        "second",
        "millisecond",
        "isLocalTime",
        "result",
        "toUTC",
        "result",
        "result",
        "result",
        "result",
        "NaN",
        "NativeDate",
        "arguments",
        "now",
        "NumberPrototype",
        "multiply",
        "n",
        "c",
        "i",
        "toFixedHelpers",
        "c",
        "n",
        "toFixedHelpers",
        "i",
        "toFixedHelpers",
        "i",
        "c",
        "toFixedHelpers",
        "c",
        "c",
        "toFixedHelpers",
        "divide",
        "n",
        "toFixedHelpers",
        "i",
        "c",
        "toFixedHelpers",
        "i",
        "toFixedHelpers",
        "i",
        "c",
        "n",
        "c",
        "c",
        "n",
        "toFixedHelpers",
        "numToString",
        "toFixedHelpers",
        "i",
        "s",
        "i",
        "toFixedHelpers",
        "i",
        "toFixedHelpers",
        "i",
        "s",
        "s",
        "t",
        "s",
        "t",
        "t",
        "s",
        "pow",
        "x",
        "n",
        "acc",
        "n",
        "acc",
        "n",
        "pow",
        "x",
        "n",
        "acc",
        "x",
        "pow",
        "x",
        "x",
        "n",
        "acc",
        "log",
        "x",
        "x",
        "n",
        "x",
        "x",
        "n",
        "x",
        "n",
        "defineProperties",
        "NumberPrototype",
        "toFixed",
        "fractionDigits",
        "f",
        "fractionDigits",
        "f",
        "f",
        "f",
        "f",
        "f",
        "f",
        "RangeError",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "s",
        "x",
        "s",
        "x",
        "x",
        "m",
        "x",
        "e",
        "toFixedHelpers",
        "x",
        "toFixedHelpers",
        "z",
        "e",
        "x",
        "toFixedHelpers",
        "e",
        "x",
        "toFixedHelpers",
        "e",
        "z",
        "e",
        "e",
        "e",
        "toFixedHelpers",
        "z",
        "j",
        "f",
        "j",
        "toFixedHelpers",
        "j",
        "toFixedHelpers",
        "toFixedHelpers",
        "j",
        "j",
        "e",
        "j",
        "toFixedHelpers",
        "j",
        "toFixedHelpers",
        "j",
        "toFixedHelpers",
        "toFixedHelpers",
        "m",
        "toFixedHelpers",
        "toFixedHelpers",
        "z",
        "toFixedHelpers",
        "e",
        "m",
        "toFixedHelpers",
        "f",
        "f",
        "k",
        "m",
        "k",
        "f",
        "m",
        "s",
        "f",
        "k",
        "m",
        "m",
        "s",
        "m",
        "k",
        "f",
        "m",
        "k",
        "f",
        "m",
        "s",
        "m",
        "m",
        "hasToFixedBugs",
        "StringPrototype",
        "StringPrototype",
        "separator",
        "limit",
        "separator",
        "limit",
        "isRegex",
        "separator",
        "string_split",
        "separator",
        "limit",
        "separator",
        "separator",
        "separator",
        "separator",
        "separator",
        "separator",
        "flags",
        "compliantExecNpcg",
        "separator2",
        "separator",
        "flags",
        "limit",
        "limit",
        "ES",
        "limit",
        "match",
        "separator",
        "match",
        "lastIndex",
        "match",
        "match",
        "lastIndex",
        "lastLastIndex",
        "output",
        "lastLastIndex",
        "match",
        "compliantExecNpcg",
        "match",
        "match",
        "separator2",
        "i",
        "arguments",
        "i",
        "arguments",
        "i",
        "match",
        "i",
        "match",
        "match",
        "array_push",
        "output",
        "match",
        "lastLength",
        "match",
        "lastLastIndex",
        "lastIndex",
        "output",
        "limit",
        "separator",
        "match",
        "separator",
        "match",
        "separator",
        "lastLastIndex",
        "lastLength",
        "separator",
        "output",
        "output",
        "lastLastIndex",
        "output",
        "limit",
        "output",
        "limit",
        "output",
        "StringPrototype",
        "split",
        "separator",
        "limit",
        "separator",
        "limit",
        "string_split",
        "separator",
        "limit",
        "StringPrototype",
        "match",
        "group",
        "groups",
        "group",
        "groups",
        "groups",
        "replaceReportsGroupsCorrectly",
        "StringPrototype",
        "replace",
        "searchValue",
        "replaceValue",
        "isCallable",
        "replaceValue",
        "isRegex",
        "searchValue",
        "searchValue",
        "isFn",
        "hasCapturingGroups",
        "str_replace",
        "searchValue",
        "replaceValue",
        "match",
        "arguments",
        "searchValue",
        "searchValue",
        "searchValue",
        "match",
        "searchValue",
        "originalLastIndex",
        "args",
        "arguments",
        "length",
        "arguments",
        "length",
        "replaceValue",
        "args",
        "str_replace",
        "searchValue",
        "wrappedReplaceValue",
        "StringPrototype",
        "defineProperties",
        "StringPrototype",
        "substr",
        "start",
        "length",
        "string_substr",
        "start",
        "start",
        "start",
        "start",
        "start",
        "length",
        "hasNegativeSubstrBug",
        "ws",
        "wsRegexChars",
        "wsRegexChars",
        "wsRegexChars",
        "wsRegexChars",
        "StringPrototype",
        "ws",
        "zeroWidth",
        "defineProperties",
        "StringPrototype",
        "trim",
        "trimBeginRegexp",
        "trimEndRegexp",
        "hasTrimWhitespaceBug",
        "parseInt",
        "ws",
        "parseInt",
        "ws",
        "parseInt",
        "origParseInt",
        "parseIntES5",
        "radix",
        "radix",
        "radix",
        "hexRegex",
        "origParseInt",
        "radix",
        "parseInt",
        "require",
        "exports",
        "process",
        "root",
        "factory",
        "define",
        "define",
        "define",
        "factory",
        "exports",
        "factory",
        "root",
        "factory",
        "func",
        "func",
        "e",
        "C",
        "f",
        "C",
        "arguments",
        "Sub",
        "Sub",
        "C",
        "Sub",
        "C",
        "C",
        "f",
        "Sub",
        "e",
        "e",
        "e",
        "rejectsRegex",
        "rejectsRegex",
        "getGlobal",
        "globals",
        "arePropertyDescriptorsSupported",
        "startsWithRejectsRegex",
        "globals",
        "x",
        "x",
        "x",
        "x",
        "_toString",
        "x",
        "x",
        "_toString",
        "x",
        "x",
        "globals",
        "x",
        "name",
        "value",
        "force",
        "force",
        "name",
        "supportsDescriptors",
        "name",
        "value",
        "name",
        "value",
        "name",
        "getter",
        "supportsDescriptors",
        "name",
        "getter",
        "originalObject",
        "key",
        "targetObject",
        "supportsDescriptors",
        "originalObject",
        "key",
        "targetObject",
        "key",
        "originalDescriptor",
        "originalDescriptor",
        "getKey",
        "originalObject",
        "key",
        "setKey",
        "value",
        "originalObject",
        "key",
        "value",
        "property",
        "newValue",
        "supportsDescriptors",
        "property",
        "descriptor",
        "newValue",
        "property",
        "descriptor",
        "property",
        "newValue",
        "target",
        "source",
        "defineProperty",
        "target",
        "source",
        "source",
        "name",
        "name",
        "defineProperty",
        "name",
        "method",
        "prototype",
        "properties",
        "Prototype",
        "prototype",
        "Prototype",
        "properties",
        "defineProperties",
        "properties",
        "Type",
        "globals",
        "globals",
        "$iterator$",
        "prototype",
        "impl",
        "impl",
        "impl",
        "iterator",
        "o",
        "$iterator$",
        "impl",
        "defineProperties",
        "prototype",
        "o",
        "prototype",
        "$iterator$",
        "Type",
        "$iterator$",
        "prototype",
        "$iterator$",
        "impl",
        "isArguments",
        "value",
        "_toString",
        "value",
        "result",
        "result",
        "value",
        "value",
        "value",
        "value",
        "_toString",
        "value",
        "result",
        "Call",
        "F",
        "V",
        "arguments",
        "arguments",
        "ES",
        "F",
        "F",
        "safeApply",
        "F",
        "V",
        "args",
        "x",
        "optMessage",
        "x",
        "optMessage",
        "x",
        "x",
        "x",
        "x",
        "x",
        "o",
        "optMessage",
        "ES",
        "o",
        "optMessage",
        "o",
        "x",
        "x",
        "_toString",
        "x",
        "x",
        "ES",
        "x",
        "x",
        "ES",
        "x",
        "value",
        "_toString",
        "value",
        "value",
        "value",
        "ES",
        "value",
        "number",
        "number",
        "number",
        "number",
        "number",
        "number",
        "value",
        "ES",
        "value",
        "len",
        "len",
        "len",
        "a",
        "b",
        "a",
        "b",
        "a",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "o",
        "ES",
        "o",
        "o",
        "$iterator$",
        "isArguments",
        "o",
        "o",
        "isArguments",
        "o",
        "ArrayIterator",
        "o",
        "o",
        "$iterator$",
        "ES",
        "itFn",
        "itFn",
        "o",
        "ES",
        "it",
        "it",
        "it",
        "arguments",
        "it",
        "arguments",
        "it",
        "ES",
        "result",
        "result",
        "C",
        "args",
        "ES",
        "C",
        "symbolSpecies",
        "obj",
        "C",
        "symbolSpecies",
        "obj",
        "create",
        "C",
        "defineProperties",
        "obj",
        "ES",
        "C",
        "obj",
        "args",
        "ES",
        "result",
        "result",
        "obj",
        "tag",
        "attribute",
        "value",
        "tag",
        "attribute",
        "value",
        "V",
        "p1",
        "attribute",
        "escapedV",
        "p1",
        "p2",
        "S",
        "p3",
        "tag",
        "o",
        "ES",
        "o",
        "o",
        "o",
        "ES",
        "o",
        "symbolSpecies",
        "o",
        "o",
        "symbolSpecies",
        "o",
        "defineProperties",
        "o",
        "o",
        "n",
        "n",
        "n",
        "w",
        "f",
        "w",
        "f",
        "w",
        "w",
        "w",
        "w",
        "v",
        "ebits",
        "fbits",
        "ebits",
        "v",
        "v",
        "e",
        "ebits",
        "f",
        "fbits",
        "s",
        "v",
        "Infinity",
        "v",
        "Infinity",
        "e",
        "ebits",
        "f",
        "s",
        "v",
        "v",
        "e",
        "f",
        "s",
        "v",
        "Infinity",
        "s",
        "v",
        "v",
        "v",
        "v",
        "bias",
        "e",
        "v",
        "f",
        "roundToEven",
        "v",
        "e",
        "fbits",
        "f",
        "fbits",
        "e",
        "e",
        "f",
        "e",
        "bias",
        "e",
        "ebits",
        "f",
        "e",
        "e",
        "bias",
        "f",
        "f",
        "fbits",
        "e",
        "f",
        "roundToEven",
        "v",
        "bias",
        "fbits",
        "bits",
        "i",
        "fbits",
        "i",
        "i",
        "bits",
        "f",
        "f",
        "f",
        "i",
        "ebits",
        "i",
        "i",
        "bits",
        "e",
        "e",
        "e",
        "bits",
        "s",
        "bits",
        "bits",
        "parseInt",
        "ebits",
        "fbits",
        "i",
        "i",
        "i",
        "b",
        "i",
        "j",
        "j",
        "j",
        "bits",
        "b",
        "b",
        "b",
        "bits",
        "bits",
        "bias",
        "ebits",
        "s",
        "parseInt",
        "e",
        "parseInt",
        "ebits",
        "f",
        "parseInt",
        "ebits",
        "e",
        "ebits",
        "f",
        "NaN",
        "s",
        "Infinity",
        "e",
        "s",
        "e",
        "bias",
        "f",
        "fbits",
        "f",
        "s",
        "bias",
        "f",
        "fbits",
        "s",
        "b",
        "unpackIEEE754",
        "b",
        "v",
        "packIEEE754",
        "v",
        "b",
        "unpackIEEE754",
        "b",
        "v",
        "packIEEE754",
        "v",
        "num",
        "unpackFloat32",
        "packFloat32",
        "num",
        "Float32Array",
        "Float32Array",
        "conversions",
        "num",
        "float32array",
        "num",
        "float32array",
        "conversions",
        "defineProperties",
        "fromCodePoint",
        "codePoints",
        "arguments",
        "i",
        "length",
        "i",
        "next",
        "arguments",
        "i",
        "ES",
        "next",
        "ES",
        "next",
        "next",
        "next",
        "RangeError",
        "next",
        "next",
        "result",
        "next",
        "next",
        "result",
        "next",
        "result",
        "next",
        "result",
        "raw",
        "callSite",
        "ES",
        "callSite",
        "cooked",
        "ES",
        "rawValue",
        "rawString",
        "ES",
        "len",
        "literalsegments",
        "nextIndex",
        "literalsegments",
        "nextKey",
        "nextIndex",
        "next",
        "rawString",
        "nextKey",
        "nextSeg",
        "next",
        "stringElements",
        "nextSeg",
        "nextIndex",
        "literalsegments",
        "next",
        "nextIndex",
        "arguments",
        "arguments",
        "nextIndex",
        "nextSub",
        "next",
        "stringElements",
        "nextSub",
        "nextIndex",
        "stringElements",
        "defineProperty",
        "fromCodePoint",
        "codePoints",
        "originalFromCodePoint",
        "arguments",
        "repeat",
        "s",
        "times",
        "times",
        "times",
        "repeat",
        "s",
        "times",
        "s",
        "repeat",
        "s",
        "times",
        "half",
        "half",
        "repeat",
        "times",
        "ES",
        "times",
        "ES",
        "times",
        "times",
        "times",
        "stringMaxLength",
        "RangeError",
        "stringRepeat",
        "thisStr",
        "times",
        "searchStr",
        "ES",
        "Type",
        "searchStr",
        "searchStr",
        "searchStr",
        "arguments",
        "arguments",
        "ES",
        "startArg",
        "thisStr",
        "start",
        "start",
        "searchStr",
        "searchStr",
        "searchStr",
        "ES",
        "Type",
        "searchStr",
        "searchStr",
        "searchStr",
        "thisStr",
        "arguments",
        "arguments",
        "posArg",
        "thisLen",
        "ES",
        "posArg",
        "pos",
        "thisLen",
        "thisStr",
        "end",
        "searchStr",
        "end",
        "searchStr",
        "includes",
        "searchString",
        "arguments",
        "arguments",
        "_indexOf",
        "searchString",
        "position",
        "pos",
        "ES",
        "ES",
        "pos",
        "thisStr",
        "position",
        "position",
        "length",
        "thisStr",
        "position",
        "position",
        "length",
        "first",
        "first",
        "isEnd",
        "first",
        "thisStr",
        "position",
        "second",
        "second",
        "first",
        "first",
        "second",
        "defineProperties",
        "StringShims",
        "hasStringTrimBug",
        "ws",
        "ws",
        "defineProperties",
        "trimRegexp",
        "s",
        "ES",
        "s",
        "s",
        "StringIterator",
        "s",
        "i",
        "s",
        "s",
        "i",
        "first",
        "first",
        "i",
        "s",
        "len",
        "second",
        "s",
        "i",
        "len",
        "second",
        "second",
        "i",
        "len",
        "s",
        "i",
        "len",
        "addIterator",
        "StringIterator",
        "addIterator",
        "StringIterator",
        "startsWithIsCompliant",
        "defineProperty",
        "StringShims",
        "defineProperty",
        "StringShims",
        "iterable",
        "arguments",
        "arguments",
        "ES",
        "iterable",
        "mapFn",
        "ES",
        "mapFn",
        "arguments",
        "hasThisArg",
        "arguments",
        "ES",
        "usingIterator",
        "i",
        "result",
        "ES",
        "usingIterator",
        "ES",
        "iterationValue",
        "ES",
        "it",
        "iterationValue",
        "value",
        "iterationValue",
        "mapFn",
        "result",
        "i",
        "hasThisArg",
        "mapFn",
        "thisArg",
        "value",
        "i",
        "mapFn",
        "value",
        "i",
        "result",
        "i",
        "value",
        "i",
        "iterationValue",
        "length",
        "i",
        "length",
        "ES",
        "result",
        "ES",
        "length",
        "length",
        "i",
        "i",
        "length",
        "i",
        "value",
        "i",
        "mapFn",
        "result",
        "i",
        "hasThisArg",
        "mapFn",
        "thisArg",
        "value",
        "i",
        "mapFn",
        "value",
        "i",
        "result",
        "i",
        "value",
        "result",
        "length",
        "result",
        "of",
        "arguments",
        "defineProperties",
        "ArrayShims",
        "e",
        "arrayFromSwallowsNegativeLengths",
        "defineProperty",
        "ArrayShims",
        "x",
        "x",
        "arguments",
        "ArrayIterator",
        "array",
        "kind",
        "array",
        "kind",
        "defineProperties",
        "ArrayIterator",
        "ArrayIterator",
        "array",
        "ES",
        "array",
        "i",
        "len",
        "i",
        "kind",
        "retval",
        "i",
        "kind",
        "retval",
        "array",
        "i",
        "kind",
        "retval",
        "i",
        "array",
        "i",
        "i",
        "retval",
        "addIterator",
        "ArrayIterator",
        "kind",
        "kind",
        "key",
        "keys",
        "key",
        "keys",
        "defineProperties",
        "ObjectIterator",
        "ObjectIterator",
        "array",
        "array",
        "getAllKeys",
        "ES",
        "array",
        "key",
        "array",
        "key",
        "iterator_result",
        "key",
        "iterator_result",
        "key",
        "iterator_result",
        "key",
        "key",
        "iterator_result",
        "addIterator",
        "ObjectIterator",
        "copyWithin",
        "target",
        "start",
        "arguments",
        "ES",
        "ES",
        "o",
        "target",
        "ES",
        "target",
        "start",
        "ES",
        "start",
        "target",
        "len",
        "target",
        "target",
        "len",
        "start",
        "len",
        "start",
        "start",
        "len",
        "end",
        "end",
        "len",
        "ES",
        "end",
        "end",
        "len",
        "end",
        "end",
        "len",
        "fin",
        "len",
        "to",
        "to",
        "to",
        "count",
        "direction",
        "count",
        "to",
        "count",
        "count",
        "_hasOwnProperty",
        "o",
        "o",
        "to",
        "o",
        "o",
        "direction",
        "to",
        "direction",
        "count",
        "o",
        "fill",
        "value",
        "arguments",
        "arguments",
        "arguments",
        "arguments",
        "ES",
        "ES",
        "O",
        "start",
        "ES",
        "start",
        "start",
        "end",
        "ES",
        "end",
        "len",
        "end",
        "start",
        "len",
        "start",
        "start",
        "len",
        "end",
        "len",
        "end",
        "end",
        "i",
        "len",
        "i",
        "relativeEnd",
        "i",
        "O",
        "i",
        "value",
        "O",
        "find",
        "predicate",
        "ES",
        "ES",
        "ES",
        "predicate",
        "arguments",
        "arguments",
        "i",
        "length",
        "i",
        "value",
        "i",
        "thisArg",
        "predicate",
        "thisArg",
        "value",
        "i",
        "value",
        "predicate",
        "value",
        "i",
        "value",
        "findIndex",
        "predicate",
        "ES",
        "ES",
        "ES",
        "predicate",
        "arguments",
        "arguments",
        "i",
        "length",
        "i",
        "thisArg",
        "predicate",
        "thisArg",
        "i",
        "i",
        "i",
        "predicate",
        "i",
        "i",
        "i",
        "keys",
        "ArrayIterator",
        "values",
        "ArrayIterator",
        "entries",
        "ArrayIterator",
        "ES",
        "ES",
        "$iterator$",
        "defineProperties",
        "$iterator$",
        "Type",
        "defineProperty",
        "values",
        "originalArrayPrototypeValues",
        "defineProperty",
        "$iterator$",
        "Value",
        "originalArrayPrototypeValues",
        "defineProperties",
        "ArrayPrototypeShims",
        "addIterator",
        "addIterator",
        "defineProperties",
        "maxSafeInteger",
        "maxSafeInteger",
        "globals",
        "globals",
        "value",
        "value",
        "global_isFinite",
        "value",
        "value",
        "value",
        "ES",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "item",
        "idx",
        "idx",
        "defineProperty",
        "ArrayPrototypeShims",
        "item",
        "idx",
        "idx",
        "defineProperty",
        "ArrayPrototypeShims",
        "supportsDescriptors",
        "defineProperties",
        "target",
        "source",
        "ES",
        "target",
        "arguments",
        "target",
        "source",
        "source",
        "target",
        "key",
        "target",
        "key",
        "source",
        "key",
        "target",
        "target",
        "a",
        "b",
        "ES",
        "a",
        "b",
        "magic",
        "O",
        "proto",
        "ES",
        "O",
        "proto",
        "ES",
        "proto",
        "proto",
        "O",
        "proto",
        "checkArgs",
        "O",
        "proto",
        "O",
        "proto",
        "O",
        "magic",
        "e",
        "magic",
        "proto",
        "magic",
        "proto",
        "setPrototypeOf",
        "setPrototypeOf",
        "setPrototypeOf",
        "setPrototypeOf",
        "o",
        "gpo",
        "o",
        "result",
        "FAKENULL",
        "result",
        "o",
        "p",
        "p",
        "p",
        "FAKENULL",
        "spo",
        "o",
        "p",
        "e",
        "objectKeysAcceptsPrimitives",
        "defineProperty",
        "keys",
        "value",
        "originalObjectKeys",
        "ES",
        "value",
        "Value",
        "originalObjectKeys",
        "e",
        "objectGOPNAcceptsPrimitives",
        "defineProperty",
        "getOwnPropertyNames",
        "value",
        "originalObjectGetOwnPropertyNames",
        "ES",
        "value",
        "Value",
        "originalObjectGetOwnPropertyNames",
        "e",
        "objectGOPDAcceptsPrimitives",
        "defineProperty",
        "getOwnPropertyDescriptor",
        "value",
        "property",
        "originalObjectGetOwnPropertyDescriptor",
        "ES",
        "value",
        "property",
        "Value",
        "originalObjectGetOwnPropertyDescriptor",
        "e",
        "objectSealAcceptsPrimitives",
        "defineProperty",
        "seal",
        "value",
        "Type",
        "value",
        "value",
        "originalObjectSeal",
        "value",
        "Value",
        "originalObjectSeal",
        "e",
        "objectIsSealedAcceptsPrimitives",
        "defineProperty",
        "isSealed",
        "value",
        "Type",
        "value",
        "originalObjectIsSealed",
        "value",
        "Value",
        "originalObjectIsSealed",
        "e",
        "objectFreezeAcceptsPrimitives",
        "defineProperty",
        "freeze",
        "value",
        "Type",
        "value",
        "value",
        "originalObjectFreeze",
        "value",
        "Value",
        "originalObjectFreeze",
        "e",
        "objectIsFrozenAcceptsPrimitives",
        "defineProperty",
        "isFrozen",
        "value",
        "Type",
        "value",
        "originalObjectIsFrozen",
        "value",
        "Value",
        "originalObjectIsFrozen",
        "e",
        "objectPreventExtensionsAcceptsPrimitives",
        "defineProperty",
        "preventExtensions",
        "value",
        "Type",
        "value",
        "value",
        "originalObjectPreventExtensions",
        "value",
        "Value",
        "originalObjectPreventExtensions",
        "e",
        "objectIsExtensibleAcceptsPrimitives",
        "defineProperty",
        "isExtensible",
        "value",
        "Type",
        "value",
        "originalObjectIsExtensible",
        "value",
        "Value",
        "originalObjectIsExtensible",
        "e",
        "objectGetProtoAcceptsPrimitives",
        "defineProperty",
        "getPrototypeOf",
        "value",
        "originalGetProto",
        "ES",
        "value",
        "Value",
        "originalGetProto",
        "supportsDescriptors",
        "flags",
        "ES",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "Value",
        "regExpFlagsGetter",
        "e",
        "regExpSupportsFlagsWithRegex",
        "supportsDescriptors",
        "pattern",
        "flags",
        "Type",
        "pattern",
        "Type",
        "flags",
        "pattern",
        "flags",
        "OrigRegExp",
        "pattern",
        "flags",
        "Value",
        "RegExpShim",
        "OrigRegExp",
        "OrigRegExp",
        "RegExpShim",
        "OrigRegExp",
        "key",
        "key",
        "key",
        "noop",
        "Value",
        "OrigRegExp",
        "key",
        "RegExpShim",
        "RegExpShim",
        "OrigRegExp",
        "Value",
        "OrigRegExp",
        "RegExpShim",
        "RegExpShim",
        "Value",
        "globals",
        "RegExpShim",
        "value",
        "value",
        "x",
        "value",
        "NaN",
        "x",
        "x",
        "Infinity",
        "x",
        "x",
        "x",
        "x",
        "value",
        "value",
        "value",
        "value",
        "global_isFinite",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "NaN",
        "value",
        "Infinity",
        "value",
        "Infinity",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "negate",
        "value",
        "value",
        "result",
        "value",
        "negate",
        "result",
        "result",
        "value",
        "value",
        "value",
        "ES",
        "value",
        "number",
        "number",
        "value",
        "value",
        "value",
        "value",
        "value",
        "NaN",
        "global_isFinite",
        "value",
        "Infinity",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "x",
        "Infinity",
        "global_isFinite",
        "x",
        "value",
        "x",
        "x",
        "x",
        "sum",
        "t",
        "sum",
        "sum",
        "t",
        "n",
        "t",
        "x",
        "n",
        "sum",
        "x",
        "y",
        "arguments",
        "arg",
        "arg",
        "num",
        "anyNaN",
        "num",
        "Infinity",
        "num",
        "Infinity",
        "anyInfinity",
        "num",
        "allZero",
        "anyInfinity",
        "anyNaN",
        "numbers",
        "num",
        "anyInfinity",
        "Infinity",
        "anyNaN",
        "NaN",
        "allZero",
        "numbers",
        "a",
        "b",
        "b",
        "a",
        "numbers",
        "numbers",
        "number",
        "number",
        "largest",
        "divided",
        "sum",
        "number",
        "sum",
        "number",
        "number",
        "largest",
        "sum",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "x",
        "x",
        "NaN",
        "x",
        "x",
        "Infinity",
        "x",
        "x",
        "Infinity",
        "x",
        "x",
        "x",
        "x",
        "x",
        "value",
        "value",
        "number",
        "number",
        "number",
        "number",
        "number",
        "value",
        "value",
        "global_isFinite",
        "value",
        "value",
        "value",
        "x",
        "x",
        "x",
        "x",
        "x",
        "value",
        "value",
        "value",
        "x",
        "x",
        "x",
        "Infinity",
        "x",
        "Infinity",
        "x",
        "x",
        "a",
        "Infinity",
        "b",
        "Infinity",
        "a",
        "b",
        "x",
        "x",
        "value",
        "value",
        "number",
        "number",
        "number",
        "x",
        "y",
        "x",
        "ES",
        "x",
        "y",
        "ES",
        "y",
        "x",
        "x",
        "y",
        "y",
        "al",
        "bl",
        "ah",
        "bl",
        "al",
        "bh",
        "x",
        "x",
        "x",
        "Infinity",
        "x",
        "Infinity",
        "x",
        "x",
        "x",
        "numberConversion",
        "num",
        "defineProperties",
        "MathShims",
        "defineProperty",
        "MathShims",
        "defineProperty",
        "MathShims",
        "Infinity",
        "defineProperty",
        "MathShims",
        "defineProperty",
        "MathShims",
        "expm1OfTen",
        "expm1OfTen",
        "defineProperty",
        "round",
        "x",
        "x",
        "x",
        "x",
        "x",
        "origMathRound",
        "x",
        "roundHandlesBoundaryConditions",
        "MathShims",
        "ES",
        "promise",
        "ES",
        "promise",
        "promise",
        "promise",
        "C",
        "ES",
        "C",
        "resolve",
        "reject",
        "capability",
        "resolve",
        "capability",
        "reject",
        "capability",
        "ES",
        "C",
        "resolver",
        "capability",
        "ES",
        "capability",
        "ES",
        "capability",
        "globals",
        "ES",
        "makeZeroTimeout",
        "fn",
        "timeouts",
        "fn",
        "messageName",
        "messageName",
        "timeouts",
        "timeouts",
        "fn",
        "handleMessage",
        "setZeroTimeout",
        "globals",
        "P",
        "P",
        "task",
        "P",
        "task",
        "ES",
        "globals",
        "globals",
        "globals",
        "process",
        "process",
        "process",
        "makePromiseAsap",
        "ES",
        "makeZeroTimeout",
        "makeZeroTimeout",
        "task",
        "setTimeout",
        "task",
        "x",
        "capability",
        "ES",
        "x",
        "capability",
        "capability",
        "x",
        "ES",
        "then",
        "then",
        "x",
        "resolve",
        "reject",
        "e",
        "reject",
        "e",
        "reactions",
        "x",
        "reactions",
        "reaction",
        "enqueue",
        "reaction",
        "reaction",
        "capability",
        "capability",
        "handler",
        "x",
        "result",
        "capability",
        "updatePromiseFromPotentialThenable",
        "result",
        "capability",
        "updateResult",
        "resolve",
        "result",
        "e",
        "reject",
        "e",
        "promise",
        "onFulfilled",
        "onRejected",
        "x",
        "x",
        "promise",
        "onRejected",
        "promise",
        "PromiseCapability",
        "C",
        "updatePromiseFromPotentialThenable",
        "x",
        "capability",
        "updateResult",
        "capability",
        "onFulfilled",
        "onRejected",
        "onFulfilled",
        "x",
        "resolver",
        "promise",
        "emulateES6construct",
        "promise",
        "promise",
        "promise",
        "ES",
        "resolver",
        "promise",
        "promise",
        "promise",
        "resolution",
        "promise",
        "promise",
        "promise",
        "resolution",
        "promise",
        "promise",
        "promise",
        "triggerPromiseReactions",
        "reactions",
        "resolution",
        "reason",
        "promise",
        "promise",
        "promise",
        "reason",
        "promise",
        "promise",
        "promise",
        "triggerPromiseReactions",
        "reactions",
        "reason",
        "resolver",
        "resolve",
        "reject",
        "e",
        "reject",
        "e",
        "promise",
        "Promise$prototype",
        "index",
        "values",
        "capability",
        "remaining",
        "x",
        "done",
        "done",
        "values",
        "index",
        "x",
        "remaining",
        "capability",
        "resolve",
        "values",
        "defineProperty",
        "symbolSpecies",
        "obj",
        "Promise$prototype",
        "obj",
        "obj",
        "create",
        "prototype",
        "defineProperties",
        "obj",
        "obj",
        "obj",
        "defineProperties",
        "all",
        "iterable",
        "PromiseCapability",
        "C",
        "capability",
        "capability",
        "ES",
        "iterable",
        "ES",
        "iterable",
        "index",
        "ES",
        "it",
        "next",
        "C",
        "next",
        "_promiseAllResolver",
        "index",
        "values",
        "capability",
        "remaining",
        "remaining",
        "nextPromise",
        "resolveElement",
        "capability",
        "remaining",
        "resolve",
        "values",
        "e",
        "reject",
        "e",
        "capability",
        "race",
        "iterable",
        "PromiseCapability",
        "C",
        "capability",
        "capability",
        "ES",
        "iterable",
        "ES",
        "iterable",
        "ES",
        "it",
        "next",
        "C",
        "next",
        "nextPromise",
        "resolve",
        "reject",
        "e",
        "reject",
        "e",
        "capability",
        "reject",
        "reason",
        "PromiseCapability",
        "C",
        "capability",
        "rejectPromise",
        "reason",
        "capability",
        "resolve",
        "v",
        "ES",
        "v",
        "v",
        "C",
        "v",
        "PromiseCapability",
        "C",
        "capability",
        "resolvePromise",
        "v",
        "capability",
        "defineProperties",
        "Promise$prototype",
        "onRejected",
        "onRejected",
        "then",
        "onFulfilled",
        "onRejected",
        "ES",
        "promise",
        "PromiseCapability",
        "C",
        "ES",
        "onRejected",
        "onRejected",
        "e",
        "e",
        "ES",
        "onFulfilled",
        "onFulfilled",
        "x",
        "x",
        "promiseResolutionHandler",
        "promise",
        "onFulfilled",
        "onRejected",
        "capability",
        "resolutionHandler",
        "capability",
        "onRejected",
        "promise",
        "promise",
        "resolveReaction",
        "promise",
        "rejectReaction",
        "triggerPromiseReactions",
        "resolveReaction",
        "promise",
        "triggerPromiseReactions",
        "rejectReaction",
        "promise",
        "capability",
        "globals",
        "globals",
        "globals",
        "globals",
        "defineProperties",
        "globals",
        "PromiseShim",
        "supportsSubclassing",
        "globals",
        "S",
        "S",
        "S",
        "globals",
        "noop",
        "ex",
        "noop",
        "e",
        "promiseSupportsSubclassing",
        "promiseIgnoresNonFunctionThenCallbacks",
        "promiseRequiresObjectContext",
        "PromiseShim",
        "defineProperty",
        "globals",
        "PromiseShim",
        "a",
        "a",
        "o",
        "k",
        "o",
        "k",
        "o",
        "a",
        "b",
        "testOrder",
        "testOrder",
        "supportsDescriptors",
        "fastkey",
        "key",
        "preservesInsertionOrder",
        "key",
        "key",
        "preservesNumericInsertionOrder",
        "key",
        "key",
        "emptyObject",
        "key",
        "value",
        "key",
        "value",
        "MapEntry",
        "empty",
        "kind",
        "kind",
        "MapIterator",
        "i",
        "i",
        "head",
        "i",
        "i",
        "i",
        "head",
        "i",
        "i",
        "i",
        "kind",
        "result",
        "i",
        "kind",
        "result",
        "i",
        "result",
        "i",
        "i",
        "i",
        "result",
        "addIterator",
        "MapIterator",
        "iterable",
        "ES",
        "emulateES6construct",
        "MapEntry",
        "head",
        "head",
        "head",
        "defineProperties",
        "head",
        "emptyObject",
        "iterable",
        "iterable",
        "ES",
        "iterable",
        "ES",
        "adder",
        "ES",
        "it",
        "next",
        "next",
        "ES",
        "nextItem",
        "adder",
        "nextItem",
        "nextItem",
        "defineProperty",
        "symbolSpecies",
        "obj",
        "Map$prototype",
        "obj",
        "obj",
        "create",
        "prototype",
        "defineProperties",
        "obj",
        "obj",
        "Value",
        "defineProperties",
        "key",
        "fastkey",
        "key",
        "fkey",
        "fkey",
        "entry",
        "entry",
        "i",
        "i",
        "head",
        "ES",
        "i",
        "key",
        "i",
        "key",
        "fastkey",
        "key",
        "fkey",
        "fkey",
        "i",
        "i",
        "head",
        "ES",
        "i",
        "key",
        "key",
        "value",
        "fastkey",
        "key",
        "fkey",
        "fkey",
        "fkey",
        "value",
        "entry",
        "fkey",
        "MapEntry",
        "key",
        "value",
        "i",
        "head",
        "i",
        "i",
        "head",
        "ES",
        "i",
        "key",
        "i",
        "value",
        "entry",
        "entry",
        "MapEntry",
        "key",
        "value",
        "ES",
        "key",
        "entry",
        "entry",
        "entry",
        "entry",
        "entry",
        "entry",
        "entry",
        "key",
        "fastkey",
        "key",
        "fkey",
        "fkey",
        "i",
        "fkey",
        "fkey",
        "i",
        "i",
        "head",
        "ES",
        "i",
        "key",
        "i",
        "i",
        "empty",
        "i",
        "i",
        "i",
        "i",
        "emptyObject",
        "i",
        "i",
        "p",
        "head",
        "i",
        "i",
        "empty",
        "p",
        "i",
        "i",
        "i",
        "head",
        "head",
        "head",
        "head",
        "MapIterator",
        "MapIterator",
        "MapIterator",
        "callback",
        "arguments",
        "arguments",
        "it",
        "entry",
        "entry",
        "it",
        "context",
        "callback",
        "context",
        "entry",
        "entry",
        "callback",
        "entry",
        "entry",
        "addIterator",
        "iterable",
        "ES",
        "emulateES6construct",
        "defineProperties",
        "emptyObject",
        "iterable",
        "iterable",
        "ES",
        "iterable",
        "ES",
        "adder",
        "ES",
        "it",
        "next",
        "next",
        "adder",
        "nextItem",
        "SetShim",
        "defineProperty",
        "SetShim",
        "symbolSpecies",
        "obj",
        "Set$prototype",
        "obj",
        "obj",
        "create",
        "prototype",
        "defineProperties",
        "obj",
        "obj",
        "ensureMap",
        "collectionShims",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "m",
        "k",
        "k",
        "Value",
        "SetShim",
        "ensureMap",
        "defineProperties",
        "SetShim",
        "key",
        "fkey",
        "fastkey",
        "key",
        "fkey",
        "ensureMap",
        "key",
        "key",
        "fkey",
        "fastkey",
        "key",
        "fkey",
        "ensureMap",
        "key",
        "key",
        "key",
        "fkey",
        "fastkey",
        "key",
        "_hasOwnProperty",
        "fkey",
        "fkey",
        "hasFKey",
        "ensureMap",
        "key",
        "emptyObject",
        "ensureMap",
        "ensureMap",
        "callback",
        "arguments",
        "arguments",
        "ensureMap",
        "entireSet",
        "value",
        "key",
        "context",
        "callback",
        "context",
        "key",
        "key",
        "entireSet",
        "callback",
        "key",
        "key",
        "entireSet",
        "defineProperty",
        "SetShim",
        "SetShim",
        "addIterator",
        "SetShim",
        "SetShim",
        "defineProperties",
        "globals",
        "collectionShims",
        "globals",
        "globals",
        "globals",
        "globals",
        "globals",
        "globals",
        "globals",
        "globals",
        "globals",
        "isCallableWithoutNew",
        "globals",
        "isCallableWithoutNew",
        "globals",
        "supportsSubclassing",
        "globals",
        "M",
        "M",
        "m",
        "m",
        "M",
        "globals",
        "collectionShims",
        "globals",
        "collectionShims",
        "globals",
        "globals",
        "defineProperty",
        "globals",
        "globals",
        "addIterator",
        "globals",
        "addIterator",
        "globals",
        "globals",
        "defineProperty",
        "globals",
        "globals",
        "throwUnlessTargetIsObject",
        "target",
        "ES",
        "target",
        "defineProperties",
        "globals",
        "apply",
        "ES",
        "arguments",
        "construct",
        "args",
        "ES",
        "ES",
        "args",
        "deleteProperty",
        "target",
        "key",
        "throwUnlessTargetIsObject",
        "target",
        "supportsDescriptors",
        "target",
        "key",
        "desc",
        "desc",
        "target",
        "key",
        "target",
        "throwUnlessTargetIsObject",
        "target",
        "ObjectIterator",
        "target",
        "has",
        "target",
        "key",
        "throwUnlessTargetIsObject",
        "target",
        "key",
        "target",
        "defineProperties",
        "globals",
        "ownKeys",
        "target",
        "throwUnlessTargetIsObject",
        "target",
        "target",
        "ES",
        "keys",
        "keys",
        "target",
        "keys",
        "defineProperties",
        "globals",
        "isExtensible",
        "target",
        "throwUnlessTargetIsObject",
        "target",
        "target",
        "preventExtensions",
        "target",
        "throwUnlessTargetIsObject",
        "target",
        "callAndCatchException",
        "target",
        "supportsDescriptors",
        "get",
        "target",
        "key",
        "receiver",
        "target",
        "key",
        "desc",
        "target",
        "parent",
        "internal_get",
        "parent",
        "key",
        "receiver",
        "desc",
        "desc",
        "desc",
        "desc",
        "receiver",
        "target",
        "key",
        "value",
        "receiver",
        "target",
        "key",
        "desc",
        "target",
        "parent",
        "internal_set",
        "parent",
        "key",
        "value",
        "receiver",
        "desc",
        "desc",
        "desc",
        "ES",
        "receiver",
        "receiver",
        "key",
        "existingDesc",
        "receiver",
        "key",
        "value",
        "receiver",
        "key",
        "value",
        "desc",
        "desc",
        "receiver",
        "value",
        "ConvertExceptionToBoolean",
        "func",
        "func",
        "_",
        "defineProperties",
        "globals",
        "defineProperty",
        "target",
        "propertyKey",
        "attributes",
        "throwUnlessTargetIsObject",
        "target",
        "callAndCatchException",
        "target",
        "propertyKey",
        "attributes",
        "getOwnPropertyDescriptor",
        "target",
        "propertyKey",
        "throwUnlessTargetIsObject",
        "target",
        "target",
        "propertyKey",
        "get",
        "target",
        "key",
        "throwUnlessTargetIsObject",
        "target",
        "arguments",
        "arguments",
        "target",
        "internal_get",
        "target",
        "key",
        "receiver",
        "target",
        "key",
        "value",
        "throwUnlessTargetIsObject",
        "target",
        "arguments",
        "arguments",
        "target",
        "internal_set",
        "target",
        "key",
        "value",
        "receiver",
        "defineProperties",
        "globals",
        "getPrototypeOf",
        "target",
        "throwUnlessTargetIsObject",
        "target",
        "objectDotGetPrototypeOf",
        "target",
        "proto",
        "proto",
        "proto",
        "proto",
        "proto",
        "defineProperties",
        "globals",
        "setPrototypeOf",
        "proto",
        "throwUnlessTargetIsObject",
        "proto",
        "ES",
        "proto",
        "proto",
        "willCreateCircularPrototype",
        "proto",
        "proto",
        "NaN",
        "toString",
        "valueOf",
        "valueOf",
        "dateToString",
        "defineProperty",
        "shimmedDateToString",
        "dateToString",
        "defineProperty",
        "shimmedDateToString",
        "anchor",
        "name",
        "ES",
        "name",
        "big",
        "ES",
        "blink",
        "ES",
        "bold",
        "ES",
        "ES",
        "fontcolor",
        "color",
        "ES",
        "color",
        "fontsize",
        "size",
        "ES",
        "size",
        "italics",
        "ES",
        "link",
        "url",
        "ES",
        "url",
        "small",
        "ES",
        "strike",
        "ES",
        "sub",
        "ES",
        "sub",
        "ES",
        "defineProperties",
        "stringHTMLshims",
        "stringHTMLshims",
        "key",
        "key",
        "ES",
        "method",
        "method",
        "output",
        "shouldOverwrite",
        "output",
        "output",
        "quotesCount",
        "shouldOverwrite",
        "shouldOverwrite",
        "defineProperty",
        "key",
        "stringHTMLshims",
        "key",
        "globals",
        "require",
        "require",
        "exports",
        "draining",
        "draining",
        "queue",
        "len",
        "currentQueue",
        "queue",
        "queue",
        "i",
        "len",
        "currentQueue",
        "i",
        "len",
        "queue",
        "draining",
        "process",
        "fun",
        "queue",
        "fun",
        "draining",
        "setTimeout",
        "drainQueue",
        "process",
        "process",
        "process",
        "process",
        "process",
        "process",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "name",
        "process",
        "process",
        "dir",
        "process",
        "require",
        "exports",
        "require",
        "require"
    ],
    "literals": [
        "\"function\"",
        "\"Cannot find module '\"",
        "\"'\"",
        "\"MODULE_NOT_FOUND\"",
        "\"function\"",
        "'use strict'",
        "'function'",
        "'object'",
        "'[object Array]'",
        "'function'",
        "'symbol'",
        "'[object Function]'",
        "'[object GeneratorFunction]'",
        "'function'",
        "'[object RegExp]'",
        "'object'",
        "'[object String]'",
        "'string'",
        "'object'",
        "'[object Arguments]'",
        "'object'",
        "'number'",
        "'x'",
        "'undefined'",
        "'boolean'",
        "'number'",
        "'string'",
        "\"can't convert \"",
        "' to object'",
        "'Function.prototype.bind called on incompatible '",
        "'$'",
        "'binder'",
        "'return function ('",
        "','",
        "'){ return binder.apply(this, arguments); }'",
        "'number'",
        "'a'",
        "'a'",
        "'foo'",
        "'object'",
        "'use strict'",
        "'string'",
        "'x'",
        "''",
        "''",
        "' is not a function'",
        "''",
        "' is not a function'",
        "''",
        "' is not a function'",
        "''",
        "' is not a function'",
        "'es5'",
        "'object'",
        "''",
        "' is not a function'",
        "'reduce of empty array with no initial value'",
        "'reduce of empty array with no initial value'",
        "'es5'",
        "'object'",
        "''",
        "' is not a function'",
        "'reduceRight of empty array with no initial value'",
        "'reduceRight of empty array with no initial value'",
        "''",
        "''",
        "'toString'",
        "'toString'",
        "'prototype'",
        "'x'",
        "'0'",
        "'toString'",
        "'toLocaleString'",
        "'valueOf'",
        "'hasOwnProperty'",
        "'isPrototypeOf'",
        "'propertyIsEnumerable'",
        "'constructor'",
        "'object'",
        "'Object.keys called on a non-object'",
        "'prototype'",
        "'constructor'",
        "'-000001'",
        "'Date.prototype.toISOString called on non-finite value.'",
        "'-'",
        "'+'",
        "''",
        "'00000'",
        "'0'",
        "'-'",
        "'-'",
        "'T'",
        "':'",
        "'.'",
        "'000'",
        "'Z'",
        "'number'",
        "'function'",
        "'toISOString property is not callable'",
        "'+033658-09-27T01:46:40.000Z'",
        "'2012-04-04T24:00:00.500Z'",
        "'2012-11-31T23:59:59.000Z'",
        "'2000-01-01T00:00:00.000Z'",
        "'^'",
        "'(\\\\d{4}|[+-]\\\\d{6})'",
        "'(?:-(\\\\d{2})'",
        "'(?:-(\\\\d{2})'",
        "'(?:'",
        "'T(\\\\d{2})'",
        "':(\\\\d{2})'",
        "'(?:'",
        "':(\\\\d{2})'",
        "'(?:(\\\\.\\\\d{1,}))?'",
        "')?'",
        "'('",
        "'Z|'",
        "'(?:'",
        "'([-+])'",
        "'(\\\\d{2})'",
        "':(\\\\d{2})'",
        "')'",
        "')?)?)?)?'",
        "'$'",
        "'-'",
        "'0.000'",
        "'1'",
        "'1.25'",
        "'1000000000000000128'",
        "''",
        "''",
        "''",
        "'0000000'",
        "'Number.toFixed called with invalid number of decimals'",
        "'NaN'",
        "''",
        "'-'",
        "'0'",
        "'0.00000000000000000000'",
        "'0.0000000000000000000'",
        "'.'",
        "'ab'",
        "'.'",
        "'tesst'",
        "'t'",
        "'test'",
        "''",
        "'.'",
        "''",
        "'undefined'",
        "'undefined'",
        "'i'",
        "''",
        "'m'",
        "''",
        "'x'",
        "''",
        "'y'",
        "''",
        "'g'",
        "''",
        "'^'",
        "'$(?!\\\\s)'",
        "'undefined'",
        "'undefined'",
        "''",
        "''",
        "'0'",
        "'undefined'",
        "'x'",
        "'undefined'",
        "''",
        "'0b'",
        "'b'",
        "'\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003'",
        "'\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028'",
        "'\\u2029\\uFEFF'",
        "'\\u200b'",
        "'['",
        "']'",
        "'^'",
        "'*'",
        "'*$'",
        "'undefined'",
        "\"can't convert \"",
        "' to object'",
        "''",
        "''",
        "'08'",
        "'0x16'",
        "'function'",
        "'object'",
        "'use strict'",
        "'x'",
        "'/a/'",
        "'return this;'",
        "'@@species'",
        "'object'",
        "'[object String]'",
        "'[object RegExp]'",
        "'function'",
        "'symbol'",
        "'getters require true ES5 support'",
        "'getters require true ES5 support'",
        "'toString'",
        "'undefined'",
        "'_es6-shim iterator_'",
        "'@@iterator'",
        "'function'",
        "'@@iterator'",
        "'[object Arguments]'",
        "'[object Array]'",
        "'object'",
        "'number'",
        "'[object Function]'",
        "' is not a function'",
        "'Cannot call method on '",
        "'function'",
        "'[object Function]'",
        "'[object Symbol]'",
        "'Cannot convert a Symbol value to a number'",
        "'undefined'",
        "'value'",
        "'value is not an iterable'",
        "'bad iterator'",
        "'bad iterator'",
        "'<'",
        "''",
        "'&quot;'",
        "' '",
        "'=\"'",
        "'\"'",
        "'>'",
        "'</'",
        "'>'",
        "'bad object'",
        "''",
        "''",
        "'undefined'",
        "'Invalid code point '",
        "''",
        "'bad callSite'",
        "'bad raw value'",
        "''",
        "''",
        "''",
        "'fromCodePoint'",
        "''",
        "'repeat count must be less than infinity and not overflow maximum string size'",
        "'Cannot call method \"startsWith\" with a regex'",
        "'Cannot call method \"endsWith\" with a regex'",
        "'undefined'",
        "'\\u0085'",
        "'\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003'",
        "'\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028'",
        "'\\u2029\\uFEFF'",
        "''",
        "'(^['",
        "']+)|(['",
        "']+$)'",
        "'g'",
        "'undefined'",
        "\"can't convert \"",
        "' to object'",
        "''",
        "'undefined'",
        "'startsWith'",
        "'endsWith'",
        "'bad iterable'",
        "'undefined'",
        "'Array.from: when provided, the second argument must be a function'",
        "'from'",
        "'Not an ArrayIterator'",
        "'undefined'",
        "'key'",
        "'value'",
        "'entry'",
        "'Not an ObjectIterator'",
        "'key'",
        "'value'",
        "'undefined'",
        "'undefined'",
        "'undefined'",
        "'Array#find: predicate must be a function'",
        "'Array#findIndex: predicate must be a function'",
        "'key'",
        "'value'",
        "'entry'",
        "'values'",
        "'values'",
        "'number'",
        "'find'",
        "'findIndex'",
        "'target must be an object'",
        "'cannot set prototype on a non-object'",
        "'can only set prototype to an object or null'",
        "'__proto__'",
        "'foo'",
        "'keys'",
        "'foo'",
        "'getOwnPropertyNames'",
        "'foo'",
        "'bar'",
        "'getOwnPropertyDescriptor'",
        "'foo'",
        "'seal'",
        "'foo'",
        "'isSealed'",
        "'foo'",
        "'freeze'",
        "'foo'",
        "'isFrozen'",
        "'foo'",
        "'preventExtensions'",
        "'foo'",
        "'isExtensible'",
        "'foo'",
        "'getPrototypeOf'",
        "'Method called on incompatible type: must be an object.'",
        "''",
        "'g'",
        "'i'",
        "'m'",
        "'u'",
        "'y'",
        "'flags'",
        "'i'",
        "'/a/i'",
        "'$input'",
        "'constructor'",
        "'RegExp'",
        "'tanh'",
        "'acosh'",
        "'sinh'",
        "'expm1'",
        "'round'",
        "'undefined'",
        "'bad promise constructor'",
        "'bad promise constructor'",
        "'bad promise constructor'",
        "'undefined'",
        "'zero-timeout-message'",
        "'*'",
        "'message'",
        "'object'",
        "'self resolution'",
        "'self resolution'",
        "'bad promise'",
        "'undefined'",
        "'promise already initialized'",
        "'not a valid resolver'",
        "'unresolved'",
        "'unresolved'",
        "'has-resolution'",
        "'unresolved'",
        "'has-rejection'",
        "'bad iterable'",
        "'bad iterable'",
        "'catch'",
        "'not a promise'",
        "'unresolved'",
        "'has-resolution'",
        "'has-rejection'",
        "'unexpected'",
        "'Promise'",
        "':'",
        "':'",
        "'z'",
        "'a'",
        "'bb'",
        "'z'",
        "'a'",
        "'3'",
        "'string'",
        "'$'",
        "'number'",
        "'n'",
        "'undefined'",
        "'key'",
        "'value'",
        "\"Constructor Map requires 'new'\"",
        "'bad map'",
        "'undefined'",
        "'bad map'",
        "'expected iterable of pairs'",
        "'size'",
        "'undefined'",
        "'size method called on incompatible Map'",
        "'undefined'",
        "'undefined'",
        "'delete'",
        "'undefined'",
        "'key'",
        "'value'",
        "'key+value'",
        "\"Constructor Set requires 'new'\"",
        "'bad set'",
        "'[[SetData]]'",
        "'undefined'",
        "'bad set'",
        "'[[SetData]]'",
        "'[[SetData]]'",
        "'n'",
        "'size'",
        "'undefined'",
        "'size method called on incompatible Set'",
        "'[[SetData]]'",
        "'[[SetData]]'",
        "'[[SetData]]'",
        "'delete'",
        "'[[SetData]]'",
        "'delete'",
        "'[[SetData]]'",
        "'[[SetData]]'",
        "'[[SetData]]'",
        "'[[SetData]]'",
        "'keys'",
        "'function'",
        "'function'",
        "'function'",
        "'function'",
        "'function'",
        "'keys'",
        "'Reflect'",
        "'target must be an object'",
        "'First argument must be callable.'",
        "'key'",
        "'value'",
        "'value'",
        "'proto must be an object or null'",
        "'Invalid Date'",
        "'Invalid Date'",
        "'toString'",
        "'toString'",
        "'a'",
        "'name'",
        "'big'",
        "''",
        "''",
        "'blink'",
        "''",
        "''",
        "'b'",
        "''",
        "''",
        "'tt'",
        "''",
        "''",
        "'font'",
        "'color'",
        "'font'",
        "'size'",
        "'i'",
        "''",
        "''",
        "'a'",
        "'href'",
        "'small'",
        "''",
        "''",
        "'strike'",
        "''",
        "''",
        "'sub'",
        "''",
        "''",
        "'sup'",
        "''",
        "''",
        "''",
        "' \" '",
        "'_process'",
        "\"_process\"",
        "'browser'",
        "''",
        "'process.binding is not supported'",
        "'/'",
        "'process.chdir is not supported'",
        "\"es5-shim\"",
        "\"es6-shim\"",
        "\"es5-shim\"",
        "\"es6-shim\""
    ],
    "variables": [
        "a",
        "f",
        "l",
        "n",
        "i",
        "o",
        "ArrayPrototype",
        "ObjectPrototype",
        "FunctionPrototype",
        "StringPrototype",
        "NumberPrototype",
        "array_slice",
        "array_splice",
        "array_push",
        "array_unshift",
        "call",
        "to_string",
        "isArray",
        "hasToStringTag",
        "isCallable",
        "fnToStr",
        "tryFunctionObject",
        "fnClass",
        "genClass",
        "strClass",
        "isRegex",
        "regexExec",
        "tryRegexExec",
        "regexClass",
        "isString",
        "strValue",
        "tryStringObject",
        "stringClass",
        "isArguments",
        "isArgs",
        "defineProperties",
        "supportsDescriptors",
        "defineProperty",
        "ES",
        "n",
        "val",
        "valueOf",
        "toStr",
        "Empty",
        "target",
        "args",
        "bound",
        "binder",
        "result",
        "boundLength",
        "boundArgs",
        "i",
        "owns",
        "spliceNoopReturnsEmptyArray",
        "a",
        "result",
        "spliceWorksWithEmptyObject",
        "obj",
        "args",
        "arguments",
        "hasUnshiftReturnValueBug",
        "boxedString",
        "splitString",
        "properlyBoxesContext",
        "properlyBoxesNonStrict",
        "properlyBoxesStrict",
        "thisp",
        "i",
        "length",
        "length",
        "result",
        "thisp",
        "i",
        "length",
        "result",
        "value",
        "thisp",
        "i",
        "length",
        "thisp",
        "i",
        "length",
        "thisp",
        "i",
        "reduceCoercesToObject",
        "length",
        "i",
        "result",
        "reduceRightCoercesToObject",
        "length",
        "result",
        "i",
        "hasFirefox2IndexOfBug",
        "length",
        "i",
        "hasFirefox2LastIndexOfBug",
        "length",
        "i",
        "hasDontEnumBug",
        "hasProtoEnumBug",
        "hasStringEnumBug",
        "dontEnums",
        "dontEnumsLength",
        "isFn",
        "isArgs",
        "isObject",
        "isStr",
        "theKeys",
        "skipProto",
        "i",
        "ctor",
        "skipConstructor",
        "j",
        "dontEnum",
        "keysWorksWithArguments",
        "originalKeys",
        "negativeDate",
        "negativeYearString",
        "hasNegativeDateBug",
        "result",
        "length",
        "value",
        "year",
        "month",
        "dateToJSONIsSupported",
        "o",
        "tv",
        "toISO",
        "supportsExtendedYears",
        "acceptsInvalidDates",
        "doesNotParseY2KNewYear",
        "length",
        "date",
        "isoDateExpression",
        "months",
        "t",
        "match",
        "year",
        "month",
        "day",
        "hour",
        "minute",
        "second",
        "millisecond",
        "isLocalTime",
        "signOffset",
        "hourOffset",
        "minuteOffset",
        "result",
        "hasToFixedBugs",
        "toFixedHelpers",
        "i",
        "i",
        "c",
        "i",
        "s",
        "t",
        "n",
        "f",
        "x",
        "s",
        "m",
        "e",
        "z",
        "j",
        "k",
        "string_split",
        "compliantExecNpcg",
        "output",
        "flags",
        "lastLastIndex",
        "separator2",
        "match",
        "lastIndex",
        "lastLength",
        "i",
        "str_replace",
        "replaceReportsGroupsCorrectly",
        "groups",
        "isFn",
        "hasCapturingGroups",
        "wrappedReplaceValue",
        "length",
        "originalLastIndex",
        "args",
        "string_substr",
        "hasNegativeSubstrBug",
        "ws",
        "zeroWidth",
        "wsRegexChars",
        "trimBeginRegexp",
        "trimEndRegexp",
        "hasTrimWhitespaceBug",
        "hexRegex",
        "isCallableWithoutNew",
        "supportsSubclassing",
        "Sub",
        "arePropertyDescriptorsSupported",
        "startsWithRejectsRegex",
        "rejectsRegex",
        "getGlobal",
        "globals",
        "global_isFinite",
        "supportsDescriptors",
        "startsWithIsCompliant",
        "_indexOf",
        "_toString",
        "_hasOwnProperty",
        "ArrayIterator",
        "noop",
        "symbolSpecies",
        "Type",
        "defineProperty",
        "Value",
        "originalDescriptor",
        "descriptor",
        "defineProperties",
        "method",
        "create",
        "$iterator$",
        "addIterator",
        "o",
        "isArguments",
        "result",
        "safeApply",
        "ES",
        "args",
        "number",
        "len",
        "itFn",
        "it",
        "result",
        "obj",
        "result",
        "S",
        "p1",
        "V",
        "escapedV",
        "p2",
        "p3",
        "emulateES6construct",
        "numberConversion",
        "w",
        "f",
        "bias",
        "s",
        "e",
        "f",
        "i",
        "bits",
        "bits",
        "i",
        "j",
        "b",
        "bias",
        "s",
        "e",
        "f",
        "conversions",
        "float32array",
        "result",
        "next",
        "i",
        "length",
        "cooked",
        "rawValue",
        "rawString",
        "len",
        "literalsegments",
        "stringElements",
        "nextIndex",
        "nextKey",
        "next",
        "nextSeg",
        "nextSub",
        "originalFromCodePoint",
        "stringRepeat",
        "half",
        "stringMaxLength",
        "Infinity",
        "StringShims",
        "thisStr",
        "thisStr",
        "startArg",
        "start",
        "thisStr",
        "thisLen",
        "posArg",
        "pos",
        "end",
        "position",
        "thisStr",
        "position",
        "length",
        "first",
        "isEnd",
        "second",
        "hasStringTrimBug",
        "ws",
        "trimRegexp",
        "StringIterator",
        "s",
        "i",
        "first",
        "second",
        "len",
        "ArrayShims",
        "mapFn",
        "hasThisArg",
        "thisArg",
        "usingIterator",
        "length",
        "result",
        "i",
        "value",
        "it",
        "iterationValue",
        "arrayFromSwallowsNegativeLengths",
        "iterator_result",
        "i",
        "array",
        "len",
        "kind",
        "retval",
        "ObjectIterator",
        "keys",
        "key",
        "array",
        "ArrayPrototypeShims",
        "end",
        "o",
        "len",
        "to",
        "fin",
        "count",
        "direction",
        "start",
        "end",
        "O",
        "len",
        "relativeStart",
        "relativeEnd",
        "i",
        "relativeStart",
        "length",
        "thisArg",
        "i",
        "value",
        "length",
        "thisArg",
        "i",
        "originalArrayPrototypeValues",
        "maxSafeInteger",
        "checkArgs",
        "setPrototypeOf",
        "FAKENULL",
        "gpo",
        "spo",
        "result",
        "objectKeysAcceptsPrimitives",
        "originalObjectKeys",
        "objectGOPNAcceptsPrimitives",
        "originalObjectGetOwnPropertyNames",
        "objectGOPDAcceptsPrimitives",
        "originalObjectGetOwnPropertyDescriptor",
        "objectSealAcceptsPrimitives",
        "originalObjectSeal",
        "objectIsSealedAcceptsPrimitives",
        "originalObjectIsSealed",
        "objectFreezeAcceptsPrimitives",
        "originalObjectFreeze",
        "objectIsFrozenAcceptsPrimitives",
        "originalObjectIsFrozen",
        "objectPreventExtensionsAcceptsPrimitives",
        "originalObjectPreventExtensions",
        "objectIsExtensibleAcceptsPrimitives",
        "originalObjectIsExtensible",
        "objectGetProtoAcceptsPrimitives",
        "originalGetProto",
        "regExpFlagsGetter",
        "result",
        "regExpSupportsFlagsWithRegex",
        "OrigRegExp",
        "RegExpShim",
        "MathShims",
        "x",
        "negate",
        "result",
        "number",
        "x",
        "t",
        "x",
        "sum",
        "n",
        "anyNaN",
        "allZero",
        "anyInfinity",
        "numbers",
        "num",
        "largest",
        "divided",
        "sum",
        "x",
        "number",
        "x",
        "x",
        "a",
        "b",
        "number",
        "ah",
        "al",
        "bh",
        "bl",
        "num",
        "expm1OfTen",
        "roundHandlesBoundaryConditions",
        "origMathRound",
        "PromiseShim",
        "Promise$prototype",
        "PromiseCapability",
        "capability",
        "resolver",
        "setTimeout",
        "makeZeroTimeout",
        "timeouts",
        "messageName",
        "setZeroTimeout",
        "handleMessage",
        "fn",
        "makePromiseAsap",
        "P",
        "enqueue",
        "updatePromiseFromPotentialThenable",
        "resolve",
        "reject",
        "then",
        "triggerPromiseReactions",
        "handler",
        "capability",
        "resolve",
        "reject",
        "result",
        "updateResult",
        "promiseResolutionHandler",
        "C",
        "capability",
        "updateResult",
        "promise",
        "resolve",
        "reactions",
        "reject",
        "reactions",
        "_promiseAllResolver",
        "done",
        "resolve",
        "prototype",
        "C",
        "capability",
        "resolve",
        "reject",
        "it",
        "values",
        "remaining",
        "index",
        "next",
        "nextPromise",
        "resolveElement",
        "C",
        "capability",
        "resolve",
        "reject",
        "it",
        "next",
        "nextPromise",
        "C",
        "capability",
        "rejectPromise",
        "C",
        "capability",
        "resolvePromise",
        "promise",
        "C",
        "capability",
        "resolutionHandler",
        "resolveReaction",
        "rejectReaction",
        "promiseSupportsSubclassing",
        "promiseIgnoresNonFunctionThenCallbacks",
        "promiseRequiresObjectContext",
        "testOrder",
        "b",
        "preservesInsertionOrder",
        "preservesNumericInsertionOrder",
        "fastkey",
        "emptyObject",
        "collectionShims",
        "empty",
        "i",
        "kind",
        "head",
        "result",
        "head",
        "it",
        "adder",
        "next",
        "nextItem",
        "Map$prototype",
        "prototype",
        "fkey",
        "entry",
        "head",
        "i",
        "head",
        "fkey",
        "head",
        "i",
        "head",
        "head",
        "i",
        "head",
        "entry",
        "fkey",
        "head",
        "i",
        "head",
        "fkey",
        "head",
        "i",
        "head",
        "p",
        "context",
        "it",
        "entry",
        "SetShim",
        "it",
        "adder",
        "next",
        "nextItem",
        "Set$prototype",
        "prototype",
        "ensureMap",
        "m",
        "fkey",
        "fkey",
        "fkey",
        "hasFKey",
        "context",
        "entireSet",
        "m",
        "throwUnlessTargetIsObject",
        "desc",
        "keys",
        "internal_get",
        "desc",
        "parent",
        "internal_set",
        "desc",
        "parent",
        "existingDesc",
        "callAndCatchException",
        "receiver",
        "receiver",
        "objectDotGetPrototypeOf",
        "willCreateCircularPrototype",
        "dateToString",
        "shimmedDateToString",
        "valueOf",
        "stringHTMLshims",
        "method",
        "shouldOverwrite",
        "output",
        "quotesCount",
        "process",
        "queue",
        "draining",
        "currentQueue",
        "len",
        "i"
    ],
    "comments": [
        "!\n * https://github.com/es-shims/es5-shim\n * @license es5-shim Copyright 2009-2014 by contributors, MIT License\n * see https://github.com/es-shims/es5-shim/blob/master/LICENSE",
        "vim: ts=4 sts=4 sw=4 expandtab",
        "Add semicolon to prevent IIFE from being passed as argument to concatenated code.",
        "UMD (Universal Module Definition)",
        "see https://github.com/umdjs/umd/blob/master/returnExports.js",
        "global define, exports, module",
        "AMD. Register as an anonymous module.",
        "Node. Does not work with strict CommonJS, but",
        "only CommonJS-like enviroments that support module.exports,",
        "like Node.",
        "Browser globals (root is window)",
        "Shortcut to an often accessed properties, in order to avoid multiple",
        "dereference that costs universally.",
        "Having a toString local variable name breaks in Opera so use to_string.",
        "inlined from https://npmjs.com/is-callable",
        "inlined from https://npmjs.com/is-regex",
        "inlined from https://npmjs.com/is-string",
        "inlined from http://npmjs.com/define-properties",
        "this is ES3",
        "Define configurable, writable and non-enumerable props",
        "if they don't exist.",
        "",
        "Util",
        "======",
        "",
        "replaceable with https://npmjs.com/package/es-abstract /helpers/isPrimitive",
        "ES5 9.4",
        "http://es5.github.com/#x9.4",
        "http://jsperf.com/to-integer",
        "replaceable with https://npmjs.com/package/es-abstract ES5.ToInteger",
        "isNaN",
        "replaceable with https://npmjs.com/package/es-abstract ES5.ToPrimitive",
        "ES5 9.9",
        "http://es5.github.com/#x9.9",
        "replaceable with https://npmjs.com/package/es-abstract ES5.ToObject",
        "jshint eqnull: true",
        "this matches both null and undefined",
        "replaceable with https://npmjs.com/package/es-abstract ES5.ToUint32",
        "",
        "Function",
        "========",
        "",
        "ES-5 15.3.4.5",
        "http://es5.github.com/#x15.3.4.5",
        ".length is 1",
        "1. Let Target be the this value.",
        "2. If IsCallable(Target) is false, throw a TypeError exception.",
        "3. Let A be a new (possibly empty) internal list of all of the",
        "argument values provided after thisArg (arg1, arg2 etc), in order.",
        "XXX slicedArgs will stand in for \"A\" if used",
        "for normal call",
        "4. Let F be a new native ECMAScript object.",
        "11. Set the [[Prototype]] internal property of F to the standard",
        "built-in Function prototype object as specified in 15.3.3.1.",
        "12. Set the [[Call]] internal property of F as described in",
        "15.3.4.5.1.",
        "13. Set the [[Construct]] internal property of F as described in",
        "15.3.4.5.2.",
        "14. Set the [[HasInstance]] internal property of F as described in",
        "15.3.4.5.3.",
        "15.3.4.5.2 [[Construct]]",
        "When the [[Construct]] internal method of a function object,",
        "F that was created using the bind function is called with a",
        "list of arguments ExtraArgs, the following steps are taken:",
        "1. Let target be the value of F's [[TargetFunction]]",
        "internal property.",
        "2. If target has no [[Construct]] internal method, a",
        "TypeError exception is thrown.",
        "3. Let boundArgs be the value of F's [[BoundArgs]] internal",
        "property.",
        "4. Let args be a new list containing the same values as the",
        "list boundArgs in the same order followed by the same",
        "values as the list ExtraArgs in the same order.",
        "5. Return the result of calling the [[Construct]] internal",
        "method of target providing args as the arguments.",
        "15.3.4.5.1 [[Call]]",
        "When the [[Call]] internal method of a function object, F,",
        "which was created using the bind function is called with a",
        "this value and a list of arguments ExtraArgs, the following",
        "steps are taken:",
        "1. Let boundArgs be the value of F's [[BoundArgs]] internal",
        "property.",
        "2. Let boundThis be the value of F's [[BoundThis]] internal",
        "property.",
        "3. Let target be the value of F's [[TargetFunction]] internal",
        "property.",
        "4. Let args be a new list containing the same values as the",
        "list boundArgs in the same order followed by the same",
        "values as the list ExtraArgs in the same order.",
        "5. Return the result of calling the [[Call]] internal method",
        "of target providing boundThis as the this value and",
        "providing args as the arguments.",
        "equiv: target.call(this, ...boundArgs, ...args)",
        "15. If the [[Class]] internal property of Target is \"Function\", then",
        "a. Let L be the length property of Target minus the length of A.",
        "b. Set the length own property of F to either 0 or L, whichever is",
        "larger.",
        "16. Else set the length own property of F to 0.",
        "17. Set the attributes of the length own property of F to the values",
        "specified in 15.3.5.1.",
        "XXX Build a dynamic function with desired amount of arguments is the only",
        "way to set the length property of a function.",
        "In environments where Content Security Policies enabled (Chrome extensions,",
        "for ex.) all use of eval or Function costructor throws an exception.",
        "However in all of these environments Function.prototype.bind exists",
        "and so this code will never be executed.",
        "Clean up dangling references.",
        "TODO",
        "18. Set the [[Extensible]] internal property of F to true.",
        "TODO",
        "19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).",
        "20. Call the [[DefineOwnProperty]] internal method of F with",
        "arguments \"caller\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:",
        "thrower, [[Enumerable]]: false, [[Configurable]]: false}, and",
        "false.",
        "21. Call the [[DefineOwnProperty]] internal method of F with",
        "arguments \"arguments\", PropertyDescriptor {[[Get]]: thrower,",
        "[[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},",
        "and false.",
        "TODO",
        "NOTE Function objects created using Function.prototype.bind do not",
        "have a prototype property or the [[Code]], [[FormalParameters]], and",
        "[[Scope]] internal properties.",
        "XXX can't delete prototype in pure-js.",
        "22. Return F.",
        "_Please note: Shortcuts are defined after `Function.prototype.bind` as we",
        "us it in defining shortcuts.",
        "",
        "Array",
        "=====",
        "",
        "ES5 15.4.4.12",
        "http://es5.github.com/#x15.4.4.12",
        "Safari 5.0 bug where .splice() returns undefined",
        "ES5 15.4.4.12",
        "http://es5.github.com/#x15.4.4.13",
        "Return len+argCount.",
        "[bugfix, ielt8]",
        "IE < 8 bug: [].unshift(0) === undefined but should be \"1\"",
        "ES5 15.4.3.2",
        "http://es5.github.com/#x15.4.3.2",
        "https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray",
        "The IsCallable() check in the Array functions",
        "has been replaced with a strict check on the",
        "internal class of the object to trap cases where",
        "the provided function was actually a regular",
        "expression literal, which in V8 and",
        "JavaScriptCore is a typeof \"function\".  Only in",
        "V8 are regular expression literals permitted as",
        "reduce parameters, so it is desirable in the",
        "general case for the shim to match the more",
        "strict and common behavior of rejecting regular",
        "expressions.",
        "ES5 15.4.4.18",
        "http://es5.github.com/#x15.4.4.18",
        "https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/array/forEach",
        "Check failure of by-index access of string characters (IE < 9)",
        "and failure of `0 in boxedString` (Rhino)",
        "Check node 0.6.21 bug where third parameter is not boxed",
        ", thisp",
        "If no callback function or if callback is not a callable function",
        "TODO message",
        "Invoke the callback function with call, passing arguments:",
        "context, property value, property key, thisArg object",
        "context",
        "ES5 15.4.4.19",
        "http://es5.github.com/#x15.4.4.19",
        "https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map",
        ", thisp",
        "If no callback function or if callback is not a callable function",
        "ES5 15.4.4.20",
        "http://es5.github.com/#x15.4.4.20",
        "https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter",
        ", thisp",
        "If no callback function or if callback is not a callable function",
        "ES5 15.4.4.16",
        "http://es5.github.com/#x15.4.4.16",
        "https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/every",
        ", thisp",
        "If no callback function or if callback is not a callable function",
        "ES5 15.4.4.17",
        "http://es5.github.com/#x15.4.4.17",
        "https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/some",
        ", thisp",
        "If no callback function or if callback is not a callable function",
        "ES5 15.4.4.21",
        "http://es5.github.com/#x15.4.4.21",
        "https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduce",
        ", initial",
        "If no callback function or if callback is not a callable function",
        "no value to return if no initial value and an empty array",
        "if array contains no values, no initial value to return",
        "ES5 15.4.4.22",
        "http://es5.github.com/#x15.4.4.22",
        "https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduceRight",
        ", initial",
        "If no callback function or if callback is not a callable function",
        "no value to return if no initial value, empty array",
        "if array contains no values, no initial value to return",
        "ES5 15.4.4.14",
        "http://es5.github.com/#x15.4.4.14",
        "https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf",
        ", fromIndex",
        "handle negative indices",
        "ES5 15.4.4.15",
        "http://es5.github.com/#x15.4.4.15",
        "https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/lastIndexOf",
        ", fromIndex",
        "handle negative indices",
        "",
        "Object",
        "======",
        "",
        "ES5 15.2.3.14",
        "http://es5.github.com/#x15.2.3.14",
        "http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation",
        "Safari 5.0 bug",
        "",
        "Date",
        "====",
        "",
        "ES5 15.9.5.43",
        "http://es5.github.com/#x15.9.5.43",
        "This function returns a String value represent the instance in time",
        "represented by this Date object. The format of the String is the Date Time",
        "string format defined in 15.9.1.15. All fields are present in the String.",
        "The time zone is always UTC, denoted by the suffix Z. If the time value of",
        "this object is not a finite Number a RangeError exception is thrown.",
        "see https://github.com/es-shims/es5-shim/issues/111",
        "the date time string format is specified in 15.9.1.15.",
        "pad months, days, hours, minutes, and seconds to have two",
        "digits.",
        "pad milliseconds to have three digits.",
        "ES5 15.9.5.44",
        "http://es5.github.com/#x15.9.5.44",
        "This function provides a String representation of a Date object for use by",
        "JSON.stringify (15.12.3).",
        "generic",
        "When the toJSON method is called with argument key, the following",
        "steps are taken:",
        "1.  Let O be the result of calling ToObject, giving it the this",
        "value as its argument.",
        "2. Let tv be ES.ToPrimitive(O, hint Number).",
        "3. If tv is a Number and is not finite, return null.",
        "4. Let toISO be the result of calling the [[Get]] internal method of",
        "O with argument \"toISOString\".",
        "5. If IsCallable(toISO) is false, throw a TypeError exception.",
        "6. Return the result of calling the [[Call]] internal method of",
        "toISO with O as the this value and an empty argument list.",
        "NOTE 1 The argument is ignored.",
        "NOTE 2 The toJSON function is intentionally generic; it does not",
        "require that its this value be a Date object. Therefore, it can be",
        "transferred to other kinds of objects for use as a method. However,",
        "it does require that any such object have a toISOString method. An",
        "object is free to use the argument key to filter its",
        "stringification.",
        "ES5 15.9.4.2",
        "http://es5.github.com/#x15.9.4.2",
        "based on work shared by Daniel Friesen (dantman)",
        "http://gist.github.com/303249",
        "XXX global assignment won't work in embeddings that use",
        "an alternate object for the context.",
        "global Date: true",
        "eslint-disable no-undef",
        "eslint-enable no-undef",
        "Date.length === 7",
        "isString(Y)",
        "We explicitly pass it through parse:",
        "We have to manually make calls depending on argument",
        "length here",
        "Prevent mixups with unfixed Date object",
        "15.9.1.15 Date Time String Format.",
        "four-digit year capture or sign +",
        "6-digit extended year",
        "optional month capture",
        "optional day capture",
        "capture hours:minutes:seconds.milliseconds",
        "hours capture",
        "minutes capture",
        "optional :seconds.milliseconds",
        "seconds capture",
        "milliseconds capture",
        "capture UTC offset component",
        "UTC capture",
        "offset specifier +/-hours:minutes",
        "sign capture",
        "hours offset capture",
        "minutes offset capture",
        "Copy any custom methods a 3rd party library may have added",
        "Copy \"native\" methods explicitly; they may be non-enumerable",
        "Upgrade Date.parse to handle simplified ISO 8601 strings",
        "parse months, days, hours, minutes, seconds, and milliseconds",
        "provide default values if necessary",
        "parse the UTC offset component",
        "When time zone is missed, local offset should be used",
        "(ES 5.1 bug)",
        "see https://bugs.ecmascript.org/show_bug.cgi?id=112",
        "detect invalid offsets",
        "global Date: false",
        "ES5 15.9.4.4",
        "http://es5.github.com/#x15.9.4.4",
        "",
        "Number",
        "======",
        "",
        "ES5.1 15.7.4.5",
        "http://es5.github.com/#x15.7.4.5",
        "Test for NaN and round fractionDigits down",
        "Test for NaN",
        "If it is too big or small, return the string value of the number",
        "1e-21 < x < 1e21",
        "-70 < log2(x) < 70",
        "Math.pow(2, 52);",
        "-18 < e < 122",
        "x = z / 2 ^ e",
        "",
        "String",
        "======",
        "",
        "ES5 15.5.4.14",
        "http://es5.github.com/#x15.5.4.14",
        "[bugfix, IE lt 9, firefox 4, Konqueror, Opera, obscure browsers]",
        "Many browsers do not split properly with regular expressions or they",
        "do not perform the split correctly under obscure conditions.",
        "See http://blog.stevenlevithan.com/archives/cross-browser-split",
        "I've tested in many browsers and this seems to cover the deviant ones:",
        "'ab'.split(/(?:ab)*/) should be [\"\", \"\"], not [\"\"]",
        "'.'.split(/(.?)(.?)/) should be [\"\", \".\", \"\", \"\"], not [\"\", \"\"]",
        "'tesst'.split(/(s)*/) should be [\"t\", undefined, \"e\", \"s\", \"t\"], not",
        "[undefined, \"t\", undefined, \"e\", ...]",
        "''.split(/.?/) should be [], not [\"\"]",
        "'.'.split(/()()/) should be [\".\"], not [\"\", \"\", \".\"]",
        "NPCG: nonparticipating capturing group",
        "If `separator` is not a regex, use native split",
        "Proposed for ES6",
        "Firefox 3+",
        "Make `global` and avoid `lastIndex` issues by working with a copy",
        "Type-convert",
        "Doesn't need flags gy, but they don't hurt",
        "Values for `limit`, per the spec:\n             * If undefined: 4294967295 // Math.pow(2, 32) - 1\n             * If 0, Infinity, or NaN: 0\n             * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n             * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n             * If other: Type-convert, then use the above rules",
        "Math.pow(2, 32) - 1",
        "`separator.lastIndex` is not reliable cross-browser",
        "Fix browsers whose `exec` methods don't consistently return `undefined` for",
        "nonparticipating capturing groups",
        "eslint-disable no-loop-func",
        "eslint-enable no-loop-func",
        "Avoid an infinite loop",
        "[bugfix, chrome]",
        "If separator is undefined, then the result array contains just one String,",
        "which is the this value (converted to a String). If limit is not undefined,",
        "then the output array is truncated so that it contains no more than limit",
        "elements.",
        "\"0\".split(undefined, 0) -> []",
        "ECMA-262, 3rd B.2.3",
        "Not an ECMAScript standard, although ECMAScript 3rd Edition has a",
        "non-normative section suggesting uniform semantics and it should be",
        "normalized across all browsers",
        "[bugfix, IE lt 9] IE < 9 substr() with negative value not working in IE",
        "ES5 15.5.4.20",
        "whitespace from: http://es5.github.io/#x15.5.4.20",
        "http://blog.stevenlevithan.com/archives/faster-trim-javascript",
        "http://perfectionkills.com/whitespace-deviations/",
        "ES-5 15.1.2.2",
        "global parseInt: true",
        "!\n  * https://github.com/paulmillr/es6-shim\n  * @license es6-shim Copyright 2013-2015 by Paul Miller (http://paulmillr.com)\n  *   and contributors,  MIT License\n  * es6-shim: v0.27.1\n  * see https://github.com/paulmillr/es6-shim/blob/0.27.1/LICENSE\n  * Details and documentation:\n  * https://github.com/paulmillr/es6-shim/",
        "UMD (Universal Module Definition)",
        "see https://github.com/umdjs/umd/blob/master/returnExports.js",
        "global define, module, exports",
        "AMD. Register as an anonymous module.",
        "Node. Does not work with strict CommonJS, but",
        "only CommonJS-like enviroments that support module.exports,",
        "like Node.",
        "Browser globals (root is window)",
        "jshint proto:true",
        "skip test on IE < 11",
        "this is IE 8.",
        "this is spec compliant",
        "jshint evil: true",
        "jshint evil: false",
        "make our implementation private",
        "jshint notypeof: true",
        "jshint notypeof: false",
        "Define configurable, writable and non-enumerable props",
        "if they don’t exist.",
        "Simple shim for Object.create on ES3 browsers",
        "(unlike real shim, no attempt to support `prototype === null`)",
        "This is a private name in the es6 spec, equal to '[Symbol.iterator]'",
        "we're going to use an arbitrary _-prefixed name to make our shims",
        "work properly with each other, even though we don't have full Iterator",
        "support.  That is, `Array.from(map.keys())` will work, but we don't",
        "pretend to export a \"real\" Iterator interface.",
        "Firefox ships a partial implementation using the name @@iterator.",
        "https://bugzilla.mozilla.org/show_bug.cgi?id=907077#c14",
        "So use that name if we detect it.",
        "implementations are buggy when $iterator$ is a Symbol",
        "taken directly from https://github.com/ljharb/is-arguments/blob/master/index.js",
        "can be replaced with require('is-arguments') if we ever use a build process instead",
        "https://people.mozilla.org/~jorendorff/es6-draft.html#sec-call-f-v-args",
        "jshint eqnull:true",
        "jshint eqnull:true",
        "this is expensive when it returns false; use this function",
        "when you expect it to return true in the common case.",
        "some versions of IE say that typeof /abc/ === 'function'",
        "includes converting -0 to +0",
        "0 === -0, but they are not identical.",
        "same as SameValue except for SameValueZero(+0, -0) == true",
        "special case support for `arguments`",
        "CreateFromConstructor",
        "OrdinaryCreateFromConstructor",
        "Mark that we've used the es6 construct path",
        "(see emulateES6construct)",
        "Call the constructor.",
        "es5 approximation to es6 subclass semantics: in es6, 'new Foo'",
        "would invoke Foo.@@species to allocation/initialize the new object.",
        "In es5 we just get the plain object.  So if we detect an",
        "uninitialized object, invoke o.constructor.@@species",
        "from https://github.com/inexorabletash/polyfill/blob/master/typedarray.js#L176-L266",
        "with permission and license, per https://twitter.com/inexorabletash/status/372206509540659200",
        "Compute sign, exponent, fraction",
        "NaN",
        "http://dev.w3.org/2006/webapi/WebIDL/#es-type-mapping",
        "Overflow",
        "Normal",
        "Subnormal",
        "Pack sign, exponent, fraction",
        "Bits to bytes",
        "Bytes to bits",
        "Unpack sign, exponent, fraction",
        "Produce number",
        "Normalized",
        "Denormalized",
        "Firefox 31 reports this function's length as 0",
        "https://bugzilla.mozilla.org/show_bug.cgi?id=1062484",
        "Fast repeat, uses the `Exponentiation by squaring` algorithm.",
        "Perf: http://jsperf.com/string-repeat2/2",
        "Somehow this trick makes method 100% compat with the spec.",
        "whitespace from: http://es5.github.io/#x15.5.4.20",
        "implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324",
        "see https://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype-@@iterator",
        "Firefox has a noncompliant startsWith implementation",
        "does the spec really mean that Arrays should use ArrayIterator?",
        "https://bugs.ecmascript.org/show_bug.cgi?id=2416",
        "if (Array.isArray(list)) { usingIterator=false; }",
        "Fixes a Firefox bug in v32",
        "https://bugzilla.mozilla.org/show_bug.cgi?id=1063993",
        "Given an argument x, it will return an IteratorResult object,",
        "with value set to x and done to false.",
        "Given no arguments, it will return an iterator completion object.",
        "Our ArrayIterator is private; see",
        "https://github.com/paulmillr/es6-shim/issues/252",
        "Don't generate keys yet.",
        "Keys not generated",
        "Find next key in the object",
        "The candidate key isn't defined on object.",
        "Must have been deleted, or object[[Prototype]]",
        "has been modified.",
        "copyWithin.length must be 2",
        "Safari 7.1 defines Array#keys and Array#entries natively,",
        "but the resulting ArrayIterator objects don't have a \"next\" method.",
        "Chrome 38 defines Array#keys and Array#entries, and Array#@@iterator, but not Array#values",
        "Chrome 40 defines Array#values with the incorrect name, although Array#{keys,entries} have the correct name",
        "Chrome defines keys/values/entries on Array, but doesn't give us",
        "any way to identify its iterator.  So add our own shimmed field.",
        "NaN !== NaN, but they are identical.",
        "NaNs are the only non-reflexive value, i.e., if x !== x,",
        "then x is NaN.",
        "isNaN is broken: it converts its argument to number, so",
        "isNaN('foo') => true",
        "Work around bugs in Array#find and Array#findIndex -- early",
        "implementations skipped holes in sparse arrays. (Note that the",
        "implementations of find/findIndex indirectly use shimmed",
        "methods of Number, so this test has to happen down here.)",
        "jshint elision: true",
        "jshint elision: false",
        "19.1.3.1",
        "19.1.3.9",
        "shim from https://gist.github.com/WebReflection/5593554",
        "this works already in Firefox and Safari",
        "IE < 11 cannot be shimmed",
        "probably Chrome or some old Mobile stock browser",
        "please note that this will **not** work",
        "in those browsers that do not inherit",
        "__proto__ by mistake from Object.prototype",
        "in these cases we should probably throw an error",
        "or at least be informed about the issue",
        "setPrototypeOf.polyfill === true means it works as meant",
        "setPrototypeOf.polyfill === false means it's not 100% reliable",
        "setPrototypeOf.polyfill === undefined",
        "or",
        "setPrototypeOf.polyfill ==  null means it's not a polyfill",
        "which means it works as expected",
        "we can even delete Object.prototype.__proto__;",
        "Workaround bug in Opera 12 where setPrototypeOf(x, null) doesn't work,",
        "but Object.create(null) does.",
        "sets up proper prototype chain where possible",
        "Chrome < v39 & Opera < 26 have a nonstandard \"$input\" property",
        "globals RegExp: true",
        "globals RegExp: false",
        "See https://bugs.ecmascript.org/show_bug.cgi?id=2465",
        "+0 or -0",
        "A more precise approximation using Taylor series expansion",
        "from https://github.com/paulmillr/es6-shim/issues/314#issuecomment-70293986",
        "taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul",
        "the shift by 0 fixes the sign on the high part",
        "the final |0 converts the unsigned value into a signed value",
        "Chrome 40 has an imprecise Math.tanh with very small numbers",
        "Chrome 40 loses Math.acosh precision with high numbers",
        "node 0.11 has an imprecise Math.sinh with very small numbers",
        "FF 35 on Linux reports 22025.465794806725 for Math.expm1(10)",
        "Safari 6.1, at least, reports \"0\" for this value",
        "Promises",
        "Simplest possible implementation; use a 3rd-party library if you",
        "want the best possible speed and/or long stack traces.",
        "_promiseConstructor is a bit more unique than _status, so we'll",
        "check that instead of the [[PromiseStatus]] internal field.",
        "uninitialized",
        "\"PromiseCapability\" in the spec is what most promise implementations",
        "call a \"deferred\".",
        "see https://bugs.ecmascript.org/show_bug.cgi?id=2478",
        "find an appropriate setImmediate-alike",
        "global window",
        "from http://dbaron.org/log/20100309-faster-timeouts",
        "An efficient task-scheduler based on a pre-existing Promise",
        "implementation, which we can use even if we override the",
        "global Promise below (in order to workaround bugs)",
        "https://github.com/Raynos/observ-hash/issues/2#issuecomment-35857671",
        "global process",
        "fallback",
        "only one invocation of accessor",
        "PromiseReactionTask",
        "we use _promiseConstructor as a stand-in for the internal",
        "[[PromiseStatus]] field; it's a little more unique.",
        "see https://bugs.ecmascript.org/show_bug.cgi?id=2482",
        "protect against being called multiple times",
        "call w/ this===undefined",
        "AllocatePromise",
        "The `obj` parameter is a hack we use for es5",
        "compatibility.",
        "call w/ this===undefined",
        "If iterable has no items, resulting promise will never",
        "resolve; see:",
        "https://github.com/domenic/promises-unwrapping/issues/75",
        "https://bugs.ecmascript.org/show_bug.cgi?id=2515",
        "call with this===undefined",
        "call with this===undefined",
        "this.constructor not this._promiseConstructor; see",
        "https://bugs.ecmascript.org/show_bug.cgi?id=2513",
        "Chrome's native Promise has extra methods that it shouldn't have. Let's remove them.",
        "export the Promise constructor.",
        "In Chrome 33 (and thereabouts) Promise is defined, but the",
        "implementation is buggy in a number of ways.  Let's check subclassing",
        "support to see if we have a buggy implementation.",
        "global Promise",
        "globals Promise: true",
        "globals Promise: false",
        "Map and Set require a true ES5 environment",
        "Their fast path also requires that the environment preserve",
        "property insertion order, which is not guaranteed by the spec.",
        "some engines (eg, Chrome) only preserve insertion order for string keys",
        "note that -0 will get coerced to \"0\" when used as a property key",
        "accomodate some older not-quite-ES5 browsers",
        "back up off of removed entries",
        "advance to next unreturned element.",
        "once the iterator is done, it is done forever.",
        "circular doubly-linked list.",
        "Optionally initialize map from iterable",
        "fast O(1) path",
        "fast O(1) path",
        "fast O(1) path",
        "fall through",
        "coerce -0 to +0 in entry",
        "fast O(1) path",
        "fall through",
        "Creating a Map is expensive.  To speed up the common case of",
        "Sets containing only string or numeric keys, we use an object",
        "as backing storage and lazily create a full Map only when",
        "required.",
        "Optionally initialize map from iterable",
        "Switch from the object backing storage to a full Map.",
        "fast check for leading '$'",
        "free old backing storage",
        "https://github.com/paulmillr/es6-shim/issues/176",
        "- In Firefox < 23, Map#size is a function.\n        - In all current Firefox, Set#entries/keys/values & Map#clear do not exist\n        - https://bugzilla.mozilla.org/show_bug.cgi?id=869996\n        - In Firefox 24, Map and Set do not implement forEach\n        - In Firefox 25 at least, Map and Set are callable without \"new\"",
        "Firefox 32 is ok with the instantiating the subclass but will",
        "throw when the map is used.",
        "Shim incomplete iterator implementations.",
        "Reflect",
        "Some Reflect methods are basically the same as",
        "those on the Object global, except that a TypeError is thrown if",
        "target isn't an object. As well as returning a boolean indicating",
        "the success of the operation.",
        "Apply method in a functional form.",
        "New operator in a functional form.",
        "When deleting a non-existent or configurable property,",
        "true is returned.",
        "When attempting to delete a non-configurable property,",
        "it will return false.",
        "Will return true.",
        "Basically the result of calling the internal [[OwnPropertyKeys]].",
        "Concatenating propertyNames and propertySymbols should do the trick.",
        "This should continue to work together with a Symbol shim",
        "which overrides Object.getOwnPropertyNames and implements",
        "Object.getOwnPropertySymbols.",
        "Syntax in a functional form.",
        "Sets the prototype of the given object.",
        "Returns true on success, otherwise false.",
        "If they already are the same, we're done.",
        "Cannot alter prototype if object not extensible.",
        "Ensure that we do not create a circular prototype chain.",
        "Annex B HTML methods",
        "https://people.mozilla.org/~jorendorff/es6-draft.html#sec-additional-properties-of-the-string.prototype-object",
        "shim for using process in browser",
        "empty string to avoid regexp issues",
        "TODO(shtylman)"
    ],
    "docstrings": [
        "* Brings an environment as close to ECMAScript 5 compliance\n * as is possible with the facilities of erstwhile engines.\n *\n * Annotated ES5: http://es5.github.com/ (specific links below)\n * ES5 Spec: http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\n * Required reading: http://javascriptweblog.wordpress.com/2011/12/05/extending-javascript-natives/"
    ],
    "functions": [
        "s",
        "isPrimitive",
        "dayFromMonth",
        "toUTC",
        "Prototype",
        "roundToEven",
        "packIEEE754",
        "unpackIEEE754",
        "unpackFloat64",
        "packFloat64",
        "unpackFloat32",
        "packFloat32",
        "getAllKeys",
        "MapEntry",
        "MapIterator",
        "drainQueue",
        "noop"
    ],
    "classes": []
}