{
    "identifiers": [
        "googlemaps",
        "datetime",
        "crontab",
        "CronTab",
        "sys",
        "os",
        "sys",
        "executable",
        "os",
        "path",
        "join",
        "os",
        "getcwd",
        "_id",
        "trip_array",
        "trip",
        "trip_array",
        "trip",
        "get_start_coordinates",
        "trip",
        "get_end_coordinates",
        "trip",
        "get_time",
        "CronTab",
        "python_location",
        "query_script_location",
        "_id",
        "cron",
        "command",
        "exec_str",
        "job",
        "month",
        "on",
        "time",
        "month",
        "job",
        "day",
        "on",
        "time",
        "day",
        "job",
        "hour",
        "on",
        "time",
        "hour",
        "job",
        "minute",
        "on",
        "time",
        "minute",
        "job",
        "enable",
        "cron",
        "write"
    ],
    "literals": [
        "'query.py'",
        "' '",
        "' '",
        "\"You have successfully scheduled this CRON job.\""
    ],
    "variables": [
        "python_location",
        "query_script_location",
        "start",
        "end",
        "time",
        "cron",
        "exec_str",
        "job"
    ],
    "comments": [
        "otherwise, you can just pass in an address",
        "python_location = '/Users/jeffdh5/Desktop/e-mission/recommender/venv/bin/python'",
        "query_script_location = '/Users/jeffdh5/Desktop/e-mission/recommender/query.py'",
        "_id: This is the original trip _id",
        "start, end must both be represented as strings which contain the latitude and longitude of the location",
        "purturbed_time must be a datetime object.",
        "start/end: 'lat1,lon1'",
        "example location input: '-33.8674869,151.2069902'",
        "example use case:",
        "schedule_query(start='-33.8674869,151.2069902', end='-33.8674869,151.2069902', time=datetime.datetime.now() + datetime.timedelta(days=10))",
        "TODO: write regex to enforce that passed in locations are geocoded; i.e. lat1,lon1, lat2,lon2",
        "TODO: this will run every year, need to figure out if python crontab can support yearly configuration so it only runs once",
        "#Unit Test",
        "home = '37.199024,-121.831479'",
        "destination = '37.862591,-122.261784'",
        "test_time = datetime.datetime.now() + datetime.timedelta(minutes = 1)",
        "print(\"Scheduling query for: \\nhome=\" + home + \"\\ndestination=\" + destination + \"\\ntime=\" + test_time.strftime(\"%A %d. %B %Y\"))",
        "schedule_query(home, destination, test_time)"
    ],
    "docstrings": [
        "\"\"\"\nThis script can be used to set up a Google Maps Trip Query at a specific point in time.\n\nNecessary Google APIs:\nDirections API\nDistance Matrix API\nElevation API\nGeocoding API\nTime Zone API\nRoads API\n\nSee more on how to enable these here: https://github.com/googlemaps/google-maps-services-python\n\"\"\""
    ],
    "functions": [
        "schedule_queries"
    ],
    "classes": []
}