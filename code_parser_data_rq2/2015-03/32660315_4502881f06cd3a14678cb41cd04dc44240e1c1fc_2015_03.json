{
    "identifiers": [
        "sys",
        "optparse",
        "OptionParser",
        "random",
        "math",
        "index",
        "index",
        "victim",
        "victim",
        "victim",
        "OptionParser",
        "parser",
        "add_option",
        "help",
        "action",
        "dest",
        "parser",
        "add_option",
        "help",
        "action",
        "dest",
        "parser",
        "add_option",
        "help",
        "action",
        "dest",
        "parser",
        "add_option",
        "help",
        "action",
        "dest",
        "parser",
        "add_option",
        "help",
        "action",
        "dest",
        "parser",
        "add_option",
        "help",
        "action",
        "dest",
        "parser",
        "add_option",
        "help",
        "action",
        "dest",
        "parser",
        "parse_args",
        "options",
        "addresses",
        "options",
        "policy",
        "options",
        "clockbits",
        "options",
        "pageframesize",
        "options",
        "seed",
        "options",
        "notrace",
        "options",
        "addresses",
        "options",
        "pageframesize",
        "options",
        "seed",
        "options",
        "policy",
        "options",
        "notrace",
        "options",
        "clockbits",
        "random",
        "seed",
        "seed",
        "addresses",
        "split",
        "options",
        "solve",
        "policy",
        "pageframesize",
        "n",
        "addrList",
        "n",
        "notrace",
        "policy",
        "policy",
        "policy",
        "policy",
        "policy",
        "exit",
        "nStr",
        "addrList",
        "nStr",
        "memory",
        "index",
        "n",
        "hits",
        "policy",
        "memory",
        "remove",
        "n",
        "memory",
        "append",
        "n",
        "miss",
        "idx",
        "count",
        "pageframesize",
        "policy",
        "policy",
        "memory",
        "pop",
        "policy",
        "cdebug",
        "n",
        "memory",
        "victim",
        "memory",
        "random",
        "random",
        "count",
        "cdebug",
        "page",
        "page",
        "page",
        "page",
        "page",
        "memory",
        "remove",
        "page",
        "page",
        "memory",
        "victim",
        "cdebug",
        "page",
        "len",
        "memory",
        "memory",
        "policy",
        "pageIndex",
        "count",
        "memory",
        "pageIndex",
        "len",
        "addrList",
        "futureIdx",
        "addrIndex",
        "len",
        "addrList",
        "addrList",
        "futureIdx",
        "page",
        "futurePage",
        "futureIdx",
        "whenReferenced",
        "maxReplace",
        "pageIndex",
        "page",
        "whenReferenced",
        "memory",
        "pop",
        "replaceIdx",
        "count",
        "memory",
        "append",
        "n",
        "cdebug",
        "len",
        "memory",
        "victim",
        "victim",
        "memory",
        "n",
        "n",
        "n",
        "clockbits",
        "clockbits",
        "cdebug",
        "notrace",
        "n",
        "hfunc",
        "idx",
        "leftStr",
        "memory",
        "riteStr",
        "vfunc",
        "victim",
        "hits",
        "miss",
        "addrIndex",
        "hits",
        "miss",
        "hits",
        "hits",
        "miss"
    ],
    "literals": [
        "'MISS'",
        "'HIT '",
        "'-'",
        "'-a'",
        "'--addresses'",
        "'-1'",
        "'a set of comma-separated pages to access; -1 means randomly generate'",
        "'store'",
        "'string'",
        "'addresses'",
        "'-p'",
        "'--policy'",
        "'FIFO'",
        "'replacement policy: FIFO, LRU, OPT, CLOCK'",
        "'store'",
        "'string'",
        "'policy'",
        "'-b'",
        "'--clockbits'",
        "'for CLOCK policy, how many clock bits to use'",
        "'store'",
        "'int'",
        "'clockbits'",
        "'-f'",
        "'--pageframesize'",
        "'3'",
        "'size of the physical page frame, in pages'",
        "'store'",
        "'string'",
        "'pageframesize'",
        "'-s'",
        "'--seed'",
        "'0'",
        "'random number seed'",
        "'store'",
        "'string'",
        "'seed'",
        "'-N'",
        "'--notrace'",
        "'do not print out a detailed trace'",
        "'store_true'",
        "'notrace'",
        "'-c'",
        "'--compute'",
        "'compute answers for me'",
        "'store_true'",
        "'solve'",
        "'ARG addresses'",
        "'ARG policy'",
        "'ARG clockbits'",
        "'ARG pageframesize'",
        "'ARG seed'",
        "'ARG notrace'",
        "''",
        "','",
        "'Assuming a replacement policy of %s, and a physical page frame of size %d pages,'",
        "'figure out whether each of the following page references hit or miss'",
        "'Access: %d  Hit/Miss?  State of Memory?'",
        "''",
        "'Solving...\\n'",
        "'FIFO'",
        "'FirstIn'",
        "'Lastin '",
        "'LRU'",
        "'LRU'",
        "'MRU'",
        "'OPT'",
        "'CLOCK'",
        "'Left '",
        "'Right'",
        "'Policy %s is not yet implemented'",
        "'LRU'",
        "'FIFO'",
        "'LRU'",
        "'CLOCK'",
        "'REFERENCE TO PAGE'",
        "'MEMORY '",
        "'REF (b)'",
        "'  scan page:'",
        "'BROKEN'",
        "'VICTIM'",
        "'LEN'",
        "'MEM'",
        "'REF (a)'",
        "'OPT'",
        "'LEN (a)'",
        "'REF (a)'",
        "'Access: %d  %s %s -> %12s <- %s Replaced:%s [Hits:%d Misses:%d]'",
        "''",
        "'FINALSTATS hits %d   misses %d   hitrate %.2f'",
        "''"
    ],
    "variables": [
        "parser",
        "options",
        "args",
        "addresses",
        "pageframesize",
        "seed",
        "policy",
        "notrace",
        "clockbits",
        "addrList",
        "addrList",
        "count",
        "memory",
        "hits",
        "miss",
        "leftStr",
        "riteStr",
        "leftStr",
        "riteStr",
        "leftStr",
        "riteStr",
        "cdebug",
        "addrIndex",
        "n",
        "idx",
        "hits",
        "update",
        "idx",
        "miss",
        "victim",
        "victim",
        "victim",
        "page",
        "victim",
        "maxReplace",
        "replaceIdx",
        "replacePage",
        "page",
        "whenReferenced",
        "futurePage",
        "whenReferenced",
        "replaceIdx",
        "replacePage",
        "maxReplace",
        "victim",
        "victim",
        "count",
        "n",
        "n",
        "addrIndex"
    ],
    "comments": [
        "! /usr/bin/env python",
        "",
        "main program",
        "",
        "init memory structure",
        "track reference bits for clock",
        "need to generate addresses",
        "first, lookup",
        "puts it on MRU side",
        "miss, replace?",
        "print 'BUG count, pageframesize:', count, pageframesize",
        "must replace",
        "hack: for now, do random",
        "victim = memory.pop(int(random.random() * count))",
        "this is our victim",
        "remove old page's ref count",
        "print 'OPT: access %d, memory %s' % (n, memory)",
        "print 'OPT: replace from FUTURE (%s)' % addrList[addrIndex+1:]",
        "now, have page 'page' at index 'pageIndex' in memory",
        "whenReferenced tells us when, in the future, this was referenced",
        "print 'OPT: page %d is referenced at %d' % (page, whenReferenced)",
        "print 'OPT: ??? updating maxReplace (%d %d %d)' % (replaceIdx, replacePage, maxReplace)",
        "print 'OPT: --> updating maxReplace (%d %d %d)' % (replaceIdx, replacePage, maxReplace)",
        "print 'OPT: replacing page %d (idx:%d) because I saw it in future at %d' % (victim, replaceIdx, whenReferenced)",
        "miss, but no replacement needed (page frame not full)",
        "now add to memory",
        "after miss processing, update reference bit"
    ],
    "docstrings": [],
    "functions": [
        "hfunc",
        "vfunc"
    ],
    "classes": []
}