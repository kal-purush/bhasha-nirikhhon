{
    "identifiers": [
        "SELECTION_TYPE",
        "minBy",
        "escapeControlCharacters",
        "escapeUnicodeCharacters",
        "normalizeControlAndUnicode",
        "normalizeControl",
        "escapeUnicodeCharacters",
        "normalizeUnicode",
        "normalizeNothing",
        "value",
        "jsonEscapeUnicode",
        "jsonEscapeControl",
        "value",
        "value",
        "jsonUnescapeControl",
        "jsonUnescapeUnicode",
        "value",
        "value",
        "jsonEscapeControl",
        "value",
        "value",
        "jsonUnescapeControl",
        "value",
        "value",
        "jsonEscapeUnicode",
        "value",
        "value",
        "jsonUnescapeUnicode",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "value",
        "value",
        "x",
        "x",
        "err",
        "x",
        "value",
        "value",
        "x",
        "controlCharacters",
        "x",
        "x",
        "value",
        "value",
        "x",
        "escapedControlCharacters",
        "x",
        "x",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "text",
        "text",
        "text",
        "text",
        "match",
        "match",
        "match",
        "element",
        "nodeName",
        "isChildOf",
        "element",
        "e",
        "e",
        "nodeName",
        "element",
        "name",
        "value",
        "isChildOf",
        "element",
        "e",
        "hasAttribute",
        "e",
        "name",
        "value",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "name",
        "value",
        "element",
        "element",
        "name",
        "value",
        "element",
        "predicate",
        "findParent",
        "element",
        "predicate",
        "element",
        "predicate",
        "e",
        "predicate",
        "e",
        "e",
        "e",
        "e",
        "element",
        "element",
        "element",
        "element",
        "selection",
        "selection",
        "element",
        "element",
        "element",
        "element",
        "element",
        "getWindow",
        "element",
        "isChildOf",
        "e",
        "e",
        "element",
        "element",
        "nodeName",
        "findParent",
        "element",
        "e",
        "e",
        "nodeName",
        "target",
        "isChildOfAttribute",
        "target",
        "SELECTION_TYPE",
        "isChildOfAttribute",
        "target",
        "SELECTION_TYPE",
        "isChildOfAttribute",
        "target",
        "SELECTION_TYPE",
        "isChildOfAttribute",
        "target",
        "SELECTION_TYPE",
        "SELECTION_TYPE",
        "path",
        "encodeURIComponent",
        "path",
        "pathStr",
        "decodeURIComponent",
        "pathStr",
        "target",
        "findParent",
        "target",
        "element",
        "element",
        "parent",
        "decodeDataPath",
        "parent",
        "element",
        "allElements",
        "isVisible",
        "calculateCenter",
        "calculateCenter",
        "currentElement",
        "element",
        "element",
        "rect",
        "rect",
        "element",
        "element",
        "rect",
        "rect",
        "rect",
        "rect",
        "isOnSameRow",
        "a",
        "b",
        "a",
        "b",
        "margin",
        "isLeft",
        "a",
        "b",
        "a",
        "margin",
        "b",
        "isRight",
        "a",
        "b",
        "a",
        "b",
        "margin",
        "isAbove",
        "a",
        "b",
        "a",
        "margin",
        "b",
        "isBelow",
        "a",
        "b",
        "a",
        "b",
        "margin",
        "a",
        "b",
        "weightY",
        "a",
        "b",
        "a",
        "b",
        "weightY",
        "diffX",
        "diffX",
        "diffY",
        "diffY",
        "distanceToCurrent",
        "candidate",
        "distance",
        "candidate",
        "current",
        "distanceToCurrentWeighted",
        "candidate",
        "distance",
        "candidate",
        "current",
        "direction",
        "direction",
        "direction",
        "all",
        "button",
        "isLeft",
        "button",
        "current",
        "all",
        "button",
        "isRight",
        "button",
        "current",
        "candidatesLeft",
        "button",
        "isOnSameRow",
        "button",
        "current",
        "minBy",
        "candidatesLeftOnRow",
        "distanceToCurrent",
        "minBy",
        "candidatesLeft",
        "distanceToCurrentWeighted",
        "nearest",
        "direction",
        "direction",
        "direction",
        "all",
        "button",
        "isAbove",
        "button",
        "current",
        "all",
        "button",
        "isBelow",
        "button",
        "current",
        "candidates",
        "button",
        "hasPrio",
        "button",
        "minBy",
        "prioCandidates",
        "distanceToCurrent",
        "minBy",
        "candidates",
        "distanceToCurrent",
        "nearest"
    ],
    "literals": [
        "'../logic/selection.js'",
        "'lodash-es'",
        "'\\b'",
        "'\\f'",
        "'\\n'",
        "'\\r'",
        "'\\t'",
        "'\\\\u'",
        "'000'",
        "'\"'",
        "'\"'",
        "'\\b'",
        "'\\\\b'",
        "'\\f'",
        "'\\\\f'",
        "'\\n'",
        "'\\\\n'",
        "'\\r'",
        "'\\\\r'",
        "'\\t'",
        "'\\\\t'",
        "'\\\\b'",
        "'\\b'",
        "'\\\\f'",
        "'\\f'",
        "'\\\\n'",
        "'\\n'",
        "'\\\\r'",
        "'\\r'",
        "'\\\\t'",
        "'\\t'",
        "'string'",
        "'\\n'",
        "'\\n'",
        "''",
        "''",
        "'DIV'",
        "'true'",
        "'INPUT'",
        "'text'",
        "'function'",
        "'data-type'",
        "'selectable-key'",
        "'data-type'",
        "'selectable-value'",
        "'data-type'",
        "'insert-selection-area-inside'",
        "'data-type'",
        "'insert-selection-area-after'",
        "'data-path'",
        "'data-path'",
        "'Up'",
        "'Down'",
        "'Left'",
        "'Right'",
        "'Left'",
        "'Right'",
        "'Left'",
        "'Up'",
        "'Down'",
        "'Up'"
    ],
    "variables": [
        "normalizeControlAndUnicode",
        "normalizeControl",
        "normalizeUnicode",
        "normalizeNothing",
        "controlCharacters",
        "escapedControlCharacters",
        "e",
        "element",
        "selection",
        "parent",
        "all",
        "current",
        "rect",
        "rect",
        "isOnSameRow",
        "isLeft",
        "isRight",
        "isAbove",
        "isBelow",
        "diffX",
        "diffY",
        "distanceToCurrent",
        "distanceToCurrentWeighted",
        "candidatesLeft",
        "candidatesLeftOnRow",
        "nearest",
        "candidates",
        "prioCandidates",
        "nearest"
    ],
    "comments": [
        "DOM innerText strips the last \\n, therefore we add an extra \\n here",
        "regular expression matching one or multiple return characters with all their",
        "enclosing white spaces",
        "test whether a DOM element is a content editable div",
        "test whether a DOM element is an \"input\" with type \"text\"",
        "TODO: unit test",
        "First we find the first button left from the current button on the same row",
        "if not found, search the closest button left/right from current button",
        "first we only search through the prio buttons",
        "if there were no matching prio buttons, search all matching buttons"
    ],
    "docstrings": [
        "* Create serialization functions to escape and stringify text,\n * and the other way around: to parse and unescape text.\n * @param {{\n *   escapeControlCharacters: boolean,\n *   escapeUnicodeCharacters: boolean\n * }} options\n * @return {ValueNormalization}",
        "* Source:  https://stackoverflow.com/questions/12271547/shouldnt-json-stringify-escape-unicode-characters\n * @param {string} value\n * @returns {string}",
        "* @param {string} value",
        "* @param {string} value",
        "* @param {string} value",
        "* @param {any} value\n * @return {string} value",
        "* Remove a newline suffix from text returned by element.innerText, it adds\n * one return too much.\n * @param {string} text\n * @returns {string}",
        "* Test if the element or one of it's parents has a certain predicate\n * Can be use for example to check whether the element or it's parent has\n * a specific attribute or nodeName.\n * @param {HTMLElement} element\n * @param {function (element: HTMLElement) : boolean} predicate\n * @returns {*}",
        "* Test if the element or one of its parents has a certain predicate\n * Can be use for example to check whether the element or it's parent has\n * a specific attribute or nodeName.\n * @param {HTMLElement} element\n * @param {function (element: HTMLElement) : boolean} predicate\n * @returns {HTMLElement | undefined}",
        "* Set the cursor to the end of a content editable div\n * Source: https://stackoverflow.com/questions/13513329/set-cursor-to-the-end-of-contenteditable-div\n * @param {HTMLElement} element",
        "* Gets a DOM element's Window.  This is normally just the global `window`\n * variable, but if we opened a child window, it may be different.\n * @param {HTMLElement} element\n * @return {Window}",
        "* @param {HTMLElement} element\n * @return {boolean}",
        "* Traverse over the parents of the element until a node is found with the\n * searched for node name. If the element itself contains the nodeName, the\n * element itself will be returned\n * @param {HTMLElement} element\n * @param {string} nodeName\n * @return {HTMLElement | undefined}",
        "* @param {HTMLElement} target\n * @returns {string | null}",
        "* Encode a path into a string that can be used as attribute in HTML\n * @param {Path} path\n * @returns {string}",
        "* Decode a path that was stringified for use as an HTML attribute\n * @param {string} pathStr\n * @returns {Path}",
        "* Find the data path of the given element. Traverses the parent nodes until find\n * @param {HTMLElement} target\n * @returns {Path | null}",
        "* Find the nearest element in a given context menu with buttons or inputs"
    ],
    "functions": [
        "createNormalizationFunctions",
        "jsonEscapeUnicode",
        "jsonUnescapeUnicode",
        "jsonEscapeControl",
        "jsonUnescapeControl",
        "addNewLineSuffix",
        "removeNewLineSuffix",
        "removeReturnsAndSurroundingWhitespace",
        "isChildOfNodeName",
        "isChildOfAttribute",
        "isContentEditableDiv",
        "isTextInput",
        "hasAttribute",
        "isChildOf",
        "findParent",
        "setCursorToEnd",
        "getWindow",
        "activeElementIsChildOf",
        "findParentWithNodeName",
        "getSelectionTypeFromTarget",
        "encodeDataPath",
        "decodeDataPath",
        "getDataPathFromTarget",
        "findNearestElement",
        "isVisible",
        "calculateCenter",
        "distance"
    ],
    "classes": []
}