{
    "identifiers": [
        "require",
        "require",
        "require",
        "describe",
        "describe",
        "describe",
        "xit",
        "request",
        "server",
        "test",
        "describe",
        "describe",
        "xit",
        "request",
        "server",
        "describe",
        "describe",
        "xit",
        "request",
        "server",
        "describe",
        "describe",
        "xit",
        "request",
        "server",
        "describe",
        "describe",
        "xit",
        "request",
        "server",
        "test",
        "describe",
        "describe",
        "xit",
        "request",
        "server",
        "test",
        "describe",
        "describe",
        "xit",
        "request",
        "server",
        "test",
        "describe",
        "describe",
        "xit",
        "request",
        "server",
        "describe",
        "describe",
        "xit",
        "request",
        "server",
        "test",
        "describe",
        "describe",
        "xit",
        "request",
        "server",
        "test"
    ],
    "literals": [
        "'supertest'",
        "'assert'",
        "'express'",
        "'http://localhost:3000'",
        "'Router Integration'",
        "'/addOldBook'",
        "'POST'",
        "'responds with a 200 status and a json Object'",
        "'0547928211'",
        "'fine'",
        "'/api/addOldBook'",
        "'Content-Type'",
        "'/getAllBooks'",
        "'GET'",
        "'responds with a 200 status and a json object /w books'",
        "'/api/getAllBooks'",
        "'Content-Type'",
        "'/getAllUsers'",
        "'GET'",
        "'responds with a 200 status and a json object /w users'",
        "'/api/getAllUsers'",
        "'Content-Type'",
        "'/getMyBookRequests'",
        "'GET'",
        "'respond with a 200 status and a json object w/ users_books'",
        "'/api/getMyBookRequests'",
        "'Content-Type'",
        "'/findOldBook'",
        "'POST'",
        "'responds with a 200 status and a json object'",
        "'Chemistry'",
        "'/api/findOldBook'",
        "'Content-Type'",
        "'/requestBook'",
        "'POST'",
        "'responds with 200 status and a json object'",
        "'hannahbanana'",
        "'0547928211'",
        "'/api/requestBook'",
        "'Content-Type'",
        "'/deleteOldBook'",
        "'POST'",
        "'responds with 200 status and a json object'",
        "'/api/deleteOldBook'",
        "'Content-Type'",
        "'/getMyOldBookList'",
        "'GET'",
        "'respond with a 200 status and a JSON object'",
        "'/api/getMyOldBookList'",
        "'Content-Type'",
        "'/register'",
        "'POST'",
        "'responds with 200 status and a json object'",
        "'test321'",
        "'password123'",
        "'testemail'",
        "'1234567890'",
        "'12345'",
        "'/api/register'",
        "'Content-Type'",
        "'/verifyUser'",
        "'POST'",
        "'responds with 200 status and a json object'",
        "'test321'",
        "'password123'",
        "'/api/verifyUser'",
        "'Content-Type'"
    ],
    "variables": [
        "request",
        "express",
        "server",
        "test",
        "test",
        "test",
        "test",
        "test",
        "test"
    ],
    "comments": [
        "'/findBook' -> does not get used at all",
        "✅ '/addOldBook' -> adds books to user's mypage",
        "✅ '/findOldBook' -> looks for book based on search string inputted to search bar",
        "✅ '/requestBook' -> returns object with user_books.requester updated with requested user's id",
        "✅ '/getMyBookRequests' -> returns array of all users books from users_books table",
        "✅ '/getAllBooks' -> returns array of all books from books table",
        "✅ '/getAllUsers' -> returns array of all users from users table",
        "✅ '/deleteOldBook' -> returns user id that was passed in body",
        "✅ '/getMyOldBookList' -> returns all of users books on mypage",
        "✅ '/register' -> registers a new user and returns their data/loggedin status",
        "✅ '/verifyUser'-> verifies/logs in user and returns their data/loggedin status",
        "describe('Route integration', () => {",
        "describe('/findBook', () => {",
        "describe('GET', () => {",
        "it('responds with 200 status and JSON', () => {",
        "return request(server)",
        ".get('/api/findBook')",
        ".expect('Content-Type', /json/)",
        ".expect(200)",
        "});",
        "});",
        "});",
        "});",
        "addOldBook",
        "example of express route",
        "app.get('/user', function(req, res) {",
        "res.status(200).json({ name: 'john' });",
        "});",
        "example of supertest test",
        "request(app)",
        ".get('/user')",
        ".expect('Content-Type', /json/)",
        ".expect('Content-Length', '15')",
        ".expect(200)",
        ".end(function(err, res) {",
        "if (err) throw err;",
        "});"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}