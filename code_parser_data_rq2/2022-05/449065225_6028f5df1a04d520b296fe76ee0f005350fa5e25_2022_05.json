{
    "identifiers": [
        "Text",
        "Text",
        "RegularExpressions",
        "Xml",
        "SplinterlandsRObot",
        "Global",
        "XmlNode",
        "parent",
        "childPath",
        "required",
        "defaultValue",
        "parent",
        "SelectSingleNode",
        "childPath",
        "parent",
        "SelectSingleNode",
        "childPath",
        "InnerText",
        "parent",
        "SelectSingleNode",
        "childPath",
        "InnerText",
        "required",
        "childPath",
        "Logs",
        "LogMessage",
        "childPath",
        "defaultValue",
        "Logs",
        "LOG_ALERT",
        "defaultValue",
        "defaultValue",
        "length",
        "Random",
        "Repeat",
        "chars",
        "length",
        "Select",
        "s",
        "random",
        "Next",
        "s",
        "Length",
        "ToArray",
        "Pattern",
        "Match",
        "Regex",
        "Pattern",
        "RegexOptions",
        "Singleline",
        "r",
        "Match",
        "Match",
        "Groups",
        "Value",
        "input",
        "Security",
        "Cryptography",
        "MD5",
        "Security",
        "Cryptography",
        "MD5",
        "Create",
        "Text",
        "Encoding",
        "ASCII",
        "GetBytes",
        "input",
        "md5",
        "ComputeHash",
        "inputBytes",
        "StringBuilder",
        "i",
        "hashBytes",
        "Length",
        "i",
        "sb",
        "Append",
        "hashBytes",
        "i",
        "ToString",
        "sb",
        "ToString"
    ],
    "literals": [
        "\"\"",
        "\"\"",
        "\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"",
        "\"x2\""
    ],
    "variables": [
        "chars",
        "Random",
        "random",
        "Regex",
        "r",
        "md5",
        "inputBytes",
        "hashBytes",
        "StringBuilder",
        "sb",
        "i"
    ],
    "comments": [
        "Use input string to calculate MD5 hash",
        "Convert the byte array to hexadecimal string"
    ],
    "docstrings": [],
    "functions": [
        "ReadNode",
        "RandomString",
        "DoQuickRegex",
        "GenerateMD5Hash"
    ],
    "classes": [
        "Helpers"
    ]
}