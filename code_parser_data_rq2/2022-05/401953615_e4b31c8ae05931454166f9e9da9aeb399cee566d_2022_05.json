{
    "identifiers": [
        "org",
        "zaproxy",
        "zap",
        "extension",
        "pscan",
        "java",
        "util",
        "java",
        "util",
        "concurrent",
        "Executors",
        "java",
        "util",
        "concurrent",
        "ThreadFactory",
        "java",
        "util",
        "concurrent",
        "ThreadPoolExecutor",
        "java",
        "util",
        "concurrent",
        "atomic",
        "AtomicInteger",
        "org",
        "apache",
        "logging",
        "log4j",
        "LogManager",
        "org",
        "apache",
        "logging",
        "log4j",
        "Logger",
        "org",
        "parosproxy",
        "paros",
        "core",
        "proxy",
        "ProxyListener",
        "org",
        "parosproxy",
        "paros",
        "db",
        "DatabaseException",
        "org",
        "parosproxy",
        "paros",
        "extension",
        "history",
        "ExtensionHistory",
        "org",
        "parosproxy",
        "paros",
        "model",
        "HistoryReference",
        "org",
        "parosproxy",
        "paros",
        "model",
        "Session",
        "org",
        "parosproxy",
        "paros",
        "network",
        "HttpMalformedHeaderException",
        "org",
        "parosproxy",
        "paros",
        "network",
        "HttpMessage",
        "org",
        "parosproxy",
        "paros",
        "view",
        "View",
        "org",
        "zaproxy",
        "zap",
        "extension",
        "alert",
        "ExtensionAlert",
        "org",
        "zaproxy",
        "zap",
        "utils",
        "Stats",
        "org",
        "zaproxy",
        "zap",
        "view",
        "ScanStatus",
        "logger",
        "LogManager",
        "getLogger",
        "extHist",
        "pscanOptions",
        "helper",
        "session",
        "scanStatus",
        "executor",
        "currentId",
        "lastId",
        "mainSleep",
        "postSleep",
        "shutDown",
        "extPscan",
        "extHistory",
        "extAlert",
        "passiveScanParam",
        "scanStatus",
        "extHist",
        "extHistory",
        "pscanOptions",
        "passiveScanParam",
        "scanStatus",
        "scanStatus",
        "helper",
        "extPscan",
        "extAlert",
        "passiveScanParam",
        "currentId",
        "getLastHistoryId",
        "lastId",
        "currentId",
        "session",
        "session",
        "session",
        "Override",
        "logger",
        "debug",
        "currentId",
        "getLastHistoryId",
        "lastId",
        "currentId",
        "href",
        "shutDown",
        "href",
        "lastId",
        "currentId",
        "currentId",
        "sleep",
        "mainSleep",
        "shutDown",
        "lastId",
        "getLastHistoryId",
        "e",
        "sleep",
        "postSleep",
        "e2",
        "href",
        "getHistoryReference",
        "currentId",
        "shutDown",
        "href",
        "pscanOptions",
        "isScanOnlyInScope",
        "session",
        "isInScope",
        "href",
        "logger",
        "debug",
        "href",
        "getURI",
        "getExecutor",
        "submit",
        "href",
        "helper",
        "recordsToScan",
        "getRecordsToScan",
        "Stats",
        "setHighwaterMark",
        "recordsToScan",
        "View",
        "isInitialised",
        "scanStatus",
        "setScanCount",
        "recordsToScan",
        "e",
        "shutDown",
        "href",
        "HistoryReference",
        "getTemporaryTypes",
        "contains",
        "href",
        "getHistoryType",
        "logger",
        "isDebugEnabled",
        "logger",
        "debug",
        "currentId",
        "e",
        "logger",
        "error",
        "currentId",
        "e",
        "logger",
        "debug",
        "executor",
        "executor",
        "isShutdown",
        "threads",
        "pscanOptions",
        "getPassiveScanThreads",
        "logger",
        "debug",
        "threads",
        "executor",
        "Executors",
        "newFixedThreadPool",
        "threads",
        "executor",
        "historyReferenceId",
        "extHist",
        "extHist",
        "getHistoryReference",
        "historyReferenceId",
        "historyReferenceId",
        "e",
        "extHist",
        "getLastHistoryId",
        "getLastHistoryId",
        "getLastScannedId",
        "helper",
        "getRunningTasks",
        "size",
        "currentId",
        "lastId",
        "currentId",
        "currentId",
        "logger",
        "debug",
        "shutDown",
        "executor",
        "executor",
        "shutdown",
        "helper",
        "shutdownTasks",
        "helper",
        "getRunningTasks",
        "helper",
        "getOldestRunningTask",
        "Override",
        "ExtensionPassiveScan",
        "PROXY_LISTENER_ORDER",
        "Override",
        "msg",
        "Override",
        "msg",
        "interrupt",
        "threadNumber",
        "namePrefix",
        "group",
        "namePrefix",
        "threadNumber",
        "namePrefix",
        "namePrefix",
        "group",
        "currentThread",
        "getThreadGroup",
        "Override",
        "r",
        "t",
        "group",
        "r",
        "namePrefix",
        "threadNumber",
        "getAndIncrement",
        "t",
        "isDaemon",
        "t",
        "setDaemon",
        "t",
        "getPriority",
        "NORM_PRIORITY",
        "t",
        "setPriority",
        "NORM_PRIORITY",
        "t"
    ],
    "literals": [
        "\"Starting passive scan monitoring\"",
        "\"Submitting request to executor: {}\"",
        "\"stats.pscan.recordsToScan\"",
        "\"Temporary record {} no longer available:\"",
        "\"Failed on record {} from History table\"",
        "\"Stopping passive scan monitoring\"",
        "\"Creating new executor with {} threads\"",
        "\"ZAP-PassiveScan-\"",
        "\"Shutdown\""
    ],
    "variables": [
        "extHist",
        "pscanOptions",
        "helper",
        "session",
        "scanStatus",
        "executor",
        "threadNumber",
        "namePrefix",
        "group"
    ],
    "comments": [
        "Get the last id - in case we've just opened an existing session",
        "Get the last id - in case we've just opened an existing session",
        "Either just started or there are no new records",
        "New URL, but give it a chance to be processed first",
        "Ignore",
        "Not actually used as we never register this listener, its always called from the",
        "extension",
        "Ignore",
        "Wakey wakey"
    ],
    "docstrings": [
        "* Zed Attack Proxy (ZAP) and its related class files.\n *\n * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n *\n * Copyright 2022 The ZAP Development Team\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Controls the passive scanning.\n *\n * @since 2.12.0"
    ],
    "functions": [
        "PassiveScanController",
        "setSession",
        "run",
        "ThreadPoolExecutor",
        "getExecutor",
        "HistoryReference",
        "getHistoryReference",
        "getLastHistoryId",
        "getRecordsToScan",
        "getLastScannedId",
        "shutdown",
        "getRunningTasks",
        "PassiveScanTask",
        "getOldestRunningTask",
        "getArrangeableListenerOrder",
        "onHttpRequestSend",
        "onHttpResponseReceive",
        "PassiveScanThreadFactory",
        "newThread"
    ],
    "classes": [
        "PassiveScanController",
        "PassiveScanThreadFactory"
    ]
}