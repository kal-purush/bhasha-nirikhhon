{
    "identifiers": [
        "org",
        "jboss",
        "arquillian",
        "drone",
        "webdriver",
        "binary",
        "downloading",
        "source",
        "java",
        "io",
        "java",
        "util",
        "logging",
        "Logger",
        "org",
        "jboss",
        "arquillian",
        "drone",
        "webdriver",
        "binary",
        "downloading",
        "ExternalBinary",
        "org",
        "jboss",
        "arquillian",
        "drone",
        "webdriver",
        "utils",
        "Architecture",
        "org",
        "jboss",
        "arquillian",
        "drone",
        "webdriver",
        "utils",
        "HttpClient",
        "org",
        "jboss",
        "arquillian",
        "drone",
        "webdriver",
        "utils",
        "StringUtils",
        "log",
        "Logger",
        "getLogger",
        "toString",
        "httpClient",
        "nodeName",
        "fileName",
        "urlToLatestRelease",
        "storageUrl",
        "latestVersion",
        "nodeName",
        "fileName",
        "storageUrl",
        "urlToLatestRelease",
        "httpClient",
        "httpClient",
        "httpClient",
        "nodeName",
        "nodeName",
        "fileName",
        "fileName",
        "storageUrl",
        "storageUrl",
        "urlToLatestRelease",
        "urlToLatestRelease",
        "storageUrl",
        "httpClient",
        "storageUrl",
        "httpClient",
        "storageUrl",
        "urlToLatestRelease",
        "httpClient",
        "storageUrl",
        "urlToLatestRelease",
        "httpClient",
        "Override",
        "getLatestRelease",
        "charset",
        "urlToLatestRelease",
        "latestVersion",
        "getVersion",
        "urlToLatestRelease",
        "charset",
        "getReleaseForVersion",
        "latestVersion",
        "versionUrl",
        "charset",
        "StringUtils",
        "trimMultiline",
        "httpClient",
        "get",
        "versionUrl",
        "charset",
        "getPayload",
        "Override",
        "requiredVersion",
        "getReleaseForVersion",
        "requiredVersion",
        "Architecture",
        "AUTO_DETECT",
        "Override",
        "requiredVersion",
        "architecture",
        "externalBinaryUrl",
        "storageUrl",
        "getFileNameRegexToDownload",
        "requiredVersion",
        "architecture",
        "response",
        "httpClient",
        "get",
        "externalBinaryUrl",
        "response",
        "getStatusCode",
        "log",
        "warning",
        "externalBinaryUrl",
        "externalBinaryUrl",
        "requiredVersion",
        "externalBinaryUrl"
    ],
    "literals": [
        "\"Contents\"",
        "\"Key\"",
        "\"Contents\"",
        "\"Key\"",
        "\"UTF-8\"",
        "\"There wasn't found any binary on the url: \"",
        "\"There wasn't found any binary on the url: \""
    ],
    "variables": [
        "httpClient",
        "nodeName",
        "fileName",
        "urlToLatestRelease",
        "storageUrl",
        "latestVersion"
    ],
    "comments": [],
    "docstrings": [
        "* UrlStorageSource source is an abstract class that helps you to retrieve either latest release\n * or a release with some version from storage, that has binaries available via url in a format:\n * [storage_base_url]/[version]/[binary_file_name]\n *\n * The UrlStorageSource also must provide and URL to obtain est available binary version",
        "* @param storageUrl An url to a storage from which information about releases should be retrieved from",
        "* @param storageUrl         An url to a storage from which information about releases should be retrieved from\n     * @param urlToLatestRelease An url where a version of the latest release could be retrieved from"
    ],
    "functions": [
        "UrlStorageSource",
        "UrlStorageSource",
        "UrlStorageSource",
        "ExternalBinary",
        "getLatestRelease",
        "ExternalBinary",
        "getLatestRelease",
        "getVersion",
        "ExternalBinary",
        "getReleaseForVersion",
        "ExternalBinary",
        "getReleaseForVersion"
    ],
    "classes": [
        "UrlStorageSource"
    ]
}