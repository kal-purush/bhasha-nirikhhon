{
    "identifiers": [
        "prismMeta",
        "$",
        "$$",
        "create",
        "load",
        "Hooks",
        "container",
        "o",
        "container",
        "o",
        "o",
        "o",
        "o",
        "o",
        "o",
        "o",
        "o",
        "LiveDemo",
        "create",
        "$$",
        "textareas",
        "textareas",
        "textarea",
        "textarea",
        "Prism",
        "textarea",
        "Prism",
        "textarea",
        "prismMeta",
        "editor",
        "id",
        "id",
        "id",
        "editor",
        "editor",
        "editor",
        "textarea",
        "editor",
        "id",
        "textarea",
        "evt",
        "id",
        "textarea",
        "evt",
        "evt",
        "evt",
        "evt",
        "id",
        "create",
        "$",
        "$",
        "create",
        "s",
        "s",
        "$$",
        "exclude",
        "create",
        "$",
        "create",
        "$$",
        "s",
        "s",
        "s",
        "Prism",
        "create",
        "evt",
        "a",
        "LiveDemo",
        "create",
        "evt",
        "evt",
        "baseCSS",
        "baseCSS",
        "baseCSS",
        "baseCSS",
        "css",
        "css",
        "_",
        "q",
        "url",
        "imports",
        "url",
        "imports",
        "imports",
        "url",
        "url",
        "URL",
        "url",
        "location",
        "fetch",
        "url",
        "response",
        "css",
        "importedCSS",
        "importedCSS",
        "css",
        "importedCSS",
        "css",
        "evt",
        "css",
        "js",
        "location",
        "evt",
        "$",
        "h1",
        "h1",
        "id",
        "id",
        "editorKeys",
        "editorKeys",
        "id",
        "i",
        "id",
        "create",
        "editor",
        "editor",
        "editor",
        "evt",
        "id",
        "editor",
        "evt",
        "id",
        "i",
        "id",
        "LiveDemo",
        "id",
        "code",
        "LiveDemo",
        "id",
        "LiveDemo",
        "id",
        "fixer",
        "LiveDemo",
        "id",
        "fixer",
        "code",
        "newCode",
        "code",
        "newCode",
        "code",
        "id",
        "id",
        "editor",
        "code",
        "id",
        "code",
        "id",
        "code",
        "code",
        "id",
        "$",
        "code",
        "rule",
        "LiveDemo",
        "rule",
        "scope",
        "resolve",
        "resolve",
        "evt",
        "$",
        "evt",
        "editor",
        "editor",
        "editor",
        "editor",
        "editor",
        "prepend",
        "editor",
        "append",
        "LiveDemo",
        "title",
        "id",
        "i",
        "i",
        "i",
        "id",
        "container",
        "label",
        "o",
        "o",
        "label",
        "create",
        "container",
        "label",
        "lang",
        "lang",
        "o",
        "container",
        "o",
        "o",
        "Prism",
        "textarea",
        "html",
        "useDataURI",
        "html",
        "html",
        "useDataURI",
        "encodeURIComponent",
        "html",
        "URL",
        "Blob",
        "html",
        "rule",
        "container",
        "scope",
        "rule",
        "rule",
        "innerRule",
        "rule",
        "LiveDemo",
        "innerRule",
        "container",
        "scope",
        "selector",
        "rule",
        "CSSStyleRule",
        "selector",
        "selector",
        "LiveDemo",
        "env",
        "env",
        "env",
        "env",
        "selector",
        "scope",
        "rule",
        "selector",
        "s",
        "scope",
        "s",
        "LiveDemo",
        "baseCSS",
        "baseCSS",
        "baseCSS",
        "extraCSS",
        "extraCSS",
        "baseCSS",
        "$0",
        "imports",
        "$0",
        "imports",
        "baseCSS",
        "imports",
        "baseCSS",
        "css",
        "css",
        "css",
        "noBase",
        "location",
        "title",
        "baseCSS",
        "css",
        "html",
        "js",
        "inline",
        "js",
        "inline",
        "container",
        "container",
        "container",
        "LiveDemo",
        "container",
        "container",
        "LiveDemo",
        "Hooks",
        "$",
        "baseCSSTemplate",
        "LiveDemo",
        "baseCSSTemplate",
        "baseCSSTemplate",
        "load",
        "URL"
    ],
    "literals": [
        "\"../prism/meta.js\"",
        "\"https://v2.blissfuljs.com/src/$.js\"",
        "\"https://v2.blissfuljs.com/src/$$.js\"",
        "\"https://v2.blissfuljs.com/src/dom/create.js\"",
        "\"https://v2.blissfuljs.com/src/async/load.js\"",
        "\"https://v2.blissfuljs.com/src/Hooks.js\"",
        "\"isolated\"",
        "\"isolated\"",
        "\"updateReload\"",
        "\"update-reload\"",
        "\"base\"",
        "\"no-base\"",
        "\"baseCSS\"",
        "\"no-base-css\"",
        "\"\"",
        "\"live-demo\"",
        "\"editor-container\"",
        "\"textarea\"",
        "\"javascript\"",
        "\"js\"",
        "\"no-realtime\"",
        "\"javascript\"",
        "\"input\"",
        "\"keyup\"",
        "\"Enter\"",
        "\"demo-controls\"",
        "\"minimal\"",
        "\"details.notes\"",
        "\".demo-target\"",
        "\"demo-target\"",
        "\".editor-container\"",
        "\"style\"",
        "\".demo-controls\"",
        "\".demo-target\"",
        "\".demo-exclude\"",
        "\".notes\"",
        ":not(${s})",
        ":scope > ${exclude.join(\"\")}",
        "\"\"",
        "\"style\"",
        "\"data-slide\"",
        "\"\"",
        "\"iframe.demo-target\"",
        "\"iframe\"",
        "\"demo-target\"",
        "\"iframe-\"",
        "\"style.demo\"",
        "\"\\n\"",
        "\"\"",
        "\" Demo\"",
        "\"a\"",
        "\"button new-tab\"",
        "\"↗️ New Tab\"",
        "\"_blank\"",
        "\"click mouseenter\"",
        "\"form\"",
        "\"https://codepen.io/pen/define\"",
        "\"POST\"",
        "\"_blank\"",
        "\"input\"",
        "\"hidden\"",
        "\"data\"",
        "\"button\"",
        "\"↗️ CodePen\"",
        "\"play\"",
        "\"/* Base styles, not related to example */\"",
        "\"/* Main CSS */\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\"",
        "\"\\n\"",
        "${+!!this.html}${+!!css}${+!!js}0",
        "\"\"",
        "<base href=\"${location.href}\" />",
        "\":scope > h1\"",
        "\"label\"",
        "\"0\"",
        "\"focus\"",
        "\"after-init\"",
        "\"markup\"",
        "\"css\"",
        "\"style#live\"",
        "\"/**/\"",
        "\"data-scope\"",
        "#${this.container.id} .demo-target",
        "\"FAIL on\"",
        "\"style#live\"",
        "\"\"",
        "\"\\n\"",
        "\"\"",
        "\"\\n\"",
        "\"\"",
        "${prepend}${editor.value}${append}",
        "\"\"",
        "\" Demo\"",
        "\"collapsed\"",
        "\"textarea\"",
        "${container.id}-${label}-editor",
        "language-${lang} editor",
        "\"data-lang\"",
        "\"text/html\"",
        "\"\"",
        "data:${type},${encodeURIComponent(html)}",
        "\"#\"",
        "\":root\"",
        "\"scoperule\"",
        "\"returnValue\"",
        "\",\"",
        "${scope} ${s}",
        "\", \"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"Demo\"",
        "\"\\n\"",
        "\"\"",
        "\"\"",
        "\"\\n\"",
        "\"undefined\"",
        "<style id=live>\n${css}\n</style>",
        "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n${noBase? \"\" : `<base href=\"${location.href}\" />`}\n<meta charset=\"UTF-8\">\n<title>${title}</title>\n<style>\n/* Base styles, not related to demo */\n${baseCSS}\n</style>\n${css}\n</head>\n<body>\n${html}\n${js || inline? `\n<script>\n${js}\n\n${inline? `document.addEventListener(\"click\", evt => {\n\tif (evt.target.matches('a[href^=\"#\"]:not([target])')) {\n\t\tlet prevented = evt.defaultPrevented;\n\t\tevt.preventDefault();\n\n\t\tif (!prevented) {\n\t\t\tlet href = evt.target.getAttribute(\"href\");\n\t\t\tlet target = document.querySelector(href);\n\t\t\t// evt.preventDefault();\n\t\t\ttarget.scrollIntoView()\n\t\t}\n\t}\n})` : \"\"}\n\n</script>` : \"\"}\n\n</body>\n</html>",
        "\"\"",
        "<base href=\"${location.href}\" />",
        "<script>\n${js}\n\n${inline? `document.addEventListener(\"click\", evt => {\n\tif (evt.target.matches('a[href^=\"#\"]:not([target])')) {\n\t\tlet prevented = evt.defaultPrevented;\n\t\tevt.preventDefault();\n\n\t\tif (!prevented) {\n\t\t\tlet href = evt.target.getAttribute(\"href\");\n\t\t\tlet target = document.querySelector(href);\n\t\t\t// evt.preventDefault();\n\t\t\ttarget.scrollIntoView()\n\t\t}\n\t}\n})` : \"\"}\n\n</script>",
        "document.addEventListener(\"click\", evt => {\n\tif (evt.target.matches('a[href^=\"#\"]:not([target])')) {\n\t\tlet prevented = evt.defaultPrevented;\n\t\tevt.preventDefault();\n\n\t\tif (!prevented) {\n\t\t\tlet href = evt.target.getAttribute(\"href\");\n\t\t\tlet target = document.querySelector(href);\n\t\t\t// evt.preventDefault();\n\t\t\ttarget.scrollIntoView()\n\t\t}\n\t}\n})",
        "\"\"",
        "\"\"",
        "body {\n\tfont: 100%/1.5 system-ui, Helvetica Neue, Segoe UI, sans-serif;\n}",
        "\".live-demo-base-css\"",
        "\"./live-demo.css\""
    ],
    "variables": [
        "textareas",
        "editor",
        "id",
        "exclude",
        "title",
        "a",
        "baseCSS",
        "css",
        "js",
        "imports",
        "importedCSS",
        "response",
        "css",
        "h1",
        "editorKeys",
        "editor",
        "label",
        "newCode",
        "editor",
        "code",
        "scope",
        "editor",
        "prepend",
        "append",
        "lang",
        "textarea",
        "selector",
        "shouldScope",
        "env",
        "imports",
        "baseCSSTemplate"
    ],
    "comments": [
        "Requirements:\n\t- HTML, CSS, or both\n\t- Applied immediately or upon Cmd + Enter\n\t- In an iframe, or in the slide itself (.isolated)\n\t- Ability to provide hidden custom CSS for the example\n\t- CSS fixup (selector scoping, selector adding, custom fixup?)\n\t- HTML fixup",
        "JS needs this",
        "Open in new Tab button",
        "Open in codepen button",
        "Since this can be async, we need more time",
        "We will cancel this submit event, then submit via code when we're ready",
        "Inline @import",
        "More than 1 editors, need the ability to toggle",
        "Scope rules to increase specificity",
        "Stupid Chrome bug",
        "No HTML editor",
        "If this rule contains rules, scope those too",
        "Mainly useful for @supports and @media",
        "don't do anything if the selector already contains an id",
        "Hoist imports to top",
        "textContent doesn't work on <template>"
    ],
    "docstrings": [],
    "functions": [
        "fixCode",
        "output",
        "updateIframe",
        "html",
        "css",
        "js",
        "title",
        "getHTMLPage",
        "openEditor",
        "createEditor",
        "createURL",
        "scopeRule",
        "getHTMLPage",
        "init"
    ],
    "classes": [
        "LiveDemo"
    ]
}