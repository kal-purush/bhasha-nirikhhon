{
    "identifiers": [
        "io",
        "deephaven",
        "engine",
        "table",
        "impl",
        "io",
        "deephaven",
        "engine",
        "table",
        "Table",
        "io",
        "deephaven",
        "engine",
        "util",
        "TableTools",
        "io",
        "deephaven",
        "engine",
        "table",
        "impl",
        "TstUtils",
        "assertTableEquals",
        "io",
        "deephaven",
        "engine",
        "util",
        "TableTools",
        "org",
        "junit",
        "Test",
        "java",
        "math",
        "BigDecimal",
        "Test",
        "input",
        "TableTools",
        "newTable",
        "col",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "col",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "byteCol",
        "shortCol",
        "longCol",
        "intCol",
        "byteCol",
        "shortCol",
        "intCol",
        "doubleCol",
        "floatCol",
        "result",
        "input",
        "select",
        "expected",
        "TableTools",
        "newTable",
        "col",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "col",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "col",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "col",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "col",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "col",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "col",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "col",
        "col",
        "col",
        "col",
        "col",
        "col",
        "col",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "col",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "BigDecimal",
        "valueOf",
        "col",
        "col",
        "col",
        "col",
        "col",
        "col",
        "col",
        "col",
        "col",
        "col",
        "col",
        "col",
        "col",
        "col",
        "col",
        "col",
        "col",
        "col",
        "col",
        "assertTableEquals",
        "expected",
        "result"
    ],
    "literals": [
        "\"BD\"",
        "\"BD2\"",
        "\"Y\"",
        "\"S\"",
        "\"L\"",
        "\"I\"",
        "\"Y2\"",
        "\"S2\"",
        "\"I2\"",
        "\"D\"",
        "\"F\"",
        "\"VPLUS = BD+BD2\"",
        "\"VMINUS = (BD-BD2)\"",
        "\"VMUL = BD*BD2\"",
        "\"VDIV = (BD2 == 0) ? null : (BD/BD2)\"",
        "\"V1 = BD*BD\"",
        "\"V2 = BD+L\"",
        "\"V2A = L+BD\"",
        "\"V3 = BD*I < D\"",
        "\"V3A = I*BD < D\"",
        "\"V3Y = BD*Y < D\"",
        "\"V3YA = Y*BD < D\"",
        "\"V3S = BD*S < D\"",
        "\"V3SA = S*BD < D\"",
        "\"V4 = F-BD\"",
        "\"V5 = L/BD\"",
        "\"V6 = (BD == I2)\"",
        "\"V6A = (I2 == BD)\"",
        "\"V6Y = (BD == Y2)\"",
        "\"V6YA = (Y2 == BD)\"",
        "\"V6S = (BD == S2)\"",
        "\"V6SA = (S2 == BD)\"",
        "\"V6B = (BD == BD2)\"",
        "\"V7 = (BD < I2)\"",
        "\"V7A = (I2 < BD)\"",
        "\"V7B = (BD2 < BD)\"",
        "\"V8 = (BD <= I2)\"",
        "\"V8A = (I2 <= BD)\"",
        "\"V8B = (BD2 <= BD)\"",
        "\"V9 = (BD > I2)\"",
        "\"V9A = (I2 > BD)\"",
        "\"V9B = (BD2 > BD)\"",
        "\"V10 = (BD >= I2)\"",
        "\"V10A = (I2 >= BD)\"",
        "\"V10B = (BD2 >= BD)\"",
        "\"VPLUS\"",
        "\"VMINUS\"",
        "\"VMUL\"",
        "\"VDIV\"",
        "\"V1\"",
        "\"V2\"",
        "\"V2A\"",
        "\"V3\"",
        "\"V3A\"",
        "\"V3Y\"",
        "\"V3YA\"",
        "\"V3S\"",
        "\"V3SA\"",
        "\"V4\"",
        "\"V5\"",
        "\"V6\"",
        "\"V6A\"",
        "\"V6Y\"",
        "\"V6YA\"",
        "\"V6S\"",
        "\"V6SA\"",
        "\"V6B\"",
        "\"V7\"",
        "\"V7A\"",
        "\"V7B\"",
        "\"V8\"",
        "\"V8A\"",
        "\"V8B\"",
        "\"V9\"",
        "\"V9A\"",
        "\"V9B\"",
        "\"V10\"",
        "\"V10A\"",
        "\"V10B\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [],
    "functions": [
        "testBigDecimalOps"
    ],
    "classes": [
        "TestBigDecimalColumns"
    ]
}