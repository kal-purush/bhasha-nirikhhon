{
    "identifiers": [
        "h5py",
        "numpy",
        "np",
        "files_dict",
        "batchsize",
        "key_x_values",
        "key_y_values",
        "sample_modifier",
        "label_modifier",
        "xs_mean",
        "max_queue_size",
        "f_size",
        "keras_mode",
        "shuffle",
        "files_dict",
        "batchsize",
        "key_x_values",
        "key_y_values",
        "sample_modifier",
        "label_modifier",
        "xs_mean",
        "max_queue_size",
        "f_size",
        "keras_mode",
        "shuffle",
        "_i",
        "open_files",
        "_store_file_length",
        "_store_batch_indices",
        "_sample_pos",
        "_i",
        "IndexError",
        "close_files",
        "StopIteration",
        "get_x_values",
        "start_index",
        "get_y_values",
        "start_index",
        "sample_modifier",
        "sample_modifier",
        "info_blob",
        "info_blob",
        "xs",
        "info_blob",
        "label_modifier",
        "label_modifier",
        "info_blob",
        "ys",
        "_i",
        "keras_mode",
        "xs",
        "ys",
        "info_blob",
        "input_key",
        "file",
        "files_dict",
        "items",
        "_files",
        "h5py",
        "File",
        "file",
        "f",
        "_files",
        "values",
        "f",
        "close",
        "start_index",
        "input_key",
        "file",
        "_files",
        "items",
        "file",
        "key_x_values",
        "start_index",
        "start_index",
        "_batchsize",
        "xs_mean",
        "np",
        "subtract",
        "x_values",
        "input_key",
        "xs_mean",
        "input_key",
        "x_values",
        "start_index",
        "_files",
        "values",
        "first_file",
        "key_y_values",
        "start_index",
        "start_index",
        "_batchsize",
        "KeyError",
        "y_values",
        "property",
        "f_size",
        "_total_f_size",
        "f_size",
        "property",
        "_size",
        "batchsize",
        "f_size",
        "batchsize",
        "f",
        "_files",
        "values",
        "lengths",
        "append",
        "len",
        "f",
        "key_x_values",
        "lengths",
        "count",
        "lengths",
        "len",
        "lengths",
        "close_files",
        "ValueError",
        "lengths",
        "lengths",
        "np",
        "ceil",
        "_size",
        "_batchsize",
        "np",
        "arange",
        "total_no_of_batches",
        "_batchsize",
        "shuffle",
        "np",
        "random",
        "shuffle",
        "sample_pos",
        "max_queue_size",
        "np",
        "append",
        "sample_pos",
        "sample_pos",
        "max_queue_size",
        "sample_pos",
        "orga",
        "files_dict",
        "f_size",
        "zero_center",
        "keras_mode",
        "shuffle",
        "orga",
        "cfg",
        "label_modifier",
        "orga",
        "cfg",
        "label_modifier",
        "orga",
        "_auto_label_modifier",
        "orga",
        "_auto_label_modifier",
        "zero_center",
        "orga",
        "get_xs_mean",
        "Hdf5BatchGenerator",
        "files_dict",
        "files_dict",
        "batchsize",
        "orga",
        "cfg",
        "batchsize",
        "key_x_values",
        "orga",
        "cfg",
        "key_x_values",
        "key_y_values",
        "orga",
        "cfg",
        "key_y_values",
        "sample_modifier",
        "orga",
        "cfg",
        "sample_modifier",
        "label_modifier",
        "label_modifier",
        "xs_mean",
        "xs_mean",
        "max_queue_size",
        "orga",
        "cfg",
        "max_queue_size",
        "f_size",
        "f_size",
        "keras_mode",
        "keras_mode",
        "shuffle",
        "shuffle",
        "generator"
    ],
    "literals": [
        "\"x\"",
        "\"y\"",
        "\"x_values\"",
        "\"y_values\"",
        "\"x_values\"",
        "\"xs\"",
        "\"y_values\"",
        "\"ys\"",
        "'r'",
        "\"All data files must have the same length! \"",
        "\"Given were:\\n \"",
        "\"Auto label modifier has not been set up (can be done with \"",
        "\"nn_utilities.get_auto_label_modifier)\""
    ],
    "variables": [
        "files_dict",
        "batchsize",
        "key_x_values",
        "key_y_values",
        "sample_modifier",
        "label_modifier",
        "xs_mean",
        "max_queue_size",
        "f_size",
        "keras_mode",
        "shuffle",
        "_files",
        "_sample_pos",
        "_i",
        "_total_f_size",
        "start_index",
        "info_blob",
        "info_blob",
        "info_blob",
        "xs",
        "xs",
        "info_blob",
        "ys",
        "ys",
        "info_blob",
        "input_key",
        "x_values",
        "x_values",
        "input_key",
        "x_values",
        "input_key",
        "first_file",
        "y_values",
        "y_values",
        "lengths",
        "_total_f_size",
        "total_no_of_batches",
        "sample_pos",
        "sample_pos",
        "_sample_pos",
        "label_modifier",
        "label_modifier",
        "xs_mean",
        "xs_mean",
        "generator"
    ],
    "comments": [
        "a dict with the names of list inputs as keys, and the opened",
        "h5 files as values",
        "Modify the samples",
        "Modify the labels",
        "append some samples due to preloading by the fit_generator method",
        "get xs_mean or load/create if not stored yet"
    ],
    "docstrings": [
        "\"\"\"\n        Yields batches of input data from h5 files.\n\n        This will go through one file, or multiple files in parallel, and yield\n        one batch of data, which can then be used as an input to a model.\n        Since multiple filepaths can be given to read out in parallel,\n        this can also be used for models with multiple inputs.\n\n        Parameters\n        ----------\n        files_dict : dict\n            Pathes of the files to train on.\n            Keys: The name of every input (from the toml list file, can be multiple).\n            Values: The filepath of a single h5py file to read data from.\n        batchsize : int\n            Batchsize that will be used for the training and validation of\n            the network.\n        key_x_values : str\n            The name of the datagroup in the h5 input files which contains\n            the samples for the network.\n        key_y_values : str\n            The name of the datagroup in the h5 input files which contains\n            the info for the labels. If this name is not in the file,\n            y_values will be set to None.\n        sample_modifier : function or None\n            Operation to be performed on batches of samples read from the input\n            files before they are fed into the model.\n        label_modifier : function or None\n            Operation to be performed on batches of labels read from the input files\n            before they are fed into the model.\n        xs_mean : ndarray or None\n            Zero center image to be subtracted from data as preprocessing.\n        max_queue_size : int\n            max_queue_size option of the keras training and evaluation generator\n            methods. How many batches get preloaded\n            from the generator.\n        f_size : int or None\n            Specifies the number of samples to be read from the .h5 file.\n            If none, the whole .h5 file will be used.\n        keras_mode : bool\n            If true, yield xs and ys (samples and labels) for the keras fit\n            generator function.\n            If false, yield the info_blob containing the full sample and label\n            info, both before and after the modifiers have been applied.\n        shuffle : bool\n            Randomize the order in which batches are read from the file.\n            Significantly reduces read out speed.\n\n        \"\"\"",
        "\"\"\"\n        Read another batch of data from the files.\n\n        Returns\n        -------\n        xs : dict\n            Samples for the model train on.\n            Keys : str\n                The name(s) of the input layer(s) of the model.\n            Values : ndarray\n                A batch of samples for the corresponding input.\n        ys : dict or None\n            Labels for the model to train on. Will be None if there are\n            no labels in the file.\n            Keys : str\n                The name(s) of the output layer(s) of the model.\n            Values : ndarray\n                A batch of labels for the corresponding output.\n\n        If keras_mode is False, it will return instead:\n\n        info_blob : dict\n            Blob containing, the x_values, y_values, xs and ys.\n\n        \"\"\"",
        "\"\"\" Open all files. \"\"\"",
        "\"\"\" Close all files again. \"\"\"",
        "\"\"\"\n        Read one batch of samples from the files and zero center.\n\n        Parameters\n        ----------\n        start_index : int\n            The start index in the h5 files at which the batch will be read.\n            The end index will be the start index + the batch size.\n\n        Returns\n        -------\n        x_values : dict\n            One batch of data for each input file.\n\n        \"\"\"",
        "\"\"\"\n        Get y_values for the nn. Since the y_values are hopefully the same\n        for all the files, use the ones from the first. TODO add check\n\n        Parameters\n        ----------\n        start_index : int\n            The start index in the h5 files at which the batch will be read.\n            The end index will be the start index + the batch size.\n\n        Returns\n        -------\n        y_values : ndarray\n            The y_values, right from the files.\n\n        \"\"\"",
        "\"\"\" Size of the files that will be read in. Can be smaller than the actual\n        file size if defined by user. \"\"\"",
        "\"\"\"\n        Return the effective batchsize. Can be smaller than the user defined\n        one if it would be larger than the size of the file.\n        \"\"\"",
        "\"\"\"\n        Make sure all files have the same length and store this length.\n        \"\"\"",
        "\"\"\"\n        Define the start indices of each batch in the h5 file and store this.\n        \"\"\"",
        "\"\"\"\n    Initialize the hdf5_batch_generator_base with the paramters in orga.cfg.\n\n    Parameters\n    ----------\n    orga : object Organizer\n        Contains all the configurable options in the OrcaNet scripts.\n    files_dict : dict\n        Pathes of the files to train on.\n        Keys: The name of every input (from the toml list file, can be multiple).\n        Values: The filepath of a single h5py file to read samples from.\n    f_size : int or None\n        Specifies the number of samples to be read from the .h5 file.\n        If none, the whole .h5 file will be used.\n    zero_center : bool\n        Whether to use zero centering.\n        Requires orga.zero_center_folder to be set.\n    keras_mode : bool\n        Specifies if mc-infos (y_values) should be yielded as well. The\n        mc-infos are used for evaluation after training and testing is finished.\n    shuffle : bool\n        Randomize the order in which batches are read from the file.\n        Significantly reduces read out speed.\n\n    Yields\n    ------\n    xs : dict\n        Data for the model train on.\n            Keys : str  The name(s) of the input layer(s) of the model.\n            Values : ndarray    A batch of samples for the corresponding input.\n    ys : dict or None\n        Labels for the model to train on.\n            Keys : str  The name(s) of the output layer(s) of the model.\n            Values : ndarray    A batch of labels for the corresponding output.\n        Will be None if there are no labels in the file.\n    y_values : ndarray, optional\n        Y values from the file. Only yielded if yield_mc_info is True.\n\n    \"\"\""
    ],
    "functions": [
        "__iter__",
        "__next__",
        "open_files",
        "close_files",
        "get_x_values",
        "get_y_values",
        "_size",
        "_batchsize",
        "_store_file_length",
        "_store_batch_indices",
        "get_h5_generator"
    ],
    "classes": [
        "Hdf5BatchGenerator"
    ]
}