{
    "identifiers": [
        "with_statement",
        "os",
        "tarfile",
        "tempfile",
        "time",
        "shutil",
        "glob",
        "six",
        "print_",
        "six",
        "moves",
        "urllib",
        "ccmlib",
        "common",
        "ArgumentError",
        "CCMError",
        "get_default_path",
        "rmdirs",
        "validate_install_dir",
        "version",
        "verbose",
        "version",
        "split",
        "len",
        "type_n_version",
        "type_n_version",
        "format",
        "RELOCATABLE_URLS",
        "type_n_version",
        "s3_version",
        "os",
        "path",
        "join",
        "type_n_version",
        "version_directory",
        "version",
        "cdir",
        "os",
        "environ",
        "get",
        "os",
        "path",
        "join",
        "s3_url",
        "download_version",
        "version",
        "verbose",
        "verbose",
        "url",
        "url",
        "os",
        "environ",
        "get",
        "os",
        "path",
        "join",
        "s3_url",
        "download_version",
        "os",
        "path",
        "join",
        "version",
        "verbose",
        "verbose",
        "url",
        "url",
        "version_directory",
        "version",
        "os",
        "path",
        "join",
        "cdir",
        "jar_file",
        "glob",
        "glob",
        "scylla_java_tools_dir",
        "shutil",
        "copy",
        "jar_file",
        "os",
        "path",
        "join",
        "scylla_java_tools_dir",
        "os",
        "environ",
        "get",
        "os",
        "path",
        "join",
        "s3_url",
        "download_version",
        "os",
        "path",
        "join",
        "version",
        "verbose",
        "verbose",
        "url",
        "url",
        "version_directory",
        "version",
        "cdir",
        "version",
        "url",
        "qualifying",
        "min_attributes",
        "qualifying",
        "qualifying",
        "urllib",
        "parse",
        "urlparse",
        "url",
        "all",
        "getattr",
        "token",
        "qualifying_attr",
        "qualifying_attr",
        "qualifying",
        "version",
        "url",
        "verbose",
        "os",
        "path",
        "exists",
        "url",
        "url",
        "endswith",
        "url",
        "is_valid",
        "url",
        "tempfile",
        "mkstemp",
        "suffix",
        "prefix",
        "__download",
        "url",
        "target",
        "show_progress",
        "verbose",
        "ArgumentError",
        "format",
        "url",
        "verbose",
        "print_",
        "target",
        "version",
        "tarfile",
        "open",
        "target",
        "tar",
        "extractall",
        "path",
        "os",
        "path",
        "join",
        "__get_dir",
        "version",
        "tar",
        "close",
        "urllib",
        "error",
        "URLError",
        "e",
        "version",
        "url",
        "url",
        "msg",
        "e",
        "ArgumentError",
        "msg",
        "tarfile",
        "ReadError",
        "e",
        "ArgumentError",
        "e",
        "CCMError",
        "e",
        "target_dir",
        "rmdirs",
        "target_dir",
        "print_",
        "target_dir",
        "CCMError",
        "version",
        "target_dir",
        "e",
        "version",
        "os",
        "path",
        "join",
        "__get_dir",
        "version",
        "version",
        "directory_name",
        "version",
        "os",
        "path",
        "exists",
        "dir",
        "validate_install_dir",
        "dir",
        "dir",
        "ArgumentError",
        "rmdirs",
        "dir",
        "rmdirs",
        "__get_dir",
        "url",
        "target",
        "username",
        "password",
        "show_progress",
        "username",
        "urllib",
        "request",
        "HTTPPasswordMgrWithDefaultRealm",
        "password_mgr",
        "add_password",
        "url",
        "username",
        "password",
        "urllib",
        "request",
        "HTTPBasicAuthHandler",
        "password_mgr",
        "urllib",
        "request",
        "build_opener",
        "handler",
        "urllib",
        "request",
        "install_opener",
        "opener",
        "urllib",
        "request",
        "urlopen",
        "url",
        "open",
        "target",
        "u",
        "info",
        "meta",
        "get",
        "show_progress",
        "print_",
        "url",
        "target",
        "file_size",
        "file_size_dl",
        "file_size",
        "u",
        "read",
        "block_sz",
        "buffer",
        "attempts",
        "attempts",
        "CCMError",
        "attempts",
        "file_size_dl",
        "file_size",
        "time",
        "sleep",
        "attempts",
        "file_size_dl",
        "len",
        "buffer",
        "f",
        "write",
        "buffer",
        "show_progress",
        "file_size_dl",
        "file_size_dl",
        "file_size",
        "chr",
        "len",
        "status",
        "status",
        "print_",
        "status",
        "end",
        "show_progress",
        "print_",
        "f",
        "close",
        "u",
        "close",
        "os",
        "path",
        "join",
        "get_default_path",
        "os",
        "path",
        "exists",
        "repo",
        "os",
        "mkdir",
        "repo",
        "repo",
        "os",
        "path",
        "join",
        "__get_dir"
    ],
    "literals": [
        "\"http://github.com/scylladb/scylla.git\"",
        "'unstable/master'",
        "'https://s3.amazonaws.com/downloads.scylladb.com/relocatable/unstable/master/'",
        "'https://s3.amazonaws.com/downloads.scylladb.com/relocatable/unstable/master/latest'",
        "':'",
        "\"{0}{1}\"",
        "'SCYLLA_PACKAGE'",
        "'scylla-package.tar.gz'",
        "'SCYLLA_JAVA_TOOLS_PACKAGE'",
        "'scylla-tools-package.tar.gz'",
        "'scylla-java-tools'",
        "'scylla-java-tools'",
        "\"/*.jar\"",
        "\"lib\"",
        "'SCYLLA_JMX_PACKAGE'",
        "'scylla-jmx-package.tar.gz'",
        "'jmx'",
        "'scheme'",
        "'netloc'",
        "'.tar.gz'",
        "\".tar.gz\"",
        "\"ccm-\"",
        "\"unsupported url={}\"",
        "\"Extracting %s as version %s ...\"",
        "\"Invalid version %s\"",
        "\"Invalid url %s\"",
        "\" (underlying error is: %s)\"",
        "\"Unable to uncompress downloaded file: %s\"",
        "\"Deleted %s due to error\"",
        "\"Building C* version %s failed. Attempted to delete %s but failed. This will need to be manually deleted\"",
        "'wb'",
        "\"Content-Length\"",
        "\"Downloading %s to %s (%.3fMB)\"",
        "\"Error downloading file (nothing read after %i attempts, downloded only %i of %i bytes)\"",
        "r\"%10d  [%3.2f%%]\"",
        "''",
        "\"\"",
        "'scylla-repository'",
        "\"last.log\""
    ],
    "variables": [
        "GIT_REPO",
        "RELOCATABLE_URLS",
        "s3_url",
        "type_n_version",
        "s3_version",
        "s3_url",
        "version",
        "cdir",
        "url",
        "url",
        "cdir",
        "scylla_java_tools_dir",
        "url",
        "cdir",
        "min_attributes",
        "qualifying",
        "token",
        "target_dir",
        "target",
        "_",
        "target",
        "tar",
        "msg",
        "msg",
        "dir",
        "password_mgr",
        "handler",
        "opener",
        "u",
        "f",
        "meta",
        "file_size",
        "file_size_dl",
        "block_sz",
        "attempts",
        "buffer",
        "attempts",
        "attempts",
        "status",
        "status",
        "repo"
    ],
    "comments": [
        "hack to make the relocatable tools work",
        "wipe out the directory if anything goes wrong. Otherwise we will assume it has been compiled the next time it runs."
    ],
    "docstrings": [
        "\"\"\"Download, extract, and build Cassandra tarball.\n\n    if binary == True, download precompiled tarball, otherwise build from source tarball.\n    \"\"\""
    ],
    "functions": [
        "setup",
        "is_valid",
        "download_version",
        "directory_name",
        "version_directory",
        "clean_all",
        "__download",
        "__get_dir",
        "lastlogfilename"
    ],
    "classes": []
}