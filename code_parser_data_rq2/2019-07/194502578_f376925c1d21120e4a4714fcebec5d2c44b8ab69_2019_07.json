{
    "identifiers": [],
    "literals": [],
    "variables": [],
    "comments": [
        "var firstName = 'John';\nconsole.log(firstName);\n\nvar lastName = 'Smith';\nvar age = 28;\n\nvar fullAge = true;\nconsole.log(fullAge);\n\nvar job;\nconsole.log(job);\n\njob = 'Teacher';\nconsole.log(job);\n\n// Variable naming rules\nvar _3years = 3;\nvar johnMark = 'John and MArk';\nvar if = 23;",
        "var firstName = 'John';\nvar age = 28;\n\n// Type coercion\nconsole.log(firstName + ' ' + age);\n\nvar job, isMarried;\njob = 'teacher';\nisMarried = false;\n\nconsole.log(firstName + ' is a ' + age + ' year old ' + job + '. Is he married? ' + isMarried);\n\n// Variable mutation\nage = 'twenty eight';\njob = 'driver';\n\nalert(firstName + ' is a ' + age + ' year old ' + job + '. Is he married? ' + isMarried);\n\nvar lastName = prompt('What is his last Name?');\nconsole.log(firstName + ' ' + lastName);",
        "var year, yearJohn, yearMark;\nnow = 2018;\nageJohn = 28;\nageMark = 33;\n\n// Math operators\nyearJohn = now - ageJohn;\nyeahMark = now - ageMark;\n\nconsole.log(yearJohn);\n\nconsole.log(now + 2);\nconsole.log(now * 2);\nconsole.log(now / 10);\n\n\n// Logical operators\nvar johnOlder = ageJohn < ageMark;\nconsole.log(johnOlder);\n\n\n// typeof operator\nconsole.log(typeof johnOlder);\nconsole.log(typeof ageJohn);\nconsole.log(typeof 'Mark is older tha John');\nvar x;\nconsole.log(typeof x);",
        "var now = 2018;\nvar yearJohn = 1989;\nvar fullAge = 18;\n\n// Multiple operators\nvar isFullAge = now - yearJohn >= fullAge; // true\nconsole.log(isFullAge);\n\n// Grouping\nvar ageJohn = now - yearJohn;\nvar ageMark = 35;\nvar average = (ageJohn + ageMark) / 2;\nconsole.log(average);\n\n// Multiple assignments\nvar x, y;\nx = y = (3 + 5) * 4 - 6; // 8 * 4 - 6 // 32 - 6 // 26\nconsole.log(x, y);\n\n\n// More operators\nx *= 2;\nconsole.log(x);\nx += 10;\nconsole.log(x);\nx--;\nconsole.log(x);",
        "Mark and John are trying to compare their BMI (Body Mass Index), which is calculated using the formula: BMI = mass / height^2 = mass / (height * height). (mass in kg and height in meter).\n\n1. Store Mark's and John's mass and height in variables\n2. Calculate both their BMIs\n3. Create a boolean variable containing information about whether Mark has a higher BMI than John.\n4. Print a string to the console containing the variable from step 3. (Something like \"Is Mark's BMI higher than John's? true\"). \n\nGOOD LUCK ðŸ˜€",
        "var massMark = 78; // kg\nvar heightMark = 1.69; // meters\n\nvar massJohn = 92;\nvar heightJohn = 1.95;\n\nvar BMIMark = massMark / (heightMark * heightMark);\nvar BMIJohn = massJohn / (heightJohn * heightJohn);\nconsole.log(BMIMark, BMIJohn);\n\nvar markHigherBMI = BMIMark > BMIJohn;\nconsole.log('Is Mark\\'s BMI higher than John\\'s? ' + markHigherBMI);",
        "var firstName = 'John';\nvar civilStatus = 'single';\n\nif (civilStatus === 'married') {\n    console.log(firstName + ' is married!');\n} else {\n    console.log(firstName + ' will hopefully marry soon :)');\n}\n\n\nvar isMarried = true;\nif (isMarried) {\n    console.log(firstName + ' is married!');\n} else {\n    console.log(firstName + ' will hopefully marry soon :)');\n}\n\nvar massMark = 78; // kg\nvar heightMark = 1.69; // meters\n\nvar massJohn = 92;\nvar heightJohn = 1.95;\n\nvar BMIMark = massMark / (heightMark * heightMark);\nvar BMIJohn = massJohn / (heightJohn * heightJohn);\n\nif (BMIMark > BMIJohn) {\n    console.log('Mark\\'s BMI is higher than John\\'s.');\n} else {\n    console.log('John\\'s BMI is higher than Marks\\'s.');\n}",
        "var firstName = 'John';\nvar age = 20;\n\nif (age < 13) {\n    console.log(firstName + ' is a boy.');\n} else if (age >= 13 && age < 20) {\n    console.log(firstName + ' is a teenager.');\n} else if (age >= 20 && age < 30) {\n    console.log(firstName + ' is a young man.');\n} else {\n    console.log(firstName + ' is a man.');\n}",
        "var firstName = 'John';\nvar age = 14;\n\n// Ternary operator\nage >= 18 ? console.log(firstName + ' drinks beer.') : console.log(firstName + ' drinks juice.');\n\nvar drink = age >= 18 ? 'beer' : 'juice';\nconsole.log(drink);\n\n(if (age >= 18) {\n    var drink = 'beer';\n} else {\n    var drink = 'juice';\n}\n\n// Switch statement\nvar job = 'instructor';\nswitch (job) {\n    case 'teacher':\n    case 'instructor':\n        console.log(firstName + ' teaches kids how to code.');\n        break;\n    case 'driver':\n        console.log(firstName + ' drives an uber in Lisbon.');\n        break;\n    case 'designer':\n        console.log(firstName + ' designs beautiful websites.');\n        break;\n    default:\n        console.log(firstName + ' does something else.');\n}\n\nage = 56;\nswitch (true) {\n    case age < 13:\n        console.log(firstName + ' is a boy.');\n        break;\n    case age >= 13 && age < 20:\n        console.log(firstName + ' is a teenager.');\n        break;\n    case age >= 20 && age < 30:\n        console.log(firstName + ' is a young man.');\n        break;\n    default:\n        console.log(firstName + ' is a man.');\n}",
        "// falsy values: undefined, null, 0, '', NaN\n// truthy values: NOT falsy values\n\nvar height;\n\nheight = 23;\n\nif (height || height === 0) {\n    console.log('Variable is defined');\n} else {\n    console.log('Variable has NOT been defined');\n}\n\n// Equality operators\nif (height === '23') {\n    console.log('The == operator does type coercion!');\n}",
        "John and Mike both play basketball in different teams. In the latest 3 games, John's team scored 89, 120 and 103 points, while Mike's team scored 116, 94 and 123 points.\n\n1. Calculate the average score for each team\n2. Decide which teams wins in average (highest average score), and print the winner to the console. Also include the average score in the output.\n3. Then change the scores to show different winners. Don't forget to take into account there might be a draw (the same average score)\n\n4. EXTRA: Mary also plays basketball, and her team scored 97, 134 and 105 points. Like before, log the average winner to the console. HINT: you will need the && operator to take the decision. If you can't solve this one, just watch the solution, it's no problem :)\n5. Like before, change the scores to generate different winners, keeping in mind there might be draws.\n\nGOOD LUCK ðŸ˜€",
        "var scoreJohn = (189 + 120 + 103) / 3;\nvar scoreMike = (129 + 94 + 123) / 3;\nvar scoreMary = (97 + 134 + 105) / 3;\nconsole.log(scoreJohn, scoreMike, scoreMary);\n\nif (scoreJohn > scoreMike && scoreJohn > scoreMary) {\n    console.log('John\\'s team wins with ' + scoreJohn + ' points');\n} else if (scoreMike > scoreJohn && scoreMike > scoreMary) {\n    console.log('Mike\\'s team wins with ' + scoreMike + ' points');\n} else if (scoreMary > scoreJohn && scoreMary > scoreMike) {\n    console.log('Mary\\'s team wins with ' + scoreMary + ' points');\n} else {\n    console.log('There is a draw');\n}\n\n\nif (scoreJohn > scoreMike) {\n    console.log('John\\'s team wins with ' + scoreJohn + ' points');\n} else if (scoreMike > scoreJohn) {\n    console.log('Mike\\'s team wins with ' + scoreMike + ' points');\n} else {\n    console.log('There is a draw');\n}",
        "function calculateAge(birthYear) {\n    return 2018 - birthYear;\n}\n\nvar ageJohn = calculateAge(1990);\nvar ageMike = calculateAge(1948);\nvar ageJane = calculateAge(1969);\nconsole.log(ageJohn, ageMike, ageJane);\n\n\nfunction yearsUntilRetirement(year, firstName) {\n    var age = calculateAge(year);\n    var retirement = 65 - age;\n    \n    if (retirement > 0) {\n        console.log(firstName + ' retires in ' + retirement + ' years.');\n    } else {\n        console.log(firstName + ' is already retired.')\n    }\n    \n}\n\nyearsUntilRetirement(1990, 'John');\nyearsUntilRetirement(1948, 'Mike');\nyearsUntilRetirement(1969, 'Jane');",
        "// Function declaration\n// function whatDoYouDo(job, firstName) {}\n\n// Function expression\nvar whatDoYouDo = function(job, firstName) {\n    switch(job) {\n        case 'teacher':\n            return firstName + ' teaches kids how to code';\n        case 'driver':\n            return firstName + ' drives a cab in Lisbon.'\n        case 'designer':\n            return firstName + ' designs beautiful websites';\n        default:\n            return firstName + ' does something else';\n    }\n}\n\nconsole.log(whatDoYouDo('teacher', 'John'));\nconsole.log(whatDoYouDo('designer', 'Jane'));\nconsole.log(whatDoYouDo('retired', 'Mark'));",
        "// Initialize new array\nvar names = ['John', 'Mark', 'Jane'];\nvar years = new Array(1990, 1969, 1948);\n\nconsole.log(names[2]);\nconsole.log(names.length);\n\n// Mutate array data\nnames[1] = 'Ben';\nnames[names.length] = 'Mary';\nconsole.log(names);\n\n// Different data types\nvar john = ['John', 'Smith', 1990, 'designer', false];\n\njohn.push('blue');\njohn.unshift('Mr.');\nconsole.log(john);\n\njohn.pop();\njohn.pop();\njohn.shift();\nconsole.log(john);\n\nconsole.log(john.indexOf(23));\n\nvar isDesigner = john.indexOf('designer') === -1 ? 'John is NOT a designer' : 'John IS a designer';\nconsole.log(isDesigner);",
        "John and his family went on a holiday and went to 3 different restaurants. The bills were $124, $48 and $268.\n\nTo tip the waiter a fair amount, John created a simple tip calculator (as a function). He likes to tip 20% of the bill when the bill is less than $50, 15% when the bill is between $50 and $200, and 10% if the bill is more than $200.\n\nIn the end, John would like to have 2 arrays:\n1) Containing all three tips (one for each bill)\n2) Containing all three final paid amounts (bill + tip).\n\n(NOTE: To calculate 20% of a value, simply multiply it with 20/100 = 0.2)\n\nGOOD LUCK ðŸ˜€",
        "function tipCalculator(bill) {\n    var percentage;\n    if (bill < 50) {\n        percentage = .2;\n    } else if (bill >= 50 && bill < 200) {\n        percentage = .15;\n    } else {\n        percentage = .1;\n    }\n    return percentage * bill;\n}\n\nvar bills = [124, 48, 268];\nvar tips = [tipCalculator(bills[0]),\n            tipCalculator(bills[1]),\n            tipCalculator(bills[2])];\n\nvar finalValues = [bills[0] + tips[0],\n                   bills[1] + tips[1],\n                   bills[2] + tips[2]];\n\nconsole.log(tips, finalValues);",
        "// Object literal\nvar john = {\n    firstName: 'John',\n    lastName: 'Smith',\n    birthYear: 1990,\n    family: ['Jane', 'Mark', 'Bob', 'Emily'],\n    job: 'teacher',\n    isMarried: false\n};\n\nconsole.log(john.firstName);\nconsole.log(john['lastName']);\nvar x = 'birthYear';\nconsole.log(john[x]);\n\njohn.job = 'designer';\njohn['isMarried'] = true;\nconsole.log(john);\n\n// new Object syntax\nvar jane = new Object();\njane.firstName = 'Jane';\njane.birthYear = 1969;\njane['lastName'] = 'Smith';\nconsole.log(jane);",
        "var john = {\n    firstName: 'John',\n    lastName: 'Smith',\n    birthYear: 1992,\n    family: ['Jane', 'Mark', 'Bob', 'Emily'],\n    job: 'teacher',\n    isMarried: false,\n    calcAge: function() {\n        this.age = 2018 - this.birthYear;\n    }\n};\n\njohn.calcAge();\nconsole.log(john);",
        "Let's remember the first coding challenge where Mark and John compared their BMIs. Let's now implement the same functionality with objects and methods.\n1. For each of them, create an object with properties for their full name, mass, and height\n2. Then, add a method to each object to calculate the BMI. Save the BMI to the object and also return it from the method.\n3. In the end, log to the console who has the highest BMI, together with the full name and the respective BMI. Don't forget they might have the same BMI.\n\nRemember: BMI = mass / height^2 = mass / (height * height). (mass in kg and height in meter).\n\nGOOD LUCK ðŸ˜€",
        "var john = {\n    fullName: 'John Smith',\n    mass: 110,\n    height: 1.95,\n    calcBMI: function() {\n        this.bmi = this.mass / (this.height * this.height);\n        return this.bmi;\n    }\n}\n\nvar mark = {\n    fullName: 'Mark Miller',\n    mass: 78,\n    height: 1.69,\n    calcBMI: function() {\n        this.bmi = this.mass / (this.height * this.height);\n        return this.bmi;\n    }\n}\n\nif (john.calcBMI() > mark.calcBMI()) {\n    console.log(john.fullName + ' has a higher BMI of ' + john.bmi);\n} else if (mark.bmi > john.bmi) {\n    console.log(mark.fullName + ' has a higher BMI of ' + mark.bmi);\n} else {\n    console.log('They have the same BMI');\n}",
        "// for loop\nfor (var i = 1; i <= 20; i += 2) {\n    console.log(i);\n}\n\n// i = 0, 0 < 10 true, log i to console, i++\n// i = 1, 1 < 10 true, log i to the console, i++\n//...\n// i = 9, 9 < 10 true, log i to the console, i++\n// i = 10, 10 < 10 FALSE, exit the loop!\n\n\nvar john = ['John', 'Smith', 1990, 'designer', false, 'blue'];\nfor (var i = 0; i < john.length; i++) {\n    console.log(john[i]);\n}\n\n// While loop\nvar i = 0;\nwhile(i < john.length) {\n    console.log(john[i]);\n    i++;\n}\n\n\n// continue and break statements\nvar john = ['John', 'Smith', 1990, 'designer', false, 'blue'];\n\nfor (var i = 0; i < john.length; i++) {\n    if (typeof john[i] !== 'string') continue;\n    console.log(john[i]);\n}\n\nfor (var i = 0; i < john.length; i++) {\n    if (typeof john[i] !== 'string') break;\n    console.log(john[i]);\n}\n\n// Looping backwards\nfor (var i = john.length - 1; i >= 0; i--) {\n    console.log(john[i]);\n}",
        "Remember the tip calculator challenge? Let's create a more advanced version using everything we learned!\n\nThis time, John and his family went to 5 different restaurants. The bills were $124, $48, $268, $180 and $42.\nJohn likes to tip 20% of the bill when the bill is less than $50, 15% when the bill is between $50 and $200, and 10% if the bill is more than $200.\n\nImplement a tip calculator using objects and loops:\n1. Create an object with an array for the bill values\n2. Add a method to calculate the tip\n3. This method should include a loop to iterate over all the paid bills and do the tip calculations\n4. As an output, create 1) a new array containing all tips, and 2) an array containing final paid amounts (bill + tip). HINT: Start with two empty arrays [] as properties and then fill them up in the loop.\n\n\nEXTRA AFTER FINISHING: Mark's family also went on a holiday, going to 4 different restaurants. The bills were $77, $375, $110, and $45.\nMark likes to tip 20% of the bill when the bill is less than $100, 10% when the bill is between $100 and $300, and 25% if the bill is more than $300 (different than John).\n\n5. Implement the same functionality as before, this time using Mark's tipping rules\n6. Create a function (not a method) to calculate the average of a given array of tips. HINT: Loop over the array, and in each iteration store the current sum in a variable (starting from 0). After you have the sum of the array, divide it by the number of elements in it (that's how you calculate the average)\n7. Calculate the average tip for each family\n8. Log to the console which family paid the highest tips on average\n\nGOOD LUCK ðŸ˜€",
        "var john = {\n    fullName: 'John Smith',\n    bills: [124, 48, 268, 180, 42],\n    calcTips: function() {\n        this.tips = [];\n        this.finalValues = [];\n                \n        for (var i = 0; i < this.bills.length; i++) {\n            // Determine percentage based on tipping rules\n            var percentage;\n            var bill = this.bills[i];\n            \n            if (bill < 50) {\n                percentage = .2;\n            } else if (bill >= 50 && bill < 200) {\n                percentage = .15;\n            } else {\n                percentage = .1;\n            }\n            \n            // Add results to the corresponing arrays\n            this.tips[i] = bill * percentage;\n            this.finalValues[i] = bill + bill * percentage;\n        }\n    }\n}\n\nvar mark = {\n    fullName: 'Mark Miller',\n    bills: [77, 475, 110, 45],\n    calcTips: function() {\n        this.tips = [];\n        this.finalValues = [];\n                \n        for (var i = 0; i < this.bills.length; i++) {\n            // Determine percentage based on tipping rules\n            var percentage;\n            var bill = this.bills[i];\n            \n            if (bill < 100) {\n                percentage = .2;\n            } else if (bill >= 100 && bill < 300) {\n                percentage = .1;\n            } else {\n                percentage = .25;\n            }\n            \n            // Add results to the corresponing arrays\n            this.tips[i] = bill * percentage;\n            this.finalValues[i] = bill + bill * percentage;\n        }\n    }\n}\n\nfunction calcAverage(tips) {\n    var sum = 0;\n    for (var i = 0; i < tips.length; i++) {\n        sum = sum + tips[i];\n    }\n    return sum / tips.length;\n}\n\n// Do the calculations\njohn.calcTips();\nmark.calcTips();\n\njohn.average = calcAverage(john.tips);\nmark.average = calcAverage(mark.tips);\nconsole.log(john, mark);\n\nif (john.average > mark.average) {\n    console.log(john.fullName + '\\'s family pays higher tips, with an average of $' + john.average);\n} else if (mark.average > john.average) {\n    console.log(mark.fullName + '\\'s family pays higher tips, with an average of $' + mark.average);\n}"
    ],
    "docstrings": [
        "***************************\n* Variables and data types",
        "***************************\n* Variable mutation and type coercion",
        "***************************\n* Basic operators",
        "***************************\n* Operator precedence",
        "***************************\n* CODING CHALLENGE 1",
        "***************************\n* If / else statements",
        "***************************\n* Boolean logic",
        "***************************\n* The Ternary Operator and Switch Statements",
        "***************************\n* Truthy and Falsy values and equality operators",
        "***************************\n* CODING CHALLENGE 2",
        "***************************\n* Functions",
        "***************************\n* Function Statements and Expressions",
        "***************************\n* Arrays",
        "***************************\n* CODING CHALLENGE 3",
        "***************************\n* Objects and properties",
        "***************************\n* Objects and methods",
        "***************************\n* CODING CHALLENGE 4",
        "***************************\n* Loops and iteration",
        "***************************\n* CODING CHALLENGE 5"
    ],
    "functions": [],
    "classes": []
}