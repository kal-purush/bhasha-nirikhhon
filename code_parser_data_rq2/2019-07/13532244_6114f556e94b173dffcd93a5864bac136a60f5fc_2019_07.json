{
    "identifiers": [
        "org",
        "ikasan",
        "rest",
        "org",
        "ikasan",
        "spec",
        "flow",
        "Flow",
        "org",
        "ikasan",
        "spec",
        "metadata",
        "FlowMetaDataProvider",
        "org",
        "ikasan",
        "spec",
        "metadata",
        "ModuleMetaDataProvider",
        "org",
        "ikasan",
        "spec",
        "Module",
        "org",
        "ikasan",
        "spec",
        "ModuleContainer",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "http",
        "HttpStatus",
        "org",
        "springframework",
        "http",
        "ResponseEntity",
        "org",
        "springframework",
        "security",
        "access",
        "prepost",
        "PreAuthorize",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "PathVariable",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "RequestMapping",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "RequestMethod",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "RestController",
        "RequestMapping",
        "RestController",
        "logger",
        "LoggerFactory",
        "getLogger",
        "Autowired",
        "moduleContainer",
        "Autowired",
        "flowMetaDataProvider",
        "Autowired",
        "moduleMetaDataProvider",
        "RequestMapping",
        "method",
        "RequestMethod",
        "GET",
        "value",
        "produces",
        "PreAuthorize",
        "PathVariable",
        "moduleName",
        "PathVariable",
        "flowName",
        "moduleContainer",
        "getModule",
        "moduleName",
        "flow",
        "getFlow",
        "flowName",
        "flowMetaDataProvider",
        "describeFlow",
        "flow",
        "HttpStatus",
        "OK",
        "RequestMapping",
        "method",
        "RequestMethod",
        "GET",
        "value",
        "produces",
        "PreAuthorize",
        "PathVariable",
        "moduleName",
        "moduleContainer",
        "getModule",
        "moduleName",
        "moduleMetaDataProvider",
        "describeModule",
        "HttpStatus",
        "OK"
    ],
    "literals": [
        "\"/rest/metadata\"",
        "\"/flow/{moduleName}/{flowName}\"",
        "\"application/json\"",
        "\"hasAnyAuthority('ALL','WebServiceAdmin')\"",
        "\"moduleName\"",
        "\"flowName\"",
        "\"/module/{moduleName}\"",
        "\"application/json\"",
        "\"hasAnyAuthority('ALL','WebServiceAdmin')\"",
        "\"moduleName\""
    ],
    "variables": [
        "moduleContainer",
        "flowMetaDataProvider",
        "moduleMetaDataProvider"
    ],
    "comments": [],
    "docstrings": [
        "* Metadata application implementing the REST contract",
        "* TODO: work out how to get annotation security working.\n     *\n     * @param moduleName\n     * @param flowName\n     * @return",
        "* TODO: work out how to get annotation security working.\n     *\n     * @param moduleName\n     * @return"
    ],
    "functions": [
        "ResponseEntity",
        "getFlowMetadata",
        "ResponseEntity",
        "getModuleMetadata"
    ],
    "classes": [
        "MetaDataApplication"
    ]
}