{
    "identifiers": [
        "matplotlib",
        "pyplot",
        "plt",
        "mxnet",
        "mx",
        "mxnet",
        "gluon",
        "nd",
        "image",
        "mxnet",
        "gluon",
        "data",
        "vision",
        "transforms",
        "gluoncv",
        "data",
        "transforms",
        "video",
        "gluoncv",
        "utils",
        "gluoncv",
        "model_zoo",
        "get_model",
        "utils",
        "download",
        "url",
        "image",
        "imread",
        "im_fname",
        "plt",
        "imshow",
        "img",
        "asnumpy",
        "plt",
        "show",
        "transforms",
        "Compose",
        "video",
        "VideoCenterCrop",
        "size",
        "video",
        "VideoToTensor",
        "video",
        "VideoNormalize",
        "transform_fn",
        "img",
        "plt",
        "imshow",
        "nd",
        "transpose",
        "img",
        "asnumpy",
        "plt",
        "show",
        "get_model",
        "nclass",
        "pretrained",
        "net",
        "img",
        "expand_dims",
        "axis",
        "net",
        "classes",
        "nd",
        "topk",
        "pred",
        "k",
        "topK",
        "astype",
        "i",
        "topK",
        "classes",
        "ind",
        "i",
        "asscalar",
        "nd",
        "softmax",
        "pred",
        "ind",
        "i",
        "asscalar"
    ],
    "literals": [
        "'https://github.com/bryanyzhu/tiny-ucf101/raw/master/ThrowDiscus.png'",
        "'vgg16_ucf101'",
        "'int'",
        "'The input video frame is classified to be'",
        "'\\t[%s], with probability %.3f.'"
    ],
    "variables": [
        "url",
        "im_fname",
        "img",
        "transform_fn",
        "img",
        "net",
        "pred",
        "classes",
        "topK",
        "ind"
    ],
    "comments": [
        "",
        "",
        "Then, we download and show the example image:",
        "",
        "In case you don't recognize it, the image is a man throwing discus. :)",
        "",
        "Now we define transformations for the image.",
        "",
        "This transformation function does three things:",
        "center crop the image to 224x224 in size,",
        "transpose it to ``num_channels*height*width``,",
        "and normalize with mean and standard deviation calculated across all ImageNet images.",
        "",
        "What does the transformed image look like?",
        "",
        "Can't recognize anything? *Don't panic!* Neither do I.",
        "The transformation makes it more \"model-friendly\", instead of \"human-friendly\".",
        "",
        "Next, we load a pre-trained model.",
        "",
        "",
        "Finally, we prepare the image and feed it to the model",
        "",
        "",
        "We can see that our pre-trained model predicts this video frame",
        "to be ``throw discus`` action with high confidence.",
        "",
        "Next Step",
        "---------",
        "",
        "If you would like to dive deeper into training TSN models on ``UCF101``,",
        "feel free to read the next `tutorial on UCF101 <dive_deep_ucf101.html>`__."
    ],
    "docstrings": [
        "\"\"\"1. Getting Started with Pre-trained TSN Model on UCF101\n======================================================\n\n`UCF101 <https://www.crcv.ucf.edu/data/UCF101.php>`_  is an action recognition dataset\nof realistic action videos, collected from YouTube. With 13,320 short trimmed videos\nfrom 101 action categories, it is one of the most widely used dataset in the research\ncommunity for benchmarking state-of-the-art video action recognition models.\n\nIn this tutorial, we will demonstrate how to load a pre-trained model from :ref:`gluoncv-model-zoo`\nand classify video frames from the Internet or your local disk.\n\nStep by Step\n------------------\n\nLet's first try out a pre-trained UCF101 model with a few lines of python code.\n\nFirst, please follow the `installation guide <../../index.html#installation>`__\nto install ``MXNet`` and ``GluonCV`` if you haven't done so yet.\n\"\"\""
    ],
    "functions": [],
    "classes": []
}