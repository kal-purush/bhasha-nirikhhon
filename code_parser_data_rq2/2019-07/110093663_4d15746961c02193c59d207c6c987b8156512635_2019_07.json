{
    "identifiers": [
        "makeExecutableSchema",
        "graphql",
        "subscribe",
        "parse",
        "$$asyncIterator",
        "ExecutionResult",
        "applyMiddleware",
        "IResolvers",
        "IMiddlewareTypeMap",
        "IMiddlewareFunction",
        "describe",
        "parent",
        "ctx",
        "info",
        "arg",
        "parent",
        "ctx",
        "info",
        "arg",
        "parent",
        "ctx",
        "info",
        "arg",
        "$$asyncIterator",
        "iterator",
        "iterator",
        "getSchema",
        "makeExecutableSchema",
        "resolve",
        "parent",
        "args",
        "context",
        "info",
        "resolve",
        "parent",
        "_args",
        "resolve",
        "parent",
        "args",
        "context",
        "info",
        "resolve",
        "parent",
        "_args",
        "resolve",
        "parent",
        "args",
        "context",
        "info",
        "resolve",
        "schemaMiddlewareBefore",
        "resolve",
        "parent",
        "args",
        "context",
        "info",
        "resolve",
        "parent",
        "_args",
        "context",
        "info",
        "schemaMiddlewareAfter",
        "resolve",
        "parent",
        "args",
        "context",
        "info",
        "resolve",
        "emptyStringMiddleware",
        "resolve",
        "parent",
        "args",
        "context",
        "info",
        "info",
        "resolve",
        "test",
        "getSchema",
        "resolve",
        "parent",
        "resolve",
        "parent",
        "_args",
        "resolve",
        "applyMiddleware",
        "schema",
        "fieldMiddleware",
        "graphql",
        "schemaWithMiddleware",
        "query",
        "expect",
        "res",
        "test",
        "getSchema",
        "resolve",
        "parent",
        "args",
        "context",
        "info",
        "resolve",
        "parent",
        "_args",
        "applyMiddleware",
        "schema",
        "fieldMiddleware",
        "subscribe",
        "schemaWithMiddleware",
        "parse",
        "query",
        "iterator",
        "expect",
        "res",
        "test",
        "getSchema",
        "applyMiddleware",
        "schema",
        "typeMiddlewareBefore",
        "graphql",
        "schemaWithMiddleware",
        "query",
        "expect",
        "res",
        "test",
        "getSchema",
        "applyMiddleware",
        "schema",
        "typeMiddlewareAfter",
        "graphql",
        "schemaWithMiddleware",
        "query",
        "expect",
        "res",
        "test",
        "getSchema",
        "applyMiddleware",
        "schema",
        "typeMiddlewareBefore",
        "subscribe",
        "schemaWithMiddleware",
        "parse",
        "query",
        "iterator",
        "expect",
        "res",
        "test",
        "getSchema",
        "applyMiddleware",
        "schema",
        "schemaMiddlewareBefore",
        "graphql",
        "schemaWithMiddleware",
        "query",
        "expect",
        "res",
        "test",
        "getSchema",
        "applyMiddleware",
        "schema",
        "schemaMiddlewareAfter",
        "graphql",
        "schemaWithMiddleware",
        "query",
        "expect",
        "res",
        "test",
        "getSchema",
        "applyMiddleware",
        "schema",
        "schemaMiddlewareBefore",
        "graphql",
        "schemaWithMiddleware",
        "query",
        "expect",
        "res",
        "test",
        "getSchema",
        "applyMiddleware",
        "schema",
        "schemaMiddlewareBefore",
        "subscribe",
        "schemaWithMiddleware",
        "parse",
        "query",
        "iterator",
        "expect",
        "res",
        "test",
        "getSchema",
        "applyMiddleware",
        "schema",
        "schemaMiddlewareBefore",
        "graphql",
        "schemaWithMiddleware",
        "query",
        "expect",
        "res"
    ],
    "literals": [
        "'graphql-tools'",
        "'graphql'",
        "'iterall'",
        "'apollo-link'",
        "'../src'",
        "'../src/types'",
        "'core:'",
        "type Query {\n      before(arg: String!): String!\n      beforeNothing(arg: String!): String!\n      after: String!\n      afterNothing: String!\n      null: String\n      nested: Nothing!\n      resolverless: Resolverless!\n    }\n\n    type Subscription {\n      sub: String\n    }\n\n    type Nothing {\n      nothing: String!\n    }\n\n    type Resolverless {\n      someData: String!\n    }\n\n    schema {\n      query: Query,\n      subscription: Subscription\n    }",
        "'after'",
        "'after'",
        "'data'",
        "'nothing'",
        "'changed'",
        "'changed'",
        "'changed'",
        "'changed'",
        "'changed'",
        "''",
        "'field middleware'",
        "'changed'",
        "'changed'",
        "query {\n        before(arg: \"before\")\n        beforeNothing(arg: \"before\")\n        after\n        afterNothing\n        null\n        nested { nothing }\n      }",
        "'changed'",
        "'before'",
        "'changed'",
        "'after'",
        "'nothing'",
        "'field middleware subscriptions'",
        "'changed'",
        "subscription {\n        sub\n      }",
        "'changed'",
        "'type middleware before'",
        "query {\n        before(arg: \"before\")\n        beforeNothing(arg: \"before\")\n        after\n        afterNothing\n        null\n        nested { nothing }\n      }",
        "'changed'",
        "'changed'",
        "'after'",
        "'after'",
        "'nothing'",
        "'type middleware after'",
        "query {\n        before(arg: \"before\")\n        beforeNothing(arg: \"before\")\n        after\n        afterNothing\n        null\n        nested { nothing }\n      }",
        "'changed'",
        "'changed'",
        "'changed'",
        "'changed'",
        "'changed'",
        "'nothing'",
        "'type middleware subscriptions'",
        "subscription {\n        sub\n      }",
        "'changed'",
        "'schema middleware before'",
        "query {\n        before(arg: \"before\")\n        beforeNothing(arg: \"before\")\n        after\n        afterNothing\n        null\n        nested { nothing }\n      }",
        "'changed'",
        "'changed'",
        "'after'",
        "'after'",
        "'nothing'",
        "'schema middleware after'",
        "query {\n        before(arg: \"before\")\n        beforeNothing(arg: \"before\")\n        after\n        afterNothing\n        null\n        nested { nothing }\n      }",
        "'changed'",
        "'changed'",
        "'changed'",
        "'changed'",
        "'changed'",
        "'changed'",
        "'schema middleware before'",
        "query {\n        before(arg: \"before\")\n        beforeNothing(arg: \"before\")\n        after\n        afterNothing\n        null\n        nested { nothing }\n      }",
        "'changed'",
        "'changed'",
        "'after'",
        "'after'",
        "'nothing'",
        "'schema middleware subscription'",
        "subscription {\n        sub\n      }",
        "'changed'",
        "'schema middleware uses default field resolver'",
        "query {\n        resolverless {\n          someData\n        }\n      }",
        "'data'"
    ],
    "variables": [
        "typeDefs",
        "resolvers",
        "iterator",
        "getSchema",
        "typeMiddlewareBefore",
        "_args",
        "_args",
        "typeMiddlewareAfter",
        "res",
        "schemaMiddlewareBefore",
        "_args",
        "schemaMiddlewareAfter",
        "res",
        "emptyStringMiddleware",
        "schema",
        "fieldMiddleware",
        "_args",
        "schemaWithMiddleware",
        "query",
        "res",
        "schema",
        "fieldMiddleware",
        "_args",
        "schemaWithMiddleware",
        "query",
        "iterator",
        "res",
        "schema",
        "schemaWithMiddleware",
        "query",
        "res",
        "schema",
        "schemaWithMiddleware",
        "query",
        "res",
        "schema",
        "schemaWithMiddleware",
        "query",
        "iterator",
        "res",
        "schema",
        "schemaWithMiddleware",
        "query",
        "res",
        "schema",
        "schemaWithMiddleware",
        "query",
        "res",
        "schema",
        "schemaWithMiddleware",
        "query",
        "res",
        "schema",
        "schemaWithMiddleware",
        "query",
        "iterator",
        "res",
        "schema",
        "schemaWithMiddleware",
        "query",
        "res"
    ],
    "comments": [
        "Schema.",
        "Field Middleware",
        "Type Middleware",
        "Schema Middleware",
        "Tests.",
        "Tests.",
        "Tests.",
        "Tests.",
        "Tests.",
        "Tests.",
        "Tests."
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}