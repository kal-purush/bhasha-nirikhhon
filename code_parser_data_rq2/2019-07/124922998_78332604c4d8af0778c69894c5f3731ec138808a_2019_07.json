{
    "identifiers": [
        "require",
        "require",
        "_interpolatorToArray",
        "interp",
        "n",
        "ignoreStart",
        "ignoreEnd",
        "luminanceThresh",
        "brighterVal",
        "n",
        "ignoreStart",
        "ignoreEnd",
        "nn",
        "_",
        "i",
        "nn",
        "i",
        "t",
        "interp",
        "t",
        "rgb",
        "d3color",
        "rgb",
        "colour",
        "colour",
        "colour",
        "luminance",
        "luminanceThresh",
        "colour",
        "colour",
        "colour",
        "ignoreStart",
        "nn",
        "ignoreEnd",
        "nn",
        "_interpolatorToArray",
        "chromatic",
        "_interpolatorToArray",
        "chromatic",
        "_interpolatorToArray",
        "chromatic",
        "_interpolatorToArray",
        "chromatic",
        "_interpolatorToArray",
        "chromatic",
        "_interpolatorToArray",
        "chromatic",
        "_interpolatorToArray",
        "chromatic",
        "_interpolatorToArray",
        "chromatic",
        "_interpolatorToArray",
        "chromatic",
        "_interpolatorToArray",
        "chromatic",
        "_interpolatorToArray",
        "chromatic",
        "_interpolatorToArray",
        "chromatic",
        "getInitialReferenceColours",
        "n",
        "n",
        "i",
        "n",
        "i",
        "ret",
        "i",
        "availableColours",
        "whichPanelIdx",
        "inPanelIdx",
        "whichPanelIdx",
        "whichPanelIdx",
        "whichPanelIdx",
        "inPanelIdx",
        "inPanelIdx",
        "inPanelIdx",
        "ret"
    ],
    "literals": [
        "\"d3-color\"",
        "\"d3-scale-chromatic\""
    ],
    "variables": [
        "d3color",
        "chromatic",
        "_interpolatorToArray",
        "nn",
        "colour",
        "luminance",
        "availableColours",
        "getInitialReferenceColours",
        "whichPanelIdx",
        "inPanelIdx",
        "ret",
        "i"
    ],
    "comments": [
        "const scaleSequential = require(\"d3-scale\").scaleSequential;",
        "ITU BT.709",
        "ROW 1",
        "ROW 2",
        "start at the 7th set of available colours",
        "start at the 2nd entry of each panel",
        "odd, so when we loop over (if!) use different ones"
    ],
    "docstrings": [
        "* Given a d3 interpolator function, return an array of hexes.\n * @param {int} n number of colours wanted\n * @param {int} ignoreStart trim colours from start -- helps to remove dark colours ;)\n * @param {int} ignoreEnd    \"    \"    \"   \"  end\n * @param {num} luminanceThresh value (ITU BT.709) below which we make brighter\n * @param {num} brighterVal value to make dark colours this much brighter (uses `d3.brighter`)",
        "* A list of available colours for the app.\n * All colours (references & samples) _must_ be included\n * here, else the colour picker won't work.\n * \n * The colour picker fits 6 panels across (2 rows down)",
        "* Reference colours are picked from the availableColours by going \"across\" the \n * second set of panels (i.e. the second \"row\" of swatches in the colour picker).\n * When we have gone across this, we repeat the progress at a higher index.\n * Loops around so that while colours will eventually repeat, they will never be undefined."
    ],
    "functions": [],
    "classes": []
}