{
    "identifiers": [
        "os",
        "sys",
        "logging",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "INFO",
        "format",
        "logging",
        "getLogger",
        "directory",
        "root",
        "directories",
        "filenames",
        "os",
        "walk",
        "directory",
        "filename",
        "filenames",
        "os",
        "path",
        "join",
        "root",
        "filename",
        "directory",
        "filename",
        "walk_directory",
        "directory",
        "filename",
        "endswith",
        "filename",
        "directory",
        "mpy_cross",
        "py_file",
        "walk_pyfiles",
        "directory",
        "log",
        "info",
        "format",
        "py_file",
        "mpy_cross",
        "run",
        "py_file",
        "py_file",
        "replace",
        "files_touched",
        "append",
        "mpy_file",
        "files_touched",
        "sys",
        "argv",
        "os",
        "path",
        "exists",
        "directory",
        "KeyError",
        "log",
        "error",
        "format",
        "directory",
        "sys",
        "exit",
        "compile_tree_inline",
        "directory"
    ],
    "literals": [
        "'%(asctime)-15s [%(name)-10s] %(levelname)-7s: %(message)s'",
        "'.py'",
        "'Compiling \"{}\" using mpy-cross'",
        "'.py'",
        "'.mpy'",
        "'__main__'",
        "'\"{}\" is not a directory or does not exist. Please specify directory to compile.'"
    ],
    "variables": [
        "log",
        "files_touched",
        "mpy_file",
        "directory",
        "directory"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "(c) 2019 Andreas Motl <andreas@hiveeyes.org>",
        "(c) 2019 Richard Pobering <richard@hiveeyes.org>",
        "License: GNU Affero General Public License, Version 3",
        "Setup logging.",
        "log.setLevel(logging.DEBUG)",
        "Compile a directory worth of .py files to .mpy files."
    ],
    "docstrings": [
        "\"\"\"\n==========\nMotivation\n==========\n\nTool to compile entire subdirectory to .mpy files [1].\n\nRemark: The canonical implementation of this is `mpy_cross_all.py`_.\nThis program was started before being able to find it in time.\n\n.. _mpy_cross_all.py: https://github.com/micropython/micropython/blob/master/tools/mpy_cross_all.py\n\nQ: Isn't it just a 1-line shell command? E.g. something like \n   ``for file in $(find *.py); do mpy-cross $file; done``\n\nA: Apparently not a one-line shell command, because it needs to pass \n   arguments down to mpy-cross, be able to compile .mpy in place or \n   in a dedicated (non existing) dir, then likely few more features \n   pop up. But it definitely going to be pretty simple (for starters) \n   Python script, and that point that we should standardize on it.\n\nA: Makefile just calls that tool, instead of containing bunch of \n   glitchy shell magic.\n\n\n=========\nRationale\n=========\nWe found ``py_compile`` [2] but this isn't there yet.\nOn the other hand, we find [3] and [4] to be pretty interesting.\nNevertheless, we felt there's still a tooling gap so we built this.\n\nAfter finally finding [5], [1] makes more sense to us.\n\n\n============\nMore tooling\n============\nSee also [10-12].\n\n\n[1] https://github.com/micropython/micropython/issues/3040\n[2] https://github.com/pfalcon/pycopy-lib/blob/master/py_compile/py_compile.py\n[3] https://github.com/micropython/micropython/pull/4917\n[4] https://github.com/micropython/micropython/pull/3034\n[5] https://github.com/micropython/micropython/blob/master/tools/mpy_cross_all.py\n\n[10] https://community.hiveeyes.org/t/micropython-tooling/2390\n[11] https://community.hiveeyes.org/t/running-rshell-natively-on-windows/1774\n[12] https://community.hiveeyes.org/t/ble-gatt-mit-nrf51822-oder-spbtle-rf-unter-micropython/2374/9\n\"\"\""
    ],
    "functions": [
        "walk_directory",
        "walk_pyfiles",
        "compile_tree_inline"
    ],
    "classes": [
        "DirectoryProcessingError"
    ]
}