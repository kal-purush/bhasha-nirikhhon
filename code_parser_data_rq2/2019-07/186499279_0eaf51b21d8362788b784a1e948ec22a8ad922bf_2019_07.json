{
    "identifiers": [
        "division",
        "absolute_import",
        "unicode_literals",
        "print_function",
        "argparse",
        "numpy",
        "np",
        "os",
        "sys",
        "zipfile",
        "uuid",
        "uuid4",
        "rec",
        "prec",
        "rec",
        "reshape",
        "rec",
        "size",
        "prec",
        "reshape",
        "prec",
        "size",
        "np",
        "zeros",
        "np",
        "ones",
        "np",
        "vstack",
        "z",
        "rec",
        "o",
        "np",
        "vstack",
        "z",
        "prec",
        "z",
        "i",
        "len",
        "mpre",
        "max",
        "mpre",
        "i",
        "mpre",
        "i",
        "np",
        "where",
        "mrec",
        "mrec",
        "i",
        "indices",
        "ap",
        "mrec",
        "i",
        "mrec",
        "i",
        "mpre",
        "i",
        "ap",
        "targets",
        "preds",
        "np",
        "array",
        "targets",
        "dtype",
        "np",
        "float32",
        "np",
        "hstack",
        "targets",
        "np",
        "newaxis",
        "astype",
        "np",
        "float64",
        "preds",
        "np",
        "newaxis",
        "astype",
        "np",
        "float64",
        "np",
        "argsort",
        "preds",
        "ind",
        "np",
        "array",
        "tog",
        "i",
        "i",
        "ind",
        "np",
        "array",
        "tog",
        "i",
        "i",
        "ind",
        "sortcounts",
        "sortcounts",
        "copy",
        "i",
        "sortcounts",
        "shape",
        "sortcounts",
        "i",
        "sortcounts",
        "i",
        "np",
        "cumsum",
        "tp",
        "np",
        "cumsum",
        "tp",
        "np",
        "cumsum",
        "fp",
        "np",
        "sum",
        "targets",
        "np",
        "cumsum",
        "tp",
        "numinst",
        "calculate_ap",
        "R",
        "P",
        "P",
        "R",
        "score",
        "ap",
        "file_path",
        "ground_truth",
        "json",
        "os",
        "path",
        "exists",
        "file_path",
        "format",
        "file_path",
        "open",
        "file_path",
        "fp",
        "json",
        "load",
        "fp",
        "data",
        "keys",
        "data",
        "img_ids",
        "keys",
        "ground_truth",
        "np",
        "empty",
        "len",
        "img_ids",
        "len",
        "cls_names",
        "dtype",
        "np",
        "int32",
        "np",
        "empty",
        "len",
        "img_ids",
        "len",
        "cls_names",
        "dtype",
        "np",
        "float64",
        "idx",
        "len",
        "img_ids",
        "cls_idx",
        "len",
        "cls_names",
        "output",
        "idx",
        "data",
        "img_ids",
        "idx",
        "cls_names",
        "cls_idx",
        "output",
        "img_ids",
        "cls_names",
        "targets",
        "predictions",
        "targets",
        "shape",
        "np",
        "zeros",
        "num_classes",
        "cls",
        "num_classes",
        "predictions",
        "cls",
        "targets",
        "cls",
        "targets",
        "cls",
        "prediction",
        "evaluate_data_inds",
        "cls_labels",
        "evaluate_data_inds",
        "np",
        "where",
        "eval_cls_labels",
        "get_precision_recall",
        "eval_cls_labels",
        "eval_preds",
        "ap_matrix",
        "cls",
        "ap",
        "np",
        "mean",
        "ap_matrix",
        "axis",
        "mean_ap",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "len",
        "sys",
        "argv",
        "parser",
        "print_help",
        "sys",
        "exit",
        "parser",
        "parse_args",
        "opts",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "realpath",
        "os",
        "path",
        "join",
        "curr_dir",
        "load_json",
        "targets_file",
        "format",
        "uuid4",
        "hex",
        "os",
        "path",
        "exists",
        "target_dir",
        "os",
        "makedirs",
        "target_dir",
        "format",
        "target_dir",
        "zipfile",
        "ZipFile",
        "opts",
        "predictions",
        "zip_ref",
        "zip_ref",
        "extractall",
        "target_dir",
        "val",
        "val",
        "opts",
        "k_values",
        "split",
        "val",
        "val",
        "opts",
        "sample_inds",
        "split",
        "format",
        "k_values",
        "sample_inds",
        "k_idx",
        "len",
        "k_values",
        "k_values",
        "k_idx",
        "inds",
        "len",
        "sample_inds",
        "sample_inds",
        "inds",
        "format",
        "sample_idx",
        "k_low",
        "format",
        "suffix",
        "os",
        "path",
        "join",
        "target_dir",
        "format",
        "sample_idx",
        "k_low",
        "load_json",
        "out_k_sample_file",
        "ground_truth",
        "targets",
        "shape",
        "predictions",
        "shape",
        "test_svm",
        "targets",
        "predictions",
        "k_val_output",
        "append",
        "ap",
        "np",
        "concatenate",
        "k_val_output",
        "axis",
        "np",
        "max",
        "k_val_output",
        "axis",
        "np",
        "min",
        "k_val_output",
        "axis",
        "np",
        "mean",
        "k_val_output",
        "axis",
        "np",
        "std",
        "k_val_output",
        "axis",
        "output_mean",
        "append",
        "k_low_mean",
        "output_min",
        "append",
        "k_low_min",
        "output_max",
        "append",
        "k_low_max",
        "output_std",
        "append",
        "k_low_std",
        "idx",
        "len",
        "output_mean",
        "format",
        "round",
        "output_mean",
        "idx",
        "round",
        "output_min",
        "idx",
        "round",
        "output_max",
        "idx",
        "round",
        "output_std",
        "idx",
        "np",
        "mean",
        "output_mean",
        "axis",
        "format",
        "final_mean",
        "main"
    ],
    "literals": [
        "\"{} does not exist\"",
        "'r'",
        "'SVM model test'",
        "'--predictions'",
        "\"Zip file containing low-shot predictions\"",
        "'--k_values'",
        "\"1,2,4,8,16,32,64,96\"",
        "\"Low-shot k-values for svm testing. Comma separated\"",
        "'--sample_inds'",
        "\"0,1,2,3,4\"",
        "\"sample_inds for which to test svm. Comma separated\"",
        "'voc2007'",
        "'test_targets.json'",
        "\"/tmp/{}\"",
        "'Output dir: {}'",
        "\"r\"",
        "\",\"",
        "\",\"",
        "'Testing svm for k-values: {} and sample_inds: {}'",
        "'sample{}_k{}'",
        "'Suffix: {}'",
        "'test_sample{}_k{}_json_preds.json'",
        "\"Predictions do not match targets shape\"",
        "'mean/min/max/std: {} / {} / {} / {}'",
        "'final_mean: {}'",
        "'All done!!'",
        "'__main__'"
    ],
    "variables": [
        "rec",
        "prec",
        "z",
        "o",
        "mrec",
        "mpre",
        "mpre",
        "i",
        "indices",
        "ap",
        "ap",
        "targets",
        "tog",
        "ind",
        "ind",
        "score",
        "sortcounts",
        "tp",
        "fp",
        "fp",
        "i",
        "fp",
        "i",
        "P",
        "numinst",
        "R",
        "ap",
        "data",
        "img_ids",
        "cls_names",
        "output",
        "output",
        "cls_idx",
        "num_classes",
        "ap_matrix",
        "prediction",
        "cls_labels",
        "evaluate_data_inds",
        "eval_preds",
        "eval_cls_labels",
        "eval_cls_labels",
        "P",
        "R",
        "score",
        "ap",
        "mean_ap",
        "parser",
        "opts",
        "curr_dir",
        "targets_file",
        "targets",
        "_",
        "_",
        "target_dir",
        "k_values",
        "sample_inds",
        "output_mean",
        "output_max",
        "output_min",
        "output_std",
        "k_low",
        "k_val_output",
        "sample_idx",
        "suffix",
        "out_k_sample_file",
        "predictions",
        "_",
        "_",
        "ap",
        "k_val_output",
        "k_low_max",
        "k_low_min",
        "k_low_mean",
        "k_low_std",
        "final_mean"
    ],
    "comments": [
        "Copyright (c) Facebook, Inc. and its affiliates.",
        "All rights reserved.",
        "",
        "This source code is licensed under the license found in the",
        "LICENSE file in the root directory of this source tree.",
        "",
        "",
        "binarize targets",
        "print('Testing model for cls: {}'.format(cls))",
        "meaning of labels in VOC/COCO original loaded target files:",
        "label 0 = not present, set it to -1 as svm train target",
        "label 1 = present. Make the svm train target labels as -1, 1."
    ],
    "docstrings": [
        "\"\"\"\nSVM test for image classification.\n\nRelevant transfer tasks: Image Classification VOC07 and COCO2014.\n\"\"\"",
        "\"\"\"\n    Computes the AP under the precision recall curve.\n    \"\"\"",
        "\"\"\"\n    [P, R, score, ap] = get_precision_recall(targets, preds)\n    Input    :\n        targets  : number of occurrences of this class in the ith image\n        preds    : score for this image\n    Output   :\n        P, R   : precision and recall\n        score  : score which corresponds to the particular precision and recall\n        ap     : average precision\n    \"\"\""
    ],
    "functions": [
        "calculate_ap",
        "get_precision_recall",
        "load_json",
        "test_svm",
        "main"
    ],
    "classes": []
}