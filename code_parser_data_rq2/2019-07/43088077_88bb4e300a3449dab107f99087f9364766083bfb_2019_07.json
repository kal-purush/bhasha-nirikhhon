{
    "identifiers": [
        "com",
        "palantir",
        "conjure",
        "java",
        "okhttp",
        "com",
        "google",
        "common",
        "annotations",
        "VisibleForTesting",
        "com",
        "palantir",
        "logsafe",
        "SafeArg",
        "java",
        "lang",
        "WeakReference",
        "java",
        "util",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "Iterator",
        "java",
        "util",
        "java",
        "util",
        "Optional",
        "java",
        "util",
        "Consumer",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "log",
        "LoggerFactory",
        "getLogger",
        "resourceType",
        "subscriber",
        "references",
        "resourceType",
        "resourceType",
        "unused",
        "VisibleForTesting",
        "resourceType",
        "subscriber",
        "resourceType",
        "resourceType",
        "subscriber",
        "subscriber",
        "log",
        "isTraceEnabled",
        "Optional",
        "of",
        "Optional",
        "empty",
        "objectToMonitor",
        "stackTrace",
        "references",
        "add",
        "objectToMonitor",
        "stackTrace",
        "pruneAndLog",
        "objectToNoLongerMonitor",
        "i",
        "i",
        "references",
        "size",
        "i",
        "references",
        "get",
        "i",
        "objectToNoLongerMonitor",
        "last",
        "references",
        "size",
        "Collections",
        "swap",
        "references",
        "i",
        "last",
        "references",
        "remove",
        "last",
        "iterator",
        "references",
        "iterator",
        "iterator",
        "hasNext",
        "reference",
        "iterator",
        "next",
        "reference",
        "get",
        "subscriber",
        "accept",
        "reference",
        "stackTrace",
        "logLeak",
        "reference",
        "stackTrace",
        "iterator",
        "remove",
        "stackTrace",
        "stackTrace",
        "isPresent",
        "log",
        "warn",
        "SafeArg",
        "of",
        "resourceType",
        "getName",
        "stackTrace",
        "get",
        "log",
        "warn",
        "SafeArg",
        "of",
        "resourceType",
        "getName",
        "SafeArg",
        "of",
        "log",
        "getName",
        "stackTrace",
        "referent",
        "stackTrace",
        "referent",
        "stackTrace",
        "stackTrace"
    ],
    "literals": [
        "\"Runtime exception for stack trace\"",
        "\"Resource leak detected - did you forget to close a resource properly? \"",
        "\"This will likely hurt performance. Stack trace is of the call where \"",
        "\"the acquire happened.\"",
        "\"resourceType\"",
        "\"Leak detected in Conjure call - did you forget to close a resource properly? \"",
        "\"This will likely hurt performance. To get a \"",
        "\"stack trace for the call where the acquire happened, set log \"",
        "\"level to TRACE.\"",
        "\"resourceType\"",
        "\"loggerToSetToTrace\""
    ],
    "variables": [
        "resourceType",
        "subscriber",
        "stackTrace"
    ],
    "comments": [],
    "docstrings": [
        "* (c) Copyright 2019 Palantir Technologies Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "LeakDetector",
        "LeakDetector",
        "maybeCreateStackTrace",
        "register",
        "unregister",
        "pruneAndLog",
        "logLeak",
        "LeakDetectingReference"
    ],
    "classes": [
        "LeakDetector",
        "LeakDetectingReference"
    ]
}