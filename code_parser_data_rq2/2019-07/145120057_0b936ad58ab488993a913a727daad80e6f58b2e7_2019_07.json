{
    "identifiers": [
        "logging",
        "sqlite3",
        "lite",
        "redis",
        "PyQt4",
        "QtCore",
        "datetime",
        "datetime",
        "strprice",
        "round",
        "strprice",
        "QtCore",
        "QObject",
        "QtCore",
        "pyqtSignal",
        "zmq_socket",
        "parent",
        "QtViewerCM1",
        "parent",
        "zmq_socket",
        "redis",
        "Redis",
        "logging",
        "getLogger",
        "logger",
        "info",
        "subject",
        "subject",
        "data",
        "datetime",
        "now",
        "datetime",
        "strftime",
        "nowtime",
        "subject",
        "data",
        "subject",
        "data",
        "redis_client",
        "hget",
        "ordno",
        "subject",
        "data",
        "subject",
        "data",
        "subject",
        "data",
        "subject",
        "data",
        "subject",
        "data",
        "subject",
        "data",
        "autotrader_id",
        "ordno",
        "strnowtime",
        "buysell",
        "shortcd",
        "ordprice",
        "ordqty",
        "execprice",
        "execqty",
        "unexecqty",
        "len",
        "orderitem",
        "wildcard",
        "buysell",
        "buysell",
        "autotrader_id",
        "ordno",
        "execno",
        "nowtime",
        "shortcd",
        "ordprice",
        "ordqty",
        "buysell",
        "execprice",
        "execqty",
        "zmq_socket",
        "send_pyobj",
        "msg_dict",
        "logger",
        "info",
        "orderitem",
        "dbname",
        "lite",
        "connect",
        "dbname",
        "conn_db",
        "cursor",
        "cursor_db",
        "execute",
        "wildcard",
        "orderitem",
        "cursor_db",
        "execute",
        "ordno",
        "shortcd",
        "cursor_db",
        "fetchall",
        "len",
        "rows",
        "rows",
        "rows",
        "rows",
        "rows",
        "rows",
        "avgExecPrice",
        "avgExecQty",
        "execprice",
        "execqty",
        "avgExecQty",
        "execqty",
        "avgExecQty",
        "execqty",
        "convert",
        "avgExecPrice",
        "unexecqty",
        "cursor_db",
        "execute",
        "avgExecPrice",
        "avgExecQty",
        "unexecqty",
        "execqty",
        "ordno",
        "shortcd",
        "conn_db",
        "commit",
        "conn_db",
        "close",
        "receive",
        "emit"
    ],
    "literals": [
        "'%.2f'",
        "'ZeroOMS.Thread.CM1'",
        "'init QtViewerEU1'",
        "'dict'",
        "'%H:%M:%S.%f'",
        "'ordno'",
        "'orgordno'",
        "'ordno_dict'",
        "'bnstp'",
        "'2'",
        "'buy'",
        "'bnstp'",
        "'1'",
        "'sell'",
        "'fnoIsuno'",
        "'execprc'",
        "'execqty'",
        "'unercqty'",
        "'?,'",
        "'buy'",
        "'B'",
        "'sell'",
        "'S'",
        "''",
        "'AutoTraderID'",
        "'OrderNo'",
        "'ExecNo'",
        "'TimeStamp'",
        "'ShortCD'",
        "'OrderPrice'",
        "'OrderQty'",
        "'BuySell'",
        "'ExecPrice'",
        "'ExecQty'"
    ],
    "variables": [
        "receive",
        "zmq_socket",
        "dbname",
        "flag",
        "redis_client",
        "logger",
        "nowtime",
        "strnowtime",
        "ordno",
        "orgordno",
        "autotrader_id",
        "execno",
        "buysell",
        "buysell",
        "buysell",
        "shortcd",
        "ordprice",
        "ordqty",
        "execprice",
        "execqty",
        "unexecqty",
        "orderitem",
        "wildcard",
        "wildcard",
        "buysell",
        "buysell",
        "buysell",
        "msg_dict",
        "msg_dict",
        "msg_dict",
        "msg_dict",
        "msg_dict",
        "msg_dict",
        "msg_dict",
        "msg_dict",
        "msg_dict",
        "msg_dict",
        "msg_dict",
        "conn_db",
        "cursor_db",
        "rows",
        "unexecqty",
        "avgExecPrice",
        "avgExecQty",
        "avgExecPrice",
        "avgExecQty",
        "unexecqty",
        "avgExecPrice",
        "avgExecQty",
        "avgExecPrice",
        "flag"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "print '-' * 20",
        "print 'szMessage',  subject.data['szMessage']",
        "print 'szMessageCode', subject.data['szMessageCode'],",
        "print subject.data",
        "self.logger.info(str(subject.data))",
        "or isuno",
        "ordprice = subject.data['ordprc']",
        "ordqty = subject.data['ordqty']",
        "self.emit(QtCore.SIGNAL(\"OnReceiveData (QString)\"),'SC1')"
    ],
    "docstrings": [
        "\"\"\"INSERT INTO OrderList(AutoTraderID,\n                                                           OrgOrdNo,Time,\n                                                           BuySell,\n                                                           ShortCD,\n                                                           Price,\n                                                           Qty,\n                                                           ExecPrice,\n                                                           ExecQty,\n                                                           UnExecQty)\n                                                VALUES(%s)\"\"\"",
        "\"\"\"Select ExecPrice,ExecQty,UnExecQty From OrderList\n                                    WHERE\n                                    OrdNo = ? and\n                                    ShortCD = ? and\n                                    ChkReq is not null\n                                    \"\"\"",
        "\"\"\"Update OrderList Set ExecPrice=?, ExecQty=?, UnExecQty=?\n                                        WHERE OrdNo=? and ShortCD = ? and (BuySell = 'buy' or BuySell = 'sell')\n                                        and ChkReq is not null\n                                        \"\"\""
    ],
    "functions": [
        "convert",
        "Update"
    ],
    "classes": [
        "QtViewerCM1"
    ]
}