{
    "identifiers": [
        "collections",
        "re",
        "cached_property",
        "threaded_cached_property",
        "yahoo_panoptes",
        "enrichment",
        "schema",
        "generic",
        "snmp",
        "yahoo_panoptes",
        "framework",
        "enrichment",
        "yahoo_panoptes",
        "plugins",
        "enrichment",
        "generic",
        "snmp",
        "plugin_enrichment_generic_snmp",
        "yahoo_panoptes",
        "framework",
        "utilities",
        "snmp",
        "mibs",
        "juniper",
        "POWER_MODULE_TYPES",
        "snmp",
        "PanoptesGenericSNMPMetricsEnrichmentGroup",
        "plugin_enrichment_generic_snmp",
        "PanoptesEnrichmentGenericSNMPPlugin",
        "JuniperPluginEnrichmentDeviceMetrics",
        "_plugin_conf",
        "_polling_execute_frequency",
        "juniper",
        "MibJuniper",
        "jnxOperating1MinLoadAvg",
        "_polling_execute_frequency",
        "juniper",
        "MibJuniper",
        "jnxOperating5MinLoadAvg",
        "_polling_execute_frequency",
        "juniper",
        "MibJuniper",
        "jnxOperating15MinLoadAvg",
        "juniper",
        "MibJuniper",
        "jnxOperating1MinLoadAvg",
        "threaded_cached_property",
        "_snmp_connection",
        "bulk_walk",
        "juniper",
        "MibJuniper",
        "jnxOperatingDescr",
        "oid",
        "varbind",
        "varbinds",
        "varbind",
        "index",
        "varbind",
        "value",
        "entities",
        "threaded_cached_property",
        "_snmp_connection",
        "bulk_walk",
        "juniper",
        "MibJuniper",
        "jnxOperatingTemp",
        "varbind",
        "varbinds",
        "varbind",
        "index",
        "_entity_names",
        "temp_id",
        "temps",
        "threaded_cached_property",
        "_snmp_connection",
        "bulk_walk",
        "_get_cpu_interval",
        "varbind",
        "varbinds",
        "varbind",
        "index",
        "_entity_names",
        "cpu_id",
        "cpu_id",
        "cpus",
        "threaded_cached_property",
        "_snmp_connection",
        "bulk_walk",
        "juniper",
        "MibJuniper",
        "jnxOperatingMemory",
        "varbind",
        "varbinds",
        "varbind",
        "index",
        "varbind",
        "value",
        "memory",
        "threaded_cached_property",
        "index",
        "name",
        "_entity_names",
        "items",
        "FAN_TYPES",
        "re",
        "match",
        "name",
        "name",
        "fans",
        "threaded_cached_property",
        "index",
        "name",
        "_entity_names",
        "items",
        "POWER_MODULE_TYPES",
        "re",
        "match",
        "name",
        "name",
        "power_modules",
        "index",
        "TYPE_MAP",
        "power_modules",
        "x",
        "x",
        "x",
        "_oids_map",
        "values",
        "_oids_map",
        "update",
        "types_mapping",
        "x",
        "_cpus",
        "x",
        "x",
        "_cpus",
        "x",
        "_cpus",
        "x",
        "x",
        "_cpus",
        "_get_cpu_interval",
        "juniper",
        "MibJuniper",
        "jnxOperatingBuffer",
        "x",
        "_memory",
        "x",
        "x",
        "_memory",
        "_memory",
        "x",
        "juniper",
        "MibJuniper",
        "jnxOperatingState",
        "x",
        "_fans",
        "x",
        "x",
        "_fans",
        "x",
        "_power_modules",
        "x",
        "x",
        "_power_modules",
        "x",
        "_power_modules",
        "x",
        "x",
        "_power_modules",
        "collections",
        "Counter",
        "_power_modules",
        "x",
        "x",
        "_power_modules",
        "juniper",
        "MibJuniper",
        "jnxOperatingTemp",
        "x",
        "_temp_sensors",
        "x",
        "x",
        "_temp_sensors",
        "_add_power_module_types_mapping",
        "len",
        "_power_modules",
        "_metrics_groups",
        "append",
        "len",
        "_fans",
        "_metrics_groups",
        "append",
        "len",
        "_fans",
        "property",
        "JuniperDeviceMetricsEnrichment",
        "_build_oids_map",
        "_build_metrics_groups_conf",
        "oids_map",
        "metrics_groups",
        "enrichment_group",
        "add_enrichment_set",
        "enrichment",
        "PanoptesEnrichmentSet",
        "device_fqdn",
        "enrichment_set",
        "e",
        "_logger",
        "error",
        "format",
        "enrichment_set",
        "device_fqdn",
        "repr",
        "e",
        "enrichment_group_set",
        "add_enrichment_group",
        "enrichment_group",
        "_logger",
        "debug",
        "format",
        "device_fqdn",
        "enrichment_group_set",
        "enrichment_group_set"
    ],
    "literals": [
        "r'Fan Tray \\d+ Fan \\d+'",
        "r'Fan Tray \\d+'",
        "r'FAN \\d+'",
        "r'(Top|Bottom)\\s(Rear|Middle|Front)\\sFan'",
        "r'PDM \\d{1,2}$'",
        "'PEM'",
        "r'PSM \\d{1,2}$'",
        "r'Power Supply \\d$'",
        "r'Power Supply: Power Supply \\d+ @'",
        "'PDM'",
        "'PEM'",
        "'PSM'",
        "'PEM'",
        "'PEM'",
        "'main'",
        "'polling_frequency'",
        "'sensor_name'",
        "'cpu_name'",
        "'cpu_no'",
        "'Module '",
        "'memory_total'",
        "'name'",
        "'name'",
        "'type'",
        "\"power_module_types\"",
        "\"values\"",
        "\"power_module_types\"",
        "\"values\"",
        "\"cpu_name\"",
        "\"method\"",
        "\"static\"",
        "\"values\"",
        "'cpu_name'",
        "\"cpu_no\"",
        "\"method\"",
        "\"static\"",
        "\"values\"",
        "'cpu_no'",
        "\"cpu_util\"",
        "\"method\"",
        "\"bulk_walk\"",
        "\"oid\"",
        "\"memory_used\"",
        "\"method\"",
        "\"bulk_walk\"",
        "\"oid\"",
        "\"memory_total\"",
        "\"method\"",
        "\"static\"",
        "\"values\"",
        "'memory_total'",
        "'memory_total'",
        "\"oper_status\"",
        "\"method\"",
        "\"bulk_walk\"",
        "\"oid\"",
        "\"fans\"",
        "\"method\"",
        "\"static\"",
        "\"values\"",
        "'name'",
        "\"power_modules\"",
        "\"method\"",
        "\"static\"",
        "\"values\"",
        "'name'",
        "\"power_module_types\"",
        "\"method\"",
        "\"static\"",
        "\"values\"",
        "'type'",
        "\"power_units_total\"",
        "\"method\"",
        "\"static\"",
        "\"values\"",
        "'type'",
        "\"temp_sensor_values\"",
        "\"method\"",
        "\"bulk_walk\"",
        "\"oid\"",
        "\"temp_sensor_name\"",
        "\"method\"",
        "\"static\"",
        "\"values\"",
        "'sensor_name'",
        "\"group_name\"",
        "\"environment\"",
        "\"dimensions\"",
        "\"sensor\"",
        "\"temp_sensor_name.$index\"",
        "\"metrics\"",
        "\"temperature_fahrenheit\"",
        "\"metric_type\"",
        "\"gauge\"",
        "\"type\"",
        "\"float\"",
        "\"transform\"",
        "\"lambda x: round((x * 1.8) + 32, 2) if x != 0 else 0.0\"",
        "\"value\"",
        "\"temp_sensor_values.$index\"",
        "\"group_name\"",
        "\"cpu\"",
        "\"dimensions\"",
        "\"cpu_name\"",
        "\"cpu_name.$index\"",
        "\"cpu_no\"",
        "\"cpu_no.$index\"",
        "\"cpu_type\"",
        "\"'data' if 'Routing Engine' in cpu_name.$index else 'ctrl'\"",
        "\"metrics\"",
        "\"cpu_utilization\"",
        "\"metric_type\"",
        "\"gauge\"",
        "\"value\"",
        "\"cpu_util.$index\"",
        "\"group_name\"",
        "\"memory\"",
        "\"dimensions\"",
        "\"memory_type\"",
        "\"cpu_name.$index\"",
        "\"metrics\"",
        "\"memory_used\"",
        "\"metric_type\"",
        "\"gauge\"",
        "\"indices_from\"",
        "\"memory_total\"",
        "\"value\"",
        "\"float(memory_used.$index) / 100.0 * memory_total.$index\"",
        "\"memory_total\"",
        "\"metric_type\"",
        "\"gauge\"",
        "\"value\"",
        "\"memory_total.$index\"",
        "\"group_name\"",
        "\"environment\"",
        "\"dimensions\"",
        "\"power_module_type\"",
        "\"power_module_types.$index\"",
        "\"metrics\"",
        "\"power_units_on\"",
        "\"metric_type\"",
        "\"gauge\"",
        "\"indices_from\"",
        "\"power_units_total\"",
        "\"value\"",
        "\"len([(x,y) for (x,y) in oper_status.items() if x in \"",
        "\"power_module_types and y not in \"",
        "\"['6'] and power_module_types[x] == $index])\"",
        "\"power_units_total\"",
        "\"metric_type\"",
        "\"gauge\"",
        "\"value\"",
        "\"power_units_total.$index\"",
        "\"group_name\"",
        "\"environment\"",
        "\"dimensions\"",
        "\"metrics\"",
        "\"fans_ok\"",
        "\"metric_type\"",
        "\"gauge\"",
        "\"value\"",
        "\"len([(x,y) for (x,y) in oper_status.items() if x in fans and y not in ['6']])\"",
        "\"fans_total\"",
        "\"oids\"",
        "\"metrics_groups\"",
        "'Error while adding enrichment set {} to enrichment group for the device {}: {}'",
        "'Metrics enrichment for device {}: {}'"
    ],
    "variables": [
        "FAN_TYPES",
        "POWER_MODULE_TYPES",
        "TYPE_MAP",
        "_polling_execute_frequency",
        "entities",
        "varbinds",
        "entities",
        "temps",
        "varbinds",
        "temp_id",
        "temps",
        "temp_id",
        "cpus",
        "varbinds",
        "cpu_id",
        "cpus",
        "cpu_id",
        "memory",
        "varbinds",
        "memory_id",
        "memory",
        "memory_id",
        "fans",
        "fans",
        "index",
        "power_modules",
        "power_modules",
        "index",
        "types_mapping",
        "_oids_map",
        "_metrics_groups",
        "enrichment_set"
    ],
    "comments": [
        "n.b. For QFX1000X devices, will report % fan_trays_ok, which is <= to fans_ok",
        "TODO Need to divide by number of cores?",
        "https://kb.juniper.net/InfoCenter/index?page=content&id=KB31764&cat=MX960_1&actp=LIST",
        "grab the last element of the index to use as the cpu_id",
        "TODO trim off prepending OID?",
        "reported in megabytes"
    ],
    "docstrings": [
        "\"\"\"\n        Checks the self._execute_frequency to figure out the oid to use for cpu_utilization\n        Returns:\n            string: the oid to use.\n        \"\"\"",
        "\"\"\"\n        Returns:\n             dict: temperature stats for the system\n        \"\"\"",
        "\"\"\"\n        cpu will always be a Gauge32\n        Returns:\n            dict: cpus in the system\n        \"\"\"",
        "\"\"\"\n        Returns:\n             dict: memory stats for the system\n        \"\"\"",
        "\"\"\"\n        Reports fan status for Junipers.\n        Returns:\n            dict: fan metrics\n        \"\"\"",
        "\"\"\"\n        Reports power entry module stats for Juniper devices.\n        Returns:\n            dict: power_supplies\n        \"\"\""
    ],
    "functions": [
        "_get_cpu_interval",
        "_entity_names",
        "_temp_sensors",
        "_cpus",
        "_memory",
        "_fans",
        "_power_modules",
        "_add_power_module_types_mapping",
        "_build_oids_map",
        "_build_metrics_groups_conf",
        "metrics_enrichment_class",
        "get_results"
    ],
    "classes": [
        "JuniperDeviceMetricsEnrichment",
        "JuniperPluginEnrichmentDeviceMetrics"
    ]
}