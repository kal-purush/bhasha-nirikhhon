{
    "identifiers": [
        "com",
        "api",
        "cep",
        "org",
        "mockito",
        "Mockito",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "com",
        "api",
        "cep",
        "entity",
        "EnderecoViaCep",
        "com",
        "api",
        "cep",
        "service",
        "ApiViaCepService",
        "com",
        "api",
        "cep",
        "service",
        "EnderecoViaCepService",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "junit",
        "jupiter",
        "api",
        "extension",
        "ExtendWith",
        "org",
        "mockito",
        "InjectMocks",
        "org",
        "mockito",
        "Mock",
        "org",
        "mockito",
        "junit",
        "jupiter",
        "MockitoExtension",
        "reactor",
        "core",
        "publisher",
        "Mono",
        "ExtendWith",
        "Mock",
        "apiViaCepService",
        "InjectMocks",
        "enderecoViaCepService",
        "Test",
        "validCep",
        "endereco",
        "when",
        "apiViaCepService",
        "buscaCepApi",
        "validCep",
        "thenReturn",
        "Mono",
        "just",
        "endereco",
        "result",
        "enderecoViaCepService",
        "findByCep",
        "validCep",
        "assertNotNull",
        "result",
        "assertTrue",
        "result",
        "block",
        "assertEquals",
        "result",
        "block",
        "getLogradouro",
        "verify",
        "apiViaCepService",
        "times",
        "buscaCepApi",
        "validCep",
        "Test",
        "invalidCep",
        "result",
        "enderecoViaCepService",
        "findByCep",
        "invalidCep",
        "assertThrows",
        "result",
        "block",
        "Test",
        "validCep",
        "isValid",
        "EnderecoViaCepService",
        "isValidCEP",
        "validCep",
        "assertTrue",
        "isValid",
        "Test",
        "invalidCep",
        "isValid",
        "EnderecoViaCepService",
        "isValidCEP",
        "invalidCep",
        "assertFalse",
        "isValid"
    ],
    "literals": [
        "\"12345-678\"",
        "\"Rua ABC\"",
        "\"123\"",
        "\"Bairro XYZ\"",
        "\"Cidade\"",
        "\"Estado\"",
        "\"/json/\"",
        "\"Rua ABC\"",
        "\"/json/\"",
        "\"12345678\"",
        "\"12345-678\"",
        "\"12345678\""
    ],
    "variables": [
        "apiViaCepService",
        "enderecoViaCepService"
    ],
    "comments": [
        "Arrange",
        "Act",
        "Assert",
        "Arrange",
        "Formato inválido",
        "Não há necessidade de mockar a resposta, pois esperamos um erro",
        "Act",
        "Assert",
        "Espera uma IllegalArgumentException ser lançada",
        "Arrange",
        "Act",
        "Assert",
        "Arrange",
        "Act",
        "Assert"
    ],
    "docstrings": [],
    "functions": [
        "testFindByCep_ValidCep_ShouldReturnEndereco",
        "testFindByCep_InvalidCep_ShouldReturnError",
        "testIsValidCEP_ShouldReturnTrueForValidCep",
        "testIsValidCEP_ShouldReturnFalseForInvalidCep"
    ],
    "classes": [
        "EnderecoViaCepServiceTest"
    ]
}