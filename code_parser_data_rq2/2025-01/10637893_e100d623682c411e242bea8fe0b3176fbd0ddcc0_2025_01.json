{
    "identifiers": [
        "org",
        "apache",
        "commons",
        "csv",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "assertEquals",
        "java",
        "io",
        "java",
        "io",
        "InputStreamReader",
        "java",
        "io",
        "Reader",
        "java",
        "io",
        "UnsupportedEncodingException",
        "java",
        "nio",
        "charset",
        "StandardCharsets",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "nio",
        "file",
        "Path",
        "org",
        "apache",
        "commons",
        "io",
        "input",
        "BOMInputStream",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "junit",
        "jupiter",
        "api",
        "io",
        "TempDir",
        "TempDir",
        "tempDir",
        "path",
        "BOMInputStream",
        "builder",
        "setPath",
        "path",
        "get",
        "StandardCharsets",
        "UTF_8",
        "Test",
        "path",
        "tempDir",
        "resolve",
        "Files",
        "copy",
        "Utils",
        "createUtf8Input",
        "getBytes",
        "StandardCharsets",
        "UTF_8",
        "path",
        "reader",
        "BOMInputStream",
        "builder",
        "setPath",
        "path",
        "get",
        "parser",
        "CSVFormat",
        "EXCEL",
        "builder",
        "setHeader",
        "get",
        "parse",
        "reader",
        "record",
        "parser",
        "record",
        "get",
        "assertEquals",
        "Test",
        "path",
        "tempDir",
        "resolve",
        "Files",
        "copy",
        "Utils",
        "createUtf8Input",
        "getBytes",
        "StandardCharsets",
        "UTF_8",
        "path",
        "reader",
        "newReader",
        "path",
        "parser",
        "CSVFormat",
        "EXCEL",
        "builder",
        "setHeader",
        "get",
        "parse",
        "reader",
        "record",
        "parser",
        "record",
        "get",
        "assertEquals"
    ],
    "literals": [
        "\"test1.csv\"",
        "\"ColumnA, ColumnB, ColumnC\\r\\nA, B, C\\r\\n\"",
        "\"UTF-8\"",
        "\"ColumnA\"",
        "\"A\"",
        "\"test2.csv\"",
        "\"ColumnA, ColumnB, ColumnC\\r\\nA, B, C\\r\\n\"",
        "\"ColumnA\"",
        "\"A\""
    ],
    "variables": [
        "tempDir"
    ],
    "comments": [
        "@formatter:off",
        "@formatter:off",
        "@formatter:off",
        "@formatter:off"
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.",
        "* Tests for the user guide.",
        "* Creates a reader capable of handling BOMs.\n     *\n     * @param path The path to read.\n     * @return a new InputStreamReader for UTF-8 bytes.\n     * @throws IOException if an I/O error occurs."
    ],
    "functions": [
        "InputStreamReader",
        "newReader",
        "testBomFull",
        "testBomUtil"
    ],
    "classes": [
        "UserGuideTest"
    ]
}