{
    "identifiers": [
        "NextResponse",
        "OpenAI",
        "OpenAI",
        "process",
        "query",
        "budget",
        "budget",
        "maxPrice",
        "maxPrice",
        "maxPrice",
        "maxPrice",
        "encodeURIComponent",
        "query",
        "query",
        "maxPrice",
        "query",
        "searchQuery",
        "maxPrice",
        "error",
        "error",
        "req",
        "req",
        "image",
        "NextResponse",
        "image",
        "budget",
        "openai",
        "stylePrompt",
        "base64Image",
        "response",
        "analysisText",
        "analysisText",
        "analysisText",
        "analysis",
        "search",
        "searchAmazonProducts",
        "search",
        "budget",
        "productPromises",
        "p",
        "p",
        "products",
        "analysis",
        "analysis",
        "analysis",
        "analysis",
        "pattern",
        "pattern",
        "analysis",
        "NextResponse",
        "error",
        "error",
        "NextResponse"
    ],
    "literals": [
        "'next/server'",
        "'openai'",
        "string",
        "string",
        "'budget'",
        "'medium'",
        "'luxury'",
        "${query} matching your style",
        "\"Based on your Instagram inspiration\"",
        "https://www.amazon.com/s?k=${searchQuery}&rh=p_36%3A-${maxPrice}00",
        "'Error searching Amazon:'",
        "'No image provided'",
        "','",
        "Analyze this Instagram fashion image in detail and provide a structured analysis in the following JSON format:\n{\n  \"overall_aesthetic\": \"Brief description of the overall style aesthetic\",\n  \"key_pieces\": [\n    {\n      \"item\": \"Specific item name\",\n      \"description\": \"Detailed description including cut, material, fit\",\n      \"style_elements\": \"Key style elements that make it stand out\"\n    }\n  ],\n  \"color_palette\": {\n    \"primary\": [\"color1\", \"color2\"],\n    \"accent\": [\"color3\", \"color4\"]\n  },\n  \"styling_patterns\": [\n    \"Pattern 1: e.g., layering technique\",\n    \"Pattern 2: e.g., color combination principle\"\n  ],\n  \"recommended_searches\": [\n    \"Specific search term for similar items\"\n  ]\n}\n\nFocus on identifying specific, searchable items and their unique characteristics. Consider the budget level: ${budget}",
        "\"gpt-4o\"",
        "\"user\"",
        "\"text\"",
        "\"image_url\"",
        "data:image/jpeg;base64,${base64Image}",
        "\"{}\"",
        "''",
        "''",
        "\"Core Style Elements\"",
        "\"Styling Tips\"",
        "\"Styling Tip\"",
        "\"Based on analyzed patterns\"",
        "\"Styling Techniques\"",
        "'Error analyzing style:'",
        "'Failed to analyze style'"
    ],
    "variables": [
        "openai",
        "maxPrice",
        "searchQuery",
        "base64Image",
        "stylePrompt",
        "response",
        "analysisText",
        "analysis",
        "productPromises",
        "products",
        "recommendations"
    ],
    "comments": [
        "Initialize OpenAI client",
        "Function to search Amazon for products",
        "Convert budget to price range",
        "For now, we'll return a formatted search URL",
        "In production, you would integrate with Amazon's Product Advertising API",
        "Remove the data URL prefix to get just the base64 image data",
        "Improved prompt for detailed style analysis",
        "Analyze the image using GPT-4o",
        "Parse the AI response",
        "Clean up the response text by removing markdown formatting",
        "Parse the cleaned JSON",
        "Search for products based on the analysis",
        "Transform the analysis into our recommendation format"
    ],
    "docstrings": [],
    "functions": [
        "searchAmazonProducts",
        "POST"
    ],
    "classes": []
}