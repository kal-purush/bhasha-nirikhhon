{
    "identifiers": [
        "vscode",
        "axios",
        "exec",
        "promisify",
        "promisify",
        "exec",
        "axios",
        "execAsync",
        "MODEL_NAME",
        "error",
        "vscode",
        "error",
        "prompt",
        "panel",
        "vscode",
        "axios",
        "OLLAMA_API_URL",
        "prompt",
        "response",
        "chunk",
        "chunk",
        "chunkStr",
        "fullResponse",
        "parsed",
        "panel",
        "fullResponse",
        "e",
        "e",
        "fullResponse",
        "error",
        "error",
        "error",
        "context",
        "vscode",
        "vscode",
        "startOllama",
        "vscode",
        "vscode",
        "panel",
        "getWebviewContent",
        "panel",
        "message",
        "message",
        "queryOllama",
        "message",
        "panel",
        "error",
        "vscode",
        "error",
        "error",
        "vscode",
        "context",
        "disposable"
    ],
    "literals": [
        "'vscode'",
        "'axios'",
        "'child_process'",
        "'util'",
        "'http://localhost:11434/api/generate'",
        "'deepseek-r1:1.5b'",
        "'http://localhost:11434/api/tags'",
        "ollama run ${MODEL_NAME}",
        "'Failed to start Ollama. Please make sure it is installed.'",
        "string",
        "string",
        "'deepseek-r1:1.5b'",
        "'stream'",
        "''",
        "'data'",
        "'response'",
        "'Error parsing chunk:'",
        "'Error querying Ollama:'",
        "<!DOCTYPE html>\n        <html>\n        <head>\n            <meta charset=\"UTF-8\">\n            <style>\n\t\t\t\thtml, body { \n                    margin: 0;\n                    padding: 0;\n                    height: 100vh;\n                    overflow: hidden; /* Prevent outer scrolling */\n                }\n                body { \n                    padding: 20px; \n                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Inter', 'Helvetica Neue', \n                                sans-serif;\n                    max-width: 900px;\n                    margin: 0 auto;\n                    display: flex;\n                    flex-direction: column;\n                    height: calc(100vh - 40px); /* Account for padding */\n                    line-height: 1.5;\n                    box-sizing: border-box;\n                }\n                #chat-container {\n                    flex: 1;\n                    overflow-y: auto;\n                    margin-bottom: 24px;\n                    padding: 16px;\n                    background: var(--vscode-editor-background);\n                    border: 1px solid var(--vscode-widget-border);\n                    border-radius: 12px;\n                    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n                }\n                .message {\n    padding: 12px 16px;\n    border-radius: 12px;\n    max-width: 85%;\n    font-size: 14px;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n}\n                .message-container {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n    width: 100%;\n}\n                .user-message {\n                    background: var(--vscode-button-background);\n                    color: var(--vscode-button-foreground);\n                    align-self: flex-end;\n                    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n                }\n                .assistant-message {\n                    background: var(--vscode-editor-inactiveSelectionBackground);\n                    color: var(--vscode-editor-foreground);\n                    align-self: flex-start;\n                    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n                }\n\t\t\t\t.assistant-message-container {\n                    align-items: flex-start;\n                }\n                #input-container {\n                    display: flex;\n                    gap: 12px;\n                    background: var(--vscode-editor-background);\n                    border-radius: 12px;\n                    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n                }\n                #prompt-input { \n                    flex: 1;\n                    padding: 12px 16px;\n                    border: 1px solid var(--vscode-input-border);\n                    background: var(--vscode-input-background);\n                    color: var(--vscode-input-foreground);\n                    border-radius: 8px;\n                    resize: none;\n                    height: 50px;\n                    font-family: inherit;\n                    font-size: 14px;\n                    line-height: 1.5;\n                    transition: border-color 0.2s ease;\n                }\n                #prompt-input:focus {\n                    outline: none;\n                    border-color: var(--vscode-focusBorder);\n                }\n                #submit-button { \n                    padding: 12px 24px;\n                    background: var(--vscode-button-background);\n                    color: var(--vscode-button-foreground);\n                    border: none;\n                    border-radius: 8px;\n                    cursor: pointer;\n                    font-size: 14px;\n                    font-weight: 500;\n                    transition: background-color 0.2s ease;\n                    display: flex;\n                    align-items: center;\n                    gap: 8px;\n                }\n                #submit-button:hover {\n                    background: var(--vscode-button-hoverBackground);\n                }\n                #submit-button:active {\n                    transform: translateY(1px);\n                }\n                .message-time {\n\t\t\t\t\tfont-size: 11px;\n\t\t\t\t\tcolor: var(--vscode-descriptionForeground);\n\t\t\t\t\tmargin-top: 4px;\n\t\t\t\t\tpadding: 0 4px;\n\t\t\t\t}\n                /* Scrollbar styling */\n                ::-webkit-scrollbar {\n                    width: 4px;\n                }\n                ::-webkit-scrollbar-track {\n                    background: transparent; /* Hidden track */\n                    margin: 4px 0;\n                    border-radius: 4px;\n                }\n                ::-webkit-scrollbar-thumb {\n                    background: var(--vscode-scrollbarSlider-background);\n                    border-radius: 4px;\n                    transition: background 0.2s ease;\n                }\n\t\t\t\t::-webkit-scrollbar-thumb:hover {\n                    background: var(--vscode-scrollbarSlider-hoverBackground);\n                }\n            </style>\n        </head>\n        <body>\n            <div id=\"chat-container\"></div>\n            <div id=\"input-container\">\n                <textarea \n                    id=\"prompt-input\" \n                    placeholder=\"Type your message here...\"\n                    rows=\"1\"\n                ></textarea>\n                <button id=\"submit-button\">\n                    <span>Send</span>\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                        <path d=\"M22 2L11 13M22 2l-7 20-4-9-9-4 20-7z\"/>\n                    </svg>\n                </button>\n            </div>\n            <script>\n                const vscode = acquireVsCodeApi();\n                const chatContainer = document.getElementById('chat-container');\n                const promptInput = document.getElementById('prompt-input');\n                const submitButton = document.getElementById('submit-button');\n\n                function getFormattedTime() {\n                    return new Date().toLocaleTimeString([], { \n                        hour: '2-digit', \n                        minute: '2-digit' \n                    });\n                }\n\n                function addMessage(content, isUser = false) {\n    const messageContainer = document.createElement('div');\n    messageContainer.className = \\`message-container \\${isUser ? 'user-message-container' : 'assistant-message-container'}\\`;\n    \n    const messageWrapper = document.createElement('div');\n    messageWrapper.style.cssText = \\`display: flex; flex-direction: column; \\${isUser ? 'align-items: flex-end;' : 'align-items: flex-start;'}\\`;\n\n    const messageDiv = document.createElement('div');\n    messageDiv.className = \\`message \\${isUser ? 'user-message' : 'assistant-message'}\\`;\n    messageDiv.textContent = content;\n\n    const timeDiv = document.createElement('div');\n    timeDiv.className = 'message-time';\n    timeDiv.textContent = getFormattedTime();\n\n    messageWrapper.appendChild(messageDiv);\n    messageWrapper.appendChild(timeDiv);\n    messageContainer.appendChild(messageWrapper);\n    chatContainer.appendChild(messageContainer);\n    chatContainer.scrollTop = chatContainer.scrollHeight;\n}\n                \n                submitButton.addEventListener('click', () => {\n                    const prompt = promptInput.value.trim();\n                    if (prompt) {\n                        addMessage(prompt, true);\n                        vscode.postMessage({ type: 'prompt', content: prompt });\n                        promptInput.value = '';\n                    }\n                });\n\n                promptInput.addEventListener('keydown', (e) => {\n                    if (e.key === 'Enter' && !e.shiftKey) {\n                        e.preventDefault();\n                        submitButton.click();\n                    }\n                });\n\n                window.addEventListener('message', event => {\n                    const message = event.data;\n                    if (message.type === 'response') {\n                        const lastMessage = chatContainer.lastElementChild;\n                        if (lastMessage?.querySelector('.assistant-message')) {\n                            lastMessage.remove();\n                        }\n                        addMessage(message.content);\n                    }\n                });\n\n                // Auto-resize textarea\n                promptInput.addEventListener('input', () => {\n                    promptInput.style.height = 'auto';\n                    promptInput.style.height = Math.min(promptInput.scrollHeight, 150) + 'px';\n                });\n            </script>\n        </body>\n        </html>",
        "'seeker.query'",
        "'seekerChat'",
        "'Seeker Chat'",
        "'prompt'",
        "'Failed to query DeepSeek. Make sure Ollama is running.'",
        "'Failed to start Ollama:'",
        "'Failed to initialize Seeker extension.'"
    ],
    "variables": [
        "execAsync",
        "OLLAMA_API_URL",
        "MODEL_NAME",
        "response",
        "fullResponse",
        "chunkStr",
        "parsed",
        "disposable",
        "panel"
    ],
    "comments": [
        "'You can change this to any model you want to use'",
        "Check if Ollama is already running",
        "Start Ollama with the DeepSeek model",
        "html",
        "Try to start Ollama when the extension is activated"
    ],
    "docstrings": [],
    "functions": [
        "startOllama",
        "queryOllama",
        "getWebviewContent",
        "activate",
        "deactivate"
    ],
    "classes": []
}