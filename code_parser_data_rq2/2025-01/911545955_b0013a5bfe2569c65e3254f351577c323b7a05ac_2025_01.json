{
    "identifiers": [
        "sys",
        "flask",
        "Flask",
        "service",
        "config",
        "service",
        "common",
        "log_handlers",
        "Flask",
        "app",
        "config",
        "from_object",
        "config",
        "service",
        "routes",
        "models",
        "service",
        "common",
        "error_handlers",
        "cli_commands",
        "log_handlers",
        "init_logging",
        "app",
        "app",
        "logger",
        "info",
        "app",
        "logger",
        "info",
        "center",
        "app",
        "logger",
        "info",
        "models",
        "init_db",
        "app",
        "error",
        "app",
        "logger",
        "critical",
        "error",
        "sys",
        "exit",
        "app",
        "logger",
        "info"
    ],
    "literals": [
        "\"gunicorn.error\"",
        "\"*\"",
        "\"  A C C O U N T   S E R V I C E   R U N N I N G  \"",
        "\"*\"",
        "\"*\"",
        "\"%s: Cannot continue\"",
        "\"Service initialized!\""
    ],
    "variables": [
        "app"
    ],
    "comments": [
        "Create Flask application",
        "Import the routes After the Flask app is created",
        "pylint: disable=wrong-import-position, cyclic-import, wrong-import-order",
        "noqa: F401 E402",
        "pylint: disable=wrong-import-position",
        "noqa: F401 E402",
        "Set up logging for production",
        "make our database tables",
        "pylint: disable=broad-except",
        "gunicorn requires exit code 4 to stop spawning workers when they die"
    ],
    "docstrings": [
        "\"\"\"\nPackage: service\nPackage for the application models and service routes\nThis module creates and configures the Flask app and sets up the logging\nand SQL database\n\"\"\""
    ],
    "functions": [],
    "classes": []
}