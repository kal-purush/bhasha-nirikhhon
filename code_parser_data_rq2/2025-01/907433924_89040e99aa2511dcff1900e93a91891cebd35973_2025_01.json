{
    "identifiers": [
        "com",
        "example",
        "volunteer_platform",
        "controller",
        "com",
        "example",
        "volunteer_platform",
        "dto",
        "SkillDto",
        "com",
        "example",
        "volunteer_platform",
        "model",
        "Skill",
        "com",
        "example",
        "volunteer_platform",
        "service",
        "SkillService",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "http",
        "HttpStatus",
        "org",
        "springframework",
        "http",
        "ResponseEntity",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "java",
        "util",
        "RestController",
        "RequestMapping",
        "Autowired",
        "skillService",
        "GetMapping",
        "skills",
        "skillService",
        "getAllSkills",
        "skills",
        "isEmpty",
        "HttpStatus",
        "NO_CONTENT",
        "skills",
        "HttpStatus",
        "OK",
        "GetMapping",
        "PathVariable",
        "name",
        "skill",
        "skillService",
        "findByName",
        "name",
        "orElse",
        "skill",
        "skill",
        "HttpStatus",
        "OK",
        "newSkillDto",
        "name",
        "saveSkill",
        "newSkillDto",
        "PostMapping",
        "RequestBody",
        "skillDto",
        "skill",
        "Skill",
        "builder",
        "name",
        "skillDto",
        "getName",
        "build",
        "skillService",
        "saveSkill",
        "skill",
        "skill",
        "HttpStatus",
        "CREATED",
        "e",
        "HttpStatus",
        "BAD_REQUEST"
    ],
    "literals": [
        "\"/skills\"",
        "\"/name/{name}\""
    ],
    "variables": [
        "skillService"
    ],
    "comments": [
        "GET all skills",
        "GET Skill by name",
        "Create new skill using SkillDto",
        "Call saveSkill method",
        "POST or save a skill"
    ],
    "docstrings": [],
    "functions": [
        "getAllSkills",
        "getSkillByName",
        "saveSkill"
    ],
    "classes": [
        "SkillController"
    ]
}