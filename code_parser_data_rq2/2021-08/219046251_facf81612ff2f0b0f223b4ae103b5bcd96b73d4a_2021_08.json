{
    "identifiers": [
        "npath",
        "spawn",
        "fs",
        "Settings",
        "DesktopJob",
        "FFProbeResults",
        "ConversionArgs",
        "DesktopJobUpdater",
        "CheckMediaResults",
        "FFProbeFrameResults",
        "observeChild",
        "ViameConstants",
        "common",
        "jobFileEchoMiddleware",
        "spawnResult",
        "getTranscodedMultiCamType",
        "viameConstants",
        "file",
        "viameConstants",
        "viameConstants",
        "ffprobePath",
        "file",
        "spawnResult",
        "command",
        "viameConstants",
        "result",
        "result",
        "result",
        "result",
        "returnText",
        "ffprobeJSON",
        "ffprobeJSON",
        "i",
        "ffprobeJSON",
        "i",
        "ffprobeJSON",
        "i",
        "frame",
        "previousTimestamp",
        "frame",
        "previousTimestamp",
        "frame",
        "viameConstants",
        "file",
        "workDir",
        "viameConstants",
        "npath",
        "workDir",
        "viameConstants",
        "ffmpegPath",
        "file",
        "alignedFile",
        "spawnResult",
        "command",
        "viameConstants",
        "result",
        "result",
        "result",
        "alignedFile",
        "viameConstants",
        "file",
        "workDir",
        "checkFrameMisalignment",
        "viameConstants",
        "file",
        "file",
        "realignVideoAndAudio",
        "viameConstants",
        "file",
        "workDir",
        "viameConstants",
        "file",
        "viameConstants",
        "viameConstants",
        "ffprobePath",
        "file",
        "spawnResult",
        "command",
        "viameConstants",
        "result",
        "result",
        "result",
        "result",
        "returnText",
        "ffprobeJSON",
        "ffprobeJSON",
        "ffprobeJSON",
        "el",
        "el",
        "videoStream",
        "videoStream",
        "videoStream",
        "originalFpsString",
        "v",
        "v",
        "dividend",
        "divisor",
        "videoStream",
        "el",
        "el",
        "el",
        "el",
        "videoStream",
        "videoStream",
        "checkFrameMisalignment",
        "viameConstants",
        "file",
        "websafe",
        "misAligned",
        "file",
        "settings",
        "args",
        "updater",
        "viameConstants",
        "mediaIndex",
        "key",
        "baseWorkDir",
        "baseWorkDir",
        "common",
        "settings",
        "args",
        "npath",
        "jobWorkDir",
        "args",
        "mediaIndex",
        "args",
        "multiType",
        "getTranscodedMultiCamType",
        "args",
        "mediaIndex",
        "args",
        "commands",
        "viameConstants",
        "viameConstants",
        "args",
        "mediaIndex",
        "args",
        "multiType",
        "mediaIndex",
        "args",
        "commands",
        "viameConstants",
        "commands",
        "args",
        "mediaIndex",
        "observeChild",
        "spawn",
        "commands",
        "viameConstants",
        "job",
        "jobWorkDir",
        "key",
        "jobKey",
        "key",
        "jobKey",
        "job",
        "commands",
        "args",
        "jobWorkDir",
        "args",
        "job",
        "fs",
        "npath",
        "jobWorkDir",
        "DiveJobManifestName",
        "jobBase",
        "job",
        "jobFileEchoMiddleware",
        "jobBase",
        "updater",
        "joblog",
        "job",
        "jobFileEchoMiddleware",
        "jobBase",
        "updater",
        "joblog",
        "job",
        "code",
        "code",
        "updater",
        "jobBase",
        "code",
        "args",
        "multiType",
        "checkAndFixFrameAlignment",
        "viameConstants",
        "args",
        "mediaIndex",
        "jobWorkDir",
        "updatedFile",
        "args",
        "mediaIndex",
        "fs",
        "updatedFile",
        "args",
        "mediaIndex",
        "mediaIndex",
        "args",
        "common",
        "settings",
        "args",
        "jobKey",
        "updater",
        "jobBase",
        "code",
        "updater",
        "jobBase",
        "mediaIndex",
        "args",
        "convertMedia",
        "settings",
        "args",
        "updater",
        "viameConstants",
        "mediaIndex",
        "jobKey",
        "jobWorkDir",
        "jobBase",
        "checkMedia",
        "convertMedia"
    ],
    "literals": [
        "'path'",
        "'child_process'",
        "'fs-extra'",
        "'platform/desktop/constants'",
        "'platform/desktop/backend/native/processManager'",
        "'platform/desktop/backend/native/viame'",
        "'./common'",
        "'./utils'",
        "'./multiCamUtils'",
        "'dive_job_manifest.json'",
        "string",
        "${viameConstants.ffmpeg.path.replace('ffmpeg', 'ffprobe')}",
        "'ffmpeg'",
        "'ffprobe'",
        "\"${ffprobePath}\"",
        "\"${file}\"",
        "'-hide_banner'",
        "'-read_intervals'",
        "'%+5'",
        "'-show_entries'",
        "'frame=best_effort_timestamp_time'",
        "'-print_format'",
        "'json'",
        "'-v'",
        "'quiet'",
        "' '",
        "'Error using ffprobe'",
        "string",
        "string",
        "string",
        "'temprealign.mp4'",
        "\"${ffmpegPath}\"",
        "'-i'",
        "\"${file}\"",
        "'-ss'",
        "'0'",
        "'-c:v'",
        "'libx264'",
        "'-preset'",
        "'slow'",
        "'-crf'",
        "'18'",
        "'-c:a'",
        "'copy'",
        "\"${alignedFile}\"",
        "'-v'",
        "'quiet'",
        "' '",
        "'Error using ffmepg'",
        "string",
        "string",
        "string",
        "string",
        "${viameConstants.ffmpeg.path.replace('ffmpeg', 'ffprobe')}",
        "'ffmpeg'",
        "'ffprobe'",
        "\"${ffprobePath}\"",
        "'-print_format'",
        "'json'",
        "'-v'",
        "'quiet'",
        "'-show_format'",
        "'-show_streams'",
        "\"${file}\"",
        "' '",
        "'Error using ffprobe'",
        "'video'",
        "'FFProbe found that video stream has no avg_frame_rate'",
        "'/'",
        "'h264'",
        "'1:1'",
        "FFProbe did not return a valid value for ${file}",
        "''",
        "''",
        "'conversion'",
        "'runlog.txt'",
        "''",
        "'multi'",
        "\"${viameConstants.ffmpeg.path}\"",
        "-i \"${args.mediaList[mediaIndex][0]}\"",
        "'video'",
        "'video'",
        "\"${args.mediaList[mediaIndex][1]}\"",
        "' '",
        "convert_${job.pid}_${jobWorkDir}",
        "' '",
        "converting ${args.meta.name}",
        "'conversion'",
        "'data'",
        "'data'",
        "'exit'",
        "'Error with running conversion'",
        "''",
        "'video'",
        "'video'",
        "''",
        "Conversion ${mediaIndex + 1} of ${args.mediaList.length} Complete"
    ],
    "variables": [
        "DiveJobManifestName",
        "ffprobePath",
        "command",
        "result",
        "returnText",
        "ffprobeJSON",
        "previousTimestamp",
        "i",
        "frame",
        "ffmpegPath",
        "alignedFile",
        "command",
        "result",
        "ffprobePath",
        "command",
        "result",
        "returnText",
        "ffprobeJSON",
        "videoStream",
        "originalFpsString",
        "dividend",
        "divisor",
        "originalFps",
        "websafe",
        "videoDimensions",
        "misAligned",
        "jobWorkDir",
        "joblog",
        "commands",
        "multiType",
        "job",
        "jobKey",
        "jobBase",
        "updatedFile"
    ],
    "comments": [
        "Image conversion needs to utilize the baseWorkDir, init or vids create their own directory",
        "We need to copy over and replace the media File to the properly updated file."
    ],
    "docstrings": [],
    "functions": [
        "checkFrameMisalignment",
        "realignVideoAndAudio",
        "checkAndFixFrameAlignment",
        "checkMedia",
        "convertMedia"
    ],
    "classes": []
}