{
    "identifiers": [
        "fnmatch",
        "pathlib",
        "os",
        "path",
        "mkdocs",
        "plugins",
        "mkdocs",
        "structure",
        "files",
        "jinja2",
        "yaml",
        "filename",
        "template",
        "open",
        "filename",
        "fd",
        "yaml",
        "safe_load",
        "fd",
        "template",
        "render",
        "data",
        "mkdocs",
        "structure",
        "files",
        "File",
        "file",
        "dest_dir",
        "use_directory_urls",
        "__dict__",
        "update",
        "file",
        "__dict__",
        "_get_dest_path",
        "use_directory_urls",
        "os",
        "path",
        "normpath",
        "os",
        "path",
        "join",
        "dest_dir",
        "dest_path",
        "_get_url",
        "use_directory_urls",
        "is_documentation_page",
        "is_inspircd_module_yaml",
        "fnmatch",
        "fnmatch",
        "src_path",
        "mkdocs",
        "plugins",
        "BasePlugin",
        "jinja2",
        "Environment",
        "loader",
        "jinja2",
        "PackageLoader",
        "env",
        "get_template",
        "files",
        "config",
        "mkdocs",
        "structure",
        "files",
        "Files",
        "ExtendedFile",
        "file",
        "config",
        "config",
        "file",
        "files",
        "page",
        "config",
        "page",
        "file",
        "is_inspircd_module_yaml",
        "yml2md",
        "page",
        "file",
        "abs_src_path",
        "template",
        "module_template"
    ],
    "literals": [
        "\"*/modules/*.yml\"",
        "\"module.md.j2\"",
        "\"site_dir\"",
        "\"use_directory_urls\""
    ],
    "variables": [
        "data",
        "dest_path",
        "abs_dest_path",
        "url",
        "env",
        "module_template"
    ],
    "comments": [
        "copy all attributes",
        "Copy-pasted from mkdocs.structure.files.File's init;",
        "but we need to run them again now that .yml are recognized",
        "as documentation pages."
    ],
    "docstrings": [
        "\"\"\"\nPreprocesses data files docs/*/modules/*.yml into markdown, so they can\nbe built by MkDocs like regular pages.\n\"\"\"",
        "\"\"\"Like the original File class, but can also be a .yml module\n    description.\"\"\"",
        "\"\"\"Converts all original mkdocs.structure.files.File files to this\n        plugin's ExtendedFile class, which behaves the same but accepts .yml\n        files as input.\"\"\"",
        "\"\"\"Replaces MkDocs's open() to read source files by reading the file\n        directly and pre-rendering it to Markdown.\"\"\""
    ],
    "functions": [
        "yml2md",
        "is_documentation_page",
        "is_inspircd_module_yaml",
        "on_files",
        "on_page_read_source"
    ],
    "classes": [
        "ExtendedFile",
        "InspircdPlugin"
    ]
}