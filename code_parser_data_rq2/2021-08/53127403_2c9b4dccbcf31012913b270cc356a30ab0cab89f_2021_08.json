{
    "identifiers": [
        "com",
        "ctrip",
        "framework",
        "apollo",
        "config",
        "data",
        "injector",
        "com",
        "ctrip",
        "framework",
        "apollo",
        "core",
        "spi",
        "Ordered",
        "com",
        "ctrip",
        "framework",
        "apollo",
        "spi",
        "ApolloInjectorCustomizer",
        "java",
        "util",
        "java",
        "util",
        "concurrent",
        "ConcurrentHashMap",
        "java",
        "util",
        "Supplier",
        "ORDER",
        "Ordered",
        "LOWEST_PRECEDENCE",
        "INSTANCE_SUPPLIERS",
        "INSTANCES",
        "instanceSupplier",
        "INSTANCE_SUPPLIERS",
        "put",
        "instanceSupplier",
        "instanceSupplier",
        "INSTANCE_SUPPLIERS",
        "putIfAbsent",
        "instanceSupplier",
        "INSTANCE_SUPPLIERS",
        "containsKey",
        "Override",
        "clazz",
        "SuppressWarnings",
        "instanceSupplier",
        "INSTANCE_SUPPLIERS",
        "get",
        "clazz",
        "instanceSupplier",
        "getInstance",
        "clazz",
        "instanceSupplier",
        "SuppressWarnings",
        "instanceSupplier",
        "instance",
        "INSTANCES",
        "get",
        "instance",
        "instance",
        "newInstance",
        "instanceSupplier",
        "get",
        "INSTANCES",
        "computeIfAbsent",
        "key",
        "newInstance",
        "Override",
        "clazz",
        "name",
        "Override",
        "ORDER"
    ],
    "literals": [
        "\"unchecked\"",
        "\"unchecked\""
    ],
    "variables": [],
    "comments": [
        "prebuild an newInstance to prevent dead lock when recursive call computeIfAbsent",
        "https://bugs.openjdk.java.net/browse/JDK-8062841"
    ],
    "docstrings": [
        "* Copyright 2021 Apollo Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *",
        "* @author vdisk <vdisk@foxmail.com>",
        "* the order of the injector customizer",
        "* Register a specific type with the registry. If the specified type has already been registered,\n   * it will be replaced.\n   *\n   * @param <T>              the instance type\n   * @param type             the instance type\n   * @param instanceSupplier the instance supplier",
        "* Register a specific type with the registry if one is not already present.\n   *\n   * @param <T>              the instance type\n   * @param type             the instance type\n   * @param instanceSupplier the instance supplier",
        "* Return if a registration exists for the given type.\n   *\n   * @param <T>  the instance type\n   * @param type the instance type\n   * @return {@code true} if the type has already been registered"
    ],
    "functions": [
        "register",
        "registerIfAbsent",
        "isRegistered",
        "T",
        "getInstance",
        "T",
        "getInstance",
        "T",
        "getInstance",
        "getOrder"
    ],
    "classes": [
        "ApolloConfigDataInjectorCustomizer"
    ]
}