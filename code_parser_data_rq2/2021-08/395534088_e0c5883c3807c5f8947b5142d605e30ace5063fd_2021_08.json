{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "buffer",
        "imageType",
        "buffer",
        "isSvg",
        "buffer",
        "handler",
        "w",
        "q",
        "decodeURIComponent",
        "url",
        "w",
        "width",
        "q",
        "parsedUrl",
        "imageUrl",
        "protocol",
        "parsedUrl",
        "isRemoteImage",
        "config",
        "process",
        "allowedDomains",
        "allowedDomains",
        "process",
        "domain",
        "domain",
        "allowedDomains",
        "URL",
        "parsedUrl",
        "imageUrl",
        "parsedUrl",
        "fetch",
        "imageUrl",
        "imageData",
        "imageUrl",
        "imageData",
        "imageData",
        "imageData",
        "imageData",
        "imageData",
        "getImageType",
        "bufferData",
        "IGNORED_FORMATS",
        "ext",
        "isRemoteImage",
        "imageUrl",
        "parsedUrl",
        "process",
        "process",
        "ext",
        "OUTPUT_FORMATS",
        "ext",
        "ext",
        "sharp",
        "bufferData",
        "ext",
        "ext",
        "ext",
        "ext",
        "width",
        "imageBuffer",
        "MAX_RESPONSE_SIZE",
        "info",
        "etag",
        "imageBuffer",
        "imageBuffer",
        "exports",
        "builder",
        "handler"
    ],
    "literals": [
        "'@netlify/functions'",
        "'etag'",
        "'./imageconfig.json'",
        "'image-type'",
        "'is-svg'",
        "'node-fetch'",
        "'sharp'",
        "'svg'",
        "'image/svg'",
        "'svg'",
        "'gif'",
        "'png'",
        "'jpg'",
        "'webp'",
        "'avif'",
        "'/'",
        "'+'",
        "'%20'",
        "'Invalid image parameters'",
        "'/'",
        "'x-nf-connection-proto'",
        "'x-forwarded-proto'",
        "'http'",
        "${protocol}://${event.headers.host || event.hostname}${parsedUrl}",
        "'Combining `NEXT_IMAGE_ALLOWED_DOMAINS` with any domains found in `next.config.js`'",
        "','",
        "'Image is not from a permitted domain'",
        "Failed to download image ${imageUrl}. Status ${imageData.status} ${imageData.statusText}",
        "'Source does not appear to be an image'",
        "'true'",
        "'1'",
        "'webp'",
        "'jpg'",
        "'jpg'",
        "'png'",
        "'webp'",
        "'avif'",
        "'Requested image is too large. Maximum size is 6MB.'",
        "'Content-Type'",
        "image/${info.format}",
        "'base64'"
    ],
    "variables": [
        "etag",
        "config",
        "imageType",
        "isSvg",
        "fetch",
        "sharp",
        "MAX_RESPONSE_SIZE",
        "IGNORED_FORMATS",
        "OUTPUT_FORMATS",
        "handler",
        "url",
        "parsedUrl",
        "width",
        "quality",
        "imageUrl",
        "isRemoteImage",
        "protocol",
        "allowedDomains",
        "imageData",
        "bufferData",
        "imageBuffer"
    ],
    "comments": [
        "6MB is hard max Lambda response size",
        "Function used to mimic next/image",
        "Work-around a bug in redirect handling. Remove when fixed.",
        "Relative image",
        "Remote images need to be in the allowlist",
        "For unsupported formats (gif, svg) we redirect to the original",
        "The format methods are just to set options: they don't",
        "make it return that format."
    ],
    "docstrings": [],
    "functions": [
        "getImageType"
    ],
    "classes": []
}