{
    "identifiers": [
        "dropContainer",
        "puzzlepieces",
        "puzzlepieces",
        "puzzlepieces",
        "puzzlepieces",
        "targetID",
        "alert",
        "targetID",
        "targetImage",
        "dragImages",
        "piece",
        "piece",
        "startDrag",
        "dropZones",
        "zone",
        "zone",
        "dropped",
        "zone",
        "draggedOver",
        "puzzleSelectors",
        "button",
        "button",
        "swapImages"
    ],
    "literals": [
        "\"#buttonHolder img\"",
        "\".puzzle-board\"",
        "\".puzzle-image\"",
        "\".drop-zone\"",
        "\".puzzle-pieces\"",
        "url(images/dd/backGround${this.dataset.imageref}.jpg)",
        "'#topLeft'",
        "'#topRight'",
        "'#bottomLeft'",
        "'#bottomRight'",
        "\"#topLeft\"",
        "images/dd/topLeft${this.dataset.imageref}.jpg",
        "\"#topRight\"",
        "images/dd/topRight${this.dataset.imageref}.jpg",
        "\"#bottomLeft\"",
        "images/dd/bottomLeft${this.dataset.imageref}.jpg",
        "\"#bottomRight\"",
        "images/dd/bottomRight${this.dataset.imageref}.jpg",
        "\"dragTarget\"",
        "'dragging over drop zone elements'",
        "\"dragTarget\"",
        "\"WOPS!TRY AGAIN!\"",
        "'#'",
        "'dragstart'",
        "'drop'",
        "'dragover'",
        "\"click\""
    ],
    "variables": [
        "puzzleSelectors",
        "dropContainer",
        "dragImages",
        "dropZones",
        "puzzlepieces",
        "targetID",
        "targetImage"
    ],
    "comments": [
        "wrap everything in an IIFE / module",
        "a module is a JavaScript \"pattern\" - a programming convention",
        "this keeps your code private - kinda like a \"black box\" - which is a best practice",
        "identify the nodes of interest in the DOM",
        "functions go in the middle",
        "swap out the draggable thumbnail images",
        "update the backgound image of the drop zone dropContainer",
        "1. get the imageref attribute from the element we're clicking on",
        "2. set the backround image of the dropContainer",
        "save a reference to the element the user is dragging",
        "so that we can retrieve the element later and put it in a drop zone",
        "MDN drag and drop referenced",
        "allow a drop to happen",
        "if we have already dropped and appended into a drop zone, then it sholdnt happen again",
        "the return statemnet is a code killer - nothing will execute past this line /staement",
        "get the reference to the dragged image-saved in the drag function using setData",
        "add it to the zone we dropped the image on",
        "event handling at the bottom"
    ],
    "docstrings": [],
    "functions": [
        "swapImages",
        "startDrag",
        "draggedOver",
        "dropped"
    ],
    "classes": []
}