{
    "identifiers": [
        "React",
        "useContext",
        "firebase",
        "firebaseConfig",
        "useState",
        "Swal",
        "withReactContent",
        "UserContext",
        "useHistory",
        "useLocation",
        "Link",
        "Navbar",
        "useForm",
        "logo",
        "google",
        "firebase",
        "firebase",
        "firebaseConfig",
        "firebase",
        "withReactContent",
        "Swal",
        "Login",
        "useContext",
        "UserContext",
        "useHistory",
        "useLocation",
        "location",
        "firebase",
        "useState",
        "handleSignIn",
        "firebase",
        "provider",
        "result",
        "result",
        "displayName",
        "photoURL",
        "email",
        "setUser",
        "signedInUser",
        "setLoggedInUser",
        "signedInUser",
        "history",
        "MySwal",
        "MySwal",
        "MySwal",
        "error",
        "Swal",
        "handleSignOut",
        "firebase",
        "response",
        "setUser",
        "signedOutUser",
        "MySwal",
        "MySwal",
        "MySwal",
        "error",
        "handleBlur",
        "isFieldValid",
        "isFieldValid",
        "isPasswordValid",
        "passwordHasNumber",
        "isFieldValid",
        "isFieldValid",
        "user",
        "newUserInfo",
        "setUser",
        "newUserInfo",
        "handleSubmit",
        "user",
        "user",
        "firebase",
        "user",
        "user",
        "response",
        "user",
        "newUserInfo",
        "newUserInfo",
        "newUserInfo",
        "setUser",
        "newUserInfo",
        "setLoggedInUser",
        "newUserInfo",
        "history",
        "MySwal",
        "MySwal",
        "MySwal",
        "error",
        "user",
        "newUserInfo",
        "error",
        "newUserInfo",
        "error",
        "newUserInfo",
        "setUser",
        "newUserInfo",
        "Swal",
        "newUserInfo",
        "newUserInfo",
        "div",
        "Navbar",
        "Navbar",
        "div",
        "div",
        "div",
        "div",
        "div",
        "h2",
        "span",
        "span",
        "h2",
        "p",
        "p",
        "div",
        "form",
        "handleSubmit",
        "div",
        "input",
        "handleBlur",
        "div",
        "div",
        "input",
        "handleBlur",
        "div",
        "div",
        "input",
        "input",
        "div",
        "form",
        "div",
        "div",
        "button",
        "handleSignIn",
        "img",
        "google",
        "h6",
        "h6",
        "button",
        "div",
        "div",
        "p",
        "span",
        "Link",
        "Link",
        "span",
        "p",
        "div",
        "div",
        "div",
        "div",
        "img",
        "logo",
        "h1",
        "h1",
        "p",
        "p",
        "div",
        "div",
        "div",
        "div",
        "div",
        "div",
        "div",
        "Login"
    ],
    "literals": [
        "'react'",
        "\"firebase/app\"",
        "\"firebase/auth\"",
        "\"../firebase.config\"",
        "\"react\"",
        "'sweetalert2'",
        "'sweetalert2-react-content'",
        "'./../../../App'",
        "'react-router-dom'",
        "'../../Home/Navbar/Navbar'",
        "'./Login.css'",
        "\"react-hook-form\"",
        "'../../../images/Asset-6.png'",
        "'../../../images/google.png'",
        "\"/\"",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'success'",
        "'Signed in successfully'",
        "'bottom-end'",
        "'error'",
        "'Oops...'",
        "'Something went wrong!'",
        "''",
        "''",
        "''",
        "'success'",
        "'Signed out successfully'",
        "'bottom-end'",
        "'email'",
        "'password'",
        "'name'",
        "''",
        "'success'",
        "'Signed in successfully'",
        "'bottom-end'",
        "'error'",
        "${newUserInfo.errorCode}",
        "${newUserInfo.error}",
        "\"login-container p-5\"",
        "\"container px-5\"",
        "\"row align-items-center login-row\"",
        "\"col-md-6 col-sm-10\"",
        "\"text-center\"",
        "'#152550'",
        "\"fw-bold mb-4\"",
        "\"ms-3\"",
        "\"login-form p-5\"",
        "\"mb-4\"",
        "\"email\"",
        "\"text\"",
        "\"form-control login-input\"",
        "\"E-mail\"",
        "\"mb-4\"",
        "\"password\"",
        "\"password\"",
        "\"form-control login-input\"",
        "\"Password\"",
        "\"mb-4\"",
        "\"submit\"",
        "\"Sign In\"",
        "\"btn btn-order text-white mb-3\"",
        "\"gContainer-1\"",
        "\"gContainer-2 text-center\"",
        "\"google-btn p-2 d-flex\"",
        "\"none\"",
        "'white'",
        "'#152550'",
        "'50px'",
        "'none'",
        "'0px 0px 10px #a2edf7'",
        "'25px'",
        "'25px'",
        "\"\"",
        "\"px-5 pt-1\"",
        "\"text-center pt-3\"",
        "\"ps-1\"",
        "\"/signUp\"",
        "\"col-md-6 col-sm-10 coloured-part\"",
        "\"pt-5\"",
        "\"p-5 text-center\"",
        "'90px'",
        "'90px'",
        "\"\"",
        "\"text-center text-white fw-bold\"",
        "\"text-center text-white fw-bold\""
    ],
    "variables": [
        "MySwal",
        "Login",
        "loggedInUser",
        "setLoggedInUser",
        "history",
        "location",
        "provider",
        "user",
        "setUser",
        "handleSignIn",
        "signedInUser",
        "handleSignOut",
        "signedOutUser",
        "handleBlur",
        "isFieldValid",
        "isPasswordValid",
        "passwordHasNumber",
        "newUserInfo",
        "handleSubmit",
        "newUserInfo",
        "newUserInfo"
    ],
    "comments": [
        "if already initialized, use that one",
        "firebase.initializeApp(firebaseConfig);",
        "const { register, watch, formState: { errors } } = useForm();",
        "const onSubmit = data => console.log(data);",
        "Sign In & Sign Out With Google Account",
        "console.log('Clicked');",
        "console.log(displayName, photoURL, email);",
        "console.log(error.message)",
        "Sign-out successful.",
        "An error happened.",
        "Sign Up & Sign In With Email Address & Password",
        "const [newUser, setNewUser] =useState(false);",
        "console.log(isFieldValid);",
        "console.log(isFieldValid);",
        "console.log(event.target.value);",
        "console.log(user.email, user.password)",
        "if(newUser && user.email && user.password){",
        "//console.log('submitting')",
        "firebase.auth().createUserWithEmailAndPassword(user.email, user.password)",
        "// Handle Errors here.",
        ".then(response => {",
        "const newUserInfo = {...user};",
        "newUserInfo.error = '';",
        "//console.log(response)",
        "updateUserName(user.name);",
        "newUserInfo.success = true;",
        "verificationMail(user.email);",
        "setUser(newUserInfo);",
        "})",
        ".catch(error =>{",
        "const newUserInfo = {...user};",
        "//var errorCode = error.code;",
        "//var errorMessage = error.message;",
        "//console.error(errorCode,errorMessage)",
        "newUserInfo.errorCode = error.code;",
        "newUserInfo.error = error.message;",
        "newUserInfo.success = false;",
        "setUser(newUserInfo);",
        "})",
        "}",
        "if(!newUser && user.email && user.password){",
        "console.log(response)",
        "console.log('sign in user info', response.user)",
        "console.log(error);",
        "var errorCode = error.code;",
        "var errorMessage = error.message;",
        "console.error(errorCode,errorMessage)",
        "const updateUserName = name => {",
        "const user = firebase.auth().currentUser;",
        "user.updateProfile({",
        "displayName: name,",
        "}).then(function() {",
        "// Update successful.",
        "//console.log(username updated successfully)",
        "console.log(\"User name updated successfully\");",
        "}).catch(function(error) {",
        "// An error happened.",
        "});",
        "}",
        "const verificationMail = (email) => {",
        "firebase.auth().currentUser.sendEmailVerification()",
        ".then(() => {",
        "//   window.alert('Verification email sent');",
        "Swal.fire({",
        "icon: 'info',",
        "title: 'Done',",
        "text: 'Verification Email Sent',",
        "})",
        "});",
        "}",
        "Google Account Sign In",
        "{\n        user.isSignedIn ? <button onClick={handleSignOut}>Sign out</button> : <button onClick={handleSignIn}>Sign in</button>\n      }",
        "{\n        user.isSignedIn && \n        <div>\n          <p>Welcome {user.name}</p>\n          <p>Email: {user.email}</p>\n          <img src={user.photoURL} alt=\"photo\"></img>\n        </div>\n      }",
        "Sign Up and Sign In With Email Address & Password",
        "<h3>Email & Password Method</h3>\n      {\n        user.isSignedIn? \n        <div>\n          <p>Welcome {user.name}</p>\n          <p>Email: {user.email}</p>\n        </div>: \n        <div>\n            <input type=\"checkbox\" onChange={() => setNewUser(!newUser)} name=\"newUser\" id=\"\"/>\n            <label htmlFor=\"newUser\">New User Sign Up</label>\n            <form onSubmit={handleSubmit} action=\"\">\n            {newUser && <input type=\"text\" name='name' onBlur={handleBlur} placeholder='name' required/>}\n            <br/>\n            <input type=\"text\" name=\"email\" onBlur={handleBlur} placeholder=\"write your email address\" required/>\n            <br/>\n            <input type=\"password\" name=\"password\" onBlur={handleBlur} placeholder=\"your password\" required/>\n            <br/>\n            <input type=\"submit\" value={newUser ? 'Submit' : 'Sign In'}></input>\n          </form>\n        </div>\n      }\n      \n      <p style={{color: 'red'}}>{user.error}</p>\n      {\n        user.success && <p style={{color: 'green'}}>User {newUser ? 'created' : 'logged in'} success!</p>\n      }"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}