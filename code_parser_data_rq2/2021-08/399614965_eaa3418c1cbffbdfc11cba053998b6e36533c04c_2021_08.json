{
    "identifiers": [
        "os",
        "io",
        "BytesIO",
        "flask",
        "Flask",
        "render_template",
        "request",
        "config",
        "config",
        "hotdogclassifier",
        "HotDogClassifier",
        "Flask",
        "HotDogClassifier",
        "model",
        "load_model",
        "config",
        "app",
        "route",
        "methods",
        "render_template",
        "flag",
        "project_description",
        "config",
        "project_name",
        "config",
        "app",
        "route",
        "methods",
        "request",
        "files",
        "BytesIO",
        "uploaded_file",
        "read",
        "uploaded_file",
        "filename",
        "model",
        "predict",
        "data",
        "render_template",
        "predicted",
        "predicted",
        "img",
        "img",
        "flag",
        "project_description",
        "config",
        "project_name",
        "config",
        "os",
        "environ",
        "get",
        "os",
        "environ",
        "get",
        "app",
        "run",
        "host",
        "port",
        "PORT",
        "debug",
        "DEBUG"
    ],
    "literals": [
        "\"model_weight\"",
        "\"/\"",
        "\"GET\"",
        "\"index.html\"",
        "\"project_description\"",
        "\"project_name\"",
        "\"/\"",
        "\"POST\"",
        "\"files\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"index.html\"",
        "\"project_description\"",
        "\"project_name\"",
        "'__main__'",
        "'PORT'",
        "'DEBUG'",
        "'TRUE'",
        "'0.0.0.0'"
    ],
    "variables": [
        "app",
        "model",
        "uploaded_file",
        "data",
        "img",
        "predicted",
        "predicted",
        "img",
        "PORT",
        "DEBUG"
    ],
    "comments": [
        "----------------- Write your code below this line. -------------------- #",
        "create a Flask app",
        "load the pre-trained model",
        "Return the home page of our web app.",
        "Extract uploaded the file from the request.",
        "Convert the extracted file into a series of bytes for further processing.",
        "Assess if an empty file was uploaded.",
        "Let our model make the prediction.",
        "No prediction could be made.",
        "return the rendered home page with response.",
        "----------------- You do NOT need to understand what the code below does. -------------------- #"
    ],
    "docstrings": [
        "\"\"\"\n    This function handles the GET requests for end-point `/`.\n\n    In simple terms, this function handles what the app will do when you open the\n    app in the browser. Naturally, it will return the home page of our webapp.\n    \"\"\"",
        "\"\"\"\n    This function handles the POST requests for end-point `/`.\n\n    In design of our front-end (html), this endpoint is called whenever a successful\n    upload of an image is made. This function will return a page with the image and\n    the model's prediction.\n    \"\"\""
    ],
    "functions": [
        "home",
        "classify"
    ],
    "classes": []
}