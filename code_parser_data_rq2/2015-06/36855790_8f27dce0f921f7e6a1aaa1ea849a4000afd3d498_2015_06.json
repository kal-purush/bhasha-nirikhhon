{
    "identifiers": [
        "com",
        "android",
        "cts",
        "tradefed",
        "build",
        "com",
        "android",
        "tradefed",
        "build",
        "IBuildInfo",
        "com",
        "android",
        "tradefed",
        "build",
        "IFolderBuildInfo",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileNotFoundException",
        "CTS_DIR_NAME",
        "mSuiteName",
        "mRootDir",
        "mCtsDir",
        "rootDir",
        "mRootDir",
        "rootDir",
        "mCtsDir",
        "mRootDir",
        "CTS_DIR_NAME",
        "build",
        "build",
        "getRootDir",
        "build",
        "build",
        "format",
        "getName",
        "build",
        "getClass",
        "getName",
        "ctsBuild",
        "build",
        "ctsBuild",
        "validateStructure",
        "ctsBuild",
        "e",
        "e",
        "mSuiteName",
        "mRootDir",
        "mCtsDir",
        "appFileName",
        "apkFile",
        "getTestCasesDir",
        "appFileName",
        "apkFile",
        "exists",
        "format",
        "apkFile",
        "getAbsolutePath",
        "apkFile",
        "getCtsDir",
        "getRepositoryDir",
        "getRepositoryDir",
        "getRepositoryDir",
        "getRepositoryDir",
        "planName",
        "ctsPlanRelativePath",
        "format",
        "planName",
        "getTestPlansDir",
        "ctsPlanRelativePath",
        "getCtsDir",
        "exists",
        "format",
        "getCtsDir",
        "getAbsolutePath",
        "getTestCasesDir",
        "exists",
        "format",
        "getTestCasesDir",
        "getAbsolutePath",
        "getTestPlansDir",
        "exists",
        "format",
        "getTestPlansDir",
        "getAbsolutePath"
    ],
    "literals": [
        "\"android-cts\"",
        "\"CTS\"",
        "\"Wrong build type. Expected %s, received %s\"",
        "\"Invalid CTS build provided.\"",
        "\"CTS test app file %s does not exist\"",
        "\"repository\"",
        "\"results\"",
        "\"logs\"",
        "\"testcases\"",
        "\"plans\"",
        "\"%s.xml\"",
        "\"CTS install folder %s does not exist\"",
        "\"CTS test cases folder %s does not exist\"",
        "\"CTS test plans folder %s does not exist\""
    ],
    "variables": [
        "mRootDir",
        "mCtsDir"
    ],
    "comments": [],
    "docstrings": [
        "* Copyright (C) 2010 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Helper class for retrieving files from the CTS install.\n * <p/>\n * Encapsulates the filesystem layout of the CTS installation.",
        "The root location of the extracted CTS package",
        "the {@link CTS_DIR_NAME} directory",
        "* Creates a {@link CtsBuildHelper}.\n     *\n     * @param rootDir the parent folder that contains the \"android-cts\" directory and all its\n     *            contents.",
        "* Alternate {@link CtsBuildHelper} constructor that takes the {@link IFolderBuildInfo}\n     * representation of a CTS build.\n     *\n     * @param build the {@link IFolderBuildInfo}\n     * @throws FileNotFoundException",
        "* A helper factory method that creates and validates a {@link CtsBuildHelper} given an\n     * {@link IBuildInfo}.\n     *\n     * @param build the {@link IBuildInfo}\n     * @return the {@link CtsBuildHelper}\n     * @throws IllegalArgumentException if provided <var>build</var> is not a valid CTS build",
        "* @return a {@link File} representing the parent folder of the CTS installation",
        "* @return a {@link File} representing the \"android-cts\" folder of the CTS installation",
        "* @return a {@link File} representing the test application file with given name\n     * @throws FileNotFoundException if file does not exist",
        "* @return a {@link File} representing the results directory.",
        "* @return a {@link File} representing the directory to store result logs.",
        "* @return a {@link File} representing the test cases directory",
        "* @return a {@link File} representing the test plan directory",
        "* @return a {@link File} representing the test plan with given name. note: no attempt will be\n     * made to ensure the plan actually exists\n     * @throws FileNotFoundException if plans directory does not exist",
        "* Check the validity of the CTS build file system structure.\n     * @throws FileNotFoundException if any major directories are missing"
    ],
    "functions": [
        "CtsBuildHelper",
        "CtsBuildHelper",
        "CtsBuildHelper",
        "createBuildHelper",
        "getSuiteName",
        "File",
        "getRootDir",
        "File",
        "getCtsDir",
        "File",
        "getTestApp",
        "File",
        "getRepositoryDir",
        "File",
        "getResultsDir",
        "File",
        "getLogsDir",
        "File",
        "getTestCasesDir",
        "File",
        "getTestPlansDir",
        "File",
        "getTestPlanFile",
        "validateStructure"
    ],
    "classes": [
        "CtsBuildHelper"
    ]
}