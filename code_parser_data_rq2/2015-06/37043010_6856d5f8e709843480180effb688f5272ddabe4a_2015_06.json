{
    "identifiers": [
        "pandas",
        "pd",
        "pd",
        "read_csv",
        "movies",
        "shape",
        "movies",
        "dtypes",
        "movies",
        "duration",
        "mean",
        "movies",
        "sort",
        "iloc",
        "movies",
        "content_rating",
        "value_counts",
        "movies",
        "content_rating",
        "replace",
        "inplace",
        "movies",
        "content_rating",
        "replace",
        "inplace",
        "movies",
        "isnull",
        "sum",
        "movies",
        "movies",
        "content_rating",
        "isnull",
        "movies",
        "content_rating",
        "fillna",
        "value",
        "inplace",
        "round",
        "movies",
        "movies",
        "duration",
        "star_rating",
        "mean",
        "round",
        "movies",
        "movies",
        "duration",
        "star_rating",
        "mean",
        "movies",
        "plot",
        "kind",
        "x",
        "y",
        "alpha",
        "movies",
        "groupby",
        "duration",
        "mean",
        "matplotlib",
        "pyplot",
        "plt",
        "movies",
        "content_rating",
        "value_counts",
        "plot",
        "kind",
        "movies",
        "sort",
        "ascending",
        "groupby",
        "first",
        "movies",
        "movies",
        "title",
        "duplicated",
        "title",
        "movies",
        "movies",
        "title",
        "isin",
        "duplicate_movietitles",
        "movies",
        "genre",
        "value_counts",
        "movie10",
        "movie10",
        "index",
        "movies",
        "movies",
        "genre",
        "isin",
        "top_genres",
        "top_movies",
        "groupby",
        "star_rating",
        "agg",
        "movies",
        "groupby",
        "star_rating",
        "agg",
        "movie_rating_avg",
        "movie_rating_avg"
    ],
    "literals": [
        "'imdb_1000.csv'",
        "'duration'",
        "'NOT RATED'",
        "'APPROVED'",
        "'PASSED'",
        "'GP'",
        "'UNRATED'",
        "'X'",
        "'TV-MA'",
        "'NC-17'",
        "'R'",
        "'scatter'",
        "'star_rating'",
        "'duration'",
        "'genre'",
        "'bar'",
        "'star_rating'",
        "'genre'",
        "'genre'",
        "'count'",
        "'mean'",
        "'genre'",
        "'count'",
        "'mean'",
        "'count'"
    ],
    "variables": [
        "movies",
        "duplicate_movietitles",
        "movie10",
        "top_genres",
        "top_movies",
        "movie_rating_avg"
    ],
    "comments": [
        "read in 'imdb_1000.csv' and store it in a DataFrame named movies",
        "check the number of rows and columns",
        "check the data type of each column",
        "calculate the average movie duration",
        "sort the DataFrame by duration to find the shortest and longest movies",
        "count how many movies have each of the content ratings",
        "convert the following content ratings to \"UNRATED\": NOT RATED, APPROVED, PASSED, GP",
        "convert the following content ratings to \"NC-17\": X, TV-MA",
        "count the number of missing values in each column",
        "if there are missing values: examine them, then fill them in with \"reasonable\" values",
        "Check whcih movies have NaN value for rating",
        "replaces NaN values with \"R\"",
        "calculate the average star rating for movies 2 hours or longer,",
        "and compare that with the average star rating for movies shorter than 2 hours",
        "use a visualization to detect whether there is a relationship between star rating and duration",
        "calculate the average duration for each genre",
        "visualize the relationship between content rating and duration",
        "determine the top rated movie (by star rating) for each genre",
        "check if there are multiple movies with the same title, and if so, determine if they are actually duplicates",
        "calculate the average star rating for each genre, but only include genres with at least 10 movies",
        "SOLUTION 1",
        "SOLUTION 2",
        "Figure out something \"interesting\" using the actors data!"
    ],
    "docstrings": [
        "'''\nPandas Homework with IMDB data\n'''",
        "'''\nBASIC LEVEL\n'''",
        "'''\nINTERMEDIATE LEVEL\n'''",
        "'''\nADVANCED LEVEL\n'''",
        "'''\nBONUS\n'''"
    ],
    "functions": [],
    "classes": []
}