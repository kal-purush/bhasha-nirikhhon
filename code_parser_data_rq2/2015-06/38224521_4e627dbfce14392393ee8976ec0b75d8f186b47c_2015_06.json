{
    "identifiers": [
        "FlashAir",
        "FileAttribute",
        "_date",
        "_time",
        "date",
        "date",
        "WebDAVStatus",
        "ExifOientation",
        "WiFiOperationMode",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "fn",
        "args",
        "FlashAir",
        "eventEmitter",
        "urlBase",
        "options",
        "newUrl",
        "verify",
        "path",
        "path",
        "fa",
        "qs",
        "ajaxOption",
        "o",
        "CgiHost",
        "fa",
        "op",
        "qs",
        "ajaxOptions",
        "dir",
        "dir",
        "timeout",
        "dir",
        "date",
        "CgiHost",
        "fa",
        "file",
        "CgiHost",
        "fa",
        "qs",
        "masterCode",
        "value",
        "CgiHost",
        "fa"
    ],
    "literals": [
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [],
    "comments": [
        "<reference path=\"typings/jquery/jquery.d.ts\" />"
    ],
    "docstrings": [
        "* Yokin's FlashAir Javascript client library\n * (c) 2015 Yokinsoft Jake.Y.Yoshimura http://www.yo-ki.com\n *\n * @version 0.9.4\n * @author Yokinsoft Jake.Y.Yoshimura\n * @license MIT License",
        "* Raw file data from FlashAir host which is given in `wlansd` global array object in *List.htm*.\n     * This is also a container of the data returned by `command.cgi?op=100` call, where CSV format is converted in to this interface.",
        "* Class expression of FileInfoRaw. Extra useful methods are available.",
        "* convert FDATE, FTIME internal datetime value to javascript Date object.\n         *\n         * FlashAir 内部形式の FDATE FTIME を Date オブジェクトに変換します。",
        "* convert javascript Date object to internal FDATE format.\n         *\n         * Javascript の Date を FDATE 数値形式に変換します。",
        "* convert javascript Date object to internal FTIME format.\n         *\n         * Javascript の Date を FTIME 数値形式に変換します。",
        "*  「無線起動画面」のライトプロテクト解除操作で無線LAN機能を起動します。無線LANモードはAPモードです。",
        "*  「無線起動画面」のライトプロテクト解除操作で無線LAN機能を起動します。無線LANモードはSTAモードです。",
        "*  「無線起動画面」のライトプロテクト解除操作で無線LAN機能を起動します。無線LANモードはインターネット同時接続モードです。 (ファームウェア 2.00.02以上)",
        "* \tカード電源投入時に無線LAN機能を起動します。無線LANモードはAPモードです。",
        "*  カード電源投入時に無線LAN機能を起動します。無線LANモードはSTAモードです。",
        "*  カード電源投入時に無線LAN機能を起動します。無線LANモードはインターネット同時接続モードです。 (ファームウェア 2.00.02以上)",
        "* internal use only.\n     * to make class object event emittable.",
        "* Yokin's FlashAir Javascript client library\n * (c) 2015 Yokinsoft Jake.Y.Yoshimura http://www.yo-ki.com\n *\n * @version 0.9.4\n * @author Yokinsoft Jake.Y.Yoshimura http://www.yo-ki.com\n * @license MIT License",
        "* FlashAir module contains all classes which are needed for FlashAir client access.\n * Only entry point of FlashAir API access is {@link FlashAirClient FlashAir.FlashAirClient} class.\n * @see {@link FlashAirClient}\n * @preferred",
        "* Options for FlashAirClient constructor.\n     *",
        "* `true` : enable polling with the default interval setting (2 seconds).\n         *\n         * `false` : disables polling.\n         *\n         * `number` larger than 0 : sets polling interval in miliseconds.",
        "* HTTP client for FlashAir.\n     * **Command**, **Config**, **Thumbnail** properties are corresponding to each CGI API on FlashAir.\n     * On the creation of this object, some APIs are automatically called to obtain the host version and status.\n     * It starts polling automatically soon after the initialization.\n     * Polling interval can be specified in constructor's option parameter.\n     * Host ( FlashAir network address ) can be provided in the constructor or you can change the host address any time later by calling [`setHostAddress`]{@link setHostAddress}.\n     *\n     * ## How to start\n     * Instantiating FlashAirClient object is the simplest start.\n     * ```\n     * var fa = new FlashAir.FlashAirClient();\n     * ```\n     * Available options are defined in {@link FlashAirClientConfig FlashAirClientConfig}.\n     *\n     * ##Events\n     * This class supports DOM like event system. Changes of host SD card status and some more can be monitored by handling those events.\n     * Event attach/detach methos are just same as jQuery's on/off/once\n     * ```\n     * var fa = new FlashAir.FlashAirClient();\n     * fa.on('fa.hostready', function(){\n     *     // custom initialization\n     * });\n     * ```\n     *\n     *\n     * ###```fa.updated```\n     * is triggered when /command.cgi?op=121 host timestamp returns updated number. You can take any action like getting a updated file list.\n     *\n     * ###```fa.hostchanged```\n     * is triggered when the host name or IP address is changing to another. During the initial connection, this event doesn't fire.\n     *\n     * ###```fa.hostready```\n     * After the initial connection or fireing ```fa.hostchanged```, this class tries to obtain some host status by some API calls.\n     * This event is triggered when those initial calls are all done.\n     *\n     * ###```fa.hostfailure```\n     * After calling [setHostAddress]{@link setHostAddress}, if connection failed, this event is triggered.\n     *\n     * ###```fa.polling```\n     * reports polling status every *n* milliseconds interval which is configured with options for constructor.\n     * The polling status has a status value:\n     * ```\n     * fa.on('fa.polling', function( status ){\n     *     // check the status\n     * });\n     * ```\n     *\n     * status value can be:\n     * - **connecting** Trying to connect to the host SD card.\n     * - **connected** Connection to the host SD card has been confirmed.\n     * - **disconnected**  Connection to the host SD card has been lost.\n     *\n     * ###```fa.photosharemode```\n     * is triggered when the host SD card is currently in PHOTOSHARE mode.\n     *\n     *",
        "* URL for FlashAir host device like \"http://flashair/\".\n         * url always ends with /.",
        "* This is set when the connecting client has a right mastercode.",
        "* holds current language. This value comes from user's browser's language setting, otherwise is obtained by command.cgi accept language.",
        "* @param urlBase an address to FlashAir host, \"http://flashair/\". If omitted, proper host address is infered.\n         * @param options specify options. Available options are defined in {@link FlashAirClientConfig FlashAirClientConfig}",
        "* @param newUrl new host URL of FlashAir, which may be like \"http://flashair/\" or \"http://192.168.0.100/\"\n         * @param verify If true, this method tries to verify the existence of the host address by calling command.cgi\n         * @returns jQuery promise object.",
        "* represents command.cgi.\n         * command.cgi のオブジェクト表現",
        "* represents thumbnail.cgi\n         *  thumbnail.cgi のオブジェクト表現",
        "* represents config.cgi\n         * config.cgi のオブジェクト表現",
        "* represents upload.cgi\n         * upload.cgi のオブジェクト表現",
        "* Not implemented.\n         * @param path\n         * @returns",
        "* base class of CGI.\n     * This class contains utility methods for CGI call, HTTP GET/POST etc.",
        "* internal use only",
        "* helper function to call host CGI with GET method\n         * @param qs query string with name:value\n         * @param ajaxOption",
        "* represents /command.cgi API.\n     * Every API method is asynchronous with JQueryPromise object. You can get the result in number, string and predefined enum or object\n     * by calling .done/fail/always... promise methods.\n     *\n     * ###example of listing files\n     *\n     * ```\n     * var fa = new FlashAir.FlashAirClient();\n     * fa.Command.FileList( \"/DCIM\" )\n     *   .done(function (list) {\n     *       // list is an array of FlashAir.FileInfoRaw\n     *\n     *   });\n     * ```",
        "* internal use only",
        "* utility method of HTTP GET with explicit `op` number.\n         * returned content is parsed as TResult type.\n         * @param op `op` number for command.cgi call.\n         * @param qs other query strings. op and qs are mixed when it calls command.cgi\n         * @returns jQuery promise object.",
        "* regular expression pattern to parse WLANSD_FILELIST which is returned from OP=100 CGI call.",
        "* List files in a directory.\n         * ```OP=100&DIR=/DCIM```\n         * command.cgi?OP=100 operation.\n         * @param dir directory path to list\n         * @returns jQuery promise for `FileInfoRaw`",
        "* ```op=101&DIR=/DCIM```",
        "* ```op=102```",
        "* ```op=104```",
        "* ```op=105```",
        "* ```op=106```\n         * MACアドレスの取得",
        "* ```op=107```\n         * ブラウザ言語の取得",
        "* ```op=108```\n         * ファームウェアバージョン情報の取得",
        "* ```op=109```\n         * 制御イメージの取得",
        "* ```op=110```\n         * 無線LANモードの取得",
        "* ```op=111```\n         * 無線LANタイムアウト時間の設定",
        "* ```op=117```\n         * アプリケーション独自情報の取得",
        "* ```op=118```\n         * アップロード機能の有効状態の取得",
        "* ```op=120```\n         * CIDの取得",
        "* ```op=121```\n         * アップデート情報の取得 (タイムスタンプ形式)\n         * @param timeout timeout of CGI call in millisecond. In purpose of avoiding long lasting connection to CGI server to reduce unnecessary load.",
        "* get a URL address for the thumbnail image.\n         * @param file FlashAir.FileInfoRaw object which is returned from op=100 call."
    ],
    "functions": [],
    "classes": [
        "FileInfo",
        "eventEmitter",
        "FlashAirClient",
        "CgiHost",
        "Command",
        "Thumbnail",
        "Config",
        "Upload"
    ]
}