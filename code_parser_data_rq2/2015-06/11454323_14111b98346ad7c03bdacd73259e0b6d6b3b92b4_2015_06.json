{
    "identifiers": [
        "ROOT",
        "ROOT",
        "TFile",
        "TH1",
        "TH1F",
        "TLine",
        "TCanvas",
        "TProfile",
        "TEfficiency",
        "TGraphAsymmErrors",
        "TF1",
        "TPaveText",
        "TPaveStats",
        "TLegend",
        "TLine",
        "gROOT",
        "gPad",
        "gStyle",
        "tdrstyle",
        "tdrStyle",
        "array",
        "array",
        "gROOT",
        "Reset",
        "tdrStyle",
        "gROOT",
        "SetStyle",
        "gROOT",
        "ForceStyle",
        "ROOT",
        "kRed",
        "ROOT",
        "kBlue",
        "TCanvas",
        "tag",
        "TAGS",
        "TFile",
        "Open",
        "inf",
        "Get",
        "TH1F",
        "tag",
        "tag",
        "tag",
        "tree",
        "Draw",
        "tag",
        "tree",
        "Draw",
        "tag",
        "resPt",
        "append",
        "hRes",
        "resPt",
        "k",
        "SetMarkerColor",
        "COLOR",
        "k",
        "resPt",
        "k",
        "SetLineColor",
        "COLOR",
        "k",
        "resPt",
        "k",
        "SetMarkerStyle",
        "STYLE",
        "k",
        "i",
        "xrange",
        "hRes",
        "GetNbinsX",
        "tag",
        "hRes",
        "GetBinCenter",
        "i",
        "hRes",
        "GetBinContent",
        "i",
        "hRes",
        "GetBinError",
        "i",
        "x",
        "append",
        "hRes",
        "GetBinCenter",
        "i",
        "exl",
        "append",
        "exh",
        "append",
        "hRes",
        "GetBinContent",
        "i",
        "y",
        "append",
        "hRes",
        "GetBinError",
        "i",
        "hRes",
        "GetBinContent",
        "i",
        "y",
        "append",
        "eyl",
        "append",
        "eyh",
        "append",
        "array",
        "x",
        "array",
        "y",
        "array",
        "exl",
        "array",
        "exh",
        "array",
        "eyl",
        "array",
        "eyh",
        "gEffPt",
        "append",
        "TGraphAsymmErrors",
        "hRes",
        "GetNbinsX",
        "vx",
        "vy",
        "vexl",
        "vexh",
        "veyl",
        "veyh",
        "gEffPt",
        "k",
        "SetMarkerColor",
        "COLOR",
        "k",
        "gEffPt",
        "k",
        "SetLineColor",
        "COLOR",
        "k",
        "gEffPt",
        "k",
        "SetMarkerStyle",
        "STYLE",
        "k",
        "fit",
        "append",
        "TF1",
        "k",
        "fit",
        "k",
        "SetLineColor",
        "COLOR",
        "k",
        "k",
        "canPt",
        "cd",
        "TLine",
        "f",
        "SetLineColor",
        "ROOT",
        "kBlack",
        "f",
        "SetLineStyle",
        "f",
        "SetLineWidth",
        "f",
        "Draw",
        "TLegend",
        "k",
        "len",
        "TAGS",
        "resPt",
        "k",
        "Draw",
        "resPt",
        "k",
        "GetXaxis",
        "SetTitle",
        "resPt",
        "k",
        "Fit",
        "fit",
        "k",
        "fit",
        "k",
        "Draw",
        "leg",
        "AddEntry",
        "gEffPt",
        "k",
        "TAGS",
        "k",
        "fit",
        "k",
        "GetParameters",
        "ln",
        "append",
        "TPaveText",
        "k",
        "k",
        "ln",
        "k",
        "SetTextColor",
        "COLOR",
        "k",
        "ln",
        "k",
        "SetLineColor",
        "ln",
        "k",
        "SetFillColor",
        "ln",
        "k",
        "SetShadowColor",
        "ln",
        "k",
        "SetBorderSize",
        "ln",
        "k",
        "SetTextFont",
        "ln",
        "k",
        "SetTextSize",
        "ln",
        "k",
        "AddText",
        "round",
        "par",
        "round",
        "par",
        "round",
        "par",
        "par",
        "ln",
        "k",
        "Draw",
        "leg",
        "SetFillColor",
        "leg",
        "SetTextFont",
        "leg",
        "SetTextSize",
        "leg",
        "Draw",
        "gPad",
        "Update",
        "rep",
        "raw_input",
        "len",
        "rep",
        "rep"
    ],
    "literals": [
        "'tdrStyle'",
        "\"baseline\"",
        "\"regression\"",
        "'ResVsPt'",
        "'ResVsPt_'",
        "'/afs/cern.ch/work/d/degrutto/public/MiniAOD/ZnnHbb_Phys14_PU20bx25/skimV11/step3/Step3_ZnnH125.root'",
        "'tree'",
        "'hRes_'",
        "'hRes_'",
        "'baseline'",
        "'HCSV_mass >>hRes_'",
        "\"\"",
        "\"\"",
        "'HmassReg >>hRes_'",
        "\"\"",
        "\"\"",
        "'d'",
        "'d'",
        "'d'",
        "'d'",
        "'d'",
        "'d'",
        "'fit'",
        "'gaus'",
        "'same'",
        "'mass (GeV)'",
        "'RNQ'",
        "'same'",
        "'P'",
        "\"brNDC\"",
        "'#mu '",
        "', #sigma '",
        "', res=#sigma/#mu '",
        "\"same\"",
        "'__main__'",
        "''",
        "'q'",
        "'Q'",
        "'enter \"q\" to quit: '"
    ],
    "variables": [
        "COLOR",
        "STYLE",
        "TAGS",
        "canPt",
        "resPt",
        "gEffPt",
        "fit",
        "ln",
        "k",
        "inf",
        "tree",
        "hRes",
        "x",
        "y",
        "exl",
        "exh",
        "eyl",
        "eyh",
        "vx",
        "vy",
        "vexl",
        "vexh",
        "veyl",
        "veyh",
        "f",
        "leg",
        "par",
        "rep",
        "rep",
        "rep"
    ],
    "comments": [
        "!usr/bin/python",
        "import optparse",
        "usage = \"usage: %prog [options]\"",
        "parser = optparse.OptionParser(usage)",
        "parser.add_option(\"--bit\"  ,action=\"store\",type=\"string\",dest=\"bit\",default='pfCor40')",
        "parser.add_option(\"--var\"  ,action=\"store\",type=\"string\",dest=\"var\",default='Inclusive')",
        "(options, args) = parser.parse_args()",
        "bit = options.bit",
        "var = options.var",
        "tree.Draw('genPt>>hPtAll_'+tag, 'genPt>5')",
        "tree.Draw('genPt>>hPtPass_'+tag,'pass && genMatchDR<0.2')",
        "resolution as sigma(hlt/gen) / <hlt/gen>",
        "fit.append(TF1('fit'+str(k),'([0]-[3])/pow(1+[1]*exp(-[2]*x),[4])+[3]+[5]*(1-pow(x,-[6]))',15,200))",
        "fit.append(TF1('fit'+str(k),'([0]-[3])/pow(1+[1]*exp(-[2]*x),[4])+[3]+[5]*(1-pow(x,-[6]))',0,300))",
        "fit[k].SetParameters(1,300,0.1,0,1,1,0.1)",
        "fit[k].SetParNames('A','x0','#mean')",
        "fit[k].SetParNames('B','x0','#sigma')",
        "h = TH1F('h','h',50,0,100)",
        "leg.SetHeader(bit)",
        "gEffPt[0].Draw('PE1')",
        "x99 = fit[k].GetX(0.99)",
        "x10 = fit[k].GetX(0.1)",
        "x50 = fit[k].GetX(0.5)",
        "print 'Turn-on: '+str(x90)",
        "q = (x90-x10)/x50",
        "print 'Sharpness: '+str(q)",
        "gEffPt[k].Draw('samePE1)'",
        "gEffPt[k].Draw('samePE')",
        "resPt[k].Draw('samePE')",
        "leg.AddEntry(gEffPt[k],TAGS[k]+' ('+'%.2f' % q +')','P')",
        "print 'fit results: const =',par[0],',mean =',par[1], ',sigma =',par[2]",
        "ln[k].SetLineStyle(7)",
        "ln[k].SetLineWidth(2)",
        "leg.SetBorderSize(0)",
        "----- keep the GUI alive ------------"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}