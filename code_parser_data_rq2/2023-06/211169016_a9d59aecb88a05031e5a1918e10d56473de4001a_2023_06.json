{
    "identifiers": [
        "basename",
        "dirname",
        "CodeQLCliServer",
        "QuerySetup",
        "Event",
        "dbSchemeToLanguage",
        "FALLBACK_QLPACK_FILENAME",
        "QLPACK_FILENAMES",
        "FilePathDiscovery",
        "getErrorMessage",
        "extLogger",
        "EOL",
        "containsPath",
        "getOnDiskWorkspaceFolders",
        "FilePathDiscovery",
        "cliServer",
        "QLPACK_FILENAMES",
        "queryPath",
        "queryPack",
        "containsPath",
        "dirname",
        "queryPack",
        "queryPath",
        "packs",
        "a",
        "b",
        "b",
        "a",
        "packs",
        "packs",
        "dirname",
        "packs",
        "dirname",
        "packs",
        "basename",
        "packs",
        "FALLBACK_QLPACK_FILENAME",
        "packs",
        "packs",
        "packs",
        "path",
        "path",
        "path",
        "packInfo",
        "getOnDiskWorkspaceFolders",
        "path",
        "err",
        "extLogger",
        "path",
        "EOL",
        "getErrorMessage",
        "err",
        "packInfo",
        "basename",
        "packInfo",
        "dbSchemeToLanguage",
        "dbscheme",
        "path",
        "QLPACK_FILENAMES",
        "basename",
        "path",
        "newPack",
        "existingPack",
        "existingPack",
        "newPack"
    ],
    "literals": [
        "\"path\"",
        "\"../codeql-cli/cli\"",
        "\"vscode\"",
        "\"../common/query-language\"",
        "\"../pure/ql\"",
        "\"../common/vscode/file-path-discovery\"",
        "\"../pure/helpers-pure\"",
        "\"../common\"",
        "\"os\"",
        "\"../pure/files\"",
        "\"../common/vscode/workspace-folders\"",
        "string",
        "string",
        "\"Query Pack Discovery\"",
        "**/{${QLPACK_FILENAMES.join(\",\")}}",
        "\",\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "Query pack discovery failed to determine language for query pack: ${path}${EOL}Reason: ${getErrorMessage(\n          err,\n        )}",
        "string"
    ],
    "variables": [
        "packs",
        "language",
        "packInfo",
        "dbscheme"
    ],
    "comments": [
        "Find all packs in a higher directory than the query",
        "Sort by descreasing path length to find the pack nearest the query",
        "If the first two packs are from the same directory then look at the filenames"
    ],
    "docstrings": [
        "* Discovers all query packs in the workspace.",
        "* Event that fires when the set of query packs in the workspace changes.",
        "* Given a path of a query file, locate the query pack that contains it and\n   * return the language of that pack. Returns undefined if no pack is found\n   * or the pack's language is unknown."
    ],
    "functions": [
        "onDidChangeQueryPacks",
        "getLanguageForQueryFile",
        "getDataForPath",
        "determinePackLanguage",
        "pathIsRelevant",
        "shouldOverwriteExistingData"
    ],
    "classes": [
        "QueryPackDiscovery"
    ]
}