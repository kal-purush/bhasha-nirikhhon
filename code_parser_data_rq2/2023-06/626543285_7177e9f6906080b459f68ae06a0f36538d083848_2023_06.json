{
    "identifiers": [
        "code",
        "description",
        "description",
        "code"
    ],
    "literals": [
        "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; connect-src 'self' http://localhost:3000; style-src 'unsafe-inline'; script-src 'unsafe-inline';\">\n    <!-- <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; style-src 'unsafe-inline'; script-src 'unsafe-inline';\"> -->\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <style>\n        body {\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n            background-color: #1e1e1e;\n            color: #d4d4d4;\n            padding: 16px;\n        }\n\n        input[type=\"search\"] {\n            width: 100%;\n            padding: 8px;\n            border: 1px solid #454545;\n            border-radius: 4px;\n            background-color: #252526;\n            color: #d4d4d4;\n        }\n\n        #tabs {\n            display: flex;\n            margin: 8px 0;\n        }\n\n        button {\n            flex: 1;\n            padding: 8px;\n            margin-right: 8px;\n            background-color: #3c3c3c;\n            border: none;\n            border-radius: 4px;\n            color: #d4d4d4;\n            font-weight: bold;\n            cursor: pointer;\n        }\n\n        button:last-child {\n            margin-right: 0;\n        }\n\n        .resultBox {\n            background-color: #2d2d2d;\n            padding: 16px;\n            border-radius: 4px;\n            margin-bottom: 16px;\n        }\n\n        .resultBox > p {\n            margin: 8px 0;\n        }\n\n        .resultBox > button {\n            margin-right: 8px;\n        }\n\n        .resultBox > button:last-child {\n            margin-right: 0;\n        }\n\n        .code-preview {\n            max-height: 100px;\n            overflow: hidden;\n            white-space: pre-wrap;\n            transition: max-height 0.4s ease;\n            background: #1e1e1e;\n            padding: 10px;\n            border-radius: 4px;\n            font-family: 'Courier New', monospace;\n            font-size: 0.9rem;\n            color:#d4d4d4;\n            position:relative;\n        }\n\n        .code-preview.expanded {\n            max-height: unset;\n            overflow: auto;\n        }\n\n        .show-more {\n            display: inline-block;\n            text-align: center;\n            padding: 4px 12px;\n            padding: 8px;\n            margin-right: 8px;\n            background-color: #3c3c3c;\n            border: none;\n            border-radius: 4px;\n            color: #d4d4d4;\n            font-weight: bold;\n            cursor: pointer;\n        }\n\n        .show-more:hover {\n            color: #63a8ff;\n        }\n        .code-preview:before {\n        content: '';\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n        height: 30px;\n        background-image: linear-gradient(rgba(30, 30, 30, 0), rgba(30, 30, 30, 1));\n        opacity: 0;\n        transition: opacity 0.4s ease;\n        }\n\n        .code-preview:not(.expanded):before {\n        opacity: 1;\n        }\n    </style>\n</head>\n<body>\n    <header>\n        <span>\n            <!-- welltested in bright green color -->\n            <h1 style=\"color: rgb(134, 255, 134);\"  >WelltestedAI</h1>\n            <h1> Pebbles</h1>\n        </span>\n    </header>\n    <input type=\"search\" id=\"searchBar\" onclick=\"displayResults()\" placeholder=\"Search for code snippets\">\n    <div id=\"tabs\">\n        <button id=\"browseTab\">Browse</button>\n        <button id=\"favoritesTab\">Favorites</button>\n        <button id=\"mySnippetsTab\">My Snippets</button>\n    </div>\n    <div id=\"searchResults\"></div>\n    <script>\n        const searchResults = document.getElementById(\"searchResults\");\n\n      async  function displayResults() {\n            console.log(\"called displayResults\");\n            searchResults.innerHTML = \"\"; // Clear any previous results\n            console.log('called displayResults');\n            searchResults.innerHTML = ''; // Clear any previous results\n            const response = await fetch('http://localhost:3000/api/dummy-data');\n            const results = await response.json();\n\n            results.forEach((snippet) => {\n                const resultBox = document.createElement(\"div\");\n                const codePreview = snippet.code.split('\\n').slice(0, 5).join('\\n');\n                resultBox.classList.add(\"resultBox\");\n                resultBox.innerHTML =\n            '<span><h3 style=\"display: inline;\">' + snippet.title + '</h3> by: <span style=\"font-size: smaller;\">' + snippet.publisher + '</span></span>'+\n            // downloads and favorties with icons and numbers\n            '<span style=\"float: right;\">' +\n            \n            '<span style=\"font-size: big;\"> üìã ' + snippet.downloads + '</span>' +\n            '</span>' +\n           \n            \"<pre class='code-preview' id='code-preview-\" + snippet.id + \"'>\" + codePreview + \"</pre>\" +\n            \"<p class='show-more' id='show-more-\" + snippet.id + \"'>Show more</p>\" +\n           \n            \"<p>Description: \" + snippet.description + \"</p>\" +\n            '<button  onclick=\"selectedCode('+snippet.id+',false)\"   >Add to Code</button>' +\n            '<button onclick=\"selectedCode('+snippet.id+',true)\"   >Customize</button>' +\n            '<button>‚ù§Ô∏è 1456</button>'\n            ;\n\n                searchResults.appendChild(resultBox);\n                document.getElementById('show-more-' + snippet.id).addEventListener('click',async function () {\n                    const codePreviewElement = document.getElementById('code-preview-' + snippet.id);\n                    await showCodeWithLoader(1,codePreviewElement);\n                    codePreviewElement.classList.toggle(\"expanded\");\n                    this.innerText = codePreviewElement.classList.contains(\"expanded\") ? \"Show less\" : \"Show more\";\n                });\n            });\n        }\n        </script>\n        <script>\n        const vscode = acquireVsCodeApi();\n        // pass selected to vscode\n        function selectedCode(code, customize) {\n            console.log(\"selected code\");\n\n            const counter = document.getElementById('lines-of-code-counter');\n            if (customize) {\n                vscode.postMessage({\n                    command: 'customize',\n                    text: code,\n                });\n            } else {\n                vscode.postMessage({\n                    command: 'add',\n                    text: code,\n                });\n            }\n        }\n        </script>\n        <script>\n\n        async function showCodeWithLoader(id, codePreviewElement) {\n            // Display the loader\n            const loader = '<div class=\"loader\" style=\"display: inline-block;\" id=\"loader-' + id + '\">Loading...</div>';\n            codePreviewElement.innerHTML = loader;\n            \n            // Fetch the complete code using the API\n            const completeCode = await fetchCompleteCode(id);\n\n            // Remove the loader and show the retrieved code\n            codePreviewElement.innerHTML = completeCode;\n        }\n        async function fetchCompleteCode(id) {\n            const response = await fetch('http://localhost:3000/api/getfull');\n            const results = await response.text();\n            return results\n        }\n\n    </script>\n</body>\n</html>",
        "string",
        "string",
        "<!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; style-src 'unsafe-inline'; script-src 'unsafe-inline';\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <style>\n            body {\n                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n                background-color: #1e1e1e;\n                color: #d4d4d4;\n                padding: 16px;\n            }\n            \n            h1 {\n                font-size: 24px;\n                margin-bottom: 16px;\n            }\n    \n            form {\n                display: grid;\n                grid-template-columns: 1fr 2fr;\n                grid-gap: 8px;\n            }\n    \n            label {\n                text-align: right;\n                margin-right: 8px;\n                align-self: center;\n            }\n    \n            input, textarea {\n                border: 1px solid #454545;\n                border-radius: 4px;\n                background-color: #252526;\n                color: #d4d4d4;\n                padding: 8px;\n            }\n    \n            textarea {\n                resize: vertical;\n                min-height: 60px;\n            }\n    \n            .privacy {\n                display: flex;\n                align-items: center;\n            }\n    \n            .switch {\n                position: relative;\n                display: inline-block;\n                width: 60px;\n                height: 34px;\n            }\n    \n            .switch input {\n                opacity: 0;\n                width: 0;\n                height: 0;\n            }\n    \n            .slider {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                background-color: #ccc;\n                transition: 0.4s;\n                border-radius: 34px;\n            }\n    \n            .slider:before {\n                position: absolute;\n                content: \"\";\n                height: 26px;\n                width: 26px;\n                left: 4px;\n                bottom: 4px;\n                background-color: white;\n                border-radius: 50%;\n                transition: 0.4s;\n            }\n    \n            input:checked + .slider {\n                background-color: #3c3c3c;\n            }\n    \n            input:checked + .slider:before {\n                transform: translateX(26px);\n            }\n    \n            button {\n                grid-column: 2;\n                justify-self: start;\n                padding: 8px 16px;\n                background-color: #3c3c3c;\n                border: none;\n                border-radius: 4px;\n                color: #d4d4d4;\n                font-weight: bold;\n                cursor: pointer;\n            }\n            pre {\n                background-color: #2d2d2d;\n                border-radius: 4px;\n                padding: 16px;\n                overflow-x: auto;\n            }\n    \n            code {\n                font-family: 'Fira Code', Monaco, 'Courier New', Courier, monospace;\n                color: #acd9c1;\n            }\n        </style>\n    </head>\n    <body>\n        <h1>Pebble Details</h1>\n        <form>\n            <label for=\"snippetName\">Name:</label>\n            <input type=\"text\" id=\"snippetName\">\n            <label for=\"snippetDescription\">Description:</label>\n            <textarea id=\"snippetDescription\">${description}</textarea>\n            <label for=\"privateSwitch\">Private:</label>\n            <div class=\"privacy\">\n                <label class=\"switch\">\n                    <input type=\"checkbox\" id=\"privateSwitch\">\n                    <span class=\"slider\"></span>\n                </label>\n            </div>\n            <button type=\"submit\">Save Snippet</button>\n        </form>\n        <h2>Pebble Preview</h2>\n        <pre><code>${code}</code></pre>\n        <script>\n            // Send the selectedText to the extension when the form is submitted\n            document.querySelector(\"form\").addEventListener(\"submit\", (e) => {\n                e.preventDefault(); // Prevent the default form submission behavior\n    \n                const name = document.getElementById(\"snippetName\").value;\n                const description = document.getElementById(\"snippetDescription\").value;\n                const isPrivate = document.getElementById(\"privateSwitch\").checked;\n                \n                // Send the snippet details to the main extension\n                window.parent.postMessage(\n                    { command: \"saveSnippet\", name: name, description: description, private: isPrivate },\n                    \"*\"\n                );\n            });\n        </script>\n    </body>\n    </html>"
    ],
    "variables": [],
    "comments": [],
    "docstrings": [],
    "functions": [
        "getPebbleSearchPanelHtml",
        "getSavedPebblePanelHtml"
    ],
    "classes": []
}