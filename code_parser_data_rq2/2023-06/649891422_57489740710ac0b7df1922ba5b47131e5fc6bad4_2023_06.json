{
    "identifiers": [
        "typing",
        "Optional",
        "datetime",
        "datetime",
        "dt",
        "os",
        "requests",
        "logging",
        "jwt",
        "decode",
        "ExpiredSignatureError",
        "dotenv",
        "load_dotenv",
        "logging",
        "getLogger",
        "load_dotenv",
        "join",
        "os",
        "environ",
        "k",
        "k",
        "user_agent",
        "audience",
        "audience",
        "base_url_d",
        "audience",
        "Optional",
        "_init_tokens",
        "tokens",
        "_load",
        "_decoded",
        "ExpiredSignatureError",
        "log",
        "info",
        "audience",
        "refreshable",
        "tokens",
        "_load",
        "_decoded",
        "ExpiredSignatureError",
        "log",
        "info",
        "audience",
        "FileNotFoundError",
        "log",
        "info",
        "audience",
        "_update_tokens",
        "refresh",
        "name",
        "token",
        "tokens",
        "items",
        "log",
        "info",
        "audience",
        "name",
        "_exp",
        "name",
        "_save",
        "name",
        "refresh",
        "base_url_d",
        "refresh",
        "ubisoft_prod",
        "ubisoft_token_auth",
        "ubisoft_prod",
        "tokens",
        "requests",
        "post",
        "url",
        "token_url",
        "headers",
        "request_headers",
        "auth",
        "json",
        "audience",
        "assert_valid_response",
        "response",
        "response",
        "json",
        "refresh",
        "log",
        "info",
        "audience",
        "tokens",
        "tokens",
        "auth",
        "Optional",
        "base_headers",
        "auth",
        "name",
        "open",
        "name",
        "audience",
        "f",
        "f",
        "read",
        "name",
        "open",
        "name",
        "audience",
        "f",
        "f",
        "write",
        "tokens",
        "name",
        "name",
        "Optional",
        "decode",
        "tokens",
        "name",
        "options",
        "name",
        "dt",
        "dt",
        "fromtimestamp",
        "_decoded",
        "name",
        "response",
        "requests",
        "Response",
        "response",
        "status_code",
        "response",
        "text",
        "NadeoCredentials",
        "base_headers",
        "requests",
        "post",
        "url",
        "headers",
        "headers",
        "auth",
        "os",
        "environ",
        "os",
        "environ",
        "assert_valid_response",
        "ticket_response",
        "ticket_response",
        "json"
    ],
    "literals": [
        "\" / \"",
        "\"CLIENT_APP\"",
        "\"DISCORD_USERNAME\"",
        "\"CONTACT_EMAIL\"",
        "\"NadeoServices\"",
        "\"https://prod.trackmania.core.nadeo.online\"",
        "\"NadeoLiveServices\"",
        "\"https://live-services.trackmania.nadeo.live/api/token\"",
        "\"OAuth\"",
        "\"https://api.trackmania.com/api\"",
        "\"Content-Type\"",
        "\"application/json\"",
        "\"User-Agent\"",
        "f\"{user_agent}\"",
        "\"NadeoServices\"",
        "\"access\"",
        "\"refresh\"",
        "\"access\"",
        "\"access\"",
        "\"access\"",
        "f\"{self.audience} access token has expired.\"",
        "\"refresh\"",
        "\"refresh\"",
        "\"refresh\"",
        "f\"{self.audience} refresh token has expired.\"",
        "f\"No {self.audience} access token found.\"",
        "f\"New {self.audience} {name} token expires at {self._exp(name)}.\"",
        "f\"{base_url_d['NadeoServices']}/v2/authentication/token\"",
        "'NadeoServices'",
        "f\"{ubisoft_prod}/ubiservices\"",
        "f\"ubi_v1 t={ubisoft_token_auth()}\"",
        "f\"{ubisoft_prod}/refresh\"",
        "f\"nadeo_v1 t={self.tokens['refresh']}\"",
        "'refresh'",
        "\"audience\"",
        "f\"Refreshed {self.audience} access token.\"",
        "\"access\"",
        "\"accessToken\"",
        "\"refresh\"",
        "\"refreshToken\"",
        "\"Authorization\"",
        "f\"tokens/{name}_token_{self.audience}.txt\"",
        "\"r\"",
        "f\"tokens/{name}_token_{self.audience}.txt\"",
        "\"w\"",
        "\"verify_signature\"",
        "\"verify_exp\"",
        "\"verify_iat\"",
        "\"verify_nbf\"",
        "\"exp\"",
        "f\"Request failed: {response.text}\"",
        "\"Ubi-AppId\"",
        "\"86263886-327a-4328-ac69-527f0d20a237\"",
        "\"https://public-ubiservices.ubi.com/v3/profiles/sessions\"",
        "\"UBI_USERNAME\"",
        "\"UBI_PASSWORD\"",
        "\"ticket\""
    ],
    "variables": [
        "log",
        "user_agent",
        "base_url_d",
        "base_headers",
        "refreshable",
        "audience",
        "base_url",
        "tokens",
        "refresh",
        "refresh",
        "tokens",
        "ubisoft_prod",
        "token_url",
        "auth",
        "token_url",
        "auth",
        "response",
        "tokens",
        "headers",
        "ticket_response"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"Validates the access and refresh tokens, refreshing if necessary.\"\"\"",
        "\"\"\"Gets a token pair for the given audience, refreshing if necessary.\n\n        :param refresh: If True, refreshes the access token using the refresh token.\n        :return: dict with keys \"access\" and \"refresh\" and corresponding token strings.\n        \"\"\"",
        "\"\"\"Returns the headers for a request to the given audience, with header[\"Authorization\"] = auth.\"\"\"",
        "\"\"\"Asserts that the response gives a 200 status code.\"\"\"",
        "\"\"\"Gets Ubisoft ticket and returns the corresponding encoded JWT string.\"\"\""
    ],
    "functions": [
        "_init_tokens",
        "_update_tokens",
        "request_headers",
        "_load",
        "_save",
        "_decoded",
        "_exp",
        "assert_valid_response",
        "ubisoft_token_auth"
    ],
    "classes": [
        "NadeoCredentials"
    ]
}