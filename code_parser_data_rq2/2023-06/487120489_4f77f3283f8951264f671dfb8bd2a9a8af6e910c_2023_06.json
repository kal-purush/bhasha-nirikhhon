{
    "identifiers": [
        "argparse",
        "os",
        "re",
        "subprocess",
        "tempfile",
        "warnings",
        "cssselect",
        "tinycss",
        "lxml",
        "etree",
        "lxml",
        "html",
        "html5parser",
        "text",
        "text",
        "result",
        "SUPERSCRIPTS",
        "KeyError",
        "text",
        "result",
        "text",
        "text",
        "result",
        "SUBSCRIPTS",
        "KeyError",
        "text",
        "result",
        "args",
        "args",
        "filename",
        "os",
        "path",
        "basename",
        "filename",
        "open",
        "filename",
        "encoding",
        "file",
        "file",
        "read",
        "UnicodeError",
        "open",
        "filename",
        "encoding",
        "file",
        "file",
        "read",
        "FileNotFoundError",
        "ex",
        "FileNotFoundError",
        "filename",
        "ex",
        "len",
        "text",
        "SyntaxError",
        "filename",
        "NotImplementedError",
        "NotImplementedError",
        "PgdpFile",
        "args",
        "args",
        "filename",
        "filename",
        "lower",
        "endswith",
        "SyntaxError",
        "filename",
        "load",
        "filename",
        "lineno",
        "line",
        "text",
        "splitlines",
        "start",
        "line",
        "startswith",
        "PG_EBOOK_START",
        "start_found",
        "line",
        "endswith",
        "lineno",
        "line",
        "startswith",
        "PG_EBOOK_END",
        "new_text",
        "append",
        "line",
        "join",
        "new_text",
        "re",
        "sub",
        "text",
        "text",
        "replace",
        "markup",
        "text",
        "replace",
        "markup",
        "args",
        "ignore_format",
        "tag",
        "text",
        "replace",
        "tag",
        "tag",
        "text",
        "replace",
        "tag",
        "tag",
        "text",
        "replace",
        "tag",
        "args",
        "css_bold",
        "re",
        "sub",
        "text",
        "args",
        "suppress_proofers_notes",
        "re",
        "sub",
        "text",
        "args",
        "regroup_split_words",
        "key",
        "value",
        "word_splits",
        "items",
        "re",
        "sub",
        "key",
        "value",
        "text",
        "args",
        "ignore_format",
        "re",
        "sub",
        "text",
        "re",
        "sub",
        "text",
        "re",
        "sub",
        "text",
        "args",
        "ignore_format",
        "args",
        "suppress_footnote_tags",
        "re",
        "sub",
        "text",
        "flags",
        "re",
        "MULTILINE",
        "re",
        "sub",
        "text",
        "flags",
        "re",
        "MULTILINE",
        "args",
        "ignore_format",
        "args",
        "suppress_illustration_tags",
        "re",
        "sub",
        "text",
        "flags",
        "re",
        "MULTILINE",
        "text",
        "replace",
        "args",
        "ignore_format",
        "args",
        "suppress_sidenote_tags",
        "re",
        "sub",
        "text",
        "flags",
        "re",
        "MULTILINE",
        "staticmethod",
        "match",
        "to_superscript",
        "match",
        "group",
        "re",
        "sub",
        "PgdpFileText",
        "match_to_superscript",
        "text",
        "staticmethod",
        "match",
        "to_subscript",
        "match",
        "group",
        "re",
        "sub",
        "PgdpFileText",
        "match_to_subscript",
        "text",
        "from_pgdp_rounds",
        "args",
        "txt_cleanup_type",
        "remove_paging",
        "args",
        "txt_cleanup_type",
        "remove_block_markup",
        "remove_formatting",
        "suppress_proofers_notes",
        "regroup_split_words",
        "strip_pg_boilerplate",
        "ignore_format",
        "remove_thought_breaks",
        "args",
        "extract_footnotes",
        "from_pgdp_rounds",
        "extract_footnotes_pgdp",
        "extract_footnotes_pp",
        "suppress_footnote_tags",
        "suppress_illustration_tags",
        "suppress_sidenote_tags",
        "superscripts",
        "subscripts",
        "line",
        "text",
        "splitlines",
        "line",
        "line",
        "footnotes",
        "append",
        "re",
        "sub",
        "line",
        "in_footnote",
        "join",
        "footnotes",
        "line",
        "line",
        "endswith",
        "footnotes",
        "line",
        "endswith",
        "footnotes",
        "text",
        "append",
        "line",
        "join",
        "text",
        "join",
        "footnotes",
        "len",
        "regexes",
        "text_block",
        "_",
        "get_block",
        "text_block",
        "i",
        "regex",
        "_",
        "regexes",
        "re",
        "match",
        "regex",
        "text_block",
        "match_counts",
        "i",
        "max",
        "match_counts",
        "regexes",
        "match_counts",
        "index",
        "footnote_count",
        "new_block",
        "empty_lines",
        "get_block",
        "new_block",
        "re",
        "match",
        "regex",
        "new_block",
        "matches",
        "fn_type",
        "matches",
        "group",
        "current_fn_type",
        "next_fn_type",
        "footnotes",
        "current_block",
        "new_text",
        "len",
        "current_block",
        "next_fn_type",
        "new_block",
        "startswith",
        "current_block",
        "new_block",
        "footnotes",
        "current_block",
        "new_text",
        "len",
        "current_block",
        "current_fn_type",
        "next_fn_type",
        "next_fn_type",
        "current_fn_type",
        "empty_lines",
        "current_fn_type",
        "new_block",
        "endswith",
        "current_fn_type",
        "new_block",
        "endswith",
        "new_block",
        "footnotes",
        "new_block",
        "new_text",
        "len",
        "new_block",
        "current_fn_type",
        "new_text",
        "new_block",
        "empty_lines",
        "footnotes",
        "len",
        "new_block",
        "empty_lines",
        "new_block",
        "join",
        "new_text",
        "join",
        "footnotes",
        "footnote_count",
        "text",
        "splitlines",
        "line",
        "text_lines",
        "len",
        "line",
        "empty_lines",
        "block",
        "empty_lines",
        "block",
        "line",
        "empty_lines",
        "block",
        "empty_lines",
        "PgdpFile",
        "args",
        "args",
        "warnings",
        "filterwarnings",
        "message",
        "html5parser",
        "HTMLParser",
        "namespaceHTMLElements",
        "html5parser",
        "document_fromstring",
        "text",
        "parser",
        "myparser",
        "tree",
        "getroottree",
        "myparser",
        "errors",
        "etree",
        "HTMLParser",
        "etree",
        "fromstring",
        "text",
        "parser",
        "myparser",
        "x",
        "x",
        "myparser",
        "error_log",
        "myparser",
        "error_log",
        "tree",
        "getroottree",
        "errors",
        "filename",
        "filename",
        "lower",
        "endswith",
        "SyntaxError",
        "filename",
        "load",
        "filename",
        "text",
        "find",
        "tree",
        "parse_html5",
        "tree",
        "parse_html",
        "ex",
        "SyntaxError",
        "filename",
        "ex",
        "errors",
        "error",
        "errors",
        "error",
        "SyntaxError",
        "filename",
        "lineno",
        "line",
        "text",
        "splitlines",
        "start",
        "line",
        "lineno",
        "tree",
        "find",
        "head",
        "head",
        "getparent",
        "remove",
        "head",
        "text",
        "find",
        "PG_EBOOK_START",
        "node",
        "tree",
        "find",
        "iter",
        "node",
        "tag",
        "node",
        "text",
        "node",
        "text",
        "startswith",
        "PG_EBOOK_START",
        "node",
        "tag",
        "node",
        "text",
        "node",
        "text",
        "startswith",
        "PG_EBOOK_END",
        "end_found",
        "start_found",
        "lineno",
        "line",
        "text",
        "splitlines",
        "start",
        "PG_EBOOK_START",
        "line",
        "lineno",
        "args",
        "css_smcap",
        "transforms",
        "mycss",
        "transforms",
        "args",
        "css_smcap",
        "mycss",
        "args",
        "css_bold",
        "args",
        "css_add_illustration",
        "figclass",
        "mycss",
        "figclass",
        "mycss",
        "figclass",
        "args",
        "css_add_sidenote",
        "mycss",
        "mycss",
        "args",
        "css_greek_title_plus",
        "mycss",
        "css",
        "args",
        "css",
        "mycss",
        "css",
        "args",
        "suppress_nbsp_num",
        "re",
        "sub",
        "text",
        "re",
        "sub",
        "text",
        "strip_pg_boilerplate",
        "args",
        "css_no_default",
        "DEFAULT_TRANSFORM_CSS",
        "css_smallcaps",
        "css_bold",
        "css_illustration",
        "css_sidenote",
        "css_custom_css",
        "process_css",
        "extract_footnotes",
        "etree",
        "XPath",
        "tree",
        "remove_nbspaces",
        "remove_soft_hyphen",
        "staticmethod",
        "val",
        "errors",
        "len",
        "val",
        "value",
        "errors",
        "val",
        "line",
        "val",
        "column",
        "val",
        "name",
        "val",
        "value",
        "value",
        "value",
        "x",
        "x",
        "upper",
        "value",
        "x",
        "x",
        "lower",
        "value",
        "x",
        "x",
        "title",
        "value",
        "x",
        "to_superscript",
        "x",
        "value",
        "x",
        "to_subscript",
        "x",
        "errors",
        "val",
        "line",
        "val",
        "column",
        "val",
        "name",
        "staticmethod",
        "val",
        "errors",
        "v",
        "v",
        "val",
        "value",
        "v",
        "len",
        "values",
        "errors",
        "val",
        "line",
        "val",
        "column",
        "val",
        "name",
        "x",
        "x",
        "replace",
        "values",
        "value",
        "values",
        "value",
        "staticmethod",
        "val",
        "errors",
        "v",
        "v",
        "val",
        "value",
        "v",
        "len",
        "values",
        "errors",
        "val",
        "line",
        "val",
        "column",
        "val",
        "name",
        "value",
        "values",
        "value",
        "value",
        "f_move",
        "append",
        "el",
        "el",
        "getparent",
        "value",
        "value",
        "f_move",
        "append",
        "el",
        "el",
        "getprevious",
        "value",
        "value",
        "f_move",
        "append",
        "el",
        "el",
        "getnext",
        "errors",
        "val",
        "line",
        "val",
        "column",
        "val",
        "name",
        "value",
        "value",
        "f_move",
        "tinycss",
        "make_parser",
        "parse_stylesheet",
        "mycss",
        "elem",
        "move_list",
        "elem",
        "getparent",
        "elem",
        "item",
        "move_list",
        "item",
        "elem",
        "tail",
        "elem",
        "getprevious",
        "sibling",
        "sibling",
        "tail",
        "elem",
        "tail",
        "parent",
        "text",
        "elem",
        "tail",
        "parent",
        "remove",
        "elem",
        "append",
        "elem",
        "elem",
        "val",
        "val",
        "name",
        "new_content",
        "elem",
        "val",
        "selector",
        "pseudo_element",
        "v_content",
        "elem",
        "text",
        "selector",
        "pseudo_element",
        "v_content",
        "elem",
        "tail",
        "new_content",
        "elem",
        "val",
        "f_replace_with_attr",
        "f_replace_with_attr",
        "elem",
        "f_transform",
        "text_apply",
        "elem",
        "f_transform",
        "f_element_func",
        "f_element_func",
        "elem",
        "f_move",
        "_move_element",
        "elem",
        "f_move",
        "rule",
        "stylesheet",
        "rules",
        "value",
        "rule",
        "declarations",
        "value",
        "name",
        "value",
        "name",
        "_text_transform",
        "value",
        "property_errors",
        "value",
        "name",
        "_text_replace",
        "value",
        "property_errors",
        "value",
        "name",
        "elem",
        "elem",
        "attrib",
        "value",
        "value",
        "value",
        "value",
        "name",
        "PgdpFileHtml",
        "clear_element",
        "value",
        "name",
        "_text_move",
        "value",
        "property_errors",
        "property_errors",
        "value",
        "line",
        "value",
        "column",
        "value",
        "name",
        "selector",
        "cssselect",
        "parse",
        "rule",
        "selector",
        "as_css",
        "cssselect",
        "HTMLTranslator",
        "selector_to_xpath",
        "selector",
        "etree",
        "XPath",
        "xpath",
        "element",
        "find",
        "tree",
        "_process_element",
        "element",
        "value",
        "css_errors",
        "stylesheet",
        "errors",
        "property_errors",
        "stylesheet_errors",
        "property_errors",
        "stylesheet_errors",
        "property_errors",
        "args",
        "css_no_default",
        "DEFAULT_TRANSFORM_CSS",
        "count",
        "err",
        "stylesheet_errors",
        "css_errors",
        "err",
        "line",
        "i",
        "err",
        "column",
        "err",
        "reason",
        "err",
        "property_errors",
        "css_errors",
        "err",
        "i",
        "err",
        "err",
        "css_errors",
        "css_errors",
        "staticmethod",
        "elem",
        "val",
        "element",
        "element",
        "group",
        "decode",
        "UnicodeDecodeError",
        "element",
        "group",
        "re",
        "compile",
        "token",
        "val",
        "value",
        "token",
        "result",
        "escaped_unicode_re",
        "sub",
        "_escaped_unicode",
        "token",
        "value",
        "token",
        "token",
        "function_name",
        "result",
        "elem",
        "attrib",
        "get",
        "token",
        "content",
        "value",
        "token",
        "token",
        "value",
        "result",
        "elem",
        "text",
        "result",
        "staticmethod",
        "tree_elem",
        "func",
        "tree_elem",
        "text",
        "func",
        "tree_elem",
        "text",
        "sub",
        "tree_elem",
        "iter",
        "sub",
        "tree_elem",
        "sub",
        "text",
        "func",
        "sub",
        "text",
        "sub",
        "tail",
        "func",
        "sub",
        "tail",
        "staticmethod",
        "element",
        "element",
        "tail",
        "element",
        "clear",
        "tail",
        "regex",
        "re",
        "match",
        "regex",
        "re",
        "DOTALL",
        "match",
        "match",
        "group",
        "args",
        "extract_footnotes",
        "etree",
        "XPath",
        "tree",
        "len",
        "elements",
        "footnotes",
        "strip_note_tag",
        "elements",
        "xpath",
        "elements",
        "getparent",
        "remove",
        "elements",
        "find",
        "element",
        "etree",
        "XPath",
        "find",
        "tree",
        "footnotes",
        "strip_note_tag",
        "element",
        "xpath",
        "element",
        "getparent",
        "remove",
        "element",
        "footnotes",
        "join",
        "footnotes",
        "args",
        "args",
        "i",
        "fname",
        "args",
        "filename",
        "fname",
        "lower",
        "endswith",
        "PgdpFileHtml",
        "args",
        "PgdpFileText",
        "args",
        "files",
        "i",
        "load",
        "fname",
        "files",
        "i",
        "cleanup",
        "check_characters",
        "files",
        "compare_texts",
        "files",
        "text",
        "files",
        "text",
        "args",
        "extract_footnotes",
        "compare_texts",
        "files",
        "footnotes",
        "files",
        "footnotes",
        "create_html",
        "files",
        "main_diff",
        "fnotes_diff",
        "html_content",
        "files",
        "basename",
        "files",
        "basename",
        "text1",
        "text2",
        "tempfile",
        "NamedTemporaryFile",
        "mode",
        "encoding",
        "temp1",
        "tempfile",
        "NamedTemporaryFile",
        "mode",
        "encoding",
        "temp2",
        "temp1",
        "write",
        "text1",
        "temp1",
        "flush",
        "temp2",
        "write",
        "text2",
        "temp2",
        "flush",
        "os",
        "environ",
        "get",
        "repo_dir",
        "os",
        "path",
        "join",
        "repo_dir",
        "dwdiff_path",
        "args",
        "ignore_case",
        "cmd",
        "cmd",
        "temp1",
        "name",
        "temp2",
        "name",
        "subprocess",
        "Popen",
        "cmd",
        "stdout",
        "subprocess",
        "PIPE",
        "process",
        "process",
        "stdout",
        "read",
        "decode",
        "files",
        "text",
        "footnotes",
        "txt",
        "start0",
        "start1",
        "txt",
        "key",
        "value",
        "replacements",
        "items",
        "newtext",
        "replace",
        "key",
        "value",
        "newtext",
        "newtext",
        "newtext",
        "replace",
        "re",
        "sub",
        "m",
        "m",
        "group",
        "start0",
        "m",
        "group",
        "start1",
        "newtext",
        "flags",
        "re",
        "MULTILINE",
        "newtext",
        "newtext",
        "newtext",
        "text",
        "len",
        "re",
        "findall",
        "text",
        "massage_input",
        "text",
        "files",
        "start_line",
        "files",
        "start_line",
        "diffs_text",
        "html_content",
        "diffs_text",
        "html_content",
        "html_content",
        "diffs_text",
        "footnotes",
        "len",
        "re",
        "findall",
        "footnotes",
        "massage_input",
        "footnotes",
        "html_content",
        "diffs_footnotes",
        "html_content",
        "diffs_footnotes",
        "html_content",
        "html_content",
        "diffs_footnotes",
        "args",
        "extract_footnotes",
        "html_content",
        "diffs_text",
        "html_content",
        "html_content",
        "text",
        "footnotes",
        "html_content",
        "html_content",
        "footnotes",
        "html_content",
        "html_content",
        "args",
        "filename",
        "lower",
        "endswith",
        "PgdpFileHtml",
        "args",
        "html_file",
        "load",
        "args",
        "filename",
        "html_file",
        "cleanup",
        "html_file",
        "text",
        "open",
        "encoding",
        "file",
        "file",
        "write",
        "html_file",
        "text",
        "staticmethod",
        "files",
        "char_best",
        "char_other",
        "character_checks",
        "items",
        "files",
        "text",
        "find",
        "char_best",
        "files",
        "text",
        "find",
        "char_best",
        "finds_0",
        "finds_1",
        "finds_0",
        "finds_1",
        "finds_0",
        "files",
        "files",
        "text",
        "replace",
        "char_best",
        "char_other",
        "files",
        "files",
        "text",
        "replace",
        "char_best",
        "char_other",
        "files",
        "footnotes",
        "files",
        "footnotes",
        "char_best",
        "char_other",
        "character_checks",
        "items",
        "files",
        "footnotes",
        "find",
        "char_best",
        "files",
        "footnotes",
        "find",
        "char_best",
        "finds_0",
        "finds_1",
        "finds_0",
        "finds_1",
        "finds_0",
        "files",
        "files",
        "footnotes",
        "replace",
        "char_best",
        "char_other",
        "files",
        "files",
        "footnotes",
        "replace",
        "char_best",
        "char_other",
        "filename1",
        "filename2",
        "filename1",
        "filename2",
        "html_content",
        "filename1",
        "filename2",
        "css",
        "filename1",
        "filename2",
        "DIFF_CSS",
        "filename1",
        "filename2",
        "html_usage",
        "filename1",
        "filename2",
        "css",
        "join",
        "css",
        "html_content",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "nargs",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "parse_args",
        "args",
        "extract_footnotes",
        "args",
        "suppress_footnote_tags",
        "SyntaxError",
        "PPComp",
        "args",
        "args",
        "simple_html",
        "compare",
        "simple_html",
        "compare",
        "do_process",
        "output_html",
        "html_content",
        "file1",
        "file2",
        "args",
        "css",
        "tree",
        "open",
        "encoding",
        "file",
        "node",
        "tree",
        "iter",
        "node",
        "text",
        "file",
        "write",
        "node",
        "tag",
        "node",
        "text",
        "file",
        "write",
        "node",
        "tag",
        "main"
    ],
    "literals": [
        "'*** START OF'",
        "'*** END OF'",
        "'0'",
        "'⁰'",
        "'1'",
        "'¹'",
        "'2'",
        "'²'",
        "'3'",
        "'³'",
        "'4'",
        "'⁴'",
        "'5'",
        "'⁵'",
        "'6'",
        "'⁶'",
        "'7'",
        "'⁷'",
        "'8'",
        "'⁸'",
        "'9'",
        "'⁹'",
        "'a'",
        "'ᵃ'",
        "'b'",
        "'ᵇ'",
        "'c'",
        "'ᶜ'",
        "'d'",
        "'ᵈ'",
        "'e'",
        "'ᵉ'",
        "'f'",
        "'ᶠ'",
        "'g'",
        "'ᵍ'",
        "'h'",
        "'ʰ'",
        "'i'",
        "'ⁱ'",
        "'j'",
        "'ʲ'",
        "'k'",
        "'ᵏ'",
        "'l'",
        "'ˡ'",
        "'m'",
        "'ᵐ'",
        "'n'",
        "'ⁿ'",
        "'o'",
        "'ᵒ'",
        "'p'",
        "'ᵖ'",
        "'r'",
        "'ʳ'",
        "'s'",
        "'ˢ'",
        "'t'",
        "'ᵗ'",
        "'u'",
        "'ᵘ'",
        "'v'",
        "'ᵛ'",
        "'w'",
        "'ʷ'",
        "'x'",
        "'ˣ'",
        "'y'",
        "'ʸ'",
        "'z'",
        "'ᶻ'",
        "'A'",
        "'ᴬ'",
        "'B'",
        "'ᴮ'",
        "'D'",
        "'ᴰ'",
        "'E'",
        "'ᴱ'",
        "'G'",
        "'ᴳ'",
        "'H'",
        "'ᴴ'",
        "'I'",
        "'ᴵ'",
        "'J'",
        "'ᴶ'",
        "'K'",
        "'ᴷ'",
        "'L'",
        "'ᴸ'",
        "'M'",
        "'ᴹ'",
        "'N'",
        "'ᴺ'",
        "'O'",
        "'ᴼ'",
        "'P'",
        "'ᴾ'",
        "'R'",
        "'ᴿ'",
        "'T'",
        "'ᵀ'",
        "'U'",
        "'ᵁ'",
        "'V'",
        "'ⱽ'",
        "'W'",
        "'ᵂ'",
        "'Æ'",
        "'ᴭ'",
        "'œ'",
        "'ꟹ'",
        "'0'",
        "'₀'",
        "'1'",
        "'₁'",
        "'2'",
        "'₂'",
        "'3'",
        "'₃'",
        "'4'",
        "'₄'",
        "'5'",
        "'₅'",
        "'6'",
        "'₆'",
        "'7'",
        "'₇'",
        "'8'",
        "'₈'",
        "'9'",
        "'₉'",
        "'a'",
        "'ₐ'",
        "'e'",
        "'ₑ'",
        "'h'",
        "'ₕ'",
        "'i'",
        "'ᵢ'",
        "'j'",
        "'ⱼ'",
        "'k'",
        "'ₖ'",
        "'l'",
        "'ₗ'",
        "'m'",
        "'ₘ'",
        "'n'",
        "'ₙ'",
        "'o'",
        "'ₒ'",
        "'p'",
        "'ₚ'",
        "'r'",
        "'ᵣ'",
        "'s'",
        "'ₛ'",
        "'t'",
        "'ₜ'",
        "'u'",
        "'ᵤ'",
        "'v'",
        "'ᵥ'",
        "'x'",
        "'ₓ'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'r'",
        "'utf-8'",
        "'r'",
        "'latin-1'",
        "\"Cannot load file: \"",
        "\"File is too short: \"",
        "\"Override this method\"",
        "\"Override this method\"",
        "'.txt'",
        "\"Not a text file: \"",
        "\"***\"",
        "'\\n'",
        "r\"-----File: \\w+.png.*\"",
        "''",
        "\"[Blank Page]\"",
        "''",
        "'/*'",
        "'*/'",
        "'/#'",
        "'#/'",
        "'/P'",
        "'P/'",
        "'/F'",
        "'F/'",
        "'/X'",
        "'X/'",
        "'\\n'",
        "'\\n'",
        "'\\n\\n'",
        "'<i>'",
        "'</i>'",
        "'<b>'",
        "'</b>'",
        "''",
        "'<i>'",
        "'</i>'",
        "'_'",
        "'<b>'",
        "'</b>'",
        "'<.*?>'",
        "''",
        "r\"\\[\\*\\*[^]]*?]\"",
        "''",
        "r\"(\\w+)-\\*(\\n+)\\*\"",
        "r\"\\n\\1\"",
        "r\"(\\w+)-\\*(\\w+)\"",
        "r\"\\1\\2\"",
        "r\"_((.|\\n)+?)_\"",
        "r'\\1'",
        "r\"=((.|\\n)+?)=\"",
        "r'\\1'",
        "r\"\\n(?:[ \\t]+[*•]){4,}\"",
        "'\\n'",
        "r\"[\\[]*Footnote ([\\d\\w]+):\\s([^]]*?)[\\]]*\"",
        "r\"\\1 \\2\"",
        "r\"\\*\\[Footnote:\\s([^]]*?)]\"",
        "r'\\1'",
        "r\"\\[Illustration?:([^]]*?)]\"",
        "r'\\1'",
        "\"[Illustration]\"",
        "''",
        "r\"\\[Sidenote:([^]]*?)]\"",
        "r'\\1'",
        "r\"\\^{?([\\w\\d]+)}?\"",
        "r\"_{([\\w\\d]+)}\"",
        "'n'",
        "'p'",
        "'[Footnote'",
        "'*[Footnote'",
        "''",
        "r'\\*?\\[Footnote\\s?[\\w\\d]*:\\s?'",
        "''",
        "'\\n'",
        "']'",
        "']*'",
        "'\\n'",
        "'\\n'",
        "r\"\\s*\\[([\\w-]{1,4})\\]( .*|$)\"",
        "r\"\\s*Footnote (\\d+):( .*|$)\"",
        "r\"\\s*\\[Footnote (\\d+):( .*|$)\"",
        "r\"\\s*Note (\\d+):( .*|$)\"",
        "r\"\\s*\\[Note (\\d+):( .*|$)\"",
        "r\"\\s*([⁰¹²³⁴⁵⁶⁷⁸⁹]+)( .*|$)\"",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "']'",
        "']'",
        "''",
        "''",
        "''",
        "'\\n'",
        "'\\n'",
        "''",
        "'ignore'",
        "'Coercing non-XML name: xml:lang'",
        "'.html'",
        "'.htm'",
        "'.xhtml'",
        "'Not an html file: '",
        "'<!DOCTYPE html>'",
        "'File cannot be parsed: '",
        "'Parsing errors in document: '",
        "'<body'",
        "'head'",
        "'body'",
        "'div'",
        "''",
        "''",
        "'div'",
        "''",
        "''",
        "'U'",
        "'uppercase'",
        "'L'",
        "'lowercase'",
        "'T'",
        "'capitalize'",
        "f\".smcap {{ text-transform:{transforms[self.args.css_smcap]}; }}\"",
        "'b::before, b::after { content: \"'",
        "'\"; }'",
        "'figcenter'",
        "'figleft'",
        "'figright'",
        "'.'",
        "'::before { content: \"[Illustration: \"; }'",
        "'.'",
        "'::after { content: \"]\"; }'",
        "'.sidenote::before { content: \"[Sidenote: \"; }'",
        "'.sidenote::after { content: \"]\"; }'",
        "'*[lang=grc] { content: \"+\" attr(title) \"+\"; }'",
        "r\"(\\d)\\u00A0(\\d)\"",
        "r\"\\1\\2\"",
        "r\"\\u00AD\"",
        "r\"\"",
        "\"string(/)\"",
        "\" takes 1 argument\"",
        "'uppercase'",
        "'lowercase'",
        "'capitalize'",
        "'superscript'",
        "'subscript'",
        "\" accepts only 'uppercase', 'lowercase', 'capitalize',\"",
        "\" 'superscript', or 'subscript'\"",
        "\"S\"",
        "\" takes 2 string arguments\"",
        "\"S\"",
        "\" takes at least one argument\"",
        "'parent'",
        "'prev-sib'",
        "'next-sib'",
        "\" invalid value \"",
        "''",
        "''",
        "'content'",
        "'before'",
        "''",
        "'after'",
        "''",
        "'content'",
        "'text-transform'",
        "'text-replace'",
        "'_replace_with_attr'",
        "'display'",
        "'_graft'",
        "\"Unsupported property \"",
        "''",
        "\"<div class='error-border bbox'><p>Error(s) in the\"",
        "\"  transformation CSS:</p><ul>\"",
        "'\\n'",
        "f\"<li>{err.line - i},{err.column}: {err.reason}</li>\"",
        "f\"<li>{err[0] - i},{err[1]}: {err[2]}</li>\"",
        "\"</ul>\"",
        "'utf8'",
        "'unicode-escape'",
        "r\"\\\\u[0-9a-fA-F]{4}\"",
        "\"\"",
        "\"STRING\"",
        "\"FUNCTION\"",
        "'attr'",
        "\"\"",
        "\"IDENT\"",
        "\"content\"",
        "r\"\\s*\\[([\\w-]+)\\](.*)\"",
        "r\"\\s*([\\d]+)\\s+(.*)\"",
        "r\"\\s*([\\d]+):(.*)\"",
        "r\"\\s*Note ([\\d]+):\\s+(.*)\"",
        "\"//div[@class='footnote']\"",
        "\"string()\"",
        "\"//div[@class='footnote']\"",
        "\"//div[@id[starts-with(.,'FN_')]]\"",
        "\"//p[a[@id[starts-with(.,'Footnote_')]]]\"",
        "\"//div/p[span/a[@id[starts-with(.,'Footnote_')]]]\"",
        "\"//p[@class='footnote']\"",
        "\"string()\"",
        "\"\\n\"",
        "'.html'",
        "'.htm'",
        "'.xhtml'",
        "\"\"",
        "'w'",
        "'utf-8'",
        "'w'",
        "'utf-8'",
        "'OPENSHIFT_DATA_DIR'",
        "''",
        "'bin'",
        "'dwdiff'",
        "'dwdiff'",
        "\"-P\"",
        "\"-R\"",
        "\"-C 2\"",
        "\"-L\"",
        "\"-w ]COMPPP_START_DEL[\"",
        "\"-x ]COMPPP_STOP_DEL[\"",
        "\"-y ]COMPPP_START_INS[\"",
        "\"-z ]COMPPP_STOP_INS[\"",
        "\"--ignore-case\"",
        "'utf-8'",
        "\"&\"",
        "\"&amp;\"",
        "\"<\"",
        "\"&lt;\"",
        "\">\"",
        "\"&gt;\"",
        "\"]COMPPP_START_DEL[\"",
        "\"<del>\"",
        "\"]COMPPP_STOP_DEL[\"",
        "\"</del>\"",
        "\"]COMPPP_START_INS[\"",
        "\"<ins>\"",
        "\"]COMPPP_STOP_INS[\"",
        "\"</ins>\"",
        "\"<hr /><pre>\\n\"",
        "\"\\n--\\n\"",
        "\"\\n</pre><hr /><pre>\\n\"",
        "r\"^\\s*(\\d+):(\\d+)\"",
        "f\"<span class='lineno'>{int(m.group(1)) + start0}\"",
        "f\" : {int(m.group(2)) + start1}</span>\"",
        "\"</pre>\\n\"",
        "\"\\n--\\n\"",
        "\"<div>\"",
        "\"<p>There is no diff section in the main text.</p>\"",
        "\"<p>There is 1 diff section in the main text.</p>\"",
        "f\"<p>There are <b>{diffs_text}</b> diff sections in the main text.</p>\"",
        "\"\\n--\\n\"",
        "\"\"",
        "\"<p>Footnotes are diff'ed separately <a href='#footnotes'>here</a></p>\"",
        "\"<p>There is no diff section in the footnotes.</p>\"",
        "\"<p>There is 1 diff section in the footnotes.</p>\"",
        "f\"<p>There are {diffs_footnotes}\"",
        "\" diff sections in the footnotes.</p>\"",
        "\"<p>There is no diff section in the footnotes.</p>\"",
        "\"<h2>Main text</h2>\"",
        "\"<h2 id='footnotes'>Footnotes</h2>\"",
        "\"<pre>\"",
        "\"</pre>\"",
        "\"</div>\"",
        "'.html'",
        "'.htm'",
        "'Error: 1st file must be an html file'",
        "'outhtml.txt'",
        "'w'",
        "'utf-8'",
        "'’'",
        "\"'\"",
        "'‘'",
        "\"'\"",
        "'”'",
        "'\"'",
        "'“'",
        "'\"'",
        "'–'",
        "'-'",
        "'—'",
        "'--'",
        "'⁄'",
        "'/'",
        "\"′\"",
        "\"'\"",
        "'″'",
        "\"''\"",
        "'‴'",
        "\"'''\"",
        "'½'",
        "'-1/2'",
        "'¼'",
        "'-1/4'",
        "'¾'",
        "'-3/4'",
        "f\"\"\"\n    <div class=\"bbox\">\n      <p class=\"center\">— Note —</p>\n      <p>The first number is the line number in the first file (<b>{filename1}</b>)<br />\n        The second number is the line number in the second file (<b>{filename2}</b>)<br />\n        Line numbers can sometimes be very approximate.</p>\n      <p>Deleted words that were in the first file but not in the second will appear <del>like\n         this</del>.<br />\n        Inserted words that were in the second file but not in the first will appear <ins>like\n         this</ins>.</p>\n    </div>\n    \"\"\"",
        "\" and \"",
        "f'<h1>Diff of <span class=\"first\">{filename1}</span> and'",
        "f' <span class=\"second\">{filename2}</span></h1>'",
        "'<p>Custom CSS added on command line: '",
        "\" \"",
        "'</p>'",
        "'Diff text/HTML documents for PGDP'",
        "' Post-Processors.'",
        "'filename'",
        "'FILENAME'",
        "'input files'",
        "'--ignore-case'",
        "'store_true'",
        "'Ignore case when comparing'",
        "'--extract-footnotes'",
        "'store_true'",
        "'Extract and process footnotes separately'",
        "'--suppress-footnote-tags'",
        "'store_true'",
        "'TXT: Suppress \"[Footnote #:\" marks'",
        "'--suppress-illustration-tags'",
        "'store_true'",
        "'TXT: Suppress \"[Illustration:\" marks'",
        "'--suppress-sidenote-tags'",
        "'store_true'",
        "'TXT: Suppress \"[Sidenote:\" marks'",
        "'--ignore-format'",
        "'store_true'",
        "'In Px/Fx versions, silence formatting differences'",
        "'--suppress-proofers-notes'",
        "'store_true'",
        "\"In Px/Fx versions, remove [**proofreaders notes]\"",
        "'--regroup-split-words'",
        "'store_true'",
        "\"In Px/Fx versions, regroup split wo-* *rds\"",
        "'--txt-cleanup-type'",
        "'b'",
        "\"TXT: In Px/Fx versions, type of text cleaning -- (b)est effort,\"",
        "\" (n)one, (p)roofers\"",
        "'--css-add-illustration'",
        "'store_true'",
        "\"HTML: add [Illustration ] tag\"",
        "'--css-add-sidenote'",
        "'store_true'",
        "\"HTML: add [Sidenote: ...]\"",
        "'--css-smcap'",
        "\"HTML: Transform small caps into uppercase (U), lowercase (L) or\"",
        "\" title case (T)\"",
        "'--css-bold'",
        "'='",
        "\"HTML: Surround bold strings with this string\"",
        "'--css'",
        "'append'",
        "\"HTML: Insert transformation CSS\"",
        "'--css-no-default'",
        "'store_true'",
        "\"HTML: do not use default transformation CSS\"",
        "'--suppress-nbsp-num'",
        "'store_true'",
        "\"HTML: Suppress non-breakable spaces between numbers\"",
        "'--ignore-0-space'",
        "'store_true'",
        "'HTML: suppress zero width space (U+200b)'",
        "'--css-greek-title-plus'",
        "'store_true'",
        "\"HTML: use greek transliteration in title attribute\"",
        "'--simple-html'",
        "'store_true'",
        "\"HTML: Process just the html file and print the output (debug)\"",
        "\"Cannot use both --extract-footnotes and --suppress-footnote-tags\"",
        "'tmptree.txt'",
        "'w'",
        "'utf-8'",
        "': '",
        "'\\n'",
        "'\\n'",
        "'__main__'"
    ],
    "variables": [
        "PG_EBOOK_START",
        "PG_EBOOK_END",
        "DEFAULT_TRANSFORM_CSS",
        "DIFF_CSS",
        "SUPERSCRIPTS",
        "SUBSCRIPTS",
        "result",
        "result",
        "args",
        "basename",
        "text",
        "start_line",
        "footnotes",
        "basename",
        "text",
        "text",
        "from_pgdp_rounds",
        "new_text",
        "start_found",
        "start_found",
        "new_text",
        "start_line",
        "start_found",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "word_splits",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "in_footnote",
        "text",
        "footnotes",
        "in_footnote",
        "line",
        "footnotes",
        "footnotes",
        "in_footnote",
        "footnotes",
        "in_footnote",
        "text",
        "footnotes",
        "regexes",
        "match_counts",
        "footnote_count",
        "regex",
        "fn_type",
        "current_fn_type",
        "footnotes",
        "new_text",
        "current_block",
        "next_fn_type",
        "matches",
        "next_fn_type",
        "new_block",
        "current_fn_type",
        "new_block",
        "current_fn_type",
        "current_fn_type",
        "new_block",
        "current_fn_type",
        "new_block",
        "current_block",
        "text",
        "footnotes",
        "text_lines",
        "empty_lines",
        "block",
        "block",
        "empty_lines",
        "tree",
        "mycss",
        "myparser",
        "tree",
        "myparser",
        "tree",
        "errors",
        "errors",
        "errors",
        "start_line",
        "head",
        "start_found",
        "end_found",
        "start_found",
        "node",
        "text",
        "node",
        "tail",
        "end_found",
        "node",
        "text",
        "node",
        "tail",
        "start_line",
        "transforms",
        "text",
        "text",
        "mycss",
        "text",
        "value",
        "values",
        "values",
        "f_move",
        "f_move",
        "stylesheet",
        "property_errors",
        "parent",
        "sibling",
        "sibling",
        "tail",
        "parent",
        "text",
        "elem",
        "tail",
        "v_content",
        "elem",
        "text",
        "elem",
        "tail",
        "elem",
        "text",
        "elem",
        "text",
        "f_transform",
        "f_replace_with_attr",
        "f_element_func",
        "f_move",
        "f_transform",
        "f_transform",
        "f_element_func",
        "f_move",
        "xpath",
        "find",
        "css_errors",
        "css_errors",
        "i",
        "i",
        "escaped_unicode_re",
        "result",
        "tree_elem",
        "text",
        "sub",
        "text",
        "sub",
        "tail",
        "tail",
        "element",
        "tail",
        "match",
        "footnotes",
        "elements",
        "footnotes",
        "args",
        "files",
        "files",
        "i",
        "files",
        "i",
        "main_diff",
        "fnotes_diff",
        "fnotes_diff",
        "html_content",
        "repo_dir",
        "dwdiff_path",
        "dwdiff_path",
        "cmd",
        "replacements",
        "newtext",
        "newtext",
        "newtext",
        "newtext",
        "newtext",
        "diffs_text",
        "diffs_text",
        "text",
        "html_content",
        "diffs_footnotes",
        "footnotes",
        "html_file",
        "character_checks",
        "finds_0",
        "finds_1",
        "text",
        "text",
        "finds_0",
        "finds_1",
        "footnotes",
        "footnotes",
        "parser",
        "args",
        "compare",
        "html_content",
        "file1",
        "file2"
    ],
    "comments": [
        "CSS used to display the diffs",
        "can't convert, just leave it",
        "can't convert, just leave it",
        "file text",
        "line text started, before stripping boilerplate and/or head",
        "footnotes text, if extracted",
        "THIS file is from proofing rounds",
        "Find the markers. Unfortunately PG lacks consistency",
        "may take multiple lines",
        "PG found, remove previous lines",
        "ignore following lines",
        "remove other markup",
        "followed by 0 or more blank lines",
        "same line",
        "none",
        "remove page markers & blank pages",
        "proofers, all done",
        "else 'b' best effort",
        "processed text file",
        "all text files",
        "always [Footnote 1: text]",
        "probably [1] text",
        "currently processing a footnote",
        "new text without footnotes",
        "New footnote?",
        "Join to previous?",
        "start new footnote",
        "Inside a footnote?",
        "End of footnote?",
        "Footnote continuation",
        "Rebuild text, now without footnotes",
        "Pick the regex with the most matches",
        "i.e. [0, 0, 0]",
        "0 means not in footnote.",
        "Is the block a new footnote?",
        "remove footnote tag",
        "in current footnote?",
        "New block is footnote, so it ends the previous footnote",
        "new block is indented continuation, merge in current block",
        "new footnote or unindented block, end current footnote, add to footnotes",
        "no longer in footnote",
        "Account for new footnote",
        "Remove terminal bracket",
        "no longer in fn",
        "Add to text, with white lines",
        "Rebuild text, now without footnotes",
        "one or more empty lines will stop a block",
        "ignore warning caused by \"xml:lang\"",
        "don't include namespace in elements",
        "without parser this works for all html, but we have to remove namespace",
        "& don't get the errors list",
        "HTML parser rejects tags with both id and name: (513 == DTD_ID_REDEFINED)",
        "even though https://www.w3.org/TR/html4/struct/links.html#edef-A says it is OK",
        "limit search",
        "save line number of <body> tag - actual text start",
        "html5parser does not fill in the source line number",
        "remove the head - we only want the body",
        "start: from <body to <div>*** START OF THE ...</div>",
        "end: from <div>*** END OF THE ...</div> to </body",
        "we need the start line, html5parser does not save source line",
        "Todo: &nbsp;, &#160;, &#x00A0;?",
        "Todo: &#173;, &#x00AD;?",
        "load default CSS for transformations",
        "process transformations",
        "Transform html into text for character search.",
        "move the tail to the sibling or the parent",
        "prune and graft",
        "opening tag",
        "closing tag",
        "replace all content",
        "extract values we care about",
        "result depends on element and pseudo elements",
        "support display none only. So ignore \"none\" argument",
        "iterate through each selector in the rule",
        "find each matching elem in the HTML document",
        "if the default css is included, take the offset into account",
        "e.g. { content: \"xyz\" }",
        "e.g. { content: attr(title) }",
        "identity, e.g. { content: content }",
        "That may be bad",
        "Special case for PPers who do not keep the marking around",
        "the whole footnote. They only mark the first paragraph.",
        "remove footnote number & remove footnote from main document",
        "remove footnote number & remove footnote from main document",
        "found them, stop now",
        "save as text string",
        "perform cleanup for each type of file",
        "perform common cleanup for both files",
        "Compare the two versions",
        "-P Use punctuation characters as delimiters.",
        "-R Repeat the begin and end markers at the start and end of line if a change crosses",
        "a newline.",
        "-C 2 Show <num> lines of context before and after each changes.",
        "-L Show line numbers at the start of each line.",
        "Massage the input",
        "Find the number of diff sections",
        "Text, with correct (?) line numbers",
        "Footnotes - line numbers are meaningless right now. We could fix that.",
        "close curly single quote to straight",
        "open curly single quote to straight",
        "close curly double quote to straight",
        "open curly double quote to straight",
        "en dash to hyphen",
        "em dash to double hyphen",
        "fraction slash",
        "prime",
        "double prime",
        "triple prime",
        "Both have it",
        "Neither has it",
        "Downgrade one version",
        "Both have it",
        "Neither has it",
        "noinspection PyPep8",
        "noinspection PyPep8"
    ],
    "docstrings": [
        "\"\"\"\nppcomp.py - compare text from 2 files, ignoring html and formatting differences, for use by users\nof Distributed Proofreaders (https://www.pgdp.net)\n\nApplies various transformations according to program options before passing the files to the Linux\nprogram dwdiff.\n\nCopyright (C) 2012-2013, 2021 bibimbop at pgdp\n\nModified March 2022 by Robert Tonsing, per GPL section 5\n\nOriginally written as the standalone program comp_pp.py by bibimbop at PGDP as part of his PPTOOLS\nprogram. It is used as part of the PP Workbench with permission.\n\nThis program is free software; you can redistribute it and/or\nmodify it under the terms of the GNU General Public License\nas published by the Free Software Foundation; either version 2\nof the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program; if not, write to the Free Software\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\"\"\"",
        "'''\n  /* Italics */\n  i::before, cite::before, em::before,\n  i::after, cite::after, em::after { content: \"_\"; }\n\n  /* Add spaces around td tags */\n  td::before, td::after { content: \" \"; }\n  \n  /* Remove thought breaks */\n  .tb { display: none; }\n\n  /* Add space before br tags */\n  br::before { content: \" \"; }\n\n  /* Remove page numbers. It seems every PP has a different way. */\n  span[class^=\"pagenum\"],\n  p[class^=\"pagenum\"],\n  div[class^=\"pagenum\"],\n  span[class^=\"pageno\"],\n  p[class^=\"pageno\"],\n  div[class^=\"pageno\"],\n  p[class^=\"page\"],\n  span[class^=\"pgnum\"],\n  div[id^=\"Page_\"] { display: none }\n\n  /* Superscripts, subscripts */\n  sup { text-transform:superscript; }\n  sub { text-transform:subscript; }\n'''",
        "'''\nbody {\n  margin-left: 5%;\n  margin-right: 5%;\n}\nins, del {\n  text-decoration: none;\n  border: 1px solid black;\n  background-color: whitesmoke;\n  font-size: larger;\n}\nins, .second { color: green; }\ndel, .first { color: purple; }\n.lineno { margin-right: 1em; }\n.bbox {\n  margin-left: auto;\n  margin-right: auto;\n  border: 1px dashed;\n  padding: 0 1em;\n  background-color: lightcyan;\n  width: 90%;\n  max-width: 50em;\n}\nh1, .center { text-align: center; }\n/* Use a CSS counter to number each diff. */\nbody { counter-reset: diff; } /* set diff counter to 0 */\nhr::before {\n  counter-increment: diff; /* inc the diff counter ... */\n  content: \"Diff \" counter(diff) \": \"; /* ... and display it */\n}\n.error-border {\n  border-style: double;\n  border-color: red;\n  border-width: 15px;\n}\n'''",
        "\"\"\"Note that 'º' and 'ª' are ordinals, assume they would be entered as-is, not superscript\"\"\"",
        "\"\"\"Convert to unicode superscripts\"\"\"",
        "\"\"\"Convert to unicode subscripts\"\"\"",
        "\"\"\"Base class: Store and process a DP text or html file\"\"\"",
        "\"\"\"Load a file (text or html)\n        Args:\n            filename: file pathname\n        Vars:\n            self.text = contents of file\n            self.basename = file base name\n        Raises:\n            IOError: unable to open file\n            SyntaxError: file too short\n        \"\"\"",
        "\"\"\"Remove the PG header and footer from the text if present.\"\"\"",
        "\"\"\"Remove tags from the file\"\"\"",
        "\"\"\"Store and process a DP text file\"\"\"",
        "\"\"\"Load the file\"\"\"",
        "\"\"\"Remove the PG header and footer from the text if present.\"\"\"",
        "\"\"\"Remove page markers & blank pages\"\"\"",
        "\"\"\"Remove block markup\"\"\"",
        "\"\"\"Ignore or replace italics and bold tags in file from rounds\"\"\"",
        "\"\"\"suppress proofers notes in file from rounds\"\"\"",
        "\"\"\"Regroup split words, must run remove page markers 1st\"\"\"",
        "\"\"\"Remove italics and bold markers in proofed file\"\"\"",
        "\"\"\"Remove thought breaks (4 or more spaced asterisks or dots)\"\"\"",
        "\"\"\"Remove footnote tags\"\"\"",
        "\"\"\"Remove illustration tags\"\"\"",
        "\"\"\"Remove sidenote tags\"\"\"",
        "\"\"\"Convert regex match to subscript\"\"\"",
        "\"\"\"Convert ^{} tagged text\"\"\"",
        "\"\"\"Convert regex match to subscript\"\"\"",
        "\"\"\"Convert _{} tagged text\"\"\"",
        "\"\"\"Perform cleanup for this type of file\"\"\"",
        "\"\"\" Extract the footnotes from an F round text file\n        Start with [Footnote #: and finish with ] at the end of a line\n        \"\"\"",
        "\"\"\"Extract footnotes from a PP text file. Text is iterable. Updates the text without the\n        footnotes, and adds the footnotes to the footnotes string. Empty lines are added to\n        maintain the line numbers. regexes is a list of (regex, fn_type) that identify the\n        beginning and end of a footnote. The fn_type is 2 when a ] terminates it, or 1 when a new\n        block terminates it.\n        \"\"\"",
        "\"\"\"Generator to get a block of text, followed by the number of empty lines.\"\"\"",
        "\"\"\"Store and process a DP html file.\"\"\"",
        "\"\"\"Parse an HTML5 doc\"\"\"",
        "\"\"\"Parse a non-HTML5 doc\"\"\"",
        "\"\"\"Load the file. If parsing succeeded, then self.tree is set, and parser.errors is []\"\"\"",
        "\"\"\"Remove the PG header and footer from the text if present.\"\"\"",
        "\"\"\"Transform small caps\"\"\"",
        "\"\"\"Surround bold strings with this string\"\"\"",
        "\"\"\"Add [Illustration: ...] markup\"\"\"",
        "\"\"\"Add [Sidenote: ...] markup\"\"\"",
        "\"\"\"Greek: if there is a title, use it to replace the (grc=ancient) Greek.\"\"\"",
        "\"\"\"--css can be present multiple times, so it's a list\"\"\"",
        "\"\"\"Remove non-breakable spaces between numbers. For instance, a\n        text file could have 250000, and the html could have 250 000.\n        \"\"\"",
        "\"\"\"Suppress shy (soft hyphen)\"\"\"",
        "\"\"\"Perform cleanup for this type of file - build up a list of CSS transform rules,\n        process them against tree, then convert to text.\n        \"\"\"",
        "\"\"\"Transform smcaps\"\"\"",
        "\"\"\"Skip S (spaces) tokens\"\"\"",
        "\"\"\"Move a node\"\"\"",
        "\"\"\"Process each rule from our transformation CSS\"\"\"",
        "\"\"\"Move elem in tree\"\"\"",
        "\"\"\"replace text with content of an attribute.\"\"\"",
        "\"\"\"Collect transformation CSS errors\"\"\"",
        "\"\"\"Process the \"content:\" property\"\"\"",
        "\"\"\"Apply a function to every sub-element's .text and .tail, and element's .text\"\"\"",
        "\"\"\"In an XHTML tree, remove all sub-elements of a given element\"\"\"",
        "\"\"\"Extract the footnotes\"\"\"",
        "\"\"\"Remove note tag and number. \"Note 123: lorem ipsum\" becomes \"lorem ipsum\".\"\"\"",
        "\"\"\"Compare two files.\"\"\"",
        "\"\"\"Main routine: load & process the files\"\"\"",
        "\"\"\"Compare two sources, using dwdiff\"\"\"",
        "\"\"\"Create the output html file\"\"\"",
        "\"\"\"Debugging only, transform the html and print the text output\"\"\"",
        "\"\"\"Check whether each file has the 'best' character. If not, convert.\n        This is used for instance if one version uses curly quotes while the other uses straight.\n        In that case, we need to convert one into the other, to get a smaller diff.\n        \"\"\"",
        "\"\"\"Describe how to use the diffs\"\"\"",
        "\"\"\"Outputs a complete HTML file\"\"\"",
        "\"\"\"\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>Compare\"\"\"",
        "\"\"\"</title>\n  <style type=\"text/css\">\n\"\"\"",
        "\"\"\"\n  </style>\n</head>\n<body>\n\"\"\"",
        "\"\"\"\n</body>\n</html>\n\"\"\"",
        "\"\"\"Main program\"\"\"",
        "\"\"\"Save tree for debug\"\"\""
    ],
    "functions": [
        "to_superscript",
        "to_subscript",
        "load",
        "strip_pg_boilerplate",
        "cleanup",
        "load",
        "strip_pg_boilerplate",
        "remove_paging",
        "remove_block_markup",
        "remove_formatting",
        "suppress_proofers_notes",
        "regroup_split_words",
        "ignore_format",
        "remove_thought_breaks",
        "suppress_footnote_tags",
        "suppress_illustration_tags",
        "suppress_sidenote_tags",
        "match_to_superscript",
        "superscripts",
        "match_to_subscript",
        "subscripts",
        "cleanup",
        "extract_footnotes_pgdp",
        "extract_footnotes_pp",
        "get_block",
        "parse_html5",
        "parse_html",
        "load",
        "strip_pg_boilerplate",
        "css_smallcaps",
        "css_bold",
        "css_illustration",
        "css_sidenote",
        "css_greek_title_plus",
        "css_custom_css",
        "remove_nbspaces",
        "remove_soft_hyphen",
        "cleanup",
        "_text_transform",
        "_text_replace",
        "_text_move",
        "process_css",
        "_move_element",
        "_process_element",
        "f_replace_with_attr",
        "css_errors",
        "new_content",
        "_escaped_unicode",
        "text_apply",
        "clear_element",
        "extract_footnotes",
        "strip_note_tag",
        "do_process",
        "compare_texts",
        "create_html",
        "massage_input",
        "simple_html",
        "check_characters",
        "html_usage",
        "output_html",
        "main",
        "dumptree"
    ],
    "classes": [
        "PgdpFile",
        "PgdpFileText",
        "PgdpFileHtml",
        "PPComp"
    ]
}