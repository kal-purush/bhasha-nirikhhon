{
    "identifiers": [
        "com",
        "github",
        "tatercertified",
        "lifesteal",
        "util",
        "com",
        "mojang",
        "authlib",
        "GameProfile",
        "net",
        "minecraft",
        "entity",
        "Entity",
        "net",
        "minecraft",
        "nbt",
        "NbtCompound",
        "net",
        "minecraft",
        "server",
        "MinecraftServer",
        "net",
        "minecraft",
        "server",
        "network",
        "ServerPlayerEntity",
        "net",
        "minecraft",
        "server",
        "world",
        "ServerWorld",
        "net",
        "minecraft",
        "util",
        "math",
        "Vec3d",
        "net",
        "minecraft",
        "world",
        "GameMode",
        "java",
        "util",
        "Optional",
        "java",
        "util",
        "UUID",
        "server",
        "uuid",
        "player",
        "Optional",
        "ofNullable",
        "server",
        "getPlayerManager",
        "getPlayer",
        "uuid",
        "player",
        "isPresent",
        "player",
        "getOfflinePlayer",
        "server",
        "uuid",
        "server",
        "uuid",
        "profile",
        "server",
        "getUserCache",
        "getByUuid",
        "uuid",
        "profile",
        "gameProfile",
        "server",
        "getPlayerManager",
        "createPlayer",
        "gameProfile",
        "server",
        "player",
        "server",
        "getPlayerManager",
        "loadPlayerData",
        "player",
        "player",
        "player_data",
        "server",
        "player",
        "saveNbt",
        "player_data",
        "player",
        "remove",
        "Entity",
        "RemovalReason",
        "DISCARDED",
        "server",
        "getPlayerManager",
        "remove",
        "player",
        "player",
        "server",
        "server",
        "getPlayerManager",
        "getPlayerList",
        "contains",
        "player",
        "player",
        "pos",
        "player",
        "setPosition",
        "pos",
        "player_data",
        "dimension",
        "player_data",
        "putString",
        "dimension",
        "getRegistryKey",
        "getValue",
        "toString",
        "player_data",
        "mode",
        "player_data",
        "putInt",
        "mode",
        "getId",
        "player_data",
        "GameMode",
        "byId",
        "player_data",
        "getInt"
    ],
    "literals": [
        "\"Dimension\"",
        "\"playerGameType\"",
        "\"playerGameType\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Gets a ServerPlayerEntity regardless if it is online or not\n     * @param uuid UUID of the player\n     * @param server MinecraftServer\n     * @return Returns Optional of a ServerPlayerEntity if it exists",
        "* Creates a ServerPlayerEntity from the UserCache\n     * @param server MinecraftServer\n     * @param uuid UUID of the player\n     * @return Returns Optional of a ServerPlayerEntity if the user exists in the UserCache",
        "* Loads the player data for offline users\n     * @param server MinecraftServer\n     * @param player ServerPlayerEntity that is getting its data loaded\n     * @return PlayerData in the form of NbtCompound",
        "* Saves the player data and safely removes the ServerPlayerEntity from the MinecraftServer\n     * @param player ServerPlayerEntity whose data is being saved\n     * @param player_data ServerPlayerEntity's PlayerData\n     * @param server MinecraftServer",
        "* Checks if a ServerPlayerEntity is online\n     * @param player ServerPlayerEntity\n     * @param server MinecraftServer\n     * @return Returns true if the ServerPlayerEntity is online",
        "* Correctly sets the position of an offline player\n     * @param player ServerPlayerEntity that is being teleported\n     * @param pos Vec3d",
        "* Correctly sets the dimension of an offline player\n     * @param player_data NbtData for the ServerPlayerEntity\n     * @param dimension ServerWorld that you want to place the player in",
        "* Correctly sets the GameMode of an offline player\n     * @param player_data NbtData for the ServerPlayerEntity\n     * @param mode GameMode that is being set",
        "* Correctly gets the GameMode of an offline player\n     * @param player_data NbtData for the ServerPlayerEntity\n     * @return Returns the player's GameMode"
    ],
    "functions": [
        "getPlayer",
        "getOfflinePlayer",
        "NbtCompound",
        "getPlayerData",
        "savePlayerData",
        "isPlayerOnline",
        "teleportOffline",
        "setDimension",
        "setGameMode",
        "GameMode",
        "getGameMode"
    ],
    "classes": [
        "OfflineUtils"
    ]
}