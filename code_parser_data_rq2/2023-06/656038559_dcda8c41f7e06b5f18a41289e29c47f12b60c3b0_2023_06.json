{
    "identifiers": [
        "os",
        "json",
        "boto3",
        "matches",
        "matchHighlights",
        "createHighlights",
        "getHighlights",
        "getMatch",
        "utils",
        "getTeamsFromQueryParams",
        "universes",
        "pokemon",
        "getPokemonTeam",
        "universes",
        "starwars",
        "getStarWarsTeam",
        "os",
        "environ",
        "os",
        "environ",
        "boto3",
        "client",
        "endpoint_url",
        "dynamodb_endpoint",
        "boto3",
        "client",
        "os",
        "environ",
        "context",
        "getTeamsFromQueryParams",
        "queryKeys",
        "len",
        "teamsQueryKeys",
        "json",
        "dumps",
        "dynamodb_client",
        "batch_get_item",
        "RequestItems",
        "TEAMS_TABLE",
        "team",
        "team",
        "teamsQueryKeys",
        "len",
        "results",
        "item",
        "item",
        "results",
        "json",
        "dumps",
        "teams",
        "context",
        "queryKey",
        "queryKey",
        "json",
        "dumps",
        "dynamodb_client",
        "query",
        "TableName",
        "TEAMS_TABLE",
        "KeyConditionExpression",
        "ExpressionAttributeValues",
        "queryKey",
        "len",
        "results",
        "json",
        "dumps",
        "results",
        "context",
        "matchId",
        "matchId",
        "json",
        "dumps",
        "getMatch",
        "matchId",
        "match",
        "match",
        "createHighlights",
        "match",
        "json",
        "dumps",
        "highlights",
        "getPokemonTeam",
        "dynamodb_client",
        "put_item",
        "TableName",
        "TEAMS_TABLE",
        "Item",
        "result",
        "getStarWarsTeam",
        "dynamodb_client",
        "put_item",
        "TableName",
        "TEAMS_TABLE",
        "Item",
        "result"
    ],
    "literals": [
        "'LOCALSTACK_HOSTNAME'",
        "'http://%s:4566'",
        "'LOCALSTACK_HOSTNAME'",
        "'dynamodb'",
        "'dynamodb'",
        "'TEAMS_TABLE'",
        "'queryStringParameters'",
        "'statusCode'",
        "'body'",
        "'No teams provided'",
        "'Keys'",
        "'pk'",
        "'S'",
        "'team'",
        "'sk'",
        "'S'",
        "'Items'",
        "'statusCode'",
        "'body'",
        "'Teams not found'",
        "'team'",
        "'M'",
        "'Items'",
        "'statusCode'",
        "'body'",
        "'pathParameters'",
        "'team'",
        "''",
        "'statusCode'",
        "'body'",
        "'No team provided'",
        "'pk = :pk, sk = :sk'",
        "':pk'",
        "'S'",
        "'team'",
        "':sk'",
        "'S'",
        "'Items'",
        "'statusCode'",
        "'body'",
        "'Team not found'",
        "'statusCode'",
        "'body'",
        "'Items'",
        "\"team\"",
        "\"M\"",
        "'pathParameters'",
        "'matchId'",
        "''",
        "'statusCode'",
        "'body'",
        "'No team provided'",
        "'statusCode'",
        "'statusCode'",
        "'body'",
        "'pk'",
        "'S'",
        "'team'",
        "'sk'",
        "'S'",
        "'pokemon'",
        "'team'",
        "'M'",
        "'pk'",
        "'S'",
        "'team'",
        "'sk'",
        "'S'",
        "'starwars'",
        "'team'",
        "'M'"
    ],
    "variables": [
        "dynamodb_endpoint",
        "dynamodb_client",
        "dynamodb_client",
        "TEAMS_TABLE",
        "queryKeys",
        "teamsQueryKeys",
        "results",
        "teams",
        "queryKey",
        "results",
        "matchId",
        "match",
        "highlights",
        "result",
        "result"
    ],
    "comments": [
        "If we run with localstack, we should use the built in DynamoDB endpoint",
        "Get a reference to the DynamoDB table",
        "The event object has a query param of the teams universe (like 'pokemon' or 'starwars') can contain multiple teams as a comma seperated list",
        "Start by getting the query params from the request",
        "Extract the teams from the query params",
        "Get the teams from DynamoDB",
        "BatchGet by pk and sk by passing in the queryKeys",
        "Get the teams from the Items",
        "Return the teams",
        "The event object has a path parameter of the team universe (like 'pokemon' or 'starwars')",
        "Get the teams from DynamoDB",
        "Query by pk by passing in the queryKey",
        "This would be a great place to validate the items coming from DynamoDB",
        "ie. is there 1 goalie, 2 defenders and 2 attackers?",
        "Return the teams",
        "This function returns a list of \"events\" that occured during a match between to teams",
        "This could also be done via DynamoDB Streams when a \"match\" is concluded - and saved to DynamoDB to be directly queried",
        "Bit of bad naming here - If time allowed it, i would probably raise an exception and catch it instead",
        "Return the highlights",
        "This function get's triggered by a cron job to syncronize on an interval",
        "This ensures that the data is up to date, without sacrificing performance on get requests from a consumer",
        "Insert the pokemon team object into DynamoDB",
        "This function get's triggered by a cron job to syncronize on an interval",
        "This ensures that the data is up to date, without sacrificing performance on get requests from a consumer",
        "Insert the pokemon team object into DynamoDB"
    ],
    "docstrings": [],
    "functions": [
        "getTeams",
        "getTeam",
        "getMatchHighlights",
        "syncronisePokemonTeam",
        "syncroniseStarWarsTeam"
    ],
    "classes": []
}