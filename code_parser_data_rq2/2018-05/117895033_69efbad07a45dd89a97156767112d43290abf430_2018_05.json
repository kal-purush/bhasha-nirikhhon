{
    "identifiers": [
        "rospy",
        "geometry_msgs",
        "msg",
        "Pose",
        "Vector3",
        "std_msgs",
        "msg",
        "Int32",
        "numpy",
        "np",
        "time",
        "tf",
        "val",
        "lb",
        "ub",
        "val",
        "lb",
        "lb",
        "val",
        "ub",
        "ub",
        "val",
        "msg",
        "l_count",
        "old_l_data",
        "l_count",
        "abs",
        "msg",
        "data",
        "old_l_data",
        "msg",
        "data",
        "msg",
        "r_count",
        "old_r_data",
        "r_count",
        "abs",
        "msg",
        "data",
        "old_r_data",
        "msg",
        "data",
        "time",
        "desired_phi_l",
        "desired_phi_r",
        "abs",
        "l_count",
        "ticks_per_rev",
        "abs",
        "r_count",
        "ticks_per_rev",
        "ei_l",
        "ei_r",
        "old_ep_l",
        "old_ep_r",
        "desired_phi_l",
        "actual_phi_l",
        "desired_phi_r",
        "actual_phi_r",
        "threshold",
        "ei_l",
        "ep_l",
        "threshold",
        "ei_r",
        "ep_r",
        "ep_l",
        "old_ep_l",
        "ep_r",
        "old_ep_r",
        "ep_l",
        "ep_r",
        "kp_l",
        "ep_l",
        "ki_l",
        "ei_l",
        "kd_l",
        "ed_l",
        "kp_r",
        "ep_r",
        "ki_r",
        "ei_r",
        "kd_r",
        "ed_r",
        "threshold",
        "pwm_l",
        "threshold",
        "pwm_r",
        "ep_l",
        "ep_r",
        "ei_l",
        "ei_r",
        "l_count",
        "r_count",
        "pwm_l",
        "pwm_r",
        "control_pub",
        "publish",
        "Vector3",
        "pwm_r",
        "pwm_l",
        "time",
        "old_l_count",
        "old_r_count",
        "abs",
        "l_count",
        "old_l_count",
        "ticks_per_rev",
        "dt",
        "abs",
        "r_count",
        "old_r_count",
        "ticks_per_rev",
        "dt",
        "l_count",
        "r_count",
        "l_count",
        "ticks_per_rev",
        "r_count",
        "ticks_per_rev",
        "phase_r",
        "phase_l",
        "ticks_per_rev",
        "ei_l",
        "ei_r",
        "old_ep_l",
        "old_ep_r",
        "desired_w_l",
        "actual_w_l",
        "desired_w_r",
        "actual_w_r",
        "diff_drive",
        "ep_l",
        "phase_diff",
        "ep_r",
        "phase_diff",
        "threshold",
        "ei_l",
        "ep_l",
        "threshold",
        "ei_r",
        "ep_r",
        "ep_l",
        "old_ep_l",
        "ep_r",
        "old_ep_r",
        "ep_l",
        "ep_r",
        "kp_l",
        "ep_l",
        "ki_l",
        "ei_l",
        "kd_l",
        "ed_l",
        "kp_r",
        "ep_r",
        "ki_r",
        "ei_r",
        "kd_r",
        "ed_r",
        "threshold",
        "pwm_l",
        "threshold",
        "pwm_r",
        "ep_l",
        "ep_r",
        "ei_l",
        "ei_r",
        "l_count",
        "r_count",
        "pwm_l",
        "pwm_r",
        "control_pub",
        "publish",
        "Vector3",
        "pwm_r",
        "pwm_l",
        "msg",
        "desired_w_l",
        "desired_w_r",
        "diff_r_i",
        "np",
        "sqrt",
        "msg",
        "position",
        "x",
        "msg",
        "position",
        "y",
        "msg",
        "orientation",
        "x",
        "msg",
        "orientation",
        "y",
        "msg",
        "orientation",
        "z",
        "msg",
        "orientation",
        "w",
        "tf",
        "transformations",
        "euler_from_quaternion",
        "quaternion",
        "euler",
        "np",
        "arctan2",
        "msg",
        "position",
        "y",
        "msg",
        "position",
        "x",
        "desired_yaw",
        "actual_yaw",
        "np",
        "pi",
        "diff_r_i",
        "diff_r",
        "kp_diff_r",
        "diff_r",
        "ki_diff_r",
        "diff_r_i",
        "kp_diff_r",
        "diff_r",
        "ki_diff_r",
        "diff_r_i",
        "msg",
        "position",
        "y",
        "abs",
        "diff_theta",
        "msg",
        "position",
        "y",
        "desired_w_l",
        "kp_diff_theta",
        "diff_theta",
        "desired_w_r",
        "kp_diff_theta",
        "diff_theta",
        "diff_r",
        "diff_theta",
        "desired_w_l",
        "desired_w_r",
        "diff_drive",
        "rospy",
        "init_node",
        "anonymous",
        "rospy",
        "Subscriber",
        "Int32",
        "l_enc_callback",
        "rospy",
        "Subscriber",
        "Int32",
        "r_enc_callback",
        "rospy",
        "Publisher",
        "Vector3",
        "queue_size",
        "rospy",
        "Timer",
        "rospy",
        "Duration",
        "dt",
        "update_phase",
        "raw_input",
        "cmd",
        "cmd",
        "desired_phi_l",
        "cmd",
        "desired_phi_r",
        "raw_input",
        "timer",
        "shutdown",
        "rospy",
        "sleep",
        "rospy",
        "Subscriber",
        "Pose",
        "control_callback",
        "rospy",
        "Timer",
        "rospy",
        "Duration",
        "dt",
        "update_vel",
        "rospy",
        "spin"
    ],
    "literals": [
        "'ep_l, ep_r:'",
        "'ei_l, ei_r:'",
        "'phi_l, phi_r:'",
        "'pwm:'",
        "'ep_l, ep_r:'",
        "'ei_l, ei_r:'",
        "'phi_l, phi_r:'",
        "'pwm:'",
        "'diff_r, diff_theta:'",
        "'desired_w_l, desired_w_r, diff_drive:'",
        "\"phase_control\"",
        "\"/l_enc\"",
        "\"/r_enc\"",
        "'/cmd_pwm'",
        "'use a/d to calibrate legs so that they are in phase, press z to stop'",
        "'z'",
        "'a'",
        "'d'",
        "'calibration Done, put OpenRoACH on the treadmill and press enter!'",
        "\"/Robot_1/pose\""
    ],
    "variables": [
        "ticks_per_rev",
        "old_l_data",
        "old_r_data",
        "old_l_data",
        "old_r_data",
        "actual_phi_l",
        "actual_phi_r",
        "ep_l",
        "ep_r",
        "ei_l",
        "ei_r",
        "ed_l",
        "ed_r",
        "old_ep_l",
        "old_ep_r",
        "pwm_l",
        "pwm_r",
        "pwm_l",
        "pwm_r",
        "old_l_count",
        "old_r_count",
        "actual_w_l",
        "actual_w_r",
        "old_l_count",
        "old_r_count",
        "phase_l",
        "phase_r",
        "phase_diff",
        "ep_l",
        "ep_r",
        "ei_l",
        "ei_r",
        "ed_l",
        "ed_r",
        "old_ep_l",
        "old_ep_r",
        "pwm_l",
        "pwm_r",
        "pwm_l",
        "pwm_r",
        "kp_diff_r",
        "diff_r_i",
        "ki_diff_r",
        "kp_diff_theta",
        "diff_drive",
        "diff_r",
        "quaternion",
        "euler",
        "actual_yaw",
        "desired_yaw",
        "diff_theta",
        "desired_w_l",
        "desired_w_r",
        "desired_w_l",
        "desired_w_r",
        "diff_r_i",
        "diff_drive",
        "diff_drive",
        "desired_w_l",
        "desired_w_r",
        "desired_phi_l",
        "desired_phi_r",
        "ei_l",
        "ei_r",
        "old_ep_l",
        "old_ep_r",
        "l_count",
        "r_count",
        "kp_l",
        "ki_l",
        "kd_l",
        "kp_r",
        "ki_r",
        "kd_r",
        "control_pub",
        "dt",
        "calibration_done",
        "timer",
        "cmd",
        "cmd",
        "calibration_done",
        "ei_l",
        "ei_r",
        "old_ep_l",
        "old_ep_r",
        "l_count",
        "r_count",
        "kp_l",
        "ki_l",
        "kd_l",
        "kp_r",
        "ki_r",
        "kd_r",
        "jiggle_l",
        "jiggle_r",
        "timer"
    ],
    "comments": [
        "!/usr/bin/python",
        "Keeps 0 phase difference between legs for normal walking",
        "Try to move one leg suddenly and fastly to turn.",
        "print(l_count)",
        "Compute Speed",
        "Compute left/right errors",
        "PID control of speed",
        "Compute Speed",
        "Coordinate phase if not doing diff drive",
        "Include phase error if not doing differential drive",
        "PID control of speed"
    ],
    "docstrings": [],
    "functions": [
        "threshold",
        "l_enc_callback",
        "r_enc_callback",
        "update_phase",
        "update_vel",
        "control_callback"
    ],
    "classes": []
}