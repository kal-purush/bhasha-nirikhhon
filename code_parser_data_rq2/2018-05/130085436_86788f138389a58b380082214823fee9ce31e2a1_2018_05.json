{
    "identifiers": [
        "bioservices",
        "kegg",
        "KEGG",
        "networkx",
        "nx",
        "organism",
        "KEGG",
        "get_organism_code",
        "organism",
        "gene_name",
        "database",
        "get_pathway_by_gene",
        "gene_name",
        "organism",
        "pathways",
        "pathways",
        "AttributeError",
        "pathway_id",
        "nx",
        "DiGraph",
        "database",
        "parse_kgml_pathway",
        "pathway_id",
        "x",
        "x",
        "x",
        "pathway",
        "x",
        "pathway",
        "names",
        "x",
        "names",
        "x",
        "e1",
        "e2",
        "database",
        "get",
        "e1",
        "split",
        "join",
        "record1",
        "record1",
        "index",
        "record1",
        "index",
        "database",
        "get",
        "e2",
        "split",
        "join",
        "record2",
        "record2",
        "index",
        "record2",
        "index",
        "G",
        "add_nodes_from",
        "name1",
        "name2",
        "G",
        "has_edge",
        "name1",
        "name2",
        "G",
        "name1",
        "name2",
        "G",
        "name1",
        "name2",
        "x",
        "G",
        "add_edge",
        "name1",
        "name2",
        "x",
        "G",
        "line",
        "database",
        "split",
        "line",
        "line",
        "split",
        "line",
        "split",
        "org",
        "x",
        "strip",
        "x",
        "org",
        "split",
        "o",
        "org",
        "code",
        "code",
        "codes",
        "org",
        "fetch_organism_codes",
        "codes",
        "org",
        "KeyError"
    ],
    "literals": [
        "\"Homo sapiens\"",
        "'id'",
        "'name'",
        "'entries'",
        "'relations'",
        "'entry1'",
        "'entry2'",
        "'undefined'",
        "'undefined'",
        "''",
        "'NAME'",
        "'DEFINITION'",
        "''",
        "'NAME'",
        "'DEFINITION'",
        "'type'",
        "'type'",
        "'name'",
        "'name'",
        "'organism'",
        "'\\n'",
        "'\\t'",
        "'\\t'",
        "'('",
        "'('",
        "'Invalid organism name.'"
    ],
    "variables": [
        "database",
        "organism",
        "pathways",
        "G",
        "pathway",
        "names",
        "e1",
        "e2",
        "record1",
        "name1",
        "record2",
        "name2",
        "codes",
        "code",
        "org",
        "org",
        "codes",
        "o",
        "codes",
        "org",
        "codes"
    ],
    "comments": [
        "assumption of interaction direction entry1 -> entry2 #TODO: validate"
    ],
    "docstrings": [
        "\"\"\"\n\n        Args:\n            gene_name: gene name (ex 'BRCA2')\n\n        Returns:\n            Dictionary with all ids of all pathways cointaining given gene as keys and their full names as values.\n\n        \"\"\"",
        "\"\"\"\n\n        Args:\n            pathway_id: KEGG pathway id (ex. 'hsa04110')\n\n        Returns:\n            G: Directed graph (networkx.DiGraph object) depicting pathway, with a comma-separated string\n            containing gene names as graph nodes and directed edges representing interactions between genes.\n            Each edge has weight 'type', which is a list of interaction types between two nodes.\n\n        \"\"\"",
        "\"\"\"\n\n        Returns:\n            Dictionary with organisms as keys, and KEGG organism codes as values:\n            {   'Homo sapiens' : 'hsa',\n                'human' : 'hsa',\n                ...\n            }\n\n        \"\"\"",
        "\"\"\"\n\n        Args:\n            org: organism name (ex. 'Homo sapiens', 'human')\n\n        Returns:\n            KEGG organism code\n\n        \"\"\""
    ],
    "functions": [
        "search_by_gene",
        "search_by_pathway",
        "fetch_organism_codes",
        "get_organism_code"
    ],
    "classes": [
        "KEGGPathways"
    ]
}