{
    "identifiers": [
        "io",
        "pravega",
        "connectors",
        "flink",
        "io",
        "pravega",
        "client",
        "stream",
        "Stream",
        "io",
        "pravega",
        "client",
        "stream",
        "StreamCut",
        "io",
        "pravega",
        "connectors",
        "flink",
        "util",
        "StreamWithBoundaries",
        "lombok",
        "Data",
        "org",
        "apache",
        "flink",
        "util",
        "Preconditions",
        "java",
        "io",
        "Serializable",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "stream",
        "Collectors",
        "serialVersionUID",
        "streams",
        "pravegaConfig",
        "streams",
        "pravegaConfig",
        "PravegaConfig",
        "fromDefaults",
        "pravegaConfig",
        "pravegaConfig",
        "pravegaConfig",
        "builder",
        "streamSpec",
        "startStreamCut",
        "forStream",
        "streamSpec",
        "startStreamCut",
        "StreamCut",
        "UNBOUNDED",
        "streamSpec",
        "startStreamCut",
        "endStreamCut",
        "streams",
        "add",
        "StreamSpec",
        "of",
        "streamSpec",
        "startStreamCut",
        "endStreamCut",
        "builder",
        "streamSpec",
        "forStream",
        "streamSpec",
        "StreamCut",
        "UNBOUNDED",
        "stream",
        "startStreamCut",
        "forStream",
        "stream",
        "startStreamCut",
        "StreamCut",
        "UNBOUNDED",
        "stream",
        "startStreamCut",
        "endStreamCut",
        "streams",
        "add",
        "StreamSpec",
        "of",
        "stream",
        "startStreamCut",
        "endStreamCut",
        "builder",
        "stream",
        "forStream",
        "stream",
        "StreamCut",
        "UNBOUNDED",
        "Preconditions",
        "checkState",
        "pravegaConfig",
        "pravegaConfig",
        "Preconditions",
        "checkState",
        "streams",
        "isEmpty",
        "pravegaConfig",
        "getPravegaConfig",
        "streams",
        "stream",
        "s",
        "StreamWithBoundaries",
        "of",
        "pravegaConfig",
        "resolve",
        "s",
        "streamSpec",
        "s",
        "s",
        "to",
        "collect",
        "Collectors",
        "toList",
        "Data",
        "serialVersionUID",
        "streamSpec",
        "to",
        "streamSpec",
        "to",
        "Preconditions",
        "checkNotNull",
        "streamSpec",
        "Preconditions",
        "checkNotNull",
        "streamSpec",
        "Preconditions",
        "checkNotNull",
        "streamSpec",
        "streamSpec",
        "to",
        "stream",
        "to",
        "Preconditions",
        "checkNotNull",
        "stream",
        "Preconditions",
        "checkNotNull",
        "stream",
        "Preconditions",
        "checkNotNull",
        "stream",
        "stream",
        "getScopedName",
        "to"
    ],
    "literals": [
        "\"A Pravega configuration must be supplied.\"",
        "\"At least one stream must be supplied.\"",
        "\"streamSpec\"",
        "\"from\"",
        "\"to\"",
        "\"stream\"",
        "\"from\"",
        "\"to\""
    ],
    "variables": [
        "streams",
        "pravegaConfig",
        "streamSpec",
        "from",
        "to"
    ],
    "comments": [],
    "docstrings": [
        "* Copyright (c) 2017 Dell Inc., or its subsidiaries. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0",
        "* A base builder for connectors that consume a Pravega stream.\n *\n * @param <B> the builder class.",
        "* Set the Pravega client configuration, which includes connection info, security info, and a default scope.\n     *\n     * The default client configuration is obtained from {@code PravegaConfig.fromDefaults()}.\n     *\n     * @param pravegaConfig the configuration to use.",
        "* Add a stream to be read by the source, from the given start position in the stream.\n     *\n     * @param streamSpec the unqualified or qualified name of the stream.\n     * @param startStreamCut Start {@link StreamCut}\n     * @return A builder to configure and create a reader.",
        "* Add a stream to be read by the source, from the given start position in the stream.\n     *\n     * @param streamSpec the unqualified or qualified name of the stream.\n     * @param startStreamCut Start {@link StreamCut}\n     * @param endStreamCut End {@link StreamCut}\n     * @return A builder to configure and create a reader.",
        "* Add a stream to be read by the source, from the earliest available position in the stream.\n     *\n     * @param streamSpec the unqualified or qualified name of the stream.\n     * @return A builder to configure and create a reader.",
        "* Add a stream to be read by the source, from the given start position in the stream.\n     *\n     * @param stream Stream.\n     * @param startStreamCut Start {@link StreamCut}\n     * @return A builder to configure and create a reader.",
        "* Add a stream to be read by the source, from the given start position in the stream to the given end position.\n     *\n     * @param stream Stream.\n     * @param startStreamCut Start {@link StreamCut}\n     * @param endStreamCut End {@link StreamCut}\n     * @return A builder to configure and create a reader.",
        "* Add a stream to be read by the source, from the earliest available position in the stream.\n     *\n     * @param stream Stream.\n     * @return A builder to configure and create a reader.",
        "* Gets the Pravega configuration.",
        "* Resolves the streams to be provided to the reader, based on the configured default scope.",
        "* A Pravega stream with optional boundaries based on stream cuts."
    ],
    "functions": [
        "AbstractReaderBuilder",
        "B",
        "withPravegaConfig",
        "B",
        "forStream",
        "B",
        "forStream",
        "B",
        "forStream",
        "B",
        "forStream",
        "B",
        "forStream",
        "B",
        "forStream",
        "PravegaConfig",
        "getPravegaConfig",
        "resolveStreams",
        "B",
        "builder",
        "StreamSpec",
        "of",
        "StreamSpec",
        "of"
    ],
    "classes": [
        "AbstractReaderBuilder",
        "StreamSpec"
    ]
}