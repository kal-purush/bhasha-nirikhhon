{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Text",
        "Threading",
        "Tasks",
        "Assignment1",
        "IComparable",
        "Employee",
        "employeeId",
        "EmployeeID",
        "employeeId",
        "FirstName",
        "LastName",
        "employeeId",
        "fname",
        "lname",
        "EmployeeID",
        "employeeId",
        "FirstName",
        "fname",
        "LastName",
        "lname",
        "EmployeeID",
        "FirstName",
        "LastName",
        "Employee",
        "emp",
        "EmployeeID",
        "CompareTo",
        "emp",
        "EmployeeID",
        "FirstName",
        "getEmployeeID",
        "ToString",
        "getEmployeeID",
        "ToString",
        "getFirstName",
        "getLastName"
    ],
    "literals": [
        "\" null null\"",
        "\" \"",
        "\" \""
    ],
    "variables": [
        "EmployeeID",
        "FirstName",
        "LastName"
    ],
    "comments": [
        "Contains data to be manipulated by the linked list class",
        "</summary>",
        "Constructor to initialize just the employeeID and set the",
        "name attributes to null",
        "</summary>",
        "<param name=\"employeeId\">The unique Id of the employee</param>",
        "Constructor to create employee with provided employeed Id, first name and last name",
        "</summary>",
        "<param name=\"employeeId\">The unique Id assigned to the employee</param>",
        "<param name=\"fname\">First name of the employee</param>",
        "<param name=\"lname\">Last name of the employee</param>",
        "Returns the employee Id of the employee",
        "</summary>",
        "<returns>Returns the employee Id of the employee</returns>",
        "Returns the First Name of the employee",
        "</summary>",
        "<returns>Returns the First Name of the employee</returns>",
        "Returns the Last Name of the employee",
        "</summary>",
        "<returns>Returns the Last Name of the employee</returns>",
        "Compares two employees based on their employeeID",
        "</summary>",
        "<param name=\"emp\">Specific employee to compare the current employee against</param>",
        "<returns>The result of comparison</returns>",
        "if (this.EmployeeID < emp.EmployeeID) return -1;",
        "else if (this.EmployeeID > emp.EmployeeID) return 1;",
        "else return 0;",
        "Prints the employeeId, First Name and Last Name of the employee",
        "</summary>",
        "<returns>The string representing the attributes of the employee</returns>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Employee",
        "Employee",
        "getEmployeeID",
        "getFirstName",
        "getLastName",
        "CompareTo",
        "ToString"
    ],
    "classes": [
        "Employee"
    ]
}