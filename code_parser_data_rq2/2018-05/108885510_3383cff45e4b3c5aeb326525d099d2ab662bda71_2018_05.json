{
    "identifiers": [
        "logging",
        "time",
        "sys",
        "serial",
        "device_path",
        "args",
        "logging",
        "getLogger",
        "logger",
        "setLevel",
        "logging",
        "DEBUG",
        "logging",
        "StreamHandler",
        "sys",
        "stdout",
        "ch",
        "setLevel",
        "logging",
        "DEBUG",
        "logging",
        "Formatter",
        "ch",
        "setFormatter",
        "formatter",
        "logger",
        "addHandler",
        "ch",
        "logger",
        "info",
        "format",
        "sensor_name",
        "device_path",
        "args",
        "keys",
        "args",
        "unit_of_measure",
        "args",
        "keys",
        "args",
        "unit_of_measure",
        "values",
        "args",
        "ValueError",
        "format",
        "sensor_name",
        "args",
        "device_path",
        "serial",
        "Serial",
        "device_path",
        "baudrate",
        "stopbits",
        "serial",
        "STOPBITS_ONE",
        "parity",
        "serial",
        "PARITY_NONE",
        "bytesize",
        "serial",
        "EIGHTBITS",
        "timeout",
        "__timeout",
        "device",
        "isOpen",
        "device",
        "open",
        "logger",
        "debug",
        "format",
        "sensor_name",
        "IOError",
        "e",
        "IOError",
        "format",
        "sensor_name",
        "device_path",
        "e",
        "message",
        "time",
        "time",
        "__response",
        "len",
        "first_response",
        "logger",
        "warning",
        "format",
        "sensor_name",
        "__send",
        "command",
        "__construct_data",
        "command_mode",
        "work_state",
        "__send",
        "command",
        "__construct_data",
        "command_mode",
        "work_state",
        "__get_current_config",
        "logger",
        "info",
        "format",
        "sensor_name",
        "__firmware",
        "logger",
        "info",
        "format",
        "sensor_name",
        "__report_mode",
        "logger",
        "info",
        "format",
        "sensor_name",
        "__work_state",
        "logger",
        "info",
        "format",
        "sensor_name",
        "__duty_cycle",
        "logger",
        "info",
        "format",
        "sensor_name",
        "device_id",
        "logger",
        "debug",
        "format",
        "sensor_name",
        "pm",
        "value",
        "__unit_of_measure",
        "unit_of_measure",
        "value",
        "__unit_of_measure",
        "unit_of_measure",
        "pow",
        "pm",
        "pm",
        "RuntimeError",
        "format",
        "sensor_name",
        "pm",
        "radius",
        "pow",
        "pi",
        "pow",
        "radius",
        "density",
        "volume",
        "value",
        "k",
        "mass",
        "concentration",
        "device",
        "device",
        "close",
        "property",
        "__device_path",
        "property",
        "__report_mode",
        "report_mode",
        "setter",
        "value",
        "value",
        "command_mode",
        "values",
        "__send",
        "command",
        "__construct_data",
        "command_mode",
        "value",
        "value",
        "logger",
        "info",
        "format",
        "sensor_name",
        "value",
        "ValueError",
        "format",
        "sensor_name",
        "property",
        "__work_state",
        "work_state",
        "setter",
        "value",
        "value",
        "work_state",
        "values",
        "__send",
        "command",
        "__construct_data",
        "command_mode",
        "value",
        "value",
        "logger",
        "info",
        "format",
        "sensor_name",
        "value",
        "ValueError",
        "format",
        "sensor_name",
        "property",
        "__duty_cycle",
        "duty_cycle",
        "setter",
        "value",
        "isinstance",
        "value",
        "value",
        "value",
        "ValueError",
        "format",
        "sensor_name",
        "__send",
        "command",
        "__construct_data",
        "command_mode",
        "value",
        "value",
        "__calculate_read_timeout",
        "value",
        "time",
        "time",
        "logger",
        "info",
        "format",
        "sensor_name",
        "__read_timeout",
        "logger",
        "info",
        "format",
        "sensor_name",
        "value",
        "__get_current_config",
        "format",
        "sensor_name",
        "property",
        "format",
        "__device_id",
        "__device_id",
        "upper",
        "property",
        "__firmware",
        "property",
        "__unit_of_measure",
        "property",
        "__timeout",
        "cmd_mode",
        "cmd_value",
        "cmd_mode",
        "command_mode",
        "values",
        "sensor_name",
        "isinstance",
        "cmd_value",
        "sensor_name",
        "ret_val",
        "append",
        "cmd_mode",
        "ret_val",
        "append",
        "cmd_value",
        "ret_val",
        "logger",
        "debug",
        "format",
        "sensor_name",
        "logger",
        "debug",
        "format",
        "sensor_name",
        "__send",
        "command",
        "__construct_data",
        "command_mode",
        "response",
        "len",
        "response",
        "response",
        "__calculate_read_timeout",
        "__duty_cycle",
        "time",
        "time",
        "RuntimeError",
        "format",
        "sensor_name",
        "logger",
        "debug",
        "format",
        "sensor_name",
        "__send",
        "command",
        "__construct_data",
        "command_mode",
        "response",
        "len",
        "response",
        "response",
        "RuntimeError",
        "format",
        "sensor_name",
        "logger",
        "debug",
        "format",
        "sensor_name",
        "__send",
        "command",
        "__construct_data",
        "command_mode",
        "response",
        "len",
        "response",
        "format",
        "response",
        "response",
        "response",
        "RuntimeError",
        "format",
        "sensor_name",
        "timeout_value",
        "timeout_value",
        "__read_timeout_drift_percent",
        "timeout_value",
        "new_timeout",
        "logger",
        "info",
        "format",
        "sensor_name",
        "timeout_value",
        "new_timeout",
        "new_timeout",
        "__work_state",
        "work_state",
        "RuntimeError",
        "format",
        "sensor_name",
        "__report_mode",
        "report_mode",
        "RuntimeError",
        "format",
        "sensor_name",
        "time",
        "time",
        "duty_cycle",
        "time",
        "time",
        "__duty_cycle_start",
        "__read_timeout",
        "__response",
        "len",
        "response_data",
        "logger",
        "info",
        "format",
        "sensor_name",
        "len",
        "response_data",
        "__extract_values_from_response",
        "response_data",
        "IOError",
        "format",
        "sensor_name",
        "__read_timeout",
        "__send",
        "command",
        "__extract_values_from_response",
        "response",
        "ret_val",
        "response_data",
        "response_data",
        "len",
        "data",
        "mass2particles",
        "data",
        "data",
        "mass2particles",
        "data",
        "data",
        "logger",
        "info",
        "format",
        "sensor_name",
        "duty_cycle",
        "time",
        "time",
        "value_of_10micro",
        "value_of_2point5micro",
        "duty_cycle",
        "ValueError",
        "format",
        "sensor_name",
        "cmd_val",
        "data",
        "cmd_val",
        "command",
        "values",
        "ValueError",
        "format",
        "sensor_name",
        "cmd_val",
        "isinstance",
        "data",
        "format",
        "sensor_name",
        "bytes_to_send",
        "append",
        "__SerialStart",
        "bytes_to_send",
        "append",
        "__SendByte",
        "bytes_to_send",
        "append",
        "cmd_val",
        "i",
        "i",
        "len",
        "data",
        "bytes_to_send",
        "append",
        "data",
        "i",
        "bytes_to_send",
        "append",
        "bytes_to_send",
        "append",
        "__CommandTerminator",
        "bytes_to_send",
        "append",
        "__CommandTerminator",
        "__checksum_make",
        "bytes_to_send",
        "bytes_to_send",
        "append",
        "checksum",
        "bytes_to_send",
        "append",
        "__SerialEnd",
        "logger",
        "info",
        "format",
        "sensor_name",
        "command_mode",
        "keys",
        "command_mode",
        "values",
        "index",
        "bytes_to_send",
        "command",
        "keys",
        "command",
        "values",
        "index",
        "cmd_val",
        "join",
        "b",
        "b",
        "bytes_to_send",
        "len",
        "bytes_to_send",
        "__CommandLength",
        "IOError",
        "format",
        "sensor_name",
        "len",
        "bytes_to_send",
        "__CommandLength",
        "device",
        "write",
        "bytes_to_send",
        "device",
        "flush",
        "written_bytes",
        "len",
        "bytes_to_send",
        "IOError",
        "format",
        "sensor_name",
        "__response",
        "cmd_val",
        "len",
        "received",
        "__ResponseLength",
        "IOError",
        "format",
        "sensor_name",
        "len",
        "received",
        "__ResponseLength",
        "len",
        "received",
        "IOError",
        "format",
        "sensor_name",
        "cmd_val",
        "cmd_val",
        "command",
        "received",
        "__ReceiveByte",
        "ValueError",
        "format",
        "sensor_name",
        "__ReceiveByte",
        "received",
        "cmd_val",
        "command",
        "received",
        "cmd_val",
        "ValueError",
        "format",
        "sensor_name",
        "received",
        "received",
        "cmd_val",
        "device",
        "read",
        "len",
        "one_byte",
        "ord",
        "one_byte",
        "bytes_received",
        "__SerialStart",
        "device",
        "read",
        "cmd_val",
        "cmd_val",
        "command",
        "ord",
        "single_byte",
        "__ResponseByte",
        "cmd_val",
        "cmd_val",
        "command",
        "ord",
        "single_byte",
        "__ReceiveByte",
        "bytes_received",
        "append",
        "ord",
        "single_byte",
        "__duty_cycle",
        "logger",
        "error",
        "format",
        "sensor_name",
        "logger",
        "info",
        "format",
        "sensor_name",
        "unpack",
        "device",
        "read",
        "bytes_received",
        "extend",
        "response_bytes",
        "cmd_val",
        "cmd_val",
        "command",
        "bytes_received",
        "__ResponseByte",
        "IOError",
        "format",
        "sensor_name",
        "bytes_received",
        "cmd_val",
        "IOError",
        "format",
        "sensor_name",
        "bytes_received",
        "cmd_val",
        "name",
        "cmd_val",
        "cmd_val",
        "command",
        "bytes_received",
        "__ReceiveByte",
        "IOError",
        "format",
        "sensor_name",
        "__checksum_make",
        "bytes_received",
        "bytes_received",
        "IOError",
        "format",
        "sensor_name",
        "__device_id",
        "bytes_received",
        "__device_id",
        "__device_id",
        "__eq__",
        "bytes_received",
        "ValueError",
        "format",
        "sensor_name",
        "bytes_received",
        "__device_id",
        "logger",
        "info",
        "format",
        "sensor_name",
        "join",
        "b",
        "b",
        "bytes_received",
        "bytes_received",
        "work_state",
        "report_mode",
        "logger",
        "info",
        "format",
        "sensor_name",
        "data",
        "logger",
        "info",
        "format",
        "sensor_name",
        "join",
        "b",
        "b",
        "data",
        "len",
        "data",
        "__CommandLength",
        "__ResponseLength",
        "ValueError",
        "format",
        "sensor_name",
        "__CommandLength",
        "__ResponseLength",
        "data",
        "__SerialStart",
        "ValueError",
        "format",
        "sensor_name",
        "data",
        "__SendByte",
        "__ResponseByte",
        "__ReceiveByte",
        "ValueError",
        "format",
        "sensor_name",
        "data",
        "__ReceiveByte",
        "data",
        "command",
        "values",
        "ValueError",
        "format",
        "sensor_name",
        "data",
        "i",
        "len",
        "data",
        "checksum",
        "data",
        "i",
        "checksum",
        "logger",
        "info",
        "format",
        "sensor_name",
        "checksum",
        "join",
        "b",
        "b",
        "data",
        "checksum"
    ],
    "literals": [
        "\"ReportMode\"",
        "\"Request\"",
        "\"DeviceId\"",
        "\"WorkState\"",
        "\"Firmware\"",
        "\"DutyCycle\"",
        "\"Getting\"",
        "\"Setting\"",
        "\"Initiative\"",
        "\"Passive\"",
        "\"Sleeping\"",
        "\"Measuring\"",
        "\"MassConcentrationEuropean\"",
        "\"ParticleConcentrationImperial\"",
        "'%(asctime)s - %(name)s - %(levelname)s - %(message)s'",
        "\"SDS011\"",
        "\"{}: start of the sensor class constructor. The device path is \\\"{}\\\"\"",
        "'timeout'",
        "'timeout'",
        "\"MassConcentrationEuropean\"",
        "'unit_of_measure'",
        "'unit_of_measure'",
        "'unit_of_measure'",
        "\"{}: given unit_of_measure value {} is not valid.\"",
        "'unit_of_measure'",
        "\"{}: serial connection successfully started.\"",
        "\"{}: unable to set serial device {}. Error: {}.\"",
        "\"{}: While constructing the instance the sensor is not responding. Maybe in sleeping mode, in passive mode or in a duty cycle? Will wake it up.\"",
        "\"WorkState\"",
        "\"Setting\"",
        "\"Measuring\"",
        "\"DutyCycle\"",
        "\"Setting\"",
        "\"Measuring\"",
        "\"{}: sensor has firmware: {}\"",
        "\"{}: sensor report mode: {}\"",
        "\"{}: sensor work state: {}\"",
        "\"{}: sensor duty cycle: {}, None if Zero\"",
        "\"{}: sensor device ID: {}\"",
        "\"{}: the constructor is successfully executed.\"",
        "\"MassConcentrationEuropean\"",
        "\"ParticleConcentrationImperial\"",
        "'pm10'",
        "'pm2.5'",
        "'{}: wrong Mass2Particle parameter value for pm type. \"{}\" given, \"pm10\" or \"pm2.5\" expected.'",
        "\"ReportMode\"",
        "\"Setting\"",
        "\"{}: report mode setted to {}\"",
        "\"{}: report mode value not valid.\"",
        "\"WorkState\"",
        "\"Setting\"",
        "\"{}: sensor work state setted to {}.\"",
        "\"{}: work state value not valid.\"",
        "\"{}: duty cycle has to be between 0 and 30 inclusive!\"",
        "\"DutyCycle\"",
        "\"Setting\"",
        "\"{}: set duty cycle timeout to {}.\"",
        "\"{}: set duty cycle to {}.\"",
        "\"{}: duty cycle should be of type int.\"",
        "\"{0:02x}{1:02x}\"",
        "\"%s: specified cmd_mode is not valid.\"",
        "\"%s: cmd_value must be of type %s.\"",
        "\"{}: getting current sensor configuration.\"",
        "\"{}: getting current sensor duty cycle.\"",
        "\"DutyCycle\"",
        "\"Getting\"",
        "\"{}: duty cycle is not detectable.\"",
        "\"{}: getting current sensor report mode.\"",
        "\"ReportMode\"",
        "\"Getting\"",
        "\"{}: report mode is not detectable.\"",
        "\"{}: getting current sensor firmware version.\"",
        "\"Firmware\"",
        "\"Getting\"",
        "\"{0:02d}{1:02d}{2:02d}\"",
        "\"{}: firmware is not detectable.\"",
        "\"{}: new timeout calculated for specified timeout value {}: {}\"",
        "\"Sleeping\"",
        "\"{}: the sensor is sleeping and will not send any values. Will wake it up first.\"",
        "\"Passive\"",
        "\"{}: the sensor is in passive report mode and will not automatically send values. You need to call request() to get values.\"",
        "\"{}: received response from sensor {} bytes.\"",
        "\"{}: no data within read timeout of {} has been received.\"",
        "\"Request\"",
        "'pm2.5'",
        "'pm10'",
        "\"{}: get_values successful executed.\"",
        "\"{}: data is missing.\"",
        "\"{}: the provided command value {} is not valid.\"",
        "\"{}: command data must be of type byte array.\"",
        "\"{}: sending {} {} command with {} message.\"",
        "\":\"",
        "\"%02x\"",
        "\"{}: sent {} bytes, expected {}.\"",
        "\"{}: not all bytes written.\"",
        "\"{}: received {} bytes, expected {}.\"",
        "\"{}: sensor is not responding.\"",
        "\"Request\"",
        "\"{}: expected to receive value {:#X} on a value request. Received: \\\"{}\\\".\"",
        "\"Request\"",
        "\"{}: sensor response does not belong to the command sent before.\"",
        "\"Request\"",
        "\"Request\"",
        "\"{}: a sensor response has not arrived within timeout limit. If the sensor is in sleeping mode wake it up first! Returning an empty byte array as response!\"",
        "\"{}: no response. Expected while in duty cycle.\"",
        "'BBBBBBBB'",
        "\"Request\"",
        "\"{}: no ResponseByte found in the response.\"",
        "\"{}: third byte of serial data \\\"{}\\\" received is not the expected response to the previous command: \\\"{}\\\"\"",
        "\"Request\"",
        "\"{}: received byte not found in the response.\"",
        "\"{}: checksum of received data is invalid.\"",
        "\"{}: data received ({}) does not belong to this device with id {}.\"",
        "\"{}: the response was successful with message {}.\"",
        "\"\"",
        "\"%02x:\"",
        "\"Measuring\"",
        "\"Initiative\"",
        "\"{}: sensor resetted.\"",
        "\"{}: building the checksum for bytes {}.\"",
        "\":\"",
        "\"%02x\"",
        "\"{}: length data has to be {} or {}.\"",
        "\"{}: data is missing the start byte.\"",
        "\"{}: data is missing SendByte, ReceiveByte or ReceiveValue-Byte\"",
        "\"{}: the data command byte value \\\"{}\\\" is not valid.\"",
        "\"{}: checksum calculated {} for bytes {}.\"",
        "\"%02x\"",
        "\":\"",
        "\"%02x\""
    ],
    "variables": [
        "command",
        "command_mode",
        "report_mode",
        "work_state",
        "unit_of_measure",
        "__SerialStart",
        "__SerialEnd",
        "__SendByte",
        "__ResponseByte",
        "__ReceiveByte",
        "__ResponseLength",
        "__CommandLength",
        "__CommandTerminator",
        "logger",
        "ch",
        "formatter",
        "sensor_name",
        "__timeout",
        "__timeout",
        "__unit_of_measure",
        "__unit_of_measure",
        "__device_path",
        "device",
        "device",
        "__firmware",
        "__report_mode",
        "__work_state",
        "__duty_cycle",
        "__device_id",
        "__read_timeout",
        "__duty_cycle_start",
        "__read_timeout_drift_percent",
        "first_response",
        "__work_state",
        "pi",
        "density",
        "radius",
        "radius",
        "volume",
        "mass",
        "k",
        "concentration",
        "__report_mode",
        "__work_state",
        "__duty_cycle",
        "__read_timeout",
        "__duty_cycle_start",
        "ret_val",
        "response",
        "__duty_cycle",
        "__read_timeout",
        "__duty_cycle_start",
        "response",
        "response",
        "__report_mode",
        "response",
        "response",
        "__firmware",
        "new_timeout",
        "__duty_cycle_start",
        "response_data",
        "response",
        "ret_val",
        "data",
        "value_of_2point5micro",
        "value_of_10micro",
        "value_of_2point5micro",
        "value_of_10micro",
        "__duty_cycle_start",
        "bytes_to_send",
        "checksum",
        "written_bytes",
        "received",
        "bytes_received",
        "one_byte",
        "bytes_received",
        "single_byte",
        "response_bytes",
        "__device_id",
        "work_state",
        "report_mode",
        "duty_cycle",
        "checksum",
        "checksum",
        "checksum"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "µg / m³, the mode of the sensors firmware",
        "pcs/0.01 cft (particles / 0.01 cubic foot )",
        "Serial line read timeout",
        "TODO: initiate with the values, the sensor has to be queried for",
        "Within response the device id will be set",
        "Device might be sleeping. So wake it up",
        "At this point, the device is awake for sure. So store his state",
        "Conversion parameters come from:",
        "http://ir.uiowa.edu/cgi/viewcontent.cgi?article=5915&context=etd",
        "Device path",
        "Report mode",
        "Work state",
        "Duty cycle",
        "Calculate new timeout value",
        "Getting the duty cycle",
        "Getting report mode",
        "Getting firmware",
        "Proof the input",
        "Initialise the command bytes array",
        "Add data and set zero to the remainder",
        "Last two bytes before the checksum is the CommandTerminator",
        "TODO : rename command terminator to sensor ID",
        "Calculate and append the checksum",
        "Append the terminator for serial message",
        "Send the command",
        "Check the received values",
        "When no command or command is request command,",
        "second byte has to be ReceiveByte",
        "Check, if the response is response of the command, except request command",
        "Receive the response while listening serial input",
        "if this is true, serial data is coming in",
        "Evaluate checksum",
        "Set device_id if device id is not initialized or proof it, if it's not None",
        "Build checksum for data to send or receive"
    ],
    "docstrings": [
        "\"\"\"Enumeration of SDS011 commands\"\"\"",
        "\"\"\"Command to get the current configuration or set it\"\"\"",
        "\"\"\"\nReport modes of the sensor:\nIn passive mode one has to send a request command,\nin order to get the measurement values as a response.\n\"\"\"",
        "\"\"\"\nThe work states:\nIn sleeping mode it does not send any data, the fan is turned off.\nTo get data one has to wake it up.\n\"\"\"",
        "\"\"\"\nThe unit of the measured values.\nTwo modes are implemented:\nThe default mode is MassConcentrationEuropean returning\nvalues in microgram/cubic meter (mg/m³).\nThe other mode is ParticleConcentrationImperial returning values in\nparticles / 0.01 cubic foot (pcs/0.01cft).\nThe concentration is calculated by assuming\ndifferent mean sphere diameters of pm10 or pm2.5 particles.\n\"\"\"",
        "\"\"\"\n    Class representing the SD011 dust sensor and its methods.\n    The device_path on Win is one of your COM ports,\n    on Linux it is one of \"/dev/ttyUSB...\" or \"/dev/ttyS...\"\n    \"\"\"",
        "\"\"\"\n        The device_path on Win is one of your COM ports.\n        On Linux one of \"/dev/ttyUSB...\" or \"/dev/ttyAMA...\"\n        \"\"\"",
        "\"\"\"Convert pm size from µg/m3 back to concentration pcs/0.01sqf\"\"\"",
        "\"\"\"\n        Construct a data byte array from cmd_mode and cmd_value.\n        cmd_value has to be CommandMode type and cmd_value int.\n        Returns byte array of length 2.\n        \"\"\"",
        "\"\"\"\n        Get the sensor status at construction time of this instance:\n        the current status of the sensor.\n        \"\"\"",
        "\"\"\"Get the sensor response and return measured value of PM10 and PM25\"\"\"",
        "\"\"\"Request measurement data as a tuple from sensor when its in passive query mode\"\"\"",
        "\"\"\"Extracts the value of PM25 and PM10 from sensor response\"\"\"",
        "\"\"\"The method for sending commands to the sensor and returning the response\"\"\"",
        "\"\"\"\n        Get and check the response from the sensor.\n        Response can be the response of a command sent or\n        just the measurement data, while sensor is in report mode Initiative.\n        \"\"\"",
        "'''If no bytes are read the sensor might be in sleep mode.\n            It makes no sense to raise an exception here. The raise condition\n            should be checked in a context outside of this function.'''",
        "\"\"\"\n        Sets Report mode to Initiative. Work state to Measuring and Duty cycle to 0\n        \"\"\"",
        "\"\"\"\n        Generates the checksum for data to be sent or received from the sensor.\n        The data has to be of type byte array and must start with 0xAA,\n        followed by 0xB4 or 0xC5 or 0xC0 as second byte.\n        The sequence must end before the position of the checksum.\n        \"\"\""
    ],
    "functions": [
        "mass2particles",
        "__del__",
        "device_path",
        "report_mode",
        "report_mode",
        "work_state",
        "work_state",
        "duty_cycle",
        "duty_cycle",
        "device_id",
        "firmware",
        "unit_of_measure",
        "timeout",
        "__construct_data",
        "__get_current_config",
        "__calculate_read_timeout",
        "get_values",
        "request",
        "__extract_values_from_response",
        "__send",
        "__response",
        "reset",
        "__checksum_make"
    ],
    "classes": [
        "SDS011"
    ]
}