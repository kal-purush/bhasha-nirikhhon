{
    "identifiers": [
        "require",
        "require",
        "require",
        "xlsx",
        "xlsx",
        "workbook",
        "workbookJson",
        "row",
        "row",
        "symbol",
        "finalStockInfo",
        "symbol",
        "finalStockInfo",
        "symbol",
        "row",
        "getPriceAndVolume",
        "symbol",
        "finalStockInfo",
        "getMovingAverage",
        "symbol",
        "finalStockInfo",
        "getMovingAverage",
        "symbol",
        "finalStockInfo",
        "setTimeout",
        "finalStockInfo",
        "ticker",
        "finalStockInfo",
        "ticker",
        "request",
        "url",
        "err",
        "res",
        "body",
        "err",
        "err",
        "res",
        "dataKey",
        "data",
        "dates",
        "date",
        "date",
        "tempDate",
        "mostRecentDate",
        "mostRecentDate",
        "tempDate",
        "mostRecentDateKey",
        "date",
        "finalStockInfo",
        "ticker",
        "res",
        "dataKey",
        "mostRecentDateKey",
        "finalStockInfo",
        "ticker",
        "res",
        "dataKey",
        "mostRecentDateKey",
        "res",
        "dataKey",
        "mostRecentDateKey",
        "res",
        "dataKey",
        "mostRecentDateKey",
        "ticker",
        "finalStockInfo",
        "ticker",
        "request",
        "url",
        "err",
        "res",
        "body",
        "err",
        "err",
        "res",
        "dataKey",
        "data",
        "dates",
        "date",
        "date",
        "tempDate",
        "mostRecentDate",
        "mostRecentDate",
        "tempDate",
        "mostRecentDateKey",
        "date",
        "finalStockInfo",
        "ticker",
        "res",
        "dataKey",
        "mostRecentDateKey",
        "res",
        "dataKey",
        "mostRecentDateKey",
        "listOfStocks",
        "listOfStocks",
        "request",
        "url",
        "err",
        "res",
        "body",
        "err",
        "err",
        "res",
        "res"
    ],
    "literals": [
        "'request'",
        "'prompt'",
        "'xlsx'",
        "'test.xlsx'",
        "'Export'",
        "'ComprehensiveRating'",
        "'Comp Rating'",
        "'EMA'",
        "'SMA'",
        "https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${ticker}&apikey=GYWUJPM4V0P0WGF8",
        "'Time Series (Daily)'",
        "'4. close'",
        "'5. volume'",
        "'4. close'",
        "'5. volume'",
        "https://www.alphavantage.co/query?function=${type}&symbol=${ticker}&interval=daily&time_period=55&series_type=close&apikey=GYWUJPM4V0P0WGF8",
        "Technical Analysis: ${type}",
        "https://www.alphavantage.co/query?function=BATCH_STOCK_QUOTES&symbols=${listOfStocks}&apikey=GYWUJPM4V0P0WGF8",
        "'Stock Quotes'",
        "'Stock Quotes'"
    ],
    "variables": [
        "request",
        "prompt",
        "xlsx",
        "workbook",
        "workbookJson",
        "finalStockInfo",
        "symbol",
        "url",
        "dataKey",
        "data",
        "dates",
        "mostRecentDateKey",
        "mostRecentDate",
        "tempDate",
        "url",
        "dataKey",
        "data",
        "dates",
        "mostRecentDateKey",
        "mostRecentDate",
        "tempDate",
        "url"
    ],
    "comments": [
        "var workbook = xlsx.readFile('GrowthStocks.xlsx');",
        "console.log(workbookJson);",
        "Taking it in as a prompt",
        "prompt.start();",
        "prompt.get(['ticker'], (err, result) => {",
        "var stocks = result.ticker.split(',');",
        "var finalStockInfo = {};",
        "stocks.forEach(stock => {",
        "finalStockInfo[stock] = {};",
        "getPriceAndVolume(stock, finalStockInfo);",
        "getPriceAndVolume(stock, finalStockInfo);",
        "getMovingAverage(stock, 'EMA', finalStockInfo);",
        "getMovingAverage(stock, 'SMA', finalStockInfo);",
        "});",
        "setTimeout(function(){console.log(finalStockInfo)}, 2000);",
        "});"
    ],
    "docstrings": [],
    "functions": [
        "getPriceAndVolume",
        "getMovingAverage",
        "getPricesAndVolume"
    ],
    "classes": []
}