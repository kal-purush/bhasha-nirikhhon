{
    "identifiers": [
        "org",
        "toradocu",
        "util",
        "java",
        "io",
        "File",
        "java",
        "lang",
        "reflect",
        "Modifier",
        "java",
        "net",
        "URL",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "regex",
        "Matcher",
        "java",
        "util",
        "regex",
        "Pattern",
        "org",
        "mdkt",
        "compiler",
        "CompilationException",
        "org",
        "mdkt",
        "compiler",
        "InMemoryJavaCompiler",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "org",
        "toradocu",
        "conf",
        "Configuration",
        "org",
        "toradocu",
        "extractor",
        "DocumentedExecutable",
        "org",
        "toradocu",
        "extractor",
        "DocumentedParameter",
        "org",
        "toradocu",
        "extractor",
        "JavadocExtractor",
        "randoop",
        "condition",
        "specification",
        "Guard",
        "randoop",
        "condition",
        "specification",
        "Property",
        "log",
        "LoggerFactory",
        "getLogger",
        "method",
        "guard",
        "Modifier",
        "isPrivate",
        "method",
        "getDeclaringClass",
        "getModifiers",
        "sourceCodeBuilder",
        "addCommonInfo",
        "method",
        "addConditionCodeInformation",
        "method",
        "guard",
        "getConditionText",
        "sourceCodeBuilder",
        "sourceCode",
        "sourceCodeBuilder",
        "buildSource",
        "compileSource",
        "sourceCode",
        "e",
        "log",
        "info",
        "guard",
        "getConditionText",
        "e",
        "getLocalizedMessage",
        "e",
        "e",
        "e",
        "printStackTrace",
        "method",
        "guard",
        "property",
        "Modifier",
        "isPrivate",
        "method",
        "getDeclaringClass",
        "getModifiers",
        "sourceCodeBuilder",
        "addCommonInfo",
        "method",
        "methodReturnType",
        "method",
        "getReturnType",
        "getType",
        "getTypeName",
        "methodReturnType",
        "equals",
        "sourceCodeBuilder",
        "addArgument",
        "methodReturnType",
        "Configuration",
        "RETURN_VALUE",
        "addConditionCodeInformation",
        "method",
        "guard",
        "getConditionText",
        "sourceCodeBuilder",
        "addConditionCodeInformation",
        "method",
        "property",
        "getConditionText",
        "sourceCodeBuilder",
        "sourceCode",
        "sourceCodeBuilder",
        "buildSource",
        "compileSource",
        "sourceCode",
        "e",
        "log",
        "info",
        "guard",
        "getConditionText",
        "property",
        "getConditionText",
        "e",
        "getLocalizedMessage",
        "e",
        "e",
        "e",
        "printStackTrace",
        "sourceCode",
        "compiler",
        "InMemoryJavaCompiler",
        "newInstance",
        "compiler",
        "ignoreWarnings",
        "classpath",
        "url",
        "Configuration",
        "INSTANCE",
        "classDirs",
        "classpath",
        "add",
        "url",
        "getPath",
        "compiler",
        "useOptions",
        "join",
        "classpath",
        "compiler",
        "compile",
        "sourceCode",
        "method",
        "sourceCodeBuilder",
        "declaringClass",
        "method",
        "getDeclaringClass",
        "Modifier",
        "isPublic",
        "declaringClass",
        "getModifiers",
        "sourceCodeBuilder",
        "addPackage",
        "declaringClass",
        "sourceCodeBuilder",
        "addImport",
        "declaringClass",
        "getName",
        "sourceCodeBuilder",
        "addArgument",
        "declaringClass",
        "getName",
        "Configuration",
        "RECEIVER",
        "sourceCodeBuilder",
        "copyClassTypeArguments",
        "declaringClass",
        "getTypeParameters",
        "sourceCodeBuilder",
        "copyTypeArguments",
        "method",
        "getExecutable",
        "getTypeParameters",
        "sourceCodeBuilder",
        "method",
        "sourceCodeBuilder",
        "conditionText",
        "matcher",
        "Pattern",
        "compile",
        "matcher",
        "conditionText",
        "matcher",
        "find",
        "className",
        "matcher",
        "group",
        "configuration",
        "Configuration",
        "INSTANCE",
        "sourceFile",
        "configuration",
        "sourceDir",
        "toString",
        "File",
        "separator",
        "method",
        "getDeclaringClass",
        "getCanonicalName",
        "replaceAll",
        "File",
        "separator",
        "classesInPackage",
        "JavadocExtractor",
        "getClassesInSamePackage",
        "method",
        "getDeclaringClass",
        "getCanonicalName",
        "sourceFile",
        "classInPackage",
        "classesInPackage",
        "classInPackage",
        "endsWith",
        "className",
        "sourceCodeBuilder",
        "addImport",
        "classInPackage",
        "method",
        "conditionText",
        "sourceCodeBuilder",
        "substitutedText",
        "substituteArgs",
        "sourceCodeBuilder",
        "method",
        "conditionText",
        "sourceCodeBuilder",
        "addCondition",
        "substitutedText",
        "importClassesInInstanceOf",
        "method",
        "sourceCodeBuilder",
        "substitutedText",
        "sourceCodeBuilder",
        "method",
        "text",
        "text",
        "ARGS_REGEX",
        "argsMatcher",
        "Pattern",
        "compile",
        "ARGS_REGEX",
        "matcher",
        "text",
        "argsMatcher",
        "find",
        "argIndex",
        "valueOf",
        "argsMatcher",
        "group",
        "parameter",
        "method",
        "getParameters",
        "get",
        "argIndex",
        "getName",
        "text",
        "text",
        "replace",
        "argsMatcher",
        "group",
        "parameter",
        "argument",
        "method",
        "getParameters",
        "get",
        "argIndex",
        "argument",
        "asReflectionParameter",
        "isVarArgs",
        "sourceCodeBuilder",
        "addVarArgArgument",
        "argument",
        "toString",
        "sourceCodeBuilder",
        "addArgument",
        "argument",
        "toString",
        "text"
    ],
    "literals": [
        "\"The following specification was generated but discarded:\\n\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"void\"",
        "\"The following specification was generated but discarded:\\n\"",
        "\" ? \"",
        "\"\\n\"",
        "\"\\n\"",
        "\"-cp\"",
        "\":\"",
        "\"GeneratedSpecs\"",
        "\" instanceof ([A-Z][A-Za-z]+)\"",
        "\"\\\\.\"",
        "\".java\"",
        "\".\"",
        "\"args\\\\[([0-9])\\\\]\""
    ],
    "variables": [],
    "comments": [
        "if the target class is private we cannot apply compliance check.",
        "ignore",
        "if the target class is private we cannot apply compliance check.",
        "ignore",
        "class is package-private"
    ],
    "docstrings": [
        "Logger of this class.",
        "* Tries to compile the boolean condition in the given {@code Guard} and tells whether the\n   * compilation was successful.\n   *\n   * @param method documented executable the guard belongs to\n   * @param guard the guard which condition must be checked for compliance\n   * @return true if the condition was compilable, false otherwise",
        "* Tries to compile the boolean conditions in the given {@code Guard} and {@code Property} and\n   * tells whether the compilation was successful.\n   *\n   * @param method documented executable the guard belongs to\n   * @param guard the guard which condition must be checked for compliance\n   * @param property the property which condition must be checked for compliance\n   * @return true if the condition was compilable, false otherwise",
        "* Invokes the in-memory compiler on the given source code.\n   *\n   * @param sourceCode source code to be compiled\n   * @throws Exception if the compiler encounters problems",
        "* Add to the source code to be compiled the information common to any specification.\n   *\n   * @param method the method which specifications must be compiled\n   * @return a {@code SourceCodeBuilder} object that wraps the source code",
        "* Finds if the condition involves an {@code instanceof} invocation and imports in the source code\n   * the classes it is referred to\n   *\n   * @param method the method which specifications must be compiled\n   * @param sourceCodeBuilder {@code SourceCodeBuilder} object that wraps the source code\n   * @param conditionText condition text",
        "* Extracts and add to the source code information expressed in the given condition text.\n   *\n   * @param method documented executable the guard belongs to\n   * @param conditionText the condition text\n   * @param sourceCodeBuilder {@code SourceCodeBuilder} object that wraps the source code",
        "* Substitutes in the condition the actual arguments names, since Toradocu-generated conditions\n   * refer to the nth argument with the {@code args[n]} notation.\n   *\n   * @param sourceCodeBuilder {@code SourceCodeBuilder} object that wraps the source code\n   * @param method documented executable the guard belongs to\n   * @param text condition text\n   * @return condition text with argument names substituted"
    ],
    "functions": [
        "isSpecCompilable",
        "isPostSpecCompilable",
        "compileSource",
        "SourceCodeBuilder",
        "addCommonInfo",
        "importClassesInInstanceOf",
        "addConditionCodeInformation",
        "substituteArgs"
    ],
    "classes": [
        "ComplianceChecks"
    ]
}