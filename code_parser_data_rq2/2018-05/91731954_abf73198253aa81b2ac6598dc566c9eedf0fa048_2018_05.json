{
    "identifiers": [
        "numpy",
        "np",
        "math",
        "M",
        "e",
        "Eo",
        "Eo",
        "e",
        "sin",
        "Eo",
        "M",
        "e",
        "cos",
        "Eo",
        "E",
        "i",
        "i",
        "cos",
        "E",
        "e",
        "e",
        "cos",
        "E",
        "acos",
        "v_pre",
        "degrees",
        "v",
        "v",
        "kep",
        "np",
        "zeros",
        "kep",
        "pi",
        "sma_pre",
        "kep",
        "kep",
        "kep",
        "kep",
        "Mtov",
        "kep",
        "ecc",
        "radians",
        "tanom",
        "sma",
        "ecc",
        "ecc",
        "slr",
        "ecc",
        "cos",
        "tanom",
        "degrees",
        "tanom",
        "argper",
        "tanom",
        "radians",
        "arglat",
        "sin",
        "arglat",
        "cos",
        "arglat",
        "degrees",
        "arglat",
        "radians",
        "argper",
        "sqrt",
        "mu",
        "slr",
        "ecc",
        "cos",
        "argper",
        "carglat",
        "ecc",
        "sin",
        "argper",
        "sarglat",
        "degrees",
        "argper",
        "radians",
        "inc",
        "sin",
        "inc",
        "cos",
        "inc",
        "degrees",
        "inc",
        "radians",
        "raan",
        "sin",
        "raan",
        "cos",
        "raan",
        "degrees",
        "raan",
        "rm",
        "craan",
        "carglat",
        "sraan",
        "cinc",
        "sarglat",
        "rm",
        "sraan",
        "carglat",
        "cinc",
        "sarglat",
        "craan",
        "rm",
        "sinc",
        "sarglat",
        "c4",
        "craan",
        "c6",
        "sraan",
        "cinc",
        "c5",
        "c4",
        "sraan",
        "c6",
        "craan",
        "cinc",
        "c5",
        "c4",
        "c5",
        "sinc",
        "r",
        "np",
        "array",
        "Kep_state",
        "kep",
        "r"
    ],
    "literals": [
        "\"__main__\""
    ],
    "variables": [
        "i",
        "Eo",
        "E",
        "Eo",
        "i",
        "v_pre",
        "v",
        "v",
        "r",
        "mu",
        "sma_pre",
        "sma",
        "ecc",
        "inc",
        "argper",
        "raan",
        "tanom",
        "tanom",
        "slr",
        "rm",
        "tanom",
        "arglat",
        "arglat",
        "sarglat",
        "carglat",
        "arglat",
        "argper",
        "c4",
        "c5",
        "c6",
        "argper",
        "inc",
        "sinc",
        "cinc",
        "inc",
        "raan",
        "sraan",
        "craan",
        "raan",
        "r",
        "r",
        "r",
        "r",
        "r",
        "r",
        "kep",
        "r"
    ],
    "comments": [
        "Computes true anomaly v from a given mean anomaly M and eccentricity e by using Newton-Raphson method",
        "input",
        "M = mean anomaly (degrees)",
        "e = eccentricity (number)",
        "output",
        "v = true anomaly (degrees)",
        "this function uses the keplerian elements to compute the position and velocity vector",
        "input",
        "kep is a 1x6 matrix which contains the following variables",
        "kep(0)=inclination (degrees)",
        "kep(1)=right ascension of the ascending node (degrees)",
        "kep(2)=eccentricity (number)",
        "kep(3)=argument of perigee (degrees)",
        "kep(4)=mean anomaly (degrees)",
        "kep(5)=mean motion (revs per day)",
        "output",
        "r = 1x6 matrix which contains the position and velocity vector",
        "r(0),r(1),r(2) = position vector (rx,ry,rz) m",
        "r(3),r(4),r(5) = velocity vector (vx,vy,vz) m/s",
        "unload orbital elements array",
        "sma is semi major axis, we use mean motion (kep(6)) to compute this",
        "eccentricity",
        "inclination",
        "argument of perigee",
        "right ascension of the ascending node",
        "we use mean anomaly(kep(5)) and the function Mtov to compute true anomaly (tanom)",
        "argument of latitude",
        "position vector",
        "velocity vector"
    ],
    "docstrings": [
        "\"\"\"Old script kinda bad coding practises.\nImportant! Output state vector in km\"\"\""
    ],
    "functions": [
        "Mtov",
        "Kep_state"
    ],
    "classes": []
}