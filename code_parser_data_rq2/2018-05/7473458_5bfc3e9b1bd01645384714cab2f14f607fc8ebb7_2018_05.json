{
    "identifiers": [
        "contextlib",
        "unittest",
        "ruffus",
        "os",
        "numpy",
        "shutil",
        "glob",
        "tempfile",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "contextlib",
        "contextmanager",
        "target",
        "os",
        "path",
        "curdir",
        "os",
        "chdir",
        "target",
        "os",
        "chdir",
        "curdir",
        "outfile",
        "open",
        "outfile",
        "outf",
        "outf",
        "write",
        "format",
        "os",
        "getpid",
        "outfile",
        "open",
        "outfile",
        "outf",
        "outf",
        "write",
        "join",
        "numpy",
        "random",
        "normal",
        "save_pid",
        "outfile",
        "infile",
        "outfile",
        "open",
        "infile",
        "inf",
        "x",
        "strip",
        "x",
        "inf",
        "readlines",
        "open",
        "outfile",
        "outf",
        "outf",
        "write",
        "format",
        "sum",
        "n",
        "len",
        "n",
        "save_pid",
        "outfile",
        "infiles",
        "outfile",
        "open",
        "outfile",
        "outf",
        "infile",
        "infiles",
        "open",
        "infile",
        "inf",
        "outf",
        "write",
        "inf",
        "read",
        "save_pid",
        "outfile",
        "unittest",
        "TestCase",
        "format",
        "x",
        "x",
        "format",
        "x",
        "x",
        "os",
        "makedirs",
        "TESTS_TEMPDIR",
        "OSError",
        "tempfile",
        "mkdtemp",
        "suffix",
        "prefix",
        "format",
        "id",
        "dir",
        "TESTS_TEMPDIR",
        "shutil",
        "rmtree",
        "work_dir",
        "present",
        "absent",
        "fn",
        "present",
        "os",
        "path",
        "join",
        "work_dir",
        "fn",
        "assertTrue",
        "os",
        "path",
        "exists",
        "path",
        "format",
        "path",
        "fn",
        "absent",
        "os",
        "path",
        "join",
        "work_dir",
        "fn",
        "assertFalse",
        "os",
        "path",
        "exists",
        "path",
        "format",
        "path",
        "pipeline_name",
        "ruffus",
        "Pipeline",
        "clear_all",
        "ruffus",
        "Pipeline",
        "pipeline_name",
        "pipeline",
        "originate",
        "task_func",
        "create_files",
        "output",
        "format",
        "x",
        "x",
        "pipeline",
        "transform",
        "task_func",
        "compute_mean",
        "input",
        "task_create_files",
        "ruffus",
        "suffix",
        "output",
        "pipeline",
        "merge",
        "task_func",
        "combine_means",
        "input",
        "task_compute_mean",
        "output",
        "kwargs",
        "build_pipeline",
        "id",
        "temp_cd",
        "work_dir",
        "ruffus",
        "pipeline_run",
        "pipeline",
        "pipeline",
        "kwargs",
        "check_files",
        "expected_output_files",
        "fn",
        "glob",
        "glob",
        "os",
        "path",
        "join",
        "work_dir",
        "open",
        "fn",
        "inf",
        "pids",
        "append",
        "inf",
        "readline",
        "strip",
        "pids",
        "BaseTest",
        "run_pipeline",
        "multiprocess",
        "NUM_CORES",
        "read_pids",
        "assertEqual",
        "len",
        "pids",
        "NUM_CORES",
        "run_pipeline",
        "multithread",
        "NUM_CORES",
        "read_pids",
        "assertEqual",
        "len",
        "pids",
        "assertEqual",
        "pids",
        "os",
        "getpid",
        "run_pipeline",
        "multithread",
        "NUM_CORES",
        "pool_manager",
        "read_pids",
        "assertEqual",
        "len",
        "pids",
        "assertEqual",
        "pids",
        "os",
        "getpid",
        "assertRaises",
        "ValueError",
        "run_pipeline",
        "multithread",
        "NUM_CORES",
        "pool_manager",
        "unittest",
        "main"
    ],
    "literals": [
        "\"tmp\"",
        "\".pid\"",
        "\"w\"",
        "\"{}\"",
        "\"w\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"r\"",
        "\"w\"",
        "\"{}\\n\"",
        "\"w\"",
        "\"sample_{:02}.mean\"",
        "\"sample_{:02}.txt\"",
        "\"\"",
        "\"ruffus_tmp_{}_\"",
        "\"file {} does not exist\"",
        "\"file {} does exist but not expected\"",
        "\"sample_{:02}.txt\"",
        "\".txt\"",
        "\".mean\"",
        "\"means.txt\"",
        "\"*.pid\"",
        "\"gevent\"",
        "\"mystical_manager\"",
        "\"__main__\""
    ],
    "variables": [
        "ROOT",
        "TESTS_TEMPDIR",
        "NUM_CORES",
        "curdir",
        "n",
        "expected_output_files",
        "work_dir",
        "path",
        "path",
        "pipeline",
        "task_create_files",
        "task_compute_mean",
        "task_combine_means",
        "pipeline",
        "pids",
        "pids",
        "pids",
        "pids"
    ],
    "comments": [
        "number of cores used for testing parallelism",
        "fudge: clear all previous pipelines"
    ],
    "docstrings": [
        "\"\"\"compute mean\"\"\""
    ],
    "functions": [
        "temp_cd",
        "save_pid",
        "create_files",
        "compute_mean",
        "combine_means",
        "setUp",
        "tearDown",
        "check_files",
        "build_pipeline",
        "run_pipeline",
        "read_pids",
        "test_pipeline_runs_with_multiprocessing",
        "test_pipeline_runs_with_multithreading",
        "test_pipeline_runs_with_gevent_manager",
        "test_pipeline_fails_with_unknown_manager"
    ],
    "classes": [
        "BaseTest",
        "TestExecutionEngines"
    ]
}