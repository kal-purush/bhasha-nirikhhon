{
    "identifiers": [
        "require",
        "express",
        "require",
        "require",
        "require",
        "app",
        "bodyParser",
        "app",
        "bodyParser",
        "app",
        "express",
        "app",
        "req",
        "res",
        "res",
        "path",
        "__dirname",
        "app",
        "FORM_VALIDATION_URL",
        "req",
        "res",
        "fs",
        "path",
        "__dirname",
        "fs",
        "path",
        "__dirname",
        "LAST_ID_FILENAME",
        "fs",
        "path",
        "__dirname",
        "LAST_ID_FILENAME",
        "error",
        "writeToFile",
        "req",
        "res",
        "writeToFile",
        "req",
        "res",
        "fs",
        "path",
        "__dirname",
        "error",
        "error",
        "error",
        "fs",
        "path",
        "__dirname",
        "LAST_ID_FILENAME",
        "error",
        "writeToFile",
        "req",
        "res",
        "req",
        "res",
        "fs",
        "path",
        "__dirname",
        "LAST_ID_FILENAME",
        "err",
        "data",
        "isNaN",
        "data",
        "parseInt",
        "data",
        "id",
        "req",
        "fs",
        "path",
        "__dirname",
        "LAST_ID_FILENAME",
        "id",
        "error",
        "fs",
        "path",
        "__dirname",
        "id",
        "error",
        "error",
        "error",
        "res",
        "res",
        "res",
        "app",
        "SAVED_FORMS_URL",
        "req",
        "res",
        "fs",
        "path",
        "__dirname",
        "files",
        "a",
        "b",
        "fs",
        "path",
        "__dirname",
        "a",
        "fs",
        "path",
        "__dirname",
        "b",
        "files",
        "file",
        "index",
        "file",
        "LAST_ID_FILENAME",
        "require",
        "path",
        "__dirname",
        "file",
        "arrayOfSavedFormsInJSON",
        "jsonObject",
        "res",
        "res",
        "arrayOfSavedFormsInJSON",
        "app",
        "parseInt",
        "SERVER_PORT",
        "server",
        "server",
        "host",
        "port"
    ],
    "literals": [
        "'express'",
        "'body-parser'",
        "'fs'",
        "\"path\"",
        "'/process_form'",
        "'/saved_forms'",
        "'10101'",
        "'ids.txt'",
        "'public'",
        "'/'",
        "'/'",
        "'public/index.html'",
        "'forms'",
        "'forms/'",
        "'forms/'",
        "'0'",
        "'utf-8'",
        "'forms'",
        "'Error '",
        "'forms/'",
        "'0'",
        "'utf-8'",
        "'forms/'",
        "'Index file is corrupted! There is not a number there!'",
        "'forms/'",
        "'utf-8'",
        "'forms/form_'",
        "'.json'",
        "'utf-8'",
        "'content-type'",
        "'text/plain'",
        "'OK'",
        "'forms'",
        "'forms/'",
        "'forms/'",
        "'forms/'",
        "\"Content-Type\"",
        "\"application/json\"",
        "\"App is listening at http://%s:%s\""
    ],
    "variables": [
        "express",
        "app",
        "bodyParser",
        "fs",
        "path",
        "FORM_VALIDATION_URL",
        "SAVED_FORMS_URL",
        "SERVER_PORT",
        "LAST_ID_FILENAME",
        "id",
        "arrayOfSavedFormsInJSON",
        "files",
        "jsonObject",
        "server",
        "host",
        "port"
    ],
    "comments": [
        "The URL of backend form handler",
        "The URL of backend form handler",
        "Send the index page to the client",
        "Get POST request with form's data and save it to the local file system",
        "If everything is ok, send the feedback to the client",
        "Process GET request to show saved forms",
        "Sorting files to arrange it it the chronological orger",
        "Process all the files and put each form to the array",
        "After we finish, send this data to the client",
        "Create server"
    ],
    "docstrings": [
        "*   Trask test 1\n*   Made by Anton Kretov,\n*   anton@kretov.cz, 2018\n*\n*   Simple server-side part of the application. By using Express we get GET and POST requests with form data and process it\n*   (save to file, load from file)\n*\n*   You can make use of this template to save your forms to your DB\n*"
    ],
    "functions": [
        "writeToFile"
    ],
    "classes": []
}