{
    "identifiers": [
        "com",
        "android",
        "bluetooth",
        "hfp",
        "org",
        "mockito",
        "Mockito",
        "android",
        "bluetooth",
        "BluetoothDevice",
        "android",
        "bluetooth",
        "BluetoothHeadset",
        "android",
        "bluetooth",
        "BluetoothProfile",
        "android",
        "content",
        "Intent",
        "org",
        "junit",
        "Assert",
        "device",
        "toState",
        "fromState",
        "intent",
        "Assert",
        "assertNotNull",
        "intent",
        "Assert",
        "assertEquals",
        "BluetoothHeadset",
        "ACTION_AUDIO_STATE_CHANGED",
        "intent",
        "getAction",
        "Assert",
        "assertEquals",
        "device",
        "intent",
        "getParcelableExtra",
        "BluetoothDevice",
        "EXTRA_DEVICE",
        "Assert",
        "assertEquals",
        "toState",
        "intent",
        "getIntExtra",
        "BluetoothProfile",
        "EXTRA_STATE",
        "Assert",
        "assertEquals",
        "fromState",
        "intent",
        "getIntExtra",
        "BluetoothProfile",
        "EXTRA_PREVIOUS_STATE",
        "device",
        "toState",
        "fromState",
        "intent",
        "checkFlag",
        "Assert",
        "assertNotNull",
        "intent",
        "Assert",
        "assertEquals",
        "BluetoothHeadset",
        "ACTION_CONNECTION_STATE_CHANGED",
        "intent",
        "getAction",
        "checkFlag",
        "Assert",
        "assertEquals",
        "Intent",
        "FLAG_RECEIVER_INCLUDE_BACKGROUND",
        "intent",
        "getFlags",
        "Assert",
        "assertEquals",
        "device",
        "intent",
        "getParcelableExtra",
        "BluetoothDevice",
        "EXTRA_DEVICE",
        "Assert",
        "assertEquals",
        "toState",
        "intent",
        "getIntExtra",
        "BluetoothProfile",
        "EXTRA_STATE",
        "Assert",
        "assertEquals",
        "fromState",
        "intent",
        "getIntExtra",
        "BluetoothProfile",
        "EXTRA_PREVIOUS_STATE",
        "device",
        "toState",
        "fromState",
        "intent",
        "verifyConnectionStateBroadcast",
        "device",
        "toState",
        "fromState",
        "intent",
        "device",
        "intent",
        "checkFlag",
        "Assert",
        "assertNotNull",
        "intent",
        "Assert",
        "assertEquals",
        "BluetoothHeadset",
        "ACTION_ACTIVE_DEVICE_CHANGED",
        "intent",
        "getAction",
        "Assert",
        "assertEquals",
        "device",
        "intent",
        "getParcelableExtra",
        "BluetoothDevice",
        "EXTRA_DEVICE",
        "checkFlag",
        "Assert",
        "assertEquals",
        "Intent",
        "FLAG_RECEIVER_REGISTERED_ONLY_BEFORE_BOOT",
        "Intent",
        "FLAG_RECEIVER_INCLUDE_BACKGROUND",
        "intent",
        "getFlags",
        "headsetPhoneState",
        "headsetCallState",
        "timeoutMs",
        "verify",
        "headsetPhoneState",
        "timeout",
        "timeoutMs",
        "times",
        "setNumActiveCall",
        "headsetCallState",
        "mNumActive",
        "verify",
        "headsetPhoneState",
        "timeout",
        "timeoutMs",
        "times",
        "setNumHeldCall",
        "headsetCallState",
        "mNumHeld",
        "verify",
        "headsetPhoneState",
        "timeout",
        "timeoutMs",
        "times",
        "setCallState",
        "headsetCallState",
        "mCallState"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Copyright 2018 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Helper functions for HFP related tests",
        "* Verify the content of a {@link BluetoothHeadset#ACTION_AUDIO_STATE_CHANGED} intent\n     *\n     * @param device Bluetooth device\n     * @param toState value of {@link BluetoothProfile#EXTRA_STATE}\n     * @param fromState value of {@link BluetoothProfile#EXTRA_PREVIOUS_STATE}\n     * @param intent a {@link BluetoothHeadset#ACTION_AUDIO_STATE_CHANGED} intent",
        "* Verify the content of a {@link BluetoothHeadset#ACTION_CONNECTION_STATE_CHANGED} intent\n     *\n     * @param device Bluetooth device\n     * @param toState value of {@link BluetoothProfile#EXTRA_STATE}\n     * @param fromState value of {@link BluetoothProfile#EXTRA_PREVIOUS_STATE}\n     * @param intent a {@link BluetoothHeadset#ACTION_CONNECTION_STATE_CHANGED} intent\n     * @param checkFlag whether intent flag should be verified, normally this can only be done at\n     *                  the sender end",
        "* Verify the content of a {@link BluetoothHeadset#ACTION_CONNECTION_STATE_CHANGED} intent\n     * and its flag, normally used at sender end\n     *\n     * @param device Bluetooth device\n     * @param toState value of {@link BluetoothProfile#EXTRA_STATE}\n     * @param fromState value of {@link BluetoothProfile#EXTRA_PREVIOUS_STATE}\n     * @param intent a {@link BluetoothHeadset#ACTION_CONNECTION_STATE_CHANGED} intent",
        "* Verify the content of a {@link BluetoothHeadset#ACTION_ACTIVE_DEVICE_CHANGED} intent\n     * and its flag, normally used at sender end\n     *\n     * @param device intended active Bluetooth device\n     * @param intent a {@link BluetoothHeadset#ACTION_ACTIVE_DEVICE_CHANGED} intent\n     * @param checkFlag whether intent flag should be verified, normally this can only be done at\n     *                  the sender end",
        "* Helper function to check if {@link HeadsetPhoneState} is set to correct values indicated in\n     * {@param headsetCallState}\n     *\n     * @param headsetPhoneState a mocked {@link HeadsetPhoneState}\n     * @param headsetCallState intended headset call state\n     * @param timeoutMs timeout for this check in asynchronous test conditions"
    ],
    "functions": [
        "verifyAudioStateBroadcast",
        "verifyConnectionStateBroadcast",
        "verifyConnectionStateBroadcast",
        "verifyActiveDeviceChangedBroadcast",
        "verifyPhoneStateChangeSetters"
    ],
    "classes": [
        "HeadsetTestUtils"
    ]
}