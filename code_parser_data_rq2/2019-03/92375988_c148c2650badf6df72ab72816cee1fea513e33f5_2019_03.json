{
    "identifiers": [
        "com",
        "exonum",
        "binding",
        "runtime",
        "com",
        "exonum",
        "binding",
        "service",
        "ServiceModule",
        "com",
        "google",
        "auto",
        "value",
        "AutoValue",
        "java",
        "util",
        "Supplier",
        "AutoValue",
        "serviceId",
        "serviceModuleSupplier",
        "serviceId",
        "serviceModuleSupplier"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "TODO: What if we define an alternative name for \"service artifact\" so that the \"service\" term",
        "is not overloaded? Currently \"service\"-as artifact might be confused with",
        "\"service\"-as instance of Service (or \"service instance\")?",
        "- Bundle (as in OSGi â€” short and not currently used)?",
        "- Plugin (I don't think it works in our case)?",
        "[ECR-3008]"
    ],
    "docstrings": [
        "* A complete definition of a loaded service that allows the framework to identify and instantiate\n * service instances.",
        "* Returns the unique identifier of the service.",
        "* Returns a supplier of {@linkplain ServiceModule service modules} configuring their bindings.\n   * The supplier will always return the same module corresponding to this service, but not\n   * necessarily the same instance."
    ],
    "functions": [
        "ServiceId",
        "getId",
        "getModuleSupplier",
        "LoadedServiceDefinition",
        "newInstance"
    ],
    "classes": [
        "LoadedServiceDefinition"
    ]
}