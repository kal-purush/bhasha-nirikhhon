{
    "identifiers": [
        "$",
        "totalSeconds",
        "totalSeconds",
        "totalSeconds",
        "totalMinutes",
        "totalSeconds",
        "totalSeconds",
        "Constants",
        "totalSeconds",
        "Constants",
        "totalSeconds",
        "totalSeconds",
        "Constants",
        "totalMinutes",
        "totalSeconds",
        "totalSeconds",
        "totalMinutes",
        "totalSeconds",
        "totalSeconds",
        "num",
        "num",
        "parseInt",
        "num",
        "num",
        "num",
        "seconds",
        "_secondsToTimeObj",
        "seconds",
        "timeObj",
        "timeObj",
        "_paddedValue",
        "timeObj",
        "_paddedValue",
        "timeObj",
        "_paddedValue",
        "timeObj",
        "timeObj",
        "timeObj",
        "_paddedValue",
        "timeObj",
        "_paddedValue",
        "timeObj",
        "timeObj",
        "prettyTime",
        "timeObj",
        "_paddedValue",
        "timeObj",
        "prettyTime",
        "timeObj",
        "prettyTime",
        "seconds",
        "formattedTime",
        "_secondsToTimeObj",
        "seconds",
        "timeObj",
        "timeObj",
        "timeObj",
        "timeObj",
        "timeObj",
        "timeObj",
        "_paddedValue",
        "timeObj",
        "_paddedValue",
        "timeObj",
        "_paddedValue",
        "timeObj",
        "_paddedValue",
        "timeObj",
        "_paddedValue",
        "timeObj",
        "_paddedValue",
        "timeObj",
        "i",
        "formatDef",
        "i",
        "formattedTime",
        "formattedTime",
        "formatDef",
        "i",
        "formatDef",
        "i",
        "formattedTime",
        "timeFormat",
        "isNaN",
        "timeFormat",
        "timeFormat",
        "timeFormat",
        "timeFormat",
        "timeFormat",
        "timeFormat",
        "timeFormat",
        "timeFormat",
        "days",
        "hrs",
        "mins",
        "secs",
        "days",
        "seconds",
        "days",
        "Constants",
        "hrs",
        "seconds",
        "hrs",
        "mins",
        "seconds",
        "mins",
        "secs",
        "seconds",
        "secs",
        "seconds",
        "editedTime",
        "editedTime",
        "time",
        "editedTime",
        "editedTime",
        "editedTime",
        "editedTime",
        "arr",
        "editedTime",
        "time",
        "arr",
        "arr",
        "editedTime",
        "arr",
        "editedTime",
        "time",
        "arr",
        "Constants",
        "arr",
        "arr",
        "arr",
        "editedTime",
        "arr",
        "editedTime",
        "time",
        "arr",
        "arr",
        "arr",
        "time",
        "timerInstance",
        "newState",
        "timerInstance",
        "newState",
        "$",
        "timerInstance",
        "newState",
        "timerInstance",
        "$",
        "timerInstance",
        "timerInstance",
        "$",
        "timerInstance",
        "timerInstance",
        "prettyTimeToSeconds",
        "$",
        "timerInstance",
        "timerInstance",
        "timerInstance",
        "timerInstance",
        "timerInstance",
        "unixSeconds",
        "timerInstance",
        "timerInstance",
        "timerInstance",
        "timerInstance",
        "timerInstance",
        "timerInstance",
        "clearInterval",
        "timerInstance",
        "setState",
        "timerInstance",
        "Constants",
        "timerInstance",
        "$",
        "timerInstance",
        "timerInstance",
        "timerInstance",
        "timerInstance",
        "timerInstance",
        "timerInstance",
        "timerInstance",
        "timerInstance",
        "timerInstance",
        "timerInstance",
        "clearInterval",
        "timerInstance",
        "setState",
        "timerInstance",
        "Constants",
        "timerInstance",
        "getDefaultConfig",
        "unixSeconds",
        "secondsToPrettyTime",
        "secondsToFormattedTime",
        "durationTimeToSeconds",
        "prettyTimeToSeconds",
        "setState",
        "makeEditable",
        "intervalHandler",
        "element",
        "config",
        "element",
        "$",
        "config",
        "element",
        "element",
        "utils",
        "config",
        "config",
        "utils",
        "config",
        "config",
        "$",
        "config",
        "utils",
        "utils",
        "utils",
        "Timer",
        "Constants",
        "utils",
        "Constants",
        "setInterval",
        "utils",
        "Timer",
        "Constants",
        "utils",
        "Constants",
        "clearInterval",
        "Timer",
        "Constants",
        "utils",
        "Constants",
        "utils",
        "utils",
        "setInterval",
        "utils",
        "Timer",
        "clearInterval",
        "utils",
        "Constants",
        "$",
        "Constants",
        "$",
        "Timer",
        "$",
        "originalConfig",
        "Timer",
        "$",
        "utils",
        "$",
        "utils",
        "$",
        "$",
        "options",
        "options",
        "options",
        "$",
        "Constants",
        "Timer",
        "$",
        "Constants",
        "Timer",
        "options",
        "$",
        "Constants",
        "options",
        "instance",
        "options",
        "instance",
        "options",
        "instance",
        "jQuery"
    ],
    "literals": [
        "'timer'",
        "'running'",
        "'paused'",
        "'removed'",
        "'0'",
        "'Time up!'",
        "':'",
        "':'",
        "':'",
        "':'",
        "':'",
        "''",
        "':'",
        "' min'",
        "' sec'",
        "'%d'",
        "'%h'",
        "'%m'",
        "'%s'",
        "'%g'",
        "'%t'",
        "'%D'",
        "'%H'",
        "'%M'",
        "'%S'",
        "'%G'",
        "'%T'",
        "'Invalid string passed in durationTimeToSeconds!'",
        "'d'",
        "''",
        "'h'",
        "''",
        "'m'",
        "''",
        "'s'",
        "''",
        "'sec'",
        "''",
        "'min'",
        "''",
        "':'",
        "':'",
        "':'",
        "'state'",
        "'focus'",
        "'blur'",
        "'seconds'",
        "'html'",
        "'INPUT'",
        "'TEXTAREA'",
        "'val'",
        "'string'",
        "'Countdown option set without duration!'",
        "'Cannot set editable on a countdown timer!'",
        "'seconds'",
        "'seconds'",
        "'start'",
        "'string'",
        "'function'"
    ],
    "variables": [
        "Constants",
        "totalMinutes",
        "timeObj",
        "prettyTime",
        "timeObj",
        "formatDef",
        "i",
        "days",
        "hrs",
        "mins",
        "secs",
        "seconds",
        "arr",
        "time",
        "utils",
        "originalConfig",
        "instance"
    ],
    "comments": [
        "global Constants:true",
        "Default seconds value to start timer from",
        "Allow making changes to the time by clicking on it",
        "Duration to run callback after",
        "Default callback to run after elapsed duration",
        "This will repeat callback every n times duration is elapsed",
        "If true, this will render the timer as a countdown (must have duration)",
        "This sets the format in which the time will be printed",
        "How often should timer display update",
        "Use `for` loop to support ie8 after transpilation",
        "A number was passed",
        "Match 10d in 10d5h30m10s",
        "Match 5h in 5h30m10s",
        "Match 30m in 5h30m10s",
        "Match 10s in 5h30m10s",
        "If the timer was called with a duration parameter,",
        "run the callback if duration is complete",
        "and remove the duration if `repeat` is not requested",
        "A HTML element will have the html() method in jQuery to inject content,",
        "In case of input element or a textarea, jQuery provides the val() method to inject content",
        "In case duration is set along with a callback as well as repeat,",
        "then the update frequency needs to be at least 1000ms to prevent callback from being fired more than once",
        "If countdown is set, ensure duration is set as well",
        "Also set the total seconds to the duration so that the first render gets the correct value",
        "global $:true",
        "Pass in 'instance' to provide for the value of 'this' in the called function"
    ],
    "docstrings": [
        "* jQuery Timer plugin\n * @author Walmik Deshpande\n * @web https://github.com/walmik/timer.jquery\n * @documents https://jquerytimer.com/\n * @version 0.7.1 2017-09-27",
        "* Private\n * Convert (a number) seconds to a Object with days, hours, minutes etc as properties\n * Used by secondsToPrettyTime for to format the time display\n * @param  {Number} totalSeconds The total seconds that needs to be distributed into an Object\n * @return {Object} Object with days, hours, minutes, totalMinutes, seconds and totalSeconds",
        "* Private\n * Method to pad a given number with a 0 in case it's less than 10\n * @param  {Number} num The number to be padded\n * @return {String|Number} Padded (if less than 10) number",
        "* Method to return the base settings that can be used in case of no or missing options\n * @return {Object} Default config",
        "* @return {Number} Return seconds passed since Jan 1, 1970",
        "* Convert seconds to pretty time.\n * For example 100 becomes 1:40 min, 34 becomes 34 sec and 10000 becomes 2:46:40\n * @param  {Number} seconds Seconds to be converted\n * @return {String}         Pretty time",
        "* Convert seconds to user defined format for time\n * @param  {Number} seconds       Seconds to be converted\n * @param  {String} formattedTime User defined format\n * @return {String}               Formatted time string",
        "* Convert duration time format to seconds\n * @param  {String} timeFormat e.g. 5m30s\n * @return {Number} Returns 330",
        "* Parse pretty time and return it as seconds\n * Currently only the native pretty time is parseable\n * @param  {String} editedTime The time as edited by the user\n * @return {Number}            Parsed time",
        "* Set the provided state of the timer in the data attr `state` of the timer HTML element\n * @param  {Object} timerInstance Instance of the timer object\n * @param  {[type]} newState      The state to be set on the HTML element",
        "* Convenience method to wire up focus & blur events to pause and resume\n * Makes use of the local `prettyTimeToSeconds` function to convert user edited time to seconds\n * @param  {Object} timerInstance Instance of the Timer Class",
        "* The function that will be called via setInterval based on the timer's update frequency\n * @param  {Object} timerInstance Instance of the timer object",
        "* Timer function to initiate a timer on the provided element with the given config.\n * @param  {Object} element HTML node as passed by jQuery\n * @param  {Object|String} config User extended options or a string (start, pause, resume etc)",
        "* Create a new data attribute on the element to hold the plugin name\n\t\t\t * This way we can know which plugin(s) is/are initialized on the element later",
        "* Use the instance of this plugin derived from the data attribute for this element\n\t\t * to conduct whatever action requested as a string parameter.",
        "* Provision for calling a function from this plugin\n\t\t * without initializing it all over again"
    ],
    "functions": [
        "_secondsToTimeObj",
        "_paddedValue",
        "getDefaultConfig",
        "unixSeconds",
        "secondsToPrettyTime",
        "secondsToFormattedTime",
        "durationTimeToSeconds",
        "prettyTimeToSeconds",
        "setState",
        "makeEditable",
        "intervalHandler",
        "Timer"
    ],
    "classes": []
}