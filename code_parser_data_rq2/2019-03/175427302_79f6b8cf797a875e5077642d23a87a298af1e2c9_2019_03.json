{
    "identifiers": [
        "$",
        "d3",
        "chartBuilder",
        "dc",
        "d3",
        "data",
        "crossfilter",
        "data",
        "ndx",
        "dc",
        "ndx",
        "allData",
        "data",
        "d",
        "d",
        "parseInt",
        "d",
        "d",
        "parseFloat",
        "d",
        "d",
        "parseInt",
        "d",
        "byCuisine",
        "ndx",
        "byCity",
        "ndx",
        "byFood",
        "ndx",
        "byRating",
        "ndx",
        "byStack",
        "ndx",
        "byScatter",
        "ndx",
        "byName",
        "ndx",
        "dc",
        "ndx",
        "divName",
        "dimension",
        "dc",
        "divName",
        "ndx",
        "dc",
        "dimension",
        "dim",
        "d3",
        "pieChartCuisine",
        "dc",
        "pieChartCuisine",
        "dim",
        "group",
        "d",
        "d",
        "d",
        "d",
        "d",
        "d",
        "ndx",
        "divName",
        "dimension",
        "dc",
        "divName",
        "ndx",
        "dc",
        "dimension",
        "dim",
        "selectMenuCity",
        "dim",
        "group",
        "d",
        "d",
        "ndx",
        "divName",
        "dimension",
        "dc",
        "divName",
        "ndx",
        "dc",
        "dimension",
        "dim",
        "selectMenuFood",
        "dim",
        "group",
        "d",
        "d",
        "ndx",
        "divName",
        "dimension",
        "dc",
        "divName",
        "ndx",
        "dc",
        "dimension",
        "dim",
        "d3",
        "rowChartRating",
        "dc",
        "rowChartRating",
        "dim",
        "group",
        "d",
        "d",
        "d",
        "d",
        "star",
        "star",
        "d",
        "star",
        "stars",
        "star",
        "star",
        "star",
        "d",
        "star",
        "stars",
        "d",
        "stars",
        "ndx",
        "divName",
        "dimension",
        "dc",
        "divName",
        "ndx",
        "dc",
        "dimension",
        "d3",
        "stackedChart",
        "dc",
        "dimension",
        "Cuisine",
        "dimension",
        "p",
        "v",
        "p",
        "v",
        "Cuisine",
        "p",
        "p",
        "p",
        "v",
        "p",
        "v",
        "Cuisine",
        "p",
        "p",
        "stackByCuisine",
        "dim",
        "stackByCuisine",
        "dim",
        "stackByCuisine",
        "dim",
        "stackByCuisine",
        "dim",
        "stackByCuisine",
        "dim",
        "stackByCuisine",
        "dim",
        "stackByCuisine",
        "dim",
        "stackByCuisine",
        "dim",
        "stackByCuisine",
        "dim",
        "stackByCuisine",
        "dim",
        "stackedChart",
        "dim",
        "cuisineItalian",
        "cuisineEuropean",
        "cuisineFrench",
        "cuisineMediterranean",
        "cuisineAmerican",
        "cuisineGerman",
        "cuisineSeafood",
        "cuisineBar",
        "cuisineSteakhouse",
        "cuisinePolish",
        "d",
        "d",
        "d",
        "d3",
        "dc",
        "dc",
        "ndx",
        "divName",
        "dimension",
        "dc",
        "divName",
        "ndx",
        "dc",
        "dimension",
        "ndx",
        "d",
        "d",
        "d",
        "d",
        "d",
        "dimAll",
        "dim",
        "dim",
        "d3",
        "scatterPlot",
        "dc",
        "scatterPlot",
        "dim",
        "group",
        "d3",
        "minRating",
        "maxRating",
        "d",
        "d",
        "d",
        "d",
        "d",
        "ndx",
        "divName",
        "dimension",
        "dc",
        "divName",
        "ndx",
        "dc",
        "dimension",
        "dataTableName",
        "dim",
        "d",
        "d",
        "Infinity",
        "d",
        "d",
        "d3",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "L",
        "cityMarkers",
        "i",
        "markers",
        "i",
        "markers",
        "i",
        "cityMarker",
        "cityMarkers",
        "L",
        "drawMap",
        "$",
        "$",
        "$",
        "$"
    ],
    "literals": [
        "\"../data/ta-restaurants.json\"",
        "\"#total\"",
        "\"#cuisine\"",
        "\"Cuisine\"",
        "\"#city\"",
        "\"City\"",
        "\"#food\"",
        "\"Cuisine\"",
        "\"#rating\"",
        "\"Rating\"",
        "\"#stack\"",
        "\"IATA\"",
        "\"#scatter\"",
        "\"Rating\"",
        "\"#restaurants\"",
        "\"Rank\"",
        "\"#resetCuisine\"",
        "\"click\"",
        "\" restaurant is \"",
        "\" restaurants are \"",
        "\"#resetRating\"",
        "\"click\"",
        "\" restaurants with \"",
        "\"★ rating\"",
        "\" \"",
        "\"★\"",
        "\"⭑\"",
        "\"#resetStack\"",
        "\"click\"",
        "\"Italian\"",
        "\"European\"",
        "\"French\"",
        "\"Mediterranean\"",
        "\"American\"",
        "\"German\"",
        "\"Seafood\"",
        "\"Bar\"",
        "\"Steakhouse\"",
        "\"Polish\"",
        "\"Italian\"",
        "\"European\"",
        "\"French\"",
        "\"Mediterranean\"",
        "\"American\"",
        "\"German\"",
        "\"Seafood\"",
        "\"Bar\"",
        "\"Steakhouse\"",
        "\"Polish\"",
        "\"CITY\"",
        "\"RESTAURANTS\"",
        "\"#resetScatter\"",
        "\"click\"",
        "\"REVIEWS\"",
        "\"CITY RANK\"",
        "\"Ranked #\"",
        "\" in \"",
        "\" with \"",
        "\" reviews (\"",
        "\"★)\"",
        "\"Rank\"",
        "\"Name\"",
        "\"Rating\"",
        "\"Reviews\"",
        "\"Cuisine\"",
        "\"Price\"",
        "\"map\"",
        "\"Amsterdam\"",
        "\"Athens\"",
        "\"Barcelona\"",
        "\"Berlin\"",
        "\"Bratislava\"",
        "\"Brussels\"",
        "\"Budapest\"",
        "\"Copenhagen\"",
        "\"Dublin\"",
        "\"Edinburgh\"",
        "\"Geneva\"",
        "\"Hamburg\"",
        "\"Helsinki\"",
        "\"Krakow\"",
        "\"Lisbon\"",
        "\"Ljubljana\"",
        "\"London\"",
        "\"Luxembourg\"",
        "\"Lyon\"",
        "\"Madrid\"",
        "\"Milan\"",
        "\"Munich\"",
        "\"Oporto\"",
        "\"Oslo\"",
        "\"Paris\"",
        "\"Prague\"",
        "\"Rome\"",
        "\"Stockholm\"",
        "\"Vienna\"",
        "\"Warsaw\"",
        "\"Zurich\"",
        "\"https://{s}.tiles.mapbox.com/v3/mapbox.geography-class/{z}/{x}/{y}.png\"",
        "\"&copy; Mapbox | &nbsp;\"",
        "\"#results\"",
        "\"click\"",
        "\"#modal\"",
        "\"display\"",
        "\"block\"",
        "\"#close\"",
        "\"click\"",
        "\"#modal\"",
        "\"display\"",
        "\"none\""
    ],
    "variables": [
        "ndx",
        "allData",
        "pieChartCuisine",
        "dim",
        "group",
        "selectMenuCity",
        "dim",
        "group",
        "selectMenuFood",
        "dim",
        "group",
        "rowChartRating",
        "dim",
        "group",
        "stars",
        "stackedChart",
        "dim",
        "cuisineItalian",
        "cuisineEuropean",
        "cuisineFrench",
        "cuisineMediterranean",
        "cuisineAmerican",
        "cuisineGerman",
        "cuisineSeafood",
        "cuisineBar",
        "cuisineSteakhouse",
        "cuisinePolish",
        "scatterPlot",
        "dim",
        "dimAll",
        "group",
        "minRating",
        "maxRating",
        "dataTableName",
        "dim",
        "drawMap",
        "markers",
        "cityMarkers",
        "i",
        "cityMarker"
    ],
    "comments": [
        "data used in demo: Kaggle Datasets - https://www.kaggle.com/damienbeneschi/krakow-ta-restaurans-data-raw",
        "---------------------------------------------------------------------------------------------------------",
        "DEMO ONLY - FOR EDUCATIONAL PURPOSES ONLY",
        "THESE FUNCTIONS ARE FOR THE MOST RECENT VERSION OF DC.JS (version 3.0+) AND D3 (version 5+)",
        "OLDER VERSIONS MAY USE DIFFERENT SYNTAX - SO BEWARE IF CHARTS NOT WORKING!",
        "use Ctrl+F ??KEYWORD?? to fined a specific section mentioned. Example: Ctrl+F ??COLORS??",
        "the ??RESET?? function to reset all filters simultaneously is an inline-code in the .html file",
        "---------------------------------------------------------------------------------------------------------",
        "-------------------- TABLE OF CONTENTS --------------------",
        "??ARGUMENTS??",
        "??COLORS??",
        "??CROSSFILTER?? (crossfilter.js)",
        "??DATACOUNT?? (dc.dataCount)",
        "??DATATABLE?? (dc.dataTable)",
        "??MAP?? (leaflet.js)",
        "??PARSE???",
        "??PIE?? or ??DONUT?? (dc.pieChart)",
        "??REDUCER??",
        "??RESET?? (dc.redrawAll)",
        "??ROW?? (dc.rowChart)",
        "??SCATTER?? (dc.scatterPlot)",
        "??SELECT?? (dc.selectMenu)",
        "??STACKED?? (dc.barChart - stacked)",
        "-----------------------------------------------------------",
        "jQuery (load scripts once page loads)",
        "-------------------- LOAD DATA --------------------",
        "queue.js is no longer supported for newer versions of dc|d3. Instead a 'promise' is made:",
        "Load file (.csv or .json) then call function to build everything",
        ".csv option",
        "d3.csv(\"data/ta-restaurants.csv\").then(chartBuilder);",
        ".json option [works better for utf-8 (ie: €£)]",
        "great .csv to .json converter: https://www.csvjson.com/csv2json",
        "-------------------- ??COLORS?? --------------------",
        "DC.js has new color schemes as of 2018: https://github.com/d3/d3-scale-chromatic",
        "to set a default color scheme for all charts: (replace SCHEME with choice)",
        "dc.config.defaultColors(d3.SCHEME);",
        "to set indivNameual color scheme by chart: (replace SCHEME with choice)",
        "var myColors = d3.scaleOrdinal(d3.SCHEME); +++ .colors(myColors)",
        "-------------------- READ / PARSE DATA + RENDER CHARTS --------------------",
        "this is the 'promise' called after the data is loaded above",
        "-------------------- ??CROSSFILTER?? --------------------",
        "applies a crossfilter so anything using variable 'ndx' will be filtered together",
        "allData groups all 'ndx' items for the ??DATACOUNT??",
        "-------------------- ??DATACOUNT?? --------------------",
        "dc.dataCount | add to div id#total",
        "apply the crossfilter",
        "group allData from the crossfilter",
        "-------------------- ??PARSE??? DATA --------------------",
        "Loop through data and parse/convert appropriate formats",
        "----- parsing NUMBERS",
        "my .csv/.json files have columns with numbers, so need to parse them",
        "column called 'Rank'",
        "column called 'Rating'",
        "column called 'Reviews'",
        "----- parsing DATES",
        "var fullDateFormat = d3.time.format(\"%a, %d %b %Y %X %Z\");",
        "var yearFormat = d3.time.format(\"%Y\");",
        "var monthFormat = d3.time.format(\"%b\");",
        "var dayOfWeekFormat = d3.time.format(\"%a\");",
        "-------------------- ??ARGUMENTS?? FOR CHART FUNCTIONS --------------------",
        "pieChart on div#cuisine from column 'Cuisine' in file",
        "selectMenu on div#city from column 'City' in file",
        "selectMenu on div#food from column 'Cuisine' in file",
        "rowChart on div#rating from column 'Rating' in file",
        "barChartStack on div#stack from column 'IATA' in file",
        "scatterPlot on div#scatter from column 'Rating' in file",
        "dataTable on div#restaurants from column 'Rank' in file",
        "-------------------- RENDER CHARTS --------------------",
        "-------------------- ??PIE?? + ??DONUT?? CHARTS --------------------",
        "variables required for the chart (crossfilter, div#, column) ??ARGUMENTS??",
        "??COLORS?? | custom colors passed below for this chart only",
        "var myColors = d3.scaleOrdinal(d3.schemeSpectral[11]);",
        "??RESET?? only this specific chart",
        "plucks the data (by Cuisine column)",
        "groups the data for this chart",
        "use carefully with .useViewBoxResizing",
        "use carefully with .useViewBoxResizing",
        "allows chart to be responsive (might need to add CSS 'width')",
        "creates ??DONUT?? effect on pie charts (disable for ??PIE?? chart)",
        "padding (but makes chart smaller)",
        "moves label text outward (otherwise in pie slice)",
        "shows line/path to labels",
        "maximum number of items to show on chart",
        "from 0 to 1 (ie: 0.25) // min-size per slice to display a label",
        "animation speed (1000ms)",
        "delay animation start (by 500ms)",
        "hover text with info per chart item",
        "if filtered to only '1' item",
        "then make the text singular",
        "otherwise",
        "make the text plural",
        ".colors(myColors) // custom color scheme for this chart only",
        ".legend shows a small legend or key on the chart",
        ".legend(dc.legend().x(0).y(0).itemHeight(5).gap(5))",
        "below function will append the amount of items filtered per option on the legend",
        ".on(\"pretransition\", function (chart) {\n            chart.selectAll(\".dc-legend-item text\")\n                .text(function (d) {\n                    return d.name + \" (\" + d.data + \")\"; // ie: \"Italian (455)\"\n                })\n        })",
        "-------------------- ??SELECT?? MENU --------------------",
        "variables required for the chart (crossfilter, div#, column) ??ARGUMENTS??",
        "plucks the data (by City column)",
        "groups the data for this chart",
        "title d.key is the item plucked, to be displayed in the menu",
        "-------------------- ??SELECT?? MENU --------------------",
        "variables required for the chart (crossfilter, div#, column) ??ARGUMENTS??",
        "plucks the data (by Cuisine column)",
        "groups the data for this chart",
        "title d.key is the item plucked, to be displayed in the menu",
        "-------------------- ??ROW?? CHART --------------------",
        "variables required for the chart (crossfilter, div#, column) ??ARGUMENTS??",
        "??COLORS?? | custom colors passed below for this chart only",
        "var myColors = d3.scaleOrdinal(d3.schemeSpectral[4]);",
        "??RESET?? only this specific chart",
        "plucks the data (by Rating column)",
        "groups the data for this chart",
        "use carefully with .useViewBoxResizing",
        "use carefully with .useViewBoxResizing",
        "allows chart to be responsive (might need to add CSS 'width')",
        "margins push the chart inward, like in css",
        "animation speed (1000ms)",
        "delay animation start (by 500ms)",
        "max number of rows to display",
        "x-Axis becomes fluid based on filtering",
        "hover text with info per chart item",
        "checks d.key value and appends ★ for each star rating, and ⭑ for half-star ratings",
        "number of ticks to show on xAxis",
        ".colors(myColors) // custom color variable above",
        "-------------------- ??STACKED?? BAR CHART --------------------",
        "variables required for the chart (crossfilter, div#, column) ??ARGUMENTS??",
        "??RESET?? only this specific chart",
        "custom ??REDUCER?? to count against matched cuisine types per city",
        "counts towards total if a match",
        "not-applicable for total if no match",
        "sum of total and matched",
        "variables storing results from custom reducer for each matched item",
        "in this example, I selected the top 10 cuisine types",
        "plucks the data (by Rating column)",
        ".width(1350) // use carefully with .useViewBoxResizing",
        "use carefully with .useViewBoxResizing",
        "allows chart to be responsive (might need to add CSS 'width')",
        "gap between each barChart item",
        "first item goes as .group",
        "the rest go in as .stack (to stack on-top)",
        ".stack on previous",
        ".stack on previous",
        ".stack on previous",
        ".stack on previous",
        ".stack on previous",
        ".stack on previous",
        ".stack on previous",
        ".stack on previous",
        "if number of items is greater than 0, add to the stack",
        "otherwise, don't add it to the stack",
        "margins push the chart inward, like in css",
        "animation speed (1000ms)",
        "delay animation start (by 500ms)",
        "essential to stacked charts!",
        "essential to stacked charts!",
        "y-Axis becomes fluid based on filtering",
        ".legend shows a small legend or key on the chart",
        "label for xAxis (bottom)",
        "label for yAxis (left-side)",
        "-------------------- ??SCATTER?? PLOT --------------------",
        "variables required for the chart (crossfilter, div#, column) ??ARGUMENTS??",
        "captures additional plucked data/columns",
        "get the smallest (.bottom) 'Review' count",
        "get the largest (.top) 'Review'count",
        "??RESET?? only this specific chart",
        "plucks the data (by Rating column)",
        "groups the data for this chart",
        ".width(900) // use carefully with .useViewBoxResizing",
        "use carefully with .useViewBoxResizing",
        "margins push the chart inward, like in css",
        "adds items to chart in linear order",
        "default is (true)",
        "size of the dot",
        "cuts-off overflow of dots if set to (0)",
        "allows chart to be responsive (might need to add CSS 'width')",
        "animation speed (1000ms)",
        "delay animation start (by 500ms)",
        "show chart lines (horizontal)",
        "show chart lines (verical)",
        "label for xAxis (bottom)",
        "label for yAxis (left-side)",
        "hover text with info per chart item",
        "number of ticks to show on xAxis",
        "-------------------- ??DATATABLE?? --------------------",
        "set required variables (chart type, dimension)",
        "plucks the data (by Rank column)",
        "older dc.js used .group() but now it's .section()",
        "groups each section by 'City' in this example",
        "column headers",
        ".showSections(false) // turns off the section titles if desired",
        ".size(10) // maximum number of rows to display (ie: top 10 only)",
        "allows for all rows (filtered or not) to be displayed",
        "allows chart to be responsive (might need to add CSS 'width')",
        "sorts the sections alphabetically (Amsterdam, Athens, etc.)",
        "smallest to largest // (d3.descending) largest to smallest;",
        "-------------------- LEAFLET ??MAP?? --------------------",
        "this example hard-codes the markers, but dc.js does allow filtering on leaflet.js maps!",
        "assign the map to div#map and set the initial view [lat,lng] and zoom-level",
        "custom markers [lat,lng] with pop-up once clicked",
        "push all markers to a group",
        "add all markers to the map",
        "loop through the markers and add them to the group",
        "map tiles, attribution, and settings",
        "this is an invalid attribution, used for demo only",
        "call funtion drawMap",
        "-------------------- CUSTOM MODAL - demo only --------------------",
        "this demo doesn't use Bootstrap, so created a simple modal myself",
        "MODAL (using jQuery and CSS)",
        "closes the modal"
    ],
    "docstrings": [],
    "functions": [
        "chartBuilder",
        "byCuisine",
        "byCity",
        "byFood",
        "byRating",
        "byStack",
        "stackByCuisine",
        "byScatter",
        "byName"
    ],
    "classes": []
}