{
    "identifiers": [
        "sys",
        "os",
        "signal",
        "time",
        "subprocess",
        "logging",
        "pathlib",
        "argparse",
        "service",
        "registry",
        "logging",
        "basicConfig",
        "level",
        "format",
        "logging",
        "getLogger",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "action",
        "dest",
        "help",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "parse_args",
        "pathlib",
        "Path",
        "absolute",
        "parent",
        "start_all_services",
        "root_path",
        "service_modules",
        "args",
        "run_daemon",
        "args",
        "daemon_config_path",
        "p",
        "all_p",
        "p",
        "poll",
        "p",
        "returncode",
        "p",
        "returncode",
        "kill_and_exit",
        "all_p",
        "time",
        "sleep",
        "e",
        "log",
        "error",
        "e",
        "cwd",
        "service_modules",
        "run_daemon",
        "daemon_config_path",
        "i",
        "service_module",
        "service_modules",
        "service_module",
        "split",
        "log",
        "info",
        "format",
        "registry",
        "service_name",
        "service_module",
        "all_p",
        "start_service",
        "cwd",
        "service_module",
        "run_daemon",
        "daemon_config_path",
        "all_p",
        "cwd",
        "service_module",
        "run_daemon",
        "daemon_config_path",
        "run_daemon",
        "all_p",
        "append",
        "start_snetd",
        "cwd",
        "daemon_config_path",
        "service_module",
        "split",
        "registry",
        "service_name",
        "subprocess",
        "Popen",
        "sys",
        "executable",
        "service_module",
        "grpc_port",
        "cwd",
        "cwd",
        "all_p",
        "append",
        "p",
        "all_p",
        "cwd",
        "config_file",
        "config_file",
        "config_file",
        "subprocess",
        "Popen",
        "cmd",
        "cwd",
        "cwd",
        "all_p",
        "p",
        "all_p",
        "os",
        "kill",
        "p",
        "pid",
        "signal",
        "SIGTERM",
        "e",
        "log",
        "error",
        "e",
        "exit",
        "main"
    ],
    "literals": [
        "\"%(asctime)s - [%(levelname)8s] - %(name)s - %(message)s\"",
        "\"run_language_understanding_service\"",
        "\"Run services\"",
        "\"--no-daemon\"",
        "\"store_false\"",
        "\"run_daemon\"",
        "\"do not start the daemon\"",
        "\"--daemon-config-path\"",
        "\"Path to daemon configuration file\"",
        "\"service.language_understanding_service\"",
        "\".\"",
        "\"Launching {} on port {}\"",
        "\".\"",
        "\"grpc\"",
        "\"-m\"",
        "\"--grpc-port\"",
        "\"snetd\"",
        "\"serve\"",
        "\"snetd\"",
        "\"serve\"",
        "\"--config\"",
        "\"__main__\""
    ],
    "variables": [
        "log",
        "parser",
        "args",
        "root_path",
        "service_modules",
        "all_p",
        "all_p",
        "service_name",
        "all_p",
        "service_name",
        "grpc_port",
        "p",
        "cmd",
        "cmd"
    ],
    "comments": [
        "All services modules go here",
        "Call for all the services listed in service_modules",
        "Continuous checking all subprocess"
    ],
    "docstrings": [
        "\"\"\"\n    Loop through all service_modules and start them.\n    For each one, an instance of Daemon \"snetd\" is created.\n    snetd will start with configs from \"snetd.config.json\"\n    \"\"\"",
        "\"\"\"\n    Starts SNET Daemon (\"snetd\") and the python module of the service\n    at the passed gRPC port.\n    \"\"\"",
        "\"\"\"\n    Starts the Daemon \"snetd\":\n    \"\"\"",
        "\"\"\"\n    Kills main, service and daemon's processes if one fails.\n    \"\"\""
    ],
    "functions": [
        "main",
        "start_all_services",
        "start_service",
        "start_snetd",
        "kill_and_exit"
    ],
    "classes": []
}