{
    "identifiers": [
        "Sequelize",
        "CONFIG",
        "VideoPlaylistPrivacy",
        "VideoPlaylistType",
        "uuidv4",
        "utils",
        "Sequelize",
        "Sequelize",
        "Sequelize",
        "utils",
        "utils",
        "query",
        "utils",
        "query",
        "utils",
        "userQuery",
        "Sequelize",
        "userResult",
        "r",
        "r",
        "username",
        "usernames",
        "uuidv4",
        "CONFIG",
        "uuid",
        "baseUrl",
        "uuid",
        "VideoPlaylistPrivacy",
        "VideoPlaylistType",
        "username",
        "utils",
        "query",
        "options",
        "up",
        "down"
    ],
    "literals": [
        "'sequelize'",
        "'../constants'",
        "'../../../shared/models/videos'",
        "'uuid/v4'",
        "CREATE TABLE IF NOT EXISTS \"videoPlaylist\"\n(\n  \"id\"             SERIAL,\n  \"name\"           VARCHAR(255)             NOT NULL,\n  \"description\"    VARCHAR(255),\n  \"privacy\"        INTEGER                  NOT NULL,\n  \"url\"            VARCHAR(2000)            NOT NULL,\n  \"uuid\"           UUID                     NOT NULL,\n  \"type\"           INTEGER                  NOT NULL DEFAULT 1,\n  \"ownerAccountId\" INTEGER                  NOT NULL REFERENCES \"account\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE,\n  \"videoChannelId\" INTEGER REFERENCES \"videoChannel\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE,\n  \"createdAt\"      TIMESTAMP WITH TIME ZONE NOT NULL,\n  \"updatedAt\"      TIMESTAMP WITH TIME ZONE NOT NULL,\n  PRIMARY KEY (\"id\")\n);",
        "CREATE TABLE IF NOT EXISTS \"videoPlaylistElement\"\n(\n  \"id\"              SERIAL,\n  \"url\"             VARCHAR(2000)            NOT NULL,\n  \"position\"        INTEGER                  NOT NULL DEFAULT 1,\n  \"startTimestamp\"  INTEGER,\n  \"stopTimestamp\"   INTEGER,\n  \"videoPlaylistId\" INTEGER                  NOT NULL REFERENCES \"videoPlaylist\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE,\n  \"videoId\"         INTEGER                  NOT NULL REFERENCES \"video\" (\"id\") ON DELETE CASCADE ON UPDATE CASCADE,\n  \"createdAt\"       TIMESTAMP WITH TIME ZONE NOT NULL,\n  \"updatedAt\"       TIMESTAMP WITH TIME ZONE NOT NULL,\n  PRIMARY KEY (\"id\")\n);",
        "'SELECT \"username\" FROM \"user\";'",
        "'/video-playlists/'",
        "INSERT INTO \"videoPlaylist\" (\"url\", \"uuid\", \"name\", \"privacy\", \"type\", \"ownerAccountId\", \"createdAt\", \"updatedAt\")\n SELECT '${baseUrl}' AS \"url\",\n         '${uuid}' AS \"uuid\",\n         'Watch later' AS \"name\",\n         ${VideoPlaylistPrivacy.PRIVATE} AS \"privacy\",\n         ${VideoPlaylistType.WATCH_LATER} AS \"type\",\n         \"account\".\"id\" AS \"ownerAccountId\",\n         NOW() as \"createdAt\",\n         NOW() as \"updatedAt\"\n FROM \"user\" INNER JOIN \"account\" ON \"user\".\"id\" = \"account\".\"userId\"\n WHERE \"user\".\"username\" = '${username}'",
        "'Not implemented.'"
    ],
    "variables": [
        "transaction",
        "query",
        "query",
        "userQuery",
        "userResult",
        "usernames",
        "uuid",
        "baseUrl",
        "query"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "up",
        "down"
    ],
    "classes": []
}