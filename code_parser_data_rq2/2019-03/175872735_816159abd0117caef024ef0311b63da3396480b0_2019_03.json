{
    "identifiers": [
        "image",
        "EncryptedPoint",
        "image",
        "ImageRepresentation",
        "image",
        "MyEncryptedImage",
        "image",
        "MyImage",
        "image",
        "Point",
        "java",
        "awt",
        "Color",
        "java",
        "io",
        "java",
        "math",
        "BigInteger",
        "java",
        "net",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "java",
        "util",
        "Scanner",
        "java",
        "util",
        "DataFormatException",
        "java",
        "util",
        "Deflater",
        "java",
        "util",
        "Inflater",
        "javax",
        "imageio",
        "ImageIO",
        "matrix",
        "MultiplyMatrix",
        "paillierPrototype",
        "PaillierAlgorithm",
        "utils",
        "FileUtils",
        "utils",
        "JsonUtils",
        "com",
        "google",
        "gson",
        "Gson",
        "com",
        "google",
        "gson",
        "GsonBuilder",
        "com",
        "google",
        "gson",
        "JsonObject",
        "trusted",
        "myImage",
        "paillier",
        "paillierJson",
        "decryptedImage",
        "imageArrayRepresentation",
        "myImage",
        "iR",
        "myImage",
        "eI",
        "width",
        "myImage",
        "eI",
        "height",
        "i",
        "i",
        "myImage",
        "eI",
        "width",
        "i",
        "j",
        "j",
        "myImage",
        "eI",
        "height",
        "j",
        "c",
        "myImage",
        "imageRGBMatrix",
        "i",
        "j",
        "red",
        "c",
        "getRed",
        "green",
        "c",
        "getGreen",
        "blue",
        "c",
        "getBlue",
        "p",
        "red",
        "green",
        "blue",
        "myImage",
        "iR",
        "points",
        "i",
        "j",
        "p",
        "paillier",
        "helper",
        "BigInteger",
        "ZERO",
        "myImage",
        "eI",
        "myImage",
        "eI",
        "width",
        "myImage",
        "eI",
        "height",
        "i",
        "i",
        "myImage",
        "eI",
        "width",
        "i",
        "j",
        "j",
        "myImage",
        "eI",
        "height",
        "j",
        "c",
        "myImage",
        "imageRGBMatrix",
        "i",
        "j",
        "red",
        "c",
        "getRed",
        "green",
        "c",
        "getGreen",
        "blue",
        "c",
        "getBlue",
        "bRed",
        "helper",
        "valueOf",
        "red",
        "bGreen",
        "helper",
        "valueOf",
        "green",
        "bBlue",
        "helper",
        "valueOf",
        "blue",
        "eP",
        "helper",
        "valueOf",
        "red",
        "helper",
        "valueOf",
        "green",
        "helper",
        "valueOf",
        "blue",
        "myImage",
        "eI",
        "points",
        "i",
        "j",
        "eP",
        "e",
        "e",
        "printStackTrace",
        "paillier",
        "myImage",
        "decryptedImage",
        "myImage",
        "eI",
        "width",
        "myImage",
        "eI",
        "height",
        "i",
        "i",
        "myImage",
        "eI",
        "width",
        "i",
        "j",
        "j",
        "myImage",
        "eI",
        "height",
        "j",
        "dRed",
        "paillier",
        "decrypt",
        "myImage",
        "eI",
        "points",
        "i",
        "j",
        "red",
        "intValue",
        "dGreen",
        "paillier",
        "decrypt",
        "myImage",
        "eI",
        "points",
        "i",
        "j",
        "green",
        "intValue",
        "dBlue",
        "paillier",
        "decrypt",
        "myImage",
        "eI",
        "points",
        "i",
        "j",
        "blue",
        "intValue",
        "dRed",
        "dRed",
        "dRed",
        "dRed",
        "dGreen",
        "dGreen",
        "dGreen",
        "dGreen",
        "dBlue",
        "dBlue",
        "dBlue",
        "dBlue",
        "c",
        "dRed",
        "dGreen",
        "dBlue",
        "myImage",
        "decryptedImage",
        "i",
        "j",
        "c",
        "getRGB",
        "e",
        "e",
        "printStackTrace",
        "args",
        "args",
        "args",
        "equals",
        "trusted",
        "trusted",
        "flag",
        "flag1",
        "scn",
        "ip",
        "InetAddress",
        "getByName",
        "s",
        "ip",
        "dis",
        "s",
        "getInputStream",
        "dos",
        "s",
        "getOutputStream",
        "dis",
        "readUTF",
        "tosend",
        "scn",
        "nextLine",
        "dos",
        "writeUTF",
        "tosend",
        "tosend",
        "equals",
        "s",
        "close",
        "received",
        "dis",
        "readUTF",
        "received",
        "received",
        "contains",
        "received",
        "paillierIncoming",
        "FileUtils",
        "readFile",
        "paillier",
        "JsonUtils",
        "getPaillierFromJson",
        "paillierIncoming",
        "incomingImage",
        "FileUtils",
        "readFile",
        "myImage",
        "eI",
        "JsonUtils",
        "getMyEncryptedImageFromJson",
        "incomingImage",
        "decryptMyImage",
        "paillier",
        "myImage",
        "imageRGBMatrix",
        "MultiplyMatrix",
        "processMatrix4",
        "myImage",
        "decryptedImage",
        "generateEncryptedImage",
        "paillier",
        "encryptedImageJson",
        "JsonUtils",
        "getMyEncryptedImageJson",
        "myImage",
        "eI",
        "encryptedImage",
        "FileUtils",
        "writeToFile",
        "encryptedImageJson",
        "dos",
        "writeUTF",
        "encryptedImage",
        "received",
        "contains",
        "incomingImage",
        "FileUtils",
        "readFile",
        "myImage",
        "eI",
        "JsonUtils",
        "getMyEncryptedImageFromJson",
        "incomingImage",
        "myImage",
        "eI",
        "points",
        "MultiplyMatrix",
        "processMatrix3",
        "myImage",
        "eI",
        "points",
        "encryptedImageJson",
        "JsonUtils",
        "getMyEncryptedImageJson",
        "myImage",
        "eI",
        "encryptedImage",
        "FileUtils",
        "writeToFile",
        "encryptedImageJson",
        "dos",
        "writeUTF",
        "encryptedImage",
        "scn",
        "close",
        "dis",
        "close",
        "dos",
        "close",
        "e",
        "e",
        "printStackTrace"
    ],
    "literals": [
        "\"1\"",
        "\"trusted\"",
        "\"This device is trusted\"",
        "\"This device is untrusted\"",
        "\"localhost\"",
        "\"Exit\"",
        "\"so, you are trusted\"",
        "\"trusted response\"",
        "\"./res/client/trusted/paillier.txt\"",
        "\"./res/client/trusted/image.txt\"",
        "\"trusted response: \"",
        "\"server/trusted/image\"",
        "\"so, you are untrusted\"",
        "\"./res/client/untrusted/image.txt\"",
        "\"untrusted response: \"",
        "\"server/untrusted/image\""
    ],
    "variables": [
        "myImage",
        "paillier",
        "paillierJson"
    ],
    "comments": [
        "Java implementation for a client",
        "Save file as Client.java",
        "Client class",
        "imageRGBMatrix = new int[image.getWidth()][image.getHeight()];",
        "System.out.println(image.getRGB(i, j));",
        "imageRGBMatrix[i][j] = image.getRGB(i, j);",
        "System.out.println(myImage.imageRGBMatrix[i][j]);",
        "System.out.println(\"red \" + red + \" GREEN \" + green + \" BLUE \" + blue);",
        "bRed = paillier.encrypt(BigInteger.valueOf(red));",
        "bGreen = paillier.encrypt(BigInteger.valueOf(green));",
        "bBlue = paillier.encrypt(BigInteger.valueOf(blue));",
        "System.out.println(\"RED \" + bRed + \" GREEN \" + bGreen + \" BLUE \" + bBlue);",
        "imageBigInteger[i][j] = paillier.encrypt(BigInteger.valueOf(imageRGBMatrix[i][j]));",
        "System.out.println(\"@@\");",
        "System.out.println(dRed);",
        "System.out.println(\"Colors R - \" + dRed + \"  G - \" + dGreen + \" B - \" + dBlue);",
        "System.out.println(\"COLOR: \" + c.getRGB());",
        "getting localhost ip",
        "establish the connection with server port 5056",
        "obtaining input and out streams",
        "received.replace(\"so, you are trusted : \", \"\");",
        "DecompressArray(incomingImage.getBytes()).toString());",
        "+  encryptedImageJson;//new String(CompressArray(encryptedImageJson.getBytes()));",
        "DecompressArray(incomingImage.getBytes()).toString());",
        "new String(CompressArray(getMyEncryptedImageJson().getBytes()));",
        "+  encryptedImageJson;",
        "closing resources"
    ],
    "docstrings": [],
    "functions": [
        "generateImageRepresentation",
        "generateEncryptedImage",
        "decryptMyImage",
        "main"
    ],
    "classes": [
        "Client"
    ]
}