{
    "identifiers": [
        "com",
        "google",
        "gwt",
        "dev",
        "jjs",
        "impl",
        "com",
        "google",
        "gwt",
        "dev",
        "javac",
        "testing",
        "impl",
        "JavaResourceBase",
        "com",
        "google",
        "gwt",
        "dev",
        "jjs",
        "ast",
        "JMethod",
        "com",
        "google",
        "gwt",
        "dev",
        "jjs",
        "ast",
        "JProgram",
        "com",
        "google",
        "gwt",
        "thirdparty",
        "guava",
        "common",
        "Joiner",
        "Override",
        "setUp",
        "addAll",
        "JavaResourceBase",
        "createMockJavaResource",
        "addAll",
        "JavaResourceBase",
        "createMockJavaResource",
        "addAll",
        "JavaResourceBase",
        "createMockJavaResource",
        "addAll",
        "JavaResourceBase",
        "createMockJavaResource",
        "program",
        "compileSnippet",
        "lambdaMethod",
        "findMethod",
        "program",
        "assertEquals",
        "lambdaMethod",
        "getSignature",
        "program",
        "compileSnippet",
        "Joiner",
        "on",
        "join",
        "lambdaMethod",
        "findMethod",
        "program",
        "assertEquals",
        "lambdaMethod",
        "getSignature",
        "Override"
    ],
    "literals": [
        "\"test.NotNull\"",
        "\"package test;\"",
        "\"public @interface NotNull {\"",
        "\"}\"",
        "\"test.Lambda\"",
        "\"package test;\"",
        "\"public interface Lambda<T> {\"",
        "\"  T run(String a, int b);\"",
        "\"}\"",
        "\"test.Function\"",
        "\"package test;\"",
        "\"public interface Function<T, R> {\"",
        "\"  R apply(T value);\"",
        "\"}\"",
        "\"test.Mappable\"",
        "\"package test;\"",
        "\"public interface Mappable<T> {\"",
        "\"  <R> Mappable<R> map(Function<? super T, ? extends R> mapper);\"",
        "\"}\"",
        "\"void\"",
        "\"Lambda<String> l = (@NotNull var a, var b) -> a + b;\"",
        "\"lambda$0\"",
        "\"lambda$0(Ljava/lang/String;I)Ljava/lang/String;\"",
        "\"void\"",
        "\"Mappable<String> m = null;\"",
        "\"Mappable<String> mapped = m.map((var s) -> s);\"",
        "\"lambda$0\"",
        "\"lambda$0(Ljava/lang/String;)Ljava/lang/String;\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.",
        "* Tests that {@link com.google.gwt.dev.jjs.impl.GwtAstBuilder} correctly builds the AST for\n * features introduced in Java 11."
    ],
    "functions": [
        "setUp",
        "testLambdaParametersVarType",
        "testLambdaParametersVarType_function",
        "optimizeJava"
    ],
    "classes": [
        "Java11AstTest"
    ]
}