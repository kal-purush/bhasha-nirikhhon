{
    "identifiers": [
        "require",
        "require",
        "settings",
        "path",
        "nw",
        "file",
        "fs",
        "filePath",
        "settings",
        "err",
        "err",
        "err",
        "config",
        "config",
        "config",
        "require",
        "require",
        "require",
        "fixPath",
        "name",
        "childProcess",
        "cmdBuildPrj",
        "path",
        "error",
        "stdout",
        "stderr",
        "error",
        "stdout",
        "childProcess",
        "path",
        "name",
        "error",
        "stdout",
        "stderr",
        "error",
        "stdout",
        "buildManifest",
        "path",
        "name",
        "saveProjectToMainScreen",
        "path",
        "name",
        "path",
        "namePrj",
        "manifest",
        "namePrj",
        "manifest",
        "manifest",
        "path",
        "namePrj",
        "fs",
        "rootPrj",
        "manifestJSON",
        "err",
        "err",
        "err",
        "path",
        "namePrj",
        "require",
        "app",
        "appDetails",
        "namePrj",
        "appDetails",
        "path",
        "appDetailsJSON",
        "appDetails",
        "fs",
        "homePath",
        "appDetailsJSON",
        "err",
        "err",
        "err"
    ],
    "literals": [
        "'fs'",
        "'path'",
        "'my-settings-file.json'",
        "\"There was an error attempting to save your data.\"",
        "'util'",
        "'child_process'",
        "'fix-path'",
        "'/usr/local/bin/tns create '",
        "' --ng'",
        "\"cmd: \"",
        "\" : \"",
        "\"rm -r app && mkdir app\"",
        "\"/\"",
        "\"cmd: \"",
        "\" : \"",
        "\"app.js\"",
        "\"/\"",
        "\"/app/package.json\"",
        "\"package.json file written\"",
        "'electron'",
        "\"userData\"",
        "\"/history\"",
        "\"New Project added\""
    ],
    "variables": [
        "fs",
        "path",
        "file",
        "filePath",
        "path",
        "name",
        "sys",
        "childProcess",
        "fixPath",
        "cmdBuildPrj",
        "manifest",
        "manifestJSON",
        "rootPrj",
        "homePath",
        "appDetails"
    ],
    "comments": [
        "config[2] name of the project from first screen",
        "Backend stuff",
        "TODO: WORK HERE",
        "Required to reset path and execute commands",
        "TODO: CHECK FOR WIN",
        "Callback function to execute when command is executed",
        "$(\"#loadingPanel\").hide();",
        "Build directory structure",
        "Callback function to execute when command is executed",
        "$(\"#loadingPanel\").hide();",
        "CHECK THIS FUNCTION IF YOU WANT TO DISPLAY A PROPER CONSOLE\n    childProcess.stdout.on('data', function(data) {\n        console.log(data); \n    });",
        "files = getFiles(path+\"/\"+name);\n\n    for (var i in files){\n        $(\"#filePanel\").append(files[i]+\"<br>\");\n    }",
        "$(\"#filePanel\").hide();"
    ],
    "docstrings": [
        "***DECOMMENT NEXT LINES IF YOU WANT TO BUILD NS PROJECT***"
    ],
    "functions": [
        "saveSettings",
        "buildNewProject",
        "buildManifest",
        "saveProjectToMainScreen"
    ],
    "classes": []
}