{
    "identifiers": [
        "client",
        "isEnabled",
        "client",
        "isEnabled",
        "client",
        "isEnabled",
        "client",
        "isEnabled",
        "ContractsModule",
        "DataPointType",
        "DependencyKind",
        "DependencySourceType",
        "SessionState",
        "SeverityLevel",
        "ContractsModule",
        "key",
        "ContractsModule",
        "ContractsModule",
        "ContractsModule",
        "ContractsModule",
        "ContractsModule",
        "ContractsModule",
        "ContractsModule",
        "ContractsModule",
        "ContractsModule",
        "ContractsModule",
        "ContractsModule",
        "ContractsModule",
        "ContractsModule",
        "ContractsModule",
        "ContractsModule",
        "ContractsModule",
        "ContractsModule",
        "ContractsModule",
        "isDisabled",
        "getBatchSize",
        "getBatchIntervalMs",
        "sender",
        "envelope",
        "ContractsModule",
        "envelope",
        "ContractsModule",
        "isNodeCrashing",
        "key",
        "iKey",
        "name",
        "properties",
        "key",
        "measurements",
        "key",
        "message",
        "severityLevel",
        "ContractsModule",
        "properties",
        "key",
        "exception",
        "properties",
        "key",
        "name",
        "value",
        "count",
        "min",
        "max",
        "stdDev",
        "properties",
        "key",
        "request",
        "response",
        "properties",
        "key",
        "request",
        "response",
        "ellapsedMilliseconds",
        "properties",
        "key",
        "error",
        "name",
        "commandName",
        "elapsedTimeMs",
        "success",
        "dependencyTypeName",
        "properties",
        "dependencyKind",
        "async",
        "dependencySource",
        "callback",
        "response",
        "data",
        "ContractsModule",
        "ContractsModule",
        "tagOverrides",
        "key",
        "ContractsModule",
        "data",
        "ContractsModule",
        "ContractsModule",
        "tagOverrides",
        "key",
        "instrumentationKey",
        "ContractsModule",
        "key",
        "packageJsonPath",
        "getUrl",
        "onSuccess",
        "response",
        "onError",
        "error",
        "payload",
        "payload",
        "instrumentationKey",
        "instrumentationKey",
        "value",
        "value",
        "value",
        "value",
        "applicationinsights"
    ],
    "literals": [
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"applicationinsights\""
    ],
    "variables": [
        "applicationinsights"
    ],
    "comments": [
        "Generated by typings",
        "Source: https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/d59d5bdea31295ff74ce32929da80246a5749580/applicationinsights/applicationinsights.d.ts",
        "http.ServerRequest",
        "http.ServerResponse",
        "http.ServerRequest",
        "http.ServerResponse",
        "Buffer"
    ],
    "docstrings": [
        "* Add a telemetry item to the send buffer",
        "* Immediately send buffered data",
        "* Constructs a new client of the client\n     * @param iKey the instrumentation key to use (read from environment variable if not specified)",
        "* Log a user action or other occurrence.\n     * @param   name    A string to identify this event in the portal.\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\n     * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.",
        "* Log a trace message\n     * @param   message    A string to identify this event in the portal.\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.",
        "* Log an exception you have caught.\n     * @param   exception   An Error from a catch clause, or the string error message.\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\n     * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.",
        "* Log a numeric value that is not associated with a specific event. Typically used to send regular reports of performance indicators.\n     * To send a single measurement, use just the first two parameters. If you take measurements very frequently, you can reduce the\n     * telemetry bandwidth by aggregating multiple measurements and sending the resulting average at intervals.\n     * @param name   A string that identifies the metric.\n     * @param value  The value of the metric\n     * @param count  the number of samples used to get this value\n     * @param min    the min sample for this set\n     * @param max    the max sample for this set\n     * @param stdDev the standard deviation of the set",
        "* Log an incoming http request to your server. The request data will be tracked during the response \"finish\" event if it is successful or the request \"error\" \n     * event if it fails. The request duration is automatically calculated as the timespan between when the trackRequest method was called, and when the response \"finish\"\n     * or request \"error\" events were fired.\n     * @param request   The http.ServerRequest object to track\n     * @param response  The http.ServerResponse object for this request\n     * @param properties    map[string, string] - additional data used to filter requests in the portal. Defaults to empty.",
        "* Log an incoming http request to your server. The request data is tracked synchronously rather than waiting for the response \"finish\"\" or request \"error\"\" events.\n     * Use this if you need your request telemetry to respect custom app insights operation and user context (for example if you set any appInsights.client.context.tags).\n     * @param request   The http.ServerRequest object to track\n     * @param response  The http.ServerResponse object for this request\n     * @param ellapsedMilliseconds  The duration for this request. Defaults to 0.\n     * @param properties    map[string, string] - additional data used to filter requests in the portal. Defaults to empty.\n     * @param error     An error that was returned for this request if it was unsuccessful. Defaults to null.",
        "* Log information about a dependency of your app. Typically used to track the time database calls or outgoing http requests take from your server.\n     * @param name   The name of the dependency (i.e. \"myDatabse\")\n     * @param commandname   The name of the command executed on the dependency\n     * @param elapsedTimeMs   The amount of time in ms that the dependency took to return the result\n     * @param success         True if the dependency succeeded, false otherwise\n     * @param dependencyTypeName  The type of the dependency (i.e. \"SQL\" \"HTTP\"). Defaults to empty.\n     * @param properties   map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\n     * @param dependencyKind   ContractsModule.DependencyKind of this dependency. Defaults to Other.\n     * @param async  True if the dependency was executed asynchronously, false otherwise. Defaults to false\n     * @param dependencySource  ContractsModule.DependencySourceType of this dependency. Defaults to Undefined.",
        "* Immediately send all queued telemetry.",
        "* Generic track method for all telemetry types\n     * @param data the telemetry to send\n     * @param tagOverrides the context tags to use for this telemetry which overwrite default context values",
        "* enable caching events locally on error",
        "* disable caching events locally on error",
        "* The singleton meta interface for the default client of the client. This interface is used to setup/start and configure\n * the auto-collection behavior of the application insights module.",
        "* Initializes a client with the given instrumentation key, if this is not specified, the value will be\n     * read from the environment variable APPINSIGHTS_INSTRUMENTATIONKEY\n     * @returns {ApplicationInsights/Client} a new client",
        "* Initializes the default client of the client and sets the default configuration\n     * @param instrumentationKey the instrumentation key to use. Optional, if this is not specified, the value will be\n     * read from the environment variable APPINSIGHTS_INSTRUMENTATIONKEY\n     * @returns {ApplicationInsights} this interface",
        "* Starts automatic collection of telemetry. Prior to calling start no telemetry will be collected\n     * @returns {ApplicationInsights} this interface",
        "* Sets the state of console tracking (enabled by default)\n     * @param value if true console activity will be sent to Application Insights\n     * @returns {ApplicationInsights} this interface",
        "* Sets the state of exception tracking (enabled by default)\n     * @param value if true uncaught exceptions will be sent to Application Insights\n     * @returns {ApplicationInsights} this interface",
        "* Sets the state of performance tracking (enabled by default)\n     * @param value if true performance counters will be collected every second and sent to Application Insights\n     * @returns {ApplicationInsights} this interface",
        "* Sets the state of request tracking (enabled by default)\n     * @param value if true requests will be sent to Application Insights\n     * @returns {ApplicationInsights} this interface",
        "* Enables verbose debug logging\n     * @returns {ApplicationInsights} this interface"
    ],
    "functions": [],
    "classes": []
}