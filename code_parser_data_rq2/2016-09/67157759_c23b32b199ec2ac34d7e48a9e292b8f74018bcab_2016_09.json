{
    "identifiers": [
        "json",
        "base64",
        "requests",
        "Session",
        "Request",
        "cowrie",
        "core",
        "output",
        "response",
        "msg",
        "format",
        "response",
        "status_code",
        "response",
        "text",
        "response",
        "repr",
        "message",
        "cowrie",
        "core",
        "output",
        "Output",
        "cfg",
        "cfg",
        "cfg",
        "get",
        "cfg",
        "get",
        "cowrie",
        "core",
        "output",
        "Output",
        "cfg",
        "token",
        "path",
        "join",
        "endpoint",
        "path",
        "logentry",
        "payload",
        "path",
        "method",
        "popkeys",
        "method",
        "make_url",
        "path",
        "logentry",
        "sensor",
        "logentry",
        "logentry",
        "data",
        "logentry",
        "data",
        "update",
        "payload",
        "key",
        "popkeys",
        "data",
        "pop",
        "key",
        "data",
        "method",
        "url",
        "data",
        "Request",
        "method",
        "upper",
        "url",
        "data",
        "json",
        "dumps",
        "data",
        "headers",
        "headers",
        "Session",
        "s",
        "prepare_request",
        "req",
        "s",
        "send",
        "prepped",
        "resp",
        "status_code",
        "HttpStatusCodeError",
        "resp",
        "resp",
        "json",
        "logentry",
        "logentry",
        "logentry",
        "logentry",
        "prepare_entry",
        "logentry",
        "payload",
        "method",
        "popkeys",
        "prepared_entries",
        "append",
        "data",
        "logentry",
        "logentry",
        "logentry",
        "logentry",
        "prepare_entry",
        "logentry",
        "payload",
        "path",
        "prepared_entries",
        "append",
        "data",
        "logentry",
        "logentry",
        "logentry",
        "prepare_entry",
        "logentry",
        "payload",
        "path",
        "prepared_entries",
        "append",
        "data",
        "logentry",
        "logentry",
        "logentry",
        "logentry",
        "prepare_entry",
        "logentry",
        "payload",
        "prepared_entries",
        "append",
        "data",
        "logentry",
        "logentry",
        "logentry",
        "logentry",
        "logentry",
        "prepare_entry",
        "logentry",
        "payload",
        "popkeys",
        "prepared_entries",
        "append",
        "data",
        "logentry",
        "logentry",
        "logentry",
        "prepare_entry",
        "logentry",
        "payload",
        "popkeys",
        "prepared_entries",
        "append",
        "data",
        "logentry",
        "prepare_entry",
        "logentry",
        "logentry",
        "popkeys",
        "prepared_entries",
        "append",
        "data",
        "logentry",
        "logentry",
        "open",
        "logentry",
        "f",
        "f",
        "read",
        "max_size",
        "logentry",
        "logentry",
        "base64",
        "b64encode",
        "ttylog",
        "prepare_entry",
        "logentry",
        "payload",
        "popkeys",
        "prepared_entries",
        "append",
        "data",
        "logentry",
        "logentry",
        "logentry",
        "prepare_entry",
        "logentry",
        "payload",
        "prepared_entries",
        "append",
        "data",
        "entry",
        "prepared_entries",
        "send_data",
        "entry"
    ],
    "literals": [
        "\"Unexpected Response from Server: HTTP {0}, Body: {1}\"",
        "'output_donthackme'",
        "\"token\"",
        "'output_donthackme'",
        "\"endpoint\"",
        "\"X-Auth-Token\"",
        "\"Content-Type\"",
        "\"application/json\"",
        "\"\"",
        "\"/events\"",
        "\"PUT\"",
        "\"method\"",
        "\"url\"",
        "\"data\"",
        "\"session\"",
        "\"session\"",
        "\"sensor_name\"",
        "\"timestamp\"",
        "\"timestamp\"",
        "\"dst_ip\"",
        "\"data\"",
        "\"sensor_ip\"",
        "\"dst_ip\"",
        "\"data\"",
        "\"data\"",
        "\"eventid\"",
        "\"cowrie.session.connect\"",
        "\"source_ip\"",
        "\"src_ip\"",
        "\"start_time\"",
        "\"timestamp\"",
        "\"/session/connect\"",
        "\"POST\"",
        "\"timestamp\"",
        "\"eventid\"",
        "\"cowrie.login.success\"",
        "\"cowrie.login.failed\"",
        "\"username\"",
        "\"username\"",
        "\"password\"",
        "\"password\"",
        "\"success\"",
        "\"/login/failed\"",
        "\"eventid\"",
        "\"cowrie.login.success\"",
        "\"success\"",
        "\"/login/success\"",
        "\"eventid\"",
        "\"cowrie.command.success\"",
        "\"cowrie.command.failed\"",
        "\"command\"",
        "\"input\"",
        "\"success\"",
        "\"/command/failed\"",
        "\"eventid\"",
        "\"cowrie.command.success\"",
        "\"success\"",
        "\"/command/success\"",
        "\"eventid\"",
        "\"cowrie.session.file_download\"",
        "\"shasum\"",
        "\"shasum\"",
        "\"url\"",
        "\"url\"",
        "\"outfile\"",
        "\"outfile\"",
        "\"/session/file_download\"",
        "\"eventid\"",
        "'cowrie.client.version'",
        "\"ssh_version\"",
        "\"version\"",
        "\"ssh_kexAlgs\"",
        "\"kexAlgs\"",
        "\"ssh_keyAlgs\"",
        "\"keyAlgs\"",
        "\"ssh_macCS\"",
        "\"macCS\"",
        "\"/client/version\"",
        "\"timestamp\"",
        "\"eventid\"",
        "'cowrie.client.size'",
        "\"ttysize\"",
        "\"height\"",
        "\"height\"",
        "\"width\"",
        "\"width\"",
        "\"/client/size\"",
        "\"timestamp\"",
        "\"eventid\"",
        "'cowrie.session.closed'",
        "\"end_time\"",
        "\"timestamp\"",
        "\"/session/closed\"",
        "\"timestamp\"",
        "\"eventid\"",
        "'cowrie.log.closed'",
        "\"size\"",
        "\"ttylog\"",
        "\"rb\"",
        "\"ttylog\"",
        "\"size\"",
        "\"size\"",
        "\"log_location\"",
        "\"ttylog\"",
        "\"log_base64\"",
        "\"/log/closed\"",
        "\"timestamp\"",
        "\"eventid\"",
        "'cowrie.client.fingerprint'",
        "\"username\"",
        "\"username\"",
        "\"fingerprint\"",
        "\"fingerprint\"",
        "\"/client/fingerprint\""
    ],
    "variables": [
        "msg",
        "message",
        "resp",
        "cfg",
        "token",
        "endpoint",
        "data",
        "req",
        "s",
        "prepped",
        "resp",
        "prepared_entries",
        "payload",
        "data",
        "payload",
        "path",
        "payload",
        "path",
        "data",
        "payload",
        "path",
        "payload",
        "path",
        "data",
        "payload",
        "data",
        "payload",
        "data",
        "payload",
        "data",
        "data",
        "max_size",
        "ttylog",
        "payload",
        "data",
        "payload",
        "data"
    ],
    "comments": [
        "Copyright 2016 Russell Troxel",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\"); you may",
        "not use this file except in compliance with the License. You may obtain",
        "a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT",
        "WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the",
        "License for the specific language governing permissions and limitations",
        "under the License.",
        "entry = {",
        "\"entryid\": \"asdf\",",
        "\"session\": \"asdf\",",
        "\"timestamp\": \"isoformat\",",
        "\"src_ip\": \"1.2.3.4\",",
        "\"username\": \"asdf\",",
        "\"password\": \"asdf\",",
        "\"input\": \"cmd\",",
        "\"url\": \"asdf\",",
        "\"outfile\": \"asdf\",",
        "\"shasum\": \"asdf\",",
        "\"realm\": \"asdf\",",
        "\"version\": \"asdf\",",
        "\"width\": 1,",
        "\"height\": 1,",
        "\"ttylog\": \"asdf\",",
        "\"size\": \"asdf\",",
        "\"fingerprint\": \"asdf\"",
        "}",
        "elif logentry[\"eventid\"] == \"cowrie.direct-tcpip.request\":",
        "payload = {",
        "\"dest_port\": logentry[\"dst_port\"],",
        "\"dest_ip\": logentry[\"dst_ip\"]",
        "}",
        "data = self.prepare_entry(",
        "logentry,",
        "payload,",
        "\"/cdirect-tcpip/request\"",
        ")",
        "prepared_entries.append(data)"
    ],
    "docstrings": [
        "\"\"\"Cowrie API output plugin.\"\"\"",
        "\"\"\"Error when status code was not expected.\"\"\"",
        "\"\"\"Initialize error from requests Response.\"\"\"",
        "\"\"\"Return String.\"\"\"",
        "\"\"\"Output over REST to the cowrie_api.\"\"\"",
        "\"\"\"Init.\"\"\"",
        "\"\"\"Prepare request headers.\"\"\"",
        "\"\"\"Join base endpoint and path.\"\"\"",
        "\"\"\"Prepare an entry based on base_data.\"\"\"",
        "\"\"\"Send data to endpoint.\"\"\"",
        "\"\"\"Start.\"\"\"",
        "\"\"\"Stop.\"\"\"",
        "\"\"\"Class write method.\"\"\""
    ],
    "functions": [
        "__str__",
        "headers",
        "make_url",
        "prepare_entry",
        "send_data",
        "start",
        "stop",
        "write"
    ],
    "classes": [
        "HttpStatusCodeError",
        "Output"
    ]
}