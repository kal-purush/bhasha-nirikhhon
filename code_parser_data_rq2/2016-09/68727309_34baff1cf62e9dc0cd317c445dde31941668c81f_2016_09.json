{
    "identifiers": [
        "deadline",
        "deadline",
        "time",
        "time",
        "time",
        "time",
        "time",
        "span",
        "span",
        "setTimeout",
        "span",
        "id",
        "deadline",
        "setInterval",
        "id",
        "updateTimer",
        "deadline",
        "clock",
        "timer",
        "timer",
        "timer",
        "timer",
        "clock",
        "animateClock",
        "spans",
        "timer",
        "animateClock",
        "spans",
        "timer",
        "timer",
        "animateClock",
        "spans",
        "timer",
        "timer",
        "timer",
        "animateClock",
        "spans",
        "timer",
        "clearInterval",
        "timerInterval",
        "clock",
        "$",
        "$",
        "$",
        "startTimer",
        "deadline"
    ],
    "literals": [
        "'days'",
        "'hours'",
        "'minutes'",
        "'seconds'",
        "'total'",
        "\"turn\"",
        "\"\"",
        "'<span>'",
        "'</span>'",
        "'<span>'",
        "'</span>'",
        "'<span>'",
        "'</span>'",
        "'<span>'",
        "'</span>'",
        "\"span\"",
        "'<span>0</span><span>0</span><span>0</span><span>0</span>'",
        "'#countdown'",
        "'display'",
        "'none'",
        "'#new-year'",
        "'display'",
        "'block'",
        "'#new-year'",
        "'animated wobble'",
        "\"September 20, 2016 08:07:20\"",
        "\"clock\""
    ],
    "variables": [
        "time",
        "timerInterval",
        "clock",
        "timer",
        "spans",
        "deadline"
    ],
    "comments": [
        "going to give us the new date and time when this function was called which is every second.",
        "also getting back the date and time of the instance of updateTimer was called.",
        "time  = deadline the point we're counting too - time of the function was called. (in milliseconds)",
        "the object is going to work out based on the time difference.",
        "Math Floor always round DOWN.",
        "time / 1000  = 1000 converted to seconds, 60 converted min,60 is hours, 24 is days",
        "time / 1000  = 1000 converted to seconds, 60 converted min,60 is hours % 24 == how many hours left in the particular day. 100 % 24 = 4 hours",
        "giving a class turn into the injected span.",
        "SetInterval going to be fired every second.",
        "getting the match id from the DOM.",
        "generating a function and injecting it a deadline.",
        "ref to the HTML with div clock - concat the series of spans",
        "Animations",
        "will get all the above spans that been injected to the clock div.",
        "calling this function every second.",
        "== 59 because we're going to be in a second 60 which is a minute.",
        "when we getting to a new day.",
        "Check for the end of timer.",
        "means the difference",
        "when we're getting to the deadline, animation will take action.",
        "when the window loads fire this function.",
        "var deadline = new Date(\"January 1, 2017 00:00:00\"); // Declare a deadline.",
        "we're going to inject into the clock id of the html the deadline."
    ],
    "docstrings": [],
    "functions": [
        "updateTimer",
        "animateClock",
        "startTimer"
    ],
    "classes": []
}