{
    "identifiers": [
        "collections",
        "namedtuple",
        "Mapping",
        "yaml",
        "yaml",
        "CLoader",
        "Loader",
        "ImportError",
        "yaml",
        "Loader",
        "utils",
        "lazyproperty",
        "namedtuple",
        "DEFAULT_CONFIG",
        "classmethod",
        "cls",
        "work_path",
        "yaml_fname",
        "cls",
        "work_path",
        "cls",
        "defaults",
        "yaml_fname",
        "ConfigLoad",
        "conf",
        "open",
        "yaml_fname",
        "src",
        "yaml",
        "load",
        "src",
        "Loader",
        "Loader",
        "ConfigLoad",
        "cls",
        "cls",
        "nested_update",
        "conf",
        "user_conf",
        "conf",
        "validate",
        "errors",
        "ConfigLoad",
        "cls",
        "errors",
        "ConfigLoad",
        "conf",
        "work_path",
        "defaults",
        "SiteConfig",
        "defaults",
        "work_path",
        "resolve",
        "classmethod",
        "cls",
        "one",
        "other",
        "key",
        "value",
        "other",
        "items",
        "isinstance",
        "value",
        "Mapping",
        "cls",
        "nested_update",
        "one",
        "get",
        "key",
        "value",
        "nv",
        "other",
        "key",
        "one",
        "errors",
        "lazyproperty",
        "work_path",
        "joinpath",
        "lazyproperty",
        "work_path",
        "joinpath",
        "lazyproperty",
        "work_path",
        "joinpath",
        "lazyproperty",
        "work_path",
        "joinpath",
        "lazyproperty",
        "get",
        "name",
        "get",
        "get",
        "name"
    ],
    "literals": [
        "\"DEFAULT_CONFIG\"",
        "\"SiteConfig\"",
        "\"volt\"",
        "\"contents_path\"",
        "\"contents\"",
        "\"templates_path\"",
        "\"templates\"",
        "\"assets_path\"",
        "\"templates/assets\"",
        "\"site_path\"",
        "\"site\"",
        "\"user_engines_path\"",
        "\"user_engines\"",
        "\"config_name\"",
        "\"voltconfig.yaml\"",
        "\"site\"",
        "\"index_html_only\"",
        "\"nested_content_lookup\"",
        "\"ConfigLoad\"",
        "\"result\"",
        "\"errors\"",
        "\"YAML contains syntax errors.\"",
        "\"volt\"",
        "\"contents_path\"",
        "\"volt\"",
        "\"templates_path\"",
        "\"volt\"",
        "\"site_path\"",
        "\"volt\"",
        "\"assets_path\"",
        "\"site\"",
        "\"engines\""
    ],
    "variables": [
        "__all__",
        "DEFAULT_CONFIG",
        "INIT_CONFIG_STR",
        "ConfigLoad",
        "defaults",
        "conf",
        "user_conf",
        "errors",
        "work_path",
        "nv",
        "one",
        "key",
        "one",
        "key",
        "errors"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "Default configuration values",
        "Raw configuration text content for a new init",
        "Helper class for config loading",
        "TODO: display traceback depending on log level",
        "TODO: implement proper validation",
        "TODO; resolve any engines and plugins config?"
    ],
    "docstrings": [
        "\"\"\"\n    volt.config\n    ~~~~~~~~~~~\n\n    Configuration handling.\n\n    :copyright: (c) 2012-2016 Wibowo Arindrarto <bow@bow.web.id>\n    :license: BSD\n\n\"\"\"",
        "\"\"\"---\n# Volt configuration file\nsite:\n  # Name of your static site\n  name:\n  # URL that will point to your static site\n  url:\"\"\"",
        "\"\"\"Container for site-level configuration values.\"\"\"",
        "\"\"\"Creates configuration instance from the given YAML config file.\n\n        The loaded YAML configuration will update the default config values.\n        If the ``yaml_path`` parameter is None, the default configuration\n        will be returned without any change.\n\n        :param str yaml_fname: Name of the YAML config file.\n        :param path work_path: Absolute path to the working directory.\n        :returns: a :class:`ConfigLoad` object that contains the result of a\n            successful config loading, or a list of error messages, if any.\n\n        \"\"\"",
        "\"\"\"Update function that respects nested values.\n\n        This is similar to Python's dict.update, except when the value to\n        be updated is an instance of :class:`collections.Mapping`, the\n        function will recurse.\n\n        \"\"\"",
        "\"\"\"Performs validation of the config contents.\n\n        :returns: Validation error messages as a list of strings.\n\n        \"\"\"",
        "\"\"\"Path to the Volt contents directory.\"\"\"",
        "\"\"\"Path to the Volt templates directory.\"\"\"",
        "\"\"\"Path to the Volt site directory.\"\"\"",
        "\"\"\"Path to the Volt assets directory.\"\"\"",
        "\"\"\"Returns the site-level configuration.\"\"\"",
        "\"\"\"Returns an engine-level configuration given its name.\"\"\""
    ],
    "functions": [
        "from_yaml",
        "nested_update",
        "validate",
        "contents_path",
        "templates_path",
        "site_path",
        "assets_path",
        "site",
        "for_engine"
    ],
    "classes": [
        "SiteConfig"
    ]
}