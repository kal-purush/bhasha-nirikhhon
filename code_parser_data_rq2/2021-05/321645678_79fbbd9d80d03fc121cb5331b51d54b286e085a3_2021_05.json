{
    "identifiers": [
        "setuptools",
        "setup",
        "find_packages",
        "pathlib",
        "pathlib",
        "Path",
        "parent",
        "resolve",
        "here",
        "read_text",
        "encoding",
        "rel_path",
        "here",
        "rel_path",
        "read_text",
        "encoding",
        "line",
        "init_content",
        "split",
        "line",
        "startswith",
        "line",
        "line",
        "split",
        "delim",
        "RuntimeError",
        "setup",
        "name",
        "version",
        "get_version",
        "description",
        "long_description",
        "long_description",
        "long_description_content_type",
        "url",
        "maintainer",
        "maintainer_email",
        "classifiers",
        "keywords",
        "packages",
        "find_packages",
        "include",
        "python_requires",
        "install_requires",
        "project_urls"
    ],
    "literals": [
        "'README.md'",
        "'utf-8'",
        "'utf-8'",
        "'\\n'",
        "'__version__'",
        "'\"'",
        "'\"'",
        "\"'\"",
        "\"Unable to find version string.\"",
        "'QuaPy'",
        "\"quapy/__init__.py\"",
        "'QuaPy: a framework for Quantification in Python'",
        "'text/markdown'",
        "'https://github.com/HLT-ISTI/QuaPy'",
        "'Alejandro Moreo'",
        "'alejandro.moreo@isti.cnr.it'",
        "'Development Status :: 4 - Beta'",
        "'Intended Audience :: Developers'",
        "'Intended Audience :: Science/Research'",
        "'Programming Language :: Python'",
        "'Topic :: Software Development'",
        "'Topic :: Scientific/Engineering'",
        "'License :: OSI Approved :: BSD License'",
        "'Programming Language :: Python :: 3'",
        "'Programming Language :: Python :: 3.6'",
        "'Programming Language :: Python :: 3.7'",
        "'Programming Language :: Python :: 3.8'",
        "'Programming Language :: Python :: 3.9'",
        "'Programming Language :: Python :: 3 :: Only'",
        "'machine learning, quantification, classification, prevalence estimation, priors estimate'",
        "'quapy'",
        "'quapy.*'",
        "'>=3.6, <4'",
        "'scikit-learn'",
        "'pandas'",
        "'tqdm'",
        "'matplotlib'",
        "'Contributors'",
        "'https://github.com/HLT-ISTI/QuaPy/graphs/contributors'",
        "'Bug Reports'",
        "'https://github.com/HLT-ISTI/QuaPy/issues'",
        "'Documentation'",
        "'https://github.com/HLT-ISTI/QuaPy/wiki'",
        "'Source'",
        "'https://github.com/HLT-ISTI/QuaPy/'"
    ],
    "variables": [
        "here",
        "long_description",
        "init_content",
        "delim"
    ],
    "comments": [
        "Arguments marked as \"Required\" below must be included for upload to PyPI.",
        "Fields marked as \"Optional\" may be commented out.",
        "This is the name of your project. The first time you publish this",
        "package, this name will be registered for you. It will determine how",
        "users can install this project, e.g.:",
        "",
        "$ pip install sampleproject",
        "",
        "And where it will live on PyPI: https://pypi.org/project/sampleproject/",
        "",
        "There are some restrictions on what makes a valid project name",
        "specification here:",
        "https://packaging.python.org/specifications/core-metadata/#name",
        "Required",
        "Versions should comply with PEP 440:",
        "https://www.python.org/dev/peps/pep-0440/",
        "",
        "For a discussion on single-sourcing the version across setup.py and the",
        "project code, see",
        "https://packaging.python.org/en/latest/single_source_version.html",
        "Required",
        "This is a one-line description or tagline of what your project does. This",
        "corresponds to the \"Summary\" metadata field:",
        "https://packaging.python.org/specifications/core-metadata/#summary",
        "Optional",
        "This is an optional longer description of your project that represents",
        "the body of text which users will see when they visit PyPI.",
        "",
        "Often, this is the same as your README, so you can just read it in from",
        "that file directly (as we have already done above)",
        "",
        "This field corresponds to the \"Description\" metadata field:",
        "https://packaging.python.org/specifications/core-metadata/#description-optional",
        "Optional",
        "Denotes that our long_description is in Markdown; valid values are",
        "text/plain, text/x-rst, and text/markdown",
        "",
        "Optional if long_description is written in reStructuredText (rst) but",
        "required for plain-text or Markdown; if unspecified, \"applications should",
        "attempt to render [the long_description] as text/x-rst; charset=UTF-8 and",
        "fall back to text/plain if it is not valid rst\" (see link below)",
        "",
        "This field corresponds to the \"Description-Content-Type\" metadata field:",
        "https://packaging.python.org/specifications/core-metadata/#description-content-type-optional",
        "Optional (see note above)",
        "This should be a valid link to your project's main homepage.",
        "",
        "This field corresponds to the \"Home-Page\" metadata field:",
        "https://packaging.python.org/specifications/core-metadata/#home-page-optional",
        "Optional",
        "When your source code is in a subdirectory under the project root, e.g.",
        "`src/`, it is necessary to specify the `package_dir` argument.",
        "package_dir={'': 'src'},  # Optional",
        "You can just specify package directories manually here if your project is",
        "simple. Or you can use find_packages().",
        "",
        "Alternatively, if you just want to distribute a single Python file, use",
        "the `py_modules` argument instead as follows, which will expect a file",
        "called `my_module.py` to exist:",
        "",
        "py_modules=[\"my_module\"],",
        "",
        "Required",
        "List additional groups of dependencies here (e.g. development",
        "dependencies). Users will be able to install these using the \"extras\"",
        "syntax, for example:",
        "",
        "$ pip install sampleproject[dev]",
        "",
        "Similar to `install_requires` above, these must be valid existing",
        "projects.",
        "extras_require={  # Optional",
        "'dev': ['check-manifest'],",
        "'test': ['coverage'],",
        "},",
        "If there are data files included in your packages that need to be",
        "installed, specify them here.",
        "package_data={  # Optional",
        "'sample': ['package_data.dat'],",
        "},",
        "Although 'package_data' is the preferred approach, in some case you may",
        "need to place data files outside of your packages. See:",
        "http://docs.python.org/distutils/setupscript.html#installing-additional-files",
        "",
        "In this case, 'data_file' will be installed into '<sys.prefix>/my_data'",
        "data_files=[('my_data', ['data/data_file'])],  # Optional",
        "To provide executable scripts, use entry points in preference to the",
        "\"scripts\" keyword. Entry points provide cross-platform support and allow",
        "`pip` to create the appropriate form of executable for the target",
        "platform.",
        "",
        "For example, the following would provide a command called `sample` which",
        "executes the function `main` from this package when invoked:",
        "entry_points={  # Optional",
        "'console_scripts': [",
        "'sample=sample:main',",
        "],",
        "},",
        "Optional"
    ],
    "docstrings": [],
    "functions": [
        "get_version"
    ],
    "classes": []
}