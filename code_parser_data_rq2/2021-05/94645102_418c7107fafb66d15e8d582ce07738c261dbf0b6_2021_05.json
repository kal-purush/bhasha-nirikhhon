{
    "identifiers": [
        "Collections",
        "Immutable",
        "Microsoft",
        "CodeAnalysis",
        "Microsoft",
        "CodeAnalysis",
        "Diagnostics",
        "SourceGenerators",
        "DiagnosticAnalyzer",
        "LanguageNames",
        "CSharp",
        "DiagnosticAnalyzer",
        "DiagnosticDescriptor",
        "DiagnosticId",
        "Category",
        "DiagnosticSeverity",
        "isEnabledByDefault",
        "description",
        "ImmutableArray",
        "DiagnosticDescriptor",
        "ImmutableArray",
        "Create",
        "AccessCheckAttributeOnGroupCommandRule",
        "AnalysisContext",
        "context",
        "context",
        "ConfigureGeneratedCodeAnalysis",
        "GeneratedCodeAnalysisFlags",
        "context",
        "EnableConcurrentExecution",
        "context",
        "RegisterSymbolAction",
        "AnalyzeSymbol",
        "SymbolKind",
        "Method",
        "SymbolAnalysisContext",
        "context",
        "IMethodSymbol",
        "context",
        "methodSymbol",
        "GetAttributes",
        "methodAttributes",
        "IsEmpty",
        "attr",
        "methodAttributes",
        "IsDescendantOfAttribute",
        "attr",
        "hasGroupCommand",
        "hasGroupCommand",
        "attr",
        "methodAttributes",
        "IsDescendantOfAttribute",
        "attr",
        "attr",
        "ApplicationSyntaxReference",
        "SyntaxTree",
        "GetLocation",
        "attr",
        "ApplicationSyntaxReference",
        "Diagnostic",
        "Create",
        "AccessCheckAttributeOnGroupCommandRule",
        "attrLocation",
        "methodSymbol",
        "Locations",
        "attr",
        "AttributeClass",
        "Name",
        "methodSymbol",
        "Name",
        "context",
        "ReportDiagnostic",
        "diagnostic",
        "AttributeData",
        "attributeData",
        "baseAttributeClassNameWithNamespace",
        "attributeData",
        "AttributeClass",
        "attrClass",
        "ToDisplayString",
        "baseAttributeClassNameWithNamespace",
        "attrClass",
        "attrClass",
        "BaseType",
        "attrClass"
    ],
    "literals": [
        "\"Usage\"",
        "\"DSharpPlusCodeChecks\"",
        "\"Access check attributes are ignored\"",
        "\"Attribute {0} will be ignored for GroupCommand\"",
        "\"GroupCommand methods will silently ignore any access check attributes, so instead create an instance of the required check attribute and call it explicitly inside the method.\"",
        "\"DSharpPlus.CommandsNext.Attributes.GroupCommandAttribute\"",
        "\"DSharpPlus.CommandsNext.Attributes.CheckBaseAttribute\""
    ],
    "variables": [
        "Category",
        "DiagnosticId",
        "DiagnosticDescriptor",
        "AccessCheckAttributeOnGroupCommandRule",
        "SupportedDiagnostics",
        "methodSymbol",
        "methodAttributes",
        "hasGroupCommand",
        "attrLocation",
        "diagnostic",
        "attrClass"
    ],
    "comments": [
        "You can change these strings in the Resources.resx file. If you do not want your analyzer to be localize-able, you can use regular strings for Title and MessageFormat.",
        "See https://github.com/dotnet/roslyn/blob/master/docs/analyzers/Localizing%20Analyzers.md for more on localization",
        "TODO: Consider registering other actions that act on syntax instead of or in addition to symbols",
        "See https://github.com/dotnet/roslyn/blob/master/docs/analyzers/Analyzer%20Actions%20Semantics.md for more information"
    ],
    "docstrings": [],
    "functions": [
        "Initialize",
        "AnalyzeSymbol",
        "IsDescendantOfAttribute"
    ],
    "classes": [
        "AttributeUsageAnalyzer"
    ]
}