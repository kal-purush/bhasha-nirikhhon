{
    "identifiers": [
        "com",
        "ipiecoles",
        "batch",
        "dbExport",
        "com",
        "ipiecoles",
        "batch",
        "model",
        "Commune",
        "com",
        "ipiecoles",
        "batch",
        "repository",
        "CommuneRepository",
        "org",
        "springframework",
        "batch",
        "core",
        "Job",
        "org",
        "springframework",
        "batch",
        "core",
        "Step",
        "org",
        "springframework",
        "batch",
        "core",
        "configuration",
        "annotation",
        "EnableBatchProcessing",
        "org",
        "springframework",
        "batch",
        "core",
        "configuration",
        "annotation",
        "JobBuilderFactory",
        "org",
        "springframework",
        "batch",
        "core",
        "configuration",
        "annotation",
        "StepBuilderFactory",
        "org",
        "springframework",
        "batch",
        "core",
        "step",
        "tasklet",
        "Tasklet",
        "org",
        "springframework",
        "batch",
        "item",
        "ItemWriter",
        "org",
        "springframework",
        "batch",
        "item",
        "database",
        "JpaPagingItemReader",
        "org",
        "springframework",
        "batch",
        "item",
        "database",
        "builder",
        "JpaPagingItemReaderBuilder",
        "org",
        "springframework",
        "batch",
        "item",
        "file",
        "FlatFileItemWriter",
        "org",
        "springframework",
        "batch",
        "item",
        "file",
        "FlatFileParseException",
        "org",
        "springframework",
        "batch",
        "item",
        "file",
        "transform",
        "BeanWrapperFieldExtractor",
        "org",
        "springframework",
        "batch",
        "item",
        "file",
        "transform",
        "FormatterLineAggregator",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Qualifier",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Value",
        "org",
        "springframework",
        "context",
        "annotation",
        "Bean",
        "org",
        "springframework",
        "context",
        "annotation",
        "Configuration",
        "org",
        "springframework",
        "core",
        "io",
        "FileSystemResource",
        "javax",
        "persistence",
        "EntityManagerFactory",
        "java",
        "sql",
        "SQLException",
        "Configuration",
        "EnableBatchProcessing",
        "Autowired",
        "jobBuilderFactory",
        "Autowired",
        "stepBuilderFactory",
        "Autowired",
        "entityManagerFactory",
        "Autowired",
        "communeRepository",
        "Autowired",
        "communesDBExportListener",
        "Value",
        "chunkSize",
        "Bean",
        "name",
        "entityManagerFactory",
        "entityManagerFactory",
        "pageSize",
        "queryString",
        "build",
        "Bean",
        "bwfe",
        "bwfe",
        "setNames",
        "agg",
        "agg",
        "setFieldExtractor",
        "bwfe",
        "agg",
        "setFormat",
        "flatFileItemWriter",
        "flatFileItemWriter",
        "setName",
        "flatFileItemWriter",
        "setResource",
        "flatFileItemWriter",
        "setFooterCallback",
        "communeRepository",
        "flatFileItemWriter",
        "setHeaderCallback",
        "communeRepository",
        "flatFileItemWriter",
        "setLineAggregator",
        "agg",
        "flatFileItemWriter",
        "Bean",
        "Bean",
        "Bean",
        "stepBuilderFactory",
        "get",
        "tasklet",
        "infoTasklet",
        "listener",
        "infoTasklet",
        "build",
        "Bean",
        "stepBuilderFactory",
        "get",
        "chunk",
        "chunkSize",
        "reader",
        "JpaItemReader",
        "writer",
        "fileItemWriter",
        "listener",
        "communesDBExportListener",
        "faultTolerant",
        "retryLimit",
        "retry",
        "skipLimit",
        "skip",
        "build",
        "Bean",
        "Qualifier",
        "stepExport",
        "jobBuilderFactory",
        "get",
        "flow",
        "stepTasklet",
        "next",
        "stepExport",
        "end",
        "build"
    ],
    "literals": [
        "\"10\"",
        "\"JpaItemReader\"",
        "\"from Commune c order by code_postal, code_insee\"",
        "\"codePostal\"",
        "\"codeInsee\"",
        "\"nom\"",
        "\"latitude\"",
        "\"longitude\"",
        "\"%5s - %5s - %s : %.5f %.5f\"",
        "\"txtWriter\"",
        "\"target/test.txt\"",
        "\"exportFile\"",
        "\"exportFile\"",
        "\"exportCommunes\"",
        "\"exportCommunes\""
    ],
    "variables": [
        "jobBuilderFactory",
        "stepBuilderFactory",
        "entityManagerFactory",
        "communeRepository",
        "communesDBExportListener",
        "chunkSize"
    ],
    "comments": [
        "ne fonctionne pas avec : \"${importFile.chunkSize}\"",
        "",
        "READER ////////////////////",
        "",
        "lire la bdd et trier par code postal et code insee",
        "",
        "WRITER /////////////////////",
        "",
        "pour écrire le fichier définitif avec le bon formatage",
        "formatage du fichier final",
        "creation de la ligne footer",
        "creation de la ligne header",
        "",
        "LISTENER /////////////////",
        "",
        "pour ignorer un element",
        "",
        "TASKLET /////////////////",
        "",
        "Tasklet",
        "gestion erreur => relance le traitement en cas d'indispo jusqu'à 3 fois",
        "gestion erreur => ignorer les éléments levant une exception",
        "",
        "JOB ////////////////////",
        "",
        "job lance les méthodes",
        ".incrementer(new RunIdIncrementer())"
    ],
    "docstrings": [],
    "functions": [
        "JpaItemReader",
        "fileItemWriter",
        "CommunesDBExportListener",
        "communesDBExportListener",
        "Tasklet",
        "infoTasklet",
        "Step",
        "stepTasklet",
        "Step",
        "stepExport",
        "Job",
        "exportCommunes"
    ],
    "classes": [
        "CommuneDBExportBatch"
    ]
}