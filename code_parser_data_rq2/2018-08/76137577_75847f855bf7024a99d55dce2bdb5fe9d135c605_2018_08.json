{
    "identifiers": [
        "areFilesRelativeEquals",
        "findIntersect",
        "normalizeFileName",
        "suite",
        "test",
        "done",
        "parameters",
        "normalizeFileName",
        "parameters",
        "parameters",
        "done",
        "test",
        "done",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "findIntersect",
        "parameters",
        "parameters",
        "parameters",
        "testName",
        "done",
        "test",
        "done",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "areFilesRelativeEquals",
        "parameters",
        "parameters",
        "parameters",
        "isEqual",
        "parameters",
        "testName",
        "done"
    ],
    "literals": [
        "\"chai\"",
        "\"../src/helpers\"",
        "\"helper Tests\"",
        "\"Should normalize filenames properly @unit\"",
        "\"\"",
        "\"\"",
        "\"A\"",
        "\"a\"",
        "\"/\"",
        "\"###\"",
        "\"\\\\\"",
        "\"###\"",
        "\"a\\\\A\"",
        "\"a###a\"",
        "\"a/A\"",
        "\"a###a\"",
        "\"a/A/\"",
        "\"a###a###\"",
        "\"/###/\"",
        "\"#########\"",
        "\"\\\\/\"",
        "\"######\"",
        "\"Should find intersects between strings @unit\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"a\"",
        "\"a\"",
        "\"a\"",
        "\"a\"",
        "\"b\"",
        "\"\"",
        "\"a\"",
        "\"ab\"",
        "\"\"",
        "\"a\"",
        "\"ba\"",
        "\"a\"",
        "\"ba\"",
        "\"a\"",
        "\"a\"",
        "\"a\"",
        "\"aa\"",
        "\"a\"",
        "\"ba\"",
        "\"aa\"",
        "\"a\"",
        "\"ba\"",
        "\"ba\"",
        "\"ba\"",
        "base = '${parameters.base}'\n                and comparee = '${parameters.comparee}' -> '${parameters.expected}'",
        "\"Should compare relative paths properly @unit\"",
        "\"c###dev###python###python###foo###bar###a.py\"",
        "\"mnt###c###dev###python###python###foo###bar###_init_.py\"",
        "\"python\"",
        "\"c###dev###python###python###foo###bar###a.py\"",
        "\"mnt###c###dev###python###python###foo###bar###a.py\"",
        "\"python\"",
        "file1 = '${parameters.file1}' and file2 = '${parameters.file2}' and folder = '${parameters.folder}' -> '${parameters.expected}'"
    ],
    "variables": [
        "testName",
        "testName",
        "isEqual"
    ],
    "comments": [
        "tslint:disable-next-line:max-line-length"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}