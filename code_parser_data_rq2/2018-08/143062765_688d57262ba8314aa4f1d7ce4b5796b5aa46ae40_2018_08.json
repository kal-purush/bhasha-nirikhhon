{
    "identifiers": [
        "debugFactory",
        "packageIdentifier",
        "qs",
        "crypto",
        "debugFactory",
        "adapter",
        "packageIdentifier",
        "res",
        "_sendResponse",
        "dispatchResult",
        "res",
        "status",
        "res",
        "poweredBy",
        "content",
        "res",
        "content",
        "content",
        "res",
        "content",
        "res",
        "req",
        "resolve",
        "reject",
        "req",
        "err",
        "reject",
        "err",
        "chunk",
        "body",
        "chunk",
        "Buffer",
        "body",
        "resolve",
        "rawBody",
        "req",
        "body",
        "req",
        "body",
        "qs",
        "body",
        "body",
        "body",
        "body",
        "error",
        "errorCodes",
        "error",
        "body",
        "slackMessageAdapterMiddleware",
        "req",
        "res",
        "debug",
        "req",
        "req",
        "buildRawBody",
        "req",
        "rawBody",
        "rawBody",
        "verifyRequestSignature",
        "adapter",
        "req",
        "rawBody",
        "requestIsVerified",
        "sendResponse",
        "res",
        "parseBody",
        "req",
        "rawBody",
        "body",
        "body",
        "respond",
        "adapter",
        "body",
        "dispatchResult",
        "dispatchResult",
        "respond",
        "err",
        "error",
        "errorCodes",
        "error",
        "signingSecret",
        "req",
        "rawBody",
        "req",
        "req",
        "ts",
        "fiveMinutesAgo",
        "debug",
        "error",
        "errorCodes",
        "error",
        "crypto",
        "signingSecret",
        "signature",
        "hmac",
        "version",
        "ts",
        "rawBody",
        "hash",
        "hmac",
        "debug",
        "error",
        "errorCodes",
        "error",
        "debug"
    ],
    "literals": [
        "'debug'",
        "'./util'",
        "'qs'",
        "'crypto'",
        "'SLACKMESSAGEMIDDLEWARE_TOKEN_VERIFICATION_FAILURE'",
        "'SLACKMESSAGEMIDDLEWARE_REQUEST_SIGNATURE_VERIFICATION_FAILURE'",
        "'SLACKMESSAGEMIDDLEWARE_REQUEST_TIMELIMIT_FAILURE'",
        "'SLACKMESSAGEMIDDLEWARE_BODY_FAILURE'",
        "'@slack/interactive-messages:http-handler'",
        "'X-Slack-Powered-By'",
        "'string'",
        "'error'",
        "'data'",
        "'end'",
        "'content-type'",
        "'application/x-www-form-urlencoded'",
        "'application/json'",
        "'The incoming HTTP request did not have a body.'",
        "'request received - method: %s, path: %s'",
        "'The HTTP request did not have a valid body'",
        "'x-slack-signature'",
        "'x-slack-request-timestamp'",
        "'request is older than 5 minutes'",
        "'Slack request signing verification failed'",
        "'sha256'",
        "'='",
        "${version}:${ts}:${rawBody}",
        "'hex'",
        "'Request signature is not valid'",
        "'Slack request signing verification failed'",
        "'request signing verification success'"
    ],
    "variables": [
        "errorCodes",
        "debug",
        "poweredBy",
        "dispatchResult",
        "body",
        "rawBody",
        "error",
        "requestIsVerified",
        "respond",
        "body",
        "dispatchResult",
        "error",
        "signature",
        "ts",
        "fiveMinutesAgo",
        "error",
        "hmac",
        "version",
        "hash",
        "error"
    ],
    "comments": [
        "Is this possible since we're parsing the body ourselves",
        "Builds body of the request from stream and returns the raw request body",
        "Verify the request signature",
        "Function used to send response",
        "Parse raw body",
        "Invalid body, error already thrown",
        "Request signature",
        "Request timestamp",
        "Divide current date to match Slack ts format",
        "Subtract 5 minutes from current time",
        "TODO: is this right for throwing an error here? I'm unsure"
    ],
    "docstrings": [
        "* Method to verify signature of requests\n   *\n   * @param {req} Request\n   * @param {res} Response\n   * @param {rawBody} Raw request body\n   * @returns {boolean} Indicates if request is verified"
    ],
    "functions": [
        "createHTTPHandler",
        "sendResponse",
        "buildRawBody",
        "parseBody",
        "verifyRequestSignature"
    ],
    "classes": []
}