{
    "identifiers": [
        "Configuration",
        "url",
        "init",
        "configuration",
        "basePath",
        "fetch",
        "field",
        "msg",
        "configuration",
        "options",
        "options",
        "options",
        "configuration",
        "options",
        "fetch",
        "basePath",
        "options",
        "fetch",
        "basePath",
        "options",
        "fetch",
        "basePath",
        "configuration",
        "fetch",
        "basePath",
        "options",
        "options",
        "options",
        "BaseAPI",
        "options",
        "options",
        "options",
        "configuration",
        "X_Hackerlog_EditorToken",
        "currentVersion",
        "os",
        "arch",
        "options",
        "configuration",
        "X_Hackerlog_EditorToken",
        "currentVersion",
        "os",
        "arch",
        "options",
        "fetch",
        "basePath",
        "configuration",
        "fetch",
        "basePath",
        "X_Hackerlog_EditorToken",
        "currentVersion",
        "os",
        "arch",
        "options",
        "BaseAPI",
        "X_Hackerlog_EditorToken",
        "currentVersion",
        "os",
        "arch",
        "options",
        "configuration",
        "options",
        "configuration",
        "options",
        "fetch",
        "basePath",
        "configuration",
        "fetch",
        "basePath",
        "options",
        "BaseAPI",
        "options",
        "configuration",
        "X_Hackerlog_EditorToken",
        "options",
        "configuration",
        "X_Hackerlog_EditorToken",
        "options",
        "fetch",
        "basePath",
        "configuration",
        "fetch",
        "basePath",
        "X_Hackerlog_EditorToken",
        "options",
        "BaseAPI",
        "X_Hackerlog_EditorToken",
        "options",
        "configuration",
        "id",
        "image_url",
        "options",
        "user",
        "options",
        "id",
        "options",
        "editor",
        "options",
        "q",
        "options",
        "q",
        "options",
        "configuration",
        "id",
        "image_url",
        "options",
        "fetch",
        "basePath",
        "user",
        "options",
        "fetch",
        "basePath",
        "id",
        "options",
        "fetch",
        "basePath",
        "editor",
        "options",
        "fetch",
        "basePath",
        "q",
        "options",
        "fetch",
        "basePath",
        "q",
        "options",
        "fetch",
        "basePath",
        "configuration",
        "fetch",
        "basePath",
        "id",
        "image_url",
        "options",
        "user",
        "options",
        "id",
        "options",
        "editor",
        "options",
        "q",
        "options",
        "q",
        "options",
        "BaseAPI",
        "id",
        "image_url",
        "options",
        "user",
        "options",
        "id",
        "options",
        "editor",
        "options",
        "q",
        "options",
        "q",
        "options"
    ],
    "literals": [
        "\"./configuration\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"RequiredError\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [
        "COLLECTION_FORMATS",
        "AuthApiFetchParamCreator",
        "AuthApiFp",
        "AuthApiFactory",
        "CoreApiFetchParamCreator",
        "CoreApiFp",
        "CoreApiFactory",
        "MailingListApiFetchParamCreator",
        "MailingListApiFp",
        "MailingListApiFactory",
        "UnitsApiFetchParamCreator",
        "UnitsApiFp",
        "UnitsApiFactory",
        "UsersApiFetchParamCreator",
        "UsersApiFp",
        "UsersApiFactory"
    ],
    "comments": [
        "<reference path=\"src/custom.d.ts\" />"
    ],
    "docstrings": [
        "*\n * @export",
        "*\n * @export\n * @interface FetchAPI",
        "*\n * @export\n * @interface FetchArgs",
        "*\n * @export\n * @class BaseAPI",
        "*\n * @export\n * @class RequiredError\n * @extends {Error}",
        "*\n * @export\n * @interface MainAuth",
        "*\n     * @type {string}\n     * @memberof MainAuth",
        "*\n     * @type {number}\n     * @memberof MainAuth",
        "*\n     * @type {number}\n     * @memberof MainAuth",
        "*\n     * @type {string}\n     * @memberof MainAuth",
        "*\n     * @type {string}\n     * @memberof MainAuth",
        "*\n     * @type {MainUser}\n     * @memberof MainAuth",
        "*\n     * @type {number}\n     * @memberof MainAuth",
        "*\n * @export\n * @interface MainAvailableResponse",
        "*\n     * @type {boolean}\n     * @memberof MainAvailableResponse",
        "*\n * @export\n * @interface MainGenericResponse",
        "*\n     * @type {string}\n     * @memberof MainGenericResponse",
        "*\n     * @type {boolean}\n     * @memberof MainGenericResponse",
        "*\n * @export\n * @interface MainUnit",
        "*\n     * @type {string}\n     * @memberof MainUnit",
        "*\n     * @type {string}\n     * @memberof MainUnit",
        "*\n     * @type {string}\n     * @memberof MainUnit",
        "*\n     * @type {number}\n     * @memberof MainUnit",
        "*\n     * @type {number}\n     * @memberof MainUnit",
        "*\n     * @type {number}\n     * @memberof MainUnit",
        "*\n     * @type {string}\n     * @memberof MainUnit",
        "*\n     * @type {string}\n     * @memberof MainUnit",
        "*\n     * @type {string}\n     * @memberof MainUnit",
        "*\n     * @type {string}\n     * @memberof MainUnit",
        "*\n     * @type {string}\n     * @memberof MainUnit",
        "*\n     * @type {number}\n     * @memberof MainUnit",
        "*\n * @export\n * @interface MainUser",
        "*\n     * @type {string}\n     * @memberof MainUser",
        "*\n     * @type {string}\n     * @memberof MainUser",
        "*\n     * @type {string}\n     * @memberof MainUser",
        "*\n     * @type {string}\n     * @memberof MainUser",
        "*\n     * @type {number}\n     * @memberof MainUser",
        "*\n     * @type {string}\n     * @memberof MainUser",
        "*\n     * @type {string}\n     * @memberof MainUser",
        "*\n     * @type {string}\n     * @memberof MainUser",
        "*\n     * @type {Array<MainUnit>}\n     * @memberof MainUser",
        "*\n     * @type {string}\n     * @memberof MainUser",
        "*\n     * @type {string}\n     * @memberof MainUser",
        "*\n * @export\n * @interface MainVersionResponse",
        "*\n     * @type {string}\n     * @memberof MainVersionResponse",
        "*\n     * @type {boolean}\n     * @memberof MainVersionResponse",
        "* AuthApi - fetch parameter creator\n * @export",
        "* Authenticates a user and returns a JWT on successful login\n     * @summary Authenticates a user\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Sends an email to the user with a link to reset their password\n     * @summary Starts a password reset\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Allows the user to reset their password with the submitted password\n     * @summary Resets a user's password\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* AuthApi - functional programming interface\n * @export",
        "* Authenticates a user and returns a JWT on successful login\n     * @summary Authenticates a user\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Sends an email to the user with a link to reset their password\n     * @summary Starts a password reset\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Allows the user to reset their password with the submitted password\n     * @summary Resets a user's password\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* AuthApi - factory interface\n * @export",
        "* Authenticates a user and returns a JWT on successful login\n     * @summary Authenticates a user\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Sends an email to the user with a link to reset their password\n     * @summary Starts a password reset\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Allows the user to reset their password with the submitted password\n     * @summary Resets a user's password\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* AuthApi - object-oriented interface\n * @export\n * @class AuthApi\n * @extends {BaseAPI}",
        "* Authenticates a user and returns a JWT on successful login\n     * @summary Authenticates a user\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AuthApi",
        "* Sends an email to the user with a link to reset their password\n     * @summary Starts a password reset\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AuthApi",
        "* Allows the user to reset their password with the submitted password\n     * @summary Resets a user's password\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof AuthApi",
        "* CoreApi - fetch parameter creator\n * @export",
        "* This endpoint takes a few parameters and with those parameters, it looks to see if\n     * @summary Returns a link of the latest version of the Core app\n     * @param {string} X_Hackerlog_EditorToken X-Hackerlog-EditorToken\n     * @param {string} currentVersion Current core version in client\n     * @param {string} os The client OS\n     * @param {string} arch The client architecture\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* CoreApi - functional programming interface\n * @export",
        "* This endpoint takes a few parameters and with those parameters, it looks to see if\n     * @summary Returns a link of the latest version of the Core app\n     * @param {string} X_Hackerlog_EditorToken X-Hackerlog-EditorToken\n     * @param {string} currentVersion Current core version in client\n     * @param {string} os The client OS\n     * @param {string} arch The client architecture\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* CoreApi - factory interface\n * @export",
        "* This endpoint takes a few parameters and with those parameters, it looks to see if\n     * @summary Returns a link of the latest version of the Core app\n     * @param {string} X_Hackerlog_EditorToken X-Hackerlog-EditorToken\n     * @param {string} currentVersion Current core version in client\n     * @param {string} os The client OS\n     * @param {string} arch The client architecture\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* CoreApi - object-oriented interface\n * @export\n * @class CoreApi\n * @extends {BaseAPI}",
        "* This endpoint takes a few parameters and with those parameters, it looks to see if\n     * @summary Returns a link of the latest version of the Core app\n     * @param {string} X_Hackerlog_EditorToken X-Hackerlog-EditorToken\n     * @param {string} currentVersion Current core version in client\n     * @param {string} os The client OS\n     * @param {string} arch The client architecture\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CoreApi",
        "* MailingListApi - fetch parameter creator\n * @export",
        "* This adds a user to the mailing list\n     * @summary Adds a user to the mailing list\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* MailingListApi - functional programming interface\n * @export",
        "* This adds a user to the mailing list\n     * @summary Adds a user to the mailing list\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* MailingListApi - factory interface\n * @export",
        "* This adds a user to the mailing list\n     * @summary Adds a user to the mailing list\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* MailingListApi - object-oriented interface\n * @export\n * @class MailingListApi\n * @extends {BaseAPI}",
        "* This adds a user to the mailing list\n     * @summary Adds a user to the mailing list\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MailingListApi",
        "* UnitsApi - fetch parameter creator\n * @export",
        "* This gets all of the units of work for a specific user. The user is identified by the\n     * @summary Gets units of work for a user\n     * @param {string} X_Hackerlog_EditorToken X-Hackerlog-EditorToken\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* UnitsApi - functional programming interface\n * @export",
        "* This gets all of the units of work for a specific user. The user is identified by the\n     * @summary Gets units of work for a user\n     * @param {string} X_Hackerlog_EditorToken X-Hackerlog-EditorToken\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* UnitsApi - factory interface\n * @export",
        "* This gets all of the units of work for a specific user. The user is identified by the\n     * @summary Gets units of work for a user\n     * @param {string} X_Hackerlog_EditorToken X-Hackerlog-EditorToken\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* UnitsApi - object-oriented interface\n * @export\n * @class UnitsApi\n * @extends {BaseAPI}",
        "* This gets all of the units of work for a specific user. The user is identified by the\n     * @summary Gets units of work for a user\n     * @param {string} X_Hackerlog_EditorToken X-Hackerlog-EditorToken\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UnitsApi",
        "* UsersApi - fetch parameter creator\n * @export",
        "* Adds a profile image to a user\n     * @summary Add Profile Image\n     * @param {string} id The ID of the user\n     * @param {any} image_url The URL of the profile image\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Creates a user with the body params that are passed in\n     * @summary Creates/Registers a user\n     * @param {MainUser} user User object: first_name, last_name, email, password, username\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Finds a user given their ID as a path param\n     * @summary Gets a user by their ID\n     * @param {number} id User ID\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Finds a user given their editor token as a path param\n     * @summary Gets a user by their editor token\n     * @param {any} editor User&#39;s Editor Token\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Checks if an email is available and responds as such\n     * @summary Checks if an email is available\n     * @param {string} [q] email search using q as key\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Checks if a username is available and responds as such\n     * @summary Checks if a username is available\n     * @param {string} [q] Username search using q as key\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* UsersApi - functional programming interface\n * @export",
        "* Adds a profile image to a user\n     * @summary Add Profile Image\n     * @param {string} id The ID of the user\n     * @param {any} image_url The URL of the profile image\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Creates a user with the body params that are passed in\n     * @summary Creates/Registers a user\n     * @param {MainUser} user User object: first_name, last_name, email, password, username\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Finds a user given their ID as a path param\n     * @summary Gets a user by their ID\n     * @param {number} id User ID\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Finds a user given their editor token as a path param\n     * @summary Gets a user by their editor token\n     * @param {any} editor User&#39;s Editor Token\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Checks if an email is available and responds as such\n     * @summary Checks if an email is available\n     * @param {string} [q] email search using q as key\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Checks if a username is available and responds as such\n     * @summary Checks if a username is available\n     * @param {string} [q] Username search using q as key\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* UsersApi - factory interface\n * @export",
        "* Adds a profile image to a user\n     * @summary Add Profile Image\n     * @param {string} id The ID of the user\n     * @param {any} image_url The URL of the profile image\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Creates a user with the body params that are passed in\n     * @summary Creates/Registers a user\n     * @param {MainUser} user User object: first_name, last_name, email, password, username\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Finds a user given their ID as a path param\n     * @summary Gets a user by their ID\n     * @param {number} id User ID\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Finds a user given their editor token as a path param\n     * @summary Gets a user by their editor token\n     * @param {any} editor User&#39;s Editor Token\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Checks if an email is available and responds as such\n     * @summary Checks if an email is available\n     * @param {string} [q] email search using q as key\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* Checks if a username is available and responds as such\n     * @summary Checks if a username is available\n     * @param {string} [q] Username search using q as key\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}",
        "* UsersApi - object-oriented interface\n * @export\n * @class UsersApi\n * @extends {BaseAPI}",
        "* Adds a profile image to a user\n     * @summary Add Profile Image\n     * @param {string} id The ID of the user\n     * @param {any} image_url The URL of the profile image\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UsersApi",
        "* Creates a user with the body params that are passed in\n     * @summary Creates/Registers a user\n     * @param {MainUser} user User object: first_name, last_name, email, password, username\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UsersApi",
        "* Finds a user given their ID as a path param\n     * @summary Gets a user by their ID\n     * @param {number} id User ID\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UsersApi",
        "* Finds a user given their editor token as a path param\n     * @summary Gets a user by their editor token\n     * @param {any} editor User&#39;s Editor Token\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UsersApi",
        "* Checks if an email is available and responds as such\n     * @summary Checks if an email is available\n     * @param {string} [q] email search using q as key\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UsersApi",
        "* Checks if a username is available and responds as such\n     * @summary Checks if a username is available\n     * @param {string} [q] Username search using q as key\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UsersApi"
    ],
    "functions": [],
    "classes": [
        "BaseAPI",
        "RequiredError",
        "AuthApi",
        "CoreApi",
        "MailingListApi",
        "UnitsApi",
        "UsersApi"
    ]
}