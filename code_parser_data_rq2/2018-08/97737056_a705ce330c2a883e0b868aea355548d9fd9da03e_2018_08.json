{
    "identifiers": [
        "absolute_import",
        "argparse",
        "os",
        "logging",
        "pickle",
        "io",
        "BytesIO",
        "apache_beam",
        "beam",
        "apache_beam",
        "io",
        "filesystems",
        "FileSystems",
        "apache_beam",
        "options",
        "pipeline_options",
        "PipelineOptions",
        "SetupOptions",
        "lxml",
        "etree",
        "sciencebeam_gym",
        "utils",
        "collection",
        "extend_dict",
        "remove_keys_from_dict",
        "sciencebeam_gym",
        "beam_utils",
        "utils",
        "TransformAndCount",
        "TransformAndLog",
        "MapOrLog",
        "PreventFusion",
        "sciencebeam_gym",
        "beam_utils",
        "files",
        "ReadFileList",
        "FindFiles",
        "sciencebeam_gym",
        "beam_utils",
        "io",
        "read_all_from_path",
        "save_file_content",
        "sciencebeam_gym",
        "beam_utils",
        "main",
        "add_cloud_args",
        "process_cloud_args",
        "process_sciencebeam_gym_dep_args",
        "sciencebeam_gym",
        "structured_document",
        "structured_document_loader",
        "load_structured_document",
        "sciencebeam_gym",
        "structured_document",
        "lxml",
        "LxmlStructuredDocument",
        "sciencebeam_gym",
        "preprocess",
        "preprocessing_utils",
        "join_if_relative_path",
        "convert_pdf_bytes_to_lxml",
        "parse_page_range",
        "save_pages",
        "pdf_bytes_to_png_pages",
        "get_output_file",
        "sciencebeam_gym",
        "inference_model",
        "extract_to_xml",
        "extract_structured_document_to_xml",
        "sciencebeam_gym",
        "models",
        "text",
        "crf",
        "annotate_using_predictions",
        "predict_and_annotate_structured_document",
        "CRF_TAG_SCOPE",
        "sciencebeam_gym",
        "inference_model",
        "annotate_using_predictions",
        "annotate_structured_document_using_predicted_images",
        "AnnotatedImage",
        "CV_TAG_SCOPE",
        "grobid",
        "grobid_xml_enhancer",
        "GrobidXmlEnhancer",
        "cv_conversion_utils",
        "InferenceModelWrapper",
        "image_data_to_png",
        "grobid",
        "grobid_service",
        "grobid_service",
        "GrobidApiPaths",
        "logging",
        "getLogger",
        "pdf_content",
        "path",
        "page_range",
        "LxmlStructuredDocument",
        "etree",
        "parse",
        "BytesIO",
        "convert_pdf_bytes_to_lxml",
        "pdf_content",
        "path",
        "path",
        "page_range",
        "page_range",
        "structured_document",
        "prediction_images",
        "color_map",
        "tag_scope",
        "annotate_structured_document_using_predicted_images",
        "structured_document",
        "AnnotatedImage",
        "prediction_image",
        "color_map",
        "prediction_image",
        "prediction_images",
        "tag_scope",
        "tag_scope",
        "structured_document",
        "tag_scope",
        "extract_structured_document_to_xml",
        "structured_document",
        "tag_scope",
        "tag_scope",
        "etree",
        "tostring",
        "xml_root",
        "pretty_print",
        "path",
        "FileSystems",
        "open",
        "path",
        "crf_model_f",
        "pickle",
        "load",
        "crf_model_f",
        "filename",
        "structured_document",
        "isinstance",
        "structured_document",
        "LxmlStructuredDocument",
        "save_file_content",
        "filename",
        "etree",
        "tostring",
        "structured_document",
        "root",
        "pretty_print",
        "filename",
        "crf_enabled",
        "cv_enabled",
        "crf_enabled",
        "cv_enabled",
        "OutputExt",
        "CRF_CV_ANNOT_LXML",
        "crf_enabled",
        "OutputExt",
        "CRF_ANNOT_LXML",
        "cv_enabled",
        "OutputExt",
        "CV_ANNOT_LXML",
        "AssertionError",
        "opt",
        "opt",
        "pdf_file_list",
        "ReadFileList",
        "opt",
        "pdf_file_list",
        "column",
        "opt",
        "pdf_file_column",
        "limit",
        "opt",
        "limit",
        "FindFiles",
        "join_if_relative_path",
        "opt",
        "base_data_path",
        "opt",
        "pdf_path",
        "TransformAndCount",
        "beam",
        "pdf_url",
        "DataProps",
        "SOURCE_FILENAME",
        "pdf_url",
        "DataProps",
        "PDF_CONTENT",
        "read_all_from_path",
        "pdf_url",
        "MetricCounters",
        "FILES",
        "p",
        "opt",
        "get_pipeline_output_file",
        "opt",
        "pages",
        "opt",
        "cv_model_export_dir",
        "p",
        "PdfUrlSource",
        "opt",
        "pdf_urls",
        "PreventFusion",
        "ReadPdfContent",
        "MapOrLog",
        "v",
        "extend_dict",
        "v",
        "DataProps",
        "STRUCTURED_DOCUMENT",
        "convert_pdf_bytes_to_structured_document",
        "v",
        "DataProps",
        "PDF_CONTENT",
        "path",
        "v",
        "DataProps",
        "SOURCE_FILENAME",
        "page_range",
        "page_range",
        "log_fn",
        "e",
        "v",
        "get_logger",
        "warning",
        "e",
        "v",
        "DataProps",
        "SOURCE_FILENAME",
        "exc_info",
        "e",
        "error_count",
        "MetricCounters",
        "CONVERT_PDF_TO_LXML_ERROR",
        "cv_enabled",
        "opt",
        "image_width",
        "opt",
        "image_height",
        "opt",
        "image_width",
        "opt",
        "image_height",
        "InferenceModelWrapper",
        "opt",
        "cv_model_export_dir",
        "lxml_content",
        "MapOrLog",
        "v",
        "remove_keys_from_dict",
        "extend_dict",
        "v",
        "DataProps",
        "PDF_PNG_PAGES",
        "pdf_bytes_to_png_pages",
        "v",
        "DataProps",
        "PDF_CONTENT",
        "dpi",
        "image_size",
        "image_size",
        "page_range",
        "page_range",
        "keys_to_remove",
        "DataProps",
        "PDF_CONTENT",
        "error_count",
        "MetricCounters",
        "CONVERT_PDF_TO_PNG_ERROR",
        "MapOrLog",
        "v",
        "remove_keys_from_dict",
        "extend_dict",
        "v",
        "DataProps",
        "CV_PREDICTION_PNG_PAGES",
        "inference_model_wrapper",
        "v",
        "DataProps",
        "PDF_PNG_PAGES",
        "DataProps",
        "COLOR_MAP",
        "inference_model_wrapper",
        "get_color_map",
        "keys_to_remove",
        "DataProps",
        "PDF_PNG_PAGES",
        "error_count",
        "MetricCounters",
        "CV_PREDICTION_ERROR",
        "opt",
        "save_cv_output",
        "cv_predictions",
        "TransformAndLog",
        "beam",
        "v",
        "save_pages",
        "get_pipeline_output_file",
        "v",
        "DataProps",
        "SOURCE_FILENAME",
        "OutputExt",
        "CV_PNG",
        "image_data_to_png",
        "image_data",
        "image_data",
        "v",
        "DataProps",
        "CV_PREDICTION_PNG_PAGES",
        "log_fn",
        "x",
        "get_logger",
        "info",
        "x",
        "cv_predictions",
        "MapOrLog",
        "v",
        "remove_keys_from_dict",
        "extend_dict",
        "v",
        "DataProps",
        "STRUCTURED_DOCUMENT",
        "annotate_structured_document_using_predicted_image_data",
        "v",
        "DataProps",
        "STRUCTURED_DOCUMENT",
        "v",
        "DataProps",
        "CV_PREDICTION_PNG_PAGES",
        "v",
        "DataProps",
        "COLOR_MAP",
        "tag_scope",
        "CV_TAG_SCOPE",
        "keys_to_remove",
        "DataProps",
        "PDF_PNG_PAGES",
        "error_count",
        "MetricCounters",
        "ANNOTATE_USING_PREDICTION_ERROR",
        "cv_annotated_lxml",
        "CV_TAG_SCOPE",
        "opt",
        "crf_model",
        "load_crf_model",
        "opt",
        "crf_model",
        "lxml_content",
        "MapOrLog",
        "v",
        "extend_dict",
        "v",
        "DataProps",
        "STRUCTURED_DOCUMENT",
        "predict_and_annotate_structured_document",
        "v",
        "DataProps",
        "STRUCTURED_DOCUMENT",
        "model",
        "error_count",
        "MetricCounters",
        "ANNOTATE_USING_PREDICTION_ERROR",
        "crf_annotated_lxml",
        "CRF_TAG_SCOPE",
        "opt",
        "save_annot_lxml",
        "lxml_content",
        "TransformAndLog",
        "beam",
        "v",
        "save_structured_document",
        "get_pipeline_output_file",
        "v",
        "DataProps",
        "SOURCE_FILENAME",
        "get_annot_lxml_ext",
        "crf_enabled",
        "opt",
        "crf_model",
        "cv_enabled",
        "cv_enabled",
        "v",
        "DataProps",
        "STRUCTURED_DOCUMENT",
        "log_fn",
        "x",
        "get_logger",
        "info",
        "x",
        "lxml_content",
        "extract_tag_scope",
        "p",
        "opt",
        "grobid_service",
        "opt",
        "grobid_url",
        "opt",
        "grobid_action",
        "start_service",
        "opt",
        "start_grobid_service",
        "p",
        "PdfUrlSource",
        "opt",
        "PreventFusion",
        "ReadPdfContent",
        "MapOrLog",
        "v",
        "extend_dict",
        "v",
        "DataProps",
        "EXTRACTED_XML",
        "grobid_transformer",
        "v",
        "DataProps",
        "SOURCE_FILENAME",
        "v",
        "DataProps",
        "PDF_CONTENT",
        "error_count",
        "MetricCounters",
        "GROBID_ERROR",
        "p",
        "opt",
        "get_pipeline_output_file",
        "opt",
        "lxml_file_list",
        "p",
        "ReadFileList",
        "opt",
        "lxml_file_list",
        "column",
        "opt",
        "lxml_file_column",
        "limit",
        "opt",
        "limit",
        "lxml_urls",
        "PreventFusion",
        "TransformAndCount",
        "MapOrLog",
        "url",
        "DataProps",
        "SOURCE_FILENAME",
        "url",
        "DataProps",
        "STRUCTURED_DOCUMENT",
        "load_structured_document",
        "url",
        "error_count",
        "MetricCounters",
        "READ_LXML_ERROR",
        "MetricCounters",
        "FILES",
        "add_read_pdfs_to_annotated_lxml_pipeline_steps",
        "p",
        "opt",
        "get_pipeline_output_file",
        "annotated_lxml",
        "MapOrLog",
        "v",
        "remove_keys_from_dict",
        "extend_dict",
        "v",
        "DataProps",
        "EXTRACTED_XML",
        "extract_annotated_structured_document_to_xml",
        "v",
        "DataProps",
        "STRUCTURED_DOCUMENT",
        "tag_scope",
        "extract_tag_scope",
        "keys_to_remove",
        "DataProps",
        "STRUCTURED_DOCUMENT",
        "error_count",
        "MetricCounters",
        "EXTRACT_TO_XML_ERROR",
        "opt",
        "use_grobid",
        "GrobidXmlEnhancer",
        "opt",
        "grobid_url",
        "start_service",
        "opt",
        "start_grobid_service",
        "extracted_xml",
        "MapOrLog",
        "v",
        "extend_dict",
        "v",
        "DataProps",
        "EXTRACTED_XML",
        "enhancer",
        "v",
        "DataProps",
        "EXTRACTED_XML",
        "error_count",
        "MetricCounters",
        "GROBID_ERROR",
        "extracted_xml",
        "p",
        "opt",
        "source_url",
        "ext",
        "get_output_file",
        "source_url",
        "opt",
        "base_data_path",
        "opt",
        "output_path",
        "ext",
        "opt",
        "use_grobid",
        "opt",
        "crf_model",
        "opt",
        "cv_model_export_dir",
        "opt",
        "lxml_file_list",
        "add_read_pdfs_to_grobid_xml_pipeline_steps",
        "p",
        "opt",
        "add_read_source_to_extracted_xml_pipeline_steps",
        "p",
        "opt",
        "get_pipeline_output_file",
        "extracted_xml",
        "TransformAndLog",
        "beam",
        "v",
        "save_file_content",
        "get_pipeline_output_file",
        "v",
        "DataProps",
        "SOURCE_FILENAME",
        "opt",
        "output_suffix",
        "v",
        "DataProps",
        "EXTRACTED_XML",
        "log_fn",
        "x",
        "get_logger",
        "info",
        "x",
        "parser",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument_group",
        "source_group",
        "add_mutually_exclusive_group",
        "required",
        "source_one_of_group",
        "add_argument",
        "required",
        "help",
        "source_one_of_group",
        "add_argument",
        "required",
        "help",
        "source_group",
        "add_argument",
        "required",
        "help",
        "source_one_of_group",
        "add_argument",
        "required",
        "help",
        "source_group",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument_group",
        "output_group",
        "add_argument",
        "required",
        "help",
        "output_group",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument_group",
        "grobid_group",
        "add_argument",
        "action",
        "help",
        "grobid_group",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "required",
        "GrobidApiPaths",
        "PROCESS_HEADER_DOCUMENT",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "parse_page_range",
        "help",
        "parser",
        "add_argument_group",
        "crf_group",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument_group",
        "cv_group",
        "add_argument",
        "required",
        "help",
        "cv_group",
        "add_argument",
        "required",
        "help",
        "cv_group",
        "add_argument",
        "required",
        "help",
        "cv_group",
        "add_argument",
        "action",
        "help",
        "args",
        "parser",
        "args",
        "data_path",
        "replace",
        "args",
        "output_path",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "args",
        "base_data_path",
        "os",
        "path",
        "basename",
        "args",
        "base_data_path",
        "args",
        "lxml_file_list",
        "args",
        "crf_model",
        "parser",
        "error",
        "args",
        "cv_model_export_dir",
        "parser",
        "error",
        "args",
        "crf_model",
        "args",
        "cv_model_export_dir",
        "args",
        "use_grobid",
        "parser",
        "error",
        "args",
        "use_grobid",
        "args",
        "grobid_url",
        "argv",
        "argparse",
        "ArgumentParser",
        "add_main_args",
        "parser",
        "add_cloud_args",
        "parser",
        "parser",
        "parse_args",
        "argv",
        "args",
        "debug",
        "logging",
        "getLogger",
        "setLevel",
        "process_main_args",
        "args",
        "parser",
        "process_cloud_args",
        "args",
        "args",
        "output_path",
        "name",
        "process_sciencebeam_gym_dep_args",
        "args",
        "get_logger",
        "info",
        "args",
        "args",
        "argv",
        "parse_args",
        "argv",
        "PipelineOptions",
        "from_dictionary",
        "vars",
        "args",
        "pipeline_options",
        "view_as",
        "SetupOptions",
        "beam",
        "Pipeline",
        "args",
        "runner",
        "options",
        "pipeline_options",
        "p",
        "configure_pipeline",
        "p",
        "args",
        "logging",
        "basicConfig",
        "level",
        "run"
    ],
    "literals": [
        "'files'",
        "'read_lxml_error_count'",
        "'ConvertPdfToLxml_error_count'",
        "'ConvertPdfToPng_error_count'",
        "'ConvertPdfToSvgAnnot_error_count'",
        "'ComputerVisionPrediction_error_count'",
        "'AnnotateLxmlUsingPrediction_error_count'",
        "'ExtractToXml_error_count'",
        "'Grobid_error_count'",
        "'.crf.lxml.gz'",
        "'.crf-cv.lxml.gz'",
        "'.cv.lxml.gz'",
        "'.cv-png.zip'",
        "'source_filename'",
        "'pdf_content'",
        "'structured_document'",
        "'pdf_png_pages'",
        "'cv_prediction_png_pages'",
        "'color_map'",
        "'extracted_xml'",
        "'at least one of crf or cv need to be enabled'",
        "\"ReadPdfContent\"",
        "\"ConvertPdfToLxml\"",
        "'caught exception (ignoring item): %s, pdf: %s'",
        "\"ConvertPdfToPng\"",
        "\"ComputerVisionPrediction\"",
        "\"SaveComputerVisionOutput\"",
        "'.png'",
        "'saved cv output: %s'",
        "\"AnnotateLxmlUsingCvPrediction\"",
        "\"AnnotateLxmlUsingCrfPrediction\"",
        "\"SaveAnnotLxml\"",
        "'saved annoted lxml to: %s'",
        "\"Grobid\"",
        "\"ReadLxmlContent\"",
        "\"ExtractToXml\"",
        "\"GrobidEnhanceXml\"",
        "\"WriteXml\"",
        "'saved xml to: %s'",
        "'--data-path'",
        "'base data path'",
        "'source'",
        "'--pdf-path'",
        "'path to pdf file(s), relative to data-path'",
        "'--pdf-file-list'",
        "'path to pdf csv/tsv file list'",
        "'--pdf-file-column'",
        "'pdf_url'",
        "'the column of the pdf file list to use'",
        "'--lxml-file-list'",
        "'path to annotated lxml or svg pages zip file list'",
        "'; (CRF and CV models are not supported in this mode)'",
        "'--lxml-file-column'",
        "'url'",
        "'the column of the lxml file list to use'",
        "'--limit'",
        "'limit the number of file pairs to process'",
        "'output'",
        "'--output-path'",
        "'Output directory to write results to.'",
        "'--output-suffix'",
        "'.crf.xml'",
        "'Output file suffix to add to the filename (excluding the file extension).'",
        "'--save-annot-lxml'",
        "'store_true'",
        "'enable saving of annotated lxml'",
        "'Grobid'",
        "'--use-grobid'",
        "'store_true'",
        "'enable the use of grobid'",
        "'--grobid-url'",
        "'Base URL to the Grobid service'",
        "'--grobid-action'",
        "'Name of the Grobid action (if Grobid is used without CRF or CV model)'",
        "'--debug'",
        "'store_true'",
        "'enable debug output'",
        "'--pages'",
        "'only processes the selected pages'",
        "'CRF'",
        "'--crf-model'",
        "'path to saved crf model'",
        "'CV'",
        "'--cv-model-export-dir'",
        "'path to cv model export dir'",
        "'--image-width'",
        "'image width of resulting PNGs'",
        "'--image-height'",
        "'image height of resulting PNGs'",
        "'--save-cv-output'",
        "'store_true'",
        "'enable saving of computer vision output (png pages)'",
        "'/*/'",
        "'/'",
        "'-results'",
        "'--crf-model cannot be used in conjunction with --lxml-file-list'",
        "'--crf-model-export-dir cannot be used in conjunction with --lxml-file-list'",
        "'--crf-model, --cv-model-export-dir or --use-grobid required in conjunction'",
        "' with --pdf-file-list or --pdf-path'",
        "'http://localhost:8080/api'",
        "'DEBUG'",
        "'sciencebeam-convert'",
        "'args: %s'",
        "'__main__'",
        "'INFO'"
    ],
    "variables": [
        "FILES",
        "READ_LXML_ERROR",
        "CONVERT_PDF_TO_LXML_ERROR",
        "CONVERT_PDF_TO_PNG_ERROR",
        "CONVERT_LXML_TO_SVG_ANNOT_ERROR",
        "CV_PREDICTION_ERROR",
        "ANNOTATE_USING_PREDICTION_ERROR",
        "EXTRACT_TO_XML_ERROR",
        "GROBID_ERROR",
        "CRF_ANNOT_LXML",
        "CRF_CV_ANNOT_LXML",
        "CV_ANNOT_LXML",
        "CV_PNG",
        "SOURCE_FILENAME",
        "PDF_CONTENT",
        "STRUCTURED_DOCUMENT",
        "PDF_PNG_PAGES",
        "CV_PREDICTION_PNG_PAGES",
        "COLOR_MAP",
        "EXTRACTED_XML",
        "xml_root",
        "page_range",
        "cv_enabled",
        "extract_tag_scope",
        "pdf_urls",
        "lxml_content",
        "image_size",
        "inference_model_wrapper",
        "cv_predictions",
        "_",
        "cv_annotated_lxml",
        "lxml_content",
        "extract_tag_scope",
        "model",
        "crf_annotated_lxml",
        "lxml_content",
        "extract_tag_scope",
        "_",
        "grobid_transformer",
        "lxml_urls",
        "annotated_lxml",
        "extract_tag_scope",
        "annotated_lxml",
        "extract_tag_scope",
        "extracted_xml",
        "enhancer",
        "extracted_xml",
        "get_pipeline_output_file",
        "extracted_xml",
        "extracted_xml",
        "_",
        "source_group",
        "source_one_of_group",
        "output_group",
        "grobid_group",
        "crf_group",
        "cv_group",
        "args",
        "base_data_path",
        "args",
        "output_path",
        "args",
        "grobid_url",
        "args",
        "start_grobid_service",
        "args",
        "start_grobid_service",
        "parser",
        "args",
        "args",
        "pipeline_options",
        "save_main_session"
    ],
    "comments": [
        "only support saving lxml for now",
        "not used if the image is scaled",
        "We use the save_main_session option because one or more DoFn's in this",
        "workflow rely on global context (e.g., a module imported at module level).",
        "Execute the pipeline and wait until it is completed."
    ],
    "docstrings": [],
    "functions": [
        "get_logger",
        "convert_pdf_bytes_to_structured_document",
        "annotate_structured_document_using_predicted_image_data",
        "extract_annotated_structured_document_to_xml",
        "load_crf_model",
        "save_structured_document",
        "get_annot_lxml_ext",
        "PdfUrlSource",
        "ReadPdfContent",
        "add_read_pdfs_to_annotated_lxml_pipeline_steps",
        "add_read_pdfs_to_grobid_xml_pipeline_steps",
        "add_read_source_to_extracted_xml_pipeline_steps",
        "configure_pipeline",
        "add_main_args",
        "process_main_args",
        "parse_args",
        "run"
    ],
    "classes": [
        "MetricCounters",
        "OutputExt",
        "DataProps"
    ]
}