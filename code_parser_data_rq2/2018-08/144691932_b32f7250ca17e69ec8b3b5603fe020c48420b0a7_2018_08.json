{
    "identifiers": [
        "lesson_2",
        "javax",
        "swing",
        "java",
        "awt",
        "java",
        "awt",
        "ActionEvent",
        "java",
        "awt",
        "ActionListener",
        "java",
        "sql",
        "java",
        "util",
        "Scanner",
        "connection",
        "stmt",
        "pstmt",
        "args",
        "connect",
        "stmt",
        "executeUpdate",
        "stmt",
        "executeUpdate",
        "connection",
        "setAutoCommit",
        "pstmt",
        "connection",
        "prepareStatement",
        "i",
        "i",
        "i",
        "pstmt",
        "setString",
        "i",
        "pstmt",
        "setString",
        "i",
        "pstmt",
        "setInt",
        "i",
        "pstmt",
        "addBatch",
        "pstmt",
        "executeBatch",
        "connection",
        "setAutoCommit",
        "command",
        "input",
        "command",
        "equals",
        "command",
        "input",
        "nextLine",
        "command",
        "startsWith",
        "words",
        "command",
        "split",
        "search",
        "words",
        "command",
        "startsWith",
        "words",
        "command",
        "split",
        "change",
        "words",
        "parseInt",
        "words",
        "command",
        "startsWith",
        "words",
        "command",
        "split",
        "costDelta",
        "parseInt",
        "words",
        "parseInt",
        "words",
        "command",
        "equals",
        "e",
        "e",
        "printStackTrace",
        "e",
        "e",
        "printStackTrace",
        "disconnect",
        "e",
        "e",
        "printStackTrace",
        "prodid",
        "rs",
        "stmt",
        "executeQuery",
        "prodid",
        "rs",
        "isFirst",
        "rs",
        "next",
        "rs",
        "getString",
        "rs",
        "getString",
        "rs",
        "getInt",
        "prodid",
        "cost",
        "stmt",
        "executeUpdate",
        "cost",
        "prodid",
        "cost1",
        "cost2",
        "rs",
        "stmt",
        "executeQuery",
        "cost1",
        "cost2",
        "rs",
        "isFirst",
        "rs",
        "next",
        "rs",
        "getString",
        "rs",
        "getString",
        "rs",
        "getInt",
        "Class",
        "forName",
        "connection",
        "DriverManager",
        "getConnection",
        "stmt",
        "connection",
        "createStatement",
        "connection",
        "close"
    ],
    "literals": [
        "\"DROP TABLE IF EXISTS prodtable\"",
        "\"CREATE TABLE prodtable (\\n\"",
        "\"    id        INTEGER PRIMARY KEY AUTOINCREMENT,\\n\"",
        "\"    prodid      INTEGER,\\n\"",
        "\"    title      STRING,\\n\"",
        "\"    cost INTEGER UNSIGNED\\n\"",
        "\");\"",
        "\"INSERT INTO prodtable (prodid, title, cost) VALUES (?,?,?)\"",
        "\"id_товара \"",
        "\"товар\"",
        "\"\"",
        "\"quit\"",
        "\"Введите команду (quit для выхода): \"",
        "\"цена\"",
        "\" \"",
        "\"сменитьцену\"",
        "\" \"",
        "\"товарыпоцене\"",
        "\" \"",
        "\"quit\"",
        "\"Выход из программы\"",
        "\"команда не найдена\"",
        "\"SELECT * FROM prodtable WHERE title =\\'\"",
        "\"\\'\"",
        "\"Такого товара нет\"",
        "\" \"",
        "\" \"",
        "\"UPDATE prodtable SET cost = \\'\"",
        "\"\\' WHERE title=\\'\"",
        "\"\\'\"",
        "\"SELECT * FROM prodtable WHERE cost BETWEEN \\'\"",
        "\"\\' AND \\'\"",
        "\"\\'\"",
        "\"Такого товара нет\"",
        "\" \"",
        "\" \"",
        "\"org.sqlite.JDBC\"",
        "\"jdbc:sqlite:D:\\\\Dropbox\\\\GB\\\\java3.db\""
    ],
    "variables": [
        "connection",
        "stmt",
        "pstmt"
    ],
    "comments": [
        "Доп ДЗ",
        "SELECT name,max(timestamp) FROM dop_dz GROUP BY name;",
        "где dop_dz - имя таблицы, name - поле типа String, timestamp - поле типа DATE (даты в исходных данных необходимо привести к формату типа DATE)"
    ],
    "docstrings": [],
    "functions": [
        "main",
        "search",
        "change",
        "costDelta",
        "connect",
        "disconnect"
    ],
    "classes": [
        "lesson2"
    ]
}