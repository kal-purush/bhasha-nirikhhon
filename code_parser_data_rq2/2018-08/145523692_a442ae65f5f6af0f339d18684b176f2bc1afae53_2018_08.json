{
    "identifiers": [
        "$",
        "Drupal",
        "Drupal",
        "Drupal",
        "Drupal",
        "Drupal",
        "context",
        "settings",
        "settings",
        "$",
        "settings",
        "element_settings",
        "element_settings",
        "$",
        "element_settings",
        "element_settings",
        "Drupal",
        "Drupal",
        "element_settings",
        "$",
        "$",
        "element_settings",
        "$",
        "element_settings",
        "$",
        "element_settings",
        "$",
        "Drupal",
        "Drupal",
        "element_settings",
        "$",
        "element_settings",
        "$",
        "element_settings",
        "element_settings",
        "element_settings",
        "$",
        "Drupal",
        "Drupal",
        "element_settings",
        "Drupal",
        "element",
        "element_settings",
        "Drupal",
        "$",
        "defaults",
        "element_settings",
        "element",
        "element_settings",
        "element_settings",
        "Drupal",
        "element_settings",
        "Drupal",
        "element_settings",
        "$",
        "ajax",
        "ajax",
        "ajax",
        "element_settings",
        "options",
        "ajax",
        "element_settings",
        "options",
        "form_values",
        "element_settings",
        "options",
        "ajax",
        "ajax",
        "form_values",
        "element_settings",
        "options",
        "xmlhttprequest",
        "options",
        "ajax",
        "ajax",
        "xmlhttprequest",
        "options",
        "response",
        "status",
        "xmlhttprequest",
        "response",
        "response",
        "$",
        "response",
        "response",
        "Drupal",
        "ajax",
        "xmlhttprequest",
        "Drupal",
        "ajax",
        "xmlhttprequest",
        "ajax",
        "customMessage",
        "ajax",
        "response",
        "status",
        "xmlhttprequest",
        "status",
        "ajax",
        "status",
        "status",
        "ajax",
        "xmlhttprequest",
        "ajax",
        "$",
        "ajax",
        "element_settings",
        "Drupal",
        "ajax",
        "Drupal",
        "ajax",
        "Drupal",
        "ajax",
        "ajax",
        "element_settings",
        "$",
        "ajax",
        "ajax",
        "element_settings",
        "$",
        "ajax",
        "element_settings",
        "Drupal",
        "element",
        "element",
        "element",
        "$",
        "ajax",
        "ajax",
        "Drupal",
        "element",
        "ajax",
        "ajax",
        "ajax",
        "element",
        "element",
        "ajax",
        "ajax",
        "ajax",
        "ajax",
        "ajax",
        "$",
        "ajax",
        "e",
        "ajax",
        "alert",
        "ajax",
        "e",
        "element",
        "element",
        "element",
        "Drupal",
        "element",
        "options",
        "Drupal",
        "Drupal",
        "settings",
        "options",
        "$",
        "options",
        "options",
        "Drupal",
        "options",
        "Drupal",
        "key",
        "Drupal",
        "options",
        "key",
        "key",
        "Drupal",
        "options",
        "key",
        "Drupal",
        "form_values",
        "element",
        "options",
        "Drupal",
        "xmlhttprequest",
        "options",
        "options",
        "options",
        "options",
        "$",
        "v",
        "options",
        "Drupal",
        "v",
        "$",
        "Drupal",
        "eval",
        "eval",
        "progressBar",
        "progressBar",
        "$",
        "progressBar",
        "progressBar",
        "$",
        "$",
        "$",
        "$",
        "Drupal",
        "response",
        "status",
        "$",
        "$",
        "Drupal",
        "i",
        "response",
        "response",
        "i",
        "response",
        "i",
        "response",
        "i",
        "response",
        "i",
        "response",
        "i",
        "status",
        "Drupal",
        "Drupal",
        "settings",
        "Drupal",
        "Drupal",
        "response",
        "response",
        "response",
        "effect",
        "effect",
        "effect",
        "effect",
        "effect",
        "effect",
        "speed",
        "effect",
        "effect",
        "effect",
        "speed",
        "effect",
        "Drupal",
        "xmlhttprequest",
        "uri",
        "customMessage",
        "Drupal",
        "Drupal",
        "xmlhttprequest",
        "uri",
        "customMessage",
        "$",
        "$",
        "$",
        "Drupal",
        "Drupal",
        "settings",
        "Drupal",
        "ajax",
        "response",
        "status",
        "response",
        "$",
        "response",
        "$",
        "ajax",
        "response",
        "ajax",
        "ajax",
        "response",
        "$",
        "response",
        "new_content_wrapped",
        "new_content",
        "new_content",
        "new_content",
        "new_content_wrapped",
        "method",
        "response",
        "ajax",
        "Drupal",
        "Drupal",
        "wrapper",
        "settings",
        "wrapper",
        "method",
        "new_content",
        "effect",
        "new_content",
        "$",
        "new_content",
        "$",
        "new_content",
        "new_content",
        "$",
        "new_content",
        "effect",
        "effect",
        "effect",
        "new_content",
        "effect",
        "effect",
        "new_content",
        "response",
        "ajax",
        "Drupal",
        "Drupal",
        "new_content",
        "settings",
        "ajax",
        "response",
        "status",
        "response",
        "ajax",
        "Drupal",
        "Drupal",
        "$",
        "response",
        "settings",
        "$",
        "response",
        "ajax",
        "response",
        "status",
        "$",
        "response",
        "$",
        "response",
        "response",
        "$",
        "response",
        "response",
        "ajax",
        "response",
        "status",
        "alert",
        "response",
        "response",
        "ajax",
        "response",
        "status",
        "$",
        "response",
        "response",
        "ajax",
        "response",
        "status",
        "response",
        "$",
        "Drupal",
        "response",
        "ajax",
        "response",
        "ajax",
        "response",
        "status",
        "$",
        "response",
        "response",
        "response",
        "ajax",
        "response",
        "status",
        "$",
        "response",
        "$element",
        "response",
        "$element",
        "response",
        "ajax",
        "response",
        "status",
        "$",
        "$",
        "response",
        "ajax",
        "response",
        "status",
        "$",
        "response",
        "importMatch",
        "response",
        "importMatch",
        "match",
        "importMatch",
        "response",
        "match",
        "ajax",
        "response",
        "status",
        "$",
        "response",
        "response",
        "jQuery"
    ],
    "literals": [
        "'#'",
        "'.ajax-processed'",
        "'undefined'",
        "'#'",
        "'#'",
        "'ajax-processed'",
        "'.use-ajax:not(.ajax-processed)'",
        "'ajax-processed'",
        "'type'",
        "'throbber'",
        "'href'",
        "'href'",
        "'click'",
        "'id'",
        "'.use-ajax-submit:not(.ajax-processed)'",
        "'ajax-processed'",
        "'action'",
        "'click'",
        "'type'",
        "'throbber'",
        "'id'",
        "'system/ajax'",
        "'mousedown'",
        "'#'",
        "'none'",
        "'none'",
        "'replaceWith'",
        "'throbber'",
        "'Please wait...'",
        "'js'",
        "'/ajax$1'",
        "'#'",
        "'string'",
        "'X-Drupal-Ajax-Token'",
        "'1'",
        "\"The response failed verification so will not be processed.\"",
        "'error'",
        "'parsererror'",
        "'json'",
        "'POST'",
        "'The callback URL is not local and not trusted: !url'",
        "'!url'",
        "'text'",
        "'textarea'",
        "\"An error occurred while attempting to process \"",
        "\": \"",
        "'undefined'",
        "'checkbox'",
        "'radio'",
        "'serialize'",
        "'ajax_html_ids[]'",
        "'[id]'",
        "'ajax_html_ids[]'",
        "'ajax_page_state[theme]'",
        "'ajax_page_state[theme_token]'",
        "'ajax_page_state[css]['",
        "']'",
        "'ajax_page_state[js]['",
        "']'",
        "'1'",
        "'progress-disabled'",
        "'disabled'",
        "'bar'",
        "'ajax-progress-'",
        "'ajax-progress ajax-progress-bar'",
        "'throbber'",
        "'<div class=\"ajax-progress ajax-progress-throbber\"><div class=\"throbber\">&nbsp;</div></div>'",
        "'.throbber'",
        "'<div class=\"message\">'",
        "'</div>'",
        "'progress-disabled'",
        "'disabled'",
        "'command'",
        "'command'",
        "'command'",
        "'none'",
        "'show'",
        "'hide'",
        "''",
        "'fade'",
        "'fadeIn'",
        "'fadeOut'",
        "'Toggle'",
        "'Toggle'",
        "'progress-disabled'",
        "'disabled'",
        "'<div></div>'",
        "'html'",
        "'replaceWith'",
        "'replaceAll'",
        "'empty'",
        "'remove'",
        "'show'",
        "'.ajax-new-content'",
        "'.ajax-new-content'",
        "'.ajax-new-content'",
        "'show'",
        "'html'",
        "'ajax-changed'",
        "'ajax-changed'",
        "' <span class=\"ajax-changed\">*</span> '",
        "'> tbody > tr:visible, > tr:visible'",
        "'odd even'",
        "':even'",
        "'odd'",
        "':odd'",
        "'even'",
        "'head'",
        "'input[name=\"form_build_id\"][value=\"'",
        "'old'",
        "'\"]'",
        "'new'"
    ],
    "variables": [
        "element_settings",
        "element_settings",
        "element_settings",
        "defaults",
        "ajax",
        "customMessage",
        "ajax",
        "ajax",
        "settings",
        "v",
        "progressBar",
        "settings",
        "speed",
        "effect",
        "settings",
        "wrapper",
        "method",
        "effect",
        "new_content_wrapped",
        "new_content",
        "settings",
        "settings",
        "settings",
        "$element",
        "match",
        "importMatch"
    ],
    "comments": [
        "Load all Ajax behaviors specified in the settings.",
        "Bind Ajax behaviors to all items showing the class.",
        "Clicked links look better with the throbber than the progress bar.",
        "For anchor tags, these will go to the target of the anchor rather",
        "than the usual location.",
        "This class means to submit the form to the action using Ajax.",
        "Ajax submits specified in this manner automatically submit to the",
        "normal form action.",
        "Form submit button clicks need to tell the form what was clicked so",
        "it gets passed in the POST request.",
        "Form buttons use the 'click' event rather than mousedown.",
        "Clicked form buttons look better with the throbber than the progress bar.",
        "Replacing 'nojs' with 'ajax' in the URL allows for an easy method to let",
        "the server detect when it needs to degrade gracefully.",
        "There are five scenarios to check for:",
        "1. /nojs/",
        "2. /nojs$ - The end of a URL string.",
        "3. /nojs? - Followed by a query (with clean URLs enabled).",
        "E.g.: path/nojs?destination=foobar",
        "4. /nojs& - Followed by a query (without clean URLs enabled).",
        "E.g.: ?q=path/nojs&destination=foobar",
        "5. /nojs# - Followed by a fragment.",
        "E.g.: path/nojs#myfragment",
        "If the 'nojs' version of the URL is trusted, also trust the 'ajax' version.",
        "If there isn't a form, jQuery.ajax() will be used instead, allowing us to",
        "bind Ajax to links as well.",
        "Set the options for the ajaxSubmit function.",
        "The 'this' variable will not persist inside of the options object.",
        "Sanity check for browser support (object expected).",
        "When using iFrame uploads, responses must be returned as a string.",
        "Prior to invoking the response's commands, verify that they can be",
        "trusted by checking for a response header. See",
        "ajax_set_verification_header() for details.",
        "- Empty responses are harmless so can bypass verification. This avoids",
        "an alert message for server-generated no-op responses that skip Ajax",
        "rendering.",
        "- Ajax objects with trusted URLs (e.g., ones defined server-side via",
        "#ajax) can bypass header verification. This is especially useful for",
        "Ajax with multipart forms. Because IFRAME transport is used, the",
        "response headers cannot be accessed for verification.",
        "Bind the ajaxSubmit function to the element event.",
        "If necessary, enable keyboard submission so that Ajax behaviors",
        "can be triggered through keyboard input as well as e.g. a mousedown",
        "action.",
        "If necessary, prevent the browser default action of an additional event.",
        "For example, prevent the browser default action of a click, even if the",
        "AJAX behavior binds to mousedown.",
        "Create a synonym for this to reduce code confusion.",
        "Detect enter key and space bar and allow the standard response for them,",
        "except for form elements of type 'text' and 'textarea', where the",
        "spacebar activation causes inappropriate activation if #ajax['keypress'] is",
        "TRUE. On a text-type widget a space should always be a space.",
        "Create a synonym for this to reduce code confusion.",
        "Do not perform another ajax command if one is already in progress.",
        "If setClick is set, we must set this to ensure that the button's",
        "value is passed.",
        "Mark the clicked button. 'form.clk' is a special variable for",
        "ajaxSubmit that tells the system which element got clicked to",
        "trigger the submit. Without it there would be no 'op' or",
        "equivalent.",
        "Unset the ajax.ajaxing flag here because it won't be unset during",
        "the complete response.",
        "For radio/checkbox, allow the default event. On IE, this means letting",
        "it actually check the box.",
        "Allow detaching behaviors to update field values before collecting them.",
        "This is only needed when field values are added to the POST data, so only",
        "when there is a form such that this.form.ajaxSubmit() is used instead of",
        "$.ajax(). When there is no form and $.ajax() is used, beforeSerialize()",
        "isn't called, but don't rely on that: explicitly check this.form.",
        "Prevent duplicate HTML ids in the returned markup.",
        "@see drupal_html_id()",
        "Allow Drupal to return new JavaScript and CSS files to load without",
        "returning the ones already loaded.",
        "@see ajax_base_page_theme()",
        "@see drupal_get_css()",
        "@see drupal_get_js()",
        "This function is left empty to make it simple to override for modules",
        "that wish to add functionality here.",
        "For forms without file inputs, the jQuery Form plugin serializes the form",
        "values, and then calls jQuery's $.ajax() function, which invokes this",
        "handler. In this circumstance, options.extraData is never used. For forms",
        "with file inputs, the jQuery Form plugin uses the browser's normal form",
        "submission mechanism, but captures the response in a hidden IFRAME. In this",
        "circumstance, it calls this handler first, and then appends hidden fields",
        "to the form to submit the values in options.extraData. There is no simple",
        "way to know which submission mechanism will be used, so we add to extraData",
        "regardless, and allow it to be ignored in the former case.",
        "Let the server know when the IFRAME submission mechanism is used. The",
        "server can use this information to wrap the JSON response in a TEXTAREA,",
        "as per http://jquery.malsup.com/form/#file-upload.",
        "The triggering element is about to be disabled (see below), but if it",
        "contains a value (e.g., a checkbox, textfield, select, etc.), ensure that",
        "value is included in the submission. As per above, submissions that use",
        "$.ajax() are already serialized prior to the element being disabled, so",
        "this is only needed for IFRAME submissions.",
        "Disable the element that received the change to prevent user interface",
        "interaction while the Ajax request is in progress. ajax.ajaxing prevents",
        "the element from triggering a new request, but does not prevent the user",
        "from changing its value.",
        "Insert progressbar or throbber.",
        "Remove the progress element.",
        "Reattach behaviors, if they were detached in beforeSerialize(). The",
        "attachBehaviors() called on the new content from processing the response",
        "commands is not sufficient, because behaviors from the entire form need",
        "to be reattached.",
        "Remove any response-specific settings so they don't get used on the next",
        "call by mistake.",
        "Remove the progress element.",
        "Undo hide.",
        "Re-enable the element.",
        "Reattach behaviors, if they were detached in beforeSerialize().",
        "Get information from the response. If it is not there, default to",
        "our presets.",
        "We don't know what response.data contains: it might be a string of text",
        "without HTML, so don't rely on jQuery correctly iterpreting",
        "$(response.data) as new HTML rather than a CSS selector. Also, if",
        "response.data contains top-level text nodes, they get lost with either",
        "$(response.data) or $('<div></div>').replaceWith(response.data).",
        "For legacy reasons, the effects processing code assumes that new_content",
        "consists of a single top-level element. Also, it has not been",
        "sufficiently tested whether attachBehaviors() can be successfully called",
        "with a context object that includes top-level text nodes. However, to",
        "give developers full control of the HTML appearing in the page, and to",
        "enable Ajax content to be inserted in places where DIV elements are not",
        "allowed (e.g., within TABLE, TR, and SPAN parents), we check if the new",
        "content satisfies the requirement of a single top-level element, and",
        "only use the container DIV created above when it doesn't. For more",
        "information, please see http://drupal.org/node/736066.",
        "If removing content from the wrapper, detach behaviors first.",
        "Add the new content to the page.",
        "Immediately hide the new content if we're using any effects.",
        "Determine which effect to use and what content will receive the",
        "effect, then show the new content.",
        "Attach all JavaScript behaviors to the new content, if it was successfully",
        "added to the page, this if statement allows #ajax['wrapper'] to be",
        "optional.",
        "Apply any settings from the returned JSON if available.",
        ":even and :odd are reversed because jQuery counts from 0 and",
        "we count from 1, so we're out of sync.",
        "Match immediate children of the parent element to allow nesting.",
        "Add the styles in the normal way.",
        "Add imports in the styles using the addImport method if available."
    ],
    "docstrings": [
        "* Provides Ajax page updating via jQuery $.ajax (Asynchronous JavaScript and XML).\n *\n * Ajax is a method of making a request via JavaScript while viewing an HTML\n * page. The request returns an array of commands encoded in JSON, which is\n * then executed to make any changes that are necessary to the page.\n *\n * Drupal uses this file to enhance form elements with #ajax['path'] and\n * #ajax['wrapper'] properties. If set, this file will automatically be included\n * to provide Ajax capabilities.",
        "* Attaches the Ajax behavior to each Ajax form element.",
        "* Ajax object.\n *\n * All Ajax objects on a page are accessible through the global Drupal.ajax\n * object and are keyed by the submit button's ID. You can access them from\n * your module's JavaScript file to override properties or functions.\n *\n * For example, if your Ajax enabled button has the ID 'edit-submit', you can\n * redefine the function that is called to insert the new content like this\n * (inside a Drupal.behaviors attach block):\n * @code\n *    Drupal.behaviors.myCustomAJAXStuff = {\n *      attach: function (context, settings) {\n *        Drupal.ajax['edit-submit'].commands.insert = function (ajax, response, status) {\n *          new_content = $(response.data);\n *          $('#my-wrapper').append(new_content);\n *          alert('New content was appended to #my-wrapper');\n *        }\n *      }\n *    };\n * @endcode",
        "* Handle a key press.\n *\n * The Ajax object will, if instructed, bind to a key press response. This\n * will test to see if the key press is valid to trigger this event and\n * if it is, trigger it for us and prevent other keypresses from triggering.\n * In this case we're handling RETURN and SPACEBAR keypresses (event codes 13\n * and 32. RETURN is often used to submit a form when in a textfield, and \n * SPACE is often used to activate an element without submitting.",
        "* Handle an event that triggers an Ajax response.\n *\n * When an event that triggers an Ajax response happens, this method will\n * perform the actual Ajax call. It is bound to the event using\n * bind() in the constructor, and it uses the options specified on the\n * ajax object.",
        "* Handler for the form serialization.\n *\n * Runs before the beforeSend() handler (see below), and unlike that one, runs\n * before field data is collected.",
        "* Modify form values prior to form submission.",
        "* Prepare the Ajax request before it is sent.",
        "* Handler for the form redirection completion.",
        "* Build an effect object which tells us how to apply the effect when adding new HTML.",
        "* Handler for the form redirection error.",
        "* Provide a series of commands that the server can request the client perform.",
        "* Command to insert new content into the DOM.",
        "* Command to remove a chunk from the page.",
        "* Command to mark a chunk changed.",
        "* Command to provide an alert.",
        "* Command to provide the jQuery css() function.",
        "* Command to set the settings that will be used for other commands in this response.",
        "* Command to attach data using jQuery's data API.",
        "* Command to apply a jQuery method.",
        "* Command to restripe a table.",
        "* Command to add css.\n   *\n   * Uses the proprietary addImport method if available as browsers which\n   * support that method ignore @import statements in dynamically added\n   * stylesheets.",
        "* Command to update a form's build ID."
    ],
    "functions": [],
    "classes": []
}