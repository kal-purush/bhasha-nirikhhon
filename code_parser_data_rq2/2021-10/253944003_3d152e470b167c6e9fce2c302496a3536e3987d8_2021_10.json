{
    "identifiers": [
        "IO",
        "Threading",
        "Threading",
        "Tasks",
        "Microsoft",
        "IdentityModel",
        "TestUtils",
        "Xunit",
        "Microsoft",
        "IdentityModel",
        "Json",
        "CS3016",
        "Microsoft",
        "IdentityModel",
        "Protocols",
        "Tests",
        "IConfigurationRetriever",
        "IssuerMetadata",
        "IssuerMetadata",
        "address",
        "IDocumentRetriever",
        "retriever",
        "CancellationToken",
        "cancel",
        "retriever",
        "GetDocumentAsync",
        "address",
        "cancel",
        "ConfigureAwait",
        "JsonConvert",
        "DeserializeObject",
        "IssuerMetadata",
        "doc",
        "issuerMetadata",
        "Theory",
        "MemberData",
        "nameof",
        "GetMetadataTheoryData",
        "DocumentRetrieverTheoryData",
        "theoryData",
        "TestUtilities",
        "WriteHeader",
        "theoryData",
        "theoryData",
        "DocumentRetriever",
        "GetDocumentAsync",
        "theoryData",
        "Address",
        "CancellationToken",
        "Result",
        "Assert",
        "NotNull",
        "doc",
        "theoryData",
        "ExpectedException",
        "ProcessNoException",
        "AggregateException",
        "aex",
        "aex",
        "Handle",
        "x",
        "theoryData",
        "ExpectedException",
        "ProcessException",
        "x",
        "Fact",
        "FileDocumentRetriever",
        "ConfigurationManager",
        "IssuerMetadata",
        "IssuerConfigurationRetriever",
        "docRetriever",
        "CompareContext",
        "configManager",
        "GetConfigurationAsync",
        "Result",
        "configManager",
        "MetadataAddress",
        "configManager",
        "GetConfigurationAsync",
        "Result",
        "IdentityComparer",
        "AreEqual",
        "configuration",
        "Issuer",
        "configuration2",
        "Issuer",
        "context",
        "Diffs",
        "Add",
        "configManager",
        "ConfigurationManager",
        "IssuerMetadata",
        "IssuerConfigurationRetriever",
        "docRetriever",
        "configManager",
        "RequestRefresh",
        "configuration",
        "configManager",
        "GetConfigurationAsync",
        "Result",
        "TestUtilities",
        "SetField",
        "configManager",
        "DateTimeOffset",
        "UtcNow",
        "TimeSpan",
        "FromHours",
        "configManager",
        "MetadataAddress",
        "configManager",
        "RequestRefresh",
        "configuration2",
        "configManager",
        "GetConfigurationAsync",
        "Result",
        "IdentityComparer",
        "AreEqual",
        "configuration",
        "Issuer",
        "configuration2",
        "Issuer",
        "context",
        "Diffs",
        "Add",
        "TestUtilities",
        "AssertFailIfErrors",
        "context",
        "TheoryData",
        "DocumentRetrieverTheoryData",
        "TheoryData",
        "DocumentRetrieverTheoryData",
        "FileDocumentRetriever",
        "theoryData",
        "Add",
        "DocumentRetrieverTheoryData",
        "Address",
        "DocumentRetriever",
        "documentRetriever",
        "ExpectedException",
        "ExpectedException",
        "ArgumentNullException",
        "First",
        "TestId",
        "theoryData",
        "Add",
        "DocumentRetrieverTheoryData",
        "Address",
        "DocumentRetriever",
        "documentRetriever",
        "ExpectedException",
        "ExpectedException",
        "FileNotFoundException",
        "TestId",
        "theoryData",
        "Add",
        "DocumentRetrieverTheoryData",
        "Address",
        "DocumentRetriever",
        "documentRetriever",
        "TestId",
        "theoryData",
        "CS3016"
    ],
    "literals": [
        "\"IssuerMetadata.json\"",
        "\"IssuerMetadata.json\"",
        "\"!IdentityComparer.AreEqual(configuration, configuration2)\"",
        "\"IssuerMetadata.json\"",
        "\"_lastRefresh\"",
        "\"IssuerMetadata2.json\"",
        "\"IdentityComparer.AreEqual(configuration, configuration2)\"",
        "\"Address NULL\"",
        "\"OpenIdConnectMetadata.json\"",
        "\"IDX20804:\"",
        "\"IDX20814:\"",
        "\"File not found: OpenIdConnectMetadata.json\"",
        "\"ValidJson.json\"",
        "\"ValidJson.json - JsonWebKeySet\""
    ],
    "variables": [
        "doc",
        "IssuerMetadata",
        "issuerMetadata",
        "Issuer",
        "doc",
        "docRetriever",
        "configManager",
        "context",
        "configuration",
        "configuration2",
        "GetMetadataTheoryData",
        "theoryData",
        "documentRetriever"
    ],
    "comments": [
        "------------------------------------------------------------------------------",
        "",
        "Copyright (c) Microsoft Corporation.",
        "All rights reserved.",
        "",
        "This code is licensed under the MIT License.",
        "",
        "Permission is hereby granted, free of charge, to any person obtaining a copy",
        "of this software and associated documentation files(the \"Software\"), to deal",
        "in the Software without restriction, including without limitation the rights",
        "to use, copy, modify, merge, publish, distribute, sublicense, and / or sell",
        "copies of the Software, and to permit persons to whom the Software is",
        "furnished to do so, subject to the following conditions :",
        "",
        "The above copyright notice and this permission notice shall be included in",
        "all copies or substantial portions of the Software.",
        "",
        "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",
        "IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",
        "FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE",
        "AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",
        "LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",
        "OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN",
        "THE SOFTWARE.",
        "",
        "------------------------------------------------------------------------------",
        "Arrays as attribute arguments is not CLS-compliant",
        "An implementation of IConfigurationRetriever geared towards Azure AD issuers metadata.",
        "</summary>",
        "<param name=\"address\">Address of the discovery document.</param>",
        "<param name=\"retriever\">The <see cref=\"T:Microsoft.IdentityModel.Protocols.IDocumentRetriever\"/> to use to read the discovery document.</param>",
        "<param name=\"cancel\">A cancellation token that can be used by other objects or threads to receive notice of cancellation. <see cref=\"T:System.Threading.CancellationToken\"/>.</param>",
        "<returns>",
        "A <see cref=\"Task{IssuerMetadata}\"/> that, when completed, returns <see cref=\"IssuerMetadata\"/> from the configuration.",
        "</returns>",
        "<exception cref=\"ArgumentNullException\">address - Azure AD Issuer metadata address URL is required",
        "or retriever - No metadata document retriever is provided.</exception>",
        "Model class to hold information parsed from the Azure AD issuer endpoint.",
        "</summary>",
        "Issuer associated with the OIDC endpoint.",
        "</summary>",
        "AutomaticRefreshInterval should pick up new bits.",
        "Arrays as attribute arguments is not CLS-compliant"
    ],
    "docstrings": [
        "<summary>",
        "<summary>Retrieves a populated configuration given an address and an <see cref=\"T:Microsoft.IdentityModel.Protocols.IDocumentRetriever\"/>.</summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "GetConfigurationAsync",
        "GetMetadataTest",
        "ConfigurationManagerUsingCustomClass"
    ],
    "classes": [
        "IssuerConfigurationRetriever",
        "IssuerMetadata",
        "ExtensibilityTests"
    ]
}