{
    "identifiers": [
        "Periode",
        "initializeDate",
        "sortPeriodsByFomDate",
        "period1",
        "period2",
        "period1",
        "period2",
        "period2",
        "period1",
        "isDateSameOrBefore",
        "date",
        "otherDate",
        "initializeDate",
        "date",
        "dateFormats",
        "initializeDate",
        "otherDate",
        "dateFormats",
        "dateInQuestion",
        "formattedOtherDate",
        "dateInQuestion",
        "formattedOtherDate",
        "checkIfPeriodsAreEdgeToEdge",
        "period",
        "otherPeriod",
        "initializeDate",
        "period",
        "initializeDate",
        "otherPeriod",
        "dayAfterPeriod",
        "startOfNextPeriod",
        "slåSammenSammenhengendePerioder",
        "periods",
        "periods",
        "periods",
        "periods",
        "p1",
        "p2",
        "sortPeriodsByFomDate",
        "p1",
        "p2",
        "getFirstDate",
        "date1",
        "date2",
        "isDateSameOrBefore",
        "date1",
        "date2",
        "date1",
        "date2",
        "getLastDate",
        "date1",
        "date2",
        "isDateSameOrBefore",
        "date1",
        "date2",
        "date2",
        "date1",
        "checkIfPeriodCanBeCombinedWithPreviousPeriod",
        "period",
        "previousPeriod",
        "previousPeriod",
        "previousPeriod",
        "period",
        "checkIfPeriodsAreEdgeToEdge",
        "previousPeriod",
        "period",
        "hasOverlapWithPreviousPeriod",
        "periodsAreEdgeToEdge",
        "combinePeriods",
        "period",
        "otherPeriod",
        "getFirstDate",
        "period",
        "otherPeriod",
        "getLastDate",
        "period",
        "otherPeriod",
        "Periode",
        "firstFom",
        "lastTom",
        "combinedPeriod",
        "addToListIfNotAdded",
        "period",
        "combinedPeriods",
        "combinedPeriods",
        "checkIfPeriodCanBeCombinedWithPreviousPeriod",
        "period",
        "previousPeriod",
        "canBeCombinedWithPreviousPeriod",
        "combinePeriods",
        "period",
        "previousPeriod",
        "combinedPeriods",
        "combinedPeriods",
        "combinedPeriod",
        "combinedPeriods",
        "period",
        "sortedPeriods",
        "period",
        "index",
        "array",
        "skipNextPeriod",
        "array",
        "index",
        "nextPeriod",
        "nextPeriod",
        "period",
        "checkIfPeriodsAreEdgeToEdge",
        "period",
        "nextPeriod",
        "hasOverlapWithNextPeriod",
        "periodsAreEdgeToEdge",
        "combinePeriods",
        "period",
        "nextPeriod",
        "combinedPeriods",
        "combinedPeriod",
        "skipNextPeriod",
        "addToListIfNotAdded",
        "period",
        "addToListIfNotAdded",
        "period",
        "skipNextPeriod",
        "combinedPeriods"
    ],
    "literals": [
        "'../models/types/Periode'",
        "'./timeUtils'",
        "string",
        "string",
        "'YYYY-MM-DD'",
        "'DD.MM.YYYY'",
        "'day'",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [
        "sortPeriodsByFomDate",
        "isDateSameOrBefore",
        "dateFormats",
        "dateInQuestion",
        "formattedOtherDate",
        "checkIfPeriodsAreEdgeToEdge",
        "dayAfterPeriod",
        "startOfNextPeriod",
        "slåSammenSammenhengendePerioder",
        "sortedPeriods",
        "combinedPeriods",
        "getFirstDate",
        "getLastDate",
        "checkIfPeriodCanBeCombinedWithPreviousPeriod",
        "hasOverlapWithPreviousPeriod",
        "periodsAreEdgeToEdge",
        "combinePeriods",
        "firstFom",
        "lastTom",
        "combinedPeriod",
        "addToListIfNotAdded",
        "previousPeriod",
        "canBeCombinedWithPreviousPeriod",
        "combinedPeriod",
        "skipNextPeriod",
        "nextPeriod",
        "hasOverlapWithNextPeriod",
        "periodsAreEdgeToEdge",
        "combinedPeriod"
    ],
    "comments": [
        "eslint-disable import/prefer-default-export"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}