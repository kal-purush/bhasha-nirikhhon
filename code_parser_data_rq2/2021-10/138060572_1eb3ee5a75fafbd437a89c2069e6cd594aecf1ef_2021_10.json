{
    "identifiers": [
        "Agent",
        "sinon",
        "coreReq",
        "request",
        "store",
        "dbtypes",
        "numbers",
        "deployment",
        "requestPromise",
        "describe",
        "sinon",
        "sinon",
        "sinon",
        "before",
        "postStub",
        "sinon",
        "request",
        "postStub",
        "sinon",
        "sinon",
        "mockNumbers",
        "postStub",
        "sinon",
        "sinon",
        "mockNumbers",
        "deleteStub",
        "sinon",
        "request",
        "mockNumbers",
        "store",
        "beforeEach",
        "postStub",
        "after",
        "store",
        "USERID",
        "CLASSID",
        "store",
        "postStub",
        "deleteStub",
        "describe",
        "it",
        "dbtypes",
        "store",
        "USERID",
        "CLASSID",
        "fields",
        "store",
        "USERID",
        "CLASSID",
        "project",
        "store",
        "USERID",
        "CLASSID",
        "project",
        "project",
        "numbers",
        "USERID",
        "CLASSID",
        "project",
        "err",
        "err",
        "err",
        "err",
        "store",
        "USERID",
        "CLASSID",
        "project",
        "describe",
        "it",
        "dbtypes",
        "store",
        "USERID",
        "CLASSID",
        "fields",
        "store",
        "USERID",
        "CLASSID",
        "project",
        "store",
        "USERID",
        "CLASSID",
        "project",
        "project",
        "store",
        "project",
        "numbers",
        "project",
        "classifier",
        "project",
        "classifier",
        "classifier",
        "store",
        "USERID",
        "project",
        "CLASSID",
        "keys",
        "store",
        "USERID",
        "CLASSID",
        "project",
        "deleteStub",
        "sinon",
        "process",
        "process",
        "CLASSID",
        "USERID",
        "project",
        "fakeAgent",
        "keys",
        "store",
        "USERID",
        "project",
        "CLASSID",
        "keys",
        "it",
        "dbtypes",
        "store",
        "USERID",
        "CLASSID",
        "fields",
        "goodProject",
        "project",
        "store",
        "USERID",
        "CLASSID",
        "project",
        "store",
        "USERID",
        "CLASSID",
        "project",
        "project",
        "store",
        "project",
        "numbers",
        "project",
        "classifier",
        "goodProject",
        "missingProject",
        "project",
        "classifierTimestamp",
        "numbers",
        "USERID",
        "CLASSID",
        "classifierTimestamp",
        "project",
        "classifications",
        "store",
        "USERID",
        "CLASSID",
        "project",
        "it",
        "dbtypes",
        "store",
        "USERID",
        "CLASSID",
        "fields",
        "goodProject",
        "project",
        "store",
        "USERID",
        "CLASSID",
        "project",
        "store",
        "USERID",
        "CLASSID",
        "project",
        "project",
        "store",
        "project",
        "store",
        "goodProject",
        "fetched",
        "numbers",
        "fetched",
        "classifier",
        "project",
        "classifier",
        "classifier",
        "sortFn",
        "item1",
        "item2",
        "item1",
        "item2",
        "label1",
        "label2",
        "label1",
        "label2",
        "item1",
        "item2",
        "data1",
        "data2",
        "data1",
        "data2",
        "data1",
        "data2",
        "data1",
        "data2",
        "data1",
        "data2",
        "data1",
        "data2",
        "sinon",
        "call",
        "call",
        "call",
        "sortFn",
        "call",
        "call",
        "call",
        "process",
        "process",
        "CLASSID",
        "USERID",
        "project",
        "sortFn",
        "err",
        "postStub",
        "sinon",
        "expectedCall",
        "store",
        "USERID",
        "project",
        "CLASSID",
        "keys",
        "keys",
        "project",
        "keys",
        "project",
        "keys",
        "keys",
        "credentials",
        "credentials",
        "credentials",
        "credentials",
        "USERID",
        "credentials",
        "CLASSID",
        "classifierTimestamp",
        "numbers",
        "USERID",
        "CLASSID",
        "classifierTimestamp",
        "project",
        "classifications",
        "postStub",
        "sinon",
        "process",
        "process",
        "CLASSID",
        "USERID",
        "project",
        "fakeAgent",
        "store",
        "USERID",
        "CLASSID",
        "project",
        "deleteStub",
        "sinon",
        "process",
        "process",
        "CLASSID",
        "USERID",
        "project",
        "fakeAgent",
        "keys",
        "store",
        "USERID",
        "project",
        "CLASSID",
        "keys",
        "url",
        "opts",
        "numbers",
        "opts",
        "goodProject",
        "opts",
        "url",
        "opts",
        "numbers",
        "url",
        "opts",
        "opts",
        "deployment",
        "opts",
        "opts",
        "opts",
        "opts",
        "opts",
        "opts",
        "opts",
        "opts",
        "goodProject",
        "opts",
        "missingProject",
        "goodProject",
        "opts",
        "url",
        "options",
        "coreReq",
        "options",
        "numbers",
        "unk",
        "numbers",
        "url",
        "opts",
        "opts",
        "deployment",
        "opts",
        "opts",
        "opts",
        "opts",
        "opts",
        "opts",
        "prom",
        "requestPromise"
    ],
    "literals": [
        "'assert'",
        "'http'",
        "'sinon'",
        "'request'",
        "'request-promise'",
        "'../../lib/db/store'",
        "'../../lib/db/db-types'",
        "'../../lib/training/numbers'",
        "'../../lib/utils/deployment'",
        "'request-promise'",
        "'Training - numbers service (mocked)'",
        "'TESTUSER'",
        "'TESTTENANT'",
        "string",
        "string",
        "'post'",
        "'delete'",
        "'test classifier'",
        "'should check the range of numbers for the numbers service'",
        "'cats'",
        "'number'",
        "'dogs'",
        "'number'",
        "'fraction'",
        "'number'",
        "'numbers'",
        "'good project'",
        "'en'",
        "'likes_animals'",
        "'hates_animals'",
        "'likes_animals'",
        "'hates_animals'",
        "'should not have allowed this'",
        "'Value ('",
        "') is too big'",
        "'create classifier'",
        "'should handle training failures'",
        "'cats'",
        "'number'",
        "'dogs'",
        "'number'",
        "'fraction'",
        "'number'",
        "'numbers'",
        "'good project'",
        "'en'",
        "'likes_animals'",
        "'hates_animals'",
        "'likes_animals'",
        "'hates_animals'",
        "'likes_animals'",
        "'likes_animals'",
        "'likes_animals'",
        "'hates_animals'",
        "'hates_animals'",
        "'hates_animals'",
        "'Failed'",
        "'should handle test failures due to missing training'",
        "'cats'",
        "'number'",
        "'dogs'",
        "'number'",
        "'fraction'",
        "'number'",
        "'numbers'",
        "'good project'",
        "'en'",
        "'likes_animals'",
        "'hates_animals'",
        "'likes_animals'",
        "'hates_animals'",
        "'likes_animals'",
        "'hates_animals'",
        "'Available'",
        "'CLEARED'",
        "'label_name_2'",
        "'label_name_1'",
        "'label_name_4'",
        "'label_name_3'",
        "'should manage number classifiers'",
        "'cats'",
        "'number'",
        "'dogs'",
        "'number'",
        "'fraction'",
        "'number'",
        "'numbers'",
        "'good project'",
        "'en'",
        "'likes_animals'",
        "'hates_animals'",
        "'likes_animals'",
        "'hates_animals'",
        "'likes_animals'",
        "'likes_animals'",
        "'likes_animals'",
        "'likes_animals'",
        "'likes_animals'",
        "'likes_animals'",
        "'hates_animals'",
        "'hates_animals'",
        "'hates_animals'",
        "'hates_animals'",
        "'hates_animals'",
        "'hates_animals'",
        "'ignored'",
        "''",
        "'Available'",
        "'hates_animals'",
        "'hates_animals'",
        "'hates_animals'",
        "'hates_animals'",
        "'hates_animals'",
        "'hates_animals'",
        "'likes_animals'",
        "'likes_animals'",
        "'likes_animals'",
        "'likes_animals'",
        "'likes_animals'",
        "'likes_animals'",
        "'numbers'",
        "'num'",
        "'label_name_2'",
        "'label_name_1'",
        "'label_name_4'",
        "'label_name_3'",
        "string",
        "'Bad things'",
        "string",
        "'Bad things'",
        "string"
    ],
    "variables": [
        "USERID",
        "CLASSID",
        "postStub",
        "deleteStub",
        "goodProject",
        "missingProject",
        "fakeAgent",
        "fields",
        "project",
        "fields",
        "project",
        "classifier",
        "keys",
        "fields",
        "project",
        "classifier",
        "classifierTimestamp",
        "classifications",
        "fields",
        "project",
        "fetched",
        "classifier",
        "sortFn",
        "label1",
        "label2",
        "data1",
        "data2",
        "expectedCall",
        "keys",
        "credentials",
        "classifierTimestamp",
        "classifications",
        "mockNumbers",
        "unk",
        "opts",
        "prom"
    ],
    "comments": [
        "eslint-env mocha",
        "@ts-ignore",
        "TODO this is ridiculous... do I really have to fight with TypeScript like this?"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}