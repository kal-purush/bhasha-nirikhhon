{
    "identifiers": [
        "framesForTab_",
        "get_cOptions",
        "cPort",
        "cRepeat",
        "set_cPort",
        "cKey",
        "curTabId_",
        "keyToCommandMap_",
        "get_cEnv",
        "set_cEnv",
        "set_cKey",
        "set_cOptions",
        "set_runOneMapping_",
        "BgUtils_",
        "runtimeError_",
        "getCurWnd",
        "getPortUrl_",
        "safePost",
        "showHUD",
        "createSimpleUrlMatcher_",
        "matchSimply_",
        "trans_",
        "normalizedOptions_",
        "envRegistry_",
        "parseOptions_",
        "normalizeCommand_",
        "availableCommands_",
        "makeCommand_",
        "copyCmdOptions",
        "executeCommand",
        "overrideOption",
        "parseFallbackOptions",
        "replaceCmdOptions",
        "runNextCmdBy",
        "C",
        "kBgCmd",
        "NormalizedEnvCond",
        "CommandsNS",
        "kStr",
        "collectOptions",
        "opts",
        "key",
        "CommandsNS",
        "BgUtils_",
        "key",
        "opts",
        "key",
        "key",
        "key",
        "o2",
        "found",
        "key",
        "opts",
        "key",
        "found",
        "o2",
        "EnvMatchResult",
        "matchEnvRule",
        "rule",
        "CommandsNS",
        "info",
        "rule",
        "rule",
        "rule",
        "rule",
        "host",
        "host",
        "rule",
        "rule",
        "rule",
        "rule",
        "host",
        "host",
        "rule",
        "createSimpleUrlMatcher_",
        "host",
        "host",
        "info",
        "url",
        "host",
        "kMatchUrl",
        "slash",
        "host",
        "host",
        "host",
        "slash",
        "framesForTab_",
        "cPort",
        "cPort",
        "curTabId_",
        "cPort",
        "url",
        "port",
        "port",
        "url",
        "url",
        "getPortUrl_",
        "url",
        "s",
        "info",
        "s",
        "cPort",
        "framesForTab_",
        "cPort",
        "cPort",
        "runKeyWithCond",
        "info",
        "EnvMatchResult",
        "matchSimply_",
        "host",
        "url",
        "EnvMatchResult",
        "iframe",
        "cPort",
        "iframe",
        "EnvMatchResult",
        "iframe",
        "iframe",
        "rule",
        "createSimpleUrlMatcher_",
        "iframe",
        "iframe",
        "iframe",
        "cPort",
        "cPort",
        "EnvMatchResult",
        "matchSimply_",
        "iframe",
        "cPort",
        "EnvMatchResult",
        "fullscreen",
        "info",
        "getCurWnd",
        "wnd",
        "info",
        "wnd",
        "wnd",
        "runKeyWithCond",
        "info",
        "runtimeError_",
        "EnvMatchResult",
        "fullscreen",
        "info",
        "EnvMatchResult",
        "elSelector",
        "elSelector",
        "elSelector",
        "elSelector",
        "elSelector",
        "rule",
        "elSelector",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "selectorArr",
        "s",
        "hash",
        "dot",
        "len",
        "dot",
        "dot",
        "hash",
        "dot",
        "hash",
        "hash",
        "s",
        "hash",
        "dot",
        "hash",
        "dot",
        "len",
        "BgUtils_",
        "dot",
        "s",
        "dot",
        "hash",
        "dot",
        "hash",
        "len",
        "s",
        "s",
        "selectorArr",
        "selectorArr",
        "info",
        "selectorArr",
        "cur",
        "cPort",
        "safePost",
        "cPort",
        "kBgReq",
        "performance",
        "info",
        "cPort",
        "EnvMatchResult",
        "EnvMatchResult",
        "selectorArr",
        "s",
        "cur",
        "s",
        "s",
        "s",
        "s",
        "cur",
        "s",
        "s",
        "cur",
        "s",
        "s",
        "cur",
        "s",
        "i",
        "cur",
        "i",
        "EnvMatchResult",
        "EnvMatchResult",
        "normalizeExpects",
        "options",
        "C",
        "options",
        "options",
        "expected_rules",
        "normalizeKeys",
        "keys",
        "keys",
        "keys",
        "keys",
        "keys",
        "keys",
        "expected_rules",
        "expected_rules",
        "new_rules",
        "expected_rules",
        "rule",
        "rule",
        "rule",
        "normalizeKeys",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "normalizeKeys",
        "rule",
        "rule",
        "expected_rules",
        "new_rules",
        "expected_rules",
        "name",
        "expected_rules",
        "name",
        "val",
        "val",
        "val",
        "name",
        "normalizeKeys",
        "isDict",
        "val",
        "val",
        "isDict",
        "val",
        "expected_rules",
        "expected_rules",
        "expected_rules",
        "new_rules",
        "expected_rules",
        "expected_rules",
        "i",
        "i",
        "delimiterRe",
        "rule",
        "rule",
        "rule",
        "normalizeKeys",
        "rule",
        "new_rules",
        "new_rules",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "overrideOption",
        "C",
        "new_rules",
        "options",
        "overrideOption",
        "C",
        "normalizeKeys",
        "options",
        "options",
        "overrideOption",
        "C",
        "options",
        "new_rules",
        "runKeyWithCond",
        "info",
        "abs",
        "cRepeat",
        "framesForTab_",
        "cPort",
        "cPort",
        "curTabId_",
        "cPort",
        "set_cPort",
        "frames",
        "frames",
        "info",
        "info",
        "get_cEnv",
        "set_cEnv",
        "normalizeExpects",
        "get_cOptions",
        "C",
        "normalizedRule",
        "expected_rules",
        "normalizedRule",
        "normalizedRule",
        "CommandsNS",
        "rule",
        "envRegistry_",
        "showHUD",
        "rule",
        "envRegistry_",
        "rule",
        "rule",
        "showHUD",
        "ruleName",
        "rule",
        "rule",
        "parseOptions_",
        "rule",
        "CommandsNS",
        "envRegistry_",
        "ruleName",
        "rule",
        "rule",
        "matchEnvRule",
        "rule",
        "info",
        "res",
        "EnvMatchResult",
        "res",
        "EnvMatchResult",
        "matched",
        "normalizedRule",
        "CommandsNS",
        "matched",
        "matched",
        "get_cOptions",
        "C",
        "matched",
        "matched",
        "matched",
        "expected_rules",
        "matched",
        "keys",
        "showHUD",
        "sub_name",
        "absCRepeat",
        "keys",
        "keys",
        "showHUD",
        "sub_name",
        "seq",
        "keys",
        "keysInd",
        "keys",
        "cRepeat",
        "absCRepeat",
        "keys",
        "absCRepeat",
        "seq",
        "seq",
        "seq",
        "seq",
        "seq",
        "seq",
        "showHUD",
        "sub_name",
        "keys",
        "cRepeat",
        "matched",
        "matched",
        "get_cOptions",
        "C",
        "collectOptions",
        "get_cOptions",
        "C",
        "CommandsNS",
        "seq",
        "seq",
        "seq",
        "options2",
        "optionsPrefix",
        "parseEmbeddedOptions",
        "optionsPrefix",
        "key",
        "parseKeySeq",
        "seq",
        "optionsPrefix",
        "optionsPrefix",
        "seq",
        "keys",
        "keysInd",
        "key",
        "options2",
        "key",
        "seq",
        "options2",
        "seq",
        "options",
        "options2",
        "options",
        "options",
        "options2",
        "copyCmdOptions",
        "copyCmdOptions",
        "BgUtils_",
        "options2",
        "options",
        "CommandsNS",
        "key",
        "kN",
        "showHUD",
        "key",
        "As_",
        "key",
        "loopIdToRunSeq",
        "loopIdToRunSeq",
        "kStr",
        "newIntId",
        "key",
        "key",
        "kN",
        "C",
        "key",
        "key",
        "seqId",
        "parseFallbackOptions",
        "get_cOptions",
        "C",
        "seqId",
        "seqId",
        "replaceCmdOptions",
        "fakeOptions",
        "keyToCommandMap_",
        "seqId",
        "makeCommand_",
        "fakeOptions",
        "CommandsNS",
        "runKeyInSeq",
        "fakeOptions",
        "info",
        "runOneKey",
        "key",
        "key",
        "key",
        "seqId",
        "info",
        "kN",
        "CommandsNS",
        "kN",
        "kN",
        "kN",
        "kN",
        "parseKeySeq",
        "keys",
        "kN",
        "keys",
        "keys",
        "i",
        "keys",
        "i",
        "keys",
        "i",
        "last",
        "cur",
        "cur",
        "kN",
        "cur",
        "last",
        "cur",
        "last",
        "cur",
        "last",
        "last",
        "last",
        "kN",
        "cur",
        "last",
        "last",
        "keys",
        "i",
        "cur",
        "last",
        "last",
        "kN",
        "last",
        "last",
        "last",
        "last",
        "last",
        "cur",
        "cur",
        "kN",
        "cur",
        "last",
        "root",
        "kN",
        "last",
        "root",
        "cur",
        "last",
        "kN",
        "last",
        "last",
        "cur",
        "cur",
        "last",
        "cur",
        "last",
        "cur",
        "last",
        "cur",
        "last",
        "cur",
        "cur",
        "kN",
        "last",
        "keys",
        "i",
        "last",
        "cur",
        "last",
        "cur",
        "i",
        "keys",
        "keys",
        "i",
        "re",
        "keys",
        "i",
        "arr",
        "keys",
        "i",
        "kN",
        "err",
        "err",
        "err",
        "arr",
        "oneKey",
        "hash",
        "oneKey",
        "hash",
        "oneKey",
        "keys",
        "i",
        "cur",
        "kN",
        "oneKey",
        "cur",
        "i",
        "oneKey",
        "i",
        "keys",
        "root",
        "kN",
        "keys",
        "root",
        "Build",
        "root",
        "exprKeySeq",
        "BgUtils_",
        "root",
        "ifNotEmpty",
        "arr",
        "arr",
        "i",
        "i",
        "arr",
        "iter",
        "node",
        "node",
        "node",
        "kN",
        "node",
        "iter",
        "node",
        "node",
        "ifNotEmpty",
        "node",
        "iter",
        "node",
        "kN",
        "As_",
        "node",
        "iter",
        "node",
        "iter",
        "node",
        "iter",
        "node",
        "iter",
        "nextKeyInSeq",
        "lastCursor",
        "dir",
        "cursor",
        "kN",
        "par",
        "cursor",
        "ind",
        "par",
        "cursor",
        "cursor",
        "ind",
        "par",
        "dir",
        "par",
        "ind",
        "down",
        "par",
        "cursor",
        "cursor",
        "kN",
        "down",
        "cursor",
        "kN",
        "cursor",
        "cursor",
        "cursor",
        "down",
        "cursor",
        "kN",
        "cursor",
        "cursor",
        "cursor",
        "cursor",
        "cursor",
        "kN",
        "par",
        "cursor",
        "ind",
        "par",
        "cursor",
        "down",
        "ind",
        "par",
        "down",
        "dir",
        "dir",
        "cursor",
        "down",
        "par",
        "ind",
        "par",
        "par",
        "cursor",
        "down",
        "cursor",
        "par",
        "cursor",
        "down",
        "dir",
        "par",
        "dir",
        "par",
        "down",
        "par",
        "cursor",
        "runKeyInSeq",
        "seq",
        "C",
        "dir",
        "fallback",
        "Req",
        "envInfo",
        "nextKeyInSeq",
        "seq",
        "dir",
        "cursor",
        "nextKeyInSeq",
        "cursor",
        "nextKeyInSeq",
        "cursor",
        "seq",
        "seq",
        "isLast",
        "keyToCommandMap_",
        "seqId",
        "clearTimeout",
        "seq",
        "kStr",
        "loopIdToRunSeq",
        "seqId",
        "loopIdToRunSeq",
        "loopIdToRunSeq",
        "cursor",
        "get_cOptions",
        "C",
        "get_cOptions",
        "C",
        "finalFallback",
        "seq",
        "seq",
        "finalFallback",
        "seq",
        "finalFallback",
        "cursor",
        "finalFallback",
        "finalFallback",
        "finalFallback",
        "fallback",
        "fallback",
        "finalFallback",
        "finalFallback",
        "fallback",
        "runNextCmdBy",
        "dir",
        "finalFallback",
        "dir",
        "fallback",
        "fallback",
        "showHUD",
        "trans_",
        "fallback",
        "isLast",
        "seq",
        "setTimeout",
        "keyToCommandMap_",
        "seqId",
        "old",
        "old",
        "C",
        "opts2",
        "opts2",
        "opts2",
        "timeout",
        "keyToCommandMap_",
        "seqId",
        "runOneKey",
        "cursor",
        "seq",
        "envInfo",
        "parseKeyNode",
        "cursor",
        "cursor",
        "arr",
        "arr",
        "arr",
        "arr",
        "arr",
        "arr",
        "arr",
        "arr",
        "arr",
        "isNegative",
        "arr",
        "parseInt",
        "arr",
        "arr",
        "arr",
        "allowPlus",
        "arr",
        "hashIndex",
        "hashIndex",
        "CommandsNS",
        "hashIndex",
        "hashIndex",
        "hashIndex",
        "options",
        "parseEmbeddedOptions",
        "cursor",
        "key",
        "key",
        "parseEmbeddedOptions",
        "CommandsNS",
        "arrHash",
        "arrHash",
        "arrHash",
        "encodeUnicode",
        "s",
        "s",
        "encodeValue",
        "s",
        "s",
        "s",
        "encodeUnicode",
        "s",
        "arrHash",
        "arrHash",
        "pair",
        "pair",
        "pair",
        "key",
        "key",
        "val",
        "encodeValue",
        "BgUtils_",
        "val",
        "rawPart",
        "rawPart",
        "rawPart",
        "key2",
        "key2",
        "val2",
        "encodeValue",
        "val2",
        "parseOptions_",
        "runOneKey",
        "cursor",
        "seq",
        "C",
        "envInfo",
        "parseKeyNode",
        "cursor",
        "seq",
        "seq",
        "seq",
        "info",
        "seq",
        "info",
        "seq",
        "info",
        "copyCmdOptions",
        "copyCmdOptions",
        "BgUtils_",
        "info",
        "seq",
        "CommandsNS",
        "seq",
        "cursor",
        "runKeyWithOptions",
        "info",
        "info",
        "hasCount",
        "seq",
        "options",
        "envInfo",
        "set_runOneMapping_",
        "key",
        "port",
        "fStatus",
        "key",
        "arr",
        "arr",
        "key",
        "key",
        "prefix",
        "count",
        "prefix",
        "parseInt",
        "prefix",
        "hash",
        "key",
        "hash",
        "key",
        "hash",
        "keyToCommandMap_",
        "set_cPort",
        "port",
        "set_cKey",
        "kKeyCode",
        "set_cOptions",
        "runKeyWithOptions",
        "hash",
        "key",
        "hash",
        "key",
        "count",
        "hash",
        "key",
        "hash",
        "fStatus",
        "doesInheritOptions",
        "baseOptions",
        "CommandsNS",
        "get_cOptions",
        "C",
        "CommandsNS",
        "cur",
        "cur",
        "baseOptions",
        "cur",
        "cur",
        "cur",
        "baseOptions",
        "runKeyWithOptions",
        "key",
        "count",
        "exOptions",
        "CommandsNS",
        "envInfo",
        "fallbackCounter",
        "kFgReq",
        "key",
        "keyToCommandMap_",
        "key",
        "key",
        "keyToCommandMap_",
        "finalKey",
        "key",
        "registryEntry",
        "key",
        "availableCommands_",
        "entryReadonly",
        "registryEntry",
        "makeCommand_",
        "key",
        "registryEntry",
        "showHUD",
        "key",
        "finalKey",
        "key",
        "registryEntry",
        "kBgCmd",
        "registryEntry",
        "registryEntry",
        "registryEntry",
        "doesInheritOptions",
        "registryEntry",
        "showHUD",
        "exOptions",
        "exOptions",
        "exOptions",
        "parseEmbeddedOptions",
        "exOptions",
        "get_cOptions",
        "C",
        "C",
        "cmdOptions",
        "parseFallbackOptions",
        "cmdOptions",
        "cmdOptions",
        "cmdOptions",
        "exOptions",
        "exOptions",
        "fallOpts",
        "fStatus",
        "normalizedOptions_",
        "registryEntry",
        "registryEntry",
        "entryReadonly",
        "CommandsNS",
        "registryEntry",
        "registryEntry",
        "CommandsNS",
        "CommandsNS",
        "BgUtils_",
        "exOptions",
        "copyCmdOptions",
        "newOptions",
        "BgUtils_",
        "exOptions",
        "fallOpts",
        "copyCmdOptions",
        "newOptions",
        "BgUtils_",
        "fallOpts",
        "originalOptions",
        "copyCmdOptions",
        "newOptions",
        "originalOptions",
        "newOptions",
        "fStatus",
        "exOptions",
        "exOptions",
        "newOptions",
        "exOptions",
        "originalOptions",
        "originalOptions",
        "exOptions",
        "exOptions",
        "newOptions",
        "originalOptions",
        "registryEntry",
        "registryEntry",
        "newOptions",
        "registryEntry",
        "kFgCmd",
        "registryEntry",
        "registryEntry",
        "registryEntry",
        "normalizeCommand_",
        "registryEntry",
        "set_cEnv",
        "envInfo",
        "BgUtils_",
        "executeCommand",
        "registryEntry",
        "count",
        "cKey",
        "cPort",
        "fallbackCounter"
    ],
    "literals": [
        "\"./store\"",
        "\"./utils\"",
        "\"./browser\"",
        "\"./ports\"",
        "\"./exclusions\"",
        "\"./i18n\"",
        "\"./key_mappings\"",
        "\"./run_commands\"",
        "\"<v-runkey:$1>\"",
        "string",
        "\"\"",
        "\"o.\"",
        "\"$\"",
        "string",
        "\"string\"",
        "string",
        "string",
        "\"/\"",
        "\"://\"",
        "\"\"",
        "\"string\"",
        "\"boolean\"",
        "\"fullscreen\"",
        "\"*\"",
        "\"string\"",
        "\"string\"",
        "\",\"",
        "\"*\"",
        "\"#\"",
        "\".\"",
        "\"\"",
        "\"\"",
        "\"*\"",
        "\" \"",
        "\"*\"",
        "\"body\"",
        "string",
        "string",
        "string",
        "\"string\"",
        "\"object\"",
        "\"object\"",
        "\"object\"",
        "\"string\"",
        "\":\"",
        "\";\"",
        "\"__proto__\"",
        "\"expect\"",
        "\"expect\"",
        "\"keys\"",
        "\"keys\"",
        "\"$normalized\"",
        "\"$normalized\"",
        "string",
        "\"string\"",
        "\"No environments have been declared\"",
        "No environment named \"${ruleName}\"",
        "\"string\"",
        "string",
        "string",
        "string",
        "string",
        "\"string\"",
        "[${matched.env}]:",
        "(${expected_rules.indexOf(matched)})",
        "\"\"",
        "\"Require keys: comma-seperated-string | string[]\"",
        "\"Has no such a key\"",
        "\"string\"",
        "\"object\"",
        "\"object\"",
        "\"number\"",
        "\"The key is invalid\"",
        "\"string\"",
        "\"#\"",
        "\"+\"",
        "\"\"",
        "\"$1\"",
        "\"\"",
        "\"1\"",
        "\"-\"",
        "\"runKey\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"(\"",
        "\")\"",
        "\"?\"",
        "\":\"",
        "\"?\"",
        "\"?\"",
        "\"+\"",
        "\"()?:+\"",
        "\"Invalid key item: \"",
        "\"\\u2026\"",
        "\"#\"",
        "string",
        "string",
        "string",
        "\"$seq\"",
        "\"$f\"",
        "\"$1\"",
        "\"\"",
        "\"1\"",
        "${fallback.t as 99}",
        "\"string\"",
        "\"-\"",
        "\"+-\"",
        "\"\"",
        "\"\"",
        "\"$\"",
        "\"+\"",
        "\"#\"",
        "\"__proto__\"",
        "\"<v-__proto__>\"",
        "string",
        "\"\"",
        "string",
        "string",
        "\"\\\\u\"",
        "string",
        "string",
        "\"&\"",
        "string",
        "\"=\"",
        "\"=\"",
        "\"\"",
        "\" \"",
        "\"=\"",
        "\" \"",
        "\"\"",
        "\"=\"",
        "\"\"",
        "\"$seq\"",
        "\"$c\"",
        "string",
        "\"-\"",
        "\"#\"",
        "string",
        "string",
        "\"f\"",
        "\"__proto__\"",
        "\"<\"",
        "<v-${key}>",
        "\"${(<RegExpOne> /^\\w+$/).test(key) ? finalKey : key}\" has not been mapped",
        "\"object\"",
        "'\"runKey\" should not call itself'",
        "\"string\"",
        "\"object\"",
        "\"options\"",
        "\"$count\"",
        "\"$count\"",
        "\"count\""
    ],
    "variables": [
        "abs",
        "loopIdToRunSeq",
        "collectOptions",
        "o2",
        "found",
        "matchEnvRule",
        "host",
        "iframe",
        "fullscreen",
        "elSelector",
        "url",
        "slash",
        "port",
        "selectorArr",
        "hash",
        "dot",
        "len",
        "cur",
        "normalizeExpects",
        "expected_rules",
        "normalizeKeys",
        "new_rules",
        "val",
        "isDict",
        "delimiterRe",
        "runKeyWithCond",
        "absCRepeat",
        "matched",
        "frames",
        "expected_rules",
        "ruleName",
        "rule",
        "ruleName",
        "res",
        "keys",
        "seq",
        "key",
        "keysInd",
        "sub_name",
        "repeat",
        "options",
        "options2",
        "optionsPrefix",
        "newIntId",
        "seqId",
        "fakeOptions",
        "parseKeySeq",
        "re",
        "cur",
        "root",
        "cur",
        "last",
        "i",
        "arr",
        "err",
        "oneKey",
        "hash",
        "exprKeySeq",
        "ifNotEmpty",
        "iter",
        "nextKeyInSeq",
        "down",
        "par",
        "ind",
        "cursor",
        "lastCursor",
        "runKeyInSeq",
        "cursor",
        "isLast",
        "finalFallback",
        "seqId",
        "timeout",
        "old",
        "opts2",
        "parseKeyNode",
        "arr",
        "isNegative",
        "allowPlus",
        "prefix",
        "count",
        "hashIndex",
        "key",
        "options",
        "parseEmbeddedOptions",
        "arrHash",
        "rawPart",
        "encodeUnicode",
        "encodeValue",
        "key",
        "val",
        "key2",
        "val2",
        "runOneKey",
        "info",
        "hasCount",
        "options",
        "arr",
        "count",
        "prefix",
        "hash",
        "doesInheritOptions",
        "cur",
        "runKeyWithOptions",
        "finalKey",
        "key",
        "registryEntry",
        "entryReadonly",
        "cmdOptions",
        "fallOpts",
        "fStatus",
        "originalOptions",
        "newOptions"
    ],
    "comments": [
        "#region execute a command when in a special environment",
        "avoid sending messages to content scripts - in case a current tab is running slow",
        "should not reach here",
        "empty",
        "empty",
        "empty",
        "not call runNextCmd on invalid env/key info, but just show HUD to alert",
        "#endregion",
        "#region run a key sequence (tree)",
        "#endregion",
        "#region run one key node with count and placeholder prefixes and a suffix of inline options",
        "has no prefixed \"#\"",
        "#__NOINLINE__",
        "#endregion"
    ],
    "docstrings": [
        "* syntax: a?b+c+2d:(e+-3f?-4g:h+i)?:j\n * * `\"-\"` only contributes to number prefixes\n * * `\"%c\" | \"$c\"` means the outer repeat"
    ],
    "functions": [],
    "classes": []
}