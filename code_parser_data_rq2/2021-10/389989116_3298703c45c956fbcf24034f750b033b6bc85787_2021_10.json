{
    "identifiers": [
        "child_process",
        "URI",
        "promisify",
        "Connection",
        "Diagnostic",
        "DiagnosticSeverity",
        "Position",
        "Range",
        "TextDocument",
        "withInterpreter",
        "WorkspaceFolderContext",
        "promisify",
        "child_process",
        "connection",
        "context",
        "context",
        "textDocument",
        "URI",
        "textDocument",
        "URI",
        "textDocument",
        "progressTracker",
        "withInterpreter",
        "settings",
        "docPath",
        "settings",
        "settings",
        "exec",
        "command",
        "workingDirectory",
        "env",
        "error",
        "error",
        "error",
        "child_process",
        "ansibleSyntaxCheckRegex",
        "execError",
        "diagnostics",
        "filteredErrorMessage",
        "execError",
        "filteredErrorMessage",
        "parseInt",
        "filteredErrorMessage",
        "parseInt",
        "filteredErrorMessage",
        "execError",
        "docPath",
        "execError",
        "execError",
        "error",
        "progressTracker",
        "diagnostics",
        "result",
        "fileName",
        "line",
        "column",
        "result",
        "diagnostics",
        "line",
        "column",
        "line",
        "DiagnosticSeverity",
        "fileName",
        "diagnostics",
        "locationUri",
        "fileDiagnostics",
        "result",
        "diagnostics",
        "locationUri",
        "fileDiagnostics",
        "diagnostics"
    ],
    "literals": [
        "'child_process'",
        "'vscode-uri'",
        "'util'",
        "'vscode-languageserver'",
        "'vscode-languageserver-textdocument'",
        "'../utils/misc'",
        "'./workspaceManager'",
        "string",
        "string",
        "'ansible syntax-check'",
        "'Processing files...'",
        "${settings.ansible.path}-playbook",
        "${docPath} --syntax-check",
        "'utf-8'",
        "string",
        "string",
        "[ansible syntax-check] ${execError.stderr}",
        "Exception in AnsibleSyntaxCheck service: ${JSON.stringify(error)}",
        "string",
        "string",
        "string",
        "string",
        "'Standard output from ansible syntax-check is suspiciously empty.'",
        "file://${fileName}",
        "'Ansible'"
    ],
    "variables": [
        "exec",
        "docPath",
        "diagnostics",
        "progressTracker",
        "workingDirectory",
        "settings",
        "command",
        "env",
        "execError",
        "ansibleSyntaxCheckRegex",
        "filteredErrorMessage",
        "diagnostics",
        "start",
        "end",
        "severity",
        "locationUri",
        "fileDiagnostics"
    ],
    "comments": [
        "eslint-disable-line @typescript-eslint/no-empty-function",
        "eslint-disable-line @typescript-eslint/no-empty-function",
        "according to the docs, these are always available",
        "This is the regex to extract the filename, line and column number from the strerr produced by syntax-check command"
    ],
    "docstrings": [
        "* Acts as an interface to ansible-playbook command.",
        "*\n   * @param connection establishes connection with the client\n   * @param context provides workspace context of the client",
        "* Acts as an interface to ansible-playbook <file> --syntax-check command and a cache of its output.\n   * ansible syntax-check may provide diagnostics for more than just the file for which\n   * it was triggered, and this is reflected in the implementation.\n   *\n   * Perform ansible syntax-check for the given document."
    ],
    "functions": [
        "doValidate",
        "processReport"
    ],
    "classes": [
        "AnsiblePlaybook"
    ]
}