{
    "identifiers": [
        "require",
        "require",
        "require",
        "express",
        "require",
        "require",
        "app",
        "process",
        "app",
        "express",
        "__dirname",
        "app",
        "__dirname",
        "app",
        "query",
        "callback",
        "query",
        "cb",
        "request",
        "neo4j",
        "query",
        "err",
        "res",
        "cb",
        "err",
        "res",
        "query",
        "err",
        "data",
        "data",
        "data",
        "callback",
        "err",
        "data",
        "cypher",
        "query",
        "cb",
        "personName",
        "callback",
        "personName",
        "runQuery",
        "query",
        "err",
        "personFoodData",
        "result",
        "result",
        "result",
        "result",
        "result",
        "personFoodData",
        "foodItemCount",
        "i",
        "i",
        "foodItemCount",
        "personFoodData",
        "i",
        "personFoodData",
        "i",
        "getFoodNutrientsInfo",
        "foodName",
        "err",
        "foodNutrientsData",
        "foodNutrientsData",
        "result",
        "result",
        "quantity",
        "foodNutrientsData",
        "result",
        "result",
        "quantity",
        "foodNutrientsData",
        "result",
        "result",
        "quantity",
        "foodNutrientsData",
        "result",
        "result",
        "quantity",
        "foodNutrientsData",
        "result",
        "result",
        "quantity",
        "foodNutrientsData",
        "repeater",
        "i",
        "callback",
        "err",
        "result",
        "repeater",
        "foodName",
        "callback",
        "foodName",
        "runQuery",
        "query",
        "err",
        "foodNutrientsData",
        "result",
        "foodNutrientsData",
        "result",
        "nutrients",
        "foodNutrientsData",
        "nutrients",
        "foodNutrientsData",
        "nutrients",
        "foodNutrientsData",
        "nutrients",
        "foodNutrientsData",
        "nutrients",
        "foodNutrientsData",
        "nutrients",
        "result",
        "nutrients",
        "callback",
        "err",
        "result",
        "app",
        "request",
        "response",
        "process",
        "i",
        "i",
        "times",
        "i",
        "result",
        "cool",
        "response",
        "result",
        "app",
        "req",
        "res",
        "req",
        "getPersonsNutrientsInfoForPastWeek",
        "err",
        "data",
        "data",
        "res",
        "req",
        "app",
        "request",
        "response",
        "response",
        "cool",
        "app",
        "app",
        "app"
    ],
    "literals": [
        "'cool-ascii-faces'",
        "'express'",
        "'url'",
        "\"fs\"",
        "'request'",
        "'port'",
        "'/public'",
        "'views'",
        "'/views'",
        "'view engine'",
        "'ejs'",
        "\"http://neo4j:foodpolice@ec2-52-3-149-53.compute-1.amazonaws.com:7474/db/data/transaction/commit\"",
        "'Response From Server: '",
        "\"MATCH (p:Person)-[r:ATE]-(f:Food) WHERE p.name = '\"",
        "\"'AND r.Date <= 20150830 AND r.Date >= 20150824 RETURN f.name As FoodName, r.Quantity As QuantityAte\"",
        "'getPersonsNutrientsInfoForPastWeek: Got person info'",
        "\"getPersonsNutrientsInfoForPastWeek AftergettingFoodDate: \"",
        "\"MATCH (fd:Food)-[r:CONTAINS]-(ingredients) WHERE fd.name='\"",
        "\"' RETURN fd.name As Food, SUM(r.Quantity * ingredients.Calories) As Total_Calories, SUM(r.Quantity * ingredients.Carbohydrate) AS Total_Carbohydrate, SUM(r.Quantity* ingredients.Cholestrol) as Total_Cholestrol, SUM(r.Quantity* ingredients.Fiber) as Total_Fiber,SUM(r.Quantity* ingredients.Protein) as Total_Protein\"",
        "'/'",
        "''",
        "'/api/getsummary'",
        "'Getting summary about person: '",
        "\"Sankalp\"",
        "\"End: \"",
        "'PersonName: '",
        "'/cool'",
        "'port'",
        "'Node app is running on port'",
        "'port'"
    ],
    "variables": [
        "cool",
        "express",
        "url",
        "app",
        "fs",
        "request",
        "weeklyCholestrolLimit",
        "neo4j",
        "responseJSON",
        "cb",
        "query",
        "result",
        "foodItemCount",
        "foodName",
        "quantity",
        "query",
        "result",
        "nutrients",
        "result",
        "times"
    ],
    "comments": [
        "views is directory for all template files",
        "app.get('/', function(request, response) {",
        "response.render('pages/index');ÃŸ",
        "});",
        "var resultForFoodStat = JSON.parse(fs.readFileSync('food.json'));",
        "var stringifiedString = JSON.stringify(resultForFoodStat)",
        "console.log(stringifiedString);",
        "var parsedString = parseResponse(stringifiedString);",
        "console.log(parsedString);"
    ],
    "docstrings": [],
    "functions": [
        "runQuery",
        "cypher",
        "getPersonsNutrientsInfoForPastWeek",
        "repeater",
        "getFoodNutrientsInfo"
    ],
    "classes": []
}