{
    "identifiers": [
        "context",
        "context",
        "i",
        "i",
        "bufferSource",
        "i",
        "bufferSource",
        "i",
        "bufferSource",
        "i",
        "i",
        "i",
        "i",
        "modGain",
        "i",
        "modGain",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "fadeBuffer",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "t",
        "PitchShifter",
        "PitchShifter",
        "t",
        "t2",
        "t",
        "t2",
        "t",
        "t2",
        "delayTime",
        "delayGain",
        "delayGain",
        "delayTime",
        "multiplier",
        "multiplier",
        "modGain",
        "i",
        "modGain",
        "i",
        "modGain",
        "i",
        "modGain",
        "i",
        "multiplier",
        "multiplier",
        "PitchShifter",
        "PitchShifter",
        "PitchShifter",
        "length1",
        "length2",
        "length",
        "buffer",
        "length",
        "PitchShifter",
        "length1",
        "fadeLength",
        "i",
        "length1",
        "i",
        "i",
        "fadeIndex1",
        "value",
        "i",
        "fadeLength",
        "i",
        "fadeIndex2",
        "value",
        "i",
        "fadeIndex2",
        "fadeLength",
        "value",
        "p",
        "i",
        "value",
        "i",
        "length",
        "i",
        "p",
        "i",
        "buffer",
        "shiftUp",
        "PitchShifter",
        "PitchShifter",
        "PitchShifter",
        "length1",
        "length2",
        "length",
        "buffer",
        "length",
        "i",
        "length1",
        "i",
        "shiftUp",
        "p",
        "i",
        "length1",
        "i",
        "length",
        "p",
        "i",
        "i",
        "length1",
        "i",
        "length",
        "i",
        "p",
        "i",
        "buffer",
        "unit",
        "outputNum",
        "inputNum",
        "outputNum",
        "outputNum",
        "outputNum",
        "outputNum",
        "unit",
        "inputNum",
        "unit",
        "outputNum",
        "inputNum",
        "outputNum",
        "outputNum",
        "outputNum",
        "outputNum",
        "outputNum",
        "PitchShifter"
    ],
    "literals": [
        "\"createFadeBuffer() length = \"",
        "\"createDelayTimeBuffer() length = \""
    ],
    "variables": [
        "i",
        "i",
        "i",
        "i",
        "fadeBuffer",
        "i",
        "t",
        "t2",
        "length1",
        "length2",
        "length",
        "buffer",
        "p",
        "fadeLength",
        "fadeIndex1",
        "fadeLength",
        "fadeIndex2",
        "i",
        "value",
        "i",
        "length1",
        "length1",
        "length2",
        "length",
        "buffer",
        "p",
        "i",
        "i",
        "length1"
    ],
    "comments": [
        "private mod1;",
        "private mod2;",
        "private mod1Gain;",
        "private mod2Gain;",
        "private mod3Gain;",
        "private mod4Gain;",
        "private modGain1;",
        "private modGain2;",
        "private delay1;",
        "private delay2;",
        "private fade1;",
        "private fade2;",
        "private mix1;",
        "private mix2;",
        "Create nodes for the input and output of this \"module\".",
        "Delay modulation. //TODO: for loop!",
        "var mod1 = this.context.createBufferSource();",
        "var mod2 = this.context.createBufferSource();",
        "var mod3 = this.context.createBufferSource();",
        "var mod4 = this.context.createBufferSource();",
        "todo: for loop!",
        "todo for loop!",
        "this.bufferSources[0].buffer = this.shiftDownBuffer;",
        "this.bufferSources[1].buffer = this.shiftDownBuffer;",
        "this.bufferSources[2].buffer = this.shiftUpBuffer;",
        "this.bufferSources[3].buffer = this.shiftUpBuffer;",
        "this.bufferSources[0].loop = true;",
        "this.bufferSources[1].loop = true;",
        "this.bufferSources[2].loop = true;",
        "this.bufferSources[3].loop = true;",
        "for switching between oct-up and oct-down //todo FOR LOOP!",
        "var mod1Gain = this.context.createGain();",
        "var mod2Gain = this.context.createGain();",
        "var mod3Gain = this.context.createGain();",
        "var mod4Gain = this.context.createGain();",
        "mod3Gain.gain.value = 0;",
        "mod4Gain.gain.value = 0;",
        "this.bufferSources[0].connect(mod1Gain);",
        "this.bufferSources[1].connect(mod2Gain);",
        "this.bufferSources[2].connect(mod3Gain);",
        "this.bufferSources[3].connect(mod4Gain);",
        "Delay amount for changing pitch.",
        "var modGain1 = this.context.createGain();",
        "var modGain2 = this.context.createGain();",
        "var delay1 = this.context.createDelay();",
        "var delay2 = this.context.createDelay();",
        "mod1Gain.connect(modGain1);",
        "mod2Gain.connect(modGain2);",
        "mod3Gain.connect(modGain1);",
        "mod4Gain.connect(modGain2);",
        "modGain1.connect(delay1.delayTime);",
        "modGain2.connect(delay2.delayTime);",
        "Crossfading.",
        "var fade1 = this.context.createBufferSource();",
        "var fade2 = this.context.createBufferSource();",
        "fade1.buffer = fadeBuffer;",
        "fade2.buffer = fadeBuffer;",
        "fade1.loop = true;",
        "fade2.loop = true;",
        "var mix1 = this.context.createGain();",
        "var mix2 = this.context.createGain();",
        "mix1.gain.value = 0;",
        "mix2.gain.value = 0;",
        "fade1.connect(mix1.gain);",
        "fade2.connect(mix2.gain);",
        "Connect processing graph.",
        "this.input.connect(delay1);",
        "this.input.connect(delay2);",
        "delay1.connect(mix1);",
        "delay2.connect(mix2);",
        "mix1.connect(this.output);",
        "mix2.connect(this.output);",
        "Start",
        "this.mod1 = this.bufferSources[0];",
        "this.mod2 = this.bufferSources[1];",
        "this.mod1Gain = mod1Gain;",
        "this.mod2Gain = mod2Gain;",
        "this.mod3Gain = mod3Gain;",
        "this.mod4Gain = mod4Gain;",
        "this.modGain1 = modGain1;",
        "this.modGain2 = modGain2;",
        "this.fade1 = fade1;",
        "this.fade2 = fade2;",
        "this.mix1 = mix1;",
        "this.mix2 = mix2;",
        "this.delay1 = delay1;",
        "this.delay2 = delay2;",
        "this.modGain1.gain.setTargetAtTime(0.5*delayTime, 0, 0.010);",
        "this.modGain2.gain.setTargetAtTime(0.5*delayTime, 0, 0.010);",
        "pitch up",
        "this.mod1Gain.gain.value = 0;",
        "this.mod2Gain.gain.value = 0;",
        "this.mod3Gain.gain.value = 1;",
        "this.mod4Gain.gain.value = 1;",
        "pitch down",
        "this.mod1Gain.gain.value = 1;",
        "this.mod2Gain.gain.value = 1;",
        "this.mod3Gain.gain.value = 0;",
        "this.mod4Gain.gain.value = 0;",
        "1st part of cycle",
        "2nd part",
        "1st part of cycle",
        "This line does shift-up transpose",
        "This line does shift-down transpose",
        "2nd part"
    ],
    "docstrings": [],
    "functions": [
        "FADE_TIME",
        "BUFFER_TIME",
        "setDelay",
        "PitchOffset",
        "PitchOffset",
        "createFadeBuffer",
        "createDelayTimeBuffer",
        "connect",
        "disconnect"
    ],
    "classes": [
        "PitchShifter"
    ]
}