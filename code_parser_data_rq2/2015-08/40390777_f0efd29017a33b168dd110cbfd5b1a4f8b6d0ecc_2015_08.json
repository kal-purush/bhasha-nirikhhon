{
    "identifiers": [
        "genetics",
        "key",
        "key",
        "key",
        "key",
        "value",
        "key",
        "value",
        "NodeType",
        "value",
        "children",
        "value",
        "children",
        "other",
        "other",
        "other",
        "child",
        "child",
        "Node",
        "value",
        "children",
        "Term",
        "NodeType",
        "Func",
        "NodeType",
        "context",
        "Term",
        "value",
        "value",
        "context",
        "Term",
        "name",
        "name",
        "context",
        "context",
        "term",
        "term",
        "i",
        "name",
        "func",
        "name",
        "func",
        "func",
        "func",
        "args",
        "args",
        "func",
        "func",
        "i",
        "GenerateMethod",
        "funcs",
        "terms",
        "maxDepth",
        "method",
        "maxDepth",
        "method",
        "GenerateMethod",
        "terms",
        "terms",
        "funcs",
        "Node",
        "terms",
        "funcs",
        "i",
        "func",
        "i",
        "args",
        "i",
        "generateExpression",
        "funcs",
        "terms",
        "maxDepth",
        "method",
        "Node",
        "func",
        "args",
        "node",
        "node",
        "NodeType",
        "node",
        "node",
        "serializeExpression",
        "func",
        "args",
        "NodeType",
        "node",
        "node",
        "context",
        "node",
        "NodeType",
        "node",
        "node",
        "child",
        "evaluateExpression",
        "child",
        "context",
        "func",
        "args",
        "NodeType",
        "node",
        "term",
        "context",
        "node",
        "callback",
        "node",
        "callback",
        "node",
        "node",
        "child",
        "walkExpression",
        "child",
        "callback",
        "root",
        "walkExpression",
        "root",
        "node",
        "count",
        "count",
        "rand",
        "count",
        "selected",
        "node",
        "selected",
        "root",
        "funcs",
        "terms",
        "maxDepth",
        "method",
        "root",
        "selectRandomNode",
        "copy",
        "generateExpression",
        "funcs",
        "terms",
        "maxDepth",
        "method",
        "subExpression",
        "newExpression",
        "copy",
        "genetics",
        "funcs",
        "genetics",
        "a",
        "b",
        "a",
        "b",
        "funcs",
        "genetics",
        "a",
        "b",
        "a",
        "b",
        "funcs",
        "genetics",
        "a",
        "b",
        "a",
        "b",
        "funcs",
        "genetics",
        "a",
        "b",
        "a",
        "b",
        "genetics",
        "terms",
        "genetics",
        "terms",
        "genetics",
        "terms",
        "genetics",
        "terms",
        "genetics",
        "terms",
        "genetics",
        "terms",
        "genetics",
        "terms",
        "genetics",
        "genetics",
        "context",
        "context",
        "genetics",
        "i",
        "POPULATION_SIZE",
        "i",
        "genetics",
        "funcs",
        "terms",
        "genetics",
        "population",
        "expr",
        "population",
        "expr",
        "genetics",
        "expr",
        "context",
        "result",
        "target",
        "error",
        "closest",
        "closest",
        "error",
        "closest",
        "error",
        "genetics",
        "expr",
        "error",
        "expr",
        "errors",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "errors",
        "parent",
        "parent",
        "population",
        "parents",
        "parent",
        "population",
        "parent",
        "population",
        "POPULATION_SIZE",
        "parents",
        "parents",
        "i",
        "genetics",
        "parent",
        "funcs",
        "terms",
        "genetics",
        "population",
        "offspring"
    ],
    "literals": [
        "string",
        "string",
        "string",
        "\"invalid node value\"",
        "\"getValue() must be overridden in child class\"",
        "string",
        "\"toString() must be overridden in child class\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"too long\"",
        "string",
        "string",
        "\"(\"",
        "\" \"",
        "\" \"",
        "\")\"",
        "\"invalid node type\"",
        "\"invalid node type\"",
        "\"ADD\"",
        "\"SUBTRACT\"",
        "\"DIVIDE\"",
        "\"MULTIPLY\"",
        "\"X\"",
        "\"Y\"",
        "\"X\"",
        "\"Y\"",
        "\"closest:\"",
        "\"found it!\""
    ],
    "variables": [
        "value",
        "children",
        "i",
        "i",
        "func",
        "args",
        "i",
        "func",
        "args",
        "func",
        "args",
        "term",
        "count",
        "selected",
        "root",
        "rand",
        "copy",
        "subExpression",
        "newExpression",
        "funcs",
        "terms",
        "context",
        "target",
        "closest",
        "Infinity",
        "count",
        "population",
        "POPULATION_SIZE",
        "i",
        "expr",
        "errors",
        "result",
        "error",
        "parents",
        "i",
        "parent",
        "offspring"
    ],
    "comments": [
        "create copy for mutation",
        "select node to be replaced",
        "create new random node",
        "replace selected node with random node",
        "funcs.register(",
        "new genetics.Func(\"SQRT\", (a: number) => Math.sqrt(a)));",
        "funcs.register(",
        "new genetics.Func(\"SIN\", (a: number) => Math.sin(a)));",
        "funcs.register(",
        "new genetics.Func(\"COS\", (a: number) => Math.cos(a)));",
        "funcs.register(",
        "new genetics.Func(\"LOG\", (a: number) => Math.log(a)));",
        "funcs.register(",
        "new genetics.Func(\"POW\", (a: number, b: number) => Math.pow(a, b)));",
        "funcs.register(",
        "new genetics.Func(\"ABS\", (a: number) => Math.abs(a)));",
        "funcs.register(",
        "new genetics.Func(\"FLOOR\", (a: number) => Math.floor(a)));",
        "funcs.register(",
        "new genetics.Func(\"CEIL\", (a: number) => Math.ceil(a)));",
        "funcs.register(",
        "new genetics.Func(\"MAX\", (a: number, b: number) => Math.max(a, b)));",
        "funcs.register(",
        "new genetics.Func(\"MIN\", (a: number, b: number) => Math.min(a, b)));",
        "try all the expressions",
        "sort them based on error",
        "choose the top 100 for breeding",
        "add all parents to the next population"
    ],
    "docstrings": [],
    "functions": [
        "get",
        "copy",
        "getType",
        "getValue",
        "toString",
        "getValue",
        "toString",
        "getValue",
        "toString",
        "register",
        "random",
        "size",
        "execute",
        "toString",
        "register",
        "random",
        "size",
        "generateExpression",
        "serializeExpression",
        "evaluateExpression",
        "walkExpression",
        "selectRandomNode",
        "mutateExpression"
    ],
    "classes": [
        "Context",
        "Node",
        "Term",
        "ConstantTerm",
        "InputTerm",
        "TermRegistry",
        "Func",
        "FuncRegistry"
    ]
}