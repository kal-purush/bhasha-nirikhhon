{
    "identifiers": [
        "chrome",
        "response",
        "setInterval",
        "clearInterval",
        "readyStateCheckInterval",
        "e",
        "getParents",
        "curElem",
        "ind",
        "curElem",
        "ind",
        "Comment",
        "curElem",
        "ind",
        "curPar",
        "temp",
        "sameIndex",
        "getSameIndex",
        "curPar",
        "prePar",
        "CommentList",
        "curPar",
        "j",
        "allYarns",
        "j",
        "allYarns",
        "j",
        "allYarns",
        "j",
        "allYarns",
        "newY",
        "i",
        "entryList",
        "i",
        "entryList",
        "i",
        "hoverLoop",
        "cur",
        "pre",
        "preList",
        "curList",
        "preList",
        "end",
        "k",
        "preList",
        "curList",
        "k",
        "preList",
        "k",
        "end",
        "k",
        "end",
        "k",
        "curList",
        "curList",
        "k",
        "preList",
        "k",
        "end",
        "k",
        "k",
        "comList",
        "comList",
        "CommentList",
        "i",
        "i",
        "p1",
        "i",
        "p2",
        "i",
        "angleDeg",
        "p2",
        "p1",
        "p2",
        "p1",
        "widthPx",
        "p2",
        "p1",
        "p2",
        "p1",
        "p2",
        "p1",
        "p2",
        "p1",
        "Yarn",
        "widthPx",
        "angleDeg",
        "i",
        "i",
        "tempYarn",
        "CommentList",
        "i",
        "i",
        "i",
        "xVal",
        "yVal",
        "xVal",
        "yVal",
        "Point",
        "Point",
        "widthVal",
        "angleVal",
        "pointObj",
        "widthVal",
        "angleVal",
        "pointObj",
        "Yarn",
        "allYarns",
        "Yarn",
        "elemObj",
        "elemObj",
        "Point",
        "getCumulativeOffset",
        "elemObj",
        "getCumulativeOffset",
        "elemObj",
        "Yarn",
        "elemObj",
        "Comment",
        "Comment",
        "Comment",
        "yarnObj",
        "yarnObj",
        "Comment",
        "elemObj",
        "Comment",
        "elemObj",
        "FirstComment",
        "Comment",
        "FirstComment",
        "FirstComment",
        "el",
        "classNam",
        "el",
        "el",
        "p",
        "hasClass",
        "o",
        "classNam",
        "parents",
        "o",
        "p",
        "o",
        "p",
        "o",
        "parents",
        "obj",
        "left",
        "top",
        "obj",
        "obj",
        "left",
        "obj",
        "top",
        "obj",
        "obj",
        "obj",
        "left",
        "top",
        "element",
        "cls",
        "element",
        "element",
        "cls",
        "Element",
        "NodeList",
        "HTMLCollection",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i"
    ],
    "literals": [
        "\"use strict\"",
        "\"complete\"",
        "'entry'",
        "'form'",
        "'entry'",
        "\"mouseover\"",
        "\"div\"",
        "'yarnstring'",
        "\"px\"",
        "\"rotateZ(\"",
        "\"deg)\"",
        "\"px\"",
        "\"px\"",
        "' '",
        "' '",
        "' '",
        "' '"
    ],
    "variables": [
        "prePar",
        "allYarns",
        "readyStateCheckInterval",
        "hoverLoop",
        "curPar",
        "sameIndex",
        "curElem",
        "ind",
        "temp",
        "newY",
        "j",
        "entryList",
        "i",
        "curList",
        "cur",
        "preList",
        "pre",
        "end",
        "k",
        "angleDeg",
        "widthPx",
        "p1",
        "p2",
        "i",
        "tempYarn",
        "i",
        "parents",
        "p",
        "o",
        "p",
        "left",
        "top",
        "i"
    ],
    "comments": [
        "All rights reserved Georgios Kormaris 2014",
        "TODO: Attach styled ::after, horizontal",
        "Page loaded",
        "The parList contains the .entry divs USE >THIS< to get the element// that fired the event, as e.target returns the hovered element which could be a child",
        "curElem[ind] = curElem[ind].children[1]; //We need the second child: the actual text",
        "var delY = new CommentList(prePar.slice(sameIndex, prePar.length)); //For removal",
        "var newY = new CommentList(curPar.slice(sameIndex, curPar.length));",
        "newY.removeYarn();",
        "delY.removeYarn();",
        "The main loop",
        "var drawIndex = 0;",
        "We don't want an out-of-range error.",
        "drawIndex = k;",
        "drawIndex = k;",
        "Start from the second comment",
        "The previous element",
        "Marginally better than obfuscated machine code",
        "function Yarn(idVal, pointObj) {\n this._yid = idVal;\n this._corner = pointObj;\n\n this.drawYarn = function (i, currentL, previousL) {\n for (var j = i; j < currentL.length - 1; j++) { //Start drawing only where needed\n var pointHi = currentL[j].corner();\n var pointLo = currentL[j + 1].corner();\n var angle = calcAngle(pointHi, pointLo);\n var width = calcWidth(pointHi, pointLo);\n addYarn(angle, width);\n }\n }\n\n var addYarn = function (angl, widt) {\n var yElement = document.createElement('div');\n yElement.id = yid;\n yElement.style.top = corner.y.toString();\n yElement.style.left = corner.x.toString();\n yElement.style.width = widt.toString();\n yElement.style.transform = \"rotateZ(\" + angl + \")\";\n }\n\n }",
        "TODO: extend DivElement",
        "KEEP DATA INTACT, CHANGE THE FUNCTION IN CHILD>",
        "function ParList(elmn) {\n this.parList = getParents(elmn, '.entry'); //The parList contains the .entry divs\n for (var ind = 0; ind < this.parList.length; ind++) {\n this.parList[ind] = this.parList[ind].children[1]; //We need the second child: the actual text\n }\n //The first element is always the one hovered.\n }",
        "returns an Array []",
        "truthy",
        "removeChild is silly, let's create remove()\n * I could use remove() out of the box since this is for Chrome...\n * so that's what I'm going to do"
    ],
    "docstrings": [
        "****** COMMENTLIST-- *******",
        "****** --COMMENTLIST *******",
        "****** POINT-- *******",
        "****** --POINT *******",
        "****** YARN-- *******",
        "****** --YARN *******",
        "****** COMMENT-- *******",
        "****** --COMMENT *******",
        "****** 1stCOMMENT-- *******",
        "****** --1stCOMMENT *******",
        "***************************************************** *",
        "* It even works in Firefox if I decide to re-use the code so this isn't needed at all\n * I think"
    ],
    "functions": [
        "getSameIndex",
        "CommentList",
        "Point",
        "Yarn",
        "Comment",
        "FirstComment",
        "getParents",
        "getCumulativeOffset",
        "hasClass"
    ],
    "classes": []
}