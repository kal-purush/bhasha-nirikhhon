{
    "identifiers": [
        "sys",
        "socket",
        "math",
        "time",
        "argparse",
        "glob",
        "subprocess",
        "threading",
        "datetime",
        "core",
        "api",
        "grpc",
        "client",
        "core",
        "api",
        "grpc",
        "core_pb2",
        "xmlrpc",
        "client",
        "threading",
        "Lock",
        "xmlrpc",
        "client",
        "ServerProxy",
        "allow_none",
        "nodeid",
        "track_nodeid",
        "nodeid",
        "track_nodeid",
        "track_nodeid",
        "nodeid",
        "threading",
        "threading",
        "ReceiveUDP",
        "node1",
        "node2",
        "math",
        "sqrt",
        "math",
        "pow",
        "node2",
        "y",
        "node1",
        "y",
        "math",
        "pow",
        "node2",
        "x",
        "node1",
        "x",
        "uavnode",
        "xmlproxy",
        "getOriginalWypt",
        "xmlproxy",
        "setWypt",
        "position",
        "position",
        "uavnode",
        "xmlproxy",
        "setTarget",
        "uavnode",
        "trackid",
        "uavnodeid",
        "trgtnodeid",
        "socket",
        "getaddrinfo",
        "mcastaddr",
        "socket",
        "socket",
        "addrinfo",
        "socket",
        "SOCK_DGRAM",
        "pack",
        "ttl",
        "sk",
        "setsockopt",
        "socket",
        "IPPROTO_IP",
        "socket",
        "IP_MULTICAST_TTL",
        "ttl_bin",
        "uavnodeid",
        "trgtnodeid",
        "sk",
        "sendto",
        "buf",
        "encode",
        "encoding",
        "errors",
        "addrinfo",
        "port",
        "socket",
        "getaddrinfo",
        "mcastaddr",
        "socket",
        "socket",
        "addrinfo",
        "socket",
        "SOCK_DGRAM",
        "sk",
        "setsockopt",
        "socket",
        "SOL_SOCKET",
        "socket",
        "SO_REUSEADDR",
        "sk",
        "bind",
        "port",
        "socket",
        "inet_pton",
        "addrinfo",
        "addrinfo",
        "group_bin",
        "pack",
        "socket",
        "INADDR_ANY",
        "sk",
        "setsockopt",
        "socket",
        "IPPROTO_IP",
        "socket",
        "IP_ADD_MEMBERSHIP",
        "mreq",
        "sk",
        "recvfrom",
        "buf",
        "decode",
        "buf_str",
        "split",
        "uavidstr",
        "trgtidstr",
        "uavs",
        "mynodeseq",
        "uavnode",
        "nodeid",
        "uavnodeid",
        "UpdateTracking",
        "uavnodeid",
        "trgtnodeid",
        "uavnodeid",
        "trgtnodeid",
        "protocol",
        "thrdlock",
        "acquire",
        "uavnode",
        "uavs",
        "uavnode",
        "nodeid",
        "uavnodeid",
        "trgtnodeid",
        "in_uavs",
        "CORENode",
        "uavnodeid",
        "trgtnodeid",
        "uavs",
        "append",
        "node",
        "protocol",
        "thrdlock",
        "release",
        "covered_zone",
        "track_range",
        "uavs",
        "mynodeseq",
        "protocol",
        "xmlproxy",
        "getPotentialTargets",
        "covered_zone",
        "track_range",
        "uavs",
        "potential_targets",
        "trgtnode_id",
        "potential_targets",
        "uavnode",
        "oldtrackid",
        "trgtnode_id",
        "trgtnode_id",
        "trgtnode_id",
        "uavnode",
        "oldtrackid",
        "uavnode",
        "nodeid",
        "trgtnode_id",
        "commsflag",
        "uavnodetmp",
        "uavs",
        "uavnodetmp",
        "trackid",
        "trgtnode_id",
        "uavnodetmp",
        "trackid",
        "uavnodetmp",
        "oldtrackid",
        "trgtnode_id",
        "trgtnode_id",
        "commsflag",
        "trackflag",
        "trgtnode_id",
        "trgtnode_id",
        "updatewypt",
        "core",
        "get_node",
        "session_id",
        "trgtnode_id",
        "response",
        "node",
        "node",
        "position",
        "x",
        "node",
        "position",
        "y",
        "xmlproxy",
        "setWypt",
        "trgtnode_x",
        "trgtnode_y",
        "commsflag",
        "uavnodetmp",
        "uavs",
        "uavnodetmp",
        "nodeid",
        "uavnode",
        "nodeid",
        "uavnodetmp",
        "trackid",
        "protocol",
        "AdvertiseUDP",
        "uavnode",
        "nodeid",
        "uavnode",
        "trackid",
        "uavnode",
        "trackid",
        "uavnode",
        "oldtrackid",
        "uavnode",
        "trackid",
        "RecordTarget",
        "uavnode",
        "uavnode",
        "trackid",
        "RedeployUAV",
        "uavnode",
        "uavs",
        "protocol",
        "nodepath",
        "mynodeseq",
        "nodecnt",
        "core",
        "session_id",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "dest",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "dest",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "dest",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "dest",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "dest",
        "metavar",
        "help",
        "parser",
        "parse_args",
        "args",
        "protocol",
        "client",
        "CoreGrpcClient",
        "core",
        "connect",
        "core",
        "get_sessions",
        "response",
        "sessions",
        "ValueError",
        "response",
        "sessions",
        "session_summary",
        "id",
        "core",
        "get_session",
        "session_id",
        "session",
        "CORENode",
        "args",
        "uav_id",
        "uavs",
        "append",
        "node",
        "RedeployUAV",
        "node",
        "RecordTarget",
        "node",
        "nodecnt",
        "mynodeseq",
        "sys",
        "exit",
        "glob",
        "glob",
        "corepath",
        "args",
        "interval",
        "msecinterval",
        "protocol",
        "ReceiveUDPThread",
        "recvthrd",
        "start",
        "time",
        "sleep",
        "secinterval",
        "protocol",
        "thrdlock",
        "acquire",
        "TrackTargets",
        "args",
        "covered_zone",
        "args",
        "track_range",
        "protocol",
        "thrdlock",
        "release",
        "main"
    ],
    "literals": [
        "'none'",
        "'235.1.1.1'",
        "'/tmp'",
        "''",
        "\"http://localhost:8000\"",
        "\"Redeploy UAV\"",
        "\"RecordTarget\"",
        "\"AdvertiseUDP\"",
        "'@i'",
        "' '",
        "'utf-8'",
        "'strict'",
        "''",
        "'=I'",
        "'utf-8'",
        "\" \"",
        "\"udp\"",
        "\"udp\"",
        "\"udp\"",
        "\"UAV nodes: \"",
        "\"Potential Targets: \"",
        "'Keep the current tracking; no need to change '",
        "\"Node %d found potential target %d\"",
        "\"Target \"",
        "\" is being tracked already\"",
        "\"UAV node should track this target \"",
        "\"Update waypoint\"",
        "\"udp\"",
        "'-my'",
        "'--my-id'",
        "'uav_id'",
        "'my id'",
        "'1'",
        "'My Node ID'",
        "'-c'",
        "'--covered-zone'",
        "'covered_zone'",
        "'covered zone'",
        "'1200'",
        "'UAV covered zone limit on X axis'",
        "'-r'",
        "'--track_range'",
        "'track_range'",
        "'track range'",
        "'600'",
        "'UAV tracking range'",
        "'-i'",
        "'--update_interval'",
        "'interval'",
        "'update interval'",
        "'1'",
        "'Update Inteval'",
        "'-p'",
        "'--protocol'",
        "'protocol'",
        "'comms protocol'",
        "'none'",
        "'Comms Protocol'",
        "\"172.16.0.254:50051\"",
        "\"no current core sessions\"",
        "\"Error: my id needs to be in the list of UAV IDs\"",
        "\"/tmp/pycore.*/\"",
        "\"udp\"",
        "\"udp\"",
        "\"udp\"",
        "'__main__'"
    ],
    "variables": [
        "uavs",
        "mynodeseq",
        "nodecnt",
        "protocol",
        "mcastaddr",
        "port",
        "ttl",
        "core",
        "session_id",
        "filepath",
        "nodepath",
        "thrdlock",
        "xmlproxy",
        "nodeid",
        "trackid",
        "oldtrackid",
        "position",
        "addrinfo",
        "sk",
        "ttl_bin",
        "buf",
        "addrinfo",
        "sk",
        "group_bin",
        "mreq",
        "buf",
        "sender",
        "buf_str",
        "uavidstr",
        "trgtidstr",
        "uavnodeid",
        "trgtnodeid",
        "uavnode",
        "in_uavs",
        "uavnode",
        "trackid",
        "in_uavs",
        "node",
        "uavnode",
        "uavnode",
        "trackid",
        "updatewypt",
        "commsflag",
        "commsflag",
        "potential_targets",
        "uavnode",
        "trackid",
        "updatewypt",
        "trackflag",
        "trackflag",
        "uavnode",
        "trackid",
        "updatewypt",
        "updatewypt",
        "response",
        "node",
        "trgtnode_x",
        "trgtnode_y",
        "uavnodetmp",
        "oldtrackid",
        "uavnodetmp",
        "trackid",
        "uavnode",
        "oldtrackid",
        "parser",
        "args",
        "protocol",
        "core",
        "response",
        "session_summary",
        "session_id",
        "session",
        "mynodeseq",
        "node",
        "corepath",
        "nodepath",
        "msecinterval",
        "secinterval",
        "recvthrd"
    ],
    "comments": [
        "!/usr/bin/python",
        "Set target (waypoint) positions for UAVs",
        "---------------",
        "Define a CORE node",
        "---------------",
        "---------------",
        "Thread that receives UDP Advertisements",
        "---------------",
        "---------------",
        "Calculate the distance between two modes (on a map)",
        "---------------",
        "---------------",
        "Redeploy a UAV back to its original position",
        "---------------",
        "---------------",
        "Record target tracked to the proxy",
        "Update UAV color depending if it is tracking a target",
        "---------------",
        "---------------",
        "Advertise the target being tracked over UDP",
        "---------------",
        "---------------",
        "Receive and parse UDP advertisments",
        "---------------",
        "print(\"Receive UDP\")",
        "Bind",
        "Join group",
        "Update tracking info for other UAVs",
        "---------------",
        "Update tracking info based on a received advertisement",
        "---------------",
        "Update corresponding UAV node structure with tracking info",
        "if UAV node is in the UAV list",
        "Otherwise add UAV node to UAV list",
        "---------------",
        "Update waypoints for targets tracked, or track new targets",
        "---------------",
        "print(\"Track Targets\")",
        "If this UAV was tracking this target before and it's still",
        "in range then it should keep it.",
        "Update waypoint to the new position of the target",
        "Keep the current tracking; no need to change",
        "unless the track goes out of range",
        "If this UAV was not tracking any target and finds one in range",
        "UAV node should track this target",
        "Update waypoint for UAV node",
        "Reset tracking info for other UAVs if we're using comms",
        "Advertise target being tracked if using comms",
        "Record the target tracked for displaying proper colors",
        "Re-deploy UAV if it's not track anything",
        "---------------",
        "main",
        "---------------",
        "Get command line inputs",
        "Parse command line options",
        "Create grpc client",
        "Populate the uavs list with current UAV node information",
        "Initialize values",
        "Create UDP receiving thread",
        "Start tracking targets"
    ],
    "docstrings": [],
    "functions": [
        "__repr__",
        "run",
        "Distance",
        "RedeployUAV",
        "RecordTarget",
        "AdvertiseUDP",
        "ReceiveUDP",
        "UpdateTracking",
        "TrackTargets",
        "main"
    ],
    "classes": [
        "CORENode",
        "ReceiveUDPThread"
    ]
}