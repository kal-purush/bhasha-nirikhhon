{
    "identifiers": [
        "jsr223",
        "docker",
        "file",
        "org",
        "junit",
        "Assume",
        "assumeTrue",
        "java",
        "io",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "java",
        "util",
        "org",
        "apache",
        "log4j",
        "BasicConfigurator",
        "org",
        "junit",
        "Assert",
        "org",
        "junit",
        "BeforeClass",
        "org",
        "junit",
        "Test",
        "org",
        "ow2",
        "proactive",
        "scheduler",
        "common",
        "SchedulerConstants",
        "org",
        "ow2",
        "proactive",
        "scheduler",
        "task",
        "SchedulerVars",
        "org",
        "ow2",
        "proactive",
        "scripting",
        "ScriptResult",
        "org",
        "ow2",
        "proactive",
        "scripting",
        "SimpleScript",
        "org",
        "ow2",
        "proactive",
        "scripting",
        "TaskScript",
        "com",
        "google",
        "common",
        "io",
        "Files",
        "p",
        "Runtime",
        "getRuntime",
        "exec",
        "p",
        "waitFor",
        "p",
        "exitValue",
        "e",
        "BeforeClass",
        "BasicConfigurator",
        "resetConfiguration",
        "BasicConfigurator",
        "configure",
        "DockerFilePropertyLoader",
        "getInstance",
        "setDockerFileCommand",
        "DockerFilePropertyLoader",
        "getInstance",
        "setUseSudo",
        "DockerFilePropertyLoader",
        "getInstance",
        "setDockerHost",
        "Test",
        "assumeTrue",
        "dockerCommandExists",
        "dockerScript",
        "ss",
        "dockerScript",
        "DockerFileScriptEngineFactory",
        "NAME",
        "taskScript",
        "ss",
        "variablesMap",
        "variablesMap",
        "put",
        "SchedulerVars",
        "PA_JOB_ID",
        "name",
        "variablesMap",
        "put",
        "SchedulerVars",
        "PA_TASK_ID",
        "name",
        "aBindings",
        "Collections",
        "singletonMap",
        "SchedulerConstants",
        "VARIABLES_BINDING_NAME",
        "variablesMap",
        "output",
        "res",
        "taskScript",
        "execute",
        "aBindings",
        "output",
        "output",
        "output",
        "toString",
        "res",
        "getException",
        "Assert",
        "assertFalse",
        "res",
        "errorOccured",
        "Assert",
        "assertTrue",
        "output",
        "toString",
        "contains",
        "DockerFileScriptEngine",
        "DEFAULT_IMAGE_NAME",
        "Assert",
        "assertTrue",
        "output",
        "toString",
        "contains",
        "DockerFileScriptEngine",
        "DEFAULT_CONTAINER_NAME",
        "Test",
        "assumeTrue",
        "dockerCommandExists",
        "dockerScript",
        "DockerFilePropertyLoader",
        "getInstance",
        "setKeepDockerFile",
        "tempDir",
        "Files",
        "createTempDir",
        "ss",
        "dockerScript",
        "DockerFileScriptEngineFactory",
        "NAME",
        "taskScript",
        "ss",
        "aBindings",
        "Collections",
        "singletonMap",
        "SchedulerConstants",
        "DS_SCRATCH_BINDING_NAME",
        "tempDir",
        "getAbsolutePath",
        "output",
        "res",
        "taskScript",
        "execute",
        "aBindings",
        "output",
        "output",
        "output",
        "toString",
        "res",
        "getException",
        "Assert",
        "assertFalse",
        "res",
        "errorOccured",
        "Assert",
        "assertTrue",
        "tempDir",
        "DockerFileCommandCreator",
        "FILENAME",
        "exists",
        "Test",
        "assumeTrue",
        "dockerCommandExists",
        "capturedOutput",
        "getClass",
        "getName",
        "dockerScript",
        "capturedOutput",
        "ss",
        "dockerScript",
        "DockerFileScriptEngineFactory",
        "NAME",
        "taskScript",
        "ss",
        "output",
        "res",
        "taskScript",
        "execute",
        "output",
        "output",
        "output",
        "toString",
        "res",
        "getException",
        "Assert",
        "assertFalse",
        "res",
        "errorOccured",
        "Assert",
        "assertTrue",
        "output",
        "toString",
        "contains",
        "capturedOutput"
    ],
    "literals": [
        "\"docker -v\"",
        "\"docker\"",
        "\"\"",
        "\"FROM ubuntu:18.04\\n\"",
        "\"RUN echo \\\"Hello\\\"\"",
        "\"1\"",
        "\"2\"",
        "\"Script output:\"",
        "\"Script Exception:\"",
        "\"Output should contain the dedicated image name\"",
        "\"_1t2\"",
        "\"Output should contain the dedicated container name\"",
        "\"_1t2\"",
        "\"FROM ubuntu:18.04\\n\"",
        "\"RUN echo \\\"Hello\\\"\"",
        "\"Script output:\"",
        "\"Script Exception:\"",
        "\"Docker file should be created in temp directory\"",
        "\"Hello from \"",
        "\"FROM ubuntu:18.04\\n\"",
        "\"RUN echo \\\"\"",
        "\"\\\"\"",
        "\"Script output:\"",
        "\"Script Exception:\"",
        "\"Captured output should appear\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* ProActive Parallel Suite(TM):\n * The Open Source library for parallel and distributed\n * Workflows & Scheduling, Orchestration, Cloud Automation\n * and Big Data Analysis on Enterprise Grids & Clouds.\n *\n * Copyright (c) 2007 - 2017 ActiveEon\n * Contact: contact@activeeon.com\n *\n * This library is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License\n * as published by the Free Software Foundation: version 3 of\n * the License.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n * If needed, contact us to obtain a release under GPL Version 2 or 3\n * or a different license than the AGPL."
    ],
    "functions": [
        "dockerCommandExists",
        "before",
        "testContainerAndImageShouldUseJobTaskIds",
        "testDockerFileShouldBeCreatedInsideScratchSpace",
        "testContainerOutputShouldBeRetrieved"
    ],
    "classes": [
        "DockerFileScriptEngineTest"
    ]
}