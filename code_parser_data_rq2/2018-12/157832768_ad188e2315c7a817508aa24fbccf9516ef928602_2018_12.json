{
    "identifiers": [
        "guillotina",
        "configure",
        "guillotina",
        "api",
        "service",
        "Service",
        "guillotina",
        "exceptions",
        "ConflictError",
        "guillotina",
        "interfaces",
        "IFolder",
        "guillotina",
        "response",
        "Response",
        "guillotina_batch",
        "api",
        "Batch",
        "json",
        "pytest",
        "os",
        "os",
        "environ",
        "get",
        "container_requester",
        "container_requester",
        "requester",
        "requester",
        "data",
        "json",
        "dumps",
        "status",
        "resp",
        "resp",
        "resp",
        "resp",
        "resp",
        "resp",
        "resp",
        "resp",
        "resp",
        "resp",
        "requester",
        "status",
        "requester",
        "status",
        "configure",
        "service",
        "method",
        "name",
        "context",
        "IFolder",
        "permission",
        "context",
        "request",
        "context",
        "async_get",
        "ob",
        "title",
        "request",
        "_txn",
        "register",
        "ob",
        "request",
        "_tm",
        "commit",
        "request",
        "_txn",
        "register",
        "ob",
        "ob",
        "title",
        "request",
        "_txn",
        "register",
        "ob",
        "pytest",
        "mark",
        "skipif",
        "DATABASE",
        "reason",
        "container_requester",
        "container_requester",
        "requester",
        "requester",
        "data",
        "json",
        "dumps",
        "status",
        "requester",
        "data",
        "json",
        "dumps",
        "status",
        "requester",
        "data",
        "json",
        "dumps",
        "status",
        "resp",
        "requester",
        "status",
        "resp"
    ],
    "literals": [
        "'DATABASE'",
        "'DUMMY'",
        "'POST'",
        "'/db/guillotina/@batch?eager-commit=true'",
        "'method'",
        "'POST'",
        "'endpoint'",
        "''",
        "'payload'",
        "'@type'",
        "'Folder'",
        "'id'",
        "'folder'",
        "'method'",
        "'POST'",
        "'payload'",
        "'@type'",
        "'Item'",
        "'id'",
        "'item'",
        "'endpoint'",
        "'folder'",
        "'method'",
        "'POST'",
        "'payload'",
        "'@type'",
        "'Item'",
        "'id'",
        "'item'",
        "'endpoint'",
        "'folder'",
        "'method'",
        "'POST'",
        "'payload'",
        "'@type'",
        "'Item'",
        "'id'",
        "'another-item'",
        "'endpoint'",
        "'folder'",
        "'method'",
        "'GET'",
        "'endpoint'",
        "'folder/another-item'",
        "'status'",
        "'success'",
        "'status'",
        "'success'",
        "'status'",
        "'success'",
        "'status'",
        "'success'",
        "'status'",
        "'success'",
        "'GET'",
        "'/db/guillotina/folder'",
        "'GET'",
        "'/db/guillotina/folder/item'",
        "\"POST\"",
        "\"@test-retry-logic\"",
        "\"guillotina.AccessContent\"",
        "'bar'",
        "'A beautiful title'",
        "'edit title'",
        "'A beautiful title'",
        "'retry logic works'",
        "'Something is not working as expected'",
        "'DUMMY'",
        "'Not for dummy db'",
        "'POST'",
        "'/db/guillotina/'",
        "'@type'",
        "'Folder'",
        "'id'",
        "'foo'",
        "'POST'",
        "'/db/guillotina/foo'",
        "'@type'",
        "'Item'",
        "'id'",
        "'bar'",
        "'POST'",
        "'/db/guillotina/@batch?eager-commit=true'",
        "'method'",
        "'POST'",
        "'endpoint'",
        "'foo/@test-retry-logic'",
        "'status'",
        "'GET'",
        "'/db/guillotina/foo/bar'",
        "'title'",
        "'retry logic works'"
    ],
    "variables": [
        "DATABASE",
        "resp",
        "status",
        "resp",
        "status",
        "resp",
        "status",
        "ob",
        "ob",
        "title",
        "ob",
        "title",
        "ob",
        "_p_serial",
        "ob",
        "title",
        "resp",
        "status",
        "resp",
        "status",
        "resp",
        "status",
        "resp",
        "status"
    ],
    "comments": [
        "Modify field 'title' and commit change",
        "Simulate a conflict error to test retry logic",
        "should raise conflict error when request._txn.commit()"
    ],
    "docstrings": [
        "\"\"\"\n    First time sets 'title' and produce a conflict when the title is edited.\n    Then this request should be retried automatically and finish successfuly\n    \"\"\""
    ],
    "functions": [
        "test_batch_eager_commit",
        "retry_logic",
        "test_batch_eager_commit_conflict"
    ],
    "classes": []
}