{
    "identifiers": [
        "IntEnum",
        "pack",
        "unpack",
        "calcsize",
        "io",
        "SEEK_CUR",
        "SEEK_SET",
        "SEEK_END",
        "hashlib",
        "md5",
        "sha1",
        "sha256",
        "sha512",
        "binascii",
        "hexlify",
        "_hexlify",
        "unhexlify",
        "ctypes",
        "Structure",
        "BigEndianStructure",
        "b",
        "_hexlify",
        "b",
        "decode",
        "IntEnum",
        "stream",
        "endian",
        "Endian",
        "Endian",
        "LITTLE",
        "reset",
        "set_stream",
        "stream",
        "set_endian",
        "endian",
        "set_io_funcs",
        "exc_type",
        "exc_val",
        "exc_tb",
        "close",
        "length",
        "getvalue",
        "stream",
        "stream",
        "stream",
        "seekable",
        "stream",
        "seekable",
        "endian",
        "Endian",
        "endian",
        "endian",
        "len",
        "endians",
        "endians",
        "endian",
        "name",
        "hasattr",
        "stream",
        "name",
        "getattr",
        "stream",
        "name",
        "name",
        "hasattr",
        "stream",
        "name",
        "getattr",
        "stream",
        "name",
        "read_name",
        "write_name",
        "set_read_func",
        "read_name",
        "set_write_func",
        "write_name",
        "can_tell",
        "stream",
        "tell",
        "NotImplementedError",
        "index",
        "whence",
        "SEEK_SET",
        "can_seek",
        "stream",
        "seek",
        "index",
        "whence",
        "NotImplementedError",
        "stream",
        "seek",
        "stream",
        "seek",
        "SEEK_END",
        "seek_end",
        "tell",
        "seek",
        "prev_loc",
        "stream_len",
        "stream",
        "getvalue",
        "stream",
        "getbuffer",
        "stream",
        "flush",
        "stream",
        "close",
        "num",
        "num",
        "read_func",
        "read_func",
        "num",
        "data",
        "isinstance",
        "data",
        "data",
        "write_func",
        "data",
        "fmt",
        "endian",
        "fmt",
        "unpack",
        "fmt",
        "read",
        "calcsize",
        "fmt",
        "fmt",
        "values",
        "endian",
        "fmt",
        "write",
        "pack",
        "fmt",
        "values",
        "stream_unpack",
        "num",
        "stream_unpack",
        "num",
        "value",
        "stream_pack",
        "value",
        "values",
        "stream_pack",
        "len",
        "values",
        "values",
        "stream_unpack",
        "num",
        "stream_unpack",
        "num",
        "value",
        "stream_pack",
        "value",
        "values",
        "stream_pack",
        "len",
        "values",
        "values",
        "data",
        "write_ubytes",
        "data",
        "stream_unpack",
        "value",
        "stream_pack",
        "value",
        "stream_unpack",
        "read_int16",
        "value",
        "stream_pack",
        "value",
        "value",
        "write_int16",
        "value",
        "stream_unpack",
        "read_uint16",
        "value",
        "stream_pack",
        "value",
        "value",
        "write_uint16",
        "value",
        "stream_unpack",
        "read_int32",
        "read_int32",
        "value",
        "stream_pack",
        "value",
        "value",
        "write_int32",
        "value",
        "value",
        "write_int32",
        "value",
        "stream_unpack",
        "read_uint32",
        "read_uint32",
        "value",
        "stream_pack",
        "value",
        "value",
        "write_uint32",
        "value",
        "value",
        "write_int32",
        "value",
        "stream_unpack",
        "read_int64",
        "value",
        "stream_pack",
        "value",
        "value",
        "write_int64",
        "value",
        "stream_unpack",
        "read_uint64",
        "value",
        "stream_pack",
        "value",
        "value",
        "write_uint64",
        "value",
        "stream_unpack",
        "read_float32",
        "value",
        "stream_pack",
        "value",
        "value",
        "write_float32",
        "value",
        "stream_unpack",
        "read_float64",
        "value",
        "stream_pack",
        "value",
        "value",
        "write_float64",
        "value",
        "read_ubyte",
        "result",
        "i",
        "shift",
        "shift",
        "i",
        "result",
        "num",
        "num",
        "num",
        "num",
        "buff",
        "towrite",
        "buff",
        "towrite",
        "write_ubytes",
        "buff",
        "read_ubyte",
        "result",
        "byte_value",
        "index",
        "byte_value",
        "index",
        "result",
        "value",
        "value",
        "num",
        "data",
        "num",
        "num",
        "data",
        "num",
        "write",
        "data",
        "encoding",
        "read",
        "read_7bit_encoded_int",
        "decode",
        "encoding",
        "encoding",
        "temp",
        "read",
        "output",
        "temp",
        "output",
        "rstrip",
        "decode",
        "encoding",
        "encoding",
        "read_string",
        "encoding",
        "encoding",
        "read_c_string",
        "encoding",
        "value",
        "encoding",
        "write_7bit_encoded_int",
        "len",
        "value",
        "write",
        "value",
        "encode",
        "encoding",
        "value",
        "encoding",
        "write_string",
        "value",
        "encoding",
        "num",
        "hexlify",
        "read",
        "num",
        "value",
        "write",
        "unhexlify",
        "value",
        "read",
        "MD5_DIGEST_LEN",
        "read",
        "SHA1_DIGEST_LEN",
        "read",
        "SHA256_DIGEST_LEN",
        "read",
        "SHA512_DIGEST_LEN",
        "data",
        "md5",
        "data",
        "digest",
        "write",
        "data_hash",
        "data_hash",
        "data",
        "sha1",
        "data",
        "digest",
        "write",
        "data_hash",
        "data_hash",
        "data",
        "sha256",
        "data",
        "digest",
        "write",
        "data_hash",
        "data_hash",
        "data",
        "sha512",
        "data",
        "digest",
        "write",
        "data_hash",
        "data_hash",
        "struct_type",
        "Structure",
        "BigEndianStructure",
        "Structure",
        "BigEndianStructure",
        "struct_type",
        "from_buffer_copy",
        "read",
        "struct_type",
        "struct_obj",
        "Structure",
        "BigEndianStructure",
        "write",
        "struct_obj"
    ],
    "literals": [
        "\"utf8\"",
        "\"<\"",
        "\">\"",
        "\"!\"",
        "\"@\"",
        "\"read\"",
        "\"write\"",
        "\"tell isn't implemented in the specified stream!\"",
        "\"seek isn't implemented in the specified stream!\"",
        "\"b\"",
        "\"b\"",
        "\"b\"",
        "\"b\"",
        "\"B\"",
        "\"B\"",
        "\"B\"",
        "\"B\"",
        "\"?\"",
        "\"?\"",
        "\"h\"",
        "\"h\"",
        "\"H\"",
        "\"H\"",
        "\"i\"",
        "\"i\"",
        "\"I\"",
        "\"I\"",
        "\"q\"",
        "\"q\"",
        "\"Q\"",
        "\"Q\"",
        "\"f\"",
        "\"f\"",
        "\"d\"",
        "\"d\"",
        "b\"\"",
        "b\"\"",
        "\"utf8\"",
        "\"utf8\"",
        "b\"\"",
        "b\"\\x00\"",
        "b\"\\x00\"",
        "\"utf8\"",
        "\"utf8\"",
        "\"utf8\"",
        "\"utf8\""
    ],
    "variables": [
        "MD5_DIGEST_LEN",
        "SHA1_DIGEST_LEN",
        "SHA256_DIGEST_LEN",
        "SHA512_DIGEST_LEN",
        "LITTLE",
        "BIG",
        "NETWORK",
        "NATIVE",
        "stream",
        "endian",
        "read_func",
        "write_func",
        "can_seek",
        "can_tell",
        "stream",
        "endian",
        "read_func",
        "write_func",
        "can_seek",
        "can_tell",
        "stream",
        "can_seek",
        "can_tell",
        "endian",
        "endians",
        "endian",
        "read_func",
        "write_func",
        "prev_loc",
        "stream_len",
        "data",
        "fmt",
        "fmt",
        "shift",
        "result",
        "i",
        "buff",
        "towrite",
        "index",
        "result",
        "byte_value",
        "data",
        "num",
        "temp",
        "output",
        "temp",
        "data_hash",
        "data_hash",
        "data_hash",
        "data_hash"
    ],
    "comments": [
        "I/O functions",
        "attributes",
        "reset",
        "add with functionality",
        "shortcuts",
        "utilities",
        ", *param_types):",
        ", *param_types):",
        "base I/O methods",
        "bytes",
        "ubytes",
        "boolean",
        "int16/short",
        "uint16/ushort",
        "int32/int/long",
        "uint32/uint/ulong",
        "int64/longlong",
        "uint64/ulonglong",
        "float32/single",
        "float64/double",
        "varint",
        "strings",
        "hex",
        "hashing",
        "structures/structs"
    ],
    "docstrings": [
        "\"\"\"\n        Set stream to read/write from/to\n        :param stream: The stream to interact with\n        :return: None\n        \"\"\"",
        "\"\"\"\n        Set the endian you want to use for reading/writing data in the stream\n        :param endian: LITTLE, BIG, NETWORK, or NATIVE\n        :return: None\n        \"\"\"",
        "\"\"\"\n        Set the function name in the stream of the read function\n        :param name: The name of the read function\n        :return: None\n        \"\"\"",
        "\"\"\"\n        Set the function name in the stream of the write function\n        :param name: The name of the write function\n        :return: None\n        \"\"\"",
        "\"\"\"\n        Set the read/write function names in the stream\n        :param read_name: The name of the read function\n        :param write_name: The name of the write function\n        :return: None\n        \"\"\"",
        "\"\"\"\n        Tell the current position of the stream if supported\n        :return: The position of the stream\n        \"\"\"",
        "\"\"\"\n        Jump to a position in the stream if supported\n        :param index: The offset to jump to\n        :param whence: Index is interpreted relative to the position indicated by whence (SEEK_SET, SEEK_CUR, and SEEK_END in io library)\n        :return: The new absolute position\n        \"\"\"",
        "\"\"\"\n        Jump to the beginning of the stream if supported\n        :return: The new absolute position\n        \"\"\"",
        "\"\"\"\n        Jump to the end of the stream if supported\n        :return: The new absolute position\n        \"\"\"",
        "\"\"\"\n        Get the length of the stream if supported\n        :return: The total length of the stream\n        \"\"\"",
        "\"\"\"\n        Get the stream's output\n        :return: The stream's data as bytes or bytearray\n        \"\"\"",
        "\"\"\"\n        Get the stream's buffer\n        :return: The stream's buffer as bytes or bytearray\n        \"\"\"",
        "\"\"\"\n        Write the data to the stream\n        :return: None\n        \"\"\"",
        "\"\"\"\n        Close the stream\n        :return: None\n        \"\"\""
    ],
    "functions": [
        "hexlify",
        "reset",
        "__enter__",
        "__exit__",
        "__len__",
        "__bytes__",
        "set_stream",
        "set_endian",
        "set_read_func",
        "set_write_func",
        "set_io_funcs",
        "tell",
        "seek",
        "seek_start",
        "seek_end",
        "length",
        "getvalue",
        "getbuffer",
        "flush",
        "close",
        "read",
        "write",
        "stream_unpack",
        "stream_pack",
        "read_byte",
        "read_bytes",
        "write_byte",
        "write_bytes",
        "read_ubyte",
        "read_ubytes",
        "write_ubyte",
        "write_ubytes",
        "load_from_buffer",
        "read_bool",
        "write_bool",
        "read_int16",
        "read_short",
        "write_int16",
        "write_short",
        "read_uint16",
        "read_ushort",
        "write_uint16",
        "write_ushort",
        "read_int32",
        "read_int",
        "read_long",
        "write_int32",
        "write_int",
        "write_long",
        "read_uint32",
        "read_uint",
        "read_ulong",
        "write_uint32",
        "write_uint",
        "write_ulong",
        "read_int64",
        "read_longlong",
        "write_int64",
        "write_longlong",
        "read_uint64",
        "read_ulonglong",
        "write_uint64",
        "write_ulonglong",
        "read_float32",
        "read_single",
        "write_float32",
        "write_single",
        "read_float64",
        "read_double",
        "write_float64",
        "write_double",
        "read_varint",
        "write_varint",
        "read_7bit_encoded_int",
        "write_7bit_encoded_int",
        "read_string",
        "read_c_string",
        "read_str",
        "read_c_str",
        "write_string",
        "write_str",
        "read_hex",
        "write_hex",
        "read_md5",
        "read_sha1",
        "read_sha256",
        "read_sha512",
        "write_md5",
        "write_sha1",
        "write_sha256",
        "write_sha512",
        "read_struct",
        "write_struct"
    ],
    "classes": [
        "Endian",
        "StreamIO"
    ]
}