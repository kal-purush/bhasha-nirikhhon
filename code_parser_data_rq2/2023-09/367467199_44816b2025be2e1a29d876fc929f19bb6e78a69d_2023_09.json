{
    "identifiers": [
        "yaml",
        "datetime",
        "datetime",
        "timedelta",
        "time",
        "sleep",
        "paramiko",
        "ssh_exception",
        "ChannelException",
        "pytest",
        "name",
        "datetime",
        "now",
        "strftime",
        "name",
        "pytest",
        "fixture",
        "scope",
        "unique_name",
        "pytest",
        "fixture",
        "scope",
        "unique_name",
        "pytest",
        "fixture",
        "scope",
        "unique_name",
        "pytest",
        "fixture",
        "scope",
        "pytest",
        "fixture",
        "scope",
        "pytest",
        "fixture",
        "scope",
        "api_client",
        "image_opensuse",
        "wait_timeout",
        "unique_name",
        "unique_image_id",
        "image_opensuse",
        "name",
        "api_client",
        "images",
        "create_by_url",
        "unique_image_id",
        "image_opensuse",
        "url",
        "display_name",
        "display_name",
        "code",
        "code",
        "data",
        "datetime",
        "now",
        "timedelta",
        "seconds",
        "wait_timeout",
        "deadline",
        "datetime",
        "now",
        "api_client",
        "images",
        "get",
        "unique_image_id",
        "data",
        "get",
        "get",
        "sleep",
        "AssertionError",
        "code",
        "data",
        "id",
        "data",
        "unique_image_id",
        "user",
        "image_opensuse",
        "ssh_user",
        "api_client",
        "images",
        "unique_image_id",
        "name",
        "api_client",
        "ssh_keypair",
        "image",
        "timeout_secs",
        "ssh_keypair",
        "api_client",
        "vms",
        "Spec",
        "cpu",
        "mem",
        "vm_spec",
        "add_image",
        "image",
        "yaml",
        "safe_load",
        "vm_spec",
        "user_data",
        "pubkey",
        "yaml",
        "dump",
        "userdata",
        "api_client",
        "vms",
        "create",
        "name",
        "vm_spec",
        "datetime",
        "now",
        "timedelta",
        "seconds",
        "timeout_secs",
        "deadline",
        "datetime",
        "now",
        "api_client",
        "vms",
        "get",
        "name",
        "data",
        "get",
        "get",
        "sleep",
        "AssertionError",
        "name",
        "name",
        "image",
        "name",
        "api_client",
        "timeout_secs",
        "api_client",
        "vms",
        "get",
        "name",
        "code",
        "api_client",
        "vms",
        "Spec",
        "from_dict",
        "data",
        "api_client",
        "vms",
        "name",
        "datetime",
        "now",
        "timedelta",
        "seconds",
        "timeout_secs",
        "deadline",
        "datetime",
        "now",
        "api_client",
        "vms",
        "get_status",
        "name",
        "code",
        "sleep",
        "vol",
        "vm_spec",
        "volumes",
        "vol",
        "api_client",
        "volumes",
        "vol_name",
        "name",
        "api_client",
        "timeout_secs",
        "api_client",
        "vms",
        "start",
        "name",
        "datetime",
        "now",
        "timedelta",
        "seconds",
        "timeout_secs",
        "deadline",
        "datetime",
        "now",
        "api_client",
        "vms",
        "get",
        "name",
        "data",
        "get",
        "get",
        "status",
        "sleep",
        "AssertionError",
        "name",
        "name",
        "api_client",
        "timeout_secs",
        "api_client",
        "vms",
        "stop",
        "name",
        "datetime",
        "now",
        "timedelta",
        "seconds",
        "timeout_secs",
        "deadline",
        "datetime",
        "now",
        "api_client",
        "vms",
        "get",
        "name",
        "data",
        "get",
        "get",
        "status",
        "sleep",
        "AssertionError",
        "name",
        "pytest",
        "fixture",
        "scope",
        "sourcevm_name",
        "api_client",
        "ssh_keypair",
        "image",
        "wait_timeout",
        "create_vm",
        "sourcevm_name",
        "api_client",
        "ssh_keypair",
        "image",
        "wait_timeout",
        "delete_vm",
        "sourcevm_name",
        "api_client",
        "wait_timeout",
        "pytest",
        "fixture",
        "scope",
        "api_client",
        "restored_from_snapshot_name",
        "vm_snapshot_name",
        "source_vm",
        "host_shell",
        "vm_shell",
        "ssh_keypair",
        "wait_timeout",
        "source_vm",
        "start_vm",
        "name",
        "api_client",
        "wait_timeout",
        "sh",
        "sh",
        "exec_command",
        "vm_shell_do",
        "name",
        "api_client",
        "host_shell",
        "vm_shell",
        "ssh_user",
        "ssh_keypair",
        "modify",
        "wait_timeout",
        "sleep",
        "stop_vm",
        "name",
        "api_client",
        "wait_timeout",
        "api_client",
        "vm_snapshots",
        "RestoreSpec",
        "for_new",
        "restored_from_snapshot_name",
        "api_client",
        "vm_snapshots",
        "restore",
        "vm_snapshot_name",
        "spec",
        "code",
        "datetime",
        "now",
        "timedelta",
        "seconds",
        "wait_timeout",
        "deadline",
        "datetime",
        "now",
        "api_client",
        "vms",
        "get",
        "restored_from_snapshot_name",
        "code",
        "data",
        "get",
        "get",
        "sleep",
        "AssertionError",
        "restored_from_snapshot_name",
        "restored_from_snapshot_name",
        "ssh_user",
        "delete_vm",
        "restored_from_snapshot_name",
        "api_client",
        "wait_timeout",
        "pytest",
        "fixture",
        "scope",
        "api_client",
        "restored_from_snapshot_name_2",
        "vm_snapshot_name",
        "source_vm",
        "host_shell",
        "vm_shell",
        "ssh_keypair",
        "wait_timeout",
        "source_vm",
        "start_vm",
        "name",
        "api_client",
        "wait_timeout",
        "sh",
        "sh",
        "exec_command",
        "vm_shell_do",
        "name",
        "api_client",
        "host_shell",
        "vm_shell",
        "ssh_user",
        "ssh_keypair",
        "modify",
        "wait_timeout",
        "sleep",
        "stop_vm",
        "name",
        "api_client",
        "wait_timeout",
        "api_client",
        "vm_snapshots",
        "RestoreSpec",
        "for_new",
        "restored_from_snapshot_name_2",
        "api_client",
        "vm_snapshots",
        "restore",
        "vm_snapshot_name",
        "spec",
        "code",
        "datetime",
        "now",
        "timedelta",
        "seconds",
        "wait_timeout",
        "deadline",
        "datetime",
        "now",
        "api_client",
        "vms",
        "get",
        "restored_from_snapshot_name_2",
        "code",
        "data",
        "get",
        "get",
        "sleep",
        "AssertionError",
        "restored_from_snapshot_name_2",
        "restored_from_snapshot_name_2",
        "ssh_user",
        "delete_vm",
        "restored_from_snapshot_name_2",
        "api_client",
        "wait_timeout",
        "name",
        "api_client",
        "host_shell",
        "vm_shell",
        "user",
        "ssh_keypair",
        "action",
        "wait_timeout",
        "ssh_keypair",
        "datetime",
        "now",
        "timedelta",
        "seconds",
        "wait_timeout",
        "deadline",
        "datetime",
        "now",
        "api_client",
        "vms",
        "get_status",
        "name",
        "code",
        "data",
        "get",
        "get",
        "data",
        "get",
        "get",
        "phase",
        "conds",
        "get",
        "data",
        "get",
        "sleep",
        "next",
        "iface",
        "iface",
        "data",
        "iface",
        "api_client",
        "hosts",
        "get",
        "data",
        "next",
        "addr",
        "addr",
        "data",
        "addr",
        "host_shell",
        "login",
        "host_ip",
        "jumphost",
        "h",
        "vm_shell",
        "user",
        "pkey",
        "privatekey",
        "datetime",
        "now",
        "timedelta",
        "seconds",
        "wait_timeout",
        "deadline",
        "datetime",
        "now",
        "vm_sh",
        "connect",
        "vm_ip",
        "jumphost",
        "h",
        "client",
        "ChannelException",
        "e",
        "e",
        "sleep",
        "AssertionError",
        "name",
        "vm_sh",
        "sh",
        "action",
        "sh",
        "pytest",
        "mark",
        "p0",
        "pytest",
        "mark",
        "virtualmachines",
        "pytest",
        "mark",
        "dependency",
        "name",
        "api_client",
        "source_vm",
        "vm_snapshot_name",
        "host_shell",
        "vm_shell",
        "ssh_keypair",
        "wait_timeout",
        "source_vm",
        "sh",
        "sh",
        "exec_command",
        "sh",
        "exec_command",
        "vm_shell_do",
        "name",
        "api_client",
        "host_shell",
        "vm_shell",
        "ssh_user",
        "ssh_keypair",
        "action",
        "wait_timeout",
        "sleep",
        "api_client",
        "vm_snapshots",
        "create",
        "name",
        "vm_snapshot_name",
        "code",
        "datetime",
        "now",
        "timedelta",
        "seconds",
        "wait_timeout",
        "deadline",
        "datetime",
        "now",
        "api_client",
        "vm_snapshots",
        "get",
        "vm_snapshot_name",
        "data",
        "get",
        "get",
        "vm_snapshot_name",
        "sleep",
        "AssertionError",
        "vm_snapshot_name",
        "code",
        "data",
        "get",
        "get",
        "pytest",
        "mark",
        "dependency",
        "depends",
        "api_client",
        "restored_from_snapshot_vm",
        "ssh_keypair",
        "host_shell",
        "vm_shell",
        "wait_timeout",
        "restored_from_snapshot_vm",
        "sh",
        "sh",
        "exec_command",
        "vm_shell_do",
        "name",
        "api_client",
        "host_shell",
        "vm_shell",
        "ssh_user",
        "ssh_keypair",
        "actassert",
        "wait_timeout",
        "pytest",
        "mark",
        "dependency",
        "depends",
        "api_client",
        "source_vm",
        "vm_snapshot_name",
        "wait_timeout",
        "source_vm",
        "stop_vm",
        "name",
        "api_client",
        "wait_timeout",
        "api_client",
        "backups",
        "RestoreSpec",
        "for_existing",
        "delete_volumes",
        "api_client",
        "vm_snapshots",
        "restore",
        "vm_snapshot_name",
        "spec",
        "data",
        "get",
        "wantmsg",
        "reason",
        "code",
        "pytest",
        "mark",
        "dependency",
        "name",
        "depends",
        "api_client",
        "source_vm",
        "vm_snapshot_name",
        "ssh_keypair",
        "host_shell",
        "vm_shell",
        "wait_timeout",
        "source_vm",
        "start_vm",
        "name",
        "api_client",
        "wait_timeout",
        "sh",
        "sh",
        "exec_command",
        "vm_shell_do",
        "name",
        "api_client",
        "host_shell",
        "vm_shell",
        "ssh_user",
        "ssh_keypair",
        "modify",
        "wait_timeout",
        "sleep",
        "stop_vm",
        "name",
        "api_client",
        "wait_timeout",
        "api_client",
        "backups",
        "RestoreSpec",
        "for_existing",
        "delete_volumes",
        "api_client",
        "vm_snapshots",
        "restore",
        "vm_snapshot_name",
        "spec",
        "datetime",
        "now",
        "timedelta",
        "seconds",
        "wait_timeout",
        "deadline",
        "datetime",
        "now",
        "api_client",
        "vms",
        "get",
        "name",
        "code",
        "data",
        "get",
        "get",
        "sleep",
        "data",
        "get",
        "get",
        "sh",
        "sh",
        "exec_command",
        "vm_shell_do",
        "name",
        "api_client",
        "host_shell",
        "vm_shell",
        "ssh_user",
        "ssh_keypair",
        "actassert",
        "wait_timeout",
        "pytest",
        "mark",
        "dependency",
        "name",
        "depends",
        "api_client",
        "restored_vm_2",
        "host_shell",
        "vm_shell",
        "ssh_keypair",
        "wait_timeout",
        "restored_vm_2",
        "sh",
        "sh",
        "exec_command",
        "vm_shell_do",
        "name",
        "api_client",
        "host_shell",
        "vm_shell",
        "ssh_user",
        "ssh_keypair",
        "actassert",
        "wait_timeout",
        "pytest",
        "mark",
        "dependency",
        "name",
        "depends",
        "api_client",
        "vm_snapshot_2_name",
        "source_vm",
        "wait_timeout",
        "source_vm",
        "stop_vm",
        "name",
        "api_client",
        "wait_timeout",
        "api_client",
        "vm_snapshots",
        "create",
        "name",
        "vm_snapshot_2_name",
        "code",
        "datetime",
        "now",
        "timedelta",
        "seconds",
        "wait_timeout",
        "deadline",
        "datetime",
        "now",
        "api_client",
        "vm_snapshots",
        "get",
        "vm_snapshot_2_name",
        "data",
        "get",
        "get",
        "vm_snapshot_2_name",
        "sleep",
        "AssertionError",
        "vm_snapshot_2_name",
        "api_client",
        "vm_snapshots",
        "get",
        "vm_snapshot_2_name",
        "code",
        "data",
        "get",
        "get",
        "pytest",
        "mark",
        "dependency",
        "name",
        "api_client",
        "source_vm",
        "vm_snapshot_name",
        "wait_timeout",
        "api_client",
        "vm_snapshots",
        "get",
        "vm_snapshot_name",
        "code",
        "source_vm",
        "api_client",
        "vms",
        "name",
        "code",
        "snapshot",
        "datetime",
        "now",
        "timedelta",
        "seconds",
        "wait_timeout",
        "deadline",
        "datetime",
        "now",
        "api_client",
        "vm_snapshots",
        "get",
        "snapshot",
        "code",
        "sleep",
        "AssertionError",
        "snapshot",
        "wait_for_snapshot_to_disappear",
        "vm_snapshot_name",
        "pytest",
        "mark",
        "dependency",
        "depends",
        "api_client",
        "source_vm",
        "wait_timeout",
        "source_vm",
        "name",
        "api_client",
        "volumes",
        "get",
        "volumename",
        "code",
        "volumename",
        "api_client",
        "volsnapshots",
        "get",
        "volumesnapshotname",
        "code",
        "data",
        "get",
        "get",
        "get",
        "volumename",
        "ownerpvc",
        "api_client",
        "volumes",
        "volumename",
        "datetime",
        "now",
        "timedelta",
        "seconds",
        "wait_timeout",
        "deadline",
        "datetime",
        "now",
        "api_client",
        "volumes",
        "get",
        "volumename",
        "code",
        "sleep",
        "AssertionError",
        "volumename",
        "api_client",
        "volsnapshots",
        "get",
        "volumesnapshotname",
        "deadline",
        "datetime",
        "now",
        "api_client",
        "volsnapshots",
        "get",
        "volumesnapshotname",
        "code",
        "sleep",
        "AssertionError",
        "volumesnapshotname"
    ],
    "literals": [
        "\"harvester_e2e_tests.fixtures.api_client\"",
        "\"harvester_e2e_tests.fixtures.images\"",
        "\"harvester_e2e_tests.fixtures.virtualmachines\"",
        "f\"{datetime.now().strftime('%m%S%f')}-{name}\"",
        "'%m%S%f'",
        "\"class\"",
        "\"source-vm\"",
        "\"class\"",
        "\"vm-from-snapshot\"",
        "\"class\"",
        "\"vm-from-snapshot-2\"",
        "\"class\"",
        "\"vm-snapshot\"",
        "\"class\"",
        "\"vm-snapshot-2\"",
        "\"module\"",
        "\"image\"",
        "f\"{unique_image_id}-{image_opensuse.name}\"",
        "'status'",
        "'progress'",
        "\"Failed to create Image with error:\\n\"",
        "f\"Status({code}): {data}\"",
        "f\"{data['metadata']['namespace']}/{unique_image_id}\"",
        "'metadata'",
        "'namespace'",
        "\"disk-0\"",
        "\"id\"",
        "\"ssh_authorized_keys\"",
        "\"Running\"",
        "\"status\"",
        "\"printableStatus\"",
        "f\"timed out waiting for {name} to transition to Running\"",
        "\"user\"",
        "\"volume\"",
        "\"persistentVolumeClaim\"",
        "\"claimName\"",
        "\"status\"",
        "\"printableStatus\"",
        "\"Running\"",
        "f\"timed out trying to start {name}\"",
        "\"status\"",
        "\"printableStatus\"",
        "\"Stopped\"",
        "f\"timed out trying to stop {name}\"",
        "\"class\"",
        "\"class\"",
        "\"echo 5678 > test.txt && sync\"",
        "\"Running\"",
        "\"status\"",
        "\"printableStatus\"",
        "\"waiting for restored vm to be running\"",
        "f\"timed out waiting to restore into new VM\"",
        "f\"{restored_from_snapshot_name}\"",
        "\"class\"",
        "\"echo 99999999 > test.txt && sync\"",
        "\"Running\"",
        "\"status\"",
        "\"printableStatus\"",
        "\"waiting for restored vm to be running\"",
        "f\"timed out waiting to restore into new VM\"",
        "f\"{restored_from_snapshot_name_2}\"",
        "\"status\"",
        "\"phase\"",
        "\"status\"",
        "\"conditions\"",
        "\"Running\"",
        "\"AgentConnected\"",
        "\"type\"",
        "\"status\"",
        "\"interfaces\"",
        "\"ipAddress\"",
        "\"status\"",
        "\"interfaces\"",
        "\"name\"",
        "\"default\"",
        "\"status\"",
        "\"nodeName\"",
        "\"address\"",
        "\"status\"",
        "\"addresses\"",
        "\"type\"",
        "\"InternalIP\"",
        "f\"Unable to login to {name}\"",
        "\"source_vm_snapshot\"",
        "\"echo 123 > test.txt\"",
        "\"sync\"",
        "\"status\"",
        "\"readyToUse\"",
        "f\"waiting for {vm_snapshot_name} to be ready\"",
        "f\"timed out waiting for {vm_snapshot_name} to be ready\"",
        "\"status\"",
        "\"readyToUse\"",
        "\"source_vm_snapshot\"",
        "\"cat test.txt\"",
        "\"123\"",
        "\"source_vm_snapshot\"",
        "\"message\"",
        "\"Delete policy with backup type snapshot\"",
        "\" for replacing VM is not supported\"",
        "\"replaced_source_vm\"",
        "\"source_vm_snapshot\"",
        "\"rm -f test.txt && sync\"",
        "\"Running\"",
        "\"status\"",
        "\"printableStatus\"",
        "\"waiting for restored vm to be running\"",
        "\"Running\"",
        "\"status\"",
        "\"printableStatus\"",
        "\"cat test.txt\"",
        "\"123\"",
        "\"detached_source_vm_pvc\"",
        "\"replaced_source_vm\"",
        "\"cat test.txt\"",
        "\"123\"",
        "\"snapshot_created_from_detached_source_vm_pvc\"",
        "\"detached_source_vm_pvc\"",
        "\"status\"",
        "\"readyToUse\"",
        "f\"waiting for {vm_snapshot_2_name} to be ready\"",
        "f\"timed out waiting for {vm_snapshot_2_name} to be ready\"",
        "\"status\"",
        "\"readyToUse\"",
        "\"cleaned_up_after_vm_delete\"",
        "f\"timeout while waiting for {snapshot}\"",
        "f\" to be deleted after its VM was deleted\"",
        "\"snapshot_created_from_detached_source_vm_pvc\"",
        "\"cleaned_up_after_vm_delete\"",
        "f\"{name}-disk-0\"",
        "f\"vm-snapshot-volume-{volumename}\"",
        "\"spec\"",
        "\"source\"",
        "\"persistentVolumeClaimName\"",
        "f\"timed out waiting for {volumename} to be deleted\"",
        "f\"timed out waiting for {volumesnapshotname} to be deleted\""
    ],
    "variables": [
        "pytest_plugins",
        "unique_image_id",
        "display_name",
        "code",
        "data",
        "deadline",
        "code",
        "data",
        "code",
        "data",
        "cpu",
        "mem",
        "pubkey",
        "_",
        "vm_spec",
        "userdata",
        "userdata",
        "vm_spec",
        "user_data",
        "_",
        "data",
        "deadline",
        "_",
        "data",
        "code",
        "data",
        "vm_spec",
        "deadline",
        "code",
        "data",
        "vol_name",
        "_",
        "data",
        "deadline",
        "_",
        "data",
        "status",
        "_",
        "data",
        "deadline",
        "_",
        "data",
        "status",
        "name",
        "ssh_user",
        "_",
        "_",
        "spec",
        "code",
        "data",
        "deadline",
        "code",
        "data",
        "name",
        "ssh_user",
        "_",
        "_",
        "spec",
        "code",
        "data",
        "deadline",
        "code",
        "data",
        "_",
        "privatekey",
        "deadline",
        "code",
        "data",
        "phase",
        "conds",
        "vm_ip",
        "code",
        "data",
        "host_ip",
        "vm_sh",
        "deadline",
        "name",
        "ssh_user",
        "_",
        "_",
        "_",
        "_",
        "code",
        "_",
        "deadline",
        "code",
        "data",
        "name",
        "ssh_user",
        "_",
        "name",
        "_",
        "spec",
        "code",
        "data",
        "reason",
        "wantmsg",
        "name",
        "ssh_user",
        "_",
        "_",
        "spec",
        "code",
        "data",
        "deadline",
        "code",
        "data",
        "_",
        "name",
        "ssh_user",
        "_",
        "name",
        "_",
        "code",
        "_",
        "deadline",
        "code",
        "data",
        "code",
        "data",
        "code",
        "_",
        "name",
        "_",
        "code",
        "_",
        "deadline",
        "code",
        "_",
        "name",
        "_",
        "volumename",
        "code",
        "_",
        "volumesnapshotname",
        "code",
        "data",
        "ownerpvc",
        "code",
        "_",
        "deadline",
        "code",
        "_",
        "code",
        "_",
        "code",
        "_"
    ],
    "comments": [
        "Just to wait for `sync`",
        "Just to wait for `sync`",
        "Since `sync` isn't actually synchronous, wait a couple of",
        "seconds to let the I/O flush to disk.",
        "Just to wait for `sync`",
        "First, assert that the expected volume exists.",
        "And assert that it has a volume snapshot associated with it.",
        "Then delete the volume and wait for it to disappear.",
        "Finally, wait for the volume snapshot to be cleaned up",
        "automatically."
    ],
    "docstrings": [
        "\"\"\"\n        Test that the VM snapshot can be created.\n\n        Prerequisite:\n        A virtual machine has been created and is running.\n        \"\"\"",
        "\"\"\"\n        Test that restoring the `vm-snapshot` into a new virtual\n        machine results in a virtual machine with the expected\n        well-known file (`test.txt`) with the expected contents\n        (`123`).\n\n        Prerequisites:\n        1. The source VM from the first test case and its\n           snapshot (`vm-snapshot`).\n        \"\"\"",
        "\"\"\"\n        Test that the Harvester API rejects a `replace`\n        VirtualMachineRestore where the deletePolicy is\n        not `retain`.\n\n        Prequisites:\n        1. The original VM (`source-vm`) and snapshot (`vm-snapshot`)\n        from the first test case.\n        \"\"\"",
        "\"\"\"\n        Test that the original virtual machine can be replaced\n        from its original snapshot (`vm-snapshot`) and that\n        the snapshot's data contains the well-known file (`test.txt`)\n        and its expected contents (`123`).\n\n        Prerequisites:\n        `vm-snapshot` VM snapshot exists.\n        \"\"\"",
        "\"\"\"\n        Test that a new virtual machine can be created from a\n        VM snapshot created from a source PersistentVolumeClaim\n        that is now detached.\n\n        Prerequisites:\n        The original VM (`source-vm`) exists and is stopped (so that\n        the PVC is detached.)\n\n        The original snapshot (`vm-snapshot`) exists.\n        \"\"\"",
        "\"\"\"\n        Test that a VM snapshot can be created when the source\n        PVC is detached.\n\n        Prerequisites:\n        The original VM (`source-vm`) exists and is stopped (so that\n        the PVC is detached.)\n        \"\"\"",
        "\"\"\"\n        Test that VM snapshots are removed when the VM they correspond\n        to have been deleted.\n\n        Prerequisites:\n        The original VM (`source-vm`) exists and so does its first\n        snapshot (`vm-snapshot`).\n\n        Assert that the snapshot exists, then delete the VM\n        and assert that the snapshot has been removed.\n        \"\"\"",
        "\"\"\"\n        Test that any volume snapshots that result from taking\n        a VM snapshot while the PVC is detached are cleaned up\n        after the volume is deleted.\n\n        Prerequisites:\n        The volume from the original VM (`source-vm`) exists\n        and is not attached because the original VM was replaced\n        and the deletePolicy was `retain`.\n        \"\"\""
    ],
    "functions": [
        "unique_name",
        "sourcevm_name",
        "restored_from_snapshot_name",
        "restored_from_snapshot_name_2",
        "vm_snapshot_name",
        "vm_snapshot_2_name",
        "image",
        "create_vm",
        "delete_vm",
        "start_vm",
        "stop_vm",
        "source_vm",
        "restored_from_snapshot_vm",
        "modify",
        "restored_vm_2",
        "modify",
        "vm_shell_do",
        "test_vm_snapshot_create",
        "action",
        "test_restore_into_new_vm_from_vm_snapshot",
        "actassert",
        "test_replace_is_rejected_when_deletepolicy_is_retain",
        "test_replace_vm_with_vm_snapshot",
        "modify",
        "actassert",
        "test_restore_from_vm_snapshot_while_pvc_detached_from_source",
        "actassert",
        "test_create_vm_snapshot_while_pvc_detached",
        "test_vm_snapshots_are_cleaned_up_after_source_vm_deleted",
        "wait_for_snapshot_to_disappear",
        "test_volume_snapshots_are_cleaned_up_after_source_volume_deleted"
    ],
    "classes": [
        "TestVMSnapshot"
    ]
}