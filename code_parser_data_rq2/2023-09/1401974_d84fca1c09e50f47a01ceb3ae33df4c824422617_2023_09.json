{
    "identifiers": [
        "argparse",
        "logging",
        "os",
        "pathlib",
        "re",
        "pathlib",
        "Path",
        "parent",
        "parent",
        "base_path",
        "base_path",
        "base_path",
        "re",
        "compile",
        "re",
        "compile",
        "logging",
        "getLogger",
        "argv",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_subparsers",
        "required",
        "subparsers",
        "add_parser",
        "help",
        "combine_parser",
        "add_argument",
        "argparse",
        "FileType",
        "_default_output_path",
        "combine_parser",
        "set_defaults",
        "func",
        "combine",
        "parser",
        "parse_args",
        "argv",
        "args",
        "func",
        "args",
        "path",
        "seen_files",
        "path",
        "seen_files",
        "seen_files",
        "add",
        "path",
        "line",
        "path",
        "open",
        "match",
        "_RELATIVE_IMPORT_RE",
        "match",
        "line",
        "name",
        "match",
        "group",
        "split",
        "name",
        "strip",
        "names",
        "add",
        "name",
        "_read_file",
        "src_path",
        "name",
        "seen_files",
        "_clean_line",
        "line",
        "names",
        "line",
        "names",
        "names",
        "join",
        "names",
        "re",
        "sub",
        "joined_names",
        "line",
        "_USELESS_ASSIGNMENT_RE",
        "sub",
        "line",
        "args",
        "args",
        "output_file",
        "pathlib",
        "Path",
        "output_file",
        "name",
        "parent",
        "mkdir",
        "parents",
        "exist_ok",
        "output_file",
        "write",
        "_TEXT_TEMPLATE",
        "format",
        "base_path",
        "read_text",
        "output_file",
        "write",
        "_TEXT_TEMPLATE",
        "format",
        "base_path",
        "read_text",
        "line",
        "_read_file",
        "src_path",
        "seen_files",
        "output_file",
        "write",
        "line",
        "output_file",
        "flush",
        "output_file",
        "close",
        "logger",
        "info",
        "output_file",
        "name",
        "os",
        "system",
        "output_file",
        "name",
        "os",
        "system",
        "output_file",
        "name",
        "os",
        "system",
        "output_file",
        "name",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "INFO",
        "main"
    ],
    "literals": [
        "'portalocker'",
        "'dist'",
        "'dist'",
        "'portalocker.py'",
        "r'^from \\. import (?P<names>.+)$'",
        "r'^(?P<name>\\w+) = \\1\\n$'",
        "'combine'",
        "'Combine all Python files into a single unified `portalocker.py` '",
        "'file for easy distribution'",
        "'--output-file'",
        "'-o'",
        "'w'",
        "'names'",
        "','",
        "f'{name}.py'",
        "'|'",
        "fr'\\b({joined_names})\\.'",
        "''",
        "''",
        "'README.rst'",
        "'LICENSE'",
        "'__init__.py'",
        "f'Wrote combined file to {output_file.name}'",
        "f'black {output_file.name}'",
        "f'ruff --fix {output_file.name}'",
        "f'python3 {output_file.name}'",
        "'__main__'"
    ],
    "variables": [
        "base_path",
        "src_path",
        "dist_path",
        "_default_output_path",
        "_RELATIVE_IMPORT_RE",
        "_USELESS_ASSIGNMENT_RE",
        "_TEXT_TEMPLATE",
        "logger",
        "parser",
        "subparsers",
        "combine_parser",
        "args",
        "names",
        "name",
        "joined_names",
        "line",
        "output_file",
        "seen_files"
    ],
    "comments": [
        "Replace `some_import.spam` with `spam`",
        "Replace useless assignments (e.g. `spam = spam`)",
        "Run black and ruff if available. If not then just run the file."
    ],
    "docstrings": [
        "\"\"\"'''\n{}\n'''\n\n\"\"\""
    ],
    "functions": [
        "main",
        "_read_file",
        "_clean_line",
        "combine"
    ],
    "classes": []
}