{
    "identifiers": [
        "com",
        "github",
        "eyefloaters",
        "api",
        "java",
        "util",
        "java",
        "util",
        "Consumer",
        "jakarta",
        "inject",
        "Inject",
        "jakarta",
        "inject",
        "Named",
        "jakarta",
        "validation",
        "Valid",
        "jakarta",
        "ws",
        "rs",
        "BeanParam",
        "jakarta",
        "ws",
        "rs",
        "DefaultValue",
        "jakarta",
        "ws",
        "rs",
        "GET",
        "jakarta",
        "ws",
        "rs",
        "Path",
        "jakarta",
        "ws",
        "rs",
        "PathParam",
        "jakarta",
        "ws",
        "rs",
        "Produces",
        "jakarta",
        "ws",
        "rs",
        "QueryParam",
        "jakarta",
        "ws",
        "rs",
        "core",
        "MediaType",
        "jakarta",
        "ws",
        "rs",
        "core",
        "Response",
        "org",
        "eclipse",
        "microprofile",
        "openapi",
        "annotations",
        "Operation",
        "org",
        "eclipse",
        "microprofile",
        "openapi",
        "annotations",
        "enums",
        "Explode",
        "org",
        "eclipse",
        "microprofile",
        "openapi",
        "annotations",
        "enums",
        "SchemaType",
        "org",
        "eclipse",
        "microprofile",
        "openapi",
        "annotations",
        "media",
        "Schema",
        "org",
        "eclipse",
        "microprofile",
        "openapi",
        "annotations",
        "parameters",
        "Parameter",
        "org",
        "eclipse",
        "microprofile",
        "openapi",
        "annotations",
        "responses",
        "APIResponse",
        "org",
        "eclipse",
        "microprofile",
        "openapi",
        "annotations",
        "responses",
        "APIResponseSchema",
        "org",
        "eclipse",
        "microprofile",
        "openapi",
        "annotations",
        "tags",
        "Tag",
        "com",
        "github",
        "eyefloaters",
        "api",
        "model",
        "KafkaRecord",
        "com",
        "github",
        "eyefloaters",
        "api",
        "model",
        "RecordFilterParams",
        "com",
        "github",
        "eyefloaters",
        "api",
        "service",
        "RecordService",
        "com",
        "github",
        "eyefloaters",
        "api",
        "support",
        "ErrorCategory",
        "com",
        "github",
        "eyefloaters",
        "api",
        "support",
        "FieldFilter",
        "com",
        "github",
        "eyefloaters",
        "api",
        "support",
        "KafkaUuid",
        "com",
        "github",
        "eyefloaters",
        "api",
        "support",
        "StringEnumeration",
        "Path",
        "Tag",
        "name",
        "FIELDS_PARAM",
        "Inject",
        "recordService",
        "Inject",
        "Named",
        "requestedFields",
        "GET",
        "Produces",
        "MediaType",
        "APPLICATION_JSON",
        "Operation",
        "summary",
        "description",
        "Parameter",
        "name",
        "description",
        "APIResponseSchema",
        "value",
        "responseDescription",
        "APIResponse",
        "responseCode",
        "APIResponse",
        "responseCode",
        "APIResponse",
        "responseCode",
        "Parameter",
        "description",
        "PathParam",
        "clusterId",
        "PathParam",
        "KafkaUuid",
        "category",
        "ErrorCategory",
        "RESOURCE_NOT_FOUND",
        "message",
        "Parameter",
        "description",
        "topicId",
        "Valid",
        "BeanParam",
        "QueryParam",
        "FIELDS_PARAM",
        "DefaultValue",
        "KafkaRecord",
        "Fields",
        "DEFAULT",
        "StringEnumeration",
        "source",
        "FIELDS_PARAM",
        "allowedValues",
        "KafkaRecord",
        "Fields",
        "PARTITION",
        "KafkaRecord",
        "Fields",
        "OFFSET",
        "KafkaRecord",
        "Fields",
        "TIMESTAMP",
        "KafkaRecord",
        "Fields",
        "TIMESTAMP_TYPE",
        "KafkaRecord",
        "Fields",
        "HEADERS",
        "KafkaRecord",
        "Fields",
        "KEY",
        "KafkaRecord",
        "Fields",
        "VALUE",
        "category",
        "ErrorCategory",
        "INVALID_QUERY_PARAMETER",
        "Parameter",
        "description",
        "FieldFilter",
        "FIELDS_DESCR",
        "explode",
        "Explode",
        "FALSE",
        "allowEmptyValue",
        "schema",
        "Schema",
        "SchemaType",
        "ARRAY",
        "implementation",
        "enumeration",
        "KafkaRecord",
        "Fields",
        "PARTITION",
        "KafkaRecord",
        "Fields",
        "OFFSET",
        "KafkaRecord",
        "Fields",
        "TIMESTAMP",
        "KafkaRecord",
        "Fields",
        "TIMESTAMP_TYPE",
        "KafkaRecord",
        "Fields",
        "HEADERS",
        "KafkaRecord",
        "Fields",
        "KEY",
        "KafkaRecord",
        "Fields",
        "VALUE",
        "fields",
        "requestedFields",
        "accept",
        "fields",
        "result",
        "recordService",
        "consumeRecords",
        "topicId",
        "getPartition",
        "getOffset",
        "getTimestamp",
        "getLimit",
        "fields",
        "getMaxValueLength",
        "Response",
        "ok",
        "result",
        "build"
    ],
    "literals": [
        "\"/api/kafkas/{clusterId}/topics/{topicId}/records\"",
        "\"Kafka Cluster Resources\"",
        "\"fields[records]\"",
        "\"requestedFields\"",
        "\"Consume records from a topic\"",
        "\"Consume a limited number of records from a topic, optionally specifying a partition and an absolute offset or timestamp as the starting point for message retrieval.\"",
        "\"topicName\"",
        "\"Topic name\"",
        "\"List of records matching the request query parameters.\"",
        "\"404\"",
        "\"NotFound\"",
        "\"500\"",
        "\"ServerError\"",
        "\"504\"",
        "\"ServerTimeout\"",
        "\"Cluster identifier\"",
        "\"clusterId\"",
        "\"topicId\"",
        "\"No such topic\"",
        "\"Topic identifier\""
    ],
    "variables": [
        "recordService",
        "requestedFields"
    ],
    "comments": [],
    "docstrings": [
        "* Allows the value of {@link FieldFilter#requestedFields} to be set for\n     * the request."
    ],
    "functions": [
        "Response",
        "consumeRecords"
    ],
    "classes": [
        "RecordsResource"
    ]
}