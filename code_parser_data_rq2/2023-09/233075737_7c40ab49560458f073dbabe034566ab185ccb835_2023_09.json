{
    "identifiers": [
        "time",
        "time",
        "os",
        "argparse",
        "datetime",
        "datetime",
        "timedelta",
        "logging",
        "json",
        "numpy",
        "np",
        "pyschism",
        "mesh",
        "Hgrid",
        "pyschism",
        "forcing",
        "bctides",
        "Bctides",
        "logging",
        "basicConfig",
        "format",
        "force",
        "logging",
        "getLogger",
        "setLevel",
        "logging",
        "DEBUG",
        "arg",
        "arg",
        "split",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "datetime",
        "fromisoformat",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "list_of_strings",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "args",
        "hgrid",
        "args",
        "start_date",
        "args",
        "rnday",
        "args",
        "bctypes",
        "args",
        "constituents",
        "args",
        "database",
        "json",
        "loads",
        "bctypes",
        "flags",
        "json",
        "JSONDecodeError",
        "input",
        "add_earth_tidal_potential",
        "ibnd",
        "flag",
        "flags",
        "i",
        "i",
        "flag",
        "iettype",
        "input",
        "ibnd",
        "ethconst",
        "append",
        "val",
        "ethconst",
        "append",
        "np",
        "nan",
        "ifltype",
        "input",
        "ibnd",
        "vthconst",
        "append",
        "val",
        "ifltype",
        "input",
        "ibnd",
        "relax",
        "append",
        "val",
        "input",
        "ibnd",
        "relax",
        "append",
        "val",
        "vthconst",
        "append",
        "np",
        "nan",
        "itetype",
        "input",
        "ibnd",
        "tthconst",
        "append",
        "val",
        "input",
        "ibnd",
        "tobc",
        "append",
        "val",
        "itetype",
        "itetype",
        "itetype",
        "tthconst",
        "append",
        "np",
        "nan",
        "input",
        "ibnd",
        "tobc",
        "append",
        "val",
        "tthconst",
        "append",
        "np",
        "nan",
        "tobc",
        "append",
        "np",
        "nan",
        "isatype",
        "input",
        "ibnd",
        "sthconst",
        "append",
        "val",
        "input",
        "ibnd",
        "sobc",
        "append",
        "val",
        "isatype",
        "isatype",
        "isatype",
        "sthconst",
        "append",
        "np",
        "nan",
        "input",
        "ibnd",
        "sobc",
        "append",
        "val",
        "sthconst",
        "append",
        "np",
        "nan",
        "sobc",
        "append",
        "np",
        "nan",
        "Hgrid",
        "open",
        "hgrid_filename",
        "crs",
        "Bctides",
        "hgrid",
        "hgrid",
        "flags",
        "flags",
        "constituents",
        "constituents",
        "database",
        "database",
        "add_earth_tidal",
        "earth_tidal_potential",
        "ethconst",
        "ethconst",
        "vthconst",
        "vthconst",
        "tthconst",
        "tthconst",
        "sthconst",
        "sthconst",
        "tobc",
        "tobc",
        "sobc",
        "sobc",
        "relax",
        "relax",
        "bctides",
        "write",
        "outdir",
        "start_date",
        "start_date",
        "rnday",
        "rnday",
        "overwrite"
    ],
    "literals": [
        "\"[%(asctime)s] %(name)s %(levelname)s: %(message)s\"",
        "\"pyschism\"",
        "','",
        "\"__main__\"",
        "\"Create bctides.in for SCHISM with command-line arguments! e.g. python test_bctides.py hgrid.gr3 2014-12-01 397 '[[5,5,4,4],[5,5,4,4],[0,1,1,2]]' major fes2014\"",
        "'hgrid'",
        "'hgrid (lon/lat) file'",
        "'start_date'",
        "'model startdate'",
        "'rnday'",
        "'model rnday'",
        "'bctypes'",
        "\"JSON format for Flags for each open boundary, '[[5,5,4,4],[5,5,4,4],[0,1,1,2]]'\"",
        "'constituents'",
        "\"Choose tidal constituents to be included, major, minor, or list of constituents ['K1', 'O1', 'M2']\"",
        "'database'",
        "'Tidal datbase: tpxo or fes2014'",
        "\"Parsed bctype list:\"",
        "\"Invalid JSON format for bctype list.\"",
        "\"Would you like to add earth tidal potential? Y/N: \"",
        "\"Y\"",
        "f\"Elevation value at boundary {ibnd+1}: \"",
        "f\"Discharge value (negative for inflow) at boundary {ibnd+1}: \"",
        "f\"Relaxation constants (between 0 and 1) for inflow at boundary {ibnd+1}: \"",
        "f\"Relaxation constants (between 0 and 1) for outflow at boundary {ibnd+1}: \"",
        "f\"Temperature value at boundary {ibnd+1}: \"",
        "f\"Nuding factor (between 0 and 1) for temperature at boundary {ibnd+1}: \"",
        "f\"Nuding factor (between 0 and 1) for temperature at boundary {ibnd+1}: \"",
        "f\"Salinity value at boundary {ibnd+1}: \"",
        "f\"Nuding factor (between 0 and 1) for salinity at boundary {ibnd+1}: \"",
        "f\"Nuding factor (between 0 and 1) for salinity at boundary {ibnd+1}: \"",
        "'./'",
        "\"epsg:4326\""
    ],
    "variables": [
        "parser",
        "args",
        "hgrid_filename",
        "start_date",
        "rnday",
        "bctypes",
        "constituents",
        "database",
        "flags",
        "add_earth_tidal_potential",
        "earth_tidal_potential",
        "earth_tidal_potential",
        "ethconst",
        "vthconst",
        "tthconst",
        "sthconst",
        "tobc",
        "sobc",
        "relax",
        "iettype",
        "ifltype",
        "itetype",
        "isatype",
        "val",
        "val",
        "val",
        "val",
        "val",
        "val",
        "val",
        "val",
        "val",
        "val",
        "outdir",
        "hgrid",
        "bctides"
    ],
    "comments": [
        "Add arguments",
        "Parse the command-line arguments",
        "Parse the JSON string into a Python data structure",
        "earth tidal potential",
        "Check if constant values needed"
    ],
    "docstrings": [
        "'''\n    Assume files are already located in:\n    database='fes2014'\n        ~/.local/share/fes2014/eastward_velocity/\n        ~/.local/share/fes2014/northward_velocity/  \n        ~/.local/share/fes2014/ocean_tide_extrapolated/\n    database = 'tpxo'\n        ~/.local/share/tpxo/\n    '''"
    ],
    "functions": [
        "list_of_strings"
    ],
    "classes": []
}