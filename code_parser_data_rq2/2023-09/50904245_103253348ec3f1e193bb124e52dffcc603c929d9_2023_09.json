{
    "identifiers": [
        "org",
        "apache",
        "beam",
        "sdk",
        "io",
        "gcp",
        "bigquery",
        "org",
        "hamcrest",
        "MatcherAssert",
        "assertThat",
        "org",
        "hamcrest",
        "Matchers",
        "containsInAnyOrder",
        "org",
        "junit",
        "Assert",
        "assertEquals",
        "org",
        "junit",
        "Assume",
        "assumeTrue",
        "com",
        "google",
        "api",
        "services",
        "bigquery",
        "model",
        "Table",
        "com",
        "google",
        "api",
        "services",
        "bigquery",
        "model",
        "TableFieldSchema",
        "com",
        "google",
        "api",
        "services",
        "bigquery",
        "model",
        "TableReference",
        "com",
        "google",
        "api",
        "services",
        "bigquery",
        "model",
        "TableRow",
        "com",
        "google",
        "api",
        "services",
        "bigquery",
        "model",
        "TableSchema",
        "java",
        "io",
        "java",
        "nio",
        "charset",
        "StandardCharsets",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "java",
        "util",
        "Random",
        "java",
        "util",
        "stream",
        "Collectors",
        "org",
        "apache",
        "beam",
        "sdk",
        "Pipeline",
        "org",
        "apache",
        "beam",
        "sdk",
        "extensions",
        "gcp",
        "options",
        "GcpOptions",
        "org",
        "apache",
        "beam",
        "sdk",
        "io",
        "gcp",
        "bigquery",
        "BigQueryIO",
        "Write",
        "org",
        "apache",
        "beam",
        "sdk",
        "io",
        "gcp",
        "bigquery",
        "BigQueryIO",
        "Write",
        "CreateDisposition",
        "org",
        "apache",
        "beam",
        "sdk",
        "io",
        "gcp",
        "bigquery",
        "BigQueryIO",
        "Write",
        "WriteDisposition",
        "org",
        "apache",
        "beam",
        "sdk",
        "io",
        "gcp",
        "testing",
        "BigqueryClient",
        "org",
        "apache",
        "beam",
        "sdk",
        "options",
        "ExperimentalOptions",
        "org",
        "apache",
        "beam",
        "sdk",
        "schemas",
        "Schema",
        "org",
        "apache",
        "beam",
        "sdk",
        "testing",
        "TestPipeline",
        "org",
        "apache",
        "beam",
        "sdk",
        "testing",
        "TestPipelineOptions",
        "org",
        "apache",
        "beam",
        "sdk",
        "transforms",
        "MapElements",
        "org",
        "apache",
        "beam",
        "sdk",
        "transforms",
        "PeriodicImpulse",
        "org",
        "apache",
        "beam",
        "sdk",
        "transforms",
        "SerializableFunction",
        "org",
        "apache",
        "beam",
        "sdk",
        "values",
        "PCollection",
        "org",
        "apache",
        "beam",
        "sdk",
        "values",
        "Row",
        "org",
        "apache",
        "beam",
        "sdk",
        "values",
        "TypeDescriptor",
        "org",
        "apache",
        "beam",
        "sdk",
        "values",
        "TypeDescriptors",
        "org",
        "apache",
        "beam",
        "sdk",
        "values",
        "ValueInSingleWindow",
        "org",
        "apache",
        "beam",
        "vendor",
        "guava",
        "v32_1_2_jre",
        "com",
        "google",
        "common",
        "Splitter",
        "org",
        "apache",
        "beam",
        "vendor",
        "guava",
        "v32_1_2_jre",
        "com",
        "google",
        "common",
        "collect",
        "ImmutableList",
        "org",
        "apache",
        "beam",
        "vendor",
        "guava",
        "v32_1_2_jre",
        "com",
        "google",
        "common",
        "collect",
        "Iterables",
        "org",
        "checkerframework",
        "checker",
        "nullness",
        "qual",
        "org",
        "joda",
        "time",
        "Duration",
        "org",
        "joda",
        "time",
        "Instant",
        "org",
        "junit",
        "AfterClass",
        "org",
        "junit",
        "BeforeClass",
        "org",
        "junit",
        "Rule",
        "org",
        "junit",
        "Test",
        "org",
        "junit",
        "rules",
        "TestName",
        "org",
        "junit",
        "runner",
        "RunWith",
        "org",
        "junit",
        "runners",
        "Parameterized",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "RunWith",
        "LOG",
        "LoggerFactory",
        "getLogger",
        "Parameterized",
        "Parameters",
        "ImmutableList",
        "of",
        "Parameterized",
        "Parameter",
        "useInputSchema",
        "Rule",
        "testName",
        "BQ_CLIENT",
        "PROJECT",
        "TestPipeline",
        "testingPipelineOptions",
        "getProject",
        "BIG_QUERY_DATASET_ID",
        "nanoTime",
        "FIELDS",
        "TOTAL_N",
        "randomGenerator",
        "BeforeClass",
        "cleanUp",
        "BQ_CLIENT",
        "createNewDataset",
        "PROJECT",
        "BIG_QUERY_DATASET_ID",
        "AfterClass",
        "BQ_CLIENT",
        "deleteDataset",
        "PROJECT",
        "BIG_QUERY_DATASET_ID",
        "fieldNames",
        "fieldNames",
        "fieldNames",
        "fieldNames",
        "Override",
        "rowId",
        "row",
        "row",
        "rowId",
        "name",
        "fieldNames",
        "Iterables",
        "get",
        "Splitter",
        "on",
        "split",
        "name",
        "rowId",
        "row",
        "name",
        "row",
        "name",
        "row",
        "name",
        "format",
        "rowId",
        "getBytes",
        "StandardCharsets",
        "UTF_8",
        "row",
        "name",
        "valueOf",
        "rowId",
        "row",
        "name",
        "valueOf",
        "rowId",
        "row",
        "name",
        "valueOf",
        "rowId",
        "row",
        "name",
        "row",
        "name",
        "row",
        "name",
        "rowId",
        "row",
        "name",
        "rowId",
        "row",
        "fieldNames",
        "builder",
        "ImmutableList",
        "builder",
        "builder",
        "add",
        "setType",
        "setName",
        "setMode",
        "name",
        "fieldNames",
        "mode",
        "builder",
        "add",
        "setType",
        "name",
        "setName",
        "name",
        "setMode",
        "mode",
        "setFields",
        "builder",
        "build",
        "tableSchema",
        "suffix",
        "tableId",
        "Iterables",
        "get",
        "Splitter",
        "on",
        "split",
        "testName",
        "getMethodName",
        "BQ_CLIENT",
        "deleteTable",
        "PROJECT",
        "BIG_QUERY_DATASET_ID",
        "tableId",
        "suffix",
        "useInputSchema",
        "BQ_CLIENT",
        "createNewTable",
        "PROJECT",
        "BIG_QUERY_DATASET_ID",
        "setSchema",
        "tableSchema",
        "setTableReference",
        "setTableId",
        "tableId",
        "suffix",
        "setDatasetId",
        "BIG_QUERY_DATASET_ID",
        "setProjectId",
        "PROJECT",
        "tableId",
        "format",
        "PROJECT",
        "BIG_QUERY_DATASET_ID",
        "tableId",
        "suffix",
        "numFileShards",
        "useCopyJobs",
        "opts",
        "TestPipeline",
        "testingPipelineOptions",
        "opts",
        "setTempLocation",
        "opts",
        "getTempRoot",
        "p",
        "Pipeline",
        "create",
        "opts",
        "p",
        "getOptions",
        "getRunner",
        "getName",
        "contains",
        "assumeTrue",
        "useInputSchema",
        "ExperimentalOptions",
        "addExperiment",
        "p",
        "getOptions",
        "GcpOptions",
        "STREAMING_ENGINE_EXPERIMENT",
        "fieldNamesOrigin",
        "Arrays",
        "asList",
        "FIELDS",
        "fieldNamesShuffled",
        "fieldNamesOrigin",
        "Collections",
        "shuffle",
        "fieldNamesShuffled",
        "randomGenerator",
        "bqTableSchema",
        "makeTableSchemaFromTypes",
        "fieldNamesOrigin",
        "inputSchema",
        "makeTableSchemaFromTypes",
        "fieldNamesShuffled",
        "tableSpec",
        "maybeCreateTable",
        "bqTableSchema",
        "start",
        "generateRowFunc",
        "fieldNamesShuffled",
        "instants",
        "p",
        "apply",
        "PeriodicImpulse",
        "create",
        "startAt",
        "start",
        "stopAt",
        "start",
        "plus",
        "Duration",
        "standardSeconds",
        "TOTAL_N",
        "withInterval",
        "Duration",
        "standardSeconds",
        "catchUpToNow",
        "rows",
        "instants",
        "apply",
        "MapElements",
        "into",
        "TypeDescriptor",
        "of",
        "via",
        "instant",
        "generateRowFunc",
        "apply",
        "instant",
        "getMillis",
        "write",
        "BigQueryIO",
        "writeTableRows",
        "to",
        "tableSpec",
        "withMethod",
        "Write",
        "Method",
        "FILE_LOADS",
        "withTriggeringFrequency",
        "Duration",
        "standardSeconds",
        "useCopyJobs",
        "write",
        "write",
        "withMaxBytesPerPartition",
        "useInputSchema",
        "write",
        "write",
        "withSchema",
        "inputSchema",
        "withCreateDisposition",
        "CreateDisposition",
        "CREATE_IF_NEEDED",
        "withWriteDisposition",
        "WriteDisposition",
        "WRITE_TRUNCATE",
        "write",
        "write",
        "withCreateDisposition",
        "CreateDisposition",
        "CREATE_NEVER",
        "withWriteDisposition",
        "WriteDisposition",
        "WRITE_APPEND",
        "write",
        "numFileShards",
        "write",
        "withAutoSharding",
        "write",
        "withNumFileShards",
        "numFileShards",
        "rows",
        "apply",
        "write",
        "p",
        "run",
        "waitUntilFinish",
        "expectedRows",
        "i",
        "i",
        "TOTAL_N",
        "i",
        "expectedRows",
        "add",
        "generateRowFunc",
        "apply",
        "i",
        "checkRowCompleteness",
        "tableSpec",
        "inputSchema",
        "expectedRows",
        "tableSpec",
        "schema",
        "expectedRows",
        "actualTableRows",
        "BQ_CLIENT",
        "queryUnflattened",
        "format",
        "tableSpec",
        "PROJECT",
        "rowSchema",
        "BigQueryUtils",
        "fromTableSchema",
        "schema",
        "actualBeamRows",
        "actualTableRows",
        "stream",
        "tableRow",
        "BigQueryUtils",
        "toBeamRow",
        "rowSchema",
        "tableRow",
        "collect",
        "Collectors",
        "toList",
        "expectedBeamRows",
        "expectedRows",
        "stream",
        "tableRow",
        "BigQueryUtils",
        "toBeamRow",
        "rowSchema",
        "tableRow",
        "collect",
        "Collectors",
        "toList",
        "LOG",
        "info",
        "actualBeamRows",
        "size",
        "expectedBeamRows",
        "size",
        "assertThat",
        "actualBeamRows",
        "containsInAnyOrder",
        "expectedBeamRows",
        "toArray",
        "assertEquals",
        "expectedBeamRows",
        "size",
        "actualBeamRows",
        "size",
        "Test",
        "runStreaming",
        "Test",
        "runStreaming",
        "Test",
        "runStreamingToDynamicDestinations",
        "Test",
        "runStreamingToDynamicDestinations",
        "numFileShards",
        "useCopyJobs",
        "opts",
        "TestPipeline",
        "testingPipelineOptions",
        "opts",
        "setTempLocation",
        "opts",
        "getTempRoot",
        "p",
        "Pipeline",
        "create",
        "opts",
        "p",
        "getOptions",
        "getRunner",
        "getName",
        "contains",
        "assumeTrue",
        "useInputSchema",
        "ExperimentalOptions",
        "addExperiment",
        "p",
        "getOptions",
        "GcpOptions",
        "STREAMING_ENGINE_EXPERIMENT",
        "allFields",
        "Arrays",
        "asList",
        "FIELDS",
        "subFields0",
        "allFields",
        "subList",
        "subFields1",
        "allFields",
        "subList",
        "subFields2",
        "allFields",
        "subList",
        "table0Schema",
        "makeTableSchemaFromTypes",
        "subFields0",
        "table1Schema",
        "makeTableSchemaFromTypes",
        "subFields1",
        "table2Schema",
        "makeTableSchemaFromTypes",
        "subFields2",
        "table0Id",
        "maybeCreateTable",
        "table0Schema",
        "table1Id",
        "maybeCreateTable",
        "table1Schema",
        "table2Id",
        "maybeCreateTable",
        "table2Schema",
        "generateRowFunc0",
        "subFields0",
        "generateRowFunc1",
        "subFields1",
        "generateRowFunc2",
        "subFields2",
        "tablePrefix",
        "table0Id",
        "substring",
        "table0Id",
        "length",
        "start",
        "instants",
        "p",
        "apply",
        "PeriodicImpulse",
        "create",
        "startAt",
        "start",
        "stopAt",
        "start",
        "plus",
        "Duration",
        "standardSeconds",
        "TOTAL_N",
        "withInterval",
        "Duration",
        "standardSeconds",
        "catchUpToNow",
        "longs",
        "instants",
        "apply",
        "MapElements",
        "into",
        "TypeDescriptors",
        "longs",
        "via",
        "instant",
        "instant",
        "getMillis",
        "write",
        "BigQueryIO",
        "write",
        "to",
        "tablePrefix",
        "subFields0",
        "subFields1",
        "subFields2",
        "useInputSchema",
        "withFormatFunction",
        "id",
        "dest",
        "id",
        "row",
        "dest",
        "row",
        "generateRowFunc0",
        "apply",
        "id",
        "dest",
        "row",
        "generateRowFunc1",
        "apply",
        "id",
        "row",
        "generateRowFunc2",
        "apply",
        "id",
        "row",
        "withMethod",
        "Write",
        "Method",
        "FILE_LOADS",
        "withTriggeringFrequency",
        "Duration",
        "standardSeconds",
        "useCopyJobs",
        "write",
        "write",
        "withMaxBytesPerPartition",
        "useInputSchema",
        "write",
        "write",
        "withCreateDisposition",
        "CreateDisposition",
        "CREATE_IF_NEEDED",
        "withWriteDisposition",
        "WriteDisposition",
        "WRITE_TRUNCATE",
        "write",
        "write",
        "withCreateDisposition",
        "CreateDisposition",
        "CREATE_NEVER",
        "withWriteDisposition",
        "WriteDisposition",
        "WRITE_APPEND",
        "write",
        "numFileShards",
        "write",
        "withAutoSharding",
        "write",
        "withNumFileShards",
        "numFileShards",
        "longs",
        "apply",
        "write",
        "p",
        "run",
        "waitUntilFinish",
        "expectedRows0",
        "expectedRows1",
        "expectedRows2",
        "i",
        "i",
        "TOTAL_N",
        "i",
        "dest",
        "i",
        "dest",
        "expectedRows0",
        "add",
        "generateRowFunc0",
        "apply",
        "i",
        "dest",
        "expectedRows1",
        "add",
        "generateRowFunc1",
        "apply",
        "i",
        "expectedRows2",
        "add",
        "generateRowFunc2",
        "apply",
        "i",
        "checkRowCompleteness",
        "table0Id",
        "makeTableSchemaFromTypes",
        "subFields0",
        "expectedRows0",
        "checkRowCompleteness",
        "table1Id",
        "makeTableSchemaFromTypes",
        "subFields1",
        "expectedRows1",
        "checkRowCompleteness",
        "table2Id",
        "makeTableSchemaFromTypes",
        "subFields2",
        "expectedRows2",
        "tablePrefix",
        "table0Fields",
        "table1Fields",
        "table2Fields",
        "useInputSchema",
        "tablePrefix",
        "table0Fields",
        "table1Fields",
        "table2Fields",
        "useInputSchema",
        "tablePrefix",
        "tablePrefix",
        "table0Fields",
        "table0Fields",
        "table1Fields",
        "table1Fields",
        "table2Fields",
        "table2Fields",
        "useInputSchema",
        "useInputSchema",
        "Override",
        "element",
        "element",
        "getValue",
        "Override",
        "destination",
        "tablePrefix",
        "destination",
        "Override",
        "destination",
        "useInputSchema",
        "fields",
        "destination",
        "fields",
        "table0Fields",
        "destination",
        "fields",
        "table1Fields",
        "fields",
        "table2Fields",
        "tableFields",
        "fields",
        "stream",
        "name",
        "setName",
        "name",
        "setType",
        "name",
        "setMode",
        "collect",
        "Collectors",
        "toList",
        "tableFields",
        "add",
        "setName",
        "setType",
        "setMode",
        "setFields",
        "tableFields"
    ],
    "literals": [
        "\"FileLoadsStreamingIT\"",
        "\"file_loads_streaming_it_\"",
        "\"BOOL\"",
        "\"BOOLEAN\"",
        "\"BYTES\"",
        "\"INT64\"",
        "\"INTEGER\"",
        "\"FLOAT\"",
        "\"FLOAT64\"",
        "\"NUMERIC\"",
        "\"STRING\"",
        "\"DATE\"",
        "\"TIMESTAMP\"",
        "\"id\"",
        "\"BOOL\"",
        "\"BOOLEAN\"",
        "\"BYTES\"",
        "\"test_blob_%s\"",
        "\"INT64\"",
        "\"INTEGER\"",
        "\"FLOAT\"",
        "\"FLOAT64\"",
        "\"NUMERIC\"",
        "\"DATE\"",
        "\"2022-01-01\"",
        "\"TIMESTAMP\"",
        "\"2022-01-01 10:10:10.012 UTC\"",
        "\"STRING\"",
        "\"test_string\"",
        "\"unknown\"",
        "\"INTEGER\"",
        "\"id\"",
        "\"REQUIRED\"",
        "\"REQUIRED\"",
        "\"WithInputSchema\"",
        "\"%s.%s.%s\"",
        "\"DataflowRunner\"",
        "\"Skipping in favor of more relevant test case\"",
        "\"\"",
        "\"Generate Instants\"",
        "\"Create TableRows\"",
        "\"Stream loads to BigQuery\"",
        "\"SELECT * FROM [%s]\"",
        "\"Actual rows number: {}, expected: {}\"",
        "\"Comparing expected rows with actual rows\"",
        "\"Checking there is no duplication\"",
        "\"DataflowRunner\"",
        "\"Skipping in favor of more relevant test case\"",
        "\"-0\"",
        "\"-1\"",
        "\"-2\"",
        "\"Generate Instants\"",
        "\"Create TableRows\"",
        "\"Stream loads to dynamic destinations\"",
        "\"-\"",
        "\"REQUIRED\"",
        "\"id\"",
        "\"INTEGER\"",
        "\"REQUIRED\""
    ],
    "variables": [
        "useInputSchema",
        "fieldNames",
        "row",
        "tablePrefix",
        "table0Fields",
        "table1Fields",
        "table2Fields",
        "useInputSchema",
        "fields"
    ],
    "comments": [
        "Create one BQ dataset for all test cases.",
        "Add an id field for verification of correctness",
        "the name is prefix with type_.",
        "Only run the most relevant test case on Dataflow.",
        "Testing this dimension on DirectRunner is sufficient",
        "Need to manually enable streaming engine for legacy dataflow runner",
        "Shuffle the fields in the write schema to do fuzz testing on field order",
        "set up and build pipeline",
        "build write transform",
        "we're creating the table with the input schema",
        "table already exists with a schema, no need to create it",
        "Perform checks",
        "Check that the expected rows reached the table.",
        "Only run the most relevant test cases on Dataflow. Testing this dimension on DirectRunner is",
        "sufficient",
        "Need to manually enable streaming engine for legacy dataflow runner",
        "set up and build pipeline",
        "build write transform",
        "we're creating the table with the input schema",
        "table already exists with a schema, no need to create it",
        "Perform checks",
        "we attach an ID to each row in addition to the existing schema fields"
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "data",
        "setUpTestEnvironment",
        "cleanUp",
        "GenerateRowFunc",
        "TableRow",
        "apply",
        "TableSchema",
        "makeTableSchemaFromTypes",
        "maybeCreateTable",
        "runStreaming",
        "checkRowCompleteness",
        "testLoadWithFixedShards",
        "testLoadWithAutoShardingAndCopyJobs",
        "testDynamicDestinationsWithFixedShards",
        "testDynamicDestinationsWithAutoShardingAndCopyJobs",
        "runStreamingToDynamicDestinations",
        "TestDynamicDest",
        "getDestination",
        "TableDestination",
        "getTable",
        "TableSchema",
        "getSchema"
    ],
    "classes": [
        "FileLoadsStreamingIT",
        "GenerateRowFunc",
        "TestDynamicDest"
    ]
}