{
    "identifiers": [
        "django",
        "http",
        "JsonResponse",
        "rest_framework",
        "viewsets",
        "status",
        "payments",
        "service",
        "payments_service_impl",
        "PaymentsServiceImpl",
        "redis_cache",
        "service",
        "redis_cache_service_impl",
        "RedisCacheServiceImpl",
        "viewsets",
        "ViewSet",
        "RedisCacheServiceImpl",
        "getInstance",
        "PaymentsServiceImpl",
        "getInstance",
        "request",
        "request",
        "data",
        "postRequest",
        "get",
        "userToken",
        "JsonResponse",
        "status",
        "status",
        "HTTP_400_BAD_REQUEST",
        "redisCacheService",
        "getValueByKey",
        "userToken",
        "accountId",
        "JsonResponse",
        "status",
        "status",
        "HTTP_401_UNAUTHORIZED",
        "postRequest",
        "get",
        "postRequest",
        "get",
        "postRequest",
        "get",
        "postRequest",
        "get",
        "paymentKey",
        "orderId",
        "amount",
        "orderInfoId",
        "JsonResponse",
        "status",
        "status",
        "HTTP_400_BAD_REQUEST",
        "paymentsService",
        "process",
        "accountId",
        "paymentKey",
        "orderId",
        "amount",
        "orderInfoId",
        "paymentResult",
        "isinstance",
        "paymentResult",
        "JsonResponse",
        "paymentResult",
        "get",
        "paymentResult",
        "get",
        "paymentResult",
        "get",
        "paymentResult",
        "get",
        "get",
        "orderId",
        "paymentResult",
        "get",
        "paymentResult",
        "get",
        "get",
        "paymentResult",
        "get",
        "status",
        "status",
        "HTTP_200_OK",
        "JsonResponse",
        "status",
        "status",
        "HTTP_500_INTERNAL_SERVER_ERROR",
        "e",
        "JsonResponse",
        "status",
        "status",
        "HTTP_500_INTERNAL_SERVER_ERROR"
    ],
    "literals": [
        "\"userToken\"",
        "\"error\"",
        "\"userToken이 필요합니다\"",
        "\"success\"",
        "\"error\"",
        "\"유효하지 않은 userToken입니다\"",
        "\"success\"",
        "\"paymentKey\"",
        "\"orderId\"",
        "\"amount\"",
        "\"orderInfoId\"",
        "\"error\"",
        "\"paymentKey, orderId, amount는 필수입니다.\"",
        "\"success\"",
        "\"success\"",
        "\"message\"",
        "\"결제가 성공적으로 처리되었습니다.\"",
        "\"approvedAt\"",
        "\"approvedAt\"",
        "\"orderName\"",
        "\"orderName\"",
        "\"method\"",
        "\"method\"",
        "\"receipt_url\"",
        "\"receipt\"",
        "\"url\"",
        "\"orderId\"",
        "\"planName\"",
        "\"planName\"",
        "\"amountWithCurrency\"",
        "f\"{paymentResult.get('easyPay', {}).get('amount')} {paymentResult.get('currency', 'KRW')}\"",
        "'easyPay'",
        "'amount'",
        "'currency'",
        "'KRW'",
        "\"error\"",
        "\"결제 처리 중 오류 발생\"",
        "\"success\"",
        "\"error\"",
        "\"서버 내부 오류\"",
        "\"success\""
    ],
    "variables": [
        "redisCacheService",
        "paymentsService",
        "postRequest",
        "userToken",
        "accountId",
        "paymentKey",
        "orderId",
        "amount",
        "orderInfoId",
        "paymentResult"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "requestProcessPayments"
    ],
    "classes": [
        "PaymentsController"
    ]
}