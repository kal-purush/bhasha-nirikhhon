{
    "identifiers": [
        "Collections",
        "Collections",
        "Generic",
        "Collections",
        "Immutable",
        "ComponentModel",
        "Diagnostics",
        "Diagnostics",
        "CodeAnalysis",
        "Linq",
        "Reflection",
        "Runtime",
        "CompilerServices",
        "Text",
        "BlackMaple",
        "FMSInsight",
        "Tests",
        "Shouldly",
        "ShouldlyMethods",
        "EditorBrowsable",
        "EditorBrowsableState",
        "Never",
        "BindingFlags",
        "Public",
        "BindingFlags",
        "Instance",
        "MethodImpl",
        "MethodImplOptions",
        "NoInlining",
        "NotNullIfNotNull",
        "nameof",
        "expected",
        "actual",
        "NotNullIfNotNull",
        "nameof",
        "actual",
        "expected",
        "customMessage",
        "CompareObjects",
        "actual",
        "expected",
        "IList",
        "customMessage",
        "NotNullIfNotNull",
        "nameof",
        "expected",
        "actual",
        "NotNullIfNotNull",
        "nameof",
        "actual",
        "expected",
        "IList",
        "path",
        "IDictionary",
        "IList",
        "previousComparisons",
        "customMessage",
        "CallerMemberName",
        "shouldlyMethod",
        "BothValuesAreNull",
        "actual",
        "expected",
        "path",
        "customMessage",
        "shouldlyMethod",
        "GetTypeToCompare",
        "actual",
        "expected",
        "path",
        "customMessage",
        "shouldlyMethod",
        "CompareStrings",
        "actual",
        "expected",
        "path",
        "customMessage",
        "shouldlyMethod",
        "IDictionary",
        "IsAssignableFrom",
        "CompareDictionaries",
        "IDictionary",
        "actual",
        "IDictionary",
        "expected",
        "path",
        "previousComparisons",
        "customMessage",
        "shouldlyMethod",
        "IsIReadOnlyDictionary",
        "keyType",
        "valueType",
        "CompareIReadOnlyDictionary",
        "keyType",
        "valueType",
        "actual",
        "expected",
        "path",
        "previousComparisons",
        "customMessage",
        "shouldlyMethod",
        "IsISet",
        "setType",
        "CompareISets",
        "setType",
        "actual",
        "expected",
        "path",
        "customMessage",
        "shouldlyMethod",
        "IsIImmutableSet",
        "setType",
        "CompareIImmutableSets",
        "setType",
        "actual",
        "expected",
        "path",
        "customMessage",
        "shouldlyMethod",
        "IsAssignableFrom",
        "CompareEnumerables",
        "actual",
        "expected",
        "path",
        "previousComparisons",
        "customMessage",
        "shouldlyMethod",
        "IsValueType",
        "CompareValueTypes",
        "ValueType",
        "actual",
        "ValueType",
        "expected",
        "path",
        "customMessage",
        "shouldlyMethod",
        "CompareReferenceTypes",
        "actual",
        "expected",
        "path",
        "previousComparisons",
        "customMessage",
        "shouldlyMethod",
        "NotNullWhen",
        "actual",
        "NotNullWhen",
        "expected",
        "path",
        "customMessage",
        "CallerMemberName",
        "shouldlyMethod",
        "expected",
        "actual",
        "ThrowException",
        "actual",
        "expected",
        "path",
        "customMessage",
        "shouldlyMethod",
        "actual",
        "ThrowException",
        "actual",
        "expected",
        "path",
        "customMessage",
        "shouldlyMethod",
        "actual",
        "expected",
        "IList",
        "path",
        "customMessage",
        "CallerMemberName",
        "shouldlyMethod",
        "expected",
        "GetType",
        "actual",
        "GetType",
        "actualType",
        "expectedType",
        "ThrowException",
        "actualType",
        "expectedType",
        "path",
        "customMessage",
        "shouldlyMethod",
        "actualType",
        "FullName",
        "path",
        "Count",
        "path",
        "Add",
        "typeName",
        "path",
        "typeName",
        "actualType",
        "ValueType",
        "actual",
        "ValueType",
        "expected",
        "path",
        "customMessage",
        "CallerMemberName",
        "shouldlyMethod",
        "actual",
        "Equals",
        "expected",
        "ThrowException",
        "actual",
        "expected",
        "path",
        "customMessage",
        "shouldlyMethod",
        "actual",
        "expected",
        "Type",
        "IList",
        "path",
        "IDictionary",
        "IList",
        "previousComparisons",
        "customMessage",
        "CallerMemberName",
        "shouldlyMethod",
        "ReferenceEquals",
        "actual",
        "expected",
        "previousComparisons",
        "Contains",
        "actual",
        "expected",
        "previousComparisons",
        "actual",
        "expected",
        "CompareStrings",
        "actual",
        "expected",
        "path",
        "customMessage",
        "shouldlyMethod",
        "IDictionary",
        "IsAssignableFrom",
        "CompareDictionaries",
        "IDictionary",
        "actual",
        "IDictionary",
        "expected",
        "path",
        "previousComparisons",
        "customMessage",
        "shouldlyMethod",
        "IsIReadOnlyDictionary",
        "keyType",
        "valueType",
        "CompareIReadOnlyDictionary",
        "keyType",
        "valueType",
        "actual",
        "expected",
        "path",
        "previousComparisons",
        "customMessage",
        "shouldlyMethod",
        "IsISet",
        "setType",
        "CompareISets",
        "setType",
        "actual",
        "expected",
        "path",
        "customMessage",
        "shouldlyMethod",
        "IsIImmutableSet",
        "setType",
        "CompareIImmutableSets",
        "setType",
        "actual",
        "expected",
        "path",
        "customMessage",
        "shouldlyMethod",
        "IsAssignableFrom",
        "CompareEnumerables",
        "actual",
        "expected",
        "path",
        "previousComparisons",
        "customMessage",
        "shouldlyMethod",
        "GetFields",
        "DefaultBindingFlags",
        "CompareFields",
        "actual",
        "expected",
        "fields",
        "path",
        "previousComparisons",
        "customMessage",
        "shouldlyMethod",
        "GetProperties",
        "DefaultBindingFlags",
        "CompareProperties",
        "actual",
        "expected",
        "properties",
        "path",
        "previousComparisons",
        "customMessage",
        "shouldlyMethod",
        "actual",
        "expected",
        "path",
        "customMessage",
        "CallerMemberName",
        "shouldlyMethod",
        "actual",
        "Equals",
        "expected",
        "StringComparison",
        "Ordinal",
        "ThrowException",
        "actual",
        "expected",
        "path",
        "customMessage",
        "shouldlyMethod",
        "IDictionary",
        "actual",
        "IDictionary",
        "expected",
        "path",
        "IDictionary",
        "IList",
        "previousComparisons",
        "customMessage",
        "CallerMemberName",
        "shouldlyMethod",
        "path",
        "Concat",
        "actual",
        "Keys",
        "Cast",
        "expected",
        "Keys",
        "Cast",
        "CompareTypedISets",
        "actualKeys",
        "expectedKeys",
        "keysPath",
        "customMessage",
        "shouldlyMethod",
        "key",
        "actual",
        "Keys",
        "keysPath",
        "path",
        "Concat",
        "key",
        "ToString",
        "CompareObjects",
        "actual",
        "key",
        "expected",
        "key",
        "keysPath",
        "ToList",
        "previousComparisons",
        "customMessage",
        "shouldlyMethod",
        "Type",
        "keyType",
        "Type",
        "valueType",
        "actual",
        "expected",
        "path",
        "IDictionary",
        "IList",
        "previousComparisons",
        "customMessage",
        "CallerMemberName",
        "shouldlyMethod",
        "ObjectGraphTestExtensions",
        "GetMethod",
        "nameof",
        "CompareTypedIReadOnlyDictionaries",
        "BindingFlags",
        "NonPublic",
        "BindingFlags",
        "Static",
        "MakeGenericMethod",
        "keyType",
        "valueType",
        "Invoke",
        "actual",
        "expected",
        "path",
        "previousComparisons",
        "customMessage",
        "shouldlyMethod",
        "TargetInvocationException",
        "e",
        "e",
        "InnerException",
        "Shouldly",
        "ShouldAssertException",
        "shouldAssertException",
        "shouldAssertException",
        "TKey",
        "TValue",
        "IReadOnlyDictionary",
        "TKey",
        "TValue",
        "actual",
        "IReadOnlyDictionary",
        "TKey",
        "TValue",
        "expected",
        "path",
        "IDictionary",
        "IList",
        "previousComparisons",
        "customMessage",
        "CallerMemberName",
        "shouldlyMethod",
        "path",
        "Concat",
        "TKey",
        "actual",
        "Keys",
        "TKey",
        "expected",
        "Keys",
        "CompareTypedISets",
        "actualKeys",
        "expectedKeys",
        "keysPath",
        "customMessage",
        "shouldlyMethod",
        "key",
        "actual",
        "Keys",
        "keysPath",
        "path",
        "Concat",
        "key",
        "ToString",
        "CompareObjects",
        "actual",
        "key",
        "expected",
        "key",
        "keysPath",
        "ToList",
        "previousComparisons",
        "customMessage",
        "shouldlyMethod",
        "Type",
        "setType",
        "actual",
        "expected",
        "path",
        "customMessage",
        "CallerMemberName",
        "shouldlyMethod",
        "CompareSets",
        "nameof",
        "CompareTypedIImmutableSets",
        "setType",
        "actual",
        "expected",
        "path",
        "customMessage",
        "shouldlyMethod",
        "Type",
        "setType",
        "actual",
        "expected",
        "path",
        "customMessage",
        "CallerMemberName",
        "shouldlyMethod",
        "CompareSets",
        "nameof",
        "CompareTypedISets",
        "setType",
        "actual",
        "expected",
        "path",
        "customMessage",
        "shouldlyMethod",
        "methodName",
        "Type",
        "setType",
        "actual",
        "expected",
        "path",
        "customMessage",
        "CallerMemberName",
        "shouldlyMethod",
        "ObjectGraphTestExtensions",
        "GetMethod",
        "methodName",
        "BindingFlags",
        "NonPublic",
        "BindingFlags",
        "Static",
        "MakeGenericMethod",
        "setType",
        "Invoke",
        "actual",
        "expected",
        "path",
        "customMessage",
        "shouldlyMethod",
        "TargetInvocationException",
        "e",
        "e",
        "InnerException",
        "Shouldly",
        "ShouldAssertException",
        "shouldAssertException",
        "shouldAssertException",
        "T",
        "IImmutableSet",
        "T",
        "actual",
        "IImmutableSet",
        "T",
        "expected",
        "path",
        "customMessage",
        "CallerMemberName",
        "shouldlyMethod",
        "actual",
        "SetEquals",
        "expected",
        "expected",
        "Except",
        "actual",
        "ToList",
        "actual",
        "Except",
        "expected",
        "ToList",
        "CompareTypedSets",
        "missingInActual",
        "missingInExpected",
        "actual",
        "expected",
        "path",
        "customMessage",
        "shouldlyMethod",
        "T",
        "ISet",
        "T",
        "actual",
        "ISet",
        "T",
        "expected",
        "path",
        "customMessage",
        "CallerMemberName",
        "shouldlyMethod",
        "actual",
        "SetEquals",
        "expected",
        "expected",
        "Except",
        "actual",
        "ToList",
        "actual",
        "Except",
        "expected",
        "ToList",
        "CompareTypedSets",
        "missingInActual",
        "missingInExpected",
        "actual",
        "expected",
        "path",
        "customMessage",
        "shouldlyMethod",
        "T",
        "T",
        "missingInActual",
        "T",
        "missingInExpected",
        "actual",
        "expected",
        "path",
        "customMessage",
        "CallerMemberName",
        "shouldlyMethod",
        "customMessage",
        "customMessage",
        "Length",
        "",
        "customMessage",
        "missingInActual",
        "Count",
        "messages",
        "Add",
        "missingInActual",
        "missingInExpected",
        "Count",
        "messages",
        "Add",
        "missingInExpected",
        "ThrowException",
        "actual",
        "expected",
        "path",
        "messages",
        "Count",
        "Join",
        "messages",
        "shouldlyMethod",
        "actual",
        "expected",
        "path",
        "IDictionary",
        "IList",
        "previousComparisons",
        "customMessage",
        "CallerMemberName",
        "shouldlyMethod",
        "expected",
        "Cast",
        "ToList",
        "actual",
        "Cast",
        "ToList",
        "actualList",
        "Count",
        "expectedList",
        "Count",
        "path",
        "Concat",
        "ThrowException",
        "actualList",
        "Count",
        "expectedList",
        "Count",
        "newPath",
        "customMessage",
        "shouldlyMethod",
        "i",
        "actualList",
        "Count",
        "i",
        "path",
        "Concat",
        "i",
        "CompareObjects",
        "actualList",
        "i",
        "expectedList",
        "i",
        "newPath",
        "ToList",
        "previousComparisons",
        "customMessage",
        "shouldlyMethod",
        "actual",
        "expected",
        "FieldInfo",
        "fields",
        "IList",
        "path",
        "IDictionary",
        "IList",
        "previousComparisons",
        "customMessage",
        "CallerMemberName",
        "shouldlyMethod",
        "field",
        "fields",
        "field",
        "GetValue",
        "actual",
        "field",
        "GetValue",
        "expected",
        "path",
        "Concat",
        "Name",
        "CompareObjects",
        "actualValue",
        "expectedValue",
        "newPath",
        "ToList",
        "previousComparisons",
        "customMessage",
        "shouldlyMethod",
        "actual",
        "expected",
        "PropertyInfo",
        "properties",
        "IList",
        "path",
        "IDictionary",
        "IList",
        "previousComparisons",
        "customMessage",
        "CallerMemberName",
        "shouldlyMethod",
        "property",
        "properties",
        "property",
        "GetIndexParameters",
        "Length",
        "NotSupportedException",
        "property",
        "GetValue",
        "actual",
        "",
        "property",
        "GetValue",
        "expected",
        "",
        "path",
        "Concat",
        "Name",
        "CompareObjects",
        "actualValue",
        "expectedValue",
        "newPath",
        "ToList",
        "previousComparisons",
        "customMessage",
        "shouldlyMethod",
        "DoesNotReturn",
        "actual",
        "expected",
        "path",
        "customMessage",
        "CallerMemberName",
        "shouldlyMethod",
        "ShouldAssertException",
        "Shouldly",
        "ExpectedEquivalenceShouldlyMessage",
        "expected",
        "actual",
        "path",
        "customMessage",
        "ToString",
        "Type",
        "NotNullWhen",
        "Type",
        "keyType",
        "NotNullWhen",
        "Type",
        "valueType",
        "ImplementsDoubleGenericInterface",
        "IReadOnlyDictionary",
        "keyType",
        "valueType",
        "Type",
        "NotNullWhen",
        "Type",
        "setType",
        "ImplementsSingleGenericInterface",
        "ISet",
        "setType",
        "Type",
        "NotNullWhen",
        "Type",
        "setType",
        "ImplementsSingleGenericInterface",
        "IImmutableSet",
        "setType",
        "Type",
        "Type",
        "interfaceType",
        "NotNullWhen",
        "Type",
        "genericType0",
        "NotNullWhen",
        "Type",
        "genericType1",
        "GetInterfaces",
        "FirstOrDefault",
        "i",
        "IsGenericType",
        "i",
        "GetGenericTypeDefinition",
        "interfaceType",
        "implementedInterface",
        "genericType0",
        "implementedInterface",
        "GetGenericArguments",
        "genericType1",
        "implementedInterface",
        "GetGenericArguments",
        "genericType0",
        "genericType1",
        "Type",
        "Type",
        "interfaceType",
        "NotNullWhen",
        "Type",
        "genericType",
        "GetInterfaces",
        "FirstOrDefault",
        "i",
        "IsGenericType",
        "i",
        "GetGenericTypeDefinition",
        "interfaceType",
        "implementedInterface",
        "genericType",
        "implementedInterface",
        "GetGenericArguments",
        "genericType",
        "IDictionary",
        "IList",
        "comparisons",
        "actual",
        "expected",
        "comparisons",
        "TryGetValue",
        "actual",
        "Contains",
        "expected",
        "IDictionary",
        "IList",
        "comparisons",
        "actual",
        "expected",
        "comparisons",
        "TryGetValue",
        "actual",
        "Add",
        "expected",
        "comparisons",
        "Add",
        "actual",
        "expected",
        "Serializable",
        "Xunit",
        "Sdk",
        "IAssertionException",
        "message",
        "message",
        "message",
        "innerException",
        "message",
        "innerException",
        "IsNullOrEmpty",
        "stackTrace",
        "StringBuilder",
        "WriteFilteredStackTrace",
        "builder",
        "fNeedFileInfo",
        "stackTrace",
        "builder",
        "ToString",
        "stackTrace",
        "StringBuilder",
        "builder",
        "StackTrace",
        "stackTrace",
        "Assembly",
        "GetExecutingAssembly",
        "stackTrace",
        "GetFrames",
        "startIndex",
        "frames",
        "Length",
        "startIndex",
        "frames",
        "startIndex",
        "frame",
        "GetMethod",
        "DeclaringType",
        "ObjectGraphTestExtensions",
        "startIndex",
        "builder",
        "Append",
        "stackTrace",
        "ToString",
        "TrimEnd",
        "frames",
        "Length",
        "startIndex",
        "builder",
        "Length",
        "i",
        "lines",
        "Length",
        "i",
        "frames",
        "i",
        "startIndex",
        "nextFrame",
        "StackTrace",
        "nextFrame",
        "ToString",
        "i",
        "lines",
        "Length",
        "line",
        "line",
        "TrimEnd",
        "lines",
        "i",
        "line",
        "neededCapacity",
        "line",
        "Length",
        "builder",
        "EnsureCapacity",
        "neededCapacity",
        "line",
        "lines",
        "builder",
        "Append",
        "line"
    ],
    "literals": [
        "\"Keys\"",
        "\"<Unknown>\"",
        "\"Keys\"",
        "\"<Unknown>\"",
        "\"; \"",
        "\"Count\"",
        "\"Comparing types that have indexers is not supported.\"",
        "\"ShouldBeEquivalentTo\""
    ],
    "variables": [
        "BindingFlags",
        "DefaultBindingFlags",
        "expectedType",
        "actualType",
        "typeName",
        "fields",
        "properties",
        "keysPath",
        "actualKeys",
        "expectedKeys",
        "keysPath",
        "actualKeys",
        "expectedKeys",
        "missingInActual",
        "missingInExpected",
        "missingInActual",
        "missingInExpected",
        "messages",
        "expectedList",
        "actualList",
        "newPath",
        "i",
        "newPath",
        "actualValue",
        "expectedValue",
        "newPath",
        "actualValue",
        "expectedValue",
        "newPath",
        "stackTrace",
        "StackTrace",
        "builder",
        "shouldlyAssembly",
        "frames",
        "startIndex",
        "frame",
        "lines",
        "neededCapacity",
        "i",
        "nextFrame",
        "line"
    ],
    "comments": [
        "Copied from https://github.com/shouldly/shouldly/pull/1101",
        "A version of ShouldBeEquivalentTo that compares dictionaries.  Added a D to the end for dictionary so",
        "method is called ShouldBeEquivalentToD",
        "License copied from https://github.com/shouldly/shouldly/blob/master/LICENSE.txt",
        "3-Clause BSD License\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright notice,\n    this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n    * Neither the names of the copyright holders nor the names of\n    contributors may be used to endorse or promote products derived from this\n    software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n[ https://opensource.org/license/bsd-3-clause ]",
        "There's no sensible way to compare indexers, as there does not exist a way to obtain a collection",
        "of all values in a way that's common to all indexer implementations.",
        "Copied from Shouldly because needed to filter stack trace from this assembly",
        "Creates a new ShouldAssertException with the specified message",
        "</summary>",
        "Creates a new ShouldAssertException with the specified message and inner exception",
        "</summary>",
        "<inheritdoc/>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "ShouldBeEquivalentToD",
        "CompareObjects",
        "BothValuesAreNull",
        "Type",
        "GetTypeToCompare",
        "CompareValueTypes",
        "CompareReferenceTypes",
        "CompareStrings",
        "CompareDictionaries",
        "CompareIReadOnlyDictionary",
        "CompareTypedIReadOnlyDictionaries",
        "CompareIImmutableSets",
        "CompareISets",
        "CompareSets",
        "CompareTypedIImmutableSets",
        "CompareTypedISets",
        "CompareTypedSets",
        "CompareEnumerables",
        "CompareFields",
        "CompareProperties",
        "ThrowException",
        "IsIReadOnlyDictionary",
        "IsISet",
        "IsIImmutableSet",
        "ImplementsDoubleGenericInterface",
        "ImplementsSingleGenericInterface",
        "Contains",
        "ShouldAssertException",
        "ShouldAssertException",
        "WriteFilteredStackTrace"
    ],
    "classes": [
        "ObjectGraphTestExtensions",
        "ShouldAssertException"
    ]
}