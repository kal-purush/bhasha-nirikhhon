{
    "identifiers": [
        "pandas",
        "pd",
        "numpy",
        "np",
        "typing",
        "Dict",
        "Tuple",
        "dataclasses",
        "dataclass",
        "logging",
        "json",
        "matplotlib",
        "pyplot",
        "plt",
        "datetime",
        "datetime",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "INFO",
        "logging",
        "getLogger",
        "filepath",
        "Dict",
        "Dict",
        "Tuple",
        "pd",
        "read_csv",
        "filepath",
        "logger",
        "info",
        "filepath",
        "logger",
        "info",
        "len",
        "df",
        "logger",
        "info",
        "df",
        "columns",
        "tolist",
        "logger",
        "info",
        "df",
        "nunique",
        "e",
        "logger",
        "error",
        "e",
        "df",
        "sort_values",
        "df",
        "groupby",
        "first",
        "reset_index",
        "logger",
        "info",
        "len",
        "df_first",
        "logger",
        "info",
        "df_first",
        "nunique",
        "ts",
        "df_first",
        "unique",
        "df_first",
        "df_first",
        "ts",
        "ts_data",
        "ts_data",
        "ts_data",
        "ts_dict",
        "logger",
        "info",
        "len",
        "snapshots",
        "len",
        "venues",
        "venues",
        "snapshots",
        "values",
        "logger",
        "info",
        "np",
        "mean",
        "venue_counts",
        "logger",
        "info",
        "max",
        "venue_counts",
        "logger",
        "info",
        "min",
        "venue_counts",
        "snapshots",
        "dataclass",
        "order_size",
        "venues",
        "Venue",
        "lambda_over",
        "lambda_under",
        "theta_queue",
        "Tuple",
        "venues",
        "ValueError",
        "order_size",
        "ValueError",
        "sum",
        "v",
        "ask_size",
        "v",
        "venues",
        "total_available",
        "order_size",
        "logger",
        "warning",
        "total_available",
        "order_size",
        "logger",
        "info",
        "order_size",
        "logger",
        "info",
        "v",
        "ask_size",
        "v",
        "venues",
        "v",
        "len",
        "venues",
        "alloc",
        "splits",
        "sum",
        "alloc",
        "min",
        "order_size",
        "used",
        "venues",
        "v",
        "ask_size",
        "q",
        "max_v",
        "step",
        "new_splits",
        "append",
        "alloc",
        "q",
        "new_splits",
        "alloc",
        "splits",
        "sum",
        "alloc",
        "order_size",
        "compute_cost",
        "alloc",
        "venues",
        "order_size",
        "lambda_over",
        "lambda_under",
        "theta_queue",
        "cost",
        "best_cost",
        "cost",
        "alloc",
        "best_split",
        "logger",
        "warning",
        "best_split",
        "best_cost",
        "split",
        "venues",
        "Venue",
        "order_size",
        "lambda_over",
        "lambda_under",
        "theta_queue",
        "len",
        "split",
        "len",
        "venues",
        "ValueError",
        "i",
        "venue",
        "venues",
        "min",
        "split",
        "i",
        "venue",
        "ask_size",
        "executed",
        "exe",
        "cash_spent",
        "exe",
        "venue",
        "ask",
        "venue",
        "fee",
        "max",
        "split",
        "i",
        "exe",
        "venue",
        "rebate",
        "cash_spent",
        "maker_rebate",
        "max",
        "order_size",
        "executed",
        "max",
        "executed",
        "order_size",
        "theta_queue",
        "underfill",
        "overfill",
        "lambda_under",
        "underfill",
        "lambda_over",
        "overfill",
        "cash_spent",
        "risk_pen",
        "cost_pen",
        "snapshots",
        "Dict",
        "Dict",
        "Tuple",
        "Dict",
        "i",
        "n_combinations",
        "np",
        "random",
        "uniform",
        "param_ranges",
        "np",
        "random",
        "uniform",
        "param_ranges",
        "np",
        "random",
        "uniform",
        "param_ranges",
        "simulate_execution",
        "snapshots",
        "results",
        "results",
        "best_cost",
        "results",
        "results",
        "logger",
        "info",
        "best_params",
        "logger",
        "info",
        "best_cost",
        "i",
        "logger",
        "info",
        "i",
        "n_combinations",
        "best_params",
        "logger",
        "warning",
        "simulate_execution",
        "snapshots",
        "best_params",
        "best_params",
        "best_results",
        "snapshots",
        "Dict",
        "Dict",
        "Tuple",
        "target_size",
        "lambda_over",
        "lambda_under",
        "theta_queue",
        "Dict",
        "target_size",
        "ts",
        "venue_data",
        "snapshots",
        "items",
        "total_filled",
        "target_size",
        "Venue",
        "ask",
        "price",
        "ask_size",
        "size",
        "price",
        "size",
        "venue_data",
        "values",
        "allocate",
        "unfilled",
        "venues",
        "lambda_over",
        "lambda_under",
        "theta_queue",
        "venue",
        "alloc",
        "venues",
        "allocation",
        "min",
        "alloc",
        "venue",
        "ask_size",
        "fill",
        "total_filled",
        "fill",
        "total_cost",
        "fill",
        "venue",
        "ask",
        "unfilled",
        "fill",
        "execution_history",
        "append",
        "ts",
        "fill",
        "venue",
        "ask",
        "total_cost",
        "logger",
        "info",
        "total_filled",
        "target_size",
        "logger",
        "info",
        "total_filled",
        "target_size",
        "total_filled",
        "total_cost",
        "total_cost",
        "total_filled",
        "total_filled",
        "execution_history",
        "snapshots",
        "Dict",
        "Dict",
        "Tuple",
        "target_size",
        "Dict",
        "ts",
        "venue_data",
        "snapshots",
        "items",
        "total_filled",
        "target_size",
        "min",
        "venue_data",
        "items",
        "key",
        "x",
        "x",
        "best_venue",
        "min",
        "size",
        "target_size",
        "total_filled",
        "fill",
        "total_filled",
        "fill",
        "total_cost",
        "fill",
        "price",
        "execution_history",
        "append",
        "ts",
        "fill",
        "price",
        "total_cost",
        "total_filled",
        "total_cost",
        "total_cost",
        "total_filled",
        "total_filled",
        "execution_history",
        "snapshots",
        "Dict",
        "Dict",
        "Tuple",
        "target_size",
        "bucket_seconds",
        "Dict",
        "sorted",
        "snapshots",
        "keys",
        "timestamps",
        "pd",
        "to_datetime",
        "timestamps",
        "pd",
        "to_datetime",
        "timestamps",
        "end_time",
        "start_time",
        "total_seconds",
        "max",
        "total_seconds",
        "bucket_seconds",
        "target_size",
        "num_buckets",
        "ts_str",
        "timestamps",
        "total_filled",
        "target_size",
        "pd",
        "to_datetime",
        "ts_str",
        "current_time",
        "start_time",
        "total_seconds",
        "seconds_from_start",
        "bucket_seconds",
        "bucket",
        "current_bucket",
        "bucket",
        "bucket_size",
        "bucket_filled",
        "remaining",
        "min",
        "snapshots",
        "ts_str",
        "items",
        "key",
        "x",
        "x",
        "best_venue",
        "min",
        "size",
        "remaining",
        "target_size",
        "total_filled",
        "fill",
        "total_filled",
        "fill",
        "total_cost",
        "fill",
        "price",
        "bucket_filled",
        "fill",
        "execution_history",
        "append",
        "ts_str",
        "fill",
        "price",
        "total_cost",
        "total_filled",
        "total_cost",
        "total_cost",
        "total_filled",
        "total_filled",
        "execution_history",
        "snapshots",
        "Dict",
        "Dict",
        "Tuple",
        "target_size",
        "Dict",
        "ts",
        "venue_data",
        "snapshots",
        "items",
        "total_filled",
        "target_size",
        "sum",
        "size",
        "_",
        "size",
        "venue_data",
        "values",
        "snapshot_volume",
        "sum",
        "price",
        "size",
        "price",
        "size",
        "venue_data",
        "values",
        "snapshot_volume",
        "min",
        "venue_data",
        "items",
        "key",
        "x",
        "x",
        "best_venue",
        "min",
        "size",
        "target_size",
        "total_filled",
        "fill",
        "total_filled",
        "fill",
        "total_cost",
        "fill",
        "snapshot_vwap",
        "execution_history",
        "append",
        "ts",
        "fill",
        "snapshot_vwap",
        "total_cost",
        "total_filled",
        "total_cost",
        "total_cost",
        "total_filled",
        "total_filled",
        "execution_history",
        "cont_kukanov_results",
        "Dict",
        "baseline_results",
        "Dict",
        "baseline_results",
        "baseline_results",
        "cont_kukanov_results",
        "baseline_results",
        "cont_kukanov_results",
        "Dict",
        "best_ask_results",
        "Dict",
        "twap_results",
        "Dict",
        "vwap_results",
        "Dict",
        "cont_kukanov_results",
        "cont_kukanov_results",
        "cont_kukanov_results",
        "best_ask_results",
        "best_ask_results",
        "twap_results",
        "twap_results",
        "vwap_results",
        "vwap_results",
        "calculate_bps_savings",
        "cont_kukanov_results",
        "best_ask_results",
        "calculate_bps_savings",
        "cont_kukanov_results",
        "twap_results",
        "calculate_bps_savings",
        "cont_kukanov_results",
        "vwap_results",
        "json",
        "dumps",
        "results",
        "indent",
        "cont_kukanov_results",
        "Dict",
        "best_ask_results",
        "Dict",
        "twap_results",
        "Dict",
        "vwap_results",
        "Dict",
        "plt",
        "figure",
        "figsize",
        "plt",
        "plot",
        "cont_kukanov_results",
        "label",
        "linewidth",
        "plt",
        "plot",
        "best_ask_results",
        "label",
        "linestyle",
        "plt",
        "plot",
        "twap_results",
        "label",
        "linestyle",
        "plt",
        "plot",
        "vwap_results",
        "label",
        "linestyle",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "title",
        "plt",
        "legend",
        "plt",
        "grid",
        "plt",
        "savefig",
        "plt",
        "close",
        "load_market_data",
        "search_parameters",
        "snapshots",
        "best_ask_strategy",
        "snapshots",
        "twap_strategy",
        "snapshots",
        "vwap_strategy",
        "snapshots",
        "plot_cumulative_costs",
        "cont_kukanov_results",
        "best_ask_results",
        "twap_results",
        "vwap_results",
        "format_results",
        "cont_kukanov_results",
        "best_ask_results",
        "twap_results",
        "vwap_results",
        "results_json",
        "e",
        "logger",
        "error",
        "e",
        "main"
    ],
    "literals": [
        "f\"Successfully loaded data from {filepath}\"",
        "f\"Total rows in CSV: {len(df)}\"",
        "f\"Columns in CSV: {df.columns.tolist()}\"",
        "f\"Unique publishers: {df['publisher_id'].nunique()}\"",
        "'publisher_id'",
        "f\"Error loading data: {e}\"",
        "'ts_event'",
        "'publisher_id'",
        "'ts_event'",
        "'publisher_id'",
        "f\"Rows after keeping first record per publisher: {len(df_first)}\"",
        "f\"Unique timestamps: {df_first['ts_event'].nunique()}\"",
        "'ts_event'",
        "'ts_event'",
        "'ts_event'",
        "'publisher_id'",
        "'ask_px_00'",
        "'ask_sz_00'",
        "f\"Processed {len(snapshots)} snapshots\"",
        "f\"Average venues per snapshot: {np.mean(venue_counts):.2f}\"",
        "f\"Max venues in a snapshot: {max(venue_counts)}\"",
        "f\"Min venues in a snapshot: {min(venue_counts)}\"",
        "\"No venues provided\"",
        "\"Order size must be positive\"",
        "f\"Insufficient venue sizes: {total_available} < {order_size}\"",
        "'inf'",
        "f\"Attempting allocation for order_size={order_size}\"",
        "f\"Venue sizes: {[v.ask_size for v in venues]}\"",
        "'inf'",
        "\"No valid allocation found\"",
        "'inf'",
        "\"Split length must match number of venues\"",
        "'inf'",
        "'lambda_over'",
        "'lambda_under'",
        "'theta_queue'",
        "'lambda_over'",
        "'lambda_over'",
        "'lambda_under'",
        "'lambda_under'",
        "'theta_queue'",
        "'theta_queue'",
        "'total_filled'",
        "'total_cost'",
        "'total_cost'",
        "f\"New best parameters found: {best_params}\"",
        "f\"Cost: {best_cost}\"",
        "f\"Tested {i + 1}/{n_combinations} combinations\"",
        "\"No valid parameter combination found that fills the entire order\"",
        "'lambda_over'",
        "'lambda_under'",
        "'theta_queue'",
        "'best_parameters'",
        "'results'",
        "'timestamp'",
        "'shares_filled'",
        "'price'",
        "'cumulative_cost'",
        "f\"Progress: {total_filled}/{target_size} shares filled\"",
        "f\"Execution completed: {total_filled}/{target_size} shares filled\"",
        "'total_filled'",
        "'total_cost'",
        "'avg_price'",
        "'execution_history'",
        "'timestamp'",
        "'shares_filled'",
        "'price'",
        "'cumulative_cost'",
        "'total_filled'",
        "'total_cost'",
        "'avg_price'",
        "'execution_history'",
        "'total_filled'",
        "'total_cost'",
        "'avg_price'",
        "'timestamp'",
        "'shares_filled'",
        "'price'",
        "'cumulative_cost'",
        "'total_filled'",
        "'total_cost'",
        "'avg_price'",
        "'execution_history'",
        "'timestamp'",
        "'shares_filled'",
        "'price'",
        "'cumulative_cost'",
        "'total_filled'",
        "'total_cost'",
        "'avg_price'",
        "'execution_history'",
        "'total_cost'",
        "'total_cost'",
        "'total_cost'",
        "'total_cost'",
        "'best_parameters'",
        "'best_parameters'",
        "'cont_kukanov'",
        "'total_cost'",
        "'results'",
        "'total_cost'",
        "'avg_price'",
        "'results'",
        "'avg_price'",
        "'best_ask'",
        "'total_cost'",
        "'total_cost'",
        "'avg_price'",
        "'avg_price'",
        "'twap'",
        "'total_cost'",
        "'total_cost'",
        "'avg_price'",
        "'avg_price'",
        "'vwap'",
        "'total_cost'",
        "'total_cost'",
        "'avg_price'",
        "'avg_price'",
        "'savings_bps'",
        "'best_ask'",
        "'results'",
        "'twap'",
        "'results'",
        "'vwap'",
        "'results'",
        "'results'",
        "'total_cost'",
        "'Cont-Kukanov'",
        "'total_cost'",
        "'Best Ask'",
        "'--'",
        "'total_cost'",
        "'TWAP'",
        "':'",
        "'total_cost'",
        "'VWAP'",
        "'-.'",
        "'Shares Executed'",
        "'Cumulative Cost ($)'",
        "'Cumulative Cost Comparison'",
        "'results.png'",
        "'cont&Kukanov/l1_day.csv'",
        "f\"Error in main execution: {e}\"",
        "\"__main__\""
    ],
    "variables": [
        "logger",
        "df",
        "df",
        "df_first",
        "snapshots",
        "ts_data",
        "ts_dict",
        "snapshots",
        "ts",
        "venue_counts",
        "ask",
        "ask_size",
        "fee",
        "rebate",
        "total_available",
        "step",
        "splits",
        "new_splits",
        "used",
        "max_v",
        "splits",
        "best_cost",
        "best_split",
        "cost",
        "best_cost",
        "best_split",
        "executed",
        "cash_spent",
        "exe",
        "maker_rebate",
        "underfill",
        "overfill",
        "risk_pen",
        "cost_pen",
        "best_cost",
        "best_params",
        "best_results",
        "param_ranges",
        "n_combinations",
        "results",
        "best_cost",
        "best_params",
        "best_results",
        "best_params",
        "best_results",
        "total_filled",
        "total_cost",
        "unfilled",
        "execution_history",
        "venues",
        "allocation",
        "_",
        "fill",
        "total_filled",
        "total_cost",
        "execution_history",
        "best_venue",
        "price",
        "size",
        "fill",
        "timestamps",
        "start_time",
        "end_time",
        "total_seconds",
        "num_buckets",
        "bucket_size",
        "total_filled",
        "total_cost",
        "execution_history",
        "current_bucket",
        "bucket_filled",
        "current_time",
        "seconds_from_start",
        "bucket",
        "current_bucket",
        "bucket_filled",
        "remaining",
        "best_venue",
        "price",
        "size",
        "fill",
        "total_filled",
        "total_cost",
        "execution_history",
        "snapshot_volume",
        "snapshot_vwap",
        "best_venue",
        "price",
        "size",
        "fill",
        "results",
        "snapshots",
        "cont_kukanov_results",
        "best_ask_results",
        "twap_results",
        "vwap_results",
        "results_json"
    ],
    "comments": [
        "Set up logging",
        "Sort and keep first record per publisher per timestamp",
        "Create snapshots dictionary",
        "Log venue statistics",
        "Part 2: Static Allocator",
        "Validate venue sizes",
        "Log allocation attempt",
        "As per pseudocode",
        "Generate all possible splits",
        "Find best split",
        "Parameter ranges based on Cont & Kukanov paper",
        "Penalty for overfilling",
        "Penalty for underfilling",
        "Queue risk penalty",
        "Only consider complete fills",
        "Fall back to default parameters",
        "Part 3: Execution Simulation",
        "Convert venue data to Venue objects",
        "Get allocation",
        "Execute orders",
        "Part 4: Baseline Strategies",
        "Find best ask",
        "x[1][0] is ask price",
        "Execute at best ask",
        "x[1][0] is ask price",
        "Calculate VWAP for this snapshot",
        "Execute at VWAP",
        "Plot cumulative costs",
        "Add labels and title",
        "Save plot",
        "Load and process market data",
        "Run parameter search for Cont-Kukanov strategy",
        "Run baseline strategies",
        "Generate plot",
        "Format and print results"
    ],
    "docstrings": [
        "\"\"\"\n    Load and process L1 data into snapshots.\n    \n    Args:\n        filepath: Path to the CSV file containing market data\n        \n    Returns:\n        Dictionary of snapshots where each snapshot contains venue data\n    \"\"\"",
        "\"\"\"\n    Represents a trading venue with its pricing and capacity information.\n    \n    Attributes:\n        ask: Ask price at the venue\n        ask_size: Available size at the ask price\n        fee: Trading fee at the venue\n        rebate: Maker rebate at the venue\n    \"\"\"",
        "\"\"\"\n    Implements the Cont-Kukanov allocator algorithm.\n    \n    Args:\n        order_size: Target number of shares to buy\n        venues: List of Venue objects with ask prices and sizes\n        lambda_over: Cost penalty per extra share bought\n        lambda_under: Cost penalty per unfilled share\n        theta_queue: Queue-risk penalty (linear in total mis-execution)\n    \n    Returns:\n        Tuple of (best_split, best_cost) where:\n        - best_split: List of shares to allocate to each venue\n        - best_cost: Total expected cost of the allocation\n    \"\"\"",
        "\"\"\"\n    Computes the total cost for a given allocation.\n    \n    Args:\n        split: List of shares allocated to each venue\n        venues: List of Venue objects\n        order_size: Target order size\n        lambda_over: Cost penalty per extra share\n        lambda_under: Cost penalty per unfilled share\n        theta_queue: Queue-risk penalty\n    \n    Returns:\n        Total cost including execution cost, penalties, and rebates\n    \"\"\"",
        "\"\"\"\n    Search for optimal parameters using random search\n    \n    Args:\n        snapshots: Dictionary of market snapshots\n        \n    Returns:\n        Dictionary containing best parameters and their results\n    \"\"\"",
        "\"\"\"\n    Simulate execution using the allocator.\n    \n    Args:\n        snapshots: Dictionary of market snapshots\n        target_size: Target order size\n        lambda_over: Cost penalty per extra share\n        lambda_under: Cost penalty per unfilled share\n        theta_queue: Queue-risk penalty\n    \n    Returns:\n        Dictionary containing execution results\n    \"\"\"",
        "\"\"\"\n    Always hit the lowest ask at each timestamp.\n    \n    Args:\n        snapshots: Dictionary of market snapshots\n        target_size: Target order size\n    \n    Returns:\n        Dictionary containing execution results\n    \"\"\"",
        "\"\"\"\n    Uniformly split orders over time buckets.\n    \n    Args:\n        snapshots: Dictionary of market snapshots\n        target_size: Target order size\n        bucket_seconds: Size of time buckets in seconds\n    \n    Returns:\n        Dictionary containing execution results\n    \"\"\"",
        "\"\"\"\n    Weight prices by displayed ask size.\n    \n    Args:\n        snapshots: Dictionary of market snapshots\n        target_size: Target order size\n    \n    Returns:\n        Dictionary containing execution results\n    \"\"\"",
        "\"\"\"\n    Calculate savings in basis points\n    \"\"\"",
        "\"\"\"\n    Format results as required JSON\n    \"\"\"",
        "\"\"\"\n    Generate cumulative cost plot\n    \"\"\""
    ],
    "functions": [
        "load_market_data",
        "allocate",
        "compute_cost",
        "search_parameters",
        "simulate_execution",
        "best_ask_strategy",
        "twap_strategy",
        "vwap_strategy",
        "calculate_bps_savings",
        "format_results",
        "plot_cumulative_costs",
        "main"
    ],
    "classes": [
        "Venue"
    ]
}