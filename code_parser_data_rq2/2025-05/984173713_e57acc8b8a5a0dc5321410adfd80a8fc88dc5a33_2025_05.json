{
    "identifiers": [
        "json",
        "hashlib",
        "time",
        "homeassistant",
        "core",
        "HomeAssistant",
        "ServiceCall",
        "scenes",
        "hashlib",
        "md5",
        "join",
        "scenes",
        "encode",
        "hexdigest",
        "hass",
        "HomeAssistant",
        "config",
        "call",
        "ServiceCall",
        "call",
        "data",
        "get",
        "isinstance",
        "raw",
        "raw",
        "raw",
        "isinstance",
        "raw",
        "raw",
        "scenes",
        "call",
        "data",
        "get",
        "generate_key",
        "scenes",
        "hass",
        "states",
        "get",
        "STORE_SENSOR",
        "state",
        "attributes",
        "get",
        "state",
        "json",
        "loads",
        "data",
        "mapping",
        "get",
        "key",
        "entry",
        "get",
        "entry",
        "get",
        "idx",
        "len",
        "scenes",
        "new_idx",
        "time",
        "time",
        "scenes",
        "idx",
        "len",
        "scenes",
        "go_to_last_delay",
        "last_ts",
        "now_ts",
        "last_ts",
        "go_to_last_delay",
        "scenes",
        "hass",
        "services",
        "async_call",
        "target_scene",
        "blocking",
        "new_idx",
        "now_ts",
        "hass",
        "states",
        "async_set",
        "STORE_SENSOR",
        "json",
        "dumps",
        "mapping",
        "hass",
        "services",
        "async_register",
        "DOMAIN",
        "handle_sequence"
    ],
    "literals": [
        "\"scene_sequencer\"",
        "\"binary_sensor.scene_sequencer_store\"",
        "\",\"",
        "\"scenes\"",
        "\"entity_id\"",
        "\"entity_id\"",
        "\"go_to_last_delay\"",
        "\"data\"",
        "\"idx\"",
        "\"ts\"",
        "\"idx\"",
        "\"ts\"",
        "\"scene\"",
        "\"turn_on\"",
        "\"entity_id\"",
        "\"idx\"",
        "\"ts\"",
        "\"data\"",
        "\"cycle\""
    ],
    "variables": [
        "DOMAIN",
        "STORE_SENSOR",
        "raw",
        "scenes",
        "scenes",
        "scenes",
        "go_to_last_delay",
        "key",
        "state",
        "data",
        "mapping",
        "mapping",
        "entry",
        "idx",
        "last_ts",
        "new_idx",
        "now_ts",
        "target_scene",
        "target_scene",
        "new_idx",
        "now_ts",
        "mapping",
        "key"
    ],
    "comments": [
        "Extract scenes from service call data, supporting both list and dict formats",
        "Handle entity selector format",
        "Handle direct list format",
        "Exit if no scenes provided",
        "Get timeout parameter (seconds) for jumping to last scene",
        "Create unique identifier for this scene sequence",
        "Retrieve persistent storage data for all sequences",
        "Initialize empty storage if retrieval fails",
        "Get stored sequence state or initialize defaults",
        "Current position in sequence",
        "Timestamp of last activation",
        "Calculate current timestamp and target scene",
        "Check if we should jump to the last scene due to timeout",
        "Reset to beginning for next activation",
        "Reset timestamp",
        "Activate the target scene",
        "Update stored state for this sequence",
        "Save state to persistent storage",
        "Register the component's service"
    ],
    "docstrings": [
        "\"\"\"\n    Generate a unique, deterministic identifier for a sequence of scenes.\n    \n    Creates a shortened MD5 hash from the scene entity IDs, ensuring each unique \n    scene sequence has its own persistent tracking data.\n    \n    Args:\n        scenes: List of scene entity IDs\n        \n    Returns:\n        10-character hash string that uniquely identifies this scene sequence\n    \"\"\"",
        "\"\"\"\n    Set up the Scene Sequencer component.\n    \n    Registers the cycle service that allows sequencing through scenes.\n    \n    Args:\n        hass: Home Assistant instance\n        config: Component configuration\n        \n    Returns:\n        True indicating successful setup\n    \"\"\"",
        "\"\"\"\n        Handle the scene_sequencer.cycle service call.\n        \n        Advances through a sequence of scenes, tracking position for each unique\n        sequence. Supports jumping to the final scene after a period of inactivity.\n        \n        Args:\n            call: Service call data containing scenes and optional timeout\n        \"\"\""
    ],
    "functions": [
        "generate_key",
        "async_setup",
        "handle_sequence"
    ],
    "classes": []
}