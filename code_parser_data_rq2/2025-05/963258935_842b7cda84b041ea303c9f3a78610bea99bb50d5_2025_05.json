{
    "identifiers": [
        "Room",
        "startRoom",
        "Inventory",
        "CurrentRoom",
        "startRoom",
        "playerAction",
        "Player",
        "player",
        "CurrentRoom",
        "Exits",
        "ContainsKey",
        "playerAction",
        "CurrentRoom",
        "CurrentRoom",
        "Exits",
        "playerAction",
        "WriteLine",
        "playerAction",
        "CurrentRoom",
        "Name",
        "WriteLine",
        "CurrentRoom",
        "Description",
        "IterateItems",
        "player",
        "DisplayExits",
        "CurrentRoom",
        "playerAction",
        "look",
        "WriteLine",
        "CurrentRoom",
        "Name",
        "WriteLine",
        "CurrentRoom",
        "Description",
        "IterateItems",
        "player",
        "DisplayExits",
        "CurrentRoom",
        "playerAction",
        "inv",
        "ShowInventory",
        "player",
        "playerAction",
        "Contains",
        "get",
        "GetItem",
        "playerAction",
        "player",
        "playerAction",
        "Contains",
        "use",
        "UseItem",
        "playerAction",
        "player",
        "playerAction",
        "help",
        "WriteLine",
        "WriteLine",
        "look",
        "inv",
        "get",
        "north",
        "south",
        "east",
        "west",
        "WriteLine",
        "Room",
        "CurrentRoom",
        "i",
        "CurrentRoom",
        "NumberOfExits",
        "Count",
        "i",
        "CurrentRoom",
        "NumberOfExits",
        "Count",
        "ExitsList",
        "CurrentRoom",
        "NumberOfExits",
        "i",
        "ExitsList",
        "CurrentRoom",
        "NumberOfExits",
        "i",
        "WriteLine",
        "ExitsList",
        "Player",
        "player",
        "player",
        "CurrentRoom",
        "Items",
        "Count",
        "WriteLine",
        "i",
        "player",
        "CurrentRoom",
        "Items",
        "Count",
        "i",
        "WriteLine",
        "player",
        "CurrentRoom",
        "Items",
        "i",
        "WriteLine",
        "Player",
        "player",
        "player",
        "Inventory",
        "Count",
        "WriteLine",
        "WriteLine",
        "i",
        "player",
        "Inventory",
        "Count",
        "i",
        "WriteLine",
        "player",
        "Inventory",
        "i",
        "WriteLine",
        "playerAction",
        "Player",
        "player",
        "player",
        "Inventory",
        "Contains",
        "item",
        "player",
        "CurrentRoom",
        "Name",
        "room",
        "WriteLine",
        "item",
        "player",
        "Inventory",
        "Contains",
        "item",
        "WriteLine",
        "item",
        "playerAction",
        "Player",
        "player",
        "i",
        "player",
        "CurrentRoom",
        "Items",
        "Count",
        "i",
        "playerAction",
        "Split",
        "playerAction",
        "IndexOf",
        "itemIndex",
        "playerAction",
        "IndexOf",
        "WriteLine",
        "missingItem",
        "tempItem",
        "playerAction",
        "Substring",
        "itemIndex",
        "Trim",
        "tempItem",
        "ToLower",
        "player",
        "CurrentRoom",
        "Items",
        "i",
        "ToLower",
        "player",
        "Inventory",
        "Add",
        "player",
        "CurrentRoom",
        "Items",
        "i",
        "player",
        "CurrentRoom",
        "Items",
        "RemoveAt",
        "i",
        "WriteLine",
        "tempItem",
        "itemFound",
        "itemFound",
        "missingItem",
        "WriteLine",
        "tempItem"
    ],
    "literals": [
        "\"look\"",
        "\"get\"",
        "\"use\"",
        "\"i\"",
        "\"help\"",
        "\"north\"",
        "\"south\"",
        "\"east\"",
        "\"west\"",
        "\"exit\"",
        "\"quit\"",
        "\"List of possible actions to perform: \"",
        "\"You can't go that way.\"",
        "\"\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"You see: \"",
        "\"You have: \"",
        "\"You have no items\"",
        "\"keycard\"",
        "\"Bridge\"",
        "\"\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"What do you want to get?\""
    ],
    "variables": [
        "Inventory",
        "Room",
        "CurrentRoom",
        "look",
        "get",
        "use",
        "inv",
        "help",
        "north",
        "south",
        "east",
        "west",
        "exit",
        "quit",
        "ExitsList",
        "i",
        "i",
        "i",
        "item",
        "room",
        "itemFound",
        "missingItem",
        "tempItem",
        "i",
        "itemIndex",
        "arrayWords"
    ],
    "comments": [
        "Call methods",
        "Call methods",
        "Call method",
        "Call method",
        "Call method",
        "show what kind of commands/actions the user can perform",
        "Note: move this to it's own method",
        "check number of exits for CurrentRoom (the room the player is in)",
        "End DisplayExits",
        "Check if there are items in the room",
        "iterate items in room",
        "Add some space after item iteration",
        "End of IterateItems",
        "Show player's inventory",
        "Check if player has any items",
        "End of ShowInventory",
        "Player can pickup any item in CurrentRoom's itemlist",
        "Use String.Split method to split verb/items based on blank space (\" \")",
        "Split player input based on using blank space(\" \") as a marker",
        "Note: This means that currently this routine only accepts 1 blank space, i.e. \"old newspaper\" will fail",
        "",
        "Check if blank space (\" \") can actually be found in the input string",
        "or else we would get an ArgumentOutOfRangeException when assigning itemIndex",
        "inform user if input is missing a string (or item in this case). e.g. 'get card'/get keycard",
        "remove any whitespace",
        "Extract the word from index 0 to before the blank space, in this case it's 'get'.",
        "We don't currently use it but might later on",
        "string get = playerAction.Substring(0, itemIndex);",
        "if player input word is the same as an item in CurrentRoom",
        "we add this item to inventory and remove it from CurrentRoom's itemlist",
        "Remove item from CurrentRoom's itemlist",
        "Inform user if item is not in CurrentRoom's itemlist",
        "End of GetItem",
        "End of class Player"
    ],
    "docstrings": [],
    "functions": [
        "Player",
        "Action",
        "DisplayExits",
        "IterateItems",
        "ShowInventory",
        "UseItem",
        "GetItem"
    ],
    "classes": [
        "Player"
    ]
}