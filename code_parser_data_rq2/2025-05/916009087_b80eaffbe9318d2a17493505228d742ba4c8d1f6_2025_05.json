{
    "identifiers": [
        "NextRequest",
        "NextResponse",
        "path",
        "fs",
        "fsSync",
        "dataSourceDocsCollection",
        "ObjectId",
        "process",
        "request",
        "fileId",
        "NextResponse",
        "path",
        "UPLOADS_DIR",
        "fileId",
        "request",
        "fs",
        "filePath",
        "Uint8Array",
        "data",
        "NextResponse",
        "error",
        "error",
        "NextResponse",
        "request",
        "fileId",
        "NextResponse",
        "path",
        "UPLOADS_DIR",
        "fileId",
        "dataSourceDocsCollection",
        "ObjectId",
        "fileId",
        "doc",
        "NextResponse",
        "doc",
        "NextResponse",
        "doc",
        "fs",
        "filePath",
        "fsSync",
        "filePath",
        "ReadableStream",
        "controller",
        "nodeStream",
        "chunk",
        "controller",
        "chunk",
        "nodeStream",
        "controller",
        "nodeStream",
        "err",
        "controller",
        "err",
        "NextResponse",
        "webStream",
        "mimeType",
        "fileName",
        "error",
        "error",
        "NextResponse"
    ],
    "literals": [
        "'next/server'",
        "'path'",
        "'fs/promises'",
        "'fs'",
        "'@/app/lib/mongodb'",
        "'mongodb'",
        "'/uploads'",
        "string",
        "'Missing file ID'",
        "'Error saving file:'",
        "'Failed to save file'",
        "string",
        "'Missing file ID'",
        "'File not found'",
        "'file_local'",
        "'File is not local'",
        "'application/octet-stream'",
        "'data'",
        "'end'",
        "'error'",
        "'Content-Type'",
        "'Content-Disposition'",
        "attachment; filename=\"${fileName}\"",
        "'Error reading file:'",
        "'File not found'"
    ],
    "variables": [
        "UPLOADS_DIR",
        "fileId",
        "filePath",
        "data",
        "fileId",
        "filePath",
        "doc",
        "mimeType",
        "fileName",
        "nodeStream",
        "webStream"
    ],
    "comments": [
        "PUT endpoint to handle file uploads",
        "GET endpoint to handle file downloads",
        "get mimetype from database",
        "Check if file exists",
        "Create a readable stream",
        "Convert Node.js stream to Web stream"
    ],
    "docstrings": [],
    "functions": [
        "PUT",
        "GET",
        "start"
    ],
    "classes": []
}