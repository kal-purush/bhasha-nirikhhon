{
    "identifiers": [
        "describe",
        "expect",
        "it",
        "unzipWith",
        "unzip",
        "constant",
        "describe",
        "it",
        "unzipWith",
        "array",
        "a",
        "b",
        "c",
        "a",
        "b",
        "c",
        "expect",
        "actual",
        "it",
        "unzipWith",
        "args",
        "args",
        "arguments",
        "expect",
        "args",
        "it",
        "values",
        "constant",
        "unzip",
        "array",
        "values",
        "value",
        "index",
        "index",
        "unzipWith",
        "array",
        "value",
        "unzipWith",
        "array",
        "expect",
        "actual",
        "expected",
        "it",
        "expect",
        "unzipWith",
        "array",
        "a",
        "b",
        "a",
        "b",
        "it",
        "expect",
        "unzipWith",
        "array",
        "a",
        "b",
        "a",
        "b",
        "it",
        "expect",
        "unzipWith",
        "it",
        "expect",
        "unzipWith",
        "expect",
        "unzipWith"
    ],
    "literals": [
        "'vitest'",
        "'./map'",
        "'./unzipWith'",
        "'../..'",
        "'../_internal/slice'",
        "'../util/constant'",
        "'unzipWith'",
        "'should unzip arrays combining regrouped elements with `iteratee`'",
        "'should provide correct `iteratee` arguments'",
        "'should perform a basic unzip when `iteratee` is nullish'",
        "'should work with array-like objects'",
        "'should work with tuples of different lengths'",
        "'barney'",
        "'fred'",
        "'barney'",
        "'fred'",
        "'should return an empty array when `array` is an empty array'",
        "'should return an empty array when `array` is null or undefined'"
    ],
    "variables": [
        "array",
        "actual",
        "args",
        "array",
        "values",
        "expected",
        "actual",
        "array",
        "array"
    ],
    "comments": [
        "eslint-disable-next-line @typescript-eslint/no-unused-expressions, prefer-rest-params",
        "eslint-disable-next-line no-sparse-arrays"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}