{
    "identifiers": [
        "renderHook",
        "waitFor",
        "HttpResponse",
        "createAPIInterceptor",
        "createSoapAPIInterceptor",
        "mockedData",
        "MailMsg",
        "Invite",
        "useFetchInvite",
        "jest",
        "jest",
        "jest",
        "_key",
        "defaultValue",
        "defaultValue",
        "describe",
        "it",
        "renderHook",
        "useFetchInvite",
        "mailMsg",
        "expect",
        "result",
        "expect",
        "result",
        "it",
        "createAPIInterceptor",
        "HttpResponse",
        "renderHook",
        "useFetchInvite",
        "baseMailMsg",
        "waitFor",
        "expect",
        "result",
        "expect",
        "result",
        "it",
        "mockedData",
        "mockedData",
        "createSoapAPIInterceptor",
        "invite",
        "renderHook",
        "useFetchInvite",
        "baseMailMsg",
        "waitFor",
        "expect",
        "result",
        "invite",
        "expect",
        "result",
        "expect",
        "result",
        "it",
        "createAPIInterceptor",
        "HttpResponse",
        "renderHook",
        "useFetchInvite",
        "baseMailMsg",
        "waitFor",
        "expect",
        "result",
        "expect",
        "result",
        "it",
        "mockedData",
        "mockedData",
        "createSoapAPIInterceptor",
        "invite",
        "renderHook",
        "useFetchInvite",
        "baseMailMsg",
        "waitFor",
        "expect",
        "result",
        "invite",
        "expect",
        "result",
        "expect",
        "result"
    ],
    "literals": [
        "'@testing-library/react'",
        "'msw'",
        "'../../../carbonio-ui-commons/test/mocks/network/msw/create-api-interceptor'",
        "'../../../test/generators'",
        "'../../../types/integrations'",
        "'../../../types/store/invite'",
        "'../useFetchInvite'",
        "'react-i18next'",
        "'react-i18next'",
        "string",
        "string",
        "'useFetchInvite'",
        "'123'",
        "'123'",
        "'returns error when appointment ID is missing'",
        "'MISSING_APPOINTMENT_ID'",
        "'sets generic error when GetAppointment returns Fault'",
        "'post'",
        "'/service/soap/GetAppointmentRequest'",
        "'Something went wrong, please try again'",
        "'fetches invite successfully'",
        "'GetAppointment'",
        "'handles exception during fetch gracefully'",
        "'post'",
        "'/service/soap/GetAppointmentRequest'",
        "'Something went wrong, please try again'",
        "'includes content when includeContent is true'",
        "''",
        "'GetAppointment'"
    ],
    "variables": [
        "baseMailMsg",
        "mailMsg",
        "invite",
        "invite",
        "requestBody"
    ],
    "comments": [
        "eslint-disable testing-library/no-wait-for-multiple-assertions"
    ],
    "docstrings": [
        "* SPDX-FileCopyrightText: 2025 Zextras <https://www.zextras.com>\n *\n * SPDX-License-Identifier: AGPL-3.0-only"
    ],
    "functions": [],
    "classes": []
}