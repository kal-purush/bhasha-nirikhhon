{
    "identifiers": [
        "print_function",
        "division",
        "absolute_import",
        "copy",
        "copylib",
        "sys",
        "sys",
        "version_info",
        "sys",
        "version_info",
        "unittest2",
        "unittest",
        "unittest",
        "unittest",
        "mock",
        "mock",
        "ImportError",
        "mock",
        "matplotlib",
        "matplotlib",
        "use",
        "numpy",
        "np",
        "imgaug",
        "ia",
        "imgaug",
        "testutils",
        "reseed",
        "imgaug",
        "random",
        "iarandom",
        "np",
        "__version__",
        "NP_VERSION",
        "startswith",
        "NP_VERSION",
        "startswith",
        "NP_VERSION",
        "startswith",
        "NP_VERSION",
        "startswith",
        "NP_VERSION",
        "startswith",
        "NP_VERSION",
        "startswith",
        "NP_VERSION",
        "startswith",
        "NP_VERSION",
        "startswith",
        "NP_VERSION",
        "startswith",
        "NP_VERSION",
        "startswith",
        "unittest",
        "TestCase",
        "reseed",
        "_Base",
        "iarandom",
        "SUPPORTS_NEW_NP_RNG_STYLE",
        "IS_NP_117_OR_HIGHER",
        "iarandom",
        "get_global_rng",
        "iarandom",
        "GLOBAL_RNG",
        "_Base",
        "iarandom",
        "supports_new_numpy_rng_style",
        "IS_NP_117_OR_HIGHER",
        "_Base",
        "iarandom",
        "seed",
        "iarandom",
        "get_global_rng",
        "iarandom",
        "RNG",
        "rng",
        "rng",
        "equals",
        "expected",
        "_Base",
        "mock",
        "patch",
        "mock",
        "patch",
        "mock_np116",
        "mock_np117",
        "iarandom",
        "seed",
        "IS_NP_117_OR_HIGHER",
        "mock_np117",
        "assert_called_once_with",
        "mock_np116",
        "call_count",
        "mock_np116",
        "assert_called_once_with",
        "mock_np117",
        "call_count",
        "iarandom",
        "seed",
        "iarandom",
        "GLOBAL_RNG",
        "equals",
        "iarandom",
        "RNG",
        "iarandom",
        "CURRENT_RANDOM_STATE",
        "iarandom",
        "GLOBAL_RNG",
        "_Base",
        "mock",
        "patch",
        "mock_subfunc",
        "iarandom",
        "normalize_generator",
        "inputs",
        "mock_subfunc",
        "call_count",
        "mock_subfunc",
        "call_args",
        "inputs",
        "mock_subfunc",
        "call_args",
        "inputs",
        "result",
        "_Base",
        "mock",
        "patch",
        "mock",
        "patch",
        "mock_np116",
        "mock_np117",
        "iarandom",
        "normalize_generator_",
        "IS_NP_117_OR_HIGHER",
        "result",
        "mock_np117",
        "assert_called_once_with",
        "mock_np116",
        "call_count",
        "result",
        "mock_np116",
        "assert_called_once_with",
        "mock_np117",
        "call_count",
        "iarandom",
        "normalize_generator_",
        "result",
        "iarandom",
        "get_global_rng",
        "generator",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "np",
        "random",
        "SeedSequence",
        "iarandom",
        "normalize_generator_",
        "seedseq",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "np",
        "random",
        "SeedSequence",
        "iarandom",
        "is_generator_equal_to",
        "result",
        "expected",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "iarandom",
        "BIT_GENERATOR",
        "np",
        "random",
        "SeedSequence",
        "iarandom",
        "normalize_generator_",
        "bgen",
        "result",
        "bit_generator",
        "bgen",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "np",
        "random",
        "SeedSequence",
        "iarandom",
        "normalize_generator_",
        "gen",
        "result",
        "gen",
        "np",
        "random",
        "RandomState",
        "iarandom",
        "normalize_generator_",
        "rs",
        "IS_NP_117_OR_HIGHER",
        "iarandom",
        "generate_seed_",
        "np",
        "random",
        "RandomState",
        "iarandom",
        "convert_seed_to_generator",
        "seed",
        "iarandom",
        "is_generator_equal_to",
        "result",
        "expected",
        "result",
        "rs",
        "iarandom",
        "normalize_generator_",
        "seed",
        "iarandom",
        "convert_seed_to_generator",
        "seed",
        "iarandom",
        "is_generator_equal_to",
        "result",
        "expected",
        "_Base",
        "mock",
        "patch",
        "mock",
        "patch",
        "mock_np116",
        "mock_np117",
        "iarandom",
        "convert_seed_to_generator",
        "IS_NP_117_OR_HIGHER",
        "result",
        "mock_np117",
        "assert_called_once_with",
        "mock_np116",
        "call_count",
        "result",
        "mock_np116",
        "assert_called_once_with",
        "mock_np117",
        "call_count",
        "iarandom",
        "convert_seed_to_generator",
        "IS_NP_117_OR_HIGHER",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "np",
        "random",
        "SeedSequence",
        "iarandom",
        "is_generator_equal_to",
        "gen",
        "expected",
        "np",
        "random",
        "RandomState",
        "iarandom",
        "is_generator_equal_to",
        "gen",
        "expected",
        "_Base",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "np",
        "random",
        "SeedSequence",
        "iarandom",
        "convert_seed_sequence_to_generator",
        "seedseq",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "np",
        "random",
        "SeedSequence",
        "iarandom",
        "is_generator_equal_to",
        "gen",
        "expected",
        "_Base",
        "copylib",
        "deepcopy",
        "iarandom",
        "get_global_rng",
        "generator",
        "iarandom",
        "create_pseudo_random_generator_",
        "iarandom",
        "convert_seed_to_generator",
        "iarandom",
        "generate_seed_",
        "global_gen",
        "iarandom",
        "is_generator_equal_to",
        "gen",
        "expected",
        "_Base",
        "mock",
        "patch",
        "mock",
        "patch",
        "mock_np116",
        "mock_np117",
        "iarandom",
        "create_fully_random_generator",
        "IS_NP_117_OR_HIGHER",
        "result",
        "mock_np117",
        "assert_called_once",
        "mock_np116",
        "call_count",
        "result",
        "mock_np116",
        "assert_called_once",
        "mock_np117",
        "call_count",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "np",
        "random",
        "SFC64",
        "mock",
        "patch",
        "mock_bitgen",
        "dummy_bitgen",
        "iarandom",
        "_create_fully_random_generator_np117",
        "mock_bitgen",
        "assert_called_once",
        "iarandom",
        "is_generator_equal_to",
        "result",
        "np",
        "random",
        "Generator",
        "dummy_bitgen",
        "np",
        "random",
        "RandomState",
        "mock",
        "patch",
        "mock_rs",
        "dummy_rs",
        "iarandom",
        "_create_fully_random_generator_np116",
        "mock_rs",
        "assert_called_once",
        "iarandom",
        "is_generator_equal_to",
        "result",
        "np",
        "random",
        "RandomState",
        "_Base",
        "mock",
        "patch",
        "mock_seeds",
        "iarandom",
        "convert_seed_to_generator",
        "iarandom",
        "generate_seed_",
        "gen",
        "mock_seeds",
        "assert_called_once_with",
        "gen",
        "_Base",
        "mock",
        "patch",
        "mock_integers",
        "iarandom",
        "convert_seed_to_generator",
        "iarandom",
        "generate_seeds_",
        "gen",
        "mock_integers",
        "assert_called_once_with",
        "gen",
        "iarandom",
        "SEED_MIN_VALUE",
        "iarandom",
        "SEED_MAX_VALUE",
        "size",
        "iarandom",
        "convert_seed_to_generator",
        "iarandom",
        "generate_seeds_",
        "gen",
        "len",
        "seeds",
        "ia",
        "is_np_array",
        "seeds",
        "seeds",
        "dtype",
        "name",
        "_Base",
        "mock",
        "patch",
        "mock_np116",
        "np",
        "random",
        "RandomState",
        "iarandom",
        "copy_generator",
        "gen",
        "gen_copy",
        "mock_np116",
        "assert_called_once_with",
        "gen",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "mock",
        "patch",
        "mock_np117",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "iarandom",
        "copy_generator",
        "gen",
        "gen_copy",
        "mock_np117",
        "assert_called_once_with",
        "gen",
        "np",
        "random",
        "RandomState",
        "iarandom",
        "_copy_generator_np116",
        "gen",
        "gen",
        "gen_copy",
        "iarandom",
        "is_generator_equal_to",
        "gen",
        "gen_copy",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "iarandom",
        "_copy_generator_np117",
        "gen",
        "gen",
        "gen_copy",
        "iarandom",
        "is_generator_equal_to",
        "gen",
        "gen_copy",
        "_Base",
        "mock",
        "patch",
        "mock",
        "patch",
        "mock_copy",
        "mock_get_global_rng",
        "iarandom",
        "convert_seed_to_generator",
        "iarandom",
        "RNG",
        "gen",
        "iarandom",
        "copy_generator_unless_global_rng",
        "gen",
        "mock_get_global_rng",
        "assert_called_once",
        "mock_copy",
        "call_count",
        "result",
        "gen",
        "mock",
        "patch",
        "mock",
        "patch",
        "mock_copy",
        "mock_get_global_rng",
        "iarandom",
        "convert_seed_to_generator",
        "iarandom",
        "convert_seed_to_generator",
        "iarandom",
        "RNG",
        "gen2",
        "iarandom",
        "copy_generator_unless_global_rng",
        "gen1",
        "mock_get_global_rng",
        "assert_called_once",
        "mock_copy",
        "assert_called_once",
        "result",
        "_Base",
        "mock",
        "patch",
        "mock",
        "patch",
        "mock_np116",
        "mock_np117",
        "iarandom",
        "convert_seed_to_generator",
        "iarandom",
        "reset_generator_cache_",
        "gen",
        "IS_NP_117_OR_HIGHER",
        "result",
        "mock_np117",
        "assert_called_once",
        "mock_np116",
        "call_count",
        "result",
        "mock_np116",
        "assert_called_once",
        "mock_np117",
        "call_count",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "iarandom",
        "convert_seed_to_generator",
        "copylib",
        "deepcopy",
        "gen",
        "iarandom",
        "_get_generator_state_np117",
        "gen",
        "copylib",
        "deepcopy",
        "gen",
        "iarandom",
        "set_generator_state_",
        "gen_with_cache",
        "state",
        "copylib",
        "deepcopy",
        "gen_with_cache",
        "iarandom",
        "reset_generator_cache_",
        "gen_with_cache",
        "iarandom",
        "is_generator_equal_to",
        "gen_cache_reset",
        "gen_without_cache_copy",
        "iarandom",
        "is_generator_equal_to",
        "gen_cache_reset",
        "gen_with_cache_copy",
        "np",
        "random",
        "RandomState",
        "copylib",
        "deepcopy",
        "gen",
        "iarandom",
        "_get_generator_state_np116",
        "gen",
        "state",
        "copylib",
        "deepcopy",
        "gen",
        "iarandom",
        "set_generator_state_",
        "gen_with_cache",
        "state",
        "copylib",
        "deepcopy",
        "gen_with_cache",
        "iarandom",
        "reset_generator_cache_",
        "gen_with_cache",
        "iarandom",
        "is_generator_equal_to",
        "gen_cache_reset",
        "gen_without_cache_copy",
        "iarandom",
        "is_generator_equal_to",
        "gen_cache_reset",
        "gen_with_cache_copy",
        "_Base",
        "mock",
        "patch",
        "mock_derive_gens",
        "iarandom",
        "convert_seed_to_generator",
        "iarandom",
        "derive_generator_",
        "gen",
        "mock_derive_gens",
        "assert_called_once_with",
        "gen",
        "n",
        "gen_derived",
        "iarandom",
        "convert_seed_to_generator",
        "copylib",
        "deepcopy",
        "gen",
        "iarandom",
        "derive_generator_",
        "gen",
        "iarandom",
        "is_generator_equal_to",
        "gen_derived",
        "gen_copy",
        "iarandom",
        "is_generator_equal_to",
        "gen_copy",
        "gen",
        "_Base",
        "mock",
        "patch",
        "mock",
        "patch",
        "mock_np116",
        "mock_np117",
        "iarandom",
        "convert_seed_to_generator",
        "iarandom",
        "derive_generators_",
        "gen",
        "isinstance",
        "gen",
        "np",
        "random",
        "RandomState",
        "result",
        "mock_np116",
        "assert_called_once",
        "mock_np117",
        "call_count",
        "result",
        "mock_np117",
        "assert_called_once",
        "mock_np116",
        "call_count",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "iarandom",
        "convert_seed_to_generator",
        "copylib",
        "deepcopy",
        "gen",
        "iarandom",
        "derive_generators_",
        "gen",
        "len",
        "result",
        "np",
        "all",
        "isinstance",
        "gen",
        "np",
        "random",
        "Generator",
        "gen",
        "result",
        "iarandom",
        "is_generator_equal_to",
        "result",
        "gen_copy",
        "iarandom",
        "is_generator_equal_to",
        "result",
        "gen_copy",
        "iarandom",
        "is_generator_equal_to",
        "result",
        "result",
        "iarandom",
        "is_generator_equal_to",
        "gen",
        "gen_copy",
        "np",
        "random",
        "RandomState",
        "copylib",
        "deepcopy",
        "gen",
        "iarandom",
        "derive_generators_",
        "gen",
        "len",
        "result",
        "np",
        "all",
        "isinstance",
        "gen",
        "np",
        "random",
        "RandomState",
        "gen",
        "result",
        "iarandom",
        "is_generator_equal_to",
        "result",
        "gen_copy",
        "iarandom",
        "is_generator_equal_to",
        "result",
        "gen_copy",
        "iarandom",
        "is_generator_equal_to",
        "result",
        "result",
        "iarandom",
        "is_generator_equal_to",
        "gen",
        "gen_copy",
        "_Base",
        "mock",
        "patch",
        "mock",
        "patch",
        "mock_np116",
        "mock_np117",
        "iarandom",
        "convert_seed_to_generator",
        "iarandom",
        "get_generator_state",
        "gen",
        "isinstance",
        "gen",
        "np",
        "random",
        "RandomState",
        "result",
        "mock_np116",
        "assert_called_once",
        "mock_np117",
        "call_count",
        "result",
        "mock_np117",
        "assert_called_once",
        "mock_np116",
        "call_count",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "iarandom",
        "convert_seed_to_generator",
        "iarandom",
        "get_generator_state",
        "gen",
        "state",
        "gen",
        "bit_generator",
        "state",
        "iarandom",
        "convert_seed_to_generator",
        "iarandom",
        "get_generator_state",
        "gen",
        "state",
        "gen",
        "bit_generator",
        "state",
        "_Base",
        "mock",
        "patch",
        "mock",
        "patch",
        "mock_np116",
        "mock_np117",
        "iarandom",
        "convert_seed_to_generator",
        "iarandom",
        "set_generator_state_",
        "gen",
        "state",
        "isinstance",
        "gen",
        "np",
        "random",
        "RandomState",
        "mock_np116",
        "assert_called_once_with",
        "gen",
        "state",
        "mock_np117",
        "call_count",
        "mock_np117",
        "assert_called_once_with",
        "gen",
        "state",
        "mock_np116",
        "call_count",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "copylib",
        "deepcopy",
        "gen1",
        "copylib",
        "deepcopy",
        "gen2",
        "iarandom",
        "_set_generator_state_np117_",
        "gen2",
        "iarandom",
        "get_generator_state",
        "gen1",
        "iarandom",
        "is_generator_equal_to",
        "gen2",
        "gen1",
        "iarandom",
        "is_generator_equal_to",
        "gen1",
        "gen1_copy",
        "iarandom",
        "is_generator_equal_to",
        "gen2",
        "gen2_copy",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "copylib",
        "deepcopy",
        "gen1",
        "copylib",
        "deepcopy",
        "gen2",
        "iarandom",
        "_set_generator_state_np117_",
        "gen2",
        "iarandom",
        "get_generator_state",
        "gen1",
        "gen1",
        "random",
        "size",
        "gen2",
        "random",
        "size",
        "gen1_copy",
        "random",
        "size",
        "gen2_copy",
        "random",
        "size",
        "np",
        "allclose",
        "samples1",
        "samples2",
        "np",
        "allclose",
        "samples1",
        "samples1_copy",
        "np",
        "allclose",
        "samples2",
        "samples2_copy",
        "np",
        "random",
        "RandomState",
        "np",
        "random",
        "RandomState",
        "copylib",
        "deepcopy",
        "gen1",
        "copylib",
        "deepcopy",
        "gen2",
        "iarandom",
        "_set_generator_state_np116_",
        "gen2",
        "iarandom",
        "get_generator_state",
        "gen1",
        "iarandom",
        "is_generator_equal_to",
        "gen2",
        "gen1",
        "iarandom",
        "is_generator_equal_to",
        "gen1",
        "gen1_copy",
        "iarandom",
        "is_generator_equal_to",
        "gen2",
        "gen2_copy",
        "np",
        "random",
        "RandomState",
        "np",
        "random",
        "RandomState",
        "copylib",
        "deepcopy",
        "gen1",
        "copylib",
        "deepcopy",
        "gen2",
        "iarandom",
        "_set_generator_state_np116_",
        "gen2",
        "iarandom",
        "get_generator_state",
        "gen1",
        "gen1",
        "random",
        "size",
        "gen2",
        "random",
        "size",
        "gen1_copy",
        "random",
        "size",
        "gen2_copy",
        "random",
        "size",
        "np",
        "allclose",
        "samples1",
        "samples2",
        "np",
        "allclose",
        "samples1",
        "samples1_copy",
        "np",
        "allclose",
        "samples2",
        "samples2_copy",
        "_Base",
        "mock",
        "patch",
        "mock",
        "patch",
        "mock_np116",
        "mock_np117",
        "iarandom",
        "convert_seed_to_generator",
        "iarandom",
        "is_generator_equal_to",
        "gen",
        "gen",
        "isinstance",
        "gen",
        "np",
        "random",
        "RandomState",
        "result",
        "mock_np116",
        "assert_called_once_with",
        "gen",
        "gen",
        "mock_np117",
        "call_count",
        "result",
        "mock_np117",
        "assert_called_once_with",
        "gen",
        "gen",
        "mock_np116",
        "call_count",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "iarandom",
        "_is_generator_equal_to_np117",
        "gen",
        "gen",
        "result",
        "np",
        "random",
        "RandomState",
        "iarandom",
        "_is_generator_equal_to_np116",
        "gen",
        "gen",
        "result",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "iarandom",
        "_is_generator_equal_to_np117",
        "gen1",
        "gen2",
        "result",
        "np",
        "random",
        "RandomState",
        "np",
        "random",
        "RandomState",
        "iarandom",
        "_is_generator_equal_to_np116",
        "gen1",
        "gen2",
        "result",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "iarandom",
        "_is_generator_equal_to_np117",
        "gen1",
        "copylib",
        "deepcopy",
        "gen1",
        "result",
        "np",
        "random",
        "RandomState",
        "iarandom",
        "_is_generator_equal_to_np116",
        "gen1",
        "copylib",
        "deepcopy",
        "gen1",
        "result",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "iarandom",
        "_is_generator_equal_to_np117",
        "gen1",
        "gen2",
        "result",
        "np",
        "random",
        "RandomState",
        "np",
        "random",
        "RandomState",
        "iarandom",
        "_is_generator_equal_to_np116",
        "gen1",
        "gen2",
        "result",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "iarandom",
        "set_generator_state_",
        "gen2",
        "iarandom",
        "get_generator_state",
        "gen1",
        "iarandom",
        "_is_generator_equal_to_np117",
        "gen1",
        "gen2",
        "result",
        "np",
        "random",
        "RandomState",
        "np",
        "random",
        "RandomState",
        "iarandom",
        "set_generator_state_",
        "gen2",
        "iarandom",
        "get_generator_state",
        "gen1",
        "iarandom",
        "_is_generator_equal_to_np116",
        "gen1",
        "gen2",
        "result",
        "_Base",
        "mock",
        "patch",
        "mock",
        "patch",
        "mock_np116",
        "mock_np117",
        "iarandom",
        "convert_seed_to_generator",
        "iarandom",
        "advance_generator_",
        "gen",
        "isinstance",
        "gen",
        "np",
        "random",
        "RandomState",
        "mock_np116",
        "assert_called_once_with",
        "gen",
        "mock_np117",
        "call_count",
        "mock_np117",
        "assert_called_once_with",
        "gen",
        "mock_np116",
        "call_count",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "copylib",
        "deepcopy",
        "gen",
        "iarandom",
        "_advance_generator_np117_",
        "gen",
        "copylib",
        "deepcopy",
        "gen",
        "iarandom",
        "_advance_generator_np117_",
        "gen",
        "iarandom",
        "is_generator_equal_to",
        "gen",
        "copylib",
        "deepcopy",
        "gen",
        "iarandom",
        "is_generator_equal_to",
        "gen_copy1",
        "gen_copy2",
        "iarandom",
        "is_generator_equal_to",
        "gen_copy2",
        "gen",
        "iarandom",
        "is_generator_equal_to",
        "gen_copy1",
        "gen",
        "np",
        "random",
        "RandomState",
        "copylib",
        "deepcopy",
        "gen",
        "iarandom",
        "_advance_generator_np116_",
        "gen",
        "copylib",
        "deepcopy",
        "gen",
        "iarandom",
        "_advance_generator_np116_",
        "gen",
        "iarandom",
        "is_generator_equal_to",
        "gen",
        "copylib",
        "deepcopy",
        "gen",
        "iarandom",
        "is_generator_equal_to",
        "gen_copy1",
        "gen_copy2",
        "iarandom",
        "is_generator_equal_to",
        "gen_copy2",
        "gen",
        "iarandom",
        "is_generator_equal_to",
        "gen_copy1",
        "gen",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "copylib",
        "deepcopy",
        "gen",
        "iarandom",
        "_advance_generator_np117_",
        "gen",
        "copylib",
        "deepcopy",
        "gen",
        "iarandom",
        "_advance_generator_np117_",
        "gen",
        "gen_copy1",
        "random",
        "gen_copy2",
        "random",
        "gen",
        "random",
        "np",
        "isclose",
        "sample_after",
        "sample_before",
        "rtol",
        "np",
        "isclose",
        "sample_after_after",
        "sample_after",
        "rtol",
        "np",
        "isclose",
        "sample_after_after",
        "sample_before",
        "rtol",
        "np",
        "random",
        "RandomState",
        "copylib",
        "deepcopy",
        "gen",
        "iarandom",
        "_advance_generator_np116_",
        "gen",
        "copylib",
        "deepcopy",
        "gen",
        "iarandom",
        "_advance_generator_np116_",
        "gen",
        "gen_copy1",
        "random",
        "gen_copy2",
        "random",
        "gen",
        "random",
        "np",
        "isclose",
        "sample_after",
        "sample_before",
        "rtol",
        "np",
        "isclose",
        "sample_after_after",
        "sample_after",
        "rtol",
        "np",
        "isclose",
        "sample_after_after",
        "sample_before",
        "rtol",
        "_Base",
        "low",
        "high",
        "size",
        "dtype",
        "mock",
        "MagicMock",
        "gen",
        "randint",
        "side_effect",
        "iarandom",
        "polyfill_integers",
        "gen",
        "size",
        "dtype",
        "result",
        "gen",
        "randint",
        "assert_called_once_with",
        "low",
        "high",
        "size",
        "dtype",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "low",
        "high",
        "size",
        "dtype",
        "endpoint",
        "mock",
        "MagicMock",
        "gen",
        "integers",
        "side_effect",
        "gen",
        "randint",
        "iarandom",
        "polyfill_integers",
        "gen",
        "size",
        "dtype",
        "endpoint",
        "result",
        "gen",
        "integers",
        "assert_called_once_with",
        "low",
        "high",
        "size",
        "dtype",
        "endpoint",
        "low",
        "high",
        "size",
        "dtype",
        "mock",
        "MagicMock",
        "gen",
        "randint",
        "side_effect",
        "iarandom",
        "polyfill_integers",
        "gen",
        "result",
        "gen",
        "randint",
        "assert_called_once_with",
        "low",
        "high",
        "size",
        "dtype",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "low",
        "high",
        "size",
        "dtype",
        "endpoint",
        "mock",
        "MagicMock",
        "gen",
        "integers",
        "side_effect",
        "gen",
        "randint",
        "iarandom",
        "polyfill_integers",
        "gen",
        "result",
        "gen",
        "integers",
        "assert_called_once_with",
        "low",
        "high",
        "size",
        "dtype",
        "endpoint",
        "low",
        "high",
        "size",
        "dtype",
        "mock",
        "MagicMock",
        "gen",
        "randint",
        "side_effect",
        "iarandom",
        "polyfill_integers",
        "gen",
        "endpoint",
        "result",
        "gen",
        "randint",
        "assert_called_once_with",
        "low",
        "high",
        "size",
        "dtype",
        "low",
        "high",
        "size",
        "dtype",
        "mock",
        "MagicMock",
        "gen",
        "randint",
        "side_effect",
        "iarandom",
        "polyfill_integers",
        "gen",
        "endpoint",
        "result",
        "gen",
        "randint",
        "assert_called_once_with",
        "low",
        "high",
        "size",
        "dtype",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "iarandom",
        "polyfill_integers",
        "gen",
        "size",
        "endpoint",
        "result",
        "dtype",
        "name",
        "np",
        "all",
        "result",
        "np",
        "all",
        "result",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "iarandom",
        "polyfill_integers",
        "gen",
        "size",
        "endpoint",
        "result",
        "dtype",
        "name",
        "np",
        "all",
        "result",
        "np",
        "all",
        "result",
        "np",
        "random",
        "RandomState",
        "iarandom",
        "polyfill_integers",
        "gen",
        "size",
        "endpoint",
        "result",
        "dtype",
        "name",
        "np",
        "all",
        "result",
        "np",
        "all",
        "result",
        "np",
        "random",
        "RandomState",
        "iarandom",
        "polyfill_integers",
        "gen",
        "size",
        "endpoint",
        "result",
        "dtype",
        "name",
        "np",
        "all",
        "result",
        "np",
        "all",
        "result",
        "_Base",
        "size",
        "np",
        "zeros",
        "dtype",
        "mock",
        "MagicMock",
        "gen",
        "random_sample",
        "side_effect",
        "iarandom",
        "polyfill_random",
        "gen",
        "size",
        "dtype",
        "result",
        "dtype",
        "name",
        "gen",
        "random_sample",
        "assert_called_once_with",
        "size",
        "size",
        "dtype",
        "mock",
        "MagicMock",
        "gen",
        "random",
        "side_effect",
        "gen",
        "random_sample",
        "iarandom",
        "polyfill_random",
        "gen",
        "size",
        "dtype",
        "result",
        "gen",
        "random",
        "assert_called_once_with",
        "size",
        "dtype",
        "size",
        "np",
        "zeros",
        "dtype",
        "mock",
        "MagicMock",
        "gen",
        "random_sample",
        "side_effect",
        "np",
        "empty",
        "dtype",
        "iarandom",
        "polyfill_random",
        "gen",
        "size",
        "dtype",
        "result",
        "dtype",
        "name",
        "gen",
        "random_sample",
        "assert_called_once_with",
        "size",
        "size",
        "dtype",
        "mock",
        "MagicMock",
        "gen",
        "random",
        "side_effect",
        "gen",
        "random_sample",
        "np",
        "empty",
        "dtype",
        "iarandom",
        "polyfill_random",
        "gen",
        "size",
        "dtype",
        "result",
        "gen",
        "random",
        "assert_called_once_with",
        "size",
        "dtype",
        "np",
        "random",
        "RandomState",
        "iarandom",
        "polyfill_random",
        "gen",
        "size",
        "result",
        "dtype",
        "name",
        "np",
        "all",
        "result",
        "np",
        "all",
        "result",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "iarandom",
        "polyfill_random",
        "gen",
        "size",
        "result",
        "dtype",
        "name",
        "np",
        "all",
        "result",
        "np",
        "all",
        "result",
        "np",
        "random",
        "RandomState",
        "np",
        "zeros",
        "dtype",
        "iarandom",
        "polyfill_random",
        "gen",
        "size",
        "result",
        "dtype",
        "name",
        "np",
        "all",
        "result",
        "np",
        "all",
        "result",
        "np",
        "np",
        "all",
        "np",
        "all",
        "unittest",
        "skipIf",
        "IS_NP_117_OR_HIGHER",
        "np",
        "random",
        "Generator",
        "iarandom",
        "BIT_GENERATOR",
        "np",
        "zeros",
        "dtype",
        "iarandom",
        "polyfill_random",
        "gen",
        "size",
        "result",
        "dtype",
        "name",
        "np",
        "all",
        "result",
        "np",
        "all",
        "result",
        "np",
        "np",
        "all",
        "np",
        "all"
    ],
    "literals": [
        "'Agg'",
        "\"2.\"",
        "\"1.25\"",
        "\"1.24\"",
        "\"1.23\"",
        "\"1.22\"",
        "\"1.21\"",
        "\"1.20\"",
        "\"1.19\"",
        "\"1.18\"",
        "\"1.17\"",
        "\"imgaug.random._seed_np117\"",
        "\"imgaug.random._seed_np116\"",
        "\"imgaug.random.normalize_generator_\"",
        "\"foo\"",
        "\"bar\"",
        "\"foo\"",
        "\"imgaug.random._normalize_generator_np117_\"",
        "\"imgaug.random._normalize_generator_np116_\"",
        "\"np116\"",
        "\"np117\"",
        "\"np117\"",
        "\"np116\"",
        "\"SeedSequence does not exist in numpy <=1.16\"",
        "\"BitGenerator does not exist in numpy <=1.16\"",
        "\"Generator does not exist in numpy <=1.16\"",
        "\"imgaug.random._convert_seed_to_generator_np117\"",
        "\"imgaug.random._convert_seed_to_generator_np116\"",
        "\"np116\"",
        "\"np117\"",
        "\"np117\"",
        "\"np116\"",
        "\"SeedSequence does not exist in numpy <=1.16\"",
        "\"imgaug.random._create_fully_random_generator_np117\"",
        "\"imgaug.random._create_fully_random_generator_np116\"",
        "\"np116\"",
        "\"np117\"",
        "\"np117\"",
        "\"np116\"",
        "\"Function uses classes from numpy 1.17+\"",
        "\"numpy.random.SFC64\"",
        "\"numpy.random.RandomState\"",
        "\"imgaug.random.generate_seeds_\"",
        "\"imgaug.random.polyfill_integers\"",
        "\"int32\"",
        "\"imgaug.random._copy_generator_np116\"",
        "\"np116\"",
        "\"np116\"",
        "\"Function uses classes from numpy 1.17+\"",
        "\"imgaug.random._copy_generator_np117\"",
        "\"np117\"",
        "\"np117\"",
        "\"Function uses classes from numpy 1.17+\"",
        "\"imgaug.random.get_global_rng\"",
        "\"imgaug.random.copy_generator\"",
        "\"foo\"",
        "\"imgaug.random.get_global_rng\"",
        "\"imgaug.random.copy_generator\"",
        "\"foo\"",
        "\"foo\"",
        "\"imgaug.random._reset_generator_cache_np117_\"",
        "\"imgaug.random._reset_generator_cache_np116_\"",
        "\"np116\"",
        "\"np117\"",
        "\"np117\"",
        "\"np116\"",
        "\"Function uses classes from numpy 1.17+\"",
        "\"has_uint32\"",
        "\"imgaug.random.derive_generators_\"",
        "\"foo\"",
        "\"foo\"",
        "\"imgaug.random._derive_generators_np117_\"",
        "\"imgaug.random._derive_generators_np116_\"",
        "\"np116\"",
        "\"np117\"",
        "\"np116\"",
        "\"np117\"",
        "\"Function uses classes from numpy 1.17+\"",
        "\"imgaug.random._get_generator_state_np117\"",
        "\"imgaug.random._get_generator_state_np116\"",
        "\"np116\"",
        "\"np117\"",
        "\"np116\"",
        "\"np117\"",
        "\"Function uses classes from numpy 1.17+\"",
        "\"imgaug.random._set_generator_state_np117_\"",
        "\"imgaug.random._set_generator_state_np116_\"",
        "\"state\"",
        "\"Function uses classes from numpy 1.17+\"",
        "\"Function uses classes from numpy 1.17+\"",
        "\"imgaug.random._is_generator_equal_to_np117\"",
        "\"imgaug.random._is_generator_equal_to_np116\"",
        "\"np116\"",
        "\"np117\"",
        "\"np116\"",
        "\"np117\"",
        "\"Function uses classes from numpy 1.17+\"",
        "\"Function uses classes from numpy 1.17+\"",
        "\"Function uses classes from numpy 1.17+\"",
        "\"Function uses classes from numpy 1.17+\"",
        "\"Function uses classes from numpy 1.17+\"",
        "\"imgaug.random._advance_generator_np117_\"",
        "\"imgaug.random._advance_generator_np116_\"",
        "\"Function uses classes from numpy 1.17+\"",
        "\"Function uses classes from numpy 1.17+\"",
        "'l'",
        "\"np116\"",
        "\"int8\"",
        "\"np116\"",
        "\"int8\"",
        "\"Function uses classes from numpy 1.17+\"",
        "'int64'",
        "\"np117\"",
        "\"int8\"",
        "\"np117\"",
        "\"int8\"",
        "'l'",
        "\"np116\"",
        "\"np116\"",
        "\"int32\"",
        "\"Function uses classes from numpy 1.17+\"",
        "'int64'",
        "\"np117\"",
        "\"np117\"",
        "\"int32\"",
        "'l'",
        "\"np116\"",
        "\"np116\"",
        "\"int32\"",
        "'l'",
        "\"np116\"",
        "\"np116\"",
        "\"int32\"",
        "\"Function uses classes from numpy 1.17+\"",
        "\"int32\"",
        "\"Function uses classes from numpy 1.17+\"",
        "\"int32\"",
        "\"int32\"",
        "\"int32\"",
        "\"float64\"",
        "\"float16\"",
        "\"float16\"",
        "'d'",
        "\"np117\"",
        "\"float16\"",
        "\"np117\"",
        "\"float16\"",
        "\"float64\"",
        "\"float16\"",
        "\"float16\"",
        "\"float16\"",
        "'d'",
        "\"np117\"",
        "\"float16\"",
        "\"float16\"",
        "\"np117\"",
        "\"float16\"",
        "\"float32\"",
        "\"Function uses classes from numpy 1.17+\"",
        "\"float32\"",
        "\"float32\"",
        "\"float32\"",
        "\"Function uses classes from numpy 1.17+\"",
        "\"float32\"",
        "\"float32\""
    ],
    "variables": [
        "NP_VERSION",
        "IS_NP_117_OR_HIGHER",
        "rng",
        "expected",
        "mock_subfunc",
        "return_value",
        "inputs",
        "result",
        "mock_np116",
        "return_value",
        "mock_np117",
        "return_value",
        "result",
        "result",
        "seedseq",
        "result",
        "expected",
        "bgen",
        "result",
        "gen",
        "result",
        "rs",
        "result",
        "seed",
        "expected",
        "seed",
        "result",
        "expected",
        "mock_np116",
        "return_value",
        "mock_np117",
        "return_value",
        "result",
        "gen",
        "expected",
        "expected",
        "seedseq",
        "gen",
        "expected",
        "global_gen",
        "gen",
        "expected",
        "mock_np116",
        "return_value",
        "mock_np117",
        "return_value",
        "result",
        "dummy_bitgen",
        "mock_bitgen",
        "return_value",
        "result",
        "dummy_rs",
        "mock_rs",
        "return_value",
        "result",
        "gen",
        "_",
        "gen",
        "_",
        "gen",
        "seeds",
        "mock_np116",
        "return_value",
        "gen",
        "gen_copy",
        "mock_np117",
        "return_value",
        "gen",
        "gen_copy",
        "gen",
        "gen_copy",
        "gen",
        "gen_copy",
        "gen",
        "mock_copy",
        "return_value",
        "mock_get_global_rng",
        "return_value",
        "result",
        "gen1",
        "gen2",
        "mock_copy",
        "return_value",
        "mock_get_global_rng",
        "return_value",
        "result",
        "mock_np116",
        "return_value",
        "mock_np117",
        "return_value",
        "gen",
        "result",
        "gen",
        "gen_without_cache_copy",
        "state",
        "state",
        "gen_with_cache",
        "gen_with_cache_copy",
        "gen_cache_reset",
        "gen",
        "gen_without_cache_copy",
        "state",
        "state",
        "state",
        "gen_with_cache",
        "gen_with_cache_copy",
        "gen_cache_reset",
        "mock_derive_gens",
        "return_value",
        "gen",
        "gen_derived",
        "gen",
        "gen_copy",
        "gen_derived",
        "mock_np116",
        "return_value",
        "mock_np117",
        "return_value",
        "gen",
        "result",
        "gen",
        "gen_copy",
        "result",
        "gen",
        "gen_copy",
        "result",
        "mock_np116",
        "return_value",
        "mock_np117",
        "return_value",
        "gen",
        "result",
        "gen",
        "state",
        "gen",
        "state",
        "gen",
        "state",
        "gen1",
        "gen2",
        "gen1_copy",
        "gen2_copy",
        "gen1",
        "gen2",
        "gen1_copy",
        "gen2_copy",
        "samples1",
        "samples2",
        "samples1_copy",
        "samples2_copy",
        "gen1",
        "gen2",
        "gen1_copy",
        "gen2_copy",
        "gen1",
        "gen2",
        "gen1_copy",
        "gen2_copy",
        "samples1",
        "samples2",
        "samples1_copy",
        "samples2_copy",
        "mock_np116",
        "return_value",
        "mock_np117",
        "return_value",
        "gen",
        "result",
        "gen",
        "result",
        "gen",
        "result",
        "gen1",
        "gen2",
        "result",
        "gen1",
        "gen2",
        "result",
        "gen1",
        "result",
        "gen1",
        "result",
        "gen1",
        "gen2",
        "result",
        "gen1",
        "gen2",
        "result",
        "gen1",
        "gen2",
        "result",
        "gen1",
        "gen2",
        "result",
        "gen",
        "gen",
        "gen_copy1",
        "gen_copy2",
        "gen",
        "gen_copy1",
        "gen_copy2",
        "gen",
        "gen_copy1",
        "gen_copy2",
        "sample_before",
        "sample_after",
        "sample_after_after",
        "gen",
        "gen_copy1",
        "gen_copy2",
        "sample_before",
        "sample_after",
        "sample_after_after",
        "gen",
        "side_effect",
        "result",
        "gen",
        "side_effect",
        "result",
        "gen",
        "side_effect",
        "result",
        "gen",
        "side_effect",
        "result",
        "gen",
        "side_effect",
        "result",
        "gen",
        "side_effect",
        "result",
        "gen",
        "result",
        "gen",
        "result",
        "gen",
        "result",
        "gen",
        "result",
        "gen",
        "side_effect",
        "result",
        "gen",
        "side_effect",
        "result",
        "gen",
        "side_effect",
        "result",
        "gen",
        "side_effect",
        "result",
        "gen",
        "result",
        "gen",
        "result",
        "gen",
        "result",
        "gen",
        "result"
    ],
    "comments": [
        "unittest only added in 3.4 self.subTest()",
        "unittest.mock is not available in 2.7 (though unittest2 might contain it?)",
        "fix execution of tests involving matplotlib on travis",
        "creates global RNG upon first call",
        "should have advanced the state",
        "derive should advance state",
        "derive should advance state",
        "first advance",
        "second advance",
        "first advance",
        "second advance",
        "np1.16 does not support an out arg, hence it is not part of the",
        "expected call"
    ],
    "docstrings": [],
    "functions": [
        "setUp",
        "test_supports_new_np_rng_style_is_true",
        "test_global_rng",
        "test_call",
        "test_call",
        "test_mocked_call",
        "test_integrationtest",
        "test_mocked_call",
        "test_mocked_call",
        "test_called_with_none",
        "test_called_with_seed_sequence",
        "test_called_with_generator",
        "test_called_with_generator",
        "test_called_with_random_state",
        "test_called_int",
        "test_mocked_call",
        "test_call",
        "test_call",
        "test_call",
        "test_mocked_call",
        "test_np117_mocked",
        "test_np116_mocked",
        "test_mocked_call",
        "test_mocked_call",
        "test_call",
        "test_mocked_call_with_random_state",
        "test_mocked_call_with_generator",
        "test_call_with_random_state",
        "test_call_with_generator",
        "test_mocked_gen_is_global",
        "test_mocked_gen_is_not_global",
        "test_mocked_call",
        "test_call_np117",
        "test_call_np116",
        "test_mocked_call",
        "test_integration",
        "test_mocked_call",
        "test_call_np117",
        "test_call_np116",
        "test_mocked_call",
        "test_call_np117",
        "test_call_np116",
        "test_mocked_call",
        "test_call_np117",
        "test_call_np117_via_samples",
        "test_call_np116",
        "test_call_np116_via_samples",
        "test_mocked_call",
        "test_generator_is_identical_np117",
        "test_generator_is_identical_np116",
        "test_generator_created_with_same_seed_np117",
        "test_generator_created_with_same_seed_np116",
        "test_generator_is_copy_of_itself_np117",
        "test_generator_is_copy_of_itself_np116",
        "test_generator_created_with_different_seed_np117",
        "test_generator_created_with_different_seed_np116",
        "test_generator_modified_to_have_same_state_np117",
        "test_generator_modified_to_have_same_state_np116",
        "test_mocked_call",
        "test_call_np117",
        "test_call_np116",
        "test_samples_different_after_advance_np117",
        "test_samples_different_after_advance_np116",
        "test_mocked_standard_call_np116",
        "side_effect",
        "test_mocked_standard_call_np117",
        "side_effect",
        "test_mocked_call_with_default_values_np116",
        "side_effect",
        "test_mocked_call_with_default_values_np117",
        "side_effect",
        "test_mocked_call_with_default_values_and_endpoint_np116",
        "side_effect",
        "test_mocked_call_with_low_high_and_endpoint_np116",
        "side_effect",
        "test_sampled_values_np117",
        "test_sampled_values_with_endpoint_np117",
        "test_sampled_values_np116",
        "test_sampled_values_with_endpoint_np116",
        "test_mocked_standard_call_np116",
        "side_effect",
        "test_mocked_standard_call_np117",
        "side_effect",
        "test_mocked_call_with_out_arg_np116",
        "side_effect",
        "test_mocked_call_with_out_arg_np117",
        "side_effect",
        "test_sampled_values_np116",
        "test_sampled_values_np117",
        "test_sampled_values_with_out_arg_np116",
        "test_sampled_values_with_out_arg_np117"
    ],
    "classes": [
        "_Base",
        "TestConstants",
        "Test_supports_new_numpy_rng_style",
        "Test_get_global_rng",
        "Test_seed",
        "Test_normalize_generator",
        "Test_normalize_generator_",
        "Test_convert_seed_to_generator",
        "Test_convert_seed_sequence_to_generator",
        "Test_create_pseudo_random_generator_",
        "Test_create_fully_random_generator",
        "Test_generate_seed_",
        "Test_generate_seeds_",
        "Test_copy_generator",
        "Test_copy_generator_unless_global_rng",
        "Test_reset_generator_cache_",
        "Test_derive_generator_",
        "Test_derive_generators_",
        "Test_get_generator_state",
        "Test_set_generator_state_",
        "Test_is_generator_equal_to",
        "Test_advance_generator_",
        "Test_polyfill_integers",
        "Test_polyfill_random"
    ]
}