{
    "identifiers": [
        "fetchTypes",
        "testTraceModule",
        "describeInterop",
        "Express4",
        "Express4Secure",
        "Agent",
        "SpanKind",
        "Express4",
        "Express4Secure",
        "describeInterop",
        "fetchTypes",
        "fetchTypes",
        "fixture",
        "before",
        "testTraceModule",
        "testTraceModule",
        "after",
        "testTraceModule",
        "testTraceModule",
        "testTraceModule",
        "testTraceModule",
        "beforeEach",
        "testTraceModule",
        "protocol",
        "servers",
        "servers",
        "it",
        "protocol",
        "servers",
        "protocol",
        "fixture",
        "testTraceModule",
        "fixture",
        "server",
        "server",
        "protocol",
        "agent",
        "Agent",
        "tracer",
        "span",
        "tracer",
        "span",
        "fetch",
        "protocol",
        "port",
        "response",
        "span",
        "testTraceModule",
        "trace",
        "trace",
        "span",
        "span",
        "traces",
        "span",
        "span",
        "SpanKind",
        "server"
    ],
    "literals": [
        "'node-fetch'",
        "'../trace'",
        "'assert'",
        "'../utils'",
        "'../web-frameworks/express'",
        "'../web-frameworks/express-secure'",
        "'https'",
        "'../../src/trace'",
        "'node-fetch'",
        "works with the Trace Agent, ${protocol}",
        "'/'",
        "'OK'",
        "'https'",
        "'outer'",
        "${protocol}://localhost:${port}",
        "'OK'",
        "'outer'"
    ],
    "variables": [
        "servers",
        "server",
        "tracer",
        "fetch",
        "port",
        "agent",
        "response",
        "traces"
    ],
    "comments": [
        "For types only.",
        "Server abstraction class definitions. These are borrowed from web framework",
        "tests -- which are useful because they already expose a Promise API.",
        "Set up a server. To preserve the condition described in the top-level",
        "description of this test, we ensure that this constructor is called",
        "before the Trace Agent is started, so that the Trace Agent never has",
        "an opportunity to patch http or https upon user require.",
        "Require node-fetch once before starting the Trace Agent. We do this",
        "in lieu of letting it be required when the Trace Agent is started,",
        "because we've mocked out the Trace Writer instance that would",
        "require node-fetch in typical usage.",
        "Set up the server.",
        "Allow self-signed certificates.",
        "Make a request against the above server.",
        "Get the trace that represents the root span from above..",
        "There should be an HTTP client span."
    ],
    "docstrings": [
        "* Copyright 2019 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* This test is needed because @google-cloud/common uses node-fetch under the\n * covers, so there is a possibility that we miss the opportunity to patch\n * http/https core modules. This occurs when the user requires `node-fetch`,\n * and never transitively requires (one of) `http` or `https` outside of\n * `node-fetch`, because then the plugin loader will never get the chance to\n * hook into a `http` or `https` module require."
    ],
    "functions": [],
    "classes": []
}