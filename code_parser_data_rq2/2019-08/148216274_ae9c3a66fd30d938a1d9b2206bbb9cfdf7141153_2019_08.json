{
    "identifiers": [
        "ICognitoUserPoolLocator",
        "AWS",
        "ICognitoUserPoolApiModel",
        "AuthenticationDetails",
        "CognitoUser",
        "CognitoUserPool",
        "CognitoUserSession",
        "proxy",
        "GlobalConfigInstance",
        "CognitoIdentityCredentials",
        "awsConfig",
        "process",
        "process",
        "process",
        "proxyUri",
        "proxyUri",
        "process",
        "awsConfig",
        "proxy",
        "proxyUri",
        "locator",
        "region",
        "locator",
        "region",
        "configureAwsProxy",
        "AWS",
        "AWS",
        "region",
        "email",
        "password",
        "newPassword",
        "resolve",
        "reject",
        "email",
        "error",
        "reject",
        "error",
        "CognitoUserPool",
        "password",
        "email",
        "userPool",
        "email",
        "AuthenticationDetails",
        "authenticationData",
        "CognitoUser",
        "userData",
        "authenticationDetails",
        "result",
        "that",
        "result",
        "resolve",
        "result",
        "err",
        "reject",
        "err",
        "codeDeliveryDetails",
        "reject",
        "userAttributes",
        "requiredAttributes",
        "newPassword",
        "newPassword",
        "userAttributes",
        "userAttributes",
        "that",
        "newPassword",
        "userAttributes",
        "err",
        "reject",
        "err",
        "result",
        "that",
        "result",
        "resolve",
        "result",
        "reject",
        "res",
        "rej",
        "refreshToken",
        "err",
        "session",
        "err",
        "rej",
        "err",
        "session",
        "AWS",
        "tokens",
        "AWS",
        "error",
        "error",
        "rej",
        "error",
        "AWS",
        "res",
        "res",
        "tokens",
        "CognitoIdentityCredentials",
        "tokens",
        "AWS",
        "currentTime",
        "minutes",
        "session",
        "session",
        "session",
        "session"
    ],
    "literals": [
        "'./ICognitoUserPoolLocator'",
        "'aws-sdk/global'",
        "'./ICognitoUserPoolApiModel'",
        "'amazon-cognito-identity-js'",
        "'proxy-agent'",
        "'aws-sdk/lib/config'",
        "'aws-sdk/global'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "''",
        "Signing into AWS Cognito",
        "cognito-idp.${this.region}.amazonaws.com/${this.poolData.UserPoolId}",
        "'Multi-factor auth is not currently supported'",
        "'custom:tenant_id'",
        "'New password is required for the user'",
        "New expiry: ${(AWS.config.credentials as CognitoIdentityCredentials).expireTime}"
    ],
    "variables": [
        "proxyUri",
        "userPool",
        "authenticationData",
        "userData",
        "authenticationDetails",
        "that",
        "tokens",
        "currentTime",
        "minutes"
    ],
    "comments": [
        "TODO: does AWS support multiple proxy protocols simultaneously (HTTP and HTTPS proxy)",
        "For now, this prefers HTTPS over HTTP proxy protocol for HTTPS requests",
        "AWS module configuration",
        "get the pool data from the response",
        "construct a user pool object",
        "configure the authentication credentials",
        "create object with user/pool combined",
        "init Cognito auth details with auth data",
        "authenticate user to in Cognito user pool",
        "eslint-disable-line",
        "eslint-disable-line",
        "User was signed up by an admin and must provide new",
        "password and required attributes",
        "These attributes are not mutable and should be removed from map."
    ],
    "docstrings": [],
    "functions": [
        "configureAwsProxy",
        "onSuccess",
        "onFailure",
        "mfaRequired",
        "newPasswordRequired",
        "refreshCognitoCredentials"
    ],
    "classes": [
        "AuthManager"
    ]
}