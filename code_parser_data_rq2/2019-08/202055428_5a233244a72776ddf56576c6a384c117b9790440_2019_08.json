{
    "identifiers": [
        "require",
        "func",
        "describe",
        "it",
        "expect",
        "validator",
        "expect",
        "validator",
        "expect",
        "validator",
        "it",
        "expect",
        "validator",
        "expect",
        "validator",
        "expect",
        "validator",
        "describe",
        "it",
        "expect",
        "validator",
        "it",
        "invalidValue",
        "invalidData",
        "expect",
        "validator",
        "invalidValue",
        "describe",
        "it",
        "expect",
        "validator",
        "expect",
        "validator",
        "num",
        "expect",
        "validator",
        "arr",
        "expect",
        "validator",
        "obj",
        "expect",
        "validator",
        "func",
        "expect",
        "validator",
        "describe",
        "it",
        "expect",
        "validator",
        "expect",
        "validator",
        "num",
        "expect",
        "validator",
        "arr",
        "expect",
        "validator",
        "obj",
        "expect",
        "validator",
        "func",
        "expect",
        "validator",
        "xdescribe",
        "it",
        "expect",
        "xdescribe",
        "it",
        "expect",
        "xdescribe",
        "it",
        "expect",
        "describe",
        "it",
        "expect",
        "validator",
        "person",
        "expect",
        "validator",
        "person",
        "it",
        "expect",
        "validator",
        "person",
        "expect",
        "validator",
        "person",
        "it",
        "expect",
        "validator",
        "validator",
        "person"
    ],
    "literals": [
        "'use strict'",
        "'../lib/validator.js'",
        "'yes'",
        "'a'",
        "'y'",
        "'validator module performs basic numeric validation'",
        "'positive'",
        "'positive'",
        "'positive'",
        "'positive'",
        "'even-numbers'",
        "'even-numbers'",
        "'even-numbers'",
        "'even-numbers'",
        "'validation of string type'",
        "'valid strings'",
        "'invalid strings'",
        "'validation of numeric type'",
        "'numbers'",
        "'validation of arrays'",
        "'arrays'",
        "'validation of objects'",
        "'objects'",
        "'validation of booleans'",
        "'booleans'",
        "'validation of functions'",
        "'functions'",
        "'validator module performs complex validations'",
        "'me'",
        "'black'",
        "'fish'",
        "'chips'",
        "'validates the presence of required object properties at any level'",
        "'nationality'",
        "'hair'",
        "'validates the proper types of object properties'",
        "'validates the types of values contained in an array'"
    ],
    "variables": [
        "validator",
        "num",
        "arr",
        "obj",
        "func",
        "invalidData",
        "person"
    ],
    "comments": [
        "Jo - variables for type validation below",
        "TODO: Make this series of tests less repetitive ... DRY it out",
        "Regular cases",
        "i.e. does person.hair.color exist and have a good value, not just person.hair",
        "i.e. person.name must be a string, etc.",
        "i.e. an array of all strings or numbers",
        "it('validates a value array against an approved list', () => {",
        "// i.e. a string might only be allowed to be \"yes\" or \"no\"",
        "expect(true).toBeFalsy();",
        "});",
        "TODO: Cover so, so many more cases"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}