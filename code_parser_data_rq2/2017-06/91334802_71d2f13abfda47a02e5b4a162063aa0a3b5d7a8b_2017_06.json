{
    "identifiers": [
        "emotionmining",
        "perceptron",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "emotionmining",
        "model",
        "Tweet",
        "weightVector",
        "labels",
        "Arrays",
        "asList",
        "label",
        "labels",
        "classWeightVector",
        "classWeightVector",
        "put",
        "weightVector",
        "put",
        "label",
        "classWeightVector",
        "weightVector",
        "tweetsList",
        "MAX_ITER",
        "tempWeights",
        "tweetsListEval",
        "weightVector",
        "initializeWeightVecor",
        "i",
        "i",
        "MAX_ITER",
        "i",
        "tweetsListEval",
        "tweetInstance",
        "tweetsList",
        "featureVector",
        "tweetInstance",
        "getFeatures",
        "weightVector",
        "getWeightVecors",
        "featureVector",
        "keySet",
        "weightVector",
        "featureVector",
        "putBiasInFeatureVector",
        "featureVector",
        "tweetInstance",
        "setFeatures",
        "featureVector",
        "tweetInstance",
        "getWinningPerceptron",
        "tweetInstance",
        "weightVector",
        "tweetInstance",
        "getMaxScoreCategory",
        "tempWeights",
        "getAdjustedWeight",
        "weightVector",
        "get",
        "tweetInstance",
        "getGoldLabel",
        "featureVector",
        "weightVector",
        "put",
        "tweetInstance",
        "getGoldLabel",
        "tempWeights",
        "tweetInstance",
        "getGoldLabel",
        "equalsIgnoreCase",
        "tweetInstance",
        "getPredictedLabel",
        "tempWeights",
        "getAdjustedWeight",
        "weightVector",
        "get",
        "tweetInstance",
        "getGoldLabel",
        "featureVector",
        "weightVector",
        "put",
        "tweetInstance",
        "getGoldLabel",
        "tempWeights",
        "tempWeights",
        "getAdjustedWeight",
        "weightVector",
        "get",
        "tweetInstance",
        "getPredictedLabel",
        "featureVector",
        "weightVector",
        "put",
        "tweetInstance",
        "getPredictedLabel",
        "tempWeights",
        "tweetsListEval",
        "add",
        "tweetInstance",
        "i",
        "weightVector",
        "features",
        "weightMap",
        "classLabels",
        "Arrays",
        "asList",
        "label",
        "classLabels",
        "classWeightVector",
        "weightMap",
        "get",
        "label",
        "featureStr",
        "features",
        "classWeightVector",
        "containsKey",
        "featureStr",
        "classWeightVector",
        "put",
        "featureStr",
        "weightMap",
        "featureVector",
        "featureVector",
        "put",
        "featureVector",
        "tweetInstance",
        "weightMap",
        "argmax",
        "weighStr",
        "featureVector",
        "tweetInstance",
        "getFeatures",
        "label",
        "weightMap",
        "keySet",
        "sum",
        "sumFunktion",
        "weightMap",
        "get",
        "label",
        "featureVector",
        "weighStr",
        "weighStr",
        "label",
        "sum",
        "sum",
        "argmax",
        "argmax",
        "sum",
        "tweetInstance",
        "setPredictedLabel",
        "label",
        "tweetInstance",
        "setMaxScoreCategory",
        "sum",
        "weighStr",
        "weighStr",
        "substring",
        "weighStr",
        "length",
        "tweetInstance",
        "setWeightStr",
        "weighStr",
        "tweetInstance",
        "weights",
        "featureVector",
        "sum",
        "feature",
        "featureVector",
        "keySet",
        "weights",
        "containsKey",
        "feature",
        "w",
        "weights",
        "get",
        "feature",
        "x",
        "featureVector",
        "get",
        "feature",
        "sum",
        "sum",
        "w",
        "x",
        "sum",
        "weight",
        "action",
        "featureVector",
        "feature",
        "featureVector",
        "keySet",
        "w",
        "weight",
        "get",
        "feature",
        "x",
        "featureVector",
        "get",
        "feature",
        "action",
        "w",
        "w",
        "x",
        "w",
        "w",
        "x",
        "weight",
        "put",
        "feature",
        "w",
        "weight"
    ],
    "literals": [
        "\"anger\"",
        "\"disgust\"",
        "\"fear\"",
        "\"happy\"",
        "\"love\"",
        "\"sad\"",
        "\"surprise\"",
        "\"trust\"",
        "\"bias\"",
        "\"********** Train The Model ***********\"",
        "\"Number of epochs is: \"",
        "\"anger\"",
        "\"disgust\"",
        "\"fear\"",
        "\"happy\"",
        "\"love\"",
        "\"sad\"",
        "\"surprise\"",
        "\"trust\"",
        "\"bias\"",
        "\"\"",
        "\":\"",
        "\",\""
    ],
    "variables": [
        "tempWeights",
        "tweetsListEval"
    ],
    "comments": [
        "Initialize weight vectors for each class with bias 0.1",
        "Evaluator eval = new Evaluator();",
        "ADD: MAX_ITER oder bis alle Instanzen richtig klassifiziert sind",
        "Number of epochs",
        "for each point = for each tweet instance or each line in the",
        "training data",
        "Get the features for each instance (in form <FeatureName :",
        "FeatureValue>)",
        "Get the weights for each instance (in form <Label:",
        "<FeatureName : FeatureValue>>)",
        "anger, disgust, fear, happy, love, sad, surprise, trust",
        "überarbeite. Füge lerning rate",
        "System.out.println(\"Label ::: \"+label);",
        "Map<String, Double> adjWeightVector = new HashMap<String, Double>();"
    ],
    "docstrings": [],
    "functions": [
        "initializeWeightVecor",
        "trainModel",
        "getWeightVecors",
        "putBiasInFeatureVector",
        "Tweet",
        "getWinningPerceptron",
        "sumFunktion",
        "getAdjustedWeight"
    ],
    "classes": [
        "PerceprtronTest"
    ]
}