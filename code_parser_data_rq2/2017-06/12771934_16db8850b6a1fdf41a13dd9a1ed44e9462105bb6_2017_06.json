{
    "identifiers": [
        "concurrent",
        "futures",
        "_base",
        "reprlib",
        "events",
        "concurrent",
        "futures",
        "_base",
        "concurrent",
        "futures",
        "CancelledError",
        "concurrent",
        "futures",
        "TimeoutError",
        "obj",
        "hasattr",
        "obj",
        "__class__",
        "obj",
        "_asyncio_future_blocking",
        "cb",
        "len",
        "cb",
        "size",
        "callback",
        "events",
        "_format_callback_source",
        "callback",
        "size",
        "format_cb",
        "cb",
        "size",
        "format",
        "format_cb",
        "cb",
        "format_cb",
        "cb",
        "size",
        "format",
        "format_cb",
        "cb",
        "size",
        "format_cb",
        "cb",
        "cb",
        "future",
        "future",
        "_state",
        "lower",
        "future",
        "_state",
        "_FINISHED",
        "future",
        "_exception",
        "info",
        "append",
        "format",
        "future",
        "_exception",
        "reprlib",
        "repr",
        "future",
        "_result",
        "info",
        "append",
        "format",
        "result",
        "future",
        "_callbacks",
        "info",
        "append",
        "_format_callbacks",
        "future",
        "_callbacks",
        "future",
        "_source_traceback",
        "future",
        "_source_traceback",
        "info",
        "append",
        "frame",
        "frame",
        "info"
    ],
    "literals": [
        "'PENDING'",
        "'CANCELLED'",
        "'FINISHED'",
        "'_asyncio_future_blocking'",
        "''",
        "'{}, {}'",
        "'{}, <{} more>, {}'",
        "'cb=[%s]'",
        "'exception={!r}'",
        "'result={}'",
        "'created at %s:%s'"
    ],
    "variables": [
        "__all__",
        "CancelledError",
        "TimeoutError",
        "_PENDING",
        "_CANCELLED",
        "_FINISHED",
        "size",
        "cb",
        "cb",
        "cb",
        "cb",
        "info",
        "result",
        "frame"
    ],
    "comments": [
        "States for Future.",
        "(Future) -> str",
        "use reprlib to limit the length of the output, especially",
        "for very long strings"
    ],
    "docstrings": [
        "\"\"\"The operation is not allowed in this state.\"\"\"",
        "\"\"\"Check for a Future.\n\n    This returns True when obj is a Future instance or is advertising\n    itself as duck-type compatible by setting _asyncio_future_blocking.\n    See comment in Future for more details.\n    \"\"\"",
        "\"\"\"helper function for Future.__repr__\"\"\"",
        "\"\"\"helper function for Future.__repr__\"\"\""
    ],
    "functions": [
        "isfuture",
        "_format_callbacks",
        "format_cb",
        "_future_repr_info"
    ],
    "classes": [
        "InvalidStateError"
    ]
}