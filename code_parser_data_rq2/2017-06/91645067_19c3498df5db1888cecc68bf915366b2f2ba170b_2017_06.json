{
    "identifiers": [
        "vsts",
        "bld",
        "git",
        "bldi",
        "giti",
        "tl",
        "IArtifactData",
        "tl",
        "tl",
        "vsts",
        "token",
        "vsts",
        "collectionUrl",
        "authHandler",
        "git",
        "connect",
        "bld",
        "connect",
        "bldapi",
        "artifactData",
        "tl",
        "artifact",
        "artifactData",
        "artifact",
        "gitapi",
        "err",
        "tl",
        "tl",
        "err",
        "releaseName",
        "prefix",
        "tl",
        "searchRegex",
        "replacePattern",
        "regexFlags",
        "searchRegex",
        "regexFlags",
        "releaseName",
        "regex",
        "replacePattern",
        "refName",
        "prefix",
        "refName",
        "tl",
        "refName",
        "refName",
        "inputName",
        "defaultValue",
        "tl",
        "inputName",
        "value",
        "value",
        "defaultValue",
        "bldapi",
        "bld",
        "variableInfo",
        "tl",
        "regexp",
        "variableInfo",
        "match",
        "tl",
        "variableInfo",
        "variableInfo",
        "tl",
        "variableInfo",
        "variableInfo",
        "match",
        "tl",
        "name",
        "bldapi",
        "name",
        "repositoryId",
        "name",
        "tl",
        "name",
        "repositoryId",
        "artifactNames",
        "artifact",
        "artifactNames",
        "bldapi",
        "bld",
        "name",
        "name",
        "tl",
        "buildidVariable",
        "buildid",
        "buildid",
        "tl",
        "tl",
        "buildidVariable",
        "bldi",
        "bldapi",
        "buildid",
        "tl",
        "build",
        "build",
        "artifact",
        "gitapi",
        "git",
        "tl",
        "artifact",
        "artifact",
        "giti",
        "artifact",
        "gitapi",
        "updateResult",
        "tl",
        "artifact",
        "gitapi",
        "updateResult",
        "giti",
        "tl",
        "giti",
        "tl",
        "tl",
        "artifact",
        "tl",
        "tl",
        "updateResult",
        "updateResult",
        "updateResult",
        "artifact",
        "refName",
        "gitapi",
        "git",
        "giti",
        "gitapi",
        "artifact",
        "refs",
        "giti",
        "refs",
        "x",
        "x",
        "refName",
        "foundRef",
        "foundRef",
        "artifact",
        "tl",
        "tl",
        "artifact",
        "foundRef",
        "artifact",
        "refName",
        "gitapi",
        "git",
        "giti",
        "giti",
        "refName",
        "artifact",
        "artifact",
        "giti",
        "giti",
        "gitapi",
        "refArray",
        "artifact",
        "updateRefsResult",
        "updateRefsResult",
        "tl",
        "updateRefsResult",
        "require",
        "taskData",
        "taskData",
        "taskData",
        "taskData",
        "Err"
    ],
    "literals": [
        "\"vso-node-api\"",
        "\"vso-node-api/BuildApi\"",
        "\"vso-node-api/GitApi\"",
        "\"vso-node-api/Interfaces/BuildInterfaces\"",
        "\"vso-node-api/Interfaces/GitInterfaces\"",
        "\"vsts-task-lib/task\"",
        "\"./IArtifactData\"",
        "string",
        "\"\\\\s+\"",
        "string",
        "\"g\"",
        "string",
        "\"\"",
        "string",
        "\"You must grant the build account access to permission: \"",
        "string",
        "string",
        "\"SystemVssConnection\"",
        "\"AccessToken\"",
        "string",
        "\"SystemVssConnection\"",
        "\".vsrm.visualstudio.com\"",
        "\".visualstudio.com\"",
        "\"No TfsGit artifacts found.\"",
        "string",
        "string",
        "string",
        "string",
        "\"searchRegex\"",
        "string",
        "\"regexFlags\"",
        "string",
        "\"replacePattern\"",
        "Search Regex: '${searchRegex}', Replace Pattern: '${replacePattern}', flags: '${regexFlags}'",
        "string",
        "${prefix}${refName}",
        "RefName: '${refName}'",
        "string",
        "string",
        "string",
        "string",
        "\"RELEASE\\.ARTIFACTS\\.(.*)\\.REPOSITORY\\.PROVIDER\"",
        "\"gi\"",
        "No match for variable: ${variableInfo.name}",
        "\"TfsGit\"",
        "Matching variable:  ${variableInfo.name}, but artifact type: ${variableInfo.value}",
        "string",
        "Getting repository id for artifact: ${name}",
        "string",
        "\"name\"",
        "\"commit\"",
        "RELEASE.ARTIFACTS.${name}.SOURCEVERSION",
        "\"repositoryId\"",
        "string",
        "string",
        "string",
        "RELEASE.ARTIFACTS.${name}.BUILDID",
        "string",
        "\"\"",
        "Unable to get build id from variable: ${buildidVariable}",
        "Got repositoryid: ${build.repository.id}",
        "Processing artifact: '${artifact.name}' for ref: ${this.refName} new commit: ${artifact.commit}",
        "\"Ref updated!\"",
        "${this.permissionTemplate}Create Branch",
        "${this.permissionTemplate}Create Tag",
        "If you need to change permissions see: _admin/_versioncontrol?_a=security&repositoryId=${artifact.repositoryId}",
        "Unable to create ref: ${this.refName} UpdateStatus: ${updateResult.updateStatus} RepositoryId: ${updateResult.repositoryId} Commit: ${updateResult.newObjectId}",
        "string",
        "\"Found matching ref for commit.\"",
        "Ref exists, but on different commit. New commit: ${artifact.commit} Old Commit: ${foundRef.objectId}",
        "string",
        "\"isLocked\"",
        "\"name\"",
        "\"newObjectId\"",
        "\"oldObjectId\"",
        "\"0000000000000000000000000000000000000000\"",
        "\"repositoryId\"",
        "No update result returned from updateRefs",
        "\"./task.json\"",
        "${taskData.name}: Version: ${taskData.version.Major}.${taskData.version.Minor}.${taskData.version.Patch}",
        "\"Unknown version number\""
    ],
    "variables": [
        "token",
        "collectionUrl",
        "authHandler",
        "connect",
        "gitapi",
        "bldapi",
        "artifactData",
        "searchRegex",
        "regexFlags",
        "replacePattern",
        "regex",
        "refName",
        "value",
        "artifactNames",
        "regexp",
        "match",
        "name",
        "repositoryId",
        "artifact",
        "buildidVariable",
        "buildid",
        "build",
        "updateResult",
        "refs",
        "foundRef",
        "refArray",
        "updateRefsResult",
        "taskData"
    ],
    "comments": [
        "need build",
        "This should really be available via a variable",
        "Error already logged",
        "See if there is a matching ref for the same commit. We won't overwrite an existing ref. Done after the update so all refs don't need to be brought back every time."
    ],
    "docstrings": [],
    "functions": [
        "run",
        "generateRef",
        "getInputOrDefault",
        "getAllGitArtifacts",
        "getRepositoryIdFromBuildNumber",
        "processArtifact",
        "doesRefExist",
        "updateRef",
        "printVersion"
    ],
    "classes": []
}