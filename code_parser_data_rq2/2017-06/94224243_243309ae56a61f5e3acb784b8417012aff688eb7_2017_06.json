{
    "identifiers": [
        "model",
        "org",
        "junit",
        "Assert",
        "org",
        "junit",
        "Before",
        "org",
        "junit",
        "Test",
        "mine",
        "Before",
        "mine",
        "Test",
        "element",
        "mine",
        "mine",
        "setElement",
        "element",
        "assertEquals",
        "element",
        "mine",
        "getElements",
        "Test",
        "mine",
        "destroyElement",
        "mine",
        "getElements",
        "assertEquals",
        "mine",
        "getElements",
        "getClass",
        "Test",
        "element",
        "mine",
        "mine",
        "addEnemy",
        "element",
        "assertEquals",
        "element",
        "mine",
        "getEnemy",
        "get",
        "mine",
        "getEnemy",
        "size",
        "Test",
        "element",
        "mine",
        "mine",
        "addGravity",
        "element",
        "assertEquals",
        "element",
        "mine",
        "getGravity",
        "get",
        "mine",
        "getGravity",
        "size",
        "Test",
        "hero",
        "Hero",
        "getInstance",
        "assertEquals",
        "hero",
        "mine",
        "getHero"
    ],
    "literals": [],
    "variables": [
        "mine"
    ],
    "comments": [],
    "docstrings": [
        "The mine that contain the list of elements to test",
        "* Instantiate a new mMine before each test\n\t * @throws Exception\n\t * \t\tException if the build of the mine failed",
        "* Check if it's possible to set an element in the elements list\n\t * @throws Exception\n\t * \t\tException in case of out of range position",
        "* Check if it's possible to destroy an element in the elements list\n\t * @throws Exception\n\t * \t\tException in case of out of range position",
        "* Check if it's possible to add an element in the elements list\n\t * @throws Exception\n\t * \t\tException in case of out of range position",
        "* Check if it's possible to add an element in the gravity elements list\n\t * @throws Exception\n\t * \t\tException in case of out of range position",
        "* Check if it's possible to get the hero from the elements list"
    ],
    "functions": [
        "setUp",
        "testSetElement",
        "testDestroyElement",
        "testAddEnemy",
        "testAddGravity",
        "testGetHero"
    ],
    "classes": [
        "MineTest"
    ]
}