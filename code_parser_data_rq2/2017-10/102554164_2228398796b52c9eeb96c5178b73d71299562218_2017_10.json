{
    "identifiers": [
        "APIGateway",
        "AWSError",
        "expect",
        "Chance",
        "SwaggerRepository",
        "Chance",
        "Chance",
        "describe",
        "beforeEach",
        "testData",
        "chance",
        "chance",
        "chance",
        "describe",
        "it",
        "APIGateway",
        "testData",
        "testData",
        "chance",
        "testData",
        "chance",
        "testData",
        "testData",
        "testData",
        "testData",
        "chance",
        "testData",
        "testData",
        "createRepo",
        "restApis",
        "repo",
        "testData",
        "testData",
        "expect",
        "id",
        "testData",
        "it",
        "APIGateway",
        "testData",
        "testData",
        "chance",
        "testData",
        "chance",
        "testData",
        "createRepo",
        "restApis",
        "repo",
        "testData",
        "testData",
        "expect",
        "id",
        "it",
        "APIGateway",
        "createRepo",
        "restApis",
        "repo",
        "testData",
        "testData",
        "expect",
        "id",
        "it",
        "chance",
        "errorMessage",
        "APIGateway",
        "createRepo",
        "restApis",
        "error",
        "repo",
        "testData",
        "testData",
        "err",
        "expect",
        "err",
        "errorMessage",
        "restApis",
        "APIGateway",
        "error",
        "callback",
        "error",
        "data",
        "APIGateway",
        "APIGateway",
        "restApis",
        "callback",
        "error",
        "data",
        "repo",
        "SwaggerRepository",
        "apiGatewayMock"
    ],
    "literals": [
        "'aws-sdk'",
        "'chai'",
        "'chance'",
        "'./swagger.repository'",
        "'SwaggerRepository'",
        "string",
        "string",
        "string",
        "'getRestApiId function'",
        "'should resolve with the ID of the API with the matching name'",
        "${testData.stageName}-${testData.restApiName}",
        "${testData.stageName}-${testData.restApiName}",
        "string",
        "string",
        "'should resolve with undefined ID, if the API cannot be found'",
        "string",
        "string",
        "'should resolve with undefined ID, if the there are no API created'",
        "'should reject with the original AWS error'",
        "string"
    ],
    "variables": [
        "chance",
        "repo",
        "testData",
        "restApis",
        "id",
        "restApis",
        "id",
        "restApis",
        "id",
        "errorMessage",
        "error",
        "restApis",
        "apiGatewayMock",
        "data"
    ],
    "comments": [
        "tslint:disable no-unused-expression (Generates false alarms for mocha \"undefined\" function.)",
        "NOTE: Manual mocking is used here, because mocking of the types in the AWS SDK is tricky,",
        "due to the fact that the SDK builds those objects dynamically based on a JSON definition."
    ],
    "docstrings": [],
    "functions": [
        "createRepo"
    ],
    "classes": []
}